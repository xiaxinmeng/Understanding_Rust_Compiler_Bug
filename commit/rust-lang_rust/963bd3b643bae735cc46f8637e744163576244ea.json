{"sha": "963bd3b643bae735cc46f8637e744163576244ea", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk2M2JkM2I2NDNiYWU3MzVjYzQ2Zjg2MzdlNzQ0MTYzNTc2MjQ0ZWE=", "commit": {"author": {"name": "Ryan Lopopolo", "email": "rjl@hyperbo.la", "date": "2021-05-15T17:37:05Z"}, "committer": {"name": "Ryan Lopopolo", "email": "rjl@hyperbo.la", "date": "2021-05-15T17:37:05Z"}, "message": "Implement more Iterator methods on core::iter::Repeat\n\n`core::iter::Repeat` always returns the same element, which means we can\ndo better than implementing most `Iterator` methods in terms of\n`Iterator::next`.\n\nFixes #81292.", "tree": {"sha": "c69b682cff8fc07da81122363dcf40b94afb1e4f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c69b682cff8fc07da81122363dcf40b94afb1e4f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/963bd3b643bae735cc46f8637e744163576244ea", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEtUt7P6UGaZlFry5uRgR9c5tq4LEFAmCgBzcACgkQRgR9c5tq\n4LFKuBAAqajREZTTwpLyazNWWLBu4uoFVmfq13EVdr9yHDXtYevZCVSkHy2/VtMV\nKjh1e0ggl/3DWOOwPQHt6bboullPp7L24gqzfgDiJ4iGJXcOXWrl4fcwr2rhSPPw\ncxOidcRlm86MMxtL1N5fPcn31DO1MHV+xm0yZaeKcR4l+gdAkfiAECYoj60Xoyhp\njEj05NwIslJwhSbiMmAWz/WEIbGCrs6U+fFwPmmCGa1fUCZhqKbvAN5bg3w8DvvU\njno19hlUuqt+9SvJq3pERivNJHpdAzsYDLqQ6q1HB4GxE0IX2uhjYhGrK024rW9i\ndbbJpp6qbt6Rc9KYPFdCJvuctM9PBXVc1X2RSe5t6q4jwXQaZGxAy79nLtS9hfiX\n6igc81tbRqV5MooeWxEtg/nreQH6R0j7fCYWta+VDqxIPukzNsNIX7hvrOTH86pr\n1RQapO8SFkdx2MTCPgXqdroqapcBEFNW+Sjt0TeqGypTZHup1//OyDFoY/5l06my\nFOmLhHLjYuqE8/r9BCnREjxCStjzZmgf0u+wrkqzLF7a+1whoRaPwHiMu090x0+B\n8Bw7rKylATnulJ4Zw0s+QKrdYYIJYoQ7Y/4QRlGFLc1+SFMoTiIWfpjUg/RxxbsF\nUonBOX3g416NCckEXAdhxpORpeXEB7fX/xwdNHLrghuFyIOcln8=\n=Ll7C\n-----END PGP SIGNATURE-----", "payload": "tree c69b682cff8fc07da81122363dcf40b94afb1e4f\nparent 2a245f40a19c9a60b3be33c959eb5cfb0ad163c6\nauthor Ryan Lopopolo <rjl@hyperbo.la> 1621100225 -0700\ncommitter Ryan Lopopolo <rjl@hyperbo.la> 1621100225 -0700\n\nImplement more Iterator methods on core::iter::Repeat\n\n`core::iter::Repeat` always returns the same element, which means we can\ndo better than implementing most `Iterator` methods in terms of\n`Iterator::next`.\n\nFixes #81292.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/963bd3b643bae735cc46f8637e744163576244ea", "html_url": "https://github.com/rust-lang/rust/commit/963bd3b643bae735cc46f8637e744163576244ea", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/963bd3b643bae735cc46f8637e744163576244ea/comments", "author": {"login": "lopopolo", "id": 860434, "node_id": "MDQ6VXNlcjg2MDQzNA==", "avatar_url": "https://avatars.githubusercontent.com/u/860434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lopopolo", "html_url": "https://github.com/lopopolo", "followers_url": "https://api.github.com/users/lopopolo/followers", "following_url": "https://api.github.com/users/lopopolo/following{/other_user}", "gists_url": "https://api.github.com/users/lopopolo/gists{/gist_id}", "starred_url": "https://api.github.com/users/lopopolo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lopopolo/subscriptions", "organizations_url": "https://api.github.com/users/lopopolo/orgs", "repos_url": "https://api.github.com/users/lopopolo/repos", "events_url": "https://api.github.com/users/lopopolo/events{/privacy}", "received_events_url": "https://api.github.com/users/lopopolo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lopopolo", "id": 860434, "node_id": "MDQ6VXNlcjg2MDQzNA==", "avatar_url": "https://avatars.githubusercontent.com/u/860434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lopopolo", "html_url": "https://github.com/lopopolo", "followers_url": "https://api.github.com/users/lopopolo/followers", "following_url": "https://api.github.com/users/lopopolo/following{/other_user}", "gists_url": "https://api.github.com/users/lopopolo/gists{/gist_id}", "starred_url": "https://api.github.com/users/lopopolo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lopopolo/subscriptions", "organizations_url": "https://api.github.com/users/lopopolo/orgs", "repos_url": "https://api.github.com/users/lopopolo/repos", "events_url": "https://api.github.com/users/lopopolo/events{/privacy}", "received_events_url": "https://api.github.com/users/lopopolo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2a245f40a19c9a60b3be33c959eb5cfb0ad163c6", "url": "https://api.github.com/repos/rust-lang/rust/commits/2a245f40a19c9a60b3be33c959eb5cfb0ad163c6", "html_url": "https://github.com/rust-lang/rust/commit/2a245f40a19c9a60b3be33c959eb5cfb0ad163c6"}], "stats": {"total": 35, "additions": 35, "deletions": 0}, "files": [{"sha": "a9478041c69c47f9783eebb8ebf8498d0714eea2", "filename": "library/core/src/iter/sources/repeat.rs", "status": "modified", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/963bd3b643bae735cc46f8637e744163576244ea/library%2Fcore%2Fsrc%2Fiter%2Fsources%2Frepeat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/963bd3b643bae735cc46f8637e744163576244ea/library%2Fcore%2Fsrc%2Fiter%2Fsources%2Frepeat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Fsources%2Frepeat.rs?ref=963bd3b643bae735cc46f8637e744163576244ea", "patch": "@@ -72,10 +72,32 @@ impl<A: Clone> Iterator for Repeat<A> {\n     fn next(&mut self) -> Option<A> {\n         Some(self.element.clone())\n     }\n+\n     #[inline]\n     fn size_hint(&self) -> (usize, Option<usize>) {\n         (usize::MAX, None)\n     }\n+\n+    #[inline]\n+    fn advance_by(&mut self, n: usize) -> Result<(), usize> {\n+        // Advancing an infinite iterator of a single element is a no-op.\n+        let _ = n;\n+        Ok(())\n+    }\n+\n+    #[inline]\n+    fn nth(&mut self, n: usize) -> Option<A> {\n+        let _ = n;\n+        Some(self.element.clone())\n+    }\n+\n+    fn last(self) -> Option<A> {\n+        loop {}\n+    }\n+\n+    fn count(self) -> usize {\n+        loop {}\n+    }\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -84,6 +106,19 @@ impl<A: Clone> DoubleEndedIterator for Repeat<A> {\n     fn next_back(&mut self) -> Option<A> {\n         Some(self.element.clone())\n     }\n+\n+    #[inline]\n+    fn advance_back_by(&mut self, n: usize) -> Result<(), usize> {\n+        // Advancing an infinite iterator of a single element is a no-op.\n+        let _ = n;\n+        Ok(())\n+    }\n+\n+    #[inline]\n+    fn nth_back(&mut self, n: usize) -> Option<A> {\n+        let _ = n;\n+        Some(self.element.clone())\n+    }\n }\n \n #[stable(feature = \"fused\", since = \"1.26.0\")]"}]}