{"sha": "871dc2bd3cec11f76a4ef93ac3438af80fb6e776", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg3MWRjMmJkM2NlYzExZjc2YTRlZjkzYWMzNDM4YWY4MGZiNmU3NzY=", "commit": {"author": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2020-02-26T12:55:11Z"}, "committer": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2020-02-26T12:55:11Z"}, "message": "Remove duplicate comment", "tree": {"sha": "12685014d34361f32d37bdd521e7cdc9817d8769", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/12685014d34361f32d37bdd521e7cdc9817d8769"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/871dc2bd3cec11f76a4ef93ac3438af80fb6e776", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/871dc2bd3cec11f76a4ef93ac3438af80fb6e776", "html_url": "https://github.com/rust-lang/rust/commit/871dc2bd3cec11f76a4ef93ac3438af80fb6e776", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/871dc2bd3cec11f76a4ef93ac3438af80fb6e776/comments", "author": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "committer": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ffdc740446585502bd179cb608a033dd74a41e39", "url": "https://api.github.com/repos/rust-lang/rust/commits/ffdc740446585502bd179cb608a033dd74a41e39", "html_url": "https://github.com/rust-lang/rust/commit/ffdc740446585502bd179cb608a033dd74a41e39"}], "stats": {"total": 1, "additions": 0, "deletions": 1}, "files": [{"sha": "0b40bf9afadab97a9faa4aad31f8723dc134acbf", "filename": "crates/ra_hir/src/semantics.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/871dc2bd3cec11f76a4ef93ac3438af80fb6e776/crates%2Fra_hir%2Fsrc%2Fsemantics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/871dc2bd3cec11f76a4ef93ac3438af80fb6e776/crates%2Fra_hir%2Fsrc%2Fsemantics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fsemantics.rs?ref=871dc2bd3cec11f76a4ef93ac3438af80fb6e776", "patch": "@@ -345,7 +345,6 @@ pub fn original_range(db: &impl HirDatabase, node: InFile<&SyntaxNode>) -> FileR\n             return FileRange { file_id: original_file, range: range.value };\n         }\n \n-        // Fail to mapping up more, return the original file range instead\n         if range.file_id != elem.file_id {\n             if let Some(root) = db.parse_or_expand(range.file_id) {\n                 elem = range.with_value(find_covering_element(&root, range.value));"}]}