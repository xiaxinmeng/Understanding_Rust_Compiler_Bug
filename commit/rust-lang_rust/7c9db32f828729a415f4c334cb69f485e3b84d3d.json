{"sha": "7c9db32f828729a415f4c334cb69f485e3b84d3d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdjOWRiMzJmODI4NzI5YTQxNWY0YzMzNGNiNjlmNDg1ZTNiODRkM2Q=", "commit": {"author": {"name": "Brian Koropoff", "email": "bkoropoff@gmail.com", "date": "2014-10-01T02:48:17Z"}, "committer": {"name": "Brian Koropoff", "email": "bkoropoff@gmail.com", "date": "2014-10-01T03:07:09Z"}, "message": "Disallow casting directly between C-like enums and unsafe pointers\n\nThis closes issue #17444", "tree": {"sha": "28ffedd55d1e94d477939970b7a566666442dd3c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/28ffedd55d1e94d477939970b7a566666442dd3c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7c9db32f828729a415f4c334cb69f485e3b84d3d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7c9db32f828729a415f4c334cb69f485e3b84d3d", "html_url": "https://github.com/rust-lang/rust/commit/7c9db32f828729a415f4c334cb69f485e3b84d3d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7c9db32f828729a415f4c334cb69f485e3b84d3d/comments", "author": {"login": "bkoropoff", "id": 2101303, "node_id": "MDQ6VXNlcjIxMDEzMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/2101303?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bkoropoff", "html_url": "https://github.com/bkoropoff", "followers_url": "https://api.github.com/users/bkoropoff/followers", "following_url": "https://api.github.com/users/bkoropoff/following{/other_user}", "gists_url": "https://api.github.com/users/bkoropoff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bkoropoff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bkoropoff/subscriptions", "organizations_url": "https://api.github.com/users/bkoropoff/orgs", "repos_url": "https://api.github.com/users/bkoropoff/repos", "events_url": "https://api.github.com/users/bkoropoff/events{/privacy}", "received_events_url": "https://api.github.com/users/bkoropoff/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bkoropoff", "id": 2101303, "node_id": "MDQ6VXNlcjIxMDEzMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/2101303?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bkoropoff", "html_url": "https://github.com/bkoropoff", "followers_url": "https://api.github.com/users/bkoropoff/followers", "following_url": "https://api.github.com/users/bkoropoff/following{/other_user}", "gists_url": "https://api.github.com/users/bkoropoff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bkoropoff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bkoropoff/subscriptions", "organizations_url": "https://api.github.com/users/bkoropoff/orgs", "repos_url": "https://api.github.com/users/bkoropoff/repos", "events_url": "https://api.github.com/users/bkoropoff/events{/privacy}", "received_events_url": "https://api.github.com/users/bkoropoff/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "293b57701b7bcdd88e44ce8f671511ba35cac13e", "url": "https://api.github.com/repos/rust-lang/rust/commits/293b57701b7bcdd88e44ce8f671511ba35cac13e", "html_url": "https://github.com/rust-lang/rust/commit/293b57701b7bcdd88e44ce8f671511ba35cac13e"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "c051782a83b1850fcd7387549328a352a6a878ce", "filename": "src/librustc/middle/typeck/check/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7c9db32f828729a415f4c334cb69f485e3b84d3d/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c9db32f828729a415f4c334cb69f485e3b84d3d/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs?ref=7c9db32f828729a415f4c334cb69f485e3b84d3d", "patch": "@@ -1468,7 +1468,7 @@ fn check_cast(fcx: &FnCtxt,\n     // casts to scalars other than `char` and `bare fn` are trivial\n     let t_1_is_trivial = t_1_is_scalar && !t_1_is_char && !t_1_is_bare_fn;\n     if ty::type_is_c_like_enum(fcx.tcx(), t_e) && t_1_is_trivial {\n-        if t_1_is_float {\n+        if t_1_is_float || ty::type_is_unsafe_ptr(t_1) {\n             fcx.type_error_message(span, |actual| {\n                 format!(\"illegal cast; cast through an \\\n                          integer first: `{}` as `{}`\","}]}