{"sha": "fac7122682664ae1a4325e05b43ba5b0817645b6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZhYzcxMjI2ODI2NjRhZTFhNDMyNWUwNWI0M2JhNWIwODE3NjQ1YjY=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-03-12T15:32:23Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-03-12T15:32:23Z"}, "message": "Rollup merge of #69830 - RalfJung:miri-invalid-terminator, r=oli-obk\n\nmiri: ICE on invalid terminators\n\nWe've run a lot of MIR in Miri (including some generators) and never seen these.\n\n@tmandry is it correct that `Yield` and `GeneratorDrop` get lowered away?\n\n@eddyb @oli-obk what's with this `Abort` that does not seem to ever actually exist? Codegen *does* seem to handle it, so I wonder why Miri can get away without that. In fact, codegen handles it twice:\n\nhttps://github.com/rust-lang/rust/blob/1d5241c96208ca7d925442b1a5fa45ad18717a6f/src/librustc_codegen_ssa/mir/block.rs#L796\n\nhttps://github.com/rust-lang/rust/blob/1d5241c96208ca7d925442b1a5fa45ad18717a6f/src/librustc_codegen_ssa/mir/mod.rs#L296", "tree": {"sha": "d703045814615a1496b785ee140a459aeeddcb08", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d703045814615a1496b785ee140a459aeeddcb08"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fac7122682664ae1a4325e05b43ba5b0817645b6", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJealYHCRBK7hj4Ov3rIwAAdHIIAE/7sn6jxpf3y+F/5BzEsZwA\nP8awO2pgaFrxUbOLJGJclXICjsLr+bw/YBs2FRW17vWA/6866sFhjO5IFVKF7HuZ\ny0w38B8i7t/DI0Mrx4NTIByCVyyoavLQuRqy7mgmwhMpUqrsWZUMYwI8LW3gZoRf\n8eTR71xzGb6P76tZbFFEp0JQveSBlzHFJL8WQmmS3rC6BMFW+njlXVMvehYkKJj9\nGGSFcufIuHjN/nSMyxiaeTE8LK1DOifxA4739w3OcY1XeVwJ9cJ3s4D7QDuGcclx\ndXctj2T7HZNq5kdbgLQNzS/X3+RkdiD/X5V6PPzb22QV9IBqWAZ1k0Cn1Odv0l4=\n=sDde\n-----END PGP SIGNATURE-----\n", "payload": "tree d703045814615a1496b785ee140a459aeeddcb08\nparent d21320cbd910cabb5b3da93a35f9e42c65fbebf8\nparent 911c75ff5f11c28c9f355857a47c5cd2d73767e7\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1584027143 +0100\ncommitter GitHub <noreply@github.com> 1584027143 +0100\n\nRollup merge of #69830 - RalfJung:miri-invalid-terminator, r=oli-obk\n\nmiri: ICE on invalid terminators\n\nWe've run a lot of MIR in Miri (including some generators) and never seen these.\n\n@tmandry is it correct that `Yield` and `GeneratorDrop` get lowered away?\n\n@eddyb @oli-obk what's with this `Abort` that does not seem to ever actually exist? Codegen *does* seem to handle it, so I wonder why Miri can get away without that. In fact, codegen handles it twice:\n\nhttps://github.com/rust-lang/rust/blob/1d5241c96208ca7d925442b1a5fa45ad18717a6f/src/librustc_codegen_ssa/mir/block.rs#L796\n\nhttps://github.com/rust-lang/rust/blob/1d5241c96208ca7d925442b1a5fa45ad18717a6f/src/librustc_codegen_ssa/mir/mod.rs#L296\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fac7122682664ae1a4325e05b43ba5b0817645b6", "html_url": "https://github.com/rust-lang/rust/commit/fac7122682664ae1a4325e05b43ba5b0817645b6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fac7122682664ae1a4325e05b43ba5b0817645b6/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d21320cbd910cabb5b3da93a35f9e42c65fbebf8", "url": "https://api.github.com/repos/rust-lang/rust/commits/d21320cbd910cabb5b3da93a35f9e42c65fbebf8", "html_url": "https://github.com/rust-lang/rust/commit/d21320cbd910cabb5b3da93a35f9e42c65fbebf8"}, {"sha": "911c75ff5f11c28c9f355857a47c5cd2d73767e7", "url": "https://api.github.com/repos/rust-lang/rust/commits/911c75ff5f11c28c9f355857a47c5cd2d73767e7", "html_url": "https://github.com/rust-lang/rust/commit/911c75ff5f11c28c9f355857a47c5cd2d73767e7"}], "stats": {"total": 26, "additions": 19, "deletions": 7}, "files": [{"sha": "869eb1227f23b51f0986c2cf01f588b6e09f5321", "filename": "src/librustc_mir/interpret/intrinsics.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fac7122682664ae1a4325e05b43ba5b0817645b6/src%2Flibrustc_mir%2Finterpret%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fac7122682664ae1a4325e05b43ba5b0817645b6/src%2Flibrustc_mir%2Finterpret%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fintrinsics.rs?ref=fac7122682664ae1a4325e05b43ba5b0817645b6", "patch": "@@ -103,6 +103,10 @@ impl<'mir, 'tcx, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n                 self.write_scalar(location.ptr, dest)?;\n             }\n \n+            sym::abort => {\n+                M::abort(self)?;\n+            }\n+\n             sym::min_align_of\n             | sym::pref_align_of\n             | sym::needs_drop"}, {"sha": "366de6e55612a5f2d2c9db85e0e85466a35c0961", "filename": "src/librustc_mir/interpret/machine.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/fac7122682664ae1a4325e05b43ba5b0817645b6/src%2Flibrustc_mir%2Finterpret%2Fmachine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fac7122682664ae1a4325e05b43ba5b0817645b6/src%2Flibrustc_mir%2Finterpret%2Fmachine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fmachine.rs?ref=fac7122682664ae1a4325e05b43ba5b0817645b6", "patch": "@@ -169,6 +169,11 @@ pub trait Machine<'mir, 'tcx>: Sized {\n         unwind: Option<mir::BasicBlock>,\n     ) -> InterpResult<'tcx>;\n \n+    /// Called to evaluate `Abort` MIR terminator.\n+    fn abort(_ecx: &mut InterpCx<'mir, 'tcx, Self>) -> InterpResult<'tcx, !> {\n+        throw_unsup_format!(\"aborting execution is not supported\");\n+    }\n+\n     /// Called for all binary operations where the LHS has pointer type.\n     ///\n     /// Returns a (value, overflowed) pair if the operation succeeded"}, {"sha": "473ed9d13ecfb73a94d8ed52518e95f8a1047579", "filename": "src/librustc_mir/interpret/terminator.rs", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/fac7122682664ae1a4325e05b43ba5b0817645b6/src%2Flibrustc_mir%2Finterpret%2Fterminator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fac7122682664ae1a4325e05b43ba5b0817645b6/src%2Flibrustc_mir%2Finterpret%2Fterminator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fterminator.rs?ref=fac7122682664ae1a4325e05b43ba5b0817645b6", "patch": "@@ -99,6 +99,10 @@ impl<'mir, 'tcx, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n                 }\n             }\n \n+            Abort => {\n+                M::abort(self)?;\n+            }\n+\n             // When we encounter Resume, we've finished unwinding\n             // cleanup for the current stack frame. We pop it in order\n             // to continue unwinding the next frame\n@@ -114,15 +118,13 @@ impl<'mir, 'tcx, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n             Unreachable => throw_ub!(Unreachable),\n \n             // These should never occur for MIR we actually run.\n-            DropAndReplace { .. } | FalseEdges { .. } | FalseUnwind { .. } => {\n+            DropAndReplace { .. }\n+            | FalseEdges { .. }\n+            | FalseUnwind { .. }\n+            | Yield { .. }\n+            | GeneratorDrop => {\n                 bug!(\"{:#?} should have been eliminated by MIR pass\", terminator.kind)\n             }\n-\n-            // These are not (yet) supported. It is unclear if they even can occur in\n-            // MIR that we actually run.\n-            Yield { .. } | GeneratorDrop | Abort => {\n-                throw_unsup_format!(\"Unsupported terminator kind: {:#?}\", terminator.kind)\n-            }\n         }\n \n         Ok(())"}, {"sha": "6cb7cbf14fdd70f49506eaa0ad9faa6955f824eb", "filename": "src/librustc_span/symbol.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fac7122682664ae1a4325e05b43ba5b0817645b6/src%2Flibrustc_span%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fac7122682664ae1a4325e05b43ba5b0817645b6/src%2Flibrustc_span%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_span%2Fsymbol.rs?ref=fac7122682664ae1a4325e05b43ba5b0817645b6", "patch": "@@ -120,6 +120,7 @@ symbols! {\n         abi_unadjusted,\n         abi_vectorcall,\n         abi_x86_interrupt,\n+        abort,\n         aborts,\n         address,\n         add_with_overflow,"}]}