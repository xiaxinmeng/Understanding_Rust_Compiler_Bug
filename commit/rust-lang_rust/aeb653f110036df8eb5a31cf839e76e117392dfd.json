{"sha": "aeb653f110036df8eb5a31cf839e76e117392dfd", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFlYjY1M2YxMTAwMzZkZjhlYjVhMzFjZjgzOWU3NmUxMTczOTJkZmQ=", "commit": {"author": {"name": "Philipp Krones", "email": "9744647+flip1995@users.noreply.github.com", "date": "2018-07-09T17:46:17Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-07-09T17:46:17Z"}, "message": "Merge pull request #2902 from mikerite/missing_inline_refactor\n\nRemove duplication in missing_inline", "tree": {"sha": "bc85759820c021620a3159eb7374b891d6d51ce6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bc85759820c021620a3159eb7374b891d6d51ce6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aeb653f110036df8eb5a31cf839e76e117392dfd", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbQ59pCRBK7hj4Ov3rIwAAdHIIAEcBTQTWasYcc9CjutqrMWMo\n+708auUCfVOj8z1pDw4vRVIlj/i2m1GKgAkkT6Sc9QP3ddiRDtNT7VyBUsz9JFex\n3mrctmJ6m0JyHCAqt3snKVk/sxZU8oZT2LWFgAmR9ZUtuHayWir4x/2yGL1K8PGa\n9ZL1H5PokJ9lCvlJMTCSdZ/kuK5QI486Y2SjUOOTmX3fjUO4GBOkEHBKQ/w5Plw+\nnD8hp8nVn8EnUeGopc7ceSYLHquvyCk4LqfZ5h4jZI4L8Sodtm0I5dH73fQ1wTft\neCipuv1eIYs8AEiPjCobmY0fvqJh09hGVbnygKu7MLvjdIMuAnIt/bZ4vFKcTn4=\n=pZWQ\n-----END PGP SIGNATURE-----\n", "payload": "tree bc85759820c021620a3159eb7374b891d6d51ce6\nparent d914106d871050f84f465fc906b9b7b431d828ce\nparent 60af4a8e13a054e177461a75d254aff11cc482a3\nauthor Philipp Krones <9744647+flip1995@users.noreply.github.com> 1531158377 +0200\ncommitter GitHub <noreply@github.com> 1531158377 +0200\n\nMerge pull request #2902 from mikerite/missing_inline_refactor\n\nRemove duplication in missing_inline"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aeb653f110036df8eb5a31cf839e76e117392dfd", "html_url": "https://github.com/rust-lang/rust/commit/aeb653f110036df8eb5a31cf839e76e117392dfd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aeb653f110036df8eb5a31cf839e76e117392dfd/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d914106d871050f84f465fc906b9b7b431d828ce", "url": "https://api.github.com/repos/rust-lang/rust/commits/d914106d871050f84f465fc906b9b7b431d828ce", "html_url": "https://github.com/rust-lang/rust/commit/d914106d871050f84f465fc906b9b7b431d828ce"}, {"sha": "60af4a8e13a054e177461a75d254aff11cc482a3", "url": "https://api.github.com/repos/rust-lang/rust/commits/60af4a8e13a054e177461a75d254aff11cc482a3", "html_url": "https://github.com/rust-lang/rust/commit/60af4a8e13a054e177461a75d254aff11cc482a3"}], "stats": {"total": 33, "additions": 12, "deletions": 21}, "files": [{"sha": "6987eaa71d999066ebf897738753601714afae1a", "filename": "clippy_lints/src/missing_inline.rs", "status": "modified", "additions": 12, "deletions": 21, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/aeb653f110036df8eb5a31cf839e76e117392dfd/clippy_lints%2Fsrc%2Fmissing_inline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aeb653f110036df8eb5a31cf839e76e117392dfd/clippy_lints%2Fsrc%2Fmissing_inline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmissing_inline.rs?ref=aeb653f110036df8eb5a31cf839e76e117392dfd", "patch": "@@ -169,28 +169,19 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for MissingInline {\n         };\n \n         let def_id = cx.tcx.hir.local_def_id(impl_item.id);\n-        match cx.tcx.associated_item(def_id).container {\n-            TraitContainer(cid) => {\n-                if let Some(n) = cx.tcx.hir.as_local_node_id(cid) {\n-                    if !cx.access_levels.is_exported(n) {\n-                        // If a trait is being implemented for an item, and the\n-                        // trait is not exported, we don't need #[inline]\n-                        return;\n-                    }\n-                }\n-            },\n-            ImplContainer(cid) => {\n-                if cx.tcx.impl_trait_ref(cid).is_some() {\n-                    let trait_ref = cx.tcx.impl_trait_ref(cid).unwrap();\n-                    if let Some(n) = cx.tcx.hir.as_local_node_id(trait_ref.def_id) {\n-                        if !cx.access_levels.is_exported(n) {\n-                            // If a trait is being implemented for an item, and the\n-                            // trait is not exported, we don't need #[inline]\n-                            return;\n-                        }\n-                    }\n+        let trait_def_id = match cx.tcx.associated_item(def_id).container {\n+            TraitContainer(cid) => Some(cid),\n+            ImplContainer(cid) => cx.tcx.impl_trait_ref(cid).map(|t| t.def_id),\n+        };\n+\n+        if let Some(trait_def_id) = trait_def_id {\n+            if let Some(n) = cx.tcx.hir.as_local_node_id(trait_def_id) {\n+                if !cx.access_levels.is_exported(n) {\n+                    // If a trait is being implemented for an item, and the\n+                    // trait is not exported, we don't need #[inline]\n+                    return;\n                 }\n-            },\n+            }\n         }\n \n         check_missing_inline_attrs(cx, &impl_item.attrs, impl_item.span, desc);"}]}