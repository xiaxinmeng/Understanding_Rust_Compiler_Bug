{"sha": "047f3e16bfc158717c6aeaa152a31eb42f3b9f04", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA0N2YzZTE2YmZjMTU4NzE3YzZhZWFhMTUyYTMxZWI0MmYzYjlmMDQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-02-12T20:48:05Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-02-12T20:48:05Z"}, "message": "Auto merge of #6700 - daxpedda:panics-doc-unreachable, r=llogiq\n\nFix missing_panics_doc warning on `unreachable!`.\n\nFixes #6699.\n\nAre there any other test-cases I should cover?\n\nchangelog: [`missing_panics_doc`](https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc): No longer lints on [`unreachable!`](https://doc.rust-lang.org/std/macro.unreachable.html)", "tree": {"sha": "ff96936da735095202299af89ef74dd05c07ef42", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ff96936da735095202299af89ef74dd05c07ef42"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/047f3e16bfc158717c6aeaa152a31eb42f3b9f04", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/047f3e16bfc158717c6aeaa152a31eb42f3b9f04", "html_url": "https://github.com/rust-lang/rust/commit/047f3e16bfc158717c6aeaa152a31eb42f3b9f04", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/047f3e16bfc158717c6aeaa152a31eb42f3b9f04/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "605e9ba3d7fa9e42afcdee5fd94c95f771693d07", "url": "https://api.github.com/repos/rust-lang/rust/commits/605e9ba3d7fa9e42afcdee5fd94c95f771693d07", "html_url": "https://github.com/rust-lang/rust/commit/605e9ba3d7fa9e42afcdee5fd94c95f771693d07"}, {"sha": "37f978299e514c977e747d0212fa72c2b1a86d11", "url": "https://api.github.com/repos/rust-lang/rust/commits/37f978299e514c977e747d0212fa72c2b1a86d11", "html_url": "https://github.com/rust-lang/rust/commit/37f978299e514c977e747d0212fa72c2b1a86d11"}], "stats": {"total": 53, "additions": 50, "deletions": 3}, "files": [{"sha": "ae06c2c60be4bc287e93715a4858078ec92cd496", "filename": "clippy_lints/src/doc.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/047f3e16bfc158717c6aeaa152a31eb42f3b9f04/clippy_lints%2Fsrc%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/047f3e16bfc158717c6aeaa152a31eb42f3b9f04/clippy_lints%2Fsrc%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdoc.rs?ref=047f3e16bfc158717c6aeaa152a31eb42f3b9f04", "patch": "@@ -1,6 +1,6 @@\n use crate::utils::{\n-    implements_trait, is_entrypoint_fn, is_type_diagnostic_item, match_panic_def_id, method_chain_args, return_ty,\n-    span_lint, span_lint_and_note,\n+    implements_trait, is_entrypoint_fn, is_expn_of, is_type_diagnostic_item, match_panic_def_id, method_chain_args,\n+    return_ty, span_lint, span_lint_and_note,\n };\n use if_chain::if_chain;\n use itertools::Itertools;\n@@ -699,6 +699,7 @@ impl<'a, 'tcx> Visitor<'tcx> for FindPanicUnwrap<'a, 'tcx> {\n             if let ExprKind::Path(QPath::Resolved(_, ref path)) = func_expr.kind;\n             if let Some(path_def_id) = path.res.opt_def_id();\n             if match_panic_def_id(self.cx, path_def_id);\n+            if is_expn_of(expr.span, \"unreachable\").is_none();\n             then {\n                 self.panic_span = Some(expr.span);\n             }"}, {"sha": "3008c2d5b85381710f3235acd7fc9c8ac2e6cf86", "filename": "tests/ui/doc_panics.rs", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/047f3e16bfc158717c6aeaa152a31eb42f3b9f04/tests%2Fui%2Fdoc_panics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/047f3e16bfc158717c6aeaa152a31eb42f3b9f04/tests%2Fui%2Fdoc_panics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdoc_panics.rs?ref=047f3e16bfc158717c6aeaa152a31eb42f3b9f04", "patch": "@@ -28,6 +28,15 @@ pub fn inner_body(opt: Option<u32>) {\n     });\n }\n \n+/// This needs to be documented\n+pub fn unreachable_and_panic() {\n+    if true {\n+        unreachable!()\n+    } else {\n+        panic!()\n+    }\n+}\n+\n /// This is documented\n ///\n /// # Panics\n@@ -69,6 +78,19 @@ pub fn todo_documented() {\n     todo!()\n }\n \n+/// This is documented\n+///\n+/// # Panics\n+///\n+/// We still need to do this part\n+pub fn unreachable_amd_panic_documented() {\n+    if true {\n+        unreachable!()\n+    } else {\n+        panic!()\n+    }\n+}\n+\n /// This is okay because it is private\n fn unwrap_private() {\n     let result = Err(\"Hi\");\n@@ -93,3 +115,8 @@ fn inner_body_private(opt: Option<u32>) {\n         }\n     });\n }\n+\n+/// This is okay because unreachable\n+pub fn unreachable() {\n+    unreachable!(\"This function panics\")\n+}"}, {"sha": "287148690d27af84c408679e7ba500b92ddad4b1", "filename": "tests/ui/doc_panics.stderr", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/047f3e16bfc158717c6aeaa152a31eb42f3b9f04/tests%2Fui%2Fdoc_panics.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/047f3e16bfc158717c6aeaa152a31eb42f3b9f04/tests%2Fui%2Fdoc_panics.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdoc_panics.stderr?ref=047f3e16bfc158717c6aeaa152a31eb42f3b9f04", "patch": "@@ -63,5 +63,24 @@ LL |             panic!()\n    |             ^^^^^^^^\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n-error: aborting due to 4 previous errors\n+error: docs for function which may panic missing `# Panics` section\n+  --> $DIR/doc_panics.rs:32:1\n+   |\n+LL | / pub fn unreachable_and_panic() {\n+LL | |     if true {\n+LL | |         unreachable!()\n+LL | |     } else {\n+LL | |         panic!()\n+LL | |     }\n+LL | | }\n+   | |_^\n+   |\n+note: first possible panic found here\n+  --> $DIR/doc_panics.rs:36:9\n+   |\n+LL |         panic!()\n+   |         ^^^^^^^^\n+   = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+error: aborting due to 5 previous errors\n "}]}