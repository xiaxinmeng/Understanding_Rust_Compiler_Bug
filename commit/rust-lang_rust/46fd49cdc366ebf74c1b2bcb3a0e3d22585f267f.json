{"sha": "46fd49cdc366ebf74c1b2bcb3a0e3d22585f267f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ2ZmQ0OWNkYzM2NmViZjc0YzFiMmJjYjNhMGUzZDIyNTg1ZjI2N2Y=", "commit": {"author": {"name": "Erik Desjardins", "email": "erikdesjardins@users.noreply.github.com", "date": "2021-03-20T02:25:56Z"}, "committer": {"name": "Erik Desjardins", "email": "erikdesjardins@users.noreply.github.com", "date": "2021-03-20T02:25:56Z"}, "message": "avoid calling  for types which can't be ZSTs", "tree": {"sha": "183c6d0b2eb2c8f0b60f294411ff39184e0e0174", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/183c6d0b2eb2c8f0b60f294411ff39184e0e0174"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/46fd49cdc366ebf74c1b2bcb3a0e3d22585f267f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/46fd49cdc366ebf74c1b2bcb3a0e3d22585f267f", "html_url": "https://github.com/rust-lang/rust/commit/46fd49cdc366ebf74c1b2bcb3a0e3d22585f267f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/46fd49cdc366ebf74c1b2bcb3a0e3d22585f267f/comments", "author": {"login": "erikdesjardins", "id": 7673145, "node_id": "MDQ6VXNlcjc2NzMxNDU=", "avatar_url": "https://avatars.githubusercontent.com/u/7673145?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erikdesjardins", "html_url": "https://github.com/erikdesjardins", "followers_url": "https://api.github.com/users/erikdesjardins/followers", "following_url": "https://api.github.com/users/erikdesjardins/following{/other_user}", "gists_url": "https://api.github.com/users/erikdesjardins/gists{/gist_id}", "starred_url": "https://api.github.com/users/erikdesjardins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erikdesjardins/subscriptions", "organizations_url": "https://api.github.com/users/erikdesjardins/orgs", "repos_url": "https://api.github.com/users/erikdesjardins/repos", "events_url": "https://api.github.com/users/erikdesjardins/events{/privacy}", "received_events_url": "https://api.github.com/users/erikdesjardins/received_events", "type": "User", "site_admin": false}, "committer": {"login": "erikdesjardins", "id": 7673145, "node_id": "MDQ6VXNlcjc2NzMxNDU=", "avatar_url": "https://avatars.githubusercontent.com/u/7673145?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erikdesjardins", "html_url": "https://github.com/erikdesjardins", "followers_url": "https://api.github.com/users/erikdesjardins/followers", "following_url": "https://api.github.com/users/erikdesjardins/following{/other_user}", "gists_url": "https://api.github.com/users/erikdesjardins/gists{/gist_id}", "starred_url": "https://api.github.com/users/erikdesjardins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erikdesjardins/subscriptions", "organizations_url": "https://api.github.com/users/erikdesjardins/orgs", "repos_url": "https://api.github.com/users/erikdesjardins/repos", "events_url": "https://api.github.com/users/erikdesjardins/events{/privacy}", "received_events_url": "https://api.github.com/users/erikdesjardins/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "93c1380e0bbbc4939df7e25d888755f68aaf64f6", "url": "https://api.github.com/repos/rust-lang/rust/commits/93c1380e0bbbc4939df7e25d888755f68aaf64f6", "html_url": "https://github.com/rust-lang/rust/commit/93c1380e0bbbc4939df7e25d888755f68aaf64f6"}], "stats": {"total": 42, "additions": 30, "deletions": 12}, "files": [{"sha": "f039385303045774d9b282c5288b4fbf7c462e28", "filename": "compiler/rustc_mir/src/transform/remove_zsts.rs", "status": "modified", "additions": 30, "deletions": 12, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/46fd49cdc366ebf74c1b2bcb3a0e3d22585f267f/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fremove_zsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46fd49cdc366ebf74c1b2bcb3a0e3d22585f267f/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fremove_zsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fremove_zsts.rs?ref=46fd49cdc366ebf74c1b2bcb3a0e3d22585f267f", "patch": "@@ -2,7 +2,7 @@\n \n use crate::transform::MirPass;\n use rustc_middle::mir::{Body, StatementKind};\n-use rustc_middle::ty::TyCtxt;\n+use rustc_middle::ty::{self, Ty, TyCtxt};\n \n pub struct RemoveZsts;\n \n@@ -15,17 +15,23 @@ impl<'tcx> MirPass<'tcx> for RemoveZsts {\n                 match statement.kind {\n                     StatementKind::Assign(box (place, _)) => {\n                         let place_ty = place.ty(local_decls, tcx).ty;\n-                        if let Ok(layout) = tcx.layout_of(param_env.and(place_ty)) {\n-                            if layout.is_zst() {\n-                                if tcx.consider_optimizing(|| {\n-                                    format!(\n-                                        \"RemoveZsts - Place: {:?} SourceInfo: {:?}\",\n-                                        place, statement.source_info\n-                                    )\n-                                }) {\n-                                    statement.make_nop();\n-                                }\n-                            }\n+                        if !maybe_zst(place_ty) {\n+                            continue;\n+                        }\n+                        let layout = match tcx.layout_of(param_env.and(place_ty)) {\n+                            Ok(layout) => layout,\n+                            Err(_) => continue,\n+                        };\n+                        if !layout.is_zst() {\n+                            continue;\n+                        }\n+                        if tcx.consider_optimizing(|| {\n+                            format!(\n+                                \"RemoveZsts - Place: {:?} SourceInfo: {:?}\",\n+                                place, statement.source_info\n+                            )\n+                        }) {\n+                            statement.make_nop();\n                         }\n                     }\n                     _ => {}\n@@ -34,3 +40,15 @@ impl<'tcx> MirPass<'tcx> for RemoveZsts {\n         }\n     }\n }\n+\n+/// A cheap, approximate check to avoid unnecessary `layout_of` calls.\n+fn maybe_zst(ty: Ty<'_>) -> bool {\n+    match ty.kind() {\n+        // maybe ZST (could be more precise)\n+        ty::Adt(..) | ty::Array(..) | ty::Closure(..) | ty::Tuple(..) | ty::Opaque(..) => true,\n+        // definitely ZST\n+        ty::FnDef(..) | ty::Never => true,\n+        // unreachable or can't be ZST\n+        _ => false,\n+    }\n+}"}]}