{"sha": "71a9e106690627e657a466938e578608d8bcd04a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcxYTllMTA2NjkwNjI3ZTY1N2E0NjY5MzhlNTc4NjA4ZDhiY2QwNGE=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2017-04-12T14:51:32Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2017-04-12T16:15:04Z"}, "message": "Fixed invalid 128-bit division on 32-bit target. Fixed issue #41228.\n\nAdded test cases to cover all special-cased branches of udivmodti4.", "tree": {"sha": "3b4bdb654a976f72a693a7e5f0ec482ddb8cc95d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3b4bdb654a976f72a693a7e5f0ec482ddb8cc95d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/71a9e106690627e657a466938e578608d8bcd04a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIcBAABCAAGBQJY7lKMAAoJEP72yAUdDgE84BkP/iCP3FzcH7x+U7OlXDYwnih1\nFJlcj0AOcSGElx2jAWYCpgiMZBa9J4qAsQpUQN3tiSUq/gyYWSTDy/rTWGL7gUf+\n8q9jAdZS9xZXznT6FiP/CuFOl8WTFTn5y+ic/7THoiXeCAit6/BYG26w5XzcFn0+\nxe4BD7UXiRCUVpakH0GGRfBJe+FQ+VlGY0qoLfIW1MackiGiXByyanTNX9GRzcMQ\nKYutvdBfQ+xQMHmmD/g4LRz9naBRmymVIRGVUsbAND5rvdPh4Q93kWdvqQbjPQMv\ntdHQWr+JyebdUmQAw2Mon0SK/lF4b1bGxaXBXQ1eQKN0hXIp8MABzSptmYBckRNE\nBGHQY2mTxQdXgDq/6417MKyZBU9qi1Jjz5Ai+yYp1Ct0AHP8zQrFBnK38ZhbAWC5\nYyJhkG3kqJ+yMF0HQzbBNB58AhsF4qfMRLgjlh5wSlWGdcRv4RxtZa5eWOjUJWcZ\n22sYivOeSvEfChSzN7HF4eawCbGAfYAobsfm/4mxdRDwjba2k5Zyh9U/Z1cA7IPf\nWYwD65vDaWH9X15pFs8Fz7uRPywTtP/rYQk3VPAkN+sXa/bxtApEbTIW0Eo4Hzwg\nOLvcscOfVZ9Qh5IJat4Wag9BFpqaTWhXD/w8UWXftvChGHSluFVQflhuldyb3LS+\nlUQUikPlgMmIY2U+vjnM\n=JAAZ\n-----END PGP SIGNATURE-----", "payload": "tree 3b4bdb654a976f72a693a7e5f0ec482ddb8cc95d\nparent 1dca19ae3fd195fa517e326a39bfee729da7cadb\nauthor kennytm <kennytm@gmail.com> 1492008692 +0800\ncommitter kennytm <kennytm@gmail.com> 1492013704 +0800\n\nFixed invalid 128-bit division on 32-bit target. Fixed issue #41228.\n\nAdded test cases to cover all special-cased branches of udivmodti4.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/71a9e106690627e657a466938e578608d8bcd04a", "html_url": "https://github.com/rust-lang/rust/commit/71a9e106690627e657a466938e578608d8bcd04a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/71a9e106690627e657a466938e578608d8bcd04a/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1dca19ae3fd195fa517e326a39bfee729da7cadb", "url": "https://api.github.com/repos/rust-lang/rust/commits/1dca19ae3fd195fa517e326a39bfee729da7cadb", "html_url": "https://github.com/rust-lang/rust/commit/1dca19ae3fd195fa517e326a39bfee729da7cadb"}], "stats": {"total": 52, "additions": 51, "deletions": 1}, "files": [{"sha": "09b3d63950705001ed439d06d5c7a85d73d2ff75", "filename": "src/libcompiler_builtins/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/71a9e106690627e657a466938e578608d8bcd04a/src%2Flibcompiler_builtins%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71a9e106690627e657a466938e578608d8bcd04a/src%2Flibcompiler_builtins%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcompiler_builtins%2Flib.rs?ref=71a9e106690627e657a466938e578608d8bcd04a", "patch": "@@ -180,7 +180,7 @@ pub mod reimpls {\n             sr = sr.wrapping_add(1);\n \n             // 1 <= sr <= u64::bits() - 1\n-            q = n.wrapping_shl(64u32.wrapping_sub(sr));\n+            q = n.wrapping_shl(128u32.wrapping_sub(sr));\n             r = n.wrapping_shr(sr);\n         } else {\n             if d.high() == 0 {"}, {"sha": "c5057f70c065ae1dc784b4c6fe36f57e3835d023", "filename": "src/test/run-pass/i128.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/71a9e106690627e657a466938e578608d8bcd04a/src%2Ftest%2Frun-pass%2Fi128.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71a9e106690627e657a466938e578608d8bcd04a/src%2Ftest%2Frun-pass%2Fi128.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fi128.rs?ref=71a9e106690627e657a466938e578608d8bcd04a", "patch": "@@ -104,4 +104,9 @@ fn main() {\n     assert_eq!(l.checked_sub(l), Some(0));\n     assert_eq!(b(1u128).checked_shl(b(127)), Some(1 << 127));\n     assert_eq!(o.checked_shl(b(128)), None);\n+\n+    // https://github.com/rust-lang/rust/issues/41228\n+    assert_eq!(b(-87559967289969187895646876466835277875_i128) /\n+               b(84285771033834995895337664386045050880_i128),\n+               -1i128);\n }"}, {"sha": "cfd616c56b4f02ed18e42a4170d8207d0586a9fe", "filename": "src/test/run-pass/u128.rs", "status": "modified", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/71a9e106690627e657a466938e578608d8bcd04a/src%2Ftest%2Frun-pass%2Fu128.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71a9e106690627e657a466938e578608d8bcd04a/src%2Ftest%2Frun-pass%2Fu128.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fu128.rs?ref=71a9e106690627e657a466938e578608d8bcd04a", "patch": "@@ -77,4 +77,49 @@ fn main() {\n     assert_eq!(o.checked_sub(b(18)), None);\n     assert_eq!(b(1u128).checked_shl(b(127)), Some(1 << 127));\n     assert_eq!(o.checked_shl(b(128)), None);\n+\n+    // Test cases for all udivmodti4 branches.\n+    // case \"0X/0X\"\n+    assert_eq!(b(0x69545bd57727c050_u128) /\n+               b(0x3283527a3350d88c_u128),\n+               2u128);\n+    // case \"0X/KX\"\n+    assert_eq!(b(0x0_8003c9c50b473ae6_u128) /\n+               b(0x1_283e8838c30fa8f4_u128),\n+               0u128);\n+    // case \"K0/K0\"\n+    assert_eq!(b(0xc43f42a207978720_u128 << 64) /\n+               b(0x098e62b74c23cf1a_u128 << 64),\n+               20u128);\n+    // case \"KK/K0\" for power-of-two D.\n+    assert_eq!(b(0xa9008fb6c9d81e42_0e25730562a601c8_u128) /\n+               b(1u128 << 120),\n+               169u128);\n+    // case \"KK/K0\" with N >= D (https://github.com/rust-lang/rust/issues/41228).\n+    assert_eq!(b(0xe4d26e59f0640328_06da5b06efe83a41_u128) /\n+               b(0x330fcb030ea4447c_u128 << 64),\n+               4u128);\n+    assert_eq!(b(3u128 << 64 | 1) /\n+               b(3u128 << 64),\n+               1u128);\n+    // case \"KK/K0\" with N < D.\n+    assert_eq!(b(0x6655c9fb66ca2884_e2d1dfd470158c62_u128) /\n+               b(0xb35b667cab7e355b_u128 << 64),\n+               0u128);\n+    // case \"KX/0K\" for power-of-two D.\n+    assert_eq!(b(0x3e49dd84feb2df59_7b2f97d93a253969_u128) /\n+               b(1u128 << 4),\n+               0x03e49dd84feb2df5_97b2f97d93a25396_u128);\n+    // case \"KX/0K\" in general.\n+    assert_eq!(b(0x299692b3a1dae5bd_6162e6f489d2620e_u128) /\n+               b(0x900b6f027571d6f7_u128),\n+               0x49e95f54b0442578_u128);\n+    // case \"KX/KK\" with N >= D.\n+    assert_eq!(b(0xc7b889180b67b07d_bc1a3c88783d35b5_u128) /\n+               b(0x1d7e69f53160b9e2_60074771e852f244_u128),\n+               6u128);\n+    // case \"KX/KK\" with N < D.\n+    assert_eq!(b(0x679289ac23bb334f_36144401cf882172_u128) /\n+               b(0x7b0b271b64865f05_f54a7b72746c062f_u128),\n+               0u128);\n }"}]}