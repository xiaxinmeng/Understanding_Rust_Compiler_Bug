{"sha": "8aeea227daf4a78761c41bb32321e8b2e505d27e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhhZWVhMjI3ZGFmNGE3ODc2MWM0MWJiMzIzMjFlOGIyZTUwNWQyN2U=", "commit": {"author": {"name": "Christiaan Dirkx", "email": "christiaan@dirkx.email", "date": "2021-04-18T03:13:53Z"}, "committer": {"name": "Christiaan Dirkx", "email": "christiaan@dirkx.email", "date": "2021-04-22T16:00:17Z"}, "message": "Apply suggestions from review", "tree": {"sha": "ad6a6afba1f9e653bfb0a610a1ed97145389c1d1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ad6a6afba1f9e653bfb0a610a1ed97145389c1d1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8aeea227daf4a78761c41bb32321e8b2e505d27e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8aeea227daf4a78761c41bb32321e8b2e505d27e", "html_url": "https://github.com/rust-lang/rust/commit/8aeea227daf4a78761c41bb32321e8b2e505d27e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8aeea227daf4a78761c41bb32321e8b2e505d27e/comments", "author": {"login": "CDirkx", "id": 11176562, "node_id": "MDQ6VXNlcjExMTc2NTYy", "avatar_url": "https://avatars.githubusercontent.com/u/11176562?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CDirkx", "html_url": "https://github.com/CDirkx", "followers_url": "https://api.github.com/users/CDirkx/followers", "following_url": "https://api.github.com/users/CDirkx/following{/other_user}", "gists_url": "https://api.github.com/users/CDirkx/gists{/gist_id}", "starred_url": "https://api.github.com/users/CDirkx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CDirkx/subscriptions", "organizations_url": "https://api.github.com/users/CDirkx/orgs", "repos_url": "https://api.github.com/users/CDirkx/repos", "events_url": "https://api.github.com/users/CDirkx/events{/privacy}", "received_events_url": "https://api.github.com/users/CDirkx/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CDirkx", "id": 11176562, "node_id": "MDQ6VXNlcjExMTc2NTYy", "avatar_url": "https://avatars.githubusercontent.com/u/11176562?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CDirkx", "html_url": "https://github.com/CDirkx", "followers_url": "https://api.github.com/users/CDirkx/followers", "following_url": "https://api.github.com/users/CDirkx/following{/other_user}", "gists_url": "https://api.github.com/users/CDirkx/gists{/gist_id}", "starred_url": "https://api.github.com/users/CDirkx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CDirkx/subscriptions", "organizations_url": "https://api.github.com/users/CDirkx/orgs", "repos_url": "https://api.github.com/users/CDirkx/repos", "events_url": "https://api.github.com/users/CDirkx/events{/privacy}", "received_events_url": "https://api.github.com/users/CDirkx/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "11445c10ab630a6ad8526f3fc5bcea1badad2964", "url": "https://api.github.com/repos/rust-lang/rust/commits/11445c10ab630a6ad8526f3fc5bcea1badad2964", "html_url": "https://github.com/rust-lang/rust/commit/11445c10ab630a6ad8526f3fc5bcea1badad2964"}], "stats": {"total": 21, "additions": 12, "deletions": 9}, "files": [{"sha": "8ae0c1120ff2b9245a3707033d9992ec3a8a15bc", "filename": "library/std/src/sys/unix/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8aeea227daf4a78761c41bb32321e8b2e505d27e/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8aeea227daf4a78761c41bb32321e8b2e505d27e/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fmod.rs?ref=8aeea227daf4a78761c41bb32321e8b2e505d27e", "patch": "@@ -64,10 +64,10 @@ pub unsafe fn init(argc: isize, argv: *const *const u8) {\n     args::init(argc, argv);\n \n     unsafe fn sanitize_standard_fds() {\n+        #[cfg(not(miri))]\n+        // The standard fds are always available in Miri.\n         cfg_if::cfg_if! {\n             if #[cfg(not(any(\n-                // The standard fds are always available in Miri.\n-                miri,\n                 target_os = \"emscripten\",\n                 target_os = \"fuchsia\",\n                 target_os = \"vxworks\","}, {"sha": "1ad13254c0846f2e27bfd0a4793b906211ef991f", "filename": "library/std/src/sys/windows/net.rs", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/8aeea227daf4a78761c41bb32321e8b2e505d27e/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fnet.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8aeea227daf4a78761c41bb32321e8b2e505d27e/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fnet.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fnet.rs?ref=8aeea227daf4a78761c41bb32321e8b2e505d27e", "patch": "@@ -26,12 +26,12 @@ pub mod netc {\n \n pub struct Socket(c::SOCKET);\n \n+static INIT: Once = Once::new();\n+\n /// Checks whether the Windows socket interface has been started already, and\n /// if not, starts it.\n pub fn init() {\n-    static START: Once = Once::new();\n-\n-    START.call_once(|| unsafe {\n+    INIT.call_once(|| unsafe {\n         let mut data: c::WSADATA = mem::zeroed();\n         let ret = c::WSAStartup(\n             0x202, // version 2.2\n@@ -42,8 +42,11 @@ pub fn init() {\n }\n \n pub fn cleanup() {\n-    unsafe {\n-        c::WSACleanup();\n+    if INIT.is_completed() {\n+        // only close the socket interface if it has actually been started\n+        unsafe {\n+            c::WSACleanup();\n+        }\n     }\n }\n "}, {"sha": "5906b4e3e0e47a078181264453484fea1a1e98c3", "filename": "library/std/src/sys_common/rt.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8aeea227daf4a78761c41bb32321e8b2e505d27e/library%2Fstd%2Fsrc%2Fsys_common%2Frt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8aeea227daf4a78761c41bb32321e8b2e505d27e/library%2Fstd%2Fsrc%2Fsys_common%2Frt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys_common%2Frt.rs?ref=8aeea227daf4a78761c41bb32321e8b2e505d27e", "patch": "@@ -29,10 +29,10 @@ pub fn init(argc: isize, argv: *const *const u8) {\n pub fn cleanup() {\n     static CLEANUP: Once = Once::new();\n     CLEANUP.call_once(|| unsafe {\n-        // SAFETY: Only called once during runtime cleanup.\n-        sys::cleanup();\n         // Flush stdout and disable buffering.\n         crate::io::cleanup();\n+        // SAFETY: Only called once during runtime cleanup.\n+        sys::cleanup();\n     });\n }\n "}]}