{"sha": "e1c7914c2e1afe34073f01acb5638963029cb961", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUxYzc5MTRjMmUxYWZlMzQwNzNmMDFhY2I1NjM4OTYzMDI5Y2I5NjE=", "commit": {"author": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-01-30T17:03:53Z"}, "committer": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-02-12T13:30:26Z"}, "message": "Add missing ExprIndex to is_exp_equal", "tree": {"sha": "7ae460f4867770d4345bbe1d630524abdb2b296b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7ae460f4867770d4345bbe1d630524abdb2b296b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e1c7914c2e1afe34073f01acb5638963029cb961", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e1c7914c2e1afe34073f01acb5638963029cb961", "html_url": "https://github.com/rust-lang/rust/commit/e1c7914c2e1afe34073f01acb5638963029cb961", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e1c7914c2e1afe34073f01acb5638963029cb961/comments", "author": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d305bca25bf4c560faaa030c069364d46739e255", "url": "https://api.github.com/repos/rust-lang/rust/commits/d305bca25bf4c560faaa030c069364d46739e255", "html_url": "https://github.com/rust-lang/rust/commit/d305bca25bf4c560faaa030c069364d46739e255"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "9adbff90e667b47afa4a07f9b762065831466c57", "filename": "src/utils.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e1c7914c2e1afe34073f01acb5638963029cb961/src%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1c7914c2e1afe34073f01acb5638963029cb961/src%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Futils.rs?ref=e1c7914c2e1afe34073f01acb5638963029cb961", "patch": "@@ -718,6 +718,9 @@ pub fn is_exp_equal(cx: &LateContext, left: &Expr, right: &Expr, ignore_fn: bool\n                 is_block_equal(cx, lt, rt, ignore_fn) &&\n                 both(le, re, |l, r| is_exp_equal(cx, l, r, ignore_fn))\n         }\n+        (&ExprIndex(ref la, ref li), &ExprIndex(ref ra, ref ri)) => {\n+            is_exp_equal(cx, la, ra) && is_exp_equal(cx, li, ri)\n+        }\n         (&ExprLit(ref l), &ExprLit(ref r)) => l.node == r.node,\n         (&ExprMatch(ref le, ref la, ref ls), &ExprMatch(ref re, ref ra, ref rs)) => {\n             ls == rs &&"}]}