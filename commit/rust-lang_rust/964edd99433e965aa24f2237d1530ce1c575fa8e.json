{"sha": "964edd99433e965aa24f2237d1530ce1c575fa8e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk2NGVkZDk5NDMzZTk2NWFhMjRmMjIzN2QxNTMwY2UxYzU3NWZhOGU=", "commit": {"author": {"name": "Alan Du", "email": "alanhdu@gmail.com", "date": "2019-06-04T06:58:22Z"}, "committer": {"name": "Alan Du", "email": "alanhdu@gmail.com", "date": "2019-06-04T22:05:07Z"}, "message": "Fix clippy::while_let_loop", "tree": {"sha": "2309b1708507702fdc0d606f95320d3a9a2db4a0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2309b1708507702fdc0d606f95320d3a9a2db4a0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/964edd99433e965aa24f2237d1530ce1c575fa8e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/964edd99433e965aa24f2237d1530ce1c575fa8e", "html_url": "https://github.com/rust-lang/rust/commit/964edd99433e965aa24f2237d1530ce1c575fa8e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/964edd99433e965aa24f2237d1530ce1c575fa8e/comments", "author": {"login": "alanhdu", "id": 1914111, "node_id": "MDQ6VXNlcjE5MTQxMTE=", "avatar_url": "https://avatars.githubusercontent.com/u/1914111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alanhdu", "html_url": "https://github.com/alanhdu", "followers_url": "https://api.github.com/users/alanhdu/followers", "following_url": "https://api.github.com/users/alanhdu/following{/other_user}", "gists_url": "https://api.github.com/users/alanhdu/gists{/gist_id}", "starred_url": "https://api.github.com/users/alanhdu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alanhdu/subscriptions", "organizations_url": "https://api.github.com/users/alanhdu/orgs", "repos_url": "https://api.github.com/users/alanhdu/repos", "events_url": "https://api.github.com/users/alanhdu/events{/privacy}", "received_events_url": "https://api.github.com/users/alanhdu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alanhdu", "id": 1914111, "node_id": "MDQ6VXNlcjE5MTQxMTE=", "avatar_url": "https://avatars.githubusercontent.com/u/1914111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alanhdu", "html_url": "https://github.com/alanhdu", "followers_url": "https://api.github.com/users/alanhdu/followers", "following_url": "https://api.github.com/users/alanhdu/following{/other_user}", "gists_url": "https://api.github.com/users/alanhdu/gists{/gist_id}", "starred_url": "https://api.github.com/users/alanhdu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alanhdu/subscriptions", "organizations_url": "https://api.github.com/users/alanhdu/orgs", "repos_url": "https://api.github.com/users/alanhdu/repos", "events_url": "https://api.github.com/users/alanhdu/events{/privacy}", "received_events_url": "https://api.github.com/users/alanhdu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b28ca32db22d5e2ed34db556c6fd50a5fc2d679c", "url": "https://api.github.com/repos/rust-lang/rust/commits/b28ca32db22d5e2ed34db556c6fd50a5fc2d679c", "html_url": "https://github.com/rust-lang/rust/commit/b28ca32db22d5e2ed34db556c6fd50a5fc2d679c"}], "stats": {"total": 26, "additions": 11, "deletions": 15}, "files": [{"sha": "de0529b328ad50693edbf7bf92a489b67dfbc9e5", "filename": "crates/ra_assists/src/ast_editor.rs", "status": "modified", "additions": 11, "deletions": 15, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/964edd99433e965aa24f2237d1530ce1c575fa8e/crates%2Fra_assists%2Fsrc%2Fast_editor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/964edd99433e965aa24f2237d1530ce1c575fa8e/crates%2Fra_assists%2Fsrc%2Fast_editor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fast_editor.rs?ref=964edd99433e965aa24f2237d1530ce1c575fa8e", "patch": "@@ -212,21 +212,17 @@ impl AstEditor<ast::FnDef> {\n     }\n \n     pub fn strip_attrs_and_docs(&mut self) {\n-        loop {\n-            if let Some(start) = self\n-                .ast()\n-                .syntax()\n-                .children_with_tokens()\n-                .find(|it| it.kind() == ATTR || it.kind() == COMMENT)\n-            {\n-                let end = match start.next_sibling_or_token() {\n-                    Some(el) if el.kind() == WHITESPACE => el,\n-                    Some(_) | None => start,\n-                };\n-                self.ast = self.replace_children(RangeInclusive::new(start, end), iter::empty());\n-            } else {\n-                break;\n-            }\n+        while let Some(start) = self\n+            .ast()\n+            .syntax()\n+            .children_with_tokens()\n+            .find(|it| it.kind() == ATTR || it.kind() == COMMENT)\n+        {\n+            let end = match start.next_sibling_or_token() {\n+                Some(el) if el.kind() == WHITESPACE => el,\n+                Some(_) | None => start,\n+            };\n+            self.ast = self.replace_children(RangeInclusive::new(start, end), iter::empty());\n         }\n     }\n }"}]}