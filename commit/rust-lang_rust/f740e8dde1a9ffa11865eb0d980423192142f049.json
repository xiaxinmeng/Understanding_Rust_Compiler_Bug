{"sha": "f740e8dde1a9ffa11865eb0d980423192142f049", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY3NDBlOGRkZTFhOWZmYTExODY1ZWIwZDk4MDQyMzE5MjE0MmYwNDk=", "commit": {"author": {"name": "Jonathan Reem", "email": "jonathan.reem@gmail.com", "date": "2014-05-31T02:05:47Z"}, "committer": {"name": "Jonathan Reem", "email": "jonathan.reem@gmail.com", "date": "2014-05-31T04:30:20Z"}, "message": "Remove deprecated owned vector from macro guide.", "tree": {"sha": "5cdb0cc25fec44952d796cc13848ef99e5658279", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5cdb0cc25fec44952d796cc13848ef99e5658279"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f740e8dde1a9ffa11865eb0d980423192142f049", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f740e8dde1a9ffa11865eb0d980423192142f049", "html_url": "https://github.com/rust-lang/rust/commit/f740e8dde1a9ffa11865eb0d980423192142f049", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f740e8dde1a9ffa11865eb0d980423192142f049/comments", "author": {"login": "reem", "id": 4745181, "node_id": "MDQ6VXNlcjQ3NDUxODE=", "avatar_url": "https://avatars.githubusercontent.com/u/4745181?v=4", "gravatar_id": "", "url": "https://api.github.com/users/reem", "html_url": "https://github.com/reem", "followers_url": "https://api.github.com/users/reem/followers", "following_url": "https://api.github.com/users/reem/following{/other_user}", "gists_url": "https://api.github.com/users/reem/gists{/gist_id}", "starred_url": "https://api.github.com/users/reem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/reem/subscriptions", "organizations_url": "https://api.github.com/users/reem/orgs", "repos_url": "https://api.github.com/users/reem/repos", "events_url": "https://api.github.com/users/reem/events{/privacy}", "received_events_url": "https://api.github.com/users/reem/received_events", "type": "User", "site_admin": false}, "committer": {"login": "reem", "id": 4745181, "node_id": "MDQ6VXNlcjQ3NDUxODE=", "avatar_url": "https://avatars.githubusercontent.com/u/4745181?v=4", "gravatar_id": "", "url": "https://api.github.com/users/reem", "html_url": "https://github.com/reem", "followers_url": "https://api.github.com/users/reem/followers", "following_url": "https://api.github.com/users/reem/following{/other_user}", "gists_url": "https://api.github.com/users/reem/gists{/gist_id}", "starred_url": "https://api.github.com/users/reem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/reem/subscriptions", "organizations_url": "https://api.github.com/users/reem/orgs", "repos_url": "https://api.github.com/users/reem/repos", "events_url": "https://api.github.com/users/reem/events{/privacy}", "received_events_url": "https://api.github.com/users/reem/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c3825cbb9dfd5605c507055c40e769a5f6800bab", "url": "https://api.github.com/repos/rust-lang/rust/commits/c3825cbb9dfd5605c507055c40e769a5f6800bab", "html_url": "https://github.com/rust-lang/rust/commit/c3825cbb9dfd5605c507055c40e769a5f6800bab"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "b86a6aa1b619c5a239fe281755f6b6a46c55aa3a", "filename": "src/doc/guide-macros.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f740e8dde1a9ffa11865eb0d980423192142f049/src%2Fdoc%2Fguide-macros.md", "raw_url": "https://github.com/rust-lang/rust/raw/f740e8dde1a9ffa11865eb0d980423192142f049/src%2Fdoc%2Fguide-macros.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fguide-macros.md?ref=f740e8dde1a9ffa11865eb0d980423192142f049", "patch": "@@ -85,7 +85,7 @@ To take as an argument a fragment of Rust code, write `$` followed by a name\n   `foo`.)\n * `expr` (an expression. Examples: `2 + 2`; `if true then { 1 } else { 2 }`;\n   `f(42)`.)\n-* `ty` (a type. Examples: `int`, `~[(char, String)]`, `&T`.)\n+* `ty` (a type. Examples: `int`, `Vec<(char, String)>`, `&T`.)\n * `pat` (a pattern, usually appearing in a `match` or on the left-hand side of\n   a declaration. Examples: `Some(t)`; `(17, 'a')`; `_`.)\n * `block` (a sequence of actions. Example: `{ log(error, \"hi\"); return 12; }`)"}]}