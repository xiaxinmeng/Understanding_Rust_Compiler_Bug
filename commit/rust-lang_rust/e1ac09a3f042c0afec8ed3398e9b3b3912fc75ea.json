{"sha": "e1ac09a3f042c0afec8ed3398e9b3b3912fc75ea", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUxYWMwOWEzZjA0MmMwYWZlYzhlZDMzOThlOWIzYjM5MTJmYzc1ZWE=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-08-09T13:44:01Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-08-09T13:44:01Z"}, "message": "Implement bool -> int cast", "tree": {"sha": "025a7f71d4d02444567857bd5c9ff79314fdb1d1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/025a7f71d4d02444567857bd5c9ff79314fdb1d1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e1ac09a3f042c0afec8ed3398e9b3b3912fc75ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e1ac09a3f042c0afec8ed3398e9b3b3912fc75ea", "html_url": "https://github.com/rust-lang/rust/commit/e1ac09a3f042c0afec8ed3398e9b3b3912fc75ea", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e1ac09a3f042c0afec8ed3398e9b3b3912fc75ea/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "913daae0b439840e312b8d601772ef4d3fd3b492", "url": "https://api.github.com/repos/rust-lang/rust/commits/913daae0b439840e312b8d601772ef4d3fd3b492", "html_url": "https://github.com/rust-lang/rust/commit/913daae0b439840e312b8d601772ef4d3fd3b492"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "6e7d1574fffe5e6980bb4aa1dd54967a775a1ff8", "filename": "src/base.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/e1ac09a3f042c0afec8ed3398e9b3b3912fc75ea/src%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1ac09a3f042c0afec8ed3398e9b3b3912fc75ea/src%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbase.rs?ref=e1ac09a3f042c0afec8ed3398e9b3b3912fc75ea", "patch": "@@ -429,6 +429,17 @@ fn trans_stmt<'a, 'tcx: 'a>(fx: &mut FunctionCx<'a, 'tcx>, cur_ebb: Ebb, stmt: &\n                             let res = fx.bcx.ins().fcvt_from_uint(f_type, from);\n                             lval.write_cvalue(fx, CValue::ByVal(res, dest_layout));\n                         }\n+                        (TypeVariants::TyBool, TypeVariants::TyUint(_))\n+                        | (TypeVariants::TyBool, TypeVariants::TyInt(_)) => {\n+                            let to_ty = fx.cton_type(to_ty).unwrap();\n+                            let from = operand.load_value(fx);\n+                            let res = if to_ty != types::I8 {\n+                                fx.bcx.ins().uextend(to_ty, from)\n+                            } else {\n+                                from\n+                            };\n+                            lval.write_cvalue(fx, CValue::ByVal(res, dest_layout));\n+                        }\n                         _ => unimpl!(\"rval misc {:?} {:?}\", from_ty, to_ty),\n                     }\n                 }"}]}