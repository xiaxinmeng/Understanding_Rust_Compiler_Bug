{"sha": "1ba8b1532169e608693d815a4e53d70a64e1329e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFiYThiMTUzMjE2OWU2MDg2OTNkODE1YTRlNTNkNzBhNjRlMTMyOWU=", "commit": {"author": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2017-07-17T12:38:20Z"}, "committer": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2017-07-22T18:38:40Z"}, "message": "Use safe conversion instead of unsafe constructor in issue-23433 test", "tree": {"sha": "40fc10effb924d6f29a3ae29062017d4dbe4359c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/40fc10effb924d6f29a3ae29062017d4dbe4359c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1ba8b1532169e608693d815a4e53d70a64e1329e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1ba8b1532169e608693d815a4e53d70a64e1329e", "html_url": "https://github.com/rust-lang/rust/commit/1ba8b1532169e608693d815a4e53d70a64e1329e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1ba8b1532169e608693d815a4e53d70a64e1329e/comments", "author": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "06e130fb241cf3c828040d7d4958bf1945226e9c", "url": "https://api.github.com/repos/rust-lang/rust/commits/06e130fb241cf3c828040d7d4958bf1945226e9c", "html_url": "https://github.com/rust-lang/rust/commit/06e130fb241cf3c828040d7d4958bf1945226e9c"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "aa13d6fad47c9f188bf4e855438559467caa99ec", "filename": "src/test/run-pass/issue-23433.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ba8b1532169e608693d815a4e53d70a64e1329e/src%2Ftest%2Frun-pass%2Fissue-23433.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ba8b1532169e608693d815a4e53d70a64e1329e/src%2Ftest%2Frun-pass%2Fissue-23433.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-23433.rs?ref=1ba8b1532169e608693d815a4e53d70a64e1329e", "patch": "@@ -16,7 +16,7 @@ use std::ptr::Unique;\n \n fn main() {\n     let mut a = [0u8; 5];\n-    let b: Option<Unique<[u8]>> = unsafe { Some(Unique::new_unchecked(&mut a)) };\n+    let b: Option<Unique<[u8]>> = Some(Unique::from(&mut a));\n     match b {\n         Some(_) => println!(\"Got `Some`\"),\n         None => panic!(\"Unexpected `None`\"),"}]}