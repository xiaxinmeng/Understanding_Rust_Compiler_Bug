{"sha": "608f7ccded67fd65d5e12ef2c0601170fb3345ed", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYwOGY3Y2NkZWQ2N2ZkNjVkNWUxMmVmMmMwNjAxMTcwZmIzMzQ1ZWQ=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-08-25T21:15:54Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-08-25T21:15:54Z"}, "message": "Move ast::pat_id_map to ast::util", "tree": {"sha": "b36c1d24d57ec9c020c11d602f3b77521017515b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b36c1d24d57ec9c020c11d602f3b77521017515b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/608f7ccded67fd65d5e12ef2c0601170fb3345ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/608f7ccded67fd65d5e12ef2c0601170fb3345ed", "html_url": "https://github.com/rust-lang/rust/commit/608f7ccded67fd65d5e12ef2c0601170fb3345ed", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/608f7ccded67fd65d5e12ef2c0601170fb3345ed/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4d92cb5c63469003903a87574e30308f512314cc", "url": "https://api.github.com/repos/rust-lang/rust/commits/4d92cb5c63469003903a87574e30308f512314cc", "html_url": "https://github.com/rust-lang/rust/commit/4d92cb5c63469003903a87574e30308f512314cc"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "5f99f9213128a864853a4c81d22e5d3cf9ac4d31", "filename": "src/comp/middle/trans_alt.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/608f7ccded67fd65d5e12ef2c0601170fb3345ed/src%2Fcomp%2Fmiddle%2Ftrans_alt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/608f7ccded67fd65d5e12ef2c0601170fb3345ed/src%2Fcomp%2Fmiddle%2Ftrans_alt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans_alt.rs?ref=608f7ccded67fd65d5e12ef2c0601170fb3345ed", "patch": "@@ -69,7 +69,7 @@ type match_branch =\n       bound: bind_map,\n       data: @{body: BasicBlockRef,\n               guard: option::t<@ast::expr>,\n-              id_map: ast::pat_id_map}};\n+              id_map: ast_util::pat_id_map}};\n type match = [match_branch];\n \n fn matches_always(p: &@ast::pat) -> bool {\n@@ -464,7 +464,7 @@ fn compile_submatch(bcx: @block_ctxt, m: &match, vals: [ValueRef],\n \n // Returns false for unreachable blocks\n fn make_phi_bindings(bcx: &@block_ctxt, map: &[exit_node],\n-                     ids: &ast::pat_id_map) -> bool {\n+                     ids: &ast_util::pat_id_map) -> bool {\n     let our_block = bcx.llbb as uint;\n     let success = true;\n     for each item: @{key: ast::ident, val: ast::node_id} in ids.items() {"}, {"sha": "f282c63861f28a300b66b366c410882c42cf5552", "filename": "src/comp/middle/typeck.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/608f7ccded67fd65d5e12ef2c0601170fb3345ed/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/608f7ccded67fd65d5e12ef2c0601170fb3345ed/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftypeck.rs?ref=608f7ccded67fd65d5e12ef2c0601170fb3345ed", "patch": "@@ -1305,7 +1305,7 @@ fn check_lit(ccx: @crate_ctxt, lit: &@ast::lit) -> ty::t {\n \n // Pattern checking is top-down rather than bottom-up so that bindings get\n // their types immediately.\n-fn check_pat(fcx: &@fn_ctxt, map: &ast::pat_id_map, pat: &@ast::pat,\n+fn check_pat(fcx: &@fn_ctxt, map: &ast_util::pat_id_map, pat: &@ast::pat,\n              expected: ty::t) {\n     alt pat.node {\n       ast::pat_wild. { write::ty_only_fixup(fcx, pat.id, expected); }"}, {"sha": "4caddb5e25bda5e58041acb07b1e0db71a95a280", "filename": "src/comp/syntax/ast.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/608f7ccded67fd65d5e12ef2c0601170fb3345ed/src%2Fcomp%2Fsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/608f7ccded67fd65d5e12ef2c0601170fb3345ed/src%2Fcomp%2Fsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fast.rs?ref=608f7ccded67fd65d5e12ef2c0601170fb3345ed", "patch": "@@ -98,8 +98,6 @@ tag pat_ {\n     pat_box(@pat);\n }\n \n-type pat_id_map = std::map::hashmap<str, ast::node_id>;\n-\n tag mutability { mut; imm; maybe_mut; }\n \n tag kind { kind_pinned; kind_shared; kind_unique; }"}, {"sha": "74c3d6dac49b2df4d2a0b546cd2f854b5f225d91", "filename": "src/comp/syntax/ast_util.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/608f7ccded67fd65d5e12ef2c0601170fb3345ed/src%2Fcomp%2Fsyntax%2Fast_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/608f7ccded67fd65d5e12ef2c0601170fb3345ed/src%2Fcomp%2Fsyntax%2Fast_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fast_util.rs?ref=608f7ccded67fd65d5e12ef2c0601170fb3345ed", "patch": "@@ -43,6 +43,8 @@ fn def_id_of_def(d: def) -> def_id {\n     }\n }\n \n+type pat_id_map = std::map::hashmap<str, ast::node_id>;\n+\n // This is used because same-named variables in alternative patterns need to\n // use the node_id of their namesake in the first pattern.\n fn pat_id_map(pat: &@pat) -> pat_id_map {"}]}