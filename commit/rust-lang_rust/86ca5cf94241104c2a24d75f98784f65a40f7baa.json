{"sha": "86ca5cf94241104c2a24d75f98784f65a40f7baa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg2Y2E1Y2Y5NDI0MTEwNGMyYTI0ZDc1Zjk4Nzg0ZjY1YTQwZjdiYWE=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2017-10-04T11:29:55Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2017-10-04T11:29:55Z"}, "message": "Unit tests for gathering and reporting move-errors from mir-borrowck.\n\nThis commit tests *just* the subset of the tests that were previously\nICE'ing and where now AST- and MIR-borrowck both match in terms of the\nerrors they report.\n\nIn other words: there remain *other* tests that previously ICE'd, and\nnow no longer ICE, but their remains a divergence between the errors\nreported by AST-borrowck and by MIR-borrowck.", "tree": {"sha": "65574ac25800ce098ceed5f4ee1b0f0be49d51e3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/65574ac25800ce098ceed5f4ee1b0f0be49d51e3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/86ca5cf94241104c2a24d75f98784f65a40f7baa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/86ca5cf94241104c2a24d75f98784f65a40f7baa", "html_url": "https://github.com/rust-lang/rust/commit/86ca5cf94241104c2a24d75f98784f65a40f7baa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/86ca5cf94241104c2a24d75f98784f65a40f7baa/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5a16ef4936d7174df232c7b17fc92b3060e22c3a", "url": "https://api.github.com/repos/rust-lang/rust/commits/5a16ef4936d7174df232c7b17fc92b3060e22c3a", "html_url": "https://github.com/rust-lang/rust/commit/5a16ef4936d7174df232c7b17fc92b3060e22c3a"}], "stats": {"total": 73, "additions": 60, "deletions": 13}, "files": [{"sha": "fcdcf198c28523430c969b63cc249d38221a82a3", "filename": "src/test/compile-fail/borrowck/borrowck-fn-in-const-a.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/86ca5cf94241104c2a24d75f98784f65a40f7baa/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-fn-in-const-a.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86ca5cf94241104c2a24d75f98784f65a40f7baa/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-fn-in-const-a.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-fn-in-const-a.rs?ref=86ca5cf94241104c2a24d75f98784f65a40f7baa", "patch": "@@ -8,12 +8,17 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// revisions: ast mir\n+//[mir]compile-flags: -Z emit-end-regions -Z borrowck-mir\n+\n // Check that we check fns appearing in constant declarations.\n // Issue #22382.\n \n const MOVE: fn(&String) -> String = {\n     fn broken(x: &String) -> String {\n-        return *x //~ ERROR cannot move\n+        return *x //[ast]~ ERROR cannot move out of borrowed content [E0507]\n+                  //[mir]~^ ERROR (Ast) [E0507]\n+                  //[mir]~| ERROR (Mir) [E0507]\n     }\n     broken\n };"}, {"sha": "99b5ef794c2cd0134935de0eca0671a5b85805c6", "filename": "src/test/compile-fail/borrowck/borrowck-move-in-irrefut-pat.rs", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/86ca5cf94241104c2a24d75f98784f65a40f7baa/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-move-in-irrefut-pat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86ca5cf94241104c2a24d75f98784f65a40f7baa/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-move-in-irrefut-pat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-move-in-irrefut-pat.rs?ref=86ca5cf94241104c2a24d75f98784f65a40f7baa", "patch": "@@ -8,19 +8,28 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// revisions: ast mir\n+//[mir]compile-flags: -Z emit-end-regions -Z borrowck-mir\n+\n fn with<F>(f: F) where F: FnOnce(&String) {}\n \n fn arg_item(&_x: &String) {}\n-    //~^ ERROR cannot move out of borrowed content\n+    //[ast]~^ ERROR cannot move out of borrowed content [E0507]\n+    //[mir]~^^ ERROR (Ast) [E0507]\n+    //[mir]~|  ERROR (Mir) [E0507]\n \n fn arg_closure() {\n     with(|&_x| ())\n-    //~^ ERROR cannot move out of borrowed content\n+    //[ast]~^ ERROR cannot move out of borrowed content [E0507]\n+    //[mir]~^^ ERROR (Ast) [E0507]\n+    //[mir]~|  ERROR (Mir) [E0507]\n }\n \n fn let_pat() {\n     let &_x = &\"hi\".to_string();\n-    //~^ ERROR cannot move out of borrowed content\n+    //[ast]~^ ERROR cannot move out of borrowed content [E0507]\n+    //[mir]~^^ ERROR (Ast) [E0507]\n+    //[mir]~|  ERROR (Mir) [E0507]\n }\n \n pub fn main() {}"}, {"sha": "c7e1ea1b758a1a30d6a44e27d68fe0848fac99e7", "filename": "src/test/compile-fail/borrowck/borrowck-move-out-of-overloaded-auto-deref.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/86ca5cf94241104c2a24d75f98784f65a40f7baa/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-move-out-of-overloaded-auto-deref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86ca5cf94241104c2a24d75f98784f65a40f7baa/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-move-out-of-overloaded-auto-deref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-move-out-of-overloaded-auto-deref.rs?ref=86ca5cf94241104c2a24d75f98784f65a40f7baa", "patch": "@@ -8,9 +8,14 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// revisions: ast mir\n+//[mir]compile-flags: -Z emit-end-regions -Z borrowck-mir\n+\n use std::rc::Rc;\n \n pub fn main() {\n     let _x = Rc::new(vec![1, 2]).into_iter();\n-    //~^ ERROR cannot move out of borrowed content\n+    //[ast]~^ ERROR cannot move out of borrowed content [E0507]\n+    //[mir]~^^ ERROR (Ast) [E0507]\n+    //[mir]~|  ERROR (Mir) [E0507]\n }"}, {"sha": "9e8021fd108a685ac55f97528c428af489c3b9c7", "filename": "src/test/compile-fail/borrowck/borrowck-move-out-of-static-item.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/86ca5cf94241104c2a24d75f98784f65a40f7baa/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-move-out-of-static-item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86ca5cf94241104c2a24d75f98784f65a40f7baa/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-move-out-of-static-item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-move-out-of-static-item.rs?ref=86ca5cf94241104c2a24d75f98784f65a40f7baa", "patch": "@@ -8,6 +8,9 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// revisions: ast mir\n+//[mir]compile-flags: -Z emit-end-regions -Z borrowck-mir\n+\n // Ensure that moves out of static items is forbidden\n \n struct Foo {\n@@ -22,5 +25,7 @@ fn test(f: Foo) {\n }\n \n fn main() {\n-    test(BAR); //~ ERROR cannot move out of static item\n+    test(BAR); //[ast]~ ERROR cannot move out of static item [E0507]\n+               //[mir]~^ ERROR (Ast) [E0507]\n+               //[mir]~| ERROR (Mir) [E0507]\n }"}, {"sha": "982f31b1341c1cc4e8d5ec240bcce7504250a003", "filename": "src/test/compile-fail/borrowck/borrowck-move-out-of-struct-with-dtor.rs", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/86ca5cf94241104c2a24d75f98784f65a40f7baa/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-move-out-of-struct-with-dtor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86ca5cf94241104c2a24d75f98784f65a40f7baa/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-move-out-of-struct-with-dtor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-move-out-of-struct-with-dtor.rs?ref=86ca5cf94241104c2a24d75f98784f65a40f7baa", "patch": "@@ -8,6 +8,9 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// revisions: ast mir\n+//[mir]compile-flags: -Z emit-end-regions -Z borrowck-mir\n+\n struct S {f:String}\n impl Drop for S {\n     fn drop(&mut self) { println!(\"{}\", self.f); }\n@@ -16,17 +19,23 @@ impl Drop for S {\n fn move_in_match() {\n     match (S {f:\"foo\".to_string()}) {\n         S {f:_s} => {}\n-        //~^ ERROR cannot move out of type `S`, which implements the `Drop` trait\n+        //[ast]~^ ERROR cannot move out of type `S`, which implements the `Drop` trait [E0509]\n+        //[mir]~^^ ERROR (Ast) [E0509]\n+        //[mir]~|  ERROR (Mir) [E0509]\n     }\n }\n \n fn move_in_let() {\n     let S {f:_s} = S {f:\"foo\".to_string()};\n-    //~^ ERROR cannot move out of type `S`, which implements the `Drop` trait\n+    //[ast]~^ ERROR cannot move out of type `S`, which implements the `Drop` trait [E0509]\n+    //[mir]~^^ ERROR (Ast) [E0509]\n+    //[mir]~|  ERROR (Mir) [E0509]\n }\n \n fn move_in_fn_arg(S {f:_s}: S) {\n-    //~^ ERROR cannot move out of type `S`, which implements the `Drop` trait\n+    //[ast]~^ ERROR cannot move out of type `S`, which implements the `Drop` trait [E0509]\n+    //[mir]~^^ ERROR (Ast) [E0509]\n+    //[mir]~|  ERROR (Mir) [E0509]\n }\n \n fn main() {}"}, {"sha": "4a1828c69582e2b78f3fa870321dd352085a1379", "filename": "src/test/compile-fail/borrowck/borrowck-struct-update-with-dtor.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/86ca5cf94241104c2a24d75f98784f65a40f7baa/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-struct-update-with-dtor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86ca5cf94241104c2a24d75f98784f65a40f7baa/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-struct-update-with-dtor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-struct-update-with-dtor.rs?ref=86ca5cf94241104c2a24d75f98784f65a40f7baa", "patch": "@@ -8,6 +8,9 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// revisions: ast mir\n+//[mir]compile-flags: -Z emit-end-regions -Z borrowck-mir\n+\n // Issue 4691: Ensure that functional-struct-update can only copy, not\n // move, when the struct implements Drop.\n \n@@ -20,12 +23,16 @@ impl Drop for T { fn drop(&mut self) { } }\n \n fn f(s0:S) {\n     let _s2 = S{a: 2, ..s0};\n-    //~^ error: cannot move out of type `S`, which implements the `Drop` trait\n+    //[ast]~^ error: cannot move out of type `S`, which implements the `Drop` trait\n+    //[mir]~^^ ERROR (Ast) [E0509]\n+    //[mir]~|  ERROR (Mir) [E0509]\n }\n \n fn g(s0:T) {\n     let _s2 = T{a: 2, ..s0};\n-    //~^ error: cannot move out of type `T`, which implements the `Drop` trait\n+    //[ast]~^ error: cannot move out of type `T`, which implements the `Drop` trait\n+    //[mir]~^^ ERROR (Ast) [E0509]\n+    //[mir]~|  ERROR (Mir) [E0509]\n }\n \n fn main() { }"}, {"sha": "7f3120cc83edc5ebe0a6c4ab02cc01d9fad3b296", "filename": "src/test/compile-fail/borrowck/move-in-static-initializer-issue-38520.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/86ca5cf94241104c2a24d75f98784f65a40f7baa/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fmove-in-static-initializer-issue-38520.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86ca5cf94241104c2a24d75f98784f65a40f7baa/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fmove-in-static-initializer-issue-38520.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fmove-in-static-initializer-issue-38520.rs?ref=86ca5cf94241104c2a24d75f98784f65a40f7baa", "patch": "@@ -8,6 +8,9 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// revisions: ast mir\n+//[mir]compile-flags: -Z emit-end-regions -Z borrowck-mir\n+\n // Regression test for #38520. Check that moves of `Foo` are not\n // permitted as `Foo` is not copy (even in a static/const\n // initializer).\n@@ -21,8 +24,12 @@ const fn get(x: Foo) -> usize {\n }\n \n const X: Foo = Foo(22);\n-static Y: usize = get(*&X); //~ ERROR E0507\n-const Z: usize = get(*&X); //~ ERROR E0507\n+static Y: usize = get(*&X); //[ast]~ ERROR E0507\n+                            //[mir]~^ ERROR (Ast) [E0507]\n+                            //[mir]~| ERROR (Mir) [E0507]\n+const Z: usize = get(*&X); //[ast]~ ERROR E0507\n+                           //[mir]~^ ERROR (Ast) [E0507]\n+                           //[mir]~| ERROR (Mir) [E0507]\n \n fn main() {\n }"}]}