{"sha": "d6dbff56e4789dc92c053881a8fe4d20f3bc28cd", "node_id": "C_kwDOAAsO6NoAKGQ2ZGJmZjU2ZTQ3ODlkYzkyYzA1Mzg4MWE4ZmU0ZDIwZjNiYzI4Y2Q", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2021-10-12T13:06:52Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2021-10-12T13:06:52Z"}, "message": "List associated constants in the sidebar", "tree": {"sha": "47181ea26f077f35f3b54336a5bc7d83a016167e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/47181ea26f077f35f3b54336a5bc7d83a016167e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d6dbff56e4789dc92c053881a8fe4d20f3bc28cd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d6dbff56e4789dc92c053881a8fe4d20f3bc28cd", "html_url": "https://github.com/rust-lang/rust/commit/d6dbff56e4789dc92c053881a8fe4d20f3bc28cd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d6dbff56e4789dc92c053881a8fe4d20f3bc28cd/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9a757817c352801de8b0593728f8aee21e23cd53", "url": "https://api.github.com/repos/rust-lang/rust/commits/9a757817c352801de8b0593728f8aee21e23cd53", "html_url": "https://github.com/rust-lang/rust/commit/9a757817c352801de8b0593728f8aee21e23cd53"}], "stats": {"total": 45, "additions": 38, "deletions": 7}, "files": [{"sha": "71b9deca9d647290cec2971fee77a5294a97a210", "filename": "src/librustdoc/html/render/mod.rs", "status": "modified", "additions": 38, "deletions": 7, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/d6dbff56e4789dc92c053881a8fe4d20f3bc28cd/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6dbff56e4789dc92c053881a8fe4d20f3bc28cd/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs?ref=d6dbff56e4789dc92c053881a8fe4d20f3bc28cd", "patch": "@@ -1837,6 +1837,20 @@ fn get_methods(\n         .collect::<Vec<_>>()\n }\n \n+fn get_associated_constants(i: &clean::Impl, used_links: &mut FxHashSet<String>) -> Vec<String> {\n+    i.items\n+        .iter()\n+        .filter_map(|item| match item.name {\n+            Some(ref name) if !name.is_empty() && item.is_associated_const() => Some(format!(\n+                \"<a href=\\\"#{}\\\">{}</a>\",\n+                get_next_url(used_links, format!(\"associatedconstant.{}\", name)),\n+                name\n+            )),\n+            _ => None,\n+        })\n+        .collect::<Vec<_>>()\n+}\n+\n // The point is to url encode any potential character from a type with genericity.\n fn small_url_encode(s: String) -> String {\n     let mut st = String::new();\n@@ -1881,22 +1895,39 @@ fn sidebar_assoc_items(cx: &Context<'_>, out: &mut Buffer, it: &clean::Item) {\n \n         {\n             let used_links_bor = &mut used_links;\n-            let mut ret = v\n+            let mut assoc_consts = v\n+                .iter()\n+                .flat_map(|i| get_associated_constants(i.inner_impl(), used_links_bor))\n+                .collect::<Vec<_>>();\n+            if !assoc_consts.is_empty() {\n+                // We want links' order to be reproducible so we don't use unstable sort.\n+                assoc_consts.sort();\n+\n+                out.push_str(\n+                    \"<h3 class=\\\"sidebar-title\\\">\\\n+                        <a href=\\\"#implementations\\\">Associated Constants</a>\\\n+                     </h3>\\\n+                     <div class=\\\"sidebar-links\\\">\",\n+                );\n+                for line in assoc_consts {\n+                    out.push_str(&line);\n+                }\n+                out.push_str(\"</div>\");\n+            }\n+            let mut methods = v\n                 .iter()\n                 .filter(|i| i.inner_impl().trait_.is_none())\n-                .flat_map(move |i| {\n-                    get_methods(i.inner_impl(), false, used_links_bor, false, cx.tcx())\n-                })\n+                .flat_map(|i| get_methods(i.inner_impl(), false, used_links_bor, false, cx.tcx()))\n                 .collect::<Vec<_>>();\n-            if !ret.is_empty() {\n+            if !methods.is_empty() {\n                 // We want links' order to be reproducible so we don't use unstable sort.\n-                ret.sort();\n+                methods.sort();\n \n                 out.push_str(\n                     \"<h3 class=\\\"sidebar-title\\\"><a href=\\\"#implementations\\\">Methods</a></h3>\\\n                      <div class=\\\"sidebar-links\\\">\",\n                 );\n-                for line in ret {\n+                for line in methods {\n                     out.push_str(&line);\n                 }\n                 out.push_str(\"</div>\");"}]}