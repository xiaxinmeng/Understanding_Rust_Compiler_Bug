{"sha": "0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBmODM3YTkxNDdhMWJhMjJjZmIxMmE0NDgwY2UxYzE4ZDNhZmM2Yjg=", "commit": {"author": {"name": "Caleb Zulawski", "email": "caleb.zulawski@gmail.com", "date": "2020-09-23T00:26:25Z"}, "committer": {"name": "Caleb Zulawski", "email": "caleb.zulawski@gmail.com", "date": "2020-09-23T00:26:25Z"}, "message": "Add docs", "tree": {"sha": "1b57dac3012e0c8ab147e518b27b29412df171a7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1b57dac3012e0c8ab147e518b27b29412df171a7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8", "html_url": "https://github.com/rust-lang/rust/commit/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/comments", "author": {"login": "calebzulawski", "id": 563826, "node_id": "MDQ6VXNlcjU2MzgyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/563826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebzulawski", "html_url": "https://github.com/calebzulawski", "followers_url": "https://api.github.com/users/calebzulawski/followers", "following_url": "https://api.github.com/users/calebzulawski/following{/other_user}", "gists_url": "https://api.github.com/users/calebzulawski/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebzulawski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebzulawski/subscriptions", "organizations_url": "https://api.github.com/users/calebzulawski/orgs", "repos_url": "https://api.github.com/users/calebzulawski/repos", "events_url": "https://api.github.com/users/calebzulawski/events{/privacy}", "received_events_url": "https://api.github.com/users/calebzulawski/received_events", "type": "User", "site_admin": false}, "committer": {"login": "calebzulawski", "id": 563826, "node_id": "MDQ6VXNlcjU2MzgyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/563826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebzulawski", "html_url": "https://github.com/calebzulawski", "followers_url": "https://api.github.com/users/calebzulawski/followers", "following_url": "https://api.github.com/users/calebzulawski/following{/other_user}", "gists_url": "https://api.github.com/users/calebzulawski/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebzulawski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebzulawski/subscriptions", "organizations_url": "https://api.github.com/users/calebzulawski/orgs", "repos_url": "https://api.github.com/users/calebzulawski/repos", "events_url": "https://api.github.com/users/calebzulawski/events{/privacy}", "received_events_url": "https://api.github.com/users/calebzulawski/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "011aafea16428443076a01be98e53018706a7964", "url": "https://api.github.com/repos/rust-lang/rust/commits/011aafea16428443076a01be98e53018706a7964", "html_url": "https://github.com/rust-lang/rust/commit/011aafea16428443076a01be98e53018706a7964"}], "stats": {"total": 302, "additions": 232, "deletions": 70}, "files": [{"sha": "64d9c4b217f7316006aeb2ed47eed76490e10154", "filename": "crates/core_simd/src/macros.rs", "status": "modified", "additions": 20, "deletions": 17, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Fmacros.rs?ref=0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8", "patch": "@@ -28,8 +28,8 @@ macro_rules! from_unaligned {\n }\n \n macro_rules! define_type {\n-    { struct $name:ident([$type:ty; $lanes:tt]); } => {\n-        define_type! { @impl $name [$type; $lanes] }\n+    { $(#[$attr:meta])* struct $name:ident([$type:ty; $lanes:tt]); } => {\n+        define_type! { @impl $(#[$attr])* | $name [$type; $lanes] }\n \n         // array references\n         impl AsRef<[$type; $lanes]> for $name {\n@@ -74,40 +74,40 @@ macro_rules! define_type {\n             }\n         }\n     };\n-    { @impl $name:ident [$type:ty; 1] } => {\n-        define_type! { @impl $name | $type | $type, | v0, }\n+    { @impl $(#[$attr:meta])* | $name:ident [$type:ty; 1] } => {\n+        define_type! { @def $(#[$attr])* | $name | $type | $type, | v0, }\n     };\n-    { @impl $name:ident [$type:ty; 2] } => {\n-        define_type! { @impl $name | $type | $type, $type, | v0, v1, }\n+    { @impl $(#[$attr:meta])* | $name:ident [$type:ty; 2] } => {\n+        define_type! { @def $(#[$attr])* | $name | $type | $type, $type, | v0, v1, }\n     };\n-    { @impl $name:ident [$type:ty; 4] } => {\n-        define_type! { @impl $name | $type |\n+    { @impl $(#[$attr:meta])* | $name:ident [$type:ty; 4] } => {\n+        define_type! { @def $(#[$attr])* | $name | $type |\n             $type, $type, $type, $type, |\n             v0, v1, v2, v3,\n         }\n     };\n-    { @impl $name:ident [$type:ty; 8] } => {\n-        define_type! { @impl $name | $type |\n+    { @impl $(#[$attr:meta])* | $name:ident [$type:ty; 8] } => {\n+        define_type! { @def $(#[$attr])* | $name | $type |\n             $type, $type, $type, $type, $type, $type, $type, $type, |\n             v0, v1, v2, v3, v4, v5, v6, v7,\n         }\n     };\n-    { @impl $name:ident [$type:ty; 16] } => {\n-        define_type! { @impl $name | $type |\n+    { @impl $(#[$attr:meta])* | $name:ident [$type:ty; 16] } => {\n+        define_type! { @def $(#[$attr])* | $name | $type |\n             $type, $type, $type, $type, $type, $type, $type, $type, $type, $type, $type, $type, $type, $type, $type, $type, |\n             v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15,\n         }\n     };\n-    { @impl $name:ident [$type:ty; 32] } => {\n-        define_type! { @impl $name | $type |\n+    { @impl $(#[$attr:meta])* | $name:ident [$type:ty; 32] } => {\n+        define_type! { @def $(#[$attr])* | $name | $type |\n             $type, $type, $type, $type, $type, $type, $type, $type, $type, $type, $type, $type, $type, $type, $type, $type,\n             $type, $type, $type, $type, $type, $type, $type, $type, $type, $type, $type, $type, $type, $type, $type, $type, |\n             v0,  v1,  v2,  v3,  v4,  v5,  v6,  v7,  v8,  v9,  v10, v11, v12, v13, v14, v15,\n             v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, v30, v31,\n         }\n     };\n-    { @impl $name:ident [$type:ty; 64] } => {\n-        define_type! { @impl $name | $type |\n+    { @impl $(#[$attr:meta])* | $name:ident [$type:ty; 64] } => {\n+        define_type! { @def $(#[$attr])* | $name | $type |\n             $type, $type, $type, $type, $type, $type, $type, $type, $type, $type, $type, $type, $type, $type, $type, $type,\n             $type, $type, $type, $type, $type, $type, $type, $type, $type, $type, $type, $type, $type, $type, $type, $type,\n             $type, $type, $type, $type, $type, $type, $type, $type, $type, $type, $type, $type, $type, $type, $type, $type,\n@@ -118,18 +118,21 @@ macro_rules! define_type {\n             v48, v49, v50, v51, v52, v53, v54, v55, v56, v57, v58, v59, v60, v61, v62, v63,\n         }\n     };\n-    { @impl $name:ident | $type:ty | $($itype:ty,)* | $($ivar:ident,)* } => {\n+    { @def $(#[$attr:meta])* | $name:ident | $type:ty | $($itype:ty,)* | $($ivar:ident,)* } => {\n+        $(#[$attr])*\n         #[allow(non_camel_case_types)]\n         #[derive(Copy, Clone, Debug, Default, PartialEq, PartialOrd)]\n         #[repr(simd)]\n         pub struct $name($($itype),*);\n \n         impl $name {\n+            /// Construct a vector by setting each lane to a single value.\n             #[inline]\n             pub fn splat(value: $type) -> Self {\n                 Self($(value as $itype),*)\n             }\n \n+            /// Construct a vector by setting each lane.\n             #[allow(clippy::too_many_arguments)]\n             #[inline]\n             pub fn new($($ivar: $itype),*) -> Self {"}, {"sha": "45fb4a3175bb16c1e0a4bd066613cd5b93e3d47d", "filename": "crates/core_simd/src/type_f32x16.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_f32x16.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_f32x16.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_f32x16.rs?ref=0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8", "patch": "@@ -1,4 +1,7 @@\n-define_type! { struct f32x16([f32; 16]); }\n+define_type! {\n+    #[doc = \"Vector of 16 `f32` types\"]\n+    struct f32x16([f32; 16]);\n+}\n \n /*\n #[cfg(target_arch = \"x86\")]"}, {"sha": "8b60a2ee76f4aaf0b14aef02cd84c9c15f093337", "filename": "crates/core_simd/src/type_f32x2.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_f32x2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_f32x2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_f32x2.rs?ref=0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8", "patch": "@@ -1 +1,4 @@\n-define_type! { struct f32x2([f32; 2]); }\n+define_type! {\n+    #[doc = \"Vector of two `f32` types\"]\n+    struct f32x2([f32; 2]);\n+}"}, {"sha": "452e607732cf7eb6a14c75f06202e2cfe80afb0c", "filename": "crates/core_simd/src/type_f32x4.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_f32x4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_f32x4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_f32x4.rs?ref=0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8", "patch": "@@ -1,4 +1,7 @@\n-define_type! { struct f32x4([f32; 4]); }\n+define_type! {\n+    #[doc = \"Vector of four `f32` types\"]\n+    struct f32x4([f32; 4]);\n+}\n \n #[cfg(target_arch = \"x86\")]\n from_aligned! { unsafe f32x4 |bidirectional| core::arch::x86::__m128 }"}, {"sha": "790a546e4e734dcc0fe1c7aab95fb6c3c891ddfe", "filename": "crates/core_simd/src/type_f32x8.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_f32x8.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_f32x8.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_f32x8.rs?ref=0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8", "patch": "@@ -1,4 +1,7 @@\n-define_type! { struct f32x8([f32; 8]); }\n+define_type! {\n+    #[doc = \"Vector of eight `f32` types\"]\n+    struct f32x8([f32; 8]);\n+}\n \n #[cfg(target_arch = \"x86\")]\n from_aligned! { unsafe f32x8 |bidirectional| core::arch::x86::__m256 }"}, {"sha": "0c349f38c862fdffb28aae70dfcfde4006c04394", "filename": "crates/core_simd/src/type_f64x2.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_f64x2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_f64x2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_f64x2.rs?ref=0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8", "patch": "@@ -1,4 +1,7 @@\n-define_type! { struct f64x2([f64; 2]); }\n+define_type! {\n+    #[doc = \"Vector of two `f64` types\"]\n+    struct f64x2([f64; 2]);\n+}\n \n #[cfg(target_arch = \"x86\")]\n from_aligned! { unsafe f64x2 |bidirectional| core::arch::x86::__m128d }"}, {"sha": "ec6b46bc8c8465882d31d0a27f82fcd67bb65ce3", "filename": "crates/core_simd/src/type_f64x4.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_f64x4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_f64x4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_f64x4.rs?ref=0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8", "patch": "@@ -1,4 +1,7 @@\n-define_type! { struct f64x4([f64; 4]); }\n+define_type! {\n+    #[doc = \"Vector of four `f64` types\"]\n+    struct f64x4([f64; 4]);\n+}\n \n #[cfg(target_arch = \"x86\")]\n from_aligned! { unsafe f64x4 |bidirectional| core::arch::x86::__m256d }"}, {"sha": "dd65dc6b39abdc4e60722abdd5d86a1dac9e2217", "filename": "crates/core_simd/src/type_f64x8.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_f64x8.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_f64x8.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_f64x8.rs?ref=0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8", "patch": "@@ -1,4 +1,7 @@\n-define_type! { struct f64x8([f64; 8]); }\n+define_type! {\n+    #[doc = \"Vector of eight `f64` types\"]\n+    struct f64x8([f64; 8]);\n+}\n \n /*\n #[cfg(target_arch = \"x86\")]"}, {"sha": "1ac736ddf3a2b68052594eb7ff8d174795555da7", "filename": "crates/core_simd/src/type_i128x2.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_i128x2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_i128x2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_i128x2.rs?ref=0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8", "patch": "@@ -1,4 +1,7 @@\n-define_type! { struct i128x2([i128; 2]); }\n+define_type! {\n+    #[doc = \"Vector of two `i128` types\"]\n+    struct i128x2([i128; 2]);\n+}\n \n #[cfg(target_arch = \"x86\")]\n from_aligned! { unsafe i128x2 |bidirectional| core::arch::x86::__m256i }"}, {"sha": "6cef039d947a26c18b14faf32528af9127a0914b", "filename": "crates/core_simd/src/type_i128x4.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_i128x4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_i128x4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_i128x4.rs?ref=0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8", "patch": "@@ -1,4 +1,7 @@\n-define_type! { struct i128x4([i128; 4]); }\n+define_type! {\n+    #[doc = \"Vector of four `i128` types\"]\n+    struct i128x4([i128; 4]);\n+}\n \n /*\n #[cfg(target_arch = \"x86\")]"}, {"sha": "1721286128fea2820b12b7183e2ec71500c5c858", "filename": "crates/core_simd/src/type_i16x16.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_i16x16.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_i16x16.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_i16x16.rs?ref=0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8", "patch": "@@ -1,4 +1,7 @@\n-define_type! { struct i16x16([i16; 16]); }\n+define_type! {\n+    #[doc = \"Vector of 16 `i16` types\"]\n+    struct i16x16([i16; 16]);\n+}\n \n #[cfg(target_arch = \"x86\")]\n from_aligned! { unsafe i16x16 |bidirectional| core::arch::x86::__m256i }"}, {"sha": "7ccbbe7f2d0aab204aa8630b039f4579fc60357e", "filename": "crates/core_simd/src/type_i16x2.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_i16x2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_i16x2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_i16x2.rs?ref=0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8", "patch": "@@ -1 +1,4 @@\n-define_type! { struct i16x2([i16; 2]); }\n+define_type! {\n+    #[doc = \"Vector of two `i16` types\"]\n+    struct i16x2([i16; 2]);\n+}"}, {"sha": "349d094a1bc911f3586255010a24e4b5ded97aaa", "filename": "crates/core_simd/src/type_i16x32.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_i16x32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_i16x32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_i16x32.rs?ref=0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8", "patch": "@@ -1,4 +1,7 @@\n-define_type! { struct i16x32([i16; 32]); }\n+define_type! {\n+    #[doc = \"Vector of 32 `i16` types\"]\n+    struct i16x32([i16; 32]);\n+}\n \n /*\n #[cfg(target_arch = \"x86\")]"}, {"sha": "348bc4c53a943d48defdf25067733bf8cd0c16ee", "filename": "crates/core_simd/src/type_i16x4.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_i16x4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_i16x4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_i16x4.rs?ref=0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8", "patch": "@@ -1 +1,4 @@\n-define_type! { struct i16x4([i16; 4]); }\n+define_type! {\n+    #[doc = \"Vector of four `i16` types\"]\n+    struct i16x4([i16; 4]);\n+}"}, {"sha": "87ded0f3a49c3beac32875e900c8366928a2cbae", "filename": "crates/core_simd/src/type_i16x8.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_i16x8.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_i16x8.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_i16x8.rs?ref=0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8", "patch": "@@ -1,4 +1,7 @@\n-define_type! { struct i16x8([i16; 8]); }\n+define_type! {\n+    #[doc = \"Vector of eight `i16` types\"]\n+    struct i16x8([i16; 8]);\n+}\n \n #[cfg(target_arch = \"x86\")]\n from_aligned! { unsafe i16x8 |bidirectional| core::arch::x86::__m128i }"}, {"sha": "7c52e9cb9e55f5294fb63c8db6052319ccc8c808", "filename": "crates/core_simd/src/type_i32x16.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_i32x16.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_i32x16.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_i32x16.rs?ref=0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8", "patch": "@@ -1,4 +1,7 @@\n-define_type! { struct i32x16([i32; 16]); }\n+define_type! {\n+    #[doc = \"Vector of 16 `i32` types\"]\n+    struct i32x16([i32; 16]);\n+}\n \n /*\n #[cfg(target_arch = \"x86\")]"}, {"sha": "e9845ae75c73c9fe9dbe04ebccc60b7f5dfb7bff", "filename": "crates/core_simd/src/type_i32x2.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_i32x2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_i32x2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_i32x2.rs?ref=0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8", "patch": "@@ -1 +1,4 @@\n-define_type! { struct i32x2([i32; 2]); }\n+define_type! {\n+    #[doc = \"Vector of two `i32` types\"]\n+    struct i32x2([i32; 2]);\n+}"}, {"sha": "47374f7ce43981099b35c344da74d7c6e173891c", "filename": "crates/core_simd/src/type_i32x4.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_i32x4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_i32x4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_i32x4.rs?ref=0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8", "patch": "@@ -1,4 +1,7 @@\n-define_type! { struct i32x4([i32; 4]); }\n+define_type! {\n+    #[doc = \"Vector of four `i32` types\"]\n+    struct i32x4([i32; 4]);\n+}\n \n #[cfg(target_arch = \"x86\")]\n from_aligned! { unsafe i32x4 |bidirectional| core::arch::x86::__m128i }"}, {"sha": "79b4ea180c319a5a2894fc1435244a239444168d", "filename": "crates/core_simd/src/type_i32x8.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_i32x8.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_i32x8.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_i32x8.rs?ref=0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8", "patch": "@@ -1,4 +1,7 @@\n-define_type! { struct i32x8([i32; 8]); }\n+define_type! {\n+    #[doc = \"Vector of eight `i32` types\"]\n+    struct i32x8([i32; 8]);\n+}\n \n #[cfg(target_arch = \"x86\")]\n from_aligned! { unsafe i32x8 |bidirectional| core::arch::x86::__m256i }"}, {"sha": "7268ad5dfbe87e340b9a803f0c76e91568a58b82", "filename": "crates/core_simd/src/type_i64x2.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_i64x2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_i64x2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_i64x2.rs?ref=0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8", "patch": "@@ -1,4 +1,7 @@\n-define_type! { struct i64x2([i64; 2]); }\n+define_type! {\n+    #[doc = \"Vector of two `i64` types\"]\n+    struct i64x2([i64; 2]);\n+}\n \n #[cfg(target_arch = \"x86\")]\n from_aligned! { unsafe i64x2 |bidirectional| core::arch::x86::__m128i }"}, {"sha": "3535783c3000573aa4275732a6d21cc3cb44abcf", "filename": "crates/core_simd/src/type_i64x4.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_i64x4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_i64x4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_i64x4.rs?ref=0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8", "patch": "@@ -1,4 +1,7 @@\n-define_type! { struct i64x4([i64; 4]); }\n+define_type! {\n+    #[doc = \"Vector of four `i64` types\"]\n+    struct i64x4([i64; 4]);\n+}\n \n #[cfg(target_arch = \"x86\")]\n from_aligned! { unsafe i64x4 |bidirectional| core::arch::x86::__m256i }"}, {"sha": "42d28db8c55178a3fafbdb9de7fc502989dd0061", "filename": "crates/core_simd/src/type_i64x8.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_i64x8.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_i64x8.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_i64x8.rs?ref=0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8", "patch": "@@ -1,4 +1,7 @@\n-define_type! { struct i64x8([i64; 8]); }\n+define_type! {\n+    #[doc = \"Vector of eight `i64` types\"]\n+    struct i64x8([i64; 8]);\n+}\n \n /*\n #[cfg(target_arch = \"x86\")]"}, {"sha": "d7aadd4d7ab2097e9e9699792c06c6ad08eee206", "filename": "crates/core_simd/src/type_i8x16.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_i8x16.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_i8x16.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_i8x16.rs?ref=0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8", "patch": "@@ -1,4 +1,7 @@\n-define_type! { struct i8x16([i8; 16]); }\n+define_type! {\n+    #[doc = \"Vector of 16 `i8` types\"]\n+    struct i8x16([i8; 16]);\n+}\n \n #[cfg(target_arch = \"x86\")]\n from_aligned! { unsafe i8x16 |bidirectional| core::arch::x86::__m128i }"}, {"sha": "aca22993c2e35868e3abcd8297b64e2dc2667f1a", "filename": "crates/core_simd/src/type_i8x2.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_i8x2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_i8x2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_i8x2.rs?ref=0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8", "patch": "@@ -1 +1,4 @@\n-define_type! { struct i8x2([i8; 2]); }\n+define_type! {\n+    #[doc = \"Vector of two `i8` types\"]\n+    struct i8x2([i8; 2]);\n+}"}, {"sha": "a323565c85cf19de29274d776550fe7210d317d5", "filename": "crates/core_simd/src/type_i8x32.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_i8x32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_i8x32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_i8x32.rs?ref=0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8", "patch": "@@ -1,4 +1,7 @@\n-define_type! { struct i8x32([i8; 32]); }\n+define_type! {\n+    #[doc = \"Vector of 32 `i8` types\"]\n+    struct i8x32([i8; 32]);\n+}\n \n #[cfg(target_arch = \"x86\")]\n from_aligned! { unsafe i8x32 |bidirectional| core::arch::x86::__m256i }"}, {"sha": "246703ebc50d050b26f2275bbfe38c5ac70a914e", "filename": "crates/core_simd/src/type_i8x4.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_i8x4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_i8x4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_i8x4.rs?ref=0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8", "patch": "@@ -1 +1,4 @@\n-define_type! { struct i8x4([i8; 4]); }\n+define_type! {\n+    #[doc = \"Vector of four `i8` types\"]\n+    struct i8x4([i8; 4]);\n+}"}, {"sha": "26934df2a484c2d4900abb8715d2067d4f81b761", "filename": "crates/core_simd/src/type_i8x64.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_i8x64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_i8x64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_i8x64.rs?ref=0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8", "patch": "@@ -1,4 +1,7 @@\n-define_type! { struct i8x64([i8; 64]); }\n+define_type! {\n+    #[doc = \"Vector of 64 `i8` types\"]\n+    struct i8x64([i8; 64]);\n+}\n \n /*\n #[cfg(target_arch = \"x86\")]"}, {"sha": "bc30e2daf8407f525364a86a0620f71289589e32", "filename": "crates/core_simd/src/type_i8x8.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_i8x8.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_i8x8.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_i8x8.rs?ref=0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8", "patch": "@@ -1 +1,4 @@\n-define_type! { struct i8x8([i8; 8]); }\n+define_type! {\n+    #[doc = \"Vector of eight `i8` types\"]\n+    struct i8x8([i8; 8]);\n+}"}, {"sha": "464f64955522ba36773ef7501f8437267ef711bc", "filename": "crates/core_simd/src/type_isizex2.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_isizex2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_isizex2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_isizex2.rs?ref=0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8", "patch": "@@ -1,4 +1,7 @@\n-define_type! { struct isizex2([isize; 2]); }\n+define_type! {\n+    #[doc = \"Vector of two `isize` types\"]\n+    struct isizex2([isize; 2]);\n+}\n \n #[cfg(all(target_arch = \"x86\", target_pointer_width = \"64\"))]\n from_aligned! { unsafe isizex2 |bidirectional| core::arch::x86::__m128i }"}, {"sha": "3be457393ec234f4de3293e5c98ab900bde7ddfd", "filename": "crates/core_simd/src/type_isizex4.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_isizex4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_isizex4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_isizex4.rs?ref=0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8", "patch": "@@ -1,4 +1,7 @@\n-define_type! { struct isizex4([isize; 4]); }\n+define_type! {\n+    #[doc = \"Vector of four `isize` types\"]\n+    struct isizex4([isize; 4]);\n+}\n \n #[cfg(all(target_arch = \"x86\", target_pointer_width = \"32\"))]\n from_aligned! { unsafe isizex4 |bidirectional| core::arch::x86::__m128i }"}, {"sha": "e21c2cf624b0b6cd0e93e2d3dfe1a334e3c532c0", "filename": "crates/core_simd/src/type_isizex8.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_isizex8.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_isizex8.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_isizex8.rs?ref=0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8", "patch": "@@ -1,4 +1,7 @@\n-define_type! { struct isizex8([isize; 8]); }\n+define_type! {\n+    #[doc = \"Vector of eight `isize` types\"]\n+    struct isizex8([isize; 8]);\n+}\n \n #[cfg(all(target_arch = \"x86\", target_pointer_width = \"32\"))]\n from_aligned! { unsafe isizex8 |bidirectional| core::arch::x86::__m256i }"}, {"sha": "f448e4f0e62646cdcc95d824f273946274dfa235", "filename": "crates/core_simd/src/type_u128x2.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_u128x2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_u128x2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_u128x2.rs?ref=0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8", "patch": "@@ -1,4 +1,7 @@\n-define_type! { struct u128x2([u128; 2]); }\n+define_type! {\n+    #[doc = \"Vector of two `u128` types\"]\n+    struct u128x2([u128; 2]);\n+}\n \n #[cfg(target_arch = \"x86\")]\n from_aligned! { unsafe u128x2 |bidirectional| core::arch::x86::__m256i }"}, {"sha": "07466c7208536e8a18d83e72452fbd755f1683bb", "filename": "crates/core_simd/src/type_u128x4.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_u128x4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_u128x4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_u128x4.rs?ref=0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8", "patch": "@@ -1,4 +1,7 @@\n-define_type! { struct u128x4([u128; 4]); }\n+define_type! {\n+    #[doc = \"Vector of four `u128` types\"]\n+    struct u128x4([u128; 4]);\n+}\n \n /*\n #[cfg(target_arch = \"x86\")]"}, {"sha": "5460c3740adf272526366da484267c7180f8d749", "filename": "crates/core_simd/src/type_u16x16.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_u16x16.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_u16x16.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_u16x16.rs?ref=0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8", "patch": "@@ -1,4 +1,7 @@\n-define_type! { struct u16x16([u16; 16]); }\n+define_type! {\n+    #[doc = \"Vector of 16 `u16` types\"]\n+    struct u16x16([u16; 16]);\n+}\n \n #[cfg(target_arch = \"x86\")]\n from_aligned! { unsafe u16x16 |bidirectional| core::arch::x86::__m256i }"}, {"sha": "480be8b6eaef213c8690b3c181c821a89c286f08", "filename": "crates/core_simd/src/type_u16x2.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_u16x2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_u16x2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_u16x2.rs?ref=0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8", "patch": "@@ -1 +1,4 @@\n-define_type! { struct u16x2([u16; 2]); }\n+define_type! {\n+    #[doc = \"Vector of two `u16` types\"]\n+    struct u16x2([u16; 2]);\n+}"}, {"sha": "67d60535f7763831075d5652a65a011220746980", "filename": "crates/core_simd/src/type_u16x32.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_u16x32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_u16x32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_u16x32.rs?ref=0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8", "patch": "@@ -1,4 +1,7 @@\n-define_type! { struct u16x32([u16; 32]); }\n+define_type! {\n+    #[doc = \"Vector of 32 `u16` types\"]\n+    struct u16x32([u16; 32]);\n+}\n \n /*\n #[cfg(target_arch = \"x86\")]"}, {"sha": "874891363da8ceff928dced806609dc14eeef22a", "filename": "crates/core_simd/src/type_u16x4.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_u16x4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_u16x4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_u16x4.rs?ref=0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8", "patch": "@@ -1 +1,4 @@\n-define_type! { struct u16x4([u16; 4]); }\n+define_type! {\n+    #[doc = \"Vector of four `u16` types\"]\n+    struct u16x4([u16; 4]);\n+}"}, {"sha": "5ba0af151e3fbcca5d33f025530c7aaf07ca91ee", "filename": "crates/core_simd/src/type_u16x8.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_u16x8.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_u16x8.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_u16x8.rs?ref=0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8", "patch": "@@ -1,4 +1,7 @@\n-define_type! { struct u16x8([u16; 8]); }\n+define_type! {\n+    #[doc = \"Vector of eight `u16` types\"]\n+    struct u16x8([u16; 8]);\n+}\n \n #[cfg(target_arch = \"x86\")]\n from_aligned! { unsafe u16x8 |bidirectional| core::arch::x86::__m128i }"}, {"sha": "40e557b2d6c9d7997a4e45c51fe546314fe30581", "filename": "crates/core_simd/src/type_u32x16.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_u32x16.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_u32x16.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_u32x16.rs?ref=0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8", "patch": "@@ -1,4 +1,7 @@\n-define_type! { struct u32x16([u32; 16]); }\n+define_type! {\n+    #[doc = \"Vector of 16 `u32` types\"]\n+    struct u32x16([u32; 16]);\n+}\n \n /*\n #[cfg(target_arch = \"x86\")]"}, {"sha": "001fd31db39c7b2ad88dd514d8a2111d89b03464", "filename": "crates/core_simd/src/type_u32x2.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_u32x2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_u32x2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_u32x2.rs?ref=0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8", "patch": "@@ -1 +1,4 @@\n-define_type! { struct u32x2([u32; 2]); }\n+define_type! {\n+    #[doc = \"Vector of two `u32` types\"]\n+    struct u32x2([u32; 2]);\n+}"}, {"sha": "0582b51ead148014fd2495e119adcd3d9a7d379d", "filename": "crates/core_simd/src/type_u32x4.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_u32x4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_u32x4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_u32x4.rs?ref=0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8", "patch": "@@ -1,4 +1,7 @@\n-define_type! { struct u32x4([u32; 4]); }\n+define_type! {\n+    #[doc = \"Vector of four `u32` types\"]\n+    struct u32x4([u32; 4]);\n+}\n \n #[cfg(target_arch = \"x86\")]\n from_aligned! { unsafe u32x4 |bidirectional| core::arch::x86::__m128i }"}, {"sha": "686833c250c46c58e9f1f3be9be379f135045f42", "filename": "crates/core_simd/src/type_u32x8.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_u32x8.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_u32x8.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_u32x8.rs?ref=0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8", "patch": "@@ -1,4 +1,7 @@\n-define_type! { struct u32x8([u32; 8]); }\n+define_type! {\n+    #[doc = \"Vector of eight `u32` types\"]\n+    struct u32x8([u32; 8]);\n+}\n \n #[cfg(target_arch = \"x86\")]\n from_aligned! { unsafe u32x8 |bidirectional| core::arch::x86::__m256i }"}, {"sha": "e3ba3dc03b51ad9432aeac87edf6ffcd6586e7ad", "filename": "crates/core_simd/src/type_u64x2.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_u64x2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_u64x2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_u64x2.rs?ref=0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8", "patch": "@@ -1,4 +1,7 @@\n-define_type! { struct u64x2([u64; 2]); }\n+define_type! {\n+    #[doc = \"Vector of two `u64` types\"]\n+    struct u64x2([u64; 2]);\n+}\n \n #[cfg(target_arch = \"x86\")]\n from_aligned! { unsafe u64x2 |bidirectional| core::arch::x86::__m128i }"}, {"sha": "005f26012ad551317240bce2ad91a13a19fcb4fc", "filename": "crates/core_simd/src/type_u64x4.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_u64x4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_u64x4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_u64x4.rs?ref=0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8", "patch": "@@ -1,4 +1,7 @@\n-define_type! { struct u64x4([u64; 4]); }\n+define_type! {\n+    #[doc = \"Vector of four `u64` types\"]\n+    struct u64x4([u64; 4]);\n+}\n \n #[cfg(target_arch = \"x86\")]\n from_aligned! { unsafe u64x4 |bidirectional| core::arch::x86::__m256i }"}, {"sha": "fbb41f36e5dae9ad2b795231ca2b573fbb47e943", "filename": "crates/core_simd/src/type_u64x8.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_u64x8.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_u64x8.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_u64x8.rs?ref=0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8", "patch": "@@ -1,4 +1,7 @@\n-define_type! { struct u64x8([u64; 8]); }\n+define_type! {\n+    #[doc = \"Vector of eight `u64` types\"]\n+    struct u64x8([u64; 8]);\n+}\n \n /*\n #[cfg(target_arch = \"x86\")]"}, {"sha": "a44b74c122b23fe859d55075b9deb894d7a443d3", "filename": "crates/core_simd/src/type_u8x16.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_u8x16.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_u8x16.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_u8x16.rs?ref=0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8", "patch": "@@ -1,4 +1,7 @@\n-define_type! { struct u8x16([u8; 16]); }\n+define_type! {\n+    #[doc = \"Vector of 16 `u8` types\"]\n+    struct u8x16([u8; 16]);\n+}\n \n #[cfg(target_arch = \"x86\")]\n from_aligned! { unsafe u8x16 |bidirectional| core::arch::x86::__m128i }"}, {"sha": "c6162cc73a252cb1cae18091e5915d6861f148f4", "filename": "crates/core_simd/src/type_u8x2.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_u8x2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_u8x2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_u8x2.rs?ref=0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8", "patch": "@@ -1 +1,4 @@\n-define_type! { struct u8x2([u8; 2]); }\n+define_type! {\n+    #[doc = \"Vector of two `u8` types\"]\n+    struct u8x2([u8; 2]);\n+}"}, {"sha": "012286846db97c023a38797b9b5dc6ae586db853", "filename": "crates/core_simd/src/type_u8x32.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_u8x32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_u8x32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_u8x32.rs?ref=0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8", "patch": "@@ -1,4 +1,7 @@\n-define_type! { struct u8x32([u8; 32]); }\n+define_type! {\n+    #[doc = \"Vector of 32 `u8` types\"]\n+    struct u8x32([u8; 32]);\n+}\n \n #[cfg(target_arch = \"x86\")]\n from_aligned! { unsafe u8x32 |bidirectional| core::arch::x86::__m256i }"}, {"sha": "ecdffa1199311ef1a4a1001f495761df06923a65", "filename": "crates/core_simd/src/type_u8x4.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_u8x4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_u8x4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_u8x4.rs?ref=0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8", "patch": "@@ -1 +1,4 @@\n-define_type! { struct u8x4([u8; 4]); }\n+define_type! {\n+    #[doc = \"Vector of four `u8` types\"]\n+    struct u8x4([u8; 4]);\n+}"}, {"sha": "6f05f086a64ac5f0bc681f8480bbe5056de2cf86", "filename": "crates/core_simd/src/type_u8x64.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_u8x64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_u8x64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_u8x64.rs?ref=0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8", "patch": "@@ -1,4 +1,7 @@\n-define_type! { struct u8x64([u8; 64]); }\n+define_type! {\n+    #[doc = \"Vector of 64 `u8` types\"]\n+    struct u8x64([u8; 64]);\n+}\n \n /*\n #[cfg(target_arch = \"x86\")]"}, {"sha": "7810ac743f8deff8dd7649d6096e737cbc3dea37", "filename": "crates/core_simd/src/type_u8x8.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_u8x8.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_u8x8.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_u8x8.rs?ref=0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8", "patch": "@@ -1 +1,4 @@\n-define_type! { struct u8x8([u8; 8]); }\n+define_type! {\n+    #[doc = \"Vector of eight `u8` types\"]\n+    struct u8x8([u8; 8]);\n+}"}, {"sha": "218d5a1056ebf45cb2778142b923f8170d985eb0", "filename": "crates/core_simd/src/type_usizex2.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_usizex2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_usizex2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_usizex2.rs?ref=0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8", "patch": "@@ -1,4 +1,7 @@\n-define_type! { struct usizex2([usize; 2]); }\n+define_type! {\n+    #[doc = \"Vector of two `usize` types\"]\n+    struct usizex2([usize; 2]);\n+}\n \n #[cfg(all(target_arch = \"x86\", target_pointer_width = \"64\"))]\n from_aligned! { unsafe usizex2 |bidirectional| core::arch::x86::__m128i }"}, {"sha": "60160ecc217b3a0bb3b727b2463880af2ad3b764", "filename": "crates/core_simd/src/type_usizex4.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_usizex4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_usizex4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_usizex4.rs?ref=0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8", "patch": "@@ -1,4 +1,7 @@\n-define_type! { struct usizex4([usize; 4]); }\n+define_type! {\n+    #[doc = \"Vector of four `usize` types\"]\n+    struct usizex4([usize; 4]);\n+}\n \n #[cfg(all(target_arch = \"x86\", target_pointer_width = \"32\"))]\n from_aligned! { unsafe usizex4 |bidirectional| core::arch::x86::__m128i }"}, {"sha": "5f5a445f4308e0a5a4609dbf959ca7f6fe2c3dc1", "filename": "crates/core_simd/src/type_usizex8.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_usizex8.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8/crates%2Fcore_simd%2Fsrc%2Ftype_usizex8.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_usizex8.rs?ref=0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8", "patch": "@@ -1,4 +1,7 @@\n-define_type! { struct usizex8([usize; 8]); }\n+define_type! {\n+    #[doc = \"Vector of eight `usize` types\"]\n+    struct usizex8([usize; 8]);\n+}\n \n #[cfg(all(target_arch = \"x86\", target_pointer_width = \"32\"))]\n from_aligned! { unsafe usizex8 |bidirectional| core::arch::x86::__m256i }"}]}