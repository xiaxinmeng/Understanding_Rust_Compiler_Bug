{"sha": "3614bd3c45a8d0e5f27c0736e8966f6456a5cd75", "node_id": "C_kwDOAAsO6NoAKDM2MTRiZDNjNDVhOGQwZTVmMjdjMDczNmU4OTY2ZjY0NTZhNWNkNzU", "commit": {"author": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2022-04-29T17:36:02Z"}, "committer": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2022-04-29T19:09:12Z"}, "message": "Fix duplicate directory separator in --remap-path-prefix.", "tree": {"sha": "dcc587efaf03c52083600d83693bc08364a1d57c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dcc587efaf03c52083600d83693bc08364a1d57c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3614bd3c45a8d0e5f27c0736e8966f6456a5cd75", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3614bd3c45a8d0e5f27c0736e8966f6456a5cd75", "html_url": "https://github.com/rust-lang/rust/commit/3614bd3c45a8d0e5f27c0736e8966f6456a5cd75", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3614bd3c45a8d0e5f27c0736e8966f6456a5cd75/comments", "author": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "683c582c1e88c573c454b7fa6f00bc6647421864", "url": "https://api.github.com/repos/rust-lang/rust/commits/683c582c1e88c573c454b7fa6f00bc6647421864", "html_url": "https://github.com/rust-lang/rust/commit/683c582c1e88c573c454b7fa6f00bc6647421864"}], "stats": {"total": 96, "additions": 94, "deletions": 2}, "files": [{"sha": "460b5c18fc1b4838089ef11fe9d422e95ef44bf9", "filename": "compiler/rustc_span/src/source_map.rs", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/3614bd3c45a8d0e5f27c0736e8966f6456a5cd75/compiler%2Frustc_span%2Fsrc%2Fsource_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3614bd3c45a8d0e5f27c0736e8966f6456a5cd75/compiler%2Frustc_span%2Fsrc%2Fsource_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Fsource_map.rs?ref=3614bd3c45a8d0e5f27c0736e8966f6456a5cd75", "patch": "@@ -1102,7 +1102,19 @@ impl FilePathMapping {\n         //       take precedence.\n         for &(ref from, ref to) in self.mapping.iter().rev() {\n             if let Ok(rest) = path.strip_prefix(from) {\n-                return (to.join(rest), true);\n+                let remapped = if rest.as_os_str().is_empty() {\n+                    // This is subtle, joining an empty path onto e.g. `foo/bar` will\n+                    // result in `foo/bar/`, that is, there'll be an additional directory\n+                    // separator at the end. This can lead to duplicated directory separators\n+                    // in remapped paths down the line.\n+                    // So, if we have an exact match, we just return that without a call\n+                    // to `Path::join()`.\n+                    to.clone()\n+                } else {\n+                    to.join(rest)\n+                };\n+\n+                return (remapped, true);\n             }\n         }\n "}, {"sha": "481e015c66c25ce3c6a8881974f93f2fc17cb1c2", "filename": "compiler/rustc_span/src/source_map/tests.rs", "status": "modified", "additions": 80, "deletions": 0, "changes": 80, "blob_url": "https://github.com/rust-lang/rust/blob/3614bd3c45a8d0e5f27c0736e8966f6456a5cd75/compiler%2Frustc_span%2Fsrc%2Fsource_map%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3614bd3c45a8d0e5f27c0736e8966f6456a5cd75/compiler%2Frustc_span%2Fsrc%2Fsource_map%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Fsource_map%2Ftests.rs?ref=3614bd3c45a8d0e5f27c0736e8966f6456a5cd75", "patch": "@@ -312,3 +312,83 @@ impl SourceMapExtension for SourceMap {\n         }\n     }\n }\n+\n+fn map_path_prefix(mapping: &FilePathMapping, path: &str) -> String {\n+    // It's important that we convert to a string here because that's what\n+    // later stages do too (e.g. in the backend), and comparing `Path` values\n+    // won't catch some differences at the string level, e.g. \"abc\" and \"abc/\"\n+    // compare as equal.\n+    mapping.map_prefix(path.into()).0.to_string_lossy().to_string()\n+}\n+\n+#[cfg(unix)]\n+#[test]\n+fn path_prefix_remapping() {\n+    // Relative to relative\n+    {\n+        let mapping = &FilePathMapping::new(vec![(\"abc/def\".into(), \"foo\".into())]);\n+\n+        assert_eq!(map_path_prefix(mapping, \"abc/def/src/main.rs\"), \"foo/src/main.rs\");\n+        assert_eq!(map_path_prefix(mapping, \"abc/def\"), \"foo\");\n+    }\n+\n+    // Relative to absolute\n+    {\n+        let mapping = &FilePathMapping::new(vec![(\"abc/def\".into(), \"/foo\".into())]);\n+\n+        assert_eq!(map_path_prefix(mapping, \"abc/def/src/main.rs\"), \"/foo/src/main.rs\");\n+        assert_eq!(map_path_prefix(mapping, \"abc/def\"), \"/foo\");\n+    }\n+\n+    // Absolute to relative\n+    {\n+        let mapping = &FilePathMapping::new(vec![(\"/abc/def\".into(), \"foo\".into())]);\n+\n+        assert_eq!(map_path_prefix(mapping, \"/abc/def/src/main.rs\"), \"foo/src/main.rs\");\n+        assert_eq!(map_path_prefix(mapping, \"/abc/def\"), \"foo\");\n+    }\n+\n+    // Absolute to absolute\n+    {\n+        let mapping = &FilePathMapping::new(vec![(\"/abc/def\".into(), \"/foo\".into())]);\n+\n+        assert_eq!(map_path_prefix(mapping, \"/abc/def/src/main.rs\"), \"/foo/src/main.rs\");\n+        assert_eq!(map_path_prefix(mapping, \"/abc/def\"), \"/foo\");\n+    }\n+}\n+\n+#[cfg(windows)]\n+#[test]\n+fn path_prefix_remapping_from_relative2() {\n+    // Relative to relative\n+    {\n+        let mapping = &FilePathMapping::new(vec![(\"abc\\\\def\".into(), \"foo\".into())]);\n+\n+        assert_eq!(map_path_prefix(mapping, \"abc\\\\def\\\\src\\\\main.rs\"), \"foo\\\\src\\\\main.rs\");\n+        assert_eq!(map_path_prefix(mapping, \"abc\\\\def\"), \"foo\");\n+    }\n+\n+    // Relative to absolute\n+    {\n+        let mapping = &FilePathMapping::new(vec![(\"abc\\\\def\".into(), \"X:\\\\foo\".into())]);\n+\n+        assert_eq!(map_path_prefix(mapping, \"abc\\\\def\\\\src\\\\main.rs\"), \"X:\\\\foo\\\\src\\\\main.rs\");\n+        assert_eq!(map_path_prefix(mapping, \"abc\\\\def\"), \"X:\\\\foo\");\n+    }\n+\n+    // Absolute to relative\n+    {\n+        let mapping = &FilePathMapping::new(vec![(\"X:\\\\abc\\\\def\".into(), \"foo\".into())]);\n+\n+        assert_eq!(map_path_prefix(mapping, \"X:\\\\abc\\\\def\\\\src\\\\main.rs\"), \"foo\\\\src\\\\main.rs\");\n+        assert_eq!(map_path_prefix(mapping, \"X:\\\\abc\\\\def\"), \"foo\");\n+    }\n+\n+    // Absolute to absolute\n+    {\n+        let mapping = &FilePathMapping::new(vec![(\"X:\\\\abc\\\\def\".into(), \"X:\\\\foo\".into())]);\n+\n+        assert_eq!(map_path_prefix(mapping, \"X:\\\\abc\\\\def\\\\src\\\\main.rs\"), \"X:\\\\foo\\\\src\\\\main.rs\");\n+        assert_eq!(map_path_prefix(mapping, \"X:\\\\abc\\\\def\"), \"X:\\\\foo\");\n+    }\n+}"}, {"sha": "b13d576295c605f968df697caaf99d9c48be21e4", "filename": "src/test/codegen/remap_path_prefix/main.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3614bd3c45a8d0e5f27c0736e8966f6456a5cd75/src%2Ftest%2Fcodegen%2Fremap_path_prefix%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3614bd3c45a8d0e5f27c0736e8966f6456a5cd75/src%2Ftest%2Fcodegen%2Fremap_path_prefix%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fremap_path_prefix%2Fmain.rs?ref=3614bd3c45a8d0e5f27c0736e8966f6456a5cd75", "patch": "@@ -22,7 +22,7 @@ fn main() {\n }\n \n // Here we check that local debuginfo is mapped correctly.\n-// CHECK: !DIFile(filename: \"/the/src/remap_path_prefix/main.rs\", directory: \"/the/cwd/\"\n+// CHECK: !DIFile(filename: \"/the/src/remap_path_prefix/main.rs\", directory: \"/the/cwd\"\n \n // And here that debuginfo from other crates are expanded to absolute paths.\n // CHECK: !DIFile(filename: \"/the/aux-src/remap_path_prefix_aux.rs\", directory: \"\""}]}