{"sha": "586ef4ed7237b2290bb6365b038e8da59776533f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU4NmVmNGVkNzIzN2IyMjkwYmI2MzY1YjAzOGU4ZGE1OTc3NjUzM2Y=", "commit": {"author": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2018-09-02T07:45:13Z"}, "committer": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2018-09-03T20:18:53Z"}, "message": "Refactor to use into_group_map from Itertools", "tree": {"sha": "34411ec88825c2dd04f89b3968fe1a60a3a3cf35", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/34411ec88825c2dd04f89b3968fe1a60a3a3cf35"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/586ef4ed7237b2290bb6365b038e8da59776533f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIcBAABCAAGBQJbjZctAAoJELb6Bqbg4mZbGNcP/RPomsVVNwIrxj8ePPju3FIY\nQtztPpxd8O8qWKNfLI+RdIkCDSTt9j2/B7IyE3E8W08T7GnY4Xx7Zlf7M8g/b9XA\nEfBU+wHqUzfsdQW97kisTZjj7/a3nJekPZHzfl+WIbitKWBSCCU3ZF7YyRQ69Dwc\nHj2YxTcj0cFjIa6QOxHYESd17lv+0qsgPu9EnFyo9NtNwfEqiqnSlCOgFPRC4ByK\nLwJt9WAAcz5QrfI/Od27pVQnqkf1R9Q3S+wdjnLkyV94MGTgZv/WvLHKgPRJOgTT\ny19kpYIAdIZTcRhjbVO/xiCS/aUWGyob/iuDwtmuJOlrwTAmE1DqT2Cqdxjtt1g/\nKj2NBiTehClUr6wwr8ozFQuLYHdw7YHj/X53LrHe8Vf9uS4qpVuhOJ/jFGvo4uhw\njKp0046Kpvl5vn+QS5BPlbF3nx7YoPtfTbkQVRsKO7hFv3gH6if6GiqEECf/FuCj\njG3AOmK2+ibgKLlCSKb6Rpj62rBXfCU39s5duNsabDaQTkQ11PadZv7zsEY6eVb1\nPC96GnHGyBCMIaoU/yjhFLGMGLxM39TY5gqNBOwe+SZeRWBnXnmXH/CyPqoGlIfx\nhTCuI9lcLgOOPneRcWkR4JhBchmXQtSGh90r/G/PxBFEeJk2kcFql6lgafxVVymy\nlmC9BqeF5Uno4RYWRPYo\n=lwUU\n-----END PGP SIGNATURE-----", "payload": "tree 34411ec88825c2dd04f89b3968fe1a60a3a3cf35\nparent 78d358b861442137182ea7871d1177c799fab7e8\nauthor Philipp Hansch <dev@phansch.net> 1535874313 +0200\ncommitter Philipp Hansch <dev@phansch.net> 1536005933 +0200\n\nRefactor to use into_group_map from Itertools\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/586ef4ed7237b2290bb6365b038e8da59776533f", "html_url": "https://github.com/rust-lang/rust/commit/586ef4ed7237b2290bb6365b038e8da59776533f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/586ef4ed7237b2290bb6365b038e8da59776533f/comments", "author": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "78d358b861442137182ea7871d1177c799fab7e8", "url": "https://api.github.com/repos/rust-lang/rust/commits/78d358b861442137182ea7871d1177c799fab7e8", "html_url": "https://github.com/rust-lang/rust/commit/78d358b861442137182ea7871d1177c799fab7e8"}], "stats": {"total": 73, "additions": 46, "deletions": 27}, "files": [{"sha": "2d94755bae30b6eafa0f537ea0345916514c09b3", "filename": "clippy_dev/Cargo.lock", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/586ef4ed7237b2290bb6365b038e8da59776533f/clippy_dev%2FCargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/586ef4ed7237b2290bb6365b038e8da59776533f/clippy_dev%2FCargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2FCargo.lock?ref=586ef4ed7237b2290bb6365b038e8da59776533f", "patch": "@@ -48,10 +48,24 @@ name = \"clippy_dev\"\n version = \"0.0.1\"\n dependencies = [\n  \"clap 2.32.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"itertools 0.7.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"lazy_static 1.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"regex 1.0.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n+[[package]]\n+name = \"either\"\n+version = \"1.5.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+\n+[[package]]\n+name = \"itertools\"\n+version = \"0.7.8\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"either 1.5.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n [[package]]\n name = \"lazy_static\"\n version = \"1.1.0\"\n@@ -187,6 +201,8 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum atty 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)\" = \"9a7d5b8723950951411ee34d271d99dddcc2035a16ab25310ea2c8cfd4369652\"\n \"checksum bitflags 1.0.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"228047a76f468627ca71776ecdebd732a3423081fcf5125585bcd7c49886ce12\"\n \"checksum clap 2.32.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"b957d88f4b6a63b9d70d5f454ac8011819c6efa7727858f458ab71c756ce2d3e\"\n+\"checksum either 1.5.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"3be565ca5c557d7f59e7cfcf1844f9e3033650c929c6566f511e8005f205c1d0\"\n+\"checksum itertools 0.7.8 (registry+https://github.com/rust-lang/crates.io-index)\" = \"f58856976b776fedd95533137617a02fb25719f40e7d9b01c7043cd65474f450\"\n \"checksum lazy_static 1.1.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ca488b89a5657b0a2ecd45b95609b3e848cf1755da332a0da46e2b2b1cb371a7\"\n \"checksum libc 0.2.43 (registry+https://github.com/rust-lang/crates.io-index)\" = \"76e3a3ef172f1a0b9a9ff0dd1491ae5e6c948b94479a3021819ba7d860c8645d\"\n \"checksum memchr 2.0.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"a3b4142ab8738a78c51896f704f83c11df047ff1bda9a92a661aa6361552d93d\""}, {"sha": "503dd53aa203acfc6d22ea87d4fa16838f01e522", "filename": "clippy_dev/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/586ef4ed7237b2290bb6365b038e8da59776533f/clippy_dev%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/586ef4ed7237b2290bb6365b038e8da59776533f/clippy_dev%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2FCargo.toml?ref=586ef4ed7237b2290bb6365b038e8da59776533f", "patch": "@@ -5,5 +5,6 @@ authors = [\"Philipp Hansch <dev@phansch.net>\"]\n \n [dependencies]\n clap = \"~2.32\"\n+itertools = \"0.7\"\n regex = \"1\"\n lazy_static = \"1.0\""}, {"sha": "8eabf3a97c033fa98016e69221f009976543d1e5", "filename": "clippy_dev/src/lib.rs", "status": "modified", "additions": 19, "deletions": 9, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/586ef4ed7237b2290bb6365b038e8da59776533f/clippy_dev%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/586ef4ed7237b2290bb6365b038e8da59776533f/clippy_dev%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2Fsrc%2Flib.rs?ref=586ef4ed7237b2290bb6365b038e8da59776533f", "patch": "@@ -1,8 +1,11 @@\n extern crate regex;\n #[macro_use]\n extern crate lazy_static;\n+extern crate itertools;\n \n use regex::Regex;\n+use itertools::Itertools;\n+use std::collections::HashMap;\n use std::ffi::OsStr;\n use std::fs;\n use std::io::prelude::*;\n@@ -47,8 +50,9 @@ impl Lint {\n         lints.iter().filter(|l| l.deprecation.is_none()).cloned().collect::<Vec<Lint>>()\n     }\n \n-    pub fn in_lint_group(group: &str, lints: &[Lint]) -> Vec<Lint> {\n-        lints.iter().filter(|l| l.group == group).cloned().collect::<Vec<Lint>>()\n+    /// Returns the lints in a HashMap, grouped by the different lint groups\n+    pub fn by_lint_group(lints: &[Lint]) -> HashMap<String, Vec<Lint>> {\n+        lints.iter().map(|lint| (lint.group.to_string(), lint.clone())).into_group_map()\n     }\n }\n \n@@ -141,13 +145,19 @@ fn test_active_lints() {\n }\n \n #[test]\n-fn test_in_lint_group() {\n+fn test_by_lint_group() {\n     let lints = vec![\n-        Lint::new(\"ptr_arg\", \"style\", \"really long text\", None, \"module_name\"),\n-        Lint::new(\"doc_markdown\", \"pedantic\", \"single line\", None, \"module_name\"),\n-    ];\n-    let expected = vec![\n-        Lint::new(\"ptr_arg\", \"style\", \"really long text\", None, \"module_name\")\n+        Lint::new(\"should_assert_eq\", \"group1\", \"abc\", None, \"module_name\"),\n+        Lint::new(\"should_assert_eq2\", \"group2\", \"abc\", None, \"module_name\"),\n+        Lint::new(\"incorrect_match\", \"group1\", \"abc\", None, \"module_name\"),\n     ];\n-    assert_eq!(expected, Lint::in_lint_group(\"style\", &lints));\n+    let mut expected: HashMap<String, Vec<Lint>> = HashMap::new();\n+    expected.insert(\"group1\".to_string(), vec![\n+        Lint::new(\"should_assert_eq\", \"group1\", \"abc\", None, \"module_name\"),\n+        Lint::new(\"incorrect_match\", \"group1\", \"abc\", None, \"module_name\"),\n+    ]);\n+    expected.insert(\"group2\".to_string(), vec![\n+        Lint::new(\"should_assert_eq2\", \"group2\", \"abc\", None, \"module_name\")\n+    ]);\n+    assert_eq!(expected, Lint::by_lint_group(&lints));\n }"}, {"sha": "6b55a7b7bf4197b06cd94b24d1ecb9ddeeb05a30", "filename": "clippy_dev/src/main.rs", "status": "modified", "additions": 10, "deletions": 18, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/586ef4ed7237b2290bb6365b038e8da59776533f/clippy_dev%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/586ef4ed7237b2290bb6365b038e8da59776533f/clippy_dev%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2Fsrc%2Fmain.rs?ref=586ef4ed7237b2290bb6365b038e8da59776533f", "patch": "@@ -28,26 +28,18 @@ fn main() {\n \n fn print_lints() {\n     let lint_list = collect_all();\n-    let print_clippy_lint_groups: [&str; 7] = [\n-        \"correctness\",\n-        \"style\",\n-        \"complexity\",\n-        \"perf\",\n-        \"pedantic\",\n-        \"nursery\",\n-        \"restriction\"\n-    ];\n-    // We could use itertools' group_by to make this much more concise:\n-    for group in &print_clippy_lint_groups {\n-        println!(\"\\n## {}\", group);\n-\n-        let mut group_lints = Lint::in_lint_group(group, &lint_list);\n-        group_lints.sort_by(|a, b| a.name.cmp(&b.name));\n-\n-        for lint in group_lints {\n-            if lint.deprecation.is_some() { continue; }\n+    let grouped_by_lint_group = Lint::by_lint_group(&lint_list);\n+\n+    for (lint_group, mut lints) in grouped_by_lint_group {\n+        if lint_group == \"Deprecated\" { continue; }\n+        println!(\"\\n## {}\", lint_group);\n+\n+        lints.sort_by(|a, b| a.name.cmp(&b.name));\n+\n+        for lint in lints {\n             println!(\"* [{}]({}#{}) ({})\", lint.name, clippy_dev::DOCS_LINK.clone(), lint.name, lint.desc);\n         }\n     }\n+\n     println!(\"there are {} lints\", Lint::active_lints(&lint_list).len());\n }"}]}