{"sha": "8e373304edeb5c0a3354d0152f322aec16ef6400", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhlMzczMzA0ZWRlYjVjMGEzMzU0ZDAxNTJmMzIyYWVjMTZlZjY0MDA=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-10-23T09:26:16Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-10-23T09:26:16Z"}, "message": "Rollup merge of #77339 - fusion-engineering-forks:tryfrom-nonzero-to-nonzero, r=dtolnay\n\nImplement TryFrom between NonZero types.\n\nThis will instantly be stable, as trait implementations for stable types and traits can not be `#[unstable]`.\n\nCloses #77258.\n\n@rustbot modify labels: +T-libs", "tree": {"sha": "79d72c629763060c43672b3392cfb415fbac8962", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/79d72c629763060c43672b3392cfb415fbac8962"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8e373304edeb5c0a3354d0152f322aec16ef6400", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfkqG4CRBK7hj4Ov3rIwAAdHIIAHhDruRhyxB/3HyQPWF+Kqre\n0fpZIyRTouitE+R5BCJ4s3OrzyHd4YvIiR/6VvpzUAiraYxH4ZhE2lqP+ZxA91d6\nfSVt6KJsXBfYvfYSf/PHDCidNZMtk6misujTRhXb8TmgrEyYN3ro3LJ9PKJNFM06\nne7dQqBSM2/UbhKEseADfK06rRu39mwBgggGj+HIogID4uN2U9vFCSozk76Q+tjN\nKGXaBqM0gjLHx2xg5+6st+HwNtlRofWxzJL7cLTBFys+w954MA8kPCoMYWilYuAb\n78U3QXDEbfMpUTJmqPAyv0Fospf73Cxp1J/IfmgdSwTxefx+tHXMQd4aheYLfP8=\n=jzMf\n-----END PGP SIGNATURE-----\n", "payload": "tree 79d72c629763060c43672b3392cfb415fbac8962\nparent b40ca645206302a53282827601bade0a53da663c\nparent b9db54b3a238124b19856a03eccef7ae3ae86d91\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1603445176 +0900\ncommitter GitHub <noreply@github.com> 1603445176 +0900\n\nRollup merge of #77339 - fusion-engineering-forks:tryfrom-nonzero-to-nonzero, r=dtolnay\n\nImplement TryFrom between NonZero types.\n\nThis will instantly be stable, as trait implementations for stable types and traits can not be `#[unstable]`.\n\nCloses #77258.\n\n@rustbot modify labels: +T-libs\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8e373304edeb5c0a3354d0152f322aec16ef6400", "html_url": "https://github.com/rust-lang/rust/commit/8e373304edeb5c0a3354d0152f322aec16ef6400", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8e373304edeb5c0a3354d0152f322aec16ef6400/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b40ca645206302a53282827601bade0a53da663c", "url": "https://api.github.com/repos/rust-lang/rust/commits/b40ca645206302a53282827601bade0a53da663c", "html_url": "https://github.com/rust-lang/rust/commit/b40ca645206302a53282827601bade0a53da663c"}, {"sha": "b9db54b3a238124b19856a03eccef7ae3ae86d91", "url": "https://api.github.com/repos/rust-lang/rust/commits/b9db54b3a238124b19856a03eccef7ae3ae86d91", "html_url": "https://github.com/rust-lang/rust/commit/b9db54b3a238124b19856a03eccef7ae3ae86d91"}], "stats": {"total": 46, "additions": 46, "deletions": 0}, "files": [{"sha": "2dd5e813d6fb7bbe2e2d504f06b9992089cb1192", "filename": "library/core/src/convert/num.rs", "status": "modified", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/8e373304edeb5c0a3354d0152f322aec16ef6400/library%2Fcore%2Fsrc%2Fconvert%2Fnum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e373304edeb5c0a3354d0152f322aec16ef6400/library%2Fcore%2Fsrc%2Fconvert%2Fnum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fconvert%2Fnum.rs?ref=8e373304edeb5c0a3354d0152f322aec16ef6400", "patch": "@@ -485,3 +485,49 @@ nzint_impl_try_from_int! { i32, NonZeroI32, #[stable(feature = \"nzint_try_from_i\n nzint_impl_try_from_int! { i64, NonZeroI64, #[stable(feature = \"nzint_try_from_int_conv\", since = \"1.46.0\")] }\n nzint_impl_try_from_int! { i128, NonZeroI128, #[stable(feature = \"nzint_try_from_int_conv\", since = \"1.46.0\")] }\n nzint_impl_try_from_int! { isize, NonZeroIsize, #[stable(feature = \"nzint_try_from_int_conv\", since = \"1.46.0\")] }\n+\n+macro_rules! nzint_impl_try_from_nzint {\n+    ($From:ty => $To:ty, $doc: expr) => {\n+        #[stable(feature = \"nzint_try_from_nzint_conv\", since = \"1.49.0\")]\n+        #[doc = $doc]\n+        impl TryFrom<$From> for $To {\n+            type Error = TryFromIntError;\n+\n+            #[inline]\n+            fn try_from(value: $From) -> Result<Self, Self::Error> {\n+                TryFrom::try_from(value.get()).map(|v| {\n+                    // SAFETY: $From is a NonZero type, so v is not zero.\n+                    unsafe { Self::new_unchecked(v) }\n+                })\n+            }\n+        }\n+    };\n+    ($To:ty: $($From: ty),*) => {$(\n+        nzint_impl_try_from_nzint!(\n+            $From => $To,\n+            concat!(\n+                \"Attempts to convert `\",\n+                stringify!($From),\n+                \"` to `\",\n+                stringify!($To),\n+                \"`.\",\n+            )\n+        );\n+    )*};\n+}\n+\n+// Non-zero int -> non-zero unsigned int\n+nzint_impl_try_from_nzint! { NonZeroU8: NonZeroI8, NonZeroU16, NonZeroI16, NonZeroU32, NonZeroI32, NonZeroU64, NonZeroI64, NonZeroU128, NonZeroI128, NonZeroUsize, NonZeroIsize }\n+nzint_impl_try_from_nzint! { NonZeroU16: NonZeroI8, NonZeroI16, NonZeroU32, NonZeroI32, NonZeroU64, NonZeroI64, NonZeroU128, NonZeroI128, NonZeroUsize, NonZeroIsize }\n+nzint_impl_try_from_nzint! { NonZeroU32: NonZeroI8, NonZeroI16, NonZeroI32, NonZeroU64, NonZeroI64, NonZeroU128, NonZeroI128, NonZeroUsize, NonZeroIsize }\n+nzint_impl_try_from_nzint! { NonZeroU64: NonZeroI8, NonZeroI16, NonZeroI32, NonZeroI64, NonZeroU128, NonZeroI128, NonZeroUsize, NonZeroIsize }\n+nzint_impl_try_from_nzint! { NonZeroU128: NonZeroI8, NonZeroI16, NonZeroI32, NonZeroI64, NonZeroI128, NonZeroUsize, NonZeroIsize }\n+nzint_impl_try_from_nzint! { NonZeroUsize: NonZeroI8, NonZeroI16, NonZeroU32, NonZeroI32, NonZeroU64, NonZeroI64, NonZeroU128, NonZeroI128, NonZeroIsize }\n+\n+// Non-zero int -> non-zero signed int\n+nzint_impl_try_from_nzint! { NonZeroI8: NonZeroU8, NonZeroU16, NonZeroI16, NonZeroU32, NonZeroI32, NonZeroU64, NonZeroI64, NonZeroU128, NonZeroI128, NonZeroUsize, NonZeroIsize }\n+nzint_impl_try_from_nzint! { NonZeroI16: NonZeroU16, NonZeroU32, NonZeroI32, NonZeroU64, NonZeroI64, NonZeroU128, NonZeroI128, NonZeroUsize, NonZeroIsize }\n+nzint_impl_try_from_nzint! { NonZeroI32: NonZeroU32, NonZeroU64, NonZeroI64, NonZeroU128, NonZeroI128, NonZeroUsize, NonZeroIsize }\n+nzint_impl_try_from_nzint! { NonZeroI64: NonZeroU64, NonZeroU128, NonZeroI128, NonZeroUsize, NonZeroIsize }\n+nzint_impl_try_from_nzint! { NonZeroI128: NonZeroU128, NonZeroUsize, NonZeroIsize }\n+nzint_impl_try_from_nzint! { NonZeroIsize: NonZeroU16, NonZeroU32, NonZeroI32, NonZeroU64, NonZeroI64, NonZeroU128, NonZeroI128, NonZeroUsize }"}]}