{"sha": "1ac632627b7fc172887d0b8395cb8c8997c72274", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFhYzYzMjYyN2I3ZmMxNzI4ODdkMGI4Mzk1Y2I4Yzg5OTdjNzIyNzQ=", "commit": {"author": {"name": "Christiaan Dirkx", "email": "christiaan@dirkx.email", "date": "2021-04-28T17:11:57Z"}, "committer": {"name": "Christiaan Dirkx", "email": "christiaan@dirkx.email", "date": "2021-04-28T17:11:57Z"}, "message": "Remove `DropGuard` in `sys::windows::process` and use `StaticMutex` instead", "tree": {"sha": "f336ecabf74b36830361feb0bc3570157174aac0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f336ecabf74b36830361feb0bc3570157174aac0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1ac632627b7fc172887d0b8395cb8c8997c72274", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1ac632627b7fc172887d0b8395cb8c8997c72274", "html_url": "https://github.com/rust-lang/rust/commit/1ac632627b7fc172887d0b8395cb8c8997c72274", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1ac632627b7fc172887d0b8395cb8c8997c72274/comments", "author": {"login": "CDirkx", "id": 11176562, "node_id": "MDQ6VXNlcjExMTc2NTYy", "avatar_url": "https://avatars.githubusercontent.com/u/11176562?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CDirkx", "html_url": "https://github.com/CDirkx", "followers_url": "https://api.github.com/users/CDirkx/followers", "following_url": "https://api.github.com/users/CDirkx/following{/other_user}", "gists_url": "https://api.github.com/users/CDirkx/gists{/gist_id}", "starred_url": "https://api.github.com/users/CDirkx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CDirkx/subscriptions", "organizations_url": "https://api.github.com/users/CDirkx/orgs", "repos_url": "https://api.github.com/users/CDirkx/repos", "events_url": "https://api.github.com/users/CDirkx/events{/privacy}", "received_events_url": "https://api.github.com/users/CDirkx/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CDirkx", "id": 11176562, "node_id": "MDQ6VXNlcjExMTc2NTYy", "avatar_url": "https://avatars.githubusercontent.com/u/11176562?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CDirkx", "html_url": "https://github.com/CDirkx", "followers_url": "https://api.github.com/users/CDirkx/followers", "following_url": "https://api.github.com/users/CDirkx/following{/other_user}", "gists_url": "https://api.github.com/users/CDirkx/gists{/gist_id}", "starred_url": "https://api.github.com/users/CDirkx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CDirkx/subscriptions", "organizations_url": "https://api.github.com/users/CDirkx/orgs", "repos_url": "https://api.github.com/users/CDirkx/repos", "events_url": "https://api.github.com/users/CDirkx/events{/privacy}", "received_events_url": "https://api.github.com/users/CDirkx/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "76a04dd3f8b2500d9e524dca122814fd5a3e25e4", "url": "https://api.github.com/repos/rust-lang/rust/commits/76a04dd3f8b2500d9e524dca122814fd5a3e25e4", "html_url": "https://github.com/rust-lang/rust/commit/76a04dd3f8b2500d9e524dca122814fd5a3e25e4"}], "stats": {"total": 28, "additions": 4, "deletions": 24}, "files": [{"sha": "a5799606142ec2b44e850399772a8fb14e84e3f2", "filename": "library/std/src/sys/windows/process.rs", "status": "modified", "additions": 4, "deletions": 24, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/1ac632627b7fc172887d0b8395cb8c8997c72274/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ac632627b7fc172887d0b8395cb8c8997c72274/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fprocess.rs?ref=1ac632627b7fc172887d0b8395cb8c8997c72274", "patch": "@@ -19,9 +19,9 @@ use crate::sys::c;\n use crate::sys::cvt;\n use crate::sys::fs::{File, OpenOptions};\n use crate::sys::handle::Handle;\n-use crate::sys::mutex::Mutex;\n use crate::sys::pipe::{self, AnonPipe};\n use crate::sys::stdio;\n+use crate::sys_common::mutex::StaticMutex;\n use crate::sys_common::process::{CommandEnv, CommandEnvs};\n use crate::sys_common::AsInner;\n \n@@ -94,10 +94,6 @@ pub struct StdioPipes {\n     pub stderr: Option<AnonPipe>,\n }\n \n-struct DropGuard<'a> {\n-    lock: &'a Mutex,\n-}\n-\n impl Command {\n     pub fn new(program: &OsStr) -> Command {\n         Command {\n@@ -209,8 +205,9 @@ impl Command {\n         //\n         // For more information, msdn also has an article about this race:\n         // http://support.microsoft.com/kb/315939\n-        static CREATE_PROCESS_LOCK: Mutex = Mutex::new();\n-        let _guard = DropGuard::new(&CREATE_PROCESS_LOCK);\n+        static CREATE_PROCESS_LOCK: StaticMutex = StaticMutex::new();\n+\n+        let _guard = unsafe { CREATE_PROCESS_LOCK.lock() };\n \n         let mut pipes = StdioPipes { stdin: None, stdout: None, stderr: None };\n         let null = Stdio::Null;\n@@ -259,23 +256,6 @@ impl fmt::Debug for Command {\n     }\n }\n \n-impl<'a> DropGuard<'a> {\n-    fn new(lock: &'a Mutex) -> DropGuard<'a> {\n-        unsafe {\n-            lock.lock();\n-            DropGuard { lock }\n-        }\n-    }\n-}\n-\n-impl<'a> Drop for DropGuard<'a> {\n-    fn drop(&mut self) {\n-        unsafe {\n-            self.lock.unlock();\n-        }\n-    }\n-}\n-\n impl Stdio {\n     fn to_handle(&self, stdio_id: c::DWORD, pipe: &mut Option<AnonPipe>) -> io::Result<Handle> {\n         match *self {"}]}