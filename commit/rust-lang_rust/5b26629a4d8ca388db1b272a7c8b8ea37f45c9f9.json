{"sha": "5b26629a4d8ca388db1b272a7c8b8ea37f45c9f9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjViMjY2MjlhNGQ4Y2EzODhkYjFiMjcyYTdjOGI4ZWEzN2Y0NWM5Zjk=", "commit": {"author": {"name": "Igor Aleksanov", "email": "popzxc@yandex.ru", "date": "2020-09-05T13:21:14Z"}, "committer": {"name": "Igor Aleksanov", "email": "popzxc@yandex.ru", "date": "2020-10-02T09:35:22Z"}, "message": "Support 'runnables' options in the vs code extension", "tree": {"sha": "6d056f5658df00cff3c4acadf73d80f7d832d915", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6d056f5658df00cff3c4acadf73d80f7d832d915"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5b26629a4d8ca388db1b272a7c8b8ea37f45c9f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5b26629a4d8ca388db1b272a7c8b8ea37f45c9f9", "html_url": "https://github.com/rust-lang/rust/commit/5b26629a4d8ca388db1b272a7c8b8ea37f45c9f9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5b26629a4d8ca388db1b272a7c8b8ea37f45c9f9/comments", "author": {"login": "popzxc", "id": 12111581, "node_id": "MDQ6VXNlcjEyMTExNTgx", "avatar_url": "https://avatars.githubusercontent.com/u/12111581?v=4", "gravatar_id": "", "url": "https://api.github.com/users/popzxc", "html_url": "https://github.com/popzxc", "followers_url": "https://api.github.com/users/popzxc/followers", "following_url": "https://api.github.com/users/popzxc/following{/other_user}", "gists_url": "https://api.github.com/users/popzxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/popzxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/popzxc/subscriptions", "organizations_url": "https://api.github.com/users/popzxc/orgs", "repos_url": "https://api.github.com/users/popzxc/repos", "events_url": "https://api.github.com/users/popzxc/events{/privacy}", "received_events_url": "https://api.github.com/users/popzxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "popzxc", "id": 12111581, "node_id": "MDQ6VXNlcjEyMTExNTgx", "avatar_url": "https://avatars.githubusercontent.com/u/12111581?v=4", "gravatar_id": "", "url": "https://api.github.com/users/popzxc", "html_url": "https://github.com/popzxc", "followers_url": "https://api.github.com/users/popzxc/followers", "following_url": "https://api.github.com/users/popzxc/following{/other_user}", "gists_url": "https://api.github.com/users/popzxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/popzxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/popzxc/subscriptions", "organizations_url": "https://api.github.com/users/popzxc/orgs", "repos_url": "https://api.github.com/users/popzxc/repos", "events_url": "https://api.github.com/users/popzxc/events{/privacy}", "received_events_url": "https://api.github.com/users/popzxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4a1b4b23bb58398a7e2a955e0be43ff2c09fe9e5", "url": "https://api.github.com/repos/rust-lang/rust/commits/4a1b4b23bb58398a7e2a955e0be43ff2c09fe9e5", "html_url": "https://github.com/rust-lang/rust/commit/4a1b4b23bb58398a7e2a955e0be43ff2c09fe9e5"}], "stats": {"total": 33, "additions": 31, "deletions": 2}, "files": [{"sha": "cc2ac3bd2696457654a48414c047a0ae91aaafef", "filename": "editors/code/package.json", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/5b26629a4d8ca388db1b272a7c8b8ea37f45c9f9/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/5b26629a4d8ca388db1b272a7c8b8ea37f45c9f9/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=5b26629a4d8ca388db1b272a7c8b8ea37f45c9f9", "patch": "@@ -651,6 +651,22 @@\n                     ],\n                     \"default\": \"full\",\n                     \"description\": \"The strategy to use when inserting new imports or merging imports.\"\n+                },\n+                \"rust-analyzer.runnables.overrideCargo\": {\n+                    \"type\": [\n+                        \"null\",\n+                        \"string\"\n+                    ],\n+                    \"default\": null,\n+                    \"description\": \"Command to be executed instead of 'cargo' for runnables.\"\n+                },\n+                \"rust-analyzer.runnables.cargoExtraArgs\": {\n+                    \"type\": \"array\",\n+                    \"items\": {\n+                        \"type\": \"string\"\n+                    },\n+                    \"default\": [],\n+                    \"description\": \"Additional arguments to be passed to cargo for runnables such as tests or binaries.\\nFor example, it may be '--release'\"\n                 }\n             }\n         },"}, {"sha": "f286b68a68585848337268bce17dcce38dc2f76b", "filename": "editors/code/src/lsp_ext.ts", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5b26629a4d8ca388db1b272a7c8b8ea37f45c9f9/editors%2Fcode%2Fsrc%2Flsp_ext.ts", "raw_url": "https://github.com/rust-lang/rust/raw/5b26629a4d8ca388db1b272a7c8b8ea37f45c9f9/editors%2Fcode%2Fsrc%2Flsp_ext.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Flsp_ext.ts?ref=5b26629a4d8ca388db1b272a7c8b8ea37f45c9f9", "patch": "@@ -69,8 +69,10 @@ export interface Runnable {\n     args: {\n         workspaceRoot?: string;\n         cargoArgs: string[];\n+        cargoExtraArgs: string[];\n         executableArgs: string[];\n         expectTest?: boolean;\n+        overrideCargo?: string;\n     };\n }\n export const runnables = new lc.RequestType<RunnablesParams, Runnable[], void>(\"experimental/runnables\");"}, {"sha": "459b7f250d289219a5127261a7bfa6babf097095", "filename": "editors/code/src/run.ts", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5b26629a4d8ca388db1b272a7c8b8ea37f45c9f9/editors%2Fcode%2Fsrc%2Frun.ts", "raw_url": "https://github.com/rust-lang/rust/raw/5b26629a4d8ca388db1b272a7c8b8ea37f45c9f9/editors%2Fcode%2Fsrc%2Frun.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Frun.ts?ref=5b26629a4d8ca388db1b272a7c8b8ea37f45c9f9", "patch": "@@ -129,6 +129,7 @@ export async function createTask(runnable: ra.Runnable, config: Config): Promise\n     }\n \n     const args = [...runnable.args.cargoArgs]; // should be a copy!\n+    args.push(...runnable.args.cargoExtraArgs); // Append user-specified cargo options.\n     if (runnable.args.executableArgs.length > 0) {\n         args.push('--', ...runnable.args.executableArgs);\n     }\n@@ -139,6 +140,7 @@ export async function createTask(runnable: ra.Runnable, config: Config): Promise\n         args: args.slice(1),\n         cwd: runnable.args.workspaceRoot || \".\",\n         env: prepareEnv(runnable, config.runnableEnv),\n+        overrideCargo: runnable.args.overrideCargo,\n     };\n \n     const target = vscode.workspace.workspaceFolders![0]; // safe, see main activate()"}, {"sha": "a3ff1510256602665a8ed602f6f5e68245537e95", "filename": "editors/code/src/tasks.ts", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5b26629a4d8ca388db1b272a7c8b8ea37f45c9f9/editors%2Fcode%2Fsrc%2Ftasks.ts", "raw_url": "https://github.com/rust-lang/rust/raw/5b26629a4d8ca388db1b272a7c8b8ea37f45c9f9/editors%2Fcode%2Fsrc%2Ftasks.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Ftasks.ts?ref=5b26629a4d8ca388db1b272a7c8b8ea37f45c9f9", "patch": "@@ -13,6 +13,7 @@ export interface CargoTaskDefinition extends vscode.TaskDefinition {\n     args?: string[];\n     cwd?: string;\n     env?: { [key: string]: string };\n+    overrideCargo?: string;\n }\n \n class CargoTaskProvider implements vscode.TaskProvider {\n@@ -98,7 +99,14 @@ export async function buildCargoTask(\n     }\n \n     if (!exec) {\n-        exec = new vscode.ShellExecution(toolchain.cargoPath(), args, definition);\n+        // Check whether we must use a user-defined substitute for cargo.\n+        const cargoCommand = definition.overrideCargo ? definition.overrideCargo : toolchain.cargoPath();\n+\n+        // Prepare the whole command as one line. It is required if user has provided override command which contains spaces,\n+        // for example \"wrapper cargo\". Without manual preparation the overridden command will be quoted and fail to execute.\n+        const fullCommand = [cargoCommand, ...args].join(\" \");\n+\n+        exec = new vscode.ShellExecution(fullCommand, definition);\n     }\n \n     return new vscode.Task("}, {"sha": "c5600cf64f3888d376f534f795303ae38087bd79", "filename": "editors/code/tests/unit/runnable_env.test.ts", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5b26629a4d8ca388db1b272a7c8b8ea37f45c9f9/editors%2Fcode%2Ftests%2Funit%2Frunnable_env.test.ts", "raw_url": "https://github.com/rust-lang/rust/raw/5b26629a4d8ca388db1b272a7c8b8ea37f45c9f9/editors%2Fcode%2Ftests%2Funit%2Frunnable_env.test.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Ftests%2Funit%2Frunnable_env.test.ts?ref=5b26629a4d8ca388db1b272a7c8b8ea37f45c9f9", "patch": "@@ -9,7 +9,8 @@ function makeRunnable(label: string): ra.Runnable {\n         kind: \"cargo\",\n         args: {\n             cargoArgs: [],\n-            executableArgs: []\n+            executableArgs: [],\n+            cargoExtraArgs: []\n         }\n     };\n }"}]}