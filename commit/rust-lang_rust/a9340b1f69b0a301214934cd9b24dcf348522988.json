{"sha": "a9340b1f69b0a301214934cd9b24dcf348522988", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE5MzQwYjFmNjliMGEzMDEyMTQ5MzRjZDliMjRkY2YzNDg1MjI5ODg=", "commit": {"author": {"name": "Donough Liu", "email": "ldm2993593805@163.com", "date": "2020-04-28T02:58:06Z"}, "committer": {"name": "Donough Liu", "email": "ldm2993593805@163.com", "date": "2020-04-29T05:06:02Z"}, "message": "Rename function to `suggest_deref_ref_or_into` because it's suggesting\nderefence instructions", "tree": {"sha": "42a45b994500b49778176798f1720c6dd7713bc9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/42a45b994500b49778176798f1720c6dd7713bc9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a9340b1f69b0a301214934cd9b24dcf348522988", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a9340b1f69b0a301214934cd9b24dcf348522988", "html_url": "https://github.com/rust-lang/rust/commit/a9340b1f69b0a301214934cd9b24dcf348522988", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a9340b1f69b0a301214934cd9b24dcf348522988/comments", "author": {"login": "ldm0", "id": 31354274, "node_id": "MDQ6VXNlcjMxMzU0Mjc0", "avatar_url": "https://avatars.githubusercontent.com/u/31354274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ldm0", "html_url": "https://github.com/ldm0", "followers_url": "https://api.github.com/users/ldm0/followers", "following_url": "https://api.github.com/users/ldm0/following{/other_user}", "gists_url": "https://api.github.com/users/ldm0/gists{/gist_id}", "starred_url": "https://api.github.com/users/ldm0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ldm0/subscriptions", "organizations_url": "https://api.github.com/users/ldm0/orgs", "repos_url": "https://api.github.com/users/ldm0/repos", "events_url": "https://api.github.com/users/ldm0/events{/privacy}", "received_events_url": "https://api.github.com/users/ldm0/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ldm0", "id": 31354274, "node_id": "MDQ6VXNlcjMxMzU0Mjc0", "avatar_url": "https://avatars.githubusercontent.com/u/31354274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ldm0", "html_url": "https://github.com/ldm0", "followers_url": "https://api.github.com/users/ldm0/followers", "following_url": "https://api.github.com/users/ldm0/following{/other_user}", "gists_url": "https://api.github.com/users/ldm0/gists{/gist_id}", "starred_url": "https://api.github.com/users/ldm0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ldm0/subscriptions", "organizations_url": "https://api.github.com/users/ldm0/orgs", "repos_url": "https://api.github.com/users/ldm0/repos", "events_url": "https://api.github.com/users/ldm0/events{/privacy}", "received_events_url": "https://api.github.com/users/ldm0/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "edfca5fe9c7b6c12a9d48ea2dffd6fffff8501a4", "url": "https://api.github.com/repos/rust-lang/rust/commits/edfca5fe9c7b6c12a9d48ea2dffd6fffff8501a4", "html_url": "https://github.com/rust-lang/rust/commit/edfca5fe9c7b6c12a9d48ea2dffd6fffff8501a4"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "8c3a0103037684d029c4594787aa6e30fd662d51", "filename": "src/librustc_typeck/check/demand.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a9340b1f69b0a301214934cd9b24dcf348522988/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a9340b1f69b0a301214934cd9b24dcf348522988/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs?ref=a9340b1f69b0a301214934cd9b24dcf348522988", "patch": "@@ -25,7 +25,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n     ) {\n         self.annotate_expected_due_to_let_ty(err, expr);\n         self.suggest_compatible_variants(err, expr, expected, expr_ty);\n-        self.suggest_ref_or_into(err, expr, expected, expr_ty);\n+        self.suggest_deref_ref_or_into(err, expr, expected, expr_ty);\n         if self.suggest_calling_boxed_future_when_appropriate(err, expr, expected, expr_ty) {\n             return;\n         }"}, {"sha": "92ddfbff824cdc2559c0c4a891fe00e11cdfa4cd", "filename": "src/librustc_typeck/check/expr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a9340b1f69b0a301214934cd9b24dcf348522988/src%2Flibrustc_typeck%2Fcheck%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a9340b1f69b0a301214934cd9b24dcf348522988/src%2Flibrustc_typeck%2Fcheck%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fexpr.rs?ref=a9340b1f69b0a301214934cd9b24dcf348522988", "patch": "@@ -86,7 +86,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n \n         if let Some(mut err) = self.demand_suptype_diag(expr.span, expected_ty, ty) {\n             let expr = expr.peel_drop_temps();\n-            self.suggest_ref_or_into(&mut err, expr, expected_ty, ty);\n+            self.suggest_deref_ref_or_into(&mut err, expr, expected_ty, ty);\n             extend_err(&mut err);\n             // Error possibly reported in `check_assign` so avoid emitting error again.\n             err.emit_unless(self.is_assign_to_bool(expr, expected_ty));"}, {"sha": "adbab3d4cb620c1543af1bee8dabb76d42e8235e", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a9340b1f69b0a301214934cd9b24dcf348522988/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a9340b1f69b0a301214934cd9b24dcf348522988/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=a9340b1f69b0a301214934cd9b24dcf348522988", "patch": "@@ -5029,7 +5029,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         false\n     }\n \n-    pub fn suggest_ref_or_into(\n+    pub fn suggest_deref_ref_or_into(\n         &self,\n         err: &mut DiagnosticBuilder<'_>,\n         expr: &hir::Expr<'_>,"}]}