{"sha": "bc4e9afe2547fa88b55ffc31fef041dffe864b2b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJjNGU5YWZlMjU0N2ZhODhiNTVmZmMzMWZlZjA0MWRmZmU4NjRiMmI=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-07-30T01:44:47Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-07-30T01:48:15Z"}, "message": "Fix bug in typechecker counting occurrences of typarams in instantiation rather than checking formals list.", "tree": {"sha": "8ba244f91f4833b07e2ad9d12e5d3bb8662755b6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8ba244f91f4833b07e2ad9d12e5d3bb8662755b6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bc4e9afe2547fa88b55ffc31fef041dffe864b2b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bc4e9afe2547fa88b55ffc31fef041dffe864b2b", "html_url": "https://github.com/rust-lang/rust/commit/bc4e9afe2547fa88b55ffc31fef041dffe864b2b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bc4e9afe2547fa88b55ffc31fef041dffe864b2b/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0c9b749d208ccc75f03ab9f7fce1322aa5dbbfd3", "url": "https://api.github.com/repos/rust-lang/rust/commits/0c9b749d208ccc75f03ab9f7fce1322aa5dbbfd3", "html_url": "https://github.com/rust-lang/rust/commit/0c9b749d208ccc75f03ab9f7fce1322aa5dbbfd3"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "b2b49340fb54556f772bb68e70027f1e712d6ae3", "filename": "src/comp/middle/typeck.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/bc4e9afe2547fa88b55ffc31fef041dffe864b2b/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc4e9afe2547fa88b55ffc31fef041dffe864b2b/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftypeck.rs?ref=bc4e9afe2547fa88b55ffc31fef041dffe864b2b", "patch": "@@ -287,9 +287,9 @@ fn ast_ty_to_ty(tcx: &ty::ctxt, getter: &ty_getter, ast_ty: &@ast::ty) ->\n         // TODO: maybe record cname chains so we can do\n         // \"foo = int\" like OCaml?\n \n-        let params_opt_and_ty = getter(id);\n-        if ivec::len(params_opt_and_ty.kinds) == 0u {\n-            ret params_opt_and_ty.ty;\n+        let ty_param_kinds_and_ty = getter(id);\n+        if ivec::len(ty_param_kinds_and_ty.kinds) == 0u {\n+            ret ty_param_kinds_and_ty.ty;\n         }\n         // The typedef is type-parametric. Do the type substitution.\n         //\n@@ -299,14 +299,14 @@ fn ast_ty_to_ty(tcx: &ty::ctxt, getter: &ty_getter, ast_ty: &@ast::ty) ->\n             param_bindings += ~[ast_ty_to_ty(tcx, getter, ast_ty)];\n         }\n         if ivec::len(param_bindings) !=\n-               ty::count_ty_params(tcx, params_opt_and_ty.ty) {\n+            ivec::len(ty_param_kinds_and_ty.kinds) {\n             tcx.sess.span_fatal(sp,\n                                 \"Wrong number of type arguments for a \\\n-                                polymorphic tag\");\n+                                 polymorphic type\");\n         }\n         let typ =\n             ty::substitute_type_params(tcx, param_bindings,\n-                                       params_opt_and_ty.ty);\n+                                       ty_param_kinds_and_ty.ty);\n         ret typ;\n     }\n     let typ;"}]}