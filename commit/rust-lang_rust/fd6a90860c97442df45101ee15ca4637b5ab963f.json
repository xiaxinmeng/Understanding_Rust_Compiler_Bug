{"sha": "fd6a90860c97442df45101ee15ca4637b5ab963f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZkNmE5MDg2MGM5NzQ0MmRmNDUxMDFlZTE1Y2E0NjM3YjVhYjk2M2Y=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-11-18T09:36:01Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-11-18T09:36:01Z"}, "message": "simplify dumping of pointers to the zst or never alloc", "tree": {"sha": "f84b6dac248d4d9cfe4cadccd667a74e768e64c2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f84b6dac248d4d9cfe4cadccd667a74e768e64c2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fd6a90860c97442df45101ee15ca4637b5ab963f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJYLsuBAAoJEFbW7qD8Z6xGBfMQAKYKckJAbrXn/CjLpQBljqbi\nD+7nfbXK58cA6o8aQJ9ve+XIXYuxZbGglYLfXiZhC1meXH7XKsBcXkQqzgz1vvCs\nG0iM1fRE9FaYx3CEHYXrCdDxo4kS5ViXCg1P/y8ERK6WW8tCS/exp0H8/pLfzomN\noKhhfyIE15GAyrh9KbrZ5u02JjyGzBR643a3a3rxbydaV09EeEsyi1r7NAahLGvC\nrIwh5iZOzIHvpW8QX9ty1uQKY4VzLicr3/bKXDTiVc7OKqKwlW7jjlJUDqCVN94+\nA8NHlP+CS61Wl7dX7r6P7dd+R2ymvEHEqBLwIqebqb97SvkJNu6FbifXszsDRmT/\nLELFs9/HRpvT7nIw1dcGDT8z/aVitcJSaKnvazcFknumnmm53n836ry2AS2FawdT\nlfNGTGlCRLT/w6ZmpDaVZTeYCJ65ip08P+VHsxXUfM9fmRaWwIu33MB1I2GzyGsa\n5mKwQH6dpCeWTbQ6sQnVFWarCUpr0a9I6sd6YOSkAe0NpYxQSrOpmALt4LomyW6B\nPblC/jR/tdSMo4SjAKorogV2WCF5h8W+2bWG1Z4EWF5ZT0ACjDT2/zPY8/zen42a\nc1YcZVikqFH6RNCC//8WQ4Fnbj3UrnFi8BraGlgY5wvGVbt0nzMkwYvbZNWwgo7U\n9uKFrOc1D/byS6XI6AGV\n=fCVg\n-----END PGP SIGNATURE-----", "payload": "tree f84b6dac248d4d9cfe4cadccd667a74e768e64c2\nparent 11a0594a1d94aa6ce39692e9dc46059a0d7c4d08\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1479461761 +0100\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1479461761 +0100\n\nsimplify dumping of pointers to the zst or never alloc"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fd6a90860c97442df45101ee15ca4637b5ab963f", "html_url": "https://github.com/rust-lang/rust/commit/fd6a90860c97442df45101ee15ca4637b5ab963f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fd6a90860c97442df45101ee15ca4637b5ab963f/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "11a0594a1d94aa6ce39692e9dc46059a0d7c4d08", "url": "https://api.github.com/repos/rust-lang/rust/commits/11a0594a1d94aa6ce39692e9dc46059a0d7c4d08", "html_url": "https://github.com/rust-lang/rust/commit/11a0594a1d94aa6ce39692e9dc46059a0d7c4d08"}], "stats": {"total": 12, "additions": 7, "deletions": 5}, "files": [{"sha": "548eb78c9678e47241103492a8ff55b9ba10ee17", "filename": "src/memory.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/fd6a90860c97442df45101ee15ca4637b5ab963f/src%2Fmemory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd6a90860c97442df45101ee15ca4637b5ab963f/src%2Fmemory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmemory.rs?ref=fd6a90860c97442df45101ee15ca4637b5ab963f", "patch": "@@ -339,11 +339,8 @@ impl<'a, 'tcx> Memory<'a, 'tcx> {\n \n         while let Some(id) = allocs_to_print.pop_front() {\n             allocs_seen.insert(id);\n+            if id == ZST_ALLOC_ID || id == NEVER_ALLOC_ID { continue; }\n             let mut msg = format!(\"Alloc {:<5} \", format!(\"{}:\", id));\n-            if id == ZST_ALLOC_ID {\n-                trace!(\"{} zst allocation\", msg);\n-                continue;\n-            }\n             let prefix_len = msg.len();\n             let mut relocations = vec![];\n \n@@ -385,7 +382,12 @@ impl<'a, 'tcx> Memory<'a, 'tcx> {\n                 let relocation_width = (self.pointer_size() - 1) * 3;\n                 for (i, target_id) in relocations {\n                     write!(msg, \"{:1$}\", \"\", (i - pos) * 3).unwrap();\n-                    write!(msg, \"\u2514{0:\u2500^1$}\u2518 \", format!(\"({})\", target_id), relocation_width).unwrap();\n+                    let target = match target_id {\n+                        ZST_ALLOC_ID => String::from(\"zst\"),\n+                        NEVER_ALLOC_ID => String::from(\"int ptr\"),\n+                        _ => format!(\"({})\", target_id),\n+                    };\n+                    write!(msg, \"\u2514{0:\u2500^1$}\u2518 \", target, relocation_width).unwrap();\n                     pos = i + self.pointer_size();\n                 }\n                 trace!(\"{}\", msg);"}]}