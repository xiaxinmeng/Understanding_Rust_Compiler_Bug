{"sha": "c1efc33941c53720f31a2667176e82deddad6a51", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMxZWZjMzM5NDFjNTM3MjBmMzFhMjY2NzE3NmU4MmRlZGRhZDZhNTE=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-07-25T11:17:49Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-07-25T11:17:49Z"}, "message": "Fix panic", "tree": {"sha": "2a94bc46eaed8b053b675ff1e46d86f4664cd986", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2a94bc46eaed8b053b675ff1e46d86f4664cd986"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c1efc33941c53720f31a2667176e82deddad6a51", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c1efc33941c53720f31a2667176e82deddad6a51", "html_url": "https://github.com/rust-lang/rust/commit/c1efc33941c53720f31a2667176e82deddad6a51", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c1efc33941c53720f31a2667176e82deddad6a51/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e8f1c5c53ab10a72f17ca0816b5890377ba5fc9c", "url": "https://api.github.com/repos/rust-lang/rust/commits/e8f1c5c53ab10a72f17ca0816b5890377ba5fc9c", "html_url": "https://github.com/rust-lang/rust/commit/e8f1c5c53ab10a72f17ca0816b5890377ba5fc9c"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "421315810886388af09a62c2ebc4d4c819d35f0c", "filename": "src/common.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/c1efc33941c53720f31a2667176e82deddad6a51/src%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c1efc33941c53720f31a2667176e82deddad6a51/src%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcommon.rs?ref=c1efc33941c53720f31a2667176e82deddad6a51", "patch": "@@ -83,10 +83,12 @@ fn clif_pair_type_from_ty<'tcx>(tcx: TyCtxt<'tcx>, ty: Ty<'tcx>) -> Option<(type\n     Some(match ty.kind {\n         ty::Tuple(substs) if substs.len() == 2 => {\n             let mut types = substs.types();\n-            (\n-                clif_type_from_ty(tcx, types.next().unwrap())?,\n-                clif_type_from_ty(tcx, types.next().unwrap())?,\n-            )\n+            let a = clif_type_from_ty(tcx, types.next().unwrap())?;\n+            let b = clif_type_from_ty(tcx, types.next().unwrap())?;\n+            if a.is_vector() || b.is_vector() {\n+                return None;\n+            }\n+            (a, b)\n         }\n         ty::RawPtr(TypeAndMut { ty: pointee_ty, mutbl: _ }) | ty::Ref(_, pointee_ty, _) => {\n             if has_ptr_meta(tcx, pointee_ty) {"}]}