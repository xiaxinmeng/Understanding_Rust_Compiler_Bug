{"sha": "1fdf7d18ad2f74ecb3e4a113ae3251bef4521e2c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFmZGY3ZDE4YWQyZjc0ZWNiM2U0YTExM2FlMzI1MWJlZjQ1MjFlMmM=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2021-03-22T14:21:29Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-03-22T14:21:29Z"}, "message": "Rollup merge of #83351 - RalfJung:precise-const-drop, r=oli-obk\n\npost-drop-elab check-const: explain why we still check qualifs\n\nr? `@oli-obk`", "tree": {"sha": "5bdd15819a15dd6d40275859ba5febad3fdec9ef", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5bdd15819a15dd6d40275859ba5febad3fdec9ef"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1fdf7d18ad2f74ecb3e4a113ae3251bef4521e2c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgWKfpCRBK7hj4Ov3rIwAAdHIIAIEWQi8dQX8FhGvU0xgkWS8h\nt2djUwJ6uJzLLzXtjI3CnoCsph/D7VrXBLpRhbreqN9SG1G56b0vtslsElaAkuk8\nhUBE8RlIhMkeFTOS+dFSEv35pgKUGnZH+ScyUGseoQC1CKWsADH17FbxPgyQLpd9\nEmDp+aZHM3pqpsrvS+8aHCuuozZZiOP1a1UsUyaJbv6YJc+n2923BYFahbUn3T8j\n+9ZnPOLNGYYFgwbJiuNuwvbaAFH7/gzBeT1ywxj0Llp2guSp9mlDsJ/cofhRitHW\n6SW+A8mG0Phki4cxvnRwt2Bigu8wYNXVojtsOrEHsbtUlG6S/V7V91JGFi3ANds=\n=jaOA\n-----END PGP SIGNATURE-----\n", "payload": "tree 5bdd15819a15dd6d40275859ba5febad3fdec9ef\nparent b759044d3a035c77b1b57c652ea3707bb32386cf\nparent 4e7f1fa14fe54c20eb583dbf40efe3284d48a3b0\nauthor Dylan DPC <dylan.dpc@gmail.com> 1616422889 +0100\ncommitter GitHub <noreply@github.com> 1616422889 +0100\n\nRollup merge of #83351 - RalfJung:precise-const-drop, r=oli-obk\n\npost-drop-elab check-const: explain why we still check qualifs\n\nr? `@oli-obk`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1fdf7d18ad2f74ecb3e4a113ae3251bef4521e2c", "html_url": "https://github.com/rust-lang/rust/commit/1fdf7d18ad2f74ecb3e4a113ae3251bef4521e2c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1fdf7d18ad2f74ecb3e4a113ae3251bef4521e2c/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b759044d3a035c77b1b57c652ea3707bb32386cf", "url": "https://api.github.com/repos/rust-lang/rust/commits/b759044d3a035c77b1b57c652ea3707bb32386cf", "html_url": "https://github.com/rust-lang/rust/commit/b759044d3a035c77b1b57c652ea3707bb32386cf"}, {"sha": "4e7f1fa14fe54c20eb583dbf40efe3284d48a3b0", "url": "https://api.github.com/repos/rust-lang/rust/commits/4e7f1fa14fe54c20eb583dbf40efe3284d48a3b0", "html_url": "https://github.com/rust-lang/rust/commit/4e7f1fa14fe54c20eb583dbf40efe3284d48a3b0"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "057092b8ef574884b6970c370e4f5c3325fa1fc1", "filename": "compiler/rustc_mir/src/transform/check_consts/post_drop_elaboration.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1fdf7d18ad2f74ecb3e4a113ae3251bef4521e2c/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_consts%2Fpost_drop_elaboration.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fdf7d18ad2f74ecb3e4a113ae3251bef4521e2c/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_consts%2Fpost_drop_elaboration.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_consts%2Fpost_drop_elaboration.rs?ref=1fdf7d18ad2f74ecb3e4a113ae3251bef4521e2c", "patch": "@@ -79,14 +79,20 @@ impl Visitor<'tcx> for CheckLiveDrops<'mir, 'tcx> {\n             mir::TerminatorKind::Drop { place: dropped_place, .. } => {\n                 let dropped_ty = dropped_place.ty(self.body, self.tcx).ty;\n                 if !NeedsDrop::in_any_value_of_ty(self.ccx, dropped_ty) {\n-                    return;\n+                    bug!(\n+                        \"Drop elaboration left behind a Drop for a type that does not need dropping\"\n+                    );\n                 }\n \n                 if dropped_place.is_indirect() {\n                     self.check_live_drop(terminator.source_info.span);\n                     return;\n                 }\n \n+                // Drop elaboration is not precise enough to accept code like\n+                // `src/test/ui/consts/control-flow/drop-pass.rs`; e.g., when an `Option<Vec<T>>` is\n+                // initialized with `None` and never changed, it still emits drop glue.\n+                // Hence we additionally check the qualifs here to allow more code to pass.\n                 if self.qualifs.needs_drop(self.ccx, dropped_place.local, location) {\n                     // Use the span where the dropped local was declared for the error.\n                     let span = self.body.local_decls[dropped_place.local].source_info.span;"}]}