{"sha": "0617b925e83079ebebc53bc9a29a9e4105a39ec3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA2MTdiOTI1ZTgzMDc5ZWJlYmM1M2JjOWEyOWE5ZTQxMDVhMzllYzM=", "commit": {"author": {"name": "Tomas Gavenciak", "email": "gavento@ucw.cz", "date": "2018-03-28T07:22:44Z"}, "committer": {"name": "Tomas Gavenciak", "email": "gavento@ucw.cz", "date": "2018-05-02T20:17:31Z"}, "message": "Add tests for GAT parameter number and kindness", "tree": {"sha": "08ccb0bdffc6732c38a7713571deb5f1c65ddd49", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/08ccb0bdffc6732c38a7713571deb5f1c65ddd49"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0617b925e83079ebebc53bc9a29a9e4105a39ec3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0617b925e83079ebebc53bc9a29a9e4105a39ec3", "html_url": "https://github.com/rust-lang/rust/commit/0617b925e83079ebebc53bc9a29a9e4105a39ec3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0617b925e83079ebebc53bc9a29a9e4105a39ec3/comments", "author": {"login": "gavento", "id": 956446, "node_id": "MDQ6VXNlcjk1NjQ0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/956446?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gavento", "html_url": "https://github.com/gavento", "followers_url": "https://api.github.com/users/gavento/followers", "following_url": "https://api.github.com/users/gavento/following{/other_user}", "gists_url": "https://api.github.com/users/gavento/gists{/gist_id}", "starred_url": "https://api.github.com/users/gavento/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gavento/subscriptions", "organizations_url": "https://api.github.com/users/gavento/orgs", "repos_url": "https://api.github.com/users/gavento/repos", "events_url": "https://api.github.com/users/gavento/events{/privacy}", "received_events_url": "https://api.github.com/users/gavento/received_events", "type": "User", "site_admin": false}, "committer": {"login": "gavento", "id": 956446, "node_id": "MDQ6VXNlcjk1NjQ0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/956446?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gavento", "html_url": "https://github.com/gavento", "followers_url": "https://api.github.com/users/gavento/followers", "following_url": "https://api.github.com/users/gavento/following{/other_user}", "gists_url": "https://api.github.com/users/gavento/gists{/gist_id}", "starred_url": "https://api.github.com/users/gavento/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gavento/subscriptions", "organizations_url": "https://api.github.com/users/gavento/orgs", "repos_url": "https://api.github.com/users/gavento/repos", "events_url": "https://api.github.com/users/gavento/events{/privacy}", "received_events_url": "https://api.github.com/users/gavento/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a66a0110de5258507c30e26d7e7d055ffc080cfc", "url": "https://api.github.com/repos/rust-lang/rust/commits/a66a0110de5258507c30e26d7e7d055ffc080cfc", "html_url": "https://github.com/rust-lang/rust/commit/a66a0110de5258507c30e26d7e7d055ffc080cfc"}], "stats": {"total": 90, "additions": 90, "deletions": 0}, "files": [{"sha": "51527d4117c2c04c35ec02748bb9a1b0401ffb8e", "filename": "src/test/ui/rfc1598-generic-associated-types/parameter_number_and_kind.rs", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/0617b925e83079ebebc53bc9a29a9e4105a39ec3/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fparameter_number_and_kind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0617b925e83079ebebc53bc9a29a9e4105a39ec3/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fparameter_number_and_kind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fparameter_number_and_kind.rs?ref=0617b925e83079ebebc53bc9a29a9e4105a39ec3", "patch": "@@ -0,0 +1,56 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(generic_associated_types)]\n+#![feature(associated_type_defaults)]\n+\n+//FIXME(#44265): \"lifetime parameters are not allowed on this type\" errors will be addressed in a\n+//follow-up PR\n+\n+//FIXME(#44265): Update expected errors once E110 is resolved, now does not get past `trait Foo`\n+\n+trait Foo {\n+    type A<'a>;\n+    type B<'a, 'b>;\n+    type C;\n+    type D<T>;\n+    type E<'a, T>;\n+    // Test parameters in default values\n+    type FOk<T> = Self::E<'static, T>;\n+    //~^ ERROR type parameters are not allowed on this type [E0109]\n+    //~| ERROR lifetime parameters are not allowed on this type [E0110]\n+    type FErr1 = Self::E<'static, 'static>; // Error\n+    //~^ ERROR lifetime parameters are not allowed on this type [E0110]\n+    type FErr2<T> = Self::E<'static, T, u32>; // Error\n+    //~^ ERROR type parameters are not allowed on this type [E0109]\n+    //~| ERROR lifetime parameters are not allowed on this type [E0110]\n+}\n+\n+struct Fooy;\n+\n+impl Foo for Fooy {\n+    type A = u32; // Error: parameter expected\n+    type B<'a, T> = Vec<T>; // Error: lifetime param expected\n+    type C<'a> = u32; // Error: no param expected\n+    type D<'a> = u32; // Error: type param expected\n+    type E<T, U> = u32; // Error: lifetime expected as the first param\n+}\n+\n+struct Fooer;\n+\n+impl Foo for Fooer {\n+    type A<T> = u32; // Error: lifetime parameter expected\n+    type B<'a> = u32; // Error: another lifetime param expected\n+    type C<T> = T; // Error: no param expected\n+    type D<'b, T> = u32; // Error: unexpected lifetime param\n+    type E<'a, 'b> = u32; // Error: type expected as the second param\n+}\n+\n+fn main() {}"}, {"sha": "df83fdaad5bfa66f13ce9210569fe1a31e288faf", "filename": "src/test/ui/rfc1598-generic-associated-types/parameter_number_and_kind.stderr", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/0617b925e83079ebebc53bc9a29a9e4105a39ec3/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fparameter_number_and_kind.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0617b925e83079ebebc53bc9a29a9e4105a39ec3/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fparameter_number_and_kind.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fparameter_number_and_kind.stderr?ref=0617b925e83079ebebc53bc9a29a9e4105a39ec3", "patch": "@@ -0,0 +1,34 @@\n+error[E0109]: type parameters are not allowed on this type\n+  --> $DIR/parameter_number_and_kind.rs:26:36\n+   |\n+LL |     type FOk<T> = Self::E<'static, T>;\n+   |                                    ^ type parameter not allowed\n+\n+error[E0110]: lifetime parameters are not allowed on this type\n+  --> $DIR/parameter_number_and_kind.rs:26:27\n+   |\n+LL |     type FOk<T> = Self::E<'static, T>;\n+   |                           ^^^^^^^ lifetime parameter not allowed on this type\n+\n+error[E0110]: lifetime parameters are not allowed on this type\n+  --> $DIR/parameter_number_and_kind.rs:29:26\n+   |\n+LL |     type FErr1 = Self::E<'static, 'static>; // Error\n+   |                          ^^^^^^^ lifetime parameter not allowed on this type\n+\n+error[E0109]: type parameters are not allowed on this type\n+  --> $DIR/parameter_number_and_kind.rs:31:38\n+   |\n+LL |     type FErr2<T> = Self::E<'static, T, u32>; // Error\n+   |                                      ^ type parameter not allowed\n+\n+error[E0110]: lifetime parameters are not allowed on this type\n+  --> $DIR/parameter_number_and_kind.rs:31:29\n+   |\n+LL |     type FErr2<T> = Self::E<'static, T, u32>; // Error\n+   |                             ^^^^^^^ lifetime parameter not allowed on this type\n+\n+error: aborting due to 5 previous errors\n+\n+Some errors occurred: E0109, E0110.\n+For more information about an error, try `rustc --explain E0109`."}]}