{"sha": "393d80dfdd97085381ec38bf6f4bb5df65a4e4f6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM5M2Q4MGRmZGQ5NzA4NTM4MWVjMzhiZjZmNGJiNWRmNjVhNGU0ZjY=", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2017-02-25T12:13:39Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-02-25T12:13:39Z"}, "message": "Rollup merge of #40038 - nikomatsakis:issue-39828, r=michaelwoerister\n\ndetect \"bootstrap outputs\" when serializing the dep-graph\n\nFixes #39828.\n\nr? @michaelwoerister", "tree": {"sha": "98d24939df30304fd4b4e8a9a020f9c7307a714c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/98d24939df30304fd4b4e8a9a020f9c7307a714c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/393d80dfdd97085381ec38bf6f4bb5df65a4e4f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/393d80dfdd97085381ec38bf6f4bb5df65a4e4f6", "html_url": "https://github.com/rust-lang/rust/commit/393d80dfdd97085381ec38bf6f4bb5df65a4e4f6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/393d80dfdd97085381ec38bf6f4bb5df65a4e4f6/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "582d5d9793fc017d47b6cea7ab0bfd4755ee05cc", "url": "https://api.github.com/repos/rust-lang/rust/commits/582d5d9793fc017d47b6cea7ab0bfd4755ee05cc", "html_url": "https://github.com/rust-lang/rust/commit/582d5d9793fc017d47b6cea7ab0bfd4755ee05cc"}, {"sha": "b576abd2cc9f854653607dc1a05b51a215b08fa5", "url": "https://api.github.com/repos/rust-lang/rust/commits/b576abd2cc9f854653607dc1a05b51a215b08fa5", "html_url": "https://github.com/rust-lang/rust/commit/b576abd2cc9f854653607dc1a05b51a215b08fa5"}], "stats": {"total": 85, "additions": 82, "deletions": 3}, "files": [{"sha": "673f1ae10843cc4c70bdae676192ff8ee7d0a755", "filename": "src/librustc_incremental/persist/data.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/393d80dfdd97085381ec38bf6f4bb5df65a4e4f6/src%2Flibrustc_incremental%2Fpersist%2Fdata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/393d80dfdd97085381ec38bf6f4bb5df65a4e4f6/src%2Flibrustc_incremental%2Fpersist%2Fdata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fpersist%2Fdata.rs?ref=393d80dfdd97085381ec38bf6f4bb5df65a4e4f6", "patch": "@@ -23,6 +23,11 @@ use super::directory::DefPathIndex;\n pub struct SerializedDepGraph {\n     pub edges: Vec<SerializedEdgeSet>,\n \n+    /// These are output nodes that have no incoming edges. We track\n+    /// these separately so that when we reload all edges, we don't\n+    /// lose track of these nodes.\n+    pub bootstrap_outputs: Vec<DepNode<DefPathIndex>>,\n+\n     /// These are hashes of two things:\n     /// - the HIR nodes in this crate\n     /// - the metadata nodes from dependent crates we use"}, {"sha": "03411e01a57980e4be577309158eaa431dff956e", "filename": "src/librustc_incremental/persist/load.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/393d80dfdd97085381ec38bf6f4bb5df65a4e4f6/src%2Flibrustc_incremental%2Fpersist%2Fload.rs", "raw_url": "https://github.com/rust-lang/rust/raw/393d80dfdd97085381ec38bf6f4bb5df65a4e4f6/src%2Flibrustc_incremental%2Fpersist%2Fload.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fpersist%2Fload.rs?ref=393d80dfdd97085381ec38bf6f4bb5df65a4e4f6", "patch": "@@ -184,6 +184,18 @@ pub fn decode_dep_graph<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n         }\n     }\n \n+    // Recreate bootstrap outputs, which are outputs that have no incoming edges (and hence cannot\n+    // be dirty).\n+    for bootstrap_output in &serialized_dep_graph.bootstrap_outputs {\n+        if let Some(n) = retraced.map(bootstrap_output) {\n+            if let DepNode::WorkProduct(ref wp) = n {\n+                clean_work_products.insert(wp.clone());\n+            }\n+\n+            tcx.dep_graph.with_task(n, || ()); // create the node with no inputs\n+        }\n+    }\n+\n     // Subtle. Sometimes we have intermediate nodes that we can't recreate in the new graph.\n     // This is pretty unusual but it arises in a scenario like this:\n     //"}, {"sha": "f6a37c7a12265469ec0fe9319c3cc814406ba66c", "filename": "src/librustc_incremental/persist/preds/mod.rs", "status": "modified", "additions": 19, "deletions": 2, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/393d80dfdd97085381ec38bf6f4bb5df65a4e4f6/src%2Flibrustc_incremental%2Fpersist%2Fpreds%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/393d80dfdd97085381ec38bf6f4bb5df65a4e4f6/src%2Flibrustc_incremental%2Fpersist%2Fpreds%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fpersist%2Fpreds%2Fmod.rs?ref=393d80dfdd97085381ec38bf6f4bb5df65a4e4f6", "patch": "@@ -11,7 +11,7 @@\n use rustc::dep_graph::{DepGraphQuery, DepNode};\n use rustc::hir::def_id::DefId;\n use rustc_data_structures::fx::FxHashMap;\n-use rustc_data_structures::graph::Graph;\n+use rustc_data_structures::graph::{Graph, NodeIndex};\n \n use super::hash::*;\n use ich::Fingerprint;\n@@ -28,6 +28,14 @@ pub struct Predecessors<'query> {\n     // of the graph down.\n     pub reduced_graph: Graph<&'query DepNode<DefId>, ()>,\n \n+    // These are output nodes that have no incoming edges. We have to\n+    // track these specially because, when we load the data back up\n+    // again, we want to make sure and recreate these nodes (we want\n+    // to recreate the nodes where all incoming edges are clean; but\n+    // since we ordinarily just serialize edges, we wind up just\n+    // forgetting that bootstrap outputs even exist in that case.)\n+    pub bootstrap_outputs: Vec<&'query DepNode<DefId>>,\n+\n     // For the inputs (hir/foreign-metadata), we include hashes.\n     pub hashes: FxHashMap<&'query DepNode<DefId>, Fingerprint>,\n }\n@@ -57,7 +65,7 @@ impl<'q> Predecessors<'q> {\n \n         // Reduce the graph to the most important nodes.\n         let compress::Reduction { graph, input_nodes } =\n-            compress::reduce_graph(&query.graph, HashContext::is_hashable, is_output);\n+            compress::reduce_graph(&query.graph, HashContext::is_hashable, |n| is_output(n));\n \n         let mut hashes = FxHashMap();\n         for input_index in input_nodes {\n@@ -67,8 +75,17 @@ impl<'q> Predecessors<'q> {\n                   .or_insert_with(|| hcx.hash(input).unwrap());\n         }\n \n+        let bootstrap_outputs: Vec<&'q DepNode<DefId>> =\n+            (0 .. graph.len_nodes())\n+            .map(NodeIndex)\n+            .filter(|&n| graph.incoming_edges(n).next().is_none())\n+            .map(|n| *graph.node_data(n))\n+            .filter(|n| is_output(n))\n+            .collect();\n+\n         Predecessors {\n             reduced_graph: graph,\n+            bootstrap_outputs: bootstrap_outputs,\n             hashes: hashes,\n         }\n     }"}, {"sha": "dfa6bf6bbb5e721d4a1596b109cffd314e4e7ccd", "filename": "src/librustc_incremental/persist/save.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/393d80dfdd97085381ec38bf6f4bb5df65a4e4f6/src%2Flibrustc_incremental%2Fpersist%2Fsave.rs", "raw_url": "https://github.com/rust-lang/rust/raw/393d80dfdd97085381ec38bf6f4bb5df65a4e4f6/src%2Flibrustc_incremental%2Fpersist%2Fsave.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fpersist%2Fsave.rs?ref=393d80dfdd97085381ec38bf6f4bb5df65a4e4f6", "patch": "@@ -204,11 +204,15 @@ pub fn encode_dep_graph(preds: &Predecessors,\n     }\n \n     // Create the serialized dep-graph.\n+    let bootstrap_outputs = preds.bootstrap_outputs.iter()\n+                                                   .map(|n| builder.map(n))\n+                                                   .collect();\n     let edges = edges.into_iter()\n                      .map(|(k, v)| SerializedEdgeSet { source: k, targets: v })\n                      .collect();\n     let graph = SerializedDepGraph {\n-        edges: edges,\n+        bootstrap_outputs,\n+        edges,\n         hashes: preds.hashes\n             .iter()\n             .map(|(&dep_node, &hash)| {\n@@ -221,6 +225,7 @@ pub fn encode_dep_graph(preds: &Predecessors,\n     };\n \n     if tcx.sess.opts.debugging_opts.incremental_info {\n+        println!(\"incremental: {} nodes in reduced dep-graph\", preds.reduced_graph.len_nodes());\n         println!(\"incremental: {} edges in serialized dep-graph\", graph.edges.len());\n         println!(\"incremental: {} hashes in serialized dep-graph\", graph.hashes.len());\n     }"}, {"sha": "a562eab1768f3d163358aed9d1a44d6d8849bdca", "filename": "src/test/incremental/issue-39828/auxiliary/generic.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/393d80dfdd97085381ec38bf6f4bb5df65a4e4f6/src%2Ftest%2Fincremental%2Fissue-39828%2Fauxiliary%2Fgeneric.rs", "raw_url": "https://github.com/rust-lang/rust/raw/393d80dfdd97085381ec38bf6f4bb5df65a4e4f6/src%2Ftest%2Fincremental%2Fissue-39828%2Fauxiliary%2Fgeneric.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fissue-39828%2Fauxiliary%2Fgeneric.rs?ref=393d80dfdd97085381ec38bf6f4bb5df65a4e4f6", "patch": "@@ -0,0 +1,18 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// revisions:rpass1 rpass2\n+// compile-flags: -Z query-dep-graph\n+\n+#![rustc_partition_reused(module=\"__rustc_fallback_codegen_unit\", cfg=\"rpass2\")]\n+#![feature(rustc_attrs)]\n+\n+#![crate_type=\"rlib\"]\n+pub fn foo<T>() { }"}, {"sha": "c729380bd5a31d764f6902387f5f68e42080d96f", "filename": "src/test/incremental/issue-39828/issue-39828.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/393d80dfdd97085381ec38bf6f4bb5df65a4e4f6/src%2Ftest%2Fincremental%2Fissue-39828%2Fissue-39828.rs", "raw_url": "https://github.com/rust-lang/rust/raw/393d80dfdd97085381ec38bf6f4bb5df65a4e4f6/src%2Ftest%2Fincremental%2Fissue-39828%2Fissue-39828.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fissue-39828%2Fissue-39828.rs?ref=393d80dfdd97085381ec38bf6f4bb5df65a4e4f6", "patch": "@@ -0,0 +1,22 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Regression test for #39828. If you make use of a module that\n+// consists only of generics, no code is generated, just a dummy\n+// module. The reduced graph consists of a single node (for that\n+// module) with no inputs. Since we only serialize edges, when we\n+// reload, we would consider that node dirty since it is not recreated\n+// (it is not the target of any edges).\n+\n+// revisions:rpass1 rpass2\n+// aux-build:generic.rs\n+\n+extern crate generic;\n+fn main() { }"}]}