{"sha": "a56a6d7525464b4fd7779927b57e67b750f1a831", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE1NmE2ZDc1MjU0NjRiNGZkNzc3OTkyN2I1N2U2N2I3NTBmMWE4MzE=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-06-11T22:43:44Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-06-24T05:58:37Z"}, "message": "bootstrap: pass '--pass' on to compiletest.", "tree": {"sha": "824346fc98fb3cdf2bbb469f2076396193f5db4d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/824346fc98fb3cdf2bbb469f2076396193f5db4d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a56a6d7525464b4fd7779927b57e67b750f1a831", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a56a6d7525464b4fd7779927b57e67b750f1a831", "html_url": "https://github.com/rust-lang/rust/commit/a56a6d7525464b4fd7779927b57e67b750f1a831", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a56a6d7525464b4fd7779927b57e67b750f1a831/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "85ed21e83c9f42203cfe06d41eab3f160bd13518", "url": "https://api.github.com/repos/rust-lang/rust/commits/85ed21e83c9f42203cfe06d41eab3f160bd13518", "html_url": "https://github.com/rust-lang/rust/commit/85ed21e83c9f42203cfe06d41eab3f160bd13518"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "cab7443bf3fe87cf9aa6f921a21de25501b592ac", "filename": "src/bootstrap/builder/tests.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a56a6d7525464b4fd7779927b57e67b750f1a831/src%2Fbootstrap%2Fbuilder%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a56a6d7525464b4fd7779927b57e67b750f1a831/src%2Fbootstrap%2Fbuilder%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder%2Ftests.rs?ref=a56a6d7525464b4fd7779927b57e67b750f1a831", "patch": "@@ -598,6 +598,7 @@ fn test_with_no_doc_stage0() {\n         bless: false,\n         compare_mode: None,\n         rustfix_coverage: false,\n+        pass: None,\n     };\n \n     let build = Build::new(config);\n@@ -640,6 +641,7 @@ fn test_exclude() {\n         bless: false,\n         compare_mode: None,\n         rustfix_coverage: false,\n+        pass: None,\n     };\n \n     let build = Build::new(config);"}, {"sha": "179accda0c8b249034899efc1171e1aa255a9e4a", "filename": "src/bootstrap/flags.rs", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/a56a6d7525464b4fd7779927b57e67b750f1a831/src%2Fbootstrap%2Fflags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a56a6d7525464b4fd7779927b57e67b750f1a831/src%2Fbootstrap%2Fflags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fflags.rs?ref=a56a6d7525464b4fd7779927b57e67b750f1a831", "patch": "@@ -58,6 +58,7 @@ pub enum Subcommand {\n         /// Whether to automatically update stderr/stdout files\n         bless: bool,\n         compare_mode: Option<String>,\n+        pass: Option<String>,\n         test_args: Vec<String>,\n         rustc_args: Vec<String>,\n         fail_fast: bool,\n@@ -199,6 +200,12 @@ To learn more about a subcommand, run `./x.py <subcommand> -h`\"\n                     \"mode describing what file the actual ui output will be compared to\",\n                     \"COMPARE MODE\",\n                 );\n+                opts.optopt(\n+                    \"\",\n+                    \"pass\",\n+                    \"force {check,build,run}-pass tests to this mode.\",\n+                    \"check | build | run\"\n+                );\n                 opts.optflag(\n                     \"\",\n                     \"rustfix-coverage\",\n@@ -401,6 +408,7 @@ Arguments:\n                 paths,\n                 bless: matches.opt_present(\"bless\"),\n                 compare_mode: matches.opt_str(\"compare-mode\"),\n+                pass: matches.opt_str(\"pass\"),\n                 test_args: matches.opt_strs(\"test-args\"),\n                 rustc_args: matches.opt_strs(\"rustc-args\"),\n                 fail_fast: !matches.opt_present(\"no-fail-fast\"),\n@@ -524,6 +532,15 @@ impl Subcommand {\n             _ => None,\n         }\n     }\n+\n+    pub fn pass(&self) -> Option<&str> {\n+        match *self {\n+            Subcommand::Test {\n+                ref pass, ..\n+            } => pass.as_ref().map(|s| &s[..]),\n+            _ => None,\n+        }\n+    }\n }\n \n fn split(s: &[String]) -> Vec<String> {"}, {"sha": "1d54ca16a315bd22194f145c861672c6c5ba7200", "filename": "src/bootstrap/test.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/a56a6d7525464b4fd7779927b57e67b750f1a831/src%2Fbootstrap%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a56a6d7525464b4fd7779927b57e67b750f1a831/src%2Fbootstrap%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftest.rs?ref=a56a6d7525464b4fd7779927b57e67b750f1a831", "patch": "@@ -1065,6 +1065,11 @@ impl Step for Compiletest {\n             }\n         });\n \n+        if let Some(ref pass) = builder.config.cmd.pass() {\n+            cmd.arg(\"--pass\");\n+            cmd.arg(pass);\n+        }\n+\n         if let Some(ref nodejs) = builder.config.nodejs {\n             cmd.arg(\"--nodejs\").arg(nodejs);\n         }"}]}