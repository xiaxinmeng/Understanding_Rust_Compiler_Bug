{"sha": "24c5751197f4971c7f7e387c035cac3565f2f629", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI0YzU3NTExOTdmNDk3MWM3ZjdlMzg3YzAzNWNhYzM1NjVmMmY2Mjk=", "commit": {"author": {"name": "David Wood", "email": "david@davidtw.co", "date": "2018-07-20T11:32:58Z"}, "committer": {"name": "David Wood", "email": "david@davidtw.co", "date": "2018-07-22T11:23:53Z"}, "message": "Classify aggregate rvalues as assignments.", "tree": {"sha": "7c21f3a2fe43c61c5eda4da6b4d2081b1a9ae550", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7c21f3a2fe43c61c5eda4da6b4d2081b1a9ae550"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/24c5751197f4971c7f7e387c035cac3565f2f629", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEWwgxPGhT5b/6kagXAXYLT59T8VQFAltUaUkACgkQAXYLT59T\n8VQfeQ//ZX2Leu2KzJ0LIjZA2OKwikYsfFwpYyG56mH/r4YXUbwNbp04ANUyD/k/\nAsl+oGA/CaK0wuxl2S+7yQ9NlqSwGOY5qidKhq1x9Sc1pyHCGaE052Kcqw+fdJf6\nLwEj7unxQAaWF9fwHM3NpH/QCLfCmYj561nq/4zVnvjFvLQz76KizSSGzs1HuG3+\nepwqGUK7sLZzTggB//RXiioaqIkQQ7Gt+5EtHARmRwkzC0oit0JWitGGrzLRm+Ng\nUFTYNT/hFcgCEKtGyLSLj6ToSOeCbXWAJG2SEYpdgSiwhycbbyvxAmXCsaXosbgQ\nfpz5TWdSZTvY8avfFKMtZSORHmRUviZ4SAqHVyvH5Vck1WVRc0gB8GZSFCUahpQ4\ntJfJFZ/MZfBIq1hJ/0xBseZWKYYf+pQvoS6A/23h0WOlEsJY783q51V4872GX12v\n19ty+gPxIcyrFfpAkM2GcovlC/lWBbXIzGQ+9ZVzygsQf6IwPga4fLVjLUeSBsTJ\nEMxCHjKgCyhqZd5+IzeskCCz5ehtIJctNU3VYkBYf5r1E628MwHRMehZuWlbQhK/\nAWWWZRREwMboXpWiHHGe1tyl+yOvIuge6onoyfURPuASfNqx7zT8I4SeEOPvdN5Z\nT//oGrBAKDObx6mvAYVMyrD1FfH81XNzyAeiT5XsUl4c50NCI34=\n=TeA9\n-----END PGP SIGNATURE-----", "payload": "tree 7c21f3a2fe43c61c5eda4da6b4d2081b1a9ae550\nparent aeca042f8464a98e1821756849f062eeede71e28\nauthor David Wood <david@davidtw.co> 1532086378 +0100\ncommitter David Wood <david@davidtw.co> 1532258633 +0100\n\nClassify aggregate rvalues as assignments.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/24c5751197f4971c7f7e387c035cac3565f2f629", "html_url": "https://github.com/rust-lang/rust/commit/24c5751197f4971c7f7e387c035cac3565f2f629", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/24c5751197f4971c7f7e387c035cac3565f2f629/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aeca042f8464a98e1821756849f062eeede71e28", "url": "https://api.github.com/repos/rust-lang/rust/commits/aeca042f8464a98e1821756849f062eeede71e28", "html_url": "https://github.com/rust-lang/rust/commit/aeca042f8464a98e1821756849f062eeede71e28"}], "stats": {"total": 22, "additions": 14, "deletions": 8}, "files": [{"sha": "9b478cd85bbac7d37ad623860696b064c4db082f", "filename": "src/librustc_mir/borrow_check/nll/region_infer/error_reporting/mod.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/24c5751197f4971c7f7e387c035cac3565f2f629/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24c5751197f4971c7f7e387c035cac3565f2f629/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Ferror_reporting%2Fmod.rs?ref=24c5751197f4971c7f7e387c035cac3565f2f629", "patch": "@@ -132,6 +132,7 @@ impl<'tcx> RegionInferenceContext<'tcx> {\n         mir: &Mir<'tcx>,\n     ) -> (ConstraintCategory, Span) {\n         let constraint = self.constraints[index];\n+        debug!(\"classify_constraint: constraint={:?}\", constraint);\n         let span = constraint.locations.span(mir);\n         let location = constraint.locations.from_location().unwrap_or(Location::START);\n \n@@ -140,8 +141,10 @@ impl<'tcx> RegionInferenceContext<'tcx> {\n         }\n \n         let data = &mir[location.block];\n+        debug!(\"classify_constraint: location={:?} data={:?}\", location, data);\n         let category = if location.statement_index == data.statements.len() {\n             if let Some(ref terminator) = data.terminator {\n+                debug!(\"classify_constraint: terminator.kind={:?}\", terminator.kind);\n                 match terminator.kind {\n                     TerminatorKind::DropAndReplace { .. } => ConstraintCategory::Assignment,\n                     TerminatorKind::Call { .. } => ConstraintCategory::CallArgument,\n@@ -152,14 +155,17 @@ impl<'tcx> RegionInferenceContext<'tcx> {\n             }\n         } else {\n             let statement = &data.statements[location.statement_index];\n+            debug!(\"classify_constraint: statement.kind={:?}\", statement.kind);\n             match statement.kind {\n                 StatementKind::Assign(ref place, ref rvalue) => {\n+                    debug!(\"classify_constraint: place={:?} rvalue={:?}\", place, rvalue);\n                     if *place == Place::Local(mir::RETURN_PLACE) {\n                         ConstraintCategory::Return\n                     } else {\n                         match rvalue {\n                             Rvalue::Cast(..) => ConstraintCategory::Cast,\n-                            Rvalue::Use(..) => ConstraintCategory::Assignment,\n+                            Rvalue::Use(..) |\n+                            Rvalue::Aggregate(..) => ConstraintCategory::Assignment,\n                             _ => ConstraintCategory::Other,\n                         }\n                     }"}, {"sha": "4edec568737e357b3c57e70f5f700c56012aab8e", "filename": "src/test/ui/borrowck/issue-45983.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24c5751197f4971c7f7e387c035cac3565f2f629/src%2Ftest%2Fui%2Fborrowck%2Fissue-45983.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24c5751197f4971c7f7e387c035cac3565f2f629/src%2Ftest%2Fui%2Fborrowck%2Fissue-45983.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fissue-45983.nll.stderr?ref=24c5751197f4971c7f7e387c035cac3565f2f629", "patch": "@@ -10,7 +10,7 @@ error: unsatisfied lifetime constraints\n LL |     let x = None;\n    |         - lifetime `'2` appears in the type of `x`\n LL |     give_any(|y| x = Some(y));\n-   |               -  ^^^^^^^^^^^ free region requires that `'1` must outlive `'2`\n+   |               -  ^^^^^^^^^^^ assignment requires that `'1` must outlive `'2`\n    |               |\n    |               lifetime `'1` appears in this argument\n "}, {"sha": "a162d9ea7f10406913818c0119899f27153d2703", "filename": "src/test/ui/borrowck/regions-escape-bound-fn-2.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24c5751197f4971c7f7e387c035cac3565f2f629/src%2Ftest%2Fui%2Fborrowck%2Fregions-escape-bound-fn-2.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24c5751197f4971c7f7e387c035cac3565f2f629/src%2Ftest%2Fui%2Fborrowck%2Fregions-escape-bound-fn-2.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fregions-escape-bound-fn-2.nll.stderr?ref=24c5751197f4971c7f7e387c035cac3565f2f629", "patch": "@@ -10,7 +10,7 @@ error: unsatisfied lifetime constraints\n LL |     let mut x = None;\n    |         ----- lifetime `'2` appears in the type of `x`\n LL |     with_int(|y| x = Some(y));\n-   |               -  ^^^^^^^^^^^ free region requires that `'1` must outlive `'2`\n+   |               -  ^^^^^^^^^^^ assignment requires that `'1` must outlive `'2`\n    |               |\n    |               lifetime `'1` appears in this argument\n "}, {"sha": "af5db0e3ff640067bcfee2413f6fbd36f1d2f7ef", "filename": "src/test/ui/borrowck/regions-escape-bound-fn.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24c5751197f4971c7f7e387c035cac3565f2f629/src%2Ftest%2Fui%2Fborrowck%2Fregions-escape-bound-fn.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24c5751197f4971c7f7e387c035cac3565f2f629/src%2Ftest%2Fui%2Fborrowck%2Fregions-escape-bound-fn.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fregions-escape-bound-fn.nll.stderr?ref=24c5751197f4971c7f7e387c035cac3565f2f629", "patch": "@@ -10,7 +10,7 @@ error: unsatisfied lifetime constraints\n LL |     let mut x: Option<&isize> = None;\n    |         ----- lifetime `'2` appears in the type of `x`\n LL |     with_int(|y| x = Some(y));\n-   |               -  ^^^^^^^^^^^ free region requires that `'1` must outlive `'2`\n+   |               -  ^^^^^^^^^^^ assignment requires that `'1` must outlive `'2`\n    |               |\n    |               lifetime `'1` appears in this argument\n "}, {"sha": "df93a1204b2df281fbf93a2c9849e1d9ce6211c1", "filename": "src/test/ui/borrowck/regions-escape-unboxed-closure.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24c5751197f4971c7f7e387c035cac3565f2f629/src%2Ftest%2Fui%2Fborrowck%2Fregions-escape-unboxed-closure.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24c5751197f4971c7f7e387c035cac3565f2f629/src%2Ftest%2Fui%2Fborrowck%2Fregions-escape-unboxed-closure.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fregions-escape-unboxed-closure.nll.stderr?ref=24c5751197f4971c7f7e387c035cac3565f2f629", "patch": "@@ -10,7 +10,7 @@ error: unsatisfied lifetime constraints\n LL |     let mut x: Option<&isize> = None;\n    |         ----- lifetime `'2` appears in the type of `x`\n LL |     with_int(&mut |y| x = Some(y));\n-   |                    -  ^^^^^^^^^^^ free region requires that `'1` must outlive `'2`\n+   |                    -  ^^^^^^^^^^^ assignment requires that `'1` must outlive `'2`\n    |                    |\n    |                    lifetime `'1` appears in this argument\n "}, {"sha": "1559b35c446d61f2bd5865a64d5e5474ce1f7a10", "filename": "src/test/ui/closure-expected-type/expect-region-supply-region.nll.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/24c5751197f4971c7f7e387c035cac3565f2f629/src%2Ftest%2Fui%2Fclosure-expected-type%2Fexpect-region-supply-region.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24c5751197f4971c7f7e387c035cac3565f2f629/src%2Ftest%2Fui%2Fclosure-expected-type%2Fexpect-region-supply-region.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosure-expected-type%2Fexpect-region-supply-region.nll.stderr?ref=24c5751197f4971c7f7e387c035cac3565f2f629", "patch": "@@ -30,7 +30,7 @@ LL |     let mut f: Option<&u32> = None;\n LL |     closure_expecting_bound(|x| {\n    |                              - lifetime `'1` appears in this argument\n LL |         f = Some(x); //~ ERROR borrowed data cannot be stored outside of its closure\n-   |         ^^^^^^^^^^^ free region requires that `'1` must outlive `'2`\n+   |         ^^^^^^^^^^^ assignment requires that `'1` must outlive `'2`\n \n error: unsatisfied lifetime constraints\n   --> $DIR/expect-region-supply-region.rs:38:9\n@@ -40,7 +40,7 @@ LL |     let mut f: Option<&u32> = None;\n LL |     closure_expecting_bound(|x: &u32| {\n    |                                 - let's call the lifetime of this reference `'1`\n LL |         f = Some(x); //~ ERROR borrowed data cannot be stored outside of its closure\n-   |         ^^^^^^^^^^^ free region requires that `'1` must outlive `'2`\n+   |         ^^^^^^^^^^^ assignment requires that `'1` must outlive `'2`\n \n error: unsatisfied lifetime constraints\n   --> $DIR/expect-region-supply-region.rs:52:9\n@@ -52,7 +52,7 @@ LL |     closure_expecting_bound(|x: &'x u32| {\n    |                                 - let's call the lifetime of this reference `'1`\n ...\n LL |         f = Some(x);\n-   |         ^^^^^^^^^^^ free region requires that `'1` must outlive `'2`\n+   |         ^^^^^^^^^^^ assignment requires that `'1` must outlive `'2`\n \n error: aborting due to 3 previous errors\n "}]}