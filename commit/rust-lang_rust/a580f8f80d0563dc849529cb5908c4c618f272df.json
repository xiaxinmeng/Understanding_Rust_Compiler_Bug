{"sha": "a580f8f80d0563dc849529cb5908c4c618f272df", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE1ODBmOGY4MGQwNTYzZGM4NDk1MjljYjU5MDhjNGM2MThmMjcyZGY=", "commit": {"author": {"name": "Ahmed Charles", "email": "acharles@outlook.com", "date": "2016-10-06T04:19:01Z"}, "committer": {"name": "Ahmed Charles", "email": "acharles@outlook.com", "date": "2016-10-06T05:42:40Z"}, "message": "Install docs, std and rustc using results from dist.", "tree": {"sha": "0a88be68b635c8ef8f10acc68324839a262f458a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0a88be68b635c8ef8f10acc68324839a262f458a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a580f8f80d0563dc849529cb5908c4c618f272df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a580f8f80d0563dc849529cb5908c4c618f272df", "html_url": "https://github.com/rust-lang/rust/commit/a580f8f80d0563dc849529cb5908c4c618f272df", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a580f8f80d0563dc849529cb5908c4c618f272df/comments", "author": {"login": "ahmedcharles", "id": 3112514, "node_id": "MDQ6VXNlcjMxMTI1MTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3112514?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahmedcharles", "html_url": "https://github.com/ahmedcharles", "followers_url": "https://api.github.com/users/ahmedcharles/followers", "following_url": "https://api.github.com/users/ahmedcharles/following{/other_user}", "gists_url": "https://api.github.com/users/ahmedcharles/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahmedcharles/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahmedcharles/subscriptions", "organizations_url": "https://api.github.com/users/ahmedcharles/orgs", "repos_url": "https://api.github.com/users/ahmedcharles/repos", "events_url": "https://api.github.com/users/ahmedcharles/events{/privacy}", "received_events_url": "https://api.github.com/users/ahmedcharles/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ahmedcharles", "id": 3112514, "node_id": "MDQ6VXNlcjMxMTI1MTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3112514?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahmedcharles", "html_url": "https://github.com/ahmedcharles", "followers_url": "https://api.github.com/users/ahmedcharles/followers", "following_url": "https://api.github.com/users/ahmedcharles/following{/other_user}", "gists_url": "https://api.github.com/users/ahmedcharles/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahmedcharles/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahmedcharles/subscriptions", "organizations_url": "https://api.github.com/users/ahmedcharles/orgs", "repos_url": "https://api.github.com/users/ahmedcharles/repos", "events_url": "https://api.github.com/users/ahmedcharles/events{/privacy}", "received_events_url": "https://api.github.com/users/ahmedcharles/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e6985b2a6daa5acb84f364f6e6ddfdf170c28f2b", "url": "https://api.github.com/repos/rust-lang/rust/commits/e6985b2a6daa5acb84f364f6e6ddfdf170c28f2b", "html_url": "https://github.com/rust-lang/rust/commit/e6985b2a6daa5acb84f364f6e6ddfdf170c28f2b"}], "stats": {"total": 38, "additions": 32, "deletions": 6}, "files": [{"sha": "465abf15750fa4b54c05313519177c35147856e0", "filename": "src/bootstrap/dist.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a580f8f80d0563dc849529cb5908c4c618f272df/src%2Fbootstrap%2Fdist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a580f8f80d0563dc849529cb5908c4c618f272df/src%2Fbootstrap%2Fdist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdist.rs?ref=a580f8f80d0563dc849529cb5908c4c618f272df", "patch": "@@ -27,7 +27,7 @@ use {Build, Compiler};\n use util::{cp_r, libdir, is_dylib, cp_filtered, copy};\n use regex::{RegexSet, quote};\n \n-fn package_vers(build: &Build) -> &str {\n+pub fn package_vers(build: &Build) -> &str {\n     match &build.config.channel[..] {\n         \"stable\" => &build.release,\n         \"beta\" => \"beta\",\n@@ -40,7 +40,7 @@ fn distdir(build: &Build) -> PathBuf {\n     build.out.join(\"dist\")\n }\n \n-fn tmpdir(build: &Build) -> PathBuf {\n+pub fn tmpdir(build: &Build) -> PathBuf {\n     build.out.join(\"tmp/dist\")\n }\n \n@@ -418,7 +418,7 @@ fn chmod(_path: &Path, _perms: u32) {}\n \n // We have to run a few shell scripts, which choke quite a bit on both `\\`\n // characters and on `C:\\` paths, so normalize both of them away.\n-fn sanitize_sh(path: &Path) -> String {\n+pub fn sanitize_sh(path: &Path) -> String {\n     let path = path.to_str().unwrap().replace(\"\\\\\", \"/\");\n     return change_drive(&path).unwrap_or(path);\n "}, {"sha": "1c714620a016f0cfe906d302515563fc2e2cabdf", "filename": "src/bootstrap/install.rs", "status": "modified", "additions": 29, "deletions": 3, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/a580f8f80d0563dc849529cb5908c4c618f272df/src%2Fbootstrap%2Finstall.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a580f8f80d0563dc849529cb5908c4c618f272df/src%2Fbootstrap%2Finstall.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Finstall.rs?ref=a580f8f80d0563dc849529cb5908c4c618f272df", "patch": "@@ -13,10 +13,36 @@\n //! This module is responsible for installing the standard library,\n //! compiler, and documentation.\n \n+use std::fs;\n+use std::path::Path;\n+use std::process::Command;\n+\n use Build;\n+use dist::{package_vers, sanitize_sh, tmpdir};\n \n /// Installs everything.\n-pub fn install(_: &Build, stage: u32, host: &str) {\n-    println!(\"Install everything stage{} ({})\", stage, host);\n-    println!(\"Note: install currently does nothing.\");\n+pub fn install(build: &Build, stage: u32, host: &str) {\n+    let prefix = build.config.prefix.as_ref().clone().map(|x| Path::new(x))\n+        .unwrap_or(Path::new(\"/usr/local\"));\n+    let empty_dir = build.out.join(\"tmp/empty_dir\");\n+    t!(fs::create_dir_all(&empty_dir));\n+    if build.config.docs {\n+        install_sh(&build, \"docs\", \"rust-docs\", stage, host, prefix, &empty_dir);\n+    }\n+    install_sh(&build, \"std\", \"rust-std\", stage, host, prefix, &empty_dir);\n+    install_sh(&build, \"rustc\", \"rustc\", stage, host, prefix, &empty_dir);\n+    t!(fs::remove_dir_all(&empty_dir));\n+}\n+\n+fn install_sh(build: &Build, package: &str, name: &str, stage: u32, host: &str,\n+              prefix: &Path, empty_dir: &Path) {\n+    println!(\"Install {} stage{} ({})\", package, stage, host);\n+    let package_name = format!(\"{}-{}-{}\", name, package_vers(build), host);\n+\n+    let mut cmd = Command::new(\"sh\");\n+    cmd.current_dir(empty_dir)\n+       .arg(sanitize_sh(&tmpdir(build).join(&package_name).join(\"install.sh\")))\n+       .arg(format!(\"--prefix={}\", sanitize_sh(&prefix)))\n+       .arg(\"--disable-ldconfig\");\n+    build.run(&mut cmd);\n }"}]}