{"sha": "1588ae204edc313adb2c080f0a5e3f8c9f688333", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE1ODhhZTIwNGVkYzMxM2FkYjJjMDgwZjBhNWUzZjhjOWY2ODgzMzM=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-15T04:26:44Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-15T04:29:56Z"}, "message": "bench: Update shootout-nbody for style", "tree": {"sha": "7a69a566a553168de1b8ab943d89d2eecb78dcfa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7a69a566a553168de1b8ab943d89d2eecb78dcfa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1588ae204edc313adb2c080f0a5e3f8c9f688333", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1588ae204edc313adb2c080f0a5e3f8c9f688333", "html_url": "https://github.com/rust-lang/rust/commit/1588ae204edc313adb2c080f0a5e3f8c9f688333", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1588ae204edc313adb2c080f0a5e3f8c9f688333/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "93dcb9fb6b696e65e24c9a9a37658bf43f42adc3", "url": "https://api.github.com/repos/rust-lang/rust/commits/93dcb9fb6b696e65e24c9a9a37658bf43f42adc3", "html_url": "https://github.com/rust-lang/rust/commit/93dcb9fb6b696e65e24c9a9a37658bf43f42adc3"}], "stats": {"total": 42, "additions": 20, "deletions": 22}, "files": [{"sha": "780761ec52cad1cafbb2c36f0f684389b464444a", "filename": "src/test/bench/shootout-nbody.rs", "status": "modified", "additions": 20, "deletions": 22, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/1588ae204edc313adb2c080f0a5e3f8c9f688333/src%2Ftest%2Fbench%2Fshootout-nbody.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1588ae204edc313adb2c080f0a5e3f8c9f688333/src%2Ftest%2Fbench%2Fshootout-nbody.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-nbody.rs?ref=1588ae204edc313adb2c080f0a5e3f8c9f688333", "patch": "@@ -1,31 +1,29 @@\n // based on:\n // http://shootout.alioth.debian.org/u32/benchmark.php?test=nbody&lang=java\n \n-#[abi = \"cdecl\"]\n+use std;\n+\n+// Using sqrt from the standard library is way slower than using libc\n+// directly even though std just calls libc, I guess it must be\n+// because the the indirection through another dynamic linker\n+// stub. Kind of shocking. Might be able to make it faster still with\n+// an llvm intrinsic.\n #[nolink]\n-native mod llvm {\n+native mod libc {\n     fn sqrt(n: float) -> float;\n }\n \n-fn main() {\n-    //\n-    // Leave these commented out to\n-    // finish in a reasonable time\n-    // during 'make check' under valgrind\n-    // 5000000\n-    // 50000000\n-    let inputs: [int] = [50000, 500000];\n-\n+fn main(args: [str]) {\n+    let n = if vec::len(args) == 2u {\n+        int::from_str(args[1])\n+    } else {\n+        1000000\n+    };\n     let bodies: [Body::props] = NBodySystem::MakeNBodySystem();\n-\n-\n-    for n: int in inputs {\n-        log(debug, NBodySystem::energy(bodies));\n-\n-        let i: int = 0;\n-        while i < n { NBodySystem::advance(bodies, 0.01); i += 1; }\n-        log(debug, NBodySystem::energy(bodies));\n-    }\n+    std::io::println(#fmt(\"%f\", NBodySystem::energy(bodies)));\n+    let i: int = 0;\n+    while i < n { NBodySystem::advance(bodies, 0.01); i += 1; }\n+    std::io::println(#fmt(\"%f\", NBodySystem::energy(bodies)));\n }\n \n // Body::props is a record of floats, so\n@@ -79,7 +77,7 @@ mod NBodySystem {\n \n         let dSquared: float = dx * dx + dy * dy + dz * dz;\n \n-        let distance: float = llvm::sqrt(dSquared);\n+        let distance: float = libc::sqrt(dSquared);\n         let mag: float = dt / (dSquared * distance);\n \n         bi.vx -= dx * bj.mass * mag;\n@@ -117,7 +115,7 @@ mod NBodySystem {\n                 dy = bodies[i].y - bodies[j].y;\n                 dz = bodies[i].z - bodies[j].z;\n \n-                distance = llvm::sqrt(dx * dx + dy * dy + dz * dz);\n+                distance = libc::sqrt(dx * dx + dy * dy + dz * dz);\n                 e -= bodies[i].mass * bodies[j].mass / distance;\n \n                 j += 1;"}]}