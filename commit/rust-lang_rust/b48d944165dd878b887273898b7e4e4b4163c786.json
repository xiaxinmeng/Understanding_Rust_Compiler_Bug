{"sha": "b48d944165dd878b887273898b7e4e4b4163c786", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI0OGQ5NDQxNjVkZDg3OGI4ODcyNzM4OThiN2U0ZTRiNDE2M2M3ODY=", "commit": {"author": {"name": "Rafael Fern\u00e1ndez L\u00f3pez", "email": "ereslibre@ereslibre.es", "date": "2018-01-06T12:33:20Z"}, "committer": {"name": "Rafael Fern\u00e1ndez L\u00f3pez", "email": "ereslibre@ereslibre.es", "date": "2018-01-08T16:36:21Z"}, "message": "Clean emitted diagnostics when `reset_err_count` is called.\n\nWhen external tools like `rustfmt` calls to `reset_err_count` for handler\nreusing, it will set the error count on the handler to 0, but since\nhttps://github.com/rust-lang/rust/pull/47146 the handler will contain\nstatus that will prevent the error count to be bumped if this handler is\nreused.\n\nThis caused `rustfmt` idempotency tests to fail:\nhttps://github.com/rust-lang-nursery/rustfmt/issues/2338\n\nFixes: https://github.com/rust-lang-nursery/rustfmt/issues/2338", "tree": {"sha": "3c1b4c808bc9f63c66fb4643d121bc7851948185", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3c1b4c808bc9f63c66fb4643d121bc7851948185"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b48d944165dd878b887273898b7e4e4b4163c786", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEEVXtUfsypE9y4QP58iQIpTnhBjPkFAlpTngYACgkQiQIpTnhB\njPlwKgf/fZYsi54ChIQ54LU9FRyuzLZsJWM1DDLrEzksxRMYU/vzhvfDik6UCO7Z\nlSPstUBwyXPWLpuGk8bU8jGYew1c3MieVb33+2jdYvcjJJfzXe5/StJcvpQr2aV8\nckkTyb6vm71F3dPFC47n/RoLbH+GVJUXTLNI5XtWaiSBkrXYrz4f7PDjFwEVeWME\nqLTHqUH7b7kT30CgyWKYiU7dDtwRKcbdZBlV+56uu7Naqv44B9ASczxh/AUwD+Sn\n2WlMS7zF8Caquo1VEa6VntZBPXbJbUDlXuKBrV5rY6jheOfpleuPSJdFS+uE8Cg5\nV13L1s27PSqTws1rIs1olyn1zNu/Ig==\n=yuYB\n-----END PGP SIGNATURE-----", "payload": "tree 3c1b4c808bc9f63c66fb4643d121bc7851948185\nparent 90e019bacd9e5d231e5292b393269ce7ada4940d\nauthor Rafael Fern\u00e1ndez L\u00f3pez <ereslibre@ereslibre.es> 1515242000 +0100\ncommitter Rafael Fern\u00e1ndez L\u00f3pez <ereslibre@ereslibre.es> 1515429381 +0100\n\nClean emitted diagnostics when `reset_err_count` is called.\n\nWhen external tools like `rustfmt` calls to `reset_err_count` for handler\nreusing, it will set the error count on the handler to 0, but since\nhttps://github.com/rust-lang/rust/pull/47146 the handler will contain\nstatus that will prevent the error count to be bumped if this handler is\nreused.\n\nThis caused `rustfmt` idempotency tests to fail:\nhttps://github.com/rust-lang-nursery/rustfmt/issues/2338\n\nFixes: https://github.com/rust-lang-nursery/rustfmt/issues/2338\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b48d944165dd878b887273898b7e4e4b4163c786", "html_url": "https://github.com/rust-lang/rust/commit/b48d944165dd878b887273898b7e4e4b4163c786", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b48d944165dd878b887273898b7e4e4b4163c786/comments", "author": {"login": "ereslibre", "id": 8706, "node_id": "MDQ6VXNlcjg3MDY=", "avatar_url": "https://avatars.githubusercontent.com/u/8706?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ereslibre", "html_url": "https://github.com/ereslibre", "followers_url": "https://api.github.com/users/ereslibre/followers", "following_url": "https://api.github.com/users/ereslibre/following{/other_user}", "gists_url": "https://api.github.com/users/ereslibre/gists{/gist_id}", "starred_url": "https://api.github.com/users/ereslibre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ereslibre/subscriptions", "organizations_url": "https://api.github.com/users/ereslibre/orgs", "repos_url": "https://api.github.com/users/ereslibre/repos", "events_url": "https://api.github.com/users/ereslibre/events{/privacy}", "received_events_url": "https://api.github.com/users/ereslibre/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ereslibre", "id": 8706, "node_id": "MDQ6VXNlcjg3MDY=", "avatar_url": "https://avatars.githubusercontent.com/u/8706?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ereslibre", "html_url": "https://github.com/ereslibre", "followers_url": "https://api.github.com/users/ereslibre/followers", "following_url": "https://api.github.com/users/ereslibre/following{/other_user}", "gists_url": "https://api.github.com/users/ereslibre/gists{/gist_id}", "starred_url": "https://api.github.com/users/ereslibre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ereslibre/subscriptions", "organizations_url": "https://api.github.com/users/ereslibre/orgs", "repos_url": "https://api.github.com/users/ereslibre/repos", "events_url": "https://api.github.com/users/ereslibre/events{/privacy}", "received_events_url": "https://api.github.com/users/ereslibre/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "90e019bacd9e5d231e5292b393269ce7ada4940d", "url": "https://api.github.com/repos/rust-lang/rust/commits/90e019bacd9e5d231e5292b393269ce7ada4940d", "html_url": "https://github.com/rust-lang/rust/commit/90e019bacd9e5d231e5292b393269ce7ada4940d"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "c48f1761f28b7aee9004dcbca5ab73e0e2e0365e", "filename": "src/librustc_errors/lib.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b48d944165dd878b887273898b7e4e4b4163c786/src%2Flibrustc_errors%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b48d944165dd878b887273898b7e4e4b4163c786/src%2Flibrustc_errors%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Flib.rs?ref=b48d944165dd878b887273898b7e4e4b4163c786", "patch": "@@ -310,9 +310,13 @@ impl Handler {\n         self.continue_after_error.set(continue_after_error);\n     }\n \n-    // NOTE: DO NOT call this function from rustc, as it relies on `err_count` being non-zero\n-    // if an error happened to avoid ICEs. This function should only be called from tools.\n+    /// Resets the diagnostic error count as well as the cached emitted diagnostics.\n+    ///\n+    /// NOTE: DO NOT call this function from rustc. It is only meant to be called from external\n+    /// tools that want to reuse a `Parser` cleaning the previously emitted diagnostics as well as\n+    /// the overall count of emitted error diagnostics.\n     pub fn reset_err_count(&self) {\n+        self.emitted_diagnostics.replace(FxHashSet());\n         self.err_count.store(0, SeqCst);\n     }\n "}]}