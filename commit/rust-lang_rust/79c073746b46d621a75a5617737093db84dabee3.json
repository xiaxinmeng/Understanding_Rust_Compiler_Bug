{"sha": "79c073746b46d621a75a5617737093db84dabee3", "node_id": "C_kwDOAAsO6NoAKDc5YzA3Mzc0NmI0NmQ2MjFhNzVhNTYxNzczNzA5M2RiODRkYWJlZTM", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-04-25T19:50:22Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-05-09T17:27:58Z"}, "message": "Do not flood on copy_nonoverlapping.", "tree": {"sha": "ce91ab8e3fd5de0e55572bea57ec3cfa6bfce375", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ce91ab8e3fd5de0e55572bea57ec3cfa6bfce375"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/79c073746b46d621a75a5617737093db84dabee3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/79c073746b46d621a75a5617737093db84dabee3", "html_url": "https://github.com/rust-lang/rust/commit/79c073746b46d621a75a5617737093db84dabee3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/79c073746b46d621a75a5617737093db84dabee3/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "add5124dceb157f1f4157bf2b0ec106e78a4943c", "url": "https://api.github.com/repos/rust-lang/rust/commits/add5124dceb157f1f4157bf2b0ec106e78a4943c", "html_url": "https://github.com/rust-lang/rust/commit/add5124dceb157f1f4157bf2b0ec106e78a4943c"}], "stats": {"total": 12, "additions": 7, "deletions": 5}, "files": [{"sha": "2c3d4c97ed33807821688dc764abe2812f531f8b", "filename": "compiler/rustc_mir_dataflow/src/value_analysis.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/79c073746b46d621a75a5617737093db84dabee3/compiler%2Frustc_mir_dataflow%2Fsrc%2Fvalue_analysis.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79c073746b46d621a75a5617737093db84dabee3/compiler%2Frustc_mir_dataflow%2Fsrc%2Fvalue_analysis.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_dataflow%2Fsrc%2Fvalue_analysis.rs?ref=79c073746b46d621a75a5617737093db84dabee3", "patch": "@@ -123,16 +123,18 @@ pub trait ValueAnalysis<'tcx> {\n     fn super_intrinsic(\n         &self,\n         intrinsic: &NonDivergingIntrinsic<'tcx>,\n-        state: &mut State<Self::Value>,\n+        _state: &mut State<Self::Value>,\n     ) {\n         match intrinsic {\n             NonDivergingIntrinsic::Assume(..) => {\n                 // Could use this, but ignoring it is sound.\n             }\n-            NonDivergingIntrinsic::CopyNonOverlapping(CopyNonOverlapping { dst, .. }) => {\n-                if let Some(place) = dst.place() {\n-                    state.flood(place.as_ref(), self.map());\n-                }\n+            NonDivergingIntrinsic::CopyNonOverlapping(CopyNonOverlapping {\n+                dst: _,\n+                src: _,\n+                count: _,\n+            }) => {\n+                // This statement represents `*dst = *src`, `count` times.\n             }\n         }\n     }"}]}