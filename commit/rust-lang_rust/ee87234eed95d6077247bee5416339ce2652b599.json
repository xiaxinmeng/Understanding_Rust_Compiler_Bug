{"sha": "ee87234eed95d6077247bee5416339ce2652b599", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVlODcyMzRlZWQ5NWQ2MDc3MjQ3YmVlNTQxNjMzOWNlMjY1MmI1OTk=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-08-13T02:26:23Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-08-13T02:26:23Z"}, "message": "auto merge of #16458 : pcwalton/rust/borrowck-for-moves, r=nikomatsakis\n\n`for` loop heads.\r\n\r\nThis breaks code like:\r\n\r\n    let x = Some(box 1i);\r\n    for &a in x.iter() {\r\n    }\r\n\r\nChange this code to obey the borrow checking rules. For example:\r\n\r\n    let x = Some(box 1i);\r\n    for &ref a in x.iter() {\r\n    }\r\n\r\nCloses #16205.\r\n\r\n[breaking-change]\r\n\r\nr? @nikomatsakis", "tree": {"sha": "4e095e0281a5fe2586f7364ab4e8a34edc27b700", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4e095e0281a5fe2586f7364ab4e8a34edc27b700"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ee87234eed95d6077247bee5416339ce2652b599", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ee87234eed95d6077247bee5416339ce2652b599", "html_url": "https://github.com/rust-lang/rust/commit/ee87234eed95d6077247bee5416339ce2652b599", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ee87234eed95d6077247bee5416339ce2652b599/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e189122e9a922438f02b639948f75df765cd370e", "url": "https://api.github.com/repos/rust-lang/rust/commits/e189122e9a922438f02b639948f75df765cd370e", "html_url": "https://github.com/rust-lang/rust/commit/e189122e9a922438f02b639948f75df765cd370e"}, {"sha": "7579185b4c83180d8e737a65c9f459bfe8e32ad5", "url": "https://api.github.com/repos/rust-lang/rust/commits/7579185b4c83180d8e737a65c9f459bfe8e32ad5", "html_url": "https://github.com/rust-lang/rust/commit/7579185b4c83180d8e737a65c9f459bfe8e32ad5"}], "stats": {"total": 46, "additions": 43, "deletions": 3}, "files": [{"sha": "7c805b1ac4bcde3917417d0a675376c7db524aed", "filename": "src/librustc/middle/expr_use_visitor.rs", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/ee87234eed95d6077247bee5416339ce2652b599/src%2Flibrustc%2Fmiddle%2Fexpr_use_visitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee87234eed95d6077247bee5416339ce2652b599/src%2Flibrustc%2Fmiddle%2Fexpr_use_visitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fexpr_use_visitor.rs?ref=ee87234eed95d6077247bee5416339ce2652b599", "patch": "@@ -399,10 +399,16 @@ impl<'d,'t,TYPER:mc::Typer> ExprUseVisitor<'d,'t,TYPER> {\n             ast::ExprForLoop(ref pat, ref head, ref blk, _) => {\n                 // The pattern lives as long as the block.\n                 debug!(\"walk_expr for loop case: blk id={}\", blk.id);\n-                self.walk_expr(&**head);\n+                self.consume_expr(&**head);\n \n-                let head_cmt = return_if_err!(self.mc.cat_expr(&**head));\n-                self.walk_pat(head_cmt, pat.clone());\n+                // Fetch the type of the value that the iteration yields to\n+                // produce the pattern's categorized mutable type.\n+                let pattern_type = ty::node_id_to_type(self.tcx(), pat.id);\n+                let pat_cmt = self.mc.cat_rvalue(pat.id,\n+                                                 pat.span,\n+                                                 ty::ReScope(blk.id),\n+                                                 pattern_type);\n+                self.walk_pat(pat_cmt, pat.clone());\n \n                 self.walk_block(&**blk);\n             }\n@@ -835,6 +841,7 @@ impl<'d,'t,TYPER:mc::Typer> ExprUseVisitor<'d,'t,TYPER> {\n                     }\n                     ast::PatIdent(ast::BindByValue(_), _, _) => {\n                         let mode = copy_or_move(typer.tcx(), cmt_pat.ty, PatBindingMove);\n+                        debug!(\"walk_pat binding consuming pat\");\n                         delegate.consume_pat(pat, cmt_pat, mode);\n                     }\n                     _ => {"}, {"sha": "93a4383b4f59f5cf8dcc7e4c1d6d63a353ad115e", "filename": "src/test/compile-fail/borrowck-for-loop-correct-cmt-for-pattern.rs", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/ee87234eed95d6077247bee5416339ce2652b599/src%2Ftest%2Fcompile-fail%2Fborrowck-for-loop-correct-cmt-for-pattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee87234eed95d6077247bee5416339ce2652b599/src%2Ftest%2Fcompile-fail%2Fborrowck-for-loop-correct-cmt-for-pattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-for-loop-correct-cmt-for-pattern.rs?ref=ee87234eed95d6077247bee5416339ce2652b599", "patch": "@@ -0,0 +1,33 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Issue #16205.\n+\n+struct Foo {\n+    a: [Box<int>, ..3],\n+}\n+\n+fn main() {\n+    let mut y = 1i;\n+    let x = Some(&mut y);\n+    for &a in x.iter() {    //~ ERROR cannot move out\n+    }\n+\n+    let f = Foo {\n+        a: [box 3, box 4, box 5],\n+    };\n+    for &a in f.a.iter() {  //~ ERROR cannot move out\n+    }\n+\n+    let x = Some(box 1i);\n+    for &a in x.iter() {    //~ ERROR cannot move out\n+    }\n+}\n+"}]}