{"sha": "638980a07f72e20fcbcdab12b74b2a1a8663741d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYzODk4MGEwN2Y3MmUyMGZjYmNkYWIxMmI3NGIyYTFhODY2Mzc0MWQ=", "commit": {"author": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2021-02-09T21:03:00Z"}, "committer": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2021-02-09T21:03:00Z"}, "message": "Using tracing macros in placeholder_error.rs", "tree": {"sha": "2f17eb44beea8e9c30b792588de3bc61e9786598", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2f17eb44beea8e9c30b792588de3bc61e9786598"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/638980a07f72e20fcbcdab12b74b2a1a8663741d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/638980a07f72e20fcbcdab12b74b2a1a8663741d", "html_url": "https://github.com/rust-lang/rust/commit/638980a07f72e20fcbcdab12b74b2a1a8663741d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/638980a07f72e20fcbcdab12b74b2a1a8663741d/comments", "author": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1eb79f3c375f4d7834a30b40c20a9c8ec1c31b4c", "url": "https://api.github.com/repos/rust-lang/rust/commits/1eb79f3c375f4d7834a30b40c20a9c8ec1c31b4c", "html_url": "https://github.com/rust-lang/rust/commit/1eb79f3c375f4d7834a30b40c20a9c8ec1c31b4c"}], "stats": {"total": 28, "additions": 7, "deletions": 21}, "files": [{"sha": "8c933df8ca00dee132c0b3931f3e23724d162597", "filename": "compiler/rustc_infer/src/infer/error_reporting/nice_region_error/placeholder_error.rs", "status": "modified", "additions": 7, "deletions": 21, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/638980a07f72e20fcbcdab12b74b2a1a8663741d/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fplaceholder_error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/638980a07f72e20fcbcdab12b74b2a1a8663741d/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fplaceholder_error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fplaceholder_error.rs?ref=638980a07f72e20fcbcdab12b74b2a1a8663741d", "patch": "@@ -190,6 +190,7 @@ impl NiceRegionError<'me, 'tcx> {\n     //    = note: Due to a where-clause on the function `all`,\n     //    = note: `T` must implement `...` for any two lifetimes `'1` and `'2`.\n     //    = note: However, the type `T` only implements `...` for some specific lifetime `'2`.\n+    #[instrument(level = \"debug\", skip(self))]\n     fn try_report_placeholders_trait(\n         &self,\n         vid: Option<ty::Region<'tcx>>,\n@@ -200,17 +201,6 @@ impl NiceRegionError<'me, 'tcx> {\n         expected_substs: SubstsRef<'tcx>,\n         actual_substs: SubstsRef<'tcx>,\n     ) -> DiagnosticBuilder<'tcx> {\n-        debug!(\n-            \"try_report_placeholders_trait(\\\n-             vid={:?}, \\\n-             sub_placeholder={:?}, \\\n-             sup_placeholder={:?}, \\\n-             trait_def_id={:?}, \\\n-             expected_substs={:?}, \\\n-             actual_substs={:?})\",\n-            vid, sub_placeholder, sup_placeholder, trait_def_id, expected_substs, actual_substs\n-        );\n-\n         let span = cause.span(self.tcx());\n         let msg = format!(\n             \"implementation of `{}` is not general enough\",\n@@ -285,17 +275,13 @@ impl NiceRegionError<'me, 'tcx> {\n \n         let any_self_ty_has_vid = actual_self_ty_has_vid || expected_self_ty_has_vid;\n \n-        debug!(\"try_report_placeholders_trait: actual_has_vid={:?}\", actual_has_vid);\n-        debug!(\"try_report_placeholders_trait: expected_has_vid={:?}\", expected_has_vid);\n-        debug!(\"try_report_placeholders_trait: has_sub={:?}\", has_sub);\n-        debug!(\"try_report_placeholders_trait: has_sup={:?}\", has_sup);\n-        debug!(\n-            \"try_report_placeholders_trait: actual_self_ty_has_vid={:?}\",\n-            actual_self_ty_has_vid\n-        );\n         debug!(\n-            \"try_report_placeholders_trait: expected_self_ty_has_vid={:?}\",\n-            expected_self_ty_has_vid\n+            ?actual_has_vid,\n+            ?expected_has_vid,\n+            ?has_sub,\n+            ?has_sup,\n+            ?actual_self_ty_has_vid,\n+            ?expected_self_ty_has_vid,\n         );\n \n         self.explain_actual_impl_that_was_found("}]}