{"sha": "b27fca71d46b2da88611bb5cc8cfb6e90c0a4af0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIyN2ZjYTcxZDQ2YjJkYTg4NjExYmI1Y2M4Y2ZiNmU5MGMwYTRhZjA=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2020-09-06T21:39:58Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2020-09-06T21:40:07Z"}, "message": "rustbuild: Deduplicate LLD checks slightly", "tree": {"sha": "bbcb579f0732293c267d935ae3d2452988965907", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bbcb579f0732293c267d935ae3d2452988965907"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b27fca71d46b2da88611bb5cc8cfb6e90c0a4af0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b27fca71d46b2da88611bb5cc8cfb6e90c0a4af0", "html_url": "https://github.com/rust-lang/rust/commit/b27fca71d46b2da88611bb5cc8cfb6e90c0a4af0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b27fca71d46b2da88611bb5cc8cfb6e90c0a4af0/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5118a51b4d49a139ea21d280001105948de298f7", "url": "https://api.github.com/repos/rust-lang/rust/commits/5118a51b4d49a139ea21d280001105948de298f7", "html_url": "https://github.com/rust-lang/rust/commit/5118a51b4d49a139ea21d280001105948de298f7"}], "stats": {"total": 23, "additions": 13, "deletions": 10}, "files": [{"sha": "c7fc360c23312826196516213d05518d7c121195", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/b27fca71d46b2da88611bb5cc8cfb6e90c0a4af0/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b27fca71d46b2da88611bb5cc8cfb6e90c0a4af0/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=b27fca71d46b2da88611bb5cc8cfb6e90c0a4af0", "patch": "@@ -758,7 +758,7 @@ impl<'a> Builder<'a> {\n         if let Some(linker) = self.linker(compiler.host) {\n             cmd.env(\"RUSTDOC_LINKER\", linker);\n         }\n-        if self.config.use_lld && !compiler.host.contains(\"msvc\") {\n+        if self.is_fuse_ld_lld(compiler.host) {\n             cmd.env(\"RUSTDOC_FUSE_LD_LLD\", \"1\");\n         }\n         cmd\n@@ -1047,16 +1047,15 @@ impl<'a> Builder<'a> {\n         if let Some(host_linker) = self.linker(compiler.host) {\n             cargo.env(\"RUSTC_HOST_LINKER\", host_linker);\n         }\n-        if self.config.use_lld && !compiler.host.contains(\"msvc\") {\n+        if self.is_fuse_ld_lld(compiler.host) {\n             cargo.env(\"RUSTC_HOST_FUSE_LD_LLD\", \"1\");\n         }\n \n         if let Some(target_linker) = self.linker(target) {\n             let target = crate::envify(&target.triple);\n             cargo.env(&format!(\"CARGO_TARGET_{}_LINKER\", target), target_linker);\n         }\n-\n-        if self.config.use_lld && !target.contains(\"msvc\") {\n+        if self.is_fuse_ld_lld(target) {\n             rustflags.arg(\"-Clink-args=-fuse-ld=lld\");\n         }\n "}, {"sha": "8d60284cd4ff05d9f3240b0a038045349dfe055c", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b27fca71d46b2da88611bb5cc8cfb6e90c0a4af0/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b27fca71d46b2da88611bb5cc8cfb6e90c0a4af0/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=b27fca71d46b2da88611bb5cc8cfb6e90c0a4af0", "patch": "@@ -863,15 +863,19 @@ impl Build {\n             && !target.contains(\"msvc\")\n         {\n             Some(self.cc(target))\n-        } else if target.contains(\"msvc\") && self.config.use_lld && self.build == target {\n-            // `rust.use_lld` means using LLD directly only for MSVC, for other targets it only\n-            // adds `-fuse-ld=lld` to already selected linker.\n+        } else if self.config.use_lld && !self.is_fuse_ld_lld(target) && self.build == target {\n             Some(&self.initial_lld)\n         } else {\n             None\n         }\n     }\n \n+    // LLD is used through `-fuse-ld=lld` rather than directly.\n+    // Only MSVC targets use LLD directly at the moment.\n+    fn is_fuse_ld_lld(&self, target: TargetSelection) -> bool {\n+        self.config.use_lld && !target.contains(\"msvc\")\n+    }\n+\n     /// Returns if this target should statically link the C runtime, if specified\n     fn crt_static(&self, target: TargetSelection) -> Option<bool> {\n         if target.contains(\"pc-windows-msvc\") {"}, {"sha": "732028fb6ed4789d84ebdedeab94b1718c655e10", "filename": "src/bootstrap/test.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b27fca71d46b2da88611bb5cc8cfb6e90c0a4af0/src%2Fbootstrap%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b27fca71d46b2da88611bb5cc8cfb6e90c0a4af0/src%2Fbootstrap%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftest.rs?ref=b27fca71d46b2da88611bb5cc8cfb6e90c0a4af0", "patch": "@@ -603,7 +603,7 @@ impl Step for RustdocTheme {\n         if let Some(linker) = builder.linker(self.compiler.host) {\n             cmd.env(\"RUSTDOC_LINKER\", linker);\n         }\n-        if builder.config.use_lld && !self.compiler.host.contains(\"msvc\") {\n+        if builder.is_fuse_ld_lld(self.compiler.host) {\n             cmd.env(\"RUSTDOC_FUSE_LD_LLD\", \"1\");\n         }\n         try_run(builder, &mut cmd);\n@@ -1070,14 +1070,14 @@ impl Step for Compiletest {\n \n         let mut hostflags = flags.clone();\n         hostflags.push(format!(\"-Lnative={}\", builder.test_helpers_out(compiler.host).display()));\n-        if builder.config.use_lld && !compiler.host.triple.contains(\"msvc\") {\n+        if builder.is_fuse_ld_lld(compiler.host) {\n             hostflags.push(\"-Clink-args=-fuse-ld=lld\".to_string());\n         }\n         cmd.arg(\"--host-rustcflags\").arg(hostflags.join(\" \"));\n \n         let mut targetflags = flags;\n         targetflags.push(format!(\"-Lnative={}\", builder.test_helpers_out(target).display()));\n-        if builder.config.use_lld && !target.contains(\"msvc\") {\n+        if builder.is_fuse_ld_lld(target) {\n             targetflags.push(\"-Clink-args=-fuse-ld=lld\".to_string());\n         }\n         cmd.arg(\"--target-rustcflags\").arg(targetflags.join(\" \"));"}]}