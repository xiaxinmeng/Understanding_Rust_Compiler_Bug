{"sha": "c3159b851a90d3071a97cfb84416f09058c1733a", "node_id": "C_kwDOAAsO6NoAKGMzMTU5Yjg1MWE5MGQzMDcxYTk3Y2ZiODQ0MTZmMDkwNThjMTczM2E", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-03-11T21:29:15Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-03-11T21:29:28Z"}, "message": "Gate const closures even when they appear in macros", "tree": {"sha": "45c42cac47f42cd636ffb88d5e4960da4fcc4149", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/45c42cac47f42cd636ffb88d5e4960da4fcc4149"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c3159b851a90d3071a97cfb84416f09058c1733a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c3159b851a90d3071a97cfb84416f09058c1733a", "html_url": "https://github.com/rust-lang/rust/commit/c3159b851a90d3071a97cfb84416f09058c1733a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c3159b851a90d3071a97cfb84416f09058c1733a/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bd4355500a53ba2b3d82d754d1d669710d4b442c", "url": "https://api.github.com/repos/rust-lang/rust/commits/bd4355500a53ba2b3d82d754d1d669710d4b442c", "html_url": "https://github.com/rust-lang/rust/commit/bd4355500a53ba2b3d82d754d1d669710d4b442c"}], "stats": {"total": 44, "additions": 29, "deletions": 15}, "files": [{"sha": "9af25e5cae2866f4f3d163cfa63da95f3f72a3db", "filename": "compiler/rustc_ast_passes/src/feature_gate.rs", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/c3159b851a90d3071a97cfb84416f09058c1733a/compiler%2Frustc_ast_passes%2Fsrc%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3159b851a90d3071a97cfb84416f09058c1733a/compiler%2Frustc_ast_passes%2Fsrc%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_passes%2Fsrc%2Ffeature_gate.rs?ref=c3159b851a90d3071a97cfb84416f09058c1733a", "patch": "@@ -422,14 +422,6 @@ impl<'a> Visitor<'a> for PostExpansionVisitor<'a> {\n             ast::ExprKind::TryBlock(_) => {\n                 gate_feature_post!(&self, try_blocks, e.span, \"`try` expression is experimental\");\n             }\n-            ast::ExprKind::Closure(box ast::Closure { constness: ast::Const::Yes(_), .. }) => {\n-                gate_feature_post!(\n-                    &self,\n-                    const_closures,\n-                    e.span,\n-                    \"const closures are experimental\"\n-                );\n-            }\n             _ => {}\n         }\n         visit::walk_expr(self, e)\n@@ -592,6 +584,7 @@ pub fn check_crate(krate: &ast::Crate, sess: &Session) {\n     gate_all!(associated_const_equality, \"associated const equality is incomplete\");\n     gate_all!(yeet_expr, \"`do yeet` expression is experimental\");\n     gate_all!(dyn_star, \"`dyn*` trait objects are experimental\");\n+    gate_all!(const_closures, \"const closures are experimental\");\n \n     // All uses of `gate_all!` below this point were added in #65742,\n     // and subsequently disabled (with the non-early gating readded)."}, {"sha": "1d12dd4709475283dba73e11bc348f72704002ac", "filename": "compiler/rustc_parse/src/parser/expr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c3159b851a90d3071a97cfb84416f09058c1733a/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3159b851a90d3071a97cfb84416f09058c1733a/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs?ref=c3159b851a90d3071a97cfb84416f09058c1733a", "patch": "@@ -2105,7 +2105,7 @@ impl<'a> Parser<'a> {\n             ClosureBinder::NotPresent\n         };\n \n-        let constness = self.parse_closure_constness(Case::Sensitive);\n+        let constness = self.parse_closure_constness();\n \n         let movability =\n             if self.eat_keyword(kw::Static) { Movability::Static } else { Movability::Movable };"}, {"sha": "3251dd6d0c6fbff002a555cc41b25afd11d0b8a3", "filename": "compiler/rustc_parse/src/parser/mod.rs", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/c3159b851a90d3071a97cfb84416f09058c1733a/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3159b851a90d3071a97cfb84416f09058c1733a/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fmod.rs?ref=c3159b851a90d3071a97cfb84416f09058c1733a", "patch": "@@ -1196,9 +1196,13 @@ impl<'a> Parser<'a> {\n         self.parse_constness_(case, false)\n     }\n \n-    /// Parses constness for closures\n-    fn parse_closure_constness(&mut self, case: Case) -> Const {\n-        self.parse_constness_(case, true)\n+    /// Parses constness for closures (case sensitive, feature-gated)\n+    fn parse_closure_constness(&mut self) -> Const {\n+        let constness = self.parse_constness_(Case::Sensitive, true);\n+        if let Const::Yes(span) = constness {\n+            self.sess.gated_spans.gate(sym::const_closures, span);\n+        }\n+        constness\n     }\n \n     fn parse_constness_(&mut self, case: Case, is_closure: bool) -> Const {"}, {"sha": "d1c93ab9f95af42c09cc1fc2da0160d713e0f7a7", "filename": "tests/ui/rfc-2632-const-trait-impl/gate.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c3159b851a90d3071a97cfb84416f09058c1733a/tests%2Fui%2Frfc-2632-const-trait-impl%2Fgate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3159b851a90d3071a97cfb84416f09058c1733a/tests%2Fui%2Frfc-2632-const-trait-impl%2Fgate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Frfc-2632-const-trait-impl%2Fgate.rs?ref=c3159b851a90d3071a97cfb84416f09058c1733a", "patch": "@@ -1,5 +1,13 @@\n // gate-test-const_closures\n+\n fn main() {\n     (const || {})();\n     //~^ ERROR: const closures are experimental\n }\n+\n+macro_rules! e {\n+    ($e:expr) => {}\n+}\n+\n+e!((const || {}));\n+//~^ ERROR const closures are experimental"}, {"sha": "11cc2cd569a4358c1b4d0941ea0eb3ecbe0d8057", "filename": "tests/ui/rfc-2632-const-trait-impl/gate.stderr", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/c3159b851a90d3071a97cfb84416f09058c1733a/tests%2Fui%2Frfc-2632-const-trait-impl%2Fgate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c3159b851a90d3071a97cfb84416f09058c1733a/tests%2Fui%2Frfc-2632-const-trait-impl%2Fgate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Frfc-2632-const-trait-impl%2Fgate.stderr?ref=c3159b851a90d3071a97cfb84416f09058c1733a", "patch": "@@ -1,12 +1,21 @@\n error[E0658]: const closures are experimental\n-  --> $DIR/gate.rs:3:6\n+  --> $DIR/gate.rs:4:6\n    |\n LL |     (const || {})();\n-   |      ^^^^^^^^^^^\n+   |      ^^^^^\n    |\n    = note: see issue #106003 <https://github.com/rust-lang/rust/issues/106003> for more information\n    = help: add `#![feature(const_closures)]` to the crate attributes to enable\n \n-error: aborting due to previous error\n+error[E0658]: const closures are experimental\n+  --> $DIR/gate.rs:12:5\n+   |\n+LL | e!((const || {}));\n+   |     ^^^^^\n+   |\n+   = note: see issue #106003 <https://github.com/rust-lang/rust/issues/106003> for more information\n+   = help: add `#![feature(const_closures)]` to the crate attributes to enable\n+\n+error: aborting due to 2 previous errors\n \n For more information about this error, try `rustc --explain E0658`."}]}