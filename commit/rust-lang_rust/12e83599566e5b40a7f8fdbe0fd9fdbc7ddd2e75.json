{"sha": "12e83599566e5b40a7f8fdbe0fd9fdbc7ddd2e75", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEyZTgzNTk5NTY2ZTViNDBhN2Y4ZmRiZTBmZDlmZGJjN2RkZDJlNzU=", "commit": {"author": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2018-05-29T08:52:36Z"}, "committer": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2018-06-01T07:32:24Z"}, "message": "Remove outdated AllocId decoding function.", "tree": {"sha": "3bff65d1947aad9a6d43346c9f049e9078e51910", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3bff65d1947aad9a6d43346c9f049e9078e51910"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/12e83599566e5b40a7f8fdbe0fd9fdbc7ddd2e75", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/12e83599566e5b40a7f8fdbe0fd9fdbc7ddd2e75", "html_url": "https://github.com/rust-lang/rust/commit/12e83599566e5b40a7f8fdbe0fd9fdbc7ddd2e75", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/12e83599566e5b40a7f8fdbe0fd9fdbc7ddd2e75/comments", "author": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "22f6163db47dfb1c5c02bcd0543eb0f4f92dd164", "url": "https://api.github.com/repos/rust-lang/rust/commits/22f6163db47dfb1c5c02bcd0543eb0f4f92dd164", "html_url": "https://github.com/rust-lang/rust/commit/22f6163db47dfb1c5c02bcd0543eb0f4f92dd164"}], "stats": {"total": 43, "additions": 1, "deletions": 42}, "files": [{"sha": "6bd5814799ae07d6c1847c99bfc77b11528dc55c", "filename": "src/librustc/mir/interpret/mod.rs", "status": "modified", "additions": 1, "deletions": 42, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/12e83599566e5b40a7f8fdbe0fd9fdbc7ddd2e75/src%2Flibrustc%2Fmir%2Finterpret%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/12e83599566e5b40a7f8fdbe0fd9fdbc7ddd2e75/src%2Flibrustc%2Fmir%2Finterpret%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Finterpret%2Fmod.rs?ref=12e83599566e5b40a7f8fdbe0fd9fdbc7ddd2e75", "patch": "@@ -23,7 +23,7 @@ use std::io;\n use std::ops::{Deref, DerefMut};\n use std::hash::Hash;\n use syntax::ast::Mutability;\n-use rustc_serialize::{Encoder, Decoder, Decodable, Encodable};\n+use rustc_serialize::{Encoder, Decodable, Encodable};\n use rustc_data_structures::sorted_map::SortedMap;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_data_structures::sync::{Lock as Mutex, HashMapExt};\n@@ -209,47 +209,6 @@ pub fn specialized_encode_alloc_id<\n     Ok(())\n }\n \n-pub fn specialized_decode_alloc_id<\n-    'a, 'tcx,\n-    D: Decoder,\n-    CACHE: FnOnce(&mut D, AllocId),\n->(\n-    decoder: &mut D,\n-    tcx: TyCtxt<'a, 'tcx, 'tcx>,\n-    cache: CACHE,\n-) -> Result<AllocId, D::Error> {\n-    match AllocKind::decode(decoder)? {\n-        AllocKind::Alloc => {\n-            let alloc_id = tcx.alloc_map.lock().reserve();\n-            trace!(\"creating alloc id {:?}\", alloc_id);\n-            // insert early to allow recursive allocs\n-            cache(decoder, alloc_id);\n-\n-            let allocation = <&'tcx Allocation as Decodable>::decode(decoder)?;\n-            trace!(\"decoded alloc {:?} {:#?}\", alloc_id, allocation);\n-            tcx.alloc_map.lock().set_id_memory(alloc_id, allocation);\n-\n-            Ok(alloc_id)\n-        },\n-        AllocKind::Fn => {\n-            trace!(\"creating fn alloc id\");\n-            let instance = ty::Instance::decode(decoder)?;\n-            trace!(\"decoded fn alloc instance: {:?}\", instance);\n-            let id = tcx.alloc_map.lock().create_fn_alloc(instance);\n-            trace!(\"created fn alloc id: {:?}\", id);\n-            cache(decoder, id);\n-            Ok(id)\n-        },\n-        AllocKind::Static => {\n-            trace!(\"creating extern static alloc id at\");\n-            let did = DefId::decode(decoder)?;\n-            let alloc_id = tcx.alloc_map.lock().intern_static(did);\n-            cache(decoder, alloc_id);\n-            Ok(alloc_id)\n-        },\n-    }\n-}\n-\n // Used to avoid infinite recursion when decoding cyclic allocations.\n type DecodingSessionId = NonZeroU32;\n "}]}