{"sha": "1750c7bdd36ec18324423bd30867e39d787d5977", "node_id": "C_kwDOAAsO6NoAKDE3NTBjN2JkZDM2ZWMxODMyNDQyM2JkMzA4NjdlMzlkNzg3ZDU5Nzc", "commit": {"author": {"name": "Giacomo Stevanato", "email": "giaco.stevanato@gmail.com", "date": "2022-09-10T13:00:37Z"}, "committer": {"name": "Giacomo Stevanato", "email": "giaco.stevanato@gmail.com", "date": "2022-10-03T18:23:54Z"}, "message": "Clarify documentation", "tree": {"sha": "d17cfeb4b650fb1745310f7df5b432f2000ac96c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d17cfeb4b650fb1745310f7df5b432f2000ac96c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1750c7bdd36ec18324423bd30867e39d787d5977", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1750c7bdd36ec18324423bd30867e39d787d5977", "html_url": "https://github.com/rust-lang/rust/commit/1750c7bdd36ec18324423bd30867e39d787d5977", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1750c7bdd36ec18324423bd30867e39d787d5977/comments", "author": {"login": "SkiFire13", "id": 9020423, "node_id": "MDQ6VXNlcjkwMjA0MjM=", "avatar_url": "https://avatars.githubusercontent.com/u/9020423?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SkiFire13", "html_url": "https://github.com/SkiFire13", "followers_url": "https://api.github.com/users/SkiFire13/followers", "following_url": "https://api.github.com/users/SkiFire13/following{/other_user}", "gists_url": "https://api.github.com/users/SkiFire13/gists{/gist_id}", "starred_url": "https://api.github.com/users/SkiFire13/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SkiFire13/subscriptions", "organizations_url": "https://api.github.com/users/SkiFire13/orgs", "repos_url": "https://api.github.com/users/SkiFire13/repos", "events_url": "https://api.github.com/users/SkiFire13/events{/privacy}", "received_events_url": "https://api.github.com/users/SkiFire13/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SkiFire13", "id": 9020423, "node_id": "MDQ6VXNlcjkwMjA0MjM=", "avatar_url": "https://avatars.githubusercontent.com/u/9020423?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SkiFire13", "html_url": "https://github.com/SkiFire13", "followers_url": "https://api.github.com/users/SkiFire13/followers", "following_url": "https://api.github.com/users/SkiFire13/following{/other_user}", "gists_url": "https://api.github.com/users/SkiFire13/gists{/gist_id}", "starred_url": "https://api.github.com/users/SkiFire13/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SkiFire13/subscriptions", "organizations_url": "https://api.github.com/users/SkiFire13/orgs", "repos_url": "https://api.github.com/users/SkiFire13/repos", "events_url": "https://api.github.com/users/SkiFire13/events{/privacy}", "received_events_url": "https://api.github.com/users/SkiFire13/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dad049cb5cb3d259836cfe6a9160521d9d4809ca", "url": "https://api.github.com/repos/rust-lang/rust/commits/dad049cb5cb3d259836cfe6a9160521d9d4809ca", "html_url": "https://github.com/rust-lang/rust/commit/dad049cb5cb3d259836cfe6a9160521d9d4809ca"}], "stats": {"total": 7, "additions": 3, "deletions": 4}, "files": [{"sha": "9f2555ee1611af5f2580ffd7cb8685b9183e2287", "filename": "library/alloc/src/vec/in_place_collect.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/1750c7bdd36ec18324423bd30867e39d787d5977/library%2Falloc%2Fsrc%2Fvec%2Fin_place_collect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1750c7bdd36ec18324423bd30867e39d787d5977/library%2Falloc%2Fsrc%2Fvec%2Fin_place_collect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fvec%2Fin_place_collect.rs?ref=1750c7bdd36ec18324423bd30867e39d787d5977", "patch": "@@ -194,11 +194,10 @@ where\n             );\n         }\n \n-        // Drop any remaining values at the tail of the source but prevent drop of the allocation\n-        // itself once IntoIter goes out of scope.\n-        // If the drop panics then we also try to drop the destination buffer and its elements.\n+        // The ownership of the allocation and the new `T` values is temporarily moved into `dst_guard`.\n         // This is safe because `forget_allocation_drop_remaining` immediately forgets the allocation\n-        // and won't panic before that.\n+        // before any panic can occur in order to avoid any double free, and then proceeds to drop\n+        // any remaining values at the tail of the source.\n         //\n         // Note: This access to the source wouldn't be allowed by the TrustedRandomIteratorNoCoerce\n         // contract (used by SpecInPlaceCollect below). But see the \"O(1) collect\" section in the"}]}