{"sha": "c79f6dd5a0769aa753bf04442cf70e1af98f0962", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM3OWY2ZGQ1YTA3NjlhYTc1M2JmMDQ0NDJjZjcwZTFhZjk4ZjA5NjI=", "commit": {"author": {"name": "Frank Steffahn", "email": "frank.steffahn@stu.uni-kiel.de", "date": "2021-08-22T16:07:01Z"}, "committer": {"name": "Frank Steffahn", "email": "frank.steffahn@stu.uni-kiel.de", "date": "2021-08-22T16:07:01Z"}, "message": "Fix a typo \u201can\u201d\u2192\u201ca\u201d", "tree": {"sha": "16dc1b8e59a39c889914cdf21744b29dfebe62ba", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/16dc1b8e59a39c889914cdf21744b29dfebe62ba"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c79f6dd5a0769aa753bf04442cf70e1af98f0962", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c79f6dd5a0769aa753bf04442cf70e1af98f0962", "html_url": "https://github.com/rust-lang/rust/commit/c79f6dd5a0769aa753bf04442cf70e1af98f0962", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c79f6dd5a0769aa753bf04442cf70e1af98f0962/comments", "author": {"login": "steffahn", "id": 3986214, "node_id": "MDQ6VXNlcjM5ODYyMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3986214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steffahn", "html_url": "https://github.com/steffahn", "followers_url": "https://api.github.com/users/steffahn/followers", "following_url": "https://api.github.com/users/steffahn/following{/other_user}", "gists_url": "https://api.github.com/users/steffahn/gists{/gist_id}", "starred_url": "https://api.github.com/users/steffahn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steffahn/subscriptions", "organizations_url": "https://api.github.com/users/steffahn/orgs", "repos_url": "https://api.github.com/users/steffahn/repos", "events_url": "https://api.github.com/users/steffahn/events{/privacy}", "received_events_url": "https://api.github.com/users/steffahn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "steffahn", "id": 3986214, "node_id": "MDQ6VXNlcjM5ODYyMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3986214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steffahn", "html_url": "https://github.com/steffahn", "followers_url": "https://api.github.com/users/steffahn/followers", "following_url": "https://api.github.com/users/steffahn/following{/other_user}", "gists_url": "https://api.github.com/users/steffahn/gists{/gist_id}", "starred_url": "https://api.github.com/users/steffahn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steffahn/subscriptions", "organizations_url": "https://api.github.com/users/steffahn/orgs", "repos_url": "https://api.github.com/users/steffahn/repos", "events_url": "https://api.github.com/users/steffahn/events{/privacy}", "received_events_url": "https://api.github.com/users/steffahn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a0d4372ff9bf773a64c9dc7c51ef0392817c27ee", "url": "https://api.github.com/repos/rust-lang/rust/commits/a0d4372ff9bf773a64c9dc7c51ef0392817c27ee", "html_url": "https://github.com/rust-lang/rust/commit/a0d4372ff9bf773a64c9dc7c51ef0392817c27ee"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "1b683169023563000f19f35b41dbb00446e83449", "filename": "src/helpers.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c79f6dd5a0769aa753bf04442cf70e1af98f0962/src%2Fhelpers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c79f6dd5a0769aa753bf04442cf70e1af98f0962/src%2Fhelpers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fhelpers.rs?ref=c79f6dd5a0769aa753bf04442cf70e1af98f0962", "patch": "@@ -78,7 +78,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n         self.eval_context_mut().eval_path_scalar(&[\"std\", \"sys\", \"windows\", module, name])\n     }\n \n-    /// Helper function to get a `windows` constant as an `u64`.\n+    /// Helper function to get a `windows` constant as a `u64`.\n     fn eval_windows_u64(&mut self, module: &str, name: &str) -> InterpResult<'tcx, u64> {\n         // TODO: Cache the result.\n         self.eval_windows(module, name)?.to_u64()"}]}