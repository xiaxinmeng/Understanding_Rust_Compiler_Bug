{"sha": "35a2096538cf7cf2b73073a9c078dd7acd578764", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM1YTIwOTY1MzhjZjdjZjJiNzMwNzNhOWMwNzhkZDdhY2Q1Nzg3NjQ=", "commit": {"author": {"name": "dylni", "email": "46035563+dylni@users.noreply.github.com", "date": "2021-03-17T02:17:49Z"}, "committer": {"name": "dylni", "email": "46035563+dylni@users.noreply.github.com", "date": "2021-03-17T02:17:49Z"}, "message": "Fix comments based on review", "tree": {"sha": "14020032ba4e70724eb7825925593d83ce325b4c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/14020032ba4e70724eb7825925593d83ce325b4c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/35a2096538cf7cf2b73073a9c078dd7acd578764", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/35a2096538cf7cf2b73073a9c078dd7acd578764", "html_url": "https://github.com/rust-lang/rust/commit/35a2096538cf7cf2b73073a9c078dd7acd578764", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/35a2096538cf7cf2b73073a9c078dd7acd578764/comments", "author": {"login": "dylni", "id": 46035563, "node_id": "MDQ6VXNlcjQ2MDM1NTYz", "avatar_url": "https://avatars.githubusercontent.com/u/46035563?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dylni", "html_url": "https://github.com/dylni", "followers_url": "https://api.github.com/users/dylni/followers", "following_url": "https://api.github.com/users/dylni/following{/other_user}", "gists_url": "https://api.github.com/users/dylni/gists{/gist_id}", "starred_url": "https://api.github.com/users/dylni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dylni/subscriptions", "organizations_url": "https://api.github.com/users/dylni/orgs", "repos_url": "https://api.github.com/users/dylni/repos", "events_url": "https://api.github.com/users/dylni/events{/privacy}", "received_events_url": "https://api.github.com/users/dylni/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dylni", "id": 46035563, "node_id": "MDQ6VXNlcjQ2MDM1NTYz", "avatar_url": "https://avatars.githubusercontent.com/u/46035563?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dylni", "html_url": "https://github.com/dylni", "followers_url": "https://api.github.com/users/dylni/followers", "following_url": "https://api.github.com/users/dylni/following{/other_user}", "gists_url": "https://api.github.com/users/dylni/gists{/gist_id}", "starred_url": "https://api.github.com/users/dylni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dylni/subscriptions", "organizations_url": "https://api.github.com/users/dylni/orgs", "repos_url": "https://api.github.com/users/dylni/repos", "events_url": "https://api.github.com/users/dylni/events{/privacy}", "received_events_url": "https://api.github.com/users/dylni/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "922ccacc93b75260045d4871f029c8be4cb17d36", "url": "https://api.github.com/repos/rust-lang/rust/commits/922ccacc93b75260045d4871f029c8be4cb17d36", "html_url": "https://github.com/rust-lang/rust/commit/922ccacc93b75260045d4871f029c8be4cb17d36"}], "stats": {"total": 7, "additions": 2, "deletions": 5}, "files": [{"sha": "5dc62d4ec70da16ec636b7d148cc976d17db50f2", "filename": "library/alloc/src/collections/btree/search.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/35a2096538cf7cf2b73073a9c078dd7acd578764/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fsearch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35a2096538cf7cf2b73073a9c078dd7acd578764/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fsearch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fsearch.rs?ref=35a2096538cf7cf2b73073a9c078dd7acd578764", "patch": "@@ -94,9 +94,8 @@ impl<BorrowType: marker::BorrowType, K, V> NodeRef<BorrowType, K, V, marker::Lea\n         K: Borrow<Q>,\n         R: RangeBounds<Q>,\n     {\n-        // It might be unsound to inline these variables if this logic changes (#81138).\n-        // We assume the bounds reported by `range` remain the same, but\n-        // an adversarial implementation could change between calls\n+        // Inlining these variables should be avoided. We assume the bounds reported by `range`\n+        // remain the same, but an adversarial implementation could change between calls (#81138).\n         let (start, end) = (range.start_bound(), range.end_bound());\n         match (start, end) {\n             (Bound::Excluded(s), Bound::Excluded(e)) if s == e => {\n@@ -114,8 +113,6 @@ impl<BorrowType: marker::BorrowType, K, V> NodeRef<BorrowType, K, V, marker::Lea\n         loop {\n             let (lower_edge_idx, lower_child_bound) = self.find_lower_bound_index(lower_bound);\n             let (upper_edge_idx, upper_child_bound) = self.find_upper_bound_index(upper_bound);\n-            // SAFETY: This panic is used for safety, so external impls can't be called here. The\n-            // comparison is done with integers for that reason.\n             if lower_edge_idx > upper_edge_idx {\n                 panic!(\"Ord is ill-defined in BTreeMap range\")\n             }"}]}