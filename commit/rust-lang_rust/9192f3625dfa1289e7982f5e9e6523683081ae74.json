{"sha": "9192f3625dfa1289e7982f5e9e6523683081ae74", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkxOTJmMzYyNWRmYTEyODllNzk4MmY1ZTllNjUyMzY4MzA4MWFlNzQ=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2019-10-25T17:45:58Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-10-25T17:45:58Z"}, "message": "Rollup merge of #65799 - LukasKalbertodt:fill-array-value-iter-tracking-issue, r=Centril\n\nFill tracking issue number for `array_value_iter`\n\nThanks for [noticing](https://github.com/rust-lang/rust/pull/62959#discussion_r338930448)!\n\nr? @Centril", "tree": {"sha": "8f62842fa7eee3fe3a935da6c1c3fb6eb10a6883", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8f62842fa7eee3fe3a935da6c1c3fb6eb10a6883"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9192f3625dfa1289e7982f5e9e6523683081ae74", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdszTWCRBK7hj4Ov3rIwAAdHIIAH8j5StueOhAF8qmJz+orFfu\n0v3zSRtbfyeE1+o0gWAmHGS/S9qiBlRP+MhWyfpcWoqfrYlh6rx6Q/T2vBvMgpvP\nuKVj+7ds+joyLujrx2hnOxUFq21WmJlxQdpbvDKEhKMqMAKML71d+sk/4bEumdKc\nzsfbnxSZrZaud34sgE/UCcXFvne/fli9aGYqxPhOFZ8ACJKnMP9+4ZSp/QNOWUr2\niL9g7qZGjvLAfAbfsLWbeVDPaWw5YNI9xlz+UWnF9aUrEekjyLvwwDfK8Ap3L1Kj\nRBOZgbSMR8yIoepeCUtFZdS0+GqfiRGcsOnmY14AIRtOd937+CKqoE6d6jjyl2w=\n=0c2P\n-----END PGP SIGNATURE-----\n", "payload": "tree 8f62842fa7eee3fe3a935da6c1c3fb6eb10a6883\nparent 7068c2d4e9af54c1e1a2fae2a7d17786c49fea7d\nparent dcf343689973ef81d674c1df0f21fc9332c73f3f\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1572025558 +0900\ncommitter GitHub <noreply@github.com> 1572025558 +0900\n\nRollup merge of #65799 - LukasKalbertodt:fill-array-value-iter-tracking-issue, r=Centril\n\nFill tracking issue number for `array_value_iter`\n\nThanks for [noticing](https://github.com/rust-lang/rust/pull/62959#discussion_r338930448)!\n\nr? @Centril\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9192f3625dfa1289e7982f5e9e6523683081ae74", "html_url": "https://github.com/rust-lang/rust/commit/9192f3625dfa1289e7982f5e9e6523683081ae74", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9192f3625dfa1289e7982f5e9e6523683081ae74/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7068c2d4e9af54c1e1a2fae2a7d17786c49fea7d", "url": "https://api.github.com/repos/rust-lang/rust/commits/7068c2d4e9af54c1e1a2fae2a7d17786c49fea7d", "html_url": "https://github.com/rust-lang/rust/commit/7068c2d4e9af54c1e1a2fae2a7d17786c49fea7d"}, {"sha": "dcf343689973ef81d674c1df0f21fc9332c73f3f", "url": "https://api.github.com/repos/rust-lang/rust/commits/dcf343689973ef81d674c1df0f21fc9332c73f3f", "html_url": "https://github.com/rust-lang/rust/commit/dcf343689973ef81d674c1df0f21fc9332c73f3f"}], "stats": {"total": 22, "additions": 11, "deletions": 11}, "files": [{"sha": "11803238407c8d5522fc0739300cd197c2d38d67", "filename": "src/libcore/array/iter.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/9192f3625dfa1289e7982f5e9e6523683081ae74/src%2Flibcore%2Farray%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9192f3625dfa1289e7982f5e9e6523683081ae74/src%2Flibcore%2Farray%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Farray%2Fiter.rs?ref=9192f3625dfa1289e7982f5e9e6523683081ae74", "patch": "@@ -13,7 +13,7 @@ use super::LengthAtMost32;\n /// A by-value [array] iterator.\n ///\n /// [array]: ../../std/primitive.array.html\n-#[unstable(feature = \"array_value_iter\", issue = \"0\")]\n+#[unstable(feature = \"array_value_iter\", issue = \"65798\")]\n pub struct IntoIter<T, const N: usize>\n where\n     [T; N]: LengthAtMost32,\n@@ -49,7 +49,7 @@ where\n     /// *Note*: this method might never get stabilized and/or removed in the\n     /// future as there will likely be another, preferred way of obtaining this\n     /// iterator (either via `IntoIterator` for arrays or via another way).\n-    #[unstable(feature = \"array_value_iter\", issue = \"0\")]\n+    #[unstable(feature = \"array_value_iter\", issue = \"65798\")]\n     pub fn new(array: [T; N]) -> Self {\n         // The transmute here is actually safe. The docs of `MaybeUninit`\n         // promise:\n@@ -95,7 +95,7 @@ where\n }\n \n \n-#[stable(feature = \"array_value_iter_impls\", since = \"1.38.0\")]\n+#[stable(feature = \"array_value_iter_impls\", since = \"1.40.0\")]\n impl<T, const N: usize> Iterator for IntoIter<T, {N}>\n where\n     [T; N]: LengthAtMost32,\n@@ -141,7 +141,7 @@ where\n     }\n }\n \n-#[stable(feature = \"array_value_iter_impls\", since = \"1.38.0\")]\n+#[stable(feature = \"array_value_iter_impls\", since = \"1.40.0\")]\n impl<T, const N: usize> DoubleEndedIterator for IntoIter<T, {N}>\n where\n     [T; N]: LengthAtMost32,\n@@ -176,7 +176,7 @@ where\n     }\n }\n \n-#[stable(feature = \"array_value_iter_impls\", since = \"1.38.0\")]\n+#[stable(feature = \"array_value_iter_impls\", since = \"1.40.0\")]\n impl<T, const N: usize> Drop for IntoIter<T, {N}>\n where\n     [T; N]: LengthAtMost32,\n@@ -189,7 +189,7 @@ where\n     }\n }\n \n-#[stable(feature = \"array_value_iter_impls\", since = \"1.38.0\")]\n+#[stable(feature = \"array_value_iter_impls\", since = \"1.40.0\")]\n impl<T, const N: usize> ExactSizeIterator for IntoIter<T, {N}>\n where\n     [T; N]: LengthAtMost32,\n@@ -204,7 +204,7 @@ where\n     }\n }\n \n-#[stable(feature = \"array_value_iter_impls\", since = \"1.38.0\")]\n+#[stable(feature = \"array_value_iter_impls\", since = \"1.40.0\")]\n impl<T, const N: usize> FusedIterator for IntoIter<T, {N}>\n where\n     [T; N]: LengthAtMost32,\n@@ -214,13 +214,13 @@ where\n // elements (that will still be yielded) is the length of the range `alive`.\n // This range is decremented in length in either `next` or `next_back`. It is\n // always decremented by 1 in those methods, but only if `Some(_)` is returned.\n-#[stable(feature = \"array_value_iter_impls\", since = \"1.38.0\")]\n+#[stable(feature = \"array_value_iter_impls\", since = \"1.40.0\")]\n unsafe impl<T, const N: usize> TrustedLen for IntoIter<T, {N}>\n where\n     [T; N]: LengthAtMost32,\n {}\n \n-#[stable(feature = \"array_value_iter_impls\", since = \"1.38.0\")]\n+#[stable(feature = \"array_value_iter_impls\", since = \"1.40.0\")]\n impl<T: Clone, const N: usize> Clone for IntoIter<T, {N}>\n where\n     [T; N]: LengthAtMost32,\n@@ -251,7 +251,7 @@ where\n     }\n }\n \n-#[stable(feature = \"array_value_iter_impls\", since = \"1.38.0\")]\n+#[stable(feature = \"array_value_iter_impls\", since = \"1.40.0\")]\n impl<T: fmt::Debug, const N: usize> fmt::Debug for IntoIter<T, {N}>\n where\n     [T; N]: LengthAtMost32,"}, {"sha": "e1ec8b795d04c6bfa467efba3549851c35919355", "filename": "src/libcore/array/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9192f3625dfa1289e7982f5e9e6523683081ae74/src%2Flibcore%2Farray%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9192f3625dfa1289e7982f5e9e6523683081ae74/src%2Flibcore%2Farray%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Farray%2Fmod.rs?ref=9192f3625dfa1289e7982f5e9e6523683081ae74", "patch": "@@ -18,7 +18,7 @@ use crate::slice::{Iter, IterMut};\n mod iter;\n \n #[cfg(not(bootstrap))]\n-#[unstable(feature = \"array_value_iter\", issue = \"0\")]\n+#[unstable(feature = \"array_value_iter\", issue = \"65798\")]\n pub use iter::IntoIter;\n \n /// Utility trait implemented only on arrays of fixed size"}]}