{"sha": "ad5dfecc6ae23bb7d2b8075d705011918ab4f399", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFkNWRmZWNjNmFlMjNiYjdkMmI4MDc1ZDcwNTAxMTkxOGFiNGYzOTk=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-04-05T09:23:27Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-04-05T09:23:27Z"}, "message": "Auto merge of #40811 - estebank:issue-32540, r=jonathandturner\n\nPoint at last valid token on failed `expect_one_of`\n\n```rust\nerror: expected one of `.`, `;`, `?`, `}`, or an operator, found `)`\n  --> $DIR/token-error-correct-3.rs:29:9\n   |\n25 |         foo()\n   |              - expected one of `.`, `;`, `?`, `}`, or an operator after this\n...\n29 |     } else {\n   |     ^ unexpected token\n```\n\nFix #32540.", "tree": {"sha": "134a798c167e4b83e6caed352b73f94864ce2606", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/134a798c167e4b83e6caed352b73f94864ce2606"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ad5dfecc6ae23bb7d2b8075d705011918ab4f399", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ad5dfecc6ae23bb7d2b8075d705011918ab4f399", "html_url": "https://github.com/rust-lang/rust/commit/ad5dfecc6ae23bb7d2b8075d705011918ab4f399", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ad5dfecc6ae23bb7d2b8075d705011918ab4f399/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2564711e803f62e04bebf10408cc1c11297c0caf", "url": "https://api.github.com/repos/rust-lang/rust/commits/2564711e803f62e04bebf10408cc1c11297c0caf", "html_url": "https://github.com/rust-lang/rust/commit/2564711e803f62e04bebf10408cc1c11297c0caf"}, {"sha": "dedb7bbbbf272226f327b8cda8aaa12cf6325eca", "url": "https://api.github.com/repos/rust-lang/rust/commits/dedb7bbbbf272226f327b8cda8aaa12cf6325eca", "html_url": "https://github.com/rust-lang/rust/commit/dedb7bbbbf272226f327b8cda8aaa12cf6325eca"}], "stats": {"total": 148, "additions": 128, "deletions": 20}, "files": [{"sha": "a27fc070ebec3e59877ae0606661f703f02c6eba", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 26, "deletions": 13, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/ad5dfecc6ae23bb7d2b8075d705011918ab4f399/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad5dfecc6ae23bb7d2b8075d705011918ab4f399/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=ad5dfecc6ae23bb7d2b8075d705011918ab4f399", "patch": "@@ -551,20 +551,33 @@ impl<'a> Parser<'a> {\n             expected.dedup();\n             let expect = tokens_to_string(&expected[..]);\n             let actual = self.this_token_to_string();\n-            Err(self.fatal(\n-                &(if expected.len() > 1 {\n-                    (format!(\"expected one of {}, found `{}`\",\n-                             expect,\n-                             actual))\n-                } else if expected.is_empty() {\n-                    (format!(\"unexpected token: `{}`\",\n-                             actual))\n+            let (msg_exp, (label_sp, label_exp)) = if expected.len() > 1 {\n+                let short_expect = if expected.len() > 6 {\n+                    format!(\"{} possible tokens\", expected.len())\n                 } else {\n-                    (format!(\"expected {}, found `{}`\",\n-                             expect,\n-                             actual))\n-                })[..]\n-            ))\n+                    expect.clone()\n+                };\n+                (format!(\"expected one of {}, found `{}`\", expect, actual),\n+                 (self.prev_span.next_point(), format!(\"expected one of {} here\", short_expect)))\n+            } else if expected.is_empty() {\n+                (format!(\"unexpected token: `{}`\", actual),\n+                 (self.prev_span, \"unexpected token after this\".to_string()))\n+            } else {\n+                (format!(\"expected {}, found `{}`\", expect, actual),\n+                 (self.prev_span.next_point(), format!(\"expected {} here\", expect)))\n+            };\n+            let mut err = self.fatal(&msg_exp);\n+            let sp = if self.token == token::Token::Eof {\n+                // This is EOF, don't want to point at the following char, but rather the last token\n+                self.prev_span\n+            } else {\n+                label_sp\n+            };\n+            err.span_label(sp, &label_exp);\n+            if !sp.source_equal(&self.span) {\n+                err.span_label(self.span, &\"unexpected token\");\n+            }\n+            Err(err)\n         }\n     }\n "}, {"sha": "3f09b2009a795541825eb7e0c556c3bf0d49e855", "filename": "src/libsyntax_pos/lib.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ad5dfecc6ae23bb7d2b8075d705011918ab4f399/src%2Flibsyntax_pos%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad5dfecc6ae23bb7d2b8075d705011918ab4f399/src%2Flibsyntax_pos%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_pos%2Flib.rs?ref=ad5dfecc6ae23bb7d2b8075d705011918ab4f399", "patch": "@@ -83,7 +83,13 @@ impl Span {\n     /// Returns a new span representing just the end-point of this span\n     pub fn end_point(self) -> Span {\n         let lo = cmp::max(self.hi.0 - 1, self.lo.0);\n-        Span { lo: BytePos(lo), hi: self.hi, ctxt: self.ctxt }\n+        Span { lo: BytePos(lo), ..self }\n+    }\n+\n+    /// Returns a new span representing the next character after the end-point of this span\n+    pub fn next_point(self) -> Span {\n+        let lo = cmp::max(self.hi.0, self.lo.0 + 1);\n+        Span { lo: BytePos(lo), hi: BytePos(lo + 1), ..self }\n     }\n \n     /// Returns `self` if `self` is not the dummy span, and `other` otherwise."}, {"sha": "e2fee1d18959194cf049a29e4f13cd93211cd1a1", "filename": "src/test/parse-fail/match-refactor-to-expr.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ad5dfecc6ae23bb7d2b8075d705011918ab4f399/src%2Ftest%2Fparse-fail%2Fmatch-refactor-to-expr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad5dfecc6ae23bb7d2b8075d705011918ab4f399/src%2Ftest%2Fparse-fail%2Fmatch-refactor-to-expr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Fmatch-refactor-to-expr.rs?ref=ad5dfecc6ae23bb7d2b8075d705011918ab4f399", "patch": "@@ -14,7 +14,9 @@ fn main() {\n     let foo =\n         match //~ NOTE did you mean to remove this `match` keyword?\n         Some(4).unwrap_or_else(5)\n-        ; //~ ERROR expected one of `.`, `?`, `{`, or an operator, found `;`\n+        //~^ NOTE expected one of `.`, `?`, `{`, or an operator here\n+        ; //~ NOTE unexpected token\n+        //~^ ERROR expected one of `.`, `?`, `{`, or an operator, found `;`\n \n     println!(\"{}\", foo)\n }"}, {"sha": "849787e383f107d2140ed9c97dcce388f2b9b140", "filename": "src/test/ui/resolve/token-error-correct-3.stderr", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ad5dfecc6ae23bb7d2b8075d705011918ab4f399/src%2Ftest%2Fui%2Fresolve%2Ftoken-error-correct-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ad5dfecc6ae23bb7d2b8075d705011918ab4f399/src%2Ftest%2Fui%2Fresolve%2Ftoken-error-correct-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Ftoken-error-correct-3.stderr?ref=ad5dfecc6ae23bb7d2b8075d705011918ab4f399", "patch": "@@ -14,13 +14,16 @@ error: expected one of `,`, `.`, `?`, or an operator, found `;`\n   --> $DIR/token-error-correct-3.rs:23:35\n    |\n 23 |             callback(path.as_ref();  //~ NOTE: unclosed delimiter\n-   |                                   ^\n+   |                                   ^ expected one of `,`, `.`, `?`, or an operator here\n \n error: expected one of `.`, `;`, `?`, `}`, or an operator, found `)`\n   --> $DIR/token-error-correct-3.rs:29:9\n    |\n+25 |             fs::create_dir_all(path.as_ref()).map(|()| true) //~ ERROR: mismatched types\n+   |                                                             - expected one of `.`, `;`, `?`, `}`, or an operator here\n+...\n 29 |         } else { //~ ERROR: incorrect close delimiter: `}`\n-   |         ^\n+   |         ^ unexpected token\n \n error[E0425]: cannot find function `is_directory` in this scope\n   --> $DIR/token-error-correct-3.rs:21:13"}, {"sha": "226fa6469bc740f9403c0f8aa75050a68693574e", "filename": "src/test/ui/resolve/token-error-correct.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ad5dfecc6ae23bb7d2b8075d705011918ab4f399/src%2Ftest%2Fui%2Fresolve%2Ftoken-error-correct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ad5dfecc6ae23bb7d2b8075d705011918ab4f399/src%2Ftest%2Fui%2Fresolve%2Ftoken-error-correct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Ftoken-error-correct.stderr?ref=ad5dfecc6ae23bb7d2b8075d705011918ab4f399", "patch": "@@ -32,7 +32,7 @@ error: expected one of `)`, `,`, `.`, `<`, `?`, `break`, `continue`, `false`, `f\n   --> $DIR/token-error-correct.rs:14:13\n    |\n 14 |     foo(bar(;\n-   |             ^\n+   |             ^ expected one of 18 possible tokens here\n \n error: expected expression, found `)`\n   --> $DIR/token-error-correct.rs:23:1"}, {"sha": "02c119cf727fe473b0518fd58847eb07909cee6e", "filename": "src/test/ui/token/bounds-obj-parens.rs", "status": "renamed", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ad5dfecc6ae23bb7d2b8075d705011918ab4f399/src%2Ftest%2Fui%2Ftoken%2Fbounds-obj-parens.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad5dfecc6ae23bb7d2b8075d705011918ab4f399/src%2Ftest%2Fui%2Ftoken%2Fbounds-obj-parens.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftoken%2Fbounds-obj-parens.rs?ref=ad5dfecc6ae23bb7d2b8075d705011918ab4f399", "patch": "@@ -12,4 +12,6 @@\n \n type A = Box<(Fn(D::Error) -> E) + 'static + Send + Sync>; // OK (but see #39318)\n \n-FAIL //~ ERROR\n+FAIL\n+//~^ ERROR\n+//~| ERROR", "previous_filename": "src/test/parse-fail/bounds-obj-parens.rs"}, {"sha": "4d60be15ecaf0aae9a8801d4a1655831da71eb7a", "filename": "src/test/ui/token/bounds-obj-parens.stderr", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ad5dfecc6ae23bb7d2b8075d705011918ab4f399/src%2Ftest%2Fui%2Ftoken%2Fbounds-obj-parens.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ad5dfecc6ae23bb7d2b8075d705011918ab4f399/src%2Ftest%2Fui%2Ftoken%2Fbounds-obj-parens.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftoken%2Fbounds-obj-parens.stderr?ref=ad5dfecc6ae23bb7d2b8075d705011918ab4f399", "patch": "@@ -0,0 +1,8 @@\n+error: expected one of `!` or `::`, found `<eof>`\n+  --> $DIR/bounds-obj-parens.rs:15:1\n+   |\n+15 | FAIL\n+   | ^^^^ expected one of `!` or `::` here\n+\n+error: aborting due to previous error\n+"}, {"sha": "93759123618fbac94701fea954325dc370335dc7", "filename": "src/test/ui/token/issue-10636-2.rs", "status": "renamed", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ad5dfecc6ae23bb7d2b8075d705011918ab4f399/src%2Ftest%2Fui%2Ftoken%2Fissue-10636-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad5dfecc6ae23bb7d2b8075d705011918ab4f399/src%2Ftest%2Fui%2Ftoken%2Fissue-10636-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftoken%2Fissue-10636-2.rs?ref=ad5dfecc6ae23bb7d2b8075d705011918ab4f399", "patch": "@@ -14,5 +14,7 @@\n pub fn trace_option(option: Option<isize>) {\n     option.map(|some| 42; //~ NOTE: unclosed delimiter\n                           //~^ ERROR: expected one of\n+                          //~| NOTE: expected one of\n+                          //~| NOTE: unexpected token\n } //~ ERROR: incorrect close delimiter\n //~^ ERROR: expected expression, found `)`", "previous_filename": "src/test/compile-fail/issue-10636-2.rs"}, {"sha": "b0bae1248b9698442106d8a2654c8473da2c5ffc", "filename": "src/test/ui/token/issue-10636-2.stderr", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/ad5dfecc6ae23bb7d2b8075d705011918ab4f399/src%2Ftest%2Fui%2Ftoken%2Fissue-10636-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ad5dfecc6ae23bb7d2b8075d705011918ab4f399/src%2Ftest%2Fui%2Ftoken%2Fissue-10636-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftoken%2Fissue-10636-2.stderr?ref=ad5dfecc6ae23bb7d2b8075d705011918ab4f399", "patch": "@@ -0,0 +1,28 @@\n+error: incorrect close delimiter: `}`\n+  --> $DIR/issue-10636-2.rs:19:1\n+   |\n+19 | } //~ ERROR: incorrect close delimiter\n+   | ^\n+   |\n+note: unclosed delimiter\n+  --> $DIR/issue-10636-2.rs:15:15\n+   |\n+15 |     option.map(|some| 42; //~ NOTE: unclosed delimiter\n+   |               ^\n+\n+error: expected one of `,`, `.`, `?`, or an operator, found `;`\n+  --> $DIR/issue-10636-2.rs:15:25\n+   |\n+15 |     option.map(|some| 42; //~ NOTE: unclosed delimiter\n+   |                         ^ expected one of `,`, `.`, `?`, or an operator here\n+\n+error: expected expression, found `)`\n+  --> $DIR/issue-10636-2.rs:19:1\n+   |\n+19 | } //~ ERROR: incorrect close delimiter\n+   | ^\n+\n+error: main function not found\n+\n+error: aborting due to 4 previous errors\n+"}, {"sha": "47374fc3c608537d671aa2f526ba32d4d316f65f", "filename": "src/test/ui/token/macro-incomplete-parse.rs", "status": "renamed", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ad5dfecc6ae23bb7d2b8075d705011918ab4f399/src%2Ftest%2Fui%2Ftoken%2Fmacro-incomplete-parse.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad5dfecc6ae23bb7d2b8075d705011918ab4f399/src%2Ftest%2Fui%2Ftoken%2Fmacro-incomplete-parse.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftoken%2Fmacro-incomplete-parse.rs?ref=ad5dfecc6ae23bb7d2b8075d705011918ab4f399", "patch": "@@ -20,6 +20,8 @@ macro_rules! ignored_item {\n \n macro_rules! ignored_expr {\n     () => ( 1,  //~ ERROR expected one of `.`, `;`, `?`, `}`, or an operator, found `,`\n+                //~^ NOTE expected one of `.`, `;`, `?`, `}`, or an operator here\n+                //~| NOTE unexpected token\n             2 )\n }\n ", "previous_filename": "src/test/compile-fail/macro-incomplete-parse.rs"}, {"sha": "f23d97586b843437002585034875cd2bca7dddd8", "filename": "src/test/ui/token/macro-incomplete-parse.stderr", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/ad5dfecc6ae23bb7d2b8075d705011918ab4f399/src%2Ftest%2Fui%2Ftoken%2Fmacro-incomplete-parse.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ad5dfecc6ae23bb7d2b8075d705011918ab4f399/src%2Ftest%2Fui%2Ftoken%2Fmacro-incomplete-parse.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftoken%2Fmacro-incomplete-parse.stderr?ref=ad5dfecc6ae23bb7d2b8075d705011918ab4f399", "patch": "@@ -0,0 +1,32 @@\n+error: macro expansion ignores token `,` and any following\n+  --> $DIR/macro-incomplete-parse.rs:17:9\n+   |\n+17 |         , //~ ERROR macro expansion ignores token `,`\n+   |         ^\n+   |\n+note: caused by the macro expansion here; the usage of `ignored_item!` is likely invalid in item context\n+  --> $DIR/macro-incomplete-parse.rs:32:1\n+   |\n+32 | ignored_item!(); //~ NOTE caused by the macro expansion here\n+   | ^^^^^^^^^^^^^^^^\n+\n+error: expected one of `.`, `;`, `?`, `}`, or an operator, found `,`\n+  --> $DIR/macro-incomplete-parse.rs:22:14\n+   |\n+22 |     () => ( 1,  //~ ERROR expected one of `.`, `;`, `?`, `}`, or an operator, found `,`\n+   |              ^ expected one of `.`, `;`, `?`, `}`, or an operator here\n+\n+error: macro expansion ignores token `,` and any following\n+  --> $DIR/macro-incomplete-parse.rs:29:14\n+   |\n+29 |     () => ( 1, 2 ) //~ ERROR macro expansion ignores token `,`\n+   |              ^\n+   |\n+note: caused by the macro expansion here; the usage of `ignored_pat!` is likely invalid in pattern context\n+  --> $DIR/macro-incomplete-parse.rs:37:9\n+   |\n+37 |         ignored_pat!() => (), //~ NOTE caused by the macro expansion here\n+   |         ^^^^^^^^^^^^^^\n+\n+error: aborting due to 3 previous errors\n+"}, {"sha": "2bb2c97790c124fd4427acd4d6f1b1ad5947fa79", "filename": "src/test/ui/token/trailing-plus-in-bounds.rs", "status": "renamed", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ad5dfecc6ae23bb7d2b8075d705011918ab4f399/src%2Ftest%2Fui%2Ftoken%2Ftrailing-plus-in-bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad5dfecc6ae23bb7d2b8075d705011918ab4f399/src%2Ftest%2Fui%2Ftoken%2Ftrailing-plus-in-bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftoken%2Ftrailing-plus-in-bounds.rs?ref=ad5dfecc6ae23bb7d2b8075d705011918ab4f399", "patch": "@@ -16,4 +16,6 @@ fn main() {\n     let x: Box<Debug+> = box 3 as Box<Debug+>; // Trailing `+` is OK\n }\n \n-FAIL //~ ERROR\n+FAIL\n+//~^ ERROR\n+//~| ERROR", "previous_filename": "src/test/parse-fail/trailing-plus-in-bounds.rs"}, {"sha": "c765a434b8ac6e86ef1c6f5cffce28b847dea095", "filename": "src/test/ui/token/trailing-plus-in-bounds.stderr", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ad5dfecc6ae23bb7d2b8075d705011918ab4f399/src%2Ftest%2Fui%2Ftoken%2Ftrailing-plus-in-bounds.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ad5dfecc6ae23bb7d2b8075d705011918ab4f399/src%2Ftest%2Fui%2Ftoken%2Ftrailing-plus-in-bounds.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftoken%2Ftrailing-plus-in-bounds.stderr?ref=ad5dfecc6ae23bb7d2b8075d705011918ab4f399", "patch": "@@ -0,0 +1,8 @@\n+error: expected one of `!` or `::`, found `<eof>`\n+  --> $DIR/trailing-plus-in-bounds.rs:19:1\n+   |\n+19 | FAIL\n+   | ^^^^ expected one of `!` or `::` here\n+\n+error: aborting due to previous error\n+"}]}