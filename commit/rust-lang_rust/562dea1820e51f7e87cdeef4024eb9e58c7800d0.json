{"sha": "562dea1820e51f7e87cdeef4024eb9e58c7800d0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU2MmRlYTE4MjBlNTFmN2U4N2NkZWVmNDAyNGViOWU1OGM3ODAwZDA=", "commit": {"author": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2013-06-29T01:19:14Z"}, "committer": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2013-06-30T11:15:25Z"}, "message": "etc: update etc/unicode.py for the changes made to std::unicode.", "tree": {"sha": "c6a6ebdd572b9688b0d9a9a0e13578a948b4a52a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c6a6ebdd572b9688b0d9a9a0e13578a948b4a52a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/562dea1820e51f7e87cdeef4024eb9e58c7800d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/562dea1820e51f7e87cdeef4024eb9e58c7800d0", "html_url": "https://github.com/rust-lang/rust/commit/562dea1820e51f7e87cdeef4024eb9e58c7800d0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/562dea1820e51f7e87cdeef4024eb9e58c7800d0/comments", "author": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9e83b2fe556aaf779261503c0910bf378e45dce4", "url": "https://api.github.com/repos/rust-lang/rust/commits/9e83b2fe556aaf779261503c0910bf378e45dce4", "html_url": "https://github.com/rust-lang/rust/commit/9e83b2fe556aaf779261503c0910bf378e45dce4"}], "stats": {"total": 37, "additions": 25, "deletions": 12}, "files": [{"sha": "191338b3cb4f78eb04f8acb79392b706efe01cb2", "filename": "src/etc/unicode.py", "status": "modified", "additions": 24, "deletions": 10, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/562dea1820e51f7e87cdeef4024eb9e58c7800d0/src%2Fetc%2Funicode.py", "raw_url": "https://github.com/rust-lang/rust/raw/562dea1820e51f7e87cdeef4024eb9e58c7800d0/src%2Fetc%2Funicode.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Funicode.py?ref=562dea1820e51f7e87cdeef4024eb9e58c7800d0", "patch": "@@ -122,14 +122,14 @@ def ch_prefix(ix):\n \n def emit_bsearch_range_table(f):\n     f.write(\"\"\"\n-    pure fn bsearch_range_table(c: char, r: &[(char,char)]) -> bool {\n-        use cmp::{EQ, LT, GT};\n+    fn bsearch_range_table(c: char, r: &'static [(char,char)]) -> bool {\n+        use cmp::{Equal, Less, Greater};\n         use vec::bsearch;\n         use option::None;\n         (do bsearch(r) |&(lo,hi)| {\n-            if lo <= c && c <= hi { EQ }\n-            else if hi < c { LT }\n-            else { GT }\n+            if lo <= c && c <= hi { Equal }\n+            else if hi < c { Less }\n+            else { Greater }\n         }) != None\n     }\\n\\n\n \"\"\");\n@@ -140,15 +140,15 @@ def emit_property_module(f, mod, tbl):\n     keys.sort()\n     emit_bsearch_range_table(f);\n     for cat in keys:\n-        f.write(\"    const %s_table : &[(char,char)] = &[\\n\" % cat)\n+        f.write(\"    static %s_table : &'static [(char,char)] = &[\\n\" % cat)\n         ix = 0\n         for pair in tbl[cat]:\n             f.write(ch_prefix(ix))\n             f.write(\"(%s, %s)\" % (escape_char(pair[0]), escape_char(pair[1])))\n             ix += 1\n         f.write(\"\\n    ];\\n\\n\")\n \n-        f.write(\"    pub pure fn %s(c: char) -> bool {\\n\" % cat)\n+        f.write(\"    pub fn %s(c: char) -> bool {\\n\" % cat)\n         f.write(\"        bsearch_range_table(c, %s_table)\\n\" % cat)\n         f.write(\"    }\\n\\n\")\n     f.write(\"}\\n\")\n@@ -159,7 +159,7 @@ def emit_property_module_old(f, mod, tbl):\n     keys = tbl.keys()\n     keys.sort()\n     for cat in keys:\n-        f.write(\"    pure fn %s(c: char) -> bool {\\n\" % cat)\n+        f.write(\"    fn %s(c: char) -> bool {\\n\" % cat)\n         f.write(\"        ret alt c {\\n\")\n         prefix = ' '\n         for pair in tbl[cat]:\n@@ -236,8 +236,22 @@ def emit_decomp_module(f, canon, compat):\n \n (canon_decomp, compat_decomp, gencats) = load_unicode_data(\"UnicodeData.txt\")\n \n-# Explain that the source code was generated by this script.\n-rf.write('// The following code was generated by \"src/etc/unicode.py\"\\n\\n')\n+# Preamble\n+rf.write('''// Copyright 2012-2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// The following code was generated by \"src/etc/unicode.py\"\n+\n+#[allow(missing_doc)];\n+\n+''')\n \n emit_property_module(rf, \"general_category\", gencats)\n "}, {"sha": "fd95588d71297e73385e3128fc1260d6e448c169", "filename": "src/libstd/unicode.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/562dea1820e51f7e87cdeef4024eb9e58c7800d0/src%2Flibstd%2Funicode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/562dea1820e51f7e87cdeef4024eb9e58c7800d0/src%2Flibstd%2Funicode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Funicode.rs?ref=562dea1820e51f7e87cdeef4024eb9e58c7800d0", "patch": "@@ -1447,10 +1447,8 @@ pub mod general_category {\n     }\n \n }\n-\n pub mod derived_property {\n \n-\n     fn bsearch_range_table(c: char, r: &'static [(char,char)]) -> bool {\n         use cmp::{Equal, Less, Greater};\n         use vec::bsearch;\n@@ -2641,4 +2639,5 @@ pub mod derived_property {\n     pub fn XID_Start(c: char) -> bool {\n         bsearch_range_table(c, XID_Start_table)\n     }\n+\n }"}]}