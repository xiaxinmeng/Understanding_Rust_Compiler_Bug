{"sha": "c2dc32c48e8a7027390738b63e88fe220e4e56d9", "node_id": "C_kwDOAAsO6NoAKGMyZGMzMmM0OGU4YTcwMjczOTA3MzhiNjNlODhmZTIyMGU0ZTU2ZDk", "commit": {"author": {"name": "harudagondi", "email": "giogdeasis@gmail.com", "date": "2022-09-21T01:11:02Z"}, "committer": {"name": "harudagondi", "email": "giogdeasis@gmail.com", "date": "2022-09-21T01:11:02Z"}, "message": "return None instead of assert", "tree": {"sha": "75c7e64b67c362c47830dff972e1d8c1a19c8e28", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/75c7e64b67c362c47830dff972e1d8c1a19c8e28"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c2dc32c48e8a7027390738b63e88fe220e4e56d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c2dc32c48e8a7027390738b63e88fe220e4e56d9", "html_url": "https://github.com/rust-lang/rust/commit/c2dc32c48e8a7027390738b63e88fe220e4e56d9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c2dc32c48e8a7027390738b63e88fe220e4e56d9/comments", "author": {"login": "harudagondi", "id": 14072899, "node_id": "MDQ6VXNlcjE0MDcyODk5", "avatar_url": "https://avatars.githubusercontent.com/u/14072899?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harudagondi", "html_url": "https://github.com/harudagondi", "followers_url": "https://api.github.com/users/harudagondi/followers", "following_url": "https://api.github.com/users/harudagondi/following{/other_user}", "gists_url": "https://api.github.com/users/harudagondi/gists{/gist_id}", "starred_url": "https://api.github.com/users/harudagondi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harudagondi/subscriptions", "organizations_url": "https://api.github.com/users/harudagondi/orgs", "repos_url": "https://api.github.com/users/harudagondi/repos", "events_url": "https://api.github.com/users/harudagondi/events{/privacy}", "received_events_url": "https://api.github.com/users/harudagondi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "harudagondi", "id": 14072899, "node_id": "MDQ6VXNlcjE0MDcyODk5", "avatar_url": "https://avatars.githubusercontent.com/u/14072899?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harudagondi", "html_url": "https://github.com/harudagondi", "followers_url": "https://api.github.com/users/harudagondi/followers", "following_url": "https://api.github.com/users/harudagondi/following{/other_user}", "gists_url": "https://api.github.com/users/harudagondi/gists{/gist_id}", "starred_url": "https://api.github.com/users/harudagondi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harudagondi/subscriptions", "organizations_url": "https://api.github.com/users/harudagondi/orgs", "repos_url": "https://api.github.com/users/harudagondi/repos", "events_url": "https://api.github.com/users/harudagondi/events{/privacy}", "received_events_url": "https://api.github.com/users/harudagondi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ed0cf1c5faa5818dfc4dd4d0b61f50209fd5f280", "url": "https://api.github.com/repos/rust-lang/rust/commits/ed0cf1c5faa5818dfc4dd4d0b61f50209fd5f280", "html_url": "https://github.com/rust-lang/rust/commit/ed0cf1c5faa5818dfc4dd4d0b61f50209fd5f280"}], "stats": {"total": 17, "additions": 8, "deletions": 9}, "files": [{"sha": "25c58d086e977d71f3711fb2c09d65fdd26df653", "filename": "crates/ide-assists/src/handlers/unwrap_tuple.rs", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/c2dc32c48e8a7027390738b63e88fe220e4e56d9/crates%2Fide-assists%2Fsrc%2Fhandlers%2Funwrap_tuple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2dc32c48e8a7027390738b63e88fe220e4e56d9/crates%2Fide-assists%2Fsrc%2Fhandlers%2Funwrap_tuple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-assists%2Fsrc%2Fhandlers%2Funwrap_tuple.rs?ref=c2dc32c48e8a7027390738b63e88fe220e4e56d9", "patch": "@@ -44,10 +44,14 @@ pub(crate) fn unwrap_tuple(acc: &mut Assists, ctx: &AssistContext<'_>) -> Option\n         _ => return None,\n     };\n \n-    stdx::always!(\n-        tuple_pat.fields().count() == tuple_init.fields().count(),\n-        \"Length of tuples in pattern and initializer do not match\"\n-    );\n+    if tuple_pat.fields().count() != tuple_init.fields().count() {\n+        return None;\n+    }\n+    if let Some(tys) = &tuple_ty {\n+        if tuple_pat.fields().count() != tys.fields().count() {\n+            return None;\n+        }\n+    }\n \n     let parent = let_kw.parent()?;\n \n@@ -61,11 +65,6 @@ pub(crate) fn unwrap_tuple(acc: &mut Assists, ctx: &AssistContext<'_>) -> Option\n             // If there is an ascribed type, insert that type for each declaration,\n             // otherwise, omit that type.\n             if let Some(tys) = tuple_ty {\n-                stdx::always!(\n-                    tuple_pat.fields().count() == tys.fields().count(),\n-                    \"Length of tuples in patterns and type do not match\"\n-                );\n-\n                 let mut zipped_decls = String::new();\n                 for (pat, ty, expr) in\n                     itertools::izip!(tuple_pat.fields(), tys.fields(), tuple_init.fields())"}]}