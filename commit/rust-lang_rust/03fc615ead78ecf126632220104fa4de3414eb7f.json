{"sha": "03fc615ead78ecf126632220104fa4de3414eb7f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAzZmM2MTVlYWQ3OGVjZjEyNjYzMjIyMDEwNGZhNGRlMzQxNGViN2Y=", "commit": {"author": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2019-01-25T20:13:07Z"}, "committer": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2019-01-25T20:13:07Z"}, "message": "Merge #653\n\n653: fix re-indent r=matklad a=matklad\n\n\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "4a392cb8184b2189c59e415666d569129e0d52d7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4a392cb8184b2189c59e415666d569129e0d52d7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/03fc615ead78ecf126632220104fa4de3414eb7f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/03fc615ead78ecf126632220104fa4de3414eb7f", "html_url": "https://github.com/rust-lang/rust/commit/03fc615ead78ecf126632220104fa4de3414eb7f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/03fc615ead78ecf126632220104fa4de3414eb7f/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "parents": [{"sha": "d65dca6bb3844d71ca14c396497783cbf9650e4a", "url": "https://api.github.com/repos/rust-lang/rust/commits/d65dca6bb3844d71ca14c396497783cbf9650e4a", "html_url": "https://github.com/rust-lang/rust/commit/d65dca6bb3844d71ca14c396497783cbf9650e4a"}, {"sha": "dbd28e4203cc268d8c1a80e8fa5dbfe6c042c061", "url": "https://api.github.com/repos/rust-lang/rust/commits/dbd28e4203cc268d8c1a80e8fa5dbfe6c042c061", "html_url": "https://github.com/rust-lang/rust/commit/dbd28e4203cc268d8c1a80e8fa5dbfe6c042c061"}], "stats": {"total": 59, "additions": 56, "deletions": 3}, "files": [{"sha": "1f34b85d693e7cdc96f4bebedd8d552a9f5761fc", "filename": "crates/ra_ide_api_light/src/formatting.rs", "status": "modified", "additions": 16, "deletions": 3, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/03fc615ead78ecf126632220104fa4de3414eb7f/crates%2Fra_ide_api_light%2Fsrc%2Fformatting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03fc615ead78ecf126632220104fa4de3414eb7f/crates%2Fra_ide_api_light%2Fsrc%2Fformatting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api_light%2Fsrc%2Fformatting.rs?ref=03fc615ead78ecf126632220104fa4de3414eb7f", "patch": "@@ -7,9 +7,22 @@ use ra_syntax::{\n \n /// If the node is on the beginning of the line, calculate indent.\n pub(crate) fn leading_indent(node: &SyntaxNode) -> Option<&str> {\n-    let prev = prev_leaf(node)?;\n-    let ws_text = ast::Whitespace::cast(prev)?.text();\n-    ws_text.rfind('\\n').map(|pos| &ws_text[pos + 1..])\n+    for leaf in prev_leaves(node) {\n+        if let Some(ws) = ast::Whitespace::cast(leaf) {\n+            let ws_text = ws.text();\n+            if let Some(pos) = ws_text.rfind('\\n') {\n+                return Some(&ws_text[pos + 1..]);\n+            }\n+        }\n+        if leaf.leaf_text().unwrap().contains('\\n') {\n+            break;\n+        }\n+    }\n+    None\n+}\n+\n+fn prev_leaves(node: &SyntaxNode) -> impl Iterator<Item = &SyntaxNode> {\n+    generate(prev_leaf(node), |&node| prev_leaf(node))\n }\n \n fn prev_leaf(node: &SyntaxNode) -> Option<&SyntaxNode> {"}, {"sha": "861027b9fb0d8dcb7da9c04ece78297be89b5e91", "filename": "crates/ra_ide_api_light/src/typing.rs", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/03fc615ead78ecf126632220104fa4de3414eb7f/crates%2Fra_ide_api_light%2Fsrc%2Ftyping.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03fc615ead78ecf126632220104fa4de3414eb7f/crates%2Fra_ide_api_light%2Fsrc%2Ftyping.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api_light%2Fsrc%2Ftyping.rs?ref=03fc615ead78ecf126632220104fa4de3414eb7f", "patch": "@@ -295,6 +295,46 @@ fn foo() {\n         );\n     }\n \n+    #[test]\n+    fn indents_middle_of_chain_call() {\n+        type_dot(\n+            r\"\n+            fn source_impl() {\n+                let var = enum_defvariant_list().unwrap()\n+                <|>\n+                    .nth(92)\n+                    .unwrap();\n+            }\n+            \",\n+            r\"\n+            fn source_impl() {\n+                let var = enum_defvariant_list().unwrap()\n+                    .\n+                    .nth(92)\n+                    .unwrap();\n+            }\n+            \",\n+        );\n+        type_dot(\n+            r\"\n+            fn source_impl() {\n+                let var = enum_defvariant_list().unwrap()\n+                    <|>\n+                    .nth(92)\n+                    .unwrap();\n+            }\n+            \",\n+            r\"\n+            fn source_impl() {\n+                let var = enum_defvariant_list().unwrap()\n+                    .\n+                    .nth(92)\n+                    .unwrap();\n+            }\n+            \",\n+        );\n+    }\n+\n     #[test]\n     fn dont_indent_freestanding_dot() {\n         type_dot("}]}