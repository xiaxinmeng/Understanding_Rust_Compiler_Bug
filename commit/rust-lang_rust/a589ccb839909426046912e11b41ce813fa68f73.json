{"sha": "a589ccb839909426046912e11b41ce813fa68f73", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE1ODljY2I4Mzk5MDk0MjYwNDY5MTJlMTFiNDFjZTgxM2ZhNjhmNzM=", "commit": {"author": {"name": "Oliver Schneider", "email": "oli-obk@users.noreply.github.com", "date": "2017-06-28T21:08:02Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-06-28T21:08:02Z"}, "message": "Merge pull request #225 from RalfJung/comments\n\ncast -> transmute", "tree": {"sha": "50f1399e9e4e5c34e3399152f3364a0443c17f84", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/50f1399e9e4e5c34e3399152f3364a0443c17f84"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a589ccb839909426046912e11b41ce813fa68f73", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a589ccb839909426046912e11b41ce813fa68f73", "html_url": "https://github.com/rust-lang/rust/commit/a589ccb839909426046912e11b41ce813fa68f73", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a589ccb839909426046912e11b41ce813fa68f73/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "42d3edada782e4fe0da15b614c4b809d00718ce6", "url": "https://api.github.com/repos/rust-lang/rust/commits/42d3edada782e4fe0da15b614c4b809d00718ce6", "html_url": "https://github.com/rust-lang/rust/commit/42d3edada782e4fe0da15b614c4b809d00718ce6"}, {"sha": "51b43215a48b79fc94661c32ad0e86497f18a94b", "url": "https://api.github.com/repos/rust-lang/rust/commits/51b43215a48b79fc94661c32ad0e86497f18a94b", "html_url": "https://github.com/rust-lang/rust/commit/51b43215a48b79fc94661c32ad0e86497f18a94b"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "0dc373f35e30261158d082c59913707cb2703219", "filename": "src/eval_context.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a589ccb839909426046912e11b41ce813fa68f73/src%2Feval_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a589ccb839909426046912e11b41ce813fa68f73/src%2Feval_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Feval_context.rs?ref=a589ccb839909426046912e11b41ce813fa68f73", "patch": "@@ -1347,7 +1347,7 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n                     I128 => 16,\n                     Is => self.memory.pointer_size(),\n                 };\n-                // if we cast a ptr to an isize, reading it back into a primval shouldn't panic\n+                // if we transmute a ptr to an isize, reading it back into a primval shouldn't panic\n                 // Due to read_ptr ignoring the sign, we need to jump around some hoops\n                 match self.memory.read_int(ptr, size) {\n                     Err(EvalError::ReadPointerAsBytes) if size == self.memory.pointer_size() => self.memory.read_ptr(ptr)?,\n@@ -1366,7 +1366,7 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n                     Us => self.memory.pointer_size(),\n                 };\n                 if size == self.memory.pointer_size() {\n-                    // if we cast a ptr to an usize, reading it back into a primval shouldn't panic\n+                    // if we transmute a ptr to an usize, reading it back into a primval shouldn't panic\n                     self.memory.read_ptr(ptr)?\n                 } else {\n                     PrimVal::from_u128(self.memory.read_uint(ptr, size)?)"}]}