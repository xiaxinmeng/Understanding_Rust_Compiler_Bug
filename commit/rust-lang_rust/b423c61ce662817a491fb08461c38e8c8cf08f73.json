{"sha": "b423c61ce662817a491fb08461c38e8c8cf08f73", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI0MjNjNjFjZTY2MjgxN2E0OTFmYjA4NDYxYzM4ZThjOGNmMDhmNzM=", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-06-22T10:03:51Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-06-22T10:03:51Z"}, "message": "Prefer identifier tokens in expand_macro", "tree": {"sha": "814e7c4c68eff5198d06b988b1e2647148ace77f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/814e7c4c68eff5198d06b988b1e2647148ace77f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b423c61ce662817a491fb08461c38e8c8cf08f73", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b423c61ce662817a491fb08461c38e8c8cf08f73", "html_url": "https://github.com/rust-lang/rust/commit/b423c61ce662817a491fb08461c38e8c8cf08f73", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b423c61ce662817a491fb08461c38e8c8cf08f73/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c2aa7782d65c4f2765f68b99f00f4203e1f143c1", "url": "https://api.github.com/repos/rust-lang/rust/commits/c2aa7782d65c4f2765f68b99f00f4203e1f143c1", "html_url": "https://github.com/rust-lang/rust/commit/c2aa7782d65c4f2765f68b99f00f4203e1f143c1"}], "stats": {"total": 17, "additions": 15, "deletions": 2}, "files": [{"sha": "12a091ac47cf4f8faafec5124d982f9864630c65", "filename": "crates/ide/src/expand_macro.rs", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/b423c61ce662817a491fb08461c38e8c8cf08f73/crates%2Fide%2Fsrc%2Fexpand_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b423c61ce662817a491fb08461c38e8c8cf08f73/crates%2Fide%2Fsrc%2Fexpand_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fexpand_macro.rs?ref=b423c61ce662817a491fb08461c38e8c8cf08f73", "patch": "@@ -2,7 +2,10 @@ use std::iter;\n \n use hir::Semantics;\n use ide_db::RootDatabase;\n-use syntax::{ast, ted, AstNode, NodeOrToken, SyntaxKind, SyntaxKind::*, SyntaxNode, WalkEvent, T};\n+use syntax::{\n+    ast, ted, AstNode, NodeOrToken, SyntaxKind, SyntaxKind::*, SyntaxNode, SyntaxToken,\n+    TokenAtOffset, WalkEvent, T,\n+};\n \n use crate::FilePosition;\n \n@@ -26,7 +29,7 @@ pub(crate) fn expand_macro(db: &RootDatabase, position: FilePosition) -> Option<\n     let sema = Semantics::new(db);\n     let file = sema.parse(position.file_id);\n \n-    let tok = file.syntax().token_at_offset(position.offset).left_biased()?;\n+    let tok = pick_best(file.syntax().token_at_offset(position.offset))?;\n     let mut expanded = None;\n     let mut name = None;\n     for node in tok.ancestors() {\n@@ -54,6 +57,16 @@ pub(crate) fn expand_macro(db: &RootDatabase, position: FilePosition) -> Option<\n     Some(ExpandedMacro { name: name?, expansion })\n }\n \n+fn pick_best(tokens: TokenAtOffset<SyntaxToken>) -> Option<SyntaxToken> {\n+    return tokens.max_by_key(priority);\n+    fn priority(n: &SyntaxToken) -> usize {\n+        match n.kind() {\n+            IDENT => 1,\n+            _ => 0,\n+        }\n+    }\n+}\n+\n fn expand_macro_recur(\n     sema: &Semantics<RootDatabase>,\n     macro_call: &ast::MacroCall,"}]}