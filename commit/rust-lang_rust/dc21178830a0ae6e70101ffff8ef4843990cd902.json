{"sha": "dc21178830a0ae6e70101ffff8ef4843990cd902", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRjMjExNzg4MzBhMGFlNmU3MDEwMWZmZmY4ZWY0ODQzOTkwY2Q5MDI=", "commit": {"author": {"name": "Charles Lew", "email": "crlf0710@gmail.com", "date": "2020-07-22T17:30:54Z"}, "committer": {"name": "Charles Lew", "email": "crlf0710@gmail.com", "date": "2020-07-31T16:54:22Z"}, "message": "Remove `linked_list_extras` methods.", "tree": {"sha": "d121b571144d58f4465b2f0a35cc579947638e31", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d121b571144d58f4465b2f0a35cc579947638e31"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dc21178830a0ae6e70101ffff8ef4843990cd902", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dc21178830a0ae6e70101ffff8ef4843990cd902", "html_url": "https://github.com/rust-lang/rust/commit/dc21178830a0ae6e70101ffff8ef4843990cd902", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dc21178830a0ae6e70101ffff8ef4843990cd902/comments", "author": {"login": "crlf0710", "id": 451806, "node_id": "MDQ6VXNlcjQ1MTgwNg==", "avatar_url": "https://avatars.githubusercontent.com/u/451806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/crlf0710", "html_url": "https://github.com/crlf0710", "followers_url": "https://api.github.com/users/crlf0710/followers", "following_url": "https://api.github.com/users/crlf0710/following{/other_user}", "gists_url": "https://api.github.com/users/crlf0710/gists{/gist_id}", "starred_url": "https://api.github.com/users/crlf0710/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/crlf0710/subscriptions", "organizations_url": "https://api.github.com/users/crlf0710/orgs", "repos_url": "https://api.github.com/users/crlf0710/repos", "events_url": "https://api.github.com/users/crlf0710/events{/privacy}", "received_events_url": "https://api.github.com/users/crlf0710/received_events", "type": "User", "site_admin": false}, "committer": {"login": "crlf0710", "id": 451806, "node_id": "MDQ6VXNlcjQ1MTgwNg==", "avatar_url": "https://avatars.githubusercontent.com/u/451806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/crlf0710", "html_url": "https://github.com/crlf0710", "followers_url": "https://api.github.com/users/crlf0710/followers", "following_url": "https://api.github.com/users/crlf0710/following{/other_user}", "gists_url": "https://api.github.com/users/crlf0710/gists{/gist_id}", "starred_url": "https://api.github.com/users/crlf0710/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/crlf0710/subscriptions", "organizations_url": "https://api.github.com/users/crlf0710/orgs", "repos_url": "https://api.github.com/users/crlf0710/repos", "events_url": "https://api.github.com/users/crlf0710/events{/privacy}", "received_events_url": "https://api.github.com/users/crlf0710/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2c28244cf0fc9868f55070e55b8f332d196eaf3f", "url": "https://api.github.com/repos/rust-lang/rust/commits/2c28244cf0fc9868f55070e55b8f332d196eaf3f", "html_url": "https://github.com/rust-lang/rust/commit/2c28244cf0fc9868f55070e55b8f332d196eaf3f"}], "stats": {"total": 72, "additions": 10, "deletions": 62}, "files": [{"sha": "02a746f0e24880893ff89f1983bada892057ae41", "filename": "library/alloc/src/collections/linked_list.rs", "status": "modified", "additions": 10, "deletions": 35, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/dc21178830a0ae6e70101ffff8ef4843990cd902/library%2Falloc%2Fsrc%2Fcollections%2Flinked_list.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dc21178830a0ae6e70101ffff8ef4843990cd902/library%2Falloc%2Fsrc%2Fcollections%2Flinked_list.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Flinked_list.rs?ref=dc21178830a0ae6e70101ffff8ef4843990cd902", "patch": "@@ -1110,32 +1110,17 @@ impl<T> IterMut<'_, T> {\n     /// Inserts the given element just after the element most recently returned by `.next()`.\n     /// The inserted element does not appear in the iteration.\n     ///\n-    /// # Examples\n-    ///\n-    /// ```\n-    /// #![feature(linked_list_extras)]\n-    ///\n-    /// use std::collections::LinkedList;\n-    ///\n-    /// let mut list: LinkedList<_> = vec![1, 3, 4].into_iter().collect();\n-    ///\n-    /// {\n-    ///     let mut it = list.iter_mut();\n-    ///     assert_eq!(it.next().unwrap(), &1);\n-    ///     // insert `2` after `1`\n-    ///     it.insert_next(2);\n-    /// }\n-    /// {\n-    ///     let vec: Vec<_> = list.into_iter().collect();\n-    ///     assert_eq!(vec, [1, 2, 3, 4]);\n-    /// }\n-    /// ```\n+    /// This method will be removed soon.\n     #[inline]\n     #[unstable(\n         feature = \"linked_list_extras\",\n         reason = \"this is probably better handled by a cursor type -- we'll see\",\n         issue = \"27794\"\n     )]\n+    #[rustc_deprecated(\n+        reason = \"Deprecated in favor of CursorMut methods. This method will be removed soon.\",\n+        since = \"1.47.0\"\n+    )]\n     pub fn insert_next(&mut self, element: T) {\n         match self.head {\n             // `push_back` is okay with aliasing `element` references\n@@ -1163,27 +1148,17 @@ impl<T> IterMut<'_, T> {\n \n     /// Provides a reference to the next element, without changing the iterator.\n     ///\n-    /// # Examples\n-    ///\n-    /// ```\n-    /// #![feature(linked_list_extras)]\n-    ///\n-    /// use std::collections::LinkedList;\n-    ///\n-    /// let mut list: LinkedList<_> = vec![1, 2, 3].into_iter().collect();\n-    ///\n-    /// let mut it = list.iter_mut();\n-    /// assert_eq!(it.next().unwrap(), &1);\n-    /// assert_eq!(it.peek_next().unwrap(), &2);\n-    /// // We just peeked at 2, so it was not consumed from the iterator.\n-    /// assert_eq!(it.next().unwrap(), &2);\n-    /// ```\n+    /// This method will be removed soon.\n     #[inline]\n     #[unstable(\n         feature = \"linked_list_extras\",\n         reason = \"this is probably better handled by a cursor type -- we'll see\",\n         issue = \"27794\"\n     )]\n+    #[rustc_deprecated(\n+        reason = \"Deprecated in favor of CursorMut methods. This method will be removed soon.\",\n+        since = \"1.47.0\"\n+    )]\n     pub fn peek_next(&mut self) -> Option<&mut T> {\n         if self.len == 0 {\n             None"}, {"sha": "ad643a7bdf1941ad15e2c65dca218cf8e0f80a9f", "filename": "library/alloc/src/collections/linked_list/tests.rs", "status": "modified", "additions": 0, "deletions": 27, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/dc21178830a0ae6e70101ffff8ef4843990cd902/library%2Falloc%2Fsrc%2Fcollections%2Flinked_list%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dc21178830a0ae6e70101ffff8ef4843990cd902/library%2Falloc%2Fsrc%2Fcollections%2Flinked_list%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Flinked_list%2Ftests.rs?ref=dc21178830a0ae6e70101ffff8ef4843990cd902", "patch": "@@ -153,33 +153,6 @@ fn test_clone_from() {\n     }\n }\n \n-#[test]\n-fn test_insert_prev() {\n-    let mut m = list_from(&[0, 2, 4, 6, 8]);\n-    let len = m.len();\n-    {\n-        let mut it = m.iter_mut();\n-        it.insert_next(-2);\n-        loop {\n-            match it.next() {\n-                None => break,\n-                Some(elt) => {\n-                    it.insert_next(*elt + 1);\n-                    match it.peek_next() {\n-                        Some(x) => assert_eq!(*x, *elt + 2),\n-                        None => assert_eq!(8, *elt),\n-                    }\n-                }\n-            }\n-        }\n-        it.insert_next(0);\n-        it.insert_next(1);\n-    }\n-    check_links(&m);\n-    assert_eq!(m.len(), 3 + len * 2);\n-    assert_eq!(m.into_iter().collect::<Vec<_>>(), [-2, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1]);\n-}\n-\n #[test]\n #[cfg_attr(target_os = \"emscripten\", ignore)]\n fn test_send() {"}]}