{"sha": "e92bde373a2f4e3cc5d80233d327de15596c3000", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU5MmJkZTM3M2EyZjRlM2NjNWQ4MDIzM2QzMjdkZTE1NTk2YzMwMDA=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-04-05T15:37:35Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-04-05T17:28:28Z"}, "message": "make set_span public, as all the fields it touches are public already", "tree": {"sha": "d0fa8a8ad780cacc547ad68b6a240428fe5985da", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d0fa8a8ad780cacc547ad68b6a240428fe5985da"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e92bde373a2f4e3cc5d80233d327de15596c3000", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e92bde373a2f4e3cc5d80233d327de15596c3000", "html_url": "https://github.com/rust-lang/rust/commit/e92bde373a2f4e3cc5d80233d327de15596c3000", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e92bde373a2f4e3cc5d80233d327de15596c3000/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "43cdfbb3fe01c58a24a0a92bae9f6d26c480f438", "url": "https://api.github.com/repos/rust-lang/rust/commits/43cdfbb3fe01c58a24a0a92bae9f6d26c480f438", "html_url": "https://github.com/rust-lang/rust/commit/43cdfbb3fe01c58a24a0a92bae9f6d26c480f438"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "72d20644fe8b20303240fa1391431f99e1b0a305", "filename": "src/librustc_mir/interpret/eval_context.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e92bde373a2f4e3cc5d80233d327de15596c3000/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e92bde373a2f4e3cc5d80233d327de15596c3000/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs?ref=e92bde373a2f4e3cc5d80233d327de15596c3000", "patch": "@@ -297,7 +297,7 @@ impl<'mir, 'tcx, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n     }\n \n     #[inline(always)]\n-    pub(crate) fn set_span(&mut self, span: Span) {\n+    pub fn set_span(&mut self, span: Span) {\n         self.tcx.span = span;\n         self.memory.tcx.span = span;\n     }"}]}