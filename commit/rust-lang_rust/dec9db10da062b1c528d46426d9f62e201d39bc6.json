{"sha": "dec9db10da062b1c528d46426d9f62e201d39bc6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRlYzlkYjEwZGEwNjJiMWM1MjhkNDY0MjZkOWY2MmUyMDFkMzliYzY=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-05-29T01:39:52Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-05-29T01:39:52Z"}, "message": "core::rt: Add SleeperList\n\nJust a simple place to stuff handles to sleeping schedulers.", "tree": {"sha": "ad31d2bd44728b70b6c450151fac1e79fb167743", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ad31d2bd44728b70b6c450151fac1e79fb167743"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dec9db10da062b1c528d46426d9f62e201d39bc6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dec9db10da062b1c528d46426d9f62e201d39bc6", "html_url": "https://github.com/rust-lang/rust/commit/dec9db10da062b1c528d46426d9f62e201d39bc6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dec9db10da062b1c528d46426d9f62e201d39bc6/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3f8095e55043f35e08adba5fe5b0a2d687ebc514", "url": "https://api.github.com/repos/rust-lang/rust/commits/3f8095e55043f35e08adba5fe5b0a2d687ebc514", "html_url": "https://github.com/rust-lang/rust/commit/3f8095e55043f35e08adba5fe5b0a2d687ebc514"}], "stats": {"total": 49, "additions": 49, "deletions": 0}, "files": [{"sha": "82496ec558940fcc54de4d0f14b7fc9e51643b40", "filename": "src/libcore/rt/mod.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/dec9db10da062b1c528d46426d9f62e201d39bc6/src%2Flibcore%2Frt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dec9db10da062b1c528d46426d9f62e201d39bc6/src%2Flibcore%2Frt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Frt%2Fmod.rs?ref=dec9db10da062b1c528d46426d9f62e201d39bc6", "patch": "@@ -88,6 +88,9 @@ mod work_queue;\n /// A parallel queue.\n mod message_queue;\n \n+/// A parallel data structure for tracking sleeping schedulers.\n+mod sleeper_list;\n+\n /// Stack segments and caching.\n mod stack;\n "}, {"sha": "9507dec001d51cf32719bf4be34703ef8dbd4086", "filename": "src/libcore/rt/sleeper_list.rs", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/dec9db10da062b1c528d46426d9f62e201d39bc6/src%2Flibcore%2Frt%2Fsleeper_list.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dec9db10da062b1c528d46426d9f62e201d39bc6/src%2Flibcore%2Frt%2Fsleeper_list.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Frt%2Fsleeper_list.rs?ref=dec9db10da062b1c528d46426d9f62e201d39bc6", "patch": "@@ -0,0 +1,46 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+//! Maintains a shared list of sleeping schedulers. Schedulers\n+//! use this to wake each other up.\n+\n+use container::Container;\n+use vec::OwnedVector;\n+use option::{Option, Some, None};\n+use cell::Cell;\n+use unstable::sync::{Exclusive, exclusive};\n+use rt::sched::{Scheduler, SchedHandle};\n+\n+pub struct SleeperList {\n+    priv stack: ~Exclusive<~[SchedHandle]>\n+}\n+\n+impl SleeperList {\n+    pub fn new() -> SleeperList {\n+        SleeperList {\n+            stack: ~exclusive(~[])\n+        }\n+    }\n+\n+    pub fn push(&mut self, handle: SchedHandle) {\n+        let handle = Cell(handle);\n+        self.stack.with(|s| s.push(handle.take()));\n+    }\n+\n+    pub fn pop(&mut self) -> Option<SchedHandle> {\n+        do self.stack.with |s| {\n+            if !s.is_empty() {\n+                Some(s.pop())\n+            } else {\n+                None\n+            }\n+        }\n+    }\n+}"}]}