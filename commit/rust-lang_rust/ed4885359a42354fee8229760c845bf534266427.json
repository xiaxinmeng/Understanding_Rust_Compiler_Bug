{"sha": "ed4885359a42354fee8229760c845bf534266427", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVkNDg4NTM1OWE0MjM1NGZlZTgyMjk3NjBjODQ1YmY1MzQyNjY0Mjc=", "commit": {"author": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-03-22T10:53:13Z"}, "committer": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-03-22T10:53:13Z"}, "message": "simplify eval_mir_constant", "tree": {"sha": "5c00c8590e9560412c9a8baadbd0c30a725f0db8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5c00c8590e9560412c9a8baadbd0c30a725f0db8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ed4885359a42354fee8229760c845bf534266427", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ed4885359a42354fee8229760c845bf534266427", "html_url": "https://github.com/rust-lang/rust/commit/ed4885359a42354fee8229760c845bf534266427", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ed4885359a42354fee8229760c845bf534266427/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0c5c3bbdabc60bd7dd7491dfcf6befb8202d7521", "url": "https://api.github.com/repos/rust-lang/rust/commits/0c5c3bbdabc60bd7dd7491dfcf6befb8202d7521", "html_url": "https://github.com/rust-lang/rust/commit/0c5c3bbdabc60bd7dd7491dfcf6befb8202d7521"}], "stats": {"total": 16, "additions": 3, "deletions": 13}, "files": [{"sha": "74a9646a0c0afd9429eaf356cafae14c3fb4a222", "filename": "src/librustc_codegen_ssa/mir/constant.rs", "status": "modified", "additions": 3, "deletions": 13, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/ed4885359a42354fee8229760c845bf534266427/src%2Flibrustc_codegen_ssa%2Fmir%2Fconstant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed4885359a42354fee8229760c845bf534266427/src%2Flibrustc_codegen_ssa%2Fmir%2Fconstant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fmir%2Fconstant.rs?ref=ed4885359a42354fee8229760c845bf534266427", "patch": "@@ -40,17 +40,7 @@ impl<'a, 'tcx, Bx: BuilderMethods<'a, 'tcx>> FunctionCx<'a, 'tcx, Bx> {\n         &mut self,\n         constant: &mir::Constant<'tcx>,\n     ) -> Result<ConstValue<'tcx>, ErrorHandled> {\n-        let const_ = match constant.literal.val {\n-            ty::ConstKind::Unevaluated(def_id, substs, promoted) => {\n-                let substs = self.monomorphize(&substs);\n-                ty::ConstKind::Unevaluated(def_id, substs, promoted)\n-            }\n-            ty::ConstKind::Value(value) => ty::ConstKind::Value(value),\n-            ty::ConstKind::Param(_) => self.monomorphize(&constant.literal).val,\n-            _ => span_bug!(constant.span, \"encountered bad Const in codegen: {:?}\", constant),\n-        };\n-\n-        match const_ {\n+        match self.monomorphize(&constant.literal).val {\n             ty::ConstKind::Unevaluated(def_id, substs, promoted) => self\n                 .cx\n                 .tcx()\n@@ -65,10 +55,10 @@ impl<'a, 'tcx, Bx: BuilderMethods<'a, 'tcx>> FunctionCx<'a, 'tcx, Bx> {\n                     err\n                 }),\n             ty::ConstKind::Value(value) => Ok(value),\n-            _ => span_bug!(\n+            err => span_bug!(\n                 constant.span,\n                 \"encountered bad ConstKind after monomorphizing: {:?}\",\n-                const_\n+                err\n             ),\n         }\n     }"}]}