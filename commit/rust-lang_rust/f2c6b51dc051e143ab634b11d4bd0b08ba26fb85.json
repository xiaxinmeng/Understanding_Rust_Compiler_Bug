{"sha": "f2c6b51dc051e143ab634b11d4bd0b08ba26fb85", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYyYzZiNTFkYzA1MWUxNDNhYjYzNGIxMWQ0YmQwYjA4YmEyNmZiODU=", "commit": {"author": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2016-03-28T17:48:28Z"}, "committer": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2016-03-28T17:48:28Z"}, "message": "Rollup merge of #32177 - srinivasreddy:remove_integer_suffixes, r=steveklabnik\n\n first round of removal of integer suffixes", "tree": {"sha": "1394e51bf680deb6faad26a0f837b5ac1a34c220", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1394e51bf680deb6faad26a0f837b5ac1a34c220"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f2c6b51dc051e143ab634b11d4bd0b08ba26fb85", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f2c6b51dc051e143ab634b11d4bd0b08ba26fb85", "html_url": "https://github.com/rust-lang/rust/commit/f2c6b51dc051e143ab634b11d4bd0b08ba26fb85", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f2c6b51dc051e143ab634b11d4bd0b08ba26fb85/comments", "author": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "committer": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "53a03b5ed207907dd725e88386762dbcc2ca712f", "url": "https://api.github.com/repos/rust-lang/rust/commits/53a03b5ed207907dd725e88386762dbcc2ca712f", "html_url": "https://github.com/rust-lang/rust/commit/53a03b5ed207907dd725e88386762dbcc2ca712f"}, {"sha": "91a42bedcf251609333acf65761027a4280ba4ca", "url": "https://api.github.com/repos/rust-lang/rust/commits/91a42bedcf251609333acf65761027a4280ba4ca", "html_url": "https://github.com/rust-lang/rust/commit/91a42bedcf251609333acf65761027a4280ba4ca"}], "stats": {"total": 36, "additions": 18, "deletions": 18}, "files": [{"sha": "1dac7dca3485b0f0e7569ef0341b1d1baa7fbfde", "filename": "src/liballoc/arc.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f2c6b51dc051e143ab634b11d4bd0b08ba26fb85/src%2Fliballoc%2Farc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2c6b51dc051e143ab634b11d4bd0b08ba26fb85/src%2Fliballoc%2Farc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Farc.rs?ref=f2c6b51dc051e143ab634b11d4bd0b08ba26fb85", "patch": "@@ -107,7 +107,7 @@ const MAX_REFCOUNT: usize = (isize::MAX) as usize;\n /// use std::thread;\n ///\n /// fn main() {\n-///     let numbers: Vec<_> = (0..100u32).collect();\n+///     let numbers: Vec<_> = (0..100).collect();\n ///     let shared_numbers = Arc::new(numbers);\n ///\n ///     for _ in 0..10 {\n@@ -1118,7 +1118,7 @@ mod tests {\n \n     #[test]\n     fn test_strong_count() {\n-        let a = Arc::new(0u32);\n+        let a = Arc::new(0);\n         assert!(Arc::strong_count(&a) == 1);\n         let w = Arc::downgrade(&a);\n         assert!(Arc::strong_count(&a) == 1);\n@@ -1135,7 +1135,7 @@ mod tests {\n \n     #[test]\n     fn test_weak_count() {\n-        let a = Arc::new(0u32);\n+        let a = Arc::new(0);\n         assert!(Arc::strong_count(&a) == 1);\n         assert!(Arc::weak_count(&a) == 0);\n         let w = Arc::downgrade(&a);\n@@ -1161,7 +1161,7 @@ mod tests {\n \n     #[test]\n     fn show_arc() {\n-        let a = Arc::new(5u32);\n+        let a = Arc::new(5);\n         assert_eq!(format!(\"{:?}\", a), \"5\");\n     }\n "}, {"sha": "da803f57a59d3a2324ca9e0189975861745ab61b", "filename": "src/liballoc/rc.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f2c6b51dc051e143ab634b11d4bd0b08ba26fb85/src%2Fliballoc%2Frc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2c6b51dc051e143ab634b11d4bd0b08ba26fb85/src%2Fliballoc%2Frc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Frc.rs?ref=f2c6b51dc051e143ab634b11d4bd0b08ba26fb85", "patch": "@@ -1014,7 +1014,7 @@ mod tests {\n \n     #[test]\n     fn test_strong_count() {\n-        let a = Rc::new(0u32);\n+        let a = Rc::new(0);\n         assert!(Rc::strong_count(&a) == 1);\n         let w = Rc::downgrade(&a);\n         assert!(Rc::strong_count(&a) == 1);\n@@ -1031,7 +1031,7 @@ mod tests {\n \n     #[test]\n     fn test_weak_count() {\n-        let a = Rc::new(0u32);\n+        let a = Rc::new(0);\n         assert!(Rc::strong_count(&a) == 1);\n         assert!(Rc::weak_count(&a) == 0);\n         let w = Rc::downgrade(&a);"}, {"sha": "85a4fa82e2a34e82171d58833de5b90a42414e93", "filename": "src/libcollections/linked_list.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/f2c6b51dc051e143ab634b11d4bd0b08ba26fb85/src%2Flibcollections%2Flinked_list.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2c6b51dc051e143ab634b11d4bd0b08ba26fb85/src%2Flibcollections%2Flinked_list.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Flinked_list.rs?ref=f2c6b51dc051e143ab634b11d4bd0b08ba26fb85", "patch": "@@ -1305,10 +1305,10 @@ mod tests {\n         //\n         // https://github.com/rust-lang/rust/issues/26021\n         let mut v1 = LinkedList::new();\n-        v1.push_front(1u8);\n-        v1.push_front(1u8);\n-        v1.push_front(1u8);\n-        v1.push_front(1u8);\n+        v1.push_front(1);\n+        v1.push_front(1);\n+        v1.push_front(1);\n+        v1.push_front(1);\n         let _ = v1.split_off(3); // Dropping this now should not cause laundry consumption\n         assert_eq!(v1.len(), 3);\n \n@@ -1319,10 +1319,10 @@ mod tests {\n     #[test]\n     fn test_split_off() {\n         let mut v1 = LinkedList::new();\n-        v1.push_front(1u8);\n-        v1.push_front(1u8);\n-        v1.push_front(1u8);\n-        v1.push_front(1u8);\n+        v1.push_front(1);\n+        v1.push_front(1);\n+        v1.push_front(1);\n+        v1.push_front(1);\n \n         // test all splits\n         for ix in 0..1 + v1.len() {"}, {"sha": "ca2ee0c512bfeead070f6f417b659404b4443478", "filename": "src/libcollectionstest/slice.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f2c6b51dc051e143ab634b11d4bd0b08ba26fb85/src%2Flibcollectionstest%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2c6b51dc051e143ab634b11d4bd0b08ba26fb85/src%2Flibcollectionstest%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollectionstest%2Fslice.rs?ref=f2c6b51dc051e143ab634b11d4bd0b08ba26fb85", "patch": "@@ -267,9 +267,9 @@ fn test_swap_remove_fail() {\n fn test_swap_remove_noncopyable() {\n     // Tests that we don't accidentally run destructors twice.\n     let mut v: Vec<Box<_>> = Vec::new();\n-    v.push(box 0u8);\n-    v.push(box 0u8);\n-    v.push(box 0u8);\n+    v.push(box 0);\n+    v.push(box 0);\n+    v.push(box 0);\n     let mut _e = v.swap_remove(0);\n     assert_eq!(v.len(), 2);\n     _e = v.swap_remove(1);\n@@ -884,7 +884,7 @@ fn test_overflow_does_not_cause_segfault_managed() {\n \n #[test]\n fn test_mut_split_at() {\n-    let mut values = [1u8,2,3,4,5];\n+    let mut values = [1,2,3,4,5];\n     {\n         let (left, right) = values.split_at_mut(2);\n         {"}]}