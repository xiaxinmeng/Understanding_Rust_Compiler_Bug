{"sha": "94a6d4b1b88135bf0dc7b24f23b47eaad50d5ea5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk0YTZkNGIxYjg4MTM1YmYwZGM3YjI0ZjIzYjQ3ZWFhZDUwZDVlYTU=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-10-18T10:24:05Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-10-18T11:00:19Z"}, "message": "Adjust const eval code to reflect `offset_from` docs", "tree": {"sha": "cdb4661e2774c4612a2b99c3e0f3483abe898647", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cdb4661e2774c4612a2b99c3e0f3483abe898647"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/94a6d4b1b88135bf0dc7b24f23b47eaad50d5ea5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/94a6d4b1b88135bf0dc7b24f23b47eaad50d5ea5", "html_url": "https://github.com/rust-lang/rust/commit/94a6d4b1b88135bf0dc7b24f23b47eaad50d5ea5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/94a6d4b1b88135bf0dc7b24f23b47eaad50d5ea5/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4a51801c394337a64850788c18cbf86c4cbfb35f", "url": "https://api.github.com/repos/rust-lang/rust/commits/4a51801c394337a64850788c18cbf86c4cbfb35f", "html_url": "https://github.com/rust-lang/rust/commit/4a51801c394337a64850788c18cbf86c4cbfb35f"}], "stats": {"total": 46, "additions": 10, "deletions": 36}, "files": [{"sha": "a2b901029ec54541e96533fecd1c582cccffd605", "filename": "src/librustc_mir/interpret/intrinsics.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/94a6d4b1b88135bf0dc7b24f23b47eaad50d5ea5/src%2Flibrustc_mir%2Finterpret%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/94a6d4b1b88135bf0dc7b24f23b47eaad50d5ea5/src%2Flibrustc_mir%2Finterpret%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fintrinsics.rs?ref=94a6d4b1b88135bf0dc7b24f23b47eaad50d5ea5", "patch": "@@ -249,14 +249,9 @@ impl<'mir, 'tcx, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n                 let usize_layout = self.layout_of(self.tcx.types.usize)?;\n                 let a_offset = ImmTy::from_uint(a.offset.bytes(), usize_layout);\n                 let b_offset = ImmTy::from_uint(b.offset.bytes(), usize_layout);\n-                let (val, overflowed, _) = self.overflowing_binary_op(\n+                let (val, _overflowed, _) = self.overflowing_binary_op(\n                     BinOp::Sub, a_offset, b_offset,\n                 )?;\n-                if overflowed {\n-                    throw_ub_format!(\n-                        \"second argument to `ptr_offset_from` must be smaller than first\",\n-                    );\n-                }\n                 let pointee_layout = self.layout_of(substs.type_at(0))?;\n                 let isize_layout = self.layout_of(self.tcx.types.isize)?;\n                 let val = ImmTy::from_scalar(val, isize_layout);"}, {"sha": "4d6800681889c9a8ac6a4a90758b6e6229909ad4", "filename": "src/test/ui/consts/offset_from.rs", "status": "renamed", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/94a6d4b1b88135bf0dc7b24f23b47eaad50d5ea5/src%2Ftest%2Fui%2Fconsts%2Foffset_from.rs", "raw_url": "https://github.com/rust-lang/rust/raw/94a6d4b1b88135bf0dc7b24f23b47eaad50d5ea5/src%2Ftest%2Fui%2Fconsts%2Foffset_from.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Foffset_from.rs?ref=94a6d4b1b88135bf0dc7b24f23b47eaad50d5ea5", "patch": "@@ -33,7 +33,15 @@ pub const OFFSET_2: usize = {\n     offset as usize\n };\n \n+pub const OVERFLOW: isize = {\n+    let uninit = std::mem::MaybeUninit::<Struct2>::uninit();\n+    let base_ptr: *const Struct2 = &uninit as *const _ as *const Struct2;\n+    let field_ptr = unsafe { &(*base_ptr).field as *const u8 };\n+    unsafe { (base_ptr as *const u8).offset_from(field_ptr) }\n+};\n+\n fn main() {\n     assert_eq!(OFFSET, 0);\n     assert_eq!(OFFSET_2, 1);\n+    assert_eq!(OVERFLOW, -1);\n }", "previous_filename": "src/test/ui/consts/offset_of.rs"}, {"sha": "fedc1af7705a5be9f9a5c6282a9fc94e9c12168c", "filename": "src/test/ui/consts/offset_from_ub.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/94a6d4b1b88135bf0dc7b24f23b47eaad50d5ea5/src%2Ftest%2Fui%2Fconsts%2Foffset_from_ub.rs", "raw_url": "https://github.com/rust-lang/rust/raw/94a6d4b1b88135bf0dc7b24f23b47eaad50d5ea5/src%2Ftest%2Fui%2Fconsts%2Foffset_from_ub.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Foffset_from_ub.rs?ref=94a6d4b1b88135bf0dc7b24f23b47eaad50d5ea5", "patch": "@@ -32,13 +32,4 @@ pub const NOT_MULTIPLE_OF_SIZE: usize = {\n     offset as usize\n };\n \n-pub const OVERFLOW: usize = {\n-    //~^ NOTE\n-    let uninit = std::mem::MaybeUninit::<Struct>::uninit();\n-    let base_ptr: *const Struct = &uninit as *const _ as *const Struct;\n-    let field_ptr = unsafe { &(*base_ptr).field as *const u8 };\n-    let offset = unsafe { (base_ptr as *const u8).offset_from(field_ptr) };\n-    offset as usize\n-};\n-\n fn main() {}"}, {"sha": "ad9695f2fc2204ffd826f42aca06ca89fd3f2cff", "filename": "src/test/ui/consts/offset_from_ub.stderr", "status": "modified", "additions": 1, "deletions": 21, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/94a6d4b1b88135bf0dc7b24f23b47eaad50d5ea5/src%2Ftest%2Fui%2Fconsts%2Foffset_from_ub.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/94a6d4b1b88135bf0dc7b24f23b47eaad50d5ea5/src%2Ftest%2Fui%2Fconsts%2Foffset_from_ub.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Foffset_from_ub.stderr?ref=94a6d4b1b88135bf0dc7b24f23b47eaad50d5ea5", "patch": "@@ -57,25 +57,5 @@ LL | |     offset as usize\n LL | | };\n    | |__-\n \n-error: any use of this value will cause an error\n-  --> $SRC_DIR/libcore/ptr/mod.rs:LL:COL\n-   |\n-LL |           intrinsics::ptr_offset_from(self, origin)\n-   |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |           |\n-   |           second argument to `ptr_offset_from` must be smaller than first\n-   |           inside call to `std::ptr::<impl *const u8>::offset_from` at $DIR/offset_from_ub.rs:40:27\n-   | \n-  ::: $DIR/offset_from_ub.rs:35:1\n-   |\n-LL | / pub const OVERFLOW: usize = {\n-LL | |\n-LL | |     let uninit = std::mem::MaybeUninit::<Struct>::uninit();\n-LL | |     let base_ptr: *const Struct = &uninit as *const _ as *const Struct;\n-...  |\n-LL | |     offset as usize\n-LL | | };\n-   | |__-\n-\n-error: aborting due to 4 previous errors\n+error: aborting due to 3 previous errors\n "}]}