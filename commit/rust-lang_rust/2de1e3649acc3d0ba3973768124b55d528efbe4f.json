{"sha": "2de1e3649acc3d0ba3973768124b55d528efbe4f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJkZTFlMzY0OWFjYzNkMGJhMzk3Mzc2ODEyNGI1NWQ1MjhlZmJlNGY=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-21T01:51:09Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-26T23:54:28Z"}, "message": "librustc: De-`@mut` the named region map in the type context", "tree": {"sha": "54ac1b32d41b52d443ef85ab6d929fed89d7af13", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/54ac1b32d41b52d443ef85ab6d929fed89d7af13"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2de1e3649acc3d0ba3973768124b55d528efbe4f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2de1e3649acc3d0ba3973768124b55d528efbe4f", "html_url": "https://github.com/rust-lang/rust/commit/2de1e3649acc3d0ba3973768124b55d528efbe4f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2de1e3649acc3d0ba3973768124b55d528efbe4f/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "01e31683d8fd72d3be8a803279f3bcc9f8cf3274", "url": "https://api.github.com/repos/rust-lang/rust/commits/01e31683d8fd72d3be8a803279f3bcc9f8cf3274", "html_url": "https://github.com/rust-lang/rust/commit/01e31683d8fd72d3be8a803279f3bcc9f8cf3274"}], "stats": {"total": 27, "additions": 13, "deletions": 14}, "files": [{"sha": "d62a58460d043745c1dfb347e956da52ce6484bd", "filename": "src/librustc/middle/resolve_lifetime.rs", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/2de1e3649acc3d0ba3973768124b55d528efbe4f/src%2Flibrustc%2Fmiddle%2Fresolve_lifetime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2de1e3649acc3d0ba3973768124b55d528efbe4f/src%2Flibrustc%2Fmiddle%2Fresolve_lifetime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fresolve_lifetime.rs?ref=2de1e3649acc3d0ba3973768124b55d528efbe4f", "patch": "@@ -18,6 +18,7 @@\n  */\n \n use driver::session;\n+use std::cell::RefCell;\n use std::hashmap::HashMap;\n use syntax::ast;\n use syntax::codemap::Span;\n@@ -33,7 +34,7 @@ pub type NamedRegionMap = HashMap<ast::NodeId, ast::DefRegion>;\n \n struct LifetimeContext {\n     sess: session::Session,\n-    named_region_map: @mut NamedRegionMap,\n+    named_region_map: @RefCell<NamedRegionMap>,\n }\n \n enum ScopeChain<'a> {\n@@ -43,12 +44,11 @@ enum ScopeChain<'a> {\n     RootScope\n }\n \n-pub fn crate(sess: session::Session,\n-             crate: &ast::Crate)\n-             -> @mut NamedRegionMap {\n+pub fn crate(sess: session::Session, crate: &ast::Crate)\n+             -> @RefCell<NamedRegionMap> {\n     let mut ctxt = LifetimeContext {\n         sess: sess,\n-        named_region_map: @mut HashMap::new()\n+        named_region_map: @RefCell::new(HashMap::new())\n     };\n     visit::walk_crate(&mut ctxt, crate, &RootScope);\n     sess.abort_if_errors();\n@@ -305,7 +305,8 @@ impl LifetimeContext {\n                                 self.sess.intr()),\n                 lifetime_ref.id,\n                 def);\n-        self.named_region_map.insert(lifetime_ref.id, def);\n+        let mut named_region_map = self.named_region_map.borrow_mut();\n+        named_region_map.get().insert(lifetime_ref.id, def);\n     }\n }\n "}, {"sha": "7527a7e9d024fd7329a083e4b4b8a345c4e31c06", "filename": "src/librustc/middle/ty.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2de1e3649acc3d0ba3973768124b55d528efbe4f/src%2Flibrustc%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2de1e3649acc3d0ba3973768124b55d528efbe4f/src%2Flibrustc%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fty.rs?ref=2de1e3649acc3d0ba3973768124b55d528efbe4f", "patch": "@@ -270,7 +270,7 @@ struct ctxt_ {\n     sess: session::Session,\n     def_map: resolve::DefMap,\n \n-    named_region_map: @mut resolve_lifetime::NamedRegionMap,\n+    named_region_map: @RefCell<resolve_lifetime::NamedRegionMap>,\n \n     region_maps: @mut middle::region::RegionMaps,\n \n@@ -959,7 +959,7 @@ pub type node_type_table = RefCell<HashMap<uint,t>>;\n \n pub fn mk_ctxt(s: session::Session,\n                dm: resolve::DefMap,\n-               named_region_map: @mut resolve_lifetime::NamedRegionMap,\n+               named_region_map: @RefCell<resolve_lifetime::NamedRegionMap>,\n                amap: ast_map::map,\n                freevars: freevars::freevar_map,\n                region_maps: @mut middle::region::RegionMaps,"}, {"sha": "66e49c99b0b629cc80540fd5d706be7f4259e284", "filename": "src/librustc/middle/typeck/astconv.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/2de1e3649acc3d0ba3973768124b55d528efbe4f/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fastconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2de1e3649acc3d0ba3973768124b55d528efbe4f/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fastconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fastconv.rs?ref=2de1e3649acc3d0ba3973768124b55d528efbe4f", "patch": "@@ -76,12 +76,10 @@ pub trait AstConv {\n     fn ty_infer(&self, span: Span) -> ty::t;\n }\n \n-pub fn ast_region_to_region(\n-    tcx: ty::ctxt,\n-    lifetime: &ast::Lifetime)\n-    -> ty::Region\n-{\n-    let r = match tcx.named_region_map.find(&lifetime.id) {\n+pub fn ast_region_to_region(tcx: ty::ctxt, lifetime: &ast::Lifetime)\n+                            -> ty::Region {\n+    let named_region_map = tcx.named_region_map.borrow();\n+    let r = match named_region_map.get().find(&lifetime.id) {\n         None => {\n             // should have been recorded by the `resolve_lifetime` pass\n             tcx.sess.span_bug(lifetime.span, \"unresolved lifetime\");"}]}