{"sha": "a5726eb28d3cf321b2accb772dec4f12103a8641", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE1NzI2ZWIyOGQzY2YzMjFiMmFjY2I3NzJkZWM0ZjEyMTAzYTg2NDE=", "commit": {"author": {"name": "Alexis Bourget", "email": "alexis.bourget@gmail.com", "date": "2020-10-13T06:49:16Z"}, "committer": {"name": "Alexis Bourget", "email": "alexis.bourget@gmail.com", "date": "2020-11-30T20:18:56Z"}, "message": "Use Self:: in links", "tree": {"sha": "588e357d1800787f66753da2208e7cfb963c0b7c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/588e357d1800787f66753da2208e7cfb963c0b7c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a5726eb28d3cf321b2accb772dec4f12103a8641", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a5726eb28d3cf321b2accb772dec4f12103a8641", "html_url": "https://github.com/rust-lang/rust/commit/a5726eb28d3cf321b2accb772dec4f12103a8641", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a5726eb28d3cf321b2accb772dec4f12103a8641/comments", "author": {"login": "poliorcetics", "id": 7951708, "node_id": "MDQ6VXNlcjc5NTE3MDg=", "avatar_url": "https://avatars.githubusercontent.com/u/7951708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poliorcetics", "html_url": "https://github.com/poliorcetics", "followers_url": "https://api.github.com/users/poliorcetics/followers", "following_url": "https://api.github.com/users/poliorcetics/following{/other_user}", "gists_url": "https://api.github.com/users/poliorcetics/gists{/gist_id}", "starred_url": "https://api.github.com/users/poliorcetics/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poliorcetics/subscriptions", "organizations_url": "https://api.github.com/users/poliorcetics/orgs", "repos_url": "https://api.github.com/users/poliorcetics/repos", "events_url": "https://api.github.com/users/poliorcetics/events{/privacy}", "received_events_url": "https://api.github.com/users/poliorcetics/received_events", "type": "User", "site_admin": false}, "committer": {"login": "poliorcetics", "id": 7951708, "node_id": "MDQ6VXNlcjc5NTE3MDg=", "avatar_url": "https://avatars.githubusercontent.com/u/7951708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poliorcetics", "html_url": "https://github.com/poliorcetics", "followers_url": "https://api.github.com/users/poliorcetics/followers", "following_url": "https://api.github.com/users/poliorcetics/following{/other_user}", "gists_url": "https://api.github.com/users/poliorcetics/gists{/gist_id}", "starred_url": "https://api.github.com/users/poliorcetics/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poliorcetics/subscriptions", "organizations_url": "https://api.github.com/users/poliorcetics/orgs", "repos_url": "https://api.github.com/users/poliorcetics/repos", "events_url": "https://api.github.com/users/poliorcetics/events{/privacy}", "received_events_url": "https://api.github.com/users/poliorcetics/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b702060865d7a21b4ada16434b8e80e1c203f409", "url": "https://api.github.com/repos/rust-lang/rust/commits/b702060865d7a21b4ada16434b8e80e1c203f409", "html_url": "https://github.com/rust-lang/rust/commit/b702060865d7a21b4ada16434b8e80e1c203f409"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "14cd8576e2ae17d50b10ce32feffa97d1c06c5ef", "filename": "library/core/src/cell.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a5726eb28d3cf321b2accb772dec4f12103a8641/library%2Fcore%2Fsrc%2Fcell.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a5726eb28d3cf321b2accb772dec4f12103a8641/library%2Fcore%2Fsrc%2Fcell.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fcell.rs?ref=a5726eb28d3cf321b2accb772dec4f12103a8641", "patch": "@@ -929,7 +929,7 @@ impl<T: ?Sized> RefCell<T> {\n     /// Also, please be aware that this method is only for special circumstances and is usually\n     /// not what you want. In case of doubt, use [`borrow_mut`] instead.\n     ///\n-    /// [`borrow_mut`]: RefCell::borrow_mut()\n+    /// [`borrow_mut`]: Self::borrow_mut()\n     ///\n     /// # Examples\n     ///\n@@ -953,7 +953,7 @@ impl<T: ?Sized> RefCell<T> {\n     /// ensure no borrows exist and then resets the state tracking shared borrows. This is relevant\n     /// if some `Ref` or `RefMut` borrows have been leaked.\n     ///\n-    /// [`get_mut`]: RefCell::get_mut()\n+    /// [`get_mut`]: Self::get_mut()\n     ///\n     /// # Examples\n     ///\n@@ -1745,7 +1745,7 @@ impl<T: ?Sized> UnsafeCell<T> {\n     /// when casting to `&mut T`, and ensure that there are no mutations\n     /// or mutable aliases going on when casting to `&T`.\n     ///\n-    /// [`get`]: UnsafeCell::get()\n+    /// [`get`]: Self::get()\n     ///\n     /// # Examples\n     ///"}]}