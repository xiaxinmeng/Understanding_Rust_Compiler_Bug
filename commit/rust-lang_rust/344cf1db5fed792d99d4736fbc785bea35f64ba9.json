{"sha": "344cf1db5fed792d99d4736fbc785bea35f64ba9", "node_id": "C_kwDOAAsO6NoAKDM0NGNmMWRiNWZlZDc5MmQ5OWQ0NzM2ZmJjNzg1YmVhMzVmNjRiYTk", "commit": {"author": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2022-03-21T16:00:03Z"}, "committer": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2022-03-21T16:00:03Z"}, "message": "Fix expect", "tree": {"sha": "63e0008e9eb5066f2fa98120c651fc610d26d711", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/63e0008e9eb5066f2fa98120c651fc610d26d711"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/344cf1db5fed792d99d4736fbc785bea35f64ba9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/344cf1db5fed792d99d4736fbc785bea35f64ba9", "html_url": "https://github.com/rust-lang/rust/commit/344cf1db5fed792d99d4736fbc785bea35f64ba9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/344cf1db5fed792d99d4736fbc785bea35f64ba9/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "baa43a86abf9d31b833b36822b9ae14cd11cf935", "url": "https://api.github.com/repos/rust-lang/rust/commits/baa43a86abf9d31b833b36822b9ae14cd11cf935", "html_url": "https://github.com/rust-lang/rust/commit/baa43a86abf9d31b833b36822b9ae14cd11cf935"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "f4e58d88ed888b773eb5b2393f88f1bcd67c722e", "filename": "crates/hir/src/lib.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/344cf1db5fed792d99d4736fbc785bea35f64ba9/crates%2Fhir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/344cf1db5fed792d99d4736fbc785bea35f64ba9/crates%2Fhir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Flib.rs?ref=344cf1db5fed792d99d4736fbc785bea35f64ba9", "patch": "@@ -1188,8 +1188,10 @@ impl DefWithBody {\n             }\n         }\n         for (expr, mismatch) in infer.expr_type_mismatches() {\n-            let expr =\n-                source_map.expr_syntax(expr).expect(\"break outside of loop in synthetic syntax\");\n+            let expr = match source_map.expr_syntax(expr) {\n+                Ok(expr) => expr,\n+                Err(SyntheticSyntax) => continue,\n+            };\n             acc.push(\n                 TypeMismatch {\n                     expr,"}]}