{"sha": "3ee3a784bf4ff7157a84e16026f19c4bf059de47", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNlZTNhNzg0YmY0ZmY3MTU3YTg0ZTE2MDI2ZjE5YzRiZjA1OWRlNDc=", "commit": {"author": {"name": "Michael McConville", "email": "mmcco@mykolab.com", "date": "2015-12-17T05:21:11Z"}, "committer": {"name": "Michael McConville", "email": "mmcco@mykolab.com", "date": "2015-12-19T00:26:10Z"}, "message": "Use a const for getentropy(2)'s syscall number\n\nReported by Sebastien Marie.", "tree": {"sha": "8cec68a7b80b6b951a3812fc6b971c5908c2c316", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8cec68a7b80b6b951a3812fc6b971c5908c2c316"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3ee3a784bf4ff7157a84e16026f19c4bf059de47", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3ee3a784bf4ff7157a84e16026f19c4bf059de47", "html_url": "https://github.com/rust-lang/rust/commit/3ee3a784bf4ff7157a84e16026f19c4bf059de47", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3ee3a784bf4ff7157a84e16026f19c4bf059de47/comments", "author": {"login": "mmcco", "id": 1668979, "node_id": "MDQ6VXNlcjE2Njg5Nzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1668979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmcco", "html_url": "https://github.com/mmcco", "followers_url": "https://api.github.com/users/mmcco/followers", "following_url": "https://api.github.com/users/mmcco/following{/other_user}", "gists_url": "https://api.github.com/users/mmcco/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmcco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmcco/subscriptions", "organizations_url": "https://api.github.com/users/mmcco/orgs", "repos_url": "https://api.github.com/users/mmcco/repos", "events_url": "https://api.github.com/users/mmcco/events{/privacy}", "received_events_url": "https://api.github.com/users/mmcco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mmcco", "id": 1668979, "node_id": "MDQ6VXNlcjE2Njg5Nzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1668979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmcco", "html_url": "https://github.com/mmcco", "followers_url": "https://api.github.com/users/mmcco/followers", "following_url": "https://api.github.com/users/mmcco/following{/other_user}", "gists_url": "https://api.github.com/users/mmcco/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmcco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmcco/subscriptions", "organizations_url": "https://api.github.com/users/mmcco/orgs", "repos_url": "https://api.github.com/users/mmcco/repos", "events_url": "https://api.github.com/users/mmcco/events{/privacy}", "received_events_url": "https://api.github.com/users/mmcco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a51b70b8169df7d2199b100fae1c1da8f8d299e3", "url": "https://api.github.com/repos/rust-lang/rust/commits/a51b70b8169df7d2199b100fae1c1da8f8d299e3", "html_url": "https://github.com/rust-lang/rust/commit/a51b70b8169df7d2199b100fae1c1da8f8d299e3"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "7b1cbdb7eac66c46a184b51d4367de305cc2a5e3", "filename": "src/libstd/rand/os.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3ee3a784bf4ff7157a84e16026f19c4bf059de47/src%2Flibstd%2Frand%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ee3a784bf4ff7157a84e16026f19c4bf059de47/src%2Flibstd%2Frand%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frand%2Fos.rs?ref=3ee3a784bf4ff7157a84e16026f19c4bf059de47", "patch": "@@ -208,6 +208,8 @@ mod imp {\n         fn syscall(number: c_long, ...) -> c_long;\n     }\n \n+    const NR_GETENTROPY: libc::c_long = 7;\n+\n     impl OsRng {\n         /// Create a new `OsRng`.\n         pub fn new() -> io::Result<OsRng> {\n@@ -231,7 +233,9 @@ mod imp {\n \n             // getentropy(2) permits a maximum buffer size of 256 bytes\n             for s in v.chunks_mut(256) {\n-                unsafe { ret = syscall(7, s.as_mut_ptr(), s.len()); }\n+                unsafe {\n+                    ret = syscall(NR_GETENTROPY, s.as_mut_ptr(), s.len());\n+                }\n                 if ret == -1 {\n                     panic!(\"unexpected getentropy error: {}\", errno());\n                 }"}]}