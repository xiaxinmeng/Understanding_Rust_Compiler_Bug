{"sha": "ecf290d448e1b46e073bd8727c04156a06948bf5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVjZjI5MGQ0NDhlMWI0NmUwNzNiZDg3MjdjMDQxNTZhMDY5NDhiZjU=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-05-13T22:56:45Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-05-13T22:58:10Z"}, "message": "rustc: Be explicit about which peer modules the metadata mod can access\n\nThis is the first step in eliminating dependencies on rustc so we can extract\nthe metadata code into its own crate.", "tree": {"sha": "4ef3ba3be589c1ff9523b6b2845c9aa3a137d98b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4ef3ba3be589c1ff9523b6b2845c9aa3a137d98b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ecf290d448e1b46e073bd8727c04156a06948bf5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ecf290d448e1b46e073bd8727c04156a06948bf5", "html_url": "https://github.com/rust-lang/rust/commit/ecf290d448e1b46e073bd8727c04156a06948bf5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ecf290d448e1b46e073bd8727c04156a06948bf5/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a6b9fa0cd1a6eb29a127e05d10910d8b8f194f59", "url": "https://api.github.com/repos/rust-lang/rust/commits/a6b9fa0cd1a6eb29a127e05d10910d8b8f194f59", "html_url": "https://github.com/rust-lang/rust/commit/a6b9fa0cd1a6eb29a127e05d10910d8b8f194f59"}], "stats": {"total": 59, "additions": 59, "deletions": 0}, "files": [{"sha": "2a789ff4ed27ac5492bef35d3891f773b9b099d9", "filename": "src/rustc/metadata.rs", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/ecf290d448e1b46e073bd8727c04156a06948bf5/src%2Frustc%2Fmetadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ecf290d448e1b46e073bd8727c04156a06948bf5/src%2Frustc%2Fmetadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmetadata.rs?ref=ecf290d448e1b46e073bd8727c04156a06948bf5", "patch": "@@ -0,0 +1,47 @@\n+// Define the rustc API's that the metadata module has access to\n+// Over time we will reduce these dependencies and, once metadata has\n+// no dependencies on rustc it can move into its own crate.\n+\n+mod middle {\n+    import ast_map = middle_::ast_map;\n+    export ast_map;\n+    import ty = middle_::ty;\n+    export ty;\n+    import trans = middle_::trans;\n+    export trans;\n+    import typeck = middle_::typeck;\n+    export typeck;\n+    import last_use = middle_::last_use;\n+    export last_use;\n+    import freevars = middle_::freevars;\n+    export freevars;\n+    import resolve = middle_::resolve;\n+    export resolve;\n+}\n+\n+mod front {\n+}\n+\n+mod back {\n+}\n+\n+mod driver {\n+    import session = driver_::session;\n+    export session;\n+    import diagnostic = rustsyntax::diagnostic;\n+    export diagnostic;\n+}\n+\n+mod util {\n+    import common = util_::common;\n+    export common;\n+    import ppaux = util_::ppaux;\n+    export ppaux;\n+    import filesearch = util_::filesearch;\n+    export filesearch;\n+}\n+\n+mod lib {\n+    import llvm = lib_::llvm;\n+    export llvm;\n+}"}, {"sha": "961b7c6c6833e1a3c33594a9b04dd4b3209c4194", "filename": "src/rustc/rustc.rc", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/ecf290d448e1b46e073bd8727c04156a06948bf5/src%2Frustc%2Frustc.rc", "raw_url": "https://github.com/rust-lang/rust/raw/ecf290d448e1b46e073bd8727c04156a06948bf5/src%2Frustc%2Frustc.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Frustc.rc?ref=ecf290d448e1b46e073bd8727c04156a06948bf5", "patch": "@@ -17,6 +17,18 @@ use rustsyntax(vers = \"0.2\");\n \n import core::*;\n \n+/*\n+Alternate names for some modules.\n+\n+I am using this to help extract metadata into its own crate. In metadata.rs\n+it redefines all these modules in order to gate access from metadata to the\n+rest of the compiler, then uses these to access the original implementation.\n+*/\n+import util_ = util;\n+import lib_ = lib;\n+import driver_ = driver;\n+import middle_ = middle;\n+\n mod middle {\n     mod trans {\n         mod common;"}]}