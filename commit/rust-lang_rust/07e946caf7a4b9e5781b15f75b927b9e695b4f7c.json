{"sha": "07e946caf7a4b9e5781b15f75b927b9e695b4f7c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA3ZTk0NmNhZjdhNGI5ZTU3ODFiMTVmNzViOTI3YjllNjk1YjRmN2M=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-10-13T21:27:18Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-10-13T21:27:18Z"}, "message": "lowering: connect to parser via function pointer instead", "tree": {"sha": "838c3e35c2d08145c22fbb9b0c1a606b06c30662", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/838c3e35c2d08145c22fbb9b0c1a606b06c30662"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/07e946caf7a4b9e5781b15f75b927b9e695b4f7c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/07e946caf7a4b9e5781b15f75b927b9e695b4f7c", "html_url": "https://github.com/rust-lang/rust/commit/07e946caf7a4b9e5781b15f75b927b9e695b4f7c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/07e946caf7a4b9e5781b15f75b927b9e695b4f7c/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1899432867b0f251771e7d3389b4039245f44949", "url": "https://api.github.com/repos/rust-lang/rust/commits/1899432867b0f251771e7d3389b4039245f44949", "html_url": "https://github.com/rust-lang/rust/commit/1899432867b0f251771e7d3389b4039245f44949"}], "stats": {"total": 38, "additions": 12, "deletions": 26}, "files": [{"sha": "747848edc7a8d24c24f8037558fd21b122bbaaab", "filename": "src/librustc/hir/lowering.rs", "status": "modified", "additions": 8, "deletions": 10, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/07e946caf7a4b9e5781b15f75b927b9e695b4f7c/src%2Flibrustc%2Fhir%2Flowering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07e946caf7a4b9e5781b15f75b927b9e695b4f7c/src%2Flibrustc%2Fhir%2Flowering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Flowering.rs?ref=07e946caf7a4b9e5781b15f75b927b9e695b4f7c", "patch": "@@ -87,7 +87,10 @@ pub struct LoweringContext<'a> {\n \n     resolver: &'a mut dyn Resolver,\n \n-    parser: &'static dyn Parser,\n+    /// HACK(Centril): there is a cyclic dependency between the parser and lowering\n+    /// if we don't have this function pointer. To avoid that dependency so that\n+    /// librustc is independent of the parser, we use dynamic dispatch here.\n+    nt_to_tokenstream: NtToTokenstream,\n \n     /// The items being lowered are collected here.\n     items: BTreeMap<hir::HirId, hir::Item>,\n@@ -183,12 +186,7 @@ pub trait Resolver {\n     fn has_derives(&self, node_id: NodeId, derives: SpecialDerives) -> bool;\n }\n \n-/// HACK(Centril): there is a cyclic dependency between the parser and lowering\n-/// if we don't have this trait. To avoid that dependency so that librustc is\n-/// independent of the parser, we use type erasure here.\n-pub trait Parser {\n-    fn nt_to_tokenstream(&self, nt: &Nonterminal, sess: &ParseSess, span: Span) -> TokenStream;\n-}\n+type NtToTokenstream = fn(&Nonterminal, &ParseSess, Span) -> TokenStream;\n \n /// Context of `impl Trait` in code, which determines whether it is allowed in an HIR subtree,\n /// and if so, what meaning it has.\n@@ -246,7 +244,7 @@ pub fn lower_crate(\n     dep_graph: &DepGraph,\n     krate: &Crate,\n     resolver: &mut dyn Resolver,\n-    parser: &'static dyn Parser,\n+    nt_to_tokenstream: NtToTokenstream,\n ) -> hir::Crate {\n     // We're constructing the HIR here; we don't care what we will\n     // read, since we haven't even constructed the *input* to\n@@ -260,7 +258,7 @@ pub fn lower_crate(\n         sess,\n         cstore,\n         resolver,\n-        parser,\n+        nt_to_tokenstream,\n         items: BTreeMap::new(),\n         trait_items: BTreeMap::new(),\n         impl_items: BTreeMap::new(),\n@@ -1034,7 +1032,7 @@ impl<'a> LoweringContext<'a> {\n     fn lower_token(&mut self, token: Token) -> TokenStream {\n         match token.kind {\n             token::Interpolated(nt) => {\n-                let tts = self.parser.nt_to_tokenstream(&nt, &self.sess.parse_sess, token.span);\n+                let tts = (self.nt_to_tokenstream)(&nt, &self.sess.parse_sess, token.span);\n                 self.lower_token_stream(tts)\n             }\n             _ => TokenTree::Token(token).into(),"}, {"sha": "328798862b864b9ab971d0b2c78280f13ea18f3e", "filename": "src/librustc_interface/passes.rs", "status": "modified", "additions": 4, "deletions": 16, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/07e946caf7a4b9e5781b15f75b927b9e695b4f7c/src%2Flibrustc_interface%2Fpasses.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07e946caf7a4b9e5781b15f75b927b9e695b4f7c/src%2Flibrustc_interface%2Fpasses.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Fpasses.rs?ref=07e946caf7a4b9e5781b15f75b927b9e695b4f7c", "patch": "@@ -5,7 +5,7 @@ use crate::proc_macro_decls;\n use log::{info, warn, log_enabled};\n use rustc::dep_graph::DepGraph;\n use rustc::hir;\n-use rustc::hir::lowering::{lower_crate, Parser};\n+use rustc::hir::lowering::lower_crate;\n use rustc::hir::def_id::{CrateNum, LOCAL_CRATE};\n use rustc::lint;\n use rustc::middle::{self, reachable, resolve_lifetime, stability};\n@@ -38,12 +38,9 @@ use syntax::early_buffered_lints::BufferedEarlyLint;\n use syntax::ext::base::{NamedSyntaxExtension, ExtCtxt};\n use syntax::mut_visit::MutVisitor;\n use syntax::parse::{self, PResult};\n-use syntax::parse::token::Nonterminal;\n-use syntax::parse::ParseSess;\n-use syntax::tokenstream::TokenStream;\n use syntax::util::node_count::NodeCounter;\n use syntax::symbol::Symbol;\n-use syntax_pos::{FileName, Span};\n+use syntax_pos::FileName;\n use syntax_ext;\n \n use rustc_serialize::json;\n@@ -535,16 +532,6 @@ fn configure_and_expand_inner<'a>(\n     Ok((krate, resolver))\n }\n \n-fn parser() -> &'static dyn Parser {\n-    struct Parse;\n-    impl Parser for Parse {\n-        fn nt_to_tokenstream(&self, nt: &Nonterminal, sess: &ParseSess, span: Span) -> TokenStream {\n-            syntax::parse::nt_to_tokenstream(nt, sess, span)\n-        }\n-    }\n-    &Parse\n-}\n-\n pub fn lower_to_hir(\n     sess: &Session,\n     cstore: &CStore,\n@@ -554,7 +541,8 @@ pub fn lower_to_hir(\n ) -> Result<hir::map::Forest> {\n     // Lower AST to HIR.\n     let hir_forest = time(sess, \"lowering AST -> HIR\", || {\n-        let hir_crate = lower_crate(sess, cstore, &dep_graph, &krate, resolver, parser());\n+        let nt_to_tokenstream = syntax::parse::nt_to_tokenstream;\n+        let hir_crate = lower_crate(sess, cstore, &dep_graph, &krate, resolver, nt_to_tokenstream);\n \n         if sess.opts.debugging_opts.hir_stats {\n             hir_stats::print_hir_stats(&hir_crate);"}]}