{"sha": "f0e41ce49534816f2ffbf1a21316044a814e060f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYwZTQxY2U0OTUzNDgxNmYyZmZiZjFhMjEzMTYwNDRhODE0ZTA2MGY=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-11-29T02:14:26Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-11-29T02:14:26Z"}, "message": "Rollup merge of #79514 - Julian-Wollersberger:order-dependent-bounds, r=Mark-Simulacrum\n\nAdd test for issue #54121: order dependent trait bounds\n\nThis adds a test for #54121, which has already been fixed by #73905. Now that issue can be closed.\n\nI tested the test [on the playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=6cb061d3b81518f268649551eb67769f) where it indeed fails on stable 1.48, but compiles successfully on beta and nightly.\n\nfixes #54121", "tree": {"sha": "2592c15e428219c9ec6c9500482e7ca941c889f7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2592c15e428219c9ec6c9500482e7ca941c889f7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f0e41ce49534816f2ffbf1a21316044a814e060f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfwwQCCRBK7hj4Ov3rIwAAdHIIALMOO23GRCtWolmO9+aYhkqY\nPAT7ZjAY8cNcPhiDzo8Sj4v1t5Wnr1PvPYG+rWJkmap90Yoq4JLAInflIW0edzH8\nxgMlJ/Vg+H5K1dGo/zZjupXSMFLNzlv1Be2INfq84cVcTFYPewl/O8MJAFWujgex\nrppV6WVK+plSokjZL9PTT1RQ8QGLMzZOPa6xP3RtG7/gXCrvfxSSBvFZPva9NEbb\nElXTIyUQhCwdHqyxY89VV1LAprsV7pQhYoImoLi2ABZPdNMWkjlrk/Vq96cYAJX7\n83O0CY0/pCx4YYIuV9TxWcalOCp5ZyP966za99IeQ85gJRpQCHDdKm9hKW/VIcA=\n=rc1/\n-----END PGP SIGNATURE-----\n", "payload": "tree 2592c15e428219c9ec6c9500482e7ca941c889f7\nparent 6eb5245555cd094352fdb98207928ba19c804e65\nparent 1fa43257ebb2ad0e5681b2cdcfc4d7d79ede770f\nauthor Dylan DPC <dylan.dpc@gmail.com> 1606616066 +0100\ncommitter GitHub <noreply@github.com> 1606616066 +0100\n\nRollup merge of #79514 - Julian-Wollersberger:order-dependent-bounds, r=Mark-Simulacrum\n\nAdd test for issue #54121: order dependent trait bounds\n\nThis adds a test for #54121, which has already been fixed by #73905. Now that issue can be closed.\n\nI tested the test [on the playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=6cb061d3b81518f268649551eb67769f) where it indeed fails on stable 1.48, but compiles successfully on beta and nightly.\n\nfixes #54121\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f0e41ce49534816f2ffbf1a21316044a814e060f", "html_url": "https://github.com/rust-lang/rust/commit/f0e41ce49534816f2ffbf1a21316044a814e060f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f0e41ce49534816f2ffbf1a21316044a814e060f/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6eb5245555cd094352fdb98207928ba19c804e65", "url": "https://api.github.com/repos/rust-lang/rust/commits/6eb5245555cd094352fdb98207928ba19c804e65", "html_url": "https://github.com/rust-lang/rust/commit/6eb5245555cd094352fdb98207928ba19c804e65"}, {"sha": "1fa43257ebb2ad0e5681b2cdcfc4d7d79ede770f", "url": "https://api.github.com/repos/rust-lang/rust/commits/1fa43257ebb2ad0e5681b2cdcfc4d7d79ede770f", "html_url": "https://github.com/rust-lang/rust/commit/1fa43257ebb2ad0e5681b2cdcfc4d7d79ede770f"}], "stats": {"total": 47, "additions": 47, "deletions": 0}, "files": [{"sha": "77e4bd4d6f5281f26bbf6d8008b66838ab6ac42c", "filename": "src/test/ui/associated-type-bounds/order-dependent-bounds-issue-54121.rs", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/f0e41ce49534816f2ffbf1a21316044a814e060f/src%2Ftest%2Fui%2Fassociated-type-bounds%2Forder-dependent-bounds-issue-54121.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0e41ce49534816f2ffbf1a21316044a814e060f/src%2Ftest%2Fui%2Fassociated-type-bounds%2Forder-dependent-bounds-issue-54121.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-type-bounds%2Forder-dependent-bounds-issue-54121.rs?ref=f0e41ce49534816f2ffbf1a21316044a814e060f", "patch": "@@ -0,0 +1,47 @@\n+// check-pass\n+\n+// From https://github.com/rust-lang/rust/issues/54121/\n+//\n+// Whether the code compiled depended on the order of the trait bounds in\n+// `type T: Tr<u8, u8> + Tr<u16, u16>`\n+// But both should compile as order shouldn't matter.\n+\n+trait Tr<A, B> {\n+    fn exec(a: A, b: B);\n+}\n+\n+trait P {\n+    // This compiled successfully\n+    type T: Tr<u16, u16> + Tr<u8, u8>;\n+}\n+\n+trait Q {\n+    // This didn't compile\n+    type T: Tr<u8, u8> + Tr<u16, u16>;\n+}\n+\n+#[allow(dead_code)]\n+fn f<S: P>() {\n+    <S as P>::T::exec(0u8, 0u8)\n+}\n+\n+#[allow(dead_code)]\n+fn g<S: Q>() {\n+    // A mismatched types error was emitted on this line.\n+    <S as Q>::T::exec(0u8, 0u8)\n+}\n+\n+// Another reproduction of the same issue\n+trait Trait {\n+    type Type: Into<Self::Type1> + Into<Self::Type2> + Copy;\n+    type Type1;\n+    type Type2;\n+}\n+\n+#[allow(dead_code)]\n+fn foo<T: Trait>(x: T::Type) {\n+    let _1: T::Type1 = x.into();\n+    let _2: T::Type2 = x.into();\n+}\n+\n+fn main() { }"}]}