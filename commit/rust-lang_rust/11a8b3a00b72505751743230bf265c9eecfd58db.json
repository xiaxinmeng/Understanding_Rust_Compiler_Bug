{"sha": "11a8b3a00b72505751743230bf265c9eecfd58db", "node_id": "C_kwDOAAsO6NoAKDExYThiM2EwMGI3MjUwNTc1MTc0MzIzMGJmMjY1YzllZWNmZDU4ZGI", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-06-06T23:00:50Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-06-07T00:17:39Z"}, "message": "bless tests", "tree": {"sha": "f625aa023160a793d20e6130726272fe230079d5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f625aa023160a793d20e6130726272fe230079d5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/11a8b3a00b72505751743230bf265c9eecfd58db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/11a8b3a00b72505751743230bf265c9eecfd58db", "html_url": "https://github.com/rust-lang/rust/commit/11a8b3a00b72505751743230bf265c9eecfd58db", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/11a8b3a00b72505751743230bf265c9eecfd58db/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bf372a8fbc838e89234adba0339d5f2d1ea5f561", "url": "https://api.github.com/repos/rust-lang/rust/commits/bf372a8fbc838e89234adba0339d5f2d1ea5f561", "html_url": "https://github.com/rust-lang/rust/commit/bf372a8fbc838e89234adba0339d5f2d1ea5f561"}], "stats": {"total": 307, "additions": 70, "deletions": 237}, "files": [{"sha": "c5093c0e60113a3dd780be2d1eb5601d95bcf9fb", "filename": "tests/fail/concurrency/libc_pthread_create_main_terminate.stderr", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Ffail%2Fconcurrency%2Flibc_pthread_create_main_terminate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Ffail%2Fconcurrency%2Flibc_pthread_create_main_terminate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fconcurrency%2Flibc_pthread_create_main_terminate.stderr?ref=11a8b3a00b72505751743230bf265c9eecfd58db", "patch": "@@ -1,9 +1,6 @@\n-warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n-         (see https://github.com/rust-lang/miri/issues/1388)\n-\n error: the main thread terminated without waiting for all remaining threads\n \n note: pass `-Zmiri-ignore-leaks` to disable this check\n \n-error: aborting due to previous error; 1 warning emitted\n+error: aborting due to previous error\n "}, {"sha": "44d0f727a395ec26db4802533d79d7e7cfe4cbf1", "filename": "tests/fail/concurrency/libc_pthread_join_detached.stderr", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Ffail%2Fconcurrency%2Flibc_pthread_join_detached.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Ffail%2Fconcurrency%2Flibc_pthread_join_detached.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fconcurrency%2Flibc_pthread_join_detached.stderr?ref=11a8b3a00b72505751743230bf265c9eecfd58db", "patch": "@@ -1,6 +1,3 @@\n-warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n-         (see https://github.com/rust-lang/miri/issues/1388)\n-\n error: Undefined Behavior: trying to join a detached or already joined thread\n   --> $DIR/libc_pthread_join_detached.rs:LL:CC\n    |\n@@ -14,5 +11,5 @@ LL | ...   assert_eq!(libc::pthread_join(native, ptr::null_mut()), 0);\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n \n-error: aborting due to previous error; 1 warning emitted\n+error: aborting due to previous error\n "}, {"sha": "b67974c58eaef8616d938ad9b70a3f6231478038", "filename": "tests/fail/concurrency/libc_pthread_join_joined.stderr", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Ffail%2Fconcurrency%2Flibc_pthread_join_joined.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Ffail%2Fconcurrency%2Flibc_pthread_join_joined.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fconcurrency%2Flibc_pthread_join_joined.stderr?ref=11a8b3a00b72505751743230bf265c9eecfd58db", "patch": "@@ -1,6 +1,3 @@\n-warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n-         (see https://github.com/rust-lang/miri/issues/1388)\n-\n error: Undefined Behavior: trying to join a detached or already joined thread\n   --> $DIR/libc_pthread_join_joined.rs:LL:CC\n    |\n@@ -14,5 +11,5 @@ LL | ...   assert_eq!(libc::pthread_join(native, ptr::null_mut()), 0);\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n \n-error: aborting due to previous error; 1 warning emitted\n+error: aborting due to previous error\n "}, {"sha": "3e69df508359a772c93093695da8b47cea3f35be", "filename": "tests/fail/concurrency/libc_pthread_join_main.stderr", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Ffail%2Fconcurrency%2Flibc_pthread_join_main.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Ffail%2Fconcurrency%2Flibc_pthread_join_main.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fconcurrency%2Flibc_pthread_join_main.stderr?ref=11a8b3a00b72505751743230bf265c9eecfd58db", "patch": "@@ -1,6 +1,3 @@\n-warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n-         (see https://github.com/rust-lang/miri/issues/1388)\n-\n error: Undefined Behavior: trying to join a detached or already joined thread\n   --> $DIR/libc_pthread_join_main.rs:LL:CC\n    |\n@@ -14,5 +11,5 @@ LL | ...   assert_eq!(libc::pthread_join(thread_id, ptr::null_mut()), 0);\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n \n-error: aborting due to previous error; 1 warning emitted\n+error: aborting due to previous error\n "}, {"sha": "997bca9fe4223a0da6b8a569ee9b277104258ff1", "filename": "tests/fail/concurrency/libc_pthread_join_multiple.stderr", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Ffail%2Fconcurrency%2Flibc_pthread_join_multiple.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Ffail%2Fconcurrency%2Flibc_pthread_join_multiple.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fconcurrency%2Flibc_pthread_join_multiple.stderr?ref=11a8b3a00b72505751743230bf265c9eecfd58db", "patch": "@@ -1,6 +1,3 @@\n-warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n-         (see https://github.com/rust-lang/miri/issues/1388)\n-\n error: Undefined Behavior: trying to join a detached or already joined thread\n   --> $DIR/libc_pthread_join_multiple.rs:LL:CC\n    |\n@@ -14,5 +11,5 @@ LL | ...   assert_eq!(libc::pthread_join(native_copy, ptr::null_mut()), 0);\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n \n-error: aborting due to previous error; 1 warning emitted\n+error: aborting due to previous error\n "}, {"sha": "8d2acb817f938bf0e19e38c83cd0ff4993ec4686", "filename": "tests/fail/concurrency/libc_pthread_join_self.stderr", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Ffail%2Fconcurrency%2Flibc_pthread_join_self.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Ffail%2Fconcurrency%2Flibc_pthread_join_self.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fconcurrency%2Flibc_pthread_join_self.stderr?ref=11a8b3a00b72505751743230bf265c9eecfd58db", "patch": "@@ -1,6 +1,3 @@\n-warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n-         (see https://github.com/rust-lang/miri/issues/1388)\n-\n error: Undefined Behavior: trying to join itself\n   --> $DIR/libc_pthread_join_self.rs:LL:CC\n    |\n@@ -14,5 +11,5 @@ LL |             assert_eq!(libc::pthread_join(native, ptr::null_mut()), 0);\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n \n-error: aborting due to previous error; 1 warning emitted\n+error: aborting due to previous error\n "}, {"sha": "a485edc0da93f344a3b955d423849588ce9e3ff1", "filename": "tests/fail/concurrency/thread_local_static_dealloc.stderr", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Ffail%2Fconcurrency%2Fthread_local_static_dealloc.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Ffail%2Fconcurrency%2Fthread_local_static_dealloc.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fconcurrency%2Fthread_local_static_dealloc.stderr?ref=11a8b3a00b72505751743230bf265c9eecfd58db", "patch": "@@ -1,6 +1,3 @@\n-warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n-         (see https://github.com/rust-lang/miri/issues/1388)\n-\n error: Undefined Behavior: pointer to ALLOC was dereferenced after this allocation got freed\n   --> $DIR/thread_local_static_dealloc.rs:LL:CC\n    |\n@@ -14,5 +11,5 @@ LL |     let _val = *(dangling_ptr as *const u8);\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n \n-error: aborting due to previous error; 1 warning emitted\n+error: aborting due to previous error\n "}, {"sha": "9d96b718bc305ce6957c9d9ccc3a7afbc6a71213", "filename": "tests/fail/concurrency/too_few_args.stderr", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Ffail%2Fconcurrency%2Ftoo_few_args.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Ffail%2Fconcurrency%2Ftoo_few_args.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fconcurrency%2Ftoo_few_args.stderr?ref=11a8b3a00b72505751743230bf265c9eecfd58db", "patch": "@@ -1,6 +1,3 @@\n-warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n-         (see https://github.com/rust-lang/miri/issues/1388)\n-\n error: Undefined Behavior: callee has fewer arguments than expected\n   --> $DIR/too_few_args.rs:LL:CC\n    |\n@@ -13,5 +10,5 @@ LL |     panic!()\n    = note: inside `thread_start` at RUSTLIB/std/src/panic.rs:LL:CC\n    = note: this error originates in the macro `$crate::panic::panic_2015` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n-error: aborting due to previous error; 1 warning emitted\n+error: aborting due to previous error\n "}, {"sha": "7132b8c453afa2059ba0094ddc0609dbf2c0e125", "filename": "tests/fail/concurrency/too_many_args.stderr", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Ffail%2Fconcurrency%2Ftoo_many_args.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Ffail%2Fconcurrency%2Ftoo_many_args.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fconcurrency%2Ftoo_many_args.stderr?ref=11a8b3a00b72505751743230bf265c9eecfd58db", "patch": "@@ -1,6 +1,3 @@\n-warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n-         (see https://github.com/rust-lang/miri/issues/1388)\n-\n error: Undefined Behavior: callee has more arguments than expected\n   --> $DIR/too_many_args.rs:LL:CC\n    |\n@@ -13,5 +10,5 @@ LL |     panic!()\n    = note: inside `thread_start` at RUSTLIB/std/src/panic.rs:LL:CC\n    = note: this error originates in the macro `$crate::panic::panic_2015` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n-error: aborting due to previous error; 1 warning emitted\n+error: aborting due to previous error\n "}, {"sha": "35d6f7c38494022cb71560d731bd9e1a86830d1b", "filename": "tests/fail/concurrency/unwind_top_of_stack.stderr", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Ffail%2Fconcurrency%2Funwind_top_of_stack.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Ffail%2Fconcurrency%2Funwind_top_of_stack.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fconcurrency%2Funwind_top_of_stack.stderr?ref=11a8b3a00b72505751743230bf265c9eecfd58db", "patch": "@@ -1,6 +1,3 @@\n-warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n-         (see https://github.com/rust-lang/miri/issues/1388)\n-\n thread '<unnamed>' panicked at 'explicit panic', $DIR/unwind_top_of_stack.rs:LL:CC\n note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n error: Undefined Behavior: unwinding past the topmost frame of the stack\n@@ -16,5 +13,5 @@ LL | | }\n            \n    = note: inside `thread_start` at $DIR/unwind_top_of_stack.rs:LL:CC\n \n-error: aborting due to previous error; 1 warning emitted\n+error: aborting due to previous error\n "}, {"sha": "52004f2d2d025611f8bd261b1a343b736d0981ae", "filename": "tests/fail/data_race/alloc_read_race.stderr", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Ffail%2Fdata_race%2Falloc_read_race.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Ffail%2Fdata_race%2Falloc_read_race.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fdata_race%2Falloc_read_race.stderr?ref=11a8b3a00b72505751743230bf265c9eecfd58db", "patch": "@@ -1,6 +1,3 @@\n-warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n-         (see https://github.com/rust-lang/miri/issues/1388)\n-\n error: Undefined Behavior: Data race detected between Read on Thread(id = 2) and Allocate on Thread(id = 1) at ALLOC (current vector clock = VClock, conflicting timestamp = VClock)\n   --> $DIR/alloc_read_race.rs:LL:CC\n    |\n@@ -14,5 +11,5 @@ LL |             *pointer.load(Ordering::Relaxed)\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n \n-error: aborting due to previous error; 1 warning emitted\n+error: aborting due to previous error\n "}, {"sha": "b6c05b34073c51c47d579805abde5c05e28465d9", "filename": "tests/fail/data_race/alloc_write_race.stderr", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Ffail%2Fdata_race%2Falloc_write_race.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Ffail%2Fdata_race%2Falloc_write_race.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fdata_race%2Falloc_write_race.stderr?ref=11a8b3a00b72505751743230bf265c9eecfd58db", "patch": "@@ -1,6 +1,3 @@\n-warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n-         (see https://github.com/rust-lang/miri/issues/1388)\n-\n error: Undefined Behavior: Data race detected between Write on Thread(id = 2) and Allocate on Thread(id = 1) at ALLOC (current vector clock = VClock, conflicting timestamp = VClock)\n   --> $DIR/alloc_write_race.rs:LL:CC\n    |\n@@ -14,5 +11,5 @@ LL |             *pointer.load(Ordering::Relaxed) = 2;\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n \n-error: aborting due to previous error; 1 warning emitted\n+error: aborting due to previous error\n "}, {"sha": "80e79eb553ee9576a8e0f622dedbc09324888b33", "filename": "tests/fail/data_race/atomic_read_na_write_race1.stderr", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Ffail%2Fdata_race%2Fatomic_read_na_write_race1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Ffail%2Fdata_race%2Fatomic_read_na_write_race1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fdata_race%2Fatomic_read_na_write_race1.stderr?ref=11a8b3a00b72505751743230bf265c9eecfd58db", "patch": "@@ -1,6 +1,3 @@\n-warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n-         (see https://github.com/rust-lang/miri/issues/1388)\n-\n error: Undefined Behavior: Data race detected between Atomic Load on Thread(id = 2) and Write on Thread(id = 1) at ALLOC (current vector clock = VClock, conflicting timestamp = VClock)\n   --> $DIR/atomic_read_na_write_race1.rs:LL:CC\n    |\n@@ -14,5 +11,5 @@ LL |             atomic_load(c.0 as *mut usize)\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n \n-error: aborting due to previous error; 1 warning emitted\n+error: aborting due to previous error\n "}, {"sha": "9a432c586afe7f151d6fce9e6fb57f6df490b969", "filename": "tests/fail/data_race/atomic_read_na_write_race2.stderr", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Ffail%2Fdata_race%2Fatomic_read_na_write_race2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Ffail%2Fdata_race%2Fatomic_read_na_write_race2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fdata_race%2Fatomic_read_na_write_race2.stderr?ref=11a8b3a00b72505751743230bf265c9eecfd58db", "patch": "@@ -1,6 +1,3 @@\n-warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n-         (see https://github.com/rust-lang/miri/issues/1388)\n-\n error: Undefined Behavior: Data race detected between Write on Thread(id = 2) and Atomic Load on Thread(id = 1) at ALLOC (current vector clock = VClock, conflicting timestamp = VClock)\n   --> $DIR/atomic_read_na_write_race2.rs:LL:CC\n    |\n@@ -14,5 +11,5 @@ LL |             *atomic_ref.get_mut() = 32;\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n \n-error: aborting due to previous error; 1 warning emitted\n+error: aborting due to previous error\n "}, {"sha": "8280f43b518fe9ef68c011d37b5d79a828b67f72", "filename": "tests/fail/data_race/atomic_write_na_read_race1.stderr", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Ffail%2Fdata_race%2Fatomic_write_na_read_race1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Ffail%2Fdata_race%2Fatomic_write_na_read_race1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fdata_race%2Fatomic_write_na_read_race1.stderr?ref=11a8b3a00b72505751743230bf265c9eecfd58db", "patch": "@@ -1,6 +1,3 @@\n-warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n-         (see https://github.com/rust-lang/miri/issues/1388)\n-\n error: Undefined Behavior: Data race detected between Read on Thread(id = 2) and Atomic Store on Thread(id = 1) at ALLOC (current vector clock = VClock, conflicting timestamp = VClock)\n   --> $DIR/atomic_write_na_read_race1.rs:LL:CC\n    |\n@@ -14,5 +11,5 @@ LL |             *atomic_ref.get_mut()\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n \n-error: aborting due to previous error; 1 warning emitted\n+error: aborting due to previous error\n "}, {"sha": "63d0f5814ef4d78d48f2d52b59337acfd9bdeafe", "filename": "tests/fail/data_race/atomic_write_na_read_race2.stderr", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Ffail%2Fdata_race%2Fatomic_write_na_read_race2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Ffail%2Fdata_race%2Fatomic_write_na_read_race2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fdata_race%2Fatomic_write_na_read_race2.stderr?ref=11a8b3a00b72505751743230bf265c9eecfd58db", "patch": "@@ -1,6 +1,3 @@\n-warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n-         (see https://github.com/rust-lang/miri/issues/1388)\n-\n error: Undefined Behavior: Data race detected between Atomic Store on Thread(id = 2) and Read on Thread(id = 1) at ALLOC (current vector clock = VClock, conflicting timestamp = VClock)\n   --> $DIR/atomic_write_na_read_race2.rs:LL:CC\n    |\n@@ -14,5 +11,5 @@ LL |             atomic_store(c.0 as *mut usize, 32);\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n \n-error: aborting due to previous error; 1 warning emitted\n+error: aborting due to previous error\n "}, {"sha": "332be7406c82dfc5f078477a9af24e092faa143d", "filename": "tests/fail/data_race/atomic_write_na_write_race1.stderr", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Ffail%2Fdata_race%2Fatomic_write_na_write_race1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Ffail%2Fdata_race%2Fatomic_write_na_write_race1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fdata_race%2Fatomic_write_na_write_race1.stderr?ref=11a8b3a00b72505751743230bf265c9eecfd58db", "patch": "@@ -1,6 +1,3 @@\n-warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n-         (see https://github.com/rust-lang/miri/issues/1388)\n-\n error: Undefined Behavior: Data race detected between Atomic Store on Thread(id = 2) and Write on Thread(id = 1) at ALLOC (current vector clock = VClock, conflicting timestamp = VClock)\n   --> $DIR/atomic_write_na_write_race1.rs:LL:CC\n    |\n@@ -14,5 +11,5 @@ LL |             atomic_store(c.0 as *mut usize, 64);\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n \n-error: aborting due to previous error; 1 warning emitted\n+error: aborting due to previous error\n "}, {"sha": "024f525b121353f9cc277988ed9c70f9ada1ad57", "filename": "tests/fail/data_race/atomic_write_na_write_race2.stderr", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Ffail%2Fdata_race%2Fatomic_write_na_write_race2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Ffail%2Fdata_race%2Fatomic_write_na_write_race2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fdata_race%2Fatomic_write_na_write_race2.stderr?ref=11a8b3a00b72505751743230bf265c9eecfd58db", "patch": "@@ -1,6 +1,3 @@\n-warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n-         (see https://github.com/rust-lang/miri/issues/1388)\n-\n error: Undefined Behavior: Data race detected between Write on Thread(id = 2) and Atomic Store on Thread(id = 1) at ALLOC (current vector clock = VClock, conflicting timestamp = VClock)\n   --> $DIR/atomic_write_na_write_race2.rs:LL:CC\n    |\n@@ -14,5 +11,5 @@ LL |             *atomic_ref.get_mut() = 32;\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n \n-error: aborting due to previous error; 1 warning emitted\n+error: aborting due to previous error\n "}, {"sha": "6d31e3971e530b8f6d63248ea1e281cf392789e1", "filename": "tests/fail/data_race/dangling_thread_async_race.stderr", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Ffail%2Fdata_race%2Fdangling_thread_async_race.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Ffail%2Fdata_race%2Fdangling_thread_async_race.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fdata_race%2Fdangling_thread_async_race.stderr?ref=11a8b3a00b72505751743230bf265c9eecfd58db", "patch": "@@ -1,6 +1,3 @@\n-warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n-         (see https://github.com/rust-lang/miri/issues/1388)\n-\n error: Undefined Behavior: Data race detected between Write on Thread(id = 3) and Write on Thread(id = 1) at ALLOC (current vector clock = VClock, conflicting timestamp = VClock)\n   --> $DIR/dangling_thread_async_race.rs:LL:CC\n    |\n@@ -14,5 +11,5 @@ LL |             *c.0 = 64;\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n \n-error: aborting due to previous error; 1 warning emitted\n+error: aborting due to previous error\n "}, {"sha": "ba1ef2760f8f65559ac6ef317a9046cdacba0e1e", "filename": "tests/fail/data_race/dangling_thread_race.stderr", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Ffail%2Fdata_race%2Fdangling_thread_race.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Ffail%2Fdata_race%2Fdangling_thread_race.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fdata_race%2Fdangling_thread_race.stderr?ref=11a8b3a00b72505751743230bf265c9eecfd58db", "patch": "@@ -1,6 +1,3 @@\n-warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n-         (see https://github.com/rust-lang/miri/issues/1388)\n-\n error: Undefined Behavior: Data race detected between Write on Thread(id = 0, name = \"main\") and Write on Thread(id = 1) at ALLOC (current vector clock = VClock, conflicting timestamp = VClock)\n   --> $DIR/dangling_thread_race.rs:LL:CC\n    |\n@@ -14,5 +11,5 @@ LL |         *c.0 = 64;\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n \n-error: aborting due to previous error; 1 warning emitted\n+error: aborting due to previous error\n "}, {"sha": "6b5cf5fc02f64a4248bf0a64e45c6124903678f0", "filename": "tests/fail/data_race/dealloc_read_race1.stderr", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Ffail%2Fdata_race%2Fdealloc_read_race1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Ffail%2Fdata_race%2Fdealloc_read_race1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fdata_race%2Fdealloc_read_race1.stderr?ref=11a8b3a00b72505751743230bf265c9eecfd58db", "patch": "@@ -1,6 +1,3 @@\n-warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n-         (see https://github.com/rust-lang/miri/issues/1388)\n-\n error: Undefined Behavior: Data race detected between Deallocate on Thread(id = 2) and Read on Thread(id = 1) at ALLOC (current vector clock = VClock, conflicting timestamp = VClock)\n   --> $DIR/dealloc_read_race1.rs:LL:CC\n    |\n@@ -14,5 +11,5 @@ LL |             __rust_dealloc(ptr.0 as *mut _, std::mem::size_of::<usize>(), s\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n \n-error: aborting due to previous error; 1 warning emitted\n+error: aborting due to previous error\n "}, {"sha": "f703d1896d91f10cdf17876ccc98bf3204745f32", "filename": "tests/fail/data_race/dealloc_read_race2.stderr", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Ffail%2Fdata_race%2Fdealloc_read_race2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Ffail%2Fdata_race%2Fdealloc_read_race2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fdata_race%2Fdealloc_read_race2.stderr?ref=11a8b3a00b72505751743230bf265c9eecfd58db", "patch": "@@ -1,6 +1,3 @@\n-warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n-         (see https://github.com/rust-lang/miri/issues/1388)\n-\n error: Undefined Behavior: pointer to ALLOC was dereferenced after this allocation got freed\n   --> $DIR/dealloc_read_race2.rs:LL:CC\n    |\n@@ -14,5 +11,5 @@ LL |             *ptr.0\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n \n-error: aborting due to previous error; 1 warning emitted\n+error: aborting due to previous error\n "}, {"sha": "1275d1290b0ac6a867f6faeecae8fb7613099c40", "filename": "tests/fail/data_race/dealloc_read_race_stack.stderr", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Ffail%2Fdata_race%2Fdealloc_read_race_stack.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Ffail%2Fdata_race%2Fdealloc_read_race_stack.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fdata_race%2Fdealloc_read_race_stack.stderr?ref=11a8b3a00b72505751743230bf265c9eecfd58db", "patch": "@@ -1,6 +1,3 @@\n-warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n-         (see https://github.com/rust-lang/miri/issues/1388)\n-\n error: Undefined Behavior: Data race detected between Deallocate on Thread(id = 1) and Read on Thread(id = 2) at ALLOC (current vector clock = VClock, conflicting timestamp = VClock)\n   --> $DIR/dealloc_read_race_stack.rs:LL:CC\n    |\n@@ -14,5 +11,5 @@ LL |             }\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n \n-error: aborting due to previous error; 1 warning emitted\n+error: aborting due to previous error\n "}, {"sha": "ac9701d49f5f71963cf11bd28297fbd98c2b09d3", "filename": "tests/fail/data_race/dealloc_write_race1.stderr", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Ffail%2Fdata_race%2Fdealloc_write_race1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Ffail%2Fdata_race%2Fdealloc_write_race1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fdata_race%2Fdealloc_write_race1.stderr?ref=11a8b3a00b72505751743230bf265c9eecfd58db", "patch": "@@ -1,6 +1,3 @@\n-warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n-         (see https://github.com/rust-lang/miri/issues/1388)\n-\n error: Undefined Behavior: Data race detected between Deallocate on Thread(id = 2) and Write on Thread(id = 1) at ALLOC (current vector clock = VClock, conflicting timestamp = VClock)\n   --> $DIR/dealloc_write_race1.rs:LL:CC\n    |\n@@ -14,5 +11,5 @@ LL |             __rust_dealloc(ptr.0 as *mut _, std::mem::size_of::<usize>(), s\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n \n-error: aborting due to previous error; 1 warning emitted\n+error: aborting due to previous error\n "}, {"sha": "37d1c551d49350e9b4d6629bb4509e5c2f48b361", "filename": "tests/fail/data_race/dealloc_write_race2.stderr", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Ffail%2Fdata_race%2Fdealloc_write_race2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Ffail%2Fdata_race%2Fdealloc_write_race2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fdata_race%2Fdealloc_write_race2.stderr?ref=11a8b3a00b72505751743230bf265c9eecfd58db", "patch": "@@ -1,6 +1,3 @@\n-warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n-         (see https://github.com/rust-lang/miri/issues/1388)\n-\n error: Undefined Behavior: pointer to ALLOC was dereferenced after this allocation got freed\n   --> $DIR/dealloc_write_race2.rs:LL:CC\n    |\n@@ -14,5 +11,5 @@ LL |             *ptr.0 = 2;\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n \n-error: aborting due to previous error; 1 warning emitted\n+error: aborting due to previous error\n "}, {"sha": "28a131aac07b5c041462b4cbd1886e886bbc3595", "filename": "tests/fail/data_race/dealloc_write_race_stack.stderr", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Ffail%2Fdata_race%2Fdealloc_write_race_stack.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Ffail%2Fdata_race%2Fdealloc_write_race_stack.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fdata_race%2Fdealloc_write_race_stack.stderr?ref=11a8b3a00b72505751743230bf265c9eecfd58db", "patch": "@@ -1,6 +1,3 @@\n-warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n-         (see https://github.com/rust-lang/miri/issues/1388)\n-\n error: Undefined Behavior: Data race detected between Deallocate on Thread(id = 1) and Write on Thread(id = 2) at ALLOC (current vector clock = VClock, conflicting timestamp = VClock)\n   --> $DIR/dealloc_write_race_stack.rs:LL:CC\n    |\n@@ -14,5 +11,5 @@ LL |             }\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n \n-error: aborting due to previous error; 1 warning emitted\n+error: aborting due to previous error\n "}, {"sha": "db7577b0966e5eedabbee55c0385cc21aa01db21", "filename": "tests/fail/data_race/enable_after_join_to_main.stderr", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Ffail%2Fdata_race%2Fenable_after_join_to_main.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Ffail%2Fdata_race%2Fenable_after_join_to_main.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fdata_race%2Fenable_after_join_to_main.stderr?ref=11a8b3a00b72505751743230bf265c9eecfd58db", "patch": "@@ -1,6 +1,3 @@\n-warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n-         (see https://github.com/rust-lang/miri/issues/1388)\n-\n error: Undefined Behavior: Data race detected between Write on Thread(id = 6) and Write on Thread(id = 5) at ALLOC (current vector clock = VClock, conflicting timestamp = VClock)\n   --> $DIR/enable_after_join_to_main.rs:LL:CC\n    |\n@@ -14,5 +11,5 @@ LL |             *c.0 = 64;\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n \n-error: aborting due to previous error; 1 warning emitted\n+error: aborting due to previous error\n "}, {"sha": "17cc6a82a1c2aafd5c8c775598a54a20719d0c9d", "filename": "tests/fail/data_race/fence_after_load.stderr", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Ffail%2Fdata_race%2Ffence_after_load.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Ffail%2Fdata_race%2Ffence_after_load.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fdata_race%2Ffence_after_load.stderr?ref=11a8b3a00b72505751743230bf265c9eecfd58db", "patch": "@@ -1,6 +1,3 @@\n-warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n-         (see https://github.com/rust-lang/miri/issues/1388)\n-\n error: Undefined Behavior: Data race detected between Write on Thread(id = 0, name = \"main\") and Write on Thread(id = 1) at ALLOC (current vector clock = VClock, conflicting timestamp = VClock)\n   --> $DIR/fence_after_load.rs:LL:CC\n    |\n@@ -14,5 +11,5 @@ LL |     unsafe { V = 2 }\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n \n-error: aborting due to previous error; 1 warning emitted\n+error: aborting due to previous error\n "}, {"sha": "b775e2b6fdf1fc7f7305dfda2f448f4a119b14ab", "filename": "tests/fail/data_race/read_write_race.stderr", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Ffail%2Fdata_race%2Fread_write_race.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Ffail%2Fdata_race%2Fread_write_race.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fdata_race%2Fread_write_race.stderr?ref=11a8b3a00b72505751743230bf265c9eecfd58db", "patch": "@@ -1,6 +1,3 @@\n-warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n-         (see https://github.com/rust-lang/miri/issues/1388)\n-\n error: Undefined Behavior: Data race detected between Write on Thread(id = 2) and Read on Thread(id = 1) at ALLOC (current vector clock = VClock, conflicting timestamp = VClock)\n   --> $DIR/read_write_race.rs:LL:CC\n    |\n@@ -14,5 +11,5 @@ LL |             *c.0 = 64;\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n \n-error: aborting due to previous error; 1 warning emitted\n+error: aborting due to previous error\n "}, {"sha": "0f5f4956ffdaeedb164b8b9db87c2cc3d326215e", "filename": "tests/fail/data_race/read_write_race_stack.stderr", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Ffail%2Fdata_race%2Fread_write_race_stack.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Ffail%2Fdata_race%2Fread_write_race_stack.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fdata_race%2Fread_write_race_stack.stderr?ref=11a8b3a00b72505751743230bf265c9eecfd58db", "patch": "@@ -1,6 +1,3 @@\n-warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n-         (see https://github.com/rust-lang/miri/issues/1388)\n-\n error: Undefined Behavior: Data race detected between Read on Thread(id = 1) and Write on Thread(id = 2) at ALLOC (current vector clock = VClock, conflicting timestamp = VClock)\n   --> $DIR/read_write_race_stack.rs:LL:CC\n    |\n@@ -14,5 +11,5 @@ LL |             stack_var\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n \n-error: aborting due to previous error; 1 warning emitted\n+error: aborting due to previous error\n "}, {"sha": "fb376b58f2c1670a4125dd7e6c41436dfddbbb73", "filename": "tests/fail/data_race/relax_acquire_race.stderr", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Ffail%2Fdata_race%2Frelax_acquire_race.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Ffail%2Fdata_race%2Frelax_acquire_race.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fdata_race%2Frelax_acquire_race.stderr?ref=11a8b3a00b72505751743230bf265c9eecfd58db", "patch": "@@ -1,6 +1,3 @@\n-warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n-         (see https://github.com/rust-lang/miri/issues/1388)\n-\n error: Undefined Behavior: Data race detected between Read on Thread(id = 3) and Write on Thread(id = 1) at ALLOC (current vector clock = VClock, conflicting timestamp = VClock)\n   --> $DIR/relax_acquire_race.rs:LL:CC\n    |\n@@ -14,5 +11,5 @@ LL |                 *c.0\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n \n-error: aborting due to previous error; 1 warning emitted\n+error: aborting due to previous error\n "}, {"sha": "1de9c0ac1c7fd5fb9f01676254fe78f2479c5dc3", "filename": "tests/fail/data_race/release_seq_race.stderr", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Ffail%2Fdata_race%2Frelease_seq_race.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Ffail%2Fdata_race%2Frelease_seq_race.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fdata_race%2Frelease_seq_race.stderr?ref=11a8b3a00b72505751743230bf265c9eecfd58db", "patch": "@@ -1,6 +1,3 @@\n-warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n-         (see https://github.com/rust-lang/miri/issues/1388)\n-\n error: Undefined Behavior: Data race detected between Read on Thread(id = 3) and Write on Thread(id = 1) at ALLOC (current vector clock = VClock, conflicting timestamp = VClock)\n   --> $DIR/release_seq_race.rs:LL:CC\n    |\n@@ -14,5 +11,5 @@ LL |                 *c.0\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n \n-error: aborting due to previous error; 1 warning emitted\n+error: aborting due to previous error\n "}, {"sha": "9bbdd9a475733034059ff9c1de79cef1f0a85858", "filename": "tests/fail/data_race/release_seq_race_same_thread.stderr", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Ffail%2Fdata_race%2Frelease_seq_race_same_thread.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Ffail%2Fdata_race%2Frelease_seq_race_same_thread.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fdata_race%2Frelease_seq_race_same_thread.stderr?ref=11a8b3a00b72505751743230bf265c9eecfd58db", "patch": "@@ -1,6 +1,3 @@\n-warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n-         (see https://github.com/rust-lang/miri/issues/1388)\n-\n error: Undefined Behavior: Data race detected between Read on Thread(id = 2) and Write on Thread(id = 1) at ALLOC (current vector clock = VClock, conflicting timestamp = VClock)\n   --> $DIR/release_seq_race_same_thread.rs:LL:CC\n    |\n@@ -14,5 +11,5 @@ LL |                 *c.0\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n \n-error: aborting due to previous error; 1 warning emitted\n+error: aborting due to previous error\n "}, {"sha": "10d3291fa733d9631852b5deca8ceeca3bc252f2", "filename": "tests/fail/data_race/rmw_race.stderr", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Ffail%2Fdata_race%2Frmw_race.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Ffail%2Fdata_race%2Frmw_race.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fdata_race%2Frmw_race.stderr?ref=11a8b3a00b72505751743230bf265c9eecfd58db", "patch": "@@ -1,6 +1,3 @@\n-warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n-         (see https://github.com/rust-lang/miri/issues/1388)\n-\n error: Undefined Behavior: Data race detected between Read on Thread(id = 3) and Write on Thread(id = 1) at ALLOC (current vector clock = VClock, conflicting timestamp = VClock)\n   --> $DIR/rmw_race.rs:LL:CC\n    |\n@@ -14,5 +11,5 @@ LL |                 *c.0\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n \n-error: aborting due to previous error; 1 warning emitted\n+error: aborting due to previous error\n "}, {"sha": "0054f5bf63a0527b721a9693bd3a5b794b3f88d0", "filename": "tests/fail/data_race/write_write_race.stderr", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Ffail%2Fdata_race%2Fwrite_write_race.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Ffail%2Fdata_race%2Fwrite_write_race.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fdata_race%2Fwrite_write_race.stderr?ref=11a8b3a00b72505751743230bf265c9eecfd58db", "patch": "@@ -1,6 +1,3 @@\n-warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n-         (see https://github.com/rust-lang/miri/issues/1388)\n-\n error: Undefined Behavior: Data race detected between Write on Thread(id = 2) and Write on Thread(id = 1) at ALLOC (current vector clock = VClock, conflicting timestamp = VClock)\n   --> $DIR/write_write_race.rs:LL:CC\n    |\n@@ -14,5 +11,5 @@ LL |             *c.0 = 64;\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n \n-error: aborting due to previous error; 1 warning emitted\n+error: aborting due to previous error\n "}, {"sha": "2012643431f6ea378f99b248c02ea4bd53f34414", "filename": "tests/fail/data_race/write_write_race_stack.stderr", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Ffail%2Fdata_race%2Fwrite_write_race_stack.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Ffail%2Fdata_race%2Fwrite_write_race_stack.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fdata_race%2Fwrite_write_race_stack.stderr?ref=11a8b3a00b72505751743230bf265c9eecfd58db", "patch": "@@ -1,6 +1,3 @@\n-warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n-         (see https://github.com/rust-lang/miri/issues/1388)\n-\n error: Undefined Behavior: Data race detected between Write on Thread(id = 1) and Write on Thread(id = 2) at ALLOC (current vector clock = VClock, conflicting timestamp = VClock)\n   --> $DIR/write_write_race_stack.rs:LL:CC\n    |\n@@ -14,5 +11,5 @@ LL |             stack_var = 1usize;\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n \n-error: aborting due to previous error; 1 warning emitted\n+error: aborting due to previous error\n "}, {"sha": "00b03bceb65e4e7d51bfd73bc05e56b9adfe1157", "filename": "tests/fail/should-pass/cpp20_rwc_syncs.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Ffail%2Fshould-pass%2Fcpp20_rwc_syncs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Ffail%2Fshould-pass%2Fcpp20_rwc_syncs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fshould-pass%2Fcpp20_rwc_syncs.rs?ref=11a8b3a00b72505751743230bf265c9eecfd58db", "patch": "@@ -1,6 +1,6 @@\n // ignore-windows: Concurrency on Windows is not supported yet.\n // compile-flags: -Zmiri-ignore-leaks\n-// error-pattern:\n+// error-pattern: unreachable\n \n // https://plv.mpi-sws.org/scfix/paper.pdf\n // 2.2 Second Problem: SC Fences are Too Weak\n@@ -76,7 +76,7 @@ fn test_cpp20_rwc_syncs() {\n     // Our ui_test does not yet support overriding failure status codes.\n     if (b, c) == (0, 0) {\n         // This *should* be unreachable, but Miri will reach it.\n-        std::process::exit(1);\n+        unsafe { std::hint::unreachable_unchecked(); }\n     }\n }\n "}, {"sha": "9aec82d3336540670318efae799d28d2a1c2a25e", "filename": "tests/fail/should-pass/cpp20_rwc_syncs.stderr", "status": "modified", "additions": 24, "deletions": 2, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Ffail%2Fshould-pass%2Fcpp20_rwc_syncs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Ffail%2Fshould-pass%2Fcpp20_rwc_syncs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fshould-pass%2Fcpp20_rwc_syncs.stderr?ref=11a8b3a00b72505751743230bf265c9eecfd58db", "patch": "@@ -1,3 +1,25 @@\n-warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n-         (see https://github.com/rust-lang/miri/issues/1388)\n+error: Undefined Behavior: entering unreachable code\n+  --> RUSTLIB/core/src/hint.rs:LL:CC\n+   |\n+LL |     unsafe { intrinsics::unreachable() }\n+   |              ^^^^^^^^^^^^^^^^^^^^^^^^^ entering unreachable code\n+   |\n+   = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n+   = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n+           \n+   = note: inside `std::hint::unreachable_unchecked` at RUSTLIB/core/src/hint.rs:LL:CC\n+note: inside `test_cpp20_rwc_syncs` at $DIR/cpp20_rwc_syncs.rs:LL:CC\n+  --> $DIR/cpp20_rwc_syncs.rs:LL:CC\n+   |\n+LL |         unsafe { std::hint::unreachable_unchecked(); }\n+   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+note: inside `main` at $DIR/cpp20_rwc_syncs.rs:LL:CC\n+  --> $DIR/cpp20_rwc_syncs.rs:LL:CC\n+   |\n+LL |         test_cpp20_rwc_syncs();\n+   |         ^^^^^^^^^^^^^^^^^^^^^^\n+\n+note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n+\n+error: aborting due to previous error\n "}, {"sha": "599655a8692b1b334fa92b1fca60eb257ecba496", "filename": "tests/fail/sync/libc_pthread_mutex_deadlock.stderr", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Ffail%2Fsync%2Flibc_pthread_mutex_deadlock.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Ffail%2Fsync%2Flibc_pthread_mutex_deadlock.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fsync%2Flibc_pthread_mutex_deadlock.stderr?ref=11a8b3a00b72505751743230bf265c9eecfd58db", "patch": "@@ -1,6 +1,3 @@\n-warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n-         (see https://github.com/rust-lang/miri/issues/1388)\n-\n error: deadlock: the evaluated program deadlocked\n   --> $DIR/libc_pthread_mutex_deadlock.rs:LL:CC\n    |\n@@ -11,5 +8,5 @@ LL |             assert_eq!(libc::pthread_mutex_lock(lock_copy.0.get() as *mut _\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n \n-error: aborting due to previous error; 1 warning emitted\n+error: aborting due to previous error\n "}, {"sha": "86d02c22819e888e6cd19dc7509f211c6bb8a6f2", "filename": "tests/fail/sync/libc_pthread_mutex_wrong_owner.stderr", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Ffail%2Fsync%2Flibc_pthread_mutex_wrong_owner.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Ffail%2Fsync%2Flibc_pthread_mutex_wrong_owner.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fsync%2Flibc_pthread_mutex_wrong_owner.stderr?ref=11a8b3a00b72505751743230bf265c9eecfd58db", "patch": "@@ -1,6 +1,3 @@\n-warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n-         (see https://github.com/rust-lang/miri/issues/1388)\n-\n error: Undefined Behavior: unlocked a default mutex that was not locked by the current thread\n   --> $DIR/libc_pthread_mutex_wrong_owner.rs:LL:CC\n    |\n@@ -14,5 +11,5 @@ LL | ...t_eq!(libc::pthread_mutex_unlock(lock_copy.0.get() as *mut _), 0);\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n \n-error: aborting due to previous error; 1 warning emitted\n+error: aborting due to previous error\n "}, {"sha": "c7c8823eaa3712db5ac5493a9067891781ed011c", "filename": "tests/fail/sync/libc_pthread_rwlock_read_wrong_owner.stderr", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Ffail%2Fsync%2Flibc_pthread_rwlock_read_wrong_owner.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Ffail%2Fsync%2Flibc_pthread_rwlock_read_wrong_owner.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fsync%2Flibc_pthread_rwlock_read_wrong_owner.stderr?ref=11a8b3a00b72505751743230bf265c9eecfd58db", "patch": "@@ -1,6 +1,3 @@\n-warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n-         (see https://github.com/rust-lang/miri/issues/1388)\n-\n error: Undefined Behavior: unlocked an rwlock that was not locked by the active thread\n   --> $DIR/libc_pthread_rwlock_read_wrong_owner.rs:LL:CC\n    |\n@@ -14,5 +11,5 @@ LL | ...   assert_eq!(libc::pthread_rwlock_unlock(lock_copy.0.get() as *mut _),\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n \n-error: aborting due to previous error; 1 warning emitted\n+error: aborting due to previous error\n "}, {"sha": "333fb1afb91b7a6bf7ae5e32ab7c90193ef82b24", "filename": "tests/fail/sync/libc_pthread_rwlock_write_read_deadlock.stderr", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Ffail%2Fsync%2Flibc_pthread_rwlock_write_read_deadlock.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Ffail%2Fsync%2Flibc_pthread_rwlock_write_read_deadlock.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fsync%2Flibc_pthread_rwlock_write_read_deadlock.stderr?ref=11a8b3a00b72505751743230bf265c9eecfd58db", "patch": "@@ -1,6 +1,3 @@\n-warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n-         (see https://github.com/rust-lang/miri/issues/1388)\n-\n error: deadlock: the evaluated program deadlocked\n   --> $DIR/libc_pthread_rwlock_write_read_deadlock.rs:LL:CC\n    |\n@@ -11,5 +8,5 @@ LL |             assert_eq!(libc::pthread_rwlock_wrlock(lock_copy.0.get() as *mu\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n \n-error: aborting due to previous error; 1 warning emitted\n+error: aborting due to previous error\n "}, {"sha": "93bede54fcf1838df52a48f154bdeccba268e2b7", "filename": "tests/fail/sync/libc_pthread_rwlock_write_write_deadlock.stderr", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Ffail%2Fsync%2Flibc_pthread_rwlock_write_write_deadlock.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Ffail%2Fsync%2Flibc_pthread_rwlock_write_write_deadlock.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fsync%2Flibc_pthread_rwlock_write_write_deadlock.stderr?ref=11a8b3a00b72505751743230bf265c9eecfd58db", "patch": "@@ -1,6 +1,3 @@\n-warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n-         (see https://github.com/rust-lang/miri/issues/1388)\n-\n error: deadlock: the evaluated program deadlocked\n   --> $DIR/libc_pthread_rwlock_write_write_deadlock.rs:LL:CC\n    |\n@@ -11,5 +8,5 @@ LL |             assert_eq!(libc::pthread_rwlock_wrlock(lock_copy.0.get() as *mu\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n \n-error: aborting due to previous error; 1 warning emitted\n+error: aborting due to previous error\n "}, {"sha": "a7a17ae71b3ad0583907f2ce2d950039f288d60f", "filename": "tests/fail/sync/libc_pthread_rwlock_write_wrong_owner.stderr", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Ffail%2Fsync%2Flibc_pthread_rwlock_write_wrong_owner.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Ffail%2Fsync%2Flibc_pthread_rwlock_write_wrong_owner.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fsync%2Flibc_pthread_rwlock_write_wrong_owner.stderr?ref=11a8b3a00b72505751743230bf265c9eecfd58db", "patch": "@@ -1,6 +1,3 @@\n-warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n-         (see https://github.com/rust-lang/miri/issues/1388)\n-\n error: Undefined Behavior: unlocked an rwlock that was not locked by the active thread\n   --> $DIR/libc_pthread_rwlock_write_wrong_owner.rs:LL:CC\n    |\n@@ -14,5 +11,5 @@ LL | ...   assert_eq!(libc::pthread_rwlock_unlock(lock_copy.0.get() as *mut _),\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n \n-error: aborting due to previous error; 1 warning emitted\n+error: aborting due to previous error\n "}, {"sha": "0fb23be06bb783e18aeefee8e362627e1a34612b", "filename": "tests/fail/weak_memory/racing_mixed_size.stderr", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Ffail%2Fweak_memory%2Fracing_mixed_size.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Ffail%2Fweak_memory%2Fracing_mixed_size.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fweak_memory%2Fracing_mixed_size.stderr?ref=11a8b3a00b72505751743230bf265c9eecfd58db", "patch": "@@ -1,6 +1,3 @@\n-warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n-         (see https://github.com/rust-lang/miri/issues/1388)\n-\n error: unsupported operation: racy imperfectly overlapping atomic access is not possible in the C++20 memory model, and not supported by Miri's weak memory emulation\n   --> $DIR/racing_mixed_size.rs:LL:CC\n    |\n@@ -13,5 +10,5 @@ LL |             std::intrinsics::atomic_load_relaxed(hi);\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n \n-error: aborting due to previous error; 1 warning emitted\n+error: aborting due to previous error\n "}, {"sha": "6de185161084bfa439cd6290b1ae5af01c67ee53", "filename": "tests/fail/weak_memory/racing_mixed_size_read.stderr", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Ffail%2Fweak_memory%2Fracing_mixed_size_read.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Ffail%2Fweak_memory%2Fracing_mixed_size_read.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fweak_memory%2Fracing_mixed_size_read.stderr?ref=11a8b3a00b72505751743230bf265c9eecfd58db", "patch": "@@ -1,6 +1,3 @@\n-warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n-         (see https://github.com/rust-lang/miri/issues/1388)\n-\n error: unsupported operation: racy imperfectly overlapping atomic access is not possible in the C++20 memory model, and not supported by Miri's weak memory emulation\n   --> $DIR/racing_mixed_size_read.rs:LL:CC\n    |\n@@ -13,5 +10,5 @@ LL |             std::intrinsics::atomic_load_relaxed(hi);\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n \n-error: aborting due to previous error; 1 warning emitted\n+error: aborting due to previous error\n "}, {"sha": "9fe6daa778c1fc66489c84ab4c37b05f227b1e52", "filename": "tests/pass/concurrency/channels.stderr", "status": "removed", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/bf372a8fbc838e89234adba0339d5f2d1ea5f561/tests%2Fpass%2Fconcurrency%2Fchannels.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bf372a8fbc838e89234adba0339d5f2d1ea5f561/tests%2Fpass%2Fconcurrency%2Fchannels.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fpass%2Fconcurrency%2Fchannels.stderr?ref=bf372a8fbc838e89234adba0339d5f2d1ea5f561", "patch": "@@ -1,3 +0,0 @@\n-warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n-         (see https://github.com/rust-lang/miri/issues/1388)\n-"}, {"sha": "9fe6daa778c1fc66489c84ab4c37b05f227b1e52", "filename": "tests/pass/concurrency/concurrent_caller_location.stderr", "status": "removed", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/bf372a8fbc838e89234adba0339d5f2d1ea5f561/tests%2Fpass%2Fconcurrency%2Fconcurrent_caller_location.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bf372a8fbc838e89234adba0339d5f2d1ea5f561/tests%2Fpass%2Fconcurrency%2Fconcurrent_caller_location.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fpass%2Fconcurrency%2Fconcurrent_caller_location.stderr?ref=bf372a8fbc838e89234adba0339d5f2d1ea5f561", "patch": "@@ -1,3 +0,0 @@\n-warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n-         (see https://github.com/rust-lang/miri/issues/1388)\n-"}, {"sha": "9fe6daa778c1fc66489c84ab4c37b05f227b1e52", "filename": "tests/pass/concurrency/data_race.stderr", "status": "removed", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/bf372a8fbc838e89234adba0339d5f2d1ea5f561/tests%2Fpass%2Fconcurrency%2Fdata_race.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bf372a8fbc838e89234adba0339d5f2d1ea5f561/tests%2Fpass%2Fconcurrency%2Fdata_race.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fpass%2Fconcurrency%2Fdata_race.stderr?ref=bf372a8fbc838e89234adba0339d5f2d1ea5f561", "patch": "@@ -1,3 +0,0 @@\n-warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n-         (see https://github.com/rust-lang/miri/issues/1388)\n-"}, {"sha": "9fe6daa778c1fc66489c84ab4c37b05f227b1e52", "filename": "tests/pass/concurrency/disable_data_race_detector.stderr", "status": "removed", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/bf372a8fbc838e89234adba0339d5f2d1ea5f561/tests%2Fpass%2Fconcurrency%2Fdisable_data_race_detector.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bf372a8fbc838e89234adba0339d5f2d1ea5f561/tests%2Fpass%2Fconcurrency%2Fdisable_data_race_detector.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fpass%2Fconcurrency%2Fdisable_data_race_detector.stderr?ref=bf372a8fbc838e89234adba0339d5f2d1ea5f561", "patch": "@@ -1,3 +0,0 @@\n-warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n-         (see https://github.com/rust-lang/miri/issues/1388)\n-"}, {"sha": "9fe6daa778c1fc66489c84ab4c37b05f227b1e52", "filename": "tests/pass/concurrency/issue1643.stderr", "status": "removed", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/bf372a8fbc838e89234adba0339d5f2d1ea5f561/tests%2Fpass%2Fconcurrency%2Fissue1643.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bf372a8fbc838e89234adba0339d5f2d1ea5f561/tests%2Fpass%2Fconcurrency%2Fissue1643.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fpass%2Fconcurrency%2Fissue1643.stderr?ref=bf372a8fbc838e89234adba0339d5f2d1ea5f561", "patch": "@@ -1,3 +0,0 @@\n-warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n-         (see https://github.com/rust-lang/miri/issues/1388)\n-"}, {"sha": "9fe6daa778c1fc66489c84ab4c37b05f227b1e52", "filename": "tests/pass/concurrency/linux-futex.stderr", "status": "removed", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/bf372a8fbc838e89234adba0339d5f2d1ea5f561/tests%2Fpass%2Fconcurrency%2Flinux-futex.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bf372a8fbc838e89234adba0339d5f2d1ea5f561/tests%2Fpass%2Fconcurrency%2Flinux-futex.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fpass%2Fconcurrency%2Flinux-futex.stderr?ref=bf372a8fbc838e89234adba0339d5f2d1ea5f561", "patch": "@@ -1,3 +0,0 @@\n-warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n-         (see https://github.com/rust-lang/miri/issues/1388)\n-"}, {"sha": "028cc0fb736ff23700b9fb74387a2a2577ffc74f", "filename": "tests/pass/concurrency/simple.stderr", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Fpass%2Fconcurrency%2Fsimple.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Fpass%2Fconcurrency%2Fsimple.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fpass%2Fconcurrency%2Fsimple.stderr?ref=11a8b3a00b72505751743230bf265c9eecfd58db", "patch": "@@ -1,6 +1,3 @@\n-warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n-         (see https://github.com/rust-lang/miri/issues/1388)\n-\n thread '<unnamed>' panicked at 'Hello!', $DIR/simple.rs:LL:CC\n note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n thread 'childthread' panicked at 'Hello, world!', $DIR/simple.rs:LL:CC"}, {"sha": "9fe6daa778c1fc66489c84ab4c37b05f227b1e52", "filename": "tests/pass/concurrency/spin_loop.stderr", "status": "removed", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/bf372a8fbc838e89234adba0339d5f2d1ea5f561/tests%2Fpass%2Fconcurrency%2Fspin_loop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bf372a8fbc838e89234adba0339d5f2d1ea5f561/tests%2Fpass%2Fconcurrency%2Fspin_loop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fpass%2Fconcurrency%2Fspin_loop.stderr?ref=bf372a8fbc838e89234adba0339d5f2d1ea5f561", "patch": "@@ -1,3 +0,0 @@\n-warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n-         (see https://github.com/rust-lang/miri/issues/1388)\n-"}, {"sha": "9fe6daa778c1fc66489c84ab4c37b05f227b1e52", "filename": "tests/pass/concurrency/spin_loops_nopreempt.stderr", "status": "removed", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/bf372a8fbc838e89234adba0339d5f2d1ea5f561/tests%2Fpass%2Fconcurrency%2Fspin_loops_nopreempt.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bf372a8fbc838e89234adba0339d5f2d1ea5f561/tests%2Fpass%2Fconcurrency%2Fspin_loops_nopreempt.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fpass%2Fconcurrency%2Fspin_loops_nopreempt.stderr?ref=bf372a8fbc838e89234adba0339d5f2d1ea5f561", "patch": "@@ -1,3 +0,0 @@\n-warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n-         (see https://github.com/rust-lang/miri/issues/1388)\n-"}, {"sha": "9fe6daa778c1fc66489c84ab4c37b05f227b1e52", "filename": "tests/pass/concurrency/sync.stderr", "status": "removed", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/bf372a8fbc838e89234adba0339d5f2d1ea5f561/tests%2Fpass%2Fconcurrency%2Fsync.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bf372a8fbc838e89234adba0339d5f2d1ea5f561/tests%2Fpass%2Fconcurrency%2Fsync.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fpass%2Fconcurrency%2Fsync.stderr?ref=bf372a8fbc838e89234adba0339d5f2d1ea5f561", "patch": "@@ -1,3 +0,0 @@\n-warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n-         (see https://github.com/rust-lang/miri/issues/1388)\n-"}, {"sha": "9fe6daa778c1fc66489c84ab4c37b05f227b1e52", "filename": "tests/pass/concurrency/thread_locals.stderr", "status": "removed", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/bf372a8fbc838e89234adba0339d5f2d1ea5f561/tests%2Fpass%2Fconcurrency%2Fthread_locals.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bf372a8fbc838e89234adba0339d5f2d1ea5f561/tests%2Fpass%2Fconcurrency%2Fthread_locals.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fpass%2Fconcurrency%2Fthread_locals.stderr?ref=bf372a8fbc838e89234adba0339d5f2d1ea5f561", "patch": "@@ -1,3 +0,0 @@\n-warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n-         (see https://github.com/rust-lang/miri/issues/1388)\n-"}, {"sha": "9fe6daa778c1fc66489c84ab4c37b05f227b1e52", "filename": "tests/pass/concurrency/tls_lib_drop.stderr", "status": "removed", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/bf372a8fbc838e89234adba0339d5f2d1ea5f561/tests%2Fpass%2Fconcurrency%2Ftls_lib_drop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bf372a8fbc838e89234adba0339d5f2d1ea5f561/tests%2Fpass%2Fconcurrency%2Ftls_lib_drop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fpass%2Fconcurrency%2Ftls_lib_drop.stderr?ref=bf372a8fbc838e89234adba0339d5f2d1ea5f561", "patch": "@@ -1,3 +0,0 @@\n-warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n-         (see https://github.com/rust-lang/miri/issues/1388)\n-"}, {"sha": "9fe6daa778c1fc66489c84ab4c37b05f227b1e52", "filename": "tests/pass/libc.stderr", "status": "removed", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/bf372a8fbc838e89234adba0339d5f2d1ea5f561/tests%2Fpass%2Flibc.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bf372a8fbc838e89234adba0339d5f2d1ea5f561/tests%2Fpass%2Flibc.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fpass%2Flibc.stderr?ref=bf372a8fbc838e89234adba0339d5f2d1ea5f561", "patch": "@@ -1,3 +0,0 @@\n-warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n-         (see https://github.com/rust-lang/miri/issues/1388)\n-"}, {"sha": "fd8fabc89cccf04ce76e7ce0aef295393ab1e96d", "filename": "tests/pass/panic/concurrent-panic.stderr", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Fpass%2Fpanic%2Fconcurrent-panic.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Fpass%2Fpanic%2Fconcurrent-panic.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fpass%2Fpanic%2Fconcurrent-panic.stderr?ref=11a8b3a00b72505751743230bf265c9eecfd58db", "patch": "@@ -1,6 +1,3 @@\n-warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n-         (see https://github.com/rust-lang/miri/issues/1388)\n-\n Thread 1 starting, will block on mutex\n Thread 1 reported it has started\n thread '<unnamed>' panicked at 'panic in thread 2', $DIR/concurrent-panic.rs:LL:CC"}, {"sha": "7557f49c7584b93e56e57c3fbf20be12f7b96748", "filename": "tests/pass/threadleak_ignored.stderr", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Fpass%2Fthreadleak_ignored.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/11a8b3a00b72505751743230bf265c9eecfd58db/tests%2Fpass%2Fthreadleak_ignored.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fpass%2Fthreadleak_ignored.stderr?ref=11a8b3a00b72505751743230bf265c9eecfd58db", "patch": "@@ -1,4 +1 @@\n-warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n-         (see https://github.com/rust-lang/miri/issues/1388)\n-\n Dropping 0"}, {"sha": "9fe6daa778c1fc66489c84ab4c37b05f227b1e52", "filename": "tests/pass/weak_memory/consistency.stderr", "status": "removed", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/bf372a8fbc838e89234adba0339d5f2d1ea5f561/tests%2Fpass%2Fweak_memory%2Fconsistency.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bf372a8fbc838e89234adba0339d5f2d1ea5f561/tests%2Fpass%2Fweak_memory%2Fconsistency.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fpass%2Fweak_memory%2Fconsistency.stderr?ref=bf372a8fbc838e89234adba0339d5f2d1ea5f561", "patch": "@@ -1,3 +0,0 @@\n-warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n-         (see https://github.com/rust-lang/miri/issues/1388)\n-"}, {"sha": "9fe6daa778c1fc66489c84ab4c37b05f227b1e52", "filename": "tests/pass/weak_memory/extra_cpp.stderr", "status": "removed", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/bf372a8fbc838e89234adba0339d5f2d1ea5f561/tests%2Fpass%2Fweak_memory%2Fextra_cpp.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bf372a8fbc838e89234adba0339d5f2d1ea5f561/tests%2Fpass%2Fweak_memory%2Fextra_cpp.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fpass%2Fweak_memory%2Fextra_cpp.stderr?ref=bf372a8fbc838e89234adba0339d5f2d1ea5f561", "patch": "@@ -1,3 +0,0 @@\n-warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n-         (see https://github.com/rust-lang/miri/issues/1388)\n-"}, {"sha": "9fe6daa778c1fc66489c84ab4c37b05f227b1e52", "filename": "tests/pass/weak_memory/extra_cpp_unsafe.stderr", "status": "removed", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/bf372a8fbc838e89234adba0339d5f2d1ea5f561/tests%2Fpass%2Fweak_memory%2Fextra_cpp_unsafe.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bf372a8fbc838e89234adba0339d5f2d1ea5f561/tests%2Fpass%2Fweak_memory%2Fextra_cpp_unsafe.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fpass%2Fweak_memory%2Fextra_cpp_unsafe.stderr?ref=bf372a8fbc838e89234adba0339d5f2d1ea5f561", "patch": "@@ -1,3 +0,0 @@\n-warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n-         (see https://github.com/rust-lang/miri/issues/1388)\n-"}, {"sha": "9fe6daa778c1fc66489c84ab4c37b05f227b1e52", "filename": "tests/pass/weak_memory/weak.stderr", "status": "removed", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/bf372a8fbc838e89234adba0339d5f2d1ea5f561/tests%2Fpass%2Fweak_memory%2Fweak.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bf372a8fbc838e89234adba0339d5f2d1ea5f561/tests%2Fpass%2Fweak_memory%2Fweak.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fpass%2Fweak_memory%2Fweak.stderr?ref=bf372a8fbc838e89234adba0339d5f2d1ea5f561", "patch": "@@ -1,3 +0,0 @@\n-warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n-         (see https://github.com/rust-lang/miri/issues/1388)\n-"}]}