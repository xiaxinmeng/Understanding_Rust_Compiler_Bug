{"sha": "4532dd9e431e3df719941514ef2a3dbce7fff962", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ1MzJkZDllNDMxZTNkZjcxOTk0MTUxNGVmMmEzZGJjZTdmZmY5NjI=", "commit": {"author": {"name": "Urcra", "email": "urcra@urcra.com", "date": "2020-10-26T00:31:13Z"}, "committer": {"name": "Urcra", "email": "urcra@urcra.com", "date": "2020-10-26T00:31:13Z"}, "message": "run cargo fmt", "tree": {"sha": "08ae88919ec19e2ffa2435ed22fdb79841d4c55d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/08ae88919ec19e2ffa2435ed22fdb79841d4c55d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4532dd9e431e3df719941514ef2a3dbce7fff962", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4532dd9e431e3df719941514ef2a3dbce7fff962", "html_url": "https://github.com/rust-lang/rust/commit/4532dd9e431e3df719941514ef2a3dbce7fff962", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4532dd9e431e3df719941514ef2a3dbce7fff962/comments", "author": {"login": "Urcra", "id": 9095312, "node_id": "MDQ6VXNlcjkwOTUzMTI=", "avatar_url": "https://avatars.githubusercontent.com/u/9095312?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Urcra", "html_url": "https://github.com/Urcra", "followers_url": "https://api.github.com/users/Urcra/followers", "following_url": "https://api.github.com/users/Urcra/following{/other_user}", "gists_url": "https://api.github.com/users/Urcra/gists{/gist_id}", "starred_url": "https://api.github.com/users/Urcra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Urcra/subscriptions", "organizations_url": "https://api.github.com/users/Urcra/orgs", "repos_url": "https://api.github.com/users/Urcra/repos", "events_url": "https://api.github.com/users/Urcra/events{/privacy}", "received_events_url": "https://api.github.com/users/Urcra/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Urcra", "id": 9095312, "node_id": "MDQ6VXNlcjkwOTUzMTI=", "avatar_url": "https://avatars.githubusercontent.com/u/9095312?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Urcra", "html_url": "https://github.com/Urcra", "followers_url": "https://api.github.com/users/Urcra/followers", "following_url": "https://api.github.com/users/Urcra/following{/other_user}", "gists_url": "https://api.github.com/users/Urcra/gists{/gist_id}", "starred_url": "https://api.github.com/users/Urcra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Urcra/subscriptions", "organizations_url": "https://api.github.com/users/Urcra/orgs", "repos_url": "https://api.github.com/users/Urcra/repos", "events_url": "https://api.github.com/users/Urcra/events{/privacy}", "received_events_url": "https://api.github.com/users/Urcra/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4cf5b5ff7018abc91d0d0a81c73b3405228811a9", "url": "https://api.github.com/repos/rust-lang/rust/commits/4cf5b5ff7018abc91d0d0a81c73b3405228811a9", "html_url": "https://github.com/rust-lang/rust/commit/4cf5b5ff7018abc91d0d0a81c73b3405228811a9"}], "stats": {"total": 9, "additions": 1, "deletions": 8}, "files": [{"sha": "542b4afcdf977941fd767a487e4918bca074c0b7", "filename": "clippy_lints/src/len_zero.rs", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/4532dd9e431e3df719941514ef2a3dbce7fff962/clippy_lints%2Fsrc%2Flen_zero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4532dd9e431e3df719941514ef2a3dbce7fff962/clippy_lints%2Fsrc%2Flen_zero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flen_zero.rs?ref=4532dd9e431e3df719941514ef2a3dbce7fff962", "patch": "@@ -105,7 +105,6 @@ declare_clippy_lint! {\n     \"checking `x == \\\"\\\"` or `x == []` (or similar) when `.is_empty()` could be used instead\"\n }\n \n-\n declare_lint_pass!(LenZero => [LEN_ZERO, LEN_WITHOUT_IS_EMPTY, COMPARISON_TO_EMPTY]);\n \n impl<'tcx> LateLintPass<'tcx> for LenZero {\n@@ -298,13 +297,7 @@ fn check_len(\n     }\n }\n \n-fn check_empty_expr(\n-    cx: &LateContext<'_>,\n-    span: Span,\n-    lit1: &Expr<'_>,\n-    lit2: &Expr<'_>,\n-    op: &str\n-) {\n+fn check_empty_expr(cx: &LateContext<'_>, span: Span, lit1: &Expr<'_>, lit2: &Expr<'_>, op: &str) {\n     if (is_empty_array(lit2) || is_empty_string(lit2)) && has_is_empty(cx, lit1) {\n         let mut applicability = Applicability::MachineApplicable;\n         span_lint_and_sugg("}]}