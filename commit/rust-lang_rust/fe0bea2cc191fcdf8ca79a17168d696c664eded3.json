{"sha": "fe0bea2cc191fcdf8ca79a17168d696c664eded3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZlMGJlYTJjYzE5MWZjZGY4Y2E3OWExNzE2OGQ2OTZjNjY0ZWRlZDM=", "commit": {"author": {"name": "William Woodruff", "email": "william@yossarian.net", "date": "2020-11-24T18:46:51Z"}, "committer": {"name": "William Woodruff", "email": "william@yossarian.net", "date": "2020-11-24T18:46:51Z"}, "message": "ext/ucred: Support PID in peer creds on macOS", "tree": {"sha": "db0562ed297e76df9e2e8bab5b4df470a84f95b4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/db0562ed297e76df9e2e8bab5b4df470a84f95b4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fe0bea2cc191fcdf8ca79a17168d696c664eded3", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEkOgaiEpmzctQWwiUYA1oMgvkWswFAl+9VfkACgkQYA1oMgvk\nWswl6w//cp5EcXd+AiDU84S6d31/ziljX2iZwX+3g1mcV7POSIe6tAwii5BR4pTU\nd0uPGseGYpuHA8KsKh09fHuCjjypSwJC7mjK9Ce7g5F4Eboj+S+0Ta+IMoqm2aNF\nuxREaqM5QJRvRTOQb1eBZgT5N/qTmlBpDWfd0EMgQhKDg6P/+eBsefQuFBGGFX7D\nPOglQv+OMd1mVl3wltf0GM++vO9wNNY+ajiqx4gzZ0KG40M6EZRTAsB6MthBz4ps\n95TkdpuTb5a7fbQhjpvVvWhpJQIWXusS0w5FwyaX/OVtuoVFYUyTaTM6dTzTjBrp\ndrARteref20q5BQk7mTWsZ4GXkDNjP+KVOI5IGZINVy1oyRdtCPPry6WXOrQHB+x\nJ6oEizdCMOivVH9015dedMiWOHKLm60W+fHb5sYrqR2p6ykoi1bT+ILVGiPCNIa5\nLtWMaHkx2rVEQCVZtoKkgTjisLWN3ROgqb070zgRQY6VacHpS5J1jUfbU3vWQHBC\n1lKoW+Q5NWomOv73NQxKpnBTwKt5CKW4LZ0sUaz2I1GT1qOgwDtvxJn9YtFQRmr2\nhl5uey8ipFmRPl0j9yWMEcTgOUSGurwG/e7Rnbxj6WpxLY0cHxM7OGBqQXwRx8re\nWbgid4v/z7cxiHJ5tq/cse/2SD8AipJAce7KYRe9ojPzn84JB2Y=\n=AoH0\n-----END PGP SIGNATURE-----", "payload": "tree db0562ed297e76df9e2e8bab5b4df470a84f95b4\nparent 53d19b37c514246acab020eaba9527cb97c421cf\nauthor William Woodruff <william@yossarian.net> 1606243611 -0500\ncommitter William Woodruff <william@yossarian.net> 1606243611 -0500\n\next/ucred: Support PID in peer creds on macOS\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fe0bea2cc191fcdf8ca79a17168d696c664eded3", "html_url": "https://github.com/rust-lang/rust/commit/fe0bea2cc191fcdf8ca79a17168d696c664eded3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fe0bea2cc191fcdf8ca79a17168d696c664eded3/comments", "author": {"login": "woodruffw", "id": 3059210, "node_id": "MDQ6VXNlcjMwNTkyMTA=", "avatar_url": "https://avatars.githubusercontent.com/u/3059210?v=4", "gravatar_id": "", "url": "https://api.github.com/users/woodruffw", "html_url": "https://github.com/woodruffw", "followers_url": "https://api.github.com/users/woodruffw/followers", "following_url": "https://api.github.com/users/woodruffw/following{/other_user}", "gists_url": "https://api.github.com/users/woodruffw/gists{/gist_id}", "starred_url": "https://api.github.com/users/woodruffw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/woodruffw/subscriptions", "organizations_url": "https://api.github.com/users/woodruffw/orgs", "repos_url": "https://api.github.com/users/woodruffw/repos", "events_url": "https://api.github.com/users/woodruffw/events{/privacy}", "received_events_url": "https://api.github.com/users/woodruffw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "woodruffw", "id": 3059210, "node_id": "MDQ6VXNlcjMwNTkyMTA=", "avatar_url": "https://avatars.githubusercontent.com/u/3059210?v=4", "gravatar_id": "", "url": "https://api.github.com/users/woodruffw", "html_url": "https://github.com/woodruffw", "followers_url": "https://api.github.com/users/woodruffw/followers", "following_url": "https://api.github.com/users/woodruffw/following{/other_user}", "gists_url": "https://api.github.com/users/woodruffw/gists{/gist_id}", "starred_url": "https://api.github.com/users/woodruffw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/woodruffw/subscriptions", "organizations_url": "https://api.github.com/users/woodruffw/orgs", "repos_url": "https://api.github.com/users/woodruffw/repos", "events_url": "https://api.github.com/users/woodruffw/events{/privacy}", "received_events_url": "https://api.github.com/users/woodruffw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "53d19b37c514246acab020eaba9527cb97c421cf", "url": "https://api.github.com/repos/rust-lang/rust/commits/53d19b37c514246acab020eaba9527cb97c421cf", "html_url": "https://github.com/rust-lang/rust/commit/53d19b37c514246acab020eaba9527cb97c421cf"}], "stats": {"total": 70, "additions": 65, "deletions": 5}, "files": [{"sha": "e2aeb39f995a01ec229c1b698cf0dbe0970c6b9d", "filename": "library/std/src/sys/unix/ext/ucred.rs", "status": "modified", "additions": 47, "deletions": 4, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/fe0bea2cc191fcdf8ca79a17168d696c664eded3/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fext%2Fucred.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe0bea2cc191fcdf8ca79a17168d696c664eded3/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fext%2Fucred.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fext%2Fucred.rs?ref=fe0bea2cc191fcdf8ca79a17168d696c664eded3", "patch": "@@ -31,12 +31,16 @@ pub use self::impl_linux::peer_cred;\n #[cfg(any(\n     target_os = \"dragonfly\",\n     target_os = \"freebsd\",\n-    target_os = \"ios\",\n-    target_os = \"macos\",\n     target_os = \"openbsd\"\n ))]\n pub use self::impl_bsd::peer_cred;\n \n+#[cfg(any(\n+    target_os = \"macos\",\n+    target_os = \"ios\",\n+))]\n+pub use self::impl_mac::peer_cred;\n+\n #[cfg(any(target_os = \"linux\", target_os = \"android\"))]\n pub mod impl_linux {\n     use super::UCred;\n@@ -75,8 +79,6 @@ pub mod impl_linux {\n \n #[cfg(any(\n     target_os = \"dragonfly\",\n-    target_os = \"macos\",\n-    target_os = \"ios\",\n     target_os = \"freebsd\",\n     target_os = \"openbsd\"\n ))]\n@@ -95,3 +97,44 @@ pub mod impl_bsd {\n         }\n     }\n }\n+\n+#[cfg(any(\n+    target_os = \"macos\",\n+    target_os = \"ios\",\n+))]\n+pub mod impl_mac {\n+    use super::UCred;\n+    use crate::{io, mem};\n+    use crate::os::unix::io::AsRawFd;\n+    use crate::os::unix::net::UnixStream;\n+    use libc::{c_void, getpeereid, getsockopt, pid_t, socklen_t, SOL_LOCAL, LOCAL_PEERPID};\n+\n+    pub fn peer_cred(socket: &UnixStream) -> io::Result<UCred> {\n+        let mut cred = UCred { uid: 1, gid: 1, pid: None };\n+        unsafe {\n+            let ret = getpeereid(socket.as_raw_fd(), &mut cred.uid, &mut cred.gid);\n+\n+            if ret != 0 {\n+                return Err(io::Error::last_os_error());\n+            }\n+\n+            let mut pid: pid_t = 1;\n+            let mut pid_size = mem::size_of::<pid_t>() as socklen_t;\n+\n+            let ret = getsockopt(\n+                socket.as_raw_fd(),\n+                SOL_LOCAL,\n+                LOCAL_PEERPID,\n+                &mut pid as *mut pid_t as *mut c_void,\n+                &mut pid_size\n+            );\n+\n+            if ret == 0 && pid_size as usize == mem::size_of::<pid_t>() {\n+                cred.pid = Some(pid);\n+                Ok(cred)\n+            } else {\n+                Err(io::Error::last_os_error())\n+            }\n+        }\n+    }\n+}"}, {"sha": "b3e45d3337c8aebd07cf9c5fe1f10d7e03de971a", "filename": "library/std/src/sys/unix/ext/ucred/tests.rs", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/fe0bea2cc191fcdf8ca79a17168d696c664eded3/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fext%2Fucred%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe0bea2cc191fcdf8ca79a17168d696c664eded3/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fext%2Fucred%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fext%2Fucred%2Ftests.rs?ref=fe0bea2cc191fcdf8ca79a17168d696c664eded3", "patch": "@@ -1,5 +1,5 @@\n use crate::os::unix::net::UnixStream;\n-use libc::{getegid, geteuid};\n+use libc::{getegid, geteuid, getpid};\n \n #[test]\n #[cfg(any(\n@@ -23,3 +23,20 @@ fn test_socket_pair() {\n     assert_eq!(cred_a.uid, uid);\n     assert_eq!(cred_a.gid, gid);\n }\n+\n+#[test]\n+#[cfg(any(\n+    target_os = \"linux\",\n+    target_os = \"ios\",\n+    target_os = \"macos\",\n+))]\n+fn test_socket_pair_pids(arg: Type) -> RetType {\n+    // Create two connected sockets and get their peer credentials.\n+    let (sock_a, sock_b) = UnixStream::pair().unwrap();\n+    let (cred_a, cred_b) = (sock_a.peer_cred().unwrap(), sock_b.peer_cred().unwrap());\n+\n+    // On supported platforms (see the cfg above), the credentials should always include the PID.\n+    let pid = unsafe { getpid() };\n+    assert_eq!(cred_a.pid, Some(pid));\n+    assert_eq!(cred_b.pid, Some(pid));\n+}"}]}