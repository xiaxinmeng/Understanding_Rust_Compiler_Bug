{"sha": "fd779d3f76240c61104909f237c031ebba9d11df", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZkNzc5ZDNmNzYyNDBjNjExMDQ5MDlmMjM3YzAzMWViYmE5ZDExZGY=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-01-19T08:03:28Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-01-19T08:03:28Z"}, "message": "Rollup merge of #57610 - mark-i-m:nested-matchers, r=petrochenkov\n\nFix nested `?` matchers\n\nfix #57597\n\nI'm not 100% if this works yet...\n\ncc @alercah\n\nWhen  this is ready (but perhaps not yet):", "tree": {"sha": "a23911d334b7277d42cad73a10db9e008a35f0c2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a23911d334b7277d42cad73a10db9e008a35f0c2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fd779d3f76240c61104909f237c031ebba9d11df", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcQtnQCRBK7hj4Ov3rIwAAdHIIAIsh46gLh4fJjQKyTmV5XOom\n2bAX3Qzy/iEzaaITtG9yFe59Jolgi1MTBLagVv3e4tLOgG07Ab+EtxpmcH2vaur6\nBIhov7UeE7PpjQJFdXIRt3GATvqTqsvTJdSkY92KF5ouKjOau0/okN5UR1wYMXf7\nSaU2UKDPLs1AVW+0nyNT1vZJdXyGTzGg2jcwwK/hFnJcwxbtz8CZw47jecfye2Qc\n3YJRGC3jn1Z3a8dxxByac6v149XHieck8PRl6RTr+nrrbV3b3F1MDS0XyUTZIwPV\nRp2iQrs3AlJcQB002W1B8gVMYHzIBFIVOTxJHNuqCa7l9Esd3vkfHyMNcZ1vW5o=\n=nRye\n-----END PGP SIGNATURE-----\n", "payload": "tree a23911d334b7277d42cad73a10db9e008a35f0c2\nparent 64eb69b904513b8f277102e4c802527e718debdc\nparent aa1ce32b105ff506257019a22684a98b61ab166a\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1547885008 +0100\ncommitter GitHub <noreply@github.com> 1547885008 +0100\n\nRollup merge of #57610 - mark-i-m:nested-matchers, r=petrochenkov\n\nFix nested `?` matchers\n\nfix #57597\n\nI'm not 100% if this works yet...\n\ncc @alercah\n\nWhen  this is ready (but perhaps not yet):\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fd779d3f76240c61104909f237c031ebba9d11df", "html_url": "https://github.com/rust-lang/rust/commit/fd779d3f76240c61104909f237c031ebba9d11df", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fd779d3f76240c61104909f237c031ebba9d11df/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "64eb69b904513b8f277102e4c802527e718debdc", "url": "https://api.github.com/repos/rust-lang/rust/commits/64eb69b904513b8f277102e4c802527e718debdc", "html_url": "https://github.com/rust-lang/rust/commit/64eb69b904513b8f277102e4c802527e718debdc"}, {"sha": "aa1ce32b105ff506257019a22684a98b61ab166a", "url": "https://api.github.com/repos/rust-lang/rust/commits/aa1ce32b105ff506257019a22684a98b61ab166a", "html_url": "https://github.com/rust-lang/rust/commit/aa1ce32b105ff506257019a22684a98b61ab166a"}], "stats": {"total": 277, "additions": 253, "deletions": 24}, "files": [{"sha": "9a129e7e8fcd8c7df0efa8bd733c674d79af8f39", "filename": "src/libsyntax/ext/tt/macro_rules.rs", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/fd779d3f76240c61104909f237c031ebba9d11df/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd779d3f76240c61104909f237c031ebba9d11df/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs?ref=fd779d3f76240c61104909f237c031ebba9d11df", "patch": "@@ -435,7 +435,8 @@ fn check_lhs_no_empty_seq(sess: &ParseSess, tts: &[quoted::TokenTree]) -> bool {\n                     match *seq_tt {\n                         TokenTree::MetaVarDecl(_, _, id) => id.name == \"vis\",\n                         TokenTree::Sequence(_, ref sub_seq) =>\n-                            sub_seq.op == quoted::KleeneOp::ZeroOrMore,\n+                            sub_seq.op == quoted::KleeneOp::ZeroOrMore\n+                            || sub_seq.op == quoted::KleeneOp::ZeroOrOne,\n                         _ => false,\n                     }\n                 }) {\n@@ -543,7 +544,10 @@ impl FirstSets {\n                         }\n \n                         // Reverse scan: Sequence comes before `first`.\n-                        if subfirst.maybe_empty || seq_rep.op == quoted::KleeneOp::ZeroOrMore {\n+                        if subfirst.maybe_empty\n+                           || seq_rep.op == quoted::KleeneOp::ZeroOrMore\n+                           || seq_rep.op == quoted::KleeneOp::ZeroOrOne\n+                        {\n                             // If sequence is potentially empty, then\n                             // union them (preserving first emptiness).\n                             first.add_all(&TokenSet { maybe_empty: true, ..subfirst });\n@@ -591,8 +595,10 @@ impl FirstSets {\n \n                             assert!(first.maybe_empty);\n                             first.add_all(subfirst);\n-                            if subfirst.maybe_empty ||\n-                               seq_rep.op == quoted::KleeneOp::ZeroOrMore {\n+                            if subfirst.maybe_empty\n+                               || seq_rep.op == quoted::KleeneOp::ZeroOrMore\n+                               || seq_rep.op == quoted::KleeneOp::ZeroOrOne\n+                            {\n                                 // continue scanning for more first\n                                 // tokens, but also make sure we\n                                 // restore empty-tracking state"}, {"sha": "616fd09907a2be4a2c39ddb2f94b897a51ffe18e", "filename": "src/test/ui/issues/issue-5067.rs", "status": "modified", "additions": 29, "deletions": 8, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/fd779d3f76240c61104909f237c031ebba9d11df/src%2Ftest%2Fui%2Fissues%2Fissue-5067.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd779d3f76240c61104909f237c031ebba9d11df/src%2Ftest%2Fui%2Fissues%2Fissue-5067.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-5067.rs?ref=fd779d3f76240c61104909f237c031ebba9d11df", "patch": "@@ -1,37 +1,59 @@\n #![allow(unused_macros)]\n \n+// Tests that repetition matchers cannot match the empty token tree (since that would be\n+// ambiguous).\n+\n+// edition:2018\n+\n macro_rules! foo {\n     ( $()* ) => {};\n     //~^ ERROR repetition matches empty token tree\n     ( $()+ ) => {};\n     //~^ ERROR repetition matches empty token tree\n-\n+    ( $()? ) => {};\n+    //~^ ERROR repetition matches empty token tree\n     ( $(),* ) => {}; // PASS\n     ( $(),+ ) => {}; // PASS\n-\n+    // `?` cannot have a separator...\n     ( [$()*] ) => {};\n     //~^ ERROR repetition matches empty token tree\n     ( [$()+] ) => {};\n     //~^ ERROR repetition matches empty token tree\n-\n+    ( [$()?] ) => {};\n+    //~^ ERROR repetition matches empty token tree\n     ( [$(),*] ) => {}; // PASS\n     ( [$(),+] ) => {}; // PASS\n-\n+    // `?` cannot have a separator...\n     ( $($()* $(),* $(a)* $(a),* )* ) => {};\n     //~^ ERROR repetition matches empty token tree\n     ( $($()* $(),* $(a)* $(a),* )+ ) => {};\n     //~^ ERROR repetition matches empty token tree\n-\n+    ( $($()* $(),* $(a)* $(a),* )? ) => {};\n+    //~^ ERROR repetition matches empty token tree\n+    ( $($()? $(),* $(a)? $(a),* )* ) => {};\n+    //~^ ERROR repetition matches empty token tree\n+    ( $($()? $(),* $(a)? $(a),* )+ ) => {};\n+    //~^ ERROR repetition matches empty token tree\n+    ( $($()? $(),* $(a)? $(a),* )? ) => {};\n+    //~^ ERROR repetition matches empty token tree\n     ( $(a     $(),* $(a)* $(a),* )* ) => {}; // PASS\n     ( $($(a)+ $(),* $(a)* $(a),* )+ ) => {}; // PASS\n+    ( $($(a)+ $(),* $(a)* $(a),* )? ) => {}; // PASS\n+\n+    ( $(a     $(),* $(a)? $(a),* )* ) => {}; // PASS\n+    ( $($(a)+ $(),* $(a)? $(a),* )+ ) => {}; // PASS\n+    ( $($(a)+ $(),* $(a)? $(a),* )? ) => {}; // PASS\n \n     ( $(a $()+)* ) => {};\n     //~^ ERROR repetition matches empty token tree\n     ( $(a $()*)+ ) => {};\n     //~^ ERROR repetition matches empty token tree\n+    ( $(a $()+)? ) => {};\n+    //~^ ERROR repetition matches empty token tree\n+    ( $(a $()?)+ ) => {};\n+    //~^ ERROR repetition matches empty token tree\n }\n \n-\n // --- Original Issue --- //\n \n macro_rules! make_vec {\n@@ -43,11 +65,10 @@ fn main() {\n     let _ = make_vec![a 1, a 2, a 3];\n }\n \n-\n // --- Minified Issue --- //\n \n macro_rules! m {\n-    ( $()* ) => {}\n+    ( $()* ) => {};\n     //~^ ERROR repetition matches empty token tree\n }\n "}, {"sha": "7ffc6071407c5e6b411993d019512cf95227e9fd", "filename": "src/test/ui/issues/issue-5067.stderr", "status": "modified", "additions": 60, "deletions": 12, "changes": 72, "blob_url": "https://github.com/rust-lang/rust/blob/fd779d3f76240c61104909f237c031ebba9d11df/src%2Ftest%2Fui%2Fissues%2Fissue-5067.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fd779d3f76240c61104909f237c031ebba9d11df/src%2Ftest%2Fui%2Fissues%2Fissue-5067.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-5067.stderr?ref=fd779d3f76240c61104909f237c031ebba9d11df", "patch": "@@ -1,62 +1,110 @@\n error: repetition matches empty token tree\n-  --> $DIR/issue-5067.rs:4:8\n+  --> $DIR/issue-5067.rs:9:8\n    |\n LL |     ( $()* ) => {};\n    |        ^^\n \n error: repetition matches empty token tree\n-  --> $DIR/issue-5067.rs:6:8\n+  --> $DIR/issue-5067.rs:11:8\n    |\n LL |     ( $()+ ) => {};\n    |        ^^\n \n error: repetition matches empty token tree\n-  --> $DIR/issue-5067.rs:12:9\n+  --> $DIR/issue-5067.rs:13:8\n+   |\n+LL |     ( $()? ) => {};\n+   |        ^^\n+\n+error: repetition matches empty token tree\n+  --> $DIR/issue-5067.rs:18:9\n    |\n LL |     ( [$()*] ) => {};\n    |         ^^\n \n error: repetition matches empty token tree\n-  --> $DIR/issue-5067.rs:14:9\n+  --> $DIR/issue-5067.rs:20:9\n    |\n LL |     ( [$()+] ) => {};\n    |         ^^\n \n error: repetition matches empty token tree\n-  --> $DIR/issue-5067.rs:20:8\n+  --> $DIR/issue-5067.rs:22:9\n+   |\n+LL |     ( [$()?] ) => {};\n+   |         ^^\n+\n+error: repetition matches empty token tree\n+  --> $DIR/issue-5067.rs:27:8\n    |\n LL |     ( $($()* $(),* $(a)* $(a),* )* ) => {};\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: repetition matches empty token tree\n-  --> $DIR/issue-5067.rs:22:8\n+  --> $DIR/issue-5067.rs:29:8\n    |\n LL |     ( $($()* $(),* $(a)* $(a),* )+ ) => {};\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: repetition matches empty token tree\n-  --> $DIR/issue-5067.rs:28:12\n+  --> $DIR/issue-5067.rs:31:8\n+   |\n+LL |     ( $($()* $(),* $(a)* $(a),* )? ) => {};\n+   |        ^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: repetition matches empty token tree\n+  --> $DIR/issue-5067.rs:33:8\n+   |\n+LL |     ( $($()? $(),* $(a)? $(a),* )* ) => {};\n+   |        ^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: repetition matches empty token tree\n+  --> $DIR/issue-5067.rs:35:8\n+   |\n+LL |     ( $($()? $(),* $(a)? $(a),* )+ ) => {};\n+   |        ^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: repetition matches empty token tree\n+  --> $DIR/issue-5067.rs:37:8\n+   |\n+LL |     ( $($()? $(),* $(a)? $(a),* )? ) => {};\n+   |        ^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: repetition matches empty token tree\n+  --> $DIR/issue-5067.rs:47:12\n    |\n LL |     ( $(a $()+)* ) => {};\n    |            ^^\n \n error: repetition matches empty token tree\n-  --> $DIR/issue-5067.rs:30:12\n+  --> $DIR/issue-5067.rs:49:12\n    |\n LL |     ( $(a $()*)+ ) => {};\n    |            ^^\n \n error: repetition matches empty token tree\n-  --> $DIR/issue-5067.rs:38:18\n+  --> $DIR/issue-5067.rs:51:12\n+   |\n+LL |     ( $(a $()+)? ) => {};\n+   |            ^^\n+\n+error: repetition matches empty token tree\n+  --> $DIR/issue-5067.rs:53:12\n+   |\n+LL |     ( $(a $()?)+ ) => {};\n+   |            ^^\n+\n+error: repetition matches empty token tree\n+  --> $DIR/issue-5067.rs:60:18\n    |\n LL |     (a $e1:expr $($(, a $e2:expr)*)*) => ([$e1 $($(, $e2)*)*]);\n    |                  ^^^^^^^^^^^^^^^^^^\n \n error: repetition matches empty token tree\n-  --> $DIR/issue-5067.rs:50:8\n+  --> $DIR/issue-5067.rs:71:8\n    |\n-LL |     ( $()* ) => {}\n+LL |     ( $()* ) => {};\n    |        ^^\n \n-error: aborting due to 10 previous errors\n+error: aborting due to 18 previous errors\n "}, {"sha": "ebeb3fe07adb4401d660066d9e22102e6475a896", "filename": "src/test/ui/issues/issue-57597.rs", "status": "added", "additions": 80, "deletions": 0, "changes": 80, "blob_url": "https://github.com/rust-lang/rust/blob/fd779d3f76240c61104909f237c031ebba9d11df/src%2Ftest%2Fui%2Fissues%2Fissue-57597.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd779d3f76240c61104909f237c031ebba9d11df/src%2Ftest%2Fui%2Fissues%2Fissue-57597.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-57597.rs?ref=fd779d3f76240c61104909f237c031ebba9d11df", "patch": "@@ -0,0 +1,80 @@\n+// Regression test for #57597.\n+//\n+// Make sure that nested matchers work correctly rather than causing an infinite loop or crash.\n+\n+// edition:2018\n+\n+macro_rules! foo1 {\n+    ($($($i:ident)?)+) => {};\n+    //~^ ERROR repetition matches empty token tree\n+}\n+\n+macro_rules! foo2 {\n+    ($($($i:ident)?)*) => {};\n+    //~^ ERROR repetition matches empty token tree\n+}\n+\n+macro_rules! foo3 {\n+    ($($($i:ident)?)?) => {};\n+    //~^ ERROR repetition matches empty token tree\n+}\n+\n+macro_rules! foo4 {\n+    ($($($($i:ident)?)?)?) => {};\n+    //~^ ERROR repetition matches empty token tree\n+}\n+\n+macro_rules! foo5 {\n+    ($($($($i:ident)*)?)?) => {};\n+    //~^ ERROR repetition matches empty token tree\n+}\n+\n+macro_rules! foo6 {\n+    ($($($($i:ident)?)*)?) => {};\n+    //~^ ERROR repetition matches empty token tree\n+}\n+\n+macro_rules! foo7 {\n+    ($($($($i:ident)?)?)*) => {};\n+    //~^ ERROR repetition matches empty token tree\n+}\n+\n+macro_rules! foo8 {\n+    ($($($($i:ident)*)*)?) => {};\n+    //~^ ERROR repetition matches empty token tree\n+}\n+\n+macro_rules! foo9 {\n+    ($($($($i:ident)?)*)*) => {};\n+    //~^ ERROR repetition matches empty token tree\n+}\n+\n+macro_rules! foo10 {\n+    ($($($($i:ident)?)*)+) => {};\n+    //~^ ERROR repetition matches empty token tree\n+}\n+\n+macro_rules! foo11 {\n+    ($($($($i:ident)+)?)*) => {};\n+    //~^ ERROR repetition matches empty token tree\n+}\n+\n+macro_rules! foo12 {\n+    ($($($($i:ident)+)*)?) => {};\n+    //~^ ERROR repetition matches empty token tree\n+}\n+\n+fn main() {\n+    foo1!();\n+    foo2!();\n+    foo3!();\n+    foo4!();\n+    foo5!();\n+    foo6!();\n+    foo7!();\n+    foo8!();\n+    foo9!();\n+    foo10!();\n+    foo11!();\n+    foo12!();\n+}"}, {"sha": "0a02ac8c499b690efb4c184665be4af02470090c", "filename": "src/test/ui/issues/issue-57597.stderr", "status": "added", "additions": 74, "deletions": 0, "changes": 74, "blob_url": "https://github.com/rust-lang/rust/blob/fd779d3f76240c61104909f237c031ebba9d11df/src%2Ftest%2Fui%2Fissues%2Fissue-57597.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fd779d3f76240c61104909f237c031ebba9d11df/src%2Ftest%2Fui%2Fissues%2Fissue-57597.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-57597.stderr?ref=fd779d3f76240c61104909f237c031ebba9d11df", "patch": "@@ -0,0 +1,74 @@\n+error: repetition matches empty token tree\n+  --> $DIR/issue-57597.rs:8:7\n+   |\n+LL |     ($($($i:ident)?)+) => {};\n+   |       ^^^^^^^^^^^^^^\n+\n+error: repetition matches empty token tree\n+  --> $DIR/issue-57597.rs:13:7\n+   |\n+LL |     ($($($i:ident)?)*) => {};\n+   |       ^^^^^^^^^^^^^^\n+\n+error: repetition matches empty token tree\n+  --> $DIR/issue-57597.rs:18:7\n+   |\n+LL |     ($($($i:ident)?)?) => {};\n+   |       ^^^^^^^^^^^^^^\n+\n+error: repetition matches empty token tree\n+  --> $DIR/issue-57597.rs:23:7\n+   |\n+LL |     ($($($($i:ident)?)?)?) => {};\n+   |       ^^^^^^^^^^^^^^^^^^\n+\n+error: repetition matches empty token tree\n+  --> $DIR/issue-57597.rs:28:7\n+   |\n+LL |     ($($($($i:ident)*)?)?) => {};\n+   |       ^^^^^^^^^^^^^^^^^^\n+\n+error: repetition matches empty token tree\n+  --> $DIR/issue-57597.rs:33:7\n+   |\n+LL |     ($($($($i:ident)?)*)?) => {};\n+   |       ^^^^^^^^^^^^^^^^^^\n+\n+error: repetition matches empty token tree\n+  --> $DIR/issue-57597.rs:38:7\n+   |\n+LL |     ($($($($i:ident)?)?)*) => {};\n+   |       ^^^^^^^^^^^^^^^^^^\n+\n+error: repetition matches empty token tree\n+  --> $DIR/issue-57597.rs:43:7\n+   |\n+LL |     ($($($($i:ident)*)*)?) => {};\n+   |       ^^^^^^^^^^^^^^^^^^\n+\n+error: repetition matches empty token tree\n+  --> $DIR/issue-57597.rs:48:7\n+   |\n+LL |     ($($($($i:ident)?)*)*) => {};\n+   |       ^^^^^^^^^^^^^^^^^^\n+\n+error: repetition matches empty token tree\n+  --> $DIR/issue-57597.rs:53:7\n+   |\n+LL |     ($($($($i:ident)?)*)+) => {};\n+   |       ^^^^^^^^^^^^^^^^^^\n+\n+error: repetition matches empty token tree\n+  --> $DIR/issue-57597.rs:58:7\n+   |\n+LL |     ($($($($i:ident)+)?)*) => {};\n+   |       ^^^^^^^^^^^^^^^^^^\n+\n+error: repetition matches empty token tree\n+  --> $DIR/issue-57597.rs:63:7\n+   |\n+LL |     ($($($($i:ident)+)*)?) => {};\n+   |       ^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to 12 previous errors\n+"}]}