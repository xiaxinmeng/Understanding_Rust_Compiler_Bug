{"sha": "9ad499786d1eb8008423d9d9810b47c4124e8d47", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlhZDQ5OTc4NmQxZWI4MDA4NDIzZDlkOTgxMGI0N2M0MTI0ZThkNDc=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-06-12T06:58:27Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-06-12T06:58:27Z"}, "message": "Use block indent for args if single line args exceeds max width", "tree": {"sha": "2cb49061bf9aeb4743e45f93594aa0353c95085e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2cb49061bf9aeb4743e45f93594aa0353c95085e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9ad499786d1eb8008423d9d9810b47c4124e8d47", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9ad499786d1eb8008423d9d9810b47c4124e8d47", "html_url": "https://github.com/rust-lang/rust/commit/9ad499786d1eb8008423d9d9810b47c4124e8d47", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9ad499786d1eb8008423d9d9810b47c4124e8d47/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c879d5ebd719875cf99bda55e577df07b28f6ea6", "url": "https://api.github.com/repos/rust-lang/rust/commits/c879d5ebd719875cf99bda55e577df07b28f6ea6", "html_url": "https://github.com/rust-lang/rust/commit/c879d5ebd719875cf99bda55e577df07b28f6ea6"}], "stats": {"total": 35, "additions": 31, "deletions": 4}, "files": [{"sha": "b47bf391ac169d0926c1acb8a61e9dab67a29bb6", "filename": "src/expr.rs", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/9ad499786d1eb8008423d9d9810b47c4124e8d47/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ad499786d1eb8008423d9d9810b47c4124e8d47/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=9ad499786d1eb8008423d9d9810b47c4124e8d47", "patch": "@@ -1734,9 +1734,12 @@ fn rewrite_call_inner(context: &RewriteContext,\n                                   force_trailing_comma);\n     }\n \n+    let args_shape = shape\n+        .sub_width(last_line_width(&callee_str))\n+        .ok_or(Ordering::Less)?;\n     Ok(format!(\"{}{}\",\n                callee_str,\n-               wrap_args_with_parens(context, &list_str, extendable, shape, nested_shape)))\n+               wrap_args_with_parens(context, &list_str, extendable, args_shape, nested_shape)))\n }\n \n fn need_block_indent(s: &str, shape: Shape) -> bool {\n@@ -1906,14 +1909,23 @@ fn can_be_overflowed_expr(context: &RewriteContext, expr: &ast::Expr, args_len:\n     }\n }\n \n+fn paren_overhead(context: &RewriteContext) -> usize {\n+    if context.config.spaces_within_parens() {\n+        4\n+    } else {\n+        2\n+    }\n+}\n+\n fn wrap_args_with_parens(context: &RewriteContext,\n                          args_str: &str,\n                          is_extendable: bool,\n                          shape: Shape,\n                          nested_shape: Shape)\n                          -> String {\n-    if !context.use_block_indent() || (context.inside_macro && !args_str.contains('\\n')) ||\n-       is_extendable {\n+    if !context.use_block_indent() ||\n+       (context.inside_macro && !args_str.contains('\\n') &&\n+        args_str.len() + paren_overhead(context) <= shape.width) || is_extendable {\n         if context.config.spaces_within_parens() && args_str.len() > 0 {\n             format!(\"( {} )\", args_str)\n         } else {"}, {"sha": "ee6178c1902bb28bd068c8c8ff9ef351af1b7456", "filename": "tests/source/configs-fn_call_style-block.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9ad499786d1eb8008423d9d9810b47c4124e8d47/tests%2Fsource%2Fconfigs-fn_call_style-block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ad499786d1eb8008423d9d9810b47c4124e8d47/tests%2Fsource%2Fconfigs-fn_call_style-block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs-fn_call_style-block.rs?ref=9ad499786d1eb8008423d9d9810b47c4124e8d47", "patch": "@@ -125,3 +125,9 @@ fn issue1581() {\n         },\n     );\n }\n+\n+fn issue1651() {\n+    {\n+        let type_list: Vec<_> = try_opt!(types.iter().map(|ty| ty.rewrite(context, shape)).collect());\n+    }\n+}"}, {"sha": "b6eb94eb67766ec5448353f94ffebf5083f210fb", "filename": "tests/target/configs-fn_call_style-block-trailing-comma.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9ad499786d1eb8008423d9d9810b47c4124e8d47/tests%2Ftarget%2Fconfigs-fn_call_style-block-trailing-comma.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ad499786d1eb8008423d9d9810b47c4124e8d47/tests%2Ftarget%2Fconfigs-fn_call_style-block-trailing-comma.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-fn_call_style-block-trailing-comma.rs?ref=9ad499786d1eb8008423d9d9810b47c4124e8d47", "patch": "@@ -3,7 +3,9 @@\n \n // rustfmt should not add trailing comma when rewriting macro. See #1528.\n fn a() {\n-    panic!(\"this is a long string that goes past the maximum line length causing rustfmt to insert a comma here:\");\n+    panic!(\n+        \"this is a long string that goes past the maximum line length causing rustfmt to insert a comma here:\"\n+    );\n     foo(\n         oooptoptoptoptptooptoptoptoptptooptoptoptoptptoptoptoptoptpt(),\n     );"}, {"sha": "dfc8daef6d9034fd044096a294a8f9c724bad44f", "filename": "tests/target/configs-fn_call_style-block.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/9ad499786d1eb8008423d9d9810b47c4124e8d47/tests%2Ftarget%2Fconfigs-fn_call_style-block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ad499786d1eb8008423d9d9810b47c4124e8d47/tests%2Ftarget%2Fconfigs-fn_call_style-block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-fn_call_style-block.rs?ref=9ad499786d1eb8008423d9d9810b47c4124e8d47", "patch": "@@ -145,3 +145,10 @@ fn issue1581() {\n         }\n     });\n }\n+\n+fn issue1651() {\n+    {\n+        let type_list: Vec<_> =\n+            try_opt!(types.iter().map(|ty| ty.rewrite(context, shape)).collect());\n+    }\n+}"}]}