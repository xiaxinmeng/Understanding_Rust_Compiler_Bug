{"sha": "bbf7e4e58a9b565342b5990cb3e750932a90a1b6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJiZjdlNGU1OGE5YjU2NTM0MmI1OTkwY2IzZTc1MDkzMmE5MGExYjY=", "commit": {"author": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2015-01-05T04:20:17Z"}, "committer": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2015-01-05T19:56:49Z"}, "message": "update comment to reflect new `Sized` semantics", "tree": {"sha": "1626c05ba7396aa327b150c66d9b1bf71ac4dc9a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1626c05ba7396aa327b150c66d9b1bf71ac4dc9a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bbf7e4e58a9b565342b5990cb3e750932a90a1b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bbf7e4e58a9b565342b5990cb3e750932a90a1b6", "html_url": "https://github.com/rust-lang/rust/commit/bbf7e4e58a9b565342b5990cb3e750932a90a1b6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bbf7e4e58a9b565342b5990cb3e750932a90a1b6/comments", "author": null, "committer": null, "parents": [{"sha": "eb50d3ee019d7914e491bc387206b0ff29e132bf", "url": "https://api.github.com/repos/rust-lang/rust/commits/eb50d3ee019d7914e491bc387206b0ff29e132bf", "html_url": "https://github.com/rust-lang/rust/commit/eb50d3ee019d7914e491bc387206b0ff29e132bf"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "229d34fe4237c22df7a49a2cb08740c3f89c1fd7", "filename": "src/librustc/middle/traits/util.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bbf7e4e58a9b565342b5990cb3e750932a90a1b6/src%2Flibrustc%2Fmiddle%2Ftraits%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbf7e4e58a9b565342b5990cb3e750932a90a1b6/src%2Flibrustc%2Fmiddle%2Ftraits%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftraits%2Futil.rs?ref=bbf7e4e58a9b565342b5990cb3e750932a90a1b6", "patch": "@@ -92,8 +92,8 @@ impl<'cx, 'tcx> Elaborator<'cx, 'tcx> {\n                 // Only keep those bounds that we haven't already\n                 // seen.  This is necessary to prevent infinite\n                 // recursion in some cases.  One common case is when\n-                // people define `trait Sized { }` rather than `trait\n-                // Sized for Sized? { }`.\n+                // people define `trait Sized: Sized { }` rather than `trait\n+                // Sized { }`.\n                 predicates.retain(|r| self.visited.insert(r.clone()));\n \n                 self.stack.push(StackEntry { position: 0,"}]}