{"sha": "a400cccd5439cb16e8be087f14ca3109318d7435", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE0MDBjY2NkNTQzOWNiMTZlOGJlMDg3ZjE0Y2EzMTA5MzE4ZDc0MzU=", "commit": {"author": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2016-10-01T20:47:43Z"}, "committer": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2016-10-03T01:58:20Z"}, "message": "Cleanup `return` statements.", "tree": {"sha": "3a3e9b8d39577a9ca3d78060fd1692df27102705", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3a3e9b8d39577a9ca3d78060fd1692df27102705"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a400cccd5439cb16e8be087f14ca3109318d7435", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a400cccd5439cb16e8be087f14ca3109318d7435", "html_url": "https://github.com/rust-lang/rust/commit/a400cccd5439cb16e8be087f14ca3109318d7435", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a400cccd5439cb16e8be087f14ca3109318d7435/comments", "author": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "committer": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6d0894940fcba8d0fcad42ab26d610ae1228c8c5", "url": "https://api.github.com/repos/rust-lang/rust/commits/6d0894940fcba8d0fcad42ab26d610ae1228c8c5", "html_url": "https://github.com/rust-lang/rust/commit/6d0894940fcba8d0fcad42ab26d610ae1228c8c5"}], "stats": {"total": 33, "additions": 16, "deletions": 17}, "files": [{"sha": "208a5d810922aa62a725b7f37446e37a20d108e1", "filename": "src/librustdoc/clean/inline.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a400cccd5439cb16e8be087f14ca3109318d7435/src%2Flibrustdoc%2Fclean%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a400cccd5439cb16e8be087f14ca3109318d7435/src%2Flibrustdoc%2Fclean%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Finline.rs?ref=a400cccd5439cb16e8be087f14ca3109318d7435", "patch": "@@ -577,7 +577,7 @@ fn filter_non_trait_generics(trait_did: DefId, mut g: clean::Generics)\n             _ => true,\n         }\n     });\n-    return g;\n+    g\n }\n \n /// Supertrait bounds for a trait are also listed in the generics coming from"}, {"sha": "12093a1bc0f51241a536db85f0595f73a9114fe7", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a400cccd5439cb16e8be087f14ca3109318d7435/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a400cccd5439cb16e8be087f14ca3109318d7435/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=a400cccd5439cb16e8be087f14ca3109318d7435", "patch": "@@ -764,7 +764,7 @@ impl Lifetime {\n     pub fn get_ref<'a>(&'a self) -> &'a str {\n         let Lifetime(ref s) = *self;\n         let s: &'a str = s;\n-        return s;\n+        s\n     }\n \n     pub fn statik() -> Lifetime {\n@@ -1129,7 +1129,7 @@ pub struct FnDecl {\n \n impl FnDecl {\n     pub fn has_self(&self) -> bool {\n-        return self.inputs.values.len() > 0 && self.inputs.values[0].name == \"self\";\n+        self.inputs.values.len() > 0 && self.inputs.values[0].name == \"self\"\n     }\n \n     pub fn self_type(&self) -> Option<SelfTy> {"}, {"sha": "15e042f8c0809287fe23171d7d9d1ff5cfe06b88", "filename": "src/librustdoc/clean/simplify.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a400cccd5439cb16e8be087f14ca3109318d7435/src%2Flibrustdoc%2Fclean%2Fsimplify.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a400cccd5439cb16e8be087f14ca3109318d7435/src%2Flibrustdoc%2Fclean%2Fsimplify.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fsimplify.rs?ref=a400cccd5439cb16e8be087f14ca3109318d7435", "patch": "@@ -141,7 +141,7 @@ pub fn ty_params(mut params: Vec<clean::TyParam>) -> Vec<clean::TyParam> {\n     for param in &mut params {\n         param.bounds = ty_bounds(mem::replace(&mut param.bounds, Vec::new()));\n     }\n-    return params;\n+    params\n }\n \n fn ty_bounds(bounds: Vec<clean::TyParamBound>) -> Vec<clean::TyParamBound> {"}, {"sha": "d2d12ef3c328028cc28898ae8cd6519b9260ee00", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/a400cccd5439cb16e8be087f14ca3109318d7435/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a400cccd5439cb16e8be087f14ca3109318d7435/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=a400cccd5439cb16e8be087f14ca3109318d7435", "patch": "@@ -722,7 +722,7 @@ fn write_shared(cx: &Context,\n                 ret.push(line.to_string());\n             }\n         }\n-        return Ok(ret);\n+        Ok(ret)\n     }\n \n     // Update the search index\n@@ -1208,7 +1208,7 @@ impl DocFolder for Cache {\n         self.seen_mod = orig_seen_mod;\n         self.stripped_mod = orig_stripped_mod;\n         self.parent_is_trait_impl = orig_parent_is_trait_impl;\n-        return ret;\n+        ret\n     }\n }\n \n@@ -1249,7 +1249,7 @@ impl Context {\n         self.dst = prev;\n         self.current.pop().unwrap();\n \n-        return ret;\n+        ret\n     }\n \n     /// Main method for rendering a crate.\n@@ -1450,7 +1450,7 @@ impl Context {\n         for (_, items) in &mut map {\n             items.sort();\n         }\n-        return map;\n+        map\n     }\n }\n \n@@ -1647,7 +1647,7 @@ fn full_path(cx: &Context, item: &clean::Item) -> String {\n     let mut s = cx.current.join(\"::\");\n     s.push_str(\"::\");\n     s.push_str(item.name.as_ref().unwrap());\n-    return s\n+    s\n }\n \n fn shorter<'a>(s: Option<&'a str>) -> String {"}, {"sha": "006dda7d661995d9e67041b156d54765d4a48d98", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/a400cccd5439cb16e8be087f14ca3109318d7435/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a400cccd5439cb16e8be087f14ca3109318d7435/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=a400cccd5439cb16e8be087f14ca3109318d7435", "patch": "@@ -288,15 +288,14 @@ pub fn main_args(args: &[String]) -> isize {\n                               passes.into_iter().collect(),\n                               css_file_extension,\n                               renderinfo)\n-                .expect(\"failed to generate documentation\")\n+                .expect(\"failed to generate documentation\");\n+            0\n         }\n         Some(s) => {\n             println!(\"unknown output format: {}\", s);\n-            return 1;\n+            1\n         }\n     }\n-\n-    return 0;\n }\n \n /// Looks inside the command line arguments to extract the relevant input format"}, {"sha": "5221679e6cdc1aa18f3cd95db258ed7da9bc3e8f", "filename": "src/librustdoc/test.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a400cccd5439cb16e8be087f14ca3109318d7435/src%2Flibrustdoc%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a400cccd5439cb16e8be087f14ca3109318d7435/src%2Flibrustdoc%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Ftest.rs?ref=a400cccd5439cb16e8be087f14ca3109318d7435", "patch": "@@ -169,7 +169,7 @@ fn scrape_test_config(krate: &::rustc::hir::Crate) -> TestOptions {\n         }\n     }\n \n-    return opts;\n+    opts\n }\n \n fn runtest(test: &str, cratename: &str, cfgs: Vec<String>, libs: SearchPaths,\n@@ -363,7 +363,7 @@ pub fn maketest(s: &str, cratename: Option<&str>, dont_insert_main: bool,\n \n     info!(\"final test program: {}\", prog);\n \n-    return prog\n+    prog\n }\n \n fn partition_source(s: &str) -> (String, String) {\n@@ -387,7 +387,7 @@ fn partition_source(s: &str) -> (String, String) {\n         }\n     }\n \n-    return (before, after);\n+    (before, after)\n }\n \n pub struct Collector {"}, {"sha": "4d1af1622724a37bdae20bb8d7e071b6e892f0b4", "filename": "src/librustdoc/visit_ast.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a400cccd5439cb16e8be087f14ca3109318d7435/src%2Flibrustdoc%2Fvisit_ast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a400cccd5439cb16e8be087f14ca3109318d7435/src%2Flibrustdoc%2Fvisit_ast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fvisit_ast.rs?ref=a400cccd5439cb16e8be087f14ca3109318d7435", "patch": "@@ -328,7 +328,7 @@ impl<'a, 'tcx> RustdocVisitor<'a, 'tcx> {\n             _ => false,\n         };\n         self.view_item_stack.remove(&def_node_id);\n-        return ret;\n+        ret\n     }\n \n     pub fn visit_item(&mut self, item: &hir::Item,"}]}