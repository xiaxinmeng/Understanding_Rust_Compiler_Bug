{"sha": "279a1ae5646aa474f6e6b6d2a0b9c248e7e0460c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI3OWExYWU1NjQ2YWE0NzRmNmU2YjZkMmEwYjljMjQ4ZTdlMDQ2MGM=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-06-11T15:13:24Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-06-11T15:13:24Z"}, "message": "Indent chain `.` even if there's more stuff afterwards", "tree": {"sha": "197773206e2493118a9f0a238dfa096c9d2f7a37", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/197773206e2493118a9f0a238dfa096c9d2f7a37"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/279a1ae5646aa474f6e6b6d2a0b9c248e7e0460c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/279a1ae5646aa474f6e6b6d2a0b9c248e7e0460c", "html_url": "https://github.com/rust-lang/rust/commit/279a1ae5646aa474f6e6b6d2a0b9c248e7e0460c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/279a1ae5646aa474f6e6b6d2a0b9c248e7e0460c/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "32157d48f449125febaade6bda0184334b6da4fd", "url": "https://api.github.com/repos/rust-lang/rust/commits/32157d48f449125febaade6bda0184334b6da4fd", "html_url": "https://github.com/rust-lang/rust/commit/32157d48f449125febaade6bda0184334b6da4fd"}], "stats": {"total": 38, "additions": 32, "deletions": 6}, "files": [{"sha": "83776d2b6d34a3641a5c0cdfa483f1c4a9ce9dcc", "filename": "crates/ra_ide/src/typing.rs", "status": "modified", "additions": 32, "deletions": 6, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/279a1ae5646aa474f6e6b6d2a0b9c248e7e0460c/crates%2Fra_ide%2Fsrc%2Ftyping.rs", "raw_url": "https://github.com/rust-lang/rust/raw/279a1ae5646aa474f6e6b6d2a0b9c248e7e0460c/crates%2Fra_ide%2Fsrc%2Ftyping.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Ftyping.rs?ref=279a1ae5646aa474f6e6b6d2a0b9c248e7e0460c", "patch": "@@ -21,7 +21,9 @@ use ra_ide_db::{source_change::SourceFileEdit, RootDatabase};\n use ra_syntax::{\n     algo::find_node_at_offset,\n     ast::{self, AstToken},\n-    AstNode, SourceFile, TextRange, TextSize,\n+    AstNode, SourceFile,\n+    SyntaxKind::{FIELD_EXPR, METHOD_CALL_EXPR},\n+    TextRange, TextSize,\n };\n \n use ra_text_edit::TextEdit;\n@@ -98,9 +100,12 @@ fn on_dot_typed(file: &SourceFile, offset: TextSize) -> Option<TextEdit> {\n     };\n     let current_indent_len = TextSize::of(current_indent);\n \n+    let parent = whitespace.syntax().parent();\n     // Make sure dot is a part of call chain\n-    let field_expr = ast::FieldExpr::cast(whitespace.syntax().parent())?;\n-    let prev_indent = leading_indent(field_expr.syntax())?;\n+    if !matches!(parent.kind(), FIELD_EXPR | METHOD_CALL_EXPR) {\n+        return None;\n+    }\n+    let prev_indent = leading_indent(&parent)?;\n     let target_indent = format!(\"    {}\", prev_indent);\n     let target_indent_len = TextSize::of(&target_indent);\n     if current_indent_len == target_indent_len {\n@@ -143,11 +148,11 @@ mod tests {\n         })\n     }\n \n-    fn type_char(char_typed: char, before: &str, after: &str) {\n-        let actual = do_type_char(char_typed, before)\n+    fn type_char(char_typed: char, ra_fixture_before: &str, ra_fixture_after: &str) {\n+        let actual = do_type_char(char_typed, ra_fixture_before)\n             .unwrap_or_else(|| panic!(\"typing `{}` did nothing\", char_typed));\n \n-        assert_eq_text!(after, &actual);\n+        assert_eq_text!(ra_fixture_after, &actual);\n     }\n \n     fn type_char_noop(char_typed: char, before: &str) {\n@@ -248,6 +253,27 @@ fn foo() {\n         )\n     }\n \n+    #[test]\n+    fn indents_new_chain_call_with_let() {\n+        type_char(\n+            '.',\n+            r#\"\n+fn main() {\n+    let _ = foo\n+    <|>\n+    bar()\n+}\n+\"#,\n+            r#\"\n+fn main() {\n+    let _ = foo\n+        .\n+    bar()\n+}\n+\"#,\n+        );\n+    }\n+\n     #[test]\n     fn indents_continued_chain_call() {\n         type_char("}]}