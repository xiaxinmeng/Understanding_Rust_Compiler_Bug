{"sha": "9c2bfcbea2d7fff10e608b495d76f24f441999b9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjljMmJmY2JlYTJkN2ZmZjEwZTYwOGI0OTVkNzZmMjRmNDQxOTk5Yjk=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-04-13T16:06:14Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-04-13T16:06:14Z"}, "message": "Auto merge of #49808 - spastorino:dump_cause_ice, r=nikomatsakis\n\n[NLL] Fix ICE when a borrow wrapped in a temporary is used after dropped\n\nFixes #47646\n\nr? @nikomatsakis", "tree": {"sha": "7b2a03898bda8df0dd02494c51309779b965cd6b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7b2a03898bda8df0dd02494c51309779b965cd6b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9c2bfcbea2d7fff10e608b495d76f24f441999b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9c2bfcbea2d7fff10e608b495d76f24f441999b9", "html_url": "https://github.com/rust-lang/rust/commit/9c2bfcbea2d7fff10e608b495d76f24f441999b9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9c2bfcbea2d7fff10e608b495d76f24f441999b9/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b8f60f3fc47f0f94666721b9fdfebf95ab5fc444", "url": "https://api.github.com/repos/rust-lang/rust/commits/b8f60f3fc47f0f94666721b9fdfebf95ab5fc444", "html_url": "https://github.com/rust-lang/rust/commit/b8f60f3fc47f0f94666721b9fdfebf95ab5fc444"}, {"sha": "2c79f6458ea047c9aa2a768771ce210acf9394eb", "url": "https://api.github.com/repos/rust-lang/rust/commits/2c79f6458ea047c9aa2a768771ce210acf9394eb", "html_url": "https://github.com/rust-lang/rust/commit/2c79f6458ea047c9aa2a768771ce210acf9394eb"}], "stats": {"total": 82, "additions": 69, "deletions": 13}, "files": [{"sha": "187bfc2bf90f926784a35c571b88d3f23dcfe1d1", "filename": "src/librustc_mir/borrow_check/nll/explain_borrow/mod.rs", "status": "modified", "additions": 25, "deletions": 13, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/9c2bfcbea2d7fff10e608b495d76f24f441999b9/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fexplain_borrow%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c2bfcbea2d7fff10e608b495d76f24f441999b9/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fexplain_borrow%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fexplain_borrow%2Fmod.rs?ref=9c2bfcbea2d7fff10e608b495d76f24f441999b9", "patch": "@@ -8,11 +8,11 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use borrow_check::{Context, MirBorrowckCtxt};\n use borrow_check::nll::region_infer::{Cause, RegionInferenceContext};\n+use borrow_check::{Context, MirBorrowckCtxt};\n use dataflow::BorrowData;\n-use rustc::mir::{Local, Location, Mir};\n use rustc::mir::visit::{MirVisitable, PlaceContext, Visitor};\n+use rustc::mir::{Local, Location, Mir};\n use rustc_data_structures::fx::FxHashSet;\n use rustc_errors::DiagnosticBuilder;\n use util::liveness::{self, DefUse, LivenessMode};\n@@ -59,17 +59,29 @@ impl<'cx, 'gcx, 'tcx> MirBorrowckCtxt<'cx, 'gcx, 'tcx> {\n \n                     Cause::DropVar(local, location) => {\n                         match find_drop_use(mir, regioncx, borrow, location, local) {\n-                            Some(p) => {\n-                                let local_name = mir.local_decls[local].name.unwrap();\n-\n-                                err.span_label(\n-                                    mir.source_info(p).span,\n-                                    format!(\n-                                        \"borrow later used here, when `{}` is dropped\",\n-                                        local_name\n-                                    ),\n-                                );\n-                            }\n+                            Some(p) => match &mir.local_decls[local].name {\n+                                Some(local_name) => {\n+                                    err.span_label(\n+                                        mir.source_info(p).span,\n+                                        format!(\n+                                            \"borrow later used here, when `{}` is dropped\",\n+                                            local_name\n+                                        ),\n+                                    );\n+                                }\n+                                None => {\n+                                    err.span_label(\n+                                        mir.local_decls[local].source_info.span,\n+                                        \"borrow may end up in a temporary, created here\",\n+                                    );\n+\n+                                    err.span_label(\n+                                        mir.source_info(p).span,\n+                                        \"temporary later dropped here, \\\n+                                         potentially using the reference\",\n+                                    );\n+                                }\n+                            },\n \n                             None => {\n                                 span_bug!("}, {"sha": "7a6d6dd3fe1b44d4029a6a4c4cf8bf9252bdc1ca", "filename": "src/test/ui/issue-47646.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/9c2bfcbea2d7fff10e608b495d76f24f441999b9/src%2Ftest%2Fui%2Fissue-47646.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c2bfcbea2d7fff10e608b495d76f24f441999b9/src%2Ftest%2Fui%2Fissue-47646.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-47646.rs?ref=9c2bfcbea2d7fff10e608b495d76f24f441999b9", "patch": "@@ -0,0 +1,26 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![allow(warnings)]\n+#![feature(nll)]\n+\n+use std::collections::BinaryHeap;\n+\n+fn main() {\n+    let mut heap: BinaryHeap<i32> = BinaryHeap::new();\n+    let borrow = heap.peek_mut();\n+\n+    match (borrow, ()) {\n+        (Some(_), ()) => {\n+            println!(\"{:?}\", heap); //~ ERROR cannot borrow `heap` as immutable\n+        }\n+        _ => {}\n+    };\n+}"}, {"sha": "b1289146e0ea9e12785675f1198dbedf4ea8636f", "filename": "src/test/ui/issue-47646.stderr", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/9c2bfcbea2d7fff10e608b495d76f24f441999b9/src%2Ftest%2Fui%2Fissue-47646.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9c2bfcbea2d7fff10e608b495d76f24f441999b9/src%2Ftest%2Fui%2Fissue-47646.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-47646.stderr?ref=9c2bfcbea2d7fff10e608b495d76f24f441999b9", "patch": "@@ -0,0 +1,18 @@\n+error[E0502]: cannot borrow `heap` as immutable because it is also borrowed as mutable\n+  --> $DIR/issue-47646.rs:22:30\n+   |\n+LL |     let borrow = heap.peek_mut();\n+   |                  ---- mutable borrow occurs here\n+LL | \n+LL |     match (borrow, ()) {\n+   |           ------------ borrow may end up in a temporary, created here\n+LL |         (Some(_), ()) => {\n+LL |             println!(\"{:?}\", heap); //~ ERROR cannot borrow `heap` as immutable\n+   |                              ^^^^ immutable borrow occurs here\n+...\n+LL |     };\n+   |      - temporary later dropped here, potentially using the reference\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0502`."}]}