{"sha": "b2e25bc8c8ab536e0c5abd8175258cfc63c83a1b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIyZTI1YmM4YzhhYjUzNmUwYzVhYmQ4MTc1MjU4Y2ZjNjNjODNhMWI=", "commit": {"author": {"name": "Caleb Zulawski", "email": "caleb.zulawski@gmail.com", "date": "2021-04-19T05:46:52Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-04-19T05:46:52Z"}, "message": "Merge pull request #95 from rust-lang/intrinsic-fabs\n\nUse fabs intrinsic", "tree": {"sha": "3729a8427335599beb6267f9c32cb596df832c84", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3729a8427335599beb6267f9c32cb596df832c84"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b2e25bc8c8ab536e0c5abd8175258cfc63c83a1b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgfRlMCRBK7hj4Ov3rIwAAXikIAGWOAnqMHFsYxzUdZ+WCRG1h\njlWQ0EelxxhYJxdUBYSJEsqXYKqWJkez1Oo/wcvosnb4YmUybCDHowVtAawPpfvS\n7/v4cXJbgCbwqkqP1X2Hqj8v3+OyKo7+Ui6cX7Zj9Kdbaaa3lGhDR6z2Mt9S5zAn\n3e98vA7VjI/xUv7KCHjAne8Eld6nhxQxBjw989GjalK4sQ/qHjro8WSVV1ptI3Mc\nazVrzPMqWPmpa6fH2x5PD+D3Gg5H3f3G/Y7/xRttHEo/V3HFQ3lfMK4FLMkuqMKF\n3SsKt96GM1YDaJBOwxAA3Uql1asCHrmvOuKX6qAsoplEmN71zcyFhuZGeyIeVyI=\n=zpue\n-----END PGP SIGNATURE-----\n", "payload": "tree 3729a8427335599beb6267f9c32cb596df832c84\nparent e73985f25d1616c48caf9f66786320f05cc0b1db\nparent 9acc11209019b7d3f31bd1945066522ea9c2f88c\nauthor Caleb Zulawski <caleb.zulawski@gmail.com> 1618811212 -0400\ncommitter GitHub <noreply@github.com> 1618811212 -0400\n\nMerge pull request #95 from rust-lang/intrinsic-fabs\n\nUse fabs intrinsic"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b2e25bc8c8ab536e0c5abd8175258cfc63c83a1b", "html_url": "https://github.com/rust-lang/rust/commit/b2e25bc8c8ab536e0c5abd8175258cfc63c83a1b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b2e25bc8c8ab536e0c5abd8175258cfc63c83a1b/comments", "author": {"login": "calebzulawski", "id": 563826, "node_id": "MDQ6VXNlcjU2MzgyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/563826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebzulawski", "html_url": "https://github.com/calebzulawski", "followers_url": "https://api.github.com/users/calebzulawski/followers", "following_url": "https://api.github.com/users/calebzulawski/following{/other_user}", "gists_url": "https://api.github.com/users/calebzulawski/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebzulawski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebzulawski/subscriptions", "organizations_url": "https://api.github.com/users/calebzulawski/orgs", "repos_url": "https://api.github.com/users/calebzulawski/repos", "events_url": "https://api.github.com/users/calebzulawski/events{/privacy}", "received_events_url": "https://api.github.com/users/calebzulawski/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e73985f25d1616c48caf9f66786320f05cc0b1db", "url": "https://api.github.com/repos/rust-lang/rust/commits/e73985f25d1616c48caf9f66786320f05cc0b1db", "html_url": "https://github.com/rust-lang/rust/commit/e73985f25d1616c48caf9f66786320f05cc0b1db"}, {"sha": "9acc11209019b7d3f31bd1945066522ea9c2f88c", "url": "https://api.github.com/repos/rust-lang/rust/commits/9acc11209019b7d3f31bd1945066522ea9c2f88c", "html_url": "https://github.com/rust-lang/rust/commit/9acc11209019b7d3f31bd1945066522ea9c2f88c"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "b85a3ad992249b4a75e741a50aecedaef44895be", "filename": "crates/core_simd/src/intrinsics.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b2e25bc8c8ab536e0c5abd8175258cfc63c83a1b/crates%2Fcore_simd%2Fsrc%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2e25bc8c8ab536e0c5abd8175258cfc63c83a1b/crates%2Fcore_simd%2Fsrc%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Fintrinsics.rs?ref=b2e25bc8c8ab536e0c5abd8175258cfc63c83a1b", "patch": "@@ -51,6 +51,9 @@ extern \"platform-intrinsic\" {\n     #[cfg(feature = \"std\")]\n     pub(crate) fn simd_ceil<T>(x: T) -> T;\n \n+    /// fabs\n+    pub(crate) fn simd_fabs<T>(x: T) -> T;\n+\n     pub(crate) fn simd_eq<T, U>(x: T, y: T) -> U;\n     pub(crate) fn simd_ne<T, U>(x: T, y: T) -> U;\n     pub(crate) fn simd_lt<T, U>(x: T, y: T) -> U;"}, {"sha": "46e4229ddb59bea54a38bc5b9f22c9d2e84bcac7", "filename": "crates/core_simd/src/vector/float.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b2e25bc8c8ab536e0c5abd8175258cfc63c83a1b/crates%2Fcore_simd%2Fsrc%2Fvector%2Ffloat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2e25bc8c8ab536e0c5abd8175258cfc63c83a1b/crates%2Fcore_simd%2Fsrc%2Fvector%2Ffloat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Fvector%2Ffloat.rs?ref=b2e25bc8c8ab536e0c5abd8175258cfc63c83a1b", "patch": "@@ -32,8 +32,7 @@ macro_rules! impl_float_vector {\n             /// equivalently-indexed lane in `self`.\n             #[inline]\n             pub fn abs(self) -> Self {\n-                let no_sign = crate::$bits_ty::splat(!0 >> 1);\n-                Self::from_bits(self.to_bits() & no_sign)\n+                unsafe { crate::intrinsics::simd_fabs(self) }\n             }\n         }\n "}]}