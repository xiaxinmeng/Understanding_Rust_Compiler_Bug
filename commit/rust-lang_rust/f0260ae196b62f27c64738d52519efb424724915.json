{"sha": "f0260ae196b62f27c64738d52519efb424724915", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYwMjYwYWUxOTZiNjJmMjdjNjQ3MzhkNTI1MTllZmI0MjQ3MjQ5MTU=", "commit": {"author": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2020-02-14T04:48:17Z"}, "committer": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2020-02-14T04:48:17Z"}, "message": "Use `seek_before` instead of `seek_after`", "tree": {"sha": "4bd7825df15d12b8af1a3466238d3e48f0fb19a9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4bd7825df15d12b8af1a3466238d3e48f0fb19a9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f0260ae196b62f27c64738d52519efb424724915", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f0260ae196b62f27c64738d52519efb424724915", "html_url": "https://github.com/rust-lang/rust/commit/f0260ae196b62f27c64738d52519efb424724915", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f0260ae196b62f27c64738d52519efb424724915/comments", "author": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "95186201724a087bacafc74317722314f203cfdc", "url": "https://api.github.com/repos/rust-lang/rust/commits/95186201724a087bacafc74317722314f203cfdc", "html_url": "https://github.com/rust-lang/rust/commit/95186201724a087bacafc74317722314f203cfdc"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "306fe14266ff9b603d63eb6bdffbbd23000b4324", "filename": "src/librustc_mir/transform/elaborate_drops.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/f0260ae196b62f27c64738d52519efb424724915/src%2Flibrustc_mir%2Ftransform%2Felaborate_drops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0260ae196b62f27c64738d52519efb424724915/src%2Flibrustc_mir%2Ftransform%2Felaborate_drops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Felaborate_drops.rs?ref=f0260ae196b62f27c64738d52519efb424724915", "patch": "@@ -103,7 +103,7 @@ fn find_dead_unwinds<'tcx>(\n \n         debug!(\"find_dead_unwinds @ {:?}: path({:?})={:?}\", bb, location, path);\n \n-        flow_inits.seek_after(body.terminator_loc(bb));\n+        flow_inits.seek_before(body.terminator_loc(bb));\n         let mut maybe_live = false;\n         on_all_drop_children_bits(tcx, body, &env, path, |child| {\n             maybe_live |= flow_inits.contains(child);\n@@ -124,9 +124,9 @@ struct InitializationData<'mir, 'tcx> {\n }\n \n impl InitializationData<'_, '_> {\n-    fn seek_after(&mut self, loc: Location) {\n-        self.inits.seek_after(loc);\n-        self.uninits.seek_after(loc);\n+    fn seek_before(&mut self, loc: Location) {\n+        self.inits.seek_before(loc);\n+        self.uninits.seek_before(loc);\n     }\n \n     fn state(&self, path: MovePathIndex) -> (bool, bool) {\n@@ -294,7 +294,7 @@ impl<'b, 'tcx> ElaborateDropsCtxt<'b, 'tcx> {\n                 _ => continue,\n             };\n \n-            self.init_data.seek_after(self.body.terminator_loc(bb));\n+            self.init_data.seek_before(self.body.terminator_loc(bb));\n \n             let path = self.move_data().rev_lookup.find(location.as_ref());\n             debug!(\"collect_drop_flags: {:?}, place {:?} ({:?})\", bb, location, path);\n@@ -341,7 +341,7 @@ impl<'b, 'tcx> ElaborateDropsCtxt<'b, 'tcx> {\n             let resume_block = self.patch.resume_block();\n             match terminator.kind {\n                 TerminatorKind::Drop { ref location, target, unwind } => {\n-                    self.init_data.seek_after(loc);\n+                    self.init_data.seek_before(loc);\n                     match self.move_data().rev_lookup.find(location.as_ref()) {\n                         LookupResult::Exact(path) => elaborate_drop(\n                             &mut Elaborator { ctxt: self },\n@@ -424,7 +424,7 @@ impl<'b, 'tcx> ElaborateDropsCtxt<'b, 'tcx> {\n         match self.move_data().rev_lookup.find(location.as_ref()) {\n             LookupResult::Exact(path) => {\n                 debug!(\"elaborate_drop_and_replace({:?}) - tracked {:?}\", terminator, path);\n-                self.init_data.seek_after(loc);\n+                self.init_data.seek_before(loc);\n                 elaborate_drop(\n                     &mut Elaborator { ctxt: self },\n                     terminator.source_info,"}]}