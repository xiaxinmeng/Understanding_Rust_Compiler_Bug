{"sha": "7976d5720a5393274b16b2318375075d4f8d9da8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc5NzZkNTcyMGE1MzkzMjc0YjE2YjIzMTgzNzUwNzVkNGY4ZDlkYTg=", "commit": {"author": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2019-11-05T08:49:50Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-11-05T08:49:50Z"}, "message": "Rollup merge of #65720 - icefoxen:LLVMgetInstructionCount, r=rkruppe\n\nAdd FFI bindings for LLVM's Module::getInstructionCount()\n\nJust to make it usable for profiling and such inside\nrustc itself.  It was vaguely useful in\nhttps://wiki.alopex.li/WhereRustcSpendsItsTime and I figured\nI might as well upstream it; I may or may not ever get around\nto doing more with it (hopefully I will), but it may be useful\nfor others.", "tree": {"sha": "41859a64450c74f482ef8d9ee5a6dde7a61cba8f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/41859a64450c74f482ef8d9ee5a6dde7a61cba8f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7976d5720a5393274b16b2318375075d4f8d9da8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdwTeuCRBK7hj4Ov3rIwAAdHIIAFAps2yF9eZ5nAePeP8zfhXd\nUUavL45qmO6mKvTV+Gv9lK/yqECT8iPCP/eUADziifPfMgQosdtSNOCjM8ZsdZPP\nV5CdDAHawWaS1RsdWRX1f48HEGnBYtX8q08BP3Agk4O2gScyswr/yNCsDUPzQ8h7\nx/dpXucreZdrrCJEPRTOw4sUv9ed2r/cm13HngezQcV4G/wKR447xG7LiHfv1RSB\nDoRVdI7KCp4iHLSA+/+kFU1v0eujqau957pwI31eT9laxjqFkkNseZiTy2hGwxdn\n1qUcCRe5FqAyIs+K/oZg/MLlloYJX9qwOPK5yyI36HnVnOZ7JDD/HukTacVJ5Lk=\n=DlTw\n-----END PGP SIGNATURE-----\n", "payload": "tree 41859a64450c74f482ef8d9ee5a6dde7a61cba8f\nparent 5831e0643e1f3772950075e55b62e3a4d0de297a\nparent 567962d22090bbd23c1c3dc0e04229ac8c681ea8\nauthor Pietro Albini <pietro@pietroalbini.org> 1572943790 +0100\ncommitter GitHub <noreply@github.com> 1572943790 +0100\n\nRollup merge of #65720 - icefoxen:LLVMgetInstructionCount, r=rkruppe\n\nAdd FFI bindings for LLVM's Module::getInstructionCount()\n\nJust to make it usable for profiling and such inside\nrustc itself.  It was vaguely useful in\nhttps://wiki.alopex.li/WhereRustcSpendsItsTime and I figured\nI might as well upstream it; I may or may not ever get around\nto doing more with it (hopefully I will), but it may be useful\nfor others.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7976d5720a5393274b16b2318375075d4f8d9da8", "html_url": "https://github.com/rust-lang/rust/commit/7976d5720a5393274b16b2318375075d4f8d9da8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7976d5720a5393274b16b2318375075d4f8d9da8/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5831e0643e1f3772950075e55b62e3a4d0de297a", "url": "https://api.github.com/repos/rust-lang/rust/commits/5831e0643e1f3772950075e55b62e3a4d0de297a", "html_url": "https://github.com/rust-lang/rust/commit/5831e0643e1f3772950075e55b62e3a4d0de297a"}, {"sha": "567962d22090bbd23c1c3dc0e04229ac8c681ea8", "url": "https://api.github.com/repos/rust-lang/rust/commits/567962d22090bbd23c1c3dc0e04229ac8c681ea8", "html_url": "https://github.com/rust-lang/rust/commit/567962d22090bbd23c1c3dc0e04229ac8c681ea8"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "72b0a7d640a4869c1286b506fe7b921ccc9cd886", "filename": "src/librustc_codegen_llvm/llvm/ffi.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7976d5720a5393274b16b2318375075d4f8d9da8/src%2Flibrustc_codegen_llvm%2Fllvm%2Fffi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7976d5720a5393274b16b2318375075d4f8d9da8/src%2Flibrustc_codegen_llvm%2Fllvm%2Fffi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fllvm%2Fffi.rs?ref=7976d5720a5393274b16b2318375075d4f8d9da8", "patch": "@@ -1729,6 +1729,7 @@ extern \"C\" {\n                                ) -> LLVMRustResult;\n     pub fn LLVMRustSetLLVMOptions(Argc: c_int, Argv: *const *const c_char);\n     pub fn LLVMRustPrintPasses();\n+    pub fn LLVMRustGetInstructionCount(M: &Module) -> u32;\n     pub fn LLVMRustSetNormalizedTarget(M: &Module, triple: *const c_char);\n     pub fn LLVMRustAddAlwaysInlinePass(P: &PassManagerBuilder, AddLifetimes: bool);\n     pub fn LLVMRustRunRestrictionPass(M: &Module, syms: *const *const c_char, len: size_t);"}, {"sha": "e6c45b8e3628b47d5e32862b85478bd1cf0cbcfa", "filename": "src/rustllvm/RustWrapper.cpp", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7976d5720a5393274b16b2318375075d4f8d9da8/src%2Frustllvm%2FRustWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/7976d5720a5393274b16b2318375075d4f8d9da8/src%2Frustllvm%2FRustWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2FRustWrapper.cpp?ref=7976d5720a5393274b16b2318375075d4f8d9da8", "patch": "@@ -87,6 +87,14 @@ extern \"C\" char *LLVMRustGetLastError(void) {\n   return Ret;\n }\n \n+extern \"C\" unsigned int LLVMRustGetInstructionCount(LLVMModuleRef M) {\n+#if LLVM_VERSION_GE(7, 0)\n+  return unwrap(M)->getInstructionCount();\n+#else\n+  report_fatal_error(\"Module::getInstructionCount not available before LLVM 7\");\n+#endif\n+}\n+\n extern \"C\" void LLVMRustSetLastError(const char *Err) {\n   free((void *)LastError);\n   LastError = strdup(Err);"}]}