{"sha": "d0dfc35fc906e30502c17139ac91798db4d99fce", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQwZGZjMzVmYzkwNmUzMDUwMmMxNzEzOWFjOTE3OThkYjRkOTlmY2U=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-22T01:16:49Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-26T23:54:33Z"}, "message": "librustc: De-`@mut` `TestCtxt::testfns`", "tree": {"sha": "6c4b03299e03eb9117cabcabc24c22916e55ae42", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6c4b03299e03eb9117cabcabc24c22916e55ae42"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d0dfc35fc906e30502c17139ac91798db4d99fce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d0dfc35fc906e30502c17139ac91798db4d99fce", "html_url": "https://github.com/rust-lang/rust/commit/d0dfc35fc906e30502c17139ac91798db4d99fce", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d0dfc35fc906e30502c17139ac91798db4d99fce/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9ff65b503f0ecb00e5ddcda1776b1c55b123fc46", "url": "https://api.github.com/repos/rust-lang/rust/commits/9ff65b503f0ecb00e5ddcda1776b1c55b123fc46", "html_url": "https://github.com/rust-lang/rust/commit/9ff65b503f0ecb00e5ddcda1776b1c55b123fc46"}], "stats": {"total": 18, "additions": 12, "deletions": 6}, "files": [{"sha": "45359421c11544b301ce93e6817d50c163dec6ec", "filename": "src/librustc/front/test.rs", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/d0dfc35fc906e30502c17139ac91798db4d99fce/src%2Flibrustc%2Ffront%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0dfc35fc906e30502c17139ac91798db4d99fce/src%2Flibrustc%2Ffront%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ffront%2Ftest.rs?ref=d0dfc35fc906e30502c17139ac91798db4d99fce", "patch": "@@ -41,7 +41,7 @@ struct TestCtxt {\n     sess: session::Session,\n     path: RefCell<~[ast::Ident]>,\n     ext_cx: @ExtCtxt,\n-    testfns: ~[Test],\n+    testfns: RefCell<~[Test]>,\n     is_extra: bool,\n     config: ast::CrateConfig,\n }\n@@ -104,7 +104,10 @@ impl fold::ast_fold for TestHarnessGenerator {\n                         ignore: is_ignored(self.cx, i),\n                         should_fail: should_fail(i)\n                     };\n-                    self.cx.testfns.push(test);\n+                    {\n+                        let mut testfns = self.cx.testfns.borrow_mut();\n+                        testfns.get().push(test);\n+                    }\n                     // debug!(\"have {} test/bench functions\",\n                     //        cx.testfns.len());\n                 }\n@@ -155,7 +158,7 @@ fn generate_test_harness(sess: session::Session, crate: ast::Crate)\n         sess: sess,\n         ext_cx: ExtCtxt::new(sess.parse_sess, sess.opts.cfg.clone()),\n         path: RefCell::new(~[]),\n-        testfns: ~[],\n+        testfns: RefCell::new(~[]),\n         is_extra: is_extra(&crate),\n         config: crate.config.clone(),\n     };\n@@ -389,10 +392,13 @@ fn is_extra(crate: &ast::Crate) -> bool {\n }\n \n fn mk_test_descs(cx: &TestCtxt) -> @ast::Expr {\n-    debug!(\"building test vector from {} tests\", cx.testfns.len());\n     let mut descs = ~[];\n-    for test in cx.testfns.iter() {\n-        descs.push(mk_test_desc_and_fn_rec(cx, test));\n+    {\n+        let testfns = cx.testfns.borrow();\n+        debug!(\"building test vector from {} tests\", testfns.get().len());\n+        for test in testfns.get().iter() {\n+            descs.push(mk_test_desc_and_fn_rec(cx, test));\n+        }\n     }\n \n     let inner_expr = @ast::Expr {"}]}