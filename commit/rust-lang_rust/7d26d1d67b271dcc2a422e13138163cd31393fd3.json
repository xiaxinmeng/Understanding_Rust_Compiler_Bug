{"sha": "7d26d1d67b271dcc2a422e13138163cd31393fd3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdkMjZkMWQ2N2IyNzFkY2MyYTQyMmUxMzEzODE2M2NkMzEzOTNmZDM=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-07-07T19:47:39Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-07-07T20:31:12Z"}, "message": "Move tyencode::ty_str to metadata::encoder", "tree": {"sha": "fdb42c753a8b08c008c8bb66674d1ce04229fa2c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fdb42c753a8b08c008c8bb66674d1ce04229fa2c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7d26d1d67b271dcc2a422e13138163cd31393fd3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7d26d1d67b271dcc2a422e13138163cd31393fd3", "html_url": "https://github.com/rust-lang/rust/commit/7d26d1d67b271dcc2a422e13138163cd31393fd3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7d26d1d67b271dcc2a422e13138163cd31393fd3/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "73963eae9a37d16bab872f3ffc9bdcc1b4567c00", "url": "https://api.github.com/repos/rust-lang/rust/commits/73963eae9a37d16bab872f3ffc9bdcc1b4567c00", "html_url": "https://github.com/rust-lang/rust/commit/73963eae9a37d16bab872f3ffc9bdcc1b4567c00"}], "stats": {"total": 27, "additions": 16, "deletions": 11}, "files": [{"sha": "55716acf357fe693de63336e8d5dd773ddba2b92", "filename": "src/comp/back/link.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7d26d1d67b271dcc2a422e13138163cd31393fd3/src%2Fcomp%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d26d1d67b271dcc2a422e13138163cd31393fd3/src%2Fcomp%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fback%2Flink.rs?ref=7d26d1d67b271dcc2a422e13138163cd31393fd3", "patch": "@@ -4,6 +4,7 @@ import lib::llvm::llvm;\n import front::attr;\n import middle::trans;\n import middle::ty;\n+import metadata::encoder;\n import std::str;\n import std::fs;\n import std::vec;\n@@ -407,7 +408,7 @@ fn symbol_hash(ty::ctxt tcx, sha1 sha, &ty::t t,\n     // FIXME: This wants to be link_meta.meta_hash\n     sha.input_str(link_meta.name);\n     sha.input_str(\"-\");\n-    sha.input_str(metadata::tyencode::ty_str(tcx, t));\n+    sha.input_str(encoder::ty_str(tcx, t));\n     auto hash = truncated_sha1_result(sha);\n     // Prefix with _ so that it never blends into adjacent digits\n "}, {"sha": "0ed91e8bbae5605ec8935d40d054eb3cfbb47c12", "filename": "src/comp/metadata/encoder.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/7d26d1d67b271dcc2a422e13138163cd31393fd3/src%2Fcomp%2Fmetadata%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d26d1d67b271dcc2a422e13138163cd31393fd3/src%2Fcomp%2Fmetadata%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmetadata%2Fencoder.rs?ref=7d26d1d67b271dcc2a422e13138163cd31393fd3", "patch": "@@ -18,6 +18,7 @@ import front::attr;\n \n export def_to_str;\n export encode_metadata;\n+export ty_str;\n \n // Path table encoding\n fn encode_name(&ebml::writer ebml_w, &str name) {\n@@ -540,6 +541,16 @@ fn encode_metadata(&@crate_ctxt cx, &@crate crate) -> str {\n     ret string_w.get_str();\n }\n \n+// Get the encoded string for a type\n+fn ty_str(&ty::ctxt tcx, &ty::t t) -> str {\n+    auto cx = @rec(ds = encoder::def_to_str,\n+                   tcx = tcx,\n+                   abbrevs = metadata::tyencode::ac_no_abbrevs);\n+    auto sw = io::string_writer();\n+    tyencode::enc_ty(sw.get_writer(), cx, t);\n+    ret sw.get_str();\n+}\n+\n \n // Local Variables:\n // mode: rust"}, {"sha": "ce3c743b23acc684ee0c2b323b30ddf9afafce77", "filename": "src/comp/metadata/tyencode.rs", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/7d26d1d67b271dcc2a422e13138163cd31393fd3/src%2Fcomp%2Fmetadata%2Ftyencode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d26d1d67b271dcc2a422e13138163cd31393fd3/src%2Fcomp%2Fmetadata%2Ftyencode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmetadata%2Ftyencode.rs?ref=7d26d1d67b271dcc2a422e13138163cd31393fd3", "patch": "@@ -16,7 +16,6 @@ export ty_abbrev;\n export ac_no_abbrevs;\n export ac_use_abbrevs;\n export enc_ty;\n-export ty_str;\n \n type ctxt =\n     rec(fn(&def_id) -> str  ds, // Def -> str Callback:\n@@ -36,14 +35,7 @@ fn cx_uses_abbrevs(&@ctxt cx) -> bool {\n         case (ac_use_abbrevs(_)) { ret true; }\n     }\n }\n-fn ty_str(&ty::ctxt tcx, &ty::t t) -> str {\n-    auto cx = @rec(ds = encoder::def_to_str,\n-                   tcx = tcx,\n-                   abbrevs = metadata::tyencode::ac_no_abbrevs);\n-    auto sw = io::string_writer();\n-    enc_ty(sw.get_writer(), cx, t);\n-    ret sw.get_str();\n-}\n+\n fn enc_ty(&io::writer w, &@ctxt cx, &ty::t t) {\n     alt (cx.abbrevs) {\n         case (ac_no_abbrevs) {"}, {"sha": "a3963f94c4283d8b90ba0758d8308c8e63010110", "filename": "src/comp/util/ppaux.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7d26d1d67b271dcc2a422e13138163cd31393fd3/src%2Fcomp%2Futil%2Fppaux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d26d1d67b271dcc2a422e13138163cd31393fd3/src%2Fcomp%2Futil%2Fppaux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Futil%2Fppaux.rs?ref=7d26d1d67b271dcc2a422e13138163cd31393fd3", "patch": "@@ -8,6 +8,7 @@ import std::option::none;\n import std::option::some;\n import middle::ty;\n import middle::ty::*;\n+import metadata::encoder;\n import syntax::print::pp;\n import syntax::print::pprust;\n import pp::word;\n@@ -151,7 +152,7 @@ fn ty_to_str(&ctxt cx, &t typ) -> str {\n }\n \n fn ty_to_short_str(&ctxt cx, t typ) -> str {\n-    auto s = metadata::tyencode::ty_str(cx, typ);\n+    auto s = encoder::ty_str(cx, typ);\n     if (str::byte_len(s) >= 32u) { s = str::substr(s, 0u, 32u); }\n     ret s;\n }"}]}