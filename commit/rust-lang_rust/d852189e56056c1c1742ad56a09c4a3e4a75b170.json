{"sha": "d852189e56056c1c1742ad56a09c4a3e4a75b170", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ4NTIxODllNTYwNTZjMWMxNzQyYWQ1NmEwOWM0YTNlNGE3NWIxNzA=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-10-14T11:30:06Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-10-14T11:30:06Z"}, "message": "Add reminder to update lsp-extensions.md", "tree": {"sha": "e247fd2e0bc8246bb46342f523dce649ff178223", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e247fd2e0bc8246bb46342f523dce649ff178223"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d852189e56056c1c1742ad56a09c4a3e4a75b170", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d852189e56056c1c1742ad56a09c4a3e4a75b170", "html_url": "https://github.com/rust-lang/rust/commit/d852189e56056c1c1742ad56a09c4a3e4a75b170", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d852189e56056c1c1742ad56a09c4a3e4a75b170/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b62f48f535039e123b46f2d8b3e9d403cbfe1967", "url": "https://api.github.com/repos/rust-lang/rust/commits/b62f48f535039e123b46f2d8b3e9d403cbfe1967", "html_url": "https://github.com/rust-lang/rust/commit/b62f48f535039e123b46f2d8b3e9d403cbfe1967"}], "stats": {"total": 55, "additions": 55, "deletions": 0}, "files": [{"sha": "43a69d6ce75caf33a6350fd3e08011f1984a634c", "filename": "docs/dev/lsp-extensions.md", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/d852189e56056c1c1742ad56a09c4a3e4a75b170/docs%2Fdev%2Flsp-extensions.md", "raw_url": "https://github.com/rust-lang/rust/raw/d852189e56056c1c1742ad56a09c4a3e4a75b170/docs%2Fdev%2Flsp-extensions.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fdev%2Flsp-extensions.md?ref=d852189e56056c1c1742ad56a09c4a3e4a75b170", "patch": "@@ -1,3 +1,13 @@\n+<!---\n+lsp_ext.rs hash: 286f8bbac885531a\n+\n+If you need to change the above hash to make the test pass, please check if you\n+need to adjust this doc as well and ping this issue:\n+\n+  https://github.com/rust-analyzer/rust-analyzer/issues/4604\n+\n+--->\n+\n # LSP Extensions\n \n This document describes LSP extensions used by rust-analyzer."}, {"sha": "b3bb9d543a1d1e587333a500fa2838686a06a233", "filename": "xtask/tests/tidy.rs", "status": "modified", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/d852189e56056c1c1742ad56a09c4a3e4a75b170/xtask%2Ftests%2Ftidy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d852189e56056c1c1742ad56a09c4a3e4a75b170/xtask%2Ftests%2Ftidy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Ftests%2Ftidy.rs?ref=d852189e56056c1c1742ad56a09c4a3e4a75b170", "patch": "@@ -44,6 +44,41 @@ fn smoke_test_docs_generation() {\n     codegen::generate_feature_docs(Mode::Overwrite).unwrap();\n }\n \n+#[test]\n+fn check_lsp_extensions_docs() {\n+    let expected_hash = {\n+        let lsp_ext_rs =\n+            fs2::read_to_string(project_root().join(\"crates/rust-analyzer/src/lsp_ext.rs\"))\n+                .unwrap();\n+        stable_hash(lsp_ext_rs.as_str())\n+    };\n+\n+    let actual_hash = {\n+        let lsp_extensions_md =\n+            fs2::read_to_string(project_root().join(\"docs/dev/lsp-extensions.md\")).unwrap();\n+        let text = lsp_extensions_md\n+            .lines()\n+            .find_map(|line| line.strip_prefix(\"lsp_ext.rs hash:\"))\n+            .unwrap()\n+            .trim();\n+        u64::from_str_radix(text, 16).unwrap()\n+    };\n+\n+    if actual_hash != expected_hash {\n+        panic!(\n+            \"\n+lsp_ext.rs was changed without touching lsp-extensions.md.\n+\n+Expected hash: {:x}\n+Actual hash:   {:x}\n+\n+Please adjust docs/dev/lsp-extensions.md.\n+\",\n+            expected_hash, actual_hash\n+        )\n+    }\n+}\n+\n #[test]\n fn rust_files_are_tidy() {\n     let mut tidy_docs = TidyDocs::default();\n@@ -280,3 +315,13 @@ fn is_exclude_dir(p: &Path, dirs_to_exclude: &[&str]) -> bool {\n         .filter_map(|it| it.as_os_str().to_str())\n         .any(|it| dirs_to_exclude.contains(&it))\n }\n+\n+#[allow(deprecated)]\n+fn stable_hash(text: &str) -> u64 {\n+    use std::hash::{Hash, Hasher, SipHasher};\n+\n+    let text = text.replace('\\r', \"\");\n+    let mut hasher = SipHasher::default();\n+    text.hash(&mut hasher);\n+    hasher.finish()\n+}"}]}