{"sha": "96eed862a08f0ee1d234f4f83419dd46fe58ccef", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk2ZWVkODYyYTA4ZjBlZTFkMjM0ZjRmODM0MTlkZDQ2ZmU1OGNjZWY=", "commit": {"author": {"name": "Michael Lamparski", "email": "diagonaldevice@gmail.com", "date": "2018-02-07T14:31:22Z"}, "committer": {"name": "Michael Lamparski", "email": "diagonaldevice@gmail.com", "date": "2018-02-07T14:36:20Z"}, "message": "libcore/libstd: fix commas in macro_rules! macros\n\nBREAKING CHANGE: (or perhaps, *bugfix*)\n\nIn #![no_std] applications, the following calls to `panic!` used\nto behave differently; they now behave the same.\n\nOld behavior:\n\n    panic!(\"{{\");   // panics with \"{{\"\n    panic!(\"{{\",);  // panics with \"{\"\n\nNew behavior:\n\n    panic!(\"{{\");   // panics with \"{{\"\n    panic!(\"{{\",);  // panics with \"{{\"\n\nThis only affects calls to `panic!` (and by proxy `assert`\nand `debug_assert`) with a single string literal followed by\na trailing comma, and only in `#![no_std]` applications.", "tree": {"sha": "9cf1209903f98f6a590bd44d7e089d15c767436f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9cf1209903f98f6a590bd44d7e089d15c767436f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/96eed862a08f0ee1d234f4f83419dd46fe58ccef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/96eed862a08f0ee1d234f4f83419dd46fe58ccef", "html_url": "https://github.com/rust-lang/rust/commit/96eed862a08f0ee1d234f4f83419dd46fe58ccef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/96eed862a08f0ee1d234f4f83419dd46fe58ccef/comments", "author": {"login": "ExpHP", "id": 1411280, "node_id": "MDQ6VXNlcjE0MTEyODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1411280?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ExpHP", "html_url": "https://github.com/ExpHP", "followers_url": "https://api.github.com/users/ExpHP/followers", "following_url": "https://api.github.com/users/ExpHP/following{/other_user}", "gists_url": "https://api.github.com/users/ExpHP/gists{/gist_id}", "starred_url": "https://api.github.com/users/ExpHP/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ExpHP/subscriptions", "organizations_url": "https://api.github.com/users/ExpHP/orgs", "repos_url": "https://api.github.com/users/ExpHP/repos", "events_url": "https://api.github.com/users/ExpHP/events{/privacy}", "received_events_url": "https://api.github.com/users/ExpHP/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ExpHP", "id": 1411280, "node_id": "MDQ6VXNlcjE0MTEyODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1411280?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ExpHP", "html_url": "https://github.com/ExpHP", "followers_url": "https://api.github.com/users/ExpHP/followers", "following_url": "https://api.github.com/users/ExpHP/following{/other_user}", "gists_url": "https://api.github.com/users/ExpHP/gists{/gist_id}", "starred_url": "https://api.github.com/users/ExpHP/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ExpHP/subscriptions", "organizations_url": "https://api.github.com/users/ExpHP/orgs", "repos_url": "https://api.github.com/users/ExpHP/repos", "events_url": "https://api.github.com/users/ExpHP/events{/privacy}", "received_events_url": "https://api.github.com/users/ExpHP/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5fa97c35da2f0eeda4321da7fb5933490b798d79", "url": "https://api.github.com/repos/rust-lang/rust/commits/5fa97c35da2f0eeda4321da7fb5933490b798d79", "html_url": "https://github.com/rust-lang/rust/commit/5fa97c35da2f0eeda4321da7fb5933490b798d79"}], "stats": {"total": 20, "additions": 18, "deletions": 2}, "files": [{"sha": "c12edaf0b29a09aa188b4f387b63a9a8e3b73fe2", "filename": "src/libcore/macros.rs", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/96eed862a08f0ee1d234f4f83419dd46fe58ccef/src%2Flibcore%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96eed862a08f0ee1d234f4f83419dd46fe58ccef/src%2Flibcore%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmacros.rs?ref=96eed862a08f0ee1d234f4f83419dd46fe58ccef", "patch": "@@ -19,7 +19,10 @@ macro_rules! panic {\n     ($msg:expr) => ({\n         $crate::panicking::panic(&($msg, file!(), line!(), __rust_unstable_column!()))\n     });\n-    ($fmt:expr, $($arg:tt)*) => ({\n+    ($msg:expr,) => (\n+        panic!($msg)\n+    );\n+    ($fmt:expr, $($arg:tt)+) => ({\n         $crate::panicking::panic_fmt(format_args!($fmt, $($arg)*),\n                                      &(file!(), line!(), __rust_unstable_column!()))\n     });\n@@ -79,6 +82,9 @@ macro_rules! assert {\n             panic!(concat!(\"assertion failed: \", stringify!($cond)))\n         }\n     );\n+    ($cond:expr,) => (\n+        assert!($cond)\n+    );\n     ($cond:expr, $($arg:tt)+) => (\n         if !$cond {\n             panic!($($arg)+)\n@@ -359,7 +365,8 @@ macro_rules! try {\n         $crate::result::Result::Err(err) => {\n             return $crate::result::Result::Err($crate::convert::From::from(err))\n         }\n-    })\n+    });\n+    ($expr:expr,) => (try!($expr));\n }\n \n /// Write formatted data into a buffer.\n@@ -456,6 +463,9 @@ macro_rules! writeln {\n     ($dst:expr) => (\n         write!($dst, \"\\n\")\n     );\n+    ($dst:expr,) => (\n+        writeln!($dst)\n+    );\n     ($dst:expr, $fmt:expr) => (\n         write!($dst, concat!($fmt, \"\\n\"))\n     );\n@@ -524,6 +534,9 @@ macro_rules! unreachable {\n     ($msg:expr) => ({\n         unreachable!(\"{}\", $msg)\n     });\n+    ($msg:expr,) => ({\n+        unreachable!($msg)\n+    });\n     ($fmt:expr, $($arg:tt)*) => ({\n         panic!(concat!(\"internal error: entered unreachable code: \", $fmt), $($arg)*)\n     });"}, {"sha": "5a01674a3d0a0a2bae94706191cccfab43493eaf", "filename": "src/libstd/macros.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/96eed862a08f0ee1d234f4f83419dd46fe58ccef/src%2Flibstd%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96eed862a08f0ee1d234f4f83419dd46fe58ccef/src%2Flibstd%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fmacros.rs?ref=96eed862a08f0ee1d234f4f83419dd46fe58ccef", "patch": "@@ -68,6 +68,9 @@ macro_rules! panic {\n     ($msg:expr) => ({\n         $crate::rt::begin_panic($msg, &(file!(), line!(), __rust_unstable_column!()))\n     });\n+    ($msg:expr,) => ({\n+        panic!($msg)\n+    });\n     ($fmt:expr, $($arg:tt)+) => ({\n         $crate::rt::begin_panic_fmt(&format_args!($fmt, $($arg)+),\n                                     &(file!(), line!(), __rust_unstable_column!()))"}]}