{"sha": "a6ece56152d8eb11e049e9fcce147b2859e12c92", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE2ZWNlNTYxNTJkOGViMTFlMDQ5ZTlmY2NlMTQ3YjI4NTllMTJjOTI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-08-03T19:48:54Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-08-03T19:48:54Z"}, "message": "Auto merge of #86400 - FabianWolff:issue-85735, r=estebank\n\nRemove invalid suggestion involving `Fn` trait bound\n\nThis pull request closes #85735. The actual issue is a duplicate of #21974, but #85735 contains a further problem, which is an invalid suggestion if `Fn`/`FnMut`/`FnOnce` trait bounds are involved: The suggestion code checks whether the trait bound ends with `>` to determine whether it has any generic arguments, but the `Fn*` traits have a special syntax for generic arguments that doesn't involve angle brackets. The example given in #85735:\n```rust\ntrait Foo {}\nimpl<'a, 'b, T> Foo for T\nwhere\n    T: FnMut(&'a ()),\n    T: FnMut(&'b ()), {\n\n    }\n```\ncurrently produces:\n```\nerror[E0283]: type annotations needed\n   --> src/lib.rs:4:8\n    |\n4   |       T: FnMut(&'a ()),\n    |          ^^^^^^^^^^^^^ cannot infer type for type parameter `T`\n    |\n    = note: cannot satisfy `T: FnMut<(&'a (),)>`\nhelp: consider specifying the type arguments in the function call\n    |\n4   |     T: FnMut(&'a ())::<Self, Args>,\n    |                     ^^^^^^^^^^^^^^\n\nerror: aborting due to previous error\n```\nwhich is incorrect, because there is no function call, and applying the suggestion would lead to a parse error. With my changes, I get:\n```\nerror[E0283]: type annotations needed\n   --> test.rs:4:8\n    |\n4   |     T: FnMut(&'a ()),\n    |        ^^^^^^^^^^^^^ cannot infer type for type parameter `T`\n    |\n   ::: [...]/library/core/src/ops/function.rs:147:1\n    |\n147 | pub trait FnMut<Args>: FnOnce<Args> {\n    | ----------------------------------- required by this bound in `FnMut`\n    |\n    = note: cannot satisfy `T: FnMut<(&'a (),)>`\n\nerror: aborting due to previous error\n```\ni.e. I have added a check to prevent the invalid suggestion from being issued for `Fn*` bounds, while the underlying issue #21974 remains for now.", "tree": {"sha": "ce256ff211bdefe779b7fbe2a5d7979aedd5e2ba", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ce256ff211bdefe779b7fbe2a5d7979aedd5e2ba"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a6ece56152d8eb11e049e9fcce147b2859e12c92", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a6ece56152d8eb11e049e9fcce147b2859e12c92", "html_url": "https://github.com/rust-lang/rust/commit/a6ece56152d8eb11e049e9fcce147b2859e12c92", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a6ece56152d8eb11e049e9fcce147b2859e12c92/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c6bc102fea9f9274202d0bc55a0fef8a3bc92426", "url": "https://api.github.com/repos/rust-lang/rust/commits/c6bc102fea9f9274202d0bc55a0fef8a3bc92426", "html_url": "https://github.com/rust-lang/rust/commit/c6bc102fea9f9274202d0bc55a0fef8a3bc92426"}, {"sha": "f8c10ff8b7da40868ceb085e7d85d8adcce2c764", "url": "https://api.github.com/repos/rust-lang/rust/commits/f8c10ff8b7da40868ceb085e7d85d8adcce2c764", "html_url": "https://github.com/rust-lang/rust/commit/f8c10ff8b7da40868ceb085e7d85d8adcce2c764"}], "stats": {"total": 30, "additions": 30, "deletions": 0}, "files": [{"sha": "3f713ce3c39145d238864de5bbf11601c37362d0", "filename": "compiler/rustc_trait_selection/src/traits/error_reporting/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a6ece56152d8eb11e049e9fcce147b2859e12c92/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6ece56152d8eb11e049e9fcce147b2859e12c92/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs?ref=a6ece56152d8eb11e049e9fcce147b2859e12c92", "patch": "@@ -1604,6 +1604,7 @@ impl<'a, 'tcx> InferCtxtPrivExt<'tcx> for InferCtxt<'a, 'tcx> {\n                     if generics.params.iter().any(|p| p.name != kw::SelfUpper)\n                         && !snippet.ends_with('>')\n                         && !generics.has_impl_trait()\n+                        && !self.tcx.fn_trait_kind_from_lang_item(*def_id).is_some()\n                     {\n                         // FIXME: To avoid spurious suggestions in functions where type arguments\n                         // where already supplied, we check the snippet to make sure it doesn't"}, {"sha": "16e874ee21e62bbec48d1e884f793946fa2b92a8", "filename": "src/test/ui/traits/issue-85735.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/a6ece56152d8eb11e049e9fcce147b2859e12c92/src%2Ftest%2Fui%2Ftraits%2Fissue-85735.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6ece56152d8eb11e049e9fcce147b2859e12c92/src%2Ftest%2Fui%2Ftraits%2Fissue-85735.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Fissue-85735.rs?ref=a6ece56152d8eb11e049e9fcce147b2859e12c92", "patch": "@@ -0,0 +1,13 @@\n+// Regression test for the invalid suggestion in #85735 (the\n+// underlying issue #21974 still exists here).\n+\n+trait Foo {}\n+impl<'a, 'b, T> Foo for T\n+where\n+    T: FnMut(&'a ()),\n+    //~^ ERROR: type annotations needed [E0283]\n+    T: FnMut(&'b ()),\n+{\n+}\n+\n+fn main() {}"}, {"sha": "8c958e3844cbed76e9d88d71336d7fd2d907e866", "filename": "src/test/ui/traits/issue-85735.stderr", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/a6ece56152d8eb11e049e9fcce147b2859e12c92/src%2Ftest%2Fui%2Ftraits%2Fissue-85735.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a6ece56152d8eb11e049e9fcce147b2859e12c92/src%2Ftest%2Fui%2Ftraits%2Fissue-85735.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Fissue-85735.stderr?ref=a6ece56152d8eb11e049e9fcce147b2859e12c92", "patch": "@@ -0,0 +1,16 @@\n+error[E0283]: type annotations needed\n+  --> $DIR/issue-85735.rs:7:8\n+   |\n+LL |     T: FnMut(&'a ()),\n+   |        ^^^^^^^^^^^^^ cannot infer type for type parameter `T`\n+   | \n+  ::: $SRC_DIR/core/src/ops/function.rs:LL:COL\n+   |\n+LL | pub trait FnMut<Args>: FnOnce<Args> {\n+   | ----------------------------------- required by this bound in `FnMut`\n+   |\n+   = note: cannot satisfy `T: FnMut<(&'a (),)>`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0283`."}]}