{"sha": "1c0561aca6a044dc56038d171ce8610ceec6ccb2", "node_id": "C_kwDOAAsO6NoAKDFjMDU2MWFjYTZhMDQ0ZGM1NjAzOGQxNzFjZTg2MTBjZWVjNmNjYjI", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-09-01T19:37:09Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-09-01T19:37:09Z"}, "message": "Rollup merge of #101072 - tmandry:llvm-is-vanilla, r=Mark-Simulacrum\n\nbootstrap: Add llvm-has-rust-patches target option\n\nThis is so you can check out an upstream commit in src/llvm-project and\nhave everything just work.\n\nThis simplifies the logic in `is_rust_llvm` a bit; it doesn't need to\ncheck for download-ci-llvm because we would have already errored if both\nthat and llvm-config were specified on the host platform.", "tree": {"sha": "0d68df0068f975672b482f5561e7084a370076b1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0d68df0068f975672b482f5561e7084a370076b1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1c0561aca6a044dc56038d171ce8610ceec6ccb2", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjEQnlCRBK7hj4Ov3rIwAAJaoIAAsPhxFqrzB+YCEiKkFIzEAB\nVGAyE44CuQ0D3mMr1+HPPACFcu0S+RIgRuxkT2dZuDYb64oMlMEoul4ETMgrm6M7\n4K0Sp7+w1f36Ydsmggj0xdcTY0WaYiH9qzuKn64uOK1abx5T785WXYpQ5OUCBWv9\nOK7JLKED2O2uOcsjybNfCvOilKoyAsIVnzo+0o7vMjW2IkM/OLxCOmiqm8h4nvVv\nOaicNhBmuVRKnFCY/wmFkYSpqG6GJJzmiov/H1V5ICX+2N8Ce7HPJiw/649WPmZ2\nigeDSrvhl2tA1YITqT0jsHfjEoGNESfdewyThwTJjC2m1LWeVyCPcvvWdFleYOc=\n=B6Cv\n-----END PGP SIGNATURE-----\n", "payload": "tree 0d68df0068f975672b482f5561e7084a370076b1\nparent b05f97d5941bed7d564933716a4f4af8db1c901c\nparent 73958fdf14d965eac2148991af99f0e0ad0c97ad\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1662061029 +0200\ncommitter GitHub <noreply@github.com> 1662061029 +0200\n\nRollup merge of #101072 - tmandry:llvm-is-vanilla, r=Mark-Simulacrum\n\nbootstrap: Add llvm-has-rust-patches target option\n\nThis is so you can check out an upstream commit in src/llvm-project and\nhave everything just work.\n\nThis simplifies the logic in `is_rust_llvm` a bit; it doesn't need to\ncheck for download-ci-llvm because we would have already errored if both\nthat and llvm-config were specified on the host platform.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1c0561aca6a044dc56038d171ce8610ceec6ccb2", "html_url": "https://github.com/rust-lang/rust/commit/1c0561aca6a044dc56038d171ce8610ceec6ccb2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1c0561aca6a044dc56038d171ce8610ceec6ccb2/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b05f97d5941bed7d564933716a4f4af8db1c901c", "url": "https://api.github.com/repos/rust-lang/rust/commits/b05f97d5941bed7d564933716a4f4af8db1c901c", "html_url": "https://github.com/rust-lang/rust/commit/b05f97d5941bed7d564933716a4f4af8db1c901c"}, {"sha": "73958fdf14d965eac2148991af99f0e0ad0c97ad", "url": "https://api.github.com/repos/rust-lang/rust/commits/73958fdf14d965eac2148991af99f0e0ad0c97ad", "html_url": "https://github.com/rust-lang/rust/commit/73958fdf14d965eac2148991af99f0e0ad0c97ad"}], "stats": {"total": 20, "additions": 15, "deletions": 5}, "files": [{"sha": "37972532b361429f281f8d52f34ea4d1ca621540", "filename": ".gitignore", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1c0561aca6a044dc56038d171ce8610ceec6ccb2/.gitignore", "raw_url": "https://github.com/rust-lang/rust/raw/1c0561aca6a044dc56038d171ce8610ceec6ccb2/.gitignore", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.gitignore?ref=1c0561aca6a044dc56038d171ce8610ceec6ccb2", "patch": "@@ -46,6 +46,7 @@ no_llvm_build\n /dist/\n /unicode-downloads\n /target\n+/src/bootstrap/target\n /src/tools/x/target\n # Created by default with `src/ci/docker/run.sh`\n /obj/"}, {"sha": "a967d881b029b7facb6af929d2d18c3fc6bc6d93", "filename": "config.toml.example", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1c0561aca6a044dc56038d171ce8610ceec6ccb2/config.toml.example", "raw_url": "https://github.com/rust-lang/rust/raw/1c0561aca6a044dc56038d171ce8610ceec6ccb2/config.toml.example", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/config.toml.example?ref=1c0561aca6a044dc56038d171ce8610ceec6ccb2", "patch": "@@ -666,6 +666,10 @@ changelog-seen = 2\n # target.\n #llvm-config = <none> (path)\n \n+# Override detection of whether this is a Rust-patched LLVM. This would be used\n+# in conjunction with either an llvm-config or build.submodules = false.\n+#llvm-has-rust-patches = if llvm-config { false } else { true }\n+\n # Normally the build system can find LLVM's FileCheck utility, but if\n # not, you can specify an explicit file name for it.\n #llvm-filecheck = \"/path/to/llvm-version/bin/FileCheck\""}, {"sha": "7c062460c4f16e8eb21475c0e5da443bbc015f64", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1c0561aca6a044dc56038d171ce8610ceec6ccb2/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c0561aca6a044dc56038d171ce8610ceec6ccb2/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=1c0561aca6a044dc56038d171ce8610ceec6ccb2", "patch": "@@ -388,6 +388,7 @@ impl PartialEq<&str> for TargetSelection {\n pub struct Target {\n     /// Some(path to llvm-config) if using an external LLVM.\n     pub llvm_config: Option<PathBuf>,\n+    pub llvm_has_rust_patches: Option<bool>,\n     /// Some(path to FileCheck) if one was specified.\n     pub llvm_filecheck: Option<PathBuf>,\n     pub llvm_libunwind: Option<LlvmLibunwind>,\n@@ -733,6 +734,7 @@ define_config! {\n         default_linker: Option<PathBuf> = \"default-linker\",\n         linker: Option<String> = \"linker\",\n         llvm_config: Option<String> = \"llvm-config\",\n+        llvm_has_rust_patches: Option<bool> = \"llvm-has-rust-patches\",\n         llvm_filecheck: Option<String> = \"llvm-filecheck\",\n         llvm_libunwind: Option<String> = \"llvm-libunwind\",\n         android_ndk: Option<String> = \"android-ndk\",\n@@ -1109,6 +1111,7 @@ impl Config {\n                 if let Some(ref s) = cfg.llvm_config {\n                     target.llvm_config = Some(config.src.join(s));\n                 }\n+                target.llvm_has_rust_patches = cfg.llvm_has_rust_patches;\n                 if let Some(ref s) = cfg.llvm_filecheck {\n                     target.llvm_filecheck = Some(config.src.join(s));\n                 }"}, {"sha": "9336f958cf28ae2c74d2d6de244108422b62dc80", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/1c0561aca6a044dc56038d171ce8610ceec6ccb2/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c0561aca6a044dc56038d171ce8610ceec6ccb2/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=1c0561aca6a044dc56038d171ce8610ceec6ccb2", "patch": "@@ -112,6 +112,7 @@ use std::path::{Path, PathBuf};\n use std::process::Command;\n use std::str;\n \n+use config::Target;\n use filetime::FileTime;\n use once_cell::sync::OnceCell;\n \n@@ -839,12 +840,13 @@ impl Build {\n     ///\n     /// If no custom `llvm-config` was specified then Rust's llvm will be used.\n     fn is_rust_llvm(&self, target: TargetSelection) -> bool {\n-        if self.config.llvm_from_ci && target == self.config.build {\n-            return true;\n-        }\n-\n         match self.config.target_config.get(&target) {\n-            Some(ref c) => c.llvm_config.is_none(),\n+            Some(Target { llvm_has_rust_patches: Some(patched), .. }) => *patched,\n+            Some(Target { llvm_config, .. }) => {\n+                // If the user set llvm-config we assume Rust is not patched,\n+                // but first check to see if it was configured by llvm-from-ci.\n+                (self.config.llvm_from_ci && target == self.config.build) || llvm_config.is_none()\n+            }\n             None => true,\n         }\n     }"}]}