{"sha": "308153563bf008ab3cadec9148c4930521189844", "node_id": "C_kwDOAAsO6NoAKDMwODE1MzU2M2JmMDA4YWIzY2FkZWM5MTQ4YzQ5MzA1MjExODk4NDQ", "commit": {"author": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-09-12T03:30:15Z"}, "committer": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-09-12T03:44:29Z"}, "message": "Remove unused span argument from `visit_name`.", "tree": {"sha": "a0d3caceb773f7289289772ce0886e7d3cc71c1a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a0d3caceb773f7289289772ce0886e7d3cc71c1a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/308153563bf008ab3cadec9148c4930521189844", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/308153563bf008ab3cadec9148c4930521189844", "html_url": "https://github.com/rust-lang/rust/commit/308153563bf008ab3cadec9148c4930521189844", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/308153563bf008ab3cadec9148c4930521189844/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f6005c6b89e1d4752add58a49a3e84884a513022", "url": "https://api.github.com/repos/rust-lang/rust/commits/f6005c6b89e1d4752add58a49a3e84884a513022", "html_url": "https://github.com/rust-lang/rust/commit/f6005c6b89e1d4752add58a49a3e84884a513022"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "23b51ec2d08494e1b5deedb1699689fd3caf3c67", "filename": "clippy_utils/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/308153563bf008ab3cadec9148c4930521189844/clippy_utils%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/308153563bf008ab3cadec9148c4930521189844/clippy_utils%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Flib.rs?ref=308153563bf008ab3cadec9148c4930521189844", "patch": "@@ -1121,7 +1121,7 @@ pub struct ContainsName {\n }\n \n impl<'tcx> Visitor<'tcx> for ContainsName {\n-    fn visit_name(&mut self, _: Span, name: Symbol) {\n+    fn visit_name(&mut self, name: Symbol) {\n         if self.name == name {\n             self.result = true;\n         }"}]}