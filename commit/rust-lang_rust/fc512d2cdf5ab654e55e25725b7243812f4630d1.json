{"sha": "fc512d2cdf5ab654e55e25725b7243812f4630d1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZjNTEyZDJjZGY1YWI2NTRlNTVlMjU3MjViNzI0MzgxMmY0NjMwZDE=", "commit": {"author": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2019-07-04T16:21:06Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-10-11T08:43:54Z"}, "message": "More descriptive variable name", "tree": {"sha": "d69c2d5ca1f095ecebce42748223e5859873d9e7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d69c2d5ca1f095ecebce42748223e5859873d9e7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fc512d2cdf5ab654e55e25725b7243812f4630d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fc512d2cdf5ab654e55e25725b7243812f4630d1", "html_url": "https://github.com/rust-lang/rust/commit/fc512d2cdf5ab654e55e25725b7243812f4630d1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fc512d2cdf5ab654e55e25725b7243812f4630d1/comments", "author": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bf25a9c82fb9d78447da885eb70d7234d135ecd5", "url": "https://api.github.com/repos/rust-lang/rust/commits/bf25a9c82fb9d78447da885eb70d7234d135ecd5", "html_url": "https://github.com/rust-lang/rust/commit/bf25a9c82fb9d78447da885eb70d7234d135ecd5"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "ea27efcd0fbcd857616fd10a300d154e5b75b13a", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fc512d2cdf5ab654e55e25725b7243812f4630d1/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc512d2cdf5ab654e55e25725b7243812f4630d1/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=fc512d2cdf5ab654e55e25725b7243812f4630d1", "patch": "@@ -1398,8 +1398,8 @@ fn check_union_fields(tcx: TyCtxt<'_>, _: Span, item_def_id: DefId) -> bool {\n     if !tcx.features().untagged_unions {\n         return true;\n     }\n-    let t = tcx.type_of(item_def_id);\n-    if let ty::Adt(def, substs) = t.sty {\n+    let item_type = tcx.type_of(item_def_id);\n+    if let ty::Adt(def, substs) = item_type.sty {\n         if def.is_union() {\n             let fields = &def.non_enum_variant().fields;\n             for field in fields {"}]}