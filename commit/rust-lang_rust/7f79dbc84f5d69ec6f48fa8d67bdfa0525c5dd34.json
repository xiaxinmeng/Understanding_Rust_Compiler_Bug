{"sha": "7f79dbc84f5d69ec6f48fa8d67bdfa0525c5dd34", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdmNzlkYmM4NGY1ZDY5ZWM2ZjQ4ZmE4ZDY3YmRmYTA1MjVjNWRkMzQ=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-09-02T15:11:22Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-09-02T15:11:22Z"}, "message": "Merge #5930\n\n5930: Migrate to the latest Semantic Tokens Proposal for LSP 3.16 r=matklad a=kjeremy\n\nThis stabilizes call hierarchy and semantic tokens features on the client side and changes the server-side semantic tokens protocol to match the latest proposal for 3.16.\r\n\r\nThe server-side change will break clients depending on the earlier semantic tokens draft.\r\n\r\nFixes #4942 \n\nCo-authored-by: kjeremy <kjeremy@gmail.com>", "tree": {"sha": "90d1912ea279c6c76249320a9a750b383eda2d36", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/90d1912ea279c6c76249320a9a750b383eda2d36"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7f79dbc84f5d69ec6f48fa8d67bdfa0525c5dd34", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfT7YaCRBK7hj4Ov3rIwAAdHIIAGJW95m/w168tPrPsvl1IeZN\n0/O17P4tAfLr5TGaOyjgViCFA2sUUkEUZxUldtN7EujeF7c9ZRoxHSUogj6u2M/X\nGQswd60ueRCWTDGeAY3s8GFrb9lFrYDzEFGBgawAKwnTm1NzeaFp2XPZ09v0PZdS\n2ETKmQZknrtQf4QvGUgr4NYGZBhUQ/cnA8UNgSATrCvdt17brjutRdqoPO8lnztW\nW8wZymIwLfy+HXSIrWygydY8tNbfKx8J0TZC4w8xMv5zVe+9C+LSO9+00XcCIsor\ndCIJ5doN2D4cxI4toUR6XR8PiqOyuwWIA7SaEYFgrFPJef9xoNDy1v8/BGNUCsQ=\n=yJXv\n-----END PGP SIGNATURE-----\n", "payload": "tree 90d1912ea279c6c76249320a9a750b383eda2d36\nparent a2e8e513e4907da2662dcec12c7e9d262873a664\nparent 36692bdffa59accee75e34647d83cbd8190b7906\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1599059482 +0000\ncommitter GitHub <noreply@github.com> 1599059482 +0000\n\nMerge #5930\n\n5930: Migrate to the latest Semantic Tokens Proposal for LSP 3.16 r=matklad a=kjeremy\n\nThis stabilizes call hierarchy and semantic tokens features on the client side and changes the server-side semantic tokens protocol to match the latest proposal for 3.16.\r\n\r\nThe server-side change will break clients depending on the earlier semantic tokens draft.\r\n\r\nFixes #4942 \n\nCo-authored-by: kjeremy <kjeremy@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7f79dbc84f5d69ec6f48fa8d67bdfa0525c5dd34", "html_url": "https://github.com/rust-lang/rust/commit/7f79dbc84f5d69ec6f48fa8d67bdfa0525c5dd34", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7f79dbc84f5d69ec6f48fa8d67bdfa0525c5dd34/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a2e8e513e4907da2662dcec12c7e9d262873a664", "url": "https://api.github.com/repos/rust-lang/rust/commits/a2e8e513e4907da2662dcec12c7e9d262873a664", "html_url": "https://github.com/rust-lang/rust/commit/a2e8e513e4907da2662dcec12c7e9d262873a664"}, {"sha": "36692bdffa59accee75e34647d83cbd8190b7906", "url": "https://api.github.com/repos/rust-lang/rust/commits/36692bdffa59accee75e34647d83cbd8190b7906", "html_url": "https://github.com/rust-lang/rust/commit/36692bdffa59accee75e34647d83cbd8190b7906"}], "stats": {"total": 112, "additions": 51, "deletions": 61}, "files": [{"sha": "5b93841491b44c52f4e05603c61378aa5a999acb", "filename": "Cargo.lock", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7f79dbc84f5d69ec6f48fa8d67bdfa0525c5dd34/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/7f79dbc84f5d69ec6f48fa8d67bdfa0525c5dd34/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=7f79dbc84f5d69ec6f48fa8d67bdfa0525c5dd34", "patch": "@@ -778,9 +778,9 @@ dependencies = [\n \n [[package]]\n name = \"lsp-types\"\n-version = \"0.79.0\"\n+version = \"0.80.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"7f1f86677fdbe8df5f88b99131b1424e50aad27bbe3e5900d221bc414bd72e9b\"\n+checksum = \"f4265e2715bdacbb4dad029fce525e420cd66dc0af24ff9cb996a8ab48ac92ef\"\n dependencies = [\n  \"base64\",\n  \"bitflags\","}, {"sha": "8db0b0d72f1ea051b79767247769d103899ac079", "filename": "crates/rust-analyzer/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f79dbc84f5d69ec6f48fa8d67bdfa0525c5dd34/crates%2Frust-analyzer%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/7f79dbc84f5d69ec6f48fa8d67bdfa0525c5dd34/crates%2Frust-analyzer%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2FCargo.toml?ref=7f79dbc84f5d69ec6f48fa8d67bdfa0525c5dd34", "patch": "@@ -21,7 +21,7 @@ env_logger = { version = \"0.7.1\", default-features = false }\n itertools = \"0.9.0\"\n jod-thread = \"0.1.0\"\n log = \"0.4.8\"\n-lsp-types = { version = \"0.79.0\", features = [\"proposed\"] }\n+lsp-types = { version = \"0.80.0\", features = [\"proposed\"] }\n parking_lot = \"0.11.0\"\n pico-args = \"0.3.1\"\n oorandom = \"11.1.2\""}, {"sha": "de4bc281335ef805ae7c7f4618efece42abe49ec", "filename": "crates/rust-analyzer/src/caps.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7f79dbc84f5d69ec6f48fa8d67bdfa0525c5dd34/crates%2Frust-analyzer%2Fsrc%2Fcaps.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f79dbc84f5d69ec6f48fa8d67bdfa0525c5dd34/crates%2Frust-analyzer%2Fsrc%2Fcaps.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fcaps.rs?ref=7f79dbc84f5d69ec6f48fa8d67bdfa0525c5dd34", "patch": "@@ -6,7 +6,7 @@ use lsp_types::{\n     CodeActionProviderCapability, CodeLensOptions, CompletionOptions,\n     DocumentOnTypeFormattingOptions, FoldingRangeProviderCapability, HoverProviderCapability,\n     ImplementationProviderCapability, RenameOptions, RenameProviderCapability, SaveOptions,\n-    SelectionRangeProviderCapability, SemanticTokensDocumentProvider, SemanticTokensLegend,\n+    SelectionRangeProviderCapability, SemanticTokensFullOptions, SemanticTokensLegend,\n     SemanticTokensOptions, ServerCapabilities, SignatureHelpOptions, TextDocumentSyncCapability,\n     TextDocumentSyncKind, TextDocumentSyncOptions, TypeDefinitionProviderCapability,\n     WorkDoneProgressOptions,\n@@ -76,10 +76,8 @@ pub fn server_capabilities(client_caps: &ClientCapabilities) -> ServerCapabiliti\n                     token_modifiers: semantic_tokens::SUPPORTED_MODIFIERS.to_vec(),\n                 },\n \n-                document_provider: Some(SemanticTokensDocumentProvider::Edits {\n-                    edits: Some(true),\n-                }),\n-                range_provider: Some(true),\n+                full: Some(SemanticTokensFullOptions::Delta { delta: Some(true) }),\n+                range: Some(true),\n                 work_done_progress_options: Default::default(),\n             }\n             .into(),"}, {"sha": "64cb4d96cbb5d3047fda15b769224cc402380920", "filename": "crates/rust-analyzer/src/handlers.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/7f79dbc84f5d69ec6f48fa8d67bdfa0525c5dd34/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f79dbc84f5d69ec6f48fa8d67bdfa0525c5dd34/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs?ref=7f79dbc84f5d69ec6f48fa8d67bdfa0525c5dd34", "patch": "@@ -17,8 +17,8 @@ use lsp_types::{\n     CallHierarchyOutgoingCall, CallHierarchyOutgoingCallsParams, CallHierarchyPrepareParams,\n     CodeActionKind, CodeLens, Command, CompletionItem, Diagnostic, DocumentFormattingParams,\n     DocumentHighlight, DocumentSymbol, FoldingRange, FoldingRangeParams, HoverContents, Location,\n-    Position, PrepareRenameResponse, Range, RenameParams, SemanticTokensEditResult,\n-    SemanticTokensEditsParams, SemanticTokensParams, SemanticTokensRangeParams,\n+    Position, PrepareRenameResponse, Range, RenameParams, SemanticTokensDeltaParams,\n+    SemanticTokensFullDeltaResult, SemanticTokensParams, SemanticTokensRangeParams,\n     SemanticTokensRangeResult, SemanticTokensResult, SymbolInformation, SymbolTag,\n     TextDocumentIdentifier, Url, WorkspaceEdit,\n };\n@@ -1171,11 +1171,11 @@ pub(crate) fn handle_call_hierarchy_outgoing(\n     Ok(Some(res))\n }\n \n-pub(crate) fn handle_semantic_tokens(\n+pub(crate) fn handle_semantic_tokens_full(\n     snap: GlobalStateSnapshot,\n     params: SemanticTokensParams,\n ) -> Result<Option<SemanticTokensResult>> {\n-    let _p = profile::span(\"handle_semantic_tokens\");\n+    let _p = profile::span(\"handle_semantic_tokens_full\");\n \n     let file_id = from_proto::file_id(&snap, &params.text_document.uri)?;\n     let text = snap.analysis.file_text(file_id)?;\n@@ -1190,11 +1190,11 @@ pub(crate) fn handle_semantic_tokens(\n     Ok(Some(semantic_tokens.into()))\n }\n \n-pub(crate) fn handle_semantic_tokens_edits(\n+pub(crate) fn handle_semantic_tokens_full_delta(\n     snap: GlobalStateSnapshot,\n-    params: SemanticTokensEditsParams,\n-) -> Result<Option<SemanticTokensEditResult>> {\n-    let _p = profile::span(\"handle_semantic_tokens_edits\");\n+    params: SemanticTokensDeltaParams,\n+) -> Result<Option<SemanticTokensFullDeltaResult>> {\n+    let _p = profile::span(\"handle_semantic_tokens_full_delta\");\n \n     let file_id = from_proto::file_id(&snap, &params.text_document.uri)?;\n     let text = snap.analysis.file_text(file_id)?;\n@@ -1209,9 +1209,9 @@ pub(crate) fn handle_semantic_tokens_edits(\n \n     if let Some(prev_id) = &cached_tokens.result_id {\n         if *prev_id == params.previous_result_id {\n-            let edits = to_proto::semantic_token_edits(&cached_tokens, &semantic_tokens);\n+            let delta = to_proto::semantic_token_delta(&cached_tokens, &semantic_tokens);\n             *cached_tokens = semantic_tokens;\n-            return Ok(Some(edits.into()));\n+            return Ok(Some(delta.into()));\n         }\n     }\n "}, {"sha": "8d3132581d461e0019849f2321969092bea25670", "filename": "crates/rust-analyzer/src/main_loop.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7f79dbc84f5d69ec6f48fa8d67bdfa0525c5dd34/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f79dbc84f5d69ec6f48fa8d67bdfa0525c5dd34/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs?ref=7f79dbc84f5d69ec6f48fa8d67bdfa0525c5dd34", "patch": "@@ -407,9 +407,11 @@ impl GlobalState {\n             .on::<lsp_types::request::CallHierarchyOutgoingCalls>(\n                 handlers::handle_call_hierarchy_outgoing,\n             )?\n-            .on::<lsp_types::request::SemanticTokensRequest>(handlers::handle_semantic_tokens)?\n-            .on::<lsp_types::request::SemanticTokensEditsRequest>(\n-                handlers::handle_semantic_tokens_edits,\n+            .on::<lsp_types::request::SemanticTokensFullRequest>(\n+                handlers::handle_semantic_tokens_full,\n+            )?\n+            .on::<lsp_types::request::SemanticTokensFullDeltaRequest>(\n+                handlers::handle_semantic_tokens_full_delta,\n             )?\n             .on::<lsp_types::request::SemanticTokensRangeRequest>(\n                 handlers::handle_semantic_tokens_range,"}, {"sha": "a6c4d6099bcd5d5935eaa94c1240626ac42cf122", "filename": "crates/rust-analyzer/src/semantic_tokens.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7f79dbc84f5d69ec6f48fa8d67bdfa0525c5dd34/crates%2Frust-analyzer%2Fsrc%2Fsemantic_tokens.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f79dbc84f5d69ec6f48fa8d67bdfa0525c5dd34/crates%2Frust-analyzer%2Fsrc%2Fsemantic_tokens.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fsemantic_tokens.rs?ref=7f79dbc84f5d69ec6f48fa8d67bdfa0525c5dd34", "patch": "@@ -24,14 +24,14 @@ macro_rules! define_semantic_token_types {\n             SemanticTokenType::CLASS,\n             SemanticTokenType::INTERFACE,\n             SemanticTokenType::ENUM,\n+            SemanticTokenType::ENUM_MEMBER,\n             SemanticTokenType::TYPE_PARAMETER,\n             SemanticTokenType::FUNCTION,\n             SemanticTokenType::MEMBER,\n             SemanticTokenType::PROPERTY,\n             SemanticTokenType::MACRO,\n             SemanticTokenType::VARIABLE,\n             SemanticTokenType::PARAMETER,\n-            SemanticTokenType::LABEL,\n             $($ident),*\n         ];\n     };\n@@ -41,7 +41,6 @@ define_semantic_token_types![\n     (ATTRIBUTE, \"attribute\"),\n     (BOOLEAN, \"boolean\"),\n     (BUILTIN_TYPE, \"builtinType\"),\n-    (ENUM_MEMBER, \"enumMember\"),\n     (ESCAPE_SEQUENCE, \"escapeSequence\"),\n     (FORMAT_SPECIFIER, \"formatSpecifier\"),\n     (GENERIC, \"generic\"),"}, {"sha": "dcbf837d6594341cb7307a905de57106babeed54", "filename": "crates/rust-analyzer/src/to_proto.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7f79dbc84f5d69ec6f48fa8d67bdfa0525c5dd34/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f79dbc84f5d69ec6f48fa8d67bdfa0525c5dd34/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs?ref=7f79dbc84f5d69ec6f48fa8d67bdfa0525c5dd34", "patch": "@@ -334,13 +334,13 @@ pub(crate) fn semantic_tokens(\n     builder.build()\n }\n \n-pub(crate) fn semantic_token_edits(\n+pub(crate) fn semantic_token_delta(\n     previous: &lsp_types::SemanticTokens,\n     current: &lsp_types::SemanticTokens,\n-) -> lsp_types::SemanticTokensEdits {\n+) -> lsp_types::SemanticTokensDelta {\n     let result_id = current.result_id.clone();\n     let edits = semantic_tokens::diff_tokens(&previous.data, &current.data);\n-    lsp_types::SemanticTokensEdits { result_id, edits }\n+    lsp_types::SemanticTokensDelta { result_id, edits }\n }\n \n fn semantic_token_type_and_modifiers(\n@@ -369,7 +369,7 @@ fn semantic_token_type_and_modifiers(\n             mods |= lsp_types::SemanticTokenModifier::STATIC;\n             lsp_types::SemanticTokenType::VARIABLE\n         }\n-        HighlightTag::EnumVariant => semantic_tokens::ENUM_MEMBER,\n+        HighlightTag::EnumVariant => lsp_types::SemanticTokenType::ENUM_MEMBER,\n         HighlightTag::Macro => lsp_types::SemanticTokenType::MACRO,\n         HighlightTag::ValueParam => lsp_types::SemanticTokenType::PARAMETER,\n         HighlightTag::Local => lsp_types::SemanticTokenType::VARIABLE,"}, {"sha": "63ba4bdf18fdd1b29cdfa8319022e14db81ccd92", "filename": "editors/code/package-lock.json", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/7f79dbc84f5d69ec6f48fa8d67bdfa0525c5dd34/editors%2Fcode%2Fpackage-lock.json", "raw_url": "https://github.com/rust-lang/rust/raw/7f79dbc84f5d69ec6f48fa8d67bdfa0525c5dd34/editors%2Fcode%2Fpackage-lock.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage-lock.json?ref=7f79dbc84f5d69ec6f48fa8d67bdfa0525c5dd34", "patch": "@@ -2409,32 +2409,32 @@\n             }\n         },\n         \"vscode-jsonrpc\": {\n-            \"version\": \"5.1.0-next.1\",\n-            \"resolved\": \"https://registry.npmjs.org/vscode-jsonrpc/-/vscode-jsonrpc-5.1.0-next.1.tgz\",\n-            \"integrity\": \"sha512-mwLDojZkbmpizSJSmp690oa9FB9jig18SIDGZeBCvFc2/LYSRvMm/WwWtMBJuJ1MfFh7rZXfQige4Uje5Z9NzA==\"\n+            \"version\": \"6.0.0-next.5\",\n+            \"resolved\": \"https://registry.npmjs.org/vscode-jsonrpc/-/vscode-jsonrpc-6.0.0-next.5.tgz\",\n+            \"integrity\": \"sha512-IAgsltQPwg/pXOPsdXgbUTCaO9VSKZwirZN5SGtkdYQ/R3VjeC4v00WTVvoNayWMZpoC3O9u0ogqmsKzKhVasQ==\"\n         },\n         \"vscode-languageclient\": {\n-            \"version\": \"7.0.0-next.1\",\n-            \"resolved\": \"https://registry.npmjs.org/vscode-languageclient/-/vscode-languageclient-7.0.0-next.1.tgz\",\n-            \"integrity\": \"sha512-JrjCUhLpQZxQ5VpWpilOHDMhVsn0fdN5jBh1uFNhSr5c2loJvRdr9Km2EuSQOFfOQsBKx0+xvY8PbsypNEcJ6w==\",\n+            \"version\": \"7.0.0-next.9\",\n+            \"resolved\": \"https://registry.npmjs.org/vscode-languageclient/-/vscode-languageclient-7.0.0-next.9.tgz\",\n+            \"integrity\": \"sha512-lFO+rN/i72CM2va6iKXq1lD7pJg8J93KEXf0w0boWVqU+DJhWzLrV3pXl8Xk1nCv//qOAyhlc/nx2KZCTeRF/A==\",\n             \"requires\": {\n                 \"semver\": \"^6.3.0\",\n-                \"vscode-languageserver-protocol\": \"3.16.0-next.2\"\n+                \"vscode-languageserver-protocol\": \"3.16.0-next.7\"\n             }\n         },\n         \"vscode-languageserver-protocol\": {\n-            \"version\": \"3.16.0-next.2\",\n-            \"resolved\": \"https://registry.npmjs.org/vscode-languageserver-protocol/-/vscode-languageserver-protocol-3.16.0-next.2.tgz\",\n-            \"integrity\": \"sha512-atmkGT/W6tF0cx4SaWFYtFs2UeSeC28RPiap9myv2YZTaTCFvTBEPNWrU5QRKfkyM0tbgtGo6T3UCQ8tkDpjzA==\",\n+            \"version\": \"3.16.0-next.7\",\n+            \"resolved\": \"https://registry.npmjs.org/vscode-languageserver-protocol/-/vscode-languageserver-protocol-3.16.0-next.7.tgz\",\n+            \"integrity\": \"sha512-tOjrg+K3RddJ547zpC9/LAgTbzadkPuHlqJFFWIcKjVhiJOh73XyY+Ngcu9wukGaTsuSGjJ0W8rlmwanixa0FQ==\",\n             \"requires\": {\n-                \"vscode-jsonrpc\": \"5.1.0-next.1\",\n-                \"vscode-languageserver-types\": \"3.16.0-next.1\"\n+                \"vscode-jsonrpc\": \"6.0.0-next.5\",\n+                \"vscode-languageserver-types\": \"3.16.0-next.3\"\n             }\n         },\n         \"vscode-languageserver-types\": {\n-            \"version\": \"3.16.0-next.1\",\n-            \"resolved\": \"https://registry.npmjs.org/vscode-languageserver-types/-/vscode-languageserver-types-3.16.0-next.1.tgz\",\n-            \"integrity\": \"sha512-tZFUSbyjUcrh+qQf13ALX4QDdOfDX0cVaBFgy7ktJ0VwS7AW/yRKgGPSxVqqP9OCMNPdqP57O5q47w2pEwfaUg==\"\n+            \"version\": \"3.16.0-next.3\",\n+            \"resolved\": \"https://registry.npmjs.org/vscode-languageserver-types/-/vscode-languageserver-types-3.16.0-next.3.tgz\",\n+            \"integrity\": \"sha512-s/z5ZqSe7VpoXJ6JQcvwRiPPA3nG0nAcJ/HH03zoU6QaFfnkcgPK+HshC3WKPPnC2G08xA0iRB6h7kmyBB5Adg==\"\n         },\n         \"vscode-test\": {\n             \"version\": \"1.4.0\","}, {"sha": "6fc4464dfacb0f85904f2383a88c3aaedd959263", "filename": "editors/code/package.json", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f79dbc84f5d69ec6f48fa8d67bdfa0525c5dd34/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/7f79dbc84f5d69ec6f48fa8d67bdfa0525c5dd34/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=7f79dbc84f5d69ec6f48fa8d67bdfa0525c5dd34", "patch": "@@ -36,7 +36,7 @@\n     },\n     \"dependencies\": {\n         \"node-fetch\": \"^2.6.0\",\n-        \"vscode-languageclient\": \"7.0.0-next.1\"\n+        \"vscode-languageclient\": \"7.0.0-next.9\"\n     },\n     \"devDependencies\": {\n         \"@rollup/plugin-commonjs\": \"^13.0.2\","}, {"sha": "1ba2352ee04e9f437a1ee1b9f5ef2498d1680a43", "filename": "editors/code/src/client.ts", "status": "modified", "additions": 3, "deletions": 12, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/7f79dbc84f5d69ec6f48fa8d67bdfa0525c5dd34/editors%2Fcode%2Fsrc%2Fclient.ts", "raw_url": "https://github.com/rust-lang/rust/raw/7f79dbc84f5d69ec6f48fa8d67bdfa0525c5dd34/editors%2Fcode%2Fsrc%2Fclient.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fclient.ts?ref=7f79dbc84f5d69ec6f48fa8d67bdfa0525c5dd34", "patch": "@@ -1,10 +1,7 @@\n-import * as lc from 'vscode-languageclient';\n+import * as lc from 'vscode-languageclient/node';\n import * as vscode from 'vscode';\n import * as ra from '../src/lsp_ext';\n-import * as Is from 'vscode-languageclient/lib/utils/is';\n-\n-import { CallHierarchyFeature } from 'vscode-languageclient/lib/callHierarchy.proposed';\n-import { SemanticTokensFeature } from 'vscode-languageclient/lib/semanticTokens.proposed';\n+import * as Is from 'vscode-languageclient/lib/common/utils/is';\n import { assert } from './util';\n \n function renderCommand(cmd: ra.CommandLink) {\n@@ -57,7 +54,7 @@ export function createClient(serverPath: string, cwd: string): lc.LanguageClient\n                         return hover;\n                     },\n                     (error) => {\n-                        client.logFailedRequest(lc.HoverRequest.type, error);\n+                        client.handleFailedRequest(lc.HoverRequest.type, error, null);\n                         return Promise.resolve(null);\n                     });\n             },\n@@ -140,12 +137,6 @@ export function createClient(serverPath: string, cwd: string): lc.LanguageClient\n     );\n \n     // To turn on all proposed features use: client.registerProposedFeatures();\n-    // Here we want to enable CallHierarchyFeature and SemanticTokensFeature\n-    // since they are available on stable.\n-    // Note that while these features are stable in vscode their LSP protocol\n-    // implementations are still in the \"proposed\" category for 3.16.\n-    client.registerFeature(new CallHierarchyFeature(client));\n-    client.registerFeature(new SemanticTokensFeature(client));\n     client.registerFeature(new ExperimentalFeatures());\n \n     return client;"}, {"sha": "69f2836ad93b2279da65f911d139eea03ada8bc6", "filename": "editors/code/src/commands.ts", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7f79dbc84f5d69ec6f48fa8d67bdfa0525c5dd34/editors%2Fcode%2Fsrc%2Fcommands.ts", "raw_url": "https://github.com/rust-lang/rust/raw/7f79dbc84f5d69ec6f48fa8d67bdfa0525c5dd34/editors%2Fcode%2Fsrc%2Fcommands.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fcommands.ts?ref=7f79dbc84f5d69ec6f48fa8d67bdfa0525c5dd34", "patch": "@@ -63,7 +63,7 @@ export function memoryUsage(ctx: Ctx): Cmd {\n         provideTextDocumentContent(_uri: vscode.Uri): vscode.ProviderResult<string> {\n             if (!vscode.window.activeTextEditor) return '';\n \n-            return ctx.client.sendRequest(ra.memoryUsage, null).then((mem) => {\n+            return ctx.client.sendRequest(ra.memoryUsage, null).then((mem: any) => {\n                 return 'Per-query memory usage:\\n' + mem + '\\n(note: database has been cleared)';\n             });\n         }\n@@ -121,7 +121,7 @@ export function joinLines(ctx: Ctx): Cmd {\n             textDocument: { uri: editor.document.uri.toString() },\n         });\n         editor.edit((builder) => {\n-            client.protocol2CodeConverter.asTextEdits(items).forEach((edit) => {\n+            client.protocol2CodeConverter.asTextEdits(items).forEach((edit: any) => {\n                 builder.replace(edit.range, edit.newText);\n             });\n         });\n@@ -140,8 +140,8 @@ export function onEnter(ctx: Ctx): Cmd {\n             position: client.code2ProtocolConverter.asPosition(\n                 editor.selection.active,\n             ),\n-        }).catch(_error => {\n-            // client.logFailedRequest(OnEnterRequest.type, error);\n+        }).catch((_error: any) => {\n+            // client.handleFailedRequest(OnEnterRequest.type, error, null);\n             return null;\n         });\n         if (!lcEdits) return false;"}, {"sha": "d39864d330e1de2024303a0a1d3f56a4b8271c7c", "filename": "editors/code/src/ctx.ts", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f79dbc84f5d69ec6f48fa8d67bdfa0525c5dd34/editors%2Fcode%2Fsrc%2Fctx.ts", "raw_url": "https://github.com/rust-lang/rust/raw/7f79dbc84f5d69ec6f48fa8d67bdfa0525c5dd34/editors%2Fcode%2Fsrc%2Fctx.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fctx.ts?ref=7f79dbc84f5d69ec6f48fa8d67bdfa0525c5dd34", "patch": "@@ -1,5 +1,5 @@\n import * as vscode from 'vscode';\n-import * as lc from 'vscode-languageclient';\n+import * as lc from 'vscode-languageclient/node';\n import * as ra from './lsp_ext';\n \n import { Config } from './config';"}, {"sha": "08159b43c3e1ebb62a4ca87b59b666b5c826d74a", "filename": "editors/code/src/util.ts", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f79dbc84f5d69ec6f48fa8d67bdfa0525c5dd34/editors%2Fcode%2Fsrc%2Futil.ts", "raw_url": "https://github.com/rust-lang/rust/raw/7f79dbc84f5d69ec6f48fa8d67bdfa0525c5dd34/editors%2Fcode%2Fsrc%2Futil.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Futil.ts?ref=7f79dbc84f5d69ec6f48fa8d67bdfa0525c5dd34", "patch": "@@ -1,4 +1,4 @@\n-import * as lc from \"vscode-languageclient\";\n+import * as lc from \"vscode-languageclient/node\";\n import * as vscode from \"vscode\";\n import { strict as nativeAssert } from \"assert\";\n import { spawnSync } from \"child_process\";"}]}