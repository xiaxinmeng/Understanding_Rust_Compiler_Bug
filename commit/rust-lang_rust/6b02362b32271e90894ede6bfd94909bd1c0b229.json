{"sha": "6b02362b32271e90894ede6bfd94909bd1c0b229", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZiMDIzNjJiMzIyNzFlOTA4OTRlZGU2YmZkOTQ5MDliZDFjMGIyMjk=", "commit": {"author": {"name": "Kyle Strand", "email": "kyle.strand@rms.com", "date": "2019-08-24T21:58:01Z"}, "committer": {"name": "Kyle Strand", "email": "kyle.strand@rms.com", "date": "2019-08-24T21:58:01Z"}, "message": "Add 'must_use' to all functions 'fn(float) -> float'", "tree": {"sha": "bfbfa9e0d46d3a8ee32562139f6d6c397b8d8fa6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bfbfa9e0d46d3a8ee32562139f6d6c397b8d8fa6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6b02362b32271e90894ede6bfd94909bd1c0b229", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6b02362b32271e90894ede6bfd94909bd1c0b229", "html_url": "https://github.com/rust-lang/rust/commit/6b02362b32271e90894ede6bfd94909bd1c0b229", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6b02362b32271e90894ede6bfd94909bd1c0b229/comments", "author": null, "committer": null, "parents": [{"sha": "eeba189cfb2cfc5c5898513352d4ca8f1df06e05", "url": "https://api.github.com/repos/rust-lang/rust/commits/eeba189cfb2cfc5c5898513352d4ca8f1df06e05", "html_url": "https://github.com/rust-lang/rust/commit/eeba189cfb2cfc5c5898513352d4ca8f1df06e05"}], "stats": {"total": 56, "additions": 56, "deletions": 0}, "files": [{"sha": "d0c64243ee3f5babdaf0ef0c5a357d32f898e632", "filename": "src/libstd/f32.rs", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/6b02362b32271e90894ede6bfd94909bd1c0b229/src%2Flibstd%2Ff32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b02362b32271e90894ede6bfd94909bd1c0b229/src%2Flibstd%2Ff32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ff32.rs?ref=6b02362b32271e90894ede6bfd94909bd1c0b229", "patch": "@@ -40,6 +40,7 @@ impl f32 {\n     /// assert_eq!(g.floor(), 3.0);\n     /// assert_eq!(h.floor(), -4.0);\n     /// ```\n+    #[must_use]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[inline]\n     pub fn floor(self) -> f32 {\n@@ -73,6 +74,7 @@ impl f32 {\n     /// assert_eq!(f.ceil(), 4.0);\n     /// assert_eq!(g.ceil(), 4.0);\n     /// ```\n+    #[must_use]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[inline]\n     pub fn ceil(self) -> f32 {\n@@ -95,6 +97,7 @@ impl f32 {\n     /// assert_eq!(f.round(), 3.0);\n     /// assert_eq!(g.round(), -3.0);\n     /// ```\n+    #[must_use]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[inline]\n     pub fn round(self) -> f32 {\n@@ -114,6 +117,7 @@ impl f32 {\n     /// assert_eq!(g.trunc(), 3.0);\n     /// assert_eq!(h.trunc(), -3.0);\n     /// ```\n+    #[must_use]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[inline]\n     pub fn trunc(self) -> f32 {\n@@ -135,6 +139,7 @@ impl f32 {\n     /// assert!(abs_difference_x <= f32::EPSILON);\n     /// assert!(abs_difference_y <= f32::EPSILON);\n     /// ```\n+    #[must_use]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[inline]\n     pub fn fract(self) -> f32 { self - self.trunc() }\n@@ -158,6 +163,7 @@ impl f32 {\n     ///\n     /// assert!(f32::NAN.abs().is_nan());\n     /// ```\n+    #[must_use]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[inline]\n     pub fn abs(self) -> f32 {\n@@ -182,6 +188,7 @@ impl f32 {\n     ///\n     /// assert!(f32::NAN.signum().is_nan());\n     /// ```\n+    #[must_use]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[inline]\n     pub fn signum(self) -> f32 {\n@@ -367,6 +374,7 @@ impl f32 {\n     /// assert!(abs_difference <= f32::EPSILON);\n     /// assert!(negative.sqrt().is_nan());\n     /// ```\n+    #[must_use]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[inline]\n     pub fn sqrt(self) -> f32 {\n@@ -393,6 +401,7 @@ impl f32 {\n     ///\n     /// assert!(abs_difference <= f32::EPSILON);\n     /// ```\n+    #[must_use]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[inline]\n     pub fn exp(self) -> f32 {\n@@ -417,6 +426,7 @@ impl f32 {\n     ///\n     /// assert!(abs_difference <= f32::EPSILON);\n     /// ```\n+    #[must_use]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[inline]\n     pub fn exp2(self) -> f32 {\n@@ -439,6 +449,7 @@ impl f32 {\n     ///\n     /// assert!(abs_difference <= f32::EPSILON);\n     /// ```\n+    #[must_use]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[inline]\n     pub fn ln(self) -> f32 {\n@@ -485,6 +496,7 @@ impl f32 {\n     ///\n     /// assert!(abs_difference <= f32::EPSILON);\n     /// ```\n+    #[must_use]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[inline]\n     pub fn log2(self) -> f32 {\n@@ -508,6 +520,7 @@ impl f32 {\n     ///\n     /// assert!(abs_difference <= f32::EPSILON);\n     /// ```\n+    #[must_use]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[inline]\n     pub fn log10(self) -> f32 {\n@@ -565,6 +578,7 @@ impl f32 {\n     ///\n     /// assert!(abs_difference <= f32::EPSILON);\n     /// ```\n+    #[must_use]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[inline]\n     pub fn cbrt(self) -> f32 {\n@@ -606,6 +620,7 @@ impl f32 {\n     ///\n     /// assert!(abs_difference <= f32::EPSILON);\n     /// ```\n+    #[must_use]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[inline]\n     pub fn sin(self) -> f32 {\n@@ -629,6 +644,7 @@ impl f32 {\n     ///\n     /// assert!(abs_difference <= f32::EPSILON);\n     /// ```\n+    #[must_use]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[inline]\n     pub fn cos(self) -> f32 {\n@@ -651,6 +667,7 @@ impl f32 {\n     ///\n     /// assert!(abs_difference <= f32::EPSILON);\n     /// ```\n+    #[must_use]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[inline]\n     pub fn tan(self) -> f32 {\n@@ -673,6 +690,7 @@ impl f32 {\n     ///\n     /// assert!(abs_difference <= f32::EPSILON);\n     /// ```\n+    #[must_use]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[inline]\n     pub fn asin(self) -> f32 {\n@@ -695,6 +713,7 @@ impl f32 {\n     ///\n     /// assert!(abs_difference <= f32::EPSILON);\n     /// ```\n+    #[must_use]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[inline]\n     pub fn acos(self) -> f32 {\n@@ -716,6 +735,7 @@ impl f32 {\n     ///\n     /// assert!(abs_difference <= f32::EPSILON);\n     /// ```\n+    #[must_use]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[inline]\n     pub fn atan(self) -> f32 {\n@@ -794,6 +814,7 @@ impl f32 {\n     ///\n     /// assert!(abs_difference <= f32::EPSILON);\n     /// ```\n+    #[must_use]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[inline]\n     pub fn exp_m1(self) -> f32 {\n@@ -815,6 +836,7 @@ impl f32 {\n     ///\n     /// assert!(abs_difference <= f32::EPSILON);\n     /// ```\n+    #[must_use]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[inline]\n     pub fn ln_1p(self) -> f32 {\n@@ -838,6 +860,7 @@ impl f32 {\n     ///\n     /// assert!(abs_difference <= f32::EPSILON);\n     /// ```\n+    #[must_use]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[inline]\n     pub fn sinh(self) -> f32 {\n@@ -861,6 +884,7 @@ impl f32 {\n     /// // Same result\n     /// assert!(abs_difference <= f32::EPSILON);\n     /// ```\n+    #[must_use]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[inline]\n     pub fn cosh(self) -> f32 {\n@@ -884,6 +908,7 @@ impl f32 {\n     ///\n     /// assert!(abs_difference <= f32::EPSILON);\n     /// ```\n+    #[must_use]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[inline]\n     pub fn tanh(self) -> f32 {\n@@ -904,6 +929,7 @@ impl f32 {\n     ///\n     /// assert!(abs_difference <= f32::EPSILON);\n     /// ```\n+    #[must_use]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[inline]\n     pub fn asinh(self) -> f32 {\n@@ -928,6 +954,7 @@ impl f32 {\n     ///\n     /// assert!(abs_difference <= f32::EPSILON);\n     /// ```\n+    #[must_use]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[inline]\n     pub fn acosh(self) -> f32 {\n@@ -951,6 +978,7 @@ impl f32 {\n     ///\n     /// assert!(abs_difference <= 1e-5);\n     /// ```\n+    #[must_use]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[inline]\n     pub fn atanh(self) -> f32 {"}, {"sha": "0878cfd68b48695a0c754072faac2118fa9a5931", "filename": "src/libstd/f64.rs", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/6b02362b32271e90894ede6bfd94909bd1c0b229/src%2Flibstd%2Ff64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b02362b32271e90894ede6bfd94909bd1c0b229/src%2Flibstd%2Ff64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ff64.rs?ref=6b02362b32271e90894ede6bfd94909bd1c0b229", "patch": "@@ -40,6 +40,7 @@ impl f64 {\n     /// assert_eq!(g.floor(), 3.0);\n     /// assert_eq!(h.floor(), -4.0);\n     /// ```\n+    #[must_use]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[inline]\n     pub fn floor(self) -> f64 {\n@@ -57,6 +58,7 @@ impl f64 {\n     /// assert_eq!(f.ceil(), 4.0);\n     /// assert_eq!(g.ceil(), 4.0);\n     /// ```\n+    #[must_use]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[inline]\n     pub fn ceil(self) -> f64 {\n@@ -75,6 +77,7 @@ impl f64 {\n     /// assert_eq!(f.round(), 3.0);\n     /// assert_eq!(g.round(), -3.0);\n     /// ```\n+    #[must_use]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[inline]\n     pub fn round(self) -> f64 {\n@@ -94,6 +97,7 @@ impl f64 {\n     /// assert_eq!(g.trunc(), 3.0);\n     /// assert_eq!(h.trunc(), -3.0);\n     /// ```\n+    #[must_use]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[inline]\n     pub fn trunc(self) -> f64 {\n@@ -113,6 +117,7 @@ impl f64 {\n     /// assert!(abs_difference_x < 1e-10);\n     /// assert!(abs_difference_y < 1e-10);\n     /// ```\n+    #[must_use]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[inline]\n     pub fn fract(self) -> f64 { self - self.trunc() }\n@@ -136,6 +141,7 @@ impl f64 {\n     ///\n     /// assert!(f64::NAN.abs().is_nan());\n     /// ```\n+    #[must_use]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[inline]\n     pub fn abs(self) -> f64 {\n@@ -160,6 +166,7 @@ impl f64 {\n     ///\n     /// assert!(f64::NAN.signum().is_nan());\n     /// ```\n+    #[must_use]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[inline]\n     pub fn signum(self) -> f64 {\n@@ -332,6 +339,7 @@ impl f64 {\n     /// assert!(abs_difference < 1e-10);\n     /// assert!(negative.sqrt().is_nan());\n     /// ```\n+    #[must_use]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[inline]\n     pub fn sqrt(self) -> f64 {\n@@ -356,6 +364,7 @@ impl f64 {\n     ///\n     /// assert!(abs_difference < 1e-10);\n     /// ```\n+    #[must_use]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[inline]\n     pub fn exp(self) -> f64 {\n@@ -374,6 +383,7 @@ impl f64 {\n     ///\n     /// assert!(abs_difference < 1e-10);\n     /// ```\n+    #[must_use]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[inline]\n     pub fn exp2(self) -> f64 {\n@@ -394,6 +404,7 @@ impl f64 {\n     ///\n     /// assert!(abs_difference < 1e-10);\n     /// ```\n+    #[must_use]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[inline]\n     pub fn ln(self) -> f64 {\n@@ -432,6 +443,7 @@ impl f64 {\n     ///\n     /// assert!(abs_difference < 1e-10);\n     /// ```\n+    #[must_use]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[inline]\n     pub fn log2(self) -> f64 {\n@@ -455,6 +467,7 @@ impl f64 {\n     ///\n     /// assert!(abs_difference < 1e-10);\n     /// ```\n+    #[must_use]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[inline]\n     pub fn log10(self) -> f64 {\n@@ -504,6 +517,7 @@ impl f64 {\n     ///\n     /// assert!(abs_difference < 1e-10);\n     /// ```\n+    #[must_use]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[inline]\n     pub fn cbrt(self) -> f64 {\n@@ -543,6 +557,7 @@ impl f64 {\n     ///\n     /// assert!(abs_difference < 1e-10);\n     /// ```\n+    #[must_use]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[inline]\n     pub fn sin(self) -> f64 {\n@@ -562,6 +577,7 @@ impl f64 {\n     ///\n     /// assert!(abs_difference < 1e-10);\n     /// ```\n+    #[must_use]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[inline]\n     pub fn cos(self) -> f64 {\n@@ -580,6 +596,7 @@ impl f64 {\n     ///\n     /// assert!(abs_difference < 1e-14);\n     /// ```\n+    #[must_use]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[inline]\n     pub fn tan(self) -> f64 {\n@@ -602,6 +619,7 @@ impl f64 {\n     ///\n     /// assert!(abs_difference < 1e-10);\n     /// ```\n+    #[must_use]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[inline]\n     pub fn asin(self) -> f64 {\n@@ -624,6 +642,7 @@ impl f64 {\n     ///\n     /// assert!(abs_difference < 1e-10);\n     /// ```\n+    #[must_use]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[inline]\n     pub fn acos(self) -> f64 {\n@@ -643,6 +662,7 @@ impl f64 {\n     ///\n     /// assert!(abs_difference < 1e-10);\n     /// ```\n+    #[must_use]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[inline]\n     pub fn atan(self) -> f64 {\n@@ -719,6 +739,7 @@ impl f64 {\n     ///\n     /// assert!(abs_difference < 1e-10);\n     /// ```\n+    #[must_use]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[inline]\n     pub fn exp_m1(self) -> f64 {\n@@ -740,6 +761,7 @@ impl f64 {\n     ///\n     /// assert!(abs_difference < 1e-10);\n     /// ```\n+    #[must_use]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[inline]\n     pub fn ln_1p(self) -> f64 {\n@@ -763,6 +785,7 @@ impl f64 {\n     ///\n     /// assert!(abs_difference < 1e-10);\n     /// ```\n+    #[must_use]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[inline]\n     pub fn sinh(self) -> f64 {\n@@ -786,6 +809,7 @@ impl f64 {\n     /// // Same result\n     /// assert!(abs_difference < 1.0e-10);\n     /// ```\n+    #[must_use]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[inline]\n     pub fn cosh(self) -> f64 {\n@@ -809,6 +833,7 @@ impl f64 {\n     ///\n     /// assert!(abs_difference < 1.0e-10);\n     /// ```\n+    #[must_use]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[inline]\n     pub fn tanh(self) -> f64 {\n@@ -827,6 +852,7 @@ impl f64 {\n     ///\n     /// assert!(abs_difference < 1.0e-10);\n     /// ```\n+    #[must_use]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[inline]\n     pub fn asinh(self) -> f64 {\n@@ -849,6 +875,7 @@ impl f64 {\n     ///\n     /// assert!(abs_difference < 1.0e-10);\n     /// ```\n+    #[must_use]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[inline]\n     pub fn acosh(self) -> f64 {\n@@ -872,6 +899,7 @@ impl f64 {\n     ///\n     /// assert!(abs_difference < 1.0e-10);\n     /// ```\n+    #[must_use]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[inline]\n     pub fn atanh(self) -> f64 {"}]}