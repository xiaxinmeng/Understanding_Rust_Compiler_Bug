{"sha": "c790317eb95c78af1e63dc0efcd4d447aa83ffc8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM3OTAzMTdlYjk1Yzc4YWYxZTYzZGMwZWZjZDRkNDQ3YWE4M2ZmYzg=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-11-14T09:29:43Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-11-14T09:30:00Z"}, "message": "remove no-longer-needed zero checks", "tree": {"sha": "dcf4520a608d79fa661979b8acf5a8a4ae9cc96a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dcf4520a608d79fa661979b8acf5a8a4ae9cc96a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c790317eb95c78af1e63dc0efcd4d447aa83ffc8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c790317eb95c78af1e63dc0efcd4d447aa83ffc8", "html_url": "https://github.com/rust-lang/rust/commit/c790317eb95c78af1e63dc0efcd4d447aa83ffc8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c790317eb95c78af1e63dc0efcd4d447aa83ffc8/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "09b0a8a813d178233aff88d521ff0aa672ff6dbe", "url": "https://api.github.com/repos/rust-lang/rust/commits/09b0a8a813d178233aff88d521ff0aa672ff6dbe", "html_url": "https://github.com/rust-lang/rust/commit/09b0a8a813d178233aff88d521ff0aa672ff6dbe"}], "stats": {"total": 10, "additions": 2, "deletions": 8}, "files": [{"sha": "79e57cf2c8f5db79045d6623d5f0f5691c7dc1ad", "filename": "src/shims/fs.rs", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/c790317eb95c78af1e63dc0efcd4d447aa83ffc8/src%2Fshims%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c790317eb95c78af1e63dc0efcd4d447aa83ffc8/src%2Fshims%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Ffs.rs?ref=c790317eb95c78af1e63dc0efcd4d447aa83ffc8", "patch": "@@ -175,10 +175,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n             .to_machine_usize(&*this.tcx)?\n             .min((1 << (ptr_size - 1)) - 1) // max value of target `isize`\n             .min(isize::max_value() as u64);\n-        // Reading zero bytes should not change `buf`.\n-        if count == 0 {\n-            return Ok(0);\n-        }\n+\n         let fd = this.read_scalar(fd_op)?.to_i32()?;\n         let buf = this.read_scalar(buf_op)?.not_undef()?;\n \n@@ -231,10 +228,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n             .to_machine_usize(&*this.tcx)?\n             .min((1 << (ptr_size - 1)) - 1) // max value of target `isize`\n             .min(isize::max_value() as u64);\n-        // Writing zero bytes should not change `buf`.\n-        if count == 0 {\n-            return Ok(0);\n-        }\n+\n         let fd = this.read_scalar(fd_op)?.to_i32()?;\n         let buf = this.read_scalar(buf_op)?.not_undef()?;\n "}]}