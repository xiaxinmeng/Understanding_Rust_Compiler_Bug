{"sha": "f10f7f52b05c60ad38d98e89fed20e7c8974d06f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYxMGY3ZjUyYjA1YzYwYWQzOGQ5OGU4OWZlZDIwZTdjODk3NGQwNmY=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-02-17T23:14:59Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-02-18T01:26:44Z"}, "message": "rollup merge of #22454: alexcrichton/stabilize-into-iterator\n\nNow that the necessary associated types exist for the `IntoIterator` trait this\ncommit stabilizes the trait as-is as well as all existing implementations.", "tree": {"sha": "8778ecd70c6b6c51f4001747239d1e67b95a72e1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8778ecd70c6b6c51f4001747239d1e67b95a72e1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f10f7f52b05c60ad38d98e89fed20e7c8974d06f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f10f7f52b05c60ad38d98e89fed20e7c8974d06f", "html_url": "https://github.com/rust-lang/rust/commit/f10f7f52b05c60ad38d98e89fed20e7c8974d06f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f10f7f52b05c60ad38d98e89fed20e7c8974d06f/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d25d044a01281aad1a25d018888c659f6959286e", "url": "https://api.github.com/repos/rust-lang/rust/commits/d25d044a01281aad1a25d018888c659f6959286e", "html_url": "https://github.com/rust-lang/rust/commit/d25d044a01281aad1a25d018888c659f6959286e"}, {"sha": "cc687869ab5f39816109625ba8d1787a25ff4abf", "url": "https://api.github.com/repos/rust-lang/rust/commits/cc687869ab5f39816109625ba8d1787a25ff4abf", "html_url": "https://github.com/rust-lang/rust/commit/cc687869ab5f39816109625ba8d1787a25ff4abf"}], "stats": {"total": 35, "additions": 35, "deletions": 0}, "files": [{"sha": "2a701e67c53eb63a164220eca3c4486f65412660", "filename": "src/libcollections/binary_heap.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f10f7f52b05c60ad38d98e89fed20e7c8974d06f/src%2Flibcollections%2Fbinary_heap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f10f7f52b05c60ad38d98e89fed20e7c8974d06f/src%2Flibcollections%2Fbinary_heap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fbinary_heap.rs?ref=f10f7f52b05c60ad38d98e89fed20e7c8974d06f", "patch": "@@ -666,6 +666,7 @@ impl<T: Ord> IntoIterator for BinaryHeap<T> {\n }\n \n #[cfg(not(stage0))]  // NOTE(stage0): remove cfg after a snapshot\n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<T: Ord> IntoIterator for BinaryHeap<T> {\n     type Item = T;\n     type IntoIter = IntoIter<T>;\n@@ -686,6 +687,7 @@ impl<'a, T> IntoIterator for &'a BinaryHeap<T> where T: Ord {\n }\n \n #[cfg(not(stage0))]  // NOTE(stage0): remove cfg after a snapshot\n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<'a, T> IntoIterator for &'a BinaryHeap<T> where T: Ord {\n     type Item = &'a T;\n     type IntoIter = Iter<'a, T>;"}, {"sha": "df1a341660294a064d903e71e5744ec97d48a216", "filename": "src/libcollections/bit.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f10f7f52b05c60ad38d98e89fed20e7c8974d06f/src%2Flibcollections%2Fbit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f10f7f52b05c60ad38d98e89fed20e7c8974d06f/src%2Flibcollections%2Fbit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fbit.rs?ref=f10f7f52b05c60ad38d98e89fed20e7c8974d06f", "patch": "@@ -1081,6 +1081,7 @@ impl<'a> IntoIterator for &'a Bitv {\n }\n \n #[cfg(not(stage0))]  // NOTE(stage0): remove cfg after a snapshot\n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<'a> IntoIterator for &'a Bitv {\n     type Item = bool;\n     type IntoIter = Iter<'a>;\n@@ -1905,6 +1906,7 @@ impl<'a> IntoIterator for &'a BitvSet {\n }\n \n #[cfg(not(stage0))]  // NOTE(stage0): remove cfg after a snapshot\n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<'a> IntoIterator for &'a BitvSet {\n     type Item = usize;\n     type IntoIter = SetIter<'a>;"}, {"sha": "a0c1c2d185472b9637192b391db345368d87b9ad", "filename": "src/libcollections/btree/map.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f10f7f52b05c60ad38d98e89fed20e7c8974d06f/src%2Flibcollections%2Fbtree%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f10f7f52b05c60ad38d98e89fed20e7c8974d06f/src%2Flibcollections%2Fbtree%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fbtree%2Fmap.rs?ref=f10f7f52b05c60ad38d98e89fed20e7c8974d06f", "patch": "@@ -473,6 +473,7 @@ impl<K, V> IntoIterator for BTreeMap<K, V> {\n }\n \n #[cfg(not(stage0))]  // NOTE(stage0): remove cfg after a snapshot\n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<K, V> IntoIterator for BTreeMap<K, V> {\n     type Item = (K, V);\n     type IntoIter = IntoIter<K, V>;\n@@ -493,6 +494,7 @@ impl<'a, K, V> IntoIterator for &'a BTreeMap<K, V> {\n }\n \n #[cfg(not(stage0))]  // NOTE(stage0): remove cfg after a snapshot\n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<'a, K, V> IntoIterator for &'a BTreeMap<K, V> {\n     type Item = (&'a K, &'a V);\n     type IntoIter = Iter<'a, K, V>;\n@@ -513,6 +515,7 @@ impl<'a, K, V> IntoIterator for &'a mut BTreeMap<K, V> {\n }\n \n #[cfg(not(stage0))]  // NOTE(stage0): remove cfg after a snapshot\n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<'a, K, V> IntoIterator for &'a mut BTreeMap<K, V> {\n     type Item = (&'a K, &'a mut V);\n     type IntoIter = IterMut<'a, K, V>;"}, {"sha": "8ac1b97de25e81ba0e7619754d1e108901fa4b67", "filename": "src/libcollections/btree/set.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f10f7f52b05c60ad38d98e89fed20e7c8974d06f/src%2Flibcollections%2Fbtree%2Fset.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f10f7f52b05c60ad38d98e89fed20e7c8974d06f/src%2Flibcollections%2Fbtree%2Fset.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fbtree%2Fset.rs?ref=f10f7f52b05c60ad38d98e89fed20e7c8974d06f", "patch": "@@ -491,6 +491,7 @@ impl<T> IntoIterator for BTreeSet<T> {\n }\n \n #[cfg(not(stage0))]  // NOTE(stage0): remove cfg after a snapshot\n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<T> IntoIterator for BTreeSet<T> {\n     type Item = T;\n     type IntoIter = IntoIter<T>;\n@@ -511,6 +512,7 @@ impl<'a, T> IntoIterator for &'a BTreeSet<T> {\n }\n \n #[cfg(not(stage0))]  // NOTE(stage0): remove cfg after a snapshot\n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<'a, T> IntoIterator for &'a BTreeSet<T> {\n     type Item = &'a T;\n     type IntoIter = Iter<'a, T>;"}, {"sha": "42c44c0d5c1b615096d274ca64ec5687db8f8666", "filename": "src/libcollections/dlist.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f10f7f52b05c60ad38d98e89fed20e7c8974d06f/src%2Flibcollections%2Fdlist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f10f7f52b05c60ad38d98e89fed20e7c8974d06f/src%2Flibcollections%2Fdlist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fdlist.rs?ref=f10f7f52b05c60ad38d98e89fed20e7c8974d06f", "patch": "@@ -848,6 +848,7 @@ impl<T> IntoIterator for DList<T> {\n }\n \n #[cfg(not(stage0))]  // NOTE(stage0): remove cfg after a snapshot\n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<T> IntoIterator for DList<T> {\n     type Item = T;\n     type IntoIter = IntoIter<T>;\n@@ -868,6 +869,7 @@ impl<'a, T> IntoIterator for &'a DList<T> {\n }\n \n #[cfg(not(stage0))]  // NOTE(stage0): remove cfg after a snapshot\n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<'a, T> IntoIterator for &'a DList<T> {\n     type Item = &'a T;\n     type IntoIter = Iter<'a, T>;"}, {"sha": "ec30933bd2ecf862444701910b82e75f226b982a", "filename": "src/libcollections/enum_set.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f10f7f52b05c60ad38d98e89fed20e7c8974d06f/src%2Flibcollections%2Fenum_set.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f10f7f52b05c60ad38d98e89fed20e7c8974d06f/src%2Flibcollections%2Fenum_set.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fenum_set.rs?ref=f10f7f52b05c60ad38d98e89fed20e7c8974d06f", "patch": "@@ -268,6 +268,7 @@ impl<'a, E> IntoIterator for &'a EnumSet<E> where E: CLike {\n }\n \n #[cfg(not(stage0))]  // NOTE(stage0): remove cfg after a snapshot\n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<'a, E> IntoIterator for &'a EnumSet<E> where E: CLike {\n     type Item = E;\n     type IntoIter = Iter<E>;"}, {"sha": "29ebb8963ba6f16eb32736dd43ca4f08f36ff01f", "filename": "src/libcollections/ring_buf.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f10f7f52b05c60ad38d98e89fed20e7c8974d06f/src%2Flibcollections%2Fring_buf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f10f7f52b05c60ad38d98e89fed20e7c8974d06f/src%2Flibcollections%2Fring_buf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fring_buf.rs?ref=f10f7f52b05c60ad38d98e89fed20e7c8974d06f", "patch": "@@ -1710,6 +1710,7 @@ impl<T> IntoIterator for RingBuf<T> {\n }\n \n #[cfg(not(stage0))]  // NOTE(stage0): remove cfg after a snapshot\n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<T> IntoIterator for RingBuf<T> {\n     type Item = T;\n     type IntoIter = IntoIter<T>;\n@@ -1730,6 +1731,7 @@ impl<'a, T> IntoIterator for &'a RingBuf<T> {\n }\n \n #[cfg(not(stage0))]  // NOTE(stage0): remove cfg after a snapshot\n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<'a, T> IntoIterator for &'a RingBuf<T> {\n     type Item = &'a T;\n     type IntoIter = Iter<'a, T>;\n@@ -1750,6 +1752,7 @@ impl<'a, T> IntoIterator for &'a mut RingBuf<T> {\n }\n \n #[cfg(not(stage0))]  // NOTE(stage0): remove cfg after a snapshot\n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<'a, T> IntoIterator for &'a mut RingBuf<T> {\n     type Item = &'a mut T;\n     type IntoIter = IterMut<'a, T>;"}, {"sha": "92df05d6ed432d5e4a5e529e3fabb1c59a29ddb6", "filename": "src/libcollections/vec.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f10f7f52b05c60ad38d98e89fed20e7c8974d06f/src%2Flibcollections%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f10f7f52b05c60ad38d98e89fed20e7c8974d06f/src%2Flibcollections%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fvec.rs?ref=f10f7f52b05c60ad38d98e89fed20e7c8974d06f", "patch": "@@ -1425,6 +1425,7 @@ impl<T> IntoIterator for Vec<T> {\n }\n \n #[cfg(not(stage0))]  // NOTE(stage0): remove cfg after a snapshot\n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<T> IntoIterator for Vec<T> {\n     type Item = T;\n     type IntoIter = IntoIter<T>;\n@@ -1445,6 +1446,7 @@ impl<'a, T> IntoIterator for &'a Vec<T> {\n }\n \n #[cfg(not(stage0))]  // NOTE(stage0): remove cfg after a snapshot\n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<'a, T> IntoIterator for &'a Vec<T> {\n     type Item = &'a T;\n     type IntoIter = slice::Iter<'a, T>;\n@@ -1465,6 +1467,7 @@ impl<'a, T> IntoIterator for &'a mut Vec<T> {\n }\n \n #[cfg(not(stage0))]  // NOTE(stage0): remove cfg after a snapshot\n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<'a, T> IntoIterator for &'a mut Vec<T> {\n     type Item = &'a mut T;\n     type IntoIter = slice::IterMut<'a, T>;"}, {"sha": "7a2194f8110159a8d455919082add8e04ea9e417", "filename": "src/libcollections/vec_map.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f10f7f52b05c60ad38d98e89fed20e7c8974d06f/src%2Flibcollections%2Fvec_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f10f7f52b05c60ad38d98e89fed20e7c8974d06f/src%2Flibcollections%2Fvec_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fvec_map.rs?ref=f10f7f52b05c60ad38d98e89fed20e7c8974d06f", "patch": "@@ -679,6 +679,7 @@ impl<T> IntoIterator for VecMap<T> {\n }\n \n #[cfg(not(stage0))]  // NOTE(stage0): remove cfg after a snapshot\n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<T> IntoIterator for VecMap<T> {\n     type Item = (usize, T);\n     type IntoIter = IntoIter<T>;\n@@ -699,6 +700,7 @@ impl<'a, T> IntoIterator for &'a VecMap<T> {\n }\n \n #[cfg(not(stage0))]  // NOTE(stage0): remove cfg after a snapshot\n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<'a, T> IntoIterator for &'a VecMap<T> {\n     type Item = (usize, &'a T);\n     type IntoIter = Iter<'a, T>;\n@@ -719,6 +721,7 @@ impl<'a, T> IntoIterator for &'a mut VecMap<T> {\n }\n \n #[cfg(not(stage0))]  // NOTE(stage0): remove cfg after a snapshot\n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<'a, T> IntoIterator for &'a mut VecMap<T> {\n     type Item = (usize, &'a mut T);\n     type IntoIter = IterMut<'a, T>;"}, {"sha": "886893e647e227b16524035ca23820dee95ae3f2", "filename": "src/libcore/array.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f10f7f52b05c60ad38d98e89fed20e7c8974d06f/src%2Flibcore%2Farray.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f10f7f52b05c60ad38d98e89fed20e7c8974d06f/src%2Flibcore%2Farray.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Farray.rs?ref=f10f7f52b05c60ad38d98e89fed20e7c8974d06f", "patch": "@@ -59,6 +59,7 @@ macro_rules! array_impls {\n             }\n \n             #[cfg(not(stage0))]  // NOTE(stage0): remove cfg after a snapshot\n+            #[stable(feature = \"rust1\", since = \"1.0.0\")]\n             impl<'a, T> IntoIterator for &'a [T; $N] {\n                 type Item = &'a T;\n                 type IntoIter = Iter<'a, T>;\n@@ -79,6 +80,7 @@ macro_rules! array_impls {\n             }\n \n             #[cfg(not(stage0))]  // NOTE(stage0): remove cfg after a snapshot\n+            #[stable(feature = \"rust1\", since = \"1.0.0\")]\n             impl<'a, T> IntoIterator for &'a mut [T; $N] {\n                 type Item = &'a mut T;\n                 type IntoIter = IterMut<'a, T>;"}, {"sha": "2960c310386806e5fdd212860da3486763921c51", "filename": "src/libcore/iter.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f10f7f52b05c60ad38d98e89fed20e7c8974d06f/src%2Flibcore%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f10f7f52b05c60ad38d98e89fed20e7c8974d06f/src%2Flibcore%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter.rs?ref=f10f7f52b05c60ad38d98e89fed20e7c8974d06f", "patch": "@@ -131,8 +131,12 @@ pub trait IntoIterator {\n \n #[cfg(not(stage0))]  // NOTE(stage0): remove cfg after a snapshot\n /// Conversion into an `Iterator`\n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub trait IntoIterator {\n+    #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     type Item;\n+\n+    #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     type IntoIter: Iterator<Item=Self::Item>;\n \n     /// Consumes `Self` and returns an iterator over it\n@@ -151,6 +155,7 @@ impl<I> IntoIterator for I where I: Iterator {\n }\n \n #[cfg(not(stage0))]  // NOTE(stage0): remove cfg after a snapshot\n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<I: Iterator> IntoIterator for I {\n     type Item = I::Item;\n     type IntoIter = I;"}, {"sha": "ded76f51b07da9af0a0eba046b363f8d6eda8a26", "filename": "src/libcore/slice.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f10f7f52b05c60ad38d98e89fed20e7c8974d06f/src%2Flibcore%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f10f7f52b05c60ad38d98e89fed20e7c8974d06f/src%2Flibcore%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fslice.rs?ref=f10f7f52b05c60ad38d98e89fed20e7c8974d06f", "patch": "@@ -637,6 +637,7 @@ impl<'a, T> IntoIterator for &'a [T] {\n }\n \n #[cfg(not(stage0))]  // NOTE(stage0): remove cfg after a snapshot\n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<'a, T> IntoIterator for &'a [T] {\n     type Item = &'a T;\n     type IntoIter = Iter<'a, T>;\n@@ -657,6 +658,7 @@ impl<'a, T> IntoIterator for &'a mut [T] {\n }\n \n #[cfg(not(stage0))]  // NOTE(stage0): remove cfg after a snapshot\n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<'a, T> IntoIterator for &'a mut [T] {\n     type Item = &'a mut T;\n     type IntoIter = IterMut<'a, T>;"}, {"sha": "e11bcec150c8d0cf7b799f62e9df5ffcdf3f7ce8", "filename": "src/libstd/collections/hash/map.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f10f7f52b05c60ad38d98e89fed20e7c8974d06f/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f10f7f52b05c60ad38d98e89fed20e7c8974d06f/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs?ref=f10f7f52b05c60ad38d98e89fed20e7c8974d06f", "patch": "@@ -1387,6 +1387,7 @@ impl<'a, K, V, S, H> IntoIterator for &'a HashMap<K, V, S>\n }\n \n #[cfg(not(stage0))]  // NOTE(stage0): remove cfg after a snapshot\n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<'a, K, V, S, H> IntoIterator for &'a HashMap<K, V, S>\n     where K: Eq + Hash<H>,\n           S: HashState<Hasher=H>,\n@@ -1415,6 +1416,7 @@ impl<'a, K, V, S, H> IntoIterator for &'a mut HashMap<K, V, S>\n }\n \n #[cfg(not(stage0))]  // NOTE(stage0): remove cfg after a snapshot\n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<'a, K, V, S, H> IntoIterator for &'a mut HashMap<K, V, S>\n     where K: Eq + Hash<H>,\n           S: HashState<Hasher=H>,\n@@ -1443,6 +1445,7 @@ impl<K, V, S, H> IntoIterator for HashMap<K, V, S>\n }\n \n #[cfg(not(stage0))]  // NOTE(stage0): remove cfg after a snapshot\n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<K, V, S, H> IntoIterator for HashMap<K, V, S>\n     where K: Eq + Hash<H>,\n           S: HashState<Hasher=H>,"}, {"sha": "fb01dc89e6848b370805c211803ed5c55dbabf94", "filename": "src/libstd/collections/hash/set.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f10f7f52b05c60ad38d98e89fed20e7c8974d06f/src%2Flibstd%2Fcollections%2Fhash%2Fset.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f10f7f52b05c60ad38d98e89fed20e7c8974d06f/src%2Flibstd%2Fcollections%2Fhash%2Fset.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcollections%2Fhash%2Fset.rs?ref=f10f7f52b05c60ad38d98e89fed20e7c8974d06f", "patch": "@@ -850,6 +850,7 @@ impl<'a, T, S, H> IntoIterator for &'a HashSet<T, S>\n }\n \n #[cfg(not(stage0))]  // NOTE(stage0): remove cfg after a snapshot\n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<'a, T, S, H> IntoIterator for &'a HashSet<T, S>\n     where T: Eq + Hash<H>,\n           S: HashState<Hasher=H>,\n@@ -878,6 +879,7 @@ impl<T, S, H> IntoIterator for HashSet<T, S>\n }\n \n #[cfg(not(stage0))]  // NOTE(stage0): remove cfg after a snapshot\n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<T, S, H> IntoIterator for HashSet<T, S>\n     where T: Eq + Hash<H>,\n           S: HashState<Hasher=H>,"}]}