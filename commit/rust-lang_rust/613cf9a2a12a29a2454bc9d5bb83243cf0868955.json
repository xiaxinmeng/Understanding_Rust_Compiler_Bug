{"sha": "613cf9a2a12a29a2454bc9d5bb83243cf0868955", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYxM2NmOWEyYTEyYTI5YTI0NTRiYzlkNWJiODMyNDNjZjA4Njg5NTU=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2015-04-09T06:25:48Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2015-04-09T06:25:48Z"}, "message": "Debug impls for a few things in syntax::codemap", "tree": {"sha": "000c04957a1e33fdd1d5425c95aeae5fabe92a91", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/000c04957a1e33fdd1d5425c95aeae5fabe92a91"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/613cf9a2a12a29a2454bc9d5bb83243cf0868955", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/613cf9a2a12a29a2454bc9d5bb83243cf0868955", "html_url": "https://github.com/rust-lang/rust/commit/613cf9a2a12a29a2454bc9d5bb83243cf0868955", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/613cf9a2a12a29a2454bc9d5bb83243cf0868955/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "287a544a309b840fd715fe1d5b651b5116bf08fa", "url": "https://api.github.com/repos/rust-lang/rust/commits/287a544a309b840fd715fe1d5b651b5116bf08fa", "html_url": "https://github.com/rust-lang/rust/commit/287a544a309b840fd715fe1d5b651b5116bf08fa"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "56af43474a6155d69240411bcd01d1fbf209c704", "filename": "src/libsyntax/codemap.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/613cf9a2a12a29a2454bc9d5bb83243cf0868955/src%2Flibsyntax%2Fcodemap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/613cf9a2a12a29a2454bc9d5bb83243cf0868955/src%2Flibsyntax%2Fcodemap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fcodemap.rs?ref=613cf9a2a12a29a2454bc9d5bb83243cf0868955", "patch": "@@ -26,6 +26,8 @@ use std::num::ToPrimitive;\n use std::ops::{Add, Sub};\n use std::rc::Rc;\n \n+use std::fmt;\n+\n use libc::c_uint;\n use serialize::{Encodable, Decodable, Encoder, Decoder};\n \n@@ -199,6 +201,7 @@ pub fn original_sp(cm: &CodeMap, sp: Span, enclosing_sp: Span) -> Span {\n //\n \n /// A source code location used for error reporting\n+#[derive(Debug)]\n pub struct Loc {\n     /// Information about the original source\n     pub file: Rc<FileMap>,\n@@ -211,6 +214,7 @@ pub struct Loc {\n /// A source code location used as the result of lookup_char_pos_adj\n // Actually, *none* of the clients use the filename *or* file field;\n // perhaps they should just be removed.\n+#[derive(Debug)]\n pub struct LocWithOpt {\n     pub filename: FileName,\n     pub line: usize,\n@@ -219,7 +223,9 @@ pub struct LocWithOpt {\n }\n \n // used to be structural records. Better names, anyone?\n+#[derive(Debug)]\n pub struct FileMapAndLine { pub fm: Rc<FileMap>, pub line: usize }\n+#[derive(Debug)]\n pub struct FileMapAndBytePos { pub fm: Rc<FileMap>, pub pos: BytePos }\n \n \n@@ -449,6 +455,12 @@ impl Decodable for FileMap {\n     }\n }\n \n+impl fmt::Debug for FileMap {\n+    fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {\n+        write!(fmt, \"FileMap({})\", self.name)\n+    }\n+}\n+\n impl FileMap {\n     /// EFFECT: register a start-of-line offset in the\n     /// table of line-beginnings."}]}