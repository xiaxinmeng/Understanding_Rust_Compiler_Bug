{"sha": "519c5a24e12a80a2d1212fd2224af51a1aa92186", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUxOWM1YTI0ZTEyYTgwYTJkMTIxMmZkMjIyNGFmNTFhMWFhOTIxODY=", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2021-08-03T23:05:56Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-08-03T23:05:56Z"}, "message": "Rollup merge of #87729 - adamgemmell:dev/deprecate-crypto, r=Amanieu\n\nRemove the aarch64 `crypto` target_feature\n\nThe subfeatures `aes` or `sha2` should be used instead.\n\nThis can't yet be done for ARM targets as some LLVM intrinsics still require `crypto`.\n\nAlso update the runtime feature detection tests in `library/std` to mirror the updates in `stdarch`. This also helps https://github.com/rust-lang/rust/issues/86941\n\nr? ``@Amanieu``", "tree": {"sha": "4798057412ab9e651188ae24a33760f33db032c1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4798057412ab9e651188ae24a33760f33db032c1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/519c5a24e12a80a2d1212fd2224af51a1aa92186", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhCcvVCRBK7hj4Ov3rIwAA7ZcIAKw0wicFL+x9Y+cBDG4Fxwj5\nVnbqAlNGlXvzHZUa2PF6UWhMujMMbj6FpoldRzur7+iT7LMUHCZDn0qBjdVZJK96\n0uY9j9rkdaiaaHmFssX7IzxTmwFVVkRgaHdmozY1EuXOTbfan4bmH5F38pfuXUle\nFZ2eUl0GrLThNDuohB9cu2oLhzbRQWxR1EeTdFGESGluo1R8SWhUp8dnwxMFJsUd\nZfPUPsXpqqiQ2F/9wQPc1glzPGy2OfboNulBEE48gQCT+AR/UflNCnUPYtGkP0Zv\npODgq51j4QJCCZq4hYeczieiOw6g9Vdr6ebYMcFv+h5d8DFL090Y9RXg8axwQy4=\n=i/6P\n-----END PGP SIGNATURE-----\n", "payload": "tree 4798057412ab9e651188ae24a33760f33db032c1\nparent af8c99a2353e5e2d09d30360063d0575d385cec6\nparent e817b505415d8830c937e41633a7edfdd82208dd\nauthor Yuki Okushi <jtitor@2k36.org> 1628031956 +0900\ncommitter GitHub <noreply@github.com> 1628031956 +0900\n\nRollup merge of #87729 - adamgemmell:dev/deprecate-crypto, r=Amanieu\n\nRemove the aarch64 `crypto` target_feature\n\nThe subfeatures `aes` or `sha2` should be used instead.\n\nThis can't yet be done for ARM targets as some LLVM intrinsics still require `crypto`.\n\nAlso update the runtime feature detection tests in `library/std` to mirror the updates in `stdarch`. This also helps https://github.com/rust-lang/rust/issues/86941\n\nr? ``@Amanieu``\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/519c5a24e12a80a2d1212fd2224af51a1aa92186", "html_url": "https://github.com/rust-lang/rust/commit/519c5a24e12a80a2d1212fd2224af51a1aa92186", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/519c5a24e12a80a2d1212fd2224af51a1aa92186/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "af8c99a2353e5e2d09d30360063d0575d385cec6", "url": "https://api.github.com/repos/rust-lang/rust/commits/af8c99a2353e5e2d09d30360063d0575d385cec6", "html_url": "https://github.com/rust-lang/rust/commit/af8c99a2353e5e2d09d30360063d0575d385cec6"}, {"sha": "e817b505415d8830c937e41633a7edfdd82208dd", "url": "https://api.github.com/repos/rust-lang/rust/commits/e817b505415d8830c937e41633a7edfdd82208dd", "html_url": "https://github.com/rust-lang/rust/commit/e817b505415d8830c937e41633a7edfdd82208dd"}], "stats": {"total": 42, "additions": 37, "deletions": 5}, "files": [{"sha": "8d7e9612f4749d63c0fbb9e6388520627ac85374", "filename": "compiler/rustc_codegen_ssa/src/target_features.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/519c5a24e12a80a2d1212fd2224af51a1aa92186/compiler%2Frustc_codegen_ssa%2Fsrc%2Ftarget_features.rs", "raw_url": "https://github.com/rust-lang/rust/raw/519c5a24e12a80a2d1212fd2224af51a1aa92186/compiler%2Frustc_codegen_ssa%2Fsrc%2Ftarget_features.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Ftarget_features.rs?ref=519c5a24e12a80a2d1212fd2224af51a1aa92186", "patch": "@@ -47,8 +47,6 @@ const AARCH64_ALLOWED_FEATURES: &[(&str, Option<Symbol>)] = &[\n     (\"sve\", Some(sym::aarch64_target_feature)),\n     // FEAT_CRC\n     (\"crc\", Some(sym::aarch64_target_feature)),\n-    // Cryptographic extension\n-    (\"crypto\", Some(sym::aarch64_target_feature)),\n     // FEAT_RAS\n     (\"ras\", Some(sym::aarch64_target_feature)),\n     // FEAT_LSE"}, {"sha": "079f00a5753f1d7617b8d55407631b5390594d32", "filename": "library/std/tests/run-time-detect.rs", "status": "modified", "additions": 36, "deletions": 2, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/519c5a24e12a80a2d1212fd2224af51a1aa92186/library%2Fstd%2Ftests%2Frun-time-detect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/519c5a24e12a80a2d1212fd2224af51a1aa92186/library%2Fstd%2Ftests%2Frun-time-detect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Ftests%2Frun-time-detect.rs?ref=519c5a24e12a80a2d1212fd2224af51a1aa92186", "patch": "@@ -16,22 +16,56 @@\n fn arm_linux() {\n     println!(\"neon: {}\", is_arm_feature_detected!(\"neon\"));\n     println!(\"pmull: {}\", is_arm_feature_detected!(\"pmull\"));\n+    println!(\"crypto: {}\", is_arm_feature_detected!(\"crypto\"));\n+    println!(\"crc: {}\", is_arm_feature_detected!(\"crc\"));\n+    println!(\"aes: {}\", is_arm_feature_detected!(\"aes\"));\n+    println!(\"sha2: {}\", is_arm_feature_detected!(\"sha2\"));\n }\n \n #[test]\n #[cfg(all(target_arch = \"aarch64\", any(target_os = \"linux\", target_os = \"android\")))]\n fn aarch64_linux() {\n-    println!(\"fp: {}\", is_aarch64_feature_detected!(\"fp\"));\n-    println!(\"fp16: {}\", is_aarch64_feature_detected!(\"fp16\"));\n     println!(\"neon: {}\", is_aarch64_feature_detected!(\"neon\"));\n     println!(\"asimd: {}\", is_aarch64_feature_detected!(\"asimd\"));\n+    println!(\"pmull: {}\", is_aarch64_feature_detected!(\"pmull\"));\n+    println!(\"fp: {}\", is_aarch64_feature_detected!(\"fp\"));\n+    println!(\"fp16: {}\", is_aarch64_feature_detected!(\"fp16\"));\n     println!(\"sve: {}\", is_aarch64_feature_detected!(\"sve\"));\n     println!(\"crc: {}\", is_aarch64_feature_detected!(\"crc\"));\n     println!(\"lse: {}\", is_aarch64_feature_detected!(\"lse\"));\n+    println!(\"lse2: {}\", is_aarch64_feature_detected!(\"lse2\"));\n     println!(\"rdm: {}\", is_aarch64_feature_detected!(\"rdm\"));\n     println!(\"rcpc: {}\", is_aarch64_feature_detected!(\"rcpc\"));\n+    println!(\"rcpc2: {}\", is_aarch64_feature_detected!(\"rcpc2\"));\n     println!(\"dotprod: {}\", is_aarch64_feature_detected!(\"dotprod\"));\n     println!(\"tme: {}\", is_aarch64_feature_detected!(\"tme\"));\n+    println!(\"fhm: {}\", is_aarch64_feature_detected!(\"fhm\"));\n+    println!(\"dit: {}\", is_aarch64_feature_detected!(\"dit\"));\n+    println!(\"flagm: {}\", is_aarch64_feature_detected!(\"flagm\"));\n+    println!(\"ssbs: {}\", is_aarch64_feature_detected!(\"ssbs\"));\n+    println!(\"sb: {}\", is_aarch64_feature_detected!(\"sb\"));\n+    println!(\"pauth: {}\", is_aarch64_feature_detected!(\"pauth\"));\n+    println!(\"dpb: {}\", is_aarch64_feature_detected!(\"dpb\"));\n+    println!(\"dpb2: {}\", is_aarch64_feature_detected!(\"dpb2\"));\n+    println!(\"sve2: {}\", is_aarch64_feature_detected!(\"sve2\"));\n+    println!(\"sve2-aes: {}\", is_aarch64_feature_detected!(\"sve2-aes\"));\n+    println!(\"sve2-sm4: {}\", is_aarch64_feature_detected!(\"sve2-sm4\"));\n+    println!(\"sve2-sha3: {}\", is_aarch64_feature_detected!(\"sve2-sha3\"));\n+    println!(\"sve2-bitperm: {}\", is_aarch64_feature_detected!(\"sve2-bitperm\"));\n+    println!(\"frintts: {}\", is_aarch64_feature_detected!(\"frintts\"));\n+    println!(\"i8mm: {}\", is_aarch64_feature_detected!(\"i8mm\"));\n+    println!(\"f32mm: {}\", is_aarch64_feature_detected!(\"f32mm\"));\n+    println!(\"f64mm: {}\", is_aarch64_feature_detected!(\"f64mm\"));\n+    println!(\"bf16: {}\", is_aarch64_feature_detected!(\"bf16\"));\n+    println!(\"rand: {}\", is_aarch64_feature_detected!(\"rand\"));\n+    println!(\"bti: {}\", is_aarch64_feature_detected!(\"bti\"));\n+    println!(\"mte: {}\", is_aarch64_feature_detected!(\"mte\"));\n+    println!(\"jsconv: {}\", is_aarch64_feature_detected!(\"jsconv\"));\n+    println!(\"fcma: {}\", is_aarch64_feature_detected!(\"fcma\"));\n+    println!(\"aes: {}\", is_aarch64_feature_detected!(\"aes\"));\n+    println!(\"sha2: {}\", is_aarch64_feature_detected!(\"sha2\"));\n+    println!(\"sha3: {}\", is_aarch64_feature_detected!(\"sha3\"));\n+    println!(\"sm4: {}\", is_aarch64_feature_detected!(\"sm4\"));\n }\n \n #[test]"}, {"sha": "c158cfd38e20d855f5d6ca8a5a101eefb82604a8", "filename": "library/stdarch", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstdarch?ref=519c5a24e12a80a2d1212fd2224af51a1aa92186", "patch": "@@ -1 +1 @@\n-Subproject commit 3001c75a1d2a81d2a76bef139c69387cb2ebb820\n+Subproject commit c158cfd38e20d855f5d6ca8a5a101eefb82604a8"}]}