{"sha": "6e311836140f86582501550da249c1df70427ab4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZlMzExODM2MTQwZjg2NTgyNTAxNTUwZGEyNDljMWRmNzA0MjdhYjQ=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-08-13T23:13:12Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-08-13T23:13:12Z"}, "message": "test: Modify error messages in some compile-fail tests in an attempt to unbreak the tree", "tree": {"sha": "c5b175a7ee0d4b79960273ffe13fe817dac86efc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c5b175a7ee0d4b79960273ffe13fe817dac86efc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6e311836140f86582501550da249c1df70427ab4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6e311836140f86582501550da249c1df70427ab4", "html_url": "https://github.com/rust-lang/rust/commit/6e311836140f86582501550da249c1df70427ab4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6e311836140f86582501550da249c1df70427ab4/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "87f4c153110743844e4b3a4bb9dcde31a5ef3eb4", "url": "https://api.github.com/repos/rust-lang/rust/commits/87f4c153110743844e4b3a4bb9dcde31a5ef3eb4", "html_url": "https://github.com/rust-lang/rust/commit/87f4c153110743844e4b3a4bb9dcde31a5ef3eb4"}], "stats": {"total": 28, "additions": 14, "deletions": 14}, "files": [{"sha": "2ec79788c7cffb9b0fceb271b7d2c71c8419f2bc", "filename": "src/test/compile-fail/block-coerce-no-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6e311836140f86582501550da249c1df70427ab4/src%2Ftest%2Fcompile-fail%2Fblock-coerce-no-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e311836140f86582501550da249c1df70427ab4/src%2Ftest%2Fcompile-fail%2Fblock-coerce-no-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fblock-coerce-no-2.rs?ref=6e311836140f86582501550da249c1df70427ab4", "patch": "@@ -9,5 +9,5 @@ fn main() {\n     }\n \n     f(g);\n-    //~^ ERROR mismatched types: expected `extern fn(extern fn(extern fn()))`\n+    //~^ ERROR mismatched types: expected `fn(fn(fn&()))`\n }"}, {"sha": "f444568566540069fb326d33c8165c4cffd77080", "filename": "src/test/compile-fail/block-coerce-no.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6e311836140f86582501550da249c1df70427ab4/src%2Ftest%2Fcompile-fail%2Fblock-coerce-no.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e311836140f86582501550da249c1df70427ab4/src%2Ftest%2Fcompile-fail%2Fblock-coerce-no.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fblock-coerce-no.rs?ref=6e311836140f86582501550da249c1df70427ab4", "patch": "@@ -6,7 +6,7 @@ fn coerce(b: fn()) -> extern fn() {\n            g: fn()) -> extern fn() { return f(g); }\n     fn fn_id(f: extern fn()) -> extern fn() { return f }\n     return lol(fn_id, b);\n-    //~^ ERROR mismatched types: expected `extern fn(fn&()) -> extern fn()`\n+    //~^ ERROR mismatched types: expected `fn(fn&()) -> fn()`\n }\n \n fn main() {"}, {"sha": "ff5771d5cd2c935a4704b9f9bf6037c6b36ab1f7", "filename": "src/test/compile-fail/extern-wrong-value-type.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6e311836140f86582501550da249c1df70427ab4/src%2Ftest%2Fcompile-fail%2Fextern-wrong-value-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e311836140f86582501550da249c1df70427ab4/src%2Ftest%2Fcompile-fail%2Fextern-wrong-value-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fextern-wrong-value-type.rs?ref=6e311836140f86582501550da249c1df70427ab4", "patch": "@@ -1,4 +1,4 @@\n-// error-pattern:expected `fn&()` but found `*u8`\n+// error-pattern:expected `fn&<R0>()` but found `*u8`\n extern fn f() {\n }\n "}, {"sha": "1e2dfd42f38fade904099956d247ef35a55b898a", "filename": "src/test/compile-fail/fn-compare-mismatch.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6e311836140f86582501550da249c1df70427ab4/src%2Ftest%2Fcompile-fail%2Ffn-compare-mismatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e311836140f86582501550da249c1df70427ab4/src%2Ftest%2Fcompile-fail%2Ffn-compare-mismatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffn-compare-mismatch.rs?ref=6e311836140f86582501550da249c1df70427ab4", "patch": "@@ -2,5 +2,5 @@ fn main() {\n     fn f() { }\n     fn g(i: int) { }\n     let x = f == g;\n-    //~^ ERROR expected `extern fn()` but found `extern fn(int)`\n+    //~^ ERROR expected `fn()` but found `fn(int)`\n }"}, {"sha": "8c7239504c933f00ed9563795e16f1114734371e", "filename": "src/test/compile-fail/main-wrong-type-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6e311836140f86582501550da249c1df70427ab4/src%2Ftest%2Fcompile-fail%2Fmain-wrong-type-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e311836140f86582501550da249c1df70427ab4/src%2Ftest%2Fcompile-fail%2Fmain-wrong-type-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmain-wrong-type-2.rs?ref=6e311836140f86582501550da249c1df70427ab4", "patch": "@@ -1,3 +1,3 @@\n fn main() -> char {\n-//~^ ERROR Wrong type in main function: found `extern fn() -> char`\n+//~^ ERROR Wrong type in main function: found `fn() -> char`\n }"}, {"sha": "baaac62e3c4cd0aaf4b5a471ca1e42160ebf3de7", "filename": "src/test/compile-fail/main-wrong-type.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6e311836140f86582501550da249c1df70427ab4/src%2Ftest%2Fcompile-fail%2Fmain-wrong-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e311836140f86582501550da249c1df70427ab4/src%2Ftest%2Fcompile-fail%2Fmain-wrong-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmain-wrong-type.rs?ref=6e311836140f86582501550da249c1df70427ab4", "patch": "@@ -1,3 +1,3 @@\n fn main(foo: {x: int, y: int}) {\n-//~^ ERROR Wrong type in main function: found `extern fn({x: int,y: int})`\n+//~^ ERROR Wrong type in main function: found `fn({x: int,y: int})`\n }"}, {"sha": "c9fe0faab8a6daa7b7c2667fe8509b82e9a6c92d", "filename": "src/test/compile-fail/missing-do.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6e311836140f86582501550da249c1df70427ab4/src%2Ftest%2Fcompile-fail%2Fmissing-do.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e311836140f86582501550da249c1df70427ab4/src%2Ftest%2Fcompile-fail%2Fmissing-do.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmissing-do.rs?ref=6e311836140f86582501550da249c1df70427ab4", "patch": "@@ -4,6 +4,6 @@ fn foo(f: fn()) { f() }\n \n fn main() {\n     ~\"\" || 42; //~ ERROR binary operation || cannot be applied to type `~str`\n-    foo || {}; //~ ERROR binary operation || cannot be applied to type `extern fn(fn&())`\n+    foo || {}; //~ ERROR binary operation || cannot be applied to type `fn(fn&())`\n     //~^ NOTE did you forget the 'do' keyword for the call?\n }"}, {"sha": "c6f3568087c956c7573ee0dacc08d1a28de9d137", "filename": "src/test/compile-fail/pure-subtyping.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/6e311836140f86582501550da249c1df70427ab4/src%2Ftest%2Fcompile-fail%2Fpure-subtyping.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e311836140f86582501550da249c1df70427ab4/src%2Ftest%2Fcompile-fail%2Fpure-subtyping.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fpure-subtyping.rs?ref=6e311836140f86582501550da249c1df70427ab4", "patch": "@@ -23,14 +23,14 @@ fn assign_to_pure2(x: pure fn@(), y: fn@(), z: unsafe fn@()) {\n     let b: pure fn() = y; //~ ERROR expected pure fn but found impure fn\n     let c: pure fn() = z; //~ ERROR expected pure fn but found unsafe fn\n \n-    let a: pure fn~() = x; //~ ERROR closure protocol mismatch (fn~ vs fn@)\n-    let b: pure fn~() = y; //~ ERROR closure protocol mismatch (fn~ vs fn@)\n-    let c: pure fn~() = z; //~ ERROR closure protocol mismatch (fn~ vs fn@)\n+    let a: pure fn~() = x; //~ ERROR fn storage differs: expected ~ but found @\n+    let b: pure fn~() = y; //~ ERROR fn storage differs: expected ~ but found @\n+    let c: pure fn~() = z; //~ ERROR fn storage differs: expected ~ but found @\n \n-    let a: unsafe fn~() = x; //~ ERROR closure protocol mismatch (fn~ vs fn@)\n-    let b: unsafe fn~() = y; //~ ERROR closure protocol mismatch (fn~ vs fn@)\n-    let c: unsafe fn~() = z; //~ ERROR closure protocol mismatch (fn~ vs fn@)\n+    let a: unsafe fn~() = x; //~ ERROR fn storage differs: expected ~ but found @\n+    let b: unsafe fn~() = y; //~ ERROR fn storage differs: expected ~ but found @\n+    let c: unsafe fn~() = z; //~ ERROR fn storage differs: expected ~ but found @\n }\n \n fn main() {\n-}\n\\ No newline at end of file\n+}"}]}