{"sha": "7256a6a86d10e51f47af994cb3f6fc0d68deebd1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcyNTZhNmE4NmQxMGU1MWY0N2FmOTk0Y2IzZjZmYzBkNjhkZWViZDE=", "commit": {"author": {"name": "the8472", "email": "the8472@users.noreply.github.com", "date": "2021-08-15T22:01:41Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-08-15T22:01:41Z"}, "message": "Apply suggestions from code review\n\nCo-authored-by: Amanieu d'Antras <amanieu@gmail.com>", "tree": {"sha": "c1d8d5efdf6e23f8cc6d95c26ce165a43aa11f89", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c1d8d5efdf6e23f8cc6d95c26ce165a43aa11f89"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7256a6a86d10e51f47af994cb3f6fc0d68deebd1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhGY7FCRBK7hj4Ov3rIwAAf2AIAK12YVYeTOsFlC7c/vC+S5xO\nFuu/0as99o1szCFSjIV0tIVo4zAJWp2soxjFeqyxZn3rhNiieJ5EeATGnGBf8YRh\n7yvxEzL/JtEyI4al76xzzJip4CU7hTeXpqc0oHys5SQnFGh72AdFho26QFyXQOwx\nSSCUQCvIiMnj74j9qX1O9g7AIjR4vQYPbgZIbMuaN5TG6KQILmGeY93cESp8OQE4\nJ4ZfaFve/0nCTf8fbyk0mJBBAtU1PvzMQlmZ4J3OOwJrnQ5WSU7b4n5e3pZZpnnM\nMyiJzyDSjom8A7X4ZSjji5Ym7ZZ4oI6GBle8Z6t05TMj9g3RP9M5Y8nW0FzauDY=\n=lWGi\n-----END PGP SIGNATURE-----\n", "payload": "tree c1d8d5efdf6e23f8cc6d95c26ce165a43aa11f89\nparent a98a30976b5aeeb1a2d6145a6cec2544072d9b47\nauthor the8472 <the8472@users.noreply.github.com> 1629064901 +0200\ncommitter GitHub <noreply@github.com> 1629064901 +0200\n\nApply suggestions from code review\n\nCo-authored-by: Amanieu d'Antras <amanieu@gmail.com>"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7256a6a86d10e51f47af994cb3f6fc0d68deebd1", "html_url": "https://github.com/rust-lang/rust/commit/7256a6a86d10e51f47af994cb3f6fc0d68deebd1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7256a6a86d10e51f47af994cb3f6fc0d68deebd1/comments", "author": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a98a30976b5aeeb1a2d6145a6cec2544072d9b47", "url": "https://api.github.com/repos/rust-lang/rust/commits/a98a30976b5aeeb1a2d6145a6cec2544072d9b47", "html_url": "https://github.com/rust-lang/rust/commit/a98a30976b5aeeb1a2d6145a6cec2544072d9b47"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "d4572ee76beef71579011a8f1b973f1be8516029", "filename": "library/std/src/time/monotonic.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7256a6a86d10e51f47af994cb3f6fc0d68deebd1/library%2Fstd%2Fsrc%2Ftime%2Fmonotonic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7256a6a86d10e51f47af994cb3f6fc0d68deebd1/library%2Fstd%2Fsrc%2Ftime%2Fmonotonic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Ftime%2Fmonotonic.rs?ref=7256a6a86d10e51f47af994cb3f6fc0d68deebd1", "patch": "@@ -34,14 +34,14 @@ pub mod inner {\n         let packed = (secs << 32) | nanos;\n         let old = MONO.load(Relaxed);\n \n-        if packed == UNINITIALIZED || packed.wrapping_sub(old) < u64::MAX / 2 {\n+        if old == UNINITIALIZED || packed.wrapping_sub(old) < u64::MAX / 2 {\n             MONO.store(packed, Relaxed);\n             raw\n         } else {\n             // Backslide occurred. We reconstruct monotonized time by assuming the clock will never\n             // backslide more than 2`32 seconds which means we can reuse the upper 32bits from\n             // the seconds.\n-            let secs = (secs & 0xffff_ffff << 32) | old >> 32;\n+            let secs = (secs & 0xffff_ffff_0000_0000) | old >> 32;\n             let nanos = old as u32;\n             ZERO.checked_add_duration(&Duration::new(secs, nanos)).unwrap()\n         }"}]}