{"sha": "06984ed1164d7607f89f9a6f4893dd05ec058a99", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA2OTg0ZWQxMTY0ZDc2MDdmODlmOWE2ZjQ4OTNkZDA1ZWMwNThhOTk=", "commit": {"author": {"name": "kjeremy", "email": "kjeremy@gmail.com", "date": "2019-11-15T22:13:52Z"}, "committer": {"name": "kjeremy", "email": "kjeremy@gmail.com", "date": "2019-11-15T22:13:52Z"}, "message": "Add a test that uses classify_name", "tree": {"sha": "9aeda032ad5e09a6f48e1a4d78945b5783573bb1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9aeda032ad5e09a6f48e1a4d78945b5783573bb1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/06984ed1164d7607f89f9a6f4893dd05ec058a99", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/06984ed1164d7607f89f9a6f4893dd05ec058a99", "html_url": "https://github.com/rust-lang/rust/commit/06984ed1164d7607f89f9a6f4893dd05ec058a99", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/06984ed1164d7607f89f9a6f4893dd05ec058a99/comments", "author": {"login": "kjeremy", "id": 4325700, "node_id": "MDQ6VXNlcjQzMjU3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/4325700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kjeremy", "html_url": "https://github.com/kjeremy", "followers_url": "https://api.github.com/users/kjeremy/followers", "following_url": "https://api.github.com/users/kjeremy/following{/other_user}", "gists_url": "https://api.github.com/users/kjeremy/gists{/gist_id}", "starred_url": "https://api.github.com/users/kjeremy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kjeremy/subscriptions", "organizations_url": "https://api.github.com/users/kjeremy/orgs", "repos_url": "https://api.github.com/users/kjeremy/repos", "events_url": "https://api.github.com/users/kjeremy/events{/privacy}", "received_events_url": "https://api.github.com/users/kjeremy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kjeremy", "id": 4325700, "node_id": "MDQ6VXNlcjQzMjU3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/4325700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kjeremy", "html_url": "https://github.com/kjeremy", "followers_url": "https://api.github.com/users/kjeremy/followers", "following_url": "https://api.github.com/users/kjeremy/following{/other_user}", "gists_url": "https://api.github.com/users/kjeremy/gists{/gist_id}", "starred_url": "https://api.github.com/users/kjeremy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kjeremy/subscriptions", "organizations_url": "https://api.github.com/users/kjeremy/orgs", "repos_url": "https://api.github.com/users/kjeremy/repos", "events_url": "https://api.github.com/users/kjeremy/events{/privacy}", "received_events_url": "https://api.github.com/users/kjeremy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "60fd260e7fb8c88cb9037377dc75f901a54bbe20", "url": "https://api.github.com/repos/rust-lang/rust/commits/60fd260e7fb8c88cb9037377dc75f901a54bbe20", "html_url": "https://github.com/rust-lang/rust/commit/60fd260e7fb8c88cb9037377dc75f901a54bbe20"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "faa88d9882be6b698e9df201f731f4580f7058dc", "filename": "crates/ra_ide_api/src/references.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/06984ed1164d7607f89f9a6f4893dd05ec058a99/crates%2Fra_ide_api%2Fsrc%2Freferences.rs", "raw_url": "https://github.com/rust-lang/rust/raw/06984ed1164d7607f89f9a6f4893dd05ec058a99/crates%2Fra_ide_api%2Fsrc%2Freferences.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Freferences.rs?ref=06984ed1164d7607f89f9a6f4893dd05ec058a99", "patch": "@@ -369,6 +369,21 @@ mod tests {\n         assert_eq!(refs.len(), 2);\n     }\n \n+    #[test]\n+    fn test_find_all_refs_macro_def() {\n+        let code = r#\"\n+        #[macro_export]\n+        macro_rules! m1<|> { () => (()) }\n+\n+        fn foo() {\n+            m1();\n+            m1();\n+        }\"#;\n+\n+        let refs = get_all_refs(code);\n+        assert_eq!(refs.len(), 3);\n+    }\n+\n     fn get_all_refs(text: &str) -> ReferenceSearchResult {\n         let (analysis, position) = single_file_with_position(text);\n         analysis.find_all_refs(position, None).unwrap().unwrap()"}]}