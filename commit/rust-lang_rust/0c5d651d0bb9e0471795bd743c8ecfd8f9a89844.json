{"sha": "0c5d651d0bb9e0471795bd743c8ecfd8f9a89844", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBjNWQ2NTFkMGJiOWUwNDcxNzk1YmQ3NDNjOGVjZmQ4ZjlhODk4NDQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-05-19T04:19:07Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-05-19T04:19:07Z"}, "message": "Auto merge of #33688 - jonathandturner:fix_old_school, r=nikomatsakis\n\nFix for old school error issues, improvements to new school\n\nThis PR:\n* Fixes some old school error issues, specifically #33559, #33543, #33366\n* Improves wording borrowck errors with match patterns\n* De-emphasize multi-line spans, so we don't color the single source character when we're trying to say \"span starts here\"\n* Rollup of #33392 (which should help fix #33390)\n\nr? @nikomatsakis", "tree": {"sha": "21cd95b19248dbff4d36634c6922fcb40463e765", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/21cd95b19248dbff4d36634c6922fcb40463e765"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0c5d651d0bb9e0471795bd743c8ecfd8f9a89844", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0c5d651d0bb9e0471795bd743c8ecfd8f9a89844", "html_url": "https://github.com/rust-lang/rust/commit/0c5d651d0bb9e0471795bd743c8ecfd8f9a89844", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0c5d651d0bb9e0471795bd743c8ecfd8f9a89844/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9c6904ca1e4ab95f6c48973dea718326735ad564", "url": "https://api.github.com/repos/rust-lang/rust/commits/9c6904ca1e4ab95f6c48973dea718326735ad564", "html_url": "https://github.com/rust-lang/rust/commit/9c6904ca1e4ab95f6c48973dea718326735ad564"}, {"sha": "b0a317dc6f8f9ecc973645f2d00f304f96eaf8b8", "url": "https://api.github.com/repos/rust-lang/rust/commits/b0a317dc6f8f9ecc973645f2d00f304f96eaf8b8", "html_url": "https://github.com/rust-lang/rust/commit/b0a317dc6f8f9ecc973645f2d00f304f96eaf8b8"}], "stats": {"total": 193, "additions": 125, "deletions": 68}, "files": [{"sha": "8afee54c4bc683fb07ccb97942678ef70da17e8f", "filename": "src/librustc/infer/error_reporting.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0c5d651d0bb9e0471795bd743c8ecfd8f9a89844/src%2Flibrustc%2Finfer%2Ferror_reporting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c5d651d0bb9e0471795bd743c8ecfd8f9a89844/src%2Flibrustc%2Finfer%2Ferror_reporting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Ferror_reporting.rs?ref=0c5d651d0bb9e0471795bd743c8ecfd8f9a89844", "patch": "@@ -90,7 +90,7 @@ use std::cell::{Cell, RefCell};\n use std::char::from_u32;\n use std::fmt;\n use syntax::ast;\n-use syntax::errors::DiagnosticBuilder;\n+use syntax::errors::{DiagnosticBuilder, check_old_skool};\n use syntax::codemap::{self, Pos, Span};\n use syntax::parse::token;\n use syntax::ptr::P;\n@@ -481,7 +481,7 @@ impl<'a, 'gcx, 'tcx> InferCtxt<'a, 'gcx, 'tcx> {\n                                        \"{}\",\n                                        trace.origin);\n \n-        if !is_simple_error {\n+        if !is_simple_error || check_old_skool() {\n             err.note_expected_found(&\"type\", &expected, &found);\n         }\n "}, {"sha": "36f95f62d0606ef49480e73a9827029e087786b7", "filename": "src/librustc_borrowck/borrowck/check_loans.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0c5d651d0bb9e0471795bd743c8ecfd8f9a89844/src%2Flibrustc_borrowck%2Fborrowck%2Fcheck_loans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c5d651d0bb9e0471795bd743c8ecfd8f9a89844/src%2Flibrustc_borrowck%2Fborrowck%2Fcheck_loans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fborrowck%2Fcheck_loans.rs?ref=0c5d651d0bb9e0471795bd743c8ecfd8f9a89844", "patch": "@@ -872,7 +872,7 @@ impl<'a, 'tcx> CheckLoanCtxt<'a, 'tcx> {\n                        &format!(\"borrow of `{}` occurs here\",\n                                self.bccx.loan_path_to_string(loan_path)))\n             .span_label(span,\n-                       &format!(\"assignment to `{}` occurs here\",\n+                       &format!(\"assignment to borrowed `{}` occurs here\",\n                                self.bccx.loan_path_to_string(loan_path)))\n             .emit();\n     }"}, {"sha": "5ebb1ab32b8f82a84ab1488badd0fe2445f31436", "filename": "src/librustc_borrowck/borrowck/gather_loans/move_error.rs", "status": "modified", "additions": 6, "deletions": 10, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/0c5d651d0bb9e0471795bd743c8ecfd8f9a89844/src%2Flibrustc_borrowck%2Fborrowck%2Fgather_loans%2Fmove_error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c5d651d0bb9e0471795bd743c8ecfd8f9a89844/src%2Flibrustc_borrowck%2Fborrowck%2Fgather_loans%2Fmove_error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fborrowck%2Fgather_loans%2Fmove_error.rs?ref=0c5d651d0bb9e0471795bd743c8ecfd8f9a89844", "patch": "@@ -126,7 +126,7 @@ fn report_cannot_move_out_of<'a, 'tcx>(bccx: &BorrowckCtxt<'a, 'tcx>,\n                              move_from.descriptive_string(bccx.tcx));\n             err.span_label(\n                 move_from.span,\n-                &format!(\"move occurs here\")\n+                &format!(\"cannot move out of {}\", move_from.descriptive_string(bccx.tcx))\n                 );\n             err\n         }\n@@ -138,7 +138,7 @@ fn report_cannot_move_out_of<'a, 'tcx>(bccx: &BorrowckCtxt<'a, 'tcx>,\n                                                \"cannot move out of type `{}`, \\\n                                                a non-copy fixed-size array\",\n                                                b.ty);\n-                err.span_label(move_from.span, &format!(\"can not move out of here\"));\n+                err.span_label(move_from.span, &format!(\"cannot move out of here\"));\n                 err\n             } else {\n                 span_bug!(move_from.span, \"this path should not cause illegal move\");\n@@ -154,7 +154,7 @@ fn report_cannot_move_out_of<'a, 'tcx>(bccx: &BorrowckCtxt<'a, 'tcx>,\n                                                    \"cannot move out of type `{}`, \\\n                                                    which defines the `Drop` trait\",\n                                                    b.ty);\n-                    err.span_label(move_from.span, &format!(\"can not move out of here\"));\n+                    err.span_label(move_from.span, &format!(\"cannot move out of here\"));\n                     err\n                 },\n                 _ => {\n@@ -175,16 +175,12 @@ fn note_move_destination(mut err: DiagnosticBuilder,\n     if is_first_note {\n         err.span_label(\n             move_to_span,\n-            &format!(\"attempting to move value to here\"));\n-        err.help(\n-            &format!(\"to prevent the move, \\\n-                      use `ref {0}` or `ref mut {0}` to capture value by \\\n-                      reference\",\n+            &format!(\"hint: to prevent move, use `ref {0}` or `ref mut {0}`\",\n                      pat_name));\n         err\n     } else {\n-        err.span_note(move_to_span,\n-                      &format!(\"and here (use `ref {0}` or `ref mut {0}`)\",\n+        err.span_label(move_to_span,\n+                      &format!(\"...and here (use `ref {0}` or `ref mut {0}`)\",\n                                pat_name));\n         err\n     }"}, {"sha": "8d0c93f21b242afa07a56d877fb7518e46ab2373", "filename": "src/libsyntax/errors/emitter.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/0c5d651d0bb9e0471795bd743c8ecfd8f9a89844/src%2Flibsyntax%2Ferrors%2Femitter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c5d651d0bb9e0471795bd743c8ecfd8f9a89844/src%2Flibsyntax%2Ferrors%2Femitter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ferrors%2Femitter.rs?ref=0c5d651d0bb9e0471795bd743c8ecfd8f9a89844", "patch": "@@ -367,7 +367,8 @@ impl EmitterWriter {\n             let mut output_vec = vec![];\n \n             for span_label in msp.span_labels() {\n-                let mut snippet_data = snippet_data.clone();\n+                let mut snippet_data = SnippetData::new(self.cm.clone(),\n+                                                        Some(span_label.span));\n \n                 snippet_data.push(span_label.span,\n                                   span_label.is_primary,\n@@ -524,6 +525,13 @@ impl Destination {\n             }\n             Style::Quotation => {\n             }\n+            Style::OldSkoolNote => {\n+                self.start_attr(term::Attr::Bold)?;\n+                self.start_attr(term::Attr::ForegroundColor(term::color::BRIGHT_GREEN))?;\n+            }\n+            Style::OldSkoolNoteText => {\n+                self.start_attr(term::Attr::Bold)?;\n+            }\n             Style::UnderlinePrimary | Style::LabelPrimary => {\n                 self.start_attr(term::Attr::Bold)?;\n                 self.start_attr(term::Attr::ForegroundColor(lvl.color()))?;"}, {"sha": "f06672fe111bf81203aa94d317f1170cb2efae2f", "filename": "src/libsyntax/errors/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0c5d651d0bb9e0471795bd743c8ecfd8f9a89844/src%2Flibsyntax%2Ferrors%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c5d651d0bb9e0471795bd743c8ecfd8f9a89844/src%2Flibsyntax%2Ferrors%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ferrors%2Fmod.rs?ref=0c5d651d0bb9e0471795bd743c8ecfd8f9a89844", "patch": "@@ -699,13 +699,13 @@ pub fn expect<T, M>(diag: &Handler, opt: Option<T>, msg: M) -> T where\n ///\n /// FIXME(#33240)\n #[cfg(not(test))]\n-fn check_old_skool() -> bool {\n+pub fn check_old_skool() -> bool {\n     use std::env;\n     env::var(\"RUST_NEW_ERROR_FORMAT\").is_err()\n }\n \n /// For unit tests, use the new format.\n #[cfg(test)]\n-fn check_old_skool() -> bool {\n+pub fn check_old_skool() -> bool {\n     false\n }"}, {"sha": "188e676e7dff6d41d82d7f1681e6efb77d7eea6d", "filename": "src/libsyntax/errors/snippet/mod.rs", "status": "modified", "additions": 43, "deletions": 7, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/0c5d651d0bb9e0471795bd743c8ecfd8f9a89844/src%2Flibsyntax%2Ferrors%2Fsnippet%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c5d651d0bb9e0471795bd743c8ecfd8f9a89844/src%2Flibsyntax%2Ferrors%2Fsnippet%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ferrors%2Fsnippet%2Fmod.rs?ref=0c5d651d0bb9e0471795bd743c8ecfd8f9a89844", "patch": "@@ -58,6 +58,9 @@ struct Annotation {\n     /// Is this annotation derived from primary span\n     is_primary: bool,\n \n+    /// Is this a large span minimized down to a smaller span\n+    is_minimized: bool,\n+\n     /// Optional label to display adjacent to the annotation.\n     label: Option<String>,\n }\n@@ -90,6 +93,8 @@ pub enum Style {\n     UnderlineSecondary,\n     LabelPrimary,\n     LabelSecondary,\n+    OldSkoolNoteText,\n+    OldSkoolNote,\n     NoStyle,\n }\n \n@@ -382,10 +387,10 @@ impl FileInfo {\n         // Basically, although this loses information, multi-line spans just\n         // never look good.\n \n-        let (line, start_col, mut end_col) = if lines.len() == 1 {\n-            (lines[0].line_index, lines[0].start_col, lines[0].end_col)\n+        let (line, start_col, mut end_col, is_minimized) = if lines.len() == 1 {\n+            (lines[0].line_index, lines[0].start_col, lines[0].end_col, false)\n         } else {\n-            (lines[0].line_index, lines[0].start_col, CharPos(lines[0].start_col.0 + 1))\n+            (lines[0].line_index, lines[0].start_col, CharPos(lines[0].start_col.0 + 1), true)\n         };\n \n         // Watch out for \"empty spans\". If we get a span like 6..6, we\n@@ -401,6 +406,7 @@ impl FileInfo {\n         self.lines[index].push_annotation(start_col,\n                                           end_col,\n                                           is_primary,\n+                                          is_minimized,\n                                           label);\n     }\n \n@@ -497,6 +503,30 @@ impl FileInfo {\n                     match self.primary_span {\n                         Some(span) => {\n                             let lo = codemap.lookup_char_pos(span.lo);\n+                            let hi = codemap.lookup_char_pos(span.hi);\n+                            //Before each secondary line in old skool-mode, print the label\n+                            //as an old-style note\n+                            if !line.annotations[0].is_primary {\n+                                if let Some(ann) = line.annotations[0].label.clone() {\n+                                    output.push(RenderedLine {\n+                                        text: vec![StyledString {\n+                                            text: lo.file.name.clone(),\n+                                            style: Style::FileNameStyle,\n+                                        }, StyledString {\n+                                            text: format!(\":{}:{}: {}:{} \", lo.line, lo.col.0 + 1,\n+                                                hi.line, hi.col.0+1),\n+                                            style: Style::LineAndColumn,\n+                                        }, StyledString {\n+                                            text: format!(\"note: \"),\n+                                            style: Style::OldSkoolNote,\n+                                        }, StyledString {\n+                                            text: format!(\"{}\", ann),\n+                                            style: Style::OldSkoolNoteText,\n+                                        }],\n+                                        kind: RenderedLineKind::Annotations,\n+                                    });\n+                                }\n+                            }\n                             rendered_lines[0].text.insert(0, StyledString {\n                                 text: format!(\":{} \", lo.line),\n                                 style: Style::LineAndColumn,\n@@ -598,15 +628,15 @@ impl FileInfo {\n                             if annotation.is_primary {\n                                 Style::UnderlinePrimary\n                             } else {\n-                                Style::UnderlineSecondary\n+                                Style::OldSkoolNote\n                             });\n                     }\n                     else {\n                         styled_buffer.putc(1, p, '~',\n                             if annotation.is_primary {\n                                 Style::UnderlinePrimary\n                             } else {\n-                                Style::UnderlineSecondary\n+                                Style::OldSkoolNote\n                             });\n                     }\n                 }\n@@ -615,10 +645,14 @@ impl FileInfo {\n                 for p in annotation.start_col .. annotation.end_col {\n                     if annotation.is_primary {\n                         styled_buffer.putc(1, p, '^', Style::UnderlinePrimary);\n-                        styled_buffer.set_style(0, p, Style::UnderlinePrimary);\n+                        if !annotation.is_minimized {\n+                            styled_buffer.set_style(0, p, Style::UnderlinePrimary);\n+                        }\n                     } else {\n                         styled_buffer.putc(1, p, '-', Style::UnderlineSecondary);\n-                        styled_buffer.set_style(0, p, Style::UnderlineSecondary);\n+                        if !annotation.is_minimized {\n+                            styled_buffer.set_style(0, p, Style::UnderlineSecondary);\n+                        }\n                     }\n                 }\n             }\n@@ -819,11 +853,13 @@ impl Line {\n                        start: CharPos,\n                        end: CharPos,\n                        is_primary: bool,\n+                       is_minimized: bool,\n                        label: Option<String>) {\n         self.annotations.push(Annotation {\n             start_col: start.0,\n             end_col: end.0,\n             is_primary: is_primary,\n+            is_minimized: is_minimized,\n             label: label,\n         });\n     }"}, {"sha": "438a548819bc72b50f051578f51fe138d2f79ce3", "filename": "src/test/compile-fail/borrowck/borrowck-move-error-with-note.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/0c5d651d0bb9e0471795bd743c8ecfd8f9a89844/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-move-error-with-note.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c5d651d0bb9e0471795bd743c8ecfd8f9a89844/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-move-error-with-note.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-move-error-with-note.rs?ref=0c5d651d0bb9e0471795bd743c8ecfd8f9a89844", "patch": "@@ -19,8 +19,8 @@ enum Foo {\n fn blah() {\n     let f = &Foo::Foo1(box 1, box 2);\n     match *f {             //~ ERROR cannot move out of\n-                           //~| move occurs here\n-        Foo::Foo1(num1,         //~ NOTE attempting to move value to here\n+                           //~| cannot move out\n+        Foo::Foo1(num1,         //~ NOTE to prevent move\n                   num2) => (),  //~ NOTE and here\n         Foo::Foo2(num) => (),   //~ NOTE and here\n         Foo::Foo3 => ()\n@@ -38,8 +38,8 @@ impl Drop for S {\n fn move_in_match() {\n     match (S {f: \"foo\".to_string(), g: \"bar\".to_string()}) {\n         S {         //~ ERROR cannot move out of type `S`, which defines the `Drop` trait\n-        //~| can not move out of here\n-            f: _s,  //~ NOTE attempting to move value to here\n+        //~| cannot move out of here\n+            f: _s,  //~ NOTE to prevent move\n             g: _t   //~ NOTE and here\n         } => {}\n     }\n@@ -55,8 +55,8 @@ fn free<T>(_: T) {}\n fn blah2() {\n     let a = &A { a: box 1 };\n     match a.a {           //~ ERROR cannot move out of\n-                          //~| move occurs here\n-        n => {            //~ NOTE attempting to move value to here\n+                          //~| cannot move out\n+        n => {            //~ NOTE to prevent move\n             free(n)\n         }\n     }"}, {"sha": "15771295743c16592dff72545d909f6e18b7198a", "filename": "src/test/compile-fail/borrowck/borrowck-move-out-of-vec-tail.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0c5d651d0bb9e0471795bd743c8ecfd8f9a89844/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-move-out-of-vec-tail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c5d651d0bb9e0471795bd743c8ecfd8f9a89844/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-move-out-of-vec-tail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-move-out-of-vec-tail.rs?ref=0c5d651d0bb9e0471795bd743c8ecfd8f9a89844", "patch": "@@ -29,8 +29,8 @@ pub fn main() {\n             match tail {\n                 [Foo { string: a },\n                 //~^ ERROR cannot move out of borrowed content\n-                //~| move occurs here\n-                //~| attempting to move value to here\n+                //~| cannot move out\n+                //~| to prevent move\n                  Foo { string: b }] => {\n                     //~^ NOTE and here\n                 }"}, {"sha": "eec6c8473eb3d167bce7d644e773dada2c1120be", "filename": "src/test/compile-fail/borrowck/borrowck-vec-pattern-nesting.rs", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/0c5d651d0bb9e0471795bd743c8ecfd8f9a89844/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-vec-pattern-nesting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c5d651d0bb9e0471795bd743c8ecfd8f9a89844/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-vec-pattern-nesting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-vec-pattern-nesting.rs?ref=0c5d651d0bb9e0471795bd743c8ecfd8f9a89844", "patch": "@@ -19,7 +19,7 @@ fn a() {\n         [box ref _a, _, _] => {\n         //~^ borrow of `vec[..]` occurs here\n             vec[0] = box 4; //~ ERROR cannot assign\n-            //~^ assignment to `vec[..]` occurs here\n+            //~^ assignment to borrowed `vec[..]` occurs here\n         }\n     }\n }\n@@ -31,7 +31,7 @@ fn b() {\n         [_b..] => {\n         //~^ borrow of `vec[..]` occurs here\n             vec[0] = box 4; //~ ERROR cannot assign\n-            //~^ assignment to `vec[..]` occurs here\n+            //~^ assignment to borrowed `vec[..]` occurs here\n         }\n     }\n }\n@@ -41,8 +41,8 @@ fn c() {\n     let vec: &mut [Box<isize>] = &mut vec;\n     match vec {\n         [_a,         //~ ERROR cannot move out\n-        //~| move occurs here\n-        //~| attempting to move value to here\n+        //~| cannot move out\n+        //~| to prevent move\n          _b..] => {\n             // Note: `_a` is *moved* here, but `b` is borrowing,\n             // hence illegal.\n@@ -53,38 +53,38 @@ fn c() {\n         _ => {}\n     }\n     let a = vec[0]; //~ ERROR cannot move out\n-    //~^ NOTE attempting to move value to here\n-    //~| can not move out of here\n+    //~^ NOTE to prevent move\n+    //~| cannot move out of here\n }\n \n fn d() {\n     let mut vec = vec!(box 1, box 2, box 3);\n     let vec: &mut [Box<isize>] = &mut vec;\n     match vec {\n         [_a..,     //~ ERROR cannot move out\n-        //~^ move occurs here\n-         _b] => {} //~ NOTE attempting to move value to here\n+        //~^ cannot move out\n+         _b] => {} //~ NOTE to prevent move\n         _ => {}\n     }\n     let a = vec[0]; //~ ERROR cannot move out\n-    //~^ NOTE attempting to move value to here\n-    //~| can not move out of here\n+    //~^ NOTE to prevent move\n+    //~| cannot move out of here\n }\n \n fn e() {\n     let mut vec = vec!(box 1, box 2, box 3);\n     let vec: &mut [Box<isize>] = &mut vec;\n     match vec {\n         [_a, _b, _c] => {}  //~ ERROR cannot move out\n-        //~| move occurs here\n-        //~| NOTE attempting to move value to here\n+        //~| cannot move out\n+        //~| NOTE to prevent move\n         //~| NOTE and here\n         //~| NOTE and here\n         _ => {}\n     }\n     let a = vec[0]; //~ ERROR cannot move out\n-    //~^ NOTE attempting to move value to here\n-    //~| can not move out of here\n+    //~^ NOTE to prevent move\n+    //~| cannot move out of here\n }\n \n fn main() {}"}, {"sha": "634a4014e1189f90af08402ba899e983808b2c19", "filename": "src/test/compile-fail/issue-26480.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0c5d651d0bb9e0471795bd743c8ecfd8f9a89844/src%2Ftest%2Fcompile-fail%2Fissue-26480.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c5d651d0bb9e0471795bd743c8ecfd8f9a89844/src%2Ftest%2Fcompile-fail%2Fissue-26480.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-26480.rs?ref=0c5d651d0bb9e0471795bd743c8ecfd8f9a89844", "patch": "@@ -26,6 +26,8 @@ macro_rules! write {\n                   $arr.len() * size_of($arr[0]));\n             //~^ ERROR mismatched types\n             //~| expected u64, found usize\n+            //~| expected type\n+            //~| found type\n         }\n     }}\n }\n@@ -38,6 +40,8 @@ fn main() {\n     let hello = ['H', 'e', 'y'];\n     write!(hello);\n     //~^ NOTE in this expansion of write!\n+    //~| NOTE in this expansion of write!\n+    //~| NOTE in this expansion of write!\n \n     cast!(2);\n     //~^ NOTE in this expansion of cast!"}, {"sha": "deaff3c3521112d15e7da294563f71f6690cc190", "filename": "src/test/compile-fail/moves-based-on-type-block-bad.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0c5d651d0bb9e0471795bd743c8ecfd8f9a89844/src%2Ftest%2Fcompile-fail%2Fmoves-based-on-type-block-bad.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c5d651d0bb9e0471795bd743c8ecfd8f9a89844/src%2Ftest%2Fcompile-fail%2Fmoves-based-on-type-block-bad.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmoves-based-on-type-block-bad.rs?ref=0c5d651d0bb9e0471795bd743c8ecfd8f9a89844", "patch": "@@ -32,9 +32,10 @@ fn main() {\n     loop {\n         f(&s, |hellothere| {\n             match hellothere.x { //~ ERROR cannot move out\n-                                 //~| move occurs here\n+                                 //~| cannot move out of borrowed content\n                 box E::Foo(_) => {}\n-                box E::Bar(x) => println!(\"{}\", x.to_string()), //~ NOTE attempting to move value to here\n+                box E::Bar(x) => println!(\"{}\", x.to_string()),\n+                //~^ NOTE to prevent move\n                 box E::Baz => {}\n             }\n         })"}, {"sha": "84b78547ab9a4af718bb6cbdd508650c60eddf50", "filename": "src/tools/compiletest/src/json.rs", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/0c5d651d0bb9e0471795bd743c8ecfd8f9a89844/src%2Ftools%2Fcompiletest%2Fsrc%2Fjson.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c5d651d0bb9e0471795bd743c8ecfd8f9a89844/src%2Ftools%2Fcompiletest%2Fsrc%2Fjson.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fjson.rs?ref=0c5d651d0bb9e0471795bd743c8ecfd8f9a89844", "patch": "@@ -12,6 +12,7 @@ use errors::{Error, ErrorKind};\n use rustc_serialize::json;\n use std::str::FromStr;\n use std::path::Path;\n+use runtest::{ProcRes};\n \n // These structs are a subset of the ones found in\n // `syntax::errors::json`.\n@@ -55,13 +56,13 @@ struct DiagnosticCode {\n     explanation: Option<String>,\n }\n \n-pub fn parse_output(file_name: &str, output: &str) -> Vec<Error> {\n+pub fn parse_output(file_name: &str, output: &str, proc_res: &ProcRes) -> Vec<Error> {\n     output.lines()\n-          .flat_map(|line| parse_line(file_name, line))\n+          .flat_map(|line| parse_line(file_name, line, output, proc_res))\n           .collect()\n }\n \n-fn parse_line(file_name: &str, line: &str) -> Vec<Error> {\n+fn parse_line(file_name: &str, line: &str, output: &str, proc_res: &ProcRes) -> Vec<Error> {\n     // The compiler sometimes intermingles non-JSON stuff into the\n     // output.  This hack just skips over such lines. Yuck.\n     if line.chars().next() == Some('{') {\n@@ -72,7 +73,9 @@ fn parse_line(file_name: &str, line: &str) -> Vec<Error> {\n                 expected_errors\n             }\n             Err(error) => {\n-                panic!(\"failed to decode compiler output as json: `{}`\", error);\n+                proc_res.fatal(Some(&format!(\n+                    \"failed to decode compiler output as json: `{}`\\noutput: {}\\nline: {}\",\n+                    error, line, output)));\n             }\n         }\n     } else {"}, {"sha": "e6dc3a9d360ffff6ae97d32d62d976b52d637c73", "filename": "src/tools/compiletest/src/runtest.rs", "status": "modified", "additions": 26, "deletions": 17, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/0c5d651d0bb9e0471795bd743c8ecfd8f9a89844/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c5d651d0bb9e0471795bd743c8ecfd8f9a89844/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs?ref=0c5d651d0bb9e0471795bd743c8ecfd8f9a89844", "patch": "@@ -1003,7 +1003,7 @@ actual:\\n\\\n         let expect_note = expected_errors.iter().any(|ee| ee.kind == Some(ErrorKind::Note));\n \n         // Parse the JSON output from the compiler and extract out the messages.\n-        let actual_errors = json::parse_output(&file_name, &proc_res.stderr);\n+        let actual_errors = json::parse_output(&file_name, &proc_res.stderr, &proc_res);\n         let mut unexpected = 0;\n         let mut not_found = 0;\n         let mut found = vec![false; expected_errors.len()];\n@@ -1547,21 +1547,7 @@ actual:\\n\\\n \n     fn fatal_proc_rec(&self, err: &str, proc_res: &ProcRes) -> ! {\n         self.error(err);\n-        print!(\"\\\n-            status: {}\\n\\\n-            command: {}\\n\\\n-            stdout:\\n\\\n-            ------------------------------------------\\n\\\n-            {}\\n\\\n-            ------------------------------------------\\n\\\n-            stderr:\\n\\\n-            ------------------------------------------\\n\\\n-            {}\\n\\\n-            ------------------------------------------\\n\\\n-            \\n\",\n-               proc_res.status, proc_res.cmdline, proc_res.stdout,\n-               proc_res.stderr);\n-        panic!();\n+        proc_res.fatal(None);\n     }\n \n     fn _arm_exec_compiled_test(&self, env: Vec<(String, String)>) -> ProcRes {\n@@ -2211,7 +2197,7 @@ struct ProcArgs {\n     args: Vec<String>,\n }\n \n-struct ProcRes {\n+pub struct ProcRes {\n     status: Status,\n     stdout: String,\n     stderr: String,\n@@ -2223,6 +2209,29 @@ enum Status {\n     Normal(ExitStatus),\n }\n \n+impl ProcRes {\n+    pub fn fatal(&self, err: Option<&str>) -> ! {\n+        if let Some(e) = err {\n+            println!(\"\\nerror: {}\", e);\n+        }\n+        print!(\"\\\n+            status: {}\\n\\\n+            command: {}\\n\\\n+            stdout:\\n\\\n+            ------------------------------------------\\n\\\n+            {}\\n\\\n+            ------------------------------------------\\n\\\n+            stderr:\\n\\\n+            ------------------------------------------\\n\\\n+            {}\\n\\\n+            ------------------------------------------\\n\\\n+            \\n\",\n+               self.status, self.cmdline, self.stdout,\n+               self.stderr);\n+        panic!();\n+    }\n+}\n+\n impl Status {\n     fn code(&self) -> Option<i32> {\n         match *self {"}]}