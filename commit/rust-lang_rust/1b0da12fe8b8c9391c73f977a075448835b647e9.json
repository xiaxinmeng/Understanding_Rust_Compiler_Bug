{"sha": "1b0da12fe8b8c9391c73f977a075448835b647e9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFiMGRhMTJmZThiOGM5MzkxYzczZjk3N2EwNzU0NDg4MzViNjQ3ZTk=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-12-31T23:05:22Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-12-31T23:05:22Z"}, "message": "Update method-fold env with fake item_fn representing the method.", "tree": {"sha": "6174062e988601b2c75037737f8634245fa13f83", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6174062e988601b2c75037737f8634245fa13f83"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1b0da12fe8b8c9391c73f977a075448835b647e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1b0da12fe8b8c9391c73f977a075448835b647e9", "html_url": "https://github.com/rust-lang/rust/commit/1b0da12fe8b8c9391c73f977a075448835b647e9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1b0da12fe8b8c9391c73f977a075448835b647e9/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ad889ba3ae5e11e3119b7534200d13144d7ae381", "url": "https://api.github.com/repos/rust-lang/rust/commits/ad889ba3ae5e11e3119b7534200d13144d7ae381", "html_url": "https://github.com/rust-lang/rust/commit/ad889ba3ae5e11e3119b7534200d13144d7ae381"}], "stats": {"total": 13, "additions": 12, "deletions": 1}, "files": [{"sha": "31ccd821f0063ca93c97838734881f98dde7a420", "filename": "src/comp/middle/fold.rs", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/1b0da12fe8b8c9391c73f977a075448835b647e9/src%2Fcomp%2Fmiddle%2Ffold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b0da12fe8b8c9391c73f977a075448835b647e9/src%2Fcomp%2Fmiddle%2Ffold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ffold.rs?ref=1b0da12fe8b8c9391c73f977a075448835b647e9", "patch": "@@ -663,8 +663,19 @@ fn fold_obj[ENV](&ENV env, ast_fold[ENV] fld, &ast._obj ob) -> ast._obj {\n     for (ast.obj_field f in ob.fields) {\n         fields += fold_obj_field(env, fld, f);\n     }\n+    let vec[ast.ty_param] tp = vec();\n     for (@ast.method m in ob.methods) {\n-        append[@ast.method](meths, fold_method(env, fld, m));\n+        // Fake-up an ast.item for this method.\n+        // FIXME: this is kinda awful. Maybe we should reformulate\n+        // the way we store methods in the AST?\n+        let @ast.item i = @rec(node=ast.item_fn(m.node.ident,\n+                                                m.node.meth,\n+                                                tp,\n+                                                m.node.id,\n+                                                m.node.ann),\n+                               span=m.span);\n+        let ENV _env = fld.update_env_for_item(env, i);\n+        append[@ast.method](meths, fold_method(_env, fld, m));\n     }\n     ret fld.fold_obj(env, fields, meths);\n }"}]}