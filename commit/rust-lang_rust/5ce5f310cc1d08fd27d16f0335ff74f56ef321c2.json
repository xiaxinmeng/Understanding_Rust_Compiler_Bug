{"sha": "5ce5f310cc1d08fd27d16f0335ff74f56ef321c2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVjZTVmMzEwY2MxZDA4ZmQyN2QxNmYwMzM1ZmY3NGY1NmVmMzIxYzI=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-07-31T22:25:46Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-07-31T22:25:46Z"}, "message": "check_const: use the same ParamEnv as codegen for statics", "tree": {"sha": "c3bcb40257a3b71fd34068d4e5a2db386fe24e5e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c3bcb40257a3b71fd34068d4e5a2db386fe24e5e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5ce5f310cc1d08fd27d16f0335ff74f56ef321c2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5ce5f310cc1d08fd27d16f0335ff74f56ef321c2", "html_url": "https://github.com/rust-lang/rust/commit/5ce5f310cc1d08fd27d16f0335ff74f56ef321c2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5ce5f310cc1d08fd27d16f0335ff74f56ef321c2/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "70cac59031d5c33962a1f53cdca9359c0dcd1f9f", "url": "https://api.github.com/repos/rust-lang/rust/commits/70cac59031d5c33962a1f53cdca9359c0dcd1f9f", "html_url": "https://github.com/rust-lang/rust/commit/70cac59031d5c33962a1f53cdca9359c0dcd1f9f"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "223edd16c635a40f405f48b970fda7cc4b982dd5", "filename": "src/librustc_lint/builtin.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/5ce5f310cc1d08fd27d16f0335ff74f56ef321c2/src%2Flibrustc_lint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ce5f310cc1d08fd27d16f0335ff74f56ef321c2/src%2Flibrustc_lint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Fbuiltin.rs?ref=5ce5f310cc1d08fd27d16f0335ff74f56ef321c2", "patch": "@@ -1630,16 +1630,21 @@ fn validate_const<'a, 'tcx>(\n \n fn check_const(cx: &LateContext, body_id: hir::BodyId, what: &str) {\n     let def_id = cx.tcx.hir.body_owner_def_id(body_id);\n-    let param_env = cx.tcx.param_env(def_id);\n+    let is_static = cx.tcx.is_static(def_id).is_some();\n+    let param_env = if is_static {\n+        ty::ParamEnv::reveal_all()\n+    } else {\n+        cx.tcx.param_env(def_id)\n+    };\n     let cid = ::rustc::mir::interpret::GlobalId {\n         instance: ty::Instance::mono(cx.tcx, def_id),\n         promoted: None\n     };\n     match cx.tcx.const_eval(param_env.and(cid)) {\n         Ok(val) => validate_const(cx.tcx, val, param_env, cid, what),\n         Err(err) => {\n-            // errors for statics are already reported directly in the query\n-            if cx.tcx.is_static(def_id).is_none() {\n+            // errors for statics are already reported directly in the query, avoid duplicates\n+            if !is_static {\n                 let span = cx.tcx.def_span(def_id);\n                 err.report_as_lint(\n                     cx.tcx.at(span),"}]}