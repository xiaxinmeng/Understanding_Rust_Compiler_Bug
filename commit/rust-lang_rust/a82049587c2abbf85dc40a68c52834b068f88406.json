{"sha": "a82049587c2abbf85dc40a68c52834b068f88406", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE4MjA0OTU4N2MyYWJiZjg1ZGM0MGE2OGM1MjgzNGIwNjhmODg0MDY=", "commit": {"author": {"name": "David Cook", "email": "divergentdave@gmail.com", "date": "2020-01-26T21:45:35Z"}, "committer": {"name": "David Cook", "email": "divergentdave@gmail.com", "date": "2020-02-23T21:28:50Z"}, "message": "Use longer file names in test", "tree": {"sha": "6281ecfb21659f93ff9aad606f1df3edd4f55e8b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6281ecfb21659f93ff9aad606f1df3edd4f55e8b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a82049587c2abbf85dc40a68c52834b068f88406", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a82049587c2abbf85dc40a68c52834b068f88406", "html_url": "https://github.com/rust-lang/rust/commit/a82049587c2abbf85dc40a68c52834b068f88406", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a82049587c2abbf85dc40a68c52834b068f88406/comments", "author": {"login": "divergentdave", "id": 181772, "node_id": "MDQ6VXNlcjE4MTc3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/181772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/divergentdave", "html_url": "https://github.com/divergentdave", "followers_url": "https://api.github.com/users/divergentdave/followers", "following_url": "https://api.github.com/users/divergentdave/following{/other_user}", "gists_url": "https://api.github.com/users/divergentdave/gists{/gist_id}", "starred_url": "https://api.github.com/users/divergentdave/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/divergentdave/subscriptions", "organizations_url": "https://api.github.com/users/divergentdave/orgs", "repos_url": "https://api.github.com/users/divergentdave/repos", "events_url": "https://api.github.com/users/divergentdave/events{/privacy}", "received_events_url": "https://api.github.com/users/divergentdave/received_events", "type": "User", "site_admin": false}, "committer": {"login": "divergentdave", "id": 181772, "node_id": "MDQ6VXNlcjE4MTc3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/181772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/divergentdave", "html_url": "https://github.com/divergentdave", "followers_url": "https://api.github.com/users/divergentdave/followers", "following_url": "https://api.github.com/users/divergentdave/following{/other_user}", "gists_url": "https://api.github.com/users/divergentdave/gists{/gist_id}", "starred_url": "https://api.github.com/users/divergentdave/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/divergentdave/subscriptions", "organizations_url": "https://api.github.com/users/divergentdave/orgs", "repos_url": "https://api.github.com/users/divergentdave/repos", "events_url": "https://api.github.com/users/divergentdave/events{/privacy}", "received_events_url": "https://api.github.com/users/divergentdave/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d461c12c83bc9805b818b9ba9a4791ee81158d97", "url": "https://api.github.com/repos/rust-lang/rust/commits/d461c12c83bc9805b818b9ba9a4791ee81158d97", "html_url": "https://github.com/rust-lang/rust/commit/d461c12c83bc9805b818b9ba9a4791ee81158d97"}], "stats": {"total": 22, "additions": 12, "deletions": 10}, "files": [{"sha": "59eb4e014378e1b6e12e2edba852ca0bf2bc988b", "filename": "tests/run-pass/fs.rs", "status": "modified", "additions": 12, "deletions": 10, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/a82049587c2abbf85dc40a68c52834b068f88406/tests%2Frun-pass%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a82049587c2abbf85dc40a68c52834b068f88406/tests%2Frun-pass%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Ffs.rs?ref=a82049587c2abbf85dc40a68c52834b068f88406", "patch": "@@ -201,29 +201,31 @@ fn test_directory() {\n     assert!(dir_path.metadata().unwrap().is_dir());\n \n     // Create some files inside the directory\n-    let f1_path = dir_path.join(\"f1\");\n-    drop(File::create(&f1_path).unwrap());\n-    let f2_path = dir_path.join(\"f2\");\n-    drop(File::create(&f2_path).unwrap());\n+    let path_1 = dir_path.join(\"test_file_1\");\n+    drop(File::create(&path_1).unwrap());\n+    let path_2 = dir_path.join(\"test_file_2\");\n+    drop(File::create(&path_2).unwrap());\n     // Test that the files are present inside the directory\n     let mut dir_iter = read_dir(&dir_path).unwrap();\n     let first_dir_entry = dir_iter.next().unwrap().unwrap();\n     let second_dir_entry = dir_iter.next().unwrap().unwrap();\n     assert!(\n-        first_dir_entry.file_name() == \"f1\" || first_dir_entry.file_name() == \"f2\",\n-        \"File name was {:?} instead of f1 or f2\",\n+        first_dir_entry.file_name() == \"test_file_1\" ||\n+        first_dir_entry.file_name() == \"test_file_2\",\n+        \"File name was {:?} instead of test_file_1 or test_file_2\",\n         first_dir_entry.file_name(),\n     );\n     assert!(\n-        second_dir_entry.file_name() == \"f1\" || second_dir_entry.file_name() == \"f2\",\n-        \"File name was {:?} instead of f1 or f2\",\n+        second_dir_entry.file_name() == \"test_file_1\" ||\n+        second_dir_entry.file_name() == \"test_file_2\",\n+        \"File name was {:?} instead of test_file_1 or test_file_2\",\n         second_dir_entry.file_name(),\n     );\n     assert!(dir_iter.next().is_none());\n     drop(dir_iter);\n     // Clean up the files in the directory\n-    remove_file(&f1_path).unwrap();\n-    remove_file(&f2_path).unwrap();\n+    remove_file(&path_1).unwrap();\n+    remove_file(&path_2).unwrap();\n \n     // Deleting the directory should succeed.\n     remove_dir(&dir_path).unwrap();"}]}