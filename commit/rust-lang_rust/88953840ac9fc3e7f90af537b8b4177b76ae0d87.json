{"sha": "88953840ac9fc3e7f90af537b8b4177b76ae0d87", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg4OTUzODQwYWM5ZmMzZTdmOTBhZjUzN2I4YjQxNzdiNzZhZTBkODc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-07-09T06:20:44Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-07-09T06:20:44Z"}, "message": "Auto merge of #62460 - RalfJung:llvm-null, r=eddyb\n\n Handle null from LLVMRustGetSectionName\n\nAs part of https://github.com/rust-lang/rust/pull/58783 and https://github.com/rust-lang/rust/pull/62103, this incorrect use of a NULL pointer was found in the interface to LLVM. That PR is stuck with some linker issues, but there is no reason the soundness fix should have to wait for that.", "tree": {"sha": "30b28f1d40ea526bd97a925f3761e85f14cac1b4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/30b28f1d40ea526bd97a925f3761e85f14cac1b4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/88953840ac9fc3e7f90af537b8b4177b76ae0d87", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/88953840ac9fc3e7f90af537b8b4177b76ae0d87", "html_url": "https://github.com/rust-lang/rust/commit/88953840ac9fc3e7f90af537b8b4177b76ae0d87", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/88953840ac9fc3e7f90af537b8b4177b76ae0d87/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "909f5a049415a815b23502a5498de9a99bbf276b", "url": "https://api.github.com/repos/rust-lang/rust/commits/909f5a049415a815b23502a5498de9a99bbf276b", "html_url": "https://github.com/rust-lang/rust/commit/909f5a049415a815b23502a5498de9a99bbf276b"}, {"sha": "076a5cdc357a3a9e03850a745bee0b3f0db3d54f", "url": "https://api.github.com/repos/rust-lang/rust/commits/076a5cdc357a3a9e03850a745bee0b3f0db3d54f", "html_url": "https://github.com/rust-lang/rust/commit/076a5cdc357a3a9e03850a745bee0b3f0db3d54f"}], "stats": {"total": 17, "additions": 12, "deletions": 5}, "files": [{"sha": "708ba79ec3ab238b4051f2071c4c4311f560282a", "filename": "src/librustc_codegen_llvm/llvm/ffi.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/88953840ac9fc3e7f90af537b8b4177b76ae0d87/src%2Flibrustc_codegen_llvm%2Fllvm%2Fffi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/88953840ac9fc3e7f90af537b8b4177b76ae0d87/src%2Flibrustc_codegen_llvm%2Fllvm%2Fffi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fllvm%2Fffi.rs?ref=88953840ac9fc3e7f90af537b8b4177b76ae0d87", "patch": "@@ -1736,7 +1736,9 @@ extern \"C\" {\n     pub fn LLVMRustArchiveIteratorFree(AIR: &'a mut ArchiveIterator<'a>);\n     pub fn LLVMRustDestroyArchive(AR: &'static mut Archive);\n \n-    pub fn LLVMRustGetSectionName(SI: &SectionIterator<'_>, data: &mut *const c_char) -> size_t;\n+    #[allow(improper_ctypes)]\n+    pub fn LLVMRustGetSectionName(SI: &SectionIterator<'_>,\n+                                  data: &mut Option<std::ptr::NonNull<c_char>>) -> size_t;\n \n     #[allow(improper_ctypes)]\n     pub fn LLVMRustWriteTwineToString(T: &Twine, s: &RustString);"}, {"sha": "cd7255888118cd9747f6693a94eeb270241694d6", "filename": "src/librustc_codegen_llvm/metadata.rs", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/88953840ac9fc3e7f90af537b8b4177b76ae0d87/src%2Flibrustc_codegen_llvm%2Fmetadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/88953840ac9fc3e7f90af537b8b4177b76ae0d87/src%2Flibrustc_codegen_llvm%2Fmetadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fmetadata.rs?ref=88953840ac9fc3e7f90af537b8b4177b76ae0d87", "patch": "@@ -8,7 +8,6 @@ use rustc_data_structures::owning_ref::OwningRef;\n use rustc_codegen_ssa::METADATA_FILENAME;\n \n use std::path::Path;\n-use std::ptr;\n use std::slice;\n use rustc_fs_util::path_to_c_string;\n \n@@ -67,10 +66,16 @@ fn search_meta_section<'a>(of: &'a ObjectFile,\n     unsafe {\n         let si = mk_section_iter(of.llof);\n         while llvm::LLVMIsSectionIteratorAtEnd(of.llof, si.llsi) == False {\n-            let mut name_buf = ptr::null();\n+            let mut name_buf = None;\n             let name_len = llvm::LLVMRustGetSectionName(si.llsi, &mut name_buf);\n-            let name = slice::from_raw_parts(name_buf as *const u8, name_len as usize).to_vec();\n-            let name = String::from_utf8(name).unwrap();\n+            let name = name_buf.map_or(\n+                String::new(), // We got a NULL ptr, ignore `name_len`.\n+                |buf| String::from_utf8(\n+                    slice::from_raw_parts(buf.as_ptr() as *const u8,\n+                                          name_len as usize)\n+                    .to_vec()\n+                ).unwrap()\n+            );\n             debug!(\"get_metadata_section: name {}\", name);\n             if read_metadata_section_name(target) == name {\n                 let cbuf = llvm::LLVMGetSectionContents(si.llsi);"}]}