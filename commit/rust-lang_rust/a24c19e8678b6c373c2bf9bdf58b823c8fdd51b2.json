{"sha": "a24c19e8678b6c373c2bf9bdf58b823c8fdd51b2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEyNGMxOWU4Njc4YjZjMzczYzJiZjliZGY1OGI4MjNjOGZkZDUxYjI=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-12-20T20:29:59Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-12-20T20:41:44Z"}, "message": "Add companion-module core.rs that exports log levels and option/some/none everywhere.", "tree": {"sha": "8da875d331799787a718fe33a89a9d9cb7c443a9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8da875d331799787a718fe33a89a9d9cb7c443a9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a24c19e8678b6c373c2bf9bdf58b823c8fdd51b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a24c19e8678b6c373c2bf9bdf58b823c8fdd51b2", "html_url": "https://github.com/rust-lang/rust/commit/a24c19e8678b6c373c2bf9bdf58b823c8fdd51b2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a24c19e8678b6c373c2bf9bdf58b823c8fdd51b2/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8bde865d0939658d134cc094dee168065153fdfa", "url": "https://api.github.com/repos/rust-lang/rust/commits/8bde865d0939658d134cc094dee168065153fdfa", "html_url": "https://github.com/rust-lang/rust/commit/8bde865d0939658d134cc094dee168065153fdfa"}], "stats": {"total": 36, "additions": 19, "deletions": 17}, "files": [{"sha": "48e7a5f64cab951dc61a22e4eca8f5b8bf445b45", "filename": "src/libcore/core.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/a24c19e8678b6c373c2bf9bdf58b823c8fdd51b2/src%2Flibcore%2Fcore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a24c19e8678b6c373c2bf9bdf58b823c8fdd51b2/src%2Flibcore%2Fcore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fcore.rs?ref=a24c19e8678b6c373c2bf9bdf58b823c8fdd51b2", "patch": "@@ -0,0 +1,17 @@\n+// Top-level, visible-everywhere definitions.\n+\n+// Export type option as a synonym for option::t and export the some and none\n+// tag constructors.\n+\n+import option::{some,  none};\n+import option = option::t;\n+export option, some, none;\n+\n+// Export the log levels as global constants. Higher levels mean\n+// more-verbosity. Error is the bottom level, default logging level is\n+// warn-and-below.\n+\n+const error : int = 0;\n+const warn : int = 1;\n+const info : int = 2;\n+const debug : int = 3;"}, {"sha": "74d40f1c05dbdbc80678cbc6b47af8516003efc0", "filename": "src/libstd/treemap.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/a24c19e8678b6c373c2bf9bdf58b823c8fdd51b2/src%2Flibstd%2Ftreemap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a24c19e8678b6c373c2bf9bdf58b823c8fdd51b2/src%2Flibstd%2Ftreemap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ftreemap.rs?ref=a24c19e8678b6c373c2bf9bdf58b823c8fdd51b2", "patch": "@@ -9,9 +9,8 @@ red-black tree or something else.\n \n */\n \n-import core::option;\n-import option::{some, none};\n-import option = option::t;\n+import core::option::{some, none};\n+import option = core::option::t;\n \n export treemap;\n export init;"}, {"sha": "8b39450be866dd62d4a405eb47351db750dc4518", "filename": "src/test/run-fail/alt-bot-fail.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a24c19e8678b6c373c2bf9bdf58b823c8fdd51b2/src%2Ftest%2Frun-fail%2Falt-bot-fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a24c19e8678b6c373c2bf9bdf58b823c8fdd51b2/src%2Ftest%2Frun-fail%2Falt-bot-fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Falt-bot-fail.rs?ref=a24c19e8678b6c373c2bf9bdf58b823c8fdd51b2", "patch": "@@ -1,8 +1,4 @@\n-\n-\n // error-pattern:explicit failure\n-use std;\n-import option::*;\n \n fn foo(s: str) { }\n "}, {"sha": "47340e04735c4a936c757af736317e4af79ff213", "filename": "src/test/run-pass/alt-bot.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a24c19e8678b6c373c2bf9bdf58b823c8fdd51b2/src%2Ftest%2Frun-pass%2Falt-bot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a24c19e8678b6c373c2bf9bdf58b823c8fdd51b2/src%2Ftest%2Frun-pass%2Falt-bot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Falt-bot.rs?ref=a24c19e8678b6c373c2bf9bdf58b823c8fdd51b2", "patch": "@@ -1,5 +1,3 @@\n-use std;\n-import option::*;\n \n fn main() {\n     let i: int ="}, {"sha": "fe8a650afe2162f4d5d7c62013fb8569ecbbf7c4", "filename": "src/test/run-pass/check-pattern-bound.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a24c19e8678b6c373c2bf9bdf58b823c8fdd51b2/src%2Ftest%2Frun-pass%2Fcheck-pattern-bound.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a24c19e8678b6c373c2bf9bdf58b823c8fdd51b2/src%2Ftest%2Frun-pass%2Fcheck-pattern-bound.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcheck-pattern-bound.rs?ref=a24c19e8678b6c373c2bf9bdf58b823c8fdd51b2", "patch": "@@ -1,5 +1,4 @@\n use std;\n-import option::*;\n \n pure fn p(x: int) -> bool { true }\n "}, {"sha": "d10b4f05693f671fe2417697a40db2555e061e96", "filename": "src/test/run-pass/nested-alts.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a24c19e8678b6c373c2bf9bdf58b823c8fdd51b2/src%2Ftest%2Frun-pass%2Fnested-alts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a24c19e8678b6c373c2bf9bdf58b823c8fdd51b2/src%2Ftest%2Frun-pass%2Fnested-alts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fnested-alts.rs?ref=a24c19e8678b6c373c2bf9bdf58b823c8fdd51b2", "patch": "@@ -1,7 +1,4 @@\n \n-use std;\n-import option::*;\n-\n fn baz() -> ! { fail; }\n \n fn foo() {"}, {"sha": "3ce13edc15e07f7fe5ed0e463a2a17ac091df8c9", "filename": "src/test/run-pass/pattern-bound-var-in-for-each.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a24c19e8678b6c373c2bf9bdf58b823c8fdd51b2/src%2Ftest%2Frun-pass%2Fpattern-bound-var-in-for-each.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a24c19e8678b6c373c2bf9bdf58b823c8fdd51b2/src%2Ftest%2Frun-pass%2Fpattern-bound-var-in-for-each.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fpattern-bound-var-in-for-each.rs?ref=a24c19e8678b6c373c2bf9bdf58b823c8fdd51b2", "patch": "@@ -1,13 +1,9 @@\n // Tests that trans_path checks whether a\n // pattern-bound var is an upvar (when translating\n // the for-each body)\n-use std;\n-import option::*;\n-import uint;\n \n fn foo(src: uint) {\n \n-\n     alt some(src) {\n       some(src_id) {\n         uint::range(0u, 10u) {|i|"}]}