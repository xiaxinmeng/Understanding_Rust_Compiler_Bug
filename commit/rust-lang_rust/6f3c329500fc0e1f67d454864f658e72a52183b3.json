{"sha": "6f3c329500fc0e1f67d454864f658e72a52183b3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZmM2MzMjk1MDBmYzBlMWY2N2Q0NTQ4NjRmNjU4ZTcyYTUyMTgzYjM=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2015-09-01T06:38:12Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2015-09-01T06:38:12Z"}, "message": "Support non-indented where clauses", "tree": {"sha": "abcf84b149781f745beb2b548bcfa2a3b9d08680", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/abcf84b149781f745beb2b548bcfa2a3b9d08680"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6f3c329500fc0e1f67d454864f658e72a52183b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6f3c329500fc0e1f67d454864f658e72a52183b3", "html_url": "https://github.com/rust-lang/rust/commit/6f3c329500fc0e1f67d454864f658e72a52183b3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6f3c329500fc0e1f67d454864f658e72a52183b3/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fc2fb8be43debb483d9bb94e334d298e39ead24f", "url": "https://api.github.com/repos/rust-lang/rust/commits/fc2fb8be43debb483d9bb94e334d298e39ead24f", "html_url": "https://github.com/rust-lang/rust/commit/fc2fb8be43debb483d9bb94e334d298e39ead24f"}], "stats": {"total": 34, "additions": 32, "deletions": 2}, "files": [{"sha": "03b522be366b79ae7bfaa2d9015588e6e031fdc9", "filename": "src/config.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f3c329500fc0e1f67d454864f658e72a52183b3/src%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f3c329500fc0e1f67d454864f658e72a52183b3/src%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconfig.rs?ref=6f3c329500fc0e1f67d454864f658e72a52183b3", "patch": "@@ -91,6 +91,7 @@ create_config! {\n     fn_args_paren_newline: bool,\n     fn_args_layout: Density,\n     fn_arg_indent: BlockIndentStyle,\n+    where_indent: BlockIndentStyle, // Visual will be treated like Tabbed\n     generics_indent: BlockIndentStyle,\n     struct_trailing_comma: SeparatorTactic,\n     struct_lit_trailing_comma: SeparatorTactic,\n@@ -118,6 +119,7 @@ impl Default for Config {\n             fn_args_paren_newline: true,\n             fn_args_layout: Density::Tall,\n             fn_arg_indent: BlockIndentStyle::Visual,\n+            where_indent: BlockIndentStyle::Tabbed,\n             generics_indent: BlockIndentStyle::Visual,\n             struct_trailing_comma: SeparatorTactic::Vertical,\n             struct_lit_trailing_comma: SeparatorTactic::Vertical,"}, {"sha": "94083e81c117cdfe4562dbea13bdcedaf2e891e6", "filename": "src/items.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/6f3c329500fc0e1f67d454864f658e72a52183b3/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f3c329500fc0e1f67d454864f658e72a52183b3/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=6f3c329500fc0e1f67d454864f658e72a52183b3", "patch": "@@ -800,9 +800,14 @@ impl<'a> FmtVisitor<'a> {\n             return String::new();\n         }\n \n+        let extra_indent = match self.config.where_indent {\n+            BlockIndentStyle::Inherit => 0,\n+            BlockIndentStyle::Tabbed | BlockIndentStyle::Visual => config.tab_spaces,\n+        };\n+\n         let context = self.get_context();\n         // 6 = \"where \".len()\n-        let offset = indent + config.tab_spaces + 6;\n+        let offset = indent + extra_indent + 6;\n         let budget = self.config.ideal_width + self.config.leeway - offset;\n         let span_start = span_for_where_pred(&where_clause.predicates[0]).lo;\n         let items = itemize_list(self.codemap,\n@@ -828,7 +833,7 @@ impl<'a> FmtVisitor<'a> {\n         };\n \n         format!(\"\\n{}where {}\",\n-                make_indent(indent + config.tab_spaces),\n+                make_indent(indent + extra_indent),\n                 write_list(&items.collect::<Vec<_>>(), &fmt))\n     }\n "}, {"sha": "3d6f01d7375e9d64a9ed19457777bbcf1968b548", "filename": "tests/config/small_tabs.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6f3c329500fc0e1f67d454864f658e72a52183b3/tests%2Fconfig%2Fsmall_tabs.toml", "raw_url": "https://github.com/rust-lang/rust/raw/6f3c329500fc0e1f67d454864f658e72a52183b3/tests%2Fconfig%2Fsmall_tabs.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fconfig%2Fsmall_tabs.toml?ref=6f3c329500fc0e1f67d454864f658e72a52183b3", "patch": "@@ -8,6 +8,7 @@ fn_return_indent = \"WithArgs\"\n fn_args_paren_newline = true\n fn_args_layout = \"Tall\"\n fn_arg_indent = \"Visual\"\n+where_indent = \"Tabbed\"\n generics_indent = \"Visual\"\n struct_trailing_comma = \"Vertical\"\n struct_lit_trailing_comma = \"Vertical\""}, {"sha": "6c9238e80873076fc6ec1194b80f05994bc985c7", "filename": "tests/source/fn-custom-2.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/6f3c329500fc0e1f67d454864f658e72a52183b3/tests%2Fsource%2Ffn-custom-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f3c329500fc0e1f67d454864f658e72a52183b3/tests%2Fsource%2Ffn-custom-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Ffn-custom-2.rs?ref=6f3c329500fc0e1f67d454864f658e72a52183b3", "patch": "@@ -1,5 +1,6 @@\n // rustfmt-fn_arg_indent: Inherit\n // rustfmt-generics_indent: Tabbed\n+// rustfmt-where_indent: Inherit\n // Test different indents.\n \n fn foo(a: Aaaaaaaaaaaaaaa, b: Bbbbbbbbbbbbbbbb, c: Ccccccccccccccccc, d: Ddddddddddddddddddddddddd, e: Eeeeeeeeeeeeeeeeeee) {\n@@ -10,6 +11,10 @@ fn bar<'a: 'bbbbbbbbbbbbbbbbbbbbbbbbbbb, TTTTTTTTTTTTT, UUUUUUUUUUUUUUUUUUUU: WW\n     bar();\n }\n \n+fn baz() where X: TTTTTTTT {\n+    baz();\n+}\n+\n impl Foo {\n     fn foo(self, a: Aaaaaaaaaaaaaaa, b: Bbbbbbbbbbbbbbbb, c: Ccccccccccccccccc, d: Ddddddddddddddddddddddddd, e: Eeeeeeeeeeeeeeeeeee) {\n         foo();\n@@ -18,6 +23,10 @@ impl Foo {\n     fn bar<'a: 'bbbbbbbbbbbbbbbbbbbbbbbbbbb, TTTTTTTTTTTTT, UUUUUUUUUUUUUUUUUUUU: WWWWWWWWWWWWWWWWWWWWWWWW>(a: Aaaaaaaaaaaaaaa) {\n         bar();\n     }\n+\n+    fn baz() where X: TTTTTTTT {\n+        baz();\n+    }\n }\n \n struct Foo<TTTTTTTTTTTTTTTTTTTTTTTTTTTT, UUUUUUUUUUUUUUUUUUUUUU, VVVVVVVVVVVVVVVVVVVVVVVVVVV, WWWWWWWWWWWWWWWWWWWWWWWW> {"}, {"sha": "e5c8af9a38b4839b19b8ddc527242c94408ddb93", "filename": "tests/target/fn-custom-2.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/6f3c329500fc0e1f67d454864f658e72a52183b3/tests%2Ftarget%2Ffn-custom-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f3c329500fc0e1f67d454864f658e72a52183b3/tests%2Ftarget%2Ffn-custom-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Ffn-custom-2.rs?ref=6f3c329500fc0e1f67d454864f658e72a52183b3", "patch": "@@ -1,5 +1,6 @@\n // rustfmt-fn_arg_indent: Inherit\n // rustfmt-generics_indent: Tabbed\n+// rustfmt-where_indent: Inherit\n // Test different indents.\n \n fn foo(a: Aaaaaaaaaaaaaaa,\n@@ -17,6 +18,12 @@ fn bar<'a: 'bbbbbbbbbbbbbbbbbbbbbbbbbbb,\n     bar();\n }\n \n+fn baz()\n+where X: TTTTTTTT\n+{\n+    baz();\n+}\n+\n impl Foo {\n     fn foo(self,\n     a: Aaaaaaaaaaaaaaa,\n@@ -33,6 +40,12 @@ impl Foo {\n         (a: Aaaaaaaaaaaaaaa) {\n         bar();\n     }\n+\n+    fn baz()\n+    where X: TTTTTTTT\n+    {\n+        baz();\n+    }\n }\n \n struct Foo<TTTTTTTTTTTTTTTTTTTTTTTTTTTT,"}]}