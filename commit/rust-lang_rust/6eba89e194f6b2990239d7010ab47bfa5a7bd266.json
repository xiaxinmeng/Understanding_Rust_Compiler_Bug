{"sha": "6eba89e194f6b2990239d7010ab47bfa5a7bd266", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZlYmE4OWUxOTRmNmIyOTkwMjM5ZDcwMTBhYjQ3YmZhNWE3YmQyNjY=", "commit": {"author": {"name": "Oliver Forral", "email": "intrepion@gmail.com", "date": "2016-08-06T14:51:53Z"}, "committer": {"name": "Oliver Forral", "email": "intrepion@gmail.com", "date": "2016-08-06T14:51:53Z"}, "message": "Fixing compiler error E0121", "tree": {"sha": "b58215fdea82d9aeec3eade751724ad65bd7e050", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b58215fdea82d9aeec3eade751724ad65bd7e050"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6eba89e194f6b2990239d7010ab47bfa5a7bd266", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6eba89e194f6b2990239d7010ab47bfa5a7bd266", "html_url": "https://github.com/rust-lang/rust/commit/6eba89e194f6b2990239d7010ab47bfa5a7bd266", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6eba89e194f6b2990239d7010ab47bfa5a7bd266/comments", "author": {"login": "intrepion", "id": 1489553, "node_id": "MDQ6VXNlcjE0ODk1NTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1489553?v=4", "gravatar_id": "", "url": "https://api.github.com/users/intrepion", "html_url": "https://github.com/intrepion", "followers_url": "https://api.github.com/users/intrepion/followers", "following_url": "https://api.github.com/users/intrepion/following{/other_user}", "gists_url": "https://api.github.com/users/intrepion/gists{/gist_id}", "starred_url": "https://api.github.com/users/intrepion/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/intrepion/subscriptions", "organizations_url": "https://api.github.com/users/intrepion/orgs", "repos_url": "https://api.github.com/users/intrepion/repos", "events_url": "https://api.github.com/users/intrepion/events{/privacy}", "received_events_url": "https://api.github.com/users/intrepion/received_events", "type": "User", "site_admin": false}, "committer": {"login": "intrepion", "id": 1489553, "node_id": "MDQ6VXNlcjE0ODk1NTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1489553?v=4", "gravatar_id": "", "url": "https://api.github.com/users/intrepion", "html_url": "https://github.com/intrepion", "followers_url": "https://api.github.com/users/intrepion/followers", "following_url": "https://api.github.com/users/intrepion/following{/other_user}", "gists_url": "https://api.github.com/users/intrepion/gists{/gist_id}", "starred_url": "https://api.github.com/users/intrepion/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/intrepion/subscriptions", "organizations_url": "https://api.github.com/users/intrepion/orgs", "repos_url": "https://api.github.com/users/intrepion/repos", "events_url": "https://api.github.com/users/intrepion/events{/privacy}", "received_events_url": "https://api.github.com/users/intrepion/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b30eff7ba72a78e31acd61a2b6931919a0ad62e8", "url": "https://api.github.com/repos/rust-lang/rust/commits/b30eff7ba72a78e31acd61a2b6931919a0ad62e8", "html_url": "https://github.com/rust-lang/rust/commit/b30eff7ba72a78e31acd61a2b6931919a0ad62e8"}], "stats": {"total": 43, "additions": 41, "deletions": 2}, "files": [{"sha": "7d9cbb2ad41bb4fd34aabea4881a98d136449214", "filename": "src/librustc_typeck/collect.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/6eba89e194f6b2990239d7010ab47bfa5a7bd266/src%2Flibrustc_typeck%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6eba89e194f6b2990239d7010ab47bfa5a7bd266/src%2Flibrustc_typeck%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcollect.rs?ref=6eba89e194f6b2990239d7010ab47bfa5a7bd266", "patch": "@@ -367,8 +367,13 @@ impl<'a, 'tcx> AstConv<'tcx, 'tcx> for ItemCtxt<'a, 'tcx> {\n                 _substs: Option<&mut Substs<'tcx>>,\n                 _space: Option<ParamSpace>,\n                 span: Span) -> Ty<'tcx> {\n-        span_err!(self.tcx().sess, span, E0121,\n-                  \"the type placeholder `_` is not allowed within types on item signatures\");\n+        struct_span_err!(\n+            self.tcx().sess,\n+            span,\n+            E0121,\n+            \"the type placeholder `_` is not allowed within types on item signatures\"\n+        ).span_label(span, &format!(\"not allowed in type signatures\"))\n+        .emit();\n         self.tcx().types.err\n     }\n "}, {"sha": "42db3b47a04f3af15e6c3faf07ed8e2107a9b528", "filename": "src/test/compile-fail/typeck_type_placeholder_item.rs", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/6eba89e194f6b2990239d7010ab47bfa5a7bd266/src%2Ftest%2Fcompile-fail%2Ftypeck_type_placeholder_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6eba89e194f6b2990239d7010ab47bfa5a7bd266/src%2Ftest%2Fcompile-fail%2Ftypeck_type_placeholder_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftypeck_type_placeholder_item.rs?ref=6eba89e194f6b2990239d7010ab47bfa5a7bd266", "patch": "@@ -13,107 +13,141 @@\n \n fn test() -> _ { 5 }\n //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+//~| NOTE not allowed in type signatures\n \n fn test2() -> (_, _) { (5, 5) }\n //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n //~^^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+//~| NOTE not allowed in type signatures\n+//~| NOTE not allowed in type signatures\n \n static TEST3: _ = \"test\";\n //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+//~| NOTE not allowed in type signatures\n \n static TEST4: _ = 145;\n //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+//~| NOTE not allowed in type signatures\n \n static TEST5: (_, _) = (1, 2);\n //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n //~^^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+//~| NOTE not allowed in type signatures\n+//~| NOTE not allowed in type signatures\n \n fn test6(_: _) { }\n //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+//~| NOTE not allowed in type signatures\n \n fn test7(x: _) { let _x: usize = x; }\n //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+//~| NOTE not allowed in type signatures\n \n fn test8(_f: fn() -> _) { }\n //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+//~| NOTE not allowed in type signatures\n \n struct Test9;\n \n impl Test9 {\n     fn test9(&self) -> _ { () }\n     //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+    //~| NOTE not allowed in type signatures\n \n     fn test10(&self, _x : _) { }\n     //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+    //~| NOTE not allowed in type signatures\n }\n \n impl Clone for Test9 {\n     fn clone(&self) -> _ { Test9 }\n     //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+    //~| NOTE not allowed in type signatures\n \n     fn clone_from(&mut self, other: _) { *self = Test9; }\n     //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+    //~| NOTE not allowed in type signatures\n }\n \n struct Test10 {\n     a: _,\n     //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+    //~| NOTE not allowed in type signatures\n     b: (_, _),\n     //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n     //~^^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+    //~| NOTE not allowed in type signatures\n+    //~| NOTE not allowed in type signatures\n }\n \n pub fn main() {\n     fn fn_test() -> _ { 5 }\n     //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+    //~| NOTE not allowed in type signatures\n \n     fn fn_test2() -> (_, _) { (5, 5) }\n     //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n     //~^^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+    //~| NOTE not allowed in type signatures\n+    //~| NOTE not allowed in type signatures\n \n     static FN_TEST3: _ = \"test\";\n     //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+    //~| NOTE not allowed in type signatures\n \n     static FN_TEST4: _ = 145;\n     //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+    //~| NOTE not allowed in type signatures\n \n     static FN_TEST5: (_, _) = (1, 2);\n     //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n     //~^^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+    //~| NOTE not allowed in type signatures\n+    //~| NOTE not allowed in type signatures\n \n     fn fn_test6(_: _) { }\n     //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+    //~| NOTE not allowed in type signatures\n \n     fn fn_test7(x: _) { let _x: usize = x; }\n     //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+    //~| NOTE not allowed in type signatures\n \n     fn fn_test8(_f: fn() -> _) { }\n     //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+    //~| NOTE not allowed in type signatures\n \n     struct FnTest9;\n \n     impl FnTest9 {\n         fn fn_test9(&self) -> _ { () }\n         //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+        //~| NOTE not allowed in type signatures\n \n         fn fn_test10(&self, _x : _) { }\n         //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+        //~| NOTE not allowed in type signatures\n     }\n \n     impl Clone for FnTest9 {\n         fn clone(&self) -> _ { FnTest9 }\n         //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+        //~| NOTE not allowed in type signatures\n \n         fn clone_from(&mut self, other: _) { *self = FnTest9; }\n         //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+        //~| NOTE not allowed in type signatures\n     }\n \n     struct FnTest10 {\n         a: _,\n         //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+        //~| NOTE not allowed in type signatures\n         b: (_, _),\n         //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n         //~^^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+        //~| NOTE not allowed in type signatures\n+        //~| NOTE not allowed in type signatures\n     }\n \n }"}]}