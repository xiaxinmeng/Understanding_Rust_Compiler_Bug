{"sha": "0a423a70bb303195f09753dfdc5a7c4e149e29ff", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBhNDIzYTcwYmIzMDMxOTVmMDk3NTNkZmRjNWE3YzRlMTQ5ZTI5ZmY=", "commit": {"author": {"name": "MaulingMonkey", "email": "git@maulingmonkey.com", "date": "2019-05-20T09:44:26Z"}, "committer": {"name": "MaulingMonkey", "email": "git@maulingmonkey.com", "date": "2019-05-20T09:44:26Z"}, "message": "Fix CDB support tidy check line length failures.", "tree": {"sha": "78299bbc196698692d945aaaf59513ab3cdc0c4b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/78299bbc196698692d945aaaf59513ab3cdc0c4b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0a423a70bb303195f09753dfdc5a7c4e149e29ff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0a423a70bb303195f09753dfdc5a7c4e149e29ff", "html_url": "https://github.com/rust-lang/rust/commit/0a423a70bb303195f09753dfdc5a7c4e149e29ff", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0a423a70bb303195f09753dfdc5a7c4e149e29ff/comments", "author": {"login": "MaulingMonkey", "id": 75894, "node_id": "MDQ6VXNlcjc1ODk0", "avatar_url": "https://avatars.githubusercontent.com/u/75894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MaulingMonkey", "html_url": "https://github.com/MaulingMonkey", "followers_url": "https://api.github.com/users/MaulingMonkey/followers", "following_url": "https://api.github.com/users/MaulingMonkey/following{/other_user}", "gists_url": "https://api.github.com/users/MaulingMonkey/gists{/gist_id}", "starred_url": "https://api.github.com/users/MaulingMonkey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MaulingMonkey/subscriptions", "organizations_url": "https://api.github.com/users/MaulingMonkey/orgs", "repos_url": "https://api.github.com/users/MaulingMonkey/repos", "events_url": "https://api.github.com/users/MaulingMonkey/events{/privacy}", "received_events_url": "https://api.github.com/users/MaulingMonkey/received_events", "type": "User", "site_admin": false}, "committer": {"login": "MaulingMonkey", "id": 75894, "node_id": "MDQ6VXNlcjc1ODk0", "avatar_url": "https://avatars.githubusercontent.com/u/75894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MaulingMonkey", "html_url": "https://github.com/MaulingMonkey", "followers_url": "https://api.github.com/users/MaulingMonkey/followers", "following_url": "https://api.github.com/users/MaulingMonkey/following{/other_user}", "gists_url": "https://api.github.com/users/MaulingMonkey/gists{/gist_id}", "starred_url": "https://api.github.com/users/MaulingMonkey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MaulingMonkey/subscriptions", "organizations_url": "https://api.github.com/users/MaulingMonkey/orgs", "repos_url": "https://api.github.com/users/MaulingMonkey/repos", "events_url": "https://api.github.com/users/MaulingMonkey/events{/privacy}", "received_events_url": "https://api.github.com/users/MaulingMonkey/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e33c4415b3a504bd723328a38bce0f14786db61b", "url": "https://api.github.com/repos/rust-lang/rust/commits/e33c4415b3a504bd723328a38bce0f14786db61b", "html_url": "https://github.com/rust-lang/rust/commit/e33c4415b3a504bd723328a38bce0f14786db61b"}], "stats": {"total": 17, "additions": 9, "deletions": 8}, "files": [{"sha": "a684d3b88fd07dbc98c6b85a0cf25f8c35d419a7", "filename": "src/test/debuginfo/pretty-std.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0a423a70bb303195f09753dfdc5a7c4e149e29ff/src%2Ftest%2Fdebuginfo%2Fpretty-std.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a423a70bb303195f09753dfdc5a7c4e149e29ff/src%2Ftest%2Fdebuginfo%2Fpretty-std.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fpretty-std.rs?ref=0a423a70bb303195f09753dfdc5a7c4e149e29ff", "patch": "@@ -1,5 +1,5 @@\n // ignore-freebsd: gdb package too new\n-// only-cdb // Test temporarily ignored on GDB/LLDB due to debuginfo tests being disabled, see PR 47155\n+// only-cdb // \"Temporarily\" ignored on GDB/LLDB due to debuginfo tests being disabled, see PR 47155\n // ignore-android: FIXME(#10381)\n // compile-flags:-g\n // min-gdb-version 7.7\n@@ -81,7 +81,7 @@\n \n // cdb-command: dx str_slice\n // cdb-check:str_slice [...]\n-// NOTE: While string slices have a .natvis entry that works in VS & VS Code, it fails in CDB 10.0.18362.1\n+// NOTE: While string slices have a .natvis entry that works in VS & VS Code, it fails in CDB\n \n // cdb-command: dx string\n // cdb-check:string           : \"IAMA string!\" [Type: [...]::String]\n@@ -110,7 +110,7 @@\n // cdb-command: dx none\n // cdb-check:none             : { None } [Type: [...]::Option<i64>]\n // cdb-command: dx some_string\n-// cdb-check:some_string      : { Some \"IAMA optional string!\" } [Type: [...]::Option<[...]::String>]\n+// cdb-check:some_string      : { Some \"IAMA optional string!\" } [[...]::Option<[...]::String>]\n \n #![allow(unused_variables)]\n use std::ffi::OsString;"}, {"sha": "48ecd5a914223755ec6d30699851b39c54cbcd9b", "filename": "src/tools/compiletest/src/main.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0a423a70bb303195f09753dfdc5a7c4e149e29ff/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a423a70bb303195f09753dfdc5a7c4e149e29ff/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs?ref=0a423a70bb303195f09753dfdc5a7c4e149e29ff", "patch": "@@ -873,7 +873,7 @@ fn find_cdb(target: &String) -> Option<OsString> {\n \n         let mut path = PathBuf::with_capacity(64);\n         path.push(pf86);\n-        path.push(r\"Windows Kits\\10\\Debuggers\"); // We could check more known install locations (8.1?)\n+        path.push(r\"Windows Kits\\10\\Debuggers\"); // We could check 8.1 etc. too?\n         path.push(cdb_arch);\n         path.push(r\"cdb.exe\");\n "}, {"sha": "c940e2de665abd30d48825606e4f93526f5fc867", "filename": "src/tools/compiletest/src/runtest.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/0a423a70bb303195f09753dfdc5a7c4e149e29ff/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a423a70bb303195f09753dfdc5a7c4e149e29ff/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs?ref=0a423a70bb303195f09753dfdc5a7c4e149e29ff", "patch": "@@ -3,7 +3,8 @@\n use crate::common::CompareMode;\n use crate::common::{expected_output_path, UI_EXTENSIONS, UI_FIXED, UI_STDERR, UI_STDOUT};\n use crate::common::{output_base_dir, output_base_name, output_testname_unique};\n-use crate::common::{Codegen, CodegenUnits, DebugInfoCdb, DebugInfoGdbLldb, DebugInfoGdb, DebugInfoLldb, Rustdoc};\n+use crate::common::{Codegen, CodegenUnits, Rustdoc};\n+use crate::common::{DebugInfoCdb, DebugInfoGdbLldb, DebugInfoGdb, DebugInfoLldb};\n use crate::common::{CompileFail, Pretty, RunFail, RunPass, RunPassValgrind};\n use crate::common::{Config, TestPaths};\n use crate::common::{Incremental, MirOpt, RunMake, Ui, JsDocTest, Assembly};\n@@ -709,7 +710,7 @@ impl<'test> TestCx<'test> {\n         // https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/debugger-commands\n         let mut script_str = String::with_capacity(2048);\n         script_str.push_str(\"version\\n\"); // List CDB (and more) version info in test output\n-        script_str.push_str(\".nvlist\\n\"); // List loaded `*.natvis` files (bulk of MSVC debugger customizations)\n+        script_str.push_str(\".nvlist\\n\"); // List loaded `*.natvis` files, bulk of custom MSVC debug\n \n         // Set breakpoints on every line that contains the string \"#break\"\n         let source_file_name = self.testpaths.file.file_name().unwrap().to_string_lossy();\n@@ -1968,8 +1969,8 @@ impl<'test> TestCx<'test> {\n \n                 rustc.arg(dir_opt);\n             }\n-            RunFail | RunPassValgrind | Pretty | DebugInfoCdb | DebugInfoGdbLldb | DebugInfoGdb | DebugInfoLldb\n-            | Codegen | Rustdoc | RunMake | CodegenUnits | JsDocTest | Assembly => {\n+            RunFail | RunPassValgrind | Pretty | DebugInfoCdb | DebugInfoGdbLldb | DebugInfoGdb\n+            | DebugInfoLldb | Codegen | Rustdoc | RunMake | CodegenUnits | JsDocTest | Assembly => {\n                 // do not use JSON output\n             }\n         }"}]}