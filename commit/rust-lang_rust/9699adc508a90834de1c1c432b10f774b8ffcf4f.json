{"sha": "9699adc508a90834de1c1c432b10f774b8ffcf4f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk2OTlhZGM1MDhhOTA4MzRkZTFjMWM0MzJiMTBmNzc0YjhmZmNmNGY=", "commit": {"author": {"name": "Ariel Ben-Yehuda", "email": "arielb1@mail.tau.ac.il", "date": "2015-09-28T04:31:45Z"}, "committer": {"name": "Ariel Ben-Yehuda", "email": "arielb1@mail.tau.ac.il", "date": "2015-09-29T18:27:08Z"}, "message": "store the rustc version in metadata and check it\n\nThis prevents ICEs when old crates are used with a new version of\nrustc. Currently, the linking of crates compiled with different\nversions of rustc is completely unsupported.\n\nFixes #28700", "tree": {"sha": "961c0c7bfe885cb7b090b76c634da207587c0030", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/961c0c7bfe885cb7b090b76c634da207587c0030"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9699adc508a90834de1c1c432b10f774b8ffcf4f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9699adc508a90834de1c1c432b10f774b8ffcf4f", "html_url": "https://github.com/rust-lang/rust/commit/9699adc508a90834de1c1c432b10f774b8ffcf4f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9699adc508a90834de1c1c432b10f774b8ffcf4f/comments", "author": null, "committer": null, "parents": [{"sha": "5f06607e23783ba0fbcd8a6a7d2a516507fda4a7", "url": "https://api.github.com/repos/rust-lang/rust/commits/5f06607e23783ba0fbcd8a6a7d2a516507fda4a7", "html_url": "https://github.com/rust-lang/rust/commit/5f06607e23783ba0fbcd8a6a7d2a516507fda4a7"}], "stats": {"total": 40, "additions": 40, "deletions": 0}, "files": [{"sha": "5ed7f4113ec91648d2c3d042af85370335a537c0", "filename": "src/librustc/diagnostics.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9699adc508a90834de1c1c432b10f774b8ffcf4f/src%2Flibrustc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9699adc508a90834de1c1c432b10f774b8ffcf4f/src%2Flibrustc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdiagnostics.rs?ref=9699adc508a90834de1c1c432b10f774b8ffcf4f", "patch": "@@ -2074,4 +2074,5 @@ register_diagnostics! {\n     E0495, // cannot infer an appropriate lifetime due to conflicting requirements\n     E0496, // .. name `..` shadows a .. name that is already in scope\n     E0498, // malformed plugin attribute\n+    E0514, // metadata version mismatch\n }"}, {"sha": "bc54d9ff133963791757734a8805056394a1c239", "filename": "src/librustc/metadata/common.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9699adc508a90834de1c1c432b10f774b8ffcf4f/src%2Flibrustc%2Fmetadata%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9699adc508a90834de1c1c432b10f774b8ffcf4f/src%2Flibrustc%2Fmetadata%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Fcommon.rs?ref=9699adc508a90834de1c1c432b10f774b8ffcf4f", "patch": "@@ -259,3 +259,11 @@ pub const tag_defaulted_trait: usize = 0xa4;\n pub const tag_impl_coerce_unsized_kind: usize = 0xa5;\n \n pub const tag_items_data_item_constness: usize = 0xa6;\n+\n+pub const tag_rustc_version: usize = 0x10f;\n+pub fn rustc_version() -> String {\n+    format!(\n+        \"rustc {}\",\n+        option_env!(\"CFG_VERSION\").unwrap_or(\"unknown version\")\n+    )\n+}"}, {"sha": "3db54320e8522d83a596380982619f9138996cdd", "filename": "src/librustc/metadata/creader.rs", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/9699adc508a90834de1c1c432b10f774b8ffcf4f/src%2Flibrustc%2Fmetadata%2Fcreader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9699adc508a90834de1c1c432b10f774b8ffcf4f/src%2Flibrustc%2Fmetadata%2Fcreader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Fcreader.rs?ref=9699adc508a90834de1c1c432b10f774b8ffcf4f", "patch": "@@ -15,6 +15,7 @@\n use back::svh::Svh;\n use session::{config, Session};\n use session::search_paths::PathKind;\n+use metadata::common::rustc_version;\n use metadata::cstore;\n use metadata::cstore::{CStore, CrateSource, MetadataBlob};\n use metadata::decoder;\n@@ -270,6 +271,24 @@ impl<'a> CrateReader<'a> {\n         return ret;\n     }\n \n+    fn verify_rustc_version(&self,\n+                            name: &str,\n+                            span: Span,\n+                            metadata: &MetadataBlob) {\n+        let crate_rustc_version = decoder::crate_rustc_version(metadata.as_slice());\n+        if crate_rustc_version != Some(rustc_version()) {\n+            span_err!(self.sess, span, E0514,\n+                      \"the crate `{}` has been compiled with {}, which is \\\n+                       incompatible with this version of rustc\",\n+                      name,\n+                      crate_rustc_version\n+                          .as_ref().map(|s|&**s)\n+                          .unwrap_or(\"an old version of rustc\")\n+            );\n+            self.sess.abort_if_errors();\n+        }\n+    }\n+\n     fn register_crate(&mut self,\n                       root: &Option<CratePaths>,\n                       ident: &str,\n@@ -279,6 +298,8 @@ impl<'a> CrateReader<'a> {\n                       explicitly_linked: bool)\n                       -> (ast::CrateNum, Rc<cstore::crate_metadata>,\n                           cstore::CrateSource) {\n+        self.verify_rustc_version(name, span, &lib.metadata);\n+\n         // Claim this crate number and cache it\n         let cnum = self.next_crate_num;\n         self.next_crate_num += 1;"}, {"sha": "648ebdefffe6cca3f7735fd081e3ab9dde76145e", "filename": "src/librustc/metadata/decoder.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/9699adc508a90834de1c1c432b10f774b8ffcf4f/src%2Flibrustc%2Fmetadata%2Fdecoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9699adc508a90834de1c1c432b10f774b8ffcf4f/src%2Flibrustc%2Fmetadata%2Fdecoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Fdecoder.rs?ref=9699adc508a90834de1c1c432b10f774b8ffcf4f", "patch": "@@ -77,6 +77,11 @@ pub fn load_index(data: &[u8]) -> index::Index {\n     index::Index::from_buf(index.data, index.start, index.end)\n }\n \n+pub fn crate_rustc_version(data: &[u8]) -> Option<String> {\n+    let doc = rbml::Doc::new(data);\n+    reader::maybe_get_doc(doc, tag_rustc_version).map(|s| s.as_str())\n+}\n+\n #[derive(Debug, PartialEq)]\n enum Family {\n     ImmStatic,             // c"}, {"sha": "8acdc7e8ce2baad767eba6a86e86e9ae36480f66", "filename": "src/librustc/metadata/encoder.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/9699adc508a90834de1c1c432b10f774b8ffcf4f/src%2Flibrustc%2Fmetadata%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9699adc508a90834de1c1c432b10f774b8ffcf4f/src%2Flibrustc%2Fmetadata%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Fencoder.rs?ref=9699adc508a90834de1c1c432b10f774b8ffcf4f", "patch": "@@ -1923,6 +1923,10 @@ fn encode_hash(rbml_w: &mut Encoder, hash: &Svh) {\n     rbml_w.wr_tagged_str(tag_crate_hash, hash.as_str());\n }\n \n+fn encode_rustc_version(rbml_w: &mut Encoder) {\n+    rbml_w.wr_tagged_str(tag_rustc_version, &rustc_version());\n+}\n+\n fn encode_crate_name(rbml_w: &mut Encoder, crate_name: &str) {\n     rbml_w.wr_tagged_str(tag_crate_crate_name, crate_name);\n }\n@@ -2051,6 +2055,7 @@ fn encode_metadata_inner(wr: &mut Cursor<Vec<u8>>,\n \n     let mut rbml_w = Encoder::new(wr);\n \n+    encode_rustc_version(&mut rbml_w);\n     encode_crate_name(&mut rbml_w, &ecx.link_meta.crate_name);\n     encode_crate_triple(&mut rbml_w, &tcx.sess.opts.target_triple);\n     encode_hash(&mut rbml_w, &ecx.link_meta.crate_hash);"}]}