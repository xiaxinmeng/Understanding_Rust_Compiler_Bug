{"sha": "f541ad91657bb8b3276198e85d60f738da3b7bb8", "node_id": "C_kwDOAAsO6NoAKGY1NDFhZDkxNjU3YmI4YjMyNzYxOThlODVkNjBmNzM4ZGEzYjdiYjg", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-10-28T05:06:43Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-10-28T05:06:43Z"}, "message": "Rollup merge of #103550 - notriddle:notriddle/no-suggest-static-candidates, r=wesleywiser\n\ndiagnostics: do not suggest static candidates as traits to import\n\nIf it's a static candidate, then it's already implemented. Do not suggest it a second time for implementing.\n\nPartial fix for #102354", "tree": {"sha": "bc27c9fde00b3e662c1354f1e4996ee93fb5d57d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bc27c9fde00b3e662c1354f1e4996ee93fb5d57d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f541ad91657bb8b3276198e85d60f738da3b7bb8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjW2NjCRBK7hj4Ov3rIwAAssoIAGapTXIyzDvSNBYsJ92HG5Fr\nMlwTtgdf4J912LsfFjtiIyWM7aq5OCIiAOdIctETtsXtVkq0XXdhe3sDoBHoe7WY\nlGS1o5InqzoHCaG8le6JgGfqy3hTIxi7o/AqcywAGZLxIRLsygNCi66kDqRZbD4d\nd7HxpftJJEXzkeZMeAUHhdRQcZmmh/f+k3EreRfLeS/DHUeppF/fVDRki9Rs3M/M\nkOlOowjLTqyDiA84ACQyF2a5106Vnm3mSwyj5rmvbizDx+UNwwDHnRxpFX0zc1pi\nen1tCZvV/6kAQ4ZwiZMkZzo2xzM2/bDJnlNh6it70em+DcA70s117U2/3IHvAw8=\n=CrqN\n-----END PGP SIGNATURE-----\n", "payload": "tree bc27c9fde00b3e662c1354f1e4996ee93fb5d57d\nparent 2f02cf8768bff3e32a2bfaa42294cb5dd6abd58b\nparent 8cf9ad634b049af8b9f442e5b31bc6a85c3a3392\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1666933603 +0200\ncommitter GitHub <noreply@github.com> 1666933603 +0200\n\nRollup merge of #103550 - notriddle:notriddle/no-suggest-static-candidates, r=wesleywiser\n\ndiagnostics: do not suggest static candidates as traits to import\n\nIf it's a static candidate, then it's already implemented. Do not suggest it a second time for implementing.\n\nPartial fix for #102354\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f541ad91657bb8b3276198e85d60f738da3b7bb8", "html_url": "https://github.com/rust-lang/rust/commit/f541ad91657bb8b3276198e85d60f738da3b7bb8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f541ad91657bb8b3276198e85d60f738da3b7bb8/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2f02cf8768bff3e32a2bfaa42294cb5dd6abd58b", "url": "https://api.github.com/repos/rust-lang/rust/commits/2f02cf8768bff3e32a2bfaa42294cb5dd6abd58b", "html_url": "https://github.com/rust-lang/rust/commit/2f02cf8768bff3e32a2bfaa42294cb5dd6abd58b"}, {"sha": "8cf9ad634b049af8b9f442e5b31bc6a85c3a3392", "url": "https://api.github.com/repos/rust-lang/rust/commits/8cf9ad634b049af8b9f442e5b31bc6a85c3a3392", "html_url": "https://github.com/rust-lang/rust/commit/8cf9ad634b049af8b9f442e5b31bc6a85c3a3392"}], "stats": {"total": 58, "additions": 52, "deletions": 6}, "files": [{"sha": "6c21ed902d007112c7b256412fafeb6f86ae8f85", "filename": "compiler/rustc_hir_typeck/src/method/suggest.rs", "status": "modified", "additions": 18, "deletions": 6, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/f541ad91657bb8b3276198e85d60f738da3b7bb8/compiler%2Frustc_hir_typeck%2Fsrc%2Fmethod%2Fsuggest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f541ad91657bb8b3276198e85d60f738da3b7bb8/compiler%2Frustc_hir_typeck%2Fsrc%2Fmethod%2Fsuggest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Fmethod%2Fsuggest.rs?ref=f541ad91657bb8b3276198e85d60f738da3b7bb8", "patch": "@@ -106,7 +106,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n \n         let report_candidates = |span: Span,\n                                  err: &mut Diagnostic,\n-                                 mut sources: Vec<CandidateSource>,\n+                                 sources: &mut Vec<CandidateSource>,\n                                  sugg_span: Span| {\n             sources.sort();\n             sources.dedup();\n@@ -248,7 +248,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n \n         match error {\n             MethodError::NoMatch(NoMatchData {\n-                static_candidates: static_sources,\n+                static_candidates: mut static_sources,\n                 unsatisfied_predicates,\n                 out_of_scope_traits,\n                 lev_candidate,\n@@ -422,9 +422,9 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                         err.help(&format!(\"try with `{}::{}`\", ty_str, item_name,));\n                     }\n \n-                    report_candidates(span, &mut err, static_sources, sugg_span);\n+                    report_candidates(span, &mut err, &mut static_sources, sugg_span);\n                 } else if static_sources.len() > 1 {\n-                    report_candidates(span, &mut err, static_sources, sugg_span);\n+                    report_candidates(span, &mut err, &mut static_sources, sugg_span);\n                 }\n \n                 let mut bound_spans = vec![];\n@@ -1007,6 +1007,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                         source,\n                         out_of_scope_traits,\n                         &unsatisfied_predicates,\n+                        &static_sources,\n                         unsatisfied_bounds,\n                     );\n                 }\n@@ -1079,7 +1080,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                 return Some(err);\n             }\n \n-            MethodError::Ambiguity(sources) => {\n+            MethodError::Ambiguity(mut sources) => {\n                 let mut err = struct_span_err!(\n                     self.sess(),\n                     item_name.span,\n@@ -1088,7 +1089,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                 );\n                 err.span_label(item_name.span, format!(\"multiple `{}` found\", item_name));\n \n-                report_candidates(span, &mut err, sources, sugg_span);\n+                report_candidates(span, &mut err, &mut sources, sugg_span);\n                 err.emit();\n             }\n \n@@ -2015,6 +2016,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             Option<ty::Predicate<'tcx>>,\n             Option<ObligationCause<'tcx>>,\n         )],\n+        static_candidates: &[CandidateSource],\n         unsatisfied_bounds: bool,\n     ) {\n         let mut alt_rcvr_sugg = false;\n@@ -2128,6 +2130,16 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                 Some(attr) => attr.level.is_stable(),\n                 None => true,\n             })\n+            .filter(|info| {\n+                // Static candidates are already implemented, and known not to work\n+                // Do not suggest them again\n+                static_candidates.iter().all(|sc| match *sc {\n+                    CandidateSource::Trait(def_id) => def_id != info.def_id,\n+                    CandidateSource::Impl(def_id) => {\n+                        self.tcx.trait_id_of_impl(def_id) != Some(info.def_id)\n+                    }\n+                })\n+            })\n             .filter(|info| {\n                 // We approximate the coherence rules to only suggest\n                 // traits that are legal to implement by requiring that"}, {"sha": "f881feb0060abc2cba308a8bd4a25460efd24aef", "filename": "src/test/ui/suggestions/issue-102354.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f541ad91657bb8b3276198e85d60f738da3b7bb8/src%2Ftest%2Fui%2Fsuggestions%2Fissue-102354.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f541ad91657bb8b3276198e85d60f738da3b7bb8/src%2Ftest%2Fui%2Fsuggestions%2Fissue-102354.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fissue-102354.rs?ref=f541ad91657bb8b3276198e85d60f738da3b7bb8", "patch": "@@ -0,0 +1,10 @@\n+trait Trait {\n+    fn func() {}\n+}\n+\n+impl Trait for i32 {}\n+\n+fn main() {\n+    let x: i32 = 123;\n+    x.func(); //~ERROR no method\n+}"}, {"sha": "4f76c5f2e75b2341ca846903592b1a299757d024", "filename": "src/test/ui/suggestions/issue-102354.stderr", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/f541ad91657bb8b3276198e85d60f738da3b7bb8/src%2Ftest%2Fui%2Fsuggestions%2Fissue-102354.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f541ad91657bb8b3276198e85d60f738da3b7bb8/src%2Ftest%2Fui%2Fsuggestions%2Fissue-102354.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fissue-102354.stderr?ref=f541ad91657bb8b3276198e85d60f738da3b7bb8", "patch": "@@ -0,0 +1,24 @@\n+error[E0599]: no method named `func` found for type `i32` in the current scope\n+  --> $DIR/issue-102354.rs:9:7\n+   |\n+LL |     x.func();\n+   |       ^^^^ this is an associated function, not a method\n+   |\n+   = note: found the following associated functions; to be used as methods, functions must have a `self` parameter\n+note: the candidate is defined in the trait `Trait`\n+  --> $DIR/issue-102354.rs:2:5\n+   |\n+LL |     fn func() {}\n+   |     ^^^^^^^^^\n+help: use associated function syntax instead\n+   |\n+LL |     i32::func();\n+   |     ~~~~~~~~~\n+help: disambiguate the associated function for the candidate\n+   |\n+LL |     <i32 as Trait>::func(x);\n+   |     ~~~~~~~~~~~~~~~~~~~~~~~\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0599`."}]}