{"sha": "587566eda71847b5cd57bfb91b677f7dac653528", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU4NzU2NmVkYTcxODQ3YjVjZDU3YmZiOTFiNjc3ZjdkYWM2NTM1Mjg=", "commit": {"author": {"name": "leonardo.yvens", "email": "leoyvens@gmail.com", "date": "2018-05-11T14:29:04Z"}, "committer": {"name": "leonardo.yvens", "email": "leoyvens@gmail.com", "date": "2018-05-11T14:29:04Z"}, "message": "Fix `fn main() -> impl Trait` for non-`Termination` trait\n\nFixes #50595.\n\nThis bug currently affects stable. Why I think we can go for hard error:\n\n- It will in stable for at most one cycle and there is no legitimate\nreason to abuse it, nor any known uses in the wild.\n\n- It only affects `bin` crates (which have a `main`), so there is\nlittle practical difference between a hard error or a deny lint, both\nare a one line fix.\n\nThe fix was to just unshadow a variable. Thanks @nikomatsakis for the\nmentoring!\n\nr? @nikomatsakis", "tree": {"sha": "6f5221893144087e003b926636108fdd47d8a236", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6f5221893144087e003b926636108fdd47d8a236"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/587566eda71847b5cd57bfb91b677f7dac653528", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/587566eda71847b5cd57bfb91b677f7dac653528", "html_url": "https://github.com/rust-lang/rust/commit/587566eda71847b5cd57bfb91b677f7dac653528", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/587566eda71847b5cd57bfb91b677f7dac653528/comments", "author": {"login": "leoyvens", "id": 9885558, "node_id": "MDQ6VXNlcjk4ODU1NTg=", "avatar_url": "https://avatars.githubusercontent.com/u/9885558?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leoyvens", "html_url": "https://github.com/leoyvens", "followers_url": "https://api.github.com/users/leoyvens/followers", "following_url": "https://api.github.com/users/leoyvens/following{/other_user}", "gists_url": "https://api.github.com/users/leoyvens/gists{/gist_id}", "starred_url": "https://api.github.com/users/leoyvens/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leoyvens/subscriptions", "organizations_url": "https://api.github.com/users/leoyvens/orgs", "repos_url": "https://api.github.com/users/leoyvens/repos", "events_url": "https://api.github.com/users/leoyvens/events{/privacy}", "received_events_url": "https://api.github.com/users/leoyvens/received_events", "type": "User", "site_admin": false}, "committer": {"login": "leoyvens", "id": 9885558, "node_id": "MDQ6VXNlcjk4ODU1NTg=", "avatar_url": "https://avatars.githubusercontent.com/u/9885558?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leoyvens", "html_url": "https://github.com/leoyvens", "followers_url": "https://api.github.com/users/leoyvens/followers", "following_url": "https://api.github.com/users/leoyvens/following{/other_user}", "gists_url": "https://api.github.com/users/leoyvens/gists{/gist_id}", "starred_url": "https://api.github.com/users/leoyvens/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leoyvens/subscriptions", "organizations_url": "https://api.github.com/users/leoyvens/orgs", "repos_url": "https://api.github.com/users/leoyvens/repos", "events_url": "https://api.github.com/users/leoyvens/events{/privacy}", "received_events_url": "https://api.github.com/users/leoyvens/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e5f80f2a4f016bf724a1cfb580619d71c8fd39ec", "url": "https://api.github.com/repos/rust-lang/rust/commits/e5f80f2a4f016bf724a1cfb580619d71c8fd39ec", "html_url": "https://github.com/rust-lang/rust/commit/e5f80f2a4f016bf724a1cfb580619d71c8fd39ec"}], "stats": {"total": 45, "additions": 41, "deletions": 4}, "files": [{"sha": "f513b1f23ad47f912badbf388a6d9e609f276136", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/587566eda71847b5cd57bfb91b677f7dac653528/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/587566eda71847b5cd57bfb91b677f7dac653528/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=587566eda71847b5cd57bfb91b677f7dac653528", "patch": "@@ -1038,11 +1038,11 @@ fn check_fn<'a, 'gcx, 'tcx>(inherited: &'a Inherited<'a, 'gcx, 'tcx>,\n \n     let ret_ty = fn_sig.output();\n     fcx.require_type_is_sized(ret_ty, decl.output.span(), traits::SizedReturnType);\n-    let ret_ty = fcx.instantiate_anon_types_from_return_value(fn_id, &ret_ty);\n-    fcx.ret_coercion = Some(RefCell::new(CoerceMany::new(ret_ty)));\n+    let revealed_ret_ty = fcx.instantiate_anon_types_from_return_value(fn_id, &ret_ty);\n+    fcx.ret_coercion = Some(RefCell::new(CoerceMany::new(revealed_ret_ty)));\n     fn_sig = fcx.tcx.mk_fn_sig(\n         fn_sig.inputs().iter().cloned(),\n-        ret_ty,\n+        revealed_ret_ty,\n         fn_sig.variadic,\n         fn_sig.unsafety,\n         fn_sig.abi\n@@ -1124,7 +1124,7 @@ fn check_fn<'a, 'gcx, 'tcx>(inherited: &'a Inherited<'a, 'gcx, 'tcx>,\n         actual_return_ty = fcx.next_diverging_ty_var(\n             TypeVariableOrigin::DivergingFn(span));\n     }\n-    fcx.demand_suptype(span, ret_ty, actual_return_ty);\n+    fcx.demand_suptype(span, revealed_ret_ty, actual_return_ty);\n \n     // Check that the main return type implements the termination trait.\n     if let Some(term_id) = fcx.tcx.lang_items().termination() {"}, {"sha": "5bce3f8045eeb9091272e1daffed56a085aeb284", "filename": "src/test/run-pass/rfc-1937-termination-trait/termination-trait-for-impl-termination.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/587566eda71847b5cd57bfb91b677f7dac653528/src%2Ftest%2Frun-pass%2Frfc-1937-termination-trait%2Ftermination-trait-for-impl-termination.rs", "raw_url": "https://github.com/rust-lang/rust/raw/587566eda71847b5cd57bfb91b677f7dac653528/src%2Ftest%2Frun-pass%2Frfc-1937-termination-trait%2Ftermination-trait-for-impl-termination.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Frfc-1937-termination-trait%2Ftermination-trait-for-impl-termination.rs?ref=587566eda71847b5cd57bfb91b677f7dac653528", "patch": "@@ -0,0 +1,13 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(termination_trait_lib)]\n+\n+fn main() -> impl std::process::Termination { }"}, {"sha": "92d21864c748344b2ff311da09679226ca4b7883", "filename": "src/test/ui/rfc-1937-termination-trait/termination-trait-impl-trait.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/587566eda71847b5cd57bfb91b677f7dac653528/src%2Ftest%2Fui%2Frfc-1937-termination-trait%2Ftermination-trait-impl-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/587566eda71847b5cd57bfb91b677f7dac653528/src%2Ftest%2Fui%2Frfc-1937-termination-trait%2Ftermination-trait-impl-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-1937-termination-trait%2Ftermination-trait-impl-trait.rs?ref=587566eda71847b5cd57bfb91b677f7dac653528", "patch": "@@ -0,0 +1,13 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Tests that an `impl Trait` that is not `impl Termination` will not work.\n+fn main() -> impl Copy { }\n+//~^ ERROR `main` has invalid return type `impl std::marker::Copy`"}, {"sha": "7485f3066bb2709d4b217aae34f4f5bd7e62ccd7", "filename": "src/test/ui/rfc-1937-termination-trait/termination-trait-impl-trait.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/587566eda71847b5cd57bfb91b677f7dac653528/src%2Ftest%2Fui%2Frfc-1937-termination-trait%2Ftermination-trait-impl-trait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/587566eda71847b5cd57bfb91b677f7dac653528/src%2Ftest%2Fui%2Frfc-1937-termination-trait%2Ftermination-trait-impl-trait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-1937-termination-trait%2Ftermination-trait-impl-trait.stderr?ref=587566eda71847b5cd57bfb91b677f7dac653528", "patch": "@@ -0,0 +1,11 @@\n+error[E0277]: `main` has invalid return type `impl std::marker::Copy`\n+  --> $DIR/termination-trait-impl-trait.rs:12:14\n+   |\n+LL | fn main() -> impl Copy { }\n+   |              ^^^^^^^^^ `main` can only return types that implement `std::process::Termination`\n+   |\n+   = help: consider using `()`, or a `Result`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0277`."}]}