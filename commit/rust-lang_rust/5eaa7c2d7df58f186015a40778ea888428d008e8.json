{"sha": "5eaa7c2d7df58f186015a40778ea888428d008e8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVlYWE3YzJkN2RmNThmMTg2MDE1YTQwNzc4ZWE4ODg0MjhkMDA4ZTg=", "commit": {"author": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2017-02-09T11:38:52Z"}, "committer": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2017-02-09T11:38:52Z"}, "message": "Fix unaligned load in librustc_metadata::index.", "tree": {"sha": "2df777a35dd244e9534309fe4e065fd0e00f6463", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2df777a35dd244e9534309fe4e065fd0e00f6463"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5eaa7c2d7df58f186015a40778ea888428d008e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5eaa7c2d7df58f186015a40778ea888428d008e8", "html_url": "https://github.com/rust-lang/rust/commit/5eaa7c2d7df58f186015a40778ea888428d008e8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5eaa7c2d7df58f186015a40778ea888428d008e8/comments", "author": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fd2f8a4536cb9b45abd72b8ff977ad48618602b3", "url": "https://api.github.com/repos/rust-lang/rust/commits/fd2f8a4536cb9b45abd72b8ff977ad48618602b3", "html_url": "https://github.com/rust-lang/rust/commit/fd2f8a4536cb9b45abd72b8ff977ad48618602b3"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "db9fc870fa86a6a19f51071f255d51fde492e3f7", "filename": "src/librustc_metadata/index.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5eaa7c2d7df58f186015a40778ea888428d008e8/src%2Flibrustc_metadata%2Findex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5eaa7c2d7df58f186015a40778ea888428d008e8/src%2Flibrustc_metadata%2Findex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Findex.rs?ref=5eaa7c2d7df58f186015a40778ea888428d008e8", "patch": "@@ -96,9 +96,17 @@ impl<'tcx> LazySeq<Index> {\n }\n \n #[repr(packed)]\n-#[derive(Copy, Clone)]\n+#[derive(Copy)]\n struct Unaligned<T>(T);\n \n+// The derived Clone impl is unsafe for this packed struct since it needs to pass a reference to\n+// the field to `T::clone`, but this reference may not be properly aligned.\n+impl<T: Copy> Clone for Unaligned<T> {\n+    fn clone(&self) -> Self {\n+        *self\n+    }\n+}\n+\n impl<T> Unaligned<T> {\n     fn get(self) -> T { self.0 }\n }"}]}