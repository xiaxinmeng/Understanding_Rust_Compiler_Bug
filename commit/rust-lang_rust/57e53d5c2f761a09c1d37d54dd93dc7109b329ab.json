{"sha": "57e53d5c2f761a09c1d37d54dd93dc7109b329ab", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU3ZTUzZDVjMmY3NjFhMDljMWQzN2Q1NGRkOTNkYzcxMDliMzI5YWI=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2014-08-04T21:30:06Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2014-08-04T21:37:07Z"}, "message": "rustdoc: Emit keywords for all crate pages\n\ncc #12466", "tree": {"sha": "1b33477b9a9300b3e05d6328af82923cf82a8730", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1b33477b9a9300b3e05d6328af82923cf82a8730"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/57e53d5c2f761a09c1d37d54dd93dc7109b329ab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/57e53d5c2f761a09c1d37d54dd93dc7109b329ab", "html_url": "https://github.com/rust-lang/rust/commit/57e53d5c2f761a09c1d37d54dd93dc7109b329ab", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/57e53d5c2f761a09c1d37d54dd93dc7109b329ab/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2b0a15494ae24f7f131c8cbe14ca00638b1ae5f9", "url": "https://api.github.com/repos/rust-lang/rust/commits/2b0a15494ae24f7f131c8cbe14ca00638b1ae5f9", "html_url": "https://github.com/rust-lang/rust/commit/2b0a15494ae24f7f131c8cbe14ca00638b1ae5f9"}], "stats": {"total": 17, "additions": 16, "deletions": 1}, "files": [{"sha": "2e1b8d32dd39e03da0cbc31b1154c3606bf9bbd9", "filename": "src/librustdoc/html/layout.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/57e53d5c2f761a09c1d37d54dd93dc7109b329ab/src%2Flibrustdoc%2Fhtml%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57e53d5c2f761a09c1d37d54dd93dc7109b329ab/src%2Flibrustdoc%2Fhtml%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Flayout.rs?ref=57e53d5c2f761a09c1d37d54dd93dc7109b329ab", "patch": "@@ -26,7 +26,8 @@ pub struct Page<'a> {\n     pub title: &'a str,\n     pub ty: &'a str,\n     pub root_path: &'a str,\n-    pub description: &'a str\n+    pub description: &'a str,\n+    pub keywords: &'a str\n }\n \n pub fn render<T: fmt::Show, S: fmt::Show>(\n@@ -41,6 +42,7 @@ r##\"<!DOCTYPE html>\n     <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n     <meta name=\"generator\" content=\"rustdoc\">\n     <meta name=\"description\" content=\"{description}\">\n+    <meta name=\"keywords\" content=\"{keywords}\">\n \n     <title>{title}</title>\n \n@@ -137,6 +139,7 @@ r##\"<!DOCTYPE html>\n     },\n     title     = page.title,\n     description = page.description,\n+    keywords = page.keywords,\n     favicon   = if layout.favicon.len() == 0 {\n         \"\".to_string()\n     } else {"}, {"sha": "e3a776e04db82abd5a2616a1a75afede7944a625", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/57e53d5c2f761a09c1d37d54dd93dc7109b329ab/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57e53d5c2f761a09c1d37d54dd93dc7109b329ab/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=57e53d5c2f761a09c1d37d54dd93dc7109b329ab", "patch": "@@ -748,6 +748,7 @@ impl<'a> SourceCollector<'a> {\n             ty: \"source\",\n             root_path: root_path.as_slice(),\n             description: desc.as_slice(),\n+            keywords: get_basic_keywords(),\n         };\n         try!(layout::render(&mut w as &mut Writer, &self.cx.layout,\n                             &page, &(\"\"), &Source(contents)));\n@@ -1081,6 +1082,7 @@ impl Context {\n                 root_path: this.root_path.as_slice(),\n                 title: title.as_slice(),\n                 description: desc.as_slice(),\n+                keywords: get_basic_keywords(),\n             };\n             let html_dst = &this.dst.join(\"stability.html\");\n             let mut html_out = BufferedWriter::new(try!(File::create(html_dst)));\n@@ -1137,11 +1139,13 @@ impl Context {\n                 format!(\"API documentation for the Rust `{}` {} in crate `{}`.\",\n                         it.name.get_ref(), tyname, cx.layout.krate)\n             };\n+            let keywords = make_item_keywords(it);\n             let page = layout::Page {\n                 ty: tyname,\n                 root_path: cx.root_path.as_slice(),\n                 title: title.as_slice(),\n                 description: desc.as_slice(),\n+                keywords: keywords.as_slice(),\n             };\n \n             markdown::reset_headers();\n@@ -2170,3 +2174,11 @@ fn ignore_private_item(it: &clean::Item) -> bool {\n         _ => false,\n     }\n }\n+\n+fn get_basic_keywords() -> &'static str {\n+    \"rust, rustlang, rust-lang\"\n+}\n+\n+fn make_item_keywords(it: &clean::Item) -> String {\n+    format!(\"{}, {}\", get_basic_keywords(), it.name.get_ref())\n+}"}]}