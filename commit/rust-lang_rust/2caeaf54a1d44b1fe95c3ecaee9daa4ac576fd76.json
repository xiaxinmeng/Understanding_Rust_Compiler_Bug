{"sha": "2caeaf54a1d44b1fe95c3ecaee9daa4ac576fd76", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJjYWVhZjU0YTFkNDRiMWZlOTVjM2VjYWVlOWRhYTRhYzU3NmZkNzY=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2019-05-12T14:53:39Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2019-05-18T13:44:19Z"}, "message": "Fix display of const generics in rustdoc", "tree": {"sha": "20d06a0ff8846ec9c85083d99a0b13eeb3ef4dcc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/20d06a0ff8846ec9c85083d99a0b13eeb3ef4dcc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2caeaf54a1d44b1fe95c3ecaee9daa4ac576fd76", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2caeaf54a1d44b1fe95c3ecaee9daa4ac576fd76", "html_url": "https://github.com/rust-lang/rust/commit/2caeaf54a1d44b1fe95c3ecaee9daa4ac576fd76", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2caeaf54a1d44b1fe95c3ecaee9daa4ac576fd76/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "548add7f61bfcbe3bea3f5ccefb53c84da8fefe4", "url": "https://api.github.com/repos/rust-lang/rust/commits/548add7f61bfcbe3bea3f5ccefb53c84da8fefe4", "html_url": "https://github.com/rust-lang/rust/commit/548add7f61bfcbe3bea3f5ccefb53c84da8fefe4"}], "stats": {"total": 39, "additions": 35, "deletions": 4}, "files": [{"sha": "f91cb469e462992755890455c1501e86d64a266c", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2caeaf54a1d44b1fe95c3ecaee9daa4ac576fd76/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2caeaf54a1d44b1fe95c3ecaee9daa4ac576fd76/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=2caeaf54a1d44b1fe95c3ecaee9daa4ac576fd76", "patch": "@@ -3149,7 +3149,10 @@ impl<'tcx> Clean<Constant> for ty::Const<'tcx> {\n     fn clean(&self, cx: &DocContext<'_>) -> Constant {\n         Constant {\n             type_: self.ty.clean(cx),\n-            expr: format!(\"{:?}\", self.val), // FIXME(const_generics)\n+            expr: match self.val {\n+                ConstValue::Param(ty::ParamConst { name, .. }) => format!(\"{}\", name),\n+                e => format!(\"{:?}\", e), // FIXME generic consts with expressions\n+            },\n         }\n     }\n }"}, {"sha": "2784d5b3e10a0bbf85e5c46e9ea56afe54131c06", "filename": "src/librustdoc/html/format.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2caeaf54a1d44b1fe95c3ecaee9daa4ac576fd76/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2caeaf54a1d44b1fe95c3ecaee9daa4ac576fd76/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fformat.rs?ref=2caeaf54a1d44b1fe95c3ecaee9daa4ac576fd76", "patch": "@@ -262,9 +262,7 @@ impl fmt::Display for clean::Lifetime {\n \n impl fmt::Display for clean::Constant {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n-        fmt::Display::fmt(&self.expr, f)?;\n-        f.write_str(\": \")?;\n-        fmt::Display::fmt(&self.type_, f)\n+        fmt::Display::fmt(&self.expr, f)\n     }\n }\n "}, {"sha": "d6794ac8f1d94bb2fb7c8e2efcbfe27547915fab", "filename": "src/test/rustdoc/generic-const.rs", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/2caeaf54a1d44b1fe95c3ecaee9daa4ac576fd76/src%2Ftest%2Frustdoc%2Fgeneric-const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2caeaf54a1d44b1fe95c3ecaee9daa4ac576fd76/src%2Ftest%2Frustdoc%2Fgeneric-const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fgeneric-const.rs?ref=2caeaf54a1d44b1fe95c3ecaee9daa4ac576fd76", "patch": "@@ -0,0 +1,30 @@\n+#![feature(const_generics)]\n+#![crate_name = \"foo\"]\n+\n+// ignore-tidy-linelength\n+\n+pub enum Order {\n+    Sorted,\n+    Unsorted,\n+}\n+\n+// @has foo/struct.VSet.html '//pre[@class=\"rust struct\"]' 'pub struct VSet<T, const ORDER: Order>'\n+// @has foo/struct.VSet.html '//h3[@id=\"impl-Send\"]/code' 'impl<const ORDER: Order, T> Send for VSet<T, ORDER>'\n+// @has foo/struct.VSet.html '//h3[@id=\"impl-Sync\"]/code' 'impl<const ORDER: Order, T> Sync for VSet<T, ORDER>'\n+pub struct VSet<T, const ORDER: Order> {\n+    inner: Vec<T>,\n+}\n+\n+// @has foo/struct.VSet.html '//h3[@id=\"impl\"]/code' 'impl<T> VSet<T, { Order::Sorted }>'\n+impl <T> VSet<T, {Order::Sorted}> {\n+    pub fn new() -> Self {\n+        Self { inner: Vec::new() }\n+    }\n+}\n+\n+// @has foo/struct.VSet.html '//h3[@id=\"impl-1\"]/code' 'impl<T> VSet<T, { Order::Unsorted }>'\n+impl <T> VSet<T, {Order::Unsorted}> {\n+    pub fn new() -> Self {\n+        Self { inner: Vec::new() }\n+    }\n+}"}]}