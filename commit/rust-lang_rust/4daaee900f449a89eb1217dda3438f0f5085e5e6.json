{"sha": "4daaee900f449a89eb1217dda3438f0f5085e5e6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRkYWFlZTkwMGY0NDlhODllYjEyMTdkZGEzNDM4ZjBmNTA4NWU1ZTY=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2017-12-29T18:25:40Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2017-12-30T07:50:52Z"}, "message": "Add trailing newlines to files which have no trailing newlines.", "tree": {"sha": "e7420ba38433d29bb32191351c3d70138e463959", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e7420ba38433d29bb32191351c3d70138e463959"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4daaee900f449a89eb1217dda3438f0f5085e5e6", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZ1R8CLMp8f2GxWoQ/vbIBR0OATwFAlpHRVwACgkQ/vbIBR0O\nATxJWhAAkGBl5Omq0GLJ70HK4pHvgV4DHG46QTYc+GkZhHgHk8xdbFPZZiY9/TxP\nzM8V1whtEfhM5nUZxs6iFriJlNWVSj2FpNTVRyimXlMuQ3dFv00Gnao5qkqreWPf\nPMQaxmkPxJpCHA5P2Q0+Fw1e6smTeFEeXjQF+d+cey8EXFcgKVQTivXhx67aREZH\ng0wvThx384VUTO2KjrdPmEAolPUewUuwqewZXQeugM+MScVe8VKbkGoyERuQaCWM\nY9xdpULHg0svd7EaU6oX/NHIp6yNdzs/vNb5UesjQrnfpveTIJFLrGQ2HRk/S4By\nY9vZhc32hkQrcS2HB/CcDM8HMP5etXeInhgRrzWrDkvOEw1SlJyQEg19ukaQ9QFY\nA2xnUuFl2bG0gkE/Iqd6ie07fGAfvEIoPAuPYomVnxwE+v+QprsxgTF1rHsvzFoV\njtthM0EVXjZFqqrNNwVZL/AFRLgEzfatZb6hw+X0/DDuR+x6UWGWtGTsDzUt2hXi\nS1yqfk/7WFPZoJiMSx0psJD6/1qDwfR+NUIw3a2LtWD1ro9q1ebSMRenm0dCEns8\nd8J32YQ2SoipOAY9im8ejYpYbmnVWRUIs2Pb6TWNOiFRu21y4T6dOBFp44VjfQ+i\nPWdoSic9LjR4qfRgHJneprwqvOhFOJyfnigqwiKBCZ6kdTLYMwU=\n=We7h\n-----END PGP SIGNATURE-----", "payload": "tree e7420ba38433d29bb32191351c3d70138e463959\nparent 35681fbc76142856a3475691c042ddec8dec31c5\nauthor kennytm <kennytm@gmail.com> 1514571940 +0800\ncommitter kennytm <kennytm@gmail.com> 1514620252 +0800\n\nAdd trailing newlines to files which have no trailing newlines.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4daaee900f449a89eb1217dda3438f0f5085e5e6", "html_url": "https://github.com/rust-lang/rust/commit/4daaee900f449a89eb1217dda3438f0f5085e5e6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4daaee900f449a89eb1217dda3438f0f5085e5e6/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "35681fbc76142856a3475691c042ddec8dec31c5", "url": "https://api.github.com/repos/rust-lang/rust/commits/35681fbc76142856a3475691c042ddec8dec31c5", "html_url": "https://github.com/rust-lang/rust/commit/35681fbc76142856a3475691c042ddec8dec31c5"}], "stats": {"total": 46, "additions": 23, "deletions": 23}, "files": [{"sha": "63939686ab7c2de8ad982da7ef2a4f5f34d2015a", "filename": "src/liballoc/tests/cow_str.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4daaee900f449a89eb1217dda3438f0f5085e5e6/src%2Fliballoc%2Ftests%2Fcow_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4daaee900f449a89eb1217dda3438f0f5085e5e6/src%2Fliballoc%2Ftests%2Fcow_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Ftests%2Fcow_str.rs?ref=4daaee900f449a89eb1217dda3438f0f5085e5e6", "patch": "@@ -148,4 +148,4 @@ fn check_cow_clone_from() {\n     let c2: Cow<str> = Cow::Owned(s);\n     c1.clone_from(&c2);\n     assert!(c1.into_owned().capacity() >= 25);\n-}\n\\ No newline at end of file\n+}"}, {"sha": "9d2fa1abff658474e095e4cb4bffd5cc103423b9", "filename": "src/libcore/tests/ops.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4daaee900f449a89eb1217dda3438f0f5085e5e6/src%2Flibcore%2Ftests%2Fops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4daaee900f449a89eb1217dda3438f0f5085e5e6/src%2Flibcore%2Ftests%2Fops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftests%2Fops.rs?ref=4daaee900f449a89eb1217dda3438f0f5085e5e6", "patch": "@@ -67,4 +67,4 @@ fn test_range_inclusive() {\n     r = RangeInclusive { start: 1, end: -1 };\n     assert_eq!(r.size_hint(), (0, Some(0)));\n     assert_eq!(r.next(), None);\n-}\n\\ No newline at end of file\n+}"}, {"sha": "3a05cb7187d80bc0ad2a76fc2322901f95415b0a", "filename": "src/libserialize/collection_impls.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4daaee900f449a89eb1217dda3438f0f5085e5e6/src%2Flibserialize%2Fcollection_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4daaee900f449a89eb1217dda3438f0f5085e5e6/src%2Flibserialize%2Fcollection_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibserialize%2Fcollection_impls.rs?ref=4daaee900f449a89eb1217dda3438f0f5085e5e6", "patch": "@@ -241,4 +241,4 @@ impl<T: Decodable> Decodable for Arc<[T]> {\n             Ok(vec.into())\n         })\n     }\n-}\n\\ No newline at end of file\n+}"}, {"sha": "8df07a0c1c5b26de75a2e963982bc93a62d8d4f1", "filename": "src/test/compile-fail/E0004.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4daaee900f449a89eb1217dda3438f0f5085e5e6/src%2Ftest%2Fcompile-fail%2FE0004.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4daaee900f449a89eb1217dda3438f0f5085e5e6/src%2Ftest%2Fcompile-fail%2FE0004.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0004.rs?ref=4daaee900f449a89eb1217dda3438f0f5085e5e6", "patch": "@@ -19,4 +19,4 @@ fn main() {\n     match x { //~ ERROR E0004\n         Terminator::TalkToMyHand => {}\n     }\n-}\n\\ No newline at end of file\n+}"}, {"sha": "485519e8c3d7e550e760372a5203ed6c0b067f3b", "filename": "src/test/compile-fail/duplicate_entry_error.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4daaee900f449a89eb1217dda3438f0f5085e5e6/src%2Ftest%2Fcompile-fail%2Fduplicate_entry_error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4daaee900f449a89eb1217dda3438f0f5085e5e6/src%2Ftest%2Fcompile-fail%2Fduplicate_entry_error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fduplicate_entry_error.rs?ref=4daaee900f449a89eb1217dda3438f0f5085e5e6", "patch": "@@ -20,4 +20,4 @@ fn panic_fmt() -> ! {\n     loop {}\n }\n \n-fn main() {}\n\\ No newline at end of file\n+fn main() {}"}, {"sha": "1f07422e21be471a1dd0385174ae360254d45a3d", "filename": "src/test/compile-fail/float-int-invalid-const-cast.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4daaee900f449a89eb1217dda3438f0f5085e5e6/src%2Ftest%2Fcompile-fail%2Ffloat-int-invalid-const-cast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4daaee900f449a89eb1217dda3438f0f5085e5e6/src%2Ftest%2Fcompile-fail%2Ffloat-int-invalid-const-cast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffloat-int-invalid-const-cast.rs?ref=4daaee900f449a89eb1217dda3438f0f5085e5e6", "patch": "@@ -58,4 +58,4 @@ fn main() {\n     { const X: u32 = 4294967296. as u32; force(X); } //~ ERROR constant evaluation error\n     { const X: u128 = 1e40 as u128; force(X); } //~ ERROR constant evaluation error\n     { const X: i128 = 1e40 as i128; force(X); } //~ ERROR constant evaluation error\n-}\n\\ No newline at end of file\n+}"}, {"sha": "1a06d59f0b191a22ba5fb15de4f21670058280f3", "filename": "src/test/compile-fail/issue-28848.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4daaee900f449a89eb1217dda3438f0f5085e5e6/src%2Ftest%2Fcompile-fail%2Fissue-28848.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4daaee900f449a89eb1217dda3438f0f5085e5e6/src%2Ftest%2Fcompile-fail%2Fissue-28848.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-28848.rs?ref=4daaee900f449a89eb1217dda3438f0f5085e5e6", "patch": "@@ -20,4 +20,4 @@ pub fn foo<'a, 'b>(u: &'b ()) -> &'a () {\n     Foo::<'a, 'b>::xmute(u) //~ ERROR lifetime bound not satisfied\n }\n \n-fn main() {}\n\\ No newline at end of file\n+fn main() {}"}, {"sha": "90eb66728fce5223ed263932b736b356e8e04d4e", "filename": "src/test/compile-fail/useless_comment.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4daaee900f449a89eb1217dda3438f0f5085e5e6/src%2Ftest%2Fcompile-fail%2Fuseless_comment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4daaee900f449a89eb1217dda3438f0f5085e5e6/src%2Ftest%2Fcompile-fail%2Fuseless_comment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fuseless_comment.rs?ref=4daaee900f449a89eb1217dda3438f0f5085e5e6", "patch": "@@ -27,4 +27,4 @@ fn foo() {\n \n fn main() {\n     foo();\n-}\n\\ No newline at end of file\n+}"}, {"sha": "bfae5b94389700055b7cf77b54db51aa4de2ecc9", "filename": "src/test/mir-opt/return_an_array.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4daaee900f449a89eb1217dda3438f0f5085e5e6/src%2Ftest%2Fmir-opt%2Freturn_an_array.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4daaee900f449a89eb1217dda3438f0f5085e5e6/src%2Ftest%2Fmir-opt%2Freturn_an_array.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Freturn_an_array.rs?ref=4daaee900f449a89eb1217dda3438f0f5085e5e6", "patch": "@@ -15,4 +15,4 @@ fn foo() -> [u8; 1024] {\n         return x;\n }\n \n-fn main() { }\n\\ No newline at end of file\n+fn main() { }"}, {"sha": "14c6f3944bb59f712a057357c419fec8072d6d6b", "filename": "src/test/parse-fail/issue-37113.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4daaee900f449a89eb1217dda3438f0f5085e5e6/src%2Ftest%2Fparse-fail%2Fissue-37113.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4daaee900f449a89eb1217dda3438f0f5085e5e6/src%2Ftest%2Fparse-fail%2Fissue-37113.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Fissue-37113.rs?ref=4daaee900f449a89eb1217dda3438f0f5085e5e6", "patch": "@@ -18,4 +18,4 @@ macro_rules! test_macro {\n \n fn main() {\n     test_macro!(String,);\n-}\n\\ No newline at end of file\n+}"}, {"sha": "e701329127502ba4258f5843e6c71e733efb46a1", "filename": "src/test/run-pass/abi-sysv64-register-usage.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4daaee900f449a89eb1217dda3438f0f5085e5e6/src%2Ftest%2Frun-pass%2Fabi-sysv64-register-usage.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4daaee900f449a89eb1217dda3438f0f5085e5e6/src%2Ftest%2Frun-pass%2Fabi-sysv64-register-usage.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fabi-sysv64-register-usage.rs?ref=4daaee900f449a89eb1217dda3438f0f5085e5e6", "patch": "@@ -102,4 +102,4 @@ pub fn main() {\n }\n \n #[cfg(not(target_arch = \"x86_64\"))]\n-pub fn main() {}\n\\ No newline at end of file\n+pub fn main() {}"}, {"sha": "91ad9869ed856307da8946baeeaab92c36b59893", "filename": "src/test/run-pass/auxiliary/issue_42007_s.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4daaee900f449a89eb1217dda3438f0f5085e5e6/src%2Ftest%2Frun-pass%2Fauxiliary%2Fissue_42007_s.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4daaee900f449a89eb1217dda3438f0f5085e5e6/src%2Ftest%2Frun-pass%2Fauxiliary%2Fissue_42007_s.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fauxiliary%2Fissue_42007_s.rs?ref=4daaee900f449a89eb1217dda3438f0f5085e5e6", "patch": "@@ -11,4 +11,4 @@\n #[repr(u8)]\n pub enum E {\n     B = 1 as u8,\n-}\n\\ No newline at end of file\n+}"}, {"sha": "556c846b0b8e19d78393a202910cde3808cbb485", "filename": "src/test/run-pass/for-loop-mut-ref-element.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4daaee900f449a89eb1217dda3438f0f5085e5e6/src%2Ftest%2Frun-pass%2Ffor-loop-mut-ref-element.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4daaee900f449a89eb1217dda3438f0f5085e5e6/src%2Ftest%2Frun-pass%2Ffor-loop-mut-ref-element.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ffor-loop-mut-ref-element.rs?ref=4daaee900f449a89eb1217dda3438f0f5085e5e6", "patch": "@@ -12,4 +12,4 @@\n \n fn main() {\n     for ref mut _a in std::iter::once(true) {}\n-}\n\\ No newline at end of file\n+}"}, {"sha": "486fe3c900d8b80c5e8dc5454fd0ef784cc88184", "filename": "src/test/run-pass/generator/borrow-in-tail-expr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4daaee900f449a89eb1217dda3438f0f5085e5e6/src%2Ftest%2Frun-pass%2Fgenerator%2Fborrow-in-tail-expr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4daaee900f449a89eb1217dda3438f0f5085e5e6/src%2Ftest%2Frun-pass%2Fgenerator%2Fborrow-in-tail-expr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fgenerator%2Fborrow-in-tail-expr.rs?ref=4daaee900f449a89eb1217dda3438f0f5085e5e6", "patch": "@@ -16,4 +16,4 @@ fn main() {\n         let a = String::new();\n         a.len()\n     };\n-}\n\\ No newline at end of file\n+}"}, {"sha": "231aa1b42f021695a083754e896b3bac0a7f8100", "filename": "src/test/run-pass/generator/match-bindings.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4daaee900f449a89eb1217dda3438f0f5085e5e6/src%2Ftest%2Frun-pass%2Fgenerator%2Fmatch-bindings.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4daaee900f449a89eb1217dda3438f0f5085e5e6/src%2Ftest%2Frun-pass%2Fgenerator%2Fmatch-bindings.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fgenerator%2Fmatch-bindings.rs?ref=4daaee900f449a89eb1217dda3438f0f5085e5e6", "patch": "@@ -27,4 +27,4 @@ fn main() {\n             yield;\n         }\n     };\n-}\n\\ No newline at end of file\n+}"}, {"sha": "5ea4b1fe93c8024684954d1995173b6221426aa1", "filename": "src/test/run-pass/generator/yield-subtype.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4daaee900f449a89eb1217dda3438f0f5085e5e6/src%2Ftest%2Frun-pass%2Fgenerator%2Fyield-subtype.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4daaee900f449a89eb1217dda3438f0f5085e5e6/src%2Ftest%2Frun-pass%2Fgenerator%2Fyield-subtype.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fgenerator%2Fyield-subtype.rs?ref=4daaee900f449a89eb1217dda3438f0f5085e5e6", "patch": "@@ -20,4 +20,4 @@ fn bar<'a>() {\n     };\n }\n \n-fn main() {}\n\\ No newline at end of file\n+fn main() {}"}, {"sha": "c2486f0dcb49804ed4ced93229e0883f3dea3fc9", "filename": "src/test/run-pass/issue-22066.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4daaee900f449a89eb1217dda3438f0f5085e5e6/src%2Ftest%2Frun-pass%2Fissue-22066.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4daaee900f449a89eb1217dda3438f0f5085e5e6/src%2Ftest%2Frun-pass%2Fissue-22066.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-22066.rs?ref=4daaee900f449a89eb1217dda3438f0f5085e5e6", "patch": "@@ -18,4 +18,4 @@ pub trait LineFormatter<'a> {\n     }\n }\n \n-fn main() {}\n\\ No newline at end of file\n+fn main() {}"}, {"sha": "ed319b1391dc34a0f25b61babf1e4debcd41ee88", "filename": "src/test/run-pass/issue-32292.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4daaee900f449a89eb1217dda3438f0f5085e5e6/src%2Ftest%2Frun-pass%2Fissue-32292.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4daaee900f449a89eb1217dda3438f0f5085e5e6/src%2Ftest%2Frun-pass%2Fissue-32292.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-32292.rs?ref=4daaee900f449a89eb1217dda3438f0f5085e5e6", "patch": "@@ -15,4 +15,4 @@ struct Foo;\n \n fn main() {\n     let _ = Foo;\n-}\n\\ No newline at end of file\n+}"}, {"sha": "98da7d46b1aa3867a06ddd4f6b5a293c3b69357f", "filename": "src/test/run-pass/issue-33992.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4daaee900f449a89eb1217dda3438f0f5085e5e6/src%2Ftest%2Frun-pass%2Fissue-33992.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4daaee900f449a89eb1217dda3438f0f5085e5e6/src%2Ftest%2Frun-pass%2Fissue-33992.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-33992.rs?ref=4daaee900f449a89eb1217dda3438f0f5085e5e6", "patch": "@@ -37,4 +37,4 @@ pub static TEST7: bool = true;\n #[linkage = \"weak_odr\"]\n pub static TEST8: bool = true;\n \n-fn main() {}\n\\ No newline at end of file\n+fn main() {}"}, {"sha": "9e4eb84edc67c5009012ccea8c7794cbbc44e3ce", "filename": "src/test/run-pass/issue-35376.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4daaee900f449a89eb1217dda3438f0f5085e5e6/src%2Ftest%2Frun-pass%2Fissue-35376.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4daaee900f449a89eb1217dda3438f0f5085e5e6/src%2Ftest%2Frun-pass%2Fissue-35376.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-35376.rs?ref=4daaee900f449a89eb1217dda3438f0f5085e5e6", "patch": "@@ -48,4 +48,4 @@ pub struct Handle;\n \n impl Beta for Handle {\n     type Event = ();\n-}\n\\ No newline at end of file\n+}"}, {"sha": "8499e5c741ee043e0225f5025af6ea88578bf114", "filename": "src/test/rustdoc/doc-cfg.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4daaee900f449a89eb1217dda3438f0f5085e5e6/src%2Ftest%2Frustdoc%2Fdoc-cfg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4daaee900f449a89eb1217dda3438f0f5085e5e6/src%2Ftest%2Frustdoc%2Fdoc-cfg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fdoc-cfg.rs?ref=4daaee900f449a89eb1217dda3438f0f5085e5e6", "patch": "@@ -44,4 +44,4 @@ pub mod unix_only {\n     impl ArmOnly for super::Portable {\n         fn unix_and_arm_only_function() {}\n     }\n-}\n\\ No newline at end of file\n+}"}, {"sha": "4ac8f8c0d4e22cfe12b6198737966fa0b62c0d66", "filename": "src/test/ui/in-band-lifetimes/single_use_lifetimes-4.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4daaee900f449a89eb1217dda3438f0f5085e5e6/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fsingle_use_lifetimes-4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4daaee900f449a89eb1217dda3438f0f5085e5e6/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fsingle_use_lifetimes-4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fsingle_use_lifetimes-4.rs?ref=4daaee900f449a89eb1217dda3438f0f5085e5e6", "patch": "@@ -17,4 +17,4 @@ enum Bar<'x> { //~ ERROR lifetime name `'x` only used once\n     Variant(&'x u32)\n }\n \n-fn main() { }\n\\ No newline at end of file\n+fn main() { }"}, {"sha": "a97056b6240ec1bf5b77e0ae731eb12586cdf4e8", "filename": "src/test/ui/in-band-lifetimes/single_use_lifetimes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4daaee900f449a89eb1217dda3438f0f5085e5e6/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fsingle_use_lifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4daaee900f449a89eb1217dda3438f0f5085e5e6/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fsingle_use_lifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fsingle_use_lifetimes.rs?ref=4daaee900f449a89eb1217dda3438f0f5085e5e6", "patch": "@@ -13,4 +13,4 @@ fn deref<'x>(v: &'x u32) -> u32 { //~ ERROR lifetime name `'x` only used once\n     *v\n }\n \n-fn main() {}\n\\ No newline at end of file\n+fn main() {}"}]}