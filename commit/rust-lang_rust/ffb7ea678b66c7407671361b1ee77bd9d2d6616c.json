{"sha": "ffb7ea678b66c7407671361b1ee77bd9d2d6616c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZmYjdlYTY3OGI2NmM3NDA3NjcxMzYxYjFlZTc3YmQ5ZDJkNjYxNmM=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-04-08T09:47:40Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-04-08T09:47:40Z"}, "message": "Don't strip nightly releases", "tree": {"sha": "f8bd9f6d012ffe1c4bf94021ddeb037422af8a63", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f8bd9f6d012ffe1c4bf94021ddeb037422af8a63"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ffb7ea678b66c7407671361b1ee77bd9d2d6616c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ffb7ea678b66c7407671361b1ee77bd9d2d6616c", "html_url": "https://github.com/rust-lang/rust/commit/ffb7ea678b66c7407671361b1ee77bd9d2d6616c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ffb7ea678b66c7407671361b1ee77bd9d2d6616c/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d89c189ad1efe87e54855e6488184d7a3825a534", "url": "https://api.github.com/repos/rust-lang/rust/commits/d89c189ad1efe87e54855e6488184d7a3825a534", "html_url": "https://github.com/rust-lang/rust/commit/d89c189ad1efe87e54855e6488184d7a3825a534"}], "stats": {"total": 45, "additions": 21, "deletions": 24}, "files": [{"sha": "2c1192f0728d7636cedbb77a666e9562889a3852", "filename": ".github/workflows/release.yaml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ffb7ea678b66c7407671361b1ee77bd9d2d6616c/.github%2Fworkflows%2Frelease.yaml", "raw_url": "https://github.com/rust-lang/rust/raw/ffb7ea678b66c7407671361b1ee77bd9d2d6616c/.github%2Fworkflows%2Frelease.yaml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fworkflows%2Frelease.yaml?ref=ffb7ea678b66c7407671361b1ee77bd9d2d6616c", "patch": "@@ -50,11 +50,11 @@ jobs:\n \n     - name: Dist\n       if: matrix.os == 'ubuntu-latest' && github.ref == 'refs/heads/release'\n-      run: cargo xtask dist --client --version 0.2.$GITHUB_RUN_NUMBER         --tag $(date --iso --utc)\n+      run: cargo xtask dist --client 0.2.$GITHUB_RUN_NUMBER\n \n     - name: Dist\n       if: matrix.os == 'ubuntu-latest' && github.ref != 'refs/heads/release'\n-      run: cargo xtask dist --client --version 0.3.$GITHUB_RUN_NUMBER-nightly --tag nightly\n+      run: cargo xtask dist --nightly --client 0.3.$GITHUB_RUN_NUMBER-nightly\n \n     - name: Dist\n       if: matrix.os != 'ubuntu-latest'"}, {"sha": "67ae6106ab7be5bde4ad28af3c673fd9c7e32dd1", "filename": "xtask/src/dist.rs", "status": "modified", "additions": 9, "deletions": 10, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/ffb7ea678b66c7407671361b1ee77bd9d2d6616c/xtask%2Fsrc%2Fdist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ffb7ea678b66c7407671361b1ee77bd9d2d6616c/xtask%2Fsrc%2Fdist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Fdist.rs?ref=ffb7ea678b66c7407671361b1ee77bd9d2d6616c", "patch": "@@ -3,24 +3,21 @@ use std::path::PathBuf;\n use anyhow::Result;\n \n use crate::{\n-    not_bash::{fs2, pushd, rm_rf, run},\n+    not_bash::{date_iso, fs2, pushd, rm_rf, run},\n     project_root,\n };\n \n-pub struct ClientOpts {\n-    pub version: String,\n-    pub release_tag: String,\n-}\n \n-pub fn run_dist(client_opts: Option<ClientOpts>) -> Result<()> {\n+pub fn run_dist(nightly: bool, client_version: Option<String>) -> Result<()> {\n     let dist = project_root().join(\"dist\");\n     rm_rf(&dist)?;\n     fs2::create_dir_all(&dist)?;\n \n-    if let Some(ClientOpts { version, release_tag }) = client_opts {\n+    if let Some(version) = client_version {\n+        let release_tag = if nightly { \"nightly\".to_string() } else { date_iso()? };\n         dist_client(&version, &release_tag)?;\n     }\n-    dist_server()?;\n+    dist_server(nightly)?;\n     Ok(())\n }\n \n@@ -50,7 +47,7 @@ fn dist_client(version: &str, release_tag: &str) -> Result<()> {\n     Ok(())\n }\n \n-fn dist_server() -> Result<()> {\n+fn dist_server(nightly: bool) -> Result<()> {\n     if cfg!(target_os = \"linux\") {\n         std::env::set_var(\"CC\", \"clang\");\n         run!(\n@@ -60,7 +57,9 @@ fn dist_server() -> Result<()> {\n             // We'd want to add, but that requires setting the right linker somehow\n             // --features=jemalloc\n         )?;\n-        run!(\"strip ./target/x86_64-unknown-linux-musl/release/rust-analyzer\")?;\n+        if !nightly {\n+            run!(\"strip ./target/x86_64-unknown-linux-musl/release/rust-analyzer\")?;\n+        }\n     } else {\n         run!(\"cargo build --manifest-path ./crates/rust-analyzer/Cargo.toml --bin rust-analyzer --release\")?;\n     }"}, {"sha": "9d087daa248cffa20dd7a41db50bb0d5616dd2cd", "filename": "xtask/src/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ffb7ea678b66c7407671361b1ee77bd9d2d6616c/xtask%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ffb7ea678b66c7407671361b1ee77bd9d2d6616c/xtask%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Flib.rs?ref=ffb7ea678b66c7407671361b1ee77bd9d2d6616c", "patch": "@@ -21,7 +21,7 @@ use walkdir::{DirEntry, WalkDir};\n \n use crate::{\n     codegen::Mode,\n-    not_bash::{fs2, pushd, rm_rf, run},\n+    not_bash::{date_iso, fs2, pushd, rm_rf, run},\n };\n \n pub use anyhow::Result;\n@@ -180,7 +180,7 @@ pub fn run_release(dry_run: bool) -> Result<()> {\n     let website_root = project_root().join(\"../rust-analyzer.github.io\");\n     let changelog_dir = website_root.join(\"./thisweek/_posts\");\n \n-    let today = run!(\"date --iso\")?;\n+    let today = date_iso()?;\n     let commit = run!(\"git rev-parse HEAD\")?;\n     let changelog_n = fs2::read_dir(changelog_dir.as_path())?.count();\n "}, {"sha": "dff3ce4a1dd6081d33bc9b4519bd1ec5df86a380", "filename": "xtask/src/main.rs", "status": "modified", "additions": 4, "deletions": 10, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/ffb7ea678b66c7407671361b1ee77bd9d2d6616c/xtask%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ffb7ea678b66c7407671361b1ee77bd9d2d6616c/xtask%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Fmain.rs?ref=ffb7ea678b66c7407671361b1ee77bd9d2d6616c", "patch": "@@ -13,7 +13,7 @@ use std::env;\n use pico_args::Arguments;\n use xtask::{\n     codegen::{self, Mode},\n-    dist::{run_dist, ClientOpts},\n+    dist::run_dist,\n     install::{ClientOpt, InstallCmd, ServerOpt},\n     not_bash::pushd,\n     pre_commit, project_root, run_clippy, run_fuzzer, run_pre_cache, run_release, run_rustfmt,\n@@ -103,16 +103,10 @@ FLAGS:\n             run_release(dry_run)\n         }\n         \"dist\" => {\n-            let client_opts = if args.contains(\"--client\") {\n-                Some(ClientOpts {\n-                    version: args.value_from_str(\"--version\")?,\n-                    release_tag: args.value_from_str(\"--tag\")?,\n-                })\n-            } else {\n-                None\n-            };\n+            let nightly = args.contains(\"--nightly\");\n+            let client_version: Option<String> = args.opt_value_from_str(\"--client\")?;\n             args.finish()?;\n-            run_dist(client_opts)\n+            run_dist(nightly, client_version)\n         }\n         _ => {\n             eprintln!("}, {"sha": "ef1699934918f1eea460cd6a6206e545c4f71b51", "filename": "xtask/src/not_bash.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ffb7ea678b66c7407671361b1ee77bd9d2d6616c/xtask%2Fsrc%2Fnot_bash.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ffb7ea678b66c7407671361b1ee77bd9d2d6616c/xtask%2Fsrc%2Fnot_bash.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Fnot_bash.rs?ref=ffb7ea678b66c7407671361b1ee77bd9d2d6616c", "patch": "@@ -94,6 +94,10 @@ pub fn run_process(cmd: String, echo: bool) -> Result<String> {\n     run_process_inner(&cmd, echo).with_context(|| format!(\"process `{}` failed\", cmd))\n }\n \n+pub fn date_iso() -> Result<String> {\n+    run!(\"date --iso --utc\")\n+}\n+\n fn run_process_inner(cmd: &str, echo: bool) -> Result<String> {\n     let mut args = shelx(cmd);\n     let binary = args.remove(0);"}]}