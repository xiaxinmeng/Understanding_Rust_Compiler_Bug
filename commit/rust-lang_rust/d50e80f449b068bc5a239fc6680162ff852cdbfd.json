{"sha": "d50e80f449b068bc5a239fc6680162ff852cdbfd", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ1MGU4MGY0NDliMDY4YmM1YTIzOWZjNjY4MDE2MmZmODUyY2RiZmQ=", "commit": {"author": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2014-11-17T20:40:05Z"}, "committer": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2014-11-17T23:43:28Z"}, "message": "librustc: DSTify `ClassList`, `LlvmRepr` and `Repr`", "tree": {"sha": "72c578c0a9739b066d1aa299b110a9ac0748695b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/72c578c0a9739b066d1aa299b110a9ac0748695b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d50e80f449b068bc5a239fc6680162ff852cdbfd", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d50e80f449b068bc5a239fc6680162ff852cdbfd", "html_url": "https://github.com/rust-lang/rust/commit/d50e80f449b068bc5a239fc6680162ff852cdbfd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d50e80f449b068bc5a239fc6680162ff852cdbfd/comments", "author": null, "committer": null, "parents": [{"sha": "daa949e51665c4ef850249ebf4c13dd6c8da26db", "url": "https://api.github.com/repos/rust-lang/rust/commits/daa949e51665c4ef850249ebf4c13dd6c8da26db", "html_url": "https://github.com/rust-lang/rust/commit/daa949e51665c4ef850249ebf4c13dd6c8da26db"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "84116e71f0da9266687d214727edf0c30556aa25", "filename": "src/librustc/middle/trans/cabi_x86_64.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d50e80f449b068bc5a239fc6680162ff852cdbfd/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcabi_x86_64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d50e80f449b068bc5a239fc6680162ff852cdbfd/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcabi_x86_64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcabi_x86_64.rs?ref=d50e80f449b068bc5a239fc6680162ff852cdbfd", "patch": "@@ -61,12 +61,12 @@ impl RegClass {\n     }\n }\n \n-trait ClassList {\n+trait ClassList for Sized? {\n     fn is_pass_byval(&self) -> bool;\n     fn is_ret_bysret(&self) -> bool;\n }\n \n-impl<'a> ClassList for &'a [RegClass] {\n+impl ClassList for [RegClass] {\n     fn is_pass_byval(&self) -> bool {\n         if self.len() == 0 { return false; }\n "}, {"sha": "28e97e0f658b1cfc8ccb3008d340c0e834c44b2d", "filename": "src/librustc/middle/trans/llrepr.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d50e80f449b068bc5a239fc6680162ff852cdbfd/src%2Flibrustc%2Fmiddle%2Ftrans%2Fllrepr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d50e80f449b068bc5a239fc6680162ff852cdbfd/src%2Flibrustc%2Fmiddle%2Ftrans%2Fllrepr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fllrepr.rs?ref=d50e80f449b068bc5a239fc6680162ff852cdbfd", "patch": "@@ -12,11 +12,11 @@ use middle::trans::context::CrateContext;\n use middle::trans::type_::Type;\n use llvm::ValueRef;\n \n-pub trait LlvmRepr {\n+pub trait LlvmRepr for Sized? {\n     fn llrepr(&self, ccx: &CrateContext) -> String;\n }\n \n-impl<'a, T:LlvmRepr> LlvmRepr for &'a [T] {\n+impl<T:LlvmRepr> LlvmRepr for [T] {\n     fn llrepr(&self, ccx: &CrateContext) -> String {\n         let reprs: Vec<String> = self.iter().map(|t| t.llrepr(ccx)).collect();\n         format!(\"[{}]\", reprs.connect(\",\"))"}, {"sha": "e6015bfc074ec028dae25e92627187fbe88a3037", "filename": "src/librustc/util/ppaux.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/d50e80f449b068bc5a239fc6680162ff852cdbfd/src%2Flibrustc%2Futil%2Fppaux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d50e80f449b068bc5a239fc6680162ff852cdbfd/src%2Flibrustc%2Futil%2Fppaux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Futil%2Fppaux.rs?ref=d50e80f449b068bc5a239fc6680162ff852cdbfd", "patch": "@@ -37,7 +37,7 @@ use syntax::{ast, ast_util};\n use syntax::owned_slice::OwnedSlice;\n \n /// Produces a string suitable for debugging output.\n-pub trait Repr {\n+pub trait Repr for Sized? {\n     fn repr(&self, tcx: &ctxt) -> String;\n }\n \n@@ -578,9 +578,9 @@ impl Repr for () {\n     }\n }\n \n-impl<'a,T:Repr> Repr for &'a T {\n+impl<'a, Sized? T:Repr> Repr for &'a T {\n     fn repr(&self, tcx: &ctxt) -> String {\n-        (&**self).repr(tcx)\n+        Repr::repr(*self, tcx)\n     }\n }\n \n@@ -600,9 +600,9 @@ fn repr_vec<T:Repr>(tcx: &ctxt, v: &[T]) -> String {\n     vec_map_to_string(v, |t| t.repr(tcx))\n }\n \n-impl<'a, T:Repr> Repr for &'a [T] {\n+impl<T:Repr> Repr for [T] {\n     fn repr(&self, tcx: &ctxt) -> String {\n-        repr_vec(tcx, *self)\n+        repr_vec(tcx, self)\n     }\n }\n "}]}