{"sha": "03f6d92ae4796ca0f18aab689f0c0bf311e2072c", "node_id": "C_kwDOAAsO6NoAKDAzZjZkOTJhZTQ3OTZjYTBmMThhYWI2ODlmMGMwYmYzMTFlMjA3MmM", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-12-11T14:27:36Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-12-11T14:27:36Z"}, "message": "minor: Remove unnecessary clones", "tree": {"sha": "61915c5643e4f662074b03f3ca66439b70bb0f24", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/61915c5643e4f662074b03f3ca66439b70bb0f24"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/03f6d92ae4796ca0f18aab689f0c0bf311e2072c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/03f6d92ae4796ca0f18aab689f0c0bf311e2072c", "html_url": "https://github.com/rust-lang/rust/commit/03f6d92ae4796ca0f18aab689f0c0bf311e2072c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/03f6d92ae4796ca0f18aab689f0c0bf311e2072c/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "143a30aa519ecdb8b98bf6bf2c625f77920e7921", "url": "https://api.github.com/repos/rust-lang/rust/commits/143a30aa519ecdb8b98bf6bf2c625f77920e7921", "html_url": "https://github.com/rust-lang/rust/commit/143a30aa519ecdb8b98bf6bf2c625f77920e7921"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "291675c4cc0c590d41f72943b19407d016fa9156", "filename": "crates/ide_db/src/helpers/import_assets.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/03f6d92ae4796ca0f18aab689f0c0bf311e2072c/crates%2Fide_db%2Fsrc%2Fhelpers%2Fimport_assets.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03f6d92ae4796ca0f18aab689f0c0bf311e2072c/crates%2Fide_db%2Fsrc%2Fhelpers%2Fimport_assets.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Fhelpers%2Fimport_assets.rs?ref=03f6d92ae4796ca0f18aab689f0c0bf311e2072c", "patch": "@@ -280,7 +280,7 @@ impl ImportAssets {\n         .into_iter()\n         .filter(|import| import.import_path.len() > 1)\n         .filter(|import| !scope_definitions.contains(&ScopeDef::from(import.item_to_import)))\n-        .sorted_by_key(|import| import.import_path.clone())\n+        .sorted_by(|a, b| a.import_path.cmp(&b.import_path))\n         .collect()\n     }\n \n@@ -309,9 +309,9 @@ fn path_applicable_imports(\n                 current_crate,\n                 path_candidate.name.clone(),\n                 // FIXME: we could look up assoc items by the input and propose those in completion,\n-                // but that requries more preparation first:\n+                // but that requires more preparation first:\n                 // * store non-trait assoc items in import_map to fully enable this lookup\n-                // * ensure that does not degrade the performance (bencmark it)\n+                // * ensure that does not degrade the performance (benchmark it)\n                 // * write more logic to check for corresponding trait presence requirement (we're unable to flyimport multiple item right now)\n                 // * improve the associated completion item matching and/or scoring to ensure no noisy completions appear\n                 //"}]}