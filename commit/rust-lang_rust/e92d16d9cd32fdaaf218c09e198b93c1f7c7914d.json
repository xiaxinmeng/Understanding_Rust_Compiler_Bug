{"sha": "e92d16d9cd32fdaaf218c09e198b93c1f7c7914d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU5MmQxNmQ5Y2QzMmZkYWFmMjE4YzA5ZTE5OGI5M2MxZjdjNzkxNGQ=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-12-07T12:44:48Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-12-07T12:44:48Z"}, "message": "add flag to ignore memory leaks", "tree": {"sha": "f0b2740eb07f97dbf422e5069027ddf42260e7cd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f0b2740eb07f97dbf422e5069027ddf42260e7cd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e92d16d9cd32fdaaf218c09e198b93c1f7c7914d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e92d16d9cd32fdaaf218c09e198b93c1f7c7914d", "html_url": "https://github.com/rust-lang/rust/commit/e92d16d9cd32fdaaf218c09e198b93c1f7c7914d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e92d16d9cd32fdaaf218c09e198b93c1f7c7914d/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "754c4a4f6dc9c5a561e619db76dbc815ff80be1c", "url": "https://api.github.com/repos/rust-lang/rust/commits/754c4a4f6dc9c5a561e619db76dbc815ff80be1c", "html_url": "https://github.com/rust-lang/rust/commit/754c4a4f6dc9c5a561e619db76dbc815ff80be1c"}], "stats": {"total": 22, "additions": 18, "deletions": 4}, "files": [{"sha": "01d0935be21aa5b7a57d9e9ebbac70f56a82e645", "filename": "README.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e92d16d9cd32fdaaf218c09e198b93c1f7c7914d/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/e92d16d9cd32fdaaf218c09e198b93c1f7c7914d/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=e92d16d9cd32fdaaf218c09e198b93c1f7c7914d", "patch": "@@ -159,6 +159,7 @@ Several `-Z` flags are relevant for Miri:\n * `-Zmiri-disable-isolation` disables host host isolation.  As a consequence,\n   the program has access to host resources such as environment variables and\n   randomness (and, eventually, file systems and more).\n+* `-Zmiri-ignore-leaks` disables the memory leak checker.\n * `-Zmiri-env-exclude=<var>` keeps the `var` environment variable isolated from \n   the host. Can be used multiple times to exclude several variables. The `TERM`\n   environment variable is excluded by default."}, {"sha": "e255afc3463d4bc4b325e965a615f87436d12701", "filename": "src/bin/miri.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e92d16d9cd32fdaaf218c09e198b93c1f7c7914d/src%2Fbin%2Fmiri.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e92d16d9cd32fdaaf218c09e198b93c1f7c7914d/src%2Fbin%2Fmiri.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fmiri.rs?ref=e92d16d9cd32fdaaf218c09e198b93c1f7c7914d", "patch": "@@ -124,6 +124,7 @@ fn main() {\n     // Parse our arguments and split them across `rustc` and `miri`.\n     let mut validate = true;\n     let mut communicate = false;\n+    let mut ignore_leaks = false;\n     let mut seed: Option<u64> = None;\n     let mut rustc_args = vec![];\n     let mut miri_args = vec![];\n@@ -145,6 +146,9 @@ fn main() {\n                 \"-Zmiri-disable-isolation\" => {\n                     communicate = true;\n                 },\n+                \"-Zmiri-ignore-leaks\" => {\n+                    ignore_leaks = true;\n+                },\n                 \"--\" => {\n                     after_dashdash = true;\n                 }\n@@ -200,6 +204,7 @@ fn main() {\n     let miri_config = miri::MiriConfig {\n         validate,\n         communicate,\n+        ignore_leaks,\n         excluded_env_vars,\n         seed,\n         args: miri_args,"}, {"sha": "8be42226b5ecf8d3751538f9cb6d4d595719c23c", "filename": "src/eval.rs", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/e92d16d9cd32fdaaf218c09e198b93c1f7c7914d/src%2Feval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e92d16d9cd32fdaaf218c09e198b93c1f7c7914d/src%2Feval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Feval.rs?ref=e92d16d9cd32fdaaf218c09e198b93c1f7c7914d", "patch": "@@ -18,6 +18,8 @@ pub struct MiriConfig {\n     pub validate: bool,\n     /// Determines if communication with the host environment is enabled.\n     pub communicate: bool,\n+    /// Determines if memory leaks should be ignored.\n+    pub ignore_leaks: bool,\n     /// Environment variables that should always be isolated from the host.\n     pub excluded_env_vars: Vec<String>,\n     /// Command-line arguments passed to the interpreted program.\n@@ -169,6 +171,11 @@ pub fn create_ecx<'mir, 'tcx: 'mir>(\n /// Returns `Some(return_code)` if program executed completed.\n /// Returns `None` if an evaluation error occured.\n pub fn eval_main<'tcx>(tcx: TyCtxt<'tcx>, main_id: DefId, config: MiriConfig) -> Option<i64> {\n+    // FIXME: We always ignore leaks on some platforms where we do not\n+    // correctly implement TLS destructors.\n+    let target_os = tcx.sess.target.target.target_os.to_lowercase();\n+    let ignore_leaks = config.ignore_leaks || target_os == \"windows\" || target_os == \"macos\";\n+\n     let (mut ecx, ret_place) = match create_ecx(tcx, main_id, config) {\n         Ok(v) => v,\n         Err(mut err) => {\n@@ -190,10 +197,6 @@ pub fn eval_main<'tcx>(tcx: TyCtxt<'tcx>, main_id: DefId, config: MiriConfig) ->\n     // Process the result.\n     match res {\n         Ok(return_code) => {\n-            // Disable the leak test on some platforms where we do not\n-            // correctly implement TLS destructors.\n-            let target_os = ecx.tcx.tcx.sess.target.target.target_os.to_lowercase();\n-            let ignore_leaks = target_os == \"windows\" || target_os == \"macos\";\n             if !ignore_leaks {\n                 let leaks = ecx.memory.leak_report();\n                 if leaks != 0 {"}, {"sha": "fddf14121ef3552391df9d3272c036bff43dd914", "filename": "tests/run-pass/memleak_ignored.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e92d16d9cd32fdaaf218c09e198b93c1f7c7914d/tests%2Frun-pass%2Fmemleak_ignored.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e92d16d9cd32fdaaf218c09e198b93c1f7c7914d/tests%2Frun-pass%2Fmemleak_ignored.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fmemleak_ignored.rs?ref=e92d16d9cd32fdaaf218c09e198b93c1f7c7914d", "patch": "@@ -0,0 +1,5 @@\n+// compile-flags: -Zmiri-ignore-leaks\n+\n+fn main() {\n+    std::mem::forget(Box::new(42));\n+}"}]}