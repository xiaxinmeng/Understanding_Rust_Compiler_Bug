{"sha": "405a3dd91c4e844652c09810e71183babc9ed160", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQwNWEzZGQ5MWM0ZTg0NDY1MmMwOTgxMGU3MTE4M2JhYmM5ZWQxNjA=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-10-16T01:27:42Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-11-16T21:23:19Z"}, "message": "Tweak code formatting", "tree": {"sha": "fbc9fc55b240f4e1d1f218378b7ccdebaeb46c38", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fbc9fc55b240f4e1d1f218378b7ccdebaeb46c38"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/405a3dd91c4e844652c09810e71183babc9ed160", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/405a3dd91c4e844652c09810e71183babc9ed160", "html_url": "https://github.com/rust-lang/rust/commit/405a3dd91c4e844652c09810e71183babc9ed160", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/405a3dd91c4e844652c09810e71183babc9ed160/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5f00849dc495f97ea9eeef07b958664bfb755ae3", "url": "https://api.github.com/repos/rust-lang/rust/commits/5f00849dc495f97ea9eeef07b958664bfb755ae3", "html_url": "https://github.com/rust-lang/rust/commit/5f00849dc495f97ea9eeef07b958664bfb755ae3"}], "stats": {"total": 16, "additions": 10, "deletions": 6}, "files": [{"sha": "697bb3f467c54de8b95ddc0d97b8244f88bac881", "filename": "src/librustc/traits/error_reporting.rs", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/405a3dd91c4e844652c09810e71183babc9ed160/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/405a3dd91c4e844652c09810e71183babc9ed160/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs?ref=405a3dd91c4e844652c09810e71183babc9ed160", "patch": "@@ -713,20 +713,24 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n                 }\n                 match obligation.predicate {\n                     ty::Predicate::Trait(ref trait_predicate) => {\n-                        let trait_predicate =\n-                            self.resolve_vars_if_possible(trait_predicate);\n+                        let trait_predicate = self.resolve_vars_if_possible(trait_predicate);\n \n                         if self.tcx.sess.has_errors() && trait_predicate.references_error() {\n                             return;\n                         }\n                         let trait_ref = trait_predicate.to_poly_trait_ref();\n-                        let (post_message, pre_message) =\n-                            self.get_parent_trait_ref(&obligation.cause.code)\n+                        let (\n+                            post_message,\n+                            pre_message,\n+                        ) = self.get_parent_trait_ref(&obligation.cause.code)\n                                 .map(|t| (format!(\" in `{}`\", t), format!(\"within `{}`, \", t)))\n                             .unwrap_or_default();\n \n-                        let OnUnimplementedNote { message, label, note }\n-                            = self.on_unimplemented_note(trait_ref, obligation);\n+                        let OnUnimplementedNote {\n+                            message,\n+                            label,\n+                            note,\n+                        } = self.on_unimplemented_note(trait_ref, obligation);\n                         let have_alt_message = message.is_some() || label.is_some();\n                         let is_try = self.tcx.sess.source_map().span_to_snippet(span)\n                             .map(|s| &s == \"?\")"}]}