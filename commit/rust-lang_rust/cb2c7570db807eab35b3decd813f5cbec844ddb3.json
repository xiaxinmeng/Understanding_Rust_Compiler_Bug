{"sha": "cb2c7570db807eab35b3decd813f5cbec844ddb3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNiMmM3NTcwZGI4MDdlYWIzNWIzZGVjZDgxM2Y1Y2JlYzg0NGRkYjM=", "commit": {"author": {"name": "Josef Reinhard Brandl", "email": "mail@josefbrandl.de", "date": "2018-07-02T16:55:42Z"}, "committer": {"name": "Josef Reinhard Brandl", "email": "mail@josefbrandl.de", "date": "2018-07-02T16:55:42Z"}, "message": "Add explanation for custom trait object", "tree": {"sha": "c5c1cd246bff5e9dfc585492ecc1ff0f77cff66e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c5c1cd246bff5e9dfc585492ecc1ff0f77cff66e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cb2c7570db807eab35b3decd813f5cbec844ddb3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cb2c7570db807eab35b3decd813f5cbec844ddb3", "html_url": "https://github.com/rust-lang/rust/commit/cb2c7570db807eab35b3decd813f5cbec844ddb3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cb2c7570db807eab35b3decd813f5cbec844ddb3/comments", "author": {"login": "MajorBreakfast", "id": 340142, "node_id": "MDQ6VXNlcjM0MDE0Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/340142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MajorBreakfast", "html_url": "https://github.com/MajorBreakfast", "followers_url": "https://api.github.com/users/MajorBreakfast/followers", "following_url": "https://api.github.com/users/MajorBreakfast/following{/other_user}", "gists_url": "https://api.github.com/users/MajorBreakfast/gists{/gist_id}", "starred_url": "https://api.github.com/users/MajorBreakfast/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MajorBreakfast/subscriptions", "organizations_url": "https://api.github.com/users/MajorBreakfast/orgs", "repos_url": "https://api.github.com/users/MajorBreakfast/repos", "events_url": "https://api.github.com/users/MajorBreakfast/events{/privacy}", "received_events_url": "https://api.github.com/users/MajorBreakfast/received_events", "type": "User", "site_admin": false}, "committer": {"login": "MajorBreakfast", "id": 340142, "node_id": "MDQ6VXNlcjM0MDE0Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/340142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MajorBreakfast", "html_url": "https://github.com/MajorBreakfast", "followers_url": "https://api.github.com/users/MajorBreakfast/followers", "following_url": "https://api.github.com/users/MajorBreakfast/following{/other_user}", "gists_url": "https://api.github.com/users/MajorBreakfast/gists{/gist_id}", "starred_url": "https://api.github.com/users/MajorBreakfast/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MajorBreakfast/subscriptions", "organizations_url": "https://api.github.com/users/MajorBreakfast/orgs", "repos_url": "https://api.github.com/users/MajorBreakfast/repos", "events_url": "https://api.github.com/users/MajorBreakfast/events{/privacy}", "received_events_url": "https://api.github.com/users/MajorBreakfast/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9eee0d2288c067be081f2ca35f5b2d3cfc95fcf2", "url": "https://api.github.com/repos/rust-lang/rust/commits/9eee0d2288c067be081f2ca35f5b2d3cfc95fcf2", "html_url": "https://github.com/rust-lang/rust/commit/9eee0d2288c067be081f2ca35f5b2d3cfc95fcf2"}], "stats": {"total": 19, "additions": 18, "deletions": 1}, "files": [{"sha": "173e381ca50deed2543e3ebe90bf9f204e4a8d49", "filename": "src/libcore/future/future_obj.rs", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/cb2c7570db807eab35b3decd813f5cbec844ddb3/src%2Flibcore%2Ffuture%2Ffuture_obj.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb2c7570db807eab35b3decd813f5cbec844ddb3/src%2Flibcore%2Ffuture%2Ffuture_obj.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ffuture%2Ffuture_obj.rs?ref=cb2c7570db807eab35b3decd813f5cbec844ddb3", "patch": "@@ -20,7 +20,15 @@ use task::{Context, Poll};\n \n /// A custom trait object for polling futures, roughly akin to\n /// `Box<dyn Future<Output = T> + 'a>`.\n-/// Contrary to `FutureObj`, `LocalFutureObj` does not have a `Send` bound.\n+///\n+/// This custom trait object was introduced for two reasons:\n+/// - Currently it is not possible to take `dyn Trait` by value and\n+///   `Box<dyn Trait>` is not available in no_std contexts.\n+/// - The `Future` trait is currently not object safe: The `Future::poll`\n+///   method makes uses the arbitrary self types feature and traits in which\n+///   this feature is used are currently not object safe due to current compiler\n+///   limitations. (See tracking issue for arbitray self types for more\n+///   information #44874)\n pub struct LocalFutureObj<'a, T> {\n     ptr: *mut (),\n     poll_fn: unsafe fn(*mut (), &mut Context) -> Poll<T>,\n@@ -87,6 +95,15 @@ impl<'a, T> Drop for LocalFutureObj<'a, T> {\n \n /// A custom trait object for polling futures, roughly akin to\n /// `Box<dyn Future<Output = T> + Send + 'a>`.\n+///\n+/// This custom trait object was introduced for two reasons:\n+/// - Currently it is not possible to take `dyn Trait` by value and\n+///   `Box<dyn Trait>` is not available in no_std contexts.\n+/// - The `Future` trait is currently not object safe: The `Future::poll`\n+///   method makes uses the arbitrary self types feature and traits in which\n+///   this feature is used are currently not object safe due to current compiler\n+///   limitations. (See tracking issue for arbitray self types for more\n+///   information #44874)\n pub struct FutureObj<'a, T>(LocalFutureObj<'a, T>);\n \n unsafe impl<'a, T> Send for FutureObj<'a, T> {}"}]}