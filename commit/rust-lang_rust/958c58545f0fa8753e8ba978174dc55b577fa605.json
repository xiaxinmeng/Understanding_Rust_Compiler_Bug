{"sha": "958c58545f0fa8753e8ba978174dc55b577fa605", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk1OGM1ODU0NWYwZmE4NzUzZThiYTk3ODE3NGRjNTViNTc3ZmE2MDU=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-12-28T10:10:21Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-12-28T10:10:21Z"}, "message": "Only codegen a trap for functions with uninhabited arguments\n\nFixes #847", "tree": {"sha": "02d3e6f9649ff637d84ebe1b3be490f9fd746923", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/02d3e6f9649ff637d84ebe1b3be490f9fd746923"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/958c58545f0fa8753e8ba978174dc55b577fa605", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/958c58545f0fa8753e8ba978174dc55b577fa605", "html_url": "https://github.com/rust-lang/rust/commit/958c58545f0fa8753e8ba978174dc55b577fa605", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/958c58545f0fa8753e8ba978174dc55b577fa605/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8bf5cd345edf85080ff831eed1b63ac2a8906a04", "url": "https://api.github.com/repos/rust-lang/rust/commits/8bf5cd345edf85080ff831eed1b63ac2a8906a04", "html_url": "https://github.com/rust-lang/rust/commit/8bf5cd345edf85080ff831eed1b63ac2a8906a04"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "6fc4f2ecddbffd5b013ffb263b0a309e2dad202e", "filename": "src/base.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/958c58545f0fa8753e8ba978174dc55b577fa605/src%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/958c58545f0fa8753e8ba978174dc55b577fa605/src%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbase.rs?ref=958c58545f0fa8753e8ba978174dc55b577fa605", "patch": "@@ -54,8 +54,15 @@ pub fn trans_fn<'clif, 'tcx, B: Backend + 'static>(\n         source_info_set: indexmap::IndexSet::new(),\n     };\n \n-    crate::abi::codegen_fn_prelude(&mut fx, start_ebb);\n-    codegen_fn_content(&mut fx);\n+    if fx.mir.args_iter().any(|arg| fx.layout_of(fx.monomorphize(&fx.mir.local_decls[arg].ty)).abi.is_uninhabited()) {\n+        let entry_block = fx.bcx.create_ebb();\n+        fx.bcx.append_ebb_params_for_function_params(entry_block);\n+        fx.bcx.switch_to_block(entry_block);\n+        crate::trap::trap_unreachable(&mut fx, \"function has uninhabited argument\");\n+    } else {\n+        crate::abi::codegen_fn_prelude(&mut fx, start_ebb);\n+        codegen_fn_content(&mut fx);\n+    }\n \n     // Recover all necessary data from fx, before accessing func will prevent future access to it.\n     let instance = fx.instance;"}]}