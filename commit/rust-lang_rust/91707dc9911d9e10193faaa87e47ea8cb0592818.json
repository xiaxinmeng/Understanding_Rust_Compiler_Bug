{"sha": "91707dc9911d9e10193faaa87e47ea8cb0592818", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkxNzA3ZGM5OTExZDllMTAxOTNmYWFhODdlNDdlYThjYjA1OTI4MTg=", "commit": {"author": {"name": "Mark-Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2016-12-13T05:43:53Z"}, "committer": {"name": "Mark Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2016-12-21T03:02:49Z"}, "message": "Merge need_invoke and needs_invoke", "tree": {"sha": "fdfe48879ebac11ae5ef816c577dda309c8f2372", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fdfe48879ebac11ae5ef816c577dda309c8f2372"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/91707dc9911d9e10193faaa87e47ea8cb0592818", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/91707dc9911d9e10193faaa87e47ea8cb0592818", "html_url": "https://github.com/rust-lang/rust/commit/91707dc9911d9e10193faaa87e47ea8cb0592818", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/91707dc9911d9e10193faaa87e47ea8cb0592818/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6412f3128d308371dfffc8b030872d89473874d8", "url": "https://api.github.com/repos/rust-lang/rust/commits/6412f3128d308371dfffc8b030872d89473874d8", "html_url": "https://github.com/rust-lang/rust/commit/6412f3128d308371dfffc8b030872d89473874d8"}], "stats": {"total": 19, "additions": 8, "deletions": 11}, "files": [{"sha": "c7eb6b88c7a52cfcd23d282b68b47b068af77bd7", "filename": "src/librustc_trans/callee.rs", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/91707dc9911d9e10193faaa87e47ea8cb0592818/src%2Flibrustc_trans%2Fcallee.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91707dc9911d9e10193faaa87e47ea8cb0592818/src%2Flibrustc_trans%2Fcallee.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fcallee.rs?ref=91707dc9911d9e10193faaa87e47ea8cb0592818", "patch": "@@ -686,16 +686,8 @@ fn trans_call_inner<'a, 'blk, 'tcx>(bcx: BlockAndBuilder<'blk, 'tcx>,\n         _ => bug!(\"expected fn pointer callee, found {:?}\", callee)\n     };\n \n-    fn need_invoke(bcx: &BlockAndBuilder, had_lpad: bool) -> bool {\n-        if bcx.sess().no_landing_pads() || had_lpad {\n-            false\n-        } else {\n-            bcx.fcx().needs_invoke()\n-        }\n-    }\n-\n     let _icx = push_ctxt(\"invoke_\");\n-    let (llret, bcx) = if need_invoke(&bcx, lpad.is_some()) {\n+    let (llret, bcx) = if bcx.fcx().needs_invoke(lpad.is_some()) {\n         debug!(\"invoking {:?} at {:?}\", Value(llfn), bcx.llbb());\n         for &llarg in &llargs {\n             debug!(\"arg: {:?}\", Value(llarg));"}, {"sha": "63e0598f285c960c4e9cbccf89154d70962189a5", "filename": "src/librustc_trans/cleanup.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/91707dc9911d9e10193faaa87e47ea8cb0592818/src%2Flibrustc_trans%2Fcleanup.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91707dc9911d9e10193faaa87e47ea8cb0592818/src%2Flibrustc_trans%2Fcleanup.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fcleanup.rs?ref=91707dc9911d9e10193faaa87e47ea8cb0592818", "patch": "@@ -211,8 +211,12 @@ impl<'blk, 'tcx> FunctionContext<'blk, 'tcx> {\n     }\n \n     /// Returns true if there are pending cleanups that should execute on panic.\n-    pub fn needs_invoke(&self) -> bool {\n-        self.scopes_len() > 0\n+    pub fn needs_invoke(&self, lpad_present: bool) -> bool {\n+        if self.ccx.sess().no_landing_pads() || lpad_present {\n+            false\n+        } else {\n+            self.scopes_len() > 0\n+        }\n     }\n \n     /// Creates a landing pad for the top scope, if one does not exist. The\n@@ -297,6 +301,7 @@ impl<'blk, 'tcx> FunctionContext<'blk, 'tcx> {\n     }\n \n     fn push_scope(&self, scope: CleanupScope<'tcx>) -> CustomScopeIndex {\n+        assert!(self.scopes_len() == 0);\n         let index = self.scopes_len();\n         debug!(\"pushing custom cleanup scope: {}\", index);\n         self.scopes.borrow_mut().push(scope);"}]}