{"sha": "7947bb1732f513906acef459a6e8c839481f135b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc5NDdiYjE3MzJmNTEzOTA2YWNlZjQ1OWE2ZThjODM5NDgxZjEzNWI=", "commit": {"author": {"name": "Gareth Daniel Smith", "email": "garethdanielsmith@gmail.com", "date": "2012-10-22T19:56:00Z"}, "committer": {"name": "Gareth Daniel Smith", "email": "garethdanielsmith@gmail.com", "date": "2012-10-22T19:56:00Z"}, "message": "Fix and test for issue #3780.", "tree": {"sha": "6bd0936d085599dc629a5b77490f81edd89be620", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6bd0936d085599dc629a5b77490f81edd89be620"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7947bb1732f513906acef459a6e8c839481f135b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7947bb1732f513906acef459a6e8c839481f135b", "html_url": "https://github.com/rust-lang/rust/commit/7947bb1732f513906acef459a6e8c839481f135b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7947bb1732f513906acef459a6e8c839481f135b/comments", "author": {"login": "Dretch", "id": 1428731, "node_id": "MDQ6VXNlcjE0Mjg3MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1428731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dretch", "html_url": "https://github.com/Dretch", "followers_url": "https://api.github.com/users/Dretch/followers", "following_url": "https://api.github.com/users/Dretch/following{/other_user}", "gists_url": "https://api.github.com/users/Dretch/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dretch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dretch/subscriptions", "organizations_url": "https://api.github.com/users/Dretch/orgs", "repos_url": "https://api.github.com/users/Dretch/repos", "events_url": "https://api.github.com/users/Dretch/events{/privacy}", "received_events_url": "https://api.github.com/users/Dretch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Dretch", "id": 1428731, "node_id": "MDQ6VXNlcjE0Mjg3MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1428731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dretch", "html_url": "https://github.com/Dretch", "followers_url": "https://api.github.com/users/Dretch/followers", "following_url": "https://api.github.com/users/Dretch/following{/other_user}", "gists_url": "https://api.github.com/users/Dretch/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dretch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dretch/subscriptions", "organizations_url": "https://api.github.com/users/Dretch/orgs", "repos_url": "https://api.github.com/users/Dretch/repos", "events_url": "https://api.github.com/users/Dretch/events{/privacy}", "received_events_url": "https://api.github.com/users/Dretch/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5585514c02b1f7c7df2503e3e75814994ccdb8b7", "url": "https://api.github.com/repos/rust-lang/rust/commits/5585514c02b1f7c7df2503e3e75814994ccdb8b7", "html_url": "https://github.com/rust-lang/rust/commit/5585514c02b1f7c7df2503e3e75814994ccdb8b7"}], "stats": {"total": 42, "additions": 16, "deletions": 26}, "files": [{"sha": "2b16112fe16c75751485b66777ae93c3011c3995", "filename": "src/rustdoc/attr_parser.rs", "status": "modified", "additions": 16, "deletions": 26, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/7947bb1732f513906acef459a6e8c839481f135b/src%2Frustdoc%2Fattr_parser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7947bb1732f513906acef459a6e8c839481f135b/src%2Frustdoc%2Fattr_parser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fattr_parser.rs?ref=7947bb1732f513906acef459a6e8c839481f135b", "patch": "@@ -36,27 +36,6 @@ mod test {\n     }\n }\n \n-fn doc_meta(\n-    attrs: ~[ast::attribute]\n-) -> Option<@ast::meta_item> {\n-\n-    /*!\n-     * Given a vec of attributes, extract the meta_items contained in the \\\n-     * doc attribute\n-     */\n-\n-    let doc_metas = doc_metas(attrs);\n-    if vec::is_not_empty(doc_metas) {\n-        if vec::len(doc_metas) != 1u {\n-            warn!(\"ignoring %u doc attributes\", vec::len(doc_metas) - 1u);\n-        }\n-        Some(doc_metas[0])\n-    } else {\n-        None\n-    }\n-\n-}\n-\n fn doc_metas(\n     attrs: ~[ast::attribute]\n ) -> ~[@ast::meta_item] {\n@@ -102,11 +81,13 @@ fn should_not_extract_crate_name_if_no_name_value_in_link_attribute() {\n }\n \n fn parse_desc(attrs: ~[ast::attribute]) -> Option<~str> {\n-    match doc_meta(attrs) {\n-      Some(meta) => {\n-        attr::get_meta_item_value_str(meta)\n-      }\n-      None => None\n+    let doc_strs = do doc_metas(attrs).filter_map |meta| {\n+        attr::get_meta_item_value_str(*meta)\n+    };\n+    if doc_strs.is_empty() {\n+        None\n+    } else {\n+        Some(str::connect(doc_strs, \"\\n\"))\n     }\n }\n \n@@ -158,3 +139,12 @@ fn should_not_parse_non_hidden_attribute() {\n     let attrs = test::parse_attributes(source);\n     assert parse_hidden(attrs) == false;\n }\n+\n+#[test]\n+fn should_concatenate_multiple_doc_comments() {\n+    let source = ~\"/// foo\\n/// bar\";\n+    let desc = parse_desc(test::parse_attributes(source));\n+    assert desc == Some(~\"foo\\nbar\");\n+}\n+\n+"}]}