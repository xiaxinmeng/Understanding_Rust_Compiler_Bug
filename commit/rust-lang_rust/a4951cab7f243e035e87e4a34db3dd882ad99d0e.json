{"sha": "a4951cab7f243e035e87e4a34db3dd882ad99d0e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE0OTUxY2FiN2YyNDNlMDM1ZTg3ZTRhMzRkYjNkZDg4MmFkOTlkMGU=", "commit": {"author": {"name": "Rob Arnold", "email": "robarnold@cs.cmu.edu", "date": "2011-08-04T04:46:24Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-08-05T18:57:06Z"}, "message": "Add libuv Makefile", "tree": {"sha": "23841f1aa4298557ecba530714f5badbad69aae0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/23841f1aa4298557ecba530714f5badbad69aae0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a4951cab7f243e035e87e4a34db3dd882ad99d0e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a4951cab7f243e035e87e4a34db3dd882ad99d0e", "html_url": "https://github.com/rust-lang/rust/commit/a4951cab7f243e035e87e4a34db3dd882ad99d0e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a4951cab7f243e035e87e4a34db3dd882ad99d0e/comments", "author": {"login": "robarnold", "id": 326113, "node_id": "MDQ6VXNlcjMyNjExMw==", "avatar_url": "https://avatars.githubusercontent.com/u/326113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robarnold", "html_url": "https://github.com/robarnold", "followers_url": "https://api.github.com/users/robarnold/followers", "following_url": "https://api.github.com/users/robarnold/following{/other_user}", "gists_url": "https://api.github.com/users/robarnold/gists{/gist_id}", "starred_url": "https://api.github.com/users/robarnold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robarnold/subscriptions", "organizations_url": "https://api.github.com/users/robarnold/orgs", "repos_url": "https://api.github.com/users/robarnold/repos", "events_url": "https://api.github.com/users/robarnold/events{/privacy}", "received_events_url": "https://api.github.com/users/robarnold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8229c3fa752c7fca3760245da4e23ba67acdee33", "url": "https://api.github.com/repos/rust-lang/rust/commits/8229c3fa752c7fca3760245da4e23ba67acdee33", "html_url": "https://github.com/rust-lang/rust/commit/8229c3fa752c7fca3760245da4e23ba67acdee33"}], "stats": {"total": 113, "additions": 113, "deletions": 0}, "files": [{"sha": "0b4f38bb86fafb090e3853a69b7a8bd2db6be51f", "filename": "src/rt/libuv/Makefile", "status": "added", "additions": 113, "deletions": 0, "changes": 113, "blob_url": "https://github.com/rust-lang/rust/blob/a4951cab7f243e035e87e4a34db3dd882ad99d0e/src%2Frt%2Flibuv%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/a4951cab7f243e035e87e4a34db3dd882ad99d0e/src%2Frt%2Flibuv%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Flibuv%2FMakefile?ref=a4951cab7f243e035e87e4a34db3dd882ad99d0e", "patch": "@@ -0,0 +1,113 @@\n+# Copyright Joyent, Inc. and other Node contributors. All rights reserved.\n+#\n+# Permission is hereby granted, free of charge, to any person obtaining a copy\n+# of this software and associated documentation files (the \"Software\"), to\n+# deal in the Software without restriction, including without limitation the\n+# rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n+# sell copies of the Software, and to permit persons to whom the Software is\n+# furnished to do so, subject to the following conditions:\n+#\n+# The above copyright notice and this permission notice shall be included in\n+# all copies or substantial portions of the Software.\n+#\n+# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n+# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n+# IN THE SOFTWARE.\n+\n+uname_S := $(shell sh -c 'uname -s 2>/dev/null || echo not')\n+\n+ifdef MSVC\n+uname_S := MINGW\n+endif\n+\n+CPPFLAGS += -Iinclude\n+\n+CARES_OBJS =\n+CARES_OBJS += src/ares/ares__close_sockets.o\n+CARES_OBJS += src/ares/ares__get_hostent.o\n+CARES_OBJS += src/ares/ares__read_line.o\n+CARES_OBJS += src/ares/ares__timeval.o\n+CARES_OBJS += src/ares/ares_cancel.o\n+CARES_OBJS += src/ares/ares_data.o\n+CARES_OBJS += src/ares/ares_destroy.o\n+CARES_OBJS += src/ares/ares_expand_name.o\n+CARES_OBJS += src/ares/ares_expand_string.o\n+CARES_OBJS += src/ares/ares_fds.o\n+CARES_OBJS += src/ares/ares_free_hostent.o\n+CARES_OBJS += src/ares/ares_free_string.o\n+CARES_OBJS += src/ares/ares_gethostbyaddr.o\n+CARES_OBJS += src/ares/ares_gethostbyname.o\n+CARES_OBJS += src/ares/ares_getnameinfo.o\n+CARES_OBJS += src/ares/ares_getopt.o\n+CARES_OBJS += src/ares/ares_getsock.o\n+CARES_OBJS += src/ares/ares_init.o\n+CARES_OBJS += src/ares/ares_library_init.o\n+CARES_OBJS += src/ares/ares_llist.o\n+CARES_OBJS += src/ares/ares_mkquery.o\n+CARES_OBJS += src/ares/ares_nowarn.o\n+CARES_OBJS += src/ares/ares_options.o\n+CARES_OBJS += src/ares/ares_parse_a_reply.o\n+CARES_OBJS += src/ares/ares_parse_aaaa_reply.o\n+CARES_OBJS += src/ares/ares_parse_mx_reply.o\n+CARES_OBJS += src/ares/ares_parse_ns_reply.o\n+CARES_OBJS += src/ares/ares_parse_ptr_reply.o\n+CARES_OBJS += src/ares/ares_parse_srv_reply.o\n+CARES_OBJS += src/ares/ares_parse_txt_reply.o\n+CARES_OBJS += src/ares/ares_process.o\n+CARES_OBJS += src/ares/ares_query.o\n+CARES_OBJS += src/ares/ares_search.o\n+CARES_OBJS += src/ares/ares_send.o\n+CARES_OBJS += src/ares/ares_strcasecmp.o\n+CARES_OBJS += src/ares/ares_strdup.o\n+CARES_OBJS += src/ares/ares_strerror.o\n+CARES_OBJS += src/ares/ares_timeout.o\n+CARES_OBJS += src/ares/ares_version.o\n+CARES_OBJS += src/ares/ares_writev.o\n+CARES_OBJS += src/ares/bitncmp.o\n+CARES_OBJS += src/ares/inet_net_pton.o\n+CARES_OBJS += src/ares/inet_ntop.o\n+\n+ifneq (,$(findstring MINGW,$(uname_S)))\n+include config-mingw.mk\n+else\n+include config-unix.mk\n+endif\n+\n+TESTS=test/echo-server.c test/test-*.c\n+BENCHMARKS=test/echo-server.c test/dns-server.c test/benchmark-*.c\n+\n+all: uv.a test/run-tests test/run-benchmarks\n+\n+$(CARES_OBJS): %.o: %.c\n+\t$(CC) -o $*.o -c $(CFLAGS) $(CPPFLAGS) $< -DHAVE_CONFIG_H\n+\n+test/run-tests$(E): test/*.h test/run-tests.c $(RUNNER_SRC) test/runner-unix.c $(TESTS) uv.a\n+\t$(CC) $(CPPFLAGS) $(RUNNER_CFLAGS) $(RUNNER_LINKFLAGS) -o test/run-tests test/run-tests.c \\\n+\t\ttest/runner.c $(RUNNER_SRC) $(TESTS) uv.a $(RUNNER_LIBS)\n+\n+test/run-benchmarks$(E): test/*.h test/run-benchmarks.c test/runner.c $(RUNNER_SRC) $(BENCHMARKS) uv.a\n+\t$(CC) $(CPPFLAGS) $(RUNNER_CFLAGS) $(RUNNER_LINKFLAGS) -o test/run-benchmarks test/run-benchmarks.c \\\n+\t\t test/runner.c $(RUNNER_SRC) $(BENCHMARKS) uv.a $(RUNNER_LIBS)\n+\n+test/echo.o: test/echo.c test/echo.h\n+\t$(CC) $(CPPFLAGS) $(CFLAGS) -c test/echo.c -o test/echo.o\n+\n+\n+.PHONY: clean clean-platform distclean distclean-platform test benchmark\n+\n+\n+test: test/run-tests$(E)\n+\ttest/run-tests\n+\n+bench: test/run-benchmarks$(E)\n+\ttest/run-benchmarks\n+\n+clean: clean-platform\n+\t$(RM) -f src/*.o *.a test/run-tests$(E) test/run-benchmarks$(E)\n+\n+distclean: distclean-platform\n+\t$(RM) -f src/*.o *.a test/run-tests$(E) test/run-benchmarks$(E)"}]}