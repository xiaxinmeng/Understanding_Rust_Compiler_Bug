{"sha": "06f480661f66e35869521ccd60278107233f9670", "node_id": "C_kwDOAAsO6NoAKDA2ZjQ4MDY2MWY2NmUzNTg2OTUyMWNjZDYwMjc4MTA3MjMzZjk2NzA", "commit": {"author": {"name": "David Wood", "email": "david.wood@huawei.com", "date": "2022-07-11T15:28:38Z"}, "committer": {"name": "David Wood", "email": "david.wood@huawei.com", "date": "2022-07-15T15:12:46Z"}, "message": "errors: impl `IntoDiagnosticArg` for `char`\n\nImplements `IntoDiagnosticArg` for `char` using its `Debug`\nimplementation and introduces a macro for those types which just\ndelegate the implementation to `ToString`.\n\nSigned-off-by: David Wood <david.wood@huawei.com>", "tree": {"sha": "78a403599c51337b4c8adf0fbab75d549bac5594", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/78a403599c51337b4c8adf0fbab75d549bac5594"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/06f480661f66e35869521ccd60278107233f9670", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/06f480661f66e35869521ccd60278107233f9670", "html_url": "https://github.com/rust-lang/rust/commit/06f480661f66e35869521ccd60278107233f9670", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/06f480661f66e35869521ccd60278107233f9670/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "116819f54f062a2f425deac4ec29245038c26613", "url": "https://api.github.com/repos/rust-lang/rust/commits/116819f54f062a2f425deac4ec29245038c26613", "html_url": "https://github.com/rust-lang/rust/commit/116819f54f062a2f425deac4ec29245038c26613"}], "stats": {"total": 110, "additions": 33, "deletions": 77}, "files": [{"sha": "0ce7f3c7e8270a8ed143f48e408791dd9785579a", "filename": "compiler/rustc_errors/src/diagnostic.rs", "status": "modified", "additions": 33, "deletions": 77, "changes": 110, "blob_url": "https://github.com/rust-lang/rust/blob/06f480661f66e35869521ccd60278107233f9670/compiler%2Frustc_errors%2Fsrc%2Fdiagnostic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/06f480661f66e35869521ccd60278107233f9670/compiler%2Frustc_errors%2Fsrc%2Fdiagnostic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_errors%2Fsrc%2Fdiagnostic.rs?ref=06f480661f66e35869521ccd60278107233f9670", "patch": "@@ -40,6 +40,34 @@ pub trait IntoDiagnosticArg {\n     fn into_diagnostic_arg(self) -> DiagnosticArgValue<'static>;\n }\n \n+macro_rules! into_diagnostic_arg_using_display {\n+    ($( $ty:ty ),+ $(,)?) => {\n+        $(\n+            impl IntoDiagnosticArg for $ty {\n+                fn into_diagnostic_arg(self) -> DiagnosticArgValue<'static> {\n+                    self.to_string().into_diagnostic_arg()\n+                }\n+            }\n+        )+\n+    }\n+}\n+\n+into_diagnostic_arg_using_display!(\n+    i8,\n+    u8,\n+    i16,\n+    u16,\n+    i32,\n+    u32,\n+    i64,\n+    u64,\n+    i128,\n+    u128,\n+    std::num::NonZeroU32,\n+    Edition,\n+    Ident,\n+);\n+\n impl IntoDiagnosticArg for bool {\n     fn into_diagnostic_arg(self) -> DiagnosticArgValue<'static> {\n         if self {\n@@ -50,81 +78,9 @@ impl IntoDiagnosticArg for bool {\n     }\n }\n \n-impl IntoDiagnosticArg for i8 {\n-    fn into_diagnostic_arg(self) -> DiagnosticArgValue<'static> {\n-        DiagnosticArgValue::Str(Cow::Owned(self.to_string()))\n-    }\n-}\n-\n-impl IntoDiagnosticArg for u8 {\n+impl IntoDiagnosticArg for char {\n     fn into_diagnostic_arg(self) -> DiagnosticArgValue<'static> {\n-        DiagnosticArgValue::Str(Cow::Owned(self.to_string()))\n-    }\n-}\n-\n-impl IntoDiagnosticArg for i16 {\n-    fn into_diagnostic_arg(self) -> DiagnosticArgValue<'static> {\n-        DiagnosticArgValue::Str(Cow::Owned(self.to_string()))\n-    }\n-}\n-\n-impl IntoDiagnosticArg for u16 {\n-    fn into_diagnostic_arg(self) -> DiagnosticArgValue<'static> {\n-        DiagnosticArgValue::Str(Cow::Owned(self.to_string()))\n-    }\n-}\n-\n-impl IntoDiagnosticArg for i32 {\n-    fn into_diagnostic_arg(self) -> DiagnosticArgValue<'static> {\n-        DiagnosticArgValue::Str(Cow::Owned(self.to_string()))\n-    }\n-}\n-\n-impl IntoDiagnosticArg for u32 {\n-    fn into_diagnostic_arg(self) -> DiagnosticArgValue<'static> {\n-        DiagnosticArgValue::Str(Cow::Owned(self.to_string()))\n-    }\n-}\n-\n-impl IntoDiagnosticArg for i64 {\n-    fn into_diagnostic_arg(self) -> DiagnosticArgValue<'static> {\n-        DiagnosticArgValue::Str(Cow::Owned(self.to_string()))\n-    }\n-}\n-\n-impl IntoDiagnosticArg for u64 {\n-    fn into_diagnostic_arg(self) -> DiagnosticArgValue<'static> {\n-        DiagnosticArgValue::Str(Cow::Owned(self.to_string()))\n-    }\n-}\n-\n-impl IntoDiagnosticArg for i128 {\n-    fn into_diagnostic_arg(self) -> DiagnosticArgValue<'static> {\n-        DiagnosticArgValue::Str(Cow::Owned(self.to_string()))\n-    }\n-}\n-\n-impl IntoDiagnosticArg for u128 {\n-    fn into_diagnostic_arg(self) -> DiagnosticArgValue<'static> {\n-        DiagnosticArgValue::Str(Cow::Owned(self.to_string()))\n-    }\n-}\n-\n-impl IntoDiagnosticArg for String {\n-    fn into_diagnostic_arg(self) -> DiagnosticArgValue<'static> {\n-        DiagnosticArgValue::Str(Cow::Owned(self))\n-    }\n-}\n-\n-impl IntoDiagnosticArg for std::num::NonZeroU32 {\n-    fn into_diagnostic_arg(self) -> DiagnosticArgValue<'static> {\n-        DiagnosticArgValue::Str(Cow::Owned(self.to_string()))\n-    }\n-}\n-\n-impl IntoDiagnosticArg for Edition {\n-    fn into_diagnostic_arg(self) -> DiagnosticArgValue<'static> {\n-        DiagnosticArgValue::Str(Cow::Owned(self.to_string()))\n+        DiagnosticArgValue::Str(Cow::Owned(format!(\"{:?}\", self)))\n     }\n }\n \n@@ -134,15 +90,15 @@ impl IntoDiagnosticArg for Symbol {\n     }\n }\n \n-impl IntoDiagnosticArg for Ident {\n+impl<'a> IntoDiagnosticArg for &'a str {\n     fn into_diagnostic_arg(self) -> DiagnosticArgValue<'static> {\n         self.to_string().into_diagnostic_arg()\n     }\n }\n \n-impl<'a> IntoDiagnosticArg for &'a str {\n+impl IntoDiagnosticArg for String {\n     fn into_diagnostic_arg(self) -> DiagnosticArgValue<'static> {\n-        self.to_string().into_diagnostic_arg()\n+        DiagnosticArgValue::Str(Cow::Owned(self))\n     }\n }\n "}]}