{"sha": "efc4c6c957ea2b0d870f4728fa934042213da5e8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVmYzRjNmM5NTdlYTJiMGQ4NzBmNDcyOGZhOTM0MDQyMjEzZGE1ZTg=", "commit": {"author": {"name": "Andre Bogus", "email": "bogusandre@gmail.com", "date": "2021-04-25T16:10:38Z"}, "committer": {"name": "Andre Bogus", "email": "bogusandre@gmail.com", "date": "2021-04-26T13:58:58Z"}, "message": "extend `single_element_loop` to match `.iter()`", "tree": {"sha": "1024af157b56ed0fe152671dc759fb00d25fafc2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1024af157b56ed0fe152671dc759fb00d25fafc2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/efc4c6c957ea2b0d870f4728fa934042213da5e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/efc4c6c957ea2b0d870f4728fa934042213da5e8", "html_url": "https://github.com/rust-lang/rust/commit/efc4c6c957ea2b0d870f4728fa934042213da5e8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/efc4c6c957ea2b0d870f4728fa934042213da5e8/comments", "author": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "committer": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "08e36d7527c6f65b8f537c4644c762efe09880c5", "url": "https://api.github.com/repos/rust-lang/rust/commits/08e36d7527c6f65b8f537c4644c762efe09880c5", "html_url": "https://github.com/rust-lang/rust/commit/08e36d7527c6f65b8f537c4644c762efe09880c5"}], "stats": {"total": 35, "additions": 33, "deletions": 2}, "files": [{"sha": "0fd09ff7197ae7e03e42966a528bb596b1b0233e", "filename": "clippy_lints/src/loops/single_element_loop.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/efc4c6c957ea2b0d870f4728fa934042213da5e8/clippy_lints%2Fsrc%2Floops%2Fsingle_element_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/efc4c6c957ea2b0d870f4728fa934042213da5e8/clippy_lints%2Fsrc%2Floops%2Fsingle_element_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops%2Fsingle_element_loop.rs?ref=efc4c6c957ea2b0d870f4728fa934042213da5e8", "patch": "@@ -14,8 +14,14 @@ pub(super) fn check<'tcx>(\n     body: &'tcx Expr<'_>,\n     expr: &'tcx Expr<'_>,\n ) {\n+    let arg_expr = match arg.kind {\n+        ExprKind::AddrOf(BorrowKind::Ref, _, ref_arg) => ref_arg,\n+        ExprKind::MethodCall(method, _, args, _) if args.len() == 1 && method.ident.name == rustc_span::sym::iter => {\n+            &args[0]\n+        },\n+        _ => return,\n+    };\n     if_chain! {\n-        if let ExprKind::AddrOf(BorrowKind::Ref, _, arg_expr) = arg.kind;\n         if let PatKind::Binding(.., target, _) = pat.kind;\n         if let ExprKind::Array([arg_expression]) = arg_expr.kind;\n         if let ExprKind::Path(ref list_item) = arg_expression.kind;"}, {"sha": "c307afffcb86325b7dac857ef288042e1a5bdce9", "filename": "tests/ui/single_element_loop.fixed", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/efc4c6c957ea2b0d870f4728fa934042213da5e8/tests%2Fui%2Fsingle_element_loop.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/efc4c6c957ea2b0d870f4728fa934042213da5e8/tests%2Fui%2Fsingle_element_loop.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsingle_element_loop.fixed?ref=efc4c6c957ea2b0d870f4728fa934042213da5e8", "patch": "@@ -8,4 +8,9 @@ fn main() {\n         let item = &item1;\n         println!(\"{}\", item);\n     }\n+\n+    {\n+        let item = &item1;\n+        println!(\"{:?}\", item);\n+    }\n }"}, {"sha": "2c0c03b7211993ee22d5c5022818eec6842cb283", "filename": "tests/ui/single_element_loop.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/efc4c6c957ea2b0d870f4728fa934042213da5e8/tests%2Fui%2Fsingle_element_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/efc4c6c957ea2b0d870f4728fa934042213da5e8/tests%2Fui%2Fsingle_element_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsingle_element_loop.rs?ref=efc4c6c957ea2b0d870f4728fa934042213da5e8", "patch": "@@ -7,4 +7,8 @@ fn main() {\n     for item in &[item1] {\n         println!(\"{}\", item);\n     }\n+\n+    for item in [item1].iter() {\n+        println!(\"{:?}\", item);\n+    }\n }"}, {"sha": "0e35a33ded5ba0fc34a7aeaf46623630b74aaaa9", "filename": "tests/ui/single_element_loop.stderr", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/efc4c6c957ea2b0d870f4728fa934042213da5e8/tests%2Fui%2Fsingle_element_loop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/efc4c6c957ea2b0d870f4728fa934042213da5e8/tests%2Fui%2Fsingle_element_loop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsingle_element_loop.stderr?ref=efc4c6c957ea2b0d870f4728fa934042213da5e8", "patch": "@@ -15,5 +15,21 @@ LL |         println!(\"{}\", item);\n LL |     }\n    |\n \n-error: aborting due to previous error\n+error: for loop over a single element\n+  --> $DIR/single_element_loop.rs:11:5\n+   |\n+LL | /     for item in [item1].iter() {\n+LL | |         println!(\"{:?}\", item);\n+LL | |     }\n+   | |_____^\n+   |\n+help: try\n+   |\n+LL |     {\n+LL |         let item = &item1;\n+LL |         println!(\"{:?}\", item);\n+LL |     }\n+   |\n+\n+error: aborting due to 2 previous errors\n "}]}