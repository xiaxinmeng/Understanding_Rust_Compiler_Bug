{"sha": "8f60db8da8f7f159dbe93ce481a4608633c4c1bf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhmNjBkYjhkYThmN2YxNTlkYmU5M2NlNDgxYTQ2MDg2MzNjNGMxYmY=", "commit": {"author": {"name": "Amanieu d'Antras", "email": "amanieu@gmail.com", "date": "2020-01-12T16:59:44Z"}, "committer": {"name": "Amanieu d'Antras", "email": "amanieu@gmail.com", "date": "2020-01-12T16:59:44Z"}, "message": "Don't include __rust_drop_panic when testing libstd", "tree": {"sha": "d34bccebb849fc257848153cca191d5445779011", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d34bccebb849fc257848153cca191d5445779011"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8f60db8da8f7f159dbe93ce481a4608633c4c1bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8f60db8da8f7f159dbe93ce481a4608633c4c1bf", "html_url": "https://github.com/rust-lang/rust/commit/8f60db8da8f7f159dbe93ce481a4608633c4c1bf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8f60db8da8f7f159dbe93ce481a4608633c4c1bf/comments", "author": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3a025760be8f4c56f0777fa34ba64a4f7bada8e7", "url": "https://api.github.com/repos/rust-lang/rust/commits/3a025760be8f4c56f0777fa34ba64a4f7bada8e7", "html_url": "https://github.com/rust-lang/rust/commit/3a025760be8f4c56f0777fa34ba64a4f7bada8e7"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "bfadeafb7c7737d0b583bb51aaa912842674e196", "filename": "src/libstd/panicking.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8f60db8da8f7f159dbe93ce481a4608633c4c1bf/src%2Flibstd%2Fpanicking.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f60db8da8f7f159dbe93ce481a4608633c4c1bf/src%2Flibstd%2Fpanicking.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fpanicking.rs?ref=8f60db8da8f7f159dbe93ce481a4608633c4c1bf", "patch": "@@ -58,6 +58,7 @@ extern \"C\" {\n /// This function is called by the panic runtime if FFI code catches a Rust\n /// panic but doesn't rethrow it. We don't support this case since it messes\n /// with our panic count.\n+#[cfg(not(test))]\n #[rustc_std_internal_symbol]\n extern \"C\" fn __rust_drop_panic() -> ! {\n     rtabort!(\"Rust panics must be rethrown\");"}]}