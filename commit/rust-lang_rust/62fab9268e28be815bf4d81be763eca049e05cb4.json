{"sha": "62fab9268e28be815bf4d81be763eca049e05cb4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYyZmFiOTI2OGUyOGJlODE1YmY0ZDgxYmU3NjNlY2EwNDllMDVjYjQ=", "commit": {"author": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-03-27T05:57:14Z"}, "committer": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-03-27T05:57:14Z"}, "message": "Fix bug where &str's lengths were not copied.", "tree": {"sha": "30f339a6c6c4530c35274db1973021e02843aba6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/30f339a6c6c4530c35274db1973021e02843aba6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/62fab9268e28be815bf4d81be763eca049e05cb4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/62fab9268e28be815bf4d81be763eca049e05cb4", "html_url": "https://github.com/rust-lang/rust/commit/62fab9268e28be815bf4d81be763eca049e05cb4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/62fab9268e28be815bf4d81be763eca049e05cb4/comments", "author": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "acf2ceb534e1f72f088110bf3a348a34ce040ac1", "url": "https://api.github.com/repos/rust-lang/rust/commits/acf2ceb534e1f72f088110bf3a348a34ce040ac1", "html_url": "https://github.com/rust-lang/rust/commit/acf2ceb534e1f72f088110bf3a348a34ce040ac1"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "fcdf2e8f4646d260e8f1502eb5dea15fef7e2f12", "filename": "src/interpreter.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/62fab9268e28be815bf4d81be763eca049e05cb4/src%2Finterpreter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62fab9268e28be815bf4d81be763eca049e05cb4/src%2Finterpreter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Finterpreter.rs?ref=62fab9268e28be815bf4d81be763eca049e05cb4", "patch": "@@ -708,7 +708,7 @@ impl<'a, 'tcx: 'a, 'arena> Interpreter<'a, 'tcx, 'arena> {\n                         let pointee_ty = pointee_type(base_ty).expect(\"Deref of non-pointer\");\n                         let ptr = try!(self.memory.read_ptr(base_ptr));\n                         let extra = match pointee_ty.sty {\n-                            ty::TySlice(_) => {\n+                            ty::TySlice(_) | ty::TyStr => {\n                                 let len_ptr = base_ptr.offset(self.memory.pointer_size as isize);\n                                 let len = try!(self.memory.read_usize(len_ptr));\n                                 LvalueExtra::Length(len)"}]}