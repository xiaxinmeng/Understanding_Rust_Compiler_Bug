{"sha": "626bdaaa1f44de7f398c818eaad29dedfb6e20ab", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYyNmJkYWFhMWY0NGRlN2YzOThjODE4ZWFhZDI5ZGVkZmI2ZTIwYWI=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-03-30T00:25:55Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-03-30T00:25:55Z"}, "message": "rustc: Parse parameter IDs in external crate metadata. Un-XFAIL lib-bitv.rs.", "tree": {"sha": "68dfbaa244e717d23b52300ea80ad5b8aeddeec2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/68dfbaa244e717d23b52300ea80ad5b8aeddeec2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/626bdaaa1f44de7f398c818eaad29dedfb6e20ab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/626bdaaa1f44de7f398c818eaad29dedfb6e20ab", "html_url": "https://github.com/rust-lang/rust/commit/626bdaaa1f44de7f398c818eaad29dedfb6e20ab", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/626bdaaa1f44de7f398c818eaad29dedfb6e20ab/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c67eb1a575dc09850c3b59ed15252db9cb451c11", "url": "https://api.github.com/repos/rust-lang/rust/commits/c67eb1a575dc09850c3b59ed15252db9cb451c11", "html_url": "https://github.com/rust-lang/rust/commit/c67eb1a575dc09850c3b59ed15252db9cb451c11"}], "stats": {"total": 21, "additions": 13, "deletions": 8}, "files": [{"sha": "f79d6160a4a3087230c7b8bd750a6b1ae294391d", "filename": "src/comp/front/creader.rs", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/626bdaaa1f44de7f398c818eaad29dedfb6e20ab/src%2Fcomp%2Ffront%2Fcreader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/626bdaaa1f44de7f398c818eaad29dedfb6e20ab/src%2Fcomp%2Ffront%2Fcreader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Ffront%2Fcreader.rs?ref=626bdaaa1f44de7f398c818eaad29dedfb6e20ab", "patch": "@@ -84,6 +84,15 @@ impure fn parse_mt(@pstate st, str_def sd) -> ty.mt {\n     ret rec(ty=parse_ty(st, sd), mut=mut);\n }\n \n+impure fn parse_def(@pstate st, str_def sd) -> ast.def_id {\n+    auto def = \"\";\n+    while (peek(st) as char != '|') {\n+        def += _str.unsafe_from_byte(next(st));\n+    }\n+    st.pos = st.pos + 1u;\n+    ret sd(def);\n+}\n+\n impure fn parse_sty(@pstate st, str_def sd) -> ty.sty {\n     alt (next(st) as char) {\n         case ('n') {ret ty.ty_nil;}\n@@ -109,18 +118,15 @@ impure fn parse_sty(@pstate st, str_def sd) -> ty.sty {\n         case ('s') {ret ty.ty_str;}\n         case ('t') {\n             check(next(st) as char == '[');\n-            auto def = \"\";\n-            while (peek(st) as char != '|') {\n-                def += _str.unsafe_from_byte(next(st));\n-            }\n-            st.pos = st.pos + 1u;\n+            auto def = parse_def(st, sd);\n             let vec[@ty.t] params = vec();\n             while (peek(st) as char != ']') {\n                 params += vec(parse_ty(st, sd));\n             }\n             st.pos = st.pos + 1u;\n-            ret ty.ty_tag(sd(def), params);\n+            ret ty.ty_tag(def, params);\n         }\n+        case ('p') {ret ty.ty_param(parse_def(st, sd));}\n         case ('@') {ret ty.ty_box(parse_mt(st, sd));}\n         case ('V') {ret ty.ty_vec(parse_mt(st, sd));}\n         case ('P') {ret ty.ty_port(parse_ty(st, sd));}"}, {"sha": "588a7d1c119d23c515e614299a0bc341082fcd89", "filename": "src/comp/middle/metadata.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/626bdaaa1f44de7f398c818eaad29dedfb6e20ab/src%2Fcomp%2Fmiddle%2Fmetadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/626bdaaa1f44de7f398c818eaad29dedfb6e20ab/src%2Fcomp%2Fmiddle%2Fmetadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fmetadata.rs?ref=626bdaaa1f44de7f398c818eaad29dedfb6e20ab", "patch": "@@ -123,7 +123,7 @@ fn sty_str(ty.sty st, def_str ds) -> str {\n         }\n         case (ty.ty_var(?id)) {ret \"X\" + common.istr(id);}\n         case (ty.ty_native) {ret \"E\";}\n-        case (ty.ty_param(?def)) {ret \"p\" + ds(def);}\n+        case (ty.ty_param(?def)) {ret \"p\" + ds(def) + \"|\";}\n         case (ty.ty_type) {ret \"Y\";}\n     }\n }"}, {"sha": "c3ffa8ea0ca64193deb27a0211ddad6052821690", "filename": "src/test/run-pass/lib-bitv.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/626bdaaa1f44de7f398c818eaad29dedfb6e20ab/src%2Ftest%2Frun-pass%2Flib-bitv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/626bdaaa1f44de7f398c818eaad29dedfb6e20ab/src%2Ftest%2Frun-pass%2Flib-bitv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flib-bitv.rs?ref=626bdaaa1f44de7f398c818eaad29dedfb6e20ab", "patch": "@@ -1,4 +1,3 @@\n-// xfail-stage0\n use std;\n import std._vec;\n import std.bitv;"}]}