{"sha": "70177a08a47eb6e3a84cee4d92c0eb4ccbd125c4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcwMTc3YTA4YTQ3ZWI2ZTNhODRjZWU0ZDkyYzBlYjRjY2JkMTI1YzQ=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2018-10-08T04:49:24Z"}, "committer": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2018-10-08T04:52:26Z"}, "message": "Format a macro call with multile item-like arguments", "tree": {"sha": "8c3fd7045f990bf4fae0ab3345b3629c263bf80a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8c3fd7045f990bf4fae0ab3345b3629c263bf80a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/70177a08a47eb6e3a84cee4d92c0eb4ccbd125c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/70177a08a47eb6e3a84cee4d92c0eb4ccbd125c4", "html_url": "https://github.com/rust-lang/rust/commit/70177a08a47eb6e3a84cee4d92c0eb4ccbd125c4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/70177a08a47eb6e3a84cee4d92c0eb4ccbd125c4/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "baa20dfcf1c1210c3b2fe2612f5111669e81d206", "url": "https://api.github.com/repos/rust-lang/rust/commits/baa20dfcf1c1210c3b2fe2612f5111669e81d206", "html_url": "https://github.com/rust-lang/rust/commit/baa20dfcf1c1210c3b2fe2612f5111669e81d206"}], "stats": {"total": 18, "additions": 11, "deletions": 7}, "files": [{"sha": "dab27d8a073bf08930fd0bbc6cb37a5290a03306", "filename": "src/macros.rs", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/70177a08a47eb6e3a84cee4d92c0eb4ccbd125c4/src%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70177a08a47eb6e3a84cee4d92c0eb4ccbd125c4/src%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmacros.rs?ref=70177a08a47eb6e3a84cee4d92c0eb4ccbd125c4", "patch": "@@ -64,6 +64,15 @@ pub enum MacroArg {\n     Item(ptr::P<ast::Item>),\n }\n \n+impl MacroArg {\n+    fn is_item(&self) -> bool {\n+        match self {\n+            MacroArg::Item(..) => true,\n+            _ => false,\n+        }\n+    }\n+}\n+\n impl Rewrite for ast::Item {\n     fn rewrite(&self, context: &RewriteContext, shape: Shape) -> Option<String> {\n         let mut visitor = ::visitor::FmtVisitor::from_context(context);\n@@ -260,6 +269,7 @@ pub fn rewrite_macro_inner(\n                     }\n                     return return_original_snippet_with_failure_marked(context, mac.span);\n                 }\n+                _ if arg_vec.last().map_or(false, MacroArg::is_item) => continue,\n                 _ => return return_original_snippet_with_failure_marked(context, mac.span),\n             }\n \n@@ -272,13 +282,7 @@ pub fn rewrite_macro_inner(\n         }\n     }\n \n-    if !arg_vec.is_empty() && arg_vec.iter().all(|arg| {\n-        if let MacroArg::Item(..) = arg {\n-            true\n-        } else {\n-            false\n-        }\n-    }) {\n+    if !arg_vec.is_empty() && arg_vec.iter().all(MacroArg::is_item) {\n         return rewrite_macro_with_items(\n             context,\n             &arg_vec,"}]}