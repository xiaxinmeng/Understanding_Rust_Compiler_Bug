{"sha": "31e482403c7778b160e0953b558fb53fbf5d0986", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMxZTQ4MjQwM2M3Nzc4YjE2MGUwOTUzYjU1OGZiNTNmYmY1ZDA5ODY=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-no-reply-9879165716479413131@oli-obk.de", "date": "2016-11-25T18:24:55Z"}, "committer": {"name": "Oliver Schneider", "email": "git-no-reply-9879165716479413131@oli-obk.de", "date": "2016-11-25T18:24:55Z"}, "message": "rustup to rustc 1.15.0-nightly (d5814b03e 2016-11-23)", "tree": {"sha": "af174e01bf4ef650eb93b20d8714f2efdb7c8c9b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/af174e01bf4ef650eb93b20d8714f2efdb7c8c9b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/31e482403c7778b160e0953b558fb53fbf5d0986", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/31e482403c7778b160e0953b558fb53fbf5d0986", "html_url": "https://github.com/rust-lang/rust/commit/31e482403c7778b160e0953b558fb53fbf5d0986", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/31e482403c7778b160e0953b558fb53fbf5d0986/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "11ca07c8ad5074b43d079adee37c8e0582bcad5d", "url": "https://api.github.com/repos/rust-lang/rust/commits/11ca07c8ad5074b43d079adee37c8e0582bcad5d", "html_url": "https://github.com/rust-lang/rust/commit/11ca07c8ad5074b43d079adee37c8e0582bcad5d"}], "stats": {"total": 54, "additions": 34, "deletions": 20}, "files": [{"sha": "c08d567ec52f000a562941b01162f63245f588c2", "filename": "CHANGELOG.md", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/31e482403c7778b160e0953b558fb53fbf5d0986/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/31e482403c7778b160e0953b558fb53fbf5d0986/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=31e482403c7778b160e0953b558fb53fbf5d0986", "patch": "@@ -1,7 +1,10 @@\n # Change Log\n All notable changes to this project will be documented in this file.\n \n-## 0.0.102 \u2014 date\n+## 0.0.103 \u2014 2016-11-25\n+* Update to *rustc 1.15.0-nightly (d5814b03e 2016-11-23)*\n+\n+## 0.0.102 \u2014 2016-11-24\n * Update to *rustc 1.15.0-nightly (3bf2be9ce 2016-11-22)*\n \n ## 0.0.101 \u2014 2016-11-23"}, {"sha": "a21fd9e12274a6ba95783ba299af7ec6c22238b3", "filename": "Cargo.toml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/31e482403c7778b160e0953b558fb53fbf5d0986/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/31e482403c7778b160e0953b558fb53fbf5d0986/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=31e482403c7778b160e0953b558fb53fbf5d0986", "patch": "@@ -1,6 +1,6 @@\n [package]\n name = \"clippy\"\n-version = \"0.0.102\"\n+version = \"0.0.103\"\n authors = [\n \t\"Manish Goregaokar <manishsmail@gmail.com>\",\n \t\"Andre Bogus <bogusandre@gmail.com>\",\n@@ -25,7 +25,7 @@ test = false\n \n [dependencies]\n # begin automatic update\n-clippy_lints = { version = \"0.0.102\", path = \"clippy_lints\" }\n+clippy_lints = { version = \"0.0.103\", path = \"clippy_lints\" }\n # end automatic update\n \n [dev-dependencies]"}, {"sha": "872c4152ae739761f686e18000b2628cca3fb201", "filename": "clippy_lints/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/31e482403c7778b160e0953b558fb53fbf5d0986/clippy_lints%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/31e482403c7778b160e0953b558fb53fbf5d0986/clippy_lints%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2FCargo.toml?ref=31e482403c7778b160e0953b558fb53fbf5d0986", "patch": "@@ -1,7 +1,7 @@\n [package]\n name = \"clippy_lints\"\n # begin automatic update\n-version = \"0.0.102\"\n+version = \"0.0.103\"\n # end automatic update\n authors = [\n \t\"Manish Goregaokar <manishsmail@gmail.com>\","}, {"sha": "f03dcbc5a9aa9b9afbfb8146b12e411293c4f555", "filename": "clippy_lints/src/attrs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/31e482403c7778b160e0953b558fb53fbf5d0986/clippy_lints%2Fsrc%2Fattrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/31e482403c7778b160e0953b558fb53fbf5d0986/clippy_lints%2Fsrc%2Fattrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fattrs.rs?ref=31e482403c7778b160e0953b558fb53fbf5d0986", "patch": "@@ -191,7 +191,7 @@ fn is_relevant_expr(cx: &LateContext, expr: &Expr) -> bool {\n     match expr.node {\n         ExprBlock(ref block) => is_relevant_block(cx, block),\n         ExprRet(Some(ref e)) => is_relevant_expr(cx, e),\n-        ExprRet(None) | ExprBreak(_) => false,\n+        ExprRet(None) | ExprBreak(_, None) => false,\n         ExprCall(ref path_expr, _) => {\n             if let ExprPath(..) = path_expr.node {\n                 let fun_id = resolve_node(cx, path_expr.id).expect(\"function should be resolved\").def_id();"}, {"sha": "d3c06a581791cc4c65ab5ecc8770fea762435072", "filename": "clippy_lints/src/eval_order_dependence.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/31e482403c7778b160e0953b558fb53fbf5d0986/clippy_lints%2Fsrc%2Feval_order_dependence.rs", "raw_url": "https://github.com/rust-lang/rust/raw/31e482403c7778b160e0953b558fb53fbf5d0986/clippy_lints%2Fsrc%2Feval_order_dependence.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Feval_order_dependence.rs?ref=31e482403c7778b160e0953b558fb53fbf5d0986", "patch": "@@ -124,7 +124,7 @@ impl<'a, 'tcx, 'v> Visitor<'v> for DivergenceVisitor<'a, 'tcx> {\n     fn visit_expr(&mut self, e: &'v Expr) {\n         match e.node {\n             ExprAgain(_) |\n-            ExprBreak(_) |\n+            ExprBreak(_, _) |\n             ExprRet(_) => self.report_diverging_sub_expr(e),\n             ExprCall(ref func, _) => match self.0.tcx.tables().expr_ty(func).sty {\n                 ty::TyFnDef(_, _, fn_ty) |"}, {"sha": "f5d9b91bb8c6cd8863265a934c32b6ffeea3f5bb", "filename": "clippy_lints/src/loops.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/31e482403c7778b160e0953b558fb53fbf5d0986/clippy_lints%2Fsrc%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/31e482403c7778b160e0953b558fb53fbf5d0986/clippy_lints%2Fsrc%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops.rs?ref=31e482403c7778b160e0953b558fb53fbf5d0986", "patch": "@@ -315,7 +315,7 @@ impl LateLintPass for Pass {\n         // check for `loop { if let {} else break }` that could be `while let`\n         // (also matches an explicit \"match\" instead of \"if let\")\n         // (even if the \"match\" or \"if let\" is used for declaration)\n-        if let ExprLoop(ref block, _) = expr.node {\n+        if let ExprLoop(ref block, _, LoopSource::Loop) = expr.node {\n             // also check for empty `loop {}` statements\n             if block.stmts.is_empty() && block.expr.is_none() {\n                 span_lint(cx,\n@@ -911,7 +911,7 @@ fn extract_first_expr(block: &Block) -> Option<&Expr> {\n /// Return true if expr contains a single break expr (maybe within a block).\n fn is_break_expr(expr: &Expr) -> bool {\n     match expr.node {\n-        ExprBreak(None) => true,\n+        ExprBreak(None, _) => true,\n         ExprBlock(ref b) => {\n             match extract_first_expr(b) {\n                 Some(subexpr) => is_break_expr(subexpr),"}, {"sha": "d23b1c9993feed2eaecab99e905c8cfa66e959e4", "filename": "clippy_lints/src/shadow.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/31e482403c7778b160e0953b558fb53fbf5d0986/clippy_lints%2Fsrc%2Fshadow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/31e482403c7778b160e0953b558fb53fbf5d0986/clippy_lints%2Fsrc%2Fshadow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fshadow.rs?ref=31e482403c7778b160e0953b558fb53fbf5d0986", "patch": "@@ -278,7 +278,7 @@ fn check_expr(cx: &LateContext, expr: &Expr, bindings: &mut Vec<(Name, Span)>) {\n         ExprAddrOf(_, ref e) |\n         ExprBox(ref e) => check_expr(cx, e, bindings),\n         ExprBlock(ref block) |\n-        ExprLoop(ref block, _) => check_block(cx, block, bindings),\n+        ExprLoop(ref block, _, _) => check_block(cx, block, bindings),\n         // ExprCall\n         // ExprMethodCall\n         ExprArray(ref v) | ExprTup(ref v) => {"}, {"sha": "e76b9b6970846ef29c4a67a4d5b5630fe10970bd", "filename": "clippy_lints/src/unused_label.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/31e482403c7778b160e0953b558fb53fbf5d0986/clippy_lints%2Fsrc%2Funused_label.rs", "raw_url": "https://github.com/rust-lang/rust/raw/31e482403c7778b160e0953b558fb53fbf5d0986/clippy_lints%2Fsrc%2Funused_label.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funused_label.rs?ref=31e482403c7778b160e0953b558fb53fbf5d0986", "patch": "@@ -64,11 +64,11 @@ impl LateLintPass for UnusedLabel {\n impl<'v> Visitor<'v> for UnusedLabelVisitor {\n     fn visit_expr(&mut self, expr: &hir::Expr) {\n         match expr.node {\n-            hir::ExprBreak(Some(label)) |\n+            hir::ExprBreak(Some(label), _) |\n             hir::ExprAgain(Some(label)) => {\n                 self.labels.remove(&label.node.as_str());\n             }\n-            hir::ExprLoop(_, Some(label)) |\n+            hir::ExprLoop(_, Some(label), _) |\n             hir::ExprWhile(_, _, Some(label)) => {\n                 self.labels.insert(label.node.as_str(), expr.span);\n             }"}, {"sha": "26b45009a8258885dd33e160c7b883ade1b81e41", "filename": "clippy_lints/src/utils/higher.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/31e482403c7778b160e0953b558fb53fbf5d0986/clippy_lints%2Fsrc%2Futils%2Fhigher.rs", "raw_url": "https://github.com/rust-lang/rust/raw/31e482403c7778b160e0953b558fb53fbf5d0986/clippy_lints%2Fsrc%2Futils%2Fhigher.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fhigher.rs?ref=31e482403c7778b160e0953b558fb53fbf5d0986", "patch": "@@ -141,7 +141,7 @@ pub fn for_loop(expr: &hir::Expr) -> Option<(&hir::Pat, &hir::Expr, &hir::Expr)>\n         let hir::ExprMatch(ref iterexpr, ref arms, _) = expr.node,\n         let hir::ExprCall(_, ref iterargs) = iterexpr.node,\n         iterargs.len() == 1 && arms.len() == 1 && arms[0].guard.is_none(),\n-        let hir::ExprLoop(ref block, _) = arms[0].body.node,\n+        let hir::ExprLoop(ref block, _, _) = arms[0].body.node,\n         block.stmts.is_empty(),\n         let Some(ref loopexpr) = block.expr,\n         let hir::ExprMatch(_, ref innerarms, hir::MatchSource::ForLoopDesugar) = loopexpr.node,"}, {"sha": "1199f87ae3c5fe0a621f11f4a7114d070fdf4b4f", "filename": "clippy_lints/src/utils/hir.rs", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/31e482403c7778b160e0953b558fb53fbf5d0986/clippy_lints%2Fsrc%2Futils%2Fhir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/31e482403c7778b160e0953b558fb53fbf5d0986/clippy_lints%2Fsrc%2Futils%2Fhir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fhir.rs?ref=31e482403c7778b160e0953b558fb53fbf5d0986", "patch": "@@ -81,7 +81,9 @@ impl<'a, 'tcx: 'a> SpanlessEq<'a, 'tcx> {\n                     l_op == r_op.node && self.eq_expr(ll, rl) && self.eq_expr(lr, rr)\n                 })\n             }\n-            (&ExprBreak(li), &ExprBreak(ri)) => both(&li, &ri, |l, r| l.node.as_str() == r.node.as_str()),\n+            (&ExprBreak(li, ref le), &ExprBreak(ri, ref re)) =>\n+                both(&li, &ri, |l, r| l.node.as_str() == r.node.as_str())\n+                && both(le, re, |l, r| self.eq_expr(l, r)),\n             (&ExprBox(ref l), &ExprBox(ref r)) => self.eq_expr(l, r),\n             (&ExprCall(ref l_fun, ref l_args), &ExprCall(ref r_fun, ref r_args)) => {\n                 !self.ignore_fn && self.eq_expr(l_fun, r_fun) && self.eq_exprs(l_args, r_args)\n@@ -98,8 +100,8 @@ impl<'a, 'tcx: 'a> SpanlessEq<'a, 'tcx> {\n                 self.eq_expr(lc, rc) && self.eq_block(lt, rt) && both(le, re, |l, r| self.eq_expr(l, r))\n             }\n             (&ExprLit(ref l), &ExprLit(ref r)) => l.node == r.node,\n-            (&ExprLoop(ref lb, ref ll), &ExprLoop(ref rb, ref rl)) => {\n-                self.eq_block(lb, rb) && both(ll, rl, |l, r| l.node.as_str() == r.node.as_str())\n+            (&ExprLoop(ref lb, ref ll, ref lls), &ExprLoop(ref rb, ref rl, ref rls)) => {\n+                self.eq_block(lb, rb) && both(ll, rl, |l, r| l.node.as_str() == r.node.as_str()) && lls == rls\n             }\n             (&ExprMatch(ref le, ref la, ref ls), &ExprMatch(ref re, ref ra, ref rs)) => {\n                 ls == rs && self.eq_expr(le, re) &&\n@@ -344,12 +346,15 @@ impl<'a, 'tcx: 'a> SpanlessHash<'a, 'tcx> {\n                 self.hash_expr(l);\n                 self.hash_expr(r);\n             }\n-            ExprBreak(i) => {\n-                let c: fn(_) -> _ = ExprBreak;\n+            ExprBreak(i, ref j) => {\n+                let c: fn(_, _) -> _ = ExprBreak;\n                 c.hash(&mut self.s);\n                 if let Some(i) = i {\n                     self.hash_name(&i.node);\n                 }\n+                if let Some(ref j) = *j {\n+                    self.hash_expr(&*j);\n+                }\n             }\n             ExprBox(ref e) => {\n                 let c: fn(_) -> _ = ExprBox;\n@@ -404,13 +409,14 @@ impl<'a, 'tcx: 'a> SpanlessHash<'a, 'tcx> {\n                 c.hash(&mut self.s);\n                 l.hash(&mut self.s);\n             }\n-            ExprLoop(ref b, ref i) => {\n-                let c: fn(_, _) -> _ = ExprLoop;\n+            ExprLoop(ref b, ref i, ref j) => {\n+                let c: fn(_, _, _) -> _ = ExprLoop;\n                 c.hash(&mut self.s);\n                 self.hash_block(b);\n                 if let Some(i) = *i {\n                     self.hash_name(&i.node);\n                 }\n+                j.hash(&mut self.s);\n             }\n             ExprMatch(ref e, ref arms, ref s) => {\n                 let c: fn(_, _, _) -> _ = ExprMatch;"}, {"sha": "70f47abb54f35ccb0bf0d78ef59717cb53ae8aa6", "filename": "clippy_lints/src/utils/inspector.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/31e482403c7778b160e0953b558fb53fbf5d0986/clippy_lints%2Fsrc%2Futils%2Finspector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/31e482403c7778b160e0953b558fb53fbf5d0986/clippy_lints%2Fsrc%2Futils%2Finspector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Finspector.rs?ref=31e482403c7778b160e0953b558fb53fbf5d0986", "patch": "@@ -285,7 +285,12 @@ fn print_expr(cx: &LateContext, expr: &hir::Expr, indent: usize) {\n             println!(\"mutability: {:?}\", muta);\n             print_expr(cx, e, indent + 1);\n         },\n-        hir::ExprBreak(_) => println!(\"{}Break, {}\", ind, ty),\n+        hir::ExprBreak(_, ref e) => {\n+            println!(\"{}Break, {}\", ind, ty);\n+            if let Some(ref e) = *e {\n+                print_expr(cx, e, indent + 1);\n+            }\n+        },\n         hir::ExprAgain(_) => println!(\"{}Again, {}\", ind, ty),\n         hir::ExprRet(ref e) => {\n             println!(\"{}Ret, {}\", ind, ty);"}]}