{"sha": "906ad724620e1ff93082b364a38761940a7abdcf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkwNmFkNzI0NjIwZTFmZjkzMDgyYjM2NGEzODc2MTk0MGE3YWJkY2Y=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-06-15T23:48:39Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-06-15T23:48:39Z"}, "message": "Auto merge of #26311 - jooert:fix25855, r=steveklabnik\n\nUse result of the computation to prevent the compiler from optimising\r\ntoo much. Change `_x` to `x` and therefore remove the paragraph about\r\nthe underscore.\r\n\r\nFixes #25855.\r\n\r\nr? @steveklabnik", "tree": {"sha": "2e94947967d3766b18ae6442a8a66ecac8f21f47", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2e94947967d3766b18ae6442a8a66ecac8f21f47"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/906ad724620e1ff93082b364a38761940a7abdcf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/906ad724620e1ff93082b364a38761940a7abdcf", "html_url": "https://github.com/rust-lang/rust/commit/906ad724620e1ff93082b364a38761940a7abdcf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/906ad724620e1ff93082b364a38761940a7abdcf/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c656e99e435aadc852057a4c71832c03051cfb2e", "url": "https://api.github.com/repos/rust-lang/rust/commits/c656e99e435aadc852057a4c71832c03051cfb2e", "html_url": "https://github.com/rust-lang/rust/commit/c656e99e435aadc852057a4c71832c03051cfb2e"}, {"sha": "3e7ab1b5cbda47d06627482616cb009e039a4815", "url": "https://api.github.com/repos/rust-lang/rust/commits/3e7ab1b5cbda47d06627482616cb009e039a4815", "html_url": "https://github.com/rust-lang/rust/commit/3e7ab1b5cbda47d06627482616cb009e039a4815"}], "stats": {"total": 46, "additions": 13, "deletions": 33}, "files": [{"sha": "6129c98259ba4dd5534273ce1d45a9e7334b4261", "filename": "src/doc/trpl/rust-inside-other-languages.md", "status": "modified", "additions": 13, "deletions": 33, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/906ad724620e1ff93082b364a38761940a7abdcf/src%2Fdoc%2Ftrpl%2Frust-inside-other-languages.md", "raw_url": "https://github.com/rust-lang/rust/raw/906ad724620e1ff93082b364a38761940a7abdcf/src%2Fdoc%2Ftrpl%2Frust-inside-other-languages.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftrpl%2Frust-inside-other-languages.md?ref=906ad724620e1ff93082b364a38761940a7abdcf", "patch": "@@ -66,10 +66,14 @@ threads = []\n     5_000_000.times do\n       count += 1\n     end\n+\n+    count\n   end\n end\n \n-threads.each { |t| t.join }\n+threads.each do |t|\n+  puts \"Thread finished with count=#{t.value}\"\n+end\n puts \"done!\"\n ```\n \n@@ -103,50 +107,26 @@ use std::thread;\n fn process() {\n     let handles: Vec<_> = (0..10).map(|_| {\n         thread::spawn(|| {\n-            let mut _x = 0;\n+            let mut x = 0;\n             for _ in (0..5_000_000) {\n-                _x += 1\n+                x += 1\n             }\n+\t    x\n         })\n     }).collect();\n \n     for h in handles {\n-        h.join().ok().expect(\"Could not join a thread!\");\n+        println!(\"Thread finished with count={}\",\n+\t    h.join().map_err(|_| \"Could not join a thread!\").unwrap());\n     }\n+    println!(\"done!\");\n }\n ```\n \n Some of this should look familiar from previous examples. We spin up ten\n threads, collecting them into a `handles` vector. Inside of each thread, we\n-loop five million times, and add one to `_x` each time. Why the underscore?\n-Well, if we remove it and compile:\n-\n-```bash\n-$ cargo build\n-   Compiling embed v0.1.0 (file:///home/steve/src/embed)\n-src/lib.rs:3:1: 16:2 warning: function is never used: `process`, #[warn(dead_code)] on by default\n-src/lib.rs:3 fn process() {\n-src/lib.rs:4     let handles: Vec<_> = (0..10).map(|_| {\n-src/lib.rs:5         thread::spawn(|| {\n-src/lib.rs:6             let mut x = 0;\n-src/lib.rs:7             for _ in (0..5_000_000) {\n-src/lib.rs:8                 x += 1\n-             ...\n-src/lib.rs:6:17: 6:22 warning: variable `x` is assigned to, but never used, #[warn(unused_variables)] on by default\n-src/lib.rs:6             let mut x = 0;\n-                             ^~~~~\n-```\n-\n-That first warning is because we are building a library. If we had a test\n-for this function, the warning would go away. But for now, it\u2019s never\n-called.\n-\n-The second is related to `x` versus `_x`. Because we never actually _do_\n-anything with `x`, we get a warning about it. In our case, that\u2019s perfectly\n-okay, as we\u2019re just trying to waste CPU cycles. Prefixing `x` with the\n-underscore removes the warning.\n-\n-Finally, we join on each thread.\n+loop five million times, and add one to `x` each time. Finally, we join on\n+each thread.\n \n Right now, however, this is a Rust library, and it doesn\u2019t expose anything\n that\u2019s callable from C. If we tried to hook this up to another language right"}]}