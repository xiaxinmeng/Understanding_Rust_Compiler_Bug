{"sha": "59c063302f3ce8e3020a94183c1cf4f203119ab2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU5YzA2MzMwMmYzY2U4ZTMwMjBhOTQxODNjMWNmNGYyMDMxMTlhYjI=", "commit": {"author": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2019-08-24T21:16:56Z"}, "committer": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2019-08-25T01:00:36Z"}, "message": "Allow lifetime parameters to be inferred", "tree": {"sha": "3d7ccefd3c97bb2c945054f14d6c646d23957998", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3d7ccefd3c97bb2c945054f14d6c646d23957998"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/59c063302f3ce8e3020a94183c1cf4f203119ab2", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEmNHc6jmXzkUyxd4xiMlBzaHUZDIFAl1h3boACgkQiMlBzaHU\nZDIOZhAAhBJIBccVLwHZ8ixTQdcDUSORqMD5y3aWyiFGup59iUb3M5W/m3rwijPG\nwzOQKfUHjn04zDnod3gQPINQas2NOewzoo2qv9oWaU8aRpZM0Dv3Q0G2hVUMM65T\nU8ii4jQDgI3ByvWfS8ZemLx+2MT3pyvDco0A7/Agh2xY3sUKusYPMPlSObycOIFV\nhI/0FeLUsPDDD/U78qw/EuquCKgUhgASxcsREFGETwfnj92OHANFcVX5LEacv/6s\nJhL/jBAXgdEvH69OdLLscI+2r35ccdEnhEoh465C7qcU9he5srLQFFLqFpf0hiXS\necEtFdv66Eh6D02gTmUg4gi1jXTSSlXaW9ExoZ8uq3TrHYcsCHGfJ5csZHib9QWz\nujznNsXx574kE2anZ36/bWRZV4r5LEAp6XQ60cBAroDwqNhg151OtJgLTZnt38Mu\ns+wK+WwkTvDzI8WA+jpynPfjXY1MgXyNjJFwejerxj3IbGZ0SkuVRLMiRicpYYBY\nVD7E4KlSktceHO4JOFakWBxtgdEbnNpwKhcGCWnLoGBVxFaIa4YwJCwlJG+1keFX\nG2D3x9Z6YI1hN9fcHXeH0TsjwwIIaH4owN7Geck+eAIvmJXGaE/H2nQdIqMvzwQ/\nuCTFp8YY5N97b4AT+7xobKxrW5erUp7oeWqNYbIq5yapMkfCQAg=\n=Gw+i\n-----END PGP SIGNATURE-----", "payload": "tree 3d7ccefd3c97bb2c945054f14d6c646d23957998\nparent 42dcd4b7c5fb7b61bc2f4c0842f66e5ad40057e4\nauthor Santiago Pastorino <spastorino@gmail.com> 1566681416 -0700\ncommitter Santiago Pastorino <spastorino@gmail.com> 1566694836 -0400\n\nAllow lifetime parameters to be inferred\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/59c063302f3ce8e3020a94183c1cf4f203119ab2", "html_url": "https://github.com/rust-lang/rust/commit/59c063302f3ce8e3020a94183c1cf4f203119ab2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/59c063302f3ce8e3020a94183c1cf4f203119ab2/comments", "author": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "42dcd4b7c5fb7b61bc2f4c0842f66e5ad40057e4", "url": "https://api.github.com/repos/rust-lang/rust/commits/42dcd4b7c5fb7b61bc2f4c0842f66e5ad40057e4", "html_url": "https://github.com/rust-lang/rust/commit/42dcd4b7c5fb7b61bc2f4c0842f66e5ad40057e4"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "654d3d780fcb25e2600909511e2dc1dee37e8ce9", "filename": "src/librustc/mir/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/59c063302f3ce8e3020a94183c1cf4f203119ab2/src%2Flibrustc%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/59c063302f3ce8e3020a94183c1cf4f203119ab2/src%2Flibrustc%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Fmod.rs?ref=59c063302f3ce8e3020a94183c1cf4f203119ab2", "patch": "@@ -1555,7 +1555,7 @@ pub struct Statement<'tcx> {\n #[cfg(target_arch = \"x86_64\")]\n static_assert_size!(Statement<'_>, 56);\n \n-impl<'tcx> Statement<'tcx> {\n+impl Statement<'_> {\n     /// Changes a statement to a nop. This is both faster than deleting instructions and avoids\n     /// invalidating statement indices in `Location`s.\n     pub fn make_nop(&mut self) {\n@@ -1677,7 +1677,7 @@ pub struct InlineAsm<'tcx> {\n     pub inputs: Box<[(Span, Operand<'tcx>)]>,\n }\n \n-impl<'tcx> Debug for Statement<'tcx> {\n+impl Debug for Statement<'_> {\n     fn fmt(&self, fmt: &mut Formatter<'_>) -> fmt::Result {\n         use self::StatementKind::*;\n         match self.kind {\n@@ -2047,7 +2047,7 @@ impl<'p, 'tcx> Iterator for ProjectionsIter<'p, 'tcx> {\n \n impl<'p, 'tcx> FusedIterator for ProjectionsIter<'p, 'tcx> {}\n \n-impl<'tcx> Debug for Place<'tcx> {\n+impl Debug for Place<'_> {\n     fn fmt(&self, fmt: &mut Formatter<'_>) -> fmt::Result {\n         self.iterate(|_place_base, place_projections| {\n             // FIXME: remove this collect once we have migrated to slices"}, {"sha": "e5a19572170a7053856a8e5e04e2cc113cefbc22", "filename": "src/librustc_mir/dataflow/move_paths/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/59c063302f3ce8e3020a94183c1cf4f203119ab2/src%2Flibrustc_mir%2Fdataflow%2Fmove_paths%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/59c063302f3ce8e3020a94183c1cf4f203119ab2/src%2Flibrustc_mir%2Fdataflow%2Fmove_paths%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fmove_paths%2Fmod.rs?ref=59c063302f3ce8e3020a94183c1cf4f203119ab2", "patch": "@@ -240,7 +240,7 @@ impl MovePathLookup {\n     // alternative will *not* create a MovePath on the fly for an\n     // unknown place, but will rather return the nearest available\n     // parent.\n-    pub fn find(&self, place_ref: PlaceRef<'cx, 'tcx>) -> LookupResult {\n+    pub fn find(&self, place_ref: PlaceRef<'_, '_>) -> LookupResult {\n         place_ref.iterate(|place_base, place_projection| {\n             let mut result = match place_base {\n                 PlaceBase::Local(local) => self.locals[*local],"}]}