{"sha": "a15b8136ee3cac8426fa12934f725b161668e9e8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmExNWI4MTM2ZWUzY2FjODQyNmZhMTI5MzRmNzI1YjE2MTY2OGU5ZTg=", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-04-10T15:52:24Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-04-10T15:52:24Z"}, "message": "Add test for binary op return ty with adt", "tree": {"sha": "3107026b9a4b50b0fca68db691c23c25fc7e8aa6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3107026b9a4b50b0fca68db691c23c25fc7e8aa6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a15b8136ee3cac8426fa12934f725b161668e9e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a15b8136ee3cac8426fa12934f725b161668e9e8", "html_url": "https://github.com/rust-lang/rust/commit/a15b8136ee3cac8426fa12934f725b161668e9e8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a15b8136ee3cac8426fa12934f725b161668e9e8/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d9554c258b9c1cc2a328572e5671bc2a87729b18", "url": "https://api.github.com/repos/rust-lang/rust/commits/d9554c258b9c1cc2a328572e5671bc2a87729b18", "html_url": "https://github.com/rust-lang/rust/commit/d9554c258b9c1cc2a328572e5671bc2a87729b18"}], "stats": {"total": 47, "additions": 47, "deletions": 0}, "files": [{"sha": "1879dbc783f0f44d3ad0224fa4abb8e90fad7c4a", "filename": "crates/hir_ty/src/tests/traits.rs", "status": "modified", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/a15b8136ee3cac8426fa12934f725b161668e9e8/crates%2Fhir_ty%2Fsrc%2Ftests%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a15b8136ee3cac8426fa12934f725b161668e9e8/crates%2Fhir_ty%2Fsrc%2Ftests%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Ftests%2Ftraits.rs?ref=a15b8136ee3cac8426fa12934f725b161668e9e8", "patch": "@@ -3469,3 +3469,50 @@ pub trait Deserialize {\n     \"#,\n     );\n }\n+\n+#[test]\n+fn bin_op_adt_with_rhs_primitive() {\n+    check_infer_with_mismatches(\n+        r#\"\n+#[lang = \"add\"]\n+pub trait Add<Rhs = Self> {\n+    type Output;\n+    fn add(self, rhs: Rhs) -> Self::Output;\n+}\n+\n+struct Wrapper(u32);\n+impl Add<u32> for Wrapper {\n+    type Output = Self;\n+    fn add(self, rhs: u32) -> Wrapper {\n+        Wrapper(rhs)\n+    }\n+}\n+fn main(){\n+    let wrapped = Wrapper(10);\n+    let num: u32 = 2;\n+    let res = wrapped + num;\n+\n+}\"#,\n+        expect![[r#\"\n+            72..76 'self': Self\n+            78..81 'rhs': Rhs\n+            192..196 'self': Wrapper\n+            198..201 'rhs': u32\n+            219..247 '{     ...     }': Wrapper\n+            229..236 'Wrapper': Wrapper(u32) -> Wrapper\n+            229..241 'Wrapper(rhs)': Wrapper\n+            237..240 'rhs': u32\n+            259..345 '{     ...um;  }': ()\n+            269..276 'wrapped': Wrapper\n+            279..286 'Wrapper': Wrapper(u32) -> Wrapper\n+            279..290 'Wrapper(10)': Wrapper\n+            287..289 '10': u32\n+            300..303 'num': u32\n+            311..312 '2': u32\n+            322..325 'res': Wrapper\n+            328..335 'wrapped': Wrapper\n+            328..341 'wrapped + num': Wrapper\n+            338..341 'num': u32\n+        \"#]],\n+    )\n+}"}]}