{"sha": "b9414850d29ca4d5414d9887067597e469ee0ae4", "node_id": "C_kwDOAAsO6NoAKGI5NDE0ODUwZDI5Y2E0ZDU0MTRkOTg4NzA2NzU5N2U0NjllZTBhZTQ", "commit": {"author": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2021-05-05T07:56:02Z"}, "committer": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2021-12-21T07:37:07Z"}, "message": "remove obligation dedup", "tree": {"sha": "dc96c0944a60d0e53d9ade31cef6ca65ce69f0dc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dc96c0944a60d0e53d9ade31cef6ca65ce69f0dc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b9414850d29ca4d5414d9887067597e469ee0ae4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b9414850d29ca4d5414d9887067597e469ee0ae4", "html_url": "https://github.com/rust-lang/rust/commit/b9414850d29ca4d5414d9887067597e469ee0ae4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b9414850d29ca4d5414d9887067597e469ee0ae4/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "46171fa96c12bcea41b6e0efb8ff6b58fe1b1e3b", "url": "https://api.github.com/repos/rust-lang/rust/commits/46171fa96c12bcea41b6e0efb8ff6b58fe1b1e3b", "html_url": "https://github.com/rust-lang/rust/commit/46171fa96c12bcea41b6e0efb8ff6b58fe1b1e3b"}], "stats": {"total": 22, "additions": 0, "deletions": 22}, "files": [{"sha": "8306090debc47df19447a2629c1910a820c03fa8", "filename": "compiler/rustc_trait_selection/src/traits/select/mod.rs", "status": "modified", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/b9414850d29ca4d5414d9887067597e469ee0ae4/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9414850d29ca4d5414d9887067597e469ee0ae4/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fmod.rs?ref=b9414850d29ca4d5414d9887067597e469ee0ae4", "patch": "@@ -2328,28 +2328,6 @@ impl<'cx, 'tcx> SelectionContext<'cx, 'tcx> {\n             });\n         }\n \n-        // We are performing deduplication here to avoid exponential blowups\n-        // (#38528) from happening, but the real cause of the duplication is\n-        // unknown. What we know is that the deduplication avoids exponential\n-        // amount of predicates being propagated when processing deeply nested\n-        // types.\n-        //\n-        // This code is hot enough that it's worth avoiding the allocation\n-        // required for the FxHashSet when possible. Special-casing lengths 0,\n-        // 1 and 2 covers roughly 75-80% of the cases.\n-        if obligations.len() <= 1 {\n-            // No possibility of duplicates.\n-        } else if obligations.len() == 2 {\n-            // Only two elements. Drop the second if they are equal.\n-            if obligations[0] == obligations[1] {\n-                obligations.truncate(1);\n-            }\n-        } else {\n-            // Three or more elements. Use a general deduplication process.\n-            let mut seen = FxHashSet::default();\n-            obligations.retain(|i| seen.insert(i.clone()));\n-        }\n-\n         obligations\n     }\n }"}]}