{"sha": "a810b584cf7bf6f3d0eb02cef441b510475514f9", "node_id": "C_kwDOAAsO6NoAKGE4MTBiNTg0Y2Y3YmY2ZjNkMGViMDJjZWY0NDFiNTEwNDc1NTE0Zjk", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-05-25T20:32:11Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-05-26T14:42:31Z"}, "message": "Use DefiningAnchor::Bind in infer_opaque_definition_from_instantiation", "tree": {"sha": "b5310e67e649d194c6eb8f480ad0d7e854ddd487", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b5310e67e649d194c6eb8f480ad0d7e854ddd487"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a810b584cf7bf6f3d0eb02cef441b510475514f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a810b584cf7bf6f3d0eb02cef441b510475514f9", "html_url": "https://github.com/rust-lang/rust/commit/a810b584cf7bf6f3d0eb02cef441b510475514f9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a810b584cf7bf6f3d0eb02cef441b510475514f9/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "917b0b6c70f078cb08bbb0080c9379e4487353c3", "url": "https://api.github.com/repos/rust-lang/rust/commits/917b0b6c70f078cb08bbb0080c9379e4487353c3", "html_url": "https://github.com/rust-lang/rust/commit/917b0b6c70f078cb08bbb0080c9379e4487353c3"}], "stats": {"total": 16, "additions": 14, "deletions": 2}, "files": [{"sha": "725ff783ee9bc0f8e612fe8c5d1c58460da306d5", "filename": "compiler/rustc_borrowck/src/region_infer/opaque_types.rs", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/a810b584cf7bf6f3d0eb02cef441b510475514f9/compiler%2Frustc_borrowck%2Fsrc%2Fregion_infer%2Fopaque_types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a810b584cf7bf6f3d0eb02cef441b510475514f9/compiler%2Frustc_borrowck%2Fsrc%2Fregion_infer%2Fopaque_types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Fregion_infer%2Fopaque_types.rs?ref=a810b584cf7bf6f3d0eb02cef441b510475514f9", "patch": "@@ -278,8 +278,18 @@ impl<'tcx> InferCtxtExt<'tcx> for InferCtxt<'tcx> {\n         // HACK This bubble is required for this tests to pass:\n         // nested-return-type2-tait2.rs\n         // nested-return-type2-tait3.rs\n-        let infcx =\n-            self.tcx.infer_ctxt().with_opaque_type_inference(DefiningAnchor::Bubble).build();\n+        // FIXME(-Ztrait-solver=next): We probably should use `DefiningAnchor::Error`\n+        // and prepopulate this `InferCtxt` with known opaque values, rather than\n+        // using the `Bind` anchor here. For now it's fine.\n+        let infcx = self\n+            .tcx\n+            .infer_ctxt()\n+            .with_opaque_type_inference(if self.tcx.trait_solver_next() {\n+                DefiningAnchor::Bind(def_id)\n+            } else {\n+                DefiningAnchor::Bubble\n+            })\n+            .build();\n         let ocx = ObligationCtxt::new(&infcx);\n         // Require the hidden type to be well-formed with only the generics of the opaque type.\n         // Defining use functions may have more bounds than the opaque type, which is ok, as long as the"}, {"sha": "07f3dd1997bed87584b3bc001aa41c898cfe04cd", "filename": "tests/ui/type-alias-impl-trait/cross_inference.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a810b584cf7bf6f3d0eb02cef441b510475514f9/tests%2Fui%2Ftype-alias-impl-trait%2Fcross_inference.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a810b584cf7bf6f3d0eb02cef441b510475514f9/tests%2Fui%2Ftype-alias-impl-trait%2Fcross_inference.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftype-alias-impl-trait%2Fcross_inference.rs?ref=a810b584cf7bf6f3d0eb02cef441b510475514f9", "patch": "@@ -1,3 +1,5 @@\n+// revisions: current next\n+//[next] compile-flags: -Ztrait-solver=next\n // check-pass\n \n #![feature(type_alias_impl_trait)]"}]}