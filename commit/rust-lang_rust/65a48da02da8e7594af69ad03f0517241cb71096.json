{"sha": "65a48da02da8e7594af69ad03f0517241cb71096", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY1YTQ4ZGEwMmRhOGU3NTk0YWY2OWFkMDNmMDUxNzI0MWNiNzEwOTY=", "commit": {"author": {"name": "David Alber", "email": "alber.david@gmail.com", "date": "2017-12-24T21:31:46Z"}, "committer": {"name": "David Alber", "email": "alber.david@gmail.com", "date": "2017-12-24T21:31:46Z"}, "message": "Updating error message", "tree": {"sha": "3188ca760887bd3440894e12ff3189aee4d73aee", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3188ca760887bd3440894e12ff3189aee4d73aee"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/65a48da02da8e7594af69ad03f0517241cb71096", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/65a48da02da8e7594af69ad03f0517241cb71096", "html_url": "https://github.com/rust-lang/rust/commit/65a48da02da8e7594af69ad03f0517241cb71096", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/65a48da02da8e7594af69ad03f0517241cb71096/comments", "author": {"login": "davidalber", "id": 933552, "node_id": "MDQ6VXNlcjkzMzU1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/933552?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidalber", "html_url": "https://github.com/davidalber", "followers_url": "https://api.github.com/users/davidalber/followers", "following_url": "https://api.github.com/users/davidalber/following{/other_user}", "gists_url": "https://api.github.com/users/davidalber/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidalber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidalber/subscriptions", "organizations_url": "https://api.github.com/users/davidalber/orgs", "repos_url": "https://api.github.com/users/davidalber/repos", "events_url": "https://api.github.com/users/davidalber/events{/privacy}", "received_events_url": "https://api.github.com/users/davidalber/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidalber", "id": 933552, "node_id": "MDQ6VXNlcjkzMzU1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/933552?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidalber", "html_url": "https://github.com/davidalber", "followers_url": "https://api.github.com/users/davidalber/followers", "following_url": "https://api.github.com/users/davidalber/following{/other_user}", "gists_url": "https://api.github.com/users/davidalber/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidalber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidalber/subscriptions", "organizations_url": "https://api.github.com/users/davidalber/orgs", "repos_url": "https://api.github.com/users/davidalber/repos", "events_url": "https://api.github.com/users/davidalber/events{/privacy}", "received_events_url": "https://api.github.com/users/davidalber/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9405e05d8380dd3d6793e515fe62db6f4fcf8a9c", "url": "https://api.github.com/repos/rust-lang/rust/commits/9405e05d8380dd3d6793e515fe62db6f4fcf8a9c", "html_url": "https://github.com/rust-lang/rust/commit/9405e05d8380dd3d6793e515fe62db6f4fcf8a9c"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "0d48ff38848492659f83e25a5655aefa21545ad4", "filename": "tests/system.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/65a48da02da8e7594af69ad03f0517241cb71096/tests%2Fsystem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/65a48da02da8e7594af69ad03f0517241cb71096/tests%2Fsystem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsystem.rs?ref=65a48da02da8e7594af69ad03f0517241cb71096", "patch": "@@ -36,7 +36,10 @@ const DIFF_CONTEXT_SIZE: usize = 3;\n fn get_test_files(path: &Path, recursive: bool) -> Vec<PathBuf> {\n     let mut files = vec![];\n     if path.is_dir() {\n-        for entry in fs::read_dir(path).expect(\"Couldn't read source dir\") {\n+        for entry in fs::read_dir(path).expect(&format!(\n+            \"Couldn't read directory {}\",\n+            path.to_str().unwrap()\n+        )) {\n             let entry = entry.expect(\"Couldn't get DirEntry\");\n             let path = entry.path();\n             if path.is_dir() && recursive {"}]}