{"sha": "b8728e773f126b554162bd49065f08028d87f7c3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI4NzI4ZTc3M2YxMjZiNTU0MTYyYmQ0OTA2NWYwODAyOGQ4N2Y3YzM=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2021-08-29T15:13:29Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2021-08-29T15:30:16Z"}, "message": "rustdoc: Stop using resolver for macro loading", "tree": {"sha": "2e46d5d069dc67b5c3b98329a91084520fff8b5e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2e46d5d069dc67b5c3b98329a91084520fff8b5e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b8728e773f126b554162bd49065f08028d87f7c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b8728e773f126b554162bd49065f08028d87f7c3", "html_url": "https://github.com/rust-lang/rust/commit/b8728e773f126b554162bd49065f08028d87f7c3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b8728e773f126b554162bd49065f08028d87f7c3/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "59ce76548484806ac4970c57c0bb6ad9e53b80f6", "url": "https://api.github.com/repos/rust-lang/rust/commits/59ce76548484806ac4970c57c0bb6ad9e53b80f6", "html_url": "https://github.com/rust-lang/rust/commit/59ce76548484806ac4970c57c0bb6ad9e53b80f6"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "0c81a5584301355e4d70e84c4b8139751c0d5b6b", "filename": "src/librustdoc/clean/inline.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b8728e773f126b554162bd49065f08028d87f7c3/src%2Flibrustdoc%2Fclean%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b8728e773f126b554162bd49065f08028d87f7c3/src%2Flibrustdoc%2Fclean%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Finline.rs?ref=b8728e773f126b554162bd49065f08028d87f7c3", "patch": "@@ -9,7 +9,7 @@ use rustc_hir as hir;\n use rustc_hir::def::{DefKind, Res};\n use rustc_hir::def_id::DefId;\n use rustc_hir::Mutability;\n-use rustc_metadata::creader::LoadedMacro;\n+use rustc_metadata::creader::{CStore, LoadedMacro};\n use rustc_middle::ty::{self, TyCtxt};\n use rustc_span::hygiene::MacroKind;\n use rustc_span::symbol::{kw, sym, Symbol};\n@@ -179,7 +179,7 @@ crate fn record_extern_fqn(cx: &mut DocContext<'_>, did: DefId, kind: ItemType)\n     let fqn = if let ItemType::Macro = kind {\n         // Check to see if it is a macro 2.0 or built-in macro\n         if matches!(\n-            cx.enter_resolver(|r| r.cstore().load_macro_untracked(did, cx.sess())),\n+            CStore::from_tcx(cx.tcx).load_macro_untracked(did, cx.sess()),\n             LoadedMacro::MacroDef(def, _)\n                 if matches!(&def.kind, ast::ItemKind::MacroDef(ast_def)\n                     if !ast_def.macro_rules)\n@@ -558,7 +558,7 @@ fn build_macro(\n     import_def_id: Option<DefId>,\n ) -> clean::ItemKind {\n     let imported_from = cx.tcx.crate_name(def_id.krate);\n-    match cx.enter_resolver(|r| r.cstore().load_macro_untracked(def_id, cx.sess())) {\n+    match CStore::from_tcx(cx.tcx).load_macro_untracked(def_id, cx.sess()) {\n         LoadedMacro::MacroDef(item_def, _) => {\n             if let ast::ItemKind::MacroDef(ref def) = item_def.kind {\n                 clean::MacroItem(clean::Macro {"}]}