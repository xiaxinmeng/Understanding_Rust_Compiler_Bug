{"sha": "adb4279e549f51d287140658c1c64b51d7715bfa", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFkYjQyNzllNTQ5ZjUxZDI4NzE0MDY1OGMxYzY0YjUxZDc3MTViZmE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-12-09T07:08:29Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-12-09T07:08:29Z"}, "message": "Auto merge of #38256 - alexcrichton:distcheck, r=brson\n\nrustbuild: Implement distcheck\n\nThis commit implements the `distcheck` target for rustbuild which is only ever\nrun on our nightly bots. This essentially just creates a tarball, un-tars it,\nand then runs a full build, validating that the release tarballs do indeed have\neverything they need to build Rust.", "tree": {"sha": "9f4bd1e4822cf7269c1de03ec97af336321cdf6e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9f4bd1e4822cf7269c1de03ec97af336321cdf6e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/adb4279e549f51d287140658c1c64b51d7715bfa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/adb4279e549f51d287140658c1c64b51d7715bfa", "html_url": "https://github.com/rust-lang/rust/commit/adb4279e549f51d287140658c1c64b51d7715bfa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/adb4279e549f51d287140658c1c64b51d7715bfa/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6a495f71fffbc4b378c032295c0fc3ad20bc7e5e", "url": "https://api.github.com/repos/rust-lang/rust/commits/6a495f71fffbc4b378c032295c0fc3ad20bc7e5e", "html_url": "https://github.com/rust-lang/rust/commit/6a495f71fffbc4b378c032295c0fc3ad20bc7e5e"}, {"sha": "d38db82b291afe172c9477b44ef99f70013010d9", "url": "https://api.github.com/repos/rust-lang/rust/commits/d38db82b291afe172c9477b44ef99f70013010d9", "html_url": "https://github.com/rust-lang/rust/commit/d38db82b291afe172c9477b44ef99f70013010d9"}], "stats": {"total": 51, "additions": 42, "deletions": 9}, "files": [{"sha": "46c7fe4753f5bd4d35a2d0c784a4b80a66c8279f", "filename": "src/bootstrap/check.rs", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/adb4279e549f51d287140658c1c64b51d7715bfa/src%2Fbootstrap%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/adb4279e549f51d287140658c1c64b51d7715bfa/src%2Fbootstrap%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcheck.rs?ref=adb4279e549f51d287140658c1c64b51d7715bfa", "patch": "@@ -23,6 +23,7 @@ use std::process::Command;\n use build_helper::output;\n \n use {Build, Compiler, Mode};\n+use dist;\n use util::{self, dylib_path, dylib_path_var};\n \n const ADB_TEST_DIR: &'static str = \"/data/tmp\";\n@@ -517,3 +518,32 @@ pub fn android_copy_libs(build: &Build,\n         }\n     }\n }\n+\n+/// Run \"distcheck\", a 'make check' from a tarball\n+pub fn distcheck(build: &Build) {\n+    if build.config.build != \"x86_64-unknown-linux-gnu\" {\n+        return\n+    }\n+    if !build.config.host.iter().any(|s| s == \"x86_64-unknown-linux-gnu\") {\n+        return\n+    }\n+    if !build.config.target.iter().any(|s| s == \"x86_64-unknown-linux-gnu\") {\n+        return\n+    }\n+\n+    let dir = build.out.join(\"tmp\").join(\"distcheck\");\n+    let _ = fs::remove_dir_all(&dir);\n+    t!(fs::create_dir_all(&dir));\n+\n+    let mut cmd = Command::new(\"tar\");\n+    cmd.arg(\"-xzf\")\n+       .arg(dist::rust_src_location(build))\n+       .arg(\"--strip-components=1\")\n+       .current_dir(&dir);\n+    build.run(&mut cmd);\n+    build.run(Command::new(\"./configure\")\n+                     .current_dir(&dir));\n+    build.run(Command::new(\"make\")\n+                     .arg(\"check\")\n+                     .current_dir(&dir));\n+}"}, {"sha": "2fcd45f751c1b5d1bd1c4281b8a744b9422c4819", "filename": "src/bootstrap/dist.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/adb4279e549f51d287140658c1c64b51d7715bfa/src%2Fbootstrap%2Fdist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/adb4279e549f51d287140658c1c64b51d7715bfa/src%2Fbootstrap%2Fdist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdist.rs?ref=adb4279e549f51d287140658c1c64b51d7715bfa", "patch": "@@ -284,6 +284,11 @@ pub fn std(build: &Build, compiler: &Compiler, target: &str) {\n     t!(fs::remove_dir_all(&image));\n }\n \n+pub fn rust_src_location(build: &Build) -> PathBuf {\n+    let plain_name = format!(\"rustc-{}-src\", package_vers(build));\n+    distdir(build).join(&format!(\"{}.tar.gz\", plain_name))\n+}\n+\n /// Creates the `rust-src` installer component and the plain source tarball\n pub fn rust_src(build: &Build) {\n     println!(\"Dist src\");\n@@ -374,7 +379,7 @@ pub fn rust_src(build: &Build) {\n \n     // Create plain source tarball\n     let mut cmd = Command::new(\"tar\");\n-    cmd.arg(\"-czf\").arg(sanitize_sh(&distdir(build).join(&format!(\"{}.tar.gz\", plain_name))))\n+    cmd.arg(\"-czf\").arg(sanitize_sh(&rust_src_location(build)))\n        .arg(&plain_name)\n        .current_dir(&dst);\n     build.run(&mut cmd);"}, {"sha": "ef02f21a34b31e8aea5dbbb9f7b72ecc8d1c7320", "filename": "src/bootstrap/mk/Makefile.in", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/adb4279e549f51d287140658c1c64b51d7715bfa/src%2Fbootstrap%2Fmk%2FMakefile.in", "raw_url": "https://github.com/rust-lang/rust/raw/adb4279e549f51d287140658c1c64b51d7715bfa/src%2Fbootstrap%2Fmk%2FMakefile.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fmk%2FMakefile.in?ref=adb4279e549f51d287140658c1c64b51d7715bfa", "patch": "@@ -55,6 +55,8 @@ check-cargotest:\n \t$(Q)$(BOOTSTRAP) test src/tools/cargotest $(BOOTSTRAP_ARGS)\n dist:\n \t$(Q)$(BOOTSTRAP) dist $(BOOTSTRAP_ARGS)\n+distcheck:\n+\t$(Q)$(BOOTSTRAP) test distcheck\n install:\n \t$(Q)$(BOOTSTRAP) dist --install $(BOOTSTRAP_ARGS)\n tidy:"}, {"sha": "efa3e4e5ea117e13cffd8a2d28f6bcb7a7f28b6b", "filename": "src/bootstrap/step.rs", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/adb4279e549f51d287140658c1c64b51d7715bfa/src%2Fbootstrap%2Fstep.rs", "raw_url": "https://github.com/rust-lang/rust/raw/adb4279e549f51d287140658c1c64b51d7715bfa/src%2Fbootstrap%2Fstep.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fstep.rs?ref=adb4279e549f51d287140658c1c64b51d7715bfa", "patch": "@@ -198,14 +198,6 @@ pub fn build_rules(build: &Build) -> Rules {\n              });\n     }\n     for (krate, path, default) in krates(\"rustc-main\") {\n-        // We hijacked the `src/rustc` path above for \"build just the compiler\"\n-        // so let's not reinterpret it here as everything and redirect the\n-        // `src/rustc` path to a nonexistent path.\n-        let path = if path == \"src/rustc\" {\n-            \"path/to/nowhere\"\n-        } else {\n-            path\n-        };\n         rules.build(&krate.build_step, path)\n              .dep(|s| s.name(\"libtest\"))\n              .dep(move |s| s.name(\"llvm\").host(&build.config.build).stage(0))\n@@ -403,6 +395,10 @@ pub fn build_rules(build: &Build) -> Rules {\n          .default(true)\n          .host(true)\n          .run(move |s| check::docs(build, &s.compiler()));\n+    rules.test(\"check-distcheck\", \"distcheck\")\n+         .dep(|s| s.name(\"dist-src\"))\n+         .run(move |_| check::distcheck(build));\n+\n \n     rules.build(\"test-helpers\", \"src/rt/rust_test_helpers.c\")\n          .run(move |s| native::test_helpers(build, s.target));"}]}