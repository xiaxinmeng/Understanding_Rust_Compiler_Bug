{"sha": "325025e74b98ee3bab229ed416fa9669b9eeca71", "node_id": "C_kwDOAAsO6NoAKDMyNTAyNWU3NGI5OGVlM2JhYjIyOWVkNDE2ZmE5NjY5YjllZWNhNzE", "commit": {"author": {"name": "Frank Steffahn", "email": "frank.steffahn@stu.uni-kiel.de", "date": "2021-09-30T11:53:24Z"}, "committer": {"name": "Frank Steffahn", "email": "frank.steffahn@stu.uni-kiel.de", "date": "2021-09-30T11:53:24Z"}, "message": "Improve previous commit", "tree": {"sha": "a315e8812db9868b58b9b6d214e6ce30e73a0df0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a315e8812db9868b58b9b6d214e6ce30e73a0df0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/325025e74b98ee3bab229ed416fa9669b9eeca71", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/325025e74b98ee3bab229ed416fa9669b9eeca71", "html_url": "https://github.com/rust-lang/rust/commit/325025e74b98ee3bab229ed416fa9669b9eeca71", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/325025e74b98ee3bab229ed416fa9669b9eeca71/comments", "author": {"login": "steffahn", "id": 3986214, "node_id": "MDQ6VXNlcjM5ODYyMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3986214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steffahn", "html_url": "https://github.com/steffahn", "followers_url": "https://api.github.com/users/steffahn/followers", "following_url": "https://api.github.com/users/steffahn/following{/other_user}", "gists_url": "https://api.github.com/users/steffahn/gists{/gist_id}", "starred_url": "https://api.github.com/users/steffahn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steffahn/subscriptions", "organizations_url": "https://api.github.com/users/steffahn/orgs", "repos_url": "https://api.github.com/users/steffahn/repos", "events_url": "https://api.github.com/users/steffahn/events{/privacy}", "received_events_url": "https://api.github.com/users/steffahn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "steffahn", "id": 3986214, "node_id": "MDQ6VXNlcjM5ODYyMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3986214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steffahn", "html_url": "https://github.com/steffahn", "followers_url": "https://api.github.com/users/steffahn/followers", "following_url": "https://api.github.com/users/steffahn/following{/other_user}", "gists_url": "https://api.github.com/users/steffahn/gists{/gist_id}", "starred_url": "https://api.github.com/users/steffahn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steffahn/subscriptions", "organizations_url": "https://api.github.com/users/steffahn/orgs", "repos_url": "https://api.github.com/users/steffahn/repos", "events_url": "https://api.github.com/users/steffahn/events{/privacy}", "received_events_url": "https://api.github.com/users/steffahn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fdccc7dad9f9d4227ce07189585cc5214868bc28", "url": "https://api.github.com/repos/rust-lang/rust/commits/fdccc7dad9f9d4227ce07189585cc5214868bc28", "html_url": "https://github.com/rust-lang/rust/commit/fdccc7dad9f9d4227ce07189585cc5214868bc28"}], "stats": {"total": 11, "additions": 5, "deletions": 6}, "files": [{"sha": "6825e663fc61dfa2d581f93c80ef4df46e59c81d", "filename": "library/core/src/array/mod.rs", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/325025e74b98ee3bab229ed416fa9669b9eeca71/library%2Fcore%2Fsrc%2Farray%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/325025e74b98ee3bab229ed416fa9669b9eeca71/library%2Fcore%2Fsrc%2Farray%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Farray%2Fmod.rs?ref=325025e74b98ee3bab229ed416fa9669b9eeca71", "patch": "@@ -568,18 +568,17 @@ where\n         fn drop(&mut self) {\n             debug_assert!(self.initialized <= N);\n \n-            let ptr = MaybeUninit::slice_as_mut_ptr(self.array_mut);\n-            let initialized_part = crate::ptr::slice_from_raw_parts_mut(ptr, self.initialized);\n-\n-            // SAFETY: this raw slice will contain only initialized objects.\n+            // SAFETY: this slice will contain only initialized objects.\n             unsafe {\n-                crate::ptr::drop_in_place(initialized_part);\n+                crate::ptr::drop_in_place(MaybeUninit::slice_assume_init_mut(\n+                    &mut self.array_mut.get_unchecked_mut(..self.initialized),\n+                ));\n             }\n         }\n     }\n \n     let mut array = MaybeUninit::uninit_array::<N>();\n-    let mut guard: Guard<'_, _, N> = Guard { array_mut: &mut array, initialized: 0 };\n+    let mut guard = Guard { array_mut: &mut array, initialized: 0 };\n \n     while let Some(item_rslt) = iter.next() {\n         let item = match item_rslt {"}]}