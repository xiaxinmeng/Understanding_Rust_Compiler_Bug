{"sha": "9ceaa5676b4ad706a3919526fc38fbfdbb142289", "node_id": "MDY6Q29tbWl0NzI0NzEyOjljZWFhNTY3NmI0YWQ3MDZhMzkxOTUyNmZjMzhmYmZkYmIxNDIyODk=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-04-01T02:44:45Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-04-01T02:44:45Z"}, "message": "Auto merge of #49522 - mbrubeck:fs_read, r=SimonSapin\n\nRename fs::read_string to read_to_string and stabilize\n\nAs approved in https://github.com/rust-lang/rust/issues/46588#issuecomment-377530365\n\nCloses #46588.", "tree": {"sha": "4d5be3d5699150fa25ebbc8e2efdc3e5871ab045", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4d5be3d5699150fa25ebbc8e2efdc3e5871ab045"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9ceaa5676b4ad706a3919526fc38fbfdbb142289", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9ceaa5676b4ad706a3919526fc38fbfdbb142289", "html_url": "https://github.com/rust-lang/rust/commit/9ceaa5676b4ad706a3919526fc38fbfdbb142289", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9ceaa5676b4ad706a3919526fc38fbfdbb142289/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2b49944006e831b6fa9078929afd5fc717c67a48", "url": "https://api.github.com/repos/rust-lang/rust/commits/2b49944006e831b6fa9078929afd5fc717c67a48", "html_url": "https://github.com/rust-lang/rust/commit/2b49944006e831b6fa9078929afd5fc717c67a48"}, {"sha": "6b7627f8c9858303d85a97217ddf38abec9425d3", "url": "https://api.github.com/repos/rust-lang/rust/commits/6b7627f8c9858303d85a97217ddf38abec9425d3", "html_url": "https://github.com/rust-lang/rust/commit/6b7627f8c9858303d85a97217ddf38abec9425d3"}], "stats": {"total": 15, "additions": 8, "deletions": 7}, "files": [{"sha": "6b896a889e3003112b33eee21e6ad1ee32afb9c7", "filename": "src/librustc/util/common.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9ceaa5676b4ad706a3919526fc38fbfdbb142289/src%2Flibrustc%2Futil%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ceaa5676b4ad706a3919526fc38fbfdbb142289/src%2Flibrustc%2Futil%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Futil%2Fcommon.rs?ref=9ceaa5676b4ad706a3919526fc38fbfdbb142289", "patch": "@@ -244,7 +244,8 @@ fn get_resident() -> Option<usize> {\n     use std::fs;\n \n     let field = 1;\n-    let contents = fs::read_string(\"/proc/self/statm\").ok()?;\n+    let contents = fs::read(\"/proc/self/statm\").ok()?;\n+    let contents = String::from_utf8(contents).ok()?;\n     let s = contents.split_whitespace().nth(field)?;\n     let npages = s.parse::<usize>().ok()?;\n     Some(npages * 4096)"}, {"sha": "d915bab7919c7ab6e09cf73d88739dd8f06b11d2", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9ceaa5676b4ad706a3919526fc38fbfdbb142289/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ceaa5676b4ad706a3919526fc38fbfdbb142289/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=9ceaa5676b4ad706a3919526fc38fbfdbb142289", "patch": "@@ -1067,7 +1067,7 @@ impl<'a> SourceCollector<'a> {\n             return Ok(());\n         }\n \n-        let contents = fs::read_string(&p)?;\n+        let contents = fs::read_to_string(&p)?;\n \n         // Remove the utf-8 BOM if any\n         let contents = if contents.starts_with(\"\\u{feff}\") {"}, {"sha": "479e4d08f4b4d49b8fe111f591b3fc9972fd4acc", "filename": "src/libstd/fs.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/9ceaa5676b4ad706a3919526fc38fbfdbb142289/src%2Flibstd%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ceaa5676b4ad706a3919526fc38fbfdbb142289/src%2Flibstd%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ffs.rs?ref=9ceaa5676b4ad706a3919526fc38fbfdbb142289", "patch": "@@ -297,12 +297,12 @@ pub fn read<P: AsRef<Path>>(path: P) -> io::Result<Vec<u8>> {\n /// use std::net::SocketAddr;\n ///\n /// fn main() -> Result<(), Box<std::error::Error + 'static>> {\n-///     let foo: SocketAddr = fs::read_string(\"address.txt\")?.parse()?;\n+///     let foo: SocketAddr = fs::read_to_string(\"address.txt\")?.parse()?;\n ///     Ok(())\n /// }\n /// ```\n-#[unstable(feature = \"fs_read_write\", issue = \"46588\")]\n-pub fn read_string<P: AsRef<Path>>(path: P) -> io::Result<String> {\n+#[stable(feature = \"fs_read_write\", since = \"1.26.0\")]\n+pub fn read_to_string<P: AsRef<Path>>(path: P) -> io::Result<String> {\n     let mut file = File::open(path)?;\n     let mut string = String::with_capacity(initial_buffer_size(&file));\n     file.read_to_string(&mut string)?;\n@@ -3122,12 +3122,12 @@ mod tests {\n         assert!(v == &bytes[..]);\n \n         check!(fs::write(&tmpdir.join(\"not-utf8\"), &[0xFF]));\n-        error_contains!(fs::read_string(&tmpdir.join(\"not-utf8\")),\n+        error_contains!(fs::read_to_string(&tmpdir.join(\"not-utf8\")),\n                         \"stream did not contain valid UTF-8\");\n \n         let s = \"\ud800\udc41\ud800\udc13\ud800\udc20\ud800\udc34\ud800\udc0d\";\n         check!(fs::write(&tmpdir.join(\"utf8\"), s.as_bytes()));\n-        let string = check!(fs::read_string(&tmpdir.join(\"utf8\")));\n+        let string = check!(fs::read_to_string(&tmpdir.join(\"utf8\")));\n         assert_eq!(string, s);\n     }\n "}]}