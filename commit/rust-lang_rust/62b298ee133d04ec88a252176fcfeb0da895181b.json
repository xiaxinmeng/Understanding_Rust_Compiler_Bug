{"sha": "62b298ee133d04ec88a252176fcfeb0da895181b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYyYjI5OGVlMTMzZDA0ZWM4OGEyNTIxNzZmY2ZlYjBkYTg5NTE4MWI=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2011-11-16T04:35:36Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2011-11-16T23:27:08Z"}, "message": "missed merges", "tree": {"sha": "65fc0ddf54aa455ef912774369e84b3187cf7780", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/65fc0ddf54aa455ef912774369e84b3187cf7780"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/62b298ee133d04ec88a252176fcfeb0da895181b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/62b298ee133d04ec88a252176fcfeb0da895181b", "html_url": "https://github.com/rust-lang/rust/commit/62b298ee133d04ec88a252176fcfeb0da895181b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/62b298ee133d04ec88a252176fcfeb0da895181b/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cbcdeb80d938177962d29f19ce8ef0c1060fa2ae", "url": "https://api.github.com/repos/rust-lang/rust/commits/cbcdeb80d938177962d29f19ce8ef0c1060fa2ae", "html_url": "https://github.com/rust-lang/rust/commit/cbcdeb80d938177962d29f19ce8ef0c1060fa2ae"}], "stats": {"total": 5, "additions": 0, "deletions": 5}, "files": [{"sha": "37f46beff697092e26d8264f2490cf0613f4e15b", "filename": "src/lib/io.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/62b298ee133d04ec88a252176fcfeb0da895181b/src%2Flib%2Fio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62b298ee133d04ec88a252176fcfeb0da895181b/src%2Flib%2Fio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fio.rs?ref=62b298ee133d04ec88a252176fcfeb0da895181b", "patch": "@@ -390,14 +390,9 @@ fn buffered_file_buf_writer(path: str) -> result::t<buf_writer, str> {\n \n \n // FIXME it would be great if this could be a const\n-<<<<<<< HEAD\n // Problem seems to be that new_writer is not pure\n-fn stdout() -> writer { ret new_writer(fd_buf_writer(1, option::none)); }\n-fn stderr() -> writer { ret new_writer(fd_buf_writer(2, option::none)); }\n-=======\n fn stdout() -> writer { ret new_writer(fd_buf_writer(1i32, option::none)); }\n fn stderr() -> writer { ret new_writer(fd_buf_writer(2i32, option::none)); }\n->>>>>>> refactor all unix types\n \n fn print(s: str) { stdout().write_str(s); }\n fn println(s: str) { stdout().write_str(s + \"\\n\"); }"}]}