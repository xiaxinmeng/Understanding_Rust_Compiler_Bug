{"sha": "3a11cd428902feafdc70c279d2dbc950f580db3f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNhMTFjZDQyODkwMmZlYWZkYzcwYzI3OWQyZGJjOTUwZjU4MGRiM2Y=", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2018-11-17T12:47:27Z"}, "committer": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2018-11-17T12:47:46Z"}, "message": "remove unused allow() attributes, NFC", "tree": {"sha": "309c24431b7c718acc507f71416af819cefb84c4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/309c24431b7c718acc507f71416af819cefb84c4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3a11cd428902feafdc70c279d2dbc950f580db3f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3a11cd428902feafdc70c279d2dbc950f580db3f", "html_url": "https://github.com/rust-lang/rust/commit/3a11cd428902feafdc70c279d2dbc950f580db3f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3a11cd428902feafdc70c279d2dbc950f580db3f/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f5d868c9edfc6c2a9310d564a2f738bec67dfd6b", "url": "https://api.github.com/repos/rust-lang/rust/commits/f5d868c9edfc6c2a9310d564a2f738bec67dfd6b", "html_url": "https://github.com/rust-lang/rust/commit/f5d868c9edfc6c2a9310d564a2f738bec67dfd6b"}], "stats": {"total": 24, "additions": 3, "deletions": 21}, "files": [{"sha": "67c0de9349698a63ea2085ecf15ddba655f19af3", "filename": "clippy_lints/src/consts.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3a11cd428902feafdc70c279d2dbc950f580db3f/clippy_lints%2Fsrc%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a11cd428902feafdc70c279d2dbc950f580db3f/clippy_lints%2Fsrc%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fconsts.rs?ref=3a11cd428902feafdc70c279d2dbc950f580db3f", "patch": "@@ -293,7 +293,7 @@ impl<'c, 'cc> ConstEvalLateContext<'c, 'cc> {\n                     instance,\n                     promoted: None,\n                 };\n-                \n+\n                 let result = self.tcx.const_eval(self.param_env.and(gid)).ok()?;\n                 let ret = miri_to_const(self.tcx, result);\n                 if ret.is_some() {"}, {"sha": "9bead9c1d8697a47649c11c98f6f3531073fd4cf", "filename": "clippy_lints/src/drop_forget_ref.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3a11cd428902feafdc70c279d2dbc950f580db3f/clippy_lints%2Fsrc%2Fdrop_forget_ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a11cd428902feafdc70c279d2dbc950f580db3f/clippy_lints%2Fsrc%2Fdrop_forget_ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdrop_forget_ref.rs?ref=3a11cd428902feafdc70c279d2dbc950f580db3f", "patch": "@@ -116,7 +116,6 @@ const DROP_COPY_SUMMARY: &str = \"calls to `std::mem::drop` with a value that imp\n const FORGET_COPY_SUMMARY: &str = \"calls to `std::mem::forget` with a value that implements Copy. \\\n                                    Forgetting a copy leaves the original intact.\";\n \n-#[allow(missing_copy_implementations)]\n pub struct Pass;\n \n impl LintPass for Pass {"}, {"sha": "121a33f9475f21667247e703c2ebe7c34c7f1888", "filename": "clippy_lints/src/enum_variants.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3a11cd428902feafdc70c279d2dbc950f580db3f/clippy_lints%2Fsrc%2Fenum_variants.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a11cd428902feafdc70c279d2dbc950f580db3f/clippy_lints%2Fsrc%2Fenum_variants.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fenum_variants.rs?ref=3a11cd428902feafdc70c279d2dbc950f580db3f", "patch": "@@ -156,8 +156,6 @@ fn partial_rmatch(post: &str, name: &str) -> usize {\n         .count()\n }\n \n-// FIXME: #600\n-#[allow(clippy::while_let_on_iterator)]\n fn check_variant(\n     cx: &EarlyContext<'_>,\n     threshold: u64,"}, {"sha": "95191b471a871f9033be8b94fa91a8a6a8d01e5d", "filename": "clippy_lints/src/eta_reduction.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3a11cd428902feafdc70c279d2dbc950f580db3f/clippy_lints%2Fsrc%2Feta_reduction.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a11cd428902feafdc70c279d2dbc950f580db3f/clippy_lints%2Fsrc%2Feta_reduction.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Feta_reduction.rs?ref=3a11cd428902feafdc70c279d2dbc950f580db3f", "patch": "@@ -15,7 +15,6 @@ use crate::rustc::hir::*;\n use crate::utils::{is_adjusted, iter_input_pats, snippet_opt, span_lint_and_then};\n use crate::rustc_errors::Applicability;\n \n-#[allow(missing_copy_implementations)]\n pub struct EtaPass;\n \n "}, {"sha": "3debe567cda12717ec0c99bff3d4965f50d29968", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3a11cd428902feafdc70c279d2dbc950f580db3f/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a11cd428902feafdc70c279d2dbc950f580db3f/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=3a11cd428902feafdc70c279d2dbc950f580db3f", "patch": "@@ -15,7 +15,7 @@\n #![feature(slice_patterns)]\n #![feature(stmt_expr_attributes)]\n #![feature(range_contains)]\n-#![allow(clippy::shadow_reuse, clippy::missing_docs_in_private_items)]\n+#![allow(clippy::missing_docs_in_private_items)]\n #![recursion_limit = \"256\"]\n #![feature(macro_at_most_once_rep)]\n \n@@ -1005,7 +1005,7 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry<'_>, conf: &Conf) {\n \n // only exists to let the dogfood integration test works.\n // Don't run clippy as an executable directly\n-#[allow(dead_code, clippy::print_stdout)]\n+#[allow(dead_code)]\n fn main() {\n     panic!(\"Please use the cargo-clippy executable\");\n }"}, {"sha": "4a3fcfc853e7637243887a37f3916e61003e7f14", "filename": "clippy_lints/src/minmax.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3a11cd428902feafdc70c279d2dbc950f580db3f/clippy_lints%2Fsrc%2Fminmax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a11cd428902feafdc70c279d2dbc950f580db3f/clippy_lints%2Fsrc%2Fminmax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fminmax.rs?ref=3a11cd428902feafdc70c279d2dbc950f580db3f", "patch": "@@ -35,7 +35,6 @@ declare_clippy_lint! {\n     \"`min(_, max(_, _))` (or vice versa) with bounds clamping the result to a constant\"\n }\n \n-#[allow(missing_copy_implementations)]\n pub struct MinMaxPass;\n \n impl LintPass for MinMaxPass {"}, {"sha": "68b989721af105949a3060de1809967cd076915b", "filename": "clippy_lints/src/panic_unimplemented.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3a11cd428902feafdc70c279d2dbc950f580db3f/clippy_lints%2Fsrc%2Fpanic_unimplemented.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a11cd428902feafdc70c279d2dbc950f580db3f/clippy_lints%2Fsrc%2Fpanic_unimplemented.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fpanic_unimplemented.rs?ref=3a11cd428902feafdc70c279d2dbc950f580db3f", "patch": "@@ -52,7 +52,6 @@ declare_clippy_lint! {\n     \"`unimplemented!` should not be present in production code\"\n }\n \n-#[allow(missing_copy_implementations)]\n pub struct Pass;\n \n impl LintPass for Pass {"}, {"sha": "130b1144329438d690a012288fea8d675daa1527", "filename": "clippy_lints/src/redundant_pattern_matching.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3a11cd428902feafdc70c279d2dbc950f580db3f/clippy_lints%2Fsrc%2Fredundant_pattern_matching.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a11cd428902feafdc70c279d2dbc950f580db3f/clippy_lints%2Fsrc%2Fredundant_pattern_matching.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fredundant_pattern_matching.rs?ref=3a11cd428902feafdc70c279d2dbc950f580db3f", "patch": "@@ -63,7 +63,6 @@ impl LintPass for Pass {\n }\n \n impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Pass {\n-    #[allow(clippy::similar_names)]\n     fn check_expr(&mut self, cx: &LateContext<'a, 'tcx>, expr: &'tcx Expr) {\n         if let ExprKind::Match(ref op, ref arms, ref match_source) = expr.node {\n             match match_source {"}, {"sha": "c9068be838ff5e8a21b85f6fb3df26336d5a6141", "filename": "clippy_lints/src/types.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3a11cd428902feafdc70c279d2dbc950f580db3f/clippy_lints%2Fsrc%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a11cd428902feafdc70c279d2dbc950f580db3f/clippy_lints%2Fsrc%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftypes.rs?ref=3a11cd428902feafdc70c279d2dbc950f580db3f", "patch": "@@ -34,7 +34,6 @@ use crate::utils::paths;\n use crate::consts::{constant, Constant};\n \n /// Handles all the linting of funky types\n-#[allow(missing_copy_implementations)]\n pub struct TypePass;\n \n /// **What it does:** Checks for use of `Box<Vec<_>>` anywhere in the code.\n@@ -371,7 +370,6 @@ fn is_any_trait(t: &hir::Ty) -> bool {\n     false\n }\n \n-#[allow(missing_copy_implementations)]\n pub struct LetPass;\n \n /// **What it does:** Checks for binding a unit value.\n@@ -447,7 +445,6 @@ declare_clippy_lint! {\n     \"comparing unit values\"\n }\n \n-#[allow(missing_copy_implementations)]\n pub struct UnitCmp;\n \n impl LintPass for UnitCmp {\n@@ -1142,7 +1139,6 @@ declare_clippy_lint! {\n     \"usage of very complex types that might be better factored into `type` definitions\"\n }\n \n-#[allow(missing_copy_implementations)]\n pub struct TypeComplexityPass {\n     threshold: u64,\n }"}, {"sha": "d88a70e4e49692950c301132a2290a35d3d8bb47", "filename": "clippy_lints/src/utils/author.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3a11cd428902feafdc70c279d2dbc950f580db3f/clippy_lints%2Fsrc%2Futils%2Fauthor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a11cd428902feafdc70c279d2dbc950f580db3f/clippy_lints%2Fsrc%2Futils%2Fauthor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fauthor.rs?ref=3a11cd428902feafdc70c279d2dbc950f580db3f", "patch": "@@ -11,8 +11,6 @@\n //! A group of attributes that can be attached to Rust code in order\n //! to generate a clippy lint detecting said code automatically.\n \n-#![allow(clippy::print_stdout, clippy::use_debug)]\n-\n use crate::rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use crate::rustc::{declare_tool_lint, lint_array};\n use crate::rustc::hir;"}, {"sha": "e750c1c9bce31f1eb2b4435024461ce705b763d7", "filename": "clippy_lints/src/utils/inspector.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3a11cd428902feafdc70c279d2dbc950f580db3f/clippy_lints%2Fsrc%2Futils%2Finspector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a11cd428902feafdc70c279d2dbc950f580db3f/clippy_lints%2Fsrc%2Futils%2Finspector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Finspector.rs?ref=3a11cd428902feafdc70c279d2dbc950f580db3f", "patch": "@@ -8,8 +8,6 @@\n // except according to those terms.\n \n \n-#![allow(clippy::print_stdout, clippy::use_debug)]\n-\n //! checks for attributes\n \n use crate::rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};"}, {"sha": "f99c37b85198c90e1ade69e0991ef1f3528bbd20", "filename": "src/driver.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3a11cd428902feafdc70c279d2dbc950f580db3f/src%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a11cd428902feafdc70c279d2dbc950f580db3f/src%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdriver.rs?ref=3a11cd428902feafdc70c279d2dbc950f580db3f", "patch": "@@ -27,7 +27,6 @@ use std::convert::TryInto;\n use std::path::Path;\n use std::process::{exit, Command};\n \n-#[allow(clippy::print_stdout)]\n fn show_version() {\n     println!(env!(\"CARGO_PKG_VERSION\"));\n }"}, {"sha": "be28fe12899c01d4eec2380ec284ed6755a87cd4", "filename": "src/main.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3a11cd428902feafdc70c279d2dbc950f580db3f/src%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a11cd428902feafdc70c279d2dbc950f580db3f/src%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmain.rs?ref=3a11cd428902feafdc70c279d2dbc950f580db3f", "patch": "@@ -41,12 +41,10 @@ it to allow or deny lints from the code, eg.:\n     #[cfg_attr(feature = \"cargo-clippy\", allow(needless_lifetimes))]\n \"#;\n \n-#[allow(clippy::print_stdout)]\n fn show_help() {\n     println!(\"{}\", CARGO_CLIPPY_HELP);\n }\n \n-#[allow(clippy::print_stdout)]\n fn show_version() {\n     let version_info = rustc_tools_util::get_version_info!();\n     println!(\"{}\", version_info);"}]}