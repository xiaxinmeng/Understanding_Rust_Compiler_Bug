{"sha": "fbdd0e815c80d0c7dde62cc541e866440039bafc", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZiZGQwZTgxNWM4MGQwYzdkZGU2MmNjNTQxZTg2NjQ0MDAzOWJhZmM=", "commit": {"author": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2018-04-23T04:32:36Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-04-23T04:32:36Z"}, "message": "Merge pull request #2640 from rizakrko/master\n\nkeep auto trait", "tree": {"sha": "3d6828fc021e730634581b8aadbf63e884dd8072", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3d6828fc021e730634581b8aadbf63e884dd8072"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fbdd0e815c80d0c7dde62cc541e866440039bafc", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJa3WHkCRBK7hj4Ov3rIwAAdHIIAJ9wRVqSbVJR1pgNJR4zOWm2\nlhYhsO8RoKTwH31qxG0sfvx/Y9Vctr/SULL22wYy/ScKSSjFAY+zgN2IlVTWZ7kR\nx6pPmikcxT3AxrUZp56R/jBm5L/C1GbLd21t1lsPn6pSG5osb3nQP4kmjELMa6gR\ntXuukpAu7uhYl3tJokP51zVUUdHo56H/XLUe/VzkSt8X2oGd1VLh16tnFQbINXn2\nZIgBgWtlb9iWoe42QGP3fSJiIiD88kBz7tDgClWEzXR/2irk7evk8a0fXX9bekHz\n8coKV+dGgcm7OmO0g/INGaAC4puks3GQ55peAvCAX9Qt9SN4eMG4UzGIo2qh7Ns=\n=YVMR\n-----END PGP SIGNATURE-----\n", "payload": "tree 3d6828fc021e730634581b8aadbf63e884dd8072\nparent 866900449aee9281c88076076b8bc558a8aa5140\nparent 92b14f0778cd6debd176a4d54b286f7f8092970a\nauthor Nick Cameron <nrc@ncameron.org> 1524457956 +1200\ncommitter GitHub <noreply@github.com> 1524457956 +1200\n\nMerge pull request #2640 from rizakrko/master\n\nkeep auto trait"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fbdd0e815c80d0c7dde62cc541e866440039bafc", "html_url": "https://github.com/rust-lang/rust/commit/fbdd0e815c80d0c7dde62cc541e866440039bafc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fbdd0e815c80d0c7dde62cc541e866440039bafc/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "866900449aee9281c88076076b8bc558a8aa5140", "url": "https://api.github.com/repos/rust-lang/rust/commits/866900449aee9281c88076076b8bc558a8aa5140", "html_url": "https://github.com/rust-lang/rust/commit/866900449aee9281c88076076b8bc558a8aa5140"}, {"sha": "92b14f0778cd6debd176a4d54b286f7f8092970a", "url": "https://api.github.com/repos/rust-lang/rust/commits/92b14f0778cd6debd176a4d54b286f7f8092970a", "html_url": "https://github.com/rust-lang/rust/commit/92b14f0778cd6debd176a4d54b286f7f8092970a"}], "stats": {"total": 33, "additions": 26, "deletions": 7}, "files": [{"sha": "91db82cd9ede39af34de3adc032548a075f7e1b5", "filename": "src/items.rs", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/fbdd0e815c80d0c7dde62cc541e866440039bafc/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbdd0e815c80d0c7dde62cc541e866440039bafc/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=fbdd0e815c80d0c7dde62cc541e866440039bafc", "patch": "@@ -32,9 +32,9 @@ use rewrite::{Rewrite, RewriteContext};\n use shape::{Indent, Shape};\n use spanned::Spanned;\n use types::TraitTyParamBounds;\n-use utils::{colon_spaces, contains_skip, first_line_width, format_abi, format_constness,\n-            format_defaultness, format_mutability, format_unsafety, format_visibility,\n-            is_attributes_extendable, last_line_contains_single_line_comment,\n+use utils::{colon_spaces, contains_skip, first_line_width, format_abi, format_auto,\n+            format_constness, format_defaultness, format_mutability, format_unsafety,\n+            format_visibility, is_attributes_extendable, last_line_contains_single_line_comment,\n             last_line_used_width, last_line_width, mk_sp, semicolon_for_expr, starts_with_newline,\n             stmt_expr, trimmed_last_line_width};\n use vertical::rewrite_with_alignment;\n@@ -936,16 +936,21 @@ fn format_struct(\n }\n \n pub fn format_trait(context: &RewriteContext, item: &ast::Item, offset: Indent) -> Option<String> {\n-    if let ast::ItemKind::Trait(_, unsafety, ref generics, ref type_param_bounds, ref trait_items) =\n-        item.node\n+    if let ast::ItemKind::Trait(\n+        is_auto,\n+        unsafety,\n+        ref generics,\n+        ref type_param_bounds,\n+        ref trait_items,\n+    ) = item.node\n     {\n         let mut result = String::with_capacity(128);\n         let header = format!(\n-            \"{}{}trait \",\n+            \"{}{}{}trait \",\n+            format_auto(is_auto),\n             format_visibility(&item.vis),\n             format_unsafety(unsafety),\n         );\n-\n         result.push_str(&header);\n \n         let body_lo = context.snippet_provider.span_after(item.span, \"{\");"}, {"sha": "2493c9a5c7439f61536e5aa74a6ec94d4c49313e", "filename": "src/utils.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/fbdd0e815c80d0c7dde62cc541e866440039bafc/src%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbdd0e815c80d0c7dde62cc541e866440039bafc/src%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Futils.rs?ref=fbdd0e815c80d0c7dde62cc541e866440039bafc", "patch": "@@ -81,6 +81,14 @@ pub fn format_unsafety(unsafety: ast::Unsafety) -> &'static str {\n     }\n }\n \n+#[inline]\n+pub fn format_auto(is_auto: ast::IsAuto) -> &'static str {\n+    match is_auto {\n+        ast::IsAuto::Yes => \"auto \",\n+        ast::IsAuto::No => \"\",\n+    }\n+}\n+\n #[inline]\n pub fn format_mutability(mutability: ast::Mutability) -> &'static str {\n     match mutability {"}, {"sha": "b3cf4dae721d38e3fcc9f3bd92341e60a1bc6297", "filename": "tests/source/trait.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/fbdd0e815c80d0c7dde62cc541e866440039bafc/tests%2Fsource%2Ftrait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbdd0e815c80d0c7dde62cc541e866440039bafc/tests%2Fsource%2Ftrait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Ftrait.rs?ref=fbdd0e815c80d0c7dde62cc541e866440039bafc", "patch": "@@ -92,3 +92,6 @@ trait AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\n #[rustfmt_skip]\n trait FooBar = Foo\n     + Bar;\n+\n+// #2637\n+auto trait Example {}"}, {"sha": "ed7d3bc56f1becdfe03951f45a8aa0f788ad3421", "filename": "tests/target/trait.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/fbdd0e815c80d0c7dde62cc541e866440039bafc/tests%2Ftarget%2Ftrait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbdd0e815c80d0c7dde62cc541e866440039bafc/tests%2Ftarget%2Ftrait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Ftrait.rs?ref=fbdd0e815c80d0c7dde62cc541e866440039bafc", "patch": "@@ -130,3 +130,6 @@ trait AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\n #[rustfmt_skip]\n trait FooBar = Foo\n     + Bar;\n+\n+// #2637\n+auto trait Example {}"}]}