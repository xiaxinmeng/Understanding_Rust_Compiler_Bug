{"sha": "eae08b25a6da51eac515a270c4216324901057a6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVhZTA4YjI1YTZkYTUxZWFjNTE1YTI3MGM0MjE2MzI0OTAxMDU3YTY=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-01-05T17:14:32Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-01-05T17:14:32Z"}, "message": "Rollup merge of #67879 - ollie27:float_sqrt_neg, r=rkruppe\n\nRemove negative number check from float sqrt\n\nIt hasn't been UB to pass negative numbers to sqrt since https://reviews.llvm.org/D28797 which was included in LLVM 5.", "tree": {"sha": "5057e28336014cef89dcf0bf9cfce447321058fb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5057e28336014cef89dcf0bf9cfce447321058fb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eae08b25a6da51eac515a270c4216324901057a6", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeEhl4CRBK7hj4Ov3rIwAAdHIIADnizfSJSVSqR3v9z6G/rgvK\nxPV7ZOGBStrRlYgMHFDK9hqjgzT7LuznOQkd36e8pG2ckKt5nqhamoxTt1cZol22\nc+pSi6TmNJDjzVKqT1RYcLBTpZmyFVDTN8pebmgm9I+qHsXcbjpykA1dVQGKHt6x\nl1v5nDjBz1igxo3gwfcHFJumnrTq6vPGNJq/GwUYdKdcFAslX2yiYnMVYdrHeo1f\n70TPdw5pI6LXYPI8YPEepTEOkus1hiDvx5YiZJA+YPr4u81moUePhCYsAqengplH\n9cQRmQ2+numDxr64/JrzsloU0rsXOl2C6iUryxk6Qm5BViuhx9SR/Mkkaqo5Ejk=\n=Rmfh\n-----END PGP SIGNATURE-----\n", "payload": "tree 5057e28336014cef89dcf0bf9cfce447321058fb\nparent 59f8ba3a4e7f43be18e400e83c146bc87975cd4b\nparent a35b4234df9815e7741aff8fe7cc4dfde12dcc2c\nauthor Dylan DPC <dylan.dpc@gmail.com> 1578244472 +0530\ncommitter GitHub <noreply@github.com> 1578244472 +0530\n\nRollup merge of #67879 - ollie27:float_sqrt_neg, r=rkruppe\n\nRemove negative number check from float sqrt\n\nIt hasn't been UB to pass negative numbers to sqrt since https://reviews.llvm.org/D28797 which was included in LLVM 5.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eae08b25a6da51eac515a270c4216324901057a6", "html_url": "https://github.com/rust-lang/rust/commit/eae08b25a6da51eac515a270c4216324901057a6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eae08b25a6da51eac515a270c4216324901057a6/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "59f8ba3a4e7f43be18e400e83c146bc87975cd4b", "url": "https://api.github.com/repos/rust-lang/rust/commits/59f8ba3a4e7f43be18e400e83c146bc87975cd4b", "html_url": "https://github.com/rust-lang/rust/commit/59f8ba3a4e7f43be18e400e83c146bc87975cd4b"}, {"sha": "a35b4234df9815e7741aff8fe7cc4dfde12dcc2c", "url": "https://api.github.com/repos/rust-lang/rust/commits/a35b4234df9815e7741aff8fe7cc4dfde12dcc2c", "html_url": "https://github.com/rust-lang/rust/commit/a35b4234df9815e7741aff8fe7cc4dfde12dcc2c"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "267d7013b1e420721e38ab3632c741bc55ffb69e", "filename": "src/libstd/f32.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eae08b25a6da51eac515a270c4216324901057a6/src%2Flibstd%2Ff32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eae08b25a6da51eac515a270c4216324901057a6/src%2Flibstd%2Ff32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ff32.rs?ref=eae08b25a6da51eac515a270c4216324901057a6", "patch": "@@ -376,7 +376,7 @@ impl f32 {\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[inline]\n     pub fn sqrt(self) -> f32 {\n-        if self < 0.0 { NAN } else { unsafe { intrinsics::sqrtf32(self) } }\n+        unsafe { intrinsics::sqrtf32(self) }\n     }\n \n     /// Returns `e^(self)`, (the exponential function)."}, {"sha": "61ce7b29e26fc306d71d98e8814277bb510cdc41", "filename": "src/libstd/f64.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eae08b25a6da51eac515a270c4216324901057a6/src%2Flibstd%2Ff64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eae08b25a6da51eac515a270c4216324901057a6/src%2Flibstd%2Ff64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ff64.rs?ref=eae08b25a6da51eac515a270c4216324901057a6", "patch": "@@ -342,7 +342,7 @@ impl f64 {\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[inline]\n     pub fn sqrt(self) -> f64 {\n-        if self < 0.0 { NAN } else { unsafe { intrinsics::sqrtf64(self) } }\n+        unsafe { intrinsics::sqrtf64(self) }\n     }\n \n     /// Returns `e^(self)`, (the exponential function)."}]}