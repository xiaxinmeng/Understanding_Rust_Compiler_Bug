{"sha": "96102b39455d414ec5966cb4547f5317f3cada15", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk2MTAyYjM5NDU1ZDQxNGVjNTk2NmNiNDU0N2Y1MzE3ZjNjYWRhMTU=", "commit": {"author": {"name": "chromatic", "email": "chromatic@wgz.org", "date": "2014-02-18T02:38:23Z"}, "committer": {"name": "chromatic", "email": "chromatic@wgz.org", "date": "2014-02-18T03:35:59Z"}, "message": "Made fail_bounds_check more careful with strings.\n\nFixes GH #11976.", "tree": {"sha": "042091b4e01ba00fa86e6588a624f0030cd67a8c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/042091b4e01ba00fa86e6588a624f0030cd67a8c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/96102b39455d414ec5966cb4547f5317f3cada15", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/96102b39455d414ec5966cb4547f5317f3cada15", "html_url": "https://github.com/rust-lang/rust/commit/96102b39455d414ec5966cb4547f5317f3cada15", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/96102b39455d414ec5966cb4547f5317f3cada15/comments", "author": {"login": "chromatic", "id": 50255, "node_id": "MDQ6VXNlcjUwMjU1", "avatar_url": "https://avatars.githubusercontent.com/u/50255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chromatic", "html_url": "https://github.com/chromatic", "followers_url": "https://api.github.com/users/chromatic/followers", "following_url": "https://api.github.com/users/chromatic/following{/other_user}", "gists_url": "https://api.github.com/users/chromatic/gists{/gist_id}", "starred_url": "https://api.github.com/users/chromatic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chromatic/subscriptions", "organizations_url": "https://api.github.com/users/chromatic/orgs", "repos_url": "https://api.github.com/users/chromatic/repos", "events_url": "https://api.github.com/users/chromatic/events{/privacy}", "received_events_url": "https://api.github.com/users/chromatic/received_events", "type": "User", "site_admin": false}, "committer": {"login": "chromatic", "id": 50255, "node_id": "MDQ6VXNlcjUwMjU1", "avatar_url": "https://avatars.githubusercontent.com/u/50255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chromatic", "html_url": "https://github.com/chromatic", "followers_url": "https://api.github.com/users/chromatic/followers", "following_url": "https://api.github.com/users/chromatic/following{/other_user}", "gists_url": "https://api.github.com/users/chromatic/gists{/gist_id}", "starred_url": "https://api.github.com/users/chromatic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chromatic/subscriptions", "organizations_url": "https://api.github.com/users/chromatic/orgs", "repos_url": "https://api.github.com/users/chromatic/repos", "events_url": "https://api.github.com/users/chromatic/events{/privacy}", "received_events_url": "https://api.github.com/users/chromatic/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "93a2ee807abafa25555b17b6432d02db53f9e756", "url": "https://api.github.com/repos/rust-lang/rust/commits/93a2ee807abafa25555b17b6432d02db53f9e756", "html_url": "https://github.com/rust-lang/rust/commit/93a2ee807abafa25555b17b6432d02db53f9e756"}], "stats": {"total": 14, "additions": 12, "deletions": 2}, "files": [{"sha": "8818cb0d270b6cc2c4bbfbe3e4f339a7240b5747", "filename": "src/libstd/unstable/lang.rs", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/96102b39455d414ec5966cb4547f5317f3cada15/src%2Flibstd%2Funstable%2Flang.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96102b39455d414ec5966cb4547f5317f3cada15/src%2Flibstd%2Funstable%2Flang.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Funstable%2Flang.rs?ref=96102b39455d414ec5966cb4547f5317f3cada15", "patch": "@@ -10,7 +10,10 @@\n \n //! Runtime calls emitted by the compiler.\n \n-use c_str::ToCStr;\n+use c_str::CString;\n+use libc::c_char;\n+use cast;\n+use option::Some;\n \n #[cold]\n #[lang=\"fail_\"]\n@@ -23,7 +26,14 @@ pub fn fail_(expr: *u8, file: *u8, line: uint) -> ! {\n pub fn fail_bounds_check(file: *u8, line: uint, index: uint, len: uint) -> ! {\n     let msg = format!(\"index out of bounds: the len is {} but the index is {}\",\n                       len as uint, index as uint);\n-    msg.with_c_str(|buf| fail_(buf as *u8, file, line))\n+\n+    let file_str = match unsafe { CString::new(file as *c_char, false) }.as_str() {\n+        // This transmute is safe because `file` is always stored in rodata.\n+        Some(s) => unsafe { cast::transmute::<&str, &'static str>(s) },\n+        None    => \"file wasn't UTF-8 safe\"\n+    };\n+\n+    ::rt::begin_unwind(msg, file_str, line)\n }\n \n #[lang=\"malloc\"]"}]}