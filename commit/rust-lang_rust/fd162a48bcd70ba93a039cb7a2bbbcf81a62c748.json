{"sha": "fd162a48bcd70ba93a039cb7a2bbbcf81a62c748", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZkMTYyYTQ4YmNkNzBiYTkzYTAzOWNiN2EyYmJiY2Y4MWE2MmM3NDg=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-01-14T05:02:16Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-01-14T05:02:16Z"}, "message": "Rollup merge of #67854 - afnanenayet:afnan/report-external-macro-lints, r=petrochenkov\n\nUse `report_in_external_macro` for internal lints\n\nAdd the option to report lints in external macros for rustc internal lints to resolve #66370", "tree": {"sha": "b8d4aeb7c92a3ee3dfe5213aec88937174dc213f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b8d4aeb7c92a3ee3dfe5213aec88937174dc213f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fd162a48bcd70ba93a039cb7a2bbbcf81a62c748", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeHUtYCRBK7hj4Ov3rIwAAdHIIACC2ZHug+siUzFjh4CCFlqcP\nsFSXaoAd4Zw4kbduTp8S/BffCVLEwia6V7IncetOsSIFzP8WA02fkqQcimtx8m2R\njY1aeVjMOJqKKBiSSSBp7tuWho2kpESbzRENwYYtxHhy7GVNVGjh/FIaRvh+ENXq\nUP8zOxxY55w7xoYt7k/sGmzLNYS6PZ/TfuB08HeU5UM/rw6MPjEhO9zUTXVf4ev0\nhEOuRWbGdLEK7+p4BX3o+GOFvOGAe7s3dhSReN+fUXqqJMDmCzRpVeMcxC8c/NF2\nj3Un8K4h/OCE7a5TxggBUSpbh3x0ZMi8yP6UDVzl8psGwfD9KBjJlfXX+BMScNo=\n=1zmx\n-----END PGP SIGNATURE-----\n", "payload": "tree b8d4aeb7c92a3ee3dfe5213aec88937174dc213f\nparent 30ca215b4e38b32aa7abdd635c5e2d56f5724494\nparent 9d95eaa49b095c396eaee3d3cb62e60df8e81a2f\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1578978136 +0900\ncommitter GitHub <noreply@github.com> 1578978136 +0900\n\nRollup merge of #67854 - afnanenayet:afnan/report-external-macro-lints, r=petrochenkov\n\nUse `report_in_external_macro` for internal lints\n\nAdd the option to report lints in external macros for rustc internal lints to resolve #66370\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fd162a48bcd70ba93a039cb7a2bbbcf81a62c748", "html_url": "https://github.com/rust-lang/rust/commit/fd162a48bcd70ba93a039cb7a2bbbcf81a62c748", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fd162a48bcd70ba93a039cb7a2bbbcf81a62c748/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "30ca215b4e38b32aa7abdd635c5e2d56f5724494", "url": "https://api.github.com/repos/rust-lang/rust/commits/30ca215b4e38b32aa7abdd635c5e2d56f5724494", "html_url": "https://github.com/rust-lang/rust/commit/30ca215b4e38b32aa7abdd635c5e2d56f5724494"}, {"sha": "9d95eaa49b095c396eaee3d3cb62e60df8e81a2f", "url": "https://api.github.com/repos/rust-lang/rust/commits/9d95eaa49b095c396eaee3d3cb62e60df8e81a2f", "html_url": "https://github.com/rust-lang/rust/commit/9d95eaa49b095c396eaee3d3cb62e60df8e81a2f"}], "stats": {"total": 13, "additions": 9, "deletions": 4}, "files": [{"sha": "5a5aedc2e9715b33bff96069e1868ab2b43fa0d7", "filename": "src/librustc_lint/internal.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/fd162a48bcd70ba93a039cb7a2bbbcf81a62c748/src%2Flibrustc_lint%2Finternal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd162a48bcd70ba93a039cb7a2bbbcf81a62c748/src%2Flibrustc_lint%2Finternal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Finternal.rs?ref=fd162a48bcd70ba93a039cb7a2bbbcf81a62c748", "patch": "@@ -12,7 +12,8 @@ use syntax::ast::{Ident, Item, ItemKind};\n declare_tool_lint! {\n     pub rustc::DEFAULT_HASH_TYPES,\n     Allow,\n-    \"forbid HashMap and HashSet and suggest the FxHash* variants\"\n+    \"forbid HashMap and HashSet and suggest the FxHash* variants\",\n+    report_in_external_macro: true\n }\n \n pub struct DefaultHashTypes {\n@@ -52,19 +53,22 @@ impl EarlyLintPass for DefaultHashTypes {\n declare_tool_lint! {\n     pub rustc::USAGE_OF_TY_TYKIND,\n     Allow,\n-    \"usage of `ty::TyKind` outside of the `ty::sty` module\"\n+    \"usage of `ty::TyKind` outside of the `ty::sty` module\",\n+    report_in_external_macro: true\n }\n \n declare_tool_lint! {\n     pub rustc::TY_PASS_BY_REFERENCE,\n     Allow,\n-    \"passing `Ty` or `TyCtxt` by reference\"\n+    \"passing `Ty` or `TyCtxt` by reference\",\n+    report_in_external_macro: true\n }\n \n declare_tool_lint! {\n     pub rustc::USAGE_OF_QUALIFIED_TY,\n     Allow,\n-    \"using `ty::{Ty,TyCtxt}` instead of importing it\"\n+    \"using `ty::{Ty,TyCtxt}` instead of importing it\",\n+    report_in_external_macro: true\n }\n \n declare_lint_pass!(TyTyKind => ["}, {"sha": "889f6099070aebc863863ff68c56d28157ca4a2f", "filename": "src/librustc_span/symbol.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fd162a48bcd70ba93a039cb7a2bbbcf81a62c748/src%2Flibrustc_span%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd162a48bcd70ba93a039cb7a2bbbcf81a62c748/src%2Flibrustc_span%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_span%2Fsymbol.rs?ref=fd162a48bcd70ba93a039cb7a2bbbcf81a62c748", "patch": "@@ -1049,6 +1049,7 @@ pub mod kw {\n }\n \n // This module has a very short name because it's used a lot.\n+#[allow(rustc::default_hash_types)]\n pub mod sym {\n     use super::Symbol;\n     use std::convert::TryInto;"}]}