{"sha": "1e0e089185226217a71f50684c11c2e129f12c2e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFlMGUwODkxODUyMjYyMTdhNzFmNTA2ODRjMTFjMmUxMjlmMTJjMmU=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-03-14T23:50:20Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-03-14T23:50:20Z"}, "message": "rustc: Fix a couple of bugs that prevented taking addresses of rvalues", "tree": {"sha": "5eb18de14b324e9e96018768976840a14071dece", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5eb18de14b324e9e96018768976840a14071dece"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1e0e089185226217a71f50684c11c2e129f12c2e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1e0e089185226217a71f50684c11c2e129f12c2e", "html_url": "https://github.com/rust-lang/rust/commit/1e0e089185226217a71f50684c11c2e129f12c2e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1e0e089185226217a71f50684c11c2e129f12c2e/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b516913a5d46dc32d47b7846bb510fc029e660b3", "url": "https://api.github.com/repos/rust-lang/rust/commits/b516913a5d46dc32d47b7846bb510fc029e660b3", "html_url": "https://github.com/rust-lang/rust/commit/b516913a5d46dc32d47b7846bb510fc029e660b3"}], "stats": {"total": 15, "additions": 8, "deletions": 7}, "files": [{"sha": "745b3a837a8712e43d41ae7d7f6950ea3606c011", "filename": "src/rustc/middle/region.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1e0e089185226217a71f50684c11c2e129f12c2e/src%2Frustc%2Fmiddle%2Fregion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e0e089185226217a71f50684c11c2e129f12c2e/src%2Frustc%2Fmiddle%2Fregion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Fregion.rs?ref=1e0e089185226217a71f50684c11c2e129f12c2e", "patch": "@@ -254,12 +254,12 @@ fn resolve_expr(expr: @ast::expr, cx: ctxt, visitor: visit::vt<ctxt>) {\n             }\n             visit::visit_expr(expr, cx, visitor);\n         }\n-        ast::expr_addr_of(_, _) | ast::expr_alt(_, _, _) {\n+        ast::expr_addr_of(_, subexpr) | ast::expr_alt(subexpr, _, _) {\n             // Record the block that this expression appears in, in case the\n             // operand is an rvalue.\n             alt cx.parent {\n                 pa_block(blk_id) {\n-                    cx.region_map.rvalue_to_block.insert(expr.id, blk_id);\n+                    cx.region_map.rvalue_to_block.insert(subexpr.id, blk_id);\n                 }\n                 _ { cx.sess.span_bug(expr.span, \"expr outside of block?!\"); }\n             }"}, {"sha": "dc99fd1678a6827effdedc4c467e1b2c8771b6d5", "filename": "src/rustc/middle/trans/base.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/1e0e089185226217a71f50684c11c2e129f12c2e/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e0e089185226217a71f50684c11c2e129f12c2e/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs?ref=1e0e089185226217a71f50684c11c2e129f12c2e", "patch": "@@ -1649,11 +1649,12 @@ fn trans_unary(bcx: block, op: ast::unop, e: @ast::expr,\n }\n \n fn trans_addr_of(cx: block, e: @ast::expr, dest: dest) -> block {\n-    // FIXME: This is wrong.\n     let {bcx, val, kind} = trans_temp_lval(cx, e);\n-    if kind != owned {\n-        bcx.sess().span_bug(e.span,\n-                            \"can't take the address of an rvalue\");\n+    let ety = expr_ty(cx, e);\n+    let is_immediate = ty::type_is_immediate(ety);\n+    if (kind == temporary && is_immediate) || kind == owned_imm {\n+        let {bcx: bcx2, val: val2} = do_spill(cx, val, ety);\n+        bcx = bcx2; val = val2;\n     }\n     ret store_in_dest(bcx, val, dest);\n }"}, {"sha": "2bb2317ec40dff422f61c38f73f1ed8194013cda", "filename": "src/rustc/middle/typeck.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1e0e089185226217a71f50684c11c2e129f12c2e/src%2Frustc%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e0e089185226217a71f50684c11c2e129f12c2e/src%2Frustc%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftypeck.rs?ref=1e0e089185226217a71f50684c11c2e129f12c2e", "patch": "@@ -2492,7 +2492,7 @@ fn check_expr_with_unifier(fcx: @fn_ctxt, expr: @ast::expr, unify: unifier,\n       ast::expr_alt(discrim, arms, _) {\n         bot = check_expr(fcx, discrim);\n \n-        let parent_block = tcx.region_map.rvalue_to_block.get(expr.id);\n+        let parent_block = tcx.region_map.rvalue_to_block.get(discrim.id);\n \n         // Typecheck the patterns first, so that we get types for all the\n         // bindings."}]}