{"sha": "092af6fb764207693a01bb37ce4e38ddb8010e1e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA5MmFmNmZiNzY0MjA3NjkzYTAxYmIzN2NlNGUzOGRkYjgwMTBlMWU=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-11-25T22:44:04Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-11-25T22:44:04Z"}, "message": "Typecheck tup expressions.", "tree": {"sha": "d591f945f6a8ba1769b7f19f4975928721996d8b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d591f945f6a8ba1769b7f19f4975928721996d8b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/092af6fb764207693a01bb37ce4e38ddb8010e1e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/092af6fb764207693a01bb37ce4e38ddb8010e1e", "html_url": "https://github.com/rust-lang/rust/commit/092af6fb764207693a01bb37ce4e38ddb8010e1e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/092af6fb764207693a01bb37ce4e38ddb8010e1e/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cffdb66aa42b6c5a1d30a1b4364d65f409976202", "url": "https://api.github.com/repos/rust-lang/rust/commits/cffdb66aa42b6c5a1d30a1b4364d65f409976202", "html_url": "https://github.com/rust-lang/rust/commit/cffdb66aa42b6c5a1d30a1b4364d65f409976202"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "76636896f577d93e20c88c33dee9670f02d59e82", "filename": "src/comp/middle/typeck.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/092af6fb764207693a01bb37ce4e38ddb8010e1e/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/092af6fb764207693a01bb37ce4e38ddb8010e1e/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftypeck.rs?ref=092af6fb764207693a01bb37ce4e38ddb8010e1e", "patch": "@@ -1200,6 +1200,21 @@ fn check_expr(&fn_ctxt fcx, @ast.expr expr) -> @ast.expr {\n                                                       ast.ann_type(t_1)));\n         }\n \n+        case (ast.expr_tup(?args, _)) {\n+            let vec[tup(bool, @ast.expr)] args_1 = vec();\n+            let vec[tup(bool, @ty)] args_t = vec();\n+\n+            for (tup(bool, @ast.expr) arg in args) {\n+                auto expr_1 = check_expr(fcx, arg._1);\n+                args_1 += tup(arg._0, expr_1);\n+                args_t += tup(arg._0, expr_ty(expr_1));\n+            }\n+\n+            auto ann = ast.ann_type(plain_ty(ty_tup(args_t)));\n+            ret @fold.respan[ast.expr_](expr.span,\n+                                        ast.expr_tup(args_1, ann));\n+        }\n+\n         case (_) {\n             // TODO\n             ret expr;"}]}