{"sha": "9ae40436d2218f4b9dbdf231565f2732f1511c99", "node_id": "C_kwDOAAsO6NoAKDlhZTQwNDM2ZDIyMThmNGI5ZGJkZjIzMTU2NWYyNzMyZjE1MTFjOTk", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-12-23T10:06:17Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-12-23T10:06:17Z"}, "message": "Auto merge of #8144 - Gh0stm4chine:master, r=xFrednet\n\nAdd suggestion for neg_multiply lint\n\nThis fixes #8115 by adding a suggestion for [neg_multiply].\n\nMy first issue on Github, any feedback or input is welcome \ud83d\ude03\n\nchangelog: create a suggestion for `neg_multiply`", "tree": {"sha": "05c8f61bfed3fad9a565586052f262264e6d2b77", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/05c8f61bfed3fad9a565586052f262264e6d2b77"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9ae40436d2218f4b9dbdf231565f2732f1511c99", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9ae40436d2218f4b9dbdf231565f2732f1511c99", "html_url": "https://github.com/rust-lang/rust/commit/9ae40436d2218f4b9dbdf231565f2732f1511c99", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9ae40436d2218f4b9dbdf231565f2732f1511c99/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fea103d302f2e233c7c3454df1c4101229322fc2", "url": "https://api.github.com/repos/rust-lang/rust/commits/fea103d302f2e233c7c3454df1c4101229322fc2", "html_url": "https://github.com/rust-lang/rust/commit/fea103d302f2e233c7c3454df1c4101229322fc2"}, {"sha": "13cc4522860a70a3dc1a4c0e529be40032725c5c", "url": "https://api.github.com/repos/rust-lang/rust/commits/13cc4522860a70a3dc1a4c0e529be40032725c5c", "html_url": "https://github.com/rust-lang/rust/commit/13cc4522860a70a3dc1a4c0e529be40032725c5c"}], "stats": {"total": 120, "additions": 108, "deletions": 12}, "files": [{"sha": "0d05c83ffe45ee05804556515df1ce330e118152", "filename": "clippy_lints/src/neg_multiply.rs", "status": "modified", "additions": 21, "deletions": 4, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/9ae40436d2218f4b9dbdf231565f2732f1511c99/clippy_lints%2Fsrc%2Fneg_multiply.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ae40436d2218f4b9dbdf231565f2732f1511c99/clippy_lints%2Fsrc%2Fneg_multiply.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneg_multiply.rs?ref=9ae40436d2218f4b9dbdf231565f2732f1511c99", "patch": "@@ -1,6 +1,8 @@\n use clippy_utils::consts::{self, Constant};\n-use clippy_utils::diagnostics::span_lint;\n+use clippy_utils::diagnostics::span_lint_and_sugg;\n+use clippy_utils::source::snippet_with_applicability;\n use if_chain::if_chain;\n+use rustc_errors::Applicability;\n use rustc_hir::{BinOpKind, Expr, ExprKind, UnOp};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n@@ -18,12 +20,16 @@ declare_clippy_lint! {\n     ///\n     /// ### Example\n     /// ```ignore\n-    /// x * -1\n+    /// // Bad\n+    /// let a = x * -1;\n+    ///\n+    /// // Good\n+    /// let b = -x;\n     /// ```\n     #[clippy::version = \"pre 1.29.0\"]\n     pub NEG_MULTIPLY,\n     style,\n-    \"multiplying integers with `-1`\"\n+    \"multiplying integers by `-1`\"\n }\n \n declare_lint_pass!(NegMultiply => [NEG_MULTIPLY]);\n@@ -49,8 +55,19 @@ fn check_mul(cx: &LateContext<'_>, span: Span, lit: &Expr<'_>, exp: &Expr<'_>) {\n         if let ExprKind::Lit(ref l) = lit.kind;\n         if consts::lit_to_constant(&l.node, cx.typeck_results().expr_ty_opt(lit)) == Constant::Int(1);\n         if cx.typeck_results().expr_ty(exp).is_integral();\n+\n         then {\n-            span_lint(cx, NEG_MULTIPLY, span, \"negation by multiplying with `-1`\");\n+            let mut applicability = Applicability::MachineApplicable;\n+            let suggestion = format!(\"-{}\", snippet_with_applicability(cx, exp.span, \"..\", &mut applicability));\n+            span_lint_and_sugg(\n+                    cx,\n+                    NEG_MULTIPLY,\n+                    span,\n+                    \"this multiplication by -1 can be written more succinctly\",\n+                    \"consider using\",\n+                    suggestion,\n+                    applicability,\n+                );\n         }\n     }\n }"}, {"sha": "35af9d6ae317f5c75424dabac4dee8786776f73f", "filename": "tests/ui/neg_multiply.fixed", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/9ae40436d2218f4b9dbdf231565f2732f1511c99/tests%2Fui%2Fneg_multiply.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/9ae40436d2218f4b9dbdf231565f2732f1511c99/tests%2Fui%2Fneg_multiply.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneg_multiply.fixed?ref=9ae40436d2218f4b9dbdf231565f2732f1511c99", "patch": "@@ -0,0 +1,45 @@\n+// run-rustfix\n+#![warn(clippy::neg_multiply)]\n+#![allow(clippy::no_effect, clippy::unnecessary_operation, clippy::precedence)]\n+#![allow(unused)]\n+\n+use std::ops::Mul;\n+\n+struct X;\n+\n+impl Mul<isize> for X {\n+    type Output = X;\n+\n+    fn mul(self, _r: isize) -> Self {\n+        self\n+    }\n+}\n+\n+impl Mul<X> for isize {\n+    type Output = X;\n+\n+    fn mul(self, _r: X) -> X {\n+        X\n+    }\n+}\n+\n+fn main() {\n+    let x = 0;\n+\n+    -x;\n+\n+    -x;\n+\n+    100 + -x;\n+\n+    -(100 + x);\n+\n+    -17;\n+\n+    0xcafe | -0xff00;\n+\n+    -1 * -1; // should be ok\n+\n+    X * -1; // should be ok\n+    -1 * X; // should also be ok\n+}"}, {"sha": "7dbdb0906ceeb3e7f17c3b480b94c141f25bad01", "filename": "tests/ui/neg_multiply.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/9ae40436d2218f4b9dbdf231565f2732f1511c99/tests%2Fui%2Fneg_multiply.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ae40436d2218f4b9dbdf231565f2732f1511c99/tests%2Fui%2Fneg_multiply.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneg_multiply.rs?ref=9ae40436d2218f4b9dbdf231565f2732f1511c99", "patch": "@@ -1,5 +1,7 @@\n+// run-rustfix\n #![warn(clippy::neg_multiply)]\n-#![allow(clippy::no_effect, clippy::unnecessary_operation)]\n+#![allow(clippy::no_effect, clippy::unnecessary_operation, clippy::precedence)]\n+#![allow(unused)]\n \n use std::ops::Mul;\n \n@@ -28,6 +30,14 @@ fn main() {\n \n     -1 * x;\n \n+    100 + x * -1;\n+\n+    (100 + x) * -1;\n+\n+    -1 * 17;\n+\n+    0xcafe | 0xff00 * -1;\n+\n     -1 * -1; // should be ok\n \n     X * -1; // should be ok"}, {"sha": "dbf8fb36938cbcbdd918c9d18656e32640e695e2", "filename": "tests/ui/neg_multiply.stderr", "status": "modified", "additions": 31, "deletions": 7, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/9ae40436d2218f4b9dbdf231565f2732f1511c99/tests%2Fui%2Fneg_multiply.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9ae40436d2218f4b9dbdf231565f2732f1511c99/tests%2Fui%2Fneg_multiply.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneg_multiply.stderr?ref=9ae40436d2218f4b9dbdf231565f2732f1511c99", "patch": "@@ -1,16 +1,40 @@\n-error: negation by multiplying with `-1`\n-  --> $DIR/neg_multiply.rs:27:5\n+error: this multiplication by -1 can be written more succinctly\n+  --> $DIR/neg_multiply.rs:29:5\n    |\n LL |     x * -1;\n-   |     ^^^^^^\n+   |     ^^^^^^ help: consider using: `-x`\n    |\n    = note: `-D clippy::neg-multiply` implied by `-D warnings`\n \n-error: negation by multiplying with `-1`\n-  --> $DIR/neg_multiply.rs:29:5\n+error: this multiplication by -1 can be written more succinctly\n+  --> $DIR/neg_multiply.rs:31:5\n    |\n LL |     -1 * x;\n-   |     ^^^^^^\n+   |     ^^^^^^ help: consider using: `-x`\n+\n+error: this multiplication by -1 can be written more succinctly\n+  --> $DIR/neg_multiply.rs:33:11\n+   |\n+LL |     100 + x * -1;\n+   |           ^^^^^^ help: consider using: `-x`\n+\n+error: this multiplication by -1 can be written more succinctly\n+  --> $DIR/neg_multiply.rs:35:5\n+   |\n+LL |     (100 + x) * -1;\n+   |     ^^^^^^^^^^^^^^ help: consider using: `-(100 + x)`\n+\n+error: this multiplication by -1 can be written more succinctly\n+  --> $DIR/neg_multiply.rs:37:5\n+   |\n+LL |     -1 * 17;\n+   |     ^^^^^^^ help: consider using: `-17`\n+\n+error: this multiplication by -1 can be written more succinctly\n+  --> $DIR/neg_multiply.rs:39:14\n+   |\n+LL |     0xcafe | 0xff00 * -1;\n+   |              ^^^^^^^^^^^ help: consider using: `-0xff00`\n \n-error: aborting due to 2 previous errors\n+error: aborting due to 6 previous errors\n "}]}