{"sha": "ff11f987c669a62058267c5b71f804b03fe9954d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZmMTFmOTg3YzY2OWE2MjA1ODI2N2M1YjcxZjgwNGIwM2ZlOTk1NGQ=", "commit": {"author": {"name": "est31", "email": "MTest31@outlook.com", "date": "2017-01-26T09:37:20Z"}, "committer": {"name": "est31", "email": "MTest31@outlook.com", "date": "2017-01-26T09:38:22Z"}, "message": "drop_in_place is stable now, don't #![feature] it in the nomicon and a test\n\nIt was stable since Rust 1.8.", "tree": {"sha": "c1add3d92c2ead3dd710a28be7fa63c45c8daf76", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c1add3d92c2ead3dd710a28be7fa63c45c8daf76"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ff11f987c669a62058267c5b71f804b03fe9954d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ff11f987c669a62058267c5b71f804b03fe9954d", "html_url": "https://github.com/rust-lang/rust/commit/ff11f987c669a62058267c5b71f804b03fe9954d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ff11f987c669a62058267c5b71f804b03fe9954d/comments", "author": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "committer": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2f0463a4a4f323c4deffc861349e38c6b5091782", "url": "https://api.github.com/repos/rust-lang/rust/commits/2f0463a4a4f323c4deffc861349e38c6b5091782", "html_url": "https://github.com/rust-lang/rust/commit/2f0463a4a4f323c4deffc861349e38c6b5091782"}], "stats": {"total": 8, "additions": 3, "deletions": 5}, "files": [{"sha": "be4730cf8bce627fdb6e81c9993dd26dc05da3bf", "filename": "src/doc/nomicon/destructors.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ff11f987c669a62058267c5b71f804b03fe9954d/src%2Fdoc%2Fnomicon%2Fdestructors.md", "raw_url": "https://github.com/rust-lang/rust/raw/ff11f987c669a62058267c5b71f804b03fe9954d/src%2Fdoc%2Fnomicon%2Fdestructors.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fnomicon%2Fdestructors.md?ref=ff11f987c669a62058267c5b71f804b03fe9954d", "patch": "@@ -26,7 +26,7 @@ this is totally fine.\n For instance, a custom implementation of `Box` might write `Drop` like this:\n \n ```rust\n-#![feature(alloc, heap_api, drop_in_place, unique)]\n+#![feature(alloc, heap_api, unique)]\n \n extern crate alloc;\n \n@@ -57,7 +57,7 @@ use-after-free the `ptr` because when drop exits, it becomes inaccessible.\n However this wouldn't work:\n \n ```rust\n-#![feature(alloc, heap_api, drop_in_place, unique)]\n+#![feature(alloc, heap_api, unique)]\n \n extern crate alloc;\n \n@@ -135,7 +135,7 @@ The classic safe solution to overriding recursive drop and allowing moving out\n of Self during `drop` is to use an Option:\n \n ```rust\n-#![feature(alloc, heap_api, drop_in_place, unique)]\n+#![feature(alloc, heap_api, unique)]\n \n extern crate alloc;\n "}, {"sha": "8ce1f744dee17c73829987eee2be79679aafa8dc", "filename": "src/test/run-pass/extern_fat_drop.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ff11f987c669a62058267c5b71f804b03fe9954d/src%2Ftest%2Frun-pass%2Fextern_fat_drop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff11f987c669a62058267c5b71f804b03fe9954d/src%2Ftest%2Frun-pass%2Fextern_fat_drop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fextern_fat_drop.rs?ref=ff11f987c669a62058267c5b71f804b03fe9954d", "patch": "@@ -10,8 +10,6 @@\n \n // aux-build:fat_drop.rs\n \n-#![feature(drop_in_place)]\n-\n extern crate fat_drop;\n \n fn main() {"}]}