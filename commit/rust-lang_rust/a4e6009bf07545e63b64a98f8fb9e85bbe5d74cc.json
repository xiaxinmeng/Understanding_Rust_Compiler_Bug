{"sha": "a4e6009bf07545e63b64a98f8fb9e85bbe5d74cc", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE0ZTYwMDliZjA3NTQ1ZTYzYjY0YTk4ZjhmYjllODViYmU1ZDc0Y2M=", "commit": {"author": {"name": "Andrew Cann", "email": "shum@canndrew.org", "date": "2016-08-03T05:59:27Z"}, "committer": {"name": "Andrew Cann", "email": "shum@canndrew.org", "date": "2016-08-13T13:37:09Z"}, "message": "Minor fixups based on feedback", "tree": {"sha": "13b0006f1a1ff6c35054672cfcf28849d614bf27", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/13b0006f1a1ff6c35054672cfcf28849d614bf27"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a4e6009bf07545e63b64a98f8fb9e85bbe5d74cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a4e6009bf07545e63b64a98f8fb9e85bbe5d74cc", "html_url": "https://github.com/rust-lang/rust/commit/a4e6009bf07545e63b64a98f8fb9e85bbe5d74cc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a4e6009bf07545e63b64a98f8fb9e85bbe5d74cc/comments", "author": {"login": "canndrew", "id": 5555066, "node_id": "MDQ6VXNlcjU1NTUwNjY=", "avatar_url": "https://avatars.githubusercontent.com/u/5555066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/canndrew", "html_url": "https://github.com/canndrew", "followers_url": "https://api.github.com/users/canndrew/followers", "following_url": "https://api.github.com/users/canndrew/following{/other_user}", "gists_url": "https://api.github.com/users/canndrew/gists{/gist_id}", "starred_url": "https://api.github.com/users/canndrew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/canndrew/subscriptions", "organizations_url": "https://api.github.com/users/canndrew/orgs", "repos_url": "https://api.github.com/users/canndrew/repos", "events_url": "https://api.github.com/users/canndrew/events{/privacy}", "received_events_url": "https://api.github.com/users/canndrew/received_events", "type": "User", "site_admin": false}, "committer": {"login": "canndrew", "id": 5555066, "node_id": "MDQ6VXNlcjU1NTUwNjY=", "avatar_url": "https://avatars.githubusercontent.com/u/5555066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/canndrew", "html_url": "https://github.com/canndrew", "followers_url": "https://api.github.com/users/canndrew/followers", "following_url": "https://api.github.com/users/canndrew/following{/other_user}", "gists_url": "https://api.github.com/users/canndrew/gists{/gist_id}", "starred_url": "https://api.github.com/users/canndrew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/canndrew/subscriptions", "organizations_url": "https://api.github.com/users/canndrew/orgs", "repos_url": "https://api.github.com/users/canndrew/repos", "events_url": "https://api.github.com/users/canndrew/events{/privacy}", "received_events_url": "https://api.github.com/users/canndrew/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a05560bebe897bf1fea2b57a2e9f131599784360", "url": "https://api.github.com/repos/rust-lang/rust/commits/a05560bebe897bf1fea2b57a2e9f131599784360", "html_url": "https://github.com/rust-lang/rust/commit/a05560bebe897bf1fea2b57a2e9f131599784360"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "4049a2b815d0209ceb5ed91cb7f718e347e2061a", "filename": "src/librustc_const_eval/check_match.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a4e6009bf07545e63b64a98f8fb9e85bbe5d74cc/src%2Flibrustc_const_eval%2Fcheck_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4e6009bf07545e63b64a98f8fb9e85bbe5d74cc/src%2Flibrustc_const_eval%2Fcheck_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_const_eval%2Fcheck_match.rs?ref=a4e6009bf07545e63b64a98f8fb9e85bbe5d74cc", "patch": "@@ -218,7 +218,7 @@ fn check_expr(cx: &mut MatchCheckCtxt, ex: &hir::Expr) {\n                 if !pat_ty.is_uninhabited(cx.tcx) {\n                     // We know the type is inhabited, so this must be wrong\n                     let mut err = struct_span_err!(cx.tcx.sess, ex.span, E0002,\n-                                                   \"non-exhaustive patterns: type {} is inhabited\",\n+                                                   \"non-exhaustive patterns: type {} is non-empty\",\n                                                    pat_ty);\n                     span_help!(&mut err, ex.span,\n                         \"Please ensure that all possible cases are being handled; \\"}, {"sha": "a77c678248b565642a31fc5b60851c62ff1a9299", "filename": "src/libsyntax/print/pprust.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a4e6009bf07545e63b64a98f8fb9e85bbe5d74cc/src%2Flibsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4e6009bf07545e63b64a98f8fb9e85bbe5d74cc/src%2Flibsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpprust.rs?ref=a4e6009bf07545e63b64a98f8fb9e85bbe5d74cc", "patch": "@@ -977,7 +977,7 @@ impl<'a> State<'a> {\n                 try!(self.print_mt(mt));\n             }\n             ast::TyKind::Never => {\n-                word(&mut self.s, \"!\")?;\n+                try!(word(&mut self.s, \"!\"));\n             },\n             ast::TyKind::Tup(ref elts) => {\n                 try!(self.popen());"}]}