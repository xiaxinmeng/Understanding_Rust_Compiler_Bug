{"sha": "6181154d50720d7474ade413211e2e1fcb644714", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYxODExNTRkNTA3MjBkNzQ3NGFkZTQxMzIxMWUyZTFmY2I2NDQ3MTQ=", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-07-03T19:42:59Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-07-03T19:42:59Z"}, "message": "Add some more `inline_call` tests", "tree": {"sha": "3fe44e08466f7687538e541a998403ac3c11b83b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3fe44e08466f7687538e541a998403ac3c11b83b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6181154d50720d7474ade413211e2e1fcb644714", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6181154d50720d7474ade413211e2e1fcb644714", "html_url": "https://github.com/rust-lang/rust/commit/6181154d50720d7474ade413211e2e1fcb644714", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6181154d50720d7474ade413211e2e1fcb644714/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d308f17a211068971858551a1bd9149abdf09d35", "url": "https://api.github.com/repos/rust-lang/rust/commits/d308f17a211068971858551a1bd9149abdf09d35", "html_url": "https://github.com/rust-lang/rust/commit/d308f17a211068971858551a1bd9149abdf09d35"}], "stats": {"total": 104, "additions": 86, "deletions": 18}, "files": [{"sha": "c3251b06880eee38d0caae6d431e310220b5a018", "filename": "crates/ide_assists/src/handlers/inline_call.rs", "status": "modified", "additions": 82, "deletions": 10, "changes": 92, "blob_url": "https://github.com/rust-lang/rust/blob/6181154d50720d7474ade413211e2e1fcb644714/crates%2Fide_assists%2Fsrc%2Fhandlers%2Finline_call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6181154d50720d7474ade413211e2e1fcb644714/crates%2Fide_assists%2Fsrc%2Fhandlers%2Finline_call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Finline_call.rs?ref=6181154d50720d7474ade413211e2e1fcb644714", "patch": "@@ -17,20 +17,16 @@ use crate::{\n // Inlines a function or method body.\n //\n // ```\n-// fn add(a: u32, b: u32) -> u32 { a + b }\n+// fn align(a: u32, b: u32) -> u32 { (a + b - 1) & !(b - 1) }\n // fn main() {\n-//     let x = add$0(1, 2);\n+//     let x = align$0(1, 2);\n // }\n // ```\n // ->\n // ```\n-// fn add(a: u32, b: u32) -> u32 { a + b }\n+// fn align(a: u32, b: u32) -> u32 { (a + b - 1) & !(b - 1) }\n // fn main() {\n-//     let x = {\n-//         let a = 1;\n-//         let b = 2;\n-//         a + b\n-//     };\n+//     let x = { let b = 2; (1 + b - 1) & !(b - 1) };\n // }\n // ```\n pub(crate) fn inline_call(acc: &mut Assists, ctx: &AssistContext) -> Option<()> {\n@@ -169,9 +165,8 @@ pub(crate) fn inline_(\n                                 if expr.path().and_then(|path| path.as_single_name_ref()).is_some()\n                         ) =>\n                     {\n-                        let expr = expr.syntax().clone_for_update();\n                         usages.into_iter().for_each(|usage| {\n-                            ted::replace(usage, &expr);\n+                            ted::replace(usage, &expr.syntax().clone_for_update());\n                         });\n                     }\n                     // cant inline, emit a let statement\n@@ -415,6 +410,83 @@ fn main() {\n         this.0 = 0;\n     };\n }\n+\"#,\n+        );\n+    }\n+\n+    #[test]\n+    fn function_single_use_expr_in_param() {\n+        check_assist(\n+            inline_call,\n+            r#\"\n+fn double(x: u32) -> u32 {\n+    2 * x\n+}\n+fn main() {\n+    let x = 51;\n+    let x = double$0(10 + x);\n+}\n+\"#,\n+            r#\"\n+fn double(x: u32) -> u32 {\n+    2 * x\n+}\n+fn main() {\n+    let x = 51;\n+    let x = 2 * 10 + x;\n+}\n+\"#,\n+        );\n+    }\n+\n+    #[test]\n+    fn function_multi_use_expr_in_param() {\n+        check_assist(\n+            inline_call,\n+            r#\"\n+fn square(x: u32) -> u32 {\n+    x * x\n+}\n+fn main() {\n+    let x = 51;\n+    let y = square$0(10 + x);\n+}\n+\"#,\n+            r#\"\n+fn square(x: u32) -> u32 {\n+    x * x\n+}\n+fn main() {\n+    let x = 51;\n+    let y = { let x = 10 + x;\n+        x * x\n+    };\n+}\n+\"#,\n+        );\n+    }\n+\n+    #[test]\n+    fn function_multi_use_local_in_param() {\n+        check_assist(\n+            inline_call,\n+            r#\"\n+fn square(x: u32) -> u32 {\n+    x * x\n+}\n+fn main() {\n+    let local = 51;\n+    let y = square$0(local);\n+}\n+\"#,\n+            r#\"\n+fn square(x: u32) -> u32 {\n+    x * x\n+}\n+fn main() {\n+    let local = 51;\n+    let y = local * local;\n+}\n \"#,\n         );\n     }"}, {"sha": "f6ecc2d5d4b7d4939c714dfdd28bd83c13799be1", "filename": "crates/ide_assists/src/tests/generated.rs", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/6181154d50720d7474ade413211e2e1fcb644714/crates%2Fide_assists%2Fsrc%2Ftests%2Fgenerated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6181154d50720d7474ade413211e2e1fcb644714/crates%2Fide_assists%2Fsrc%2Ftests%2Fgenerated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Ftests%2Fgenerated.rs?ref=6181154d50720d7474ade413211e2e1fcb644714", "patch": "@@ -923,19 +923,15 @@ fn doctest_inline_call() {\n     check_doc_test(\n         \"inline_call\",\n         r#####\"\n-fn add(a: u32, b: u32) -> u32 { a + b }\n+fn align(a: u32, b: u32) -> u32 { (a + b - 1) & !(b - 1) }\n fn main() {\n-    let x = add$0(1, 2);\n+    let x = align$0(1, 2);\n }\n \"#####,\n         r#####\"\n-fn add(a: u32, b: u32) -> u32 { a + b }\n+fn align(a: u32, b: u32) -> u32 { (a + b - 1) & !(b - 1) }\n fn main() {\n-    let x = {\n-        let a = 1;\n-        let b = 2;\n-        a + b\n-    };\n+    let x = { let b = 2; (1 + b - 1) & !(b - 1) };\n }\n \"#####,\n     )"}]}