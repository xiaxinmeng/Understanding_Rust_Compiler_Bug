{"sha": "8f969ed3766ee159739d99dcb850f90ce9af39d0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhmOTY5ZWQzNzY2ZWUxNTk3MzlkOTlkY2I4NTBmOTBjZTlhZjM5ZDA=", "commit": {"author": {"name": "Wesley Wiser", "email": "wwiser@gmail.com", "date": "2018-06-30T02:26:15Z"}, "committer": {"name": "Wesley Wiser", "email": "wwiser@gmail.com", "date": "2018-06-30T02:26:15Z"}, "message": "Optimize `copy_undef_mask()` to use one pass\n\nThis saves 0.5 seconds on the test compilation.", "tree": {"sha": "aec6d5c12c4cdc0d82cc727e4c18413c4b8d730c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aec6d5c12c4cdc0d82cc727e4c18413c4b8d730c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8f969ed3766ee159739d99dcb850f90ce9af39d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8f969ed3766ee159739d99dcb850f90ce9af39d0", "html_url": "https://github.com/rust-lang/rust/commit/8f969ed3766ee159739d99dcb850f90ce9af39d0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8f969ed3766ee159739d99dcb850f90ce9af39d0/comments", "author": {"login": "wesleywiser", "id": 831192, "node_id": "MDQ6VXNlcjgzMTE5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/831192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesleywiser", "html_url": "https://github.com/wesleywiser", "followers_url": "https://api.github.com/users/wesleywiser/followers", "following_url": "https://api.github.com/users/wesleywiser/following{/other_user}", "gists_url": "https://api.github.com/users/wesleywiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesleywiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesleywiser/subscriptions", "organizations_url": "https://api.github.com/users/wesleywiser/orgs", "repos_url": "https://api.github.com/users/wesleywiser/repos", "events_url": "https://api.github.com/users/wesleywiser/events{/privacy}", "received_events_url": "https://api.github.com/users/wesleywiser/received_events", "type": "User", "site_admin": false}, "committer": {"login": "wesleywiser", "id": 831192, "node_id": "MDQ6VXNlcjgzMTE5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/831192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesleywiser", "html_url": "https://github.com/wesleywiser", "followers_url": "https://api.github.com/users/wesleywiser/followers", "following_url": "https://api.github.com/users/wesleywiser/following{/other_user}", "gists_url": "https://api.github.com/users/wesleywiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesleywiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesleywiser/subscriptions", "organizations_url": "https://api.github.com/users/wesleywiser/orgs", "repos_url": "https://api.github.com/users/wesleywiser/repos", "events_url": "https://api.github.com/users/wesleywiser/events{/privacy}", "received_events_url": "https://api.github.com/users/wesleywiser/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1ffa99d218ecff7b996d71a86e7790f5c3ba2614", "url": "https://api.github.com/repos/rust-lang/rust/commits/1ffa99d218ecff7b996d71a86e7790f5c3ba2614", "html_url": "https://github.com/rust-lang/rust/commit/1ffa99d218ecff7b996d71a86e7790f5c3ba2614"}], "stats": {"total": 25, "additions": 8, "deletions": 17}, "files": [{"sha": "2f961ef9d97822189cf3e2e0de22c7db77e8b04f", "filename": "src/librustc_mir/interpret/memory.rs", "status": "modified", "additions": 8, "deletions": 17, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/8f969ed3766ee159739d99dcb850f90ce9af39d0/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f969ed3766ee159739d99dcb850f90ce9af39d0/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs?ref=8f969ed3766ee159739d99dcb850f90ce9af39d0", "patch": "@@ -882,25 +882,16 @@ impl<'a, 'mir, 'tcx, M: Machine<'mir, 'tcx>> Memory<'a, 'mir, 'tcx, M> {\n     ) -> EvalResult<'tcx> {\n         // The bits have to be saved locally before writing to dest in case src and dest overlap.\n         assert_eq!(size.bytes() as usize as u64, size.bytes());\n-        let mut v = Vec::with_capacity(size.bytes() as usize);\n \n-        {\n-            let src_allocation = self.get(src.alloc_id)?;\n-            for i in 0..size.bytes() {\n-                let defined = src_allocation.undef_mask.get(src.offset + Size::from_bytes(i));\n-                v.push(defined);\n-            }\n-        }\n+        let undef_mask = self.get(src.alloc_id)?.undef_mask.clone();\n+        let dest_allocation = self.get_mut(dest.alloc_id)?;\n \n-        {\n-            let dest_allocation = self.get_mut(dest.alloc_id)?;\n-            for (i, defined) in v.into_iter().enumerate() {\n-                dest_allocation.undef_mask.set(\n-                    dest.offset +\n-                        Size::from_bytes(i as u64),\n-                    defined,\n-                );\n-            }\n+        for i in 0..size.bytes() {\n+            let defined = undef_mask.get(src.offset + Size::from_bytes(i));\n+            dest_allocation.undef_mask.set(\n+                dest.offset + Size::from_bytes(i),\n+                defined\n+            );\n         }\n \n         Ok(())"}]}