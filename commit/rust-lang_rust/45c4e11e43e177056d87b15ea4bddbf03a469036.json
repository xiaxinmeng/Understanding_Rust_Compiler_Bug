{"sha": "45c4e11e43e177056d87b15ea4bddbf03a469036", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ1YzRlMTFlNDNlMTc3MDU2ZDg3YjE1ZWE0YmRkYmYwM2E0NjkwMzY=", "commit": {"author": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2019-11-29T00:00:00Z"}, "committer": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2019-11-29T19:13:54Z"}, "message": "SimplifyArmIdentity only for locals with the same type\n\nCo-Authored-By: Mazdak Farrokhzad <twingoow@gmail.com>", "tree": {"sha": "4d9d412ecbcebcaff25595e90042df5ba6ca23da", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4d9d412ecbcebcaff25595e90042df5ba6ca23da"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/45c4e11e43e177056d87b15ea4bddbf03a469036", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/45c4e11e43e177056d87b15ea4bddbf03a469036", "html_url": "https://github.com/rust-lang/rust/commit/45c4e11e43e177056d87b15ea4bddbf03a469036", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/45c4e11e43e177056d87b15ea4bddbf03a469036/comments", "author": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c4375c9dfdd7f31de909f6e9384bac1bf37b44da", "url": "https://api.github.com/repos/rust-lang/rust/commits/c4375c9dfdd7f31de909f6e9384bac1bf37b44da", "html_url": "https://github.com/rust-lang/rust/commit/c4375c9dfdd7f31de909f6e9384bac1bf37b44da"}], "stats": {"total": 103, "additions": 102, "deletions": 1}, "files": [{"sha": "9dc5daa9b0709c4aa7597297082405342a66871e", "filename": "src/librustc_mir/transform/simplify_try.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/45c4e11e43e177056d87b15ea4bddbf03a469036/src%2Flibrustc_mir%2Ftransform%2Fsimplify_try.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45c4e11e43e177056d87b15ea4bddbf03a469036/src%2Flibrustc_mir%2Ftransform%2Fsimplify_try.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fsimplify_try.rs?ref=45c4e11e43e177056d87b15ea4bddbf03a469036", "patch": "@@ -34,7 +34,8 @@ pub struct SimplifyArmIdentity;\n \n impl<'tcx> MirPass<'tcx> for SimplifyArmIdentity {\n     fn run_pass(&self, _: TyCtxt<'tcx>, _: MirSource<'tcx>, body: &mut Body<'tcx>) {\n-        for bb in body.basic_blocks_mut() {\n+        let (basic_blocks, local_decls) = body.basic_blocks_and_local_decls_mut();\n+        for bb in basic_blocks {\n             // Need 3 statements:\n             let (s0, s1, s2) = match &mut *bb.statements {\n                 [s0, s1, s2] => (s0, s1, s2),\n@@ -51,7 +52,12 @@ impl<'tcx> MirPass<'tcx> for SimplifyArmIdentity {\n                 Some(x) => x,\n             };\n             if local_tmp_s0 != local_tmp_s1\n+                // The field-and-variant information match up.\n                 || vf_s0 != vf_s1\n+                // Source and target locals have the same type.\n+                // FIXME(Centril | oli-obk): possibly relax to same layout?\n+                || local_decls[local_0].ty != local_decls[local_1].ty\n+                // We're setting the discriminant of `local_0` to this variant.\n                 || Some((local_0, vf_s0.var_idx)) != match_set_discr(s2)\n             {\n                 continue;"}, {"sha": "a8fa64255fb9ae5523a36c6ef26bab2eac28696f", "filename": "src/test/mir-opt/simplify-arm-identity.rs", "status": "added", "additions": 75, "deletions": 0, "changes": 75, "blob_url": "https://github.com/rust-lang/rust/blob/45c4e11e43e177056d87b15ea4bddbf03a469036/src%2Ftest%2Fmir-opt%2Fsimplify-arm-identity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45c4e11e43e177056d87b15ea4bddbf03a469036/src%2Ftest%2Fmir-opt%2Fsimplify-arm-identity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fsimplify-arm-identity.rs?ref=45c4e11e43e177056d87b15ea4bddbf03a469036", "patch": "@@ -0,0 +1,75 @@\n+// Checks that `SimplifyArmIdentity` is not applied if enums have incompatible layouts.\n+// Regression test for issue #66856.\n+//\n+// compile-flags: -Zmir-opt-level=2\n+\n+enum Src {\n+    Foo(u8),\n+    Bar,\n+}\n+\n+enum Dst {\n+    Foo(u8),\n+}\n+\n+fn main() {\n+    let e: Src = Src::Foo(0);\n+    let _: Dst = match e {\n+        Src::Foo(x) => Dst::Foo(x),\n+        Src::Bar => Dst::Foo(0),\n+    };\n+}\n+\n+// END RUST SOURCE\n+// START rustc.main.SimplifyArmIdentity.before.mir\n+// fn main() -> () {\n+//     ...\n+//     bb0: {\n+//         StorageLive(_1);\n+//         ((_1 as Foo).0: u8) = const 0u8;\n+//         discriminant(_1) = 0;\n+//         StorageLive(_2);\n+//         _3 = discriminant(_1);\n+//         switchInt(move _3) -> [0isize: bb3, 1isize: bb1, otherwise: bb2];\n+//     }\n+//     bb1: {\n+//         ((_2 as Foo).0: u8) = const 0u8;\n+//         discriminant(_2) = 0;\n+//         goto -> bb4;\n+//     }\n+//     ...\n+//     bb3: {\n+//         _4 = ((_1 as Foo).0: u8);\n+//         ((_2 as Foo).0: u8) = move _4;\n+//         discriminant(_2) = 0;\n+//         goto -> bb4;\n+//     }\n+//     ...\n+// }\n+// END rustc.main.SimplifyArmIdentity.before.mir\n+// START rustc.main.SimplifyArmIdentity.after.mir\n+// fn main() -> () {\n+//     ...\n+//     bb0: {\n+//         StorageLive(_1);\n+//         ((_1 as Foo).0: u8) = const 0u8;\n+//         discriminant(_1) = 0;\n+//         StorageLive(_2);\n+//         _3 = discriminant(_1);\n+//         switchInt(move _3) -> [0isize: bb3, 1isize: bb1, otherwise: bb2];\n+//     }\n+//     bb1: {\n+//         ((_2 as Foo).0: u8) = const 0u8;\n+//         discriminant(_2) = 0;\n+//         goto -> bb4;\n+//     }\n+//     ...\n+//     bb3: {\n+//         _4 = ((_1 as Foo).0: u8);\n+//         ((_2 as Foo).0: u8) = move _4;\n+//         discriminant(_2) = 0;\n+//         goto -> bb4;\n+//     }\n+//     ...\n+// }\n+// END rustc.main.SimplifyArmIdentity.after.mir"}, {"sha": "72d62a30a337a8a83b100a8267c6979422fc58d7", "filename": "src/test/ui/issues/issue-66851.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/45c4e11e43e177056d87b15ea4bddbf03a469036/src%2Ftest%2Fui%2Fissues%2Fissue-66851.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45c4e11e43e177056d87b15ea4bddbf03a469036/src%2Ftest%2Fui%2Fissues%2Fissue-66851.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-66851.rs?ref=45c4e11e43e177056d87b15ea4bddbf03a469036", "patch": "@@ -0,0 +1,20 @@\n+// This used to mis-compile because the mir-opt `SimplifyArmIdentity`\n+// did not check that the types matched up in the `Ok(r)` branch.\n+//\n+// run-pass\n+// compile-flags: -Zmir-opt-level=2\n+\n+#[derive(Debug, PartialEq, Eq)]\n+enum SpecialsRes { Res(u64) }\n+\n+fn e103() -> SpecialsRes {\n+    if let Ok(r) = \"1\".parse() {\n+        SpecialsRes::Res(r)\n+    } else {\n+        SpecialsRes::Res(42)\n+    }\n+}\n+\n+fn main() {\n+    assert_eq!(e103(), SpecialsRes::Res(1));\n+}"}]}