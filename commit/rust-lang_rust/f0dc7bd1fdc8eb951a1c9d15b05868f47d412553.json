{"sha": "f0dc7bd1fdc8eb951a1c9d15b05868f47d412553", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYwZGM3YmQxZmRjOGViOTUxYTFjOWQxNWIwNTg2OGY0N2Q0MTI1NTM=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-10-01T15:10:30Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-10-01T15:10:30Z"}, "message": "remove support method for synthetic default method ids", "tree": {"sha": "0c16de15411fc353e5a6e5b72572eb21724b7dc5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0c16de15411fc353e5a6e5b72572eb21724b7dc5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f0dc7bd1fdc8eb951a1c9d15b05868f47d412553", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f0dc7bd1fdc8eb951a1c9d15b05868f47d412553", "html_url": "https://github.com/rust-lang/rust/commit/f0dc7bd1fdc8eb951a1c9d15b05868f47d412553", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f0dc7bd1fdc8eb951a1c9d15b05868f47d412553/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6bfdf37250155afa872f7cbbde745e0b050e4f3a", "url": "https://api.github.com/repos/rust-lang/rust/commits/6bfdf37250155afa872f7cbbde745e0b050e4f3a", "html_url": "https://github.com/rust-lang/rust/commit/6bfdf37250155afa872f7cbbde745e0b050e4f3a"}], "stats": {"total": 16, "additions": 0, "deletions": 16}, "files": [{"sha": "825d5da0c999dbc67805d6738672c27074f89f7f", "filename": "src/librustc/front/map/mod.rs", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/f0dc7bd1fdc8eb951a1c9d15b05868f47d412553/src%2Flibrustc%2Ffront%2Fmap%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0dc7bd1fdc8eb951a1c9d15b05868f47d412553/src%2Flibrustc%2Ffront%2Fmap%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ffront%2Fmap%2Fmod.rs?ref=f0dc7bd1fdc8eb951a1c9d15b05868f47d412553", "patch": "@@ -305,22 +305,6 @@ impl<'ast> Map<'ast> {\n         self.definitions.borrow().as_local_node_id(def_id)\n     }\n \n-    /// for default methods, we create a fake node-id; this method\n-    /// adds that fake node-id to the def-id tables\n-    pub fn synthesize_default_method_def_id(&self,\n-                                            impl_def_id: DefId,\n-                                            new_method_id: NodeId,\n-                                            method_name: Name)\n-                                            -> DefId {\n-        assert!(impl_def_id.is_local());\n-        let index =\n-            self.definitions.borrow_mut()\n-                            .create_def_with_parent(Some(impl_def_id.index),\n-                                                    new_method_id,\n-                                                    DefPathData::Value(method_name));\n-        DefId::local(index)\n-    }\n-\n     fn entry_count(&self) -> usize {\n         self.map.borrow().len()\n     }"}]}