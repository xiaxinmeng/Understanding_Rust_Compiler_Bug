{"sha": "7464b6dbc4b5342dc70105307c28ec26125b6380", "node_id": "C_kwDOAAsO6NoAKDc0NjRiNmRiYzRiNTM0MmRjNzAxMDUzMDdjMjhlYzI2MTI1YjYzODA", "commit": {"author": {"name": "Pocket7878", "email": "poketo7878@gmail.com", "date": "2022-08-31T09:38:20Z"}, "committer": {"name": "Pocket7878", "email": "poketo7878@gmail.com", "date": "2022-08-31T09:47:45Z"}, "message": "feature: Check if first_arm bool and second_arm bool is inverted or not.", "tree": {"sha": "b0714be4c60932271de3cbe5da233a70c7f3995c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b0714be4c60932271de3cbe5da233a70c7f3995c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7464b6dbc4b5342dc70105307c28ec26125b6380", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7464b6dbc4b5342dc70105307c28ec26125b6380", "html_url": "https://github.com/rust-lang/rust/commit/7464b6dbc4b5342dc70105307c28ec26125b6380", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7464b6dbc4b5342dc70105307c28ec26125b6380/comments", "author": {"login": "pocket7878", "id": 236528, "node_id": "MDQ6VXNlcjIzNjUyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/236528?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pocket7878", "html_url": "https://github.com/pocket7878", "followers_url": "https://api.github.com/users/pocket7878/followers", "following_url": "https://api.github.com/users/pocket7878/following{/other_user}", "gists_url": "https://api.github.com/users/pocket7878/gists{/gist_id}", "starred_url": "https://api.github.com/users/pocket7878/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pocket7878/subscriptions", "organizations_url": "https://api.github.com/users/pocket7878/orgs", "repos_url": "https://api.github.com/users/pocket7878/repos", "events_url": "https://api.github.com/users/pocket7878/events{/privacy}", "received_events_url": "https://api.github.com/users/pocket7878/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pocket7878", "id": 236528, "node_id": "MDQ6VXNlcjIzNjUyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/236528?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pocket7878", "html_url": "https://github.com/pocket7878", "followers_url": "https://api.github.com/users/pocket7878/followers", "following_url": "https://api.github.com/users/pocket7878/following{/other_user}", "gists_url": "https://api.github.com/users/pocket7878/gists{/gist_id}", "starred_url": "https://api.github.com/users/pocket7878/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pocket7878/subscriptions", "organizations_url": "https://api.github.com/users/pocket7878/orgs", "repos_url": "https://api.github.com/users/pocket7878/repos", "events_url": "https://api.github.com/users/pocket7878/events{/privacy}", "received_events_url": "https://api.github.com/users/pocket7878/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5a1b45dcc157f41cbabf8f93fa1641bc4e29af60", "url": "https://api.github.com/repos/rust-lang/rust/commits/5a1b45dcc157f41cbabf8f93fa1641bc4e29af60", "html_url": "https://github.com/rust-lang/rust/commit/5a1b45dcc157f41cbabf8f93fa1641bc4e29af60"}], "stats": {"total": 44, "additions": 40, "deletions": 4}, "files": [{"sha": "54a7f480a4e46abd5316a3cc719e8c54ede8a69f", "filename": "crates/ide-assists/src/handlers/convert_two_arm_bool_match_to_matches_macro.rs", "status": "modified", "additions": 40, "deletions": 4, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/7464b6dbc4b5342dc70105307c28ec26125b6380/crates%2Fide-assists%2Fsrc%2Fhandlers%2Fconvert_two_arm_bool_match_to_matches_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7464b6dbc4b5342dc70105307c28ec26125b6380/crates%2Fide-assists%2Fsrc%2Fhandlers%2Fconvert_two_arm_bool_match_to_matches_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-assists%2Fsrc%2Fhandlers%2Fconvert_two_arm_bool_match_to_matches_macro.rs?ref=7464b6dbc4b5342dc70105307c28ec26125b6380", "patch": "@@ -34,13 +34,18 @@ pub(crate) fn convert_two_arm_bool_match_to_matches_macro(\n         return None;\n     }\n     let first_arm_expr = first_arm.expr();\n+    let second_arm_expr = second_arm.expr();\n \n-    let invert_matches = if is_bool_literal_expr(&first_arm_expr, true) {\n+    let invert_matches = if is_bool_literal_expr(&first_arm_expr, true)\n+        && is_bool_literal_expr(&second_arm_expr, false)\n+    {\n         false\n-    } else if is_bool_literal_expr(&first_arm_expr, false) {\n+    } else if is_bool_literal_expr(&first_arm_expr, false)\n+        && is_bool_literal_expr(&second_arm_expr, true)\n+    {\n         true\n     } else {\n-        cov_mark::hit!(non_bool_literal_match);\n+        cov_mark::hit!(non_invert_bool_literal_arms);\n         return None;\n     };\n \n@@ -118,7 +123,7 @@ fn foo(a: Option<u32>) -> bool {\n \n     #[test]\n     fn not_applicable_non_bool_literal_arms() {\n-        cov_mark::check!(non_bool_literal_match);\n+        cov_mark::check!(non_invert_bool_literal_arms);\n         check_assist_not_applicable(\n             convert_two_arm_bool_match_to_matches_macro,\n             r#\"\n@@ -131,6 +136,37 @@ fn foo(a: Option<u32>) -> bool {\n         \"#,\n         );\n     }\n+    #[test]\n+    fn not_applicable_both_false_arms() {\n+        cov_mark::check!(non_invert_bool_literal_arms);\n+        check_assist_not_applicable(\n+            convert_two_arm_bool_match_to_matches_macro,\n+            r#\"\n+fn foo(a: Option<u32>) -> bool {\n+    match a$0 {\n+        Some(val) => false,\n+        _ => false\n+    }\n+}\n+        \"#,\n+        );\n+    }\n+\n+    #[test]\n+    fn not_applicable_both_true_arms() {\n+        cov_mark::check!(non_invert_bool_literal_arms);\n+        check_assist_not_applicable(\n+            convert_two_arm_bool_match_to_matches_macro,\n+            r#\"\n+fn foo(a: Option<u32>) -> bool {\n+    match a$0 {\n+        Some(val) => true,\n+        _ => true\n+    }\n+}\n+        \"#,\n+        );\n+    }\n \n     #[test]\n     fn convert_simple_case() {"}]}