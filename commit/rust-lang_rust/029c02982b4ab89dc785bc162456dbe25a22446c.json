{"sha": "029c02982b4ab89dc785bc162456dbe25a22446c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAyOWMwMjk4MmI0YWI4OWRjNzg1YmMxNjI0NTZkYmUyNWEyMjQ0NmM=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-01-10T17:58:14Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-01-10T17:58:14Z"}, "message": "Merge #2786\n\n2786: Proper handling local in hover r=flodiebold a=edwin0cheng\n\nThis PR implement back the `Local` hover information generation, which is fall back to a general case catch previously :\r\n\r\nhttps://github.com/rust-analyzer/rust-analyzer/blob/9a44f627be0b3c49184e3ad594849f9b5ed78daa/crates/ra_ide/src/hover.rs#L173-L182\r\n\r\n\n\nCo-authored-by: Edwin Cheng <edwin0cheng@gmail.com>", "tree": {"sha": "04029c58d338fb15a47dae93313c840fa8896ef3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/04029c58d338fb15a47dae93313c840fa8896ef3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/029c02982b4ab89dc785bc162456dbe25a22446c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeGLs2CRBK7hj4Ov3rIwAAdHIIAJJL6MNTrLFLqO9U3mzQZy2+\njevzSsaDzu5hLk5ztdxHA90l+WJggGlspTmTweB2ahoK2OduPkVgp9aF/NR9iUMm\nRR+lGQ8YDi9M4XxUnjoOGUfNc7AjbbhK2yaKpzz7AU0sPzejqWze2LD6/VrBLR1v\nqwhjgFD4oZg2+O41A2q7lPAG4C0kOwy1jTb7TntIrTE3NSv5E5/PdXF/emDWkbQ8\nkycP0rVH1XVFM/pblR6DEyHq3opYmrNx+NIOXaC/HlJ7svG8obY8kZ68AMazpOv9\njC28AMlq/EOcKd0u2QgDkgQsVU+Mg/j0exHyQ/vfmlHKMITqJMqpIk0Bj7HpxuY=\n=FU3l\n-----END PGP SIGNATURE-----\n", "payload": "tree 04029c58d338fb15a47dae93313c840fa8896ef3\nparent 9a44f627be0b3c49184e3ad594849f9b5ed78daa\nparent 19094abd41fe398c2ba1a3c4926ef50c04eebabb\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1578679094 +0000\ncommitter GitHub <noreply@github.com> 1578679094 +0000\n\nMerge #2786\n\n2786: Proper handling local in hover r=flodiebold a=edwin0cheng\n\nThis PR implement back the `Local` hover information generation, which is fall back to a general case catch previously :\r\n\r\nhttps://github.com/rust-analyzer/rust-analyzer/blob/9a44f627be0b3c49184e3ad594849f9b5ed78daa/crates/ra_ide/src/hover.rs#L173-L182\r\n\r\n\n\nCo-authored-by: Edwin Cheng <edwin0cheng@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/029c02982b4ab89dc785bc162456dbe25a22446c", "html_url": "https://github.com/rust-lang/rust/commit/029c02982b4ab89dc785bc162456dbe25a22446c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/029c02982b4ab89dc785bc162456dbe25a22446c/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9a44f627be0b3c49184e3ad594849f9b5ed78daa", "url": "https://api.github.com/repos/rust-lang/rust/commits/9a44f627be0b3c49184e3ad594849f9b5ed78daa", "html_url": "https://github.com/rust-lang/rust/commit/9a44f627be0b3c49184e3ad594849f9b5ed78daa"}, {"sha": "19094abd41fe398c2ba1a3c4926ef50c04eebabb", "url": "https://api.github.com/repos/rust-lang/rust/commits/19094abd41fe398c2ba1a3c4926ef50c04eebabb", "html_url": "https://github.com/rust-lang/rust/commit/19094abd41fe398c2ba1a3c4926ef50c04eebabb"}], "stats": {"total": 20, "additions": 19, "deletions": 1}, "files": [{"sha": "5548681f179f689fa97e176bd52bfccbceda59ac", "filename": "crates/ra_ide/src/hover.rs", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/029c02982b4ab89dc785bc162456dbe25a22446c/crates%2Fra_ide%2Fsrc%2Fhover.rs", "raw_url": "https://github.com/rust-lang/rust/raw/029c02982b4ab89dc785bc162456dbe25a22446c/crates%2Fra_ide%2Fsrc%2Fhover.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fhover.rs?ref=029c02982b4ab89dc785bc162456dbe25a22446c", "patch": "@@ -128,7 +128,7 @@ fn hover_text_from_name_kind(db: &RootDatabase, name_kind: NameKind) -> Option<S\n             hir::ModuleDef::TypeAlias(it) => from_def_source(db, it),\n             hir::ModuleDef::BuiltinType(it) => Some(it.to_string()),\n         },\n-        Local(_) => None,\n+        Local(it) => Some(rust_code_markup(it.ty(db).display_truncated(db, None).to_string())),\n         TypeParam(_) | SelfType(_) => {\n             // FIXME: Hover for generic param\n             None\n@@ -174,6 +174,8 @@ pub(crate) fn hover(db: &RootDatabase, position: FilePosition) -> Option<RangeIn\n         .value\n         .ancestors()\n         .find(|n| ast::Expr::cast(n.clone()).is_some() || ast::Pat::cast(n.clone()).is_some())?;\n+\n+    // The following logic will not work if token is coming from a macro\n     let frange = FileRange { file_id: position.file_id, range: node.text_range() };\n     res.extend(type_of(db, frange).map(rust_code_markup));\n     if res.is_empty() {\n@@ -729,4 +731,20 @@ fn func(foo: i32) { if true { <|>foo; }; }\n             &[\"fn foo()\"],\n         );\n     }\n+\n+    #[test]\n+    fn test_hover_through_expr_in_macro() {\n+        check_hover_result(\n+            \"\n+            //- /lib.rs\n+            macro_rules! id {\n+                ($($tt:tt)*) => { $($tt)* }\n+            }\n+            fn foo(bar:u32) {\n+                let a = id!(ba<|>r);\n+            }            \n+            \",\n+            &[\"u32\"],\n+        );\n+    }\n }"}]}