{"sha": "d935a14f4c766bf3014ad5ab0c55ad087c799adb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ5MzVhMTRmNGM3NjZiZjMwMTRhZDVhYjBjNTVhZDA4N2M3OTlhZGI=", "commit": {"author": {"name": "12101111", "email": "w12101111@gmail.com", "date": "2021-08-06T13:51:59Z"}, "committer": {"name": "12101111", "email": "w12101111@gmail.com", "date": "2021-08-08T13:46:40Z"}, "message": " Fix feature gate checking of static-nobundle and native_link_modifiers", "tree": {"sha": "293e37c791a7a3e1abdbfc27270d1c4c7633488a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/293e37c791a7a3e1abdbfc27270d1c4c7633488a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d935a14f4c766bf3014ad5ab0c55ad087c799adb", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEERq7VLWSlisBf3CZ8l3hfrfOKl9wFAmEP4EQACgkQl3hfrfOK\nl9yKXA//SNGc1osFjSN4V//h62B7m/irIaMkjg7Fy9ZDtYzAExCddq3ljAWgDTG/\nfZTy24EBzJg9d0JxgtdM6OZ7Zz57Nij2wfBHRsBhCOlzFqDXxpv8ijI16PpnqUri\nd+ZQSsgbA0vvHoSZMz4Na/KZI2rFc1PS64NERejRA6MqMoENUbZqYHrljkZf5ujz\nEcVNTEUTqvamIXT+kgY7jRWWsV5Pwa/mZYzaijHqxJDXl0bMzeV9gzbg+S7ugdvu\nZrpqgryOOJFxFW5phaeSKuhVziNUuSU3VqyaVYfxOzE6bzs1m3zUt/qYjm7jtckG\nEFQnw9MgzPVINoh16JdDDLNl8FRyprh91YxWx5fIWi9vAzy36OKaovyfYXybwX+l\nspGhPZcGQCWJyY7sSrRjYmjIz/gcekXCuPNM4PkFt5M9si4UF6ESb0e5f2L5KtZ4\nGhZv2kcE8sgsAlo/5pv9WebOhRKKEMnoxtN+kUrdBvRinUrai2m6BOAysFmPieSt\nyjzWJ3+D1a8ymS13RxrnneO7yBDYNXqiW5mUaMvVB5dr1WIAO1oKvrnYKH5ZtUBY\nCytenlOFluxX3YxlaK+OfIyH50zDKojK4kVhYwEW9xV5xyOsVzV48xUP3MLy1tha\nRQPTdoe+yfUEBFiFdOSbBClCg3w8bSshPsZqCYLPdL6VIjTobmk=\n=0oHA\n-----END PGP SIGNATURE-----", "payload": "tree 293e37c791a7a3e1abdbfc27270d1c4c7633488a\nparent 2b4196e97736ffe75433235bf586989cdb4221c4\nauthor 12101111 <w12101111@gmail.com> 1628257919 +0800\ncommitter 12101111 <w12101111@gmail.com> 1628430400 +0800\n\n Fix feature gate checking of static-nobundle and native_link_modifiers\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d935a14f4c766bf3014ad5ab0c55ad087c799adb", "html_url": "https://github.com/rust-lang/rust/commit/d935a14f4c766bf3014ad5ab0c55ad087c799adb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d935a14f4c766bf3014ad5ab0c55ad087c799adb/comments", "author": {"login": "12101111", "id": 8438475, "node_id": "MDQ6VXNlcjg0Mzg0NzU=", "avatar_url": "https://avatars.githubusercontent.com/u/8438475?v=4", "gravatar_id": "", "url": "https://api.github.com/users/12101111", "html_url": "https://github.com/12101111", "followers_url": "https://api.github.com/users/12101111/followers", "following_url": "https://api.github.com/users/12101111/following{/other_user}", "gists_url": "https://api.github.com/users/12101111/gists{/gist_id}", "starred_url": "https://api.github.com/users/12101111/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/12101111/subscriptions", "organizations_url": "https://api.github.com/users/12101111/orgs", "repos_url": "https://api.github.com/users/12101111/repos", "events_url": "https://api.github.com/users/12101111/events{/privacy}", "received_events_url": "https://api.github.com/users/12101111/received_events", "type": "User", "site_admin": false}, "committer": {"login": "12101111", "id": 8438475, "node_id": "MDQ6VXNlcjg0Mzg0NzU=", "avatar_url": "https://avatars.githubusercontent.com/u/8438475?v=4", "gravatar_id": "", "url": "https://api.github.com/users/12101111", "html_url": "https://github.com/12101111", "followers_url": "https://api.github.com/users/12101111/followers", "following_url": "https://api.github.com/users/12101111/following{/other_user}", "gists_url": "https://api.github.com/users/12101111/gists{/gist_id}", "starred_url": "https://api.github.com/users/12101111/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/12101111/subscriptions", "organizations_url": "https://api.github.com/users/12101111/orgs", "repos_url": "https://api.github.com/users/12101111/repos", "events_url": "https://api.github.com/users/12101111/events{/privacy}", "received_events_url": "https://api.github.com/users/12101111/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2b4196e97736ffe75433235bf586989cdb4221c4", "url": "https://api.github.com/repos/rust-lang/rust/commits/2b4196e97736ffe75433235bf586989cdb4221c4", "html_url": "https://github.com/rust-lang/rust/commit/2b4196e97736ffe75433235bf586989cdb4221c4"}], "stats": {"total": 118, "additions": 75, "deletions": 43}, "files": [{"sha": "804b86cd864cb0b4d63f19ac11717f5922533f8a", "filename": "compiler/rustc_metadata/src/native_libs.rs", "status": "modified", "additions": 9, "deletions": 11, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/d935a14f4c766bf3014ad5ab0c55ad087c799adb/compiler%2Frustc_metadata%2Fsrc%2Fnative_libs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d935a14f4c766bf3014ad5ab0c55ad087c799adb/compiler%2Frustc_metadata%2Fsrc%2Fnative_libs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Fnative_libs.rs?ref=d935a14f4c766bf3014ad5ab0c55ad087c799adb", "patch": "@@ -77,6 +77,15 @@ impl ItemLikeVisitor<'tcx> for Collector<'tcx> {\n                                 modifier `-bundle` with library kind `static`\",\n                             )\n                             .emit();\n+                            if !self.tcx.features().static_nobundle {\n+                                feature_err(\n+                                    &self.tcx.sess.parse_sess,\n+                                    sym::static_nobundle,\n+                                    item.span(),\n+                                    \"kind=\\\"static-nobundle\\\" is unstable\",\n+                                )\n+                                .emit();\n+                            }\n                             NativeLibKind::Static { bundle: Some(false), whole_archive: None }\n                         }\n                         \"dylib\" => NativeLibKind::Dylib { as_needed: None },\n@@ -252,17 +261,6 @@ impl Collector<'tcx> {\n             )\n             .emit();\n         }\n-        if matches!(lib.kind, NativeLibKind::Static { bundle: Some(false), .. })\n-            && !self.tcx.features().static_nobundle\n-        {\n-            feature_err(\n-                &self.tcx.sess.parse_sess,\n-                sym::static_nobundle,\n-                span.unwrap_or(rustc_span::DUMMY_SP),\n-                \"kind=\\\"static-nobundle\\\" is unstable\",\n-            )\n-            .emit();\n-        }\n         // this just unwraps lib.name; we already established that it isn't empty above.\n         if let (NativeLibKind::RawDylib, Some(lib_name)) = (lib.kind, lib.name) {\n             let span = match span {"}, {"sha": "7343b03eaf4a813ee86dacbe844a98c0fdbb0bf6", "filename": "compiler/rustc_session/src/config.rs", "status": "modified", "additions": 48, "deletions": 19, "changes": 67, "blob_url": "https://github.com/rust-lang/rust/blob/d935a14f4c766bf3014ad5ab0c55ad087c799adb/compiler%2Frustc_session%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d935a14f4c766bf3014ad5ab0c55ad087c799adb/compiler%2Frustc_session%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Fconfig.rs?ref=d935a14f4c766bf3014ad5ab0c55ad087c799adb", "patch": "@@ -1618,8 +1618,20 @@ fn select_debuginfo(\n     }\n }\n \n-fn parse_native_lib_kind(kind: &str, error_format: ErrorOutputType) -> NativeLibKind {\n-    match kind {\n+fn parse_native_lib_kind(\n+    matches: &getopts::Matches,\n+    kind: &str,\n+    error_format: ErrorOutputType,\n+) -> (NativeLibKind, Option<bool>) {\n+    let is_nightly = nightly_options::match_is_nightly_build(matches);\n+    let enable_unstable = nightly_options::is_unstable_enabled(matches);\n+\n+    let (kind, modifiers) = match kind.split_once(':') {\n+        None => (kind, None),\n+        Some((kind, modifiers)) => (kind, Some(modifiers)),\n+    };\n+\n+    let kind = match kind {\n         \"dylib\" => NativeLibKind::Dylib { as_needed: None },\n         \"framework\" => NativeLibKind::Framework { as_needed: None },\n         \"static\" => NativeLibKind::Static { bundle: None, whole_archive: None },\n@@ -1629,17 +1641,49 @@ fn parse_native_lib_kind(kind: &str, error_format: ErrorOutputType) -> NativeLib\n                 \"library kind `static-nobundle` has been superseded by specifying \\\n                 `-bundle` on library kind `static`. Try `static:-bundle`\",\n             );\n+            if modifiers.is_some() {\n+                early_error(\n+                    error_format,\n+                    \"linking modifier can't be used with library kind `static-nobundle`\",\n+                )\n+            }\n+            if !is_nightly {\n+                early_error(\n+                    error_format,\n+                    \"library kind `static-nobundle` are currently unstable and only accepted on \\\n+                the nightly compiler\",\n+                );\n+            }\n             NativeLibKind::Static { bundle: Some(false), whole_archive: None }\n         }\n         s => early_error(\n             error_format,\n             &format!(\"unknown library kind `{}`, expected one of dylib, framework, or static\", s),\n         ),\n+    };\n+    match modifiers {\n+        None => (kind, None),\n+        Some(modifiers) => {\n+            if !is_nightly {\n+                early_error(\n+                    error_format,\n+                    \"linking modifiers are currently unstable and only accepted on \\\n+                the nightly compiler\",\n+                );\n+            }\n+            if !enable_unstable {\n+                early_error(\n+                    error_format,\n+                    \"linking modifiers are currently unstable, \\\n+                the `-Z unstable-options` flag must also be passed to use it\",\n+                )\n+            }\n+            parse_native_lib_modifiers(kind, modifiers, error_format)\n+        }\n     }\n }\n \n fn parse_native_lib_modifiers(\n-    is_nightly: bool,\n     mut kind: NativeLibKind,\n     modifiers: &str,\n     error_format: ErrorOutputType,\n@@ -1655,14 +1699,6 @@ fn parse_native_lib_modifiers(\n             ),\n         };\n \n-        if !is_nightly {\n-            early_error(\n-                error_format,\n-                \"linking modifiers are currently unstable and only accepted on \\\n-                the nightly compiler\",\n-            );\n-        }\n-\n         match (modifier, &mut kind) {\n             (\"bundle\", NativeLibKind::Static { bundle, .. }) => {\n                 *bundle = Some(value);\n@@ -1709,7 +1745,6 @@ fn parse_native_lib_modifiers(\n }\n \n fn parse_libs(matches: &getopts::Matches, error_format: ErrorOutputType) -> Vec<NativeLib> {\n-    let is_nightly = nightly_options::match_is_nightly_build(matches);\n     matches\n         .opt_strs(\"l\")\n         .into_iter()\n@@ -1723,13 +1758,7 @@ fn parse_libs(matches: &getopts::Matches, error_format: ErrorOutputType) -> Vec<\n             let (name, kind, verbatim) = match s.split_once('=') {\n                 None => (s, NativeLibKind::Unspecified, None),\n                 Some((kind, name)) => {\n-                    let (kind, verbatim) = match kind.split_once(':') {\n-                        None => (parse_native_lib_kind(kind, error_format), None),\n-                        Some((kind, modifiers)) => {\n-                            let kind = parse_native_lib_kind(kind, error_format);\n-                            parse_native_lib_modifiers(is_nightly, kind, modifiers, error_format)\n-                        }\n-                    };\n+                    let (kind, verbatim) = parse_native_lib_kind(matches, kind, error_format);\n                     (name.to_string(), kind, verbatim)\n                 }\n             };"}, {"sha": "1b5fa78ee552129617814f388c06e3cc880bc7f0", "filename": "src/test/ui/feature-gates/feature-gate-native_link_modifiers_bundle-2.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/d935a14f4c766bf3014ad5ab0c55ad087c799adb/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-native_link_modifiers_bundle-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d935a14f4c766bf3014ad5ab0c55ad087c799adb/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-native_link_modifiers_bundle-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-native_link_modifiers_bundle-2.rs?ref=d935a14f4c766bf3014ad5ab0c55ad087c799adb", "patch": "@@ -0,0 +1,10 @@\n+// Test native_link_modifiers_bundle don't need static-nobundle\n+// check-pass\n+\n+#![feature(native_link_modifiers)]\n+#![feature(native_link_modifiers_bundle)]\n+\n+#[link(name = \"foo\", kind = \"static\", modifiers = \"-bundle\")]\n+extern \"C\" {}\n+\n+fn main() {}"}, {"sha": "3da943ee4a963049be79adbc1b03a48be1bd633a", "filename": "src/test/ui/feature-gates/feature-gate-native_link_modifiers_bundle-3.rs", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d935a14f4c766bf3014ad5ab0c55ad087c799adb/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-native_link_modifiers_bundle-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d935a14f4c766bf3014ad5ab0c55ad087c799adb/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-native_link_modifiers_bundle-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-native_link_modifiers_bundle-3.rs?ref=d935a14f4c766bf3014ad5ab0c55ad087c799adb", "patch": "@@ -0,0 +1,3 @@\n+// compile-flags: -l static:-bundle=nonexistent\n+\n+fn main() {}"}, {"sha": "86ccb4e860b69d4678a4fa6ee5684734b7f6d220", "filename": "src/test/ui/feature-gates/feature-gate-native_link_modifiers_bundle-3.stderr", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d935a14f4c766bf3014ad5ab0c55ad087c799adb/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-native_link_modifiers_bundle-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d935a14f4c766bf3014ad5ab0c55ad087c799adb/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-native_link_modifiers_bundle-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-native_link_modifiers_bundle-3.stderr?ref=d935a14f4c766bf3014ad5ab0c55ad087c799adb", "patch": "@@ -0,0 +1,2 @@\n+error: linking modifiers are currently unstable, the `-Z unstable-options` flag must also be passed to use it\n+"}, {"sha": "ad0662b6892d25bda2bbc372ab57156e0944f005", "filename": "src/test/ui/feature-gates/feature-gate-static-nobundle-2.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d935a14f4c766bf3014ad5ab0c55ad087c799adb/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-static-nobundle-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d935a14f4c766bf3014ad5ab0c55ad087c799adb/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-static-nobundle-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-static-nobundle-2.rs?ref=d935a14f4c766bf3014ad5ab0c55ad087c799adb", "patch": "@@ -1,6 +1,4 @@\n-//~ ERROR kind=\"static-nobundle\" is unstable\n-// Test the behavior of rustc when non-existent library is statically linked\n-\n+// check-pass\n // compile-flags: -l static-nobundle=nonexistent\n \n fn main() {}"}, {"sha": "76c317f7410123f986715812aee7072fd51d001b", "filename": "src/test/ui/feature-gates/feature-gate-static-nobundle-2.stderr", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d935a14f4c766bf3014ad5ab0c55ad087c799adb/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-static-nobundle-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d935a14f4c766bf3014ad5ab0c55ad087c799adb/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-static-nobundle-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-static-nobundle-2.stderr?ref=d935a14f4c766bf3014ad5ab0c55ad087c799adb", "patch": "@@ -1,10 +1,2 @@\n warning: library kind `static-nobundle` has been superseded by specifying `-bundle` on library kind `static`. Try `static:-bundle`\n \n-error[E0658]: kind=\"static-nobundle\" is unstable\n-   |\n-   = note: see issue #37403 <https://github.com/rust-lang/rust/issues/37403> for more information\n-   = help: add `#![feature(static_nobundle)]` to the crate attributes to enable\n-\n-error: aborting due to previous error\n-\n-For more information about this error, try `rustc --explain E0658`."}, {"sha": "eaf2e0db511108f51bacf5e0098f13bf30a3e3fb", "filename": "src/test/ui/feature-gates/feature-gate-static-nobundle.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d935a14f4c766bf3014ad5ab0c55ad087c799adb/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-static-nobundle.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d935a14f4c766bf3014ad5ab0c55ad087c799adb/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-static-nobundle.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-static-nobundle.stderr?ref=d935a14f4c766bf3014ad5ab0c55ad087c799adb", "patch": "@@ -5,10 +5,10 @@ LL | #[link(name = \"foo\", kind = \"static-nobundle\")]\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0658]: kind=\"static-nobundle\" is unstable\n-  --> $DIR/feature-gate-static-nobundle.rs:1:1\n+  --> $DIR/feature-gate-static-nobundle.rs:1:22\n    |\n LL | #[link(name = \"foo\", kind = \"static-nobundle\")]\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |                      ^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #37403 <https://github.com/rust-lang/rust/issues/37403> for more information\n    = help: add `#![feature(static_nobundle)]` to the crate attributes to enable"}]}