{"sha": "77165415b7b4aecff6b5959647f675ddf34c222a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc3MTY1NDE1YjdiNGFlY2ZmNmI1OTU5NjQ3ZjY3NWRkZjM0YzIyMmE=", "commit": {"author": {"name": "Jared Roesch", "email": "roeschinc@gmail.com", "date": "2015-07-20T19:48:24Z"}, "committer": {"name": "Jared Roesch", "email": "jroesch@MacBook.home", "date": "2015-07-26T02:57:59Z"}, "message": "Address tidy", "tree": {"sha": "8ff7ca3f8b5af972faa0618acb7916401791f0fa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8ff7ca3f8b5af972faa0618acb7916401791f0fa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/77165415b7b4aecff6b5959647f675ddf34c222a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/77165415b7b4aecff6b5959647f675ddf34c222a", "html_url": "https://github.com/rust-lang/rust/commit/77165415b7b4aecff6b5959647f675ddf34c222a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/77165415b7b4aecff6b5959647f675ddf34c222a/comments", "author": {"login": "jroesch", "id": 696509, "node_id": "MDQ6VXNlcjY5NjUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/696509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jroesch", "html_url": "https://github.com/jroesch", "followers_url": "https://api.github.com/users/jroesch/followers", "following_url": "https://api.github.com/users/jroesch/following{/other_user}", "gists_url": "https://api.github.com/users/jroesch/gists{/gist_id}", "starred_url": "https://api.github.com/users/jroesch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jroesch/subscriptions", "organizations_url": "https://api.github.com/users/jroesch/orgs", "repos_url": "https://api.github.com/users/jroesch/repos", "events_url": "https://api.github.com/users/jroesch/events{/privacy}", "received_events_url": "https://api.github.com/users/jroesch/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "99a12933fb83b1df7975257c323eb414abeb0b16", "url": "https://api.github.com/repos/rust-lang/rust/commits/99a12933fb83b1df7975257c323eb414abeb0b16", "html_url": "https://github.com/rust-lang/rust/commit/99a12933fb83b1df7975257c323eb414abeb0b16"}], "stats": {"total": 24, "additions": 15, "deletions": 9}, "files": [{"sha": "ea5ca8acb094fbf829078b2d1de69e9ae027edd3", "filename": "src/librustc/middle/ty.rs", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/77165415b7b4aecff6b5959647f675ddf34c222a/src%2Flibrustc%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77165415b7b4aecff6b5959647f675ddf34c222a/src%2Flibrustc%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fty.rs?ref=77165415b7b4aecff6b5959647f675ddf34c222a", "patch": "@@ -5453,7 +5453,8 @@ impl<'tcx> ctxt<'tcx> {\n                                              expected.ty,\n                                              found.ty));\n \n-                match (expected.def_id.krate == ast::LOCAL_CRATE, self.map.opt_span(expected.def_id.node)) {\n+                match (expected.def_id.krate == ast::LOCAL_CRATE,\n+                       self.map.opt_span(expected.def_id.node)) {\n                     (true, Some(span)) => {\n                         self.sess.span_note(span,\n                                             &format!(\"a default was defined here...\"));\n@@ -5464,15 +5465,17 @@ impl<'tcx> ctxt<'tcx> {\n                                         .map(|p| p.to_string())\n                                         .collect::<Vec<_>>();\n                         self.sess.note(\n-                            &format!(\"a default is defined on `{}`\", \n+                            &format!(\"a default is defined on `{}`\",\n                                      elems.join(\"::\")));\n                     }\n                 }\n \n-                self.sess.span_note(expected.origin_span,\n-                                    &format!(\"...that was applied to an unconstrained type variable here\"));\n+                self.sess.span_note(\n+                    expected.origin_span,\n+                    &format!(\"...that was applied to an unconstrained type variable here\"));\n \n-                match (found.def_id.krate == ast::LOCAL_CRATE, self.map.opt_span(found.def_id.node)) {\n+                match (found.def_id.krate == ast::LOCAL_CRATE,\n+                       self.map.opt_span(found.def_id.node)) {\n                     (true, Some(span)) => {\n                         self.sess.span_note(span,\n                                             &format!(\"a second default was defined here...\"));\n@@ -5488,8 +5491,9 @@ impl<'tcx> ctxt<'tcx> {\n                     }\n                 }\n \n-                self.sess.span_note(found.origin_span,\n-                                    &format!(\"...that also applies to the same type variable here\"));\n+                self.sess.span_note(\n+                    found.origin_span,\n+                    &format!(\"...that also applies to the same type variable here\"));\n             }\n             _ => {}\n         }"}, {"sha": "e9869e2a00e5d7908aea83fa80e5750bba78cbf1", "filename": "src/librustc_typeck/check/method/confirm.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/77165415b7b4aecff6b5959647f675ddf34c222a/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fconfirm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77165415b7b4aecff6b5959647f675ddf34c222a/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fconfirm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fconfirm.rs?ref=77165415b7b4aecff6b5959647f675ddf34c222a", "patch": "@@ -349,7 +349,9 @@ impl<'a,'tcx> ConfirmContext<'a,'tcx> {\n         } else if num_supplied_types != num_method_types {\n             span_err!(self.tcx().sess, self.span, E0036,\n                 \"incorrect number of type parameters given for this method\");\n-            final_substs.types.replace(subst::FnSpace, vec![self.tcx().types.err; num_method_types]);\n+            final_substs.types.replace(\n+                subst::FnSpace,\n+                vec![self.tcx().types.err; num_method_types]);\n         } else {\n             final_substs.types.replace(subst::FnSpace, supplied_method_types);\n         }"}, {"sha": "e3f55cca9ee514960fa598e2e794529da8fb9bfd", "filename": "src/librustc_typeck/check/method/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77165415b7b4aecff6b5959647f675ddf34c222a/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77165415b7b4aecff6b5959647f675ddf34c222a/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fmod.rs?ref=77165415b7b4aecff6b5959647f675ddf34c222a", "patch": "@@ -190,7 +190,7 @@ pub fn lookup_in_trait_adjusted<'a, 'tcx>(fcx: &FnCtxt<'a, 'tcx>,\n                 type_parameter_defs);\n         }\n     }\n-    \n+\n     let trait_ref = ty::TraitRef::new(trait_def_id, fcx.tcx().mk_substs(substs));\n \n     // Construct an obligation"}]}