{"sha": "0106ad4e27389671bbf411ab6cdf8faa926ce0ae", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAxMDZhZDRlMjczODk2NzFiYmY0MTFhYjZjZGY4ZmFhOTI2Y2UwYWU=", "commit": {"author": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2020-08-28T08:24:12Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-08-28T08:24:12Z"}, "message": "Rollup merge of #76000 - richkadel:llvm-coverage-map-gen-6b.2, r=wesleywiser\n\nAdds --bless support to test/run-make-fulldeps\n\nThe ability to \"bless\" output for some of these tests is critical to\nmaking it practical to adapt tests to unrelated changes.\n\nThis is needed for new coverage tests, as shown in PR #76004 .\n\nr? @tmandry\nFYI: @wesleywiser", "tree": {"sha": "46b2381c5f2cfd4296693402036037193d5654a2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/46b2381c5f2cfd4296693402036037193d5654a2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0106ad4e27389671bbf411ab6cdf8faa926ce0ae", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfSL8tCRBK7hj4Ov3rIwAAdHIIAE34uM+HUxYfS3qsiNbG7qcq\nqtkgWAzQEmpxgwz9qrJxzbMBGSPmvM1rELduNeF+jTUYM4zY2ayR5YEW5kBL//DZ\nc0Ajt404jaGmKUEkRgTh4T68fQdWcGb/ZyPxLKyG0FaF6J+wR6/zVog57ObTZCJT\nWo/TLpQf0eqNrtEJWbxPlUGjZ194nmn83l72DzSUTWithMarx3OaPYHkoWBmdxFn\nRQQoSHtEpyKZNLmeWBgF3gI3rxAJlKHvhBLVYV4oIc2oHGLEcxqModkEMFoj2AHY\ngU5YkJQDe9D9/iQE5eAgnI0bZcwepJ8lC1ov+OqkynKjuLNfwWqCrecidjrZOqE=\n=VEDy\n-----END PGP SIGNATURE-----\n", "payload": "tree 46b2381c5f2cfd4296693402036037193d5654a2\nparent 35496c266713a8fa00f17df7d14bb85bc4e933e7\nparent 55cd2433dc2f5025137a96d65bf681dd64b6f7f7\nauthor Pietro Albini <pietro@pietroalbini.org> 1598603052 +0200\ncommitter GitHub <noreply@github.com> 1598603052 +0200\n\nRollup merge of #76000 - richkadel:llvm-coverage-map-gen-6b.2, r=wesleywiser\n\nAdds --bless support to test/run-make-fulldeps\n\nThe ability to \"bless\" output for some of these tests is critical to\nmaking it practical to adapt tests to unrelated changes.\n\nThis is needed for new coverage tests, as shown in PR #76004 .\n\nr? @tmandry\nFYI: @wesleywiser\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0106ad4e27389671bbf411ab6cdf8faa926ce0ae", "html_url": "https://github.com/rust-lang/rust/commit/0106ad4e27389671bbf411ab6cdf8faa926ce0ae", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0106ad4e27389671bbf411ab6cdf8faa926ce0ae/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "35496c266713a8fa00f17df7d14bb85bc4e933e7", "url": "https://api.github.com/repos/rust-lang/rust/commits/35496c266713a8fa00f17df7d14bb85bc4e933e7", "html_url": "https://github.com/rust-lang/rust/commit/35496c266713a8fa00f17df7d14bb85bc4e933e7"}, {"sha": "55cd2433dc2f5025137a96d65bf681dd64b6f7f7", "url": "https://api.github.com/repos/rust-lang/rust/commits/55cd2433dc2f5025137a96d65bf681dd64b6f7f7", "html_url": "https://github.com/rust-lang/rust/commit/55cd2433dc2f5025137a96d65bf681dd64b6f7f7"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "965b20f5202e01de368b9608fade303036e1379a", "filename": "src/tools/compiletest/src/runtest.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/0106ad4e27389671bbf411ab6cdf8faa926ce0ae/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0106ad4e27389671bbf411ab6cdf8faa926ce0ae/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs?ref=0106ad4e27389671bbf411ab6cdf8faa926ce0ae", "patch": "@@ -2782,6 +2782,18 @@ impl<'test> TestCx<'test> {\n             cmd.env(\"RUSTFLAGS\", \"-Ctarget-feature=-crt-static\").env(\"IS_MUSL_HOST\", \"1\");\n         }\n \n+        if self.config.bless {\n+            cmd.env(\"RUSTC_BLESS_TEST\", \"--bless\");\n+            // Assume this option is active if the environment variable is \"defined\", with _any_ value.\n+            // As an example, a `Makefile` can use this option by:\n+            //\n+            //   ifdef RUSTC_BLESS_TEST\n+            //       cp \"$(TMPDIR)\"/actual_something.ext expected_something.ext\n+            //   else\n+            //       $(DIFF) expected_something.ext \"$(TMPDIR)\"/actual_something.ext\n+            //   endif\n+        }\n+\n         if self.config.target.contains(\"msvc\") && self.config.cc != \"\" {\n             // We need to pass a path to `lib.exe`, so assume that `cc` is `cl.exe`\n             // and that `lib.exe` lives next to it."}]}