{"sha": "d40b6cf086734109ec402aa546eca4d3925732ca", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ0MGI2Y2YwODY3MzQxMDllYzQwMmFhNTQ2ZWNhNGQzOTI1NzMyY2E=", "commit": {"author": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2018-09-26T23:45:09Z"}, "committer": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2018-09-28T03:52:53Z"}, "message": "Update ui lines", "tree": {"sha": "785c8a56a946696bc235887a9371ef0507e6b1ef", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/785c8a56a946696bc235887a9371ef0507e6b1ef"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d40b6cf086734109ec402aa546eca4d3925732ca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d40b6cf086734109ec402aa546eca4d3925732ca", "html_url": "https://github.com/rust-lang/rust/commit/d40b6cf086734109ec402aa546eca4d3925732ca", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d40b6cf086734109ec402aa546eca4d3925732ca/comments", "author": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ce034951fb907c8aa6abd5e6e04769e5e628953c", "url": "https://api.github.com/repos/rust-lang/rust/commits/ce034951fb907c8aa6abd5e6e04769e5e628953c", "html_url": "https://github.com/rust-lang/rust/commit/ce034951fb907c8aa6abd5e6e04769e5e628953c"}], "stats": {"total": 62, "additions": 31, "deletions": 31}, "files": [{"sha": "bdbb99de4608fa22312e92c6bc74718ba8fc0299", "filename": "src/test/ui/issues/issue-42755.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d40b6cf086734109ec402aa546eca4d3925732ca/src%2Ftest%2Fui%2Fissues%2Fissue-42755.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d40b6cf086734109ec402aa546eca4d3925732ca/src%2Ftest%2Fui%2Fissues%2Fissue-42755.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-42755.stderr?ref=d40b6cf086734109ec402aa546eca4d3925732ca", "patch": "@@ -1,5 +1,5 @@\n error: repetition matches empty token tree\n-  --> $DIR/issue-42755.rs:14:7\n+  --> $DIR/issue-42755.rs:13:7\n    |\n LL |     ($($p:vis)*) => {} //~ ERROR repetition matches empty token tree\n    |       ^^^^^^^^"}, {"sha": "ed45ba8e85d46fa151924cbf00ec24437664123d", "filename": "src/test/ui/lint/unreachable_pub-pub_crate.stderr", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/d40b6cf086734109ec402aa546eca4d3925732ca/src%2Ftest%2Fui%2Flint%2Funreachable_pub-pub_crate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d40b6cf086734109ec402aa546eca4d3925732ca/src%2Ftest%2Fui%2Flint%2Funreachable_pub-pub_crate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Funreachable_pub-pub_crate.stderr?ref=d40b6cf086734109ec402aa546eca4d3925732ca", "patch": "@@ -1,20 +1,20 @@\n warning: unreachable `pub` item\n-  --> $DIR/unreachable_pub-pub_crate.rs:26:5\n+  --> $DIR/unreachable_pub-pub_crate.rs:25:5\n    |\n LL |     pub use std::fmt;\n    |     ---^^^^^^^^^^^^^^\n    |     |\n    |     help: consider restricting its visibility: `pub(crate)`\n    |\n note: lint level defined here\n-  --> $DIR/unreachable_pub-pub_crate.rs:22:9\n+  --> $DIR/unreachable_pub-pub_crate.rs:21:9\n    |\n LL | #![warn(unreachable_pub)]\n    |         ^^^^^^^^^^^^^^^\n    = help: or consider exporting it for use by other crates\n \n warning: unreachable `pub` item\n-  --> $DIR/unreachable_pub-pub_crate.rs:27:24\n+  --> $DIR/unreachable_pub-pub_crate.rs:26:24\n    |\n LL |     pub use std::env::{Args}; // braced-use has different item spans than unbraced\n    |     ---                ^^^^\n@@ -24,7 +24,7 @@ LL |     pub use std::env::{Args}; // braced-use has different item spans than u\n    = help: or consider exporting it for use by other crates\n \n warning: unreachable `pub` item\n-  --> $DIR/unreachable_pub-pub_crate.rs:29:5\n+  --> $DIR/unreachable_pub-pub_crate.rs:28:5\n    |\n LL |     pub struct Hydrogen {\n    |     ---^^^^^^^^^^^^^^^^\n@@ -34,23 +34,23 @@ LL |     pub struct Hydrogen {\n    = help: or consider exporting it for use by other crates\n \n warning: unreachable `pub` field\n-  --> $DIR/unreachable_pub-pub_crate.rs:31:9\n+  --> $DIR/unreachable_pub-pub_crate.rs:30:9\n    |\n LL |         pub neutrons: usize,\n    |         ---^^^^^^^^^^^^^^^^\n    |         |\n    |         help: consider restricting its visibility: `pub(crate)`\n \n warning: unreachable `pub` item\n-  --> $DIR/unreachable_pub-pub_crate.rs:37:9\n+  --> $DIR/unreachable_pub-pub_crate.rs:36:9\n    |\n LL |         pub fn count_neutrons(&self) -> usize { self.neutrons }\n    |         ---^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |         |\n    |         help: consider restricting its visibility: `pub(crate)`\n \n warning: unreachable `pub` item\n-  --> $DIR/unreachable_pub-pub_crate.rs:41:5\n+  --> $DIR/unreachable_pub-pub_crate.rs:40:5\n    |\n LL |     pub enum Helium {}\n    |     ---^^^^^^^^^^^^\n@@ -60,7 +60,7 @@ LL |     pub enum Helium {}\n    = help: or consider exporting it for use by other crates\n \n warning: unreachable `pub` item\n-  --> $DIR/unreachable_pub-pub_crate.rs:42:5\n+  --> $DIR/unreachable_pub-pub_crate.rs:41:5\n    |\n LL |     pub union Lithium { c1: usize, c2: u8 }\n    |     ---^^^^^^^^^^^^^^\n@@ -70,7 +70,7 @@ LL |     pub union Lithium { c1: usize, c2: u8 }\n    = help: or consider exporting it for use by other crates\n \n warning: unreachable `pub` item\n-  --> $DIR/unreachable_pub-pub_crate.rs:43:5\n+  --> $DIR/unreachable_pub-pub_crate.rs:42:5\n    |\n LL |     pub fn beryllium() {}\n    |     ---^^^^^^^^^^^^^^^\n@@ -80,7 +80,7 @@ LL |     pub fn beryllium() {}\n    = help: or consider exporting it for use by other crates\n \n warning: unreachable `pub` item\n-  --> $DIR/unreachable_pub-pub_crate.rs:44:5\n+  --> $DIR/unreachable_pub-pub_crate.rs:43:5\n    |\n LL |     pub trait Boron {}\n    |     ---^^^^^^^^^^^^\n@@ -90,7 +90,7 @@ LL |     pub trait Boron {}\n    = help: or consider exporting it for use by other crates\n \n warning: unreachable `pub` item\n-  --> $DIR/unreachable_pub-pub_crate.rs:45:5\n+  --> $DIR/unreachable_pub-pub_crate.rs:44:5\n    |\n LL |     pub const CARBON: usize = 1;\n    |     ---^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -100,7 +100,7 @@ LL |     pub const CARBON: usize = 1;\n    = help: or consider exporting it for use by other crates\n \n warning: unreachable `pub` item\n-  --> $DIR/unreachable_pub-pub_crate.rs:46:5\n+  --> $DIR/unreachable_pub-pub_crate.rs:45:5\n    |\n LL |     pub static NITROGEN: usize = 2;\n    |     ---^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -110,7 +110,7 @@ LL |     pub static NITROGEN: usize = 2;\n    = help: or consider exporting it for use by other crates\n \n warning: unreachable `pub` item\n-  --> $DIR/unreachable_pub-pub_crate.rs:47:5\n+  --> $DIR/unreachable_pub-pub_crate.rs:46:5\n    |\n LL |     pub type Oxygen = bool;\n    |     ---^^^^^^^^^^^^^^^^^^^^\n@@ -120,7 +120,7 @@ LL |     pub type Oxygen = bool;\n    = help: or consider exporting it for use by other crates\n \n warning: unreachable `pub` item\n-  --> $DIR/unreachable_pub-pub_crate.rs:50:47\n+  --> $DIR/unreachable_pub-pub_crate.rs:49:47\n    |\n LL |         ($visibility: vis, $name: ident) => { $visibility struct $name {} }\n    |                                               ^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -134,7 +134,7 @@ LL |     define_empty_struct_with_visibility!(pub, Fluorine);\n    = help: or consider exporting it for use by other crates\n \n warning: unreachable `pub` item\n-  --> $DIR/unreachable_pub-pub_crate.rs:55:9\n+  --> $DIR/unreachable_pub-pub_crate.rs:54:9\n    |\n LL |         pub fn catalyze() -> bool;\n    |         ---^^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "e1d00d13717123572e1a9128b583bdd77440c47c", "filename": "src/test/ui/lint/unreachable_pub.stderr", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/d40b6cf086734109ec402aa546eca4d3925732ca/src%2Ftest%2Fui%2Flint%2Funreachable_pub.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d40b6cf086734109ec402aa546eca4d3925732ca/src%2Ftest%2Fui%2Flint%2Funreachable_pub.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Funreachable_pub.stderr?ref=d40b6cf086734109ec402aa546eca4d3925732ca", "patch": "@@ -1,20 +1,20 @@\n warning: unreachable `pub` item\n-  --> $DIR/unreachable_pub.rs:21:5\n+  --> $DIR/unreachable_pub.rs:20:5\n    |\n LL |     pub use std::fmt;\n    |     ---^^^^^^^^^^^^^^\n    |     |\n    |     help: consider restricting its visibility: `crate`\n    |\n note: lint level defined here\n-  --> $DIR/unreachable_pub.rs:17:9\n+  --> $DIR/unreachable_pub.rs:16:9\n    |\n LL | #![warn(unreachable_pub)]\n    |         ^^^^^^^^^^^^^^^\n    = help: or consider exporting it for use by other crates\n \n warning: unreachable `pub` item\n-  --> $DIR/unreachable_pub.rs:22:24\n+  --> $DIR/unreachable_pub.rs:21:24\n    |\n LL |     pub use std::env::{Args}; // braced-use has different item spans than unbraced\n    |     ---                ^^^^\n@@ -24,7 +24,7 @@ LL |     pub use std::env::{Args}; // braced-use has different item spans than u\n    = help: or consider exporting it for use by other crates\n \n warning: unreachable `pub` item\n-  --> $DIR/unreachable_pub.rs:24:5\n+  --> $DIR/unreachable_pub.rs:23:5\n    |\n LL |     pub struct Hydrogen {\n    |     ---^^^^^^^^^^^^^^^^\n@@ -34,23 +34,23 @@ LL |     pub struct Hydrogen {\n    = help: or consider exporting it for use by other crates\n \n warning: unreachable `pub` field\n-  --> $DIR/unreachable_pub.rs:26:9\n+  --> $DIR/unreachable_pub.rs:25:9\n    |\n LL |         pub neutrons: usize,\n    |         ---^^^^^^^^^^^^^^^^\n    |         |\n    |         help: consider restricting its visibility: `crate`\n \n warning: unreachable `pub` item\n-  --> $DIR/unreachable_pub.rs:32:9\n+  --> $DIR/unreachable_pub.rs:31:9\n    |\n LL |         pub fn count_neutrons(&self) -> usize { self.neutrons }\n    |         ---^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |         |\n    |         help: consider restricting its visibility: `crate`\n \n warning: unreachable `pub` item\n-  --> $DIR/unreachable_pub.rs:36:5\n+  --> $DIR/unreachable_pub.rs:35:5\n    |\n LL |     pub enum Helium {}\n    |     ---^^^^^^^^^^^^\n@@ -60,7 +60,7 @@ LL |     pub enum Helium {}\n    = help: or consider exporting it for use by other crates\n \n warning: unreachable `pub` item\n-  --> $DIR/unreachable_pub.rs:37:5\n+  --> $DIR/unreachable_pub.rs:36:5\n    |\n LL |     pub union Lithium { c1: usize, c2: u8 }\n    |     ---^^^^^^^^^^^^^^\n@@ -70,7 +70,7 @@ LL |     pub union Lithium { c1: usize, c2: u8 }\n    = help: or consider exporting it for use by other crates\n \n warning: unreachable `pub` item\n-  --> $DIR/unreachable_pub.rs:38:5\n+  --> $DIR/unreachable_pub.rs:37:5\n    |\n LL |     pub fn beryllium() {}\n    |     ---^^^^^^^^^^^^^^^\n@@ -80,7 +80,7 @@ LL |     pub fn beryllium() {}\n    = help: or consider exporting it for use by other crates\n \n warning: unreachable `pub` item\n-  --> $DIR/unreachable_pub.rs:39:5\n+  --> $DIR/unreachable_pub.rs:38:5\n    |\n LL |     pub trait Boron {}\n    |     ---^^^^^^^^^^^^\n@@ -90,7 +90,7 @@ LL |     pub trait Boron {}\n    = help: or consider exporting it for use by other crates\n \n warning: unreachable `pub` item\n-  --> $DIR/unreachable_pub.rs:40:5\n+  --> $DIR/unreachable_pub.rs:39:5\n    |\n LL |     pub const CARBON: usize = 1;\n    |     ---^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -100,7 +100,7 @@ LL |     pub const CARBON: usize = 1;\n    = help: or consider exporting it for use by other crates\n \n warning: unreachable `pub` item\n-  --> $DIR/unreachable_pub.rs:41:5\n+  --> $DIR/unreachable_pub.rs:40:5\n    |\n LL |     pub static NITROGEN: usize = 2;\n    |     ---^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -110,7 +110,7 @@ LL |     pub static NITROGEN: usize = 2;\n    = help: or consider exporting it for use by other crates\n \n warning: unreachable `pub` item\n-  --> $DIR/unreachable_pub.rs:42:5\n+  --> $DIR/unreachable_pub.rs:41:5\n    |\n LL |     pub type Oxygen = bool;\n    |     ---^^^^^^^^^^^^^^^^^^^^\n@@ -120,7 +120,7 @@ LL |     pub type Oxygen = bool;\n    = help: or consider exporting it for use by other crates\n \n warning: unreachable `pub` item\n-  --> $DIR/unreachable_pub.rs:45:47\n+  --> $DIR/unreachable_pub.rs:44:47\n    |\n LL |         ($visibility: vis, $name: ident) => { $visibility struct $name {} }\n    |                                               ^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -134,7 +134,7 @@ LL |     define_empty_struct_with_visibility!(pub, Fluorine);\n    = help: or consider exporting it for use by other crates\n \n warning: unreachable `pub` item\n-  --> $DIR/unreachable_pub.rs:50:9\n+  --> $DIR/unreachable_pub.rs:49:9\n    |\n LL |         pub fn catalyze() -> bool;\n    |         ---^^^^^^^^^^^^^^^^^^^^^^^"}]}