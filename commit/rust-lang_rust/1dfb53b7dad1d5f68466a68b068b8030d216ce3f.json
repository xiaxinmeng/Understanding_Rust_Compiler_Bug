{"sha": "1dfb53b7dad1d5f68466a68b068b8030d216ce3f", "node_id": "C_kwDOAAsO6NoAKDFkZmI1M2I3ZGFkMWQ1ZjY4NDY2YTY4YjA2OGI4MDMwZDIxNmNlM2Y", "commit": {"author": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-06-24T17:18:26Z"}, "committer": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-06-24T17:18:26Z"}, "message": "improve wording of a suggestion", "tree": {"sha": "6ee4b62a5a579a2232b4c0846ddb9ad111844296", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6ee4b62a5a579a2232b4c0846ddb9ad111844296"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1dfb53b7dad1d5f68466a68b068b8030d216ce3f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1dfb53b7dad1d5f68466a68b068b8030d216ce3f", "html_url": "https://github.com/rust-lang/rust/commit/1dfb53b7dad1d5f68466a68b068b8030d216ce3f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1dfb53b7dad1d5f68466a68b068b8030d216ce3f/comments", "author": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e25129b055cae83e1a005d84c8119b74416f94ad", "url": "https://api.github.com/repos/rust-lang/rust/commits/e25129b055cae83e1a005d84c8119b74416f94ad", "html_url": "https://github.com/rust-lang/rust/commit/e25129b055cae83e1a005d84c8119b74416f94ad"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "e1ec9f13cd16605b666316116cfd8769e0e2ad97", "filename": "compiler/rustc_typeck/src/check/pat.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1dfb53b7dad1d5f68466a68b068b8030d216ce3f/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fpat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1dfb53b7dad1d5f68466a68b068b8030d216ce3f/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fpat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fpat.rs?ref=1dfb53b7dad1d5f68466a68b068b8030d216ce3f", "patch": "@@ -697,7 +697,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n \n                 Some((\n                     pat.span,\n-                    format!(\"to declare a mutable {ident_kind} use `mut variable_name`\"),\n+                    format!(\"to declare a mutable {ident_kind} use\"),\n                     format!(\"mut {binding}\"),\n                 ))\n "}, {"sha": "d9501a9bbc61e3fa75640a7a0e2b7913c2d63e13", "filename": "src/test/ui/mismatched_types/ref-pat-suggestions.stderr", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/1dfb53b7dad1d5f68466a68b068b8030d216ce3f/src%2Ftest%2Fui%2Fmismatched_types%2Fref-pat-suggestions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1dfb53b7dad1d5f68466a68b068b8030d216ce3f/src%2Ftest%2Fui%2Fmismatched_types%2Fref-pat-suggestions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Fref-pat-suggestions.stderr?ref=1dfb53b7dad1d5f68466a68b068b8030d216ce3f", "patch": "@@ -24,7 +24,7 @@ LL | fn _f1(&mut _a: u32) {}\n    |\n    = note:           expected type `u32`\n            found mutable reference `&mut _`\n-note: to declare a mutable parameter use `mut variable_name`: `mut _a`\n+note: to declare a mutable parameter use: `mut _a`\n   --> $DIR/ref-pat-suggestions.rs:4:8\n    |\n LL | fn _f1(&mut _a: u32) {}\n@@ -127,7 +127,7 @@ LL |     let _: fn(u32) = |&mut _a| ();\n    |\n    = note:           expected type `u32`\n            found mutable reference `&mut _`\n-note: to declare a mutable parameter use `mut variable_name`: `mut _a`\n+note: to declare a mutable parameter use: `mut _a`\n   --> $DIR/ref-pat-suggestions.rs:12:23\n    |\n LL |     let _: fn(u32) = |&mut _a| ();\n@@ -232,7 +232,7 @@ LL |     let _ = |&mut _a: u32| ();\n    |\n    = note:           expected type `u32`\n            found mutable reference `&mut _`\n-note: to declare a mutable parameter use `mut variable_name`: `mut _a`\n+note: to declare a mutable parameter use: `mut _a`\n   --> $DIR/ref-pat-suggestions.rs:19:14\n    |\n LL |     let _ = |&mut _a: u32| ();\n@@ -314,7 +314,7 @@ LL |         let &mut _a = 0;\n    |             ^^^^^^^   - this expression has type `{integer}`\n    |             |\n    |             expected integer, found `&mut _`\n-   |             help: to declare a mutable variable use `mut variable_name`: `mut _a`\n+   |             help: to declare a mutable variable use: `mut _a`\n    |\n    = note:           expected type `{integer}`\n            found mutable reference `&mut _`\n@@ -329,7 +329,7 @@ LL |         let S(&mut _b) = S(0);\n    |\n    = note:           expected type `u8`\n            found mutable reference `&mut _`\n-note: to declare a mutable binding use `mut variable_name`: `mut _b`\n+note: to declare a mutable binding use: `mut _b`\n   --> $DIR/ref-pat-suggestions.rs:30:15\n    |\n LL |         let S(&mut _b) = S(0);\n@@ -350,7 +350,7 @@ LL |         let (&mut _c,) = (0,);\n    |\n    = note:           expected type `{integer}`\n            found mutable reference `&mut _`\n-note: to declare a mutable binding use `mut variable_name`: `mut _c`\n+note: to declare a mutable binding use: `mut _c`\n   --> $DIR/ref-pat-suggestions.rs:31:14\n    |\n LL |         let (&mut _c,) = (0,);\n@@ -371,7 +371,7 @@ LL |             &mut _d => {}\n    |\n    = note:           expected type `{integer}`\n            found mutable reference `&mut _`\n-note: to declare a mutable binding use `mut variable_name`: `mut _d`\n+note: to declare a mutable binding use: `mut _d`\n   --> $DIR/ref-pat-suggestions.rs:34:13\n    |\n LL |             &mut _d => {}"}, {"sha": "f064a25a9c9a45b0311276572691609b932fdf8e", "filename": "src/test/ui/pattern/for-loop-bad-item.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1dfb53b7dad1d5f68466a68b068b8030d216ce3f/src%2Ftest%2Fui%2Fpattern%2Ffor-loop-bad-item.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1dfb53b7dad1d5f68466a68b068b8030d216ce3f/src%2Ftest%2Fui%2Fpattern%2Ffor-loop-bad-item.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Ffor-loop-bad-item.stderr?ref=1dfb53b7dad1d5f68466a68b068b8030d216ce3f", "patch": "@@ -8,7 +8,7 @@ LL |     for ((_, _), (&mut c, _)) in &mut map {\n    |\n    = note:           expected type `char`\n            found mutable reference `&mut _`\n-note: to declare a mutable binding use `mut variable_name`: `mut c`\n+note: to declare a mutable binding use: `mut c`\n   --> $DIR/for-loop-bad-item.rs:7:19\n    |\n LL |     for ((_, _), (&mut c, _)) in &mut map {"}]}