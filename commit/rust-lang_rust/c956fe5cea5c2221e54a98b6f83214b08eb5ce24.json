{"sha": "c956fe5cea5c2221e54a98b6f83214b08eb5ce24", "node_id": "C_kwDOAAsO6NoAKGM5NTZmZTVjZWE1YzIyMjFlNTRhOThiNmY4MzIxNGIwOGViNWNlMjQ", "commit": {"author": {"name": "Jeff", "email": "dev@jeffa.io", "date": "2022-03-04T00:45:53Z"}, "committer": {"name": "Jeff", "email": "dev@jeffa.io", "date": "2022-03-04T00:45:53Z"}, "message": "Document new recommended use of method", "tree": {"sha": "173c90388cf700640d4952c0d1ab5bb0b01a2295", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/173c90388cf700640d4952c0d1ab5bb0b01a2295"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c956fe5cea5c2221e54a98b6f83214b08eb5ce24", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c956fe5cea5c2221e54a98b6f83214b08eb5ce24", "html_url": "https://github.com/rust-lang/rust/commit/c956fe5cea5c2221e54a98b6f83214b08eb5ce24", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c956fe5cea5c2221e54a98b6f83214b08eb5ce24/comments", "author": null, "committer": null, "parents": [{"sha": "45660949132222ba7ec0905649b2affd68e0e13c", "url": "https://api.github.com/repos/rust-lang/rust/commits/45660949132222ba7ec0905649b2affd68e0e13c", "html_url": "https://github.com/rust-lang/rust/commit/45660949132222ba7ec0905649b2affd68e0e13c"}], "stats": {"total": 19, "additions": 16, "deletions": 3}, "files": [{"sha": "9af3c0d48092bb1b332091039d9c454db01dca25", "filename": "library/core/src/iter/traits/collect.rs", "status": "modified", "additions": 16, "deletions": 3, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/c956fe5cea5c2221e54a98b6f83214b08eb5ce24/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c956fe5cea5c2221e54a98b6f83214b08eb5ce24/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fcollect.rs?ref=c956fe5cea5c2221e54a98b6f83214b08eb5ce24", "patch": "@@ -4,9 +4,11 @@\n /// created from an iterator. This is common for types which describe a\n /// collection of some kind.\n ///\n-/// [`FromIterator::from_iter()`] is rarely called explicitly, and is instead\n-/// used through [`Iterator::collect()`] method. See [`Iterator::collect()`]'s\n-/// documentation for more examples.\n+/// If you want to create a collection from the contents of an iterator, the\n+/// [`Iterator::collect()`] method is preferred. However, the compiler is\n+/// sometimes unable to infer the full type of the collection. In these cases,\n+/// [`FromIterator::from_iter()`] can be more concise and readable. See the\n+/// [`Iterator::collect()`] documentation for more examples of its use.\n ///\n /// See also: [`IntoIterator`].\n ///\n@@ -32,6 +34,17 @@\n /// assert_eq!(v, vec![5, 5, 5, 5, 5]);\n /// ```\n ///\n+/// Using [`FromIterator::from_iter()`] as a more readable alternative to\n+/// [`Iterator::collect()`]:\n+///\n+/// ```\n+/// # use std::collections::VecDeque;\n+/// let first = (0..10).collect::<VecDeque<i32>>();\n+/// let second = VecDeque::from_iter(0..10);\n+///\n+/// assert_eq!(first, second);\n+/// ```\n+///\n /// Implementing `FromIterator` for your type:\n ///\n /// ```"}]}