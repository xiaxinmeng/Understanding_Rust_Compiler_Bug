{"sha": "80390871afa96ac21778deed74ab438144548f16", "node_id": "C_kwDOAAsO6NoAKDgwMzkwODcxYWZhOTZhYzIxNzc4ZGVlZDc0YWI0MzgxNDQ1NDhmMTY", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-12-18T23:38:40Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-12-18T23:38:40Z"}, "message": "Rollup merge of #91894 - pitaj:91867-incremental, r=Aaron1011\n\nRemove `in_band_lifetimes` from `rustc_incremental`\n\n#91867", "tree": {"sha": "8da38587622fc8b0938b20c0e380ed06e50208fb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8da38587622fc8b0938b20c0e380ed06e50208fb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/80390871afa96ac21778deed74ab438144548f16", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhvnEACRBK7hj4Ov3rIwAAyxQIAEyqipxXUOu58nLGvPlnWaVU\nJdMMw7YIeAQ7Qvb0MXCXWFJT+uOipEL06UewO9AzdPh6Rt2/IJFYlk64jCu4eSDy\n4Rdl37u+CMJNdf7I6GUPVovJwHWxPmWuouD1shZN2W2ZZmCMzqMSiYWMAHrJAPle\n34tgr+rNaYr3nGKQIiYU5s9xkjsirLQuCVWOOk8EyqP9A9/wYXf6ArF7IoU/S5Ps\n0Bd6xl4ZB+PcSU/FfVkiI0zkDQW0lRpznmEBjvdIwzD/O2u9NMNSnPH7XQBEs5Ja\n+5hou/wy6f3YWn4qh745shEb3GPatb42fSouIoUsK/z1x02TPT4qB4i1jP67Onk=\n=VTOD\n-----END PGP SIGNATURE-----\n", "payload": "tree 8da38587622fc8b0938b20c0e380ed06e50208fb\nparent 3f4013d449d90f3cbdd0f84f6d2877680c8eae9d\nparent 5e22500754913f55d6dcba34707b6a442c05bcc7\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1639870720 +0100\ncommitter GitHub <noreply@github.com> 1639870720 +0100\n\nRollup merge of #91894 - pitaj:91867-incremental, r=Aaron1011\n\nRemove `in_band_lifetimes` from `rustc_incremental`\n\n#91867\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/80390871afa96ac21778deed74ab438144548f16", "html_url": "https://github.com/rust-lang/rust/commit/80390871afa96ac21778deed74ab438144548f16", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/80390871afa96ac21778deed74ab438144548f16/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3f4013d449d90f3cbdd0f84f6d2877680c8eae9d", "url": "https://api.github.com/repos/rust-lang/rust/commits/3f4013d449d90f3cbdd0f84f6d2877680c8eae9d", "html_url": "https://github.com/rust-lang/rust/commit/3f4013d449d90f3cbdd0f84f6d2877680c8eae9d"}, {"sha": "5e22500754913f55d6dcba34707b6a442c05bcc7", "url": "https://api.github.com/repos/rust-lang/rust/commits/5e22500754913f55d6dcba34707b6a442c05bcc7", "html_url": "https://github.com/rust-lang/rust/commit/5e22500754913f55d6dcba34707b6a442c05bcc7"}], "stats": {"total": 15, "additions": 7, "deletions": 8}, "files": [{"sha": "4691cdd64c10deaaed0823df149258c3696a996f", "filename": "compiler/rustc_incremental/src/assert_dep_graph.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/80390871afa96ac21778deed74ab438144548f16/compiler%2Frustc_incremental%2Fsrc%2Fassert_dep_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80390871afa96ac21778deed74ab438144548f16/compiler%2Frustc_incremental%2Fsrc%2Fassert_dep_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_incremental%2Fsrc%2Fassert_dep_graph.rs?ref=80390871afa96ac21778deed74ab438144548f16", "patch": "@@ -103,7 +103,7 @@ struct IfThisChanged<'tcx> {\n     then_this_would_need: Targets,\n }\n \n-impl IfThisChanged<'tcx> {\n+impl<'tcx> IfThisChanged<'tcx> {\n     fn argument(&self, attr: &ast::Attribute) -> Option<Symbol> {\n         let mut value = None;\n         for list_item in attr.meta_item_list().unwrap_or_default() {\n@@ -172,7 +172,7 @@ impl IfThisChanged<'tcx> {\n     }\n }\n \n-impl Visitor<'tcx> for IfThisChanged<'tcx> {\n+impl<'tcx> Visitor<'tcx> for IfThisChanged<'tcx> {\n     type Map = Map<'tcx>;\n \n     fn nested_visit_map(&mut self) -> NestedVisitorMap<Self::Map> {"}, {"sha": "b5974f8fb768f587a9c9a99cfbb44fe82af86247", "filename": "compiler/rustc_incremental/src/assert_module_sources.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/80390871afa96ac21778deed74ab438144548f16/compiler%2Frustc_incremental%2Fsrc%2Fassert_module_sources.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80390871afa96ac21778deed74ab438144548f16/compiler%2Frustc_incremental%2Fsrc%2Fassert_module_sources.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_incremental%2Fsrc%2Fassert_module_sources.rs?ref=80390871afa96ac21778deed74ab438144548f16", "patch": "@@ -56,7 +56,7 @@ struct AssertModuleSource<'tcx> {\n     available_cgus: BTreeSet<String>,\n }\n \n-impl AssertModuleSource<'tcx> {\n+impl<'tcx> AssertModuleSource<'tcx> {\n     fn check_attr(&self, attr: &ast::Attribute) {\n         let (expected_reuse, comp_kind) = if attr.has_name(sym::rustc_partition_reused) {\n             (CguReuse::PreLto, ComparisonKind::AtLeast)"}, {"sha": "df64534ce54d924ae0c6bcb427d9e08502f7b100", "filename": "compiler/rustc_incremental/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/80390871afa96ac21778deed74ab438144548f16/compiler%2Frustc_incremental%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80390871afa96ac21778deed74ab438144548f16/compiler%2Frustc_incremental%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_incremental%2Fsrc%2Flib.rs?ref=80390871afa96ac21778deed74ab438144548f16", "patch": "@@ -2,7 +2,6 @@\n \n #![deny(missing_docs)]\n #![doc(html_root_url = \"https://doc.rust-lang.org/nightly/nightly-rustc/\")]\n-#![feature(in_band_lifetimes)]\n #![feature(let_else)]\n #![feature(nll)]\n #![recursion_limit = \"256\"]"}, {"sha": "7ac00b4609aaf92efe2b2aaee926d97bc46a8271", "filename": "compiler/rustc_incremental/src/persist/dirty_clean.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/80390871afa96ac21778deed74ab438144548f16/compiler%2Frustc_incremental%2Fsrc%2Fpersist%2Fdirty_clean.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80390871afa96ac21778deed74ab438144548f16/compiler%2Frustc_incremental%2Fsrc%2Fpersist%2Fdirty_clean.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_incremental%2Fsrc%2Fpersist%2Fdirty_clean.rs?ref=80390871afa96ac21778deed74ab438144548f16", "patch": "@@ -155,7 +155,7 @@ pub struct DirtyCleanVisitor<'tcx> {\n     checked_attrs: FxHashSet<ast::AttrId>,\n }\n \n-impl DirtyCleanVisitor<'tcx> {\n+impl<'tcx> DirtyCleanVisitor<'tcx> {\n     /// Possibly \"deserialize\" the attribute into a clean/dirty assertion\n     fn assertion_maybe(&mut self, item_id: LocalDefId, attr: &Attribute) -> Option<Assertion> {\n         if !attr.has_name(sym::rustc_clean) {\n@@ -352,7 +352,7 @@ impl DirtyCleanVisitor<'tcx> {\n     }\n }\n \n-impl ItemLikeVisitor<'tcx> for DirtyCleanVisitor<'tcx> {\n+impl<'tcx> ItemLikeVisitor<'tcx> for DirtyCleanVisitor<'tcx> {\n     fn visit_item(&mut self, item: &'tcx hir::Item<'tcx>) {\n         self.check_item(item.def_id, item.span);\n     }\n@@ -415,7 +415,7 @@ pub struct FindAllAttrs<'tcx> {\n     found_attrs: Vec<&'tcx Attribute>,\n }\n \n-impl FindAllAttrs<'tcx> {\n+impl<'tcx> FindAllAttrs<'tcx> {\n     fn is_active_attr(&mut self, attr: &Attribute) -> bool {\n         if attr.has_name(sym::rustc_clean) && check_config(self.tcx, attr) {\n             return true;\n@@ -434,7 +434,7 @@ impl FindAllAttrs<'tcx> {\n     }\n }\n \n-impl intravisit::Visitor<'tcx> for FindAllAttrs<'tcx> {\n+impl<'tcx> intravisit::Visitor<'tcx> for FindAllAttrs<'tcx> {\n     type Map = Map<'tcx>;\n \n     fn nested_visit_map(&mut self) -> intravisit::NestedVisitorMap<Self::Map> {"}]}