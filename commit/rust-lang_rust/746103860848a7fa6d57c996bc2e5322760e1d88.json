{"sha": "746103860848a7fa6d57c996bc2e5322760e1d88", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc0NjEwMzg2MDg0OGE3ZmE2ZDU3Yzk5NmJjMmU1MzIyNzYwZTFkODg=", "commit": {"author": {"name": "Mark Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2017-01-05T18:31:47Z"}, "committer": {"name": "Mark Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2017-01-11T02:42:37Z"}, "message": "Make type_is_immediate not depend on LLVM.\n\nThis has the nice benefit of making it much simpler to work with,\nsince it now consists of a single match statement.", "tree": {"sha": "61c29947184b88c3b625516e1d5a8cf967155acd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/61c29947184b88c3b625516e1d5a8cf967155acd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/746103860848a7fa6d57c996bc2e5322760e1d88", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/746103860848a7fa6d57c996bc2e5322760e1d88", "html_url": "https://github.com/rust-lang/rust/commit/746103860848a7fa6d57c996bc2e5322760e1d88", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/746103860848a7fa6d57c996bc2e5322760e1d88/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0500fbf6ba83b9a6634a5e0580963b44683b44c6", "url": "https://api.github.com/repos/rust-lang/rust/commits/0500fbf6ba83b9a6634a5e0580963b44683b44c6", "html_url": "https://github.com/rust-lang/rust/commit/0500fbf6ba83b9a6634a5e0580963b44683b44c6"}], "stats": {"total": 33, "additions": 16, "deletions": 17}, "files": [{"sha": "b72c1e553730d9644c81b700b38366c6f1c1f656", "filename": "src/librustc_trans/common.rs", "status": "modified", "additions": 16, "deletions": 17, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/746103860848a7fa6d57c996bc2e5322760e1d88/src%2Flibrustc_trans%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/746103860848a7fa6d57c996bc2e5322760e1d88/src%2Flibrustc_trans%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fcommon.rs?ref=746103860848a7fa6d57c996bc2e5322760e1d88", "patch": "@@ -58,24 +58,23 @@ pub fn type_is_fat_ptr<'a, 'tcx>(ccx: &CrateContext<'a, 'tcx>, ty: Ty<'tcx>) ->\n }\n \n pub fn type_is_immediate<'a, 'tcx>(ccx: &CrateContext<'a, 'tcx>, ty: Ty<'tcx>) -> bool {\n-    use machine::llsize_of_alloc;\n-    use type_of::sizing_type_of;\n-\n-    let simple = ty.is_scalar() ||\n-        ty.is_unique() || ty.is_region_ptr() ||\n-        ty.is_simd();\n-    if simple && !type_is_fat_ptr(ccx, ty) {\n-        return true;\n-    }\n-    if !ccx.shared().type_is_sized(ty) {\n-        return false;\n-    }\n-    match ty.sty {\n-        ty::TyAdt(..) | ty::TyTuple(..) | ty::TyArray(..) | ty::TyClosure(..) => {\n-            let llty = sizing_type_of(ccx, ty);\n-            llsize_of_alloc(ccx, llty) <= llsize_of_alloc(ccx, ccx.int_type())\n+    let layout = ccx.layout_of(ty);\n+    match *layout {\n+        Layout::CEnum { .. } |\n+        Layout::Scalar { .. } |\n+        Layout::Vector { .. } => true,\n+\n+        Layout::FatPointer { .. } => false,\n+\n+        Layout::Array { .. } |\n+        Layout::Univariant { .. } |\n+        Layout::General { .. } |\n+        Layout::UntaggedUnion { .. } |\n+        Layout::RawNullablePointer { .. } |\n+        Layout::StructWrappedNullablePointer { .. } => {\n+            let dl = &ccx.tcx().data_layout;\n+            !layout.is_unsized() && layout.size(dl) <= dl.pointer_size\n         }\n-        _ => type_is_zero_size(ccx, ty)\n     }\n }\n "}]}