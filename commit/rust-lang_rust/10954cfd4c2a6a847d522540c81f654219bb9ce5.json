{"sha": "10954cfd4c2a6a847d522540c81f654219bb9ce5", "node_id": "C_kwDOAAsO6NoAKDEwOTU0Y2ZkNGMyYTZhODQ3ZDUyMjU0MGM4MWY2NTQyMTliYjljZTU", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-11-19T21:03:43Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-04-17T09:03:33Z"}, "message": "Visit generics inside visit_fn.", "tree": {"sha": "542de07c2e5fad596852a70c1955f56722b39b96", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/542de07c2e5fad596852a70c1955f56722b39b96"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/10954cfd4c2a6a847d522540c81f654219bb9ce5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/10954cfd4c2a6a847d522540c81f654219bb9ce5", "html_url": "https://github.com/rust-lang/rust/commit/10954cfd4c2a6a847d522540c81f654219bb9ce5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/10954cfd4c2a6a847d522540c81f654219bb9ce5/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a11c79b821f4b8c1ff39217313f4691e2af847d6", "url": "https://api.github.com/repos/rust-lang/rust/commits/a11c79b821f4b8c1ff39217313f4691e2af847d6", "html_url": "https://github.com/rust-lang/rust/commit/a11c79b821f4b8c1ff39217313f4691e2af847d6"}], "stats": {"total": 31, "additions": 20, "deletions": 11}, "files": [{"sha": "ad2502b041840ca04036fe025f2b299532f6292c", "filename": "src/items.rs", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/10954cfd4c2a6a847d522540c81f654219bb9ce5/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/10954cfd4c2a6a847d522540c81f654219bb9ce5/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=10954cfd4c2a6a847d522540c81f654219bb9ce5", "patch": "@@ -204,12 +204,11 @@ impl<'a> FnSig<'a> {\n \n     pub(crate) fn from_fn_kind(\n         fn_kind: &'a visit::FnKind<'_>,\n-        generics: &'a ast::Generics,\n         decl: &'a ast::FnDecl,\n         defaultness: ast::Defaultness,\n     ) -> FnSig<'a> {\n         match *fn_kind {\n-            visit::FnKind::Fn(fn_ctxt, _, fn_sig, vis, _) => match fn_ctxt {\n+            visit::FnKind::Fn(fn_ctxt, _, fn_sig, vis, generics, _) => match fn_ctxt {\n                 visit::FnCtxt::Assoc(..) => {\n                     let mut fn_sig = FnSig::from_method_sig(fn_sig, generics, vis);\n                     fn_sig.defaultness = defaultness;\n@@ -3180,8 +3179,14 @@ impl Rewrite for ast::ForeignItem {\n                     let inner_attrs = inner_attributes(&self.attrs);\n                     let fn_ctxt = visit::FnCtxt::Foreign;\n                     visitor.visit_fn(\n-                        visit::FnKind::Fn(fn_ctxt, self.ident, sig, &self.vis, Some(body)),\n-                        generics,\n+                        visit::FnKind::Fn(\n+                            fn_ctxt,\n+                            self.ident,\n+                            sig,\n+                            &self.vis,\n+                            generics,\n+                            Some(body),\n+                        ),\n                         &sig.decl,\n                         self.span,\n                         defaultness,"}, {"sha": "1621eb406b10f35514e24ae78cdc466fbd92d662", "filename": "src/visitor.rs", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/10954cfd4c2a6a847d522540c81f654219bb9ce5/src%2Fvisitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/10954cfd4c2a6a847d522540c81f654219bb9ce5/src%2Fvisitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvisitor.rs?ref=10954cfd4c2a6a847d522540c81f654219bb9ce5", "patch": "@@ -382,7 +382,6 @@ impl<'b, 'a: 'b> FmtVisitor<'a> {\n     pub(crate) fn visit_fn(\n         &mut self,\n         fk: visit::FnKind<'_>,\n-        generics: &ast::Generics,\n         fd: &ast::FnDecl,\n         s: Span,\n         defaultness: ast::Defaultness,\n@@ -391,12 +390,12 @@ impl<'b, 'a: 'b> FmtVisitor<'a> {\n         let indent = self.block_indent;\n         let block;\n         let rewrite = match fk {\n-            visit::FnKind::Fn(_, ident, _, _, Some(ref b)) => {\n+            visit::FnKind::Fn(_, ident, _, _, _, Some(ref b)) => {\n                 block = b;\n                 self.rewrite_fn_before_block(\n                     indent,\n                     ident,\n-                    &FnSig::from_fn_kind(&fk, generics, fd, defaultness),\n+                    &FnSig::from_fn_kind(&fk, fd, defaultness),\n                     mk_sp(s.lo(), b.span.lo()),\n                 )\n             }\n@@ -552,8 +551,14 @@ impl<'b, 'a: 'b> FmtVisitor<'a> {\n                             _ => visit::FnCtxt::Foreign,\n                         };\n                         self.visit_fn(\n-                            visit::FnKind::Fn(fn_ctxt, item.ident, sig, &item.vis, Some(body)),\n-                            generics,\n+                            visit::FnKind::Fn(\n+                                fn_ctxt,\n+                                item.ident,\n+                                sig,\n+                                &item.vis,\n+                                generics,\n+                                Some(body),\n+                            ),\n                             &sig.decl,\n                             item.span,\n                             defaultness,\n@@ -642,8 +647,7 @@ impl<'b, 'a: 'b> FmtVisitor<'a> {\n                     let inner_attrs = inner_attributes(&ai.attrs);\n                     let fn_ctxt = visit::FnCtxt::Assoc(assoc_ctxt);\n                     self.visit_fn(\n-                        visit::FnKind::Fn(fn_ctxt, ai.ident, sig, &ai.vis, Some(body)),\n-                        generics,\n+                        visit::FnKind::Fn(fn_ctxt, ai.ident, sig, &ai.vis, generics, Some(body)),\n                         &sig.decl,\n                         ai.span,\n                         defaultness,"}]}