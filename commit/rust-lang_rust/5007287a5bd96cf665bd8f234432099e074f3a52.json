{"sha": "5007287a5bd96cf665bd8f234432099e074f3a52", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUwMDcyODdhNWJkOTZjZjY2NWJkOGYyMzQ0MzIwOTllMDc0ZjNhNTI=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2019-02-07T05:57:59Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-02-07T05:57:59Z"}, "message": "Rollup merge of #58239 - taiki-e:librustc_apfloat-2018, r=Centril\n\nlibrustc_apfloat => 2018\n\nTransitions `librustc_apfloat` to Rust 2018; cc #58099\n\nr? @Centril", "tree": {"sha": "5097921dd8cc0ce7e9dcf2667cf781552000eda1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5097921dd8cc0ce7e9dcf2667cf781552000eda1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5007287a5bd96cf665bd8f234432099e074f3a52", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcW8jnCRBK7hj4Ov3rIwAAdHIIAEm3uFp7UBITtdEsF6zEJy+U\nH4yDkW0fT5Y0Zz64YcoLXF2sPP6V+tCFabcmlPNJVO26+bSLPGAt5O0raia2wM+G\n/WVXJu/4r/7gudqfuTDvKxzN0SgOSimCrpm8u3FQ8RGfXajjYRaoZCP7fZGEn1l1\nmtOUKNqj3VKqr1if9wlWB3Jbh5mkon01VNs0iiTwOCBK1Bc+4rBUWmpyAvIC0/K9\n4wkkuNRMN9zmMsja7p3UTr6rJQ2cmsrgK/bQch3FAacgEJCuHoOUQIcqyh6gEocj\n7mMHidizQ6c/O48NzpNWZldylCeD2G4zXEFmlg6Wceg/XadyPbJUOJGOyCccNJw=\n=geNJ\n-----END PGP SIGNATURE-----\n", "payload": "tree 5097921dd8cc0ce7e9dcf2667cf781552000eda1\nparent 9b2832246073c1a2fae22291b942db264153856b\nparent 0d3e17864e54edb6b041d39a145f2eec522090da\nauthor kennytm <kennytm@gmail.com> 1549519079 +0800\ncommitter GitHub <noreply@github.com> 1549519079 +0800\n\nRollup merge of #58239 - taiki-e:librustc_apfloat-2018, r=Centril\n\nlibrustc_apfloat => 2018\n\nTransitions `librustc_apfloat` to Rust 2018; cc #58099\n\nr? @Centril\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5007287a5bd96cf665bd8f234432099e074f3a52", "html_url": "https://github.com/rust-lang/rust/commit/5007287a5bd96cf665bd8f234432099e074f3a52", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5007287a5bd96cf665bd8f234432099e074f3a52/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9b2832246073c1a2fae22291b942db264153856b", "url": "https://api.github.com/repos/rust-lang/rust/commits/9b2832246073c1a2fae22291b942db264153856b", "html_url": "https://github.com/rust-lang/rust/commit/9b2832246073c1a2fae22291b942db264153856b"}, {"sha": "0d3e17864e54edb6b041d39a145f2eec522090da", "url": "https://api.github.com/repos/rust-lang/rust/commits/0d3e17864e54edb6b041d39a145f2eec522090da", "html_url": "https://github.com/rust-lang/rust/commit/0d3e17864e54edb6b041d39a145f2eec522090da"}], "stats": {"total": 29, "additions": 11, "deletions": 18}, "files": [{"sha": "c7496a9547ea6fdfc661b8abf2235a07da9a6811", "filename": "src/librustc_apfloat/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5007287a5bd96cf665bd8f234432099e074f3a52/src%2Flibrustc_apfloat%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/5007287a5bd96cf665bd8f234432099e074f3a52/src%2Flibrustc_apfloat%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_apfloat%2FCargo.toml?ref=5007287a5bd96cf665bd8f234432099e074f3a52", "patch": "@@ -2,6 +2,7 @@\n authors = [\"The Rust Project Developers\"]\n name = \"rustc_apfloat\"\n version = \"0.0.0\"\n+edition = \"2018\"\n \n [lib]\n name = \"rustc_apfloat\""}, {"sha": "58066a9cada47af91d375d3ccf5eed62c5f4687a", "filename": "src/librustc_apfloat/ieee.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5007287a5bd96cf665bd8f234432099e074f3a52/src%2Flibrustc_apfloat%2Fieee.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5007287a5bd96cf665bd8f234432099e074f3a52/src%2Flibrustc_apfloat%2Fieee.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_apfloat%2Fieee.rs?ref=5007287a5bd96cf665bd8f234432099e074f3a52", "patch": "@@ -1,5 +1,5 @@\n-use {Category, ExpInt, IEK_INF, IEK_NAN, IEK_ZERO};\n-use {Float, FloatConvert, ParseError, Round, Status, StatusAnd};\n+use crate::{Category, ExpInt, IEK_INF, IEK_NAN, IEK_ZERO};\n+use crate::{Float, FloatConvert, ParseError, Round, Status, StatusAnd};\n \n use smallvec::{SmallVec, smallvec};\n use std::cmp::{self, Ordering};\n@@ -325,7 +325,7 @@ impl<S> Neg for IeeeFloat<S> {\n /// 1.01E-2              4        2       0.0101\n /// 1.01E-2              4        1       1.01E-2\n impl<S: Semantics> fmt::Display for IeeeFloat<S> {\n-    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n+    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n         let width = f.width().unwrap_or(3);\n         let alternate = f.alternate();\n \n@@ -614,7 +614,7 @@ impl<S: Semantics> fmt::Display for IeeeFloat<S> {\n }\n \n impl<S: Semantics> fmt::Debug for IeeeFloat<S> {\n-    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n+    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n         write!(f, \"{}({:?} | {}{:?} * 2^{})\",\n                self, self.category,\n                if self.sign { \"-\" } else { \"+\" },"}, {"sha": "17311f0688fe675925b461f6bc1900dcda3eea28", "filename": "src/librustc_apfloat/lib.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5007287a5bd96cf665bd8f234432099e074f3a52/src%2Flibrustc_apfloat%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5007287a5bd96cf665bd8f234432099e074f3a52/src%2Flibrustc_apfloat%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_apfloat%2Flib.rs?ref=5007287a5bd96cf665bd8f234432099e074f3a52", "patch": "@@ -34,24 +34,20 @@\n       html_favicon_url = \"https://doc.rust-lang.org/favicon.ico\",\n       html_root_url = \"https://doc.rust-lang.org/nightly/\")]\n #![forbid(unsafe_code)]\n+#![deny(rust_2018_idioms)]\n \n-#![feature(nll)]\n #![feature(try_from)]\n // See librustc_cratesio_shim/Cargo.toml for a comment explaining this.\n #[allow(unused_extern_crates)]\n extern crate rustc_cratesio_shim;\n \n-#[macro_use]\n-extern crate bitflags;\n-extern crate smallvec;\n-\n use std::cmp::Ordering;\n use std::fmt;\n use std::ops::{Neg, Add, Sub, Mul, Div, Rem};\n use std::ops::{AddAssign, SubAssign, MulAssign, DivAssign, RemAssign};\n use std::str::FromStr;\n \n-bitflags! {\n+bitflags::bitflags! {\n     /// IEEE-754R 7: Default exception handling.\n     ///\n     /// UNDERFLOW or OVERFLOW are always returned or-ed with INEXACT."}, {"sha": "ddccfd6ca623bad963b921b8f434e8413fbd4d16", "filename": "src/librustc_apfloat/ppc.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5007287a5bd96cf665bd8f234432099e074f3a52/src%2Flibrustc_apfloat%2Fppc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5007287a5bd96cf665bd8f234432099e074f3a52/src%2Flibrustc_apfloat%2Fppc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_apfloat%2Fppc.rs?ref=5007287a5bd96cf665bd8f234432099e074f3a52", "patch": "@@ -1,5 +1,5 @@\n-use {Category, ExpInt, Float, FloatConvert, Round, ParseError, Status, StatusAnd};\n-use ieee;\n+use crate::{Category, ExpInt, Float, FloatConvert, Round, ParseError, Status, StatusAnd};\n+use crate::ieee;\n \n use std::cmp::Ordering;\n use std::fmt;\n@@ -124,7 +124,7 @@ impl<F: Float> Neg for DoubleFloat<F> {\n }\n \n impl<F: FloatConvert<Fallback<F>>> fmt::Display for DoubleFloat<F> {\n-    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n+    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n         fmt::Display::fmt(&Fallback::from(*self), f)\n     }\n }"}, {"sha": "108b2114439d42010f5993758a13e8f87550610e", "filename": "src/librustc_apfloat/tests/ieee.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5007287a5bd96cf665bd8f234432099e074f3a52/src%2Flibrustc_apfloat%2Ftests%2Fieee.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5007287a5bd96cf665bd8f234432099e074f3a52/src%2Flibrustc_apfloat%2Ftests%2Fieee.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_apfloat%2Ftests%2Fieee.rs?ref=5007287a5bd96cf665bd8f234432099e074f3a52", "patch": "@@ -1,9 +1,7 @@\n-#[macro_use]\n-extern crate rustc_apfloat;\n-\n use rustc_apfloat::{Category, ExpInt, IEK_INF, IEK_NAN, IEK_ZERO};\n use rustc_apfloat::{Float, FloatConvert, ParseError, Round, Status};\n use rustc_apfloat::ieee::{Half, Single, Double, Quad, X87DoubleExtended};\n+use rustc_apfloat::unpack;\n \n trait SingleExt {\n     fn from_f32(input: f32) -> Self;"}, {"sha": "02cdeb90a12be5efaf04e76488a0f647e23dd000", "filename": "src/librustc_apfloat/tests/ppc.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5007287a5bd96cf665bd8f234432099e074f3a52/src%2Flibrustc_apfloat%2Ftests%2Fppc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5007287a5bd96cf665bd8f234432099e074f3a52/src%2Flibrustc_apfloat%2Ftests%2Fppc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_apfloat%2Ftests%2Fppc.rs?ref=5007287a5bd96cf665bd8f234432099e074f3a52", "patch": "@@ -1,5 +1,3 @@\n-extern crate rustc_apfloat;\n-\n use rustc_apfloat::{Category, Float, Round};\n use rustc_apfloat::ppc::DoubleDouble;\n "}]}