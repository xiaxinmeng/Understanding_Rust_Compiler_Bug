{"sha": "c18afcd83a810db6921841a30aa874f98fe18f12", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMxOGFmY2Q4M2E4MTBkYjY5MjE4NDFhMzBhYTg3NGY5OGZlMThmMTI=", "commit": {"author": {"name": "Steven Fackler", "email": "sfackler@gmail.com", "date": "2013-10-19T05:43:16Z"}, "committer": {"name": "Steven Fackler", "email": "sfackler@gmail.com", "date": "2013-10-19T05:44:11Z"}, "message": "Check unnecessary visibility for struct variants", "tree": {"sha": "ab216684286e625efd254bfdd3a812c611249b96", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ab216684286e625efd254bfdd3a812c611249b96"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c18afcd83a810db6921841a30aa874f98fe18f12", "comment_count": 9, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c18afcd83a810db6921841a30aa874f98fe18f12", "html_url": "https://github.com/rust-lang/rust/commit/c18afcd83a810db6921841a30aa874f98fe18f12", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c18afcd83a810db6921841a30aa874f98fe18f12/comments", "author": {"login": "sfackler", "id": 1455697, "node_id": "MDQ6VXNlcjE0NTU2OTc=", "avatar_url": "https://avatars.githubusercontent.com/u/1455697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfackler", "html_url": "https://github.com/sfackler", "followers_url": "https://api.github.com/users/sfackler/followers", "following_url": "https://api.github.com/users/sfackler/following{/other_user}", "gists_url": "https://api.github.com/users/sfackler/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfackler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfackler/subscriptions", "organizations_url": "https://api.github.com/users/sfackler/orgs", "repos_url": "https://api.github.com/users/sfackler/repos", "events_url": "https://api.github.com/users/sfackler/events{/privacy}", "received_events_url": "https://api.github.com/users/sfackler/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sfackler", "id": 1455697, "node_id": "MDQ6VXNlcjE0NTU2OTc=", "avatar_url": "https://avatars.githubusercontent.com/u/1455697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfackler", "html_url": "https://github.com/sfackler", "followers_url": "https://api.github.com/users/sfackler/followers", "following_url": "https://api.github.com/users/sfackler/following{/other_user}", "gists_url": "https://api.github.com/users/sfackler/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfackler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfackler/subscriptions", "organizations_url": "https://api.github.com/users/sfackler/orgs", "repos_url": "https://api.github.com/users/sfackler/repos", "events_url": "https://api.github.com/users/sfackler/events{/privacy}", "received_events_url": "https://api.github.com/users/sfackler/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3a7337ff17fda6480f55a0613c68b75c14b475ca", "url": "https://api.github.com/repos/rust-lang/rust/commits/3a7337ff17fda6480f55a0613c68b75c14b475ca", "html_url": "https://github.com/rust-lang/rust/commit/3a7337ff17fda6480f55a0613c68b75c14b475ca"}], "stats": {"total": 52, "additions": 39, "deletions": 13}, "files": [{"sha": "c502dac7db01ecd0d79d7d07e54f873bcee33f99", "filename": "src/librustc/middle/privacy.rs", "status": "modified", "additions": 19, "deletions": 13, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/c18afcd83a810db6921841a30aa874f98fe18f12/src%2Flibrustc%2Fmiddle%2Fprivacy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c18afcd83a810db6921841a30aa874f98fe18f12/src%2Flibrustc%2Fmiddle%2Fprivacy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fprivacy.rs?ref=c18afcd83a810db6921841a30aa874f98fe18f12", "patch": "@@ -563,6 +563,20 @@ impl<'self> PrivacyVisitor<'self> {\n                 }\n             }\n         };\n+        let check_struct = |def: &@ast::struct_def| {\n+            for f in def.fields.iter() {\n+               match f.node.kind {\n+                    ast::named_field(_, ast::public) => {\n+                        tcx.sess.span_err(f.span, \"unnecessary `pub` \\\n+                                                   visibility\");\n+                    }\n+                    ast::named_field(_, ast::private) => {\n+                        // Fields should really be private by default...\n+                    }\n+                    ast::named_field(*) | ast::unnamed_field => {}\n+                }\n+            }\n+        };\n         match item.node {\n             // implementations of traits don't need visibility qualifiers because\n             // that's controlled by having the trait in scope.\n@@ -610,24 +624,16 @@ impl<'self> PrivacyVisitor<'self> {\n                         }\n                         ast::inherited => {}\n                     }\n-                }\n-            }\n \n-            ast::item_struct(ref def, _) => {\n-                for f in def.fields.iter() {\n-                   match f.node.kind {\n-                        ast::named_field(_, ast::public) => {\n-                            tcx.sess.span_err(f.span, \"unnecessary `pub` \\\n-                                                       visibility\");\n-                        }\n-                        ast::named_field(_, ast::private) => {\n-                            // Fields should really be private by default...\n-                        }\n-                        ast::named_field(*) | ast::unnamed_field => {}\n+                    match v.node.kind {\n+                        ast::struct_variant_kind(ref s) => check_struct(s),\n+                        ast::tuple_variant_kind(*) => {}\n                     }\n                 }\n             }\n \n+            ast::item_struct(ref def, _) => check_struct(def),\n+\n             ast::item_trait(_, _, ref methods) => {\n                 for m in methods.iter() {\n                     match *m {"}, {"sha": "f37e02be12cbab6701195ee2ce1532ee4ff32eeb", "filename": "src/test/compile-fail/struct-variant-privacy.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/c18afcd83a810db6921841a30aa874f98fe18f12/src%2Ftest%2Fcompile-fail%2Fstruct-variant-privacy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c18afcd83a810db6921841a30aa874f98fe18f12/src%2Ftest%2Fcompile-fail%2Fstruct-variant-privacy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fstruct-variant-privacy.rs?ref=c18afcd83a810db6921841a30aa874f98fe18f12", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+#[feature(struct_variant)];\n+\n+pub enum Foo {\n+    Bar {\n+        pub x: int, //~ ERROR unnecessary `pub` visibility\n+        y: int,\n+        priv z: int\n+    }\n+}\n+\n+fn main() {}"}]}