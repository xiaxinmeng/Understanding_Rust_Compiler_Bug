{"sha": "5c60d1d902da615a770ef211217a46d92b3aaae7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVjNjBkMWQ5MDJkYTYxNWE3NzBlZjIxMTIxN2E0NmQ5MmIzYWFhZTc=", "commit": {"author": {"name": "Barosl Lee", "email": "vcs@barosl.com", "date": "2015-07-01T18:55:18Z"}, "committer": {"name": "Barosl Lee", "email": "vcs@barosl.com", "date": "2015-07-09T16:30:52Z"}, "message": "Preserve escape sequences in documentation comments on macro expansion\n\nEscape sequences in documentation comments must not be parsed as a\nnormal string when expanding a macro, otherwise some innocent but\ninvalid-escape-sequence-looking comments will trigger an ICE.\n\nAlthough this commit replaces normal string literals with raw string\nliterals in macro expansion, this shouldn't be much a problem\nconsidering documentation comments are converted into attributes before\nbeing passed to a macro anyways.\n\nFixes #25929.\nFixes #25943.", "tree": {"sha": "76dc3b63f7892c17d5a28159eabf5edec77a9a82", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/76dc3b63f7892c17d5a28159eabf5edec77a9a82"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5c60d1d902da615a770ef211217a46d92b3aaae7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5c60d1d902da615a770ef211217a46d92b3aaae7", "html_url": "https://github.com/rust-lang/rust/commit/5c60d1d902da615a770ef211217a46d92b3aaae7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5c60d1d902da615a770ef211217a46d92b3aaae7/comments", "author": {"login": "barosl", "id": 573768, "node_id": "MDQ6VXNlcjU3Mzc2OA==", "avatar_url": "https://avatars.githubusercontent.com/u/573768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/barosl", "html_url": "https://github.com/barosl", "followers_url": "https://api.github.com/users/barosl/followers", "following_url": "https://api.github.com/users/barosl/following{/other_user}", "gists_url": "https://api.github.com/users/barosl/gists{/gist_id}", "starred_url": "https://api.github.com/users/barosl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/barosl/subscriptions", "organizations_url": "https://api.github.com/users/barosl/orgs", "repos_url": "https://api.github.com/users/barosl/repos", "events_url": "https://api.github.com/users/barosl/events{/privacy}", "received_events_url": "https://api.github.com/users/barosl/received_events", "type": "User", "site_admin": false}, "committer": {"login": "barosl", "id": 573768, "node_id": "MDQ6VXNlcjU3Mzc2OA==", "avatar_url": "https://avatars.githubusercontent.com/u/573768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/barosl", "html_url": "https://github.com/barosl", "followers_url": "https://api.github.com/users/barosl/followers", "following_url": "https://api.github.com/users/barosl/following{/other_user}", "gists_url": "https://api.github.com/users/barosl/gists{/gist_id}", "starred_url": "https://api.github.com/users/barosl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/barosl/subscriptions", "organizations_url": "https://api.github.com/users/barosl/orgs", "repos_url": "https://api.github.com/users/barosl/repos", "events_url": "https://api.github.com/users/barosl/events{/privacy}", "received_events_url": "https://api.github.com/users/barosl/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "92a95fe5507a41bdfb055913bec1be24509a5146", "url": "https://api.github.com/repos/rust-lang/rust/commits/92a95fe5507a41bdfb055913bec1be24509a5146", "html_url": "https://github.com/rust-lang/rust/commit/92a95fe5507a41bdfb055913bec1be24509a5146"}], "stats": {"total": 27, "additions": 26, "deletions": 1}, "files": [{"sha": "a944acad84df14188c8acb0aa8d37f65b232dc41", "filename": "src/libsyntax/ast.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5c60d1d902da615a770ef211217a46d92b3aaae7/src%2Flibsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c60d1d902da615a770ef211217a46d92b3aaae7/src%2Flibsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast.rs?ref=5c60d1d902da615a770ef211217a46d92b3aaae7", "patch": "@@ -1104,7 +1104,7 @@ impl TokenTree {\n                     tts: vec![TtToken(sp, token::Ident(token::str_to_ident(\"doc\"),\n                                                        token::Plain)),\n                               TtToken(sp, token::Eq),\n-                              TtToken(sp, token::Literal(token::Str_(name), None))],\n+                              TtToken(sp, token::Literal(token::StrRaw(name, 0), None))],\n                     close_span: sp,\n                 }))\n             }"}, {"sha": "ea92f0ffebe6fc58870424f1fdbcea73902f76dc", "filename": "src/test/run-pass/macro-doc-escapes.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/5c60d1d902da615a770ef211217a46d92b3aaae7/src%2Ftest%2Frun-pass%2Fmacro-doc-escapes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c60d1d902da615a770ef211217a46d92b3aaae7/src%2Ftest%2Frun-pass%2Fmacro-doc-escapes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmacro-doc-escapes.rs?ref=5c60d1d902da615a770ef211217a46d92b3aaae7", "patch": "@@ -0,0 +1,25 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// When expanding a macro, documentation attributes (including documentation comments) must be\n+// passed \"as is\" without being parsed. Otherwise, some text will be incorrectly interpreted as\n+// escape sequences, leading to an ICE.\n+//\n+// Related issues: #25929, #25943\n+\n+macro_rules! homura {\n+    (#[$x:meta]) => ()\n+}\n+\n+homura! {\n+    /// \\madoka \\x41\n+}\n+\n+fn main() { }"}]}