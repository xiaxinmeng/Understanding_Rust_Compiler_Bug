{"sha": "25b8b35c57206a70360aca9d9432bb62105da505", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI1YjhiMzVjNTcyMDZhNzAzNjBhY2E5ZDk0MzJiYjYyMTA1ZGE1MDU=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-06-25T19:20:10Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-06-25T19:20:10Z"}, "message": "Finish compare glue for classes\n\nThis tests == and !=. I don't know what <, >, etc. should do.\nCloses #2601", "tree": {"sha": "10b57acc4c6a6c58b8a97f99d086564e36397aea", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/10b57acc4c6a6c58b8a97f99d086564e36397aea"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/25b8b35c57206a70360aca9d9432bb62105da505", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/25b8b35c57206a70360aca9d9432bb62105da505", "html_url": "https://github.com/rust-lang/rust/commit/25b8b35c57206a70360aca9d9432bb62105da505", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/25b8b35c57206a70360aca9d9432bb62105da505/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "95feaee35307ebe9ebd517cbe5ba09feecc54284", "url": "https://api.github.com/repos/rust-lang/rust/commits/95feaee35307ebe9ebd517cbe5ba09feecc54284", "html_url": "https://github.com/rust-lang/rust/commit/95feaee35307ebe9ebd517cbe5ba09feecc54284"}], "stats": {"total": 35, "additions": 28, "deletions": 7}, "files": [{"sha": "57fd23cb633093e13d5b0f8de646a765cce31b99", "filename": "src/rt/rust_shape.cpp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/25b8b35c57206a70360aca9d9432bb62105da505/src%2Frt%2Frust_shape.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/25b8b35c57206a70360aca9d9432bb62105da505/src%2Frt%2Frust_shape.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_shape.cpp?ref=25b8b35c57206a70360aca9d9432bb62105da505", "patch": "@@ -356,7 +356,7 @@ cmp::walk_struct2(const uint8_t *end_sp) {\n \n void\n cmp::walk_res2(const rust_fn *dtor, const uint8_t *end_sp) {\n-    abort();    // TODO\n+    return cmp_two_pointers();\n }\n \n void"}, {"sha": "4ef40f4f9243a79ad6d0588f37f352613e97d6af", "filename": "src/rustc/middle/trans/shape.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/25b8b35c57206a70360aca9d9432bb62105da505/src%2Frustc%2Fmiddle%2Ftrans%2Fshape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25b8b35c57206a70360aca9d9432bb62105da505/src%2Frustc%2Fmiddle%2Ftrans%2Fshape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftrans%2Fshape.rs?ref=25b8b35c57206a70360aca9d9432bb62105da505", "patch": "@@ -334,7 +334,7 @@ fn shape_of(ccx: @crate_ctxt, t: ty::t) -> [u8] {\n         let mut s = if option::is_some(m_dtor_did) {\n             [shape_res]\n           }\n-          else { [shape_struct] };\n+        else { [shape_struct] }, sub = [];\n         option::iter(m_dtor_did) {|dtor_did|\n           let ri = @{did: dtor_did, parent_id: some(did), tps: tps};\n           let id = interner::intern(ccx.shape_cx.resources, ri);\n@@ -345,8 +345,9 @@ fn shape_of(ccx: @crate_ctxt, t: ty::t) -> [u8] {\n           add_u16(s, 0_u16);\n         };\n         for ty::class_items_as_mutable_fields(ccx.tcx, did, substs).each {|f|\n-           add_substr(s, shape_of(ccx, f.mt.ty));\n+           sub += shape_of(ccx, f.mt.ty);\n         }\n+        add_substr(s, sub);\n         s\n       }\n       ty::ty_rptr(_, mt) {"}, {"sha": "59c9c2bee25b894587e8e04bfa3c0d0c76ae4018", "filename": "src/test/run-pass/binops.rs", "status": "modified", "additions": 24, "deletions": 4, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/25b8b35c57206a70360aca9d9432bb62105da505/src%2Ftest%2Frun-pass%2Fbinops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25b8b35c57206a70360aca9d9432bb62105da505/src%2Ftest%2Frun-pass%2Fbinops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbinops.rs?ref=25b8b35c57206a70360aca9d9432bb62105da505", "patch": "@@ -60,14 +60,11 @@ fn test_box() {\n }\n \n fn test_port() {\n-    // FIXME: Re-enable this once we can compare resources. (#2601)\n-    /*\n     let p1 = comm::port::<int>();\n     let p2 = comm::port::<int>();\n \n     assert (p1 == p1);\n     assert (p1 != p2);\n-    */\n }\n \n fn test_chan() {\n@@ -98,7 +95,7 @@ fn test_ptr() unsafe {\n fn test_fn() {\n     fn f() { }\n     fn g() { }\n-    fn h(i: int) { }\n+    fn h(_i: int) { }\n     let f1 = f;\n     let f2 = f;\n     let g1 = g;\n@@ -128,6 +125,28 @@ fn test_native_fn() {\n     assert test::unsupervise == test::unsupervise;\n }\n \n+class p {\n+  let mut x: int;\n+  let mut y: int;\n+  new(x: int, y: int) { self.x = x; self.y = y; }\n+}\n+\n+fn test_class() {\n+  let q = p(1, 2);\n+  let r = p(1, 2);\n+  \n+  unsafe {\n+  #error(\"q = %x, r = %x\",\n+         (unsafe::reinterpret_cast::<*p, uint>(ptr::addr_of(q))),\n+         (unsafe::reinterpret_cast::<*p, uint>(ptr::addr_of(r))));\n+  }\n+  assert(q == r);\n+  r.y = 17;\n+  assert(r.y != q.y);\n+  assert(r.y == 17);\n+  assert(q != r);\n+}\n+\n fn main() {\n     test_nil();\n     test_bool();\n@@ -138,4 +157,5 @@ fn main() {\n     test_ptr();\n     test_fn();\n     test_native_fn();\n+    test_class();\n }"}]}