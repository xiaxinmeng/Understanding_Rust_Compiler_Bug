{"sha": "32c087d632e910954f0f8e248b820d23ce57b1d2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMyYzA4N2Q2MzJlOTEwOTU0ZjBmOGUyNDhiODIwZDIzY2U1N2IxZDI=", "commit": {"author": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2015-03-20T05:44:00Z"}, "committer": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2015-03-20T05:44:00Z"}, "message": "Merge pull request #12 from djg/fix-convert-path-to-pathbuf\n\nUpdate from Path to PathBuf", "tree": {"sha": "773d63b52dcb43b5001eab8043ba152130661c6b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/773d63b52dcb43b5001eab8043ba152130661c6b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/32c087d632e910954f0f8e248b820d23ce57b1d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/32c087d632e910954f0f8e248b820d23ce57b1d2", "html_url": "https://github.com/rust-lang/rust/commit/32c087d632e910954f0f8e248b820d23ce57b1d2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/32c087d632e910954f0f8e248b820d23ce57b1d2/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3f58f829f3f875b6395759f346751d16729a84a8", "url": "https://api.github.com/repos/rust-lang/rust/commits/3f58f829f3f875b6395759f346751d16729a84a8", "html_url": "https://github.com/rust-lang/rust/commit/3f58f829f3f875b6395759f346751d16729a84a8"}, {"sha": "33e12c58b9b24008618e31044911d5c7399b76fe", "url": "https://api.github.com/repos/rust-lang/rust/commits/33e12c58b9b24008618e31044911d5c7399b76fe", "html_url": "https://github.com/rust-lang/rust/commit/33e12c58b9b24008618e31044911d5c7399b76fe"}], "stats": {"total": 17, "additions": 9, "deletions": 8}, "files": [{"sha": "d4320fb7b18875ddeadef55106c99a01dc502d8e", "filename": "src/mod.rs", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/32c087d632e910954f0f8e248b820d23ce57b1d2/src%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32c087d632e910954f0f8e248b820d23ce57b1d2/src%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmod.rs?ref=32c087d632e910954f0f8e248b820d23ce57b1d2", "patch": "@@ -15,8 +15,8 @@\n #![feature(os)]\n #![feature(core)]\n #![feature(unicode)]\n-#![feature(old_path)]\n #![feature(exit_status)]\n+#![feature(path)]\n \n // TODO we're going to allocate a whole bunch of temp Strings, is it worth\n // keeping some scratch mem for this and running our own StrPool?\n@@ -40,6 +40,7 @@ use syntax::parse::token;\n use syntax::print::pprust;\n use syntax::visit;\n \n+use std::path::PathBuf;\n use std::slice::SliceConcatExt;\n \n use changes::ChangeSet;\n@@ -542,7 +543,7 @@ fn next_char(s: &str, mut i: usize) -> usize {\n }\n \n struct RustFmtCalls {\n-    input_path: Option<Path>,\n+    input_path: Option<PathBuf>,\n }\n \n impl<'a> CompilerCalls<'a> for RustFmtCalls {\n@@ -553,7 +554,7 @@ impl<'a> CompilerCalls<'a> for RustFmtCalls {\n         Compilation::Continue\n     }\n \n-    fn some_input(&mut self, input: Input, input_path: Option<Path>) -> (Input, Option<Path>) {\n+    fn some_input(&mut self, input: Input, input_path: Option<PathBuf>) -> (Input, Option<PathBuf>) {\n         match input_path {\n             Some(ref ip) => self.input_path = Some(ip.clone()),\n             _ => {\n@@ -567,19 +568,19 @@ impl<'a> CompilerCalls<'a> for RustFmtCalls {\n     fn no_input(&mut self,\n                 _: &getopts::Matches,\n                 _: &config::Options,\n-                _: &Option<Path>,\n-                _: &Option<Path>,\n+                _: &Option<PathBuf>,\n+                _: &Option<PathBuf>,\n                 _: &diagnostics::registry::Registry)\n-                -> Option<(Input, Option<Path>)> {\n+                -> Option<(Input, Option<PathBuf>)> {\n         panic!(\"No input supplied to RustFmt\");\n     }\n \n     fn late_callback(&mut self,\n                      _: &getopts::Matches,\n                      _: &Session,\n                      _: &Input,\n-                     _: &Option<Path>,\n-                     _: &Option<Path>)\n+                     _: &Option<PathBuf>,\n+                     _: &Option<PathBuf>)\n                      -> Compilation {\n         Compilation::Continue\n     }"}]}