{"sha": "149d1d4a6e3bb8a439eff78cc6edb25f16aa47c5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE0OWQxZDRhNmUzYmI4YTQzOWVmZjc4Y2M2ZWRiMjVmMTZhYTQ3YzU=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-02-08T06:24:56Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-02-08T23:42:51Z"}, "message": "core: Add a test for blocking in native code", "tree": {"sha": "8cf83c0d9cc29e4d7a71aadcb7d209aef6d23179", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8cf83c0d9cc29e4d7a71aadcb7d209aef6d23179"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/149d1d4a6e3bb8a439eff78cc6edb25f16aa47c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/149d1d4a6e3bb8a439eff78cc6edb25f16aa47c5", "html_url": "https://github.com/rust-lang/rust/commit/149d1d4a6e3bb8a439eff78cc6edb25f16aa47c5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/149d1d4a6e3bb8a439eff78cc6edb25f16aa47c5/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "35ba9715fafe14c96081049327c808fd0c5a2792", "url": "https://api.github.com/repos/rust-lang/rust/commits/35ba9715fafe14c96081049327c808fd0c5a2792", "html_url": "https://github.com/rust-lang/rust/commit/35ba9715fafe14c96081049327c808fd0c5a2792"}], "stats": {"total": 114, "additions": 114, "deletions": 0}, "files": [{"sha": "637a684b8d8f2df6ca5fab196774a4af99b3d1ba", "filename": "src/libcore/task.rs", "status": "modified", "additions": 68, "deletions": 0, "changes": 68, "blob_url": "https://github.com/rust-lang/rust/blob/149d1d4a6e3bb8a439eff78cc6edb25f16aa47c5/src%2Flibcore%2Ftask.rs", "raw_url": "https://github.com/rust-lang/rust/raw/149d1d4a6e3bb8a439eff78cc6edb25f16aa47c5/src%2Flibcore%2Ftask.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftask.rs?ref=149d1d4a6e3bb8a439eff78cc6edb25f16aa47c5", "patch": "@@ -504,6 +504,74 @@ mod tests {\n         comm::recv(po);\n     }\n \n+    #[nolink]\n+    native mod rt {\n+        fn rust_dbg_lock_create() -> *ctypes::void;\n+        fn rust_dbg_lock_destroy(lock: *ctypes::void);\n+        fn rust_dbg_lock_lock(lock: *ctypes::void);\n+        fn rust_dbg_lock_unlock(lock: *ctypes::void);\n+        fn rust_dbg_lock_wait(lock: *ctypes::void);\n+        fn rust_dbg_lock_signal(lock: *ctypes::void);\n+    }\n+\n+    #[test]\n+    fn spawn_sched_blocking() {\n+\n+        // Testing that a task in one scheduler can block natively\n+        // without affecting other schedulers\n+        iter::repeat(20u) {||\n+\n+            let start_po = comm::port();\n+            let start_ch = comm::chan(start_po);\n+            let fin_po = comm::port();\n+            let fin_ch = comm::chan(fin_po);\n+\n+            let lock = rt::rust_dbg_lock_create();\n+\n+            spawn_sched(1u) {||\n+                rt::rust_dbg_lock_lock(lock);\n+\n+                comm::send(start_ch, ());\n+\n+                // Block the scheduler thread\n+                rt::rust_dbg_lock_wait(lock);\n+                rt::rust_dbg_lock_unlock(lock);\n+\n+                comm::send(fin_ch, ());\n+            };\n+\n+            // Wait until the other task has its lock\n+            comm::recv(start_po);\n+\n+            fn pingpong(po: comm::port<int>, ch: comm::chan<int>) {\n+                let val = 20;\n+                while val > 0 {\n+                    val = comm::recv(po);\n+                    comm::send(ch, val - 1);\n+                }\n+            }\n+\n+            let setup_po = comm::port();\n+            let setup_ch = comm::chan(setup_po);\n+            let parent_po = comm::port();\n+            let parent_ch = comm::chan(parent_po);\n+            spawn {||\n+                let child_po = comm::port();\n+                comm::send(setup_ch, comm::chan(child_po));\n+                pingpong(child_po, parent_ch);\n+            };\n+\n+            let child_ch = comm::recv(setup_po);\n+            comm::send(child_ch, 20);\n+            pingpong(parent_po, child_ch);\n+            rt::rust_dbg_lock_lock(lock);\n+            rt::rust_dbg_lock_signal(lock);\n+            rt::rust_dbg_lock_unlock(lock);\n+            comm::recv(fin_po);\n+            rt::rust_dbg_lock_destroy(lock);\n+        }\n+    }\n+\n }\n \n "}, {"sha": "192951675189d343ec89ae7fa22e1ea2442bc3e4", "filename": "src/rt/rust_builtin.cpp", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/149d1d4a6e3bb8a439eff78cc6edb25f16aa47c5/src%2Frt%2Frust_builtin.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/149d1d4a6e3bb8a439eff78cc6edb25f16aa47c5/src%2Frt%2Frust_builtin.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_builtin.cpp?ref=149d1d4a6e3bb8a439eff78cc6edb25f16aa47c5", "patch": "@@ -626,6 +626,46 @@ rust_log_console_off() {\n     log_console_off(task->kernel->env);\n }\n \n+extern \"C\" CDECL lock_and_signal *\n+rust_dbg_lock_create() {\n+    return new lock_and_signal();\n+}\n+\n+extern \"C\" CDECL void\n+rust_dbg_lock_destroy(lock_and_signal *lock) {\n+    rust_task *task = rust_task_thread::get_task();\n+    I(task->thread, lock);\n+    delete lock;\n+}\n+\n+extern \"C\" CDECL void\n+rust_dbg_lock_lock(lock_and_signal *lock) {\n+    rust_task *task = rust_task_thread::get_task();\n+    I(task->thread, lock);\n+    lock->lock();\n+}\n+\n+extern \"C\" CDECL void\n+rust_dbg_lock_unlock(lock_and_signal *lock) {\n+    rust_task *task = rust_task_thread::get_task();\n+    I(task->thread, lock);\n+    lock->unlock();\n+}\n+\n+extern \"C\" CDECL void\n+rust_dbg_lock_wait(lock_and_signal *lock) {\n+    rust_task *task = rust_task_thread::get_task();\n+    I(task->thread, lock);\n+    lock->wait();\n+}\n+\n+extern \"C\" CDECL void\n+rust_dbg_lock_signal(lock_and_signal *lock) {\n+    rust_task *task = rust_task_thread::get_task();\n+    I(task->thread, lock);\n+    lock->signal();\n+}\n+\n //\n // Local Variables:\n // mode: C++"}, {"sha": "b0acbacf4e31d892fc4f19816aafacee3186166e", "filename": "src/rt/rustrt.def.in", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/149d1d4a6e3bb8a439eff78cc6edb25f16aa47c5/src%2Frt%2Frustrt.def.in", "raw_url": "https://github.com/rust-lang/rust/raw/149d1d4a6e3bb8a439eff78cc6edb25f16aa47c5/src%2Frt%2Frustrt.def.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frustrt.def.in?ref=149d1d4a6e3bb8a439eff78cc6edb25f16aa47c5", "patch": "@@ -100,3 +100,9 @@ rust_uvtmp_read_start\n rust_uvtmp_timer\n rust_uvtmp_delete_buf\n rust_uvtmp_get_req_id\n+rust_dbg_lock_create\n+rust_dbg_lock_destroy\n+rust_dbg_lock_lock\n+rust_dbg_lock_unlock\n+rust_dbg_lock_wait\n+rust_dbg_lock_signal"}]}