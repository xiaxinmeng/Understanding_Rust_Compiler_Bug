{"sha": "35518514c472e0b7bb4dd3588c4c80bd6dd5a627", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM1NTE4NTE0YzQ3MmUwYjdiYjRkZDM1ODhjNGM4MGJkNmRkNWE2Mjc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-02-08T18:31:33Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-02-08T18:31:33Z"}, "message": "auto merge of #12109 : omasanori/rust/small-fixes, r=sfackler\n\nMost of them are to reduce warnings in testing builds.", "tree": {"sha": "93b29d0ee24f69ac1ca0aca99635549da488b111", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/93b29d0ee24f69ac1ca0aca99635549da488b111"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/35518514c472e0b7bb4dd3588c4c80bd6dd5a627", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/35518514c472e0b7bb4dd3588c4c80bd6dd5a627", "html_url": "https://github.com/rust-lang/rust/commit/35518514c472e0b7bb4dd3588c4c80bd6dd5a627", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/35518514c472e0b7bb4dd3588c4c80bd6dd5a627/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5acc998ed9b76d9c00849e007101f9c33b17c6c4", "url": "https://api.github.com/repos/rust-lang/rust/commits/5acc998ed9b76d9c00849e007101f9c33b17c6c4", "html_url": "https://github.com/rust-lang/rust/commit/5acc998ed9b76d9c00849e007101f9c33b17c6c4"}, {"sha": "f87e5078580b84aaaae8dca766533745d95c796e", "url": "https://api.github.com/repos/rust-lang/rust/commits/f87e5078580b84aaaae8dca766533745d95c796e", "html_url": "https://github.com/rust-lang/rust/commit/f87e5078580b84aaaae8dca766533745d95c796e"}], "stats": {"total": 27, "additions": 5, "deletions": 22}, "files": [{"sha": "5bf27128fbc1fc4b6baf36b5bc322122fd8578d7", "filename": "src/doc/index.md", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/35518514c472e0b7bb4dd3588c4c80bd6dd5a627/src%2Fdoc%2Findex.md", "raw_url": "https://github.com/rust-lang/rust/raw/35518514c472e0b7bb4dd3588c4c80bd6dd5a627/src%2Fdoc%2Findex.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Findex.md?ref=35518514c472e0b7bb4dd3588c4c80bd6dd5a627", "patch": "@@ -51,7 +51,6 @@ li {list-style-type: none; }\n # Tooling\n \n * [The `rustdoc` manual](rustdoc.html)\n-* [The `rustpkg` manual](rustpkg.html)\n \n # FAQs\n "}, {"sha": "0d45d5bdbab436333041ff76d218a754bfa1c148", "filename": "src/librustc/driver/driver.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/35518514c472e0b7bb4dd3588c4c80bd6dd5a627/src%2Flibrustc%2Fdriver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35518514c472e0b7bb4dd3588c4c80bd6dd5a627/src%2Flibrustc%2Fdriver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdriver%2Fdriver.rs?ref=35518514c472e0b7bb4dd3588c4c80bd6dd5a627", "patch": "@@ -1181,7 +1181,6 @@ mod test {\n     use getopts::getopts;\n     use syntax::attr;\n     use syntax::attr::AttrMetaMethods;\n-    use syntax::diagnostic;\n \n     // When the user supplies --test we should implicitly supply --cfg test\n     #[test]"}, {"sha": "6c794e031ab82b5edabac312d2ee7e803858aeea", "filename": "src/libsemver/lib.rs", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/35518514c472e0b7bb4dd3588c4c80bd6dd5a627/src%2Flibsemver%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35518514c472e0b7bb4dd3588c4c80bd6dd5a627/src%2Flibsemver%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsemver%2Flib.rs?ref=35518514c472e0b7bb4dd3588c4c80bd6dd5a627", "patch": "@@ -152,19 +152,6 @@ impl cmp::Ord for Version {\n                  (_, _) => self.pre < other.pre\n              }))\n     }\n-\n-    #[inline]\n-    fn le(&self, other: &Version) -> bool {\n-        ! (other < self)\n-    }\n-    #[inline]\n-    fn gt(&self, other: &Version) -> bool {\n-        other < self\n-    }\n-    #[inline]\n-    fn ge(&self, other: &Version) -> bool {\n-        ! (self < other)\n-    }\n }\n \n fn take_nonempty_prefix<T:Iterator<char>>(rdr: &mut T, pred: |char| -> bool)"}, {"sha": "fdef7e36bd5bd97f38c6e416558fa389ca281986", "filename": "src/libstd/c_str.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/35518514c472e0b7bb4dd3588c4c80bd6dd5a627/src%2Flibstd%2Fc_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35518514c472e0b7bb4dd3588c4c80bd6dd5a627/src%2Flibstd%2Fc_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fc_str.rs?ref=35518514c472e0b7bb4dd3588c4c80bd6dd5a627", "patch": "@@ -524,7 +524,6 @@ mod tests {\n     #[test]\n     fn test_to_c_str_fail() {\n         use task;\n-        let mut error_happened = false;\n         assert!(task::try(proc() { \"he\\x00llo\".to_c_str() }).is_err());\n     }\n "}, {"sha": "3aa3e020500eac6662bb46358516bfad712d5bdb", "filename": "src/libstd/unit.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/35518514c472e0b7bb4dd3588c4c80bd6dd5a627/src%2Flibstd%2Funit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35518514c472e0b7bb4dd3588c4c80bd6dd5a627/src%2Flibstd%2Funit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Funit.rs?ref=35518514c472e0b7bb4dd3588c4c80bd6dd5a627", "patch": "@@ -12,6 +12,7 @@\n \n #[cfg(not(test))]\n use default::Default;\n+#[cfg(not(test))]\n use cmp::{Eq, Equal, Ord, Ordering, TotalEq, TotalOrd};\n \n #[cfg(not(test))]"}, {"sha": "cfad88e24820a2ffd6e3f29ae123f4ea506cb8b8", "filename": "src/libsyntax/ext/expand.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/35518514c472e0b7bb4dd3588c4c80bd6dd5a627/src%2Flibsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35518514c472e0b7bb4dd3588c4c80bd6dd5a627/src%2Flibsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fexpand.rs?ref=35518514c472e0b7bb4dd3588c4c80bd6dd5a627", "patch": "@@ -890,17 +890,15 @@ fn original_span(cx: &ExtCtxt) -> @codemap::ExpnInfo {\n mod test {\n     use super::*;\n     use ast;\n-    use ast::{Attribute_, AttrOuter, MetaWord, EMPTY_CTXT};\n-    use ast_util::{get_sctable, mtwt_marksof, mtwt_resolve, new_rename};\n+    use ast::{Attribute_, AttrOuter, MetaWord};\n+    use ast_util::{get_sctable, mtwt_marksof, mtwt_resolve};\n     use ast_util;\n     use codemap;\n     use codemap::Spanned;\n-    use fold::*;\n     use ext::base::{CrateLoader, MacroCrate};\n     use parse;\n-    use parse::token::{fresh_mark, gensym, intern};\n     use parse::token;\n-    use util::parser_testing::{string_to_crate, string_to_crate_and_sess};\n+    use util::parser_testing::{string_to_crate_and_sess};\n     use util::parser_testing::{string_to_pat, strs_to_idents};\n     use visit;\n     use visit::Visitor;\n@@ -1227,7 +1225,7 @@ foo_module!()\n                 \"xx\" == string.get()\n             }\n         }).enumerate() {\n-            if (mtwt_resolve(v.segments[0].identifier) != resolved_binding) {\n+            if mtwt_resolve(v.segments[0].identifier) != resolved_binding {\n                 println!(\"uh oh, xx binding didn't match xx varref:\");\n                 println!(\"this is xx varref \\\\# {:?}\",idx);\n                 println!(\"binding: {:?}\",cxbind);"}]}