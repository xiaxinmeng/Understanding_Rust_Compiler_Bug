{"sha": "a92286f9c92d7dc6189bf56c8fa0487bb51d2298", "node_id": "C_kwDOAAsO6NoAKGE5MjI4NmY5YzkyZDdkYzYxODliZjU2YzhmYTA0ODdiYjUxZDIyOTg", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-04-01T10:07:05Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-04-01T10:07:05Z"}, "message": "Rollup merge of #95546 - autumnontape:allocator-realloc-align-docs, r=Amanieu\n\nadd notes about alignment-altering reallocations to Allocator docs\n\nAs I said in https://github.com/rust-lang/wg-allocators/issues/97, the fact that calls to `grow`, `grow_zeroed`, and `shrink` may request altered alignments is surprising and may be a pitfall for implementors of `Allocator` if it's left implicit. This pull request adds a note to the \"Safety\" section of each function's docs making it explicit.", "tree": {"sha": "a7970727498950f449826e42bc65af553eefaec9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a7970727498950f449826e42bc65af553eefaec9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a92286f9c92d7dc6189bf56c8fa0487bb51d2298", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiRs7KCRBK7hj4Ov3rIwAAcl8IALE1GfypUMH8JFDamYPSteKj\nZbL2pWAjLNGx3Xh1QTwX+JIvawcCTTUzcZmpxEYZ+3f/u1Jza9tTc9vIOnQPo5+Q\nNXUeK+4AFum+ALrLyhQu3WZXq3wuLe2DahuwezJIGYg78cqEwEZXEGwG40MxFR9R\nRNB3oiRQ6lyP6rFeBoz8bEFbBus0XmO4N787IF+vbHXJn0BgcT7M3Grer2/FaDWN\n/bsdZ0BxR7k78/bJIZJ07XDEGWEAA9idNw+2xDnNkt1biVz1NKkyOB57SpNTMv2N\nFa+EAmBT7GnjIL1CobInAPDQs0umc1u/gAl6s7yWhRDadlmSQhXEEj+yHc3Yc14=\n=fGjO\n-----END PGP SIGNATURE-----\n", "payload": "tree a7970727498950f449826e42bc65af553eefaec9\nparent b81d235974911be790ae75ecab72bb3a8d2a85d6\nparent e2466821add3873d1feb0cc28f3b31e7cf1629fd\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1648807625 +0200\ncommitter GitHub <noreply@github.com> 1648807625 +0200\n\nRollup merge of #95546 - autumnontape:allocator-realloc-align-docs, r=Amanieu\n\nadd notes about alignment-altering reallocations to Allocator docs\n\nAs I said in https://github.com/rust-lang/wg-allocators/issues/97, the fact that calls to `grow`, `grow_zeroed`, and `shrink` may request altered alignments is surprising and may be a pitfall for implementors of `Allocator` if it's left implicit. This pull request adds a note to the \"Safety\" section of each function's docs making it explicit.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a92286f9c92d7dc6189bf56c8fa0487bb51d2298", "html_url": "https://github.com/rust-lang/rust/commit/a92286f9c92d7dc6189bf56c8fa0487bb51d2298", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a92286f9c92d7dc6189bf56c8fa0487bb51d2298/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b81d235974911be790ae75ecab72bb3a8d2a85d6", "url": "https://api.github.com/repos/rust-lang/rust/commits/b81d235974911be790ae75ecab72bb3a8d2a85d6", "html_url": "https://github.com/rust-lang/rust/commit/b81d235974911be790ae75ecab72bb3a8d2a85d6"}, {"sha": "e2466821add3873d1feb0cc28f3b31e7cf1629fd", "url": "https://api.github.com/repos/rust-lang/rust/commits/e2466821add3873d1feb0cc28f3b31e7cf1629fd", "html_url": "https://github.com/rust-lang/rust/commit/e2466821add3873d1feb0cc28f3b31e7cf1629fd"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "242725b96bd9090330f07746d800c48a8d1747ce", "filename": "library/core/src/alloc/mod.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a92286f9c92d7dc6189bf56c8fa0487bb51d2298/library%2Fcore%2Fsrc%2Falloc%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a92286f9c92d7dc6189bf56c8fa0487bb51d2298/library%2Fcore%2Fsrc%2Falloc%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Falloc%2Fmod.rs?ref=a92286f9c92d7dc6189bf56c8fa0487bb51d2298", "patch": "@@ -173,6 +173,8 @@ pub unsafe trait Allocator {\n     /// * `old_layout` must [*fit*] that block of memory (The `new_layout` argument need not fit it.).\n     /// * `new_layout.size()` must be greater than or equal to `old_layout.size()`.\n     ///\n+    /// Note that `new_layout.align()` need not be the same as `old_layout.align()`.\n+    ///\n     /// [*currently allocated*]: #currently-allocated-memory\n     /// [*fit*]: #memory-fitting\n     ///\n@@ -234,6 +236,8 @@ pub unsafe trait Allocator {\n     /// * `old_layout` must [*fit*] that block of memory (The `new_layout` argument need not fit it.).\n     /// * `new_layout.size()` must be greater than or equal to `old_layout.size()`.\n     ///\n+    /// Note that `new_layout.align()` need not be the same as `old_layout.align()`.\n+    ///\n     /// [*currently allocated*]: #currently-allocated-memory\n     /// [*fit*]: #memory-fitting\n     ///\n@@ -296,6 +300,8 @@ pub unsafe trait Allocator {\n     /// * `old_layout` must [*fit*] that block of memory (The `new_layout` argument need not fit it.).\n     /// * `new_layout.size()` must be smaller than or equal to `old_layout.size()`.\n     ///\n+    /// Note that `new_layout.align()` need not be the same as `old_layout.align()`.\n+    ///\n     /// [*currently allocated*]: #currently-allocated-memory\n     /// [*fit*]: #memory-fitting\n     ///"}]}