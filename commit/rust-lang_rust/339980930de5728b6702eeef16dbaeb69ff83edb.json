{"sha": "339980930de5728b6702eeef16dbaeb69ff83edb", "node_id": "C_kwDOAAsO6NoAKDMzOTk4MDkzMGRlNTcyOGI2NzAyZWVlZjE2ZGJhZWI2OWZmODNlZGI", "commit": {"author": {"name": "Joshua Nelson", "email": "github@jyn.dev", "date": "2023-03-05T14:30:50Z"}, "committer": {"name": "Joshua Nelson", "email": "github@jyn.dev", "date": "2023-03-05T14:31:36Z"}, "message": "Greatly improve the error messages when `run-make/translation` fails\n\nBefore:\n```\nLD_LIBRARY_PATH=\"/home/gh-jyn514/rust/build/aarch64-unknown-linux-gnu/test/run-make/translation/translation:/home/gh-jyn514/rust/build/aarch64-unknown-linux-gnu/stage2/lib:/home/gh-jyn514/rust/build/aarch64-unknown-linux-gnu/stage0-bootstrap-tools/aarch64-unknown-linux-gnu/release/deps:/home/gh-jyn514/rust/build/aarch64-unknown-linux-gnu/stage0/lib\" '/home/gh-jyn514/rust/build/aarch64-unknown-linux-gnu/stage2/bin/rustc' --out-dir /home/gh-jyn514/rust/build/aarch64-unknown-linux-gnu/test/run-make/translation/translation -L /home/gh-jyn514/rust/build/aarch64-unknown-linux-gnu/test/run-make/translation/translation  test.rs --sysroot /home/gh-jyn514/rust/build/aarch64-unknown-linux-gnu/test/run-make/translation/translation/fakeroot -Ztranslate-lang=zh-CN 2>&1 | grep \"this is a test message\"\n------------------------------------------\n--- stderr -------------------------------\nmake: *** [Makefile:51: sysroot] Error 1\n------------------------------------------\n\nfailures:\n    [run-make] tests/run-make/translation\n```\n\nAfter:\n\n```\nLD_LIBRARY_PATH=\"/home/gh-jyn514/rust/build/aarch64-unknown-linux-gnu/test/run-make/translation/translation:/home/gh-jyn514/rust/build/aarch64-unknown-linux-gnu/stage2/lib:/home/gh-jyn514/rust/build/aarch64-unknown-linux-gnu/stage0-bootstrap-tools/aarch64-unknown-linux-gnu/release/deps:/home/gh-jyn514/rust/build/aarch64-unknown-linux-gnu/stage0/lib\" '/home/gh-jyn514/rust/build/aarch64-unknown-linux-gnu/stage2/bin/rustc' --out-dir /home/gh-jyn514/rust/build/aarch64-unknown-linux-gnu/test/run-make/translation/translation -L /home/gh-jyn514/rust/build/aarch64-unknown-linux-gnu/test/run-make/translation/translation  test.rs --sysroot /home/gh-jyn514/rust/build/aarch64-unknown-linux-gnu/test/run-make/translation/translation/fakeroot -Ztranslate-lang=zh-CN 2>&1 | grep \"this is a test message\"\n[[[ begin stdout ]]]\nerror: failed to load fluent bundle: failed to add resource: Attempt to override an existing message: \"parse_struct_literal_body_without_path\".\n\n[[[ end stdout ]]]\nError: cannot match: this is a test message\n------------------------------------------\n--- stderr -------------------------------\nmake: *** [Makefile:51: sysroot] Error 1\n------------------------------------------\n\nfailures:\n    [run-make] tests/run-make/translation\n```", "tree": {"sha": "691908c1aef87354bade61640024587e08939ff6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/691908c1aef87354bade61640024587e08939ff6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/339980930de5728b6702eeef16dbaeb69ff83edb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/339980930de5728b6702eeef16dbaeb69ff83edb", "html_url": "https://github.com/rust-lang/rust/commit/339980930de5728b6702eeef16dbaeb69ff83edb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/339980930de5728b6702eeef16dbaeb69ff83edb/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "35636f9459720513ca4ed19373a4a7c9e0ea3c46", "url": "https://api.github.com/repos/rust-lang/rust/commits/35636f9459720513ca4ed19373a4a7c9e0ea3c46", "html_url": "https://github.com/rust-lang/rust/commit/35636f9459720513ca4ed19373a4a7c9e0ea3c46"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "397fc542909ac1c6b8898a10071b5c2a2b465928", "filename": "tests/run-make/translation/Makefile", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/339980930de5728b6702eeef16dbaeb69ff83edb/tests%2Frun-make%2Ftranslation%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/339980930de5728b6702eeef16dbaeb69ff83edb/tests%2Frun-make%2Ftranslation%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-make%2Ftranslation%2FMakefile?ref=339980930de5728b6702eeef16dbaeb69ff83edb", "patch": "@@ -13,22 +13,22 @@ all: normal custom missing broken sysroot sysroot-invalid sysroot-missing\n \n # Check that the test works normally, using the built-in fallback bundle.\n normal: test.rs\n-\t$(RUSTC) $< 2>&1 | grep \"struct literal body without path\"\n+\t$(RUSTC) $< 2>&1 | $(CGREP) \"struct literal body without path\"\n \n # Check that a primary bundle can be loaded and will be preferentially used\n # where possible.\n custom: test.rs working.ftl\n-\t$(RUSTC) $< -Ztranslate-additional-ftl=$(CURDIR)/working.ftl 2>&1 | grep \"this is a test message\"\n+\t$(RUSTC) $< -Ztranslate-additional-ftl=$(CURDIR)/working.ftl 2>&1 | $(CGREP) \"this is a test message\"\n \n # Check that a primary bundle with a broken message (e.g. a interpolated\n # variable is missing) will use the fallback bundle.\n missing: test.rs missing.ftl\n-\t$(RUSTC) $< -Ztranslate-additional-ftl=$(CURDIR)/missing.ftl 2>&1 | grep \"struct literal body without path\"\n+\t$(RUSTC) $< -Ztranslate-additional-ftl=$(CURDIR)/missing.ftl 2>&1 | $(CGREP) \"struct literal body without path\"\n \n # Check that a primary bundle without the desired message will use the fallback\n # bundle.\n broken: test.rs broken.ftl\n-\t$(RUSTC) $< -Ztranslate-additional-ftl=$(CURDIR)/broken.ftl 2>&1 | grep \"struct literal body without path\"\n+\t$(RUSTC) $< -Ztranslate-additional-ftl=$(CURDIR)/broken.ftl 2>&1 | $(CGREP) \"struct literal body without path\"\n \n # Check that a locale can be loaded from the sysroot given a language\n # identifier by making a local copy of the sysroot and adding the custom locale\n@@ -48,13 +48,13 @@ sysroot: test.rs working.ftl\n \tln -s $(SYSROOT)/lib/rustlib/src/* $(FAKEROOT)/lib/rustlib/src\n \tmkdir -p $(FAKEROOT)/share/locale/zh-CN/\n \tln -s $(CURDIR)/working.ftl $(FAKEROOT)/share/locale/zh-CN/basic-translation.ftl\n-\t$(RUSTC) $< --sysroot $(FAKEROOT) -Ztranslate-lang=zh-CN 2>&1 | grep \"this is a test message\"\n+\t$(RUSTC) $< --sysroot $(FAKEROOT) -Ztranslate-lang=zh-CN 2>&1 | $(CGREP) \"this is a test message\"\n \n # Check that the compiler errors out when the sysroot requested cannot be\n # found. This test might start failing if there actually exists a Klingon\n # translation of rustc's error messages.\n-sysroot-missing: \n-\t$(RUSTC) $< -Ztranslate-lang=tlh 2>&1 | grep \"missing locale directory\"\n+sysroot-missing:\n+\t$(RUSTC) $< -Ztranslate-lang=tlh 2>&1 | $(CGREP) \"missing locale directory\"\n \n # Check that the compiler errors out when the directory for the locale in the\n # sysroot is actually a file.\n@@ -73,4 +73,4 @@ sysroot-invalid: test.rs working.ftl\n \tln -s $(SYSROOT)/lib/rustlib/src/* $(FAKEROOT)/lib/rustlib/src\n \tmkdir -p $(FAKEROOT)/share/locale\n \ttouch $(FAKEROOT)/share/locale/zh-CN\n-\t$(RUSTC) $< --sysroot $(FAKEROOT) -Ztranslate-lang=zh-CN 2>&1 | grep \"`\\$sysroot/share/locales/\\$locale` is not a directory\"\n+\t$(RUSTC) $< --sysroot $(FAKEROOT) -Ztranslate-lang=zh-CN 2>&1 | $(CGREP) \"`\\$sysroot/share/locales/\\$locale` is not a directory\""}]}