{"sha": "44b3674d8e85df58126ae005faa615be5f651c43", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ0YjM2NzRkOGU4NWRmNTgxMjZhZTAwNWZhYTYxNWJlNWY2NTFjNDM=", "commit": {"author": {"name": "Rusty Blitzerr", "email": "rusty.blitzerr@gmail.com", "date": "2018-09-28T16:21:10Z"}, "committer": {"name": "Rusty Blitzerr", "email": "rusty.blitzerr@gmail.com", "date": "2018-09-28T16:25:14Z"}, "message": "Test fixes for the change of error message for issue #54015", "tree": {"sha": "3cf2796f0a70dc67ecaa961c5de5ef7bf6fb2db7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3cf2796f0a70dc67ecaa961c5de5ef7bf6fb2db7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/44b3674d8e85df58126ae005faa615be5f651c43", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/44b3674d8e85df58126ae005faa615be5f651c43", "html_url": "https://github.com/rust-lang/rust/commit/44b3674d8e85df58126ae005faa615be5f651c43", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/44b3674d8e85df58126ae005faa615be5f651c43/comments", "author": {"login": "blitzerr", "id": 28721905, "node_id": "MDQ6VXNlcjI4NzIxOTA1", "avatar_url": "https://avatars.githubusercontent.com/u/28721905?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blitzerr", "html_url": "https://github.com/blitzerr", "followers_url": "https://api.github.com/users/blitzerr/followers", "following_url": "https://api.github.com/users/blitzerr/following{/other_user}", "gists_url": "https://api.github.com/users/blitzerr/gists{/gist_id}", "starred_url": "https://api.github.com/users/blitzerr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blitzerr/subscriptions", "organizations_url": "https://api.github.com/users/blitzerr/orgs", "repos_url": "https://api.github.com/users/blitzerr/repos", "events_url": "https://api.github.com/users/blitzerr/events{/privacy}", "received_events_url": "https://api.github.com/users/blitzerr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "blitzerr", "id": 28721905, "node_id": "MDQ6VXNlcjI4NzIxOTA1", "avatar_url": "https://avatars.githubusercontent.com/u/28721905?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blitzerr", "html_url": "https://github.com/blitzerr", "followers_url": "https://api.github.com/users/blitzerr/followers", "following_url": "https://api.github.com/users/blitzerr/following{/other_user}", "gists_url": "https://api.github.com/users/blitzerr/gists{/gist_id}", "starred_url": "https://api.github.com/users/blitzerr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blitzerr/subscriptions", "organizations_url": "https://api.github.com/users/blitzerr/orgs", "repos_url": "https://api.github.com/users/blitzerr/repos", "events_url": "https://api.github.com/users/blitzerr/events{/privacy}", "received_events_url": "https://api.github.com/users/blitzerr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d5ae6f7870ff937d69a20078bdbbc2093bde2279", "url": "https://api.github.com/repos/rust-lang/rust/commits/d5ae6f7870ff937d69a20078bdbbc2093bde2279", "html_url": "https://github.com/rust-lang/rust/commit/d5ae6f7870ff937d69a20078bdbbc2093bde2279"}], "stats": {"total": 44, "additions": 22, "deletions": 22}, "files": [{"sha": "b7803cbc804aecb8fb0b898653ccd69f325ccb56", "filename": "src/test/ui/borrowck/borrowck-for-loop-head-linkage.nll.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/44b3674d8e85df58126ae005faa615be5f651c43/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-for-loop-head-linkage.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/44b3674d8e85df58126ae005faa615be5f651c43/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-for-loop-head-linkage.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-for-loop-head-linkage.nll.stderr?ref=44b3674d8e85df58126ae005faa615be5f651c43", "patch": "@@ -5,7 +5,7 @@ LL |     for &x in &vector {\n    |               -------\n    |               |\n    |               immutable borrow occurs here\n-   |               borrow used here in later iteration of loop\n+   |               borrow used here, in later iteration of loop\n LL |         let cap = vector.capacity();\n LL |         vector.extend(repeat(0));      //~ ERROR cannot borrow\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^ mutable borrow occurs here\n@@ -17,7 +17,7 @@ LL |     for &x in &vector {\n    |               -------\n    |               |\n    |               immutable borrow occurs here\n-   |               borrow used here in later iteration of loop\n+   |               borrow used here, in later iteration of loop\n ...\n LL |         vector[1] = 5;   //~ ERROR cannot borrow\n    |         ^^^^^^ mutable borrow occurs here"}, {"sha": "81aa1e2c9602e79672f0ee47d877aa67f035e0a1", "filename": "src/test/ui/borrowck/borrowck-lend-flow-loop.nll.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/44b3674d8e85df58126ae005faa615be5f651c43/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-lend-flow-loop.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/44b3674d8e85df58126ae005faa615be5f651c43/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-lend-flow-loop.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-lend-flow-loop.nll.stderr?ref=44b3674d8e85df58126ae005faa615be5f651c43", "patch": "@@ -8,13 +8,13 @@ LL |         borrow(&*v); //~ ERROR cannot borrow\n    |                ^^^ immutable borrow occurs here\n LL |     }\n LL |     *x = box 5;\n-   |     -- borrow used here in later iteration of loop\n+   |     -- borrow used here, in later iteration of loop\n \n error[E0502]: cannot borrow `*v` as immutable because it is also borrowed as mutable\n   --> $DIR/borrowck-lend-flow-loop.rs:109:16\n    |\n LL |         **x += 1;\n-   |         -------- borrow used here in later iteration of loop\n+   |         -------- borrow used here, in later iteration of loop\n LL |         borrow(&*v); //~ ERROR cannot borrow\n    |                ^^^ immutable borrow occurs here\n LL |         if cond2 {"}, {"sha": "19ec9cf7ded60d492d4a009e294760f8c9e40cfc", "filename": "src/test/ui/borrowck/borrowck-mut-borrow-linear-errors.ast.nll.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/44b3674d8e85df58126ae005faa615be5f651c43/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-mut-borrow-linear-errors.ast.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/44b3674d8e85df58126ae005faa615be5f651c43/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-mut-borrow-linear-errors.ast.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-mut-borrow-linear-errors.ast.nll.stderr?ref=44b3674d8e85df58126ae005faa615be5f651c43", "patch": "@@ -4,7 +4,7 @@ error[E0499]: cannot borrow `x` as mutable more than once at a time\n LL |             1 => { addr.push(&mut x); } //[ast]~ ERROR [E0499]\n    |                    ----      ^^^^^^ second mutable borrow occurs here\n    |                    |\n-   |                    borrow used here in later iteration of loop\n+   |                    borrow used here, in later iteration of loop\n ...\n LL |             _ => { addr.push(&mut x); } //[ast]~ ERROR [E0499]\n    |                              ------ first mutable borrow occurs here\n@@ -13,7 +13,7 @@ error[E0499]: cannot borrow `x` as mutable more than once at a time\n   --> $DIR/borrowck-mut-borrow-linear-errors.rs:25:30\n    |\n LL |             1 => { addr.push(&mut x); } //[ast]~ ERROR [E0499]\n-   |                    ---- borrow used here in later iteration of loop\n+   |                    ---- borrow used here, in later iteration of loop\n LL |             //[mir]~^ ERROR [E0499]\n LL |             2 => { addr.push(&mut x); } //[ast]~ ERROR [E0499]\n    |                              ^^^^^^ second mutable borrow occurs here"}, {"sha": "19ec9cf7ded60d492d4a009e294760f8c9e40cfc", "filename": "src/test/ui/borrowck/borrowck-mut-borrow-linear-errors.mir.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/44b3674d8e85df58126ae005faa615be5f651c43/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-mut-borrow-linear-errors.mir.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/44b3674d8e85df58126ae005faa615be5f651c43/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-mut-borrow-linear-errors.mir.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-mut-borrow-linear-errors.mir.stderr?ref=44b3674d8e85df58126ae005faa615be5f651c43", "patch": "@@ -4,7 +4,7 @@ error[E0499]: cannot borrow `x` as mutable more than once at a time\n LL |             1 => { addr.push(&mut x); } //[ast]~ ERROR [E0499]\n    |                    ----      ^^^^^^ second mutable borrow occurs here\n    |                    |\n-   |                    borrow used here in later iteration of loop\n+   |                    borrow used here, in later iteration of loop\n ...\n LL |             _ => { addr.push(&mut x); } //[ast]~ ERROR [E0499]\n    |                              ------ first mutable borrow occurs here\n@@ -13,7 +13,7 @@ error[E0499]: cannot borrow `x` as mutable more than once at a time\n   --> $DIR/borrowck-mut-borrow-linear-errors.rs:25:30\n    |\n LL |             1 => { addr.push(&mut x); } //[ast]~ ERROR [E0499]\n-   |                    ---- borrow used here in later iteration of loop\n+   |                    ---- borrow used here, in later iteration of loop\n LL |             //[mir]~^ ERROR [E0499]\n LL |             2 => { addr.push(&mut x); } //[ast]~ ERROR [E0499]\n    |                              ^^^^^^ second mutable borrow occurs here"}, {"sha": "39efdb6ddb40d0b4c61ae416a951bd80bf0a6869", "filename": "src/test/ui/borrowck/issue-41962.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/44b3674d8e85df58126ae005faa615be5f651c43/src%2Ftest%2Fui%2Fborrowck%2Fissue-41962.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/44b3674d8e85df58126ae005faa615be5f651c43/src%2Ftest%2Fui%2Fborrowck%2Fissue-41962.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fissue-41962.stderr?ref=44b3674d8e85df58126ae005faa615be5f651c43", "patch": "@@ -20,7 +20,7 @@ error[E0382]: use of moved value (Mir)\n   --> $DIR/issue-41962.rs:17:21\n    |\n LL |         if let Some(thing) = maybe {\n-   |                     ^^^^^ value moved here in previous iteration of loop\n+   |                     ^^^^^ value moved here, in previous iteration of loop\n    |\n    = note: move occurs because value has type `std::vec::Vec<bool>`, which does not implement the `Copy` trait\n "}, {"sha": "dd445c8c3a06bc242c2ccf41d6574012a141edf7", "filename": "src/test/ui/borrowck/mut-borrow-outside-loop.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/44b3674d8e85df58126ae005faa615be5f651c43/src%2Ftest%2Fui%2Fborrowck%2Fmut-borrow-outside-loop.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/44b3674d8e85df58126ae005faa615be5f651c43/src%2Ftest%2Fui%2Fborrowck%2Fmut-borrow-outside-loop.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fmut-borrow-outside-loop.nll.stderr?ref=44b3674d8e85df58126ae005faa615be5f651c43", "patch": "@@ -17,7 +17,7 @@ LL |         let inner_second = &mut inner_void; //~ ERROR cannot borrow\n    |                            ^^^^^^^^^^^^^^^ second mutable borrow occurs here\n LL |         inner_second.use_mut();\n LL |         inner_first.use_mut();\n-   |         ----------- borrow used here in later iteration of loop\n+   |         ----------- borrow used here, in later iteration of loop\n \n error: aborting due to 2 previous errors\n "}, {"sha": "a0b90c7a34a7f8cd63479ab7525500dacadff042", "filename": "src/test/ui/issues/issue-12041.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/44b3674d8e85df58126ae005faa615be5f651c43/src%2Ftest%2Fui%2Fissues%2Fissue-12041.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/44b3674d8e85df58126ae005faa615be5f651c43/src%2Ftest%2Fui%2Fissues%2Fissue-12041.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-12041.nll.stderr?ref=44b3674d8e85df58126ae005faa615be5f651c43", "patch": "@@ -2,7 +2,7 @@ error[E0382]: use of moved value: `tx`\n   --> $DIR/issue-12041.rs:18:22\n    |\n LL |             let tx = tx;\n-   |                      ^^ value moved here in previous iteration of loop\n+   |                      ^^ value moved here, in previous iteration of loop\n    |\n    = note: move occurs because `tx` has type `std::sync::mpsc::Sender<i32>`, which does not implement the `Copy` trait\n "}, {"sha": "b25b063f3b6fbbf2379676795aa42a94f61416d0", "filename": "src/test/ui/issues/issue-52126-assign-op-invariance.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/44b3674d8e85df58126ae005faa615be5f651c43/src%2Ftest%2Fui%2Fissues%2Fissue-52126-assign-op-invariance.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/44b3674d8e85df58126ae005faa615be5f651c43/src%2Ftest%2Fui%2Fissues%2Fissue-52126-assign-op-invariance.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-52126-assign-op-invariance.nll.stderr?ref=44b3674d8e85df58126ae005faa615be5f651c43", "patch": "@@ -5,7 +5,7 @@ LL |         let v: Vec<&str> = line.split_whitespace().collect();\n    |                            ^^^^ borrowed value does not live long enough\n LL |         //~^ ERROR `line` does not live long enough\n LL |         println!(\"accumulator before add_assign {:?}\", acc.map);\n-   |                                                        ------- borrow used here in later iteration of loop\n+   |                                                        ------- borrow used here, in later iteration of loop\n ...\n LL |     }\n    |     - `line` dropped here while still borrowed"}, {"sha": "065e65702b4125b6f14580efdf37cac166bd69e5", "filename": "src/test/ui/liveness/liveness-move-in-while.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/44b3674d8e85df58126ae005faa615be5f651c43/src%2Ftest%2Fui%2Fliveness%2Fliveness-move-in-while.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/44b3674d8e85df58126ae005faa615be5f651c43/src%2Ftest%2Fui%2Fliveness%2Fliveness-move-in-while.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fliveness%2Fliveness-move-in-while.nll.stderr?ref=44b3674d8e85df58126ae005faa615be5f651c43", "patch": "@@ -4,7 +4,7 @@ error[E0382]: borrow of moved value: `y`\n LL |         println!(\"{}\", y); //~ ERROR use of moved value: `y`\n    |                        ^ value borrowed here after move\n LL |         while true { while true { while true { x = y; x.clone(); } } }\n-   |                                                    - value moved here\n+   |                                                    - value moved here, in previous iteration of loop\n    |\n    = note: move occurs because `y` has type `std::boxed::Box<isize>`, which does not implement the `Copy` trait\n "}, {"sha": "cd7fdbdb6ed1e3477fbf3f5cd080463ce8c7ddf7", "filename": "src/test/ui/nll/closures-in-loops.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/44b3674d8e85df58126ae005faa615be5f651c43/src%2Ftest%2Fui%2Fnll%2Fclosures-in-loops.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/44b3674d8e85df58126ae005faa615be5f651c43/src%2Ftest%2Fui%2Fnll%2Fclosures-in-loops.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosures-in-loops.stderr?ref=44b3674d8e85df58126ae005faa615be5f651c43", "patch": "@@ -4,7 +4,7 @@ error[E0382]: use of moved value: `x`\n LL |         || x; //~ ERROR\n    |         ^^ - use occurs due to use in closure\n    |         |\n-   |         value moved into closure here in previous iteration of loop\n+   |         value moved into closure here, in previous iteration of loop\n    |\n    = note: move occurs because `x` has type `std::string::String`, which does not implement the `Copy` trait\n "}, {"sha": "056046aa43aba7414adb755b7415ed1935facfb2", "filename": "src/test/ui/nll/issue-53807.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/44b3674d8e85df58126ae005faa615be5f651c43/src%2Ftest%2Fui%2Fnll%2Fissue-53807.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/44b3674d8e85df58126ae005faa615be5f651c43/src%2Ftest%2Fui%2Fnll%2Fissue-53807.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fissue-53807.nll.stderr?ref=44b3674d8e85df58126ae005faa615be5f651c43", "patch": "@@ -2,7 +2,7 @@ error[E0382]: use of moved value\n   --> $DIR/issue-53807.rs:14:21\n    |\n LL |         if let Some(thing) = maybe {\n-   |                     ^^^^^ value moved here in previous iteration of loop\n+   |                     ^^^^^ value moved here, in previous iteration of loop\n    |\n    = note: move occurs because value has type `std::vec::Vec<bool>`, which does not implement the `Copy` trait\n "}, {"sha": "626ffad5ba70fd3a3cafd82282a8b2ec5496d373", "filename": "src/test/ui/rfc-2005-default-binding-mode/borrowck-issue-49631.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/44b3674d8e85df58126ae005faa615be5f651c43/src%2Ftest%2Fui%2Frfc-2005-default-binding-mode%2Fborrowck-issue-49631.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/44b3674d8e85df58126ae005faa615be5f651c43/src%2Ftest%2Fui%2Frfc-2005-default-binding-mode%2Fborrowck-issue-49631.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2005-default-binding-mode%2Fborrowck-issue-49631.nll.stderr?ref=44b3674d8e85df58126ae005faa615be5f651c43", "patch": "@@ -7,7 +7,7 @@ LL |         foo.mutate();\n    |         ^^^^^^^^^^^^ mutable borrow occurs here\n LL |         //~^ ERROR cannot borrow `foo` as mutable\n LL |         println!(\"foo={:?}\", *string);\n-   |                              ------- borrow used here in later iteration of loop\n+   |                              ------- borrow used here, in later iteration of loop\n \n error: aborting due to previous error\n "}, {"sha": "a6d86f6797438f65a4473373de70cfd62f960ce0", "filename": "src/test/ui/span/regions-escape-loop-via-variable.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/44b3674d8e85df58126ae005faa615be5f651c43/src%2Ftest%2Fui%2Fspan%2Fregions-escape-loop-via-variable.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/44b3674d8e85df58126ae005faa615be5f651c43/src%2Ftest%2Fui%2Fspan%2Fregions-escape-loop-via-variable.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fregions-escape-loop-via-variable.nll.stderr?ref=44b3674d8e85df58126ae005faa615be5f651c43", "patch": "@@ -2,7 +2,7 @@ error[E0597]: `x` does not live long enough\n   --> $DIR/regions-escape-loop-via-variable.rs:21:13\n    |\n LL |         let x = 1 + *p;\n-   |                     -- borrow used here in later iteration of loop\n+   |                     -- borrow used here, in later iteration of loop\n LL |         p = &x;\n    |             ^^ borrowed value does not live long enough\n LL |     }"}, {"sha": "2f23a444dccba8ad2688ba51f3197f426b44ddc7", "filename": "src/test/ui/span/regions-escape-loop-via-vec.nll.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/44b3674d8e85df58126ae005faa615be5f651c43/src%2Ftest%2Fui%2Fspan%2Fregions-escape-loop-via-vec.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/44b3674d8e85df58126ae005faa615be5f651c43/src%2Ftest%2Fui%2Fspan%2Fregions-escape-loop-via-vec.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fregions-escape-loop-via-vec.nll.stderr?ref=44b3674d8e85df58126ae005faa615be5f651c43", "patch": "@@ -7,7 +7,7 @@ LL |     while x < 10 { //~ ERROR cannot use `x` because it was mutably borrowed\n    |           ^ use of borrowed `x`\n LL |         let mut z = x; //~ ERROR cannot use `x` because it was mutably borrowed\n LL |         _y.push(&mut z);\n-   |         -- borrow used here in later iteration of loop\n+   |         -- borrow used here, in later iteration of loop\n \n error[E0503]: cannot use `x` because it was mutably borrowed\n   --> $DIR/regions-escape-loop-via-vec.rs:16:21\n@@ -18,15 +18,15 @@ LL |     while x < 10 { //~ ERROR cannot use `x` because it was mutably borrowed\n LL |         let mut z = x; //~ ERROR cannot use `x` because it was mutably borrowed\n    |                     ^ use of borrowed `x`\n LL |         _y.push(&mut z);\n-   |         -- borrow used here in later iteration of loop\n+   |         -- borrow used here, in later iteration of loop\n \n error[E0597]: `z` does not live long enough\n   --> $DIR/regions-escape-loop-via-vec.rs:17:17\n    |\n LL |         _y.push(&mut z);\n    |         --      ^^^^^^ borrowed value does not live long enough\n    |         |\n-   |         borrow used here in later iteration of loop\n+   |         borrow used here, in later iteration of loop\n ...\n LL |     }\n    |     - `z` dropped here while still borrowed\n@@ -38,7 +38,7 @@ LL |     let mut _y = vec![&mut x];\n    |                       ------ borrow of `x` occurs here\n ...\n LL |         _y.push(&mut z);\n-   |         -- borrow used here in later iteration of loop\n+   |         -- borrow used here, in later iteration of loop\n LL |         //~^ ERROR `z` does not live long enough\n LL |         x += 1; //~ ERROR cannot assign\n    |         ^^^^^^ use of borrowed `x`"}, {"sha": "cff263231dde7d7f6ff32d51312487c2c54eded5", "filename": "src/test/ui/vec/vec-mut-iter-borrow.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/44b3674d8e85df58126ae005faa615be5f651c43/src%2Ftest%2Fui%2Fvec%2Fvec-mut-iter-borrow.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/44b3674d8e85df58126ae005faa615be5f651c43/src%2Ftest%2Fui%2Fvec%2Fvec-mut-iter-borrow.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fvec%2Fvec-mut-iter-borrow.nll.stderr?ref=44b3674d8e85df58126ae005faa615be5f651c43", "patch": "@@ -5,7 +5,7 @@ LL |     for x in &mut xs {\n    |              -------\n    |              |\n    |              first mutable borrow occurs here\n-   |              borrow used here in later iteration of loop\n+   |              borrow used here, in later iteration of loop\n LL |         xs.push(1) //~ ERROR cannot borrow `xs`\n    |         ^^ second mutable borrow occurs here\n "}]}