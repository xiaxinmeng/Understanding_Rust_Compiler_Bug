{"sha": "4918e7ad62259e4c35a0b9d6ac0f0e98e51ff7b1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ5MThlN2FkNjIyNTllNGMzNWEwYjlkNmFjMGYwZTk4ZTUxZmY3YjE=", "commit": {"author": {"name": "rail", "email": "12975677+rail-rain@users.noreply.github.com", "date": "2020-09-27T01:19:43Z"}, "committer": {"name": "rail", "email": "12975677+rail-rain@users.noreply.github.com", "date": "2020-09-27T01:19:43Z"}, "message": "Replace `snippet_opt` + `unwrap_or_else` with `snippet`", "tree": {"sha": "0157b9676b89e7f51b420ad5f14c6fb6e212b39f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0157b9676b89e7f51b420ad5f14c6fb6e212b39f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4918e7ad62259e4c35a0b9d6ac0f0e98e51ff7b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4918e7ad62259e4c35a0b9d6ac0f0e98e51ff7b1", "html_url": "https://github.com/rust-lang/rust/commit/4918e7ad62259e4c35a0b9d6ac0f0e98e51ff7b1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4918e7ad62259e4c35a0b9d6ac0f0e98e51ff7b1/comments", "author": {"login": "rail-rain", "id": 12975677, "node_id": "MDQ6VXNlcjEyOTc1Njc3", "avatar_url": "https://avatars.githubusercontent.com/u/12975677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rail-rain", "html_url": "https://github.com/rail-rain", "followers_url": "https://api.github.com/users/rail-rain/followers", "following_url": "https://api.github.com/users/rail-rain/following{/other_user}", "gists_url": "https://api.github.com/users/rail-rain/gists{/gist_id}", "starred_url": "https://api.github.com/users/rail-rain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rail-rain/subscriptions", "organizations_url": "https://api.github.com/users/rail-rain/orgs", "repos_url": "https://api.github.com/users/rail-rain/repos", "events_url": "https://api.github.com/users/rail-rain/events{/privacy}", "received_events_url": "https://api.github.com/users/rail-rain/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rail-rain", "id": 12975677, "node_id": "MDQ6VXNlcjEyOTc1Njc3", "avatar_url": "https://avatars.githubusercontent.com/u/12975677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rail-rain", "html_url": "https://github.com/rail-rain", "followers_url": "https://api.github.com/users/rail-rain/followers", "following_url": "https://api.github.com/users/rail-rain/following{/other_user}", "gists_url": "https://api.github.com/users/rail-rain/gists{/gist_id}", "starred_url": "https://api.github.com/users/rail-rain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rail-rain/subscriptions", "organizations_url": "https://api.github.com/users/rail-rain/orgs", "repos_url": "https://api.github.com/users/rail-rain/repos", "events_url": "https://api.github.com/users/rail-rain/events{/privacy}", "received_events_url": "https://api.github.com/users/rail-rain/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e855fe3620c0a6981a4238df548fa5c2f36a24c9", "url": "https://api.github.com/repos/rust-lang/rust/commits/e855fe3620c0a6981a4238df548fa5c2f36a24c9", "html_url": "https://github.com/rust-lang/rust/commit/e855fe3620c0a6981a4238df548fa5c2f36a24c9"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "647537933f722b1b70ae46f25a6815915681737b", "filename": "clippy_lints/src/loops.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/4918e7ad62259e4c35a0b9d6ac0f0e98e51ff7b1/clippy_lints%2Fsrc%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4918e7ad62259e4c35a0b9d6ac0f0e98e51ff7b1/clippy_lints%2Fsrc%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops.rs?ref=4918e7ad62259e4c35a0b9d6ac0f0e98e51ff7b1", "patch": "@@ -5,9 +5,8 @@ use crate::utils::usage::{is_unused, mutated_variables};\n use crate::utils::{\n     get_enclosing_block, get_parent_expr, get_trait_def_id, has_iter_method, higher, implements_trait,\n     is_integer_const, is_no_std_crate, is_refutable, is_type_diagnostic_item, last_path_segment, match_trait_method,\n-    match_type, match_var, multispan_sugg, qpath_res, snippet, snippet_opt, snippet_with_applicability,\n-    snippet_with_macro_callsite, span_lint, span_lint_and_help, span_lint_and_sugg, span_lint_and_then, sugg,\n-    SpanlessEq,\n+    match_type, match_var, multispan_sugg, qpath_res, snippet, snippet_with_applicability, snippet_with_macro_callsite,\n+    span_lint, span_lint_and_help, span_lint_and_sugg, span_lint_and_then, sugg, SpanlessEq,\n };\n use if_chain::if_chain;\n use rustc_ast::ast;\n@@ -1121,8 +1120,8 @@ fn build_manual_memcpy_suggestion<'tcx>(\n     let (dst_offset, dst_limit) = print_offset_and_limit(&dst);\n     let (src_offset, src_limit) = print_offset_and_limit(&src);\n \n-    let dst_base_str = snippet_opt(cx, dst.base.span).unwrap_or_else(|| \"???\".into());\n-    let src_base_str = snippet_opt(cx, src.base.span).unwrap_or_else(|| \"???\".into());\n+    let dst_base_str = snippet(cx, dst.base.span, \"???\");\n+    let src_base_str = snippet(cx, src.base.span, \"???\");\n \n     let dst = if dst_offset.as_str() == \"\" && dst_limit.as_str() == \"\" {\n         dst_base_str\n@@ -1133,6 +1132,7 @@ fn build_manual_memcpy_suggestion<'tcx>(\n             dst_offset.maybe_par(),\n             dst_limit.maybe_par()\n         )\n+        .into()\n     };\n \n     format!("}]}