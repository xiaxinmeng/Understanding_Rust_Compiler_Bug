{"sha": "efe662d474a36937702e87e7eed980c7aed6276d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVmZTY2MmQ0NzRhMzY5Mzc3MDJlODdlN2VlZDk4MGM3YWVkNjI3NmQ=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2021-08-06T13:52:47Z"}, "committer": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2021-08-06T13:52:47Z"}, "message": "Include suggested replacement in diagnostics", "tree": {"sha": "20f8f480d2b634e985e2f008ae6ef8407d09b695", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/20f8f480d2b634e985e2f008ae6ef8407d09b695"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/efe662d474a36937702e87e7eed980c7aed6276d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/efe662d474a36937702e87e7eed980c7aed6276d", "html_url": "https://github.com/rust-lang/rust/commit/efe662d474a36937702e87e7eed980c7aed6276d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/efe662d474a36937702e87e7eed980c7aed6276d/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "85d80df889bc17b736f283b73eca098b40f9c6cd", "url": "https://api.github.com/repos/rust-lang/rust/commits/85d80df889bc17b736f283b73eca098b40f9c6cd", "html_url": "https://github.com/rust-lang/rust/commit/85d80df889bc17b736f283b73eca098b40f9c6cd"}], "stats": {"total": 19, "additions": 16, "deletions": 3}, "files": [{"sha": "e60b939015aa1ab3fabdd6bdd770aa004f1490ac", "filename": "crates/rust-analyzer/src/diagnostics/to_proto.rs", "status": "modified", "additions": 16, "deletions": 3, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/efe662d474a36937702e87e7eed980c7aed6276d/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Fto_proto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/efe662d474a36937702e87e7eed980c7aed6276d/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Fto_proto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Fto_proto.rs?ref=efe662d474a36937702e87e7eed980c7aed6276d", "patch": "@@ -3,6 +3,7 @@\n use std::collections::HashMap;\n \n use flycheck::{DiagnosticLevel, DiagnosticSpan};\n+use itertools::Itertools;\n use stdx::format_to;\n use vfs::{AbsPath, AbsPathBuf};\n \n@@ -134,30 +135,42 @@ fn map_rust_child_diagnostic(\n     }\n \n     let mut edit_map: HashMap<lsp_types::Url, Vec<lsp_types::TextEdit>> = HashMap::new();\n+    let mut suggested_replacements = Vec::new();\n     for &span in &spans {\n         if let Some(suggested_replacement) = &span.suggested_replacement {\n+            suggested_replacements.push(suggested_replacement);\n             let location = location(config, workspace_root, span);\n             let edit = lsp_types::TextEdit::new(location.range, suggested_replacement.clone());\n             edit_map.entry(location.uri).or_default().push(edit);\n         }\n     }\n \n+    // rustc renders suggestion diagnostics by appending the suggested replacement, so do the same\n+    // here, otherwise the diagnostic text is missing useful information.\n+    let mut message = rd.message.clone();\n+    if !suggested_replacements.is_empty() {\n+        message.push_str(\": \");\n+        let suggestions =\n+            suggested_replacements.iter().map(|suggestion| format!(\"`{}`\", suggestion)).join(\", \");\n+        message.push_str(&suggestions);\n+    }\n+\n     if edit_map.is_empty() {\n         MappedRustChildDiagnostic::SubDiagnostic(SubDiagnostic {\n             related: lsp_types::DiagnosticRelatedInformation {\n                 location: location(config, workspace_root, spans[0]),\n-                message: rd.message.clone(),\n+                message,\n             },\n             suggested_fix: None,\n         })\n     } else {\n         MappedRustChildDiagnostic::SubDiagnostic(SubDiagnostic {\n             related: lsp_types::DiagnosticRelatedInformation {\n                 location: location(config, workspace_root, spans[0]),\n-                message: rd.message.clone(),\n+                message: message.clone(),\n             },\n             suggested_fix: Some(lsp_ext::CodeAction {\n-                title: rd.message.clone(),\n+                title: message,\n                 group: None,\n                 kind: Some(lsp_types::CodeActionKind::QUICKFIX),\n                 edit: Some(lsp_ext::SnippetWorkspaceEdit {"}]}