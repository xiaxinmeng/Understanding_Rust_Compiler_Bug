{"sha": "d14ed92f6b5aa23fd06f8affe4554f2c370bc79d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQxNGVkOTJmNmI1YWEyM2ZkMDZmOGFmZmU0NTU0ZjJjMzcwYmM3OWQ=", "commit": {"author": {"name": "Ariel Ben-Yehuda", "email": "ariel.byd@gmail.com", "date": "2017-09-05T12:19:07Z"}, "committer": {"name": "Ariel Ben-Yehuda", "email": "ariel.byd@gmail.com", "date": "2017-09-05T12:19:07Z"}, "message": "Avoid hashing when creating a DepNode from a HirId\n\nInstead, combine the already-present DefPathHash with the 32-bit\nItemLocalIndex.\n\nShould fix #44323.", "tree": {"sha": "76bb30e32ada0184124c1f7a8d699b5612f15a23", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/76bb30e32ada0184124c1f7a8d699b5612f15a23"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d14ed92f6b5aa23fd06f8affe4554f2c370bc79d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d14ed92f6b5aa23fd06f8affe4554f2c370bc79d", "html_url": "https://github.com/rust-lang/rust/commit/d14ed92f6b5aa23fd06f8affe4554f2c370bc79d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d14ed92f6b5aa23fd06f8affe4554f2c370bc79d/comments", "author": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "committer": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2f1ef9ef1181298d46e79d5dde6bafeb6483926f", "url": "https://api.github.com/repos/rust-lang/rust/commits/2f1ef9ef1181298d46e79d5dde6bafeb6483926f", "html_url": "https://github.com/rust-lang/rust/commit/2f1ef9ef1181298d46e79d5dde6bafeb6483926f"}], "stats": {"total": 21, "additions": 20, "deletions": 1}, "files": [{"sha": "57be2eb4c2415f7075e9de036866555bdcf96822", "filename": "src/librustc/dep_graph/dep_node.rs", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/d14ed92f6b5aa23fd06f8affe4554f2c370bc79d/src%2Flibrustc%2Fdep_graph%2Fdep_node.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d14ed92f6b5aa23fd06f8affe4554f2c370bc79d/src%2Flibrustc%2Fdep_graph%2Fdep_node.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdep_graph%2Fdep_node.rs?ref=d14ed92f6b5aa23fd06f8affe4554f2c370bc79d", "patch": "@@ -62,7 +62,7 @@\n \n use hir::def_id::{CrateNum, DefId};\n use hir::map::DefPathHash;\n-use hir::HirId;\n+use hir::{HirId, ItemLocalId};\n \n use ich::Fingerprint;\n use ty::{TyCtxt, Instance, InstanceDef};\n@@ -638,6 +638,25 @@ impl<'a, 'gcx: 'tcx + 'a, 'tcx: 'a> DepNodeParams<'a, 'gcx, 'tcx> for (DefIdList\n     }\n }\n \n+impl<'a, 'gcx: 'tcx + 'a, 'tcx: 'a> DepNodeParams<'a, 'gcx, 'tcx> for (HirId,) {\n+    const CAN_RECONSTRUCT_QUERY_KEY: bool = false;\n+\n+    // We actually would not need to specialize the implementation of this\n+    // method but it's faster to combine the hashes than to instantiate a full\n+    // hashing context and stable-hashing state.\n+    fn to_fingerprint(&self, tcx: TyCtxt) -> Fingerprint {\n+        let (HirId {\n+            owner,\n+            local_id: ItemLocalId(local_id),\n+        },) = *self;\n+\n+        let def_path_hash = tcx.def_path_hash(DefId::local(owner));\n+        let local_id = Fingerprint::from_smaller_hash(local_id as u64);\n+\n+        def_path_hash.0.combine(local_id)\n+    }\n+}\n+\n /// A \"work product\" corresponds to a `.o` (or other) file that we\n /// save in between runs. These ids do not have a DefId but rather\n /// some independent path or string that persists between runs without"}]}