{"sha": "ac7dfcac388991c69539ce47badce030fe160109", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFjN2RmY2FjMzg4OTkxYzY5NTM5Y2U0N2JhZGNlMDMwZmUxNjAxMDk=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-08-28T12:08:55Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-08-28T12:08:55Z"}, "message": "Fix #313 by correctly copying relocations when doing overlapping copies", "tree": {"sha": "0b073eab47749d107850e7e6799792bfb86e5ba2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0b073eab47749d107850e7e6799792bfb86e5ba2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ac7dfcac388991c69539ce47badce030fe160109", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEYFTdM4NKd7XQft77pp+NIls619kFAlmkB+wACgkQpp+NIls6\n19kR/RAArowQr0BCVX+sTga5nqy1+WbWxm80fq61o3Yh31eoHcjfXwrj5HprOfPX\np95YpXSDqkJGBqTXgTewfQLlY/Hl979nYS8gXA+z0ttyxs+9WQy7oWGiCt9+CeX4\nrwX3bl3HJ3CFq/dCIs+csAJItV0098SvS+HxiJG+ChxhRL1d2ShdCZg0dWmhnVwn\n9QQTUbv9dOj6f2iSFqS1VPmvn0pbVwbEksmniTMu0e/XfYWtvv5oIsl8ukJ9f/Cf\niDE28t2ff963OWb1gaFiAmUbAcqIaKPreQ8TD8iXQ3XeNFpWuGsgRQS9MeWMSoJt\nCaxC2dEZZ5VXnLFdCug87+v9EjSId4UO5xHOBRMWVe6KJLj90XsPbJ07f/W4rk+x\n4w26/lXvIAJQpBrt5eg5iKHr6WbSgdhLaZayKJuNFQ/DQ5hV486V9TQ/+0+43ti4\nril8EnoyWsuz2GBpR+qsYEbB/hnSdpFvEFG9o1al3YajLHD9FEvWdfpDpmBQ0g4j\nEwCMw0mXLZAqmqy2reoDkjGOca8Y1/y8UwFe4E8Jn/Qy570mpw2rKkEx+UZT5ahd\nKIJPWmqjECjkgcouMLwfWUB23ZYZX4GlymxjtY3Akg/6Wgo5LATKysWaKpeGvYsU\nAhTLjAHWygIuQaO9Vf8b7JelqC81iJhttGjfQA6+ni/PvZroxeM=\n=2CB2\n-----END PGP SIGNATURE-----", "payload": "tree 0b073eab47749d107850e7e6799792bfb86e5ba2\nparent 7355a1ea28a080e3d48287b208b9560bdf06aa0f\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1503922135 +0200\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1503922135 +0200\n\nFix #313 by correctly copying relocations when doing overlapping copies\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ac7dfcac388991c69539ce47badce030fe160109", "html_url": "https://github.com/rust-lang/rust/commit/ac7dfcac388991c69539ce47badce030fe160109", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ac7dfcac388991c69539ce47badce030fe160109/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7355a1ea28a080e3d48287b208b9560bdf06aa0f", "url": "https://api.github.com/repos/rust-lang/rust/commits/7355a1ea28a080e3d48287b208b9560bdf06aa0f", "html_url": "https://github.com/rust-lang/rust/commit/7355a1ea28a080e3d48287b208b9560bdf06aa0f"}], "stats": {"total": 30, "additions": 13, "deletions": 17}, "files": [{"sha": "34de9596f246b4d160a01b3fc50ef7157b5fd496", "filename": "src/librustc_mir/interpret/memory.rs", "status": "modified", "additions": 13, "deletions": 17, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/ac7dfcac388991c69539ce47badce030fe160109/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac7dfcac388991c69539ce47badce030fe160109/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs?ref=ac7dfcac388991c69539ce47badce030fe160109", "patch": "@@ -1088,6 +1088,17 @@ impl<'a, 'tcx, M: Machine<'tcx>> Memory<'a, 'tcx, M> {\n         let dest = dest.to_ptr()?;\n         self.check_relocation_edges(src, size)?;\n \n+        // first copy the relocations to a temporary buffer, because\n+        // `get_bytes_mut` will clear the relocations, which is correct,\n+        // since we don't want to keep any relocations at the target.\n+\n+        let relocations: Vec<_> = self.relocations(src, size)?\n+            .map(|(&offset, &alloc_id)| {\n+                // Update relocation offsets for the new positions in the destination allocation.\n+                (offset + dest.offset - src.offset, alloc_id)\n+            })\n+            .collect();\n+\n         let src_bytes = self.get_bytes_unchecked(src, size, align)?.as_ptr();\n         let dest_bytes = self.get_bytes_mut(dest, size, align)?.as_mut_ptr();\n \n@@ -1113,7 +1124,8 @@ impl<'a, 'tcx, M: Machine<'tcx>> Memory<'a, 'tcx, M> {\n         }\n \n         self.copy_undef_mask(src, dest, size)?;\n-        self.copy_relocations(src, dest, size)?;\n+        // copy back the relocations\n+        self.get_mut(dest.alloc_id)?.relocations.extend(relocations);\n \n         Ok(())\n     }\n@@ -1388,22 +1400,6 @@ impl<'a, 'tcx, M: Machine<'tcx>> Memory<'a, 'tcx, M> {\n         }\n         Ok(())\n     }\n-\n-    fn copy_relocations(\n-        &mut self,\n-        src: MemoryPointer,\n-        dest: MemoryPointer,\n-        size: u64,\n-    ) -> EvalResult<'tcx> {\n-        let relocations: Vec<_> = self.relocations(src, size)?\n-            .map(|(&offset, &alloc_id)| {\n-                // Update relocation offsets for the new positions in the destination allocation.\n-                (offset + dest.offset - src.offset, alloc_id)\n-            })\n-            .collect();\n-        self.get_mut(dest.alloc_id)?.relocations.extend(relocations);\n-        Ok(())\n-    }\n }\n \n /// Undefined bytes"}]}