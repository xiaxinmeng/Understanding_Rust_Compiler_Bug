{"sha": "a46af18cb1aedf7ccc5fbebd6f126c71da6cd4ee", "node_id": "C_kwDOAAsO6NoAKGE0NmFmMThjYjFhZWRmN2NjYzVmYmViZDZmMTI2YzcxZGE2Y2Q0ZWU", "commit": {"author": {"name": "yukang", "email": "moorekang@gmail.com", "date": "2022-10-24T10:24:10Z"}, "committer": {"name": "yukang", "email": "moorekang@gmail.com", "date": "2022-10-24T10:24:10Z"}, "message": "fix parentheses surrounding spacing issue in parser", "tree": {"sha": "309811e2acecde1b850f0851446fe87ab5436dd2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/309811e2acecde1b850f0851446fe87ab5436dd2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a46af18cb1aedf7ccc5fbebd6f126c71da6cd4ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a46af18cb1aedf7ccc5fbebd6f126c71da6cd4ee", "html_url": "https://github.com/rust-lang/rust/commit/a46af18cb1aedf7ccc5fbebd6f126c71da6cd4ee", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a46af18cb1aedf7ccc5fbebd6f126c71da6cd4ee/comments", "author": {"login": "chenyukang", "id": 230646, "node_id": "MDQ6VXNlcjIzMDY0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/230646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenyukang", "html_url": "https://github.com/chenyukang", "followers_url": "https://api.github.com/users/chenyukang/followers", "following_url": "https://api.github.com/users/chenyukang/following{/other_user}", "gists_url": "https://api.github.com/users/chenyukang/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenyukang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenyukang/subscriptions", "organizations_url": "https://api.github.com/users/chenyukang/orgs", "repos_url": "https://api.github.com/users/chenyukang/repos", "events_url": "https://api.github.com/users/chenyukang/events{/privacy}", "received_events_url": "https://api.github.com/users/chenyukang/received_events", "type": "User", "site_admin": false}, "committer": {"login": "chenyukang", "id": 230646, "node_id": "MDQ6VXNlcjIzMDY0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/230646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenyukang", "html_url": "https://github.com/chenyukang", "followers_url": "https://api.github.com/users/chenyukang/followers", "following_url": "https://api.github.com/users/chenyukang/following{/other_user}", "gists_url": "https://api.github.com/users/chenyukang/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenyukang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenyukang/subscriptions", "organizations_url": "https://api.github.com/users/chenyukang/orgs", "repos_url": "https://api.github.com/users/chenyukang/repos", "events_url": "https://api.github.com/users/chenyukang/events{/privacy}", "received_events_url": "https://api.github.com/users/chenyukang/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c0447b489ba890c740c1e5c41f3eacca148734a9", "url": "https://api.github.com/repos/rust-lang/rust/commits/c0447b489ba890c740c1e5c41f3eacca148734a9", "html_url": "https://github.com/rust-lang/rust/commit/c0447b489ba890c740c1e5c41f3eacca148734a9"}], "stats": {"total": 68, "additions": 52, "deletions": 16}, "files": [{"sha": "d4b083de27624360a9622b4499a006f71d89ecf9", "filename": "compiler/rustc_lint/src/unused.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a46af18cb1aedf7ccc5fbebd6f126c71da6cd4ee/compiler%2Frustc_lint%2Fsrc%2Funused.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a46af18cb1aedf7ccc5fbebd6f126c71da6cd4ee/compiler%2Frustc_lint%2Fsrc%2Funused.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Funused.rs?ref=a46af18cb1aedf7ccc5fbebd6f126c71da6cd4ee", "patch": "@@ -568,17 +568,15 @@ trait UnusedDelimLint {\n                 let sm = cx.sess().source_map();\n                 let lo_replace =\n                     if keep_space.0 &&\n-                        let Ok(snip) = sm.span_to_snippet(lo.with_lo(lo.lo() - BytePos(1))) &&\n-                        !snip.starts_with(\" \") {\n+                        let Ok(snip) = sm.span_to_prev_source(lo) && !snip.ends_with(\" \") {\n                         \" \".to_string()\n                         } else {\n                             \"\".to_string()\n                         };\n \n                 let hi_replace =\n                     if keep_space.1 &&\n-                        let Ok(snip) = sm.span_to_snippet(sm.next_point(hi)) &&\n-                        !snip.starts_with(\" \") {\n+                        let Ok(snip) = sm.span_to_next_source(hi) && !snip.starts_with(\" \") {\n                         \" \".to_string()\n                         } else {\n                             \"\".to_string()"}, {"sha": "a3fbc06293f708e590b02c4e0841761bedfa7463", "filename": "compiler/rustc_parse/src/errors.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a46af18cb1aedf7ccc5fbebd6f126c71da6cd4ee/compiler%2Frustc_parse%2Fsrc%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a46af18cb1aedf7ccc5fbebd6f126c71da6cd4ee/compiler%2Frustc_parse%2Fsrc%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Ferrors.rs?ref=a46af18cb1aedf7ccc5fbebd6f126c71da6cd4ee", "patch": "@@ -1122,10 +1122,12 @@ pub(crate) struct ParenthesesInForHead {\n #[derive(Subdiagnostic)]\n #[multipart_suggestion(suggestion, applicability = \"machine-applicable\")]\n pub(crate) struct ParenthesesInForHeadSugg {\n-    #[suggestion_part(code = \"\")]\n+    #[suggestion_part(code = \"{left_snippet}\")]\n     pub left: Span,\n-    #[suggestion_part(code = \"\")]\n+    pub left_snippet: String,\n+    #[suggestion_part(code = \"{right_snippet}\")]\n     pub right: Span,\n+    pub right_snippet: String,\n }\n \n #[derive(Diagnostic)]"}, {"sha": "e9549e899985758c89cd9ccc3f9d5150305fd471", "filename": "compiler/rustc_parse/src/parser/diagnostics.rs", "status": "modified", "additions": 19, "deletions": 5, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/a46af18cb1aedf7ccc5fbebd6f126c71da6cd4ee/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a46af18cb1aedf7ccc5fbebd6f126c71da6cd4ee/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs?ref=a46af18cb1aedf7ccc5fbebd6f126c71da6cd4ee", "patch": "@@ -1641,15 +1641,29 @@ impl<'a> Parser<'a> {\n             (token::CloseDelim(Delimiter::Parenthesis), Some(begin_par_sp)) => {\n                 self.bump();\n \n+                let sm = self.sess.source_map();\n+                let left = begin_par_sp;\n+                let right = self.prev_token.span;\n+                let left_snippet = if let Ok(snip) = sm.span_to_prev_source(left) &&\n+                        !snip.ends_with(\" \") {\n+                                \" \".to_string()\n+                            } else {\n+                                \"\".to_string()\n+                            };\n+\n+                let right_snippet = if let Ok(snip) = sm.span_to_next_source(right) &&\n+                        !snip.starts_with(\" \") {\n+                                \" \".to_string()\n+                            } else {\n+                                \"\".to_string()\n+                        };\n+\n                 self.sess.emit_err(ParenthesesInForHead {\n-                    span: vec![begin_par_sp, self.prev_token.span],\n+                    span: vec![left, right],\n                     // With e.g. `for (x) in y)` this would replace `(x) in y)`\n                     // with `x) in y)` which is syntactically invalid.\n                     // However, this is prevented before we get here.\n-                    sugg: ParenthesesInForHeadSugg {\n-                        left: begin_par_sp,\n-                        right: self.prev_token.span,\n-                    },\n+                    sugg: ParenthesesInForHeadSugg { left, right, left_snippet, right_snippet },\n                 });\n \n                 // Unwrap `(pat)` into `pat` to avoid the `unused_parens` lint."}, {"sha": "2b01b414baa6ea8f57b33d0c2c858f11de50d838", "filename": "src/test/ui/lint/issue-103435-extra-parentheses.fixed", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a46af18cb1aedf7ccc5fbebd6f126c71da6cd4ee/src%2Ftest%2Fui%2Flint%2Fissue-103435-extra-parentheses.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/a46af18cb1aedf7ccc5fbebd6f126c71da6cd4ee/src%2Ftest%2Fui%2Flint%2Fissue-103435-extra-parentheses.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fissue-103435-extra-parentheses.fixed?ref=a46af18cb1aedf7ccc5fbebd6f126c71da6cd4ee", "patch": "@@ -11,6 +11,8 @@ fn main() {\n     if 2 == 1 {}\n     //~^ ERROR unnecessary parentheses around `if` condition\n \n-    // FIXME, auto recover from this one?\n-    // for(_x in 1..10) {}\n+    // reported by parser\n+    for _x in 1..10 {}\n+    //~^ ERROR expected one of\n+    //~| ERROR unexpected parentheses surrounding\n }"}, {"sha": "8261610cf5646ee045c4953718d926c30989da46", "filename": "src/test/ui/lint/issue-103435-extra-parentheses.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a46af18cb1aedf7ccc5fbebd6f126c71da6cd4ee/src%2Ftest%2Fui%2Flint%2Fissue-103435-extra-parentheses.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a46af18cb1aedf7ccc5fbebd6f126c71da6cd4ee/src%2Ftest%2Fui%2Flint%2Fissue-103435-extra-parentheses.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fissue-103435-extra-parentheses.rs?ref=a46af18cb1aedf7ccc5fbebd6f126c71da6cd4ee", "patch": "@@ -11,6 +11,8 @@ fn main() {\n     if(2 == 1){}\n     //~^ ERROR unnecessary parentheses around `if` condition\n \n-    // FIXME, auto recover from this one?\n-    // for(_x in 1..10) {}\n+    // reported by parser\n+    for(_x in 1..10){}\n+    //~^ ERROR expected one of\n+    //~| ERROR unexpected parentheses surrounding\n }"}, {"sha": "29c41c91050b96e2de3bc587b3923f07e320debe", "filename": "src/test/ui/lint/issue-103435-extra-parentheses.stderr", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/a46af18cb1aedf7ccc5fbebd6f126c71da6cd4ee/src%2Ftest%2Fui%2Flint%2Fissue-103435-extra-parentheses.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a46af18cb1aedf7ccc5fbebd6f126c71da6cd4ee/src%2Ftest%2Fui%2Flint%2Fissue-103435-extra-parentheses.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fissue-103435-extra-parentheses.stderr?ref=a46af18cb1aedf7ccc5fbebd6f126c71da6cd4ee", "patch": "@@ -1,3 +1,21 @@\n+error: expected one of `)`, `,`, `@`, or `|`, found keyword `in`\n+  --> $DIR/issue-103435-extra-parentheses.rs:15:12\n+   |\n+LL |     for(_x in 1..10){}\n+   |            ^^ expected one of `)`, `,`, `@`, or `|`\n+\n+error: unexpected parentheses surrounding `for` loop head\n+  --> $DIR/issue-103435-extra-parentheses.rs:15:8\n+   |\n+LL |     for(_x in 1..10){}\n+   |        ^           ^\n+   |\n+help: remove parentheses in `for` loop\n+   |\n+LL -     for(_x in 1..10){}\n+LL +     for _x in 1..10 {}\n+   |\n+\n error: unnecessary parentheses around pattern\n   --> $DIR/issue-103435-extra-parentheses.rs:5:11\n    |\n@@ -39,5 +57,5 @@ LL -     if(2 == 1){}\n LL +     if 2 == 1 {}\n    |\n \n-error: aborting due to 3 previous errors\n+error: aborting due to 5 previous errors\n "}]}