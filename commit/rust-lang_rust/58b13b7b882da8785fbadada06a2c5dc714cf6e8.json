{"sha": "58b13b7b882da8785fbadada06a2c5dc714cf6e8", "node_id": "C_kwDOAAsO6NoAKDU4YjEzYjdiODgyZGE4Nzg1ZmJhZGFkYTA2YTJjNWRjNzE0Y2Y2ZTg", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-10-07T15:53:18Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-10-07T15:53:18Z"}, "message": "clippy learned some new tricks", "tree": {"sha": "815b771aa365df1275743e5f8f8e0c9c1f4fe708", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/815b771aa365df1275743e5f8f8e0c9c1f4fe708"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/58b13b7b882da8785fbadada06a2c5dc714cf6e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/58b13b7b882da8785fbadada06a2c5dc714cf6e8", "html_url": "https://github.com/rust-lang/rust/commit/58b13b7b882da8785fbadada06a2c5dc714cf6e8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/58b13b7b882da8785fbadada06a2c5dc714cf6e8/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c2adc2e2343ebed2dba1490b842719d4541bbf48", "url": "https://api.github.com/repos/rust-lang/rust/commits/c2adc2e2343ebed2dba1490b842719d4541bbf48", "html_url": "https://github.com/rust-lang/rust/commit/c2adc2e2343ebed2dba1490b842719d4541bbf48"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "8e2222c39a242a234d28a98698499d2c9f1f88e2", "filename": "src/tools/miri/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/58b13b7b882da8785fbadada06a2c5dc714cf6e8/src%2Ftools%2Fmiri%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58b13b7b882da8785fbadada06a2c5dc714cf6e8/src%2Ftools%2Fmiri%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Fsrc%2Flib.rs?ref=58b13b7b882da8785fbadada06a2c5dc714cf6e8", "patch": "@@ -28,6 +28,7 @@\n     clippy::type_complexity,\n     clippy::single_element_loop,\n     clippy::needless_return,\n+    clippy::bool_to_int_with_if,\n     // We are not implementing queries here so it's fine\n     rustc::potential_query_instability\n )]"}, {"sha": "b0c9d729c9d907b9b153e62363281095a6896535", "filename": "src/tools/miri/src/shims/unix/android/dlsym.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/58b13b7b882da8785fbadada06a2c5dc714cf6e8/src%2Ftools%2Fmiri%2Fsrc%2Fshims%2Funix%2Fandroid%2Fdlsym.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58b13b7b882da8785fbadada06a2c5dc714cf6e8/src%2Ftools%2Fmiri%2Fsrc%2Fshims%2Funix%2Fandroid%2Fdlsym.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Fsrc%2Fshims%2Funix%2Fandroid%2Fdlsym.rs?ref=58b13b7b882da8785fbadada06a2c5dc714cf6e8", "patch": "@@ -42,7 +42,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriInterpCxExt<'mir, 'tcx> {\n                     );\n                 }\n \n-                let &[ref _sig, ref _func] = check_arg_count(args)?;\n+                let [_sig, _func] = check_arg_count(args)?;\n                 this.write_null(dest)?;\n             }\n         }"}, {"sha": "ed68976773d11d4dc8f798e551bf8d87661e5d2f", "filename": "src/tools/miri/src/shims/unix/fs.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/58b13b7b882da8785fbadada06a2c5dc714cf6e8/src%2Ftools%2Fmiri%2Fsrc%2Fshims%2Funix%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58b13b7b882da8785fbadada06a2c5dc714cf6e8/src%2Ftools%2Fmiri%2Fsrc%2Fshims%2Funix%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Fsrc%2Fshims%2Funix%2Ffs.rs?ref=58b13b7b882da8785fbadada06a2c5dc714cf6e8", "patch": "@@ -1073,23 +1073,23 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriInterpCxExt<'mir, 'tcx> {\n                 mask |= this.eval_libc(\"STATX_ATIME\")?.to_u32()?;\n                 InterpResult::Ok(tup)\n             })\n-            .unwrap_or(Ok((0, 0)))?;\n+            .unwrap_or_else(|| Ok((0, 0)))?;\n \n         let (created_sec, created_nsec) = metadata\n             .created\n             .map(|tup| {\n                 mask |= this.eval_libc(\"STATX_BTIME\")?.to_u32()?;\n                 InterpResult::Ok(tup)\n             })\n-            .unwrap_or(Ok((0, 0)))?;\n+            .unwrap_or_else(|| Ok((0, 0)))?;\n \n         let (modified_sec, modified_nsec) = metadata\n             .modified\n             .map(|tup| {\n                 mask |= this.eval_libc(\"STATX_MTIME\")?.to_u32()?;\n                 InterpResult::Ok(tup)\n             })\n-            .unwrap_or(Ok((0, 0)))?;\n+            .unwrap_or_else(|| Ok((0, 0)))?;\n \n         // Now we write everything to `statxbuf`. We write a zero for the unavailable fields.\n         this.write_int_fields_named("}, {"sha": "09d36ca9dfdb02475d4dbdb273f83c4a0a1ca15f", "filename": "src/tools/miri/src/stacked_borrows/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/58b13b7b882da8785fbadada06a2c5dc714cf6e8/src%2Ftools%2Fmiri%2Fsrc%2Fstacked_borrows%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58b13b7b882da8785fbadada06a2c5dc714cf6e8/src%2Ftools%2Fmiri%2Fsrc%2Fstacked_borrows%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Fsrc%2Fstacked_borrows%2Fmod.rs?ref=58b13b7b882da8785fbadada06a2c5dc714cf6e8", "patch": "@@ -45,6 +45,7 @@ impl SbTag {\n     }\n \n     // The default to be used when SB is disabled\n+    #[allow(clippy::should_implement_trait)]\n     pub fn default() -> Self {\n         Self::new(1).unwrap()\n     }"}]}