{"sha": "890139256c341c54779ba229942b4d90771a7690", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg5MDEzOTI1NmMzNDFjNTQ3NzliYTIyOTk0MmI0ZDkwNzcxYTc2OTA=", "commit": {"author": {"name": "Inokentiy Babushkin", "email": "twk@twki.de", "date": "2018-04-26T20:22:06Z"}, "committer": {"name": "Inokentiy Babushkin", "email": "twk@twki.de", "date": "2018-04-26T20:22:06Z"}, "message": "Updated comments in auto trait machinery.", "tree": {"sha": "247a0a59d9e56a50b3499f3db1c0f4840ecc9a05", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/247a0a59d9e56a50b3499f3db1c0f4840ecc9a05"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/890139256c341c54779ba229942b4d90771a7690", "comment_count": 0, "verification": {"verified": false, "reason": "unverified_email", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEXezFNCHL3+3lgSPSfvyOxSJN6OwFAlriNO4ACgkQfvyOxSJN\n6OypXRAAh2p8LBP7JGsVm2uuzt4yzBbr2fVEy9DMPdG9IWx0+cBhgEfJ67k/+az/\nFOBkh/IzEFlTKqWdYSd/cifGwfqbDxKtoBIYlpJmKPIMr1NUjjC9YfhgyOAm1aXE\n3lwXvn7wXwa64G1kuESA4XTMXcKJy347kBi7zVEhmCqaxS59sb44HpPi8/1iW1yj\nvGQxENq+sieQGkpFryfN7YzdmmUuPmBy4TxJ8f2jAk3btjJW3fVTB2sB4QQcGA0w\nGCrg8QHOKcpu27Xrh6ftJyzuZiMesFEBB6pmARxf6g+XJPrKBX48iW6A4t3bW7Sk\n19lCD77wIG1fTLVx0dNkW20Mu4dIKixsSURUNevkz/6qksBb//Qd7LLN+B+Xck99\ngcBDKZfRjvXtBnI9fkgOD+Zn773HQdV0qdrIHmNDWqZhVUPLoLKW3/Kpqzr/8fBE\nRKepaaD3bxBM2VWcKJMIaIzi47xdWxOYa4DohIed+nirHBMup6yGN9XFVxZkLajm\nR6C1U8J8WGra7Cd7iVw7kyFHJ6rnCICPHY2Lnyc1g9NC5eB3wRTvuhvE9X1p3RO+\nXKO/3o7V3dv2DY0+qKCP2vF5tmrunpOqRdi65AXImG66w/OPksfKuGtHGeNDq5b5\njqHPab0ZUfE6ETEw9Ea/fJmAev/6sAu8WMod5ij6fnq2U4Yg0Gg=\n=fizS\n-----END PGP SIGNATURE-----", "payload": "tree 247a0a59d9e56a50b3499f3db1c0f4840ecc9a05\nparent 388defad2d754cf9fc6ec69d67692f437393fd03\nauthor Inokentiy Babushkin <twk@twki.de> 1524774126 +0200\ncommitter Inokentiy Babushkin <twk@twki.de> 1524774126 +0200\n\nUpdated comments in auto trait machinery.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/890139256c341c54779ba229942b4d90771a7690", "html_url": "https://github.com/rust-lang/rust/commit/890139256c341c54779ba229942b4d90771a7690", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/890139256c341c54779ba229942b4d90771a7690/comments", "author": {"login": "ibabushkin", "id": 10811417, "node_id": "MDQ6VXNlcjEwODExNDE3", "avatar_url": "https://avatars.githubusercontent.com/u/10811417?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibabushkin", "html_url": "https://github.com/ibabushkin", "followers_url": "https://api.github.com/users/ibabushkin/followers", "following_url": "https://api.github.com/users/ibabushkin/following{/other_user}", "gists_url": "https://api.github.com/users/ibabushkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibabushkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibabushkin/subscriptions", "organizations_url": "https://api.github.com/users/ibabushkin/orgs", "repos_url": "https://api.github.com/users/ibabushkin/repos", "events_url": "https://api.github.com/users/ibabushkin/events{/privacy}", "received_events_url": "https://api.github.com/users/ibabushkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ibabushkin", "id": 10811417, "node_id": "MDQ6VXNlcjEwODExNDE3", "avatar_url": "https://avatars.githubusercontent.com/u/10811417?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibabushkin", "html_url": "https://github.com/ibabushkin", "followers_url": "https://api.github.com/users/ibabushkin/followers", "following_url": "https://api.github.com/users/ibabushkin/following{/other_user}", "gists_url": "https://api.github.com/users/ibabushkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibabushkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibabushkin/subscriptions", "organizations_url": "https://api.github.com/users/ibabushkin/orgs", "repos_url": "https://api.github.com/users/ibabushkin/repos", "events_url": "https://api.github.com/users/ibabushkin/events{/privacy}", "received_events_url": "https://api.github.com/users/ibabushkin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "388defad2d754cf9fc6ec69d67692f437393fd03", "url": "https://api.github.com/repos/rust-lang/rust/commits/388defad2d754cf9fc6ec69d67692f437393fd03", "html_url": "https://github.com/rust-lang/rust/commit/388defad2d754cf9fc6ec69d67692f437393fd03"}], "stats": {"total": 21, "additions": 18, "deletions": 3}, "files": [{"sha": "5d708f60604f1599f268b1a3ff0875df82aac949", "filename": "src/librustc/traits/auto_trait.rs", "status": "modified", "additions": 18, "deletions": 3, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/890139256c341c54779ba229942b4d90771a7690/src%2Flibrustc%2Ftraits%2Fauto_trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/890139256c341c54779ba229942b4d90771a7690/src%2Flibrustc%2Ftraits%2Fauto_trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fauto_trait.rs?ref=890139256c341c54779ba229942b4d90771a7690", "patch": "@@ -68,9 +68,24 @@ impl<'a, 'tcx> AutoTraitFinder<'a, 'tcx> {\n         AutoTraitFinder { tcx }\n     }\n \n-    /// Determine whether an auto trait is implemented for a type, and if this is the case if\n-    /// non-trivial bounds need to be fulfilled, invoke a callback to compute a value representing\n-    /// these in a fashion suitable for the caller.\n+    /// Make a best effort to determine whether and under which conditions an auto trait is\n+    /// implemented for a type. For example, if you have\n+    ///\n+    /// ```\n+    /// struct Foo<T> { data: Box<T> }\n+    /// ```\n+\n+    /// then this might return that Foo<T>: Send if T: Send (encoded in the AutoTraitResult type).\n+    /// The analysis attempts to account for custom impls as well as other complex cases. This\n+    /// result is intended for use by rustdoc and other such consumers.\n+\n+    /// (Note that due to the coinductive nature of Send, the full and correct result is actually\n+    /// quite simple to generate. That is, when a type has no custom impl, it is Send iff its field\n+    /// types are all Send. So, in our example, we might have that Foo<T>: Send if Box<T>: Send.\n+    /// But this is often not the best way to present to the user.)\n+\n+    /// Warning: The API should be considered highly unstable, and it may be refactored or removed\n+    /// in the future.\n     pub fn find_auto_trait_generics<A>(\n         &self,\n         did: DefId,"}]}