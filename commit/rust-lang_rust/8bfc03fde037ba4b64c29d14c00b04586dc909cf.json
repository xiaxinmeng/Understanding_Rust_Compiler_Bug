{"sha": "8bfc03fde037ba4b64c29d14c00b04586dc909cf", "node_id": "C_kwDOAAsO6NoAKDhiZmMwM2ZkZTAzN2JhNGI2NGMyOWQxNGMwMGIwNDU4NmRjOTA5Y2Y", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-03-28T02:12:11Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-03-28T02:12:11Z"}, "message": "Rollup merge of #95098 - shepmaster:vec-from-array-ref, r=dtolnay\n\nimpl From<&[T; N]> and From<&mut [T; N]> for Vec<T>\n\nI really wanted to write:\n\n```rust\nfn example(a: impl Into<Vec<u8>>) {}\n\nfn main() {\n    example(b\"raw\");\n}\n```", "tree": {"sha": "e577677099c1194574526d6cb17a537f772acff6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e577677099c1194574526d6cb17a537f772acff6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8bfc03fde037ba4b64c29d14c00b04586dc909cf", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiQRl7CRBK7hj4Ov3rIwAADg4IAGzOQ29JwMwcJIvIRQkp5Gad\nAx1f6ZlJoNpO9q8q2s4Vo9j9w6dLlBdxInJJTn32/jWnQd+gK+X2Ju+4AlJAat4i\npymbnhLN5H7RhPNcqCGkiEf8I0i6UYH2OnfwAwdGcnGBKHnB0IN3VdoLrOVSzNeJ\nIEIaMfreo3VarOvrd4a7TZ6cA2YeJPZvzUcqNnOfwXRk/CvCxcRinwHJqKyH+lhP\nxB15cLZ0YqonFeS3JitGNNZBBGoc29D9Hy/fYXDGsbTMFRu9GLahHXkVGldtoaQ4\nZELzKo4gk/w9Ss/jA1NBXCBSwlRb5Zj7S+4S1luSm4H0WbhSgZ1qf92Ba4aydwo=\n=WCqF\n-----END PGP SIGNATURE-----\n", "payload": "tree e577677099c1194574526d6cb17a537f772acff6\nparent d88c03c0f1082d01294ef8cf5d14194d5d1284fa\nparent 5dd702763ae0e112332a4447171adbed51aeee3d\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1648433531 +0200\ncommitter GitHub <noreply@github.com> 1648433531 +0200\n\nRollup merge of #95098 - shepmaster:vec-from-array-ref, r=dtolnay\n\nimpl From<&[T; N]> and From<&mut [T; N]> for Vec<T>\n\nI really wanted to write:\n\n```rust\nfn example(a: impl Into<Vec<u8>>) {}\n\nfn main() {\n    example(b\"raw\");\n}\n```\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8bfc03fde037ba4b64c29d14c00b04586dc909cf", "html_url": "https://github.com/rust-lang/rust/commit/8bfc03fde037ba4b64c29d14c00b04586dc909cf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8bfc03fde037ba4b64c29d14c00b04586dc909cf/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d88c03c0f1082d01294ef8cf5d14194d5d1284fa", "url": "https://api.github.com/repos/rust-lang/rust/commits/d88c03c0f1082d01294ef8cf5d14194d5d1284fa", "html_url": "https://github.com/rust-lang/rust/commit/d88c03c0f1082d01294ef8cf5d14194d5d1284fa"}, {"sha": "5dd702763ae0e112332a4447171adbed51aeee3d", "url": "https://api.github.com/repos/rust-lang/rust/commits/5dd702763ae0e112332a4447171adbed51aeee3d", "html_url": "https://github.com/rust-lang/rust/commit/5dd702763ae0e112332a4447171adbed51aeee3d"}], "stats": {"total": 42, "additions": 42, "deletions": 0}, "files": [{"sha": "1ca5ee55375822f55eb3a2d7695614b39cdabd2f", "filename": "library/alloc/src/vec/mod.rs", "status": "modified", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/8bfc03fde037ba4b64c29d14c00b04586dc909cf/library%2Falloc%2Fsrc%2Fvec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bfc03fde037ba4b64c29d14c00b04586dc909cf/library%2Falloc%2Fsrc%2Fvec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fvec%2Fmod.rs?ref=8bfc03fde037ba4b64c29d14c00b04586dc909cf", "patch": "@@ -2933,6 +2933,48 @@ impl<T, const N: usize> From<[T; N]> for Vec<T> {\n     }\n }\n \n+#[cfg(not(no_global_oom_handling))]\n+#[stable(feature = \"vec_from_array_ref\", since = \"1.61.0\")]\n+impl<T: Clone, const N: usize> From<&[T; N]> for Vec<T> {\n+    /// Allocate a `Vec<T>` and fill it by cloning `s`'s items.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// assert_eq!(Vec::from(b\"raw\"), vec![b'r', b'a', b'w']);\n+    /// ```\n+    #[cfg(not(test))]\n+    fn from(s: &[T; N]) -> Vec<T> {\n+        s.to_vec()\n+    }\n+\n+    #[cfg(test)]\n+    fn from(s: &[T; N]) -> Vec<T> {\n+        crate::slice::to_vec(s, Global)\n+    }\n+}\n+\n+#[cfg(not(no_global_oom_handling))]\n+#[stable(feature = \"vec_from_array_ref\", since = \"1.61.0\")]\n+impl<T: Clone, const N: usize> From<&mut [T; N]> for Vec<T> {\n+    /// Allocate a `Vec<T>` and fill it by cloning `s`'s items.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// assert_eq!(Vec::from(&mut [1, 2, 3]), vec![1, 2, 3]);\n+    /// ```\n+    #[cfg(not(test))]\n+    fn from(s: &mut [T; N]) -> Vec<T> {\n+        s.to_vec()\n+    }\n+\n+    #[cfg(test)]\n+    fn from(s: &mut [T; N]) -> Vec<T> {\n+        crate::slice::to_vec(s, Global)\n+    }\n+}\n+\n #[stable(feature = \"vec_from_cow_slice\", since = \"1.14.0\")]\n impl<'a, T> From<Cow<'a, [T]>> for Vec<T>\n where"}]}