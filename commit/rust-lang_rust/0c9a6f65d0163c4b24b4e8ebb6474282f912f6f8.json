{"sha": "0c9a6f65d0163c4b24b4e8ebb6474282f912f6f8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBjOWE2ZjY1ZDAxNjNjNGIyNGI0ZThlYmI2NDc0MjgyZjkxMmY2Zjg=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2016-07-16T15:27:55Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2016-07-17T01:19:27Z"}, "message": "Add examples for LinkedList", "tree": {"sha": "3c5710b3c0d28c646a4cd9b7449f173bd36b0d1c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3c5710b3c0d28c646a4cd9b7449f173bd36b0d1c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0c9a6f65d0163c4b24b4e8ebb6474282f912f6f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0c9a6f65d0163c4b24b4e8ebb6474282f912f6f8", "html_url": "https://github.com/rust-lang/rust/commit/0c9a6f65d0163c4b24b4e8ebb6474282f912f6f8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0c9a6f65d0163c4b24b4e8ebb6474282f912f6f8/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dc8212ff200dc54113a87b3a7033879133fdfff0", "url": "https://api.github.com/repos/rust-lang/rust/commits/dc8212ff200dc54113a87b3a7033879133fdfff0", "html_url": "https://github.com/rust-lang/rust/commit/dc8212ff200dc54113a87b3a7033879133fdfff0"}], "stats": {"total": 74, "additions": 65, "deletions": 9}, "files": [{"sha": "3d5c3125fae2489c460f1352aa4776a1017fdf33", "filename": "src/libcollections/linked_list.rs", "status": "modified", "additions": 65, "deletions": 9, "changes": 74, "blob_url": "https://github.com/rust-lang/rust/blob/0c9a6f65d0163c4b24b4e8ebb6474282f912f6f8/src%2Flibcollections%2Flinked_list.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c9a6f65d0163c4b24b4e8ebb6474282f912f6f8/src%2Flibcollections%2Flinked_list.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Flinked_list.rs?ref=0c9a6f65d0163c4b24b4e8ebb6474282f912f6f8", "patch": "@@ -172,6 +172,14 @@ impl<T> Default for LinkedList<T> {\n \n impl<T> LinkedList<T> {\n     /// Creates an empty `LinkedList`.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// use std::collections::LinkedList;\n+    ///\n+    /// let list: LinkedList<u32> = LinkedList::new();\n+    /// ```\n     #[inline]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn new() -> Self {\n@@ -226,6 +234,24 @@ impl<T> LinkedList<T> {\n     }\n \n     /// Provides a forward iterator.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// use std::collections::LinkedList;\n+    ///\n+    /// let mut list: LinkedList<u32> = LinkedList::new();\n+    ///\n+    /// list.push_back(0);\n+    /// list.push_back(1);\n+    /// list.push_back(2);\n+    ///\n+    /// let mut iter = list.iter();\n+    /// assert_eq!(iter.next(), Some(&0));\n+    /// assert_eq!(iter.next(), Some(&1));\n+    /// assert_eq!(iter.next(), Some(&2));\n+    /// assert_eq!(iter.next(), None);\n+    /// ```\n     #[inline]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn iter(&self) -> Iter<T> {\n@@ -238,6 +264,28 @@ impl<T> LinkedList<T> {\n     }\n \n     /// Provides a forward iterator with mutable references.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// use std::collections::LinkedList;\n+    ///\n+    /// let mut list: LinkedList<u32> = LinkedList::new();\n+    ///\n+    /// list.push_back(0);\n+    /// list.push_back(1);\n+    /// list.push_back(2);\n+    ///\n+    /// for element in list.iter_mut() {\n+    ///     *element += 10;\n+    /// }\n+    ///\n+    /// let mut iter = list.iter();\n+    /// assert_eq!(iter.next(), Some(&10));\n+    /// assert_eq!(iter.next(), Some(&11));\n+    /// assert_eq!(iter.next(), Some(&12));\n+    /// assert_eq!(iter.next(), None);\n+    /// ```\n     #[inline]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn iter_mut(&mut self) -> IterMut<T> {\n@@ -289,7 +337,6 @@ impl<T> LinkedList<T> {\n     ///\n     /// dl.push_back(3);\n     /// assert_eq!(dl.len(), 3);\n-    ///\n     /// ```\n     #[inline]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -316,7 +363,6 @@ impl<T> LinkedList<T> {\n     /// dl.clear();\n     /// assert_eq!(dl.len(), 0);\n     /// assert_eq!(dl.front(), None);\n-    ///\n     /// ```\n     #[inline]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -326,6 +372,23 @@ impl<T> LinkedList<T> {\n \n     /// Returns `true` if the `LinkedList` contains an element equal to the\n     /// given value.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// #![feature(linked_list_contains)]\n+    ///\n+    /// use std::collections::LinkedList;\n+    ///\n+    /// let mut list: LinkedList<u32> = LinkedList::new();\n+    ///\n+    /// list.push_back(0);\n+    /// list.push_back(1);\n+    /// list.push_back(2);\n+    ///\n+    /// assert_eq!(list.contains(&0), true);\n+    /// assert_eq!(list.contains(&10), false);\n+    /// ```\n     #[unstable(feature = \"linked_list_contains\", reason = \"recently added\",\n                issue = \"32630\")]\n     pub fn contains(&self, x: &T) -> bool\n@@ -347,7 +410,6 @@ impl<T> LinkedList<T> {\n     ///\n     /// dl.push_front(1);\n     /// assert_eq!(dl.front(), Some(&1));\n-    ///\n     /// ```\n     #[inline]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -374,7 +436,6 @@ impl<T> LinkedList<T> {\n     ///     Some(x) => *x = 5,\n     /// }\n     /// assert_eq!(dl.front(), Some(&5));\n-    ///\n     /// ```\n     #[inline]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -395,7 +456,6 @@ impl<T> LinkedList<T> {\n     ///\n     /// dl.push_back(1);\n     /// assert_eq!(dl.back(), Some(&1));\n-    ///\n     /// ```\n     #[inline]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -422,7 +482,6 @@ impl<T> LinkedList<T> {\n     ///     Some(x) => *x = 5,\n     /// }\n     /// assert_eq!(dl.back(), Some(&5));\n-    ///\n     /// ```\n     #[inline]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -446,7 +505,6 @@ impl<T> LinkedList<T> {\n     ///\n     /// dl.push_front(1);\n     /// assert_eq!(dl.front().unwrap(), &1);\n-    ///\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn push_front(&mut self, elt: T) {\n@@ -471,9 +529,7 @@ impl<T> LinkedList<T> {\n     /// assert_eq!(d.pop_front(), Some(3));\n     /// assert_eq!(d.pop_front(), Some(1));\n     /// assert_eq!(d.pop_front(), None);\n-    ///\n     /// ```\n-    ///\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn pop_front(&mut self) -> Option<T> {\n         self.pop_front_node().map(Node::into_element)"}]}