{"sha": "e5c399a83cc0b85b5d79bb6d5377f18d348cc597", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU1YzM5OWE4M2NjMGI4NWI1ZDc5YmI2ZDUzNzdmMThkMzQ4Y2M1OTc=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-21T21:41:22Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-26T23:54:30Z"}, "message": "librustc: De-`@mut` `IrMaps::live_node_map`", "tree": {"sha": "2081d0763062e59593cda2f15e68e8f2bd4cdd0f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2081d0763062e59593cda2f15e68e8f2bd4cdd0f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e5c399a83cc0b85b5d79bb6d5377f18d348cc597", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e5c399a83cc0b85b5d79bb6d5377f18d348cc597", "html_url": "https://github.com/rust-lang/rust/commit/e5c399a83cc0b85b5d79bb6d5377f18d348cc597", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e5c399a83cc0b85b5d79bb6d5377f18d348cc597/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "01ee2fb2246cf72f3dc748fa2aa143c8b70974cc", "url": "https://api.github.com/repos/rust-lang/rust/commits/01ee2fb2246cf72f3dc748fa2aa143c8b70974cc", "html_url": "https://github.com/rust-lang/rust/commit/01ee2fb2246cf72f3dc748fa2aa143c8b70974cc"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "743cd460cdba1ea42e96cc1dee7011af7433ef58", "filename": "src/librustc/middle/liveness.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e5c399a83cc0b85b5d79bb6d5377f18d348cc597/src%2Flibrustc%2Fmiddle%2Fliveness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5c399a83cc0b85b5d79bb6d5377f18d348cc597/src%2Flibrustc%2Fmiddle%2Fliveness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fliveness.rs?ref=e5c399a83cc0b85b5d79bb6d5377f18d348cc597", "patch": "@@ -247,7 +247,7 @@ struct IrMaps {\n \n     num_live_nodes: Cell<uint>,\n     num_vars: Cell<uint>,\n-    live_node_map: HashMap<NodeId, LiveNode>,\n+    live_node_map: RefCell<HashMap<NodeId, LiveNode>>,\n     variable_map: HashMap<NodeId, Variable>,\n     capture_info_map: HashMap<NodeId, @~[CaptureInfo]>,\n     var_kinds: ~[VarKind],\n@@ -264,7 +264,7 @@ fn IrMaps(tcx: ty::ctxt,\n         capture_map: capture_map,\n         num_live_nodes: Cell::new(0),\n         num_vars: Cell::new(0),\n-        live_node_map: HashMap::new(),\n+        live_node_map: RefCell::new(HashMap::new()),\n         variable_map: HashMap::new(),\n         capture_info_map: HashMap::new(),\n         var_kinds: ~[],\n@@ -289,7 +289,8 @@ impl IrMaps {\n                                   node_id: NodeId,\n                                   lnk: LiveNodeKind) {\n         let ln = self.add_live_node(lnk);\n-        self.live_node_map.insert(node_id, ln);\n+        let mut live_node_map = self.live_node_map.borrow_mut();\n+        live_node_map.get().insert(node_id, ln);\n \n         debug!(\"{} is node {}\", ln.to_str(), node_id);\n     }\n@@ -616,7 +617,8 @@ fn Liveness(ir: @mut IrMaps, specials: Specials) -> Liveness {\n impl Liveness {\n     pub fn live_node(&self, node_id: NodeId, span: Span) -> LiveNode {\n         let ir: &mut IrMaps = self.ir;\n-        match ir.live_node_map.find(&node_id) {\n+        let live_node_map = ir.live_node_map.borrow();\n+        match live_node_map.get().find(&node_id) {\n           Some(&ln) => ln,\n           None => {\n             // This must be a mismatch between the ir_map construction"}]}