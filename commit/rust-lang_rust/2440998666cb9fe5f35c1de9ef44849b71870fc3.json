{"sha": "2440998666cb9fe5f35c1de9ef44849b71870fc3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI0NDA5OTg2NjZjYjlmZTVmMzVjMWRlOWVmNDQ4NDliNzE4NzBmYzM=", "commit": {"author": {"name": "Markus Westerlind", "email": "markus.westerlind@distilnetworks.com", "date": "2020-02-13T10:44:12Z"}, "committer": {"name": "Markus Westerlind", "email": "markus.westerlind@distilnetworks.com", "date": "2020-02-13T10:44:12Z"}, "message": "perf(mir): Reserve enough space for the merged blocks before appending", "tree": {"sha": "20cae10aa1b2c1a1d52f124e6fc20c7fe8031ef6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/20cae10aa1b2c1a1d52f124e6fc20c7fe8031ef6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2440998666cb9fe5f35c1de9ef44849b71870fc3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2440998666cb9fe5f35c1de9ef44849b71870fc3", "html_url": "https://github.com/rust-lang/rust/commit/2440998666cb9fe5f35c1de9ef44849b71870fc3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2440998666cb9fe5f35c1de9ef44849b71870fc3/comments", "author": null, "committer": null, "parents": [{"sha": "33513fad8089956adcbb5b9803f56de1a8e94b57", "url": "https://api.github.com/repos/rust-lang/rust/commits/33513fad8089956adcbb5b9803f56de1a8e94b57", "html_url": "https://github.com/rust-lang/rust/commit/33513fad8089956adcbb5b9803f56de1a8e94b57"}], "stats": {"total": 21, "additions": 17, "deletions": 4}, "files": [{"sha": "d8de9f2180d64d9648aa3a34d21e6be4ab9ff454", "filename": "src/librustc_mir/transform/simplify.rs", "status": "modified", "additions": 17, "deletions": 4, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/2440998666cb9fe5f35c1de9ef44849b71870fc3/src%2Flibrustc_mir%2Ftransform%2Fsimplify.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2440998666cb9fe5f35c1de9ef44849b71870fc3/src%2Flibrustc_mir%2Ftransform%2Fsimplify.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fsimplify.rs?ref=2440998666cb9fe5f35c1de9ef44849b71870fc3", "patch": "@@ -95,6 +95,7 @@ impl<'a, 'tcx> CfgSimplifier<'a, 'tcx> {\n \n         let mut start = START_BLOCK;\n \n+        let mut merged_blocks = Vec::new();\n         loop {\n             let mut changed = false;\n \n@@ -118,10 +119,23 @@ impl<'a, 'tcx> CfgSimplifier<'a, 'tcx> {\n                 while inner_changed {\n                     inner_changed = false;\n                     inner_changed |= self.simplify_branch(&mut terminator);\n-                    inner_changed |= self.merge_successor(bb, &mut terminator);\n+                    inner_changed |= self.merge_successor(&mut merged_blocks, &mut terminator);\n                     changed |= inner_changed;\n                 }\n \n+                let merged_block_count =\n+                    merged_blocks.iter().map(|&i| self.basic_blocks[i].statements.len()).sum();\n+\n+                if merged_block_count > 0 {\n+                    let mut statements = std::mem::take(&mut self.basic_blocks[bb].statements);\n+                    statements.reserve(merged_block_count);\n+                    for &from in &merged_blocks {\n+                        statements.append(&mut self.basic_blocks[from].statements);\n+                    }\n+                    self.basic_blocks[bb].statements = statements;\n+                }\n+                merged_blocks.clear();\n+\n                 self.basic_blocks[bb].terminator = Some(terminator);\n \n                 changed |= inner_changed;\n@@ -196,7 +210,7 @@ impl<'a, 'tcx> CfgSimplifier<'a, 'tcx> {\n     // merge a block with 1 `goto` predecessor to its parent\n     fn merge_successor(\n         &mut self,\n-        merge_into: BasicBlock,\n+        merged_blocks: &mut Vec<BasicBlock>,\n         terminator: &mut Terminator<'tcx>,\n     ) -> bool {\n         let target = match terminator.kind {\n@@ -214,8 +228,7 @@ impl<'a, 'tcx> CfgSimplifier<'a, 'tcx> {\n             }\n         };\n \n-        let (from, to) = self.basic_blocks.pick2_mut(target, merge_into);\n-        to.statements.append(&mut from.statements);\n+        merged_blocks.push(target);\n         self.pred_count[target] = 0;\n \n         true"}]}