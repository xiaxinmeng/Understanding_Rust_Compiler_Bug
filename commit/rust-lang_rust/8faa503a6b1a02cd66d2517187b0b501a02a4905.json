{"sha": "8faa503a6b1a02cd66d2517187b0b501a02a4905", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhmYWE1MDNhNmIxYTAyY2Q2NmQyNTE3MTg3YjBiNTAxYTAyYTQ5MDU=", "commit": {"author": {"name": "Oliver Middleton", "email": "olliemail27@gmail.com", "date": "2016-10-20T23:49:47Z"}, "committer": {"name": "Oliver Middleton", "email": "olliemail27@gmail.com", "date": "2016-10-20T23:49:47Z"}, "message": "Fix a few links in the docs", "tree": {"sha": "e9d68e3947aff65ff6f6825ddcec94460e307ee6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e9d68e3947aff65ff6f6825ddcec94460e307ee6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8faa503a6b1a02cd66d2517187b0b501a02a4905", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8faa503a6b1a02cd66d2517187b0b501a02a4905", "html_url": "https://github.com/rust-lang/rust/commit/8faa503a6b1a02cd66d2517187b0b501a02a4905", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8faa503a6b1a02cd66d2517187b0b501a02a4905/comments", "author": {"login": "ollie27", "id": 7189418, "node_id": "MDQ6VXNlcjcxODk0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/7189418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ollie27", "html_url": "https://github.com/ollie27", "followers_url": "https://api.github.com/users/ollie27/followers", "following_url": "https://api.github.com/users/ollie27/following{/other_user}", "gists_url": "https://api.github.com/users/ollie27/gists{/gist_id}", "starred_url": "https://api.github.com/users/ollie27/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ollie27/subscriptions", "organizations_url": "https://api.github.com/users/ollie27/orgs", "repos_url": "https://api.github.com/users/ollie27/repos", "events_url": "https://api.github.com/users/ollie27/events{/privacy}", "received_events_url": "https://api.github.com/users/ollie27/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ollie27", "id": 7189418, "node_id": "MDQ6VXNlcjcxODk0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/7189418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ollie27", "html_url": "https://github.com/ollie27", "followers_url": "https://api.github.com/users/ollie27/followers", "following_url": "https://api.github.com/users/ollie27/following{/other_user}", "gists_url": "https://api.github.com/users/ollie27/gists{/gist_id}", "starred_url": "https://api.github.com/users/ollie27/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ollie27/subscriptions", "organizations_url": "https://api.github.com/users/ollie27/orgs", "repos_url": "https://api.github.com/users/ollie27/repos", "events_url": "https://api.github.com/users/ollie27/events{/privacy}", "received_events_url": "https://api.github.com/users/ollie27/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7bccb829d0fe9a733bd6efcf6f7313186ae237ab", "url": "https://api.github.com/repos/rust-lang/rust/commits/7bccb829d0fe9a733bd6efcf6f7313186ae237ab", "html_url": "https://github.com/rust-lang/rust/commit/7bccb829d0fe9a733bd6efcf6f7313186ae237ab"}], "stats": {"total": 32, "additions": 18, "deletions": 14}, "files": [{"sha": "830bbc079ad1e81cc242c5dbf2f7771d16dc8f09", "filename": "src/libcore/convert.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8faa503a6b1a02cd66d2517187b0b501a02a4905/src%2Flibcore%2Fconvert.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8faa503a6b1a02cd66d2517187b0b501a02a4905/src%2Flibcore%2Fconvert.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fconvert.rs?ref=8faa503a6b1a02cd66d2517187b0b501a02a4905", "patch": "@@ -145,7 +145,7 @@ pub trait AsMut<T: ?Sized> {\n ///\n /// # Generic Impls\n ///\n-/// - `[From<T>][From] for U` implies `Into<U> for T`\n+/// - [`From<T>`][From]` for U` implies `Into<U> for T`\n /// - [`into()`] is reflexive, which means that `Into<T> for T` is implemented\n ///\n /// [`TryInto`]: trait.TryInto.html\n@@ -178,14 +178,14 @@ pub trait Into<T>: Sized {\n /// ```\n /// # Generic impls\n ///\n-/// - `From<T> for U` implies `[Into<U>] for T`\n+/// - `From<T> for U` implies [`Into<U>`]` for T`\n /// - [`from()`] is reflexive, which means that `From<T> for T` is implemented\n ///\n /// [`TryFrom`]: trait.TryFrom.html\n /// [`Option<T>`]: ../../std/option/enum.Option.html\n /// [`Result<T, E>`]: ../../std/result/enum.Result.html\n /// [`String`]: ../../std/string/struct.String.html\n-/// [Into<U>]: trait.Into.html\n+/// [`Into<U>`]: trait.Into.html\n /// [`from()`]: trait.From.html#tymethod.from\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub trait From<T>: Sized {"}, {"sha": "d5b65d27a5a84244acc7ee168929b367bdccc55f", "filename": "src/libcore/macros.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/8faa503a6b1a02cd66d2517187b0b501a02a4905/src%2Flibcore%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8faa503a6b1a02cd66d2517187b0b501a02a4905/src%2Flibcore%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmacros.rs?ref=8faa503a6b1a02cd66d2517187b0b501a02a4905", "patch": "@@ -42,12 +42,13 @@ macro_rules! panic {\n /// Unsafe code relies on `assert!` to enforce run-time invariants that, if\n /// violated could lead to unsafety.\n ///\n-/// Other use-cases of `assert!` include\n-/// [testing](https://doc.rust-lang.org/book/testing.html) and enforcing\n-/// run-time invariants in safe code (whose violation cannot result in unsafety).\n+/// Other use-cases of `assert!` include [testing] and enforcing run-time\n+/// invariants in safe code (whose violation cannot result in unsafety).\n ///\n /// This macro has a second version, where a custom panic message can be provided.\n ///\n+/// [testing]: ../book/testing.html\n+///\n /// # Examples\n ///\n /// ```"}, {"sha": "bdb0dd8e7d1a9e0a371164c582b2aaa4af9276fe", "filename": "src/libcore/marker.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8faa503a6b1a02cd66d2517187b0b501a02a4905/src%2Flibcore%2Fmarker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8faa503a6b1a02cd66d2517187b0b501a02a4905/src%2Flibcore%2Fmarker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmarker.rs?ref=8faa503a6b1a02cd66d2517187b0b501a02a4905", "patch": "@@ -241,8 +241,8 @@ pub trait Unsize<T: ?Sized> {\n /// compile-time error. Specifically, with structs you'll get [E0204] and with enums you'll get\n /// [E0205].\n ///\n-/// [E0204]: https://doc.rust-lang.org/error-index.html#E0204\n-/// [E0205]: https://doc.rust-lang.org/error-index.html#E0205\n+/// [E0204]: ../../error-index.html#E0204\n+/// [E0205]: ../../error-index.html#E0205\n ///\n /// ## When *should* my type be `Copy`?\n ///"}, {"sha": "0349f113762eb7624c0d9e75fac952eff2b54c4e", "filename": "src/libcore/ops.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8faa503a6b1a02cd66d2517187b0b501a02a4905/src%2Flibcore%2Fops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8faa503a6b1a02cd66d2517187b0b501a02a4905/src%2Flibcore%2Fops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fops.rs?ref=8faa503a6b1a02cd66d2517187b0b501a02a4905", "patch": "@@ -182,11 +182,11 @@ pub trait Drop {\n     /// After this function is over, the memory of `self` will be deallocated.\n     ///\n     /// This function cannot be called explicitly. This is compiler error\n-    /// [0040]. However, the [`std::mem::drop`] function in the prelude can be\n+    /// [E0040]. However, the [`std::mem::drop`] function in the prelude can be\n     /// used to call the argument's `Drop` implementation.\n     ///\n-    /// [0040]: https://doc.rust-lang.org/error-index.html#E0040\n-    /// [`std::mem::drop`]: https://doc.rust-lang.org/std/mem/fn.drop.html\n+    /// [E0040]: ../../error-index.html#E0040\n+    /// [`std::mem::drop`]: ../../std/mem/fn.drop.html\n     ///\n     /// # Panics\n     ///"}, {"sha": "454fa47cfbc99f4277cfab407759e5d18ad0c132", "filename": "src/libstd/error.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8faa503a6b1a02cd66d2517187b0b501a02a4905/src%2Flibstd%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8faa503a6b1a02cd66d2517187b0b501a02a4905/src%2Flibstd%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ferror.rs?ref=8faa503a6b1a02cd66d2517187b0b501a02a4905", "patch": "@@ -69,7 +69,9 @@ pub trait Error: Debug + Display {\n     /// It should not contain newlines or sentence-ending punctuation,\n     /// to facilitate embedding in larger user-facing strings.\n     /// For showing formatted error messages with more information see\n-    /// [Display](https://doc.rust-lang.org/std/fmt/trait.Display.html).\n+    /// [`Display`].\n+    ///\n+    /// [`Display`]: ../fmt/trait.Display.html\n     ///\n     /// # Examples\n     ///"}, {"sha": "1fed061292b8e4951074676cf3961bf4e3e27cec", "filename": "src/libstd/io/cursor.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8faa503a6b1a02cd66d2517187b0b501a02a4905/src%2Flibstd%2Fio%2Fcursor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8faa503a6b1a02cd66d2517187b0b501a02a4905/src%2Flibstd%2Fio%2Fcursor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fcursor.rs?ref=8faa503a6b1a02cd66d2517187b0b501a02a4905", "patch": "@@ -23,7 +23,7 @@ use io::{self, SeekFrom, Error, ErrorKind};\n ///\n /// The standard library implements some I/O traits on various types which\n /// are commonly used as a buffer, like `Cursor<`[`Vec`]`<u8>>` and\n-/// `Cursor<`[`&[u8]`]`>`.\n+/// `Cursor<`[`&[u8]`][bytes]`>`.\n ///\n /// # Examples\n ///\n@@ -35,7 +35,7 @@ use io::{self, SeekFrom, Error, ErrorKind};\n /// [`Read`]: ../../std/io/trait.Read.html\n /// [`Write`]: ../../std/io/trait.Write.html\n /// [`Vec`]: ../../std/vec/struct.Vec.html\n-/// [`&[u8]`]: ../../std/primitive.slice.html\n+/// [bytes]: ../../std/primitive.slice.html\n /// [`File`]: ../fs/struct.File.html\n ///\n /// ```no_run"}, {"sha": "34d1ed9e00a3ff2d9e9a21a512d65a524330ff7a", "filename": "src/libstd/path.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8faa503a6b1a02cd66d2517187b0b501a02a4905/src%2Flibstd%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8faa503a6b1a02cd66d2517187b0b501a02a4905/src%2Flibstd%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fpath.rs?ref=8faa503a6b1a02cd66d2517187b0b501a02a4905", "patch": "@@ -914,6 +914,7 @@ impl<'a> cmp::Ord for Components<'a> {\n /// [`Path`]: struct.Path.html\n /// [`push`]: struct.PathBuf.html#method.push\n /// [`set_extension`]: struct.PathBuf.html#method.set_extension\n+/// [`Deref`]: ../ops/trait.Deref.html\n ///\n /// More details about the overall approach can be found in\n /// the module documentation."}]}