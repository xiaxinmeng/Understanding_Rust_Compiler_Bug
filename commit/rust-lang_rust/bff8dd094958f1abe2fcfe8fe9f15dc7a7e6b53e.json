{"sha": "bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJmZjhkZDA5NDk1OGYxYWJlMmZjZmU4ZmU5ZjE1ZGM3YTdlNmI1M2U=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-08-01T11:47:19Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-08-01T11:47:19Z"}, "message": "Update grammar", "tree": {"sha": "cb6e4783b74d04ae2188fb04b652488e97429b99", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cb6e4783b74d04ae2188fb04b652488e97429b99"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e", "html_url": "https://github.com/rust-lang/rust/commit/bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5af32aeb2b83c7ae8adf3e088bf4f3691aa45eb1", "url": "https://api.github.com/repos/rust-lang/rust/commits/5af32aeb2b83c7ae8adf3e088bf4f3691aa45eb1", "html_url": "https://github.com/rust-lang/rust/commit/5af32aeb2b83c7ae8adf3e088bf4f3691aa45eb1"}], "stats": {"total": 301, "additions": 150, "deletions": 151}, "files": [{"sha": "de361cc23a7c1bb2f46a2a417a57b9128fd41c61", "filename": "Cargo.lock", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e", "patch": "@@ -279,9 +279,9 @@ checksum = \"524cbf6897b527295dff137cec09ecf3a05f4fddffd7dfcd1585403449e74198\"\n \n [[package]]\n name = \"drop_bomb\"\n-version = \"0.1.4\"\n+version = \"0.1.5\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"69b26e475fd29098530e709294e94e661974c851aed42512793f120fed4e199f\"\n+checksum = \"9bda8e21c04aca2ae33ffc2fd8c23134f3cac46db123ba97bd9d3f3b8a4a85e1\"\n \n [[package]]\n name = \"either\"\n@@ -1622,9 +1622,9 @@ checksum = \"53953d2d3a5ad81d9f844a32f14ebb121f50b650cd59d0ee2a07cf13c617efed\"\n \n [[package]]\n name = \"tracing\"\n-version = \"0.1.17\"\n+version = \"0.1.18\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"dbdf4ccd1652592b01286a5dbe1e2a77d78afaa34beadd9872a5f7396f92aaa9\"\n+checksum = \"f0aae59226cf195d8e74d4b34beae1859257efb4e5fed3f147d2dc2c7d372178\"\n dependencies = [\n  \"cfg-if\",\n  \"tracing-attributes\",\n@@ -1644,9 +1644,9 @@ dependencies = [\n \n [[package]]\n name = \"tracing-core\"\n-version = \"0.1.11\"\n+version = \"0.1.12\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"94ae75f0d28ae10786f3b1895c55fe72e79928fd5ccdebb5438c75e93fec178f\"\n+checksum = \"b2734b5a028fa697686f16c6d18c2c6a3c7e41513f9a213abb6754c4acb3c8d7\"\n dependencies = [\n  \"lazy_static\",\n ]\n@@ -1674,9 +1674,9 @@ dependencies = [\n \n [[package]]\n name = \"tracing-subscriber\"\n-version = \"0.2.9\"\n+version = \"0.2.10\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"e4f5dd7095c2481b7b3cbed71c8de53085fb3542bc3c2b4c73cba43e8f11c7ba\"\n+checksum = \"f7b33f8b2ef2ab0c3778c12646d9c42a24f7772bee4cdafc72199644a9f58fdc\"\n dependencies = [\n  \"ansi_term\",\n  \"chrono\",\n@@ -1708,9 +1708,9 @@ dependencies = [\n \n [[package]]\n name = \"ungrammar\"\n-version = \"0.1.0\"\n+version = \"1.1.1\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"0ee12e4891ab3acc2d95d5023022ace22020247bb8a8d1ece875a443f7dab37d\"\n+checksum = \"c4e20e58a08ee1bcf8a4695cf74550cf054d6c489105f594beacb2c684210aad\"\n \n [[package]]\n name = \"unicode-bidi\"\n@@ -1833,9 +1833,9 @@ checksum = \"712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f\"\n \n [[package]]\n name = \"write-json\"\n-version = \"0.1.0\"\n+version = \"0.1.2\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"8b3f9a784c809a99e38d2e825907617cb03bd880d5421153bc4548e9317f59d0\"\n+checksum = \"06069a848f95fceae3e5e03c0ddc8cb78452b56654ee0c8e68f938cf790fb9e3\"\n \n [[package]]\n name = \"ws2_32-sys\""}, {"sha": "fbaf3c06b52b943e7f25955543652ddeaa937835", "filename": "crates/ra_assists/src/handlers/introduce_named_lifetime.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fintroduce_named_lifetime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fintroduce_named_lifetime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fintroduce_named_lifetime.rs?ref=bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e", "patch": "@@ -68,7 +68,7 @@ fn generate_fn_def_assist(\n         let fn_params_without_lifetime: Vec<_> = param_list\n             .params()\n             .filter_map(|param| match param.ty() {\n-                Some(ast::Type::ReferenceType(ascribed_type))\n+                Some(ast::Type::RefType(ascribed_type))\n                     if ascribed_type.lifetime_token() == None =>\n                 {\n                     Some(ascribed_type.amp_token()?.text_range().end())"}, {"sha": "6f7884ffe5958d2116fb5edc6d850d66de5fa2ff", "filename": "crates/ra_hir_def/src/type_ref.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e/crates%2Fra_hir_def%2Fsrc%2Ftype_ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e/crates%2Fra_hir_def%2Fsrc%2Ftype_ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Ftype_ref.rs?ref=bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e", "patch": "@@ -94,7 +94,7 @@ impl TypeRef {\n                     .map(TypeRef::Path)\n                     .unwrap_or(TypeRef::Error)\n             }\n-            ast::Type::PointerType(inner) => {\n+            ast::Type::PtrType(inner) => {\n                 let inner_ty = TypeRef::from_ast_opt(&ctx, inner.ty());\n                 let mutability = Mutability::from_mutable(inner.mut_token().is_some());\n                 TypeRef::RawPtr(Box::new(inner_ty), mutability)\n@@ -105,13 +105,13 @@ impl TypeRef {\n             ast::Type::SliceType(inner) => {\n                 TypeRef::Slice(Box::new(TypeRef::from_ast_opt(&ctx, inner.ty())))\n             }\n-            ast::Type::ReferenceType(inner) => {\n+            ast::Type::RefType(inner) => {\n                 let inner_ty = TypeRef::from_ast_opt(&ctx, inner.ty());\n                 let mutability = Mutability::from_mutable(inner.mut_token().is_some());\n                 TypeRef::Reference(Box::new(inner_ty), mutability)\n             }\n             ast::Type::InferType(_inner) => TypeRef::Placeholder,\n-            ast::Type::FnPointerType(inner) => {\n+            ast::Type::FnPtrType(inner) => {\n                 let ret_ty = inner\n                     .ret_type()\n                     .and_then(|rt| rt.ty())"}, {"sha": "c8d80fcf7cb52c55ce6d211b2f15fa2c3bc77cdd", "filename": "crates/ra_ide/src/references/rename.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e/crates%2Fra_ide%2Fsrc%2Freferences%2Frename.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e/crates%2Fra_ide%2Fsrc%2Freferences%2Frename.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Freferences%2Frename.rs?ref=bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e", "patch": "@@ -157,7 +157,7 @@ fn rename_to_self(\n     }\n     let first_param = params.params().next()?;\n     let mutable = match first_param.ty() {\n-        Some(ast::Type::ReferenceType(rt)) => rt.mut_token().is_some(),\n+        Some(ast::Type::RefType(rt)) => rt.mut_token().is_some(),\n         _ => return None, // not renaming other types\n     };\n "}, {"sha": "a32ae0165e19e84dc27b4bc1be91031a455a266e", "filename": "crates/ra_ide/src/syntax_highlighting.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting.rs?ref=bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e", "patch": "@@ -546,7 +546,7 @@ fn highlight_element(\n             T![!] if element.parent().and_then(ast::MacroCall::cast).is_some() => {\n                 HighlightTag::Macro.into()\n             }\n-            T![*] if element.parent().and_then(ast::PointerType::cast).is_some() => {\n+            T![*] if element.parent().and_then(ast::PtrType::cast).is_some() => {\n                 HighlightTag::Keyword.into()\n             }\n             T![*] if element.parent().and_then(ast::PrefixExpr::cast).is_some() => {"}, {"sha": "0aa173a52b2f35bbf49802b77d8f38a0847ad6f7", "filename": "crates/ra_parser/src/grammar/types.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e/crates%2Fra_parser%2Fsrc%2Fgrammar%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e/crates%2Fra_parser%2Fsrc%2Fgrammar%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fgrammar%2Ftypes.rs?ref=bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e", "patch": "@@ -117,7 +117,7 @@ fn pointer_type(p: &mut Parser) {\n     };\n \n     type_no_bounds(p);\n-    m.complete(p, POINTER_TYPE);\n+    m.complete(p, PTR_TYPE);\n }\n \n fn array_or_slice_type(p: &mut Parser) {\n@@ -163,7 +163,7 @@ fn reference_type(p: &mut Parser) {\n     p.eat(LIFETIME);\n     p.eat(T![mut]);\n     type_no_bounds(p);\n-    m.complete(p, REFERENCE_TYPE);\n+    m.complete(p, REF_TYPE);\n }\n \n // test placeholder_type\n@@ -201,7 +201,7 @@ fn fn_pointer_type(p: &mut Parser) {\n     // test fn_pointer_type_with_ret\n     // type F = fn() -> ();\n     opt_fn_ret_type(p);\n-    m.complete(p, FN_POINTER_TYPE);\n+    m.complete(p, FN_PTR_TYPE);\n }\n \n pub(super) fn for_binder(p: &mut Parser) {"}, {"sha": "192ecd864e93ffda16ce7e8b0e324c5b0bf256e1", "filename": "crates/ra_parser/src/syntax_kind/generated.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e/crates%2Fra_parser%2Fsrc%2Fsyntax_kind%2Fgenerated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e/crates%2Fra_parser%2Fsrc%2Fsyntax_kind%2Fgenerated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fsyntax_kind%2Fgenerated.rs?ref=bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e", "patch": "@@ -143,12 +143,12 @@ pub enum SyntaxKind {\n     TUPLE_TYPE,\n     NEVER_TYPE,\n     PATH_TYPE,\n-    POINTER_TYPE,\n+    PTR_TYPE,\n     ARRAY_TYPE,\n     SLICE_TYPE,\n-    REFERENCE_TYPE,\n+    REF_TYPE,\n     INFER_TYPE,\n-    FN_POINTER_TYPE,\n+    FN_PTR_TYPE,\n     FOR_TYPE,\n     IMPL_TRAIT_TYPE,\n     DYN_TRAIT_TYPE,"}, {"sha": "3d49309d1488eb7b66398e6b83f379b6294a1154", "filename": "crates/ra_syntax/src/ast/generated/nodes.rs", "status": "modified", "additions": 40, "deletions": 40, "changes": 80, "blob_url": "https://github.com/rust-lang/rust/blob/bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated%2Fnodes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated%2Fnodes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated%2Fnodes.rs?ref=bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e", "patch": "@@ -1006,10 +1006,10 @@ impl DynTraitType {\n     pub fn type_bound_list(&self) -> Option<TypeBoundList> { support::child(&self.syntax) }\n }\n #[derive(Debug, Clone, PartialEq, Eq, Hash)]\n-pub struct FnPointerType {\n+pub struct FnPtrType {\n     pub(crate) syntax: SyntaxNode,\n }\n-impl FnPointerType {\n+impl FnPtrType {\n     pub fn const_token(&self) -> Option<SyntaxToken> { support::token(&self.syntax, T![const]) }\n     pub fn async_token(&self) -> Option<SyntaxToken> { support::token(&self.syntax, T![async]) }\n     pub fn unsafe_token(&self) -> Option<SyntaxToken> { support::token(&self.syntax, T![unsafe]) }\n@@ -1059,20 +1059,20 @@ impl ParenType {\n     pub fn r_paren_token(&self) -> Option<SyntaxToken> { support::token(&self.syntax, T![')']) }\n }\n #[derive(Debug, Clone, PartialEq, Eq, Hash)]\n-pub struct PointerType {\n+pub struct PtrType {\n     pub(crate) syntax: SyntaxNode,\n }\n-impl PointerType {\n+impl PtrType {\n     pub fn star_token(&self) -> Option<SyntaxToken> { support::token(&self.syntax, T![*]) }\n     pub fn const_token(&self) -> Option<SyntaxToken> { support::token(&self.syntax, T![const]) }\n     pub fn mut_token(&self) -> Option<SyntaxToken> { support::token(&self.syntax, T![mut]) }\n     pub fn ty(&self) -> Option<Type> { support::child(&self.syntax) }\n }\n #[derive(Debug, Clone, PartialEq, Eq, Hash)]\n-pub struct ReferenceType {\n+pub struct RefType {\n     pub(crate) syntax: SyntaxNode,\n }\n-impl ReferenceType {\n+impl RefType {\n     pub fn amp_token(&self) -> Option<SyntaxToken> { support::token(&self.syntax, T![&]) }\n     pub fn lifetime_token(&self) -> Option<SyntaxToken> {\n         support::token(&self.syntax, T![lifetime])\n@@ -1263,15 +1263,15 @@ pub enum GenericArg {\n pub enum Type {\n     ArrayType(ArrayType),\n     DynTraitType(DynTraitType),\n-    FnPointerType(FnPointerType),\n+    FnPtrType(FnPtrType),\n     ForType(ForType),\n     ImplTraitType(ImplTraitType),\n     InferType(InferType),\n     NeverType(NeverType),\n     ParenType(ParenType),\n     PathType(PathType),\n-    PointerType(PointerType),\n-    ReferenceType(ReferenceType),\n+    PtrType(PtrType),\n+    RefType(RefType),\n     SliceType(SliceType),\n     TupleType(TupleType),\n }\n@@ -1377,8 +1377,8 @@ impl ast::NameOwner for AssocItem {}\n #[derive(Debug, Clone, PartialEq, Eq, Hash)]\n pub enum ExternItem {\n     Fn(Fn),\n-    Static(Static),\n     MacroCall(MacroCall),\n+    Static(Static),\n }\n impl ast::AttrsOwner for ExternItem {}\n impl ast::NameOwner for ExternItem {}\n@@ -2434,8 +2434,8 @@ impl AstNode for DynTraitType {\n     }\n     fn syntax(&self) -> &SyntaxNode { &self.syntax }\n }\n-impl AstNode for FnPointerType {\n-    fn can_cast(kind: SyntaxKind) -> bool { kind == FN_POINTER_TYPE }\n+impl AstNode for FnPtrType {\n+    fn can_cast(kind: SyntaxKind) -> bool { kind == FN_PTR_TYPE }\n     fn cast(syntax: SyntaxNode) -> Option<Self> {\n         if Self::can_cast(syntax.kind()) {\n             Some(Self { syntax })\n@@ -2500,8 +2500,8 @@ impl AstNode for ParenType {\n     }\n     fn syntax(&self) -> &SyntaxNode { &self.syntax }\n }\n-impl AstNode for PointerType {\n-    fn can_cast(kind: SyntaxKind) -> bool { kind == POINTER_TYPE }\n+impl AstNode for PtrType {\n+    fn can_cast(kind: SyntaxKind) -> bool { kind == PTR_TYPE }\n     fn cast(syntax: SyntaxNode) -> Option<Self> {\n         if Self::can_cast(syntax.kind()) {\n             Some(Self { syntax })\n@@ -2511,8 +2511,8 @@ impl AstNode for PointerType {\n     }\n     fn syntax(&self) -> &SyntaxNode { &self.syntax }\n }\n-impl AstNode for ReferenceType {\n-    fn can_cast(kind: SyntaxKind) -> bool { kind == REFERENCE_TYPE }\n+impl AstNode for RefType {\n+    fn can_cast(kind: SyntaxKind) -> bool { kind == REF_TYPE }\n     fn cast(syntax: SyntaxNode) -> Option<Self> {\n         if Self::can_cast(syntax.kind()) {\n             Some(Self { syntax })\n@@ -2786,8 +2786,8 @@ impl From<ArrayType> for Type {\n impl From<DynTraitType> for Type {\n     fn from(node: DynTraitType) -> Type { Type::DynTraitType(node) }\n }\n-impl From<FnPointerType> for Type {\n-    fn from(node: FnPointerType) -> Type { Type::FnPointerType(node) }\n+impl From<FnPtrType> for Type {\n+    fn from(node: FnPtrType) -> Type { Type::FnPtrType(node) }\n }\n impl From<ForType> for Type {\n     fn from(node: ForType) -> Type { Type::ForType(node) }\n@@ -2807,11 +2807,11 @@ impl From<ParenType> for Type {\n impl From<PathType> for Type {\n     fn from(node: PathType) -> Type { Type::PathType(node) }\n }\n-impl From<PointerType> for Type {\n-    fn from(node: PointerType) -> Type { Type::PointerType(node) }\n+impl From<PtrType> for Type {\n+    fn from(node: PtrType) -> Type { Type::PtrType(node) }\n }\n-impl From<ReferenceType> for Type {\n-    fn from(node: ReferenceType) -> Type { Type::ReferenceType(node) }\n+impl From<RefType> for Type {\n+    fn from(node: RefType) -> Type { Type::RefType(node) }\n }\n impl From<SliceType> for Type {\n     fn from(node: SliceType) -> Type { Type::SliceType(node) }\n@@ -2822,25 +2822,25 @@ impl From<TupleType> for Type {\n impl AstNode for Type {\n     fn can_cast(kind: SyntaxKind) -> bool {\n         match kind {\n-            ARRAY_TYPE | DYN_TRAIT_TYPE | FN_POINTER_TYPE | FOR_TYPE | IMPL_TRAIT_TYPE\n-            | INFER_TYPE | NEVER_TYPE | PAREN_TYPE | PATH_TYPE | POINTER_TYPE | REFERENCE_TYPE\n-            | SLICE_TYPE | TUPLE_TYPE => true,\n+            ARRAY_TYPE | DYN_TRAIT_TYPE | FN_PTR_TYPE | FOR_TYPE | IMPL_TRAIT_TYPE | INFER_TYPE\n+            | NEVER_TYPE | PAREN_TYPE | PATH_TYPE | PTR_TYPE | REF_TYPE | SLICE_TYPE\n+            | TUPLE_TYPE => true,\n             _ => false,\n         }\n     }\n     fn cast(syntax: SyntaxNode) -> Option<Self> {\n         let res = match syntax.kind() {\n             ARRAY_TYPE => Type::ArrayType(ArrayType { syntax }),\n             DYN_TRAIT_TYPE => Type::DynTraitType(DynTraitType { syntax }),\n-            FN_POINTER_TYPE => Type::FnPointerType(FnPointerType { syntax }),\n+            FN_PTR_TYPE => Type::FnPtrType(FnPtrType { syntax }),\n             FOR_TYPE => Type::ForType(ForType { syntax }),\n             IMPL_TRAIT_TYPE => Type::ImplTraitType(ImplTraitType { syntax }),\n             INFER_TYPE => Type::InferType(InferType { syntax }),\n             NEVER_TYPE => Type::NeverType(NeverType { syntax }),\n             PAREN_TYPE => Type::ParenType(ParenType { syntax }),\n             PATH_TYPE => Type::PathType(PathType { syntax }),\n-            POINTER_TYPE => Type::PointerType(PointerType { syntax }),\n-            REFERENCE_TYPE => Type::ReferenceType(ReferenceType { syntax }),\n+            PTR_TYPE => Type::PtrType(PtrType { syntax }),\n+            REF_TYPE => Type::RefType(RefType { syntax }),\n             SLICE_TYPE => Type::SliceType(SliceType { syntax }),\n             TUPLE_TYPE => Type::TupleType(TupleType { syntax }),\n             _ => return None,\n@@ -2851,15 +2851,15 @@ impl AstNode for Type {\n         match self {\n             Type::ArrayType(it) => &it.syntax,\n             Type::DynTraitType(it) => &it.syntax,\n-            Type::FnPointerType(it) => &it.syntax,\n+            Type::FnPtrType(it) => &it.syntax,\n             Type::ForType(it) => &it.syntax,\n             Type::ImplTraitType(it) => &it.syntax,\n             Type::InferType(it) => &it.syntax,\n             Type::NeverType(it) => &it.syntax,\n             Type::ParenType(it) => &it.syntax,\n             Type::PathType(it) => &it.syntax,\n-            Type::PointerType(it) => &it.syntax,\n-            Type::ReferenceType(it) => &it.syntax,\n+            Type::PtrType(it) => &it.syntax,\n+            Type::RefType(it) => &it.syntax,\n             Type::SliceType(it) => &it.syntax,\n             Type::TupleType(it) => &it.syntax,\n         }\n@@ -3332,33 +3332,33 @@ impl AstNode for AssocItem {\n impl From<Fn> for ExternItem {\n     fn from(node: Fn) -> ExternItem { ExternItem::Fn(node) }\n }\n-impl From<Static> for ExternItem {\n-    fn from(node: Static) -> ExternItem { ExternItem::Static(node) }\n-}\n impl From<MacroCall> for ExternItem {\n     fn from(node: MacroCall) -> ExternItem { ExternItem::MacroCall(node) }\n }\n+impl From<Static> for ExternItem {\n+    fn from(node: Static) -> ExternItem { ExternItem::Static(node) }\n+}\n impl AstNode for ExternItem {\n     fn can_cast(kind: SyntaxKind) -> bool {\n         match kind {\n-            FN | STATIC | MACRO_CALL => true,\n+            FN | MACRO_CALL | STATIC => true,\n             _ => false,\n         }\n     }\n     fn cast(syntax: SyntaxNode) -> Option<Self> {\n         let res = match syntax.kind() {\n             FN => ExternItem::Fn(Fn { syntax }),\n-            STATIC => ExternItem::Static(Static { syntax }),\n             MACRO_CALL => ExternItem::MacroCall(MacroCall { syntax }),\n+            STATIC => ExternItem::Static(Static { syntax }),\n             _ => return None,\n         };\n         Some(res)\n     }\n     fn syntax(&self) -> &SyntaxNode {\n         match self {\n             ExternItem::Fn(it) => &it.syntax,\n-            ExternItem::Static(it) => &it.syntax,\n             ExternItem::MacroCall(it) => &it.syntax,\n+            ExternItem::Static(it) => &it.syntax,\n         }\n     }\n }\n@@ -3925,7 +3925,7 @@ impl std::fmt::Display for DynTraitType {\n         std::fmt::Display::fmt(self.syntax(), f)\n     }\n }\n-impl std::fmt::Display for FnPointerType {\n+impl std::fmt::Display for FnPtrType {\n     fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {\n         std::fmt::Display::fmt(self.syntax(), f)\n     }\n@@ -3955,12 +3955,12 @@ impl std::fmt::Display for ParenType {\n         std::fmt::Display::fmt(self.syntax(), f)\n     }\n }\n-impl std::fmt::Display for PointerType {\n+impl std::fmt::Display for PtrType {\n     fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {\n         std::fmt::Display::fmt(self.syntax(), f)\n     }\n }\n-impl std::fmt::Display for ReferenceType {\n+impl std::fmt::Display for RefType {\n     fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {\n         std::fmt::Display::fmt(self.syntax(), f)\n     }"}, {"sha": "f31c27633982ca337d5d4ca2f0677ea48517a4ea", "filename": "crates/ra_syntax/test_data/parser/err/0012_broken_lambda.rast", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0012_broken_lambda.rast", "raw_url": "https://github.com/rust-lang/rust/raw/bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0012_broken_lambda.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0012_broken_lambda.rast?ref=bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e", "patch": "@@ -39,7 +39,7 @@ SOURCE_FILE@0..389\n             IDENT@39..46 \"builder\"\n         COLON@46..47\n         WHITESPACE@47..48\n-        REFERENCE_TYPE@48..54\n+        REF_TYPE@48..54\n           AMP@48..49\n           MUT_KW@49..52\n           WHITESPACE@52..53\n@@ -56,7 +56,7 @@ SOURCE_FILE@0..389\n             IDENT@56..62 \"tokens\"\n         COLON@62..63\n         WHITESPACE@63..64\n-        REFERENCE_TYPE@64..72\n+        REF_TYPE@64..72\n           AMP@64..65\n           SLICE_TYPE@65..72\n             L_BRACK@65..66\n@@ -126,7 +126,7 @@ SOURCE_FILE@0..389\n                   IDENT@144..147 \"idx\"\n               COLON@147..148\n               WHITESPACE@148..149\n-              REFERENCE_TYPE@149..159\n+              REF_TYPE@149..159\n                 AMP@149..150\n                 MUT_KW@150..153\n                 WHITESPACE@153..154"}, {"sha": "71aa864943f8a53ed3fa91353341141b918d581e", "filename": "crates/ra_syntax/test_data/parser/err/0044_unexpected_for_type.rast", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0044_unexpected_for_type.rast", "raw_url": "https://github.com/rust-lang/rust/raw/bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0044_unexpected_for_type.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0044_unexpected_for_type.rast?ref=bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e", "patch": "@@ -15,7 +15,7 @@ SOURCE_FILE@0..239\n           LIFETIME@18..20 \"\\'a\"\n         R_ANGLE@20..21 \">\"\n       WHITESPACE@21..22 \" \"\n-      REFERENCE_TYPE@22..29\n+      REF_TYPE@22..29\n         AMP@22..23 \"&\"\n         LIFETIME@23..25 \"\\'a\"\n         WHITESPACE@25..26 \" \"\n@@ -44,7 +44,7 @@ SOURCE_FILE@0..239\n       WHITESPACE@52..53 \" \"\n       TUPLE_TYPE@53..63\n         L_PAREN@53..54 \"(\"\n-        REFERENCE_TYPE@54..61\n+        REF_TYPE@54..61\n           AMP@54..55 \"&\"\n           LIFETIME@55..57 \"\\'a\"\n           WHITESPACE@57..58 \" \"\n@@ -107,12 +107,12 @@ SOURCE_FILE@0..239\n             LIFETIME@124..126 \"\\'b\"\n           R_ANGLE@126..127 \">\"\n         WHITESPACE@127..128 \" \"\n-        FN_POINTER_TYPE@128..148\n+        FN_PTR_TYPE@128..148\n           FN_KW@128..130 \"fn\"\n           PARAM_LIST@130..148\n             L_PAREN@130..131 \"(\"\n             PARAM@131..138\n-              REFERENCE_TYPE@131..138\n+              REF_TYPE@131..138\n                 AMP@131..132 \"&\"\n                 LIFETIME@132..134 \"\\'a\"\n                 WHITESPACE@134..135 \" \"\n@@ -124,7 +124,7 @@ SOURCE_FILE@0..239\n             COMMA@138..139 \",\"\n             WHITESPACE@139..140 \" \"\n             PARAM@140..147\n-              REFERENCE_TYPE@140..147\n+              REF_TYPE@140..147\n                 AMP@140..141 \"&\"\n                 LIFETIME@141..143 \"\\'b\"\n                 WHITESPACE@143..144 \" \"\n@@ -178,12 +178,12 @@ SOURCE_FILE@0..239\n                 LIFETIME@200..202 \"\\'c\"\n               R_ANGLE@202..203 \">\"\n             WHITESPACE@203..204 \" \"\n-            FN_POINTER_TYPE@204..227\n+            FN_PTR_TYPE@204..227\n               FN_KW@204..206 \"fn\"\n               PARAM_LIST@206..227\n                 L_PAREN@206..207 \"(\"\n                 PARAM@207..212\n-                  REFERENCE_TYPE@207..212\n+                  REF_TYPE@207..212\n                     AMP@207..208 \"&\"\n                     LIFETIME@208..210 \"\\'a\"\n                     WHITESPACE@210..211 \" \"\n@@ -195,7 +195,7 @@ SOURCE_FILE@0..239\n                 COMMA@212..213 \",\"\n                 WHITESPACE@213..214 \" \"\n                 PARAM@214..219\n-                  REFERENCE_TYPE@214..219\n+                  REF_TYPE@214..219\n                     AMP@214..215 \"&\"\n                     LIFETIME@215..217 \"\\'b\"\n                     WHITESPACE@217..218 \" \"\n@@ -207,7 +207,7 @@ SOURCE_FILE@0..239\n                 COMMA@219..220 \",\"\n                 WHITESPACE@220..221 \" \"\n                 PARAM@221..226\n-                  REFERENCE_TYPE@221..226\n+                  REF_TYPE@221..226\n                     AMP@221..222 \"&\"\n                     LIFETIME@222..224 \"\\'c\"\n                     WHITESPACE@224..225 \" \""}, {"sha": "0d8bf6dd6b6ea715993b0a53a5643f98a56edf82", "filename": "crates/ra_syntax/test_data/parser/inline/err/0003_pointer_type_no_mutability.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0003_pointer_type_no_mutability.rast", "raw_url": "https://github.com/rust-lang/rust/raw/bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0003_pointer_type_no_mutability.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0003_pointer_type_no_mutability.rast?ref=bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e", "patch": "@@ -7,7 +7,7 @@ SOURCE_FILE@0..14\n     WHITESPACE@6..7 \" \"\n     EQ@7..8 \"=\"\n     WHITESPACE@8..9 \" \"\n-    POINTER_TYPE@9..12\n+    PTR_TYPE@9..12\n       STAR@9..10 \"*\"\n       TUPLE_TYPE@10..12\n         L_PAREN@10..11 \"(\""}, {"sha": "62da7b887343966978ffde92350434f47c31e56a", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0003_where_pred_for.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0003_where_pred_for.rast", "raw_url": "https://github.com/rust-lang/rust/raw/bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0003_where_pred_for.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0003_where_pred_for.rast?ref=bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e", "patch": "@@ -42,7 +42,7 @@ SOURCE_FILE@0..54\n                   PARAM_LIST@40..49\n                     L_PAREN@40..41 \"(\"\n                     PARAM@41..48\n-                      REFERENCE_TYPE@41..48\n+                      REF_TYPE@41..48\n                         AMP@41..42 \"&\"\n                         LIFETIME@42..44 \"\\'a\"\n                         WHITESPACE@44..45 \" \""}, {"sha": "b650735ba1d90bea264e220954218bba131345f5", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0004_value_parameters_no_patterns.rast", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0004_value_parameters_no_patterns.rast", "raw_url": "https://github.com/rust-lang/rust/raw/bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0004_value_parameters_no_patterns.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0004_value_parameters_no_patterns.rast?ref=bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e", "patch": "@@ -31,7 +31,7 @@ SOURCE_FILE@0..39\n                       COMMA@19..20 \",\"\n                       WHITESPACE@20..21 \" \"\n                       PARAM@21..25\n-                        REFERENCE_TYPE@21..25\n+                        REF_TYPE@21..25\n                           AMP@21..22 \"&\"\n                           PATH_TYPE@22..25\n                             PATH@22..25\n@@ -41,7 +41,7 @@ SOURCE_FILE@0..39\n                       COMMA@25..26 \",\"\n                       WHITESPACE@26..27 \" \"\n                       PARAM@27..31\n-                        REFERENCE_TYPE@27..31\n+                        REF_TYPE@27..31\n                           AMP@27..28 \"&\"\n                           PATH_TYPE@28..31\n                             PATH@28..31"}, {"sha": "d33215b507cfe5d96dd4c8f80720d788dd1da5c3", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0013_pointer_type_mut.rast", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0013_pointer_type_mut.rast", "raw_url": "https://github.com/rust-lang/rust/raw/bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0013_pointer_type_mut.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0013_pointer_type_mut.rast?ref=bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e", "patch": "@@ -7,7 +7,7 @@ SOURCE_FILE@0..36\n     WHITESPACE@6..7 \" \"\n     EQ@7..8 \"=\"\n     WHITESPACE@8..9 \" \"\n-    POINTER_TYPE@9..16\n+    PTR_TYPE@9..16\n       STAR@9..10 \"*\"\n       MUT_KW@10..13 \"mut\"\n       WHITESPACE@13..14 \" \"\n@@ -24,7 +24,7 @@ SOURCE_FILE@0..36\n     WHITESPACE@24..25 \" \"\n     EQ@25..26 \"=\"\n     WHITESPACE@26..27 \" \"\n-    POINTER_TYPE@27..34\n+    PTR_TYPE@27..34\n       STAR@27..28 \"*\"\n       MUT_KW@28..31 \"mut\"\n       WHITESPACE@31..32 \" \""}, {"sha": "ddbd665888f03b3cd65e72106a269876da42c602", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0018_arb_self_types.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0018_arb_self_types.rast", "raw_url": "https://github.com/rust-lang/rust/raw/bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0018_arb_self_types.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0018_arb_self_types.rast?ref=bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e", "patch": "@@ -22,7 +22,7 @@ SOURCE_FILE@0..69\n             SELF_KW@18..22 \"self\"\n             COLON@22..23 \":\"\n             WHITESPACE@23..24 \" \"\n-            REFERENCE_TYPE@24..29\n+            REF_TYPE@24..29\n               AMP@24..25 \"&\"\n               PATH_TYPE@25..29\n                 PATH@25..29"}, {"sha": "dda6577eda8cd7e624a7fc0e5927ab362829a84c", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0032_fn_pointer_type.rast", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0032_fn_pointer_type.rast", "raw_url": "https://github.com/rust-lang/rust/raw/bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0032_fn_pointer_type.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0032_fn_pointer_type.rast?ref=bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e", "patch": "@@ -7,7 +7,7 @@ SOURCE_FILE@0..113\n     WHITESPACE@6..7 \" \"\n     EQ@7..8 \"=\"\n     WHITESPACE@8..9 \" \"\n-    FN_POINTER_TYPE@9..13\n+    FN_PTR_TYPE@9..13\n       FN_KW@9..11 \"fn\"\n       PARAM_LIST@11..13\n         L_PAREN@11..12 \"(\"\n@@ -22,7 +22,7 @@ SOURCE_FILE@0..113\n     WHITESPACE@21..22 \" \"\n     EQ@22..23 \"=\"\n     WHITESPACE@23..24 \" \"\n-    FN_POINTER_TYPE@24..35\n+    FN_PTR_TYPE@24..35\n       UNSAFE_KW@24..30 \"unsafe\"\n       WHITESPACE@30..31 \" \"\n       FN_KW@31..33 \"fn\"\n@@ -39,7 +39,7 @@ SOURCE_FILE@0..113\n     WHITESPACE@43..44 \" \"\n     EQ@44..45 \"=\"\n     WHITESPACE@45..46 \" \"\n-    FN_POINTER_TYPE@46..68\n+    FN_PTR_TYPE@46..68\n       UNSAFE_KW@46..52 \"unsafe\"\n       WHITESPACE@52..53 \" \"\n       ABI@53..63\n@@ -61,7 +61,7 @@ SOURCE_FILE@0..113\n     WHITESPACE@76..77 \" \"\n     EQ@77..78 \"=\"\n     WHITESPACE@78..79 \" \"\n-    FN_POINTER_TYPE@79..111\n+    FN_PTR_TYPE@79..111\n       ABI@79..89\n         EXTERN_KW@79..85 \"extern\"\n         WHITESPACE@85..86 \" \""}, {"sha": "974df9f9aa13635f1c1e2d48bfd649283d826cb2", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0033_reference_type;.rast", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0033_reference_type%3B.rast", "raw_url": "https://github.com/rust-lang/rust/raw/bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0033_reference_type%3B.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0033_reference_type%3B.rast?ref=bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e", "patch": "@@ -7,7 +7,7 @@ SOURCE_FILE@0..54\n     WHITESPACE@6..7 \" \"\n     EQ@7..8 \"=\"\n     WHITESPACE@8..9 \" \"\n-    REFERENCE_TYPE@9..12\n+    REF_TYPE@9..12\n       AMP@9..10 \"&\"\n       TUPLE_TYPE@10..12\n         L_PAREN@10..11 \"(\"\n@@ -22,7 +22,7 @@ SOURCE_FILE@0..54\n     WHITESPACE@20..21 \" \"\n     EQ@21..22 \"=\"\n     WHITESPACE@22..23 \" \"\n-    REFERENCE_TYPE@23..34\n+    REF_TYPE@23..34\n       AMP@23..24 \"&\"\n       LIFETIME@24..31 \"\\'static\"\n       WHITESPACE@31..32 \" \"\n@@ -39,7 +39,7 @@ SOURCE_FILE@0..54\n     WHITESPACE@42..43 \" \"\n     EQ@43..44 \"=\"\n     WHITESPACE@44..45 \" \"\n-    REFERENCE_TYPE@45..52\n+    REF_TYPE@45..52\n       AMP@45..46 \"&\"\n       MUT_KW@46..49 \"mut\"\n       WHITESPACE@49..50 \" \""}, {"sha": "6baea6e3ca2ad912a6eb6d58491205c123082e34", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0045_param_list_opt_patterns.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0045_param_list_opt_patterns.rast", "raw_url": "https://github.com/rust-lang/rust/raw/bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0045_param_list_opt_patterns.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0045_param_list_opt_patterns.rast?ref=bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e", "patch": "@@ -21,7 +21,7 @@ SOURCE_FILE@0..35\n                   PARAM_LIST@15..29\n                     L_PAREN@15..16 \"(\"\n                     PARAM@16..28\n-                      REFERENCE_TYPE@16..28\n+                      REF_TYPE@16..28\n                         AMP@16..17 \"&\"\n                         MUT_KW@17..20 \"mut\"\n                         WHITESPACE@20..21 \" \""}, {"sha": "f319d5141d509acf84ec219762b79e2e71bc3aed", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0081_for_type.rast", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0081_for_type.rast", "raw_url": "https://github.com/rust-lang/rust/raw/bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0081_for_type.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0081_for_type.rast?ref=bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e", "patch": "@@ -15,7 +15,7 @@ SOURCE_FILE@0..121\n           LIFETIME@13..15 \"\\'a\"\n         R_ANGLE@15..16 \">\"\n       WHITESPACE@16..17 \" \"\n-      FN_POINTER_TYPE@17..27\n+      FN_PTR_TYPE@17..27\n         FN_KW@17..19 \"fn\"\n         PARAM_LIST@19..21\n           L_PAREN@19..20 \"(\"\n@@ -45,7 +45,7 @@ SOURCE_FILE@0..121\n           LIFETIME@42..44 \"\\'a\"\n         R_ANGLE@44..45 \">\"\n       WHITESPACE@45..46 \" \"\n-      FN_POINTER_TYPE@46..80\n+      FN_PTR_TYPE@46..80\n         UNSAFE_KW@46..52 \"unsafe\"\n         WHITESPACE@52..53 \" \"\n         ABI@53..63\n@@ -57,7 +57,7 @@ SOURCE_FILE@0..121\n         PARAM_LIST@66..74\n           L_PAREN@66..67 \"(\"\n           PARAM@67..73\n-            REFERENCE_TYPE@67..73\n+            REF_TYPE@67..73\n               AMP@67..68 \"&\"\n               LIFETIME@68..70 \"\\'a\"\n               WHITESPACE@70..71 \" \"\n@@ -98,7 +98,7 @@ SOURCE_FILE@0..121\n             GENERIC_ARG_LIST@110..119\n               L_ANGLE@110..111 \"<\"\n               TYPE_ARG@111..118\n-                REFERENCE_TYPE@111..118\n+                REF_TYPE@111..118\n                   AMP@111..112 \"&\"\n                   LIFETIME@112..114 \"\\'a\"\n                   WHITESPACE@114..115 \" \""}, {"sha": "f80326465fd148dfb455c23332c4cdef95453a4d", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0092_fn_pointer_type_with_ret.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0092_fn_pointer_type_with_ret.rast", "raw_url": "https://github.com/rust-lang/rust/raw/bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0092_fn_pointer_type_with_ret.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0092_fn_pointer_type_with_ret.rast?ref=bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e", "patch": "@@ -7,7 +7,7 @@ SOURCE_FILE@0..21\n     WHITESPACE@6..7 \" \"\n     EQ@7..8 \"=\"\n     WHITESPACE@8..9 \" \"\n-    FN_POINTER_TYPE@9..19\n+    FN_PTR_TYPE@9..19\n       FN_KW@9..11 \"fn\"\n       PARAM_LIST@11..13\n         L_PAREN@11..12 \"(\""}, {"sha": "570b952052687e05157fde5ebcd12a18b46ab2f4", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0122_generic_lifetime_type_attribute.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0122_generic_lifetime_type_attribute.rast", "raw_url": "https://github.com/rust-lang/rust/raw/bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0122_generic_lifetime_type_attribute.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0122_generic_lifetime_type_attribute.rast?ref=bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e", "patch": "@@ -47,7 +47,7 @@ SOURCE_FILE@0..64\n           UNDERSCORE@50..51 \"_\"\n         COLON@51..52 \":\"\n         WHITESPACE@52..53 \" \"\n-        REFERENCE_TYPE@53..58\n+        REF_TYPE@53..58\n           AMP@53..54 \"&\"\n           LIFETIME@54..56 \"\\'a\"\n           WHITESPACE@56..57 \" \""}, {"sha": "7cdec663473d0e76751c3265cdec7ef4cd95cea9", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0123_param_list_vararg.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0123_param_list_vararg.rast", "raw_url": "https://github.com/rust-lang/rust/raw/bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0123_param_list_vararg.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0123_param_list_vararg.rast?ref=bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e", "patch": "@@ -21,7 +21,7 @@ SOURCE_FILE@0..57\n                 IDENT@23..29 \"format\"\n             COLON@29..30 \":\"\n             WHITESPACE@30..31 \" \"\n-            POINTER_TYPE@31..40\n+            PTR_TYPE@31..40\n               STAR@31..32 \"*\"\n               CONST_KW@32..37 \"const\"\n               WHITESPACE@37..38 \" \""}, {"sha": "a36cc8dab363b3d119089b7675386f3e16fa53ef", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0146_as_precedence.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0146_as_precedence.rast", "raw_url": "https://github.com/rust-lang/rust/raw/bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0146_as_precedence.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0146_as_precedence.rast?ref=bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e", "patch": "@@ -27,7 +27,7 @@ SOURCE_FILE@0..43\n           WHITESPACE@25..26 \" \"\n           AS_KW@26..28 \"as\"\n           WHITESPACE@28..29 \" \"\n-          POINTER_TYPE@29..39\n+          PTR_TYPE@29..39\n             STAR@29..30 \"*\"\n             CONST_KW@30..35 \"const\"\n             WHITESPACE@35..36 \" \""}, {"sha": "f284aafcdfdc6997b2a206d4d07b19afd3142773", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0150_array_attrs.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0150_array_attrs.rast", "raw_url": "https://github.com/rust-lang/rust/raw/bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0150_array_attrs.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0150_array_attrs.rast?ref=bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e", "patch": "@@ -6,7 +6,7 @@ SOURCE_FILE@0..40\n       IDENT@6..7 \"A\"\n     COLON@7..8 \":\"\n     WHITESPACE@8..9 \" \"\n-    REFERENCE_TYPE@9..15\n+    REF_TYPE@9..15\n       AMP@9..10 \"&\"\n       SLICE_TYPE@10..15\n         L_BRACK@10..11 \"[\""}, {"sha": "e6aff7b3735618c6250445813d90d606a72ff588", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0154_fn_pointer_param_ident_path.rast", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0154_fn_pointer_param_ident_path.rast", "raw_url": "https://github.com/rust-lang/rust/raw/bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0154_fn_pointer_param_ident_path.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0154_fn_pointer_param_ident_path.rast?ref=bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e", "patch": "@@ -7,7 +7,7 @@ SOURCE_FILE@0..55\n     WHITESPACE@8..9 \" \"\n     EQ@9..10 \"=\"\n     WHITESPACE@10..11 \" \"\n-    FN_POINTER_TYPE@11..23\n+    FN_PTR_TYPE@11..23\n       FN_KW@11..13 \"fn\"\n       PARAM_LIST@13..23\n         L_PAREN@13..14 \"(\"\n@@ -33,7 +33,7 @@ SOURCE_FILE@0..55\n     WHITESPACE@33..34 \" \"\n     EQ@34..35 \"=\"\n     WHITESPACE@35..36 \" \"\n-    FN_POINTER_TYPE@36..53\n+    FN_PTR_TYPE@36..53\n       FN_KW@36..38 \"fn\"\n       PARAM_LIST@38..53\n         L_PAREN@38..39 \"(\""}, {"sha": "6abb4fe5ac427d81be4b381c074d71a969e7f09e", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0157_fn_pointer_unnamed_arg.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0157_fn_pointer_unnamed_arg.rast", "raw_url": "https://github.com/rust-lang/rust/raw/bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0157_fn_pointer_unnamed_arg.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0157_fn_pointer_unnamed_arg.rast?ref=bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e", "patch": "@@ -7,7 +7,7 @@ SOURCE_FILE@0..23\n     WHITESPACE@8..9 \" \"\n     EQ@9..10 \"=\"\n     WHITESPACE@10..11 \" \"\n-    FN_POINTER_TYPE@11..21\n+    FN_PTR_TYPE@11..21\n       FN_KW@11..13 \"fn\"\n       PARAM_LIST@13..21\n         L_PAREN@13..14 \"(\""}, {"sha": "8150d445f373d6a8cbdfab06be31cd3ff0b1a8e6", "filename": "crates/ra_syntax/test_data/parser/ok/0031_extern.rast", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0031_extern.rast", "raw_url": "https://github.com/rust-lang/rust/raw/bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0031_extern.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0031_extern.rast?ref=bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e", "patch": "@@ -99,7 +99,7 @@ SOURCE_FILE@0..1598\n                 IDENT@117..121 \"addr\"\n             COLON@121..122 \":\"\n             WHITESPACE@122..123 \" \"\n-            POINTER_TYPE@123..138\n+            PTR_TYPE@123..138\n               STAR@123..124 \"*\"\n               CONST_KW@124..129 \"const\"\n               WHITESPACE@129..130 \" \"\n@@ -164,7 +164,7 @@ SOURCE_FILE@0..1598\n                 IDENT@204..211 \"address\"\n             COLON@211..212 \":\"\n             WHITESPACE@212..213 \" \"\n-            POINTER_TYPE@213..228\n+            PTR_TYPE@213..228\n               STAR@213..214 \"*\"\n               CONST_KW@214..219 \"const\"\n               WHITESPACE@219..220 \" \"\n@@ -278,7 +278,7 @@ SOURCE_FILE@0..1598\n                 IDENT@382..389 \"address\"\n             COLON@389..390 \":\"\n             WHITESPACE@390..391 \" \"\n-            POINTER_TYPE@391..404\n+            PTR_TYPE@391..404\n               STAR@391..392 \"*\"\n               MUT_KW@392..395 \"mut\"\n               WHITESPACE@395..396 \" \"\n@@ -295,7 +295,7 @@ SOURCE_FILE@0..1598\n                 IDENT@429..440 \"address_len\"\n             COLON@440..441 \":\"\n             WHITESPACE@441..442 \" \"\n-            POINTER_TYPE@442..456\n+            PTR_TYPE@442..456\n               STAR@442..443 \"*\"\n               MUT_KW@443..446 \"mut\"\n               WHITESPACE@446..447 \" \"\n@@ -375,7 +375,7 @@ SOURCE_FILE@0..1598\n                 IDENT@609..615 \"optval\"\n             COLON@615..616 \":\"\n             WHITESPACE@616..617 \" \"\n-            POINTER_TYPE@617..630\n+            PTR_TYPE@617..630\n               STAR@617..618 \"*\"\n               MUT_KW@618..621 \"mut\"\n               WHITESPACE@621..622 \" \"\n@@ -393,7 +393,7 @@ SOURCE_FILE@0..1598\n                 IDENT@654..660 \"optlen\"\n             COLON@660..661 \":\"\n             WHITESPACE@661..662 \" \"\n-            POINTER_TYPE@662..678\n+            PTR_TYPE@662..678\n               STAR@662..663 \"*\"\n               MUT_KW@663..666 \"mut\"\n               WHITESPACE@666..667 \" \"\n@@ -474,7 +474,7 @@ SOURCE_FILE@0..1598\n                 IDENT@784..789 \"value\"\n             COLON@789..790 \":\"\n             WHITESPACE@790..791 \" \"\n-            POINTER_TYPE@791..806\n+            PTR_TYPE@791..806\n               STAR@791..792 \"*\"\n               CONST_KW@792..797 \"const\"\n               WHITESPACE@797..798 \" \"\n@@ -540,7 +540,7 @@ SOURCE_FILE@0..1598\n                 IDENT@905..912 \"address\"\n             COLON@912..913 \":\"\n             WHITESPACE@913..914 \" \"\n-            POINTER_TYPE@914..927\n+            PTR_TYPE@914..927\n               STAR@914..915 \"*\"\n               MUT_KW@915..918 \"mut\"\n               WHITESPACE@918..919 \" \"\n@@ -557,7 +557,7 @@ SOURCE_FILE@0..1598\n                 IDENT@952..963 \"address_len\"\n             COLON@963..964 \":\"\n             WHITESPACE@964..965 \" \"\n-            POINTER_TYPE@965..979\n+            PTR_TYPE@965..979\n               STAR@965..966 \"*\"\n               MUT_KW@966..969 \"mut\"\n               WHITESPACE@969..970 \" \"\n@@ -609,7 +609,7 @@ SOURCE_FILE@0..1598\n                 IDENT@1028..1031 \"buf\"\n             COLON@1031..1032 \":\"\n             WHITESPACE@1032..1033 \" \"\n-            POINTER_TYPE@1033..1048\n+            PTR_TYPE@1033..1048\n               STAR@1033..1034 \"*\"\n               CONST_KW@1034..1039 \"const\"\n               WHITESPACE@1039..1040 \" \"\n@@ -655,7 +655,7 @@ SOURCE_FILE@0..1598\n                 IDENT@1099..1103 \"addr\"\n             COLON@1103..1104 \":\"\n             WHITESPACE@1104..1105 \" \"\n-            POINTER_TYPE@1105..1120\n+            PTR_TYPE@1105..1120\n               STAR@1105..1106 \"*\"\n               CONST_KW@1106..1111 \"const\"\n               WHITESPACE@1111..1112 \" \"\n@@ -720,7 +720,7 @@ SOURCE_FILE@0..1598\n                 IDENT@1207..1210 \"buf\"\n             COLON@1210..1211 \":\"\n             WHITESPACE@1211..1212 \" \"\n-            POINTER_TYPE@1212..1227\n+            PTR_TYPE@1212..1227\n               STAR@1212..1213 \"*\"\n               CONST_KW@1213..1218 \"const\"\n               WHITESPACE@1218..1219 \" \"\n@@ -801,7 +801,7 @@ SOURCE_FILE@0..1598\n                 IDENT@1327..1330 \"buf\"\n             COLON@1330..1331 \":\"\n             WHITESPACE@1331..1332 \" \"\n-            POINTER_TYPE@1332..1345\n+            PTR_TYPE@1332..1345\n               STAR@1332..1333 \"*\"\n               MUT_KW@1333..1336 \"mut\"\n               WHITESPACE@1336..1337 \" \"\n@@ -847,7 +847,7 @@ SOURCE_FILE@0..1598\n                 IDENT@1398..1402 \"addr\"\n             COLON@1402..1403 \":\"\n             WHITESPACE@1403..1404 \" \"\n-            POINTER_TYPE@1404..1419\n+            PTR_TYPE@1404..1419\n               STAR@1404..1405 \"*\"\n               MUT_KW@1405..1408 \"mut\"\n               WHITESPACE@1408..1409 \" \"\n@@ -865,7 +865,7 @@ SOURCE_FILE@0..1598\n                 IDENT@1441..1448 \"addrlen\"\n             COLON@1448..1449 \":\"\n             WHITESPACE@1449..1450 \" \"\n-            POINTER_TYPE@1450..1466\n+            PTR_TYPE@1450..1466\n               STAR@1450..1451 \"*\"\n               MUT_KW@1451..1454 \"mut\"\n               WHITESPACE@1454..1455 \" \"\n@@ -918,7 +918,7 @@ SOURCE_FILE@0..1598\n                 IDENT@1515..1518 \"buf\"\n             COLON@1518..1519 \":\"\n             WHITESPACE@1519..1520 \" \"\n-            POINTER_TYPE@1520..1533\n+            PTR_TYPE@1520..1533\n               STAR@1520..1521 \"*\"\n               MUT_KW@1521..1524 \"mut\"\n               WHITESPACE@1524..1525 \" \""}, {"sha": "7c61b5006de12e9591065da5eb34bbaf974d0817", "filename": "crates/ra_syntax/test_data/parser/ok/0035_weird_exprs.rast", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0035_weird_exprs.rast", "raw_url": "https://github.com/rust-lang/rust/raw/bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0035_weird_exprs.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0035_weird_exprs.rast?ref=bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e", "patch": "@@ -242,7 +242,7 @@ SOURCE_FILE@0..3813\n                 IDENT@649..650 \"x\"\n             COLON@650..651 \":\"\n             WHITESPACE@651..652 \" \"\n-            REFERENCE_TYPE@652..663\n+            REF_TYPE@652..663\n               AMP@652..653 \"&\"\n               PATH_TYPE@653..663\n                 PATH@653..663\n@@ -1579,7 +1579,7 @@ SOURCE_FILE@0..3813\n               IDENT@2873..2878 \"union\"\n             COLON@2878..2879 \":\"\n             WHITESPACE@2879..2880 \" \"\n-            REFERENCE_TYPE@2880..2901\n+            REF_TYPE@2880..2901\n               AMP@2880..2881 \"&\"\n               LIFETIME@2881..2887 \"\\'union\"\n               WHITESPACE@2887..2888 \" \""}, {"sha": "d4f05f279240043e20aaccee9fbc9d3b98db6edc", "filename": "crates/ra_syntax/test_data/parser/ok/0051_parameter_attrs.rast", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0051_parameter_attrs.rast", "raw_url": "https://github.com/rust-lang/rust/raw/bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0051_parameter_attrs.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0051_parameter_attrs.rast?ref=bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e", "patch": "@@ -96,7 +96,7 @@ SOURCE_FILE@0..519\n                 IDENT@87..93 \"format\"\n             COLON@93..94 \":\"\n             WHITESPACE@94..95 \" \"\n-            POINTER_TYPE@95..104\n+            PTR_TYPE@95..104\n               STAR@95..96 \"*\"\n               CONST_KW@96..101 \"const\"\n               WHITESPACE@101..102 \" \"\n@@ -163,7 +163,7 @@ SOURCE_FILE@0..519\n                       R_BRACK@152..153 \"]\"\n                     WHITESPACE@153..154 \" \"\n                     PARAM@154..166\n-                      REFERENCE_TYPE@154..166\n+                      REF_TYPE@154..166\n                         AMP@154..155 \"&\"\n                         MUT_KW@155..158 \"mut\"\n                         WHITESPACE@158..159 \" \""}, {"sha": "f25c9ac36ff8d630d7d2cfaf813fe029956501bf", "filename": "crates/ra_syntax/test_data/parser/ok/0054_qual_path_in_type_arg.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0054_qual_path_in_type_arg.rast", "raw_url": "https://github.com/rust-lang/rust/raw/bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0054_qual_path_in_type_arg.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0054_qual_path_in_type_arg.rast?ref=bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e", "patch": "@@ -102,7 +102,7 @@ SOURCE_FILE@0..88\n                     PARAM_LIST@76..83\n                       L_PAREN@76..77 \"(\"\n                       PARAM@77..82\n-                        REFERENCE_TYPE@77..82\n+                        REF_TYPE@77..82\n                           AMP@77..78 \"&\"\n                           PATH_TYPE@78..82\n                             PATH@78..82"}, {"sha": "8eda5997627aee387281546383cc8f19b5fb53f4", "filename": "crates/ra_syntax/test_data/parser/ok/0063_trait_fn_patterns.rast", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0063_trait_fn_patterns.rast", "raw_url": "https://github.com/rust-lang/rust/raw/bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0063_trait_fn_patterns.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0063_trait_fn_patterns.rast?ref=bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e", "patch": "@@ -140,9 +140,9 @@ SOURCE_FILE@0..170\n                     IDENT@121..122 \"a\"\n             COLON@122..123 \":\"\n             WHITESPACE@123..124 \" \"\n-            REFERENCE_TYPE@124..131\n+            REF_TYPE@124..131\n               AMP@124..125 \"&\"\n-              REFERENCE_TYPE@125..131\n+              REF_TYPE@125..131\n                 AMP@125..126 \"&\"\n                 PATH_TYPE@126..131\n                   PATH@126..131"}, {"sha": "4009b3ff8d24bced2e8a1606aa1ce0f48674a73b", "filename": "crates/ra_syntax/test_data/parser/ok/0063_variadic_fun.rast", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0063_variadic_fun.rast", "raw_url": "https://github.com/rust-lang/rust/raw/bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0063_variadic_fun.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0063_variadic_fun.rast?ref=bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e", "patch": "@@ -20,7 +20,7 @@ SOURCE_FILE@0..126\n               UNDERSCORE@22..23 \"_\"\n             COLON@23..24 \":\"\n             WHITESPACE@24..25 \" \"\n-            POINTER_TYPE@25..32\n+            PTR_TYPE@25..32\n               STAR@25..26 \"*\"\n               MUT_KW@26..29 \"mut\"\n               WHITESPACE@29..30 \" \"\n@@ -49,7 +49,7 @@ SOURCE_FILE@0..126\n               UNDERSCORE@50..51 \"_\"\n             COLON@51..52 \":\"\n             WHITESPACE@52..53 \" \"\n-            POINTER_TYPE@53..60\n+            PTR_TYPE@53..60\n               STAR@53..54 \"*\"\n               MUT_KW@54..57 \"mut\"\n               WHITESPACE@57..58 \" \"\n@@ -81,7 +81,7 @@ SOURCE_FILE@0..126\n               UNDERSCORE@80..81 \"_\"\n             COLON@81..82 \":\"\n             WHITESPACE@82..83 \" \"\n-            POINTER_TYPE@83..90\n+            PTR_TYPE@83..90\n               STAR@83..84 \"*\"\n               MUT_KW@84..87 \"mut\"\n               WHITESPACE@87..88 \" \""}, {"sha": "a3c6ed82e152829331a88747e530a235ac2487e6", "filename": "crates/ra_syntax/test_data/parser/ok/0064_impl_fn_params.rast", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0064_impl_fn_params.rast", "raw_url": "https://github.com/rust-lang/rust/raw/bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0064_impl_fn_params.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0064_impl_fn_params.rast?ref=bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e", "patch": "@@ -143,9 +143,9 @@ SOURCE_FILE@0..137\n                     IDENT@120..121 \"a\"\n             COLON@121..122 \":\"\n             WHITESPACE@122..123 \" \"\n-            REFERENCE_TYPE@123..130\n+            REF_TYPE@123..130\n               AMP@123..124 \"&\"\n-              REFERENCE_TYPE@124..130\n+              REF_TYPE@124..130\n                 AMP@124..125 \"&\"\n                 PATH_TYPE@125..130\n                   PATH@125..130"}, {"sha": "8f8639a375bca28f544b39289b2026f793577551", "filename": "crates/ra_syntax/test_data/parser/ok/0067_where_for_pred.rast", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0067_where_for_pred.rast", "raw_url": "https://github.com/rust-lang/rust/raw/bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0067_where_for_pred.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0067_where_for_pred.rast?ref=bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e", "patch": "@@ -42,7 +42,7 @@ SOURCE_FILE@0..374\n                   PARAM_LIST@41..50\n                     L_PAREN@41..42 \"(\"\n                     PARAM@42..49\n-                      REFERENCE_TYPE@42..49\n+                      REF_TYPE@42..49\n                         AMP@42..43 \"&\"\n                         LIFETIME@43..45 \"\\'a\"\n                         WHITESPACE@45..46 \" \"\n@@ -85,7 +85,7 @@ SOURCE_FILE@0..374\n             LIFETIME@86..88 \"\\'a\"\n           R_ANGLE@88..89 \">\"\n         WHITESPACE@89..90 \" \"\n-        REFERENCE_TYPE@90..95\n+        REF_TYPE@90..95\n           AMP@90..91 \"&\"\n           LIFETIME@91..93 \"\\'a\"\n           WHITESPACE@93..94 \" \"\n@@ -138,7 +138,7 @@ SOURCE_FILE@0..374\n         WHITESPACE@144..145 \" \"\n         PAREN_TYPE@145..152\n           L_PAREN@145..146 \"(\"\n-          REFERENCE_TYPE@146..151\n+          REF_TYPE@146..151\n             AMP@146..147 \"&\"\n             LIFETIME@147..149 \"\\'a\"\n             WHITESPACE@149..150 \" \"\n@@ -160,7 +160,7 @@ SOURCE_FILE@0..374\n                   PARAM_LIST@156..165\n                     L_PAREN@156..157 \"(\"\n                     PARAM@157..164\n-                      REFERENCE_TYPE@157..164\n+                      REF_TYPE@157..164\n                         AMP@157..158 \"&\"\n                         LIFETIME@158..160 \"\\'a\"\n                         WHITESPACE@160..161 \" \"\n@@ -205,7 +205,7 @@ SOURCE_FILE@0..374\n         WHITESPACE@206..207 \" \"\n         SLICE_TYPE@207..214\n           L_BRACK@207..208 \"[\"\n-          REFERENCE_TYPE@208..213\n+          REF_TYPE@208..213\n             AMP@208..209 \"&\"\n             LIFETIME@209..211 \"\\'a\"\n             WHITESPACE@211..212 \" \"\n@@ -250,7 +250,7 @@ SOURCE_FILE@0..374\n             IDENT@240..242 \"_t\"\n         COLON@242..243 \":\"\n         WHITESPACE@243..244 \" \"\n-        REFERENCE_TYPE@244..246\n+        REF_TYPE@244..246\n           AMP@244..245 \"&\"\n           PATH_TYPE@245..246\n             PATH@245..246\n@@ -275,7 +275,7 @@ SOURCE_FILE@0..374\n             PATH@266..280\n               PATH_SEGMENT@266..280\n                 L_ANGLE@266..267 \"<\"\n-                REFERENCE_TYPE@267..272\n+                REF_TYPE@267..272\n                   AMP@267..268 \"&\"\n                   LIFETIME@268..270 \"\\'a\"\n                   WHITESPACE@270..271 \" \"\n@@ -347,12 +347,12 @@ SOURCE_FILE@0..374\n               LIFETIME@342..344 \"\\'b\"\n             R_ANGLE@344..345 \">\"\n           WHITESPACE@345..346 \" \"\n-          FN_POINTER_TYPE@346..362\n+          FN_PTR_TYPE@346..362\n             FN_KW@346..348 \"fn\"\n             PARAM_LIST@348..362\n               L_PAREN@348..349 \"(\"\n               PARAM@349..354\n-                REFERENCE_TYPE@349..354\n+                REF_TYPE@349..354\n                   AMP@349..350 \"&\"\n                   LIFETIME@350..352 \"\\'a\"\n                   WHITESPACE@352..353 \" \"\n@@ -364,7 +364,7 @@ SOURCE_FILE@0..374\n               COMMA@354..355 \",\"\n               WHITESPACE@355..356 \" \"\n               PARAM@356..361\n-                REFERENCE_TYPE@356..361\n+                REF_TYPE@356..361\n                   AMP@356..357 \"&\"\n                   LIFETIME@357..359 \"\\'b\"\n                   WHITESPACE@359..360 \" \""}, {"sha": "1a1140b04e31dc0106d81ce57133bf6cbe6e647e", "filename": "xtask/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e/xtask%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e/xtask%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2FCargo.toml?ref=bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e", "patch": "@@ -15,6 +15,6 @@ flate2 = \"1.0\"\n pico-args = \"0.3.1\"\n proc-macro2 = \"1.0.8\"\n quote = \"1.0.2\"\n-ungrammar = \"0.1.0\"\n+ungrammar = \"1.1.1\"\n walkdir = \"2.3.1\"\n write-json =  \"0.1.0\""}, {"sha": "adc191254d823af63ff21c72740defadb472adc1", "filename": "xtask/src/ast_src.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e/xtask%2Fsrc%2Fast_src.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e/xtask%2Fsrc%2Fast_src.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Fast_src.rs?ref=bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e", "patch": "@@ -113,12 +113,12 @@ pub(crate) const KINDS_SRC: KindsSrc = KindsSrc {\n         \"TUPLE_TYPE\",\n         \"NEVER_TYPE\",\n         \"PATH_TYPE\",\n-        \"POINTER_TYPE\",\n+        \"PTR_TYPE\",\n         \"ARRAY_TYPE\",\n         \"SLICE_TYPE\",\n-        \"REFERENCE_TYPE\",\n+        \"REF_TYPE\",\n         \"INFER_TYPE\",\n-        \"FN_POINTER_TYPE\",\n+        \"FN_PTR_TYPE\",\n         \"FOR_TYPE\",\n         \"IMPL_TRAIT_TYPE\",\n         \"DYN_TRAIT_TYPE\","}, {"sha": "cafad8070d28f17e1adb5c6594e7e1ab0a7feeb4", "filename": "xtask/src/codegen/gen_syntax.rs", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e/xtask%2Fsrc%2Fcodegen%2Fgen_syntax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e/xtask%2Fsrc%2Fcodegen%2Fgen_syntax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Fcodegen%2Fgen_syntax.rs?ref=bff8dd094958f1abe2fcfe8fe9f15dc7a7e6b53e", "patch": "@@ -10,7 +10,7 @@ use std::{\n \n use proc_macro2::{Punct, Spacing};\n use quote::{format_ident, quote};\n-use ungrammar::{Grammar, Rule};\n+use ungrammar::{rust_grammar, Grammar, Rule};\n \n use crate::{\n     ast_src::{AstEnumSrc, AstNodeSrc, AstSrc, Cardinality, Field, KindsSrc, KINDS_SRC},\n@@ -19,9 +19,7 @@ use crate::{\n };\n \n pub fn generate_syntax(mode: Mode) -> Result<()> {\n-    let grammar = include_str!(\"rust.ungram\")\n-        .parse::<Grammar>()\n-        .unwrap_or_else(|err| panic!(\"\\n    \\x1b[91merror\\x1b[0m: {}\\n\", err));\n+    let grammar = rust_grammar();\n     let ast = lower(&grammar);\n \n     let syntax_kinds_file = project_root().join(codegen::SYNTAX_KINDS);\n@@ -538,6 +536,7 @@ fn lower_enum(grammar: &Grammar, rule: &Rule) -> Option<Vec<String>> {\n     for alternative in alternatives {\n         match alternative {\n             Rule::Node(it) => variants.push(grammar[*it].name.clone()),\n+            Rule::Token(it) if grammar[*it].name == \";\" => (),\n             _ => return None,\n         }\n     }\n@@ -591,8 +590,8 @@ fn lower_rule(acc: &mut Vec<Field>, grammar: &Grammar, label: Option<&String>, r\n                     | \"index\"\n                     | \"base\"\n                     | \"value\"\n-                    | \"target_type\"\n-                    | \"target_trait\"\n+                    | \"trait\"\n+                    | \"self_ty\"\n             );\n             if manually_implemented {\n                 return;"}]}