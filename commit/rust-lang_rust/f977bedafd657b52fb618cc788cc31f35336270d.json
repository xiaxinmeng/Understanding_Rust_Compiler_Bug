{"sha": "f977bedafd657b52fb618cc788cc31f35336270d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY5NzdiZWRhZmQ2NTdiNTJmYjYxOGNjNzg4Y2MzMWYzNTMzNjI3MGQ=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-11-19T02:25:25Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-11-19T02:28:10Z"}, "message": "libsyntax: Remove `~fn()` from the language", "tree": {"sha": "33456b9dc3f2b7a6f5cc07aecf30aa9951242ac3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/33456b9dc3f2b7a6f5cc07aecf30aa9951242ac3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f977bedafd657b52fb618cc788cc31f35336270d", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f977bedafd657b52fb618cc788cc31f35336270d", "html_url": "https://github.com/rust-lang/rust/commit/f977bedafd657b52fb618cc788cc31f35336270d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f977bedafd657b52fb618cc788cc31f35336270d/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ba739b2135f794dd2f1cff3c82cf9282cc1d50cb", "url": "https://api.github.com/repos/rust-lang/rust/commits/ba739b2135f794dd2f1cff3c82cf9282cc1d50cb", "html_url": "https://github.com/rust-lang/rust/commit/ba739b2135f794dd2f1cff3c82cf9282cc1d50cb"}], "stats": {"total": 32, "additions": 13, "deletions": 19}, "files": [{"sha": "189cc8e827c83f3226fc2faf5e8036a499d17432", "filename": "src/libsyntax/parse/obsolete.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f977bedafd657b52fb618cc788cc31f35336270d/src%2Flibsyntax%2Fparse%2Fobsolete.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f977bedafd657b52fb618cc788cc31f35336270d/src%2Flibsyntax%2Fparse%2Fobsolete.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fobsolete.rs?ref=f977bedafd657b52fb618cc788cc31f35336270d", "patch": "@@ -41,7 +41,8 @@ pub enum ObsoleteSyntax {\n     ObsoleteLoopAsContinue,\n     ObsoleteEnumWildcard,\n     ObsoleteStructWildcard,\n-    ObsoleteVecDotDotWildcard\n+    ObsoleteVecDotDotWildcard,\n+    ObsoleteBoxedClosure,\n }\n \n impl to_bytes::IterBytes for ObsoleteSyntax {\n@@ -128,6 +129,11 @@ impl ParserObsoleteMethods for Parser {\n                 \"vec slice wildcard\",\n                 \"use `..` instead of `.._` for matching slices\"\n             ),\n+            ObsoleteBoxedClosure => (\n+                \"managed or owned closure\",\n+                \"managed closures have been removed and owned closures are \\\n+                 now written `proc()`\"\n+            ),\n         };\n \n         self.report(sp, kind, kind_str, desc);"}, {"sha": "2ea6878f4a3701219cc9a40d684e30ec6557ff34", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f977bedafd657b52fb618cc788cc31f35336270d/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f977bedafd657b52fb618cc788cc31f35336270d/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=f977bedafd657b52fb618cc788cc31f35336270d", "patch": "@@ -1273,15 +1273,17 @@ impl Parser {\n     pub fn parse_box_or_uniq_pointee(&self,\n                                      sigil: ast::Sigil,\n                                      ctor: &fn(v: mt) -> ty_) -> ty_ {\n-        // ~'foo fn() or ~fn() are parsed directly as fn types:\n+        // ~'foo fn() or ~fn() are parsed directly as obsolete fn types:\n         match *self.token {\n             token::LIFETIME(*) => {\n                 let lifetime = self.parse_lifetime();\n+                self.obsolete(*self.last_span, ObsoleteBoxedClosure);\n                 return self.parse_ty_closure(Some(sigil), Some(lifetime));\n             }\n \n-            token::IDENT(*) => {\n+            token::IDENT(*) if sigil == ast::BorrowedSigil => {\n                 if self.token_is_old_style_closure_keyword() {\n+                    self.obsolete(*self.last_span, ObsoleteBoxedClosure);\n                     return self.parse_ty_closure(Some(sigil), None);\n                 }\n             }"}, {"sha": "10d3e9ed3f10cbfffa8da6fdd4a0a9dddfa41096", "filename": "src/test/compile-fail/issue-8615.rs", "status": "removed", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/ba739b2135f794dd2f1cff3c82cf9282cc1d50cb/src%2Ftest%2Fcompile-fail%2Fissue-8615.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba739b2135f794dd2f1cff3c82cf9282cc1d50cb/src%2Ftest%2Fcompile-fail%2Fissue-8615.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-8615.rs?ref=ba739b2135f794dd2f1cff3c82cf9282cc1d50cb", "patch": "@@ -1,14 +0,0 @@\n-// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-fn main() {\n-    let _: @'static whatever fn(); //~ ERROR expected `fn`, found `whatever`\n-    let _: @'static fn();\n-}"}, {"sha": "81e140567e4f47fdfc77480f523bf704656fe69f", "filename": "src/test/compile-fail/once-cant-call-twice-on-heap.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f977bedafd657b52fb618cc788cc31f35336270d/src%2Ftest%2Fcompile-fail%2Fonce-cant-call-twice-on-heap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f977bedafd657b52fb618cc788cc31f35336270d/src%2Ftest%2Fcompile-fail%2Fonce-cant-call-twice-on-heap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fonce-cant-call-twice-on-heap.rs?ref=f977bedafd657b52fb618cc788cc31f35336270d", "patch": "@@ -16,7 +16,7 @@ extern mod extra;\n use extra::arc;\n use std::util;\n \n-fn foo(blk: ~once fn()) {\n+fn foo(blk: proc()) {\n     blk();\n     blk(); //~ ERROR use of moved value\n }"}, {"sha": "bf0af534597e759676aba9b71415f0efd39277be", "filename": "src/test/run-pass/once-move-out-on-heap.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f977bedafd657b52fb618cc788cc31f35336270d/src%2Ftest%2Frun-pass%2Fonce-move-out-on-heap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f977bedafd657b52fb618cc788cc31f35336270d/src%2Ftest%2Frun-pass%2Fonce-move-out-on-heap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fonce-move-out-on-heap.rs?ref=f977bedafd657b52fb618cc788cc31f35336270d", "patch": "@@ -17,7 +17,7 @@ extern mod extra;\n use extra::arc;\n use std::util;\n \n-fn foo(blk: ~once fn()) {\n+fn foo(blk: proc()) {\n     blk();\n }\n "}]}