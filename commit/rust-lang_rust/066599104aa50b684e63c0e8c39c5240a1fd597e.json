{"sha": "066599104aa50b684e63c0e8c39c5240a1fd597e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA2NjU5OTEwNGFhNTBiNjg0ZTYzYzBlOGMzOWM1MjQwYTFmZDU5N2U=", "commit": {"author": {"name": "Michael Sullivan", "email": "sully@msully.net", "date": "2011-06-13T23:04:48Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-06-16T18:47:54Z"}, "message": "Parse swap.", "tree": {"sha": "ed9f39126548120a2a4a764e7d569b30f75510de", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ed9f39126548120a2a4a764e7d569b30f75510de"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/066599104aa50b684e63c0e8c39c5240a1fd597e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/066599104aa50b684e63c0e8c39c5240a1fd597e", "html_url": "https://github.com/rust-lang/rust/commit/066599104aa50b684e63c0e8c39c5240a1fd597e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/066599104aa50b684e63c0e8c39c5240a1fd597e/comments", "author": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e8d2d27a8866e9d0790905aee190828601d8784e", "url": "https://api.github.com/repos/rust-lang/rust/commits/e8d2d27a8866e9d0790905aee190828601d8784e", "html_url": "https://github.com/rust-lang/rust/commit/e8d2d27a8866e9d0790905aee190828601d8784e"}], "stats": {"total": 20, "additions": 15, "deletions": 5}, "files": [{"sha": "c05179ba55099094abd744189666a9c785eb07e1", "filename": "src/comp/front/ast.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/066599104aa50b684e63c0e8c39c5240a1fd597e/src%2Fcomp%2Ffront%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/066599104aa50b684e63c0e8c39c5240a1fd597e/src%2Fcomp%2Ffront%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Ffront%2Fast.rs?ref=066599104aa50b684e63c0e8c39c5240a1fd597e", "patch": "@@ -245,11 +245,13 @@ tag expr_ {\n     expr_alt(@expr, vec[arm], ann);\n     expr_fn(_fn, ann);\n     expr_block(block, ann);\n-    expr_move(@expr, /* TODO: @expr|is_lval */@expr, ann);\n-    expr_assign(@expr, /* TODO: @expr|is_lval */@expr, ann);\n-    expr_assign_op(binop, @expr, /* TODO: @expr|is_lval */@expr, ann);\n-    expr_send(@expr, /* TODO: @expr|is_lval */@expr, ann);\n-    expr_recv(@expr, /* TODO: @expr|is_lval */@expr, ann);\n+    expr_move(@expr /* TODO: @expr|is_lval */, @expr, ann);\n+    expr_assign(@expr /* TODO: @expr|is_lval */, @expr, ann);\n+    expr_swap(@expr /* TODO: @expr|is_lval */,\n+              @expr /* TODO: @expr|is_lval */, ann);\n+    expr_assign_op(binop, @expr /* TODO: @expr|is_lval */, @expr, ann);\n+    expr_send(@expr /* TODO: @expr|is_lval */, @expr, ann);\n+    expr_recv(@expr /* TODO: @expr|is_lval */, @expr, ann);\n     expr_field(@expr, ident, ann);\n     expr_index(@expr, @expr, ann);\n     expr_path(path, ann);"}, {"sha": "be7e229b4e66327f4d1e378f2e8f5f3248cb40fa", "filename": "src/comp/front/parser.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/066599104aa50b684e63c0e8c39c5240a1fd597e/src%2Fcomp%2Ffront%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/066599104aa50b684e63c0e8c39c5240a1fd597e/src%2Fcomp%2Ffront%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Ffront%2Fparser.rs?ref=066599104aa50b684e63c0e8c39c5240a1fd597e", "patch": "@@ -1176,6 +1176,12 @@ fn parse_assign_expr(&parser p) -> @ast::expr {\n             ret @spanned(lo, rhs.span.hi,\n                          ast::expr_recv(rhs, lhs, p.get_ann()));\n         }\n+        case (token::DARROW) {\n+            p.bump();\n+            auto rhs = parse_expr(p);\n+            ret @spanned(lo, rhs.span.hi,\n+                         ast::expr_swap(lhs, rhs, p.get_ann()));\n+        }\n         case (_) {/* fall through */ }\n     }\n     ret lhs;\n@@ -1536,7 +1542,9 @@ fn stmt_ends_with_semi(&ast::stmt stmt) -> bool {\n                 case (ast::expr_alt(_, _, _)) { ret false; }\n                 case (ast::expr_fn(_, _)) { ret false; }\n                 case (ast::expr_block(_, _)) { ret false; }\n+                case (ast::expr_move(_, _, _)) { ret true; }\n                 case (ast::expr_assign(_, _, _)) { ret true; }\n+                case (ast::expr_swap(_, _, _)) { ret true; }\n                 case (ast::expr_assign_op(_, _, _, _)) { ret true; }\n                 case (ast::expr_send(_, _, _)) { ret true; }\n                 case (ast::expr_recv(_, _, _)) { ret true; }"}]}