{"sha": "e46a8df8335509af3651644ffe1f4a0bbdea1b57", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU0NmE4ZGY4MzM1NTA5YWYzNjUxNjQ0ZmZlMWY0YTBiYmRlYTFiNTc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-02-27T06:28:08Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-02-27T06:28:08Z"}, "message": "Auto merge of #3827 - phansch:rustup, r=Manishearth\n\nRustup rust-lang/rust#58321\n\nFixes the build after https://github.com/rust-lang/rust/issues/58321", "tree": {"sha": "4395c038f12b1a18560a69b63b109d951fb3b25a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4395c038f12b1a18560a69b63b109d951fb3b25a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e46a8df8335509af3651644ffe1f4a0bbdea1b57", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e46a8df8335509af3651644ffe1f4a0bbdea1b57", "html_url": "https://github.com/rust-lang/rust/commit/e46a8df8335509af3651644ffe1f4a0bbdea1b57", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e46a8df8335509af3651644ffe1f4a0bbdea1b57/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6e8931c5f5d72a324d06ea36216c0156fbefaac1", "url": "https://api.github.com/repos/rust-lang/rust/commits/6e8931c5f5d72a324d06ea36216c0156fbefaac1", "html_url": "https://github.com/rust-lang/rust/commit/6e8931c5f5d72a324d06ea36216c0156fbefaac1"}, {"sha": "982a99d2c42ad2f53408537f3020a8862fc99688", "url": "https://api.github.com/repos/rust-lang/rust/commits/982a99d2c42ad2f53408537f3020a8862fc99688", "html_url": "https://github.com/rust-lang/rust/commit/982a99d2c42ad2f53408537f3020a8862fc99688"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "306395ed5becd22446e3133c58d1d9d81f367dc0", "filename": "clippy_lints/src/consts.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e46a8df8335509af3651644ffe1f4a0bbdea1b57/clippy_lints%2Fsrc%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e46a8df8335509af3651644ffe1f4a0bbdea1b57/clippy_lints%2Fsrc%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fconsts.rs?ref=e46a8df8335509af3651644ffe1f4a0bbdea1b57", "patch": "@@ -5,7 +5,7 @@ use if_chain::if_chain;\n use rustc::hir::def::Def;\n use rustc::hir::*;\n use rustc::lint::LateContext;\n-use rustc::ty::subst::{Subst, Substs};\n+use rustc::ty::subst::{Subst, SubstsRef};\n use rustc::ty::{self, Instance, Ty, TyCtxt};\n use rustc::{bug, span_bug};\n use rustc_data_structures::sync::Lrc;\n@@ -209,7 +209,7 @@ pub struct ConstEvalLateContext<'a, 'tcx: 'a> {\n     tables: &'a ty::TypeckTables<'tcx>,\n     param_env: ty::ParamEnv<'tcx>,\n     needed_resolution: bool,\n-    substs: &'tcx Substs<'tcx>,\n+    substs: SubstsRef<'tcx>,\n }\n \n impl<'c, 'cc> ConstEvalLateContext<'c, 'cc> {"}, {"sha": "8610bffa6ac41367273cf93b22bbbecb3ad51e6e", "filename": "clippy_lints/src/enum_clike.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e46a8df8335509af3651644ffe1f4a0bbdea1b57/clippy_lints%2Fsrc%2Fenum_clike.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e46a8df8335509af3651644ffe1f4a0bbdea1b57/clippy_lints%2Fsrc%2Fenum_clike.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fenum_clike.rs?ref=e46a8df8335509af3651644ffe1f4a0bbdea1b57", "patch": "@@ -7,7 +7,7 @@ use rustc::hir::*;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::mir::interpret::GlobalId;\n use rustc::ty;\n-use rustc::ty::subst::Substs;\n+use rustc::ty::subst::InternalSubsts;\n use rustc::ty::util::IntTypeExt;\n use rustc::{declare_tool_lint, lint_array};\n use syntax::ast::{IntTy, UintTy};\n@@ -58,7 +58,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for UnportableVariant {\n                 if let Some(ref anon_const) = variant.disr_expr {\n                     let param_env = ty::ParamEnv::empty();\n                     let def_id = cx.tcx.hir().body_owner_def_id(anon_const.body);\n-                    let substs = Substs::identity_for_item(cx.tcx.global_tcx(), def_id);\n+                    let substs = InternalSubsts::identity_for_item(cx.tcx.global_tcx(), def_id);\n                     let instance = ty::Instance::new(def_id, substs);\n                     let c_id = GlobalId {\n                         instance,"}]}