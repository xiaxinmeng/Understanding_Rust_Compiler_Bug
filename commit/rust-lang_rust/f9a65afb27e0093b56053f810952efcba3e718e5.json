{"sha": "f9a65afb27e0093b56053f810952efcba3e718e5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY5YTY1YWZiMjdlMDA5M2I1NjA1M2Y4MTA5NTJlZmNiYTNlNzE4ZTU=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2020-09-25T12:04:10Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2020-10-03T12:16:24Z"}, "message": "Make invalid_html_tags lint only run on nightly and being allowed by default", "tree": {"sha": "a908bfa0397418647873cf690411d992987e484c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a908bfa0397418647873cf690411d992987e484c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f9a65afb27e0093b56053f810952efcba3e718e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f9a65afb27e0093b56053f810952efcba3e718e5", "html_url": "https://github.com/rust-lang/rust/commit/f9a65afb27e0093b56053f810952efcba3e718e5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f9a65afb27e0093b56053f810952efcba3e718e5/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6271a0a46dedd5eaf3eb26afb6ae536939496cd7", "url": "https://api.github.com/repos/rust-lang/rust/commits/6271a0a46dedd5eaf3eb26afb6ae536939496cd7", "html_url": "https://github.com/rust-lang/rust/commit/6271a0a46dedd5eaf3eb26afb6ae536939496cd7"}], "stats": {"total": 19, "additions": 12, "deletions": 7}, "files": [{"sha": "164df22c5c3d17f76275cee2ed312fa8f20d7f84", "filename": "compiler/rustc_session/src/lint/builtin.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f9a65afb27e0093b56053f810952efcba3e718e5/compiler%2Frustc_session%2Fsrc%2Flint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9a65afb27e0093b56053f810952efcba3e718e5/compiler%2Frustc_session%2Fsrc%2Flint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Flint%2Fbuiltin.rs?ref=f9a65afb27e0093b56053f810952efcba3e718e5", "patch": "@@ -1887,7 +1887,7 @@ declare_lint! {\n     ///\n     /// [rustdoc book]: ../../../rustdoc/lints.html#invalid_html_tags\n     pub INVALID_HTML_TAGS,\n-    Warn,\n+    Allow,\n     \"detects invalid HTML tags in doc comments\"\n }\n "}, {"sha": "d8c0bab22594305c3ce49ec480396c7b64ce9e28", "filename": "src/doc/rustdoc/src/lints.md", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f9a65afb27e0093b56053f810952efcba3e718e5/src%2Fdoc%2Frustdoc%2Fsrc%2Flints.md", "raw_url": "https://github.com/rust-lang/rust/raw/f9a65afb27e0093b56053f810952efcba3e718e5/src%2Fdoc%2Frustdoc%2Fsrc%2Flints.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustdoc%2Fsrc%2Flints.md?ref=f9a65afb27e0093b56053f810952efcba3e718e5", "patch": "@@ -253,10 +253,12 @@ typo mistakes for some common attributes.\n \n ## invalid_html_tags\n \n-This lint **warns by default**. It detects unclosed or invalid HTML tags.\n-For example:\n+This lint is **allowed by default** and is **nightly-only**. It detects unclosed\n+or invalid HTML tags. For example:\n \n ```rust\n+#![warn(invalid_html_tags)]\n+\n /// <h1>\n /// </script>\n pub fn foo() {}"}, {"sha": "1b48ce622b1f2511f639fb5841d1fc4e8cb56a65", "filename": "src/librustdoc/passes/html_tags.rs", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/f9a65afb27e0093b56053f810952efcba3e718e5/src%2Flibrustdoc%2Fpasses%2Fhtml_tags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9a65afb27e0093b56053f810952efcba3e718e5/src%2Flibrustdoc%2Fpasses%2Fhtml_tags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fhtml_tags.rs?ref=f9a65afb27e0093b56053f810952efcba3e718e5", "patch": "@@ -5,9 +5,8 @@ use crate::fold::DocFolder;\n use crate::html::markdown::opts;\n use core::ops::Range;\n use pulldown_cmark::{Event, Parser};\n-// use rustc_hir::hir_id::HirId;\n+use rustc_feature::UnstableFeatures;\n use rustc_session::lint;\n-// use rustc_span::Span;\n \n pub const CHECK_INVALID_HTML_TAGS: Pass = Pass {\n     name: \"check-invalid-html-tags\",\n@@ -26,9 +25,13 @@ impl<'a, 'tcx> InvalidHtmlTagsLinter<'a, 'tcx> {\n }\n \n pub fn check_invalid_html_tags(krate: Crate, cx: &DocContext<'_>) -> Crate {\n-    let mut coll = InvalidHtmlTagsLinter::new(cx);\n+    if !UnstableFeatures::from_environment().is_nightly_build() {\n+        krate\n+    } else {\n+        let mut coll = InvalidHtmlTagsLinter::new(cx);\n \n-    coll.fold_crate(krate)\n+        coll.fold_crate(krate)\n+    }\n }\n \n const ALLOWED_UNCLOSED: &[&str] = &["}]}