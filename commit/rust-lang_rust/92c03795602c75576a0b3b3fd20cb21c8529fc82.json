{"sha": "92c03795602c75576a0b3b3fd20cb21c8529fc82", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkyYzAzNzk1NjAyYzc1NTc2YTBiM2IzZmQyMGNiMjFjODUyOWZjODI=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-01-15T17:34:31Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-01-15T17:34:31Z"}, "message": "Merge #7285\n\n7285: Don't duplicate rustc diagnostics fixes r=matklad a=jonas-schievink\n\nShould fix https://github.com/rust-analyzer/rust-analyzer/issues/6851\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>", "tree": {"sha": "51a5477450c8fc863dd1d8720eac6221955a0cec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/51a5477450c8fc863dd1d8720eac6221955a0cec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/92c03795602c75576a0b3b3fd20cb21c8529fc82", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgAdInCRBK7hj4Ov3rIwAAdHIIAAY1C8oMccMR4vgGvZVn5Fkk\nOPpkw/nzuLLVuKFG1Om7+eXBCDWfO8CkzgOSF/p5c8Cq5AKj2zVkKhl6xV1JSmTr\nqKBgVkrw1fi+ECw7M8CBA58NMZ60/mb4VQXQKf9nMc3547hwz3DYsmWDPO+Sr3Z2\nvQ4MC3U+ScTm2DBFeOJhNJxXUaY8NayBH3Vxd9mptUFCMPAwmmjUoeEZX6qM6fIC\n0uRbq2XG+vu5esLjK1BP6No6nCVNeG88qowbBA7U/jLKrccdYFBUvKihohsX50B1\n3eUEtDr3ZlAsYvNbWeIwe+Nrp4kHlMTAa75HWXz6PdI6L0VinKOls0lvoLkS+kM=\n=MDTX\n-----END PGP SIGNATURE-----\n", "payload": "tree 51a5477450c8fc863dd1d8720eac6221955a0cec\nparent a8587f153b5af6eda9917e11dbe92bd4ce4f4ac4\nparent 36500fe49630f0ac29e57ff1af737b2bd7bff5a8\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1610732071 +0000\ncommitter GitHub <noreply@github.com> 1610732071 +0000\n\nMerge #7285\n\n7285: Don't duplicate rustc diagnostics fixes r=matklad a=jonas-schievink\n\nShould fix https://github.com/rust-analyzer/rust-analyzer/issues/6851\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/92c03795602c75576a0b3b3fd20cb21c8529fc82", "html_url": "https://github.com/rust-lang/rust/commit/92c03795602c75576a0b3b3fd20cb21c8529fc82", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/92c03795602c75576a0b3b3fd20cb21c8529fc82/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a8587f153b5af6eda9917e11dbe92bd4ce4f4ac4", "url": "https://api.github.com/repos/rust-lang/rust/commits/a8587f153b5af6eda9917e11dbe92bd4ce4f4ac4", "html_url": "https://github.com/rust-lang/rust/commit/a8587f153b5af6eda9917e11dbe92bd4ce4f4ac4"}, {"sha": "36500fe49630f0ac29e57ff1af737b2bd7bff5a8", "url": "https://api.github.com/repos/rust-lang/rust/commits/36500fe49630f0ac29e57ff1af737b2bd7bff5a8", "html_url": "https://github.com/rust-lang/rust/commit/36500fe49630f0ac29e57ff1af737b2bd7bff5a8"}], "stats": {"total": 314, "additions": 32, "deletions": 282}, "files": [{"sha": "5c282fe673c82c83b0ebd4115578ccd8c9a9d4da", "filename": "crates/rust-analyzer/src/diagnostics/test_data/rustc_unused_variable.txt", "status": "modified", "additions": 1, "deletions": 46, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/92c03795602c75576a0b3b3fd20cb21c8529fc82/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Frustc_unused_variable.txt", "raw_url": "https://github.com/rust-lang/rust/raw/92c03795602c75576a0b3b3fd20cb21c8529fc82/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Frustc_unused_variable.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Frustc_unused_variable.txt?ref=92c03795602c75576a0b3b3fd20cb21c8529fc82", "patch": "@@ -66,52 +66,7 @@\n             ),\n             data: None,\n         },\n-        fixes: [\n-            CodeAction {\n-                title: \"consider prefixing with an underscore\",\n-                group: None,\n-                kind: Some(\n-                    CodeActionKind(\n-                        \"quickfix\",\n-                    ),\n-                ),\n-                edit: Some(\n-                    SnippetWorkspaceEdit {\n-                        changes: Some(\n-                            {\n-                                Url {\n-                                    scheme: \"file\",\n-                                    host: None,\n-                                    port: None,\n-                                    path: \"/test/driver/subcommand/repl.rs\",\n-                                    query: None,\n-                                    fragment: None,\n-                                }: [\n-                                    TextEdit {\n-                                        range: Range {\n-                                            start: Position {\n-                                                line: 290,\n-                                                character: 8,\n-                                            },\n-                                            end: Position {\n-                                                line: 290,\n-                                                character: 11,\n-                                            },\n-                                        },\n-                                        new_text: \"_foo\",\n-                                    },\n-                                ],\n-                            },\n-                        ),\n-                        document_changes: None,\n-                    },\n-                ),\n-                is_preferred: Some(\n-                    true,\n-                ),\n-                data: None,\n-            },\n-        ],\n+        fixes: [],\n     },\n     MappedRustDiagnostic {\n         url: Url {"}, {"sha": "d36d7693d7f500a43c6ad1bfc7c2e3941b7aa9ae", "filename": "crates/rust-analyzer/src/diagnostics/test_data/rustc_unused_variable_as_hint.txt", "status": "modified", "additions": 1, "deletions": 46, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/92c03795602c75576a0b3b3fd20cb21c8529fc82/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Frustc_unused_variable_as_hint.txt", "raw_url": "https://github.com/rust-lang/rust/raw/92c03795602c75576a0b3b3fd20cb21c8529fc82/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Frustc_unused_variable_as_hint.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Frustc_unused_variable_as_hint.txt?ref=92c03795602c75576a0b3b3fd20cb21c8529fc82", "patch": "@@ -66,52 +66,7 @@\n             ),\n             data: None,\n         },\n-        fixes: [\n-            CodeAction {\n-                title: \"consider prefixing with an underscore\",\n-                group: None,\n-                kind: Some(\n-                    CodeActionKind(\n-                        \"quickfix\",\n-                    ),\n-                ),\n-                edit: Some(\n-                    SnippetWorkspaceEdit {\n-                        changes: Some(\n-                            {\n-                                Url {\n-                                    scheme: \"file\",\n-                                    host: None,\n-                                    port: None,\n-                                    path: \"/test/driver/subcommand/repl.rs\",\n-                                    query: None,\n-                                    fragment: None,\n-                                }: [\n-                                    TextEdit {\n-                                        range: Range {\n-                                            start: Position {\n-                                                line: 290,\n-                                                character: 8,\n-                                            },\n-                                            end: Position {\n-                                                line: 290,\n-                                                character: 11,\n-                                            },\n-                                        },\n-                                        new_text: \"_foo\",\n-                                    },\n-                                ],\n-                            },\n-                        ),\n-                        document_changes: None,\n-                    },\n-                ),\n-                is_preferred: Some(\n-                    true,\n-                ),\n-                data: None,\n-            },\n-        ],\n+        fixes: [],\n     },\n     MappedRustDiagnostic {\n         url: Url {"}, {"sha": "17845b711aa0375b0ea0eb284a34070a0539780e", "filename": "crates/rust-analyzer/src/diagnostics/test_data/rustc_unused_variable_as_info.txt", "status": "modified", "additions": 1, "deletions": 46, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/92c03795602c75576a0b3b3fd20cb21c8529fc82/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Frustc_unused_variable_as_info.txt", "raw_url": "https://github.com/rust-lang/rust/raw/92c03795602c75576a0b3b3fd20cb21c8529fc82/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Frustc_unused_variable_as_info.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Frustc_unused_variable_as_info.txt?ref=92c03795602c75576a0b3b3fd20cb21c8529fc82", "patch": "@@ -66,52 +66,7 @@\n             ),\n             data: None,\n         },\n-        fixes: [\n-            CodeAction {\n-                title: \"consider prefixing with an underscore\",\n-                group: None,\n-                kind: Some(\n-                    CodeActionKind(\n-                        \"quickfix\",\n-                    ),\n-                ),\n-                edit: Some(\n-                    SnippetWorkspaceEdit {\n-                        changes: Some(\n-                            {\n-                                Url {\n-                                    scheme: \"file\",\n-                                    host: None,\n-                                    port: None,\n-                                    path: \"/test/driver/subcommand/repl.rs\",\n-                                    query: None,\n-                                    fragment: None,\n-                                }: [\n-                                    TextEdit {\n-                                        range: Range {\n-                                            start: Position {\n-                                                line: 290,\n-                                                character: 8,\n-                                            },\n-                                            end: Position {\n-                                                line: 290,\n-                                                character: 11,\n-                                            },\n-                                        },\n-                                        new_text: \"_foo\",\n-                                    },\n-                                ],\n-                            },\n-                        ),\n-                        document_changes: None,\n-                    },\n-                ),\n-                is_preferred: Some(\n-                    true,\n-                ),\n-                data: None,\n-            },\n-        ],\n+        fixes: [],\n     },\n     MappedRustDiagnostic {\n         url: Url {"}, {"sha": "a199621678632a2d4c43233747bce211a27df9ea", "filename": "crates/rust-analyzer/src/diagnostics/test_data/snap_multi_line_fix.txt", "status": "modified", "additions": 2, "deletions": 118, "changes": 120, "blob_url": "https://github.com/rust-lang/rust/blob/92c03795602c75576a0b3b3fd20cb21c8529fc82/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Fsnap_multi_line_fix.txt", "raw_url": "https://github.com/rust-lang/rust/raw/92c03795602c75576a0b3b3fd20cb21c8529fc82/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Fsnap_multi_line_fix.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Fsnap_multi_line_fix.txt?ref=92c03795602c75576a0b3b3fd20cb21c8529fc82", "patch": "@@ -102,65 +102,7 @@\n             tags: None,\n             data: None,\n         },\n-        fixes: [\n-            CodeAction {\n-                title: \"return the expression directly\",\n-                group: None,\n-                kind: Some(\n-                    CodeActionKind(\n-                        \"quickfix\",\n-                    ),\n-                ),\n-                edit: Some(\n-                    SnippetWorkspaceEdit {\n-                        changes: Some(\n-                            {\n-                                Url {\n-                                    scheme: \"file\",\n-                                    host: None,\n-                                    port: None,\n-                                    path: \"/test/src/main.rs\",\n-                                    query: None,\n-                                    fragment: None,\n-                                }: [\n-                                    TextEdit {\n-                                        range: Range {\n-                                            start: Position {\n-                                                line: 2,\n-                                                character: 4,\n-                                            },\n-                                            end: Position {\n-                                                line: 2,\n-                                                character: 30,\n-                                            },\n-                                        },\n-                                        new_text: \"\",\n-                                    },\n-                                    TextEdit {\n-                                        range: Range {\n-                                            start: Position {\n-                                                line: 3,\n-                                                character: 4,\n-                                            },\n-                                            end: Position {\n-                                                line: 3,\n-                                                character: 5,\n-                                            },\n-                                        },\n-                                        new_text: \"(0..10).collect()\",\n-                                    },\n-                                ],\n-                            },\n-                        ),\n-                        document_changes: None,\n-                    },\n-                ),\n-                is_preferred: Some(\n-                    true,\n-                ),\n-                data: None,\n-            },\n-        ],\n+        fixes: [],\n     },\n     MappedRustDiagnostic {\n         url: Url {\n@@ -242,65 +184,7 @@\n             tags: None,\n             data: None,\n         },\n-        fixes: [\n-            CodeAction {\n-                title: \"return the expression directly\",\n-                group: None,\n-                kind: Some(\n-                    CodeActionKind(\n-                        \"quickfix\",\n-                    ),\n-                ),\n-                edit: Some(\n-                    SnippetWorkspaceEdit {\n-                        changes: Some(\n-                            {\n-                                Url {\n-                                    scheme: \"file\",\n-                                    host: None,\n-                                    port: None,\n-                                    path: \"/test/src/main.rs\",\n-                                    query: None,\n-                                    fragment: None,\n-                                }: [\n-                                    TextEdit {\n-                                        range: Range {\n-                                            start: Position {\n-                                                line: 2,\n-                                                character: 4,\n-                                            },\n-                                            end: Position {\n-                                                line: 2,\n-                                                character: 30,\n-                                            },\n-                                        },\n-                                        new_text: \"\",\n-                                    },\n-                                    TextEdit {\n-                                        range: Range {\n-                                            start: Position {\n-                                                line: 3,\n-                                                character: 4,\n-                                            },\n-                                            end: Position {\n-                                                line: 3,\n-                                                character: 5,\n-                                            },\n-                                        },\n-                                        new_text: \"(0..10).collect()\",\n-                                    },\n-                                ],\n-                            },\n-                        ),\n-                        document_changes: None,\n-                    },\n-                ),\n-                is_preferred: Some(\n-                    true,\n-                ),\n-                data: None,\n-            },\n-        ],\n+        fixes: [],\n     },\n     MappedRustDiagnostic {\n         url: Url {"}, {"sha": "757899484f10633bcba7b6518949721420a1881f", "filename": "crates/rust-analyzer/src/diagnostics/to_proto.rs", "status": "modified", "additions": 27, "deletions": 26, "changes": 53, "blob_url": "https://github.com/rust-lang/rust/blob/92c03795602c75576a0b3b3fd20cb21c8529fc82/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Fto_proto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/92c03795602c75576a0b3b3fd20cb21c8529fc82/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Fto_proto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Fto_proto.rs?ref=92c03795602c75576a0b3b3fd20cb21c8529fc82", "patch": "@@ -74,11 +74,13 @@ fn diagnostic_related_information(\n     Some(lsp_types::DiagnosticRelatedInformation { location, message })\n }\n \n+struct SubDiagnostic {\n+    related: lsp_types::DiagnosticRelatedInformation,\n+    suggested_fix: Option<lsp_ext::CodeAction>,\n+}\n+\n enum MappedRustChildDiagnostic {\n-    Related {\n-        related: lsp_types::DiagnosticRelatedInformation,\n-        suggested_fix: Option<lsp_ext::CodeAction>,\n-    },\n+    SubDiagnostic(SubDiagnostic),\n     MessageLine(String),\n }\n \n@@ -105,15 +107,15 @@ fn map_rust_child_diagnostic(\n     }\n \n     if edit_map.is_empty() {\n-        MappedRustChildDiagnostic::Related {\n+        MappedRustChildDiagnostic::SubDiagnostic(SubDiagnostic {\n             related: lsp_types::DiagnosticRelatedInformation {\n                 location: location(workspace_root, spans[0]),\n                 message: rd.message.clone(),\n             },\n             suggested_fix: None,\n-        }\n+        })\n     } else {\n-        MappedRustChildDiagnostic::Related {\n+        MappedRustChildDiagnostic::SubDiagnostic(SubDiagnostic {\n             related: lsp_types::DiagnosticRelatedInformation {\n                 location: location(workspace_root, spans[0]),\n                 message: rd.message.clone(),\n@@ -130,7 +132,7 @@ fn map_rust_child_diagnostic(\n                 is_preferred: Some(true),\n                 data: None,\n             }),\n-        }\n+        })\n     }\n }\n \n@@ -175,26 +177,22 @@ pub(crate) fn map_rust_diagnostic_to_lsp(\n     }\n \n     let mut needs_primary_span_label = true;\n-    let mut related_information = Vec::new();\n+    let mut subdiagnostics = Vec::new();\n     let mut tags = Vec::new();\n \n     for secondary_span in rd.spans.iter().filter(|s| !s.is_primary) {\n         let related = diagnostic_related_information(workspace_root, secondary_span);\n         if let Some(related) = related {\n-            related_information.push(related);\n+            subdiagnostics.push(SubDiagnostic { related, suggested_fix: None });\n         }\n     }\n \n-    let mut fixes = Vec::new();\n     let mut message = rd.message.clone();\n     for child in &rd.children {\n         let child = map_rust_child_diagnostic(workspace_root, &child);\n         match child {\n-            MappedRustChildDiagnostic::Related { related, suggested_fix } => {\n-                related_information.push(related);\n-                if let Some(code_action) = suggested_fix {\n-                    fixes.push(code_action);\n-                }\n+            MappedRustChildDiagnostic::SubDiagnostic(sub) => {\n+                subdiagnostics.push(sub);\n             }\n             MappedRustChildDiagnostic::MessageLine(message_line) => {\n                 format_to!(message, \"\\n{}\", message_line);\n@@ -284,7 +282,7 @@ pub(crate) fn map_rust_diagnostic_to_lsp(\n                 diagnostics.push(MappedRustDiagnostic {\n                     url: in_macro_location.uri,\n                     diagnostic,\n-                    fixes: fixes.clone(),\n+                    fixes: Vec::new(),\n                 });\n             }\n \n@@ -298,17 +296,20 @@ pub(crate) fn map_rust_diagnostic_to_lsp(\n                     code_description: code_description.clone(),\n                     source: Some(source.clone()),\n                     message,\n-                    related_information: if related_information.is_empty() {\n+                    related_information: if subdiagnostics.is_empty() {\n                         None\n                     } else {\n-                        let mut related = related_information.clone();\n+                        let mut related = subdiagnostics\n+                            .iter()\n+                            .map(|sub| sub.related.clone())\n+                            .collect::<Vec<_>>();\n                         related.extend(related_macro_info);\n                         Some(related)\n                     },\n                     tags: if tags.is_empty() { None } else { Some(tags.clone()) },\n                     data: None,\n                 },\n-                fixes: fixes.clone(),\n+                fixes: Vec::new(),\n             });\n \n             // Emit hint-level diagnostics for all `related_information` entries such as \"help\"s.\n@@ -318,21 +319,21 @@ pub(crate) fn map_rust_diagnostic_to_lsp(\n                 location,\n                 message: \"original diagnostic\".to_string(),\n             };\n-            for info in &related_information {\n+            for sub in &subdiagnostics {\n                 // Filter out empty/non-existent messages, as they greatly confuse VS Code.\n-                if info.message.is_empty() {\n+                if sub.related.message.is_empty() {\n                     continue;\n                 }\n                 diagnostics.push(MappedRustDiagnostic {\n-                    url: info.location.uri.clone(),\n-                    fixes: fixes.clone(), // share fixes to make them easier to apply\n+                    url: sub.related.location.uri.clone(),\n+                    fixes: sub.suggested_fix.iter().cloned().collect(),\n                     diagnostic: lsp_types::Diagnostic {\n-                        range: info.location.range,\n+                        range: sub.related.location.range,\n                         severity: Some(lsp_types::DiagnosticSeverity::Hint),\n                         code: code.clone().map(lsp_types::NumberOrString::String),\n                         code_description: code_description.clone(),\n                         source: Some(source.clone()),\n-                        message: info.message.clone(),\n+                        message: sub.related.message.clone(),\n                         related_information: Some(vec![back_ref.clone()]),\n                         tags: None, // don't apply modifiers again\n                         data: None,"}]}