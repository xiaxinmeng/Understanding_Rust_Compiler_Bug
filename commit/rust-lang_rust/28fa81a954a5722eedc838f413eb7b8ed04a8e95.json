{"sha": "28fa81a954a5722eedc838f413eb7b8ed04a8e95", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI4ZmE4MWE5NTRhNTcyMmVlZGM4MzhmNDEzZWI3YjhlZDA0YThlOTU=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-02-04T16:37:07Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-02-14T16:07:46Z"}, "message": "Invoke gcc with -nodefaultlibs\n\nThis will hopefully bring us closer to #11937. We're still using gcc's idea of\n\"startup files\", but this should prevent us from leaking in dependencies that we\ndon't quite want (libgcc for example once compiler-rt is what we use).", "tree": {"sha": "fd3d03bf3acb6c51557423f9ad77d00a539600cf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fd3d03bf3acb6c51557423f9ad77d00a539600cf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/28fa81a954a5722eedc838f413eb7b8ed04a8e95", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/28fa81a954a5722eedc838f413eb7b8ed04a8e95", "html_url": "https://github.com/rust-lang/rust/commit/28fa81a954a5722eedc838f413eb7b8ed04a8e95", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/28fa81a954a5722eedc838f413eb7b8ed04a8e95/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "18477ac68a3daf8260be17be368f59a65c3b7527", "url": "https://api.github.com/repos/rust-lang/rust/commits/18477ac68a3daf8260be17be368f59a65c3b7527", "html_url": "https://github.com/rust-lang/rust/commit/18477ac68a3daf8260be17be368f59a65c3b7527"}], "stats": {"total": 25, "additions": 24, "deletions": 1}, "files": [{"sha": "775f74754386454c2b412ff6b2eb1b4fa70c09d0", "filename": "src/librustc/back/link.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/28fa81a954a5722eedc838f413eb7b8ed04a8e95/src%2Flibrustc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28fa81a954a5722eedc838f413eb7b8ed04a8e95/src%2Flibrustc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fback%2Flink.rs?ref=28fa81a954a5722eedc838f413eb7b8ed04a8e95", "patch": "@@ -1084,6 +1084,17 @@ fn link_args(sess: Session,\n         args.push(metadata.as_str().unwrap().to_owned());\n     }\n \n+    // We want to prevent the compiler from accidentally leaking in any system\n+    // libraries, so we explicitly ask gcc to not link to any libraries by\n+    // default. Note that this does not happen for windows because windows pulls\n+    // in some large number of libraries and I couldn't quite figure out which\n+    // subset we wanted.\n+    //\n+    // FIXME(#11937) we should invoke the system linker directly\n+    if sess.targ_cfg.os != abi::OsWin32 {\n+        args.push(~\"-nodefaultlibs\");\n+    }\n+\n     if sess.targ_cfg.os == abi::OsLinux {\n         // GNU-style linkers will use this to omit linking to libraries which\n         // don't actually fulfill any relocations, but only for libraries which"}, {"sha": "5718a27bfef2de8b709fe082a06fc928c5ffa0d8", "filename": "src/libstd/rt/unwind.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/28fa81a954a5722eedc838f413eb7b8ed04a8e95/src%2Flibstd%2Frt%2Funwind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28fa81a954a5722eedc838f413eb7b8ed04a8e95/src%2Flibstd%2Frt%2Funwind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Funwind.rs?ref=28fa81a954a5722eedc838f413eb7b8ed04a8e95", "patch": "@@ -143,6 +143,16 @@ mod libunwind {\n     pub type _Unwind_Exception_Cleanup_Fn = extern \"C\" fn(unwind_code: _Unwind_Reason_Code,\n                                                           exception: *_Unwind_Exception);\n \n+    #[cfg(target_os = \"linux\")]\n+    #[cfg(target_os = \"freebsd\")]\n+    #[cfg(target_os = \"win32\")]\n+    #[link(name = \"gcc_s\")]\n+    extern {}\n+\n+    #[cfg(target_os = \"android\")]\n+    #[link(name = \"gcc\")]\n+    extern {}\n+\n     extern \"C\" {\n         pub fn _Unwind_RaiseException(exception: *_Unwind_Exception) -> _Unwind_Reason_Code;\n         pub fn _Unwind_DeleteException(exception: *_Unwind_Exception);"}, {"sha": "f9f2f1ec852a036324fca8e98ee67425f7bca95c", "filename": "src/libstd/rtdeps.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/28fa81a954a5722eedc838f413eb7b8ed04a8e95/src%2Flibstd%2Frtdeps.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28fa81a954a5722eedc838f413eb7b8ed04a8e95/src%2Flibstd%2Frtdeps.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frtdeps.rs?ref=28fa81a954a5722eedc838f413eb7b8ed04a8e95", "patch": "@@ -22,6 +22,7 @@ extern {}\n // On linux librt and libdl are indirect dependencies via rustrt,\n // and binutils 2.22+ won't add them automatically\n #[cfg(target_os = \"linux\")]\n+#[link(name = \"c\")]\n #[link(name = \"dl\")]\n #[link(name = \"m\")]\n #[link(name = \"pthread\")]\n@@ -31,6 +32,7 @@ extern {}\n #[link(name = \"dl\")]\n #[link(name = \"log\")]\n #[link(name = \"m\")]\n+#[link(name = \"c\")]\n extern {}\n \n #[cfg(target_os = \"freebsd\")]\n@@ -39,5 +41,5 @@ extern {}\n extern {}\n \n #[cfg(target_os = \"macos\")]\n-#[link(name = \"pthread\")]\n+#[link(name = \"System\")]\n extern {}"}]}