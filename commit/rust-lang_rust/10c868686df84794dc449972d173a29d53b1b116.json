{"sha": "10c868686df84794dc449972d173a29d53b1b116", "node_id": "C_kwDOAAsO6NoAKDEwYzg2ODY4NmRmODQ3OTRkYzQ0OTk3MmQxNzNhMjlkNTNiMWIxMTY", "commit": {"author": {"name": "Lukas Markeffsky", "email": "@", "date": "2023-01-19T20:45:38Z"}, "committer": {"name": "Lukas Markeffsky", "email": "@", "date": "2023-01-20T19:16:37Z"}, "message": "fix overlapping spans for `clippy::uninlined_format_args`", "tree": {"sha": "e27ad7f993953955a0b16727e0d3d23d79e6ae0e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e27ad7f993953955a0b16727e0d3d23d79e6ae0e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/10c868686df84794dc449972d173a29d53b1b116", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/10c868686df84794dc449972d173a29d53b1b116", "html_url": "https://github.com/rust-lang/rust/commit/10c868686df84794dc449972d173a29d53b1b116", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/10c868686df84794dc449972d173a29d53b1b116/comments", "author": null, "committer": null, "parents": [{"sha": "11611b0440d563e26758f7f4481e4fb66f4fe73f", "url": "https://api.github.com/repos/rust-lang/rust/commits/11611b0440d563e26758f7f4481e4fb66f4fe73f", "html_url": "https://github.com/rust-lang/rust/commit/11611b0440d563e26758f7f4481e4fb66f4fe73f"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "bb7fa3087b7482a4480c0da7f8f510f37b508738", "filename": "clippy_lints/src/format_args.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/10c868686df84794dc449972d173a29d53b1b116/clippy_lints%2Fsrc%2Fformat_args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/10c868686df84794dc449972d173a29d53b1b116/clippy_lints%2Fsrc%2Fformat_args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fformat_args.rs?ref=10c868686df84794dc449972d173a29d53b1b116", "patch": "@@ -311,6 +311,10 @@ fn check_uninlined_args(\n     // in those cases, make the code suggestion hidden\n     let multiline_fix = fixes.iter().any(|(span, _)| cx.sess().source_map().is_multiline(*span));\n \n+    // Suggest removing each argument only once, for example in `format!(\"{0} {0}\", arg)`.\n+    fixes.sort_unstable_by_key(|(span, _)| *span);\n+    fixes.dedup_by_key(|(span, _)| *span);\n+\n     span_lint_and_then(\n         cx,\n         UNINLINED_FORMAT_ARGS,"}]}