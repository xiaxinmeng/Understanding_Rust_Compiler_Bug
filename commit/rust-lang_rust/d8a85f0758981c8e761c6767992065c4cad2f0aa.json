{"sha": "d8a85f0758981c8e761c6767992065c4cad2f0aa", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ4YTg1ZjA3NTg5ODFjOGU3NjFjNjc2Nzk5MjA2NWM0Y2FkMmYwYWE=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-10-06T20:09:00Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-10-06T20:09:00Z"}, "message": "Make rpath work on mac", "tree": {"sha": "7c6dd9a5f002fad3c6c170964eb250a419ec76ac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7c6dd9a5f002fad3c6c170964eb250a419ec76ac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d8a85f0758981c8e761c6767992065c4cad2f0aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d8a85f0758981c8e761c6767992065c4cad2f0aa", "html_url": "https://github.com/rust-lang/rust/commit/d8a85f0758981c8e761c6767992065c4cad2f0aa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d8a85f0758981c8e761c6767992065c4cad2f0aa/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9c037d21940ca69acf88ad465cd4b1cdcc8e7409", "url": "https://api.github.com/repos/rust-lang/rust/commits/9c037d21940ca69acf88ad465cd4b1cdcc8e7409", "html_url": "https://github.com/rust-lang/rust/commit/9c037d21940ca69acf88ad465cd4b1cdcc8e7409"}], "stats": {"total": 21, "additions": 16, "deletions": 5}, "files": [{"sha": "9bfae5e96914177ceae8d97d71bcc79c3730c711", "filename": "mk/platform.mk", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/d8a85f0758981c8e761c6767992065c4cad2f0aa/mk%2Fplatform.mk", "raw_url": "https://github.com/rust-lang/rust/raw/d8a85f0758981c8e761c6767992065c4cad2f0aa/mk%2Fplatform.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fplatform.mk?ref=d8a85f0758981c8e761c6767992065c4cad2f0aa", "patch": "@@ -22,6 +22,7 @@ ifneq ($(findstring freebsd,$(CFG_OSTYPE)),)\n   CFG_UNIXY := 1\n   CFG_LDENV := LD_LIBRARY_PATH\n   CFG_DEF_SUFFIX := .bsd.def\n+  CFG_INSTALL_NAME =\n endif\n \n ifneq ($(findstring linux,$(CFG_OSTYPE)),)\n@@ -48,6 +49,7 @@ ifneq ($(findstring linux,$(CFG_OSTYPE)),)\n       CFG_PERF_TOOL := /usr/bin/time --verbose\n     endif\n   endif\n+  CFG_INSTALL_NAME =\n endif\n \n ifneq ($(findstring darwin,$(CFG_OSTYPE)),)\n@@ -71,6 +73,8 @@ ifneq ($(findstring darwin,$(CFG_OSTYPE)),)\n   CFG_GCCISH_LINK_FLAGS += -m32\n   CFG_DSYMUTIL := dsymutil\n   CFG_DEF_SUFFIX := .darwin.def\n+  # Mac requires this flag to make rpath work\n+  CFG_INSTALL_NAME = -Wl,-install_name,@rpath/$(1)\n endif\n \n ifneq ($(findstring mingw,$(CFG_OSTYPE)),)\n@@ -154,7 +158,7 @@ ifdef CFG_WINDOWSY\n     CFG_GCCISH_CFLAGS += -march=i686\n     CFG_GCCISH_LINK_FLAGS += -shared -fPIC\n   endif\n-\n+  CFG_INSTALL_NAME =\n endif\n \n \n@@ -169,7 +173,7 @@ ifeq ($(CFG_C_COMPILER),clang)\n   CFG_DEPEND_C = $(CFG_GCCISH_CROSS)$(CXX) $(CFG_GCCISH_CFLAGS) -MT \"$(1)\" \\\n     -MM $(2)\n   CFG_LINK_C = $(CFG_GCCISH_CROSS)$(CXX) $(CFG_GCCISH_LINK_FLAGS) -o $(1) \\\n-    $(CFG_GCCISH_DEF_FLAG)$(3) $(2)\n+    $(CFG_GCCISH_DEF_FLAG)$(3) $(2) $(call CFG_INSTALL_NAME,$(4))\n else\n ifeq ($(CFG_C_COMPILER),gcc)\n   CC=gcc\n@@ -181,7 +185,7 @@ ifeq ($(CFG_C_COMPILER),gcc)\n   CFG_DEPEND_C = $(CFG_GCCISH_CROSS)$(CXX) $(CFG_GCCISH_CFLAGS) -MT \"$(1)\" \\\n     -MM $(2)\n   CFG_LINK_C = $(CFG_GCCISH_CROSS)$(CXX) $(CFG_GCCISH_LINK_FLAGS) -o $(1) \\\n-               $(CFG_GCCISH_DEF_FLAG)$(3) $(2)\n+               $(CFG_GCCISH_DEF_FLAG)$(3) $(2) $(call CFG_INSTALL_NAME,$(4))\n else\n   CFG_ERR := $(error please try on a system with gcc or clang)\n endif"}, {"sha": "15f5aba566dd640c94134b7e001f452207b06352", "filename": "mk/rt.mk", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d8a85f0758981c8e761c6767992065c4cad2f0aa/mk%2Frt.mk", "raw_url": "https://github.com/rust-lang/rust/raw/d8a85f0758981c8e761c6767992065c4cad2f0aa/mk%2Frt.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Frt.mk?ref=d8a85f0758981c8e761c6767992065c4cad2f0aa", "patch": "@@ -112,7 +112,7 @@ rt/$(CFG_RUNTIME): $(RUNTIME_OBJS) $(MKFILES) $(RUNTIME_HDR) $(RUNTIME_DEF) $(RU\n \t@$(call E, link: $@)\n \t$(Q)$(call CFG_LINK_C,$@, $(RUNTIME_OBJS) \\\n \t  $(CFG_GCCISH_POST_LIB_FLAGS) $(RUNTIME_LIBS) \\\n-\t  $(CFG_LIBUV_LINK_FLAGS),$(RUNTIME_DEF))\n+\t  $(CFG_LIBUV_LINK_FLAGS),$(RUNTIME_DEF),$(CFG_RUNTIME))\n \n # FIXME: For some reason libuv's makefiles can't figure out the correct definition\n # of CC on the mingw I'm using, so we are explicitly using gcc. Also, we"}, {"sha": "d8f9dd2ce52efce224978bdc81a0d1523200b369", "filename": "mk/rustllvm.mk", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d8a85f0758981c8e761c6767992065c4cad2f0aa/mk%2Frustllvm.mk", "raw_url": "https://github.com/rust-lang/rust/raw/d8a85f0758981c8e761c6767992065c4cad2f0aa/mk%2Frustllvm.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Frustllvm.mk?ref=d8a85f0758981c8e761c6767992065c4cad2f0aa", "patch": "@@ -17,7 +17,7 @@ rustllvm/$(CFG_RUSTLLVM): $(RUSTLLVM_OBJS_OBJS) \\\n \t$(Q)$(call CFG_LINK_C,$@,$(RUSTLLVM_OBJS_OBJS) \\\n \t  $(CFG_GCCISH_PRE_LIB_FLAGS) $(CFG_LLVM_LIBS) \\\n           $(CFG_GCCISH_POST_LIB_FLAGS) \\\n-          $(CFG_LLVM_LDFLAGS),$(RUSTLLVM_DEF))\n+          $(CFG_LLVM_LDFLAGS),$(RUSTLLVM_DEF),$(CFG_RUSTLLVM))\n \n rustllvm/%.o: rustllvm/%.cpp $(MKFILES)\n \t@$(call E, compile: $@)"}, {"sha": "231762a79dd375725f522ac7f2ae961543924b6e", "filename": "src/comp/back/link.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/d8a85f0758981c8e761c6767992065c4cad2f0aa/src%2Fcomp%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d8a85f0758981c8e761c6767992065c4cad2f0aa/src%2Fcomp%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fback%2Flink.rs?ref=d8a85f0758981c8e761c6767992065c4cad2f0aa", "patch": "@@ -567,6 +567,13 @@ fn link_binary(sess: session::session,\n \n     if sess.get_opts().library {\n         gcc_args += [lib_cmd];\n+\n+        // On mac we need to tell the linker to let this library\n+        // be rpathed\n+        if sess.get_targ_cfg().os == session::os_macos {\n+            gcc_args += [\"-Wl,-install_name,@rpath/\"\n+                        + fs::basename(saved_out_filename)];\n+        }\n     } else {\n         // FIXME: why do we hardcode -lm?\n         gcc_args += [\"-lm\", main];"}]}