{"sha": "afa4148cc6dee0f9e0ca5b33f2511b9305d84fcb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFmYTQxNDhjYzZkZWUwZjllMGNhNWIzM2YyNTExYjkzMDVkODRmY2I=", "commit": {"author": {"name": "Christian Duerr", "email": "contact@christianduerr.com", "date": "2020-07-10T15:53:01Z"}, "committer": {"name": "Christian Duerr", "email": "contact@christianduerr.com", "date": "2020-07-10T15:53:01Z"}, "message": "Fix tests a bit more", "tree": {"sha": "936ccd795f05c97a76ef054ff23a45ec1f5dad13", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/936ccd795f05c97a76ef054ff23a45ec1f5dad13"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/afa4148cc6dee0f9e0ca5b33f2511b9305d84fcb", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEETapnqeqLkfzBW2mchc2uPBZLp7QFAl8IjuMACgkQhc2uPBZL\np7TKKwf+N8Z1HiwaIKTiAUXDgA/4DTNoAinVP4kmVgPdtThupZQ27pHOCDnLKb64\nxV6MjcKCOVhpFISGHwulmWJAfz8YvfqTfJ1HfmipDkqr3Cq4R//bYEqBBcvFSGnd\n2tNwrbS8nDLd82Epvu039zpHiZvbeXsHUpfqKpLH3yzfMwFXWNki7+75IWcocy9n\naxQ9rxAazj7Ey7iuCKq3rqnhhsc3CQN3VLHArYz4U8yy2P/H9vV/dxEHZJQZbE3n\nPJsmRgvXP6Gk4PqWhi2QlVgeAmq9VyEWCXdXMaHeICSZfyzu9iGB26CTYjl91hyk\nsBWO+L8e6eKB2y5xRsMzzuYOn4Guww==\n=YbRi\n-----END PGP SIGNATURE-----", "payload": "tree 936ccd795f05c97a76ef054ff23a45ec1f5dad13\nparent b3c719608d2c969323714517837f0c68aca23d81\nauthor Christian Duerr <contact@christianduerr.com> 1594396381 +0200\ncommitter Christian Duerr <contact@christianduerr.com> 1594396381 +0200\n\nFix tests a bit more\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/afa4148cc6dee0f9e0ca5b33f2511b9305d84fcb", "html_url": "https://github.com/rust-lang/rust/commit/afa4148cc6dee0f9e0ca5b33f2511b9305d84fcb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/afa4148cc6dee0f9e0ca5b33f2511b9305d84fcb/comments", "author": {"login": "chrisduerr", "id": 8886672, "node_id": "MDQ6VXNlcjg4ODY2NzI=", "avatar_url": "https://avatars.githubusercontent.com/u/8886672?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisduerr", "html_url": "https://github.com/chrisduerr", "followers_url": "https://api.github.com/users/chrisduerr/followers", "following_url": "https://api.github.com/users/chrisduerr/following{/other_user}", "gists_url": "https://api.github.com/users/chrisduerr/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisduerr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisduerr/subscriptions", "organizations_url": "https://api.github.com/users/chrisduerr/orgs", "repos_url": "https://api.github.com/users/chrisduerr/repos", "events_url": "https://api.github.com/users/chrisduerr/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisduerr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "chrisduerr", "id": 8886672, "node_id": "MDQ6VXNlcjg4ODY2NzI=", "avatar_url": "https://avatars.githubusercontent.com/u/8886672?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisduerr", "html_url": "https://github.com/chrisduerr", "followers_url": "https://api.github.com/users/chrisduerr/followers", "following_url": "https://api.github.com/users/chrisduerr/following{/other_user}", "gists_url": "https://api.github.com/users/chrisduerr/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisduerr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisduerr/subscriptions", "organizations_url": "https://api.github.com/users/chrisduerr/orgs", "repos_url": "https://api.github.com/users/chrisduerr/repos", "events_url": "https://api.github.com/users/chrisduerr/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisduerr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b3c719608d2c969323714517837f0c68aca23d81", "url": "https://api.github.com/repos/rust-lang/rust/commits/b3c719608d2c969323714517837f0c68aca23d81", "html_url": "https://github.com/rust-lang/rust/commit/b3c719608d2c969323714517837f0c68aca23d81"}], "stats": {"total": 19, "additions": 10, "deletions": 9}, "files": [{"sha": "19b253b0fe2c6b94c1c43c9cfd4e736b438967b5", "filename": "tests/ui/range_plus_minus_one.fixed", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/afa4148cc6dee0f9e0ca5b33f2511b9305d84fcb/tests%2Fui%2Frange_plus_minus_one.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/afa4148cc6dee0f9e0ca5b33f2511b9305d84fcb/tests%2Fui%2Frange_plus_minus_one.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Frange_plus_minus_one.fixed?ref=afa4148cc6dee0f9e0ca5b33f2511b9305d84fcb", "patch": "@@ -7,6 +7,7 @@ fn f() -> usize {\n }\n \n #[warn(clippy::range_plus_one)]\n+#[warn(clippy::range_minus_one)]\n fn main() {\n     for _ in 0..2 {}\n     for _ in 0..=2 {}"}, {"sha": "fb4f1658597a585de8f220e9255e0f5c57388ad5", "filename": "tests/ui/range_plus_minus_one.stderr", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/afa4148cc6dee0f9e0ca5b33f2511b9305d84fcb/tests%2Fui%2Frange_plus_minus_one.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/afa4148cc6dee0f9e0ca5b33f2511b9305d84fcb/tests%2Fui%2Frange_plus_minus_one.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Frange_plus_minus_one.stderr?ref=afa4148cc6dee0f9e0ca5b33f2511b9305d84fcb", "patch": "@@ -1,57 +1,57 @@\n error: an inclusive range would be more readable\n-  --> $DIR/range_plus_minus_one.rs:14:14\n+  --> $DIR/range_plus_minus_one.rs:15:14\n    |\n LL |     for _ in 0..3 + 1 {}\n    |              ^^^^^^^^ help: use: `0..=3`\n    |\n    = note: `-D clippy::range-plus-one` implied by `-D warnings`\n \n error: an inclusive range would be more readable\n-  --> $DIR/range_plus_minus_one.rs:17:14\n+  --> $DIR/range_plus_minus_one.rs:18:14\n    |\n LL |     for _ in 0..1 + 5 {}\n    |              ^^^^^^^^ help: use: `0..=5`\n \n error: an inclusive range would be more readable\n-  --> $DIR/range_plus_minus_one.rs:20:14\n+  --> $DIR/range_plus_minus_one.rs:21:14\n    |\n LL |     for _ in 1..1 + 1 {}\n    |              ^^^^^^^^ help: use: `1..=1`\n \n error: an inclusive range would be more readable\n-  --> $DIR/range_plus_minus_one.rs:26:14\n+  --> $DIR/range_plus_minus_one.rs:27:14\n    |\n LL |     for _ in 0..(1 + f()) {}\n    |              ^^^^^^^^^^^^ help: use: `0..=f()`\n \n error: an exclusive range would be more readable\n-  --> $DIR/range_plus_minus_one.rs:30:13\n+  --> $DIR/range_plus_minus_one.rs:31:13\n    |\n LL |     let _ = ..=11 - 1;\n    |             ^^^^^^^^^ help: use: `..11`\n    |\n    = note: `-D clippy::range-minus-one` implied by `-D warnings`\n \n error: an exclusive range would be more readable\n-  --> $DIR/range_plus_minus_one.rs:31:13\n+  --> $DIR/range_plus_minus_one.rs:32:13\n    |\n LL |     let _ = ..=(11 - 1);\n    |             ^^^^^^^^^^^ help: use: `..11`\n \n error: an inclusive range would be more readable\n-  --> $DIR/range_plus_minus_one.rs:32:13\n+  --> $DIR/range_plus_minus_one.rs:33:13\n    |\n LL |     let _ = (1..11 + 1);\n    |             ^^^^^^^^^^^ help: use: `(1..=11)`\n \n error: an inclusive range would be more readable\n-  --> $DIR/range_plus_minus_one.rs:33:13\n+  --> $DIR/range_plus_minus_one.rs:34:13\n    |\n LL |     let _ = (f() + 1)..(f() + 1);\n    |             ^^^^^^^^^^^^^^^^^^^^ help: use: `((f() + 1)..=f())`\n \n error: an inclusive range would be more readable\n-  --> $DIR/range_plus_minus_one.rs:37:14\n+  --> $DIR/range_plus_minus_one.rs:38:14\n    |\n LL |     for _ in 1..ONE + ONE {}\n    |              ^^^^^^^^^^^^ help: use: `1..=ONE`"}]}