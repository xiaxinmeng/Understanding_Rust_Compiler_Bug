{"sha": "49f849cdb7910162f15ac6ac26a98ba22009dc9a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ5Zjg0OWNkYjc5MTAxNjJmMTVhYzZhYzI2YTk4YmEyMjAwOWRjOWE=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-09-22T15:25:29Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-09-22T17:30:00Z"}, "message": "rename tt -> mbe, part 2", "tree": {"sha": "f7ff3e7fb5a10062e42d78882ee8ae536073a6c9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f7ff3e7fb5a10062e42d78882ee8ae536073a6c9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/49f849cdb7910162f15ac6ac26a98ba22009dc9a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/49f849cdb7910162f15ac6ac26a98ba22009dc9a", "html_url": "https://github.com/rust-lang/rust/commit/49f849cdb7910162f15ac6ac26a98ba22009dc9a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/49f849cdb7910162f15ac6ac26a98ba22009dc9a/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "827a5b2ea8dc66bfdf817f52011f470f00bc6fee", "url": "https://api.github.com/repos/rust-lang/rust/commits/827a5b2ea8dc66bfdf817f52011f470f00bc6fee", "html_url": "https://github.com/rust-lang/rust/commit/827a5b2ea8dc66bfdf817f52011f470f00bc6fee"}], "stats": {"total": 34, "additions": 17, "deletions": 17}, "files": [{"sha": "2cd802f22d306903a429acde2be723086339e899", "filename": "src/libsyntax/ext/expand.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/49f849cdb7910162f15ac6ac26a98ba22009dc9a/src%2Flibsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49f849cdb7910162f15ac6ac26a98ba22009dc9a/src%2Flibsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fexpand.rs?ref=49f849cdb7910162f15ac6ac26a98ba22009dc9a", "patch": "@@ -6,7 +6,7 @@ use crate::config::StripUnconfigured;\n use crate::ext::base::*;\n use crate::ext::proc_macro::{collect_derives, MarkAttrs};\n use crate::ext::hygiene::{ExpnId, SyntaxContext, ExpnData, ExpnKind};\n-use crate::ext::tt::macro_rules::annotate_err_with_kind;\n+use crate::ext::mbe::macro_rules::annotate_err_with_kind;\n use crate::ext::placeholders::{placeholder, PlaceholderExpander};\n use crate::feature_gate::{self, Features, GateIssue, is_builtin_attr, emit_feature_err};\n use crate::mut_visit::*;\n@@ -115,8 +115,8 @@ macro_rules! ast_fragments {\n             }\n         }\n \n-        impl<'a> MacResult for crate::ext::tt::macro_rules::ParserAnyMacro<'a> {\n-            $(fn $make_ast(self: Box<crate::ext::tt::macro_rules::ParserAnyMacro<'a>>)\n+        impl<'a> MacResult for crate::ext::mbe::macro_rules::ParserAnyMacro<'a> {\n+            $(fn $make_ast(self: Box<crate::ext::mbe::macro_rules::ParserAnyMacro<'a>>)\n                            -> Option<$AstTy> {\n                 Some(self.make(AstFragmentKind::$Kind).$make_ast())\n             })*"}, {"sha": "aa88d71666eb5927d03eebdbf884cea237eab0e3", "filename": "src/libsyntax/ext/mbe/macro_check.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/49f849cdb7910162f15ac6ac26a98ba22009dc9a/src%2Flibsyntax%2Fext%2Fmbe%2Fmacro_check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49f849cdb7910162f15ac6ac26a98ba22009dc9a/src%2Flibsyntax%2Fext%2Fmbe%2Fmacro_check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fmbe%2Fmacro_check.rs?ref=49f849cdb7910162f15ac6ac26a98ba22009dc9a", "patch": "@@ -106,7 +106,7 @@\n //! bound.\n use crate::ast::NodeId;\n use crate::early_buffered_lints::BufferedEarlyLintId;\n-use crate::ext::tt::quoted::{KleeneToken, TokenTree};\n+use crate::ext::mbe::quoted::{KleeneToken, TokenTree};\n use crate::parse::token::TokenKind;\n use crate::parse::token::{DelimToken, Token};\n use crate::parse::ParseSess;"}, {"sha": "88145cd121f14eb343c2f6dcaa67b07613519960", "filename": "src/libsyntax/ext/mbe/macro_parser.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/49f849cdb7910162f15ac6ac26a98ba22009dc9a/src%2Flibsyntax%2Fext%2Fmbe%2Fmacro_parser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49f849cdb7910162f15ac6ac26a98ba22009dc9a/src%2Flibsyntax%2Fext%2Fmbe%2Fmacro_parser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fmbe%2Fmacro_parser.rs?ref=49f849cdb7910162f15ac6ac26a98ba22009dc9a", "patch": "@@ -75,7 +75,7 @@ crate use ParseResult::*;\n use TokenTreeOrTokenTreeSlice::*;\n \n use crate::ast::{Ident, Name};\n-use crate::ext::tt::quoted::{self, TokenTree};\n+use crate::ext::mbe::quoted::{self, TokenTree};\n use crate::parse::{Directory, ParseSess};\n use crate::parse::parser::{Parser, PathStyle};\n use crate::parse::token::{self, DocComment, Nonterminal, Token};"}, {"sha": "939f5b8f51d5728c7895863dc44f8cfed6a70278", "filename": "src/libsyntax/ext/mbe/macro_rules.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/49f849cdb7910162f15ac6ac26a98ba22009dc9a/src%2Flibsyntax%2Fext%2Fmbe%2Fmacro_rules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49f849cdb7910162f15ac6ac26a98ba22009dc9a/src%2Flibsyntax%2Fext%2Fmbe%2Fmacro_rules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fmbe%2Fmacro_rules.rs?ref=49f849cdb7910162f15ac6ac26a98ba22009dc9a", "patch": "@@ -4,12 +4,12 @@ use crate::edition::Edition;\n use crate::ext::base::{DummyResult, ExtCtxt, MacResult, TTMacroExpander};\n use crate::ext::base::{SyntaxExtension, SyntaxExtensionKind};\n use crate::ext::expand::{AstFragment, AstFragmentKind};\n-use crate::ext::tt::macro_check;\n-use crate::ext::tt::macro_parser::{parse, parse_failure_msg};\n-use crate::ext::tt::macro_parser::{Error, Failure, Success};\n-use crate::ext::tt::macro_parser::{MatchedNonterminal, MatchedSeq};\n-use crate::ext::tt::quoted;\n-use crate::ext::tt::transcribe::transcribe;\n+use crate::ext::mbe::macro_check;\n+use crate::ext::mbe::macro_parser::{parse, parse_failure_msg};\n+use crate::ext::mbe::macro_parser::{Error, Failure, Success};\n+use crate::ext::mbe::macro_parser::{MatchedNonterminal, MatchedSeq};\n+use crate::ext::mbe::quoted;\n+use crate::ext::mbe::transcribe::transcribe;\n use crate::feature_gate::Features;\n use crate::parse::parser::Parser;\n use crate::parse::token::TokenKind::*;"}, {"sha": "8ef2834523112f41ae253dd25187a32a4dfe40bc", "filename": "src/libsyntax/ext/mbe/quoted.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/49f849cdb7910162f15ac6ac26a98ba22009dc9a/src%2Flibsyntax%2Fext%2Fmbe%2Fquoted.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49f849cdb7910162f15ac6ac26a98ba22009dc9a/src%2Flibsyntax%2Fext%2Fmbe%2Fquoted.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fmbe%2Fquoted.rs?ref=49f849cdb7910162f15ac6ac26a98ba22009dc9a", "patch": "@@ -1,6 +1,6 @@\n use crate::ast;\n use crate::ast::NodeId;\n-use crate::ext::tt::macro_parser;\n+use crate::ext::mbe::macro_parser;\n use crate::feature_gate::Features;\n use crate::parse::token::{self, Token, TokenKind};\n use crate::parse::ParseSess;"}, {"sha": "94ac1f60c6407265182d8bca29c90d865c3cc46b", "filename": "src/libsyntax/ext/mbe/transcribe.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/49f849cdb7910162f15ac6ac26a98ba22009dc9a/src%2Flibsyntax%2Fext%2Fmbe%2Ftranscribe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49f849cdb7910162f15ac6ac26a98ba22009dc9a/src%2Flibsyntax%2Fext%2Fmbe%2Ftranscribe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fmbe%2Ftranscribe.rs?ref=49f849cdb7910162f15ac6ac26a98ba22009dc9a", "patch": "@@ -1,7 +1,7 @@\n use crate::ast::{Ident, Mac};\n use crate::ext::base::ExtCtxt;\n-use crate::ext::tt::macro_parser::{MatchedNonterminal, MatchedSeq, NamedMatch};\n-use crate::ext::tt::quoted;\n+use crate::ext::mbe::macro_parser::{MatchedNonterminal, MatchedSeq, NamedMatch};\n+use crate::ext::mbe::quoted;\n use crate::mut_visit::{self, MutVisitor};\n use crate::parse::token::{self, NtTT, Token};\n use crate::tokenstream::{DelimSpan, TokenStream, TokenTree, TreeAndJoint};"}, {"sha": "045a36931883ccc1ce9f0758fb827a684115f003", "filename": "src/libsyntax/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/49f849cdb7910162f15ac6ac26a98ba22009dc9a/src%2Flibsyntax%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49f849cdb7910162f15ac6ac26a98ba22009dc9a/src%2Flibsyntax%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Flib.rs?ref=49f849cdb7910162f15ac6ac26a98ba22009dc9a", "patch": "@@ -162,14 +162,14 @@ pub mod ext {\n     mod proc_macro_server;\n \n     pub use syntax_pos::hygiene;\n-    pub use tt::macro_rules::compile_declarative_macro;\n+    pub use mbe::macro_rules::compile_declarative_macro;\n     pub mod allocator;\n     pub mod base;\n     pub mod build;\n     pub mod expand;\n     pub mod proc_macro;\n \n-    crate mod tt {\n+    crate mod mbe {\n         crate mod transcribe;\n         crate mod macro_check;\n         crate mod macro_parser;"}, {"sha": "d46e38f53d51b921594c25eed73db93af81d376a", "filename": "src/libsyntax/tokenstream.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/49f849cdb7910162f15ac6ac26a98ba22009dc9a/src%2Flibsyntax%2Ftokenstream.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49f849cdb7910162f15ac6ac26a98ba22009dc9a/src%2Flibsyntax%2Ftokenstream.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ftokenstream.rs?ref=49f849cdb7910162f15ac6ac26a98ba22009dc9a", "patch": "@@ -14,7 +14,7 @@\n //! ownership of the original.\n \n use crate::ext::base;\n-use crate::ext::tt::{macro_parser, quoted};\n+use crate::ext::mbe::{macro_parser, quoted};\n use crate::parse::Directory;\n use crate::parse::token::{self, DelimToken, Token, TokenKind};\n use crate::print::pprust;"}]}