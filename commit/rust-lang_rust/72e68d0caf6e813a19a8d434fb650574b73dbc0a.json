{"sha": "72e68d0caf6e813a19a8d434fb650574b73dbc0a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcyZTY4ZDBjYWY2ZTgxM2ExOWE4ZDQzNGZiNjUwNTc0YjczZGJjMGE=", "commit": {"author": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2020-03-26T02:49:23Z"}, "committer": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2020-03-26T02:49:23Z"}, "message": "Refactoring a bit", "tree": {"sha": "c532d82d002bc6964c4d59e20db7b085dfba247b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c532d82d002bc6964c4d59e20db7b085dfba247b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/72e68d0caf6e813a19a8d434fb650574b73dbc0a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/72e68d0caf6e813a19a8d434fb650574b73dbc0a", "html_url": "https://github.com/rust-lang/rust/commit/72e68d0caf6e813a19a8d434fb650574b73dbc0a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/72e68d0caf6e813a19a8d434fb650574b73dbc0a/comments", "author": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "committer": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d0b6ed4441469acfb6bc6555d78abf12637b6cf4", "url": "https://api.github.com/repos/rust-lang/rust/commits/d0b6ed4441469acfb6bc6555d78abf12637b6cf4", "html_url": "https://github.com/rust-lang/rust/commit/d0b6ed4441469acfb6bc6555d78abf12637b6cf4"}], "stats": {"total": 19, "additions": 12, "deletions": 7}, "files": [{"sha": "b7fb641c3873fed50d4dbcdb59e6d048977909af", "filename": "crates/ra_proc_macro/src/lib.rs", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/72e68d0caf6e813a19a8d434fb650574b73dbc0a/crates%2Fra_proc_macro%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72e68d0caf6e813a19a8d434fb650574b73dbc0a/crates%2Fra_proc_macro%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_proc_macro%2Fsrc%2Flib.rs?ref=72e68d0caf6e813a19a8d434fb650574b73dbc0a", "patch": "@@ -2,8 +2,8 @@\n //!\n //! We separate proc-macro expanding logic to an extern program to allow\n //! different implementations (e.g. wasm or dylib loading). And this crate\n-//! is used for provide basic infra-structure for commnicate between two\n-//! process: Client (RA itself), Server (the external program)\n+//! is used to provide basic infrastructure  for communication between two\n+//! processes: Client (RA itself), Server (the external program)\n \n use ra_mbe::ExpandError;\n use ra_tt::Subtree;\n@@ -18,7 +18,7 @@ trait ProcMacroExpander: std::fmt::Debug + Send + Sync + std::panic::RefUnwindSa\n \n #[derive(Debug, Clone, PartialEq, Eq)]\n pub struct ProcMacroProcessExpander {\n-    process_path: PathBuf,\n+    process: Arc<ProcMacroProcessSrv>,\n }\n \n impl ProcMacroExpander for ProcMacroProcessExpander {\n@@ -34,7 +34,7 @@ impl ProcMacroExpander for ProcMacroProcessExpander {\n \n #[derive(Debug, Clone)]\n pub struct ProcMacro {\n-    expander: Arc<Box<dyn ProcMacroExpander>>,\n+    expander: Arc<dyn ProcMacroExpander>,\n     name: String,\n }\n \n@@ -55,16 +55,21 @@ impl ProcMacro {\n     }\n }\n \n+#[derive(Debug, Clone, PartialEq, Eq)]\n+pub struct ProcMacroProcessSrv {\n+    path: PathBuf,\n+}\n+\n #[derive(Debug, Clone, PartialEq, Eq)]\n pub enum ProcMacroClient {\n-    Process { expander: Arc<ProcMacroProcessExpander> },\n+    Process { process: Arc<ProcMacroProcessSrv> },\n     Dummy,\n }\n \n impl ProcMacroClient {\n     pub fn extern_process(process_path: &Path) -> ProcMacroClient {\n-        let expander = ProcMacroProcessExpander { process_path: process_path.into() };\n-        ProcMacroClient::Process { expander: Arc::new(expander) }\n+        let process = ProcMacroProcessSrv { path: process_path.into() };\n+        ProcMacroClient::Process { process: Arc::new(process) }\n     }\n \n     pub fn dummy() -> ProcMacroClient {"}]}