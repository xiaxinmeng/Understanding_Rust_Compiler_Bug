{"sha": "12040aae885b8df967892ea1de420b9a35b42599", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEyMDQwYWFlODg1YjhkZjk2Nzg5MmVhMWRlNDIwYjlhMzViNDI1OTk=", "commit": {"author": {"name": "Christian Poveda", "email": "christianpoveda@protonmail.com", "date": "2019-10-11T08:36:34Z"}, "committer": {"name": "Christian Poveda", "email": "christianpoveda@protonmail.com", "date": "2019-10-11T08:43:20Z"}, "message": "Add comment explaining why buffer isn't overflowed", "tree": {"sha": "55e23070728369160f16b37dacb064a9bab60ebd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/55e23070728369160f16b37dacb064a9bab60ebd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/12040aae885b8df967892ea1de420b9a35b42599", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/12040aae885b8df967892ea1de420b9a35b42599", "html_url": "https://github.com/rust-lang/rust/commit/12040aae885b8df967892ea1de420b9a35b42599", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/12040aae885b8df967892ea1de420b9a35b42599/comments", "author": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8368d4f2b44ae1441390a2f7eee48af340c8d70c", "url": "https://api.github.com/repos/rust-lang/rust/commits/8368d4f2b44ae1441390a2f7eee48af340c8d70c", "html_url": "https://github.com/rust-lang/rust/commit/8368d4f2b44ae1441390a2f7eee48af340c8d70c"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "b39bde4dedc6ec453e235a2091568e135f3993f1", "filename": "src/shims/env.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/12040aae885b8df967892ea1de420b9a35b42599/src%2Fshims%2Fenv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/12040aae885b8df967892ea1de420b9a35b42599/src%2Fshims%2Fenv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fenv.rs?ref=12040aae885b8df967892ea1de420b9a35b42599", "patch": "@@ -133,11 +133,15 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n             Ok(cwd) => {\n                 // It is not clear what happens with non-utf8 paths here\n                 let mut bytes = cwd.display().to_string().into_bytes();\n-                // If the buffer is smaller or equal than the path, we return null.\n+                // If `size` is smaller or equal than the `bytes.len()`, writing `bytes` using the\n+                // `buf` pointer would cause an overflow, the desired behavior in this case is to\n+                // return null.\n                 if (bytes.len() as u64) < size {\n                     // We add a `/0` terminator\n                     bytes.push(0);\n-                    // This is ok because the buffer is larger than the path with the null terminator.\n+                    // This is ok because the buffer was strictly larger than `bytes`, so after\n+                    // adding the null terminator, the buffer size is larger or equal to\n+                    // `bytes.len()`, meaning that `bytes` actually fit inside tbe buffer.\n                     this.memory_mut()\n                         .get_mut(buf.alloc_id)?\n                         .write_bytes(tcx, buf, &bytes)?;"}]}