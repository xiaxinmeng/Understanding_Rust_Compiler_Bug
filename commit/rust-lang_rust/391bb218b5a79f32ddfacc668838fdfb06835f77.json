{"sha": "391bb218b5a79f32ddfacc668838fdfb06835f77", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM5MWJiMjE4YjVhNzlmMzJkZGZhY2M2Njg4MzhmZGZiMDY4MzVmNzc=", "commit": {"author": {"name": "Marijn Suijten", "email": "marijn@traverseresearch.nl", "date": "2021-01-19T18:20:26Z"}, "committer": {"name": "Marijn Suijten", "email": "marijn@traverseresearch.nl", "date": "2021-01-19T19:05:39Z"}, "message": "size_of_in_element_count: Separate test file in expressions and functions\n\nAn upcoming test case for new expresssion variants make the stderr file\ngo over 200 lines. Split this test case in two to have a clear\ndistinction between checking whether the lint is still applying on\nall the functions with member counts as argument, versus validating\nvarious member-count expressions that may or may not be invalid.", "tree": {"sha": "586b181f0574a405da8d661911b622db15a9f67a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/586b181f0574a405da8d661911b622db15a9f67a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/391bb218b5a79f32ddfacc668838fdfb06835f77", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/391bb218b5a79f32ddfacc668838fdfb06835f77", "html_url": "https://github.com/rust-lang/rust/commit/391bb218b5a79f32ddfacc668838fdfb06835f77", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/391bb218b5a79f32ddfacc668838fdfb06835f77/comments", "author": {"login": "MarijnS95", "id": 2325264, "node_id": "MDQ6VXNlcjIzMjUyNjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2325264?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MarijnS95", "html_url": "https://github.com/MarijnS95", "followers_url": "https://api.github.com/users/MarijnS95/followers", "following_url": "https://api.github.com/users/MarijnS95/following{/other_user}", "gists_url": "https://api.github.com/users/MarijnS95/gists{/gist_id}", "starred_url": "https://api.github.com/users/MarijnS95/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MarijnS95/subscriptions", "organizations_url": "https://api.github.com/users/MarijnS95/orgs", "repos_url": "https://api.github.com/users/MarijnS95/repos", "events_url": "https://api.github.com/users/MarijnS95/events{/privacy}", "received_events_url": "https://api.github.com/users/MarijnS95/received_events", "type": "User", "site_admin": false}, "committer": {"login": "MarijnS95", "id": 2325264, "node_id": "MDQ6VXNlcjIzMjUyNjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2325264?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MarijnS95", "html_url": "https://github.com/MarijnS95", "followers_url": "https://api.github.com/users/MarijnS95/followers", "following_url": "https://api.github.com/users/MarijnS95/following{/other_user}", "gists_url": "https://api.github.com/users/MarijnS95/gists{/gist_id}", "starred_url": "https://api.github.com/users/MarijnS95/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MarijnS95/subscriptions", "organizations_url": "https://api.github.com/users/MarijnS95/orgs", "repos_url": "https://api.github.com/users/MarijnS95/repos", "events_url": "https://api.github.com/users/MarijnS95/events{/privacy}", "received_events_url": "https://api.github.com/users/MarijnS95/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d71dea40cf2a509093bf882b87878406523c4073", "url": "https://api.github.com/repos/rust-lang/rust/commits/d71dea40cf2a509093bf882b87878406523c4073", "html_url": "https://github.com/rust-lang/rust/commit/d71dea40cf2a509093bf882b87878406523c4073"}], "stats": {"total": 138, "additions": 77, "deletions": 61}, "files": [{"sha": "b56910917ba854581f01afc8f3ea49ed63692f52", "filename": "tests/ui/size_of_in_element_count/expressions.rs", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/391bb218b5a79f32ddfacc668838fdfb06835f77/tests%2Fui%2Fsize_of_in_element_count%2Fexpressions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/391bb218b5a79f32ddfacc668838fdfb06835f77/tests%2Fui%2Fsize_of_in_element_count%2Fexpressions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsize_of_in_element_count%2Fexpressions.rs?ref=391bb218b5a79f32ddfacc668838fdfb06835f77", "patch": "@@ -0,0 +1,28 @@\n+#![warn(clippy::size_of_in_element_count)]\n+#![allow(clippy::ptr_offset_with_cast)]\n+\n+use std::mem::{size_of, size_of_val};\n+use std::ptr::{copy, copy_nonoverlapping, write_bytes};\n+\n+fn main() {\n+    const SIZE: usize = 128;\n+    const HALF_SIZE: usize = SIZE / 2;\n+    const DOUBLE_SIZE: usize = SIZE * 2;\n+    let mut x = [2u8; SIZE];\n+    let mut y = [2u8; SIZE];\n+\n+    // Count expression involving multiplication of size_of (Should trigger the lint)\n+    unsafe { copy_nonoverlapping(x.as_ptr(), y.as_mut_ptr(), size_of::<u8>() * SIZE) };\n+\n+    // Count expression involving nested multiplications of size_of (Should trigger the lint)\n+    unsafe { copy_nonoverlapping(x.as_ptr(), y.as_mut_ptr(), HALF_SIZE * size_of_val(&x[0]) * 2) };\n+\n+    // Count expression involving divisions of size_of (Should trigger the lint)\n+    unsafe { copy(x.as_ptr(), y.as_mut_ptr(), DOUBLE_SIZE * size_of::<u8>() / 2) };\n+\n+    // No size_of calls (Should not trigger the lint)\n+    unsafe { copy(x.as_ptr(), y.as_mut_ptr(), SIZE) };\n+\n+    // Different types for pointee and size_of (Should not trigger the lint)\n+    unsafe { y.as_mut_ptr().write_bytes(0u8, size_of::<u16>() / 2 * SIZE) };\n+}"}, {"sha": "47b98e9d9474028f24eff0b43fb890c7715f3657", "filename": "tests/ui/size_of_in_element_count/expressions.stderr", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/391bb218b5a79f32ddfacc668838fdfb06835f77/tests%2Fui%2Fsize_of_in_element_count%2Fexpressions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/391bb218b5a79f32ddfacc668838fdfb06835f77/tests%2Fui%2Fsize_of_in_element_count%2Fexpressions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsize_of_in_element_count%2Fexpressions.stderr?ref=391bb218b5a79f32ddfacc668838fdfb06835f77", "patch": "@@ -0,0 +1,27 @@\n+error: found a count of bytes instead of a count of elements of `T`\n+  --> $DIR/expressions.rs:15:62\n+   |\n+LL |     unsafe { copy_nonoverlapping(x.as_ptr(), y.as_mut_ptr(), size_of::<u8>() * SIZE) };\n+   |                                                              ^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: `-D clippy::size-of-in-element-count` implied by `-D warnings`\n+   = help: use a count of elements instead of a count of bytes, it already gets multiplied by the size of the type\n+\n+error: found a count of bytes instead of a count of elements of `T`\n+  --> $DIR/expressions.rs:18:62\n+   |\n+LL |     unsafe { copy_nonoverlapping(x.as_ptr(), y.as_mut_ptr(), HALF_SIZE * size_of_val(&x[0]) * 2) };\n+   |                                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = help: use a count of elements instead of a count of bytes, it already gets multiplied by the size of the type\n+\n+error: found a count of bytes instead of a count of elements of `T`\n+  --> $DIR/expressions.rs:21:47\n+   |\n+LL |     unsafe { copy(x.as_ptr(), y.as_mut_ptr(), DOUBLE_SIZE * size_of::<u8>() / 2) };\n+   |                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = help: use a count of elements instead of a count of bytes, it already gets multiplied by the size of the type\n+\n+error: aborting due to 3 previous errors\n+"}, {"sha": "09d08ac37dce548873cdd5d383c75ae686a57ac7", "filename": "tests/ui/size_of_in_element_count/functions.rs", "status": "renamed", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/391bb218b5a79f32ddfacc668838fdfb06835f77/tests%2Fui%2Fsize_of_in_element_count%2Ffunctions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/391bb218b5a79f32ddfacc668838fdfb06835f77/tests%2Fui%2Fsize_of_in_element_count%2Ffunctions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsize_of_in_element_count%2Ffunctions.rs?ref=391bb218b5a79f32ddfacc668838fdfb06835f77", "patch": "@@ -43,19 +43,4 @@ fn main() {\n     y.as_mut_ptr().wrapping_add(size_of::<u8>());\n     unsafe { y.as_ptr().offset(size_of::<u8>() as isize) };\n     y.as_mut_ptr().wrapping_offset(size_of::<u8>() as isize);\n-\n-    // Count expression involving multiplication of size_of (Should trigger the lint)\n-    unsafe { copy_nonoverlapping(x.as_ptr(), y.as_mut_ptr(), size_of::<u8>() * SIZE) };\n-\n-    // Count expression involving nested multiplications of size_of (Should trigger the lint)\n-    unsafe { copy_nonoverlapping(x.as_ptr(), y.as_mut_ptr(), HALF_SIZE * size_of_val(&x[0]) * 2) };\n-\n-    // Count expression involving divisions of size_of (Should trigger the lint)\n-    unsafe { copy(x.as_ptr(), y.as_mut_ptr(), DOUBLE_SIZE * size_of::<u8>() / 2) };\n-\n-    // No size_of calls (Should not trigger the lint)\n-    unsafe { copy(x.as_ptr(), y.as_mut_ptr(), SIZE) };\n-\n-    // Different types for pointee and size_of (Should not trigger the lint)\n-    unsafe { y.as_mut_ptr().write_bytes(0u8, size_of::<u16>() / 2 * SIZE) };\n }", "previous_filename": "tests/ui/size_of_in_element_count.rs"}, {"sha": "c1e824167b7f35d5156bab036453a413e1bcb242", "filename": "tests/ui/size_of_in_element_count/functions.stderr", "status": "renamed", "additions": 22, "deletions": 46, "changes": 68, "blob_url": "https://github.com/rust-lang/rust/blob/391bb218b5a79f32ddfacc668838fdfb06835f77/tests%2Fui%2Fsize_of_in_element_count%2Ffunctions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/391bb218b5a79f32ddfacc668838fdfb06835f77/tests%2Fui%2Fsize_of_in_element_count%2Ffunctions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsize_of_in_element_count%2Ffunctions.stderr?ref=391bb218b5a79f32ddfacc668838fdfb06835f77", "patch": "@@ -1,5 +1,5 @@\n error: found a count of bytes instead of a count of elements of `T`\n-  --> $DIR/size_of_in_element_count.rs:18:68\n+  --> $DIR/functions.rs:18:68\n    |\n LL |     unsafe { copy_nonoverlapping::<u8>(x.as_ptr(), y.as_mut_ptr(), size_of::<u8>()) };\n    |                                                                    ^^^^^^^^^^^^^^^\n@@ -8,188 +8,164 @@ LL |     unsafe { copy_nonoverlapping::<u8>(x.as_ptr(), y.as_mut_ptr(), size_of:\n    = help: use a count of elements instead of a count of bytes, it already gets multiplied by the size of the type\n \n error: found a count of bytes instead of a count of elements of `T`\n-  --> $DIR/size_of_in_element_count.rs:19:62\n+  --> $DIR/functions.rs:19:62\n    |\n LL |     unsafe { copy_nonoverlapping(x.as_ptr(), y.as_mut_ptr(), size_of_val(&x[0])) };\n    |                                                              ^^^^^^^^^^^^^^^^^^\n    |\n    = help: use a count of elements instead of a count of bytes, it already gets multiplied by the size of the type\n \n error: found a count of bytes instead of a count of elements of `T`\n-  --> $DIR/size_of_in_element_count.rs:21:49\n+  --> $DIR/functions.rs:21:49\n    |\n LL |     unsafe { x.as_ptr().copy_to(y.as_mut_ptr(), size_of::<u8>()) };\n    |                                                 ^^^^^^^^^^^^^^^\n    |\n    = help: use a count of elements instead of a count of bytes, it already gets multiplied by the size of the type\n \n error: found a count of bytes instead of a count of elements of `T`\n-  --> $DIR/size_of_in_element_count.rs:22:64\n+  --> $DIR/functions.rs:22:64\n    |\n LL |     unsafe { x.as_ptr().copy_to_nonoverlapping(y.as_mut_ptr(), size_of::<u8>()) };\n    |                                                                ^^^^^^^^^^^^^^^\n    |\n    = help: use a count of elements instead of a count of bytes, it already gets multiplied by the size of the type\n \n error: found a count of bytes instead of a count of elements of `T`\n-  --> $DIR/size_of_in_element_count.rs:23:51\n+  --> $DIR/functions.rs:23:51\n    |\n LL |     unsafe { y.as_mut_ptr().copy_from(x.as_ptr(), size_of::<u8>()) };\n    |                                                   ^^^^^^^^^^^^^^^\n    |\n    = help: use a count of elements instead of a count of bytes, it already gets multiplied by the size of the type\n \n error: found a count of bytes instead of a count of elements of `T`\n-  --> $DIR/size_of_in_element_count.rs:24:66\n+  --> $DIR/functions.rs:24:66\n    |\n LL |     unsafe { y.as_mut_ptr().copy_from_nonoverlapping(x.as_ptr(), size_of::<u8>()) };\n    |                                                                  ^^^^^^^^^^^^^^^\n    |\n    = help: use a count of elements instead of a count of bytes, it already gets multiplied by the size of the type\n \n error: found a count of bytes instead of a count of elements of `T`\n-  --> $DIR/size_of_in_element_count.rs:26:47\n+  --> $DIR/functions.rs:26:47\n    |\n LL |     unsafe { copy(x.as_ptr(), y.as_mut_ptr(), size_of::<u8>()) };\n    |                                               ^^^^^^^^^^^^^^^\n    |\n    = help: use a count of elements instead of a count of bytes, it already gets multiplied by the size of the type\n \n error: found a count of bytes instead of a count of elements of `T`\n-  --> $DIR/size_of_in_element_count.rs:27:47\n+  --> $DIR/functions.rs:27:47\n    |\n LL |     unsafe { copy(x.as_ptr(), y.as_mut_ptr(), size_of_val(&x[0])) };\n    |                                               ^^^^^^^^^^^^^^^^^^\n    |\n    = help: use a count of elements instead of a count of bytes, it already gets multiplied by the size of the type\n \n error: found a count of bytes instead of a count of elements of `T`\n-  --> $DIR/size_of_in_element_count.rs:29:46\n+  --> $DIR/functions.rs:29:46\n    |\n LL |     unsafe { y.as_mut_ptr().write_bytes(0u8, size_of::<u8>() * SIZE) };\n    |                                              ^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: use a count of elements instead of a count of bytes, it already gets multiplied by the size of the type\n \n error: found a count of bytes instead of a count of elements of `T`\n-  --> $DIR/size_of_in_element_count.rs:30:47\n+  --> $DIR/functions.rs:30:47\n    |\n LL |     unsafe { write_bytes(y.as_mut_ptr(), 0u8, size_of::<u8>() * SIZE) };\n    |                                               ^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: use a count of elements instead of a count of bytes, it already gets multiplied by the size of the type\n \n error: found a count of bytes instead of a count of elements of `T`\n-  --> $DIR/size_of_in_element_count.rs:32:66\n+  --> $DIR/functions.rs:32:66\n    |\n LL |     unsafe { swap_nonoverlapping(y.as_mut_ptr(), x.as_mut_ptr(), size_of::<u8>() * SIZE) };\n    |                                                                  ^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: use a count of elements instead of a count of bytes, it already gets multiplied by the size of the type\n \n error: found a count of bytes instead of a count of elements of `T`\n-  --> $DIR/size_of_in_element_count.rs:34:46\n+  --> $DIR/functions.rs:34:46\n    |\n LL |     slice_from_raw_parts_mut(y.as_mut_ptr(), size_of::<u8>() * SIZE);\n    |                                              ^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: use a count of elements instead of a count of bytes, it already gets multiplied by the size of the type\n \n error: found a count of bytes instead of a count of elements of `T`\n-  --> $DIR/size_of_in_element_count.rs:35:38\n+  --> $DIR/functions.rs:35:38\n    |\n LL |     slice_from_raw_parts(y.as_ptr(), size_of::<u8>() * SIZE);\n    |                                      ^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: use a count of elements instead of a count of bytes, it already gets multiplied by the size of the type\n \n error: found a count of bytes instead of a count of elements of `T`\n-  --> $DIR/size_of_in_element_count.rs:37:49\n+  --> $DIR/functions.rs:37:49\n    |\n LL |     unsafe { from_raw_parts_mut(y.as_mut_ptr(), size_of::<u8>() * SIZE) };\n    |                                                 ^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: use a count of elements instead of a count of bytes, it already gets multiplied by the size of the type\n \n error: found a count of bytes instead of a count of elements of `T`\n-  --> $DIR/size_of_in_element_count.rs:38:41\n+  --> $DIR/functions.rs:38:41\n    |\n LL |     unsafe { from_raw_parts(y.as_ptr(), size_of::<u8>() * SIZE) };\n    |                                         ^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: use a count of elements instead of a count of bytes, it already gets multiplied by the size of the type\n \n error: found a count of bytes instead of a count of elements of `T`\n-  --> $DIR/size_of_in_element_count.rs:40:33\n+  --> $DIR/functions.rs:40:33\n    |\n LL |     unsafe { y.as_mut_ptr().sub(size_of::<u8>()) };\n    |                                 ^^^^^^^^^^^^^^^\n    |\n    = help: use a count of elements instead of a count of bytes, it already gets multiplied by the size of the type\n \n error: found a count of bytes instead of a count of elements of `T`\n-  --> $DIR/size_of_in_element_count.rs:41:29\n+  --> $DIR/functions.rs:41:29\n    |\n LL |     y.as_ptr().wrapping_sub(size_of::<u8>());\n    |                             ^^^^^^^^^^^^^^^\n    |\n    = help: use a count of elements instead of a count of bytes, it already gets multiplied by the size of the type\n \n error: found a count of bytes instead of a count of elements of `T`\n-  --> $DIR/size_of_in_element_count.rs:42:29\n+  --> $DIR/functions.rs:42:29\n    |\n LL |     unsafe { y.as_ptr().add(size_of::<u8>()) };\n    |                             ^^^^^^^^^^^^^^^\n    |\n    = help: use a count of elements instead of a count of bytes, it already gets multiplied by the size of the type\n \n error: found a count of bytes instead of a count of elements of `T`\n-  --> $DIR/size_of_in_element_count.rs:43:33\n+  --> $DIR/functions.rs:43:33\n    |\n LL |     y.as_mut_ptr().wrapping_add(size_of::<u8>());\n    |                                 ^^^^^^^^^^^^^^^\n    |\n    = help: use a count of elements instead of a count of bytes, it already gets multiplied by the size of the type\n \n error: found a count of bytes instead of a count of elements of `T`\n-  --> $DIR/size_of_in_element_count.rs:44:32\n+  --> $DIR/functions.rs:44:32\n    |\n LL |     unsafe { y.as_ptr().offset(size_of::<u8>() as isize) };\n    |                                ^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: use a count of elements instead of a count of bytes, it already gets multiplied by the size of the type\n \n error: found a count of bytes instead of a count of elements of `T`\n-  --> $DIR/size_of_in_element_count.rs:45:36\n+  --> $DIR/functions.rs:45:36\n    |\n LL |     y.as_mut_ptr().wrapping_offset(size_of::<u8>() as isize);\n    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: use a count of elements instead of a count of bytes, it already gets multiplied by the size of the type\n \n-error: found a count of bytes instead of a count of elements of `T`\n-  --> $DIR/size_of_in_element_count.rs:48:62\n-   |\n-LL |     unsafe { copy_nonoverlapping(x.as_ptr(), y.as_mut_ptr(), size_of::<u8>() * SIZE) };\n-   |                                                              ^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = help: use a count of elements instead of a count of bytes, it already gets multiplied by the size of the type\n-\n-error: found a count of bytes instead of a count of elements of `T`\n-  --> $DIR/size_of_in_element_count.rs:51:62\n-   |\n-LL |     unsafe { copy_nonoverlapping(x.as_ptr(), y.as_mut_ptr(), HALF_SIZE * size_of_val(&x[0]) * 2) };\n-   |                                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = help: use a count of elements instead of a count of bytes, it already gets multiplied by the size of the type\n-\n-error: found a count of bytes instead of a count of elements of `T`\n-  --> $DIR/size_of_in_element_count.rs:54:47\n-   |\n-LL |     unsafe { copy(x.as_ptr(), y.as_mut_ptr(), DOUBLE_SIZE * size_of::<u8>() / 2) };\n-   |                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = help: use a count of elements instead of a count of bytes, it already gets multiplied by the size of the type\n-\n-error: aborting due to 24 previous errors\n+error: aborting due to 21 previous errors\n ", "previous_filename": "tests/ui/size_of_in_element_count.stderr"}]}