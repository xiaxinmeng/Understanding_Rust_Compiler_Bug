{"sha": "6956bbf61cd0c4e5f0c39ca397085fa040710f56", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY5NTZiYmY2MWNkMGM0ZTVmMGMzOWNhMzk3MDg1ZmEwNDA3MTBmNTY=", "commit": {"author": {"name": "QuietMisdreavus", "email": "grey@quietmisdreavus.net", "date": "2018-03-21T00:36:30Z"}, "committer": {"name": "QuietMisdreavus", "email": "grey@quietmisdreavus.net", "date": "2018-03-21T00:36:30Z"}, "message": "whitelist every target feature for rustdoc", "tree": {"sha": "53f9ae14c916932add5ca87c2ef0b70ceffb1e38", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/53f9ae14c916932add5ca87c2ef0b70ceffb1e38"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6956bbf61cd0c4e5f0c39ca397085fa040710f56", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6956bbf61cd0c4e5f0c39ca397085fa040710f56", "html_url": "https://github.com/rust-lang/rust/commit/6956bbf61cd0c4e5f0c39ca397085fa040710f56", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6956bbf61cd0c4e5f0c39ca397085fa040710f56/comments", "author": {"login": "QuietMisdreavus", "id": 5217170, "node_id": "MDQ6VXNlcjUyMTcxNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/5217170?v=4", "gravatar_id": "", "url": "https://api.github.com/users/QuietMisdreavus", "html_url": "https://github.com/QuietMisdreavus", "followers_url": "https://api.github.com/users/QuietMisdreavus/followers", "following_url": "https://api.github.com/users/QuietMisdreavus/following{/other_user}", "gists_url": "https://api.github.com/users/QuietMisdreavus/gists{/gist_id}", "starred_url": "https://api.github.com/users/QuietMisdreavus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/QuietMisdreavus/subscriptions", "organizations_url": "https://api.github.com/users/QuietMisdreavus/orgs", "repos_url": "https://api.github.com/users/QuietMisdreavus/repos", "events_url": "https://api.github.com/users/QuietMisdreavus/events{/privacy}", "received_events_url": "https://api.github.com/users/QuietMisdreavus/received_events", "type": "User", "site_admin": false}, "committer": {"login": "QuietMisdreavus", "id": 5217170, "node_id": "MDQ6VXNlcjUyMTcxNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/5217170?v=4", "gravatar_id": "", "url": "https://api.github.com/users/QuietMisdreavus", "html_url": "https://github.com/QuietMisdreavus", "followers_url": "https://api.github.com/users/QuietMisdreavus/followers", "following_url": "https://api.github.com/users/QuietMisdreavus/following{/other_user}", "gists_url": "https://api.github.com/users/QuietMisdreavus/gists{/gist_id}", "starred_url": "https://api.github.com/users/QuietMisdreavus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/QuietMisdreavus/subscriptions", "organizations_url": "https://api.github.com/users/QuietMisdreavus/orgs", "repos_url": "https://api.github.com/users/QuietMisdreavus/repos", "events_url": "https://api.github.com/users/QuietMisdreavus/events{/privacy}", "received_events_url": "https://api.github.com/users/QuietMisdreavus/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a04b88d1941644df01fa5e31dd43e0f57c13d938", "url": "https://api.github.com/repos/rust-lang/rust/commits/a04b88d1941644df01fa5e31dd43e0f57c13d938", "html_url": "https://github.com/rust-lang/rust/commit/a04b88d1941644df01fa5e31dd43e0f57c13d938"}], "stats": {"total": 30, "additions": 26, "deletions": 4}, "files": [{"sha": "040d9455334bc9ede85ff33901506f72683c1be3", "filename": "src/librustc_trans/attributes.rs", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/6956bbf61cd0c4e5f0c39ca397085fa040710f56/src%2Flibrustc_trans%2Fattributes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6956bbf61cd0c4e5f0c39ca397085fa040710f56/src%2Flibrustc_trans%2Fattributes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fattributes.rs?ref=6956bbf61cd0c4e5f0c39ca397085fa040710f56", "patch": "@@ -148,9 +148,17 @@ fn cstr(s: &'static str) -> &CStr {\n pub fn provide(providers: &mut Providers) {\n     providers.target_features_whitelist = |tcx, cnum| {\n         assert_eq!(cnum, LOCAL_CRATE);\n-        Lrc::new(llvm_util::target_feature_whitelist(tcx.sess)\n-            .iter()\n-            .map(|c| c.to_string())\n-            .collect())\n+        if tcx.sess.opts.actually_rustdoc {\n+            // rustdoc needs to be able to document functions that use all the features, so\n+            // whitelist them all\n+            Lrc::new(llvm_util::all_known_features()\n+                .map(|c| c.to_string())\n+                .collect())\n+        } else {\n+            Lrc::new(llvm_util::target_feature_whitelist(tcx.sess)\n+                .iter()\n+                .map(|c| c.to_string())\n+                .collect())\n+        }\n     };\n }"}, {"sha": "5113b65a5c4700231f9e573711669abe549426ac", "filename": "src/librustc_trans/llvm_util.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/6956bbf61cd0c4e5f0c39ca397085fa040710f56/src%2Flibrustc_trans%2Fllvm_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6956bbf61cd0c4e5f0c39ca397085fa040710f56/src%2Flibrustc_trans%2Fllvm_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fllvm_util.rs?ref=6956bbf61cd0c4e5f0c39ca397085fa040710f56", "patch": "@@ -107,6 +107,20 @@ const POWERPC_WHITELIST: &'static [&'static str] = &[\"altivec\",\n \n const MIPS_WHITELIST: &'static [&'static str] = &[\"fp64\", \"msa\"];\n \n+/// When rustdoc is running, provide a list of all known features so that all their respective\n+/// primtives may be documented.\n+///\n+/// IMPORTANT: If you're adding another whitelist to the above lists, make sure to add it to this\n+/// iterator!\n+pub fn all_known_features() -> impl Iterator<Item=&'static str> {\n+    ARM_WHITELIST.iter().cloned()\n+        .chain(AARCH64_WHITELIST.iter().cloned())\n+        .chain(X86_WHITELIST.iter().cloned())\n+        .chain(HEXAGON_WHITELIST.iter().cloned())\n+        .chain(POWERPC_WHITELIST.iter().cloned())\n+        .chain(MIPS_WHITELIST.iter().cloned())\n+}\n+\n pub fn to_llvm_feature<'a>(sess: &Session, s: &'a str) -> &'a str {\n     let arch = if sess.target.target.arch == \"x86_64\" {\n         \"x86\""}]}