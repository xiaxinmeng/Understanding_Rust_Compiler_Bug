{"sha": "85bc88df5f97d31cf6297865dcd6092ba12b740b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg1YmM4OGRmNWY5N2QzMWNmNjI5Nzg2NWRjZDYwOTJiYTEyYjc0MGI=", "commit": {"author": {"name": "Tyson Nottingham", "email": "tgnottingham@gmail.com", "date": "2021-01-05T01:53:23Z"}, "committer": {"name": "Tyson Nottingham", "email": "tgnottingham@gmail.com", "date": "2021-04-13T17:03:22Z"}, "message": "BufWriter: use #[cold] and less aggressive #[inline] hints", "tree": {"sha": "d5c09d025fab49a94dd258ea566c8e36cc0e0816", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d5c09d025fab49a94dd258ea566c8e36cc0e0816"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/85bc88df5f97d31cf6297865dcd6092ba12b740b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/85bc88df5f97d31cf6297865dcd6092ba12b740b", "html_url": "https://github.com/rust-lang/rust/commit/85bc88df5f97d31cf6297865dcd6092ba12b740b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/85bc88df5f97d31cf6297865dcd6092ba12b740b/comments", "author": {"login": "tgnottingham", "id": 3668166, "node_id": "MDQ6VXNlcjM2NjgxNjY=", "avatar_url": "https://avatars.githubusercontent.com/u/3668166?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tgnottingham", "html_url": "https://github.com/tgnottingham", "followers_url": "https://api.github.com/users/tgnottingham/followers", "following_url": "https://api.github.com/users/tgnottingham/following{/other_user}", "gists_url": "https://api.github.com/users/tgnottingham/gists{/gist_id}", "starred_url": "https://api.github.com/users/tgnottingham/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tgnottingham/subscriptions", "organizations_url": "https://api.github.com/users/tgnottingham/orgs", "repos_url": "https://api.github.com/users/tgnottingham/repos", "events_url": "https://api.github.com/users/tgnottingham/events{/privacy}", "received_events_url": "https://api.github.com/users/tgnottingham/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tgnottingham", "id": 3668166, "node_id": "MDQ6VXNlcjM2NjgxNjY=", "avatar_url": "https://avatars.githubusercontent.com/u/3668166?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tgnottingham", "html_url": "https://github.com/tgnottingham", "followers_url": "https://api.github.com/users/tgnottingham/followers", "following_url": "https://api.github.com/users/tgnottingham/following{/other_user}", "gists_url": "https://api.github.com/users/tgnottingham/gists{/gist_id}", "starred_url": "https://api.github.com/users/tgnottingham/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tgnottingham/subscriptions", "organizations_url": "https://api.github.com/users/tgnottingham/orgs", "repos_url": "https://api.github.com/users/tgnottingham/repos", "events_url": "https://api.github.com/users/tgnottingham/events{/privacy}", "received_events_url": "https://api.github.com/users/tgnottingham/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "72aecbfd01e73da710ee35826f28f41d5d0cfebe", "url": "https://api.github.com/repos/rust-lang/rust/commits/72aecbfd01e73da710ee35826f28f41d5d0cfebe", "html_url": "https://github.com/rust-lang/rust/commit/72aecbfd01e73da710ee35826f28f41d5d0cfebe"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "9dbf0e7454d7fa2e2d4f72f5db74cbd1a97fa297", "filename": "library/std/src/io/buffered/bufwriter.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/85bc88df5f97d31cf6297865dcd6092ba12b740b/library%2Fstd%2Fsrc%2Fio%2Fbuffered%2Fbufwriter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/85bc88df5f97d31cf6297865dcd6092ba12b740b/library%2Fstd%2Fsrc%2Fio%2Fbuffered%2Fbufwriter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fio%2Fbuffered%2Fbufwriter.rs?ref=85bc88df5f97d31cf6297865dcd6092ba12b740b", "patch": "@@ -351,6 +351,7 @@ impl<W: Write> BufWriter<W> {\n     // If this function ends up being called frequently relative to `write`,\n     // it's likely a sign that the client is using an improperly sized buffer\n     // or their write patterns are somewhat pathological.\n+    #[cold]\n     #[inline(never)]\n     fn write_cold(&mut self, buf: &[u8]) -> io::Result<usize> {\n         if buf.len() > self.spare_capacity() {\n@@ -385,6 +386,7 @@ impl<W: Write> BufWriter<W> {\n     // If this function ends up being called frequently relative to `write_all`,\n     // it's likely a sign that the client is using an improperly sized buffer\n     // or their write patterns are somewhat pathological.\n+    #[cold]\n     #[inline(never)]\n     fn write_all_cold(&mut self, buf: &[u8]) -> io::Result<()> {\n         // Normally, `write_all` just calls `write` in a loop. We can do better\n@@ -421,7 +423,7 @@ impl<W: Write> BufWriter<W> {\n \n     // SAFETY: Requires `buf.len() <= self.buf.capacity() - self.buf.len()`,\n     // i.e., that input buffer length is less than or equal to spare capacity.\n-    #[inline(always)]\n+    #[inline]\n     unsafe fn write_to_buffer_unchecked(&mut self, buf: &[u8]) {\n         debug_assert!(buf.len() <= self.spare_capacity());\n         let old_len = self.buf.len();"}]}