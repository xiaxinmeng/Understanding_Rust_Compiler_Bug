{"sha": "db15591d897a08d16156e7934c0e675c271f54bf", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRiMTU1OTFkODk3YTA4ZDE2MTU2ZTc5MzRjMGU2NzVjMjcxZjU0YmY=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-09-09T14:26:53Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-09-09T14:53:45Z"}, "message": "Revert \"Make for loops alias the vec elements, rather than copy them\"\n\nThis reverts commit 985ef59efd971f1d6b9bf4b5e484b75733e00444.", "tree": {"sha": "5f702982ecaf461f5ae4de9399b77b3576161c56", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5f702982ecaf461f5ae4de9399b77b3576161c56"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/db15591d897a08d16156e7934c0e675c271f54bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/db15591d897a08d16156e7934c0e675c271f54bf", "html_url": "https://github.com/rust-lang/rust/commit/db15591d897a08d16156e7934c0e675c271f54bf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/db15591d897a08d16156e7934c0e675c271f54bf/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3ac59b0ee0eb2b174444ea1fd7eb980db4b59246", "url": "https://api.github.com/repos/rust-lang/rust/commits/3ac59b0ee0eb2b174444ea1fd7eb980db4b59246", "html_url": "https://github.com/rust-lang/rust/commit/3ac59b0ee0eb2b174444ea1fd7eb980db4b59246"}], "stats": {"total": 18, "additions": 12, "deletions": 6}, "files": [{"sha": "893614cac9a5a2dc9ecaa8fa8d964cedc749f268", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/db15591d897a08d16156e7934c0e675c271f54bf/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db15591d897a08d16156e7934c0e675c271f54bf/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=db15591d897a08d16156e7934c0e675c271f54bf", "patch": "@@ -2478,13 +2478,19 @@ fn trans_for(cx: &@block_ctxt, local: &@ast::local, seq: &@ast::expr,\n     fn inner(cx: &@block_ctxt, local: @ast::local, curr: ValueRef, t: ty::t,\n              body: &ast::blk, outer_next_cx: @block_ctxt) -> @block_ctxt {\n         let next_cx = new_sub_block_ctxt(cx, \"next\");\n-        let bcx = new_loop_scope_block_ctxt(cx, option::some(next_cx),\n-                                            outer_next_cx, \"for loop scope\");\n-        Br(cx, bcx.llbb);\n-        let val = PointerCast(bcx, curr, T_ptr(type_of_or_i8(cx, t)));\n-        let bcx = trans_alt::bind_irrefutable_pat(bcx, local.node.pat, val,\n+        let scope_cx =\n+            new_loop_scope_block_ctxt(cx,\n+                                      option::some::<@block_ctxt>(next_cx),\n+                                      outer_next_cx, \"for loop scope\");\n+        Br(cx, scope_cx.llbb);\n+        let {bcx, val: dst} = alloc_local(scope_cx, local);\n+        let val = load_if_immediate(bcx, PointerCast(bcx, curr,\n+                                                     val_ty(dst)), t);\n+        let bcx = copy_val(bcx, INIT, dst, val, t);\n+        add_clean(scope_cx, dst, t);\n+        let bcx = trans_alt::bind_irrefutable_pat(bcx, local.node.pat, dst,\n                                                   cx.fcx.lllocals, false);\n-        let bcx = trans_block(bcx, body, return).bcx;\n+        bcx = trans_block(bcx, body, return).bcx;\n         if !is_terminated(bcx) {\n             Br(bcx, next_cx.llbb);\n             // otherwise, this code is unreachable"}]}