{"sha": "29506b5a26ef0c448c0e50164b2a7782fb7e3f5a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI5NTA2YjVhMjZlZjBjNDQ4YzBlNTAxNjRiMmE3NzgyZmI3ZTNmNWE=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-08-02T16:17:15Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-08-02T16:17:15Z"}, "message": "Merge #9762\n\n9762: fix: Fix ranged hover result range r=Veykril a=Veykril\n\nbors r+\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>", "tree": {"sha": "580903150909e9f3682f0ccb619807150de706b2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/580903150909e9f3682f0ccb619807150de706b2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/29506b5a26ef0c448c0e50164b2a7782fb7e3f5a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhCBqLCRBK7hj4Ov3rIwAAPRcIABBzZXXsRRtKvRDYcHq3l/GU\nVeuMDz8PMugkr1Pih6QHrjfmKZrNk3gqi1FXb6ceEiOHGOl9gWJ3azdTIpWxoWvq\nnkkw7RjWMpV2KUOEn0ZrYGWi7jq/upmT74sIZyzvE+zG8BMzd/00hWuNxRjQnZzN\n1R1PoMZGopNeWduMjSlOgAcCdNBP6v+RFViz/bkBFpRWB/TsKjxVlYYAaj8hnGBM\nTAT/uW9kXTQcM4AHaXXCPvYhg7Y7Zm/PO8ZQJvPGwLgSuyFZZjDm5edLQngINBkB\nnh+iFPKUC/zX3RZIo8fly8QNehUu3irRoWy3kIfuWlH0iThp5/PLy5hgXhR11VE=\n=2yyG\n-----END PGP SIGNATURE-----\n", "payload": "tree 580903150909e9f3682f0ccb619807150de706b2\nparent cae54d86d8ad0857c1ef960c06883ee92e0ba4c0\nparent 8e0a7d8c08f04d39573777d8a3ec012696a45eac\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1627921035 +0000\ncommitter GitHub <noreply@github.com> 1627921035 +0000\n\nMerge #9762\n\n9762: fix: Fix ranged hover result range r=Veykril a=Veykril\n\nbors r+\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/29506b5a26ef0c448c0e50164b2a7782fb7e3f5a", "html_url": "https://github.com/rust-lang/rust/commit/29506b5a26ef0c448c0e50164b2a7782fb7e3f5a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/29506b5a26ef0c448c0e50164b2a7782fb7e3f5a/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cae54d86d8ad0857c1ef960c06883ee92e0ba4c0", "url": "https://api.github.com/repos/rust-lang/rust/commits/cae54d86d8ad0857c1ef960c06883ee92e0ba4c0", "html_url": "https://github.com/rust-lang/rust/commit/cae54d86d8ad0857c1ef960c06883ee92e0ba4c0"}, {"sha": "8e0a7d8c08f04d39573777d8a3ec012696a45eac", "url": "https://api.github.com/repos/rust-lang/rust/commits/8e0a7d8c08f04d39573777d8a3ec012696a45eac", "html_url": "https://github.com/rust-lang/rust/commit/8e0a7d8c08f04d39573777d8a3ec012696a45eac"}], "stats": {"total": 18, "additions": 13, "deletions": 5}, "files": [{"sha": "732cc75e5f0d19c4e0ed0e2bf9b9a211c876b979", "filename": "crates/ide/src/hover.rs", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/29506b5a26ef0c448c0e50164b2a7782fb7e3f5a/crates%2Fide%2Fsrc%2Fhover.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29506b5a26ef0c448c0e50164b2a7782fb7e3f5a/crates%2Fide%2Fsrc%2Fhover.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fhover.rs?ref=29506b5a26ef0c448c0e50164b2a7782fb7e3f5a", "patch": "@@ -93,7 +93,15 @@ pub(crate) fn hover(\n                 }\n             }\n         })?;\n-        return hover_type_info(&sema, config, expr).map(|it| RangeInfo::new(range, it));\n+        return hover_type_info(&sema, config, &expr).map(|it| {\n+            RangeInfo::new(\n+                match expr {\n+                    Either::Left(it) => it.syntax().text_range(),\n+                    Either::Right(it) => it.syntax().text_range(),\n+                },\n+                it,\n+            )\n+        });\n     };\n \n     let token = pick_best_token(file.token_at_offset(offset), |kind| match kind {\n@@ -207,24 +215,24 @@ pub(crate) fn hover(\n         }\n     };\n \n-    let res = hover_type_info(&sema, config, expr_or_pat)?;\n+    let res = hover_type_info(&sema, config, &expr_or_pat)?;\n     let range = sema.original_range(&node).range;\n     Some(RangeInfo::new(range, res))\n }\n \n fn hover_type_info(\n     sema: &Semantics<RootDatabase>,\n     config: &HoverConfig,\n-    expr_or_pat: Either<ast::Expr, ast::Pat>,\n+    expr_or_pat: &Either<ast::Expr, ast::Pat>,\n ) -> Option<HoverResult> {\n-    let (ty, coerced) = match &expr_or_pat {\n+    let (ty, coerced) = match expr_or_pat {\n         Either::Left(expr) => sema.type_of_expr_with_coercion(expr)?,\n         Either::Right(pat) => sema.type_of_pat_with_coercion(pat)?,\n     };\n \n     let mut res = HoverResult::default();\n     res.markup = if coerced {\n-        let uncoerced_ty = match &expr_or_pat {\n+        let uncoerced_ty = match expr_or_pat {\n             Either::Left(expr) => sema.type_of_expr(expr)?,\n             Either::Right(pat) => sema.type_of_pat(pat)?,\n         };"}]}