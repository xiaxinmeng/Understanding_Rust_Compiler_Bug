{"sha": "ee49e95e787b353c0697862ca2d703c7b9480d25", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVlNDllOTVlNzg3YjM1M2MwNjk3ODYyY2EyZDcwM2M3Yjk0ODBkMjU=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-02-17T21:58:24Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-02-18T08:34:08Z"}, "message": "doc comments for layout components", "tree": {"sha": "8d80b8160d071c0828b9f1fe9c89f8544b0ed47e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8d80b8160d071c0828b9f1fe9c89f8544b0ed47e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ee49e95e787b353c0697862ca2d703c7b9480d25", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ee49e95e787b353c0697862ca2d703c7b9480d25", "html_url": "https://github.com/rust-lang/rust/commit/ee49e95e787b353c0697862ca2d703c7b9480d25", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ee49e95e787b353c0697862ca2d703c7b9480d25/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3c4590facc2c48f2ca42e074a1902c2d1f162a2f", "url": "https://api.github.com/repos/rust-lang/rust/commits/3c4590facc2c48f2ca42e074a1902c2d1f162a2f", "html_url": "https://github.com/rust-lang/rust/commit/3c4590facc2c48f2ca42e074a1902c2d1f162a2f"}], "stats": {"total": 20, "additions": 19, "deletions": 1}, "files": [{"sha": "447487e4fb279d93a165c375a709eb4d92a20e5c", "filename": "src/librustc_target/abi/mod.rs", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/ee49e95e787b353c0697862ca2d703c7b9480d25/src%2Flibrustc_target%2Fabi%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee49e95e787b353c0697862ca2d703c7b9480d25/src%2Flibrustc_target%2Fabi%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fabi%2Fmod.rs?ref=ee49e95e787b353c0697862ca2d703c7b9480d25", "patch": "@@ -871,8 +871,26 @@ impl Niche {\n \n #[derive(PartialEq, Eq, Hash, Debug, HashStable_Generic)]\n pub struct LayoutDetails {\n-    pub variants: Variants,\n+    /// Says where the fields are located.\n+    /// Primitives and fieldless enums appear as unions without fields.\n     pub fields: FieldPlacement,\n+\n+    /// Encodes information about multi-variant layouts.\n+    /// Even with `Multiple` variants, a layout can still have fields! Those are then\n+    /// shared between all variants. One of them will be the discriminant,\n+    /// but e.g. generators can have more.\n+    ///\n+    /// A layout-guided recursive descent must first look at all the fields,\n+    /// and only then check if this is a multi-variant layout and if so, proceed\n+    /// with the active variant.\n+    pub variants: Variants,\n+\n+    /// The `abi` defines how this data is passed between functions, and it defines\n+    /// value restrictions via `valid_range`.\n+    ///\n+    /// Note that this is entirely orthogonal to the recursive structrue defined by\n+    /// `variants` and `fields`; for example, `ManuallyDrop<Result<isize, isize>>` has\n+    /// `Abi::ScalarPair`! So, having a non-`Aggregate` `abi` should not stop a recursive descent.\n     pub abi: Abi,\n \n     /// The leaf scalar with the largest number of invalid values"}]}