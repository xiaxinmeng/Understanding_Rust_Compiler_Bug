{"sha": "db900d4ef35ac185811d5694b08b86cbc8412bea", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRiOTAwZDRlZjM1YWMxODU4MTFkNTY5NGIwOGI4NmNiYzg0MTJiZWE=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2020-07-01T14:42:58Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-07-01T14:42:58Z"}, "message": "Rollup merge of #73828 - nop:fix/parameter-name-help, r=estebank\n\nFix wording for anonymous parameter name help\n\n```\n --> exercises/functions/functions2.rs:8:15\n  |\n8 | fn call_me(num) {\n  |               ^ expected one of `:`, `@`, or `|`\n  |\n  = note: anonymous parameters are removed in the 2018 edition (see RFC 1685)\nhelp: if this is a `self` type, give it a parameter name\n  |\n8 | fn call_me(self: num) {\n  |            ^^^^^^^^^\nhelp: if this was a parameter name, give it a type\n  |\n8 | fn call_me(num: TypeName) {\n  |            ^^^^^^^^^^^^^\nhelp: if this is a type, explicitly ignore the parameter name\n  |\n8 | fn call_me(_: num) {\n  |\n```\nThis commit changes \"if this was a parameter name\" to \"if this is a parameter name\" to match the wording of similar errors.", "tree": {"sha": "7d564148b2b8da76ee00538cc794f4b449572cb3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7d564148b2b8da76ee00538cc794f4b449572cb3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/db900d4ef35ac185811d5694b08b86cbc8412bea", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe/KDyCRBK7hj4Ov3rIwAAdHIIAANYO8yBAFZqz0x55Wa1Y8BR\nnzZqZlulrSat3DwNZF4gAuo5VFPSH4FYvwhvk6m4XcCpPoISmnTM2G9Hyrc7oGOv\nN0JLKjz1meILvvQ3cre6Sw5DTwnofCE5gV4bvrRkk03R7kBKtGZ0rwgyMAC8ueuN\n4XE61beaOyakUGtTS419z/ZE1dge3lVD4eNcgy90VQRRz8OgU1zD2JJbcSzQNvcq\nhlIpaLukosZkYok8kJPqP55Ln7+9c0ExboE55eGztjWxnV/sR9LMFBdL398tc2zL\nZ1freXR8vfTm3RuIWjIho9fKtOUH2dMVWjJcADrS7dHaHqbxaUYoY6dvuPSnH0o=\n=l3Dl\n-----END PGP SIGNATURE-----\n", "payload": "tree 7d564148b2b8da76ee00538cc794f4b449572cb3\nparent f213957c2e01067ab20ba74f71371093ed0b43bb\nparent 7231e575461d1246c247b2ac3e97c1adcab49737\nauthor Manish Goregaokar <manishsmail@gmail.com> 1593614578 -0700\ncommitter GitHub <noreply@github.com> 1593614578 -0700\n\nRollup merge of #73828 - nop:fix/parameter-name-help, r=estebank\n\nFix wording for anonymous parameter name help\n\n```\n --> exercises/functions/functions2.rs:8:15\n  |\n8 | fn call_me(num) {\n  |               ^ expected one of `:`, `@`, or `|`\n  |\n  = note: anonymous parameters are removed in the 2018 edition (see RFC 1685)\nhelp: if this is a `self` type, give it a parameter name\n  |\n8 | fn call_me(self: num) {\n  |            ^^^^^^^^^\nhelp: if this was a parameter name, give it a type\n  |\n8 | fn call_me(num: TypeName) {\n  |            ^^^^^^^^^^^^^\nhelp: if this is a type, explicitly ignore the parameter name\n  |\n8 | fn call_me(_: num) {\n  |\n```\nThis commit changes \"if this was a parameter name\" to \"if this is a parameter name\" to match the wording of similar errors.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/db900d4ef35ac185811d5694b08b86cbc8412bea", "html_url": "https://github.com/rust-lang/rust/commit/db900d4ef35ac185811d5694b08b86cbc8412bea", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/db900d4ef35ac185811d5694b08b86cbc8412bea/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f213957c2e01067ab20ba74f71371093ed0b43bb", "url": "https://api.github.com/repos/rust-lang/rust/commits/f213957c2e01067ab20ba74f71371093ed0b43bb", "html_url": "https://github.com/rust-lang/rust/commit/f213957c2e01067ab20ba74f71371093ed0b43bb"}, {"sha": "7231e575461d1246c247b2ac3e97c1adcab49737", "url": "https://api.github.com/repos/rust-lang/rust/commits/7231e575461d1246c247b2ac3e97c1adcab49737", "html_url": "https://github.com/rust-lang/rust/commit/7231e575461d1246c247b2ac3e97c1adcab49737"}], "stats": {"total": 22, "additions": 11, "deletions": 11}, "files": [{"sha": "e27bbc532cfc4da26b70b0e8268cf65d5096c5ab", "filename": "src/librustc_parse/parser/diagnostics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/db900d4ef35ac185811d5694b08b86cbc8412bea/src%2Flibrustc_parse%2Fparser%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db900d4ef35ac185811d5694b08b86cbc8412bea/src%2Flibrustc_parse%2Fparser%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fdiagnostics.rs?ref=db900d4ef35ac185811d5694b08b86cbc8412bea", "patch": "@@ -1415,7 +1415,7 @@ impl<'a> Parser<'a> {\n                 if self.token != token::Lt {\n                     err.span_suggestion(\n                         pat.span,\n-                        \"if this was a parameter name, give it a type\",\n+                        \"if this is a parameter name, give it a type\",\n                         format!(\"{}: TypeName\", ident),\n                         Applicability::HasPlaceholders,\n                     );"}, {"sha": "840294db0830a043138c337386bf15a8dacc223a", "filename": "src/test/ui/anon-params/anon-params-denied-2018.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/db900d4ef35ac185811d5694b08b86cbc8412bea/src%2Ftest%2Fui%2Fanon-params%2Fanon-params-denied-2018.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/db900d4ef35ac185811d5694b08b86cbc8412bea/src%2Ftest%2Fui%2Fanon-params%2Fanon-params-denied-2018.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fanon-params%2Fanon-params-denied-2018.stderr?ref=db900d4ef35ac185811d5694b08b86cbc8412bea", "patch": "@@ -9,7 +9,7 @@ help: if this is a `self` type, give it a parameter name\n    |\n LL |     fn foo(self: i32);\n    |            ^^^^^^^^^\n-help: if this was a parameter name, give it a type\n+help: if this is a parameter name, give it a type\n    |\n LL |     fn foo(i32: TypeName);\n    |            ^^^^^^^^^^^^^\n@@ -29,7 +29,7 @@ help: if this is a `self` type, give it a parameter name\n    |\n LL |     fn bar_with_default_impl(self: String, String) {}\n    |                              ^^^^^^^^^^^^\n-help: if this was a parameter name, give it a type\n+help: if this is a parameter name, give it a type\n    |\n LL |     fn bar_with_default_impl(String: TypeName, String) {}\n    |                              ^^^^^^^^^^^^^^^^\n@@ -45,7 +45,7 @@ LL |     fn bar_with_default_impl(String, String) {}\n    |                                            ^ expected one of `:`, `@`, or `|`\n    |\n    = note: anonymous parameters are removed in the 2018 edition (see RFC 1685)\n-help: if this was a parameter name, give it a type\n+help: if this is a parameter name, give it a type\n    |\n LL |     fn bar_with_default_impl(String, String: TypeName) {}\n    |                                      ^^^^^^^^^^^^^^^^\n@@ -61,7 +61,7 @@ LL |     fn baz(a:usize, b, c: usize) -> usize {\n    |                      ^ expected one of `:`, `@`, or `|`\n    |\n    = note: anonymous parameters are removed in the 2018 edition (see RFC 1685)\n-help: if this was a parameter name, give it a type\n+help: if this is a parameter name, give it a type\n    |\n LL |     fn baz(a:usize, b: TypeName, c: usize) -> usize {\n    |                     ^^^^^^^^^^^"}, {"sha": "5c4272504e061055fcd5c991e26e5d864404e1f5", "filename": "src/test/ui/parser/inverted-parameters.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/db900d4ef35ac185811d5694b08b86cbc8412bea/src%2Ftest%2Fui%2Fparser%2Finverted-parameters.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db900d4ef35ac185811d5694b08b86cbc8412bea/src%2Ftest%2Fui%2Fparser%2Finverted-parameters.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Finverted-parameters.rs?ref=db900d4ef35ac185811d5694b08b86cbc8412bea", "patch": "@@ -20,7 +20,7 @@ fn pattern((i32, i32) (a, b)) {}\n \n fn fizz(i32) {}\n //~^ ERROR expected one of `:`, `@`\n-//~| HELP if this was a parameter name, give it a type\n+//~| HELP if this is a parameter name, give it a type\n //~| HELP if this is a `self` type, give it a parameter name\n //~| HELP if this is a type, explicitly ignore the parameter name\n "}, {"sha": "ae180af93e37394ce0bab605db1cbe10ac18848d", "filename": "src/test/ui/parser/inverted-parameters.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/db900d4ef35ac185811d5694b08b86cbc8412bea/src%2Ftest%2Fui%2Fparser%2Finverted-parameters.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/db900d4ef35ac185811d5694b08b86cbc8412bea/src%2Ftest%2Fui%2Fparser%2Finverted-parameters.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Finverted-parameters.stderr?ref=db900d4ef35ac185811d5694b08b86cbc8412bea", "patch": "@@ -39,7 +39,7 @@ help: if this is a `self` type, give it a parameter name\n    |\n LL | fn fizz(self: i32) {}\n    |         ^^^^^^^^^\n-help: if this was a parameter name, give it a type\n+help: if this is a parameter name, give it a type\n    |\n LL | fn fizz(i32: TypeName) {}\n    |         ^^^^^^^^^^^^^"}, {"sha": "bc3329dcbc23d91ee20c41bf013a119701fe3e4d", "filename": "src/test/ui/parser/omitted-arg-in-item-fn.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/db900d4ef35ac185811d5694b08b86cbc8412bea/src%2Ftest%2Fui%2Fparser%2Fomitted-arg-in-item-fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/db900d4ef35ac185811d5694b08b86cbc8412bea/src%2Ftest%2Fui%2Fparser%2Fomitted-arg-in-item-fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fomitted-arg-in-item-fn.stderr?ref=db900d4ef35ac185811d5694b08b86cbc8412bea", "patch": "@@ -9,7 +9,7 @@ help: if this is a `self` type, give it a parameter name\n    |\n LL | fn foo(self: x) {\n    |        ^^^^^^^\n-help: if this was a parameter name, give it a type\n+help: if this is a parameter name, give it a type\n    |\n LL | fn foo(x: TypeName) {\n    |        ^^^^^^^^^^^"}, {"sha": "5516d4a4c1c1cd0398b944edf5e2c69dfdb39e54", "filename": "src/test/ui/rfc-2565-param-attrs/param-attrs-2018.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/db900d4ef35ac185811d5694b08b86cbc8412bea/src%2Ftest%2Fui%2Frfc-2565-param-attrs%2Fparam-attrs-2018.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/db900d4ef35ac185811d5694b08b86cbc8412bea/src%2Ftest%2Fui%2Frfc-2565-param-attrs%2Fparam-attrs-2018.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2565-param-attrs%2Fparam-attrs-2018.stderr?ref=db900d4ef35ac185811d5694b08b86cbc8412bea", "patch": "@@ -9,7 +9,7 @@ help: if this is a `self` type, give it a parameter name\n    |\n LL | trait Trait2015 { fn foo(#[allow(C)] self: i32); }\n    |                                      ^^^^^^^^^\n-help: if this was a parameter name, give it a type\n+help: if this is a parameter name, give it a type\n    |\n LL | trait Trait2015 { fn foo(#[allow(C)] i32: TypeName); }\n    |                                      ^^^^^^^^^^^^^"}, {"sha": "40c3219bf27b0497437a099e04da6d315e77054d", "filename": "src/test/ui/span/issue-34264.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/db900d4ef35ac185811d5694b08b86cbc8412bea/src%2Ftest%2Fui%2Fspan%2Fissue-34264.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/db900d4ef35ac185811d5694b08b86cbc8412bea/src%2Ftest%2Fui%2Fspan%2Fissue-34264.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-34264.stderr?ref=db900d4ef35ac185811d5694b08b86cbc8412bea", "patch": "@@ -21,7 +21,7 @@ LL | fn foo(Option<i32>, String) {}\n    |                           ^ expected one of `:`, `@`, or `|`\n    |\n    = note: anonymous parameters are removed in the 2018 edition (see RFC 1685)\n-help: if this was a parameter name, give it a type\n+help: if this is a parameter name, give it a type\n    |\n LL | fn foo(Option<i32>, String: TypeName) {}\n    |                     ^^^^^^^^^^^^^^^^\n@@ -41,7 +41,7 @@ help: if this is a `self` type, give it a parameter name\n    |\n LL | fn bar(self: x, y: usize) {}\n    |        ^^^^^^^\n-help: if this was a parameter name, give it a type\n+help: if this is a parameter name, give it a type\n    |\n LL | fn bar(x: TypeName, y: usize) {}\n    |        ^^^^^^^^^^^"}]}