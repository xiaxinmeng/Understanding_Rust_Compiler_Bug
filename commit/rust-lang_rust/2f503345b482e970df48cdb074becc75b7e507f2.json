{"sha": "2f503345b482e970df48cdb074becc75b7e507f2", "node_id": "C_kwDOAAsO6NoAKDJmNTAzMzQ1YjQ4MmU5NzBkZjQ4Y2RiMDc0YmVjYzc1YjdlNTA3ZjI", "commit": {"author": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2023-04-19T20:10:35Z"}, "committer": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2023-04-20T15:00:41Z"}, "message": "Add Call terminator to SMIR", "tree": {"sha": "5f11c97897f18b36e4dc29c5ef2faaac3787becf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5f11c97897f18b36e4dc29c5ef2faaac3787becf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2f503345b482e970df48cdb074becc75b7e507f2", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEF0ntrgrd9qf9uuThgTGiTgx5768FAmRBU5oACgkQgTGiTgx5\n768+Fg/8C0gic0fZEMvMGZNKjD/bKMjqnGA0NPoSsrTCxUj8TSDcrd47yEJ38B9g\n+0JJs8hkqZtIfQqni4+93ASXKaucIYxhJKY7LIaGmiav379RKE9bNR4WngmeUujF\n0O3fZBivcHkEBtEMlPbJaXibsa9DarnN94TsRLfF+njK2q9Ljs/AT4/8rmULKXh4\nD4JVi2au9FDjYBQ+U6VHwJMjHVmmQ4nTMcTFgTGimBbV72/pJbFr8RIwbUgdoNyA\njNSHzZxAftnysS3of1q7Noslu+llKFkdIf2BzJEEBlVbt1jMLPshOQ686qoOGyV6\nxOEpfnlnHsXmK7X3q14JEwuDln4HiAIF80CPXHL1gsn5gLdyEprs7NatA1yAZjls\nS9e/qOvnWHNo/jfVQ8w7EIrsY2YrwdOMxuSdXSmCKhnudnNoRwaF19b/0DAVXugn\nZZCgIhPuxVR7eN8SrsaOYbSusVFTBaKbHKMUe9hOxO8smRbo/0RMaM8tSztfyi7G\nZOYsEo5PY0xv51/XqDipbLIc09QJ4a0JC6mj74RbZ1zV5jHgNSJYFst3/jFtyBLX\ntRzunJlb4hvpwg+TCF+rOUgnp0K2gKzD0cldmUYBWfvlX5hQYlIDxg//AFdzN8M/\nHSDPyafCbFdi+Jhw/DXasSV7CP0ZK/MJ7xsBrHUdyR5ArN1b0hs=\n=02lb\n-----END PGP SIGNATURE-----", "payload": "tree 5f11c97897f18b36e4dc29c5ef2faaac3787becf\nparent 7e23d180c1db42941b3bd32542a899e9eee7cbcb\nauthor Santiago Pastorino <spastorino@gmail.com> 1681935035 -0300\ncommitter Santiago Pastorino <spastorino@gmail.com> 1682002841 -0300\n\nAdd Call terminator to SMIR\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2f503345b482e970df48cdb074becc75b7e507f2", "html_url": "https://github.com/rust-lang/rust/commit/2f503345b482e970df48cdb074becc75b7e507f2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2f503345b482e970df48cdb074becc75b7e507f2/comments", "author": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7e23d180c1db42941b3bd32542a899e9eee7cbcb", "url": "https://api.github.com/repos/rust-lang/rust/commits/7e23d180c1db42941b3bd32542a899e9eee7cbcb", "html_url": "https://github.com/rust-lang/rust/commit/7e23d180c1db42941b3bd32542a899e9eee7cbcb"}], "stats": {"total": 42, "additions": 39, "deletions": 3}, "files": [{"sha": "09cb6fd22d5e6250e6b0530468365d55e8467d47", "filename": "compiler/rustc_smir/src/rustc_smir/mod.rs", "status": "modified", "additions": 21, "deletions": 1, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/2f503345b482e970df48cdb074becc75b7e507f2/compiler%2Frustc_smir%2Fsrc%2Frustc_smir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f503345b482e970df48cdb074becc75b7e507f2/compiler%2Frustc_smir%2Fsrc%2Frustc_smir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_smir%2Fsrc%2Frustc_smir%2Fmod.rs?ref=2f503345b482e970df48cdb074becc75b7e507f2", "patch": "@@ -128,6 +128,18 @@ fn rustc_place_to_place(place: &rustc_middle::mir::Place<'_>) -> stable_mir::mir\n     stable_mir::mir::Place { local: place.local.as_usize() }\n }\n \n+fn rustc_unwind_to_unwind(\n+    unwind: &rustc_middle::mir::UnwindAction,\n+) -> stable_mir::mir::UnwindAction {\n+    use rustc_middle::mir::UnwindAction;\n+    match unwind {\n+        UnwindAction::Continue => stable_mir::mir::UnwindAction::Continue,\n+        UnwindAction::Unreachable => stable_mir::mir::UnwindAction::Unreachable,\n+        UnwindAction::Terminate => stable_mir::mir::UnwindAction::Terminate,\n+        UnwindAction::Cleanup(bb) => stable_mir::mir::UnwindAction::Cleanup(bb.as_usize()),\n+    }\n+}\n+\n fn rustc_terminator_to_terminator(\n     terminator: &rustc_middle::mir::Terminator<'_>,\n ) -> stable_mir::mir::Terminator {\n@@ -151,7 +163,15 @@ fn rustc_terminator_to_terminator(\n         Return => Terminator::Return,\n         Unreachable => Terminator::Unreachable,\n         Drop { .. } => todo!(),\n-        Call { .. } => todo!(),\n+        Call { func, args, destination, target, unwind, from_hir_call: _, fn_span: _ } => {\n+            Terminator::Call {\n+                func: rustc_op_to_op(func),\n+                args: args.iter().map(|arg| rustc_op_to_op(arg)).collect(),\n+                destination: rustc_place_to_place(destination),\n+                target: target.map(|t| t.as_usize()),\n+                unwind: rustc_unwind_to_unwind(unwind),\n+            }\n+        }\n         Assert { .. } => todo!(),\n         Yield { .. } => todo!(),\n         GeneratorDrop => todo!(),"}, {"sha": "bd5e6b68a12fab04fb4123b46c60d3225969fa38", "filename": "compiler/rustc_smir/src/stable_mir/mir/body.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/2f503345b482e970df48cdb074becc75b7e507f2/compiler%2Frustc_smir%2Fsrc%2Fstable_mir%2Fmir%2Fbody.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f503345b482e970df48cdb074becc75b7e507f2/compiler%2Frustc_smir%2Fsrc%2Fstable_mir%2Fmir%2Fbody.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_smir%2Fsrc%2Fstable_mir%2Fmir%2Fbody.rs?ref=2f503345b482e970df48cdb074becc75b7e507f2", "patch": "@@ -33,7 +33,7 @@ pub enum Terminator {\n         args: Vec<Operand>,\n         destination: Place,\n         target: Option<usize>,\n-        cleanup: Option<usize>,\n+        unwind: UnwindAction,\n     },\n     Assert {\n         cond: Operand,\n@@ -44,6 +44,14 @@ pub enum Terminator {\n     },\n }\n \n+#[derive(Clone, Debug)]\n+pub enum UnwindAction {\n+    Continue,\n+    Unreachable,\n+    Terminate,\n+    Cleanup(usize),\n+}\n+\n #[derive(Clone, Debug)]\n pub enum Statement {\n     Assign(Place, Operand),"}, {"sha": "95f27efa7715c45cac3f8dd3110ad34eea36f07e", "filename": "tests/ui-fulldeps/stable-mir/crate-info.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/2f503345b482e970df48cdb074becc75b7e507f2/tests%2Fui-fulldeps%2Fstable-mir%2Fcrate-info.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f503345b482e970df48cdb074becc75b7e507f2/tests%2Fui-fulldeps%2Fstable-mir%2Fcrate-info.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-fulldeps%2Fstable-mir%2Fcrate-info.rs?ref=2f503345b482e970df48cdb074becc75b7e507f2", "patch": "@@ -33,7 +33,6 @@ fn test_stable_mir(tcx: TyCtxt<'_>) {\n \n     // Find items in the local crate.\n     let items = stable_mir::all_local_items();\n-    assert!(get_item(tcx, &items, (DefKind::Fn, \"foo_bar\")).is_some());\n     assert!(get_item(tcx, &items, (DefKind::Fn, \"foo::bar\")).is_some());\n \n     // Find the `std` crate.\n@@ -52,6 +51,15 @@ fn test_stable_mir(tcx: TyCtxt<'_>) {\n         stable_mir::mir::Terminator::Return => {}\n         other => panic!(\"{other:?}\"),\n     }\n+\n+    let foo_bar = get_item(tcx, &items, (DefKind::Fn, \"foo_bar\")).unwrap();\n+    let body = foo_bar.body();\n+    assert_eq!(body.blocks.len(), 4);\n+    let block = &body.blocks[0];\n+    match &block.terminator {\n+        stable_mir::mir::Terminator::Call { .. } => {}\n+        other => panic!(\"{other:?}\"),\n+    }\n }\n \n // Use internal API to find a function in a crate."}]}