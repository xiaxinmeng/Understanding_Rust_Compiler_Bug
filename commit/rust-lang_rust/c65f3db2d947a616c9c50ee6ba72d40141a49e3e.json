{"sha": "c65f3db2d947a616c9c50ee6ba72d40141a49e3e", "node_id": "C_kwDOAAsO6NoAKGM2NWYzZGIyZDk0N2E2MTZjOWM1MGVlNmJhNzJkNDAxNDFhNDllM2U", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2022-10-16T16:39:53Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2022-10-16T16:44:50Z"}, "message": "rustdoc: Do not expect `doc(primitive)` modules to always exist", "tree": {"sha": "02a62c3e0294a5bab08e64472b0c0fda37ea4f15", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/02a62c3e0294a5bab08e64472b0c0fda37ea4f15"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c65f3db2d947a616c9c50ee6ba72d40141a49e3e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c65f3db2d947a616c9c50ee6ba72d40141a49e3e", "html_url": "https://github.com/rust-lang/rust/commit/c65f3db2d947a616c9c50ee6ba72d40141a49e3e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c65f3db2d947a616c9c50ee6ba72d40141a49e3e/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8be3ce9056d17f822704b8994f60668adf180fe8", "url": "https://api.github.com/repos/rust-lang/rust/commits/8be3ce9056d17f822704b8994f60668adf180fe8", "html_url": "https://github.com/rust-lang/rust/commit/8be3ce9056d17f822704b8994f60668adf180fe8"}], "stats": {"total": 25, "additions": 20, "deletions": 5}, "files": [{"sha": "3513c13d522f1e06bf245ac2eee9b2ad37fdb8a4", "filename": "src/librustdoc/passes/collect_intra_doc_links.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/c65f3db2d947a616c9c50ee6ba72d40141a49e3e/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c65f3db2d947a616c9c50ee6ba72d40141a49e3e/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs?ref=c65f3db2d947a616c9c50ee6ba72d40141a49e3e", "patch": "@@ -80,10 +80,10 @@ impl Res {\n         }\n     }\n \n-    fn def_id(self, tcx: TyCtxt<'_>) -> DefId {\n+    fn def_id(self, tcx: TyCtxt<'_>) -> Option<DefId> {\n         match self {\n-            Res::Def(_, id) => id,\n-            Res::Primitive(prim) => *PrimitiveType::primitive_locations(tcx).get(&prim).unwrap(),\n+            Res::Def(_, id) => Some(id),\n+            Res::Primitive(prim) => PrimitiveType::primitive_locations(tcx).get(&prim).copied(),\n         }\n     }\n \n@@ -1127,10 +1127,10 @@ impl LinkCollector<'_, '_> {\n                     }\n                 }\n \n-                Some(ItemLink {\n+                res.def_id(self.cx.tcx).map(|page_id| ItemLink {\n                     link: ori_link.link.clone(),\n                     link_text: link_text.clone(),\n-                    page_id: res.def_id(self.cx.tcx),\n+                    page_id,\n                     fragment,\n                 })\n             }"}, {"sha": "e5eba1d8d48b41884039aaf2bfcee5a5b69acac3", "filename": "src/test/rustdoc/intra-doc/no-doc-primitive.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/c65f3db2d947a616c9c50ee6ba72d40141a49e3e/src%2Ftest%2Frustdoc%2Fintra-doc%2Fno-doc-primitive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c65f3db2d947a616c9c50ee6ba72d40141a49e3e/src%2Ftest%2Frustdoc%2Fintra-doc%2Fno-doc-primitive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fno-doc-primitive.rs?ref=c65f3db2d947a616c9c50ee6ba72d40141a49e3e", "patch": "@@ -0,0 +1,15 @@\n+// Crate tree without a `doc(primitive)` module for primitive type linked to by a doc link.\n+\n+#![deny(rustdoc::broken_intra_doc_links)]\n+#![feature(no_core, lang_items, rustc_attrs)]\n+#![no_core]\n+#![rustc_coherence_is_core]\n+#![crate_type = \"rlib\"]\n+\n+// @has no_doc_primitive/index.html\n+//! A [`char`] and its [`char::len_utf8`].\n+impl char {\n+    pub fn len_utf8(self) -> usize {\n+        42\n+    }\n+}"}]}