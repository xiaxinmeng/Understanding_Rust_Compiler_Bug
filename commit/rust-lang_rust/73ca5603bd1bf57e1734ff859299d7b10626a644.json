{"sha": "73ca5603bd1bf57e1734ff859299d7b10626a644", "node_id": "MDY6Q29tbWl0NzI0NzEyOjczY2E1NjAzYmQxYmY1N2UxNzM0ZmY4NTkyOTlkN2IxMDYyNmE2NDQ=", "commit": {"author": {"name": "Ben Blum", "email": "bblum@andrew.cmu.edu", "date": "2012-07-27T01:04:34Z"}, "committer": {"name": "Ben Blum", "email": "bblum@andrew.cmu.edu", "date": "2012-07-27T01:20:02Z"}, "message": "(comments only) Mention unsafe TLS destructor use (#3039)", "tree": {"sha": "995bdb572aea0662977a793b3da1887ce22a5717", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/995bdb572aea0662977a793b3da1887ce22a5717"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/73ca5603bd1bf57e1734ff859299d7b10626a644", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/73ca5603bd1bf57e1734ff859299d7b10626a644", "html_url": "https://github.com/rust-lang/rust/commit/73ca5603bd1bf57e1734ff859299d7b10626a644", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/73ca5603bd1bf57e1734ff859299d7b10626a644/comments", "author": {"login": "bblum", "id": 1820515, "node_id": "MDQ6VXNlcjE4MjA1MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1820515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bblum", "html_url": "https://github.com/bblum", "followers_url": "https://api.github.com/users/bblum/followers", "following_url": "https://api.github.com/users/bblum/following{/other_user}", "gists_url": "https://api.github.com/users/bblum/gists{/gist_id}", "starred_url": "https://api.github.com/users/bblum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bblum/subscriptions", "organizations_url": "https://api.github.com/users/bblum/orgs", "repos_url": "https://api.github.com/users/bblum/repos", "events_url": "https://api.github.com/users/bblum/events{/privacy}", "received_events_url": "https://api.github.com/users/bblum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bblum", "id": 1820515, "node_id": "MDQ6VXNlcjE4MjA1MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1820515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bblum", "html_url": "https://github.com/bblum", "followers_url": "https://api.github.com/users/bblum/followers", "following_url": "https://api.github.com/users/bblum/following{/other_user}", "gists_url": "https://api.github.com/users/bblum/gists{/gist_id}", "starred_url": "https://api.github.com/users/bblum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bblum/subscriptions", "organizations_url": "https://api.github.com/users/bblum/orgs", "repos_url": "https://api.github.com/users/bblum/repos", "events_url": "https://api.github.com/users/bblum/events{/privacy}", "received_events_url": "https://api.github.com/users/bblum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3c731df890e4354fbd30a7a4a21f0352ac6f3102", "url": "https://api.github.com/repos/rust-lang/rust/commits/3c731df890e4354fbd30a7a4a21f0352ac6f3102", "html_url": "https://github.com/rust-lang/rust/commit/3c731df890e4354fbd30a7a4a21f0352ac6f3102"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "158e16fa8986b4d388280002b559d3379d6b03ea", "filename": "src/libcore/task.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/73ca5603bd1bf57e1734ff859299d7b10626a644/src%2Flibcore%2Ftask.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73ca5603bd1bf57e1734ff859299d7b10626a644/src%2Flibcore%2Ftask.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftask.rs?ref=73ca5603bd1bf57e1734ff859299d7b10626a644", "patch": "@@ -945,8 +945,13 @@ fn spawn_raw(opts: task_opts, +f: fn~()) {\n  * task-local data slot (and use class destructors, not code inside the\n  * function, if specific teardown is needed). DO NOT use multiple\n  * instantiations of a single polymorphic function to index data of different\n- * types; arbitrary type coercion is possible this way. The interface is safe\n- * as long as all key functions are monomorphic.\n+ * types; arbitrary type coercion is possible this way.\n+ *\n+ * One other exception is that this global state can be used in a destructor\n+ * context to create a circular @-box reference, which will crash during task\n+ * failure (see issue #3039).\n+ *\n+ * These two cases aside, the interface is safe.\n  */\n type local_data_key<T: owned> = fn@(+@T);\n "}]}