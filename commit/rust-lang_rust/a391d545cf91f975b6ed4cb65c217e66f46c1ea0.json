{"sha": "a391d545cf91f975b6ed4cb65c217e66f46c1ea0", "node_id": "C_kwDOAAsO6NoAKGEzOTFkNTQ1Y2Y5MWY5NzViNmVkNGNiNjVjMjE3ZTY2ZjQ2YzFlYTA", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-12-18T10:28:06Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-12-18T10:28:06Z"}, "message": "Rollup merge of #92022 - woodenarrow:br_expected_bool, r=estebank\n\nEliminate duplicate codes of expected_found_bool\n\nThe function expected_found_bool is the same as ExpectedFound::new. So use ExpectedFound::new to replace expected_found_bool to eliminate duplicate codes.\n\n![image](https://user-images.githubusercontent.com/95843988/146486722-c910eccd-a36c-4dc5-8b36-214aab058e38.png)", "tree": {"sha": "5baf7b9a6950ba2c9840990b6b23376c026c33db", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5baf7b9a6950ba2c9840990b6b23376c026c33db"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a391d545cf91f975b6ed4cb65c217e66f46c1ea0", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhvbe3CRBK7hj4Ov3rIwAAClYIAEKTnzsqV9UV03uWnWw2IE5+\nByR2xhrMdC+TRrjPLhsXsDZiIi+lGDuNF7kenYyexcP74FW9EY2PyqbIZNKLVl6j\nBO2rfbP0KAEG7altIv7PKcgyGpIDbyaVpGepAsHBGzx6e688bgsUIJAqtIO+lB9K\n1emL3eoA5FadUcY9SBgB8o3kBAIIT3lu5dJuGJjFe1LZAfYgfVJqq7E+zXTkKcOA\ntlO7+5liE6+4ULjy3tRks5F5GTrRC4l6SWWLVnacQiKAfIiNc45O4Xmj50sncvdE\nTgdYf562PbkS6WMUSHlj4FdrEMz19gzCUEO/XVaPAAGDMhj1aeKWXLMLbFN/2Wo=\n=QJ6r\n-----END PGP SIGNATURE-----\n", "payload": "tree 5baf7b9a6950ba2c9840990b6b23376c026c33db\nparent fedb525e1177636a264d3932abdab8dcb3f59b9a\nparent a995462f9a33195caf447f257eb221e2b664bc1b\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1639823286 +0100\ncommitter GitHub <noreply@github.com> 1639823286 +0100\n\nRollup merge of #92022 - woodenarrow:br_expected_bool, r=estebank\n\nEliminate duplicate codes of expected_found_bool\n\nThe function expected_found_bool is the same as ExpectedFound::new. So use ExpectedFound::new to replace expected_found_bool to eliminate duplicate codes.\n\n![image](https://user-images.githubusercontent.com/95843988/146486722-c910eccd-a36c-4dc5-8b36-214aab058e38.png)\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a391d545cf91f975b6ed4cb65c217e66f46c1ea0", "html_url": "https://github.com/rust-lang/rust/commit/a391d545cf91f975b6ed4cb65c217e66f46c1ea0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a391d545cf91f975b6ed4cb65c217e66f46c1ea0/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fedb525e1177636a264d3932abdab8dcb3f59b9a", "url": "https://api.github.com/repos/rust-lang/rust/commits/fedb525e1177636a264d3932abdab8dcb3f59b9a", "html_url": "https://github.com/rust-lang/rust/commit/fedb525e1177636a264d3932abdab8dcb3f59b9a"}, {"sha": "a995462f9a33195caf447f257eb221e2b664bc1b", "url": "https://api.github.com/repos/rust-lang/rust/commits/a995462f9a33195caf447f257eb221e2b664bc1b", "html_url": "https://github.com/rust-lang/rust/commit/a995462f9a33195caf447f257eb221e2b664bc1b"}], "stats": {"total": 22, "additions": 7, "deletions": 15}, "files": [{"sha": "03596f7dfad6d25dc282e95e6ec26f64192a4de2", "filename": "compiler/rustc_infer/src/infer/combine.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a391d545cf91f975b6ed4cb65c217e66f46c1ea0/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fcombine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a391d545cf91f975b6ed4cb65c217e66f46c1ea0/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fcombine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fcombine.rs?ref=a391d545cf91f975b6ed4cb65c217e66f46c1ea0", "patch": "@@ -37,7 +37,7 @@ use crate::traits::{Obligation, PredicateObligations};\n use rustc_data_structures::sso::SsoHashMap;\n use rustc_hir::def_id::DefId;\n use rustc_middle::traits::ObligationCause;\n-use rustc_middle::ty::error::TypeError;\n+use rustc_middle::ty::error::{ExpectedFound, TypeError};\n use rustc_middle::ty::relate::{self, Relate, RelateResult, TypeRelation};\n use rustc_middle::ty::subst::SubstsRef;\n use rustc_middle::ty::{self, InferConst, ToPredicate, Ty, TyCtxt, TypeFoldable};\n@@ -790,23 +790,23 @@ pub fn const_unification_error<'tcx>(\n     a_is_expected: bool,\n     (a, b): (&'tcx ty::Const<'tcx>, &'tcx ty::Const<'tcx>),\n ) -> TypeError<'tcx> {\n-    TypeError::ConstMismatch(ty::relate::expected_found_bool(a_is_expected, a, b))\n+    TypeError::ConstMismatch(ExpectedFound::new(a_is_expected, a, b))\n }\n \n fn int_unification_error<'tcx>(\n     a_is_expected: bool,\n     v: (ty::IntVarValue, ty::IntVarValue),\n ) -> TypeError<'tcx> {\n     let (a, b) = v;\n-    TypeError::IntMismatch(ty::relate::expected_found_bool(a_is_expected, a, b))\n+    TypeError::IntMismatch(ExpectedFound::new(a_is_expected, a, b))\n }\n \n fn float_unification_error<'tcx>(\n     a_is_expected: bool,\n     v: (ty::FloatVarValue, ty::FloatVarValue),\n ) -> TypeError<'tcx> {\n     let (ty::FloatVarValue(a), ty::FloatVarValue(b)) = v;\n-    TypeError::FloatMismatch(ty::relate::expected_found_bool(a_is_expected, a, b))\n+    TypeError::FloatMismatch(ExpectedFound::new(a_is_expected, a, b))\n }\n \n struct ConstInferUnifier<'cx, 'tcx> {"}, {"sha": "aaef137c7e0f8fbe040efe2d02efd8cb38834099", "filename": "compiler/rustc_middle/src/ty/relate.rs", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/a391d545cf91f975b6ed4cb65c217e66f46c1ea0/compiler%2Frustc_middle%2Fsrc%2Fty%2Frelate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a391d545cf91f975b6ed4cb65c217e66f46c1ea0/compiler%2Frustc_middle%2Fsrc%2Fty%2Frelate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Frelate.rs?ref=a391d545cf91f975b6ed4cb65c217e66f46c1ea0", "patch": "@@ -836,13 +836,5 @@ pub fn expected_found<R, T>(relation: &mut R, a: T, b: T) -> ExpectedFound<T>\n where\n     R: TypeRelation<'tcx>,\n {\n-    expected_found_bool(relation.a_is_expected(), a, b)\n-}\n-\n-pub fn expected_found_bool<T>(a_is_expected: bool, a: T, b: T) -> ExpectedFound<T> {\n-    if a_is_expected {\n-        ExpectedFound { expected: a, found: b }\n-    } else {\n-        ExpectedFound { expected: b, found: a }\n-    }\n+    ExpectedFound::new(relation.a_is_expected(), a, b)\n }"}, {"sha": "096c4fcf472075ed92f463d408cfd651608c2883", "filename": "compiler/rustc_typeck/src/check/expr.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a391d545cf91f975b6ed4cb65c217e66f46c1ea0/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a391d545cf91f975b6ed4cb65c217e66f46c1ea0/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs?ref=a391d545cf91f975b6ed4cb65c217e66f46c1ea0", "patch": "@@ -36,8 +36,8 @@ use rustc_infer::infer;\n use rustc_infer::infer::type_variable::{TypeVariableOrigin, TypeVariableOriginKind};\n use rustc_infer::infer::InferOk;\n use rustc_middle::ty::adjustment::{Adjust, Adjustment, AllowTwoPhase};\n+use rustc_middle::ty::error::ExpectedFound;\n use rustc_middle::ty::error::TypeError::{FieldMisMatch, Sorts};\n-use rustc_middle::ty::relate::expected_found_bool;\n use rustc_middle::ty::subst::SubstsRef;\n use rustc_middle::ty::{self, AdtKind, Ty, TypeFoldable};\n use rustc_session::parse::feature_err;\n@@ -1493,7 +1493,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                                         &self.misc(base_expr.span),\n                                         adt_ty,\n                                         base_ty,\n-                                        Sorts(expected_found_bool(true, adt_ty, base_ty)),\n+                                        Sorts(ExpectedFound::new(true, adt_ty, base_ty)),\n                                     )\n                                     .emit();\n                             }"}]}