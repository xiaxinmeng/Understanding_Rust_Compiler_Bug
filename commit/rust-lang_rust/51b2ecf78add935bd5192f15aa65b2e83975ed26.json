{"sha": "51b2ecf78add935bd5192f15aa65b2e83975ed26", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUxYjJlY2Y3OGFkZDkzNWJkNTE5MmYxNWFhNjViMmU4Mzk3NWVkMjY=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2019-04-22T15:15:39Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2019-04-23T10:42:14Z"}, "message": "Tidy warn on ignored line length when lines are not too long", "tree": {"sha": "7686d2c541e7ed2a54f202a6219e4569fd996a3f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7686d2c541e7ed2a54f202a6219e4569fd996a3f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/51b2ecf78add935bd5192f15aa65b2e83975ed26", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/51b2ecf78add935bd5192f15aa65b2e83975ed26", "html_url": "https://github.com/rust-lang/rust/commit/51b2ecf78add935bd5192f15aa65b2e83975ed26", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/51b2ecf78add935bd5192f15aa65b2e83975ed26/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "33f0a3765d6ac523afefa3922d56bcb519edf3c3", "url": "https://api.github.com/repos/rust-lang/rust/commits/33f0a3765d6ac523afefa3922d56bcb519edf3c3", "html_url": "https://github.com/rust-lang/rust/commit/33f0a3765d6ac523afefa3922d56bcb519edf3c3"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "b373725617c2b5c7fb8fd38dc2739dcb1db23b4d", "filename": "src/tools/tidy/src/style.rs", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/51b2ecf78add935bd5192f15aa65b2e83975ed26/src%2Ftools%2Ftidy%2Fsrc%2Fstyle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51b2ecf78add935bd5192f15aa65b2e83975ed26/src%2Ftools%2Ftidy%2Fsrc%2Fstyle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fstyle.rs?ref=51b2ecf78add935bd5192f15aa65b2e83975ed26", "patch": "@@ -10,7 +10,7 @@\n //! * No unexplained ` ```ignore ` or ` ```rust,ignore ` doc tests.\n //!\n //! A number of these checks can be opted-out of with various directives like\n-//! `// ignore-tidy-linelength`.\n+//! `// ignore-tidy-copyright`.\n \n use std::fs::File;\n use std::io::prelude::*;\n@@ -119,13 +119,16 @@ pub fn check(path: &Path, bad: &mut bool) {\n         let skip_copyright = contains_ignore_directive(&contents, \"copyright\");\n         let mut leading_new_lines = false;\n         let mut trailing_new_lines = 0;\n+        let mut contained_long_line = false;\n         for (i, line) in contents.split('\\n').enumerate() {\n             let mut err = |msg: &str| {\n                 tidy_error!(bad, \"{}:{}: {}\", file.display(), i + 1, msg);\n             };\n-            if !skip_length && line.chars().count() > COLS\n-                && !long_line_is_ok(line) {\n+            if line.chars().count() > COLS && !long_line_is_ok(line) {\n+                contained_long_line = true;\n+                if !skip_length {\n                     err(&format!(\"line longer than {} chars\", COLS));\n+                }\n             }\n             if !skip_tab && line.contains('\\t') {\n                 err(\"tab character\");\n@@ -174,5 +177,8 @@ pub fn check(path: &Path, bad: &mut bool) {\n             1 => {}\n             n => tidy_error!(bad, \"{}: too many trailing newlines ({})\", file.display(), n),\n         };\n+        if !contained_long_line && skip_length {\n+            tidy_error!(bad, \"{}: ignoring line length unnecessarily\", file.display());\n+        }\n     })\n }"}]}