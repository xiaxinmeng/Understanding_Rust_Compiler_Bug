{"sha": "19d9a147bef8dfaf5c718c0cb4008accd86e7a5e", "node_id": "C_kwDOAAsO6NoAKDE5ZDlhMTQ3YmVmOGRmYWY1YzcxOGMwY2I0MDA4YWNjZDg2ZTdhNWU", "commit": {"author": {"name": "Jubilee", "email": "46493976+workingjubilee@users.noreply.github.com", "date": "2021-10-04T20:58:08Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-10-04T20:58:08Z"}, "message": "Rollup merge of #88452 - xu-cheng:vecdeque-from-array, r=m-ou-se\n\nVecDeque: improve performance for From<[T; N]>\n\nCreate `VecDeque` directly from the array instead of inserting items one-by-one.\n\nBenchmark\n```\n./x.py bench library/alloc --test-args vec_deque::bench_from_array_1000\n```\n\n* Before\n```\ntest vec_deque::bench_from_array_1000                    ... bench:       3,991 ns/iter (+/- 717)\n```\n\n* After\n```\ntest vec_deque::bench_from_array_1000                    ... bench:         268 ns/iter (+/- 37)\n```", "tree": {"sha": "267098e6b130065344aacf2d9f744cd27ead12a5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/267098e6b130065344aacf2d9f744cd27ead12a5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/19d9a147bef8dfaf5c718c0cb4008accd86e7a5e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhW2rgCRBK7hj4Ov3rIwAAmeQIAHgj2zdas12LPRWubD+KYKqq\nce2xdeKY9Laqx+KQJ7TXMNWxYdEvTvu8xIk5a1oWm0sW5zw+BqyQ51hCjrRiuuTN\nxXF+dPddNy/huXGMZsxql7T7T94zmB3plrttMRzUgRLqSH66yM/MCFuSMXMpwsLZ\n/x+TDxMqk5COYSaglJZEW3AxgmMoQARpLNg4mlyDUEJZ4ruzb9/LMwyY0o5gBkdP\ns7cerxQ83EHh6sj8YVFmJ2e+i8DJn3pvTryQEmny//5H/z4VkgSHtS55Q5rjkVIc\nqdDsIlXCVXSSm9wZioBws5JiDQ67xiz+GgydmB7W2GaLqSYMgf1WqC/ibtPhQeA=\n=odYl\n-----END PGP SIGNATURE-----\n", "payload": "tree 267098e6b130065344aacf2d9f744cd27ead12a5\nparent a2c6075dfff58626afc9ab57c2c6b284c5612ec7\nparent c3cff0a75412f18971a325640a5dd7bd67b28972\nauthor Jubilee <46493976+workingjubilee@users.noreply.github.com> 1633381088 -0700\ncommitter GitHub <noreply@github.com> 1633381088 -0700\n\nRollup merge of #88452 - xu-cheng:vecdeque-from-array, r=m-ou-se\n\nVecDeque: improve performance for From<[T; N]>\n\nCreate `VecDeque` directly from the array instead of inserting items one-by-one.\n\nBenchmark\n```\n./x.py bench library/alloc --test-args vec_deque::bench_from_array_1000\n```\n\n* Before\n```\ntest vec_deque::bench_from_array_1000                    ... bench:       3,991 ns/iter (+/- 717)\n```\n\n* After\n```\ntest vec_deque::bench_from_array_1000                    ... bench:         268 ns/iter (+/- 37)\n```\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/19d9a147bef8dfaf5c718c0cb4008accd86e7a5e", "html_url": "https://github.com/rust-lang/rust/commit/19d9a147bef8dfaf5c718c0cb4008accd86e7a5e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/19d9a147bef8dfaf5c718c0cb4008accd86e7a5e/comments", "author": {"login": "workingjubilee", "id": 46493976, "node_id": "MDQ6VXNlcjQ2NDkzOTc2", "avatar_url": "https://avatars.githubusercontent.com/u/46493976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/workingjubilee", "html_url": "https://github.com/workingjubilee", "followers_url": "https://api.github.com/users/workingjubilee/followers", "following_url": "https://api.github.com/users/workingjubilee/following{/other_user}", "gists_url": "https://api.github.com/users/workingjubilee/gists{/gist_id}", "starred_url": "https://api.github.com/users/workingjubilee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/workingjubilee/subscriptions", "organizations_url": "https://api.github.com/users/workingjubilee/orgs", "repos_url": "https://api.github.com/users/workingjubilee/repos", "events_url": "https://api.github.com/users/workingjubilee/events{/privacy}", "received_events_url": "https://api.github.com/users/workingjubilee/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a2c6075dfff58626afc9ab57c2c6b284c5612ec7", "url": "https://api.github.com/repos/rust-lang/rust/commits/a2c6075dfff58626afc9ab57c2c6b284c5612ec7", "html_url": "https://github.com/rust-lang/rust/commit/a2c6075dfff58626afc9ab57c2c6b284c5612ec7"}, {"sha": "c3cff0a75412f18971a325640a5dd7bd67b28972", "url": "https://api.github.com/repos/rust-lang/rust/commits/c3cff0a75412f18971a325640a5dd7bd67b28972", "html_url": "https://github.com/rust-lang/rust/commit/c3cff0a75412f18971a325640a5dd7bd67b28972"}], "stats": {"total": 57, "additions": 56, "deletions": 1}, "files": [{"sha": "404cfa6addb73b271bf42a90889b3535252a6c82", "filename": "library/alloc/benches/vec_deque.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/19d9a147bef8dfaf5c718c0cb4008accd86e7a5e/library%2Falloc%2Fbenches%2Fvec_deque.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19d9a147bef8dfaf5c718c0cb4008accd86e7a5e/library%2Falloc%2Fbenches%2Fvec_deque.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fbenches%2Fvec_deque.rs?ref=19d9a147bef8dfaf5c718c0cb4008accd86e7a5e", "patch": "@@ -52,3 +52,18 @@ fn bench_try_fold(b: &mut Bencher) {\n \n     b.iter(|| black_box(ring.iter().try_fold(0, |a, b| Some(a + b))))\n }\n+\n+#[bench]\n+fn bench_from_array_1000(b: &mut Bencher) {\n+    const N: usize = 1000;\n+    let mut array: [usize; N] = [0; N];\n+\n+    for i in 0..N {\n+        array[i] = i;\n+    }\n+\n+    b.iter(|| {\n+        let deq: VecDeque<_> = array.into();\n+        black_box(deq);\n+    })\n+}"}, {"sha": "007548ad1ab58d94dc7b7308223a65e48705d442", "filename": "library/alloc/src/collections/vec_deque/mod.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/19d9a147bef8dfaf5c718c0cb4008accd86e7a5e/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19d9a147bef8dfaf5c718c0cb4008accd86e7a5e/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque%2Fmod.rs?ref=19d9a147bef8dfaf5c718c0cb4008accd86e7a5e", "patch": "@@ -3004,6 +3004,16 @@ impl<T, const N: usize> From<[T; N]> for VecDeque<T> {\n     /// assert_eq!(deq1, deq2);\n     /// ```\n     fn from(arr: [T; N]) -> Self {\n-        core::array::IntoIter::new(arr).collect()\n+        let mut deq = VecDeque::with_capacity(N);\n+        let arr = ManuallyDrop::new(arr);\n+        if mem::size_of::<T>() != 0 {\n+            // SAFETY: VecDeque::with_capacity ensures that there is enough capacity.\n+            unsafe {\n+                ptr::copy_nonoverlapping(arr.as_ptr(), deq.ptr(), N);\n+            }\n+        }\n+        deq.tail = 0;\n+        deq.head = N;\n+        deq\n     }\n }"}, {"sha": "2be83f68f017f280b50a910b05987c924e161d58", "filename": "library/alloc/src/collections/vec_deque/tests.rs", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/19d9a147bef8dfaf5c718c0cb4008accd86e7a5e/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19d9a147bef8dfaf5c718c0cb4008accd86e7a5e/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque%2Ftests.rs?ref=19d9a147bef8dfaf5c718c0cb4008accd86e7a5e", "patch": "@@ -507,6 +507,36 @@ fn test_from_vec_zst_overflow() {\n     assert_eq!(vd.len(), vec.len());\n }\n \n+#[test]\n+fn test_from_array() {\n+    fn test<const N: usize>() {\n+        let mut array: [usize; N] = [0; N];\n+\n+        for i in 0..N {\n+            array[i] = i;\n+        }\n+\n+        let deq: VecDeque<_> = array.into();\n+\n+        for i in 0..N {\n+            assert_eq!(deq[i], i);\n+        }\n+\n+        assert!(deq.cap().is_power_of_two());\n+        assert_eq!(deq.len(), N);\n+    }\n+    test::<0>();\n+    test::<1>();\n+    test::<2>();\n+    test::<32>();\n+    test::<35>();\n+\n+    let array = [(); MAXIMUM_ZST_CAPACITY - 1];\n+    let deq = VecDeque::from(array);\n+    assert!(deq.cap().is_power_of_two());\n+    assert_eq!(deq.len(), MAXIMUM_ZST_CAPACITY - 1);\n+}\n+\n #[test]\n fn test_vec_from_vecdeque() {\n     use crate::vec::Vec;"}]}