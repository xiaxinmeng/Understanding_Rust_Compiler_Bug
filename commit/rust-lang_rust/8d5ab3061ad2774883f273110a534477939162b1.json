{"sha": "8d5ab3061ad2774883f273110a534477939162b1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhkNWFiMzA2MWFkMjc3NDg4M2YyNzMxMTBhNTM0NDc3OTM5MTYyYjE=", "commit": {"author": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2013-03-15T07:33:12Z"}, "committer": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2013-03-20T14:53:23Z"}, "message": "core: add char_len method", "tree": {"sha": "2e8393489694bff985bb6c3b499c987a2affe96e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2e8393489694bff985bb6c3b499c987a2affe96e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8d5ab3061ad2774883f273110a534477939162b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8d5ab3061ad2774883f273110a534477939162b1", "html_url": "https://github.com/rust-lang/rust/commit/8d5ab3061ad2774883f273110a534477939162b1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8d5ab3061ad2774883f273110a534477939162b1/comments", "author": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4b0f29a4669491348e963f86de7f6ccc9d666e60", "url": "https://api.github.com/repos/rust-lang/rust/commits/4b0f29a4669491348e963f86de7f6ccc9d666e60", "html_url": "https://github.com/rust-lang/rust/commit/4b0f29a4669491348e963f86de7f6ccc9d666e60"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "62dbf962d9e2bbfb222f95cdefcadf30ed596259", "filename": "src/libcore/str.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8d5ab3061ad2774883f273110a534477939162b1/src%2Flibcore%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d5ab3061ad2774883f273110a534477939162b1/src%2Flibcore%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr.rs?ref=8d5ab3061ad2774883f273110a534477939162b1", "patch": "@@ -2263,6 +2263,7 @@ pub trait StrSlice {\n     pure fn is_whitespace(&self) -> bool;\n     pure fn is_alphanumeric(&self) -> bool;\n     pure fn len(&self) -> uint;\n+    pure fn char_len(&self) -> uint;\n     pure fn slice(&self, begin: uint, end: uint) -> ~str;\n     pure fn split(&self, sepfn: &fn(char) -> bool) -> ~[~str];\n     pure fn split_char(&self, sep: char) -> ~[~str];\n@@ -2343,9 +2344,12 @@ impl StrSlice for &'self str {\n      */\n     #[inline]\n     pure fn is_alphanumeric(&self) -> bool { is_alphanumeric(*self) }\n-    #[inline]\n     /// Returns the size in bytes not counting the null terminator\n+    #[inline]\n     pure fn len(&self) -> uint { len(*self) }\n+    /// Returns the number of characters that a string holds\n+    #[inline]\n+    pure fn char_len(&self) -> uint { char_len(*self) }\n     /**\n      * Returns a slice of the given string from the byte range\n      * [`begin`..`end`)"}]}