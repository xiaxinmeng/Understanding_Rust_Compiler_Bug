{"sha": "97ec417e74485526992d1abf5fe709d434834898", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk3ZWM0MTdlNzQ0ODU1MjY5OTJkMWFiZjVmZTcwOWQ0MzQ4MzQ4OTg=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seiichi.uchida@dena.com", "date": "2018-04-05T04:27:42Z"}, "committer": {"name": "Seiichi Uchida", "email": "seiichi.uchida@dena.com", "date": "2018-04-05T04:27:42Z"}, "message": "Add trailing comma when using mixed layout with block indent", "tree": {"sha": "11df587a50a62b0d18707d6123afa30d3107e42d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/11df587a50a62b0d18707d6123afa30d3107e42d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/97ec417e74485526992d1abf5fe709d434834898", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/97ec417e74485526992d1abf5fe709d434834898", "html_url": "https://github.com/rust-lang/rust/commit/97ec417e74485526992d1abf5fe709d434834898", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/97ec417e74485526992d1abf5fe709d434834898/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "636de8313d27d459b36a208326f9907b41da1c16", "url": "https://api.github.com/repos/rust-lang/rust/commits/636de8313d27d459b36a208326f9907b41da1c16", "html_url": "https://github.com/rust-lang/rust/commit/636de8313d27d459b36a208326f9907b41da1c16"}], "stats": {"total": 11, "additions": 6, "deletions": 5}, "files": [{"sha": "d0e9863f2f45df5383357747b4c2befc11a97f2a", "filename": "src/lists.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/97ec417e74485526992d1abf5fe709d434834898/src%2Flists.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97ec417e74485526992d1abf5fe709d434834898/src%2Flists.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flists.rs?ref=97ec417e74485526992d1abf5fe709d434834898", "patch": "@@ -172,11 +172,10 @@ where\n \n     let limit = match tactic {\n         _ if pre_line_comments => return DefinitiveListTactic::Vertical,\n-        ListTactic::Mixed => return DefinitiveListTactic::Mixed,\n         ListTactic::Horizontal => return DefinitiveListTactic::Horizontal,\n         ListTactic::Vertical => return DefinitiveListTactic::Vertical,\n         ListTactic::LimitedHorizontalVertical(limit) => ::std::cmp::min(width, limit),\n-        ListTactic::HorizontalVertical => width,\n+        ListTactic::Mixed | ListTactic::HorizontalVertical => width,\n     };\n \n     let (sep_count, total_width) = calculate_width(items.clone());\n@@ -188,7 +187,10 @@ where\n     {\n         DefinitiveListTactic::Horizontal\n     } else {\n-        DefinitiveListTactic::Vertical\n+        match tactic {\n+            ListTactic::Mixed => DefinitiveListTactic::Mixed,\n+            _ => DefinitiveListTactic::Vertical,\n+        }\n     }\n }\n \n@@ -276,8 +278,7 @@ where\n \n                 if last && formatting.ends_with_newline {\n                     match formatting.trailing_separator {\n-                        SeparatorTactic::Always => separate = true,\n-                        SeparatorTactic::Vertical if result.contains('\\n') => separate = true,\n+                        SeparatorTactic::Always | SeparatorTactic::Vertical => separate = true,\n                         _ => (),\n                     }\n                 }"}]}