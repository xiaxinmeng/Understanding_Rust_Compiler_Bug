{"sha": "ce5cccc32c3897488d2c503fe9d2a9a429a9b0eb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNlNWNjY2MzMmMzODk3NDg4ZDJjNTAzZmU5ZDJhOWE0MjlhOWIwZWI=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2019-03-14T13:50:53Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-03-14T13:50:53Z"}, "message": "Update rustc-ap-* crates to 407.0.0 (#3447)", "tree": {"sha": "7733eab3b3282d4299fa27ae8c09ee9c21586a7f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7733eab3b3282d4299fa27ae8c09ee9c21586a7f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ce5cccc32c3897488d2c503fe9d2a9a429a9b0eb", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcilw9CRBK7hj4Ov3rIwAAdHIIAA0x8AHLqXNFq33Pb6VHKhQ7\nqMsahHAcsYAVP85B1kZMtR8CqTqVL2bY6RmTyD1J3SU4x5kkAVo7ZzdGfhwwCz8o\nzN0PcPZYveGTTbI/htj2zOIXWKHmca8iwJO1LQBwWAuGmVQKqEwwk1QKnKxaDbws\n8FJwEPxcao0XbVNGK9ezwW72i9uZtp+FoHFcJo5amQ7w3YRQbeVv0r3a+1eBz58l\n4gLFrPskx0B4kpC87iRfK7tI1O+d85hIouu3sGhBYcjYa1psC3jhSf/BjBJINjgs\ni8jynD+lVL+8UiVCXU7SliNfp7ssKfR9VXXNbdz52IZH6FmviLUzJVfemFqTULc=\n=i1Qy\n-----END PGP SIGNATURE-----\n", "payload": "tree 7733eab3b3282d4299fa27ae8c09ee9c21586a7f\nparent 331a0500ce3e8ad70f1e2895234a0a0668e980f3\nauthor Seiichi Uchida <seuchida@gmail.com> 1552571453 +0900\ncommitter GitHub <noreply@github.com> 1552571453 +0900\n\nUpdate rustc-ap-* crates to 407.0.0 (#3447)\n\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ce5cccc32c3897488d2c503fe9d2a9a429a9b0eb", "html_url": "https://github.com/rust-lang/rust/commit/ce5cccc32c3897488d2c503fe9d2a9a429a9b0eb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ce5cccc32c3897488d2c503fe9d2a9a429a9b0eb/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "331a0500ce3e8ad70f1e2895234a0a0668e980f3", "url": "https://api.github.com/repos/rust-lang/rust/commits/331a0500ce3e8ad70f1e2895234a0a0668e980f3", "html_url": "https://github.com/rust-lang/rust/commit/331a0500ce3e8ad70f1e2895234a0a0668e980f3"}], "stats": {"total": 689, "additions": 293, "deletions": 396}, "files": [{"sha": "88276e45991cef7b35eafe59fc777f7e461f31db", "filename": "Cargo.lock", "status": "modified", "additions": 225, "deletions": 165, "changes": 390, "blob_url": "https://github.com/rust-lang/rust/blob/ce5cccc32c3897488d2c503fe9d2a9a429a9b0eb/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/ce5cccc32c3897488d2c503fe9d2a9a429a9b0eb/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=ce5cccc32c3897488d2c503fe9d2a9a429a9b0eb", "patch": "@@ -2,7 +2,7 @@\n # It is not intended for manual editing.\n [[package]]\n name = \"aho-corasick\"\n-version = \"0.6.9\"\n+version = \"0.6.10\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"memchr 2.2.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -30,7 +30,7 @@ name = \"atty\"\n version = \"0.2.11\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"libc 0.2.48 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.50 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"termion 1.5.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"winapi 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n@@ -42,13 +42,13 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n [[package]]\n name = \"backtrace\"\n-version = \"0.3.13\"\n+version = \"0.3.14\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"autocfg 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"backtrace-sys 0.1.28 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"cfg-if 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libc 0.2.48 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"cfg-if 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.50 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc-demangle 0.1.13 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"winapi 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n@@ -58,8 +58,8 @@ name = \"backtrace-sys\"\n version = \"0.1.28\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"cc 1.0.29 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libc 0.2.48 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"cc 1.0.31 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.50 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -91,24 +91,24 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n [[package]]\n name = \"cargo_metadata\"\n-version = \"0.7.1\"\n+version = \"0.7.3\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"error-chain 0.12.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"semver 0.9.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serde 1.0.87 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serde_derive 1.0.87 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serde_json 1.0.38 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde 1.0.89 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde_derive 1.0.89 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde_json 1.0.39 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n name = \"cc\"\n-version = \"1.0.29\"\n+version = \"1.0.31\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n [[package]]\n name = \"cfg-if\"\n-version = \"0.1.6\"\n+version = \"0.1.7\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n [[package]]\n@@ -139,9 +139,9 @@ version = \"0.3.1\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"arrayvec 0.4.10 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"cfg-if 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"cfg-if 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"crossbeam-utils 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"lazy_static 1.2.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"lazy_static 1.3.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"memoffset 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"nodrop 0.1.13 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"scopeguard 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -152,7 +152,7 @@ name = \"crossbeam-utils\"\n version = \"0.2.2\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"cfg-if 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"cfg-if 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -162,7 +162,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"proc-macro2 0.4.27 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"quote 0.6.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"syn 0.15.26 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"syn 0.15.29 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -172,17 +172,17 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n [[package]]\n name = \"dirs\"\n-version = \"1.0.4\"\n+version = \"1.0.5\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"libc 0.2.48 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"redox_users 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.50 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"redox_users 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"winapi 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n name = \"either\"\n-version = \"1.5.0\"\n+version = \"1.5.1\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n [[package]]\n@@ -195,13 +195,13 @@ dependencies = [\n \n [[package]]\n name = \"env_logger\"\n-version = \"0.6.0\"\n+version = \"0.6.1\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"atty 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"humantime 1.2.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"regex 1.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"regex 1.1.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"termcolor 1.0.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n@@ -210,15 +210,15 @@ name = \"error-chain\"\n version = \"0.12.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"backtrace 0.3.13 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"backtrace 0.3.14 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n name = \"failure\"\n version = \"0.1.5\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"backtrace 0.3.13 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"backtrace 0.3.14 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"failure_derive 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n@@ -229,7 +229,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"proc-macro2 0.4.27 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"quote 0.6.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"syn 0.15.26 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"syn 0.15.29 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"synstructure 0.10.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n@@ -259,22 +259,32 @@ name = \"itertools\"\n version = \"0.8.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"either 1.5.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"either 1.5.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n name = \"itoa\"\n version = \"0.4.3\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n+[[package]]\n+name = \"jobserver\"\n+version = \"0.1.12\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"libc 0.2.50 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rand 0.6.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n [[package]]\n name = \"lazy_static\"\n-version = \"1.2.0\"\n+version = \"1.3.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n [[package]]\n name = \"libc\"\n-version = \"0.2.48\"\n+version = \"0.2.50\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n [[package]]\n@@ -291,7 +301,7 @@ name = \"log\"\n version = \"0.4.6\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"cfg-if 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"cfg-if 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -314,7 +324,7 @@ name = \"num_cpus\"\n version = \"1.10.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"libc 0.2.48 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.50 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -330,27 +340,27 @@ name = \"packed_simd\"\n version = \"0.3.3\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"cfg-if 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"cfg-if 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n name = \"parking_lot\"\n-version = \"0.6.4\"\n+version = \"0.7.1\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"lock_api 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"parking_lot_core 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"parking_lot_core 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n name = \"parking_lot_core\"\n-version = \"0.3.1\"\n+version = \"0.4.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"libc 0.2.48 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rand 0.5.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.50 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rand 0.6.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc_version 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"smallvec 0.6.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"smallvec 0.6.9 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"winapi 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n@@ -377,26 +387,29 @@ dependencies = [\n \n [[package]]\n name = \"rand\"\n-version = \"0.4.6\"\n+version = \"0.6.5\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"fuchsia-cprng 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libc 0.2.48 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rand_core 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rdrand 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"autocfg 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.50 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rand_chacha 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rand_core 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rand_hc 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rand_isaac 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rand_jitter 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rand_os 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rand_pcg 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rand_xorshift 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"winapi 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n-name = \"rand\"\n-version = \"0.5.6\"\n+name = \"rand_chacha\"\n+version = \"0.1.1\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"cloudabi 0.0.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"fuchsia-cprng 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libc 0.2.48 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"autocfg 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rand_core 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"winapi 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -412,6 +425,62 @@ name = \"rand_core\"\n version = \"0.4.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n+[[package]]\n+name = \"rand_hc\"\n+version = \"0.1.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"rand_core 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n+[[package]]\n+name = \"rand_isaac\"\n+version = \"0.1.1\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"rand_core 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n+[[package]]\n+name = \"rand_jitter\"\n+version = \"0.1.3\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"libc 0.2.50 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rand_core 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"winapi 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n+[[package]]\n+name = \"rand_os\"\n+version = \"0.1.3\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"cloudabi 0.0.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"fuchsia-cprng 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.50 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rand_core 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rdrand 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"winapi 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n+[[package]]\n+name = \"rand_pcg\"\n+version = \"0.1.2\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"autocfg 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rand_core 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n+[[package]]\n+name = \"rand_xorshift\"\n+version = \"0.1.1\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"rand_core 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n [[package]]\n name = \"rdrand\"\n version = \"0.4.0\"\n@@ -435,21 +504,21 @@ dependencies = [\n \n [[package]]\n name = \"redox_users\"\n-version = \"0.2.0\"\n+version = \"0.3.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"argon2rs 0.2.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"failure 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rand 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rand_os 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"redox_syscall 0.1.51 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n name = \"regex\"\n-version = \"1.1.0\"\n+version = \"1.1.2\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"aho-corasick 0.6.9 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"aho-corasick 0.6.10 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"memchr 2.2.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"regex-syntax 0.6.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"thread_local 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -466,20 +535,20 @@ dependencies = [\n \n [[package]]\n name = \"rustc-ap-arena\"\n-version = \"373.0.0\"\n+version = \"407.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"rustc-ap-rustc_data_structures 373.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-rustc_data_structures 407.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n name = \"rustc-ap-graphviz\"\n-version = \"373.0.0\"\n+version = \"407.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n [[package]]\n name = \"rustc-ap-rustc_cratesio_shim\"\n-version = \"373.0.0\"\n+version = \"407.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"bitflags 1.0.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -489,84 +558,86 @@ dependencies = [\n \n [[package]]\n name = \"rustc-ap-rustc_data_structures\"\n-version = \"373.0.0\"\n+version = \"407.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"cfg-if 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"cfg-if 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"ena 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"jobserver 0.1.12 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"lazy_static 1.3.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"parking_lot 0.6.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-graphviz 373.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-rustc_cratesio_shim 373.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-serialize 373.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"parking_lot 0.7.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-graphviz 407.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-rustc_cratesio_shim 407.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-serialize 407.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc-hash 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc-rayon 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc-rayon-core 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"smallvec 0.6.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"smallvec 0.6.9 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"stable_deref_trait 1.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n name = \"rustc-ap-rustc_errors\"\n-version = \"373.0.0\"\n+version = \"407.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"atty 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-rustc_cratesio_shim 373.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-rustc_data_structures 373.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-serialize 373.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-syntax_pos 373.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-rustc_cratesio_shim 407.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-rustc_data_structures 407.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-serialize 407.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-syntax_pos 407.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"termcolor 1.0.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"unicode-width 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n name = \"rustc-ap-rustc_target\"\n-version = \"373.0.0\"\n+version = \"407.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"bitflags 1.0.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-rustc_cratesio_shim 373.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-rustc_data_structures 373.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-serialize 373.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-rustc_cratesio_shim 407.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-rustc_data_structures 407.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-serialize 407.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n name = \"rustc-ap-serialize\"\n-version = \"373.0.0\"\n+version = \"407.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"smallvec 0.6.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"smallvec 0.6.9 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n name = \"rustc-ap-syntax\"\n-version = \"373.0.0\"\n+version = \"407.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"bitflags 1.0.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-rustc_data_structures 373.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-rustc_errors 373.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-rustc_target 373.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-serialize 373.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-syntax_pos 373.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"scoped-tls 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"smallvec 0.6.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-rustc_data_structures 407.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-rustc_errors 407.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-rustc_target 407.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-serialize 407.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-syntax_pos 407.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"scoped-tls 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"smallvec 0.6.9 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n name = \"rustc-ap-syntax_pos\"\n-version = \"373.0.0\"\n+version = \"407.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"cfg-if 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-arena 373.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-rustc_data_structures 373.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-serialize 373.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"scoped-tls 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"cfg-if 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-arena 407.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-rustc_data_structures 407.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-serialize 407.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"scoped-tls 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"unicode-width 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n@@ -589,7 +660,7 @@ version = \"0.1.2\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"crossbeam-deque 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"either 1.5.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"either 1.5.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc-rayon-core 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n@@ -599,8 +670,8 @@ version = \"0.1.2\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"crossbeam-deque 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"lazy_static 1.2.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libc 0.2.48 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"lazy_static 1.3.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.50 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"num_cpus 1.10.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n@@ -623,24 +694,24 @@ version = \"1.0.3\"\n dependencies = [\n  \"atty 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"bytecount 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"cargo_metadata 0.7.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"cargo_metadata 0.7.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"derive-new 0.5.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"diff 0.1.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"dirs 1.0.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"env_logger 0.6.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"dirs 1.0.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"env_logger 0.6.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"failure 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"getopts 0.2.18 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"itertools 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"lazy_static 1.2.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"lazy_static 1.3.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"regex 1.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-rustc_target 373.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-syntax 373.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-syntax_pos 373.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"regex 1.1.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-rustc_target 407.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-syntax 407.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-syntax_pos 407.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc-workspace-hack 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serde 1.0.87 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serde_derive 1.0.87 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serde_json 1.0.38 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde 1.0.89 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde_derive 1.0.89 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde_json 1.0.39 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"term 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"toml 0.4.10 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"unicode-segmentation 1.2.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -655,7 +726,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n [[package]]\n name = \"scoped-tls\"\n-version = \"0.1.2\"\n+version = \"1.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n [[package]]\n@@ -674,7 +745,7 @@ version = \"0.9.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"semver-parser 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serde 1.0.87 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde 1.0.89 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -684,36 +755,33 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n [[package]]\n name = \"serde\"\n-version = \"1.0.87\"\n+version = \"1.0.89\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n [[package]]\n name = \"serde_derive\"\n-version = \"1.0.87\"\n+version = \"1.0.89\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"proc-macro2 0.4.27 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"quote 0.6.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"syn 0.15.26 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"syn 0.15.29 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n name = \"serde_json\"\n-version = \"1.0.38\"\n+version = \"1.0.39\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"itoa 0.4.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"ryu 0.2.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serde 1.0.87 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde 1.0.89 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n name = \"smallvec\"\n-version = \"0.6.8\"\n+version = \"0.6.9\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-dependencies = [\n- \"unreachable 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n-]\n \n [[package]]\n name = \"stable_deref_trait\"\n@@ -722,7 +790,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n [[package]]\n name = \"syn\"\n-version = \"0.15.26\"\n+version = \"0.15.29\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"proc-macro2 0.4.27 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -737,7 +805,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"proc-macro2 0.4.27 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"quote 0.6.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"syn 0.15.26 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"syn 0.15.29 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"unicode-xid 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n@@ -763,7 +831,7 @@ name = \"termion\"\n version = \"1.5.1\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"libc 0.2.48 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.50 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"redox_syscall 0.1.51 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"redox_termios 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n@@ -773,15 +841,15 @@ name = \"thread_local\"\n version = \"0.3.6\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"lazy_static 1.2.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"lazy_static 1.3.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n name = \"toml\"\n version = \"0.4.10\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"serde 1.0.87 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde 1.0.89 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -809,24 +877,11 @@ name = \"unicode_categories\"\n version = \"0.1.1\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n-[[package]]\n-name = \"unreachable\"\n-version = \"1.0.0\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-dependencies = [\n- \"void 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n-]\n-\n [[package]]\n name = \"utf8-ranges\"\n version = \"1.0.2\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n-[[package]]\n-name = \"void\"\n-version = \"1.0.2\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-\n [[package]]\n name = \"winapi\"\n version = \"0.3.6\"\n@@ -864,31 +919,31 @@ dependencies = [\n ]\n \n [metadata]\n-\"checksum aho-corasick 0.6.9 (registry+https://github.com/rust-lang/crates.io-index)\" = \"1e9a933f4e58658d7b12defcf96dc5c720f20832deebe3e0a19efd3b6aaeeb9e\"\n+\"checksum aho-corasick 0.6.10 (registry+https://github.com/rust-lang/crates.io-index)\" = \"81ce3d38065e618af2d7b77e10c5ad9a069859b4be3c2250f674af3840d9c8a5\"\n \"checksum argon2rs 0.2.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"3f67b0b6a86dae6e67ff4ca2b6201396074996379fba2b92ff649126f37cb392\"\n \"checksum arrayvec 0.4.10 (registry+https://github.com/rust-lang/crates.io-index)\" = \"92c7fb76bc8826a8b33b4ee5bb07a247a81e76764ab4d55e8f73e3a4d8808c71\"\n \"checksum atty 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)\" = \"9a7d5b8723950951411ee34d271d99dddcc2035a16ab25310ea2c8cfd4369652\"\n \"checksum autocfg 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"a6d640bee2da49f60a4068a7fae53acde8982514ab7bae8b8cea9e88cbcfd799\"\n-\"checksum backtrace 0.3.13 (registry+https://github.com/rust-lang/crates.io-index)\" = \"b5b493b66e03090ebc4343eb02f94ff944e0cbc9ac6571491d170ba026741eb5\"\n+\"checksum backtrace 0.3.14 (registry+https://github.com/rust-lang/crates.io-index)\" = \"cd5a90e2b463010cd0e0ce9a11d4a9d5d58d9f41d4a6ba3dcaf9e68b466e88b4\"\n \"checksum backtrace-sys 0.1.28 (registry+https://github.com/rust-lang/crates.io-index)\" = \"797c830ac25ccc92a7f8a7b9862bde440715531514594a6154e3d4a54dd769b6\"\n \"checksum bitflags 1.0.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"228047a76f468627ca71776ecdebd732a3423081fcf5125585bcd7c49886ce12\"\n \"checksum blake2-rfc 0.2.18 (registry+https://github.com/rust-lang/crates.io-index)\" = \"5d6d530bdd2d52966a6d03b7a964add7ae1a288d25214066fd4b600f0f796400\"\n \"checksum bytecount 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"be0fdd54b507df8f22012890aadd099979befdba27713c767993f8380112ca7c\"\n \"checksum byteorder 1.3.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"a019b10a2a7cdeb292db131fc8113e57ea2a908f6e7894b0c3c671893b65dbeb\"\n-\"checksum cargo_metadata 0.7.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"585784cac9b05c93a53b17a0b24a5cdd1dfdda5256f030e089b549d2390cc720\"\n-\"checksum cc 1.0.29 (registry+https://github.com/rust-lang/crates.io-index)\" = \"4390a3b5f4f6bce9c1d0c00128379df433e53777fdd30e92f16a529332baec4e\"\n-\"checksum cfg-if 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)\" = \"082bb9b28e00d3c9d39cc03e64ce4cea0f1bb9b3fde493f0cbc008472d22bdf4\"\n+\"checksum cargo_metadata 0.7.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"bc796c7161c220089dfc7159e13324979181532850a237576b8fb907dd087c0d\"\n+\"checksum cc 1.0.31 (registry+https://github.com/rust-lang/crates.io-index)\" = \"c9ce8bb087aacff865633f0bd5aeaed910fe2fe55b55f4739527f2e023a2e53d\"\n+\"checksum cfg-if 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)\" = \"11d43355396e872eefb45ce6342e4374ed7bc2b3a502d1b28e36d6e23c05d1f4\"\n \"checksum cloudabi 0.0.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ddfc5b9aa5d4507acaf872de71051dfd0e309860e88966e1051e462a077aac4f\"\n \"checksum constant_time_eq 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"8ff012e225ce166d4422e0e78419d901719760f62ae2b7969ca6b564d1b54a9e\"\n \"checksum crossbeam-deque 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"f739f8c5363aca78cfb059edf753d8f0d36908c348f3d8d1503f03d8b75d9cf3\"\n \"checksum crossbeam-epoch 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"927121f5407de9956180ff5e936fe3cf4324279280001cd56b669d28ee7e9150\"\n \"checksum crossbeam-utils 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"2760899e32a1d58d5abb31129f8fae5de75220bc2176e77ff7c627ae45c918d9\"\n \"checksum derive-new 0.5.6 (registry+https://github.com/rust-lang/crates.io-index)\" = \"6ca414e896ae072546f4d789f452daaecf60ddee4c9df5dc6d5936d769e3d87c\"\n \"checksum diff 0.1.11 (registry+https://github.com/rust-lang/crates.io-index)\" = \"3c2b69f912779fbb121ceb775d74d51e915af17aaebc38d28a592843a2dd0a3a\"\n-\"checksum dirs 1.0.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"88972de891f6118092b643d85a0b28e0678e0f948d7f879aa32f2d5aafe97d2a\"\n-\"checksum either 1.5.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"3be565ca5c557d7f59e7cfcf1844f9e3033650c929c6566f511e8005f205c1d0\"\n+\"checksum dirs 1.0.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"3fd78930633bd1c6e35c4b42b1df7b0cbc6bc191146e512bb3bedf243fcc3901\"\n+\"checksum either 1.5.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"c67353c641dc847124ea1902d69bd753dee9bb3beff9aa3662ecf86c971d1fac\"\n \"checksum ena 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"f56c93cc076508c549d9bb747f79aa9b4eb098be7b8cad8830c3137ef52d1e00\"\n-\"checksum env_logger 0.6.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"afb070faf94c85d17d50ca44f6ad076bce18ae92f0037d350947240a36e9d42e\"\n+\"checksum env_logger 0.6.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"b61fa891024a945da30a9581546e8cfaf5602c7b3f4c137a2805cf388f92075a\"\n \"checksum error-chain 0.12.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"07e791d3be96241c77c43846b665ef1384606da2cd2a48730abe606a12906e02\"\n \"checksum failure 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"795bd83d3abeb9220f257e597aa0080a508b27533824adf336529648f6abf7e2\"\n \"checksum failure_derive 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ea1063915fd7ef4309e222a5a07cf9c319fb9c7836b1f89b85458672dbb127e1\"\n@@ -897,8 +952,9 @@ dependencies = [\n \"checksum humantime 1.2.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"3ca7e5f2e110db35f93b837c81797f3714500b81d517bf20c431b16d3ca4f114\"\n \"checksum itertools 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"5b8467d9c1cebe26feb08c640139247fac215782d35371ade9a2136ed6085358\"\n \"checksum itoa 0.4.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"1306f3464951f30e30d12373d31c79fbd52d236e5e896fd92f96ec7babbbe60b\"\n-\"checksum lazy_static 1.2.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"a374c89b9db55895453a74c1e38861d9deec0b01b405a82516e9d5de4820dea1\"\n-\"checksum libc 0.2.48 (registry+https://github.com/rust-lang/crates.io-index)\" = \"e962c7641008ac010fa60a7dfdc1712449f29c44ef2d4702394aea943ee75047\"\n+\"checksum jobserver 0.1.12 (registry+https://github.com/rust-lang/crates.io-index)\" = \"dd80e58f77e0cdea53ba96acc5e04479e5ffc5d869626a6beafe50fed867eace\"\n+\"checksum lazy_static 1.3.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"bc5729f27f159ddd61f4df6228e827e86643d4d3e7c32183cb30a1c08f604a14\"\n+\"checksum libc 0.2.50 (registry+https://github.com/rust-lang/crates.io-index)\" = \"aab692d7759f5cd8c859e169db98ae5b52c924add2af5fbbca11d12fefb567c1\"\n \"checksum lock_api 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"62ebf1391f6acad60e5c8b43706dde4582df75c06698ab44511d15016bc2442c\"\n \"checksum log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\" = \"c84ec4b527950aa83a329754b01dbe3f58361d1c5efacd1f6d68c494d08a17c6\"\n \"checksum memchr 2.2.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"2efc7bc57c883d4a4d6e3246905283d8dae951bb3bd32f49d6ef297f546e1c39\"\n@@ -907,48 +963,54 @@ dependencies = [\n \"checksum num_cpus 1.10.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"1a23f0ed30a54abaa0c7e83b1d2d87ada7c3c23078d1d87815af3e3b6385fbba\"\n \"checksum owning_ref 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"49a4b8ea2179e6a2e27411d3bca09ca6dd630821cf6894c6c7c8467a8ee7ef13\"\n \"checksum packed_simd 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"a85ea9fc0d4ac0deb6fe7911d38786b32fc11119afd9e9d38b84ff691ce64220\"\n-\"checksum parking_lot 0.6.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"f0802bff09003b291ba756dc7e79313e51cc31667e94afbe847def490424cde5\"\n-\"checksum parking_lot_core 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ad7f7e6ebdc79edff6fdcb87a55b620174f7a989e3eb31b65231f4af57f00b8c\"\n+\"checksum parking_lot 0.7.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ab41b4aed082705d1056416ae4468b6ea99d52599ecf3169b00088d43113e337\"\n+\"checksum parking_lot_core 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"94c8c7923936b28d546dfd14d4472eaf34c99b14e1c973a32b3e6d4eb04298c9\"\n \"checksum proc-macro2 0.4.27 (registry+https://github.com/rust-lang/crates.io-index)\" = \"4d317f9caece796be1980837fd5cb3dfec5613ebdb04ad0956deea83ce168915\"\n \"checksum quick-error 1.2.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"9274b940887ce9addde99c4eee6b5c44cc494b182b97e73dc8ffdcb3397fd3f0\"\n \"checksum quote 0.6.11 (registry+https://github.com/rust-lang/crates.io-index)\" = \"cdd8e04bd9c52e0342b406469d494fcb033be4bdbe5c606016defbb1681411e1\"\n-\"checksum rand 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\" = \"552840b97013b1a26992c11eac34bdd778e464601a4c2054b5f0bff7c6761293\"\n-\"checksum rand 0.5.6 (registry+https://github.com/rust-lang/crates.io-index)\" = \"c618c47cd3ebd209790115ab837de41425723956ad3ce2e6a7f09890947cacb9\"\n+\"checksum rand 0.6.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"6d71dacdc3c88c1fde3885a3be3fbab9f35724e6ce99467f7d9c5026132184ca\"\n+\"checksum rand_chacha 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"556d3a1ca6600bfcbab7c7c91ccb085ac7fbbcd70e008a98742e7847f4f7bcef\"\n \"checksum rand_core 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"7a6fdeb83b075e8266dcc8762c22776f6877a63111121f5f8c7411e5be7eed4b\"\n \"checksum rand_core 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"d0e7a549d590831370895ab7ba4ea0c1b6b011d106b5ff2da6eee112615e6dc0\"\n+\"checksum rand_hc 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"7b40677c7be09ae76218dc623efbf7b18e34bced3f38883af07bb75630a21bc4\"\n+\"checksum rand_isaac 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ded997c9d5f13925be2a6fd7e66bf1872597f759fd9dd93513dd7e92e5a5ee08\"\n+\"checksum rand_jitter 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"7b9ea758282efe12823e0d952ddb269d2e1897227e464919a554f2a03ef1b832\"\n+\"checksum rand_os 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"7b75f676a1e053fc562eafbb47838d67c84801e38fc1ba459e8f180deabd5071\"\n+\"checksum rand_pcg 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"abf9b09b01790cfe0364f52bf32995ea3c39f4d2dd011eac241d2914146d0b44\"\n+\"checksum rand_xorshift 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"cbf7e9e623549b0e21f6e97cf8ecf247c1a8fd2e8a992ae265314300b2455d5c\"\n \"checksum rdrand 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"678054eb77286b51581ba43620cc911abf02758c91f93f479767aed0f90458b2\"\n \"checksum redox_syscall 0.1.51 (registry+https://github.com/rust-lang/crates.io-index)\" = \"423e376fffca3dfa06c9e9790a9ccd282fafb3cc6e6397d01dbf64f9bacc6b85\"\n \"checksum redox_termios 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"7e891cfe48e9100a70a3b6eb652fef28920c117d366339687bd5576160db0f76\"\n-\"checksum redox_users 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"214a97e49be64fd2c86f568dd0cb2c757d2cc53de95b273b6ad0a1c908482f26\"\n-\"checksum regex 1.1.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"37e7cbbd370869ce2e8dff25c7018702d10b21a20ef7135316f8daecd6c25b7f\"\n+\"checksum redox_users 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"3fe5204c3a17e97dde73f285d49be585df59ed84b50a872baf416e73b62c3828\"\n+\"checksum regex 1.1.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"53ee8cfdddb2e0291adfb9f13d31d3bbe0a03c9a402c01b1e24188d86c35b24f\"\n \"checksum regex-syntax 0.6.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"8c2f35eedad5295fdf00a63d7d4b238135723f92b434ec06774dad15c7ab0861\"\n-\"checksum rustc-ap-arena 373.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"8be999235b541fc8eb54901b66e899a06076709ac5f53d6b2c5c59d29ad54780\"\n-\"checksum rustc-ap-graphviz 373.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"532b5df15ca1a19a42815e37e521a20a7632b86b36868d1447932f8476f8f789\"\n-\"checksum rustc-ap-rustc_cratesio_shim 373.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"c388afe1ef810013c878bdf9073ab1ae28dc49e9325863b351afb10acf4cc46e\"\n-\"checksum rustc-ap-rustc_data_structures 373.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"63a8f08b9fb6d607afb842ee7206273d09d69c9201bfc1c479a726093251a24e\"\n-\"checksum rustc-ap-rustc_errors 373.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"6dc0df7bf31588ea67e6386f6ad19f6b9a37ba7d5726ecad1cacce22e231bd98\"\n-\"checksum rustc-ap-rustc_target 373.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"8fb4623a6f6c65b928cbe8d9c52b38cf57ba1722677645dc53fb1bdadfd0e127\"\n-\"checksum rustc-ap-serialize 373.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"0c290b148c9e4e08bbcb8a313393e257c1103cedf6a038aefc9f957c8a77c755\"\n-\"checksum rustc-ap-syntax 373.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"526fdc5bdbaaeae3b2a9ba42e5f5f7f29cda6ce8971b607a2955b1cb4ca339b5\"\n-\"checksum rustc-ap-syntax_pos 373.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"8e4f88a1213562373cee9de5a1d77bbf16dd706030304af041c9733492fcc952\"\n+\"checksum rustc-ap-arena 407.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"5aab2fb5e5becf1c9183f6c63b8714817a3e780a20b4fe6b3920751c98a18225\"\n+\"checksum rustc-ap-graphviz 407.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"0235ff613d4f96176ea56748010b5d8e978605cc47856ba9bb5372f4f38e9c03\"\n+\"checksum rustc-ap-rustc_cratesio_shim 407.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"63e04a90b0dd8597da83633961698c61a2948f50c9d4b9a71e8afafc0ba0f158\"\n+\"checksum rustc-ap-rustc_data_structures 407.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"c03988d65fc5130787df32e8ea91738f78a8ed62b7a5bdd77f10e5cceb531d8e\"\n+\"checksum rustc-ap-rustc_errors 407.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"8b33b9dc34f9fa50bf7e6fd14f2f3c1adc69833acf43c10f3e9795bd4d613712\"\n+\"checksum rustc-ap-rustc_target 407.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"e6de75caef2c7acba11994614266d60238653657677934817ab368d169333cba\"\n+\"checksum rustc-ap-serialize 407.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"cf09c60aaee892b0fd107544cfe607d8d463e7f33da34aa823566b8fd2b17f53\"\n+\"checksum rustc-ap-syntax 407.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"69f38cc120ff317678bbda8c4f58c1bbc1de64b615383ab01480482dde5e95a1\"\n+\"checksum rustc-ap-syntax_pos 407.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"20a0a201141c5c416b1924b079eeefc7b013e34ece0740ce4997f358b3684a7f\"\n \"checksum rustc-demangle 0.1.13 (registry+https://github.com/rust-lang/crates.io-index)\" = \"adacaae16d02b6ec37fdc7acfcddf365978de76d1983d3ee22afc260e1ca9619\"\n \"checksum rustc-hash 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"7540fc8b0c49f096ee9c961cda096467dce8084bec6bdca2fc83895fd9b28cb8\"\n \"checksum rustc-rayon 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"8d98c51d9cbbe810c8b6693236d3412d8cd60513ff27a3e1b6af483dca0af544\"\n \"checksum rustc-rayon-core 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"526e7b6d2707a5b9bec3927d424ad70fa3cfc68e0ac1b75e46cdbbc95adc5108\"\n \"checksum rustc-workspace-hack 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"fc71d2faa173b74b232dedc235e3ee1696581bb132fc116fa3626d6151a1a8fb\"\n \"checksum rustc_version 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"138e3e0acb6c9fb258b19b67cb8abd63c00679d2851805ea151465464fe9030a\"\n \"checksum ryu 0.2.7 (registry+https://github.com/rust-lang/crates.io-index)\" = \"eb9e9b8cde282a9fe6a42dd4681319bfb63f121b8a8ee9439c6f4107e58a46f7\"\n-\"checksum scoped-tls 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"332ffa32bf586782a3efaeb58f127980944bbc8c4d6913a86107ac2a5ab24b28\"\n+\"checksum scoped-tls 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ea6a9290e3c9cf0f18145ef7ffa62d68ee0bf5fcd651017e586dc7fd5da448c2\"\n \"checksum scoped_threadpool 0.1.9 (registry+https://github.com/rust-lang/crates.io-index)\" = \"1d51f5df5af43ab3f1360b429fa5e0152ac5ce8c0bd6485cae490332e96846a8\"\n \"checksum scopeguard 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"94258f53601af11e6a49f722422f6e3425c52b06245a5cf9bc09908b174f5e27\"\n \"checksum semver 0.9.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"1d7eb9ef2c18661902cc47e535f9bc51b78acd254da71d375c2f6720d9a40403\"\n \"checksum semver-parser 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"388a1df253eca08550bef6c72392cfe7c30914bf41df5269b68cbd6ff8f570a3\"\n-\"checksum serde 1.0.87 (registry+https://github.com/rust-lang/crates.io-index)\" = \"2e20fde37801e83c891a2dc4ebd3b81f0da4d1fb67a9e0a2a3b921e2536a58ee\"\n-\"checksum serde_derive 1.0.87 (registry+https://github.com/rust-lang/crates.io-index)\" = \"633e97856567e518b59ffb2ad7c7a4fd4c5d91d9c7f32dd38a27b2bf7e8114ea\"\n-\"checksum serde_json 1.0.38 (registry+https://github.com/rust-lang/crates.io-index)\" = \"27dce848e7467aa0e2fcaf0a413641499c0b745452aaca1194d24dedde9e13c9\"\n-\"checksum smallvec 0.6.8 (registry+https://github.com/rust-lang/crates.io-index)\" = \"88aea073965ab29f6edb5493faf96ad662fb18aa9eeb186a3b7057951605ed15\"\n+\"checksum serde 1.0.89 (registry+https://github.com/rust-lang/crates.io-index)\" = \"92514fb95f900c9b5126e32d020f5c6d40564c27a5ea6d1d7d9f157a96623560\"\n+\"checksum serde_derive 1.0.89 (registry+https://github.com/rust-lang/crates.io-index)\" = \"bb6eabf4b5914e88e24eea240bb7c9f9a2cbc1bbbe8d961d381975ec3c6b806c\"\n+\"checksum serde_json 1.0.39 (registry+https://github.com/rust-lang/crates.io-index)\" = \"5a23aa71d4a4d43fdbfaac00eff68ba8a06a51759a89ac3304323e800c4dd40d\"\n+\"checksum smallvec 0.6.9 (registry+https://github.com/rust-lang/crates.io-index)\" = \"c4488ae950c49d403731982257768f48fada354a5203fe81f9bb6f43ca9002be\"\n \"checksum stable_deref_trait 1.1.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"dba1a27d3efae4351c8051072d619e3ade2820635c3958d826bfea39d59b54c8\"\n-\"checksum syn 0.15.26 (registry+https://github.com/rust-lang/crates.io-index)\" = \"f92e629aa1d9c827b2bb8297046c1ccffc57c99b947a680d3ccff1f136a3bee9\"\n+\"checksum syn 0.15.29 (registry+https://github.com/rust-lang/crates.io-index)\" = \"1825685f977249735d510a242a6727b46efe914bb67e38d30c071b1b72b1d5c2\"\n \"checksum synstructure 0.10.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"73687139bf99285483c96ac0add482c3776528beac1d97d444f6e91f203a2015\"\n \"checksum term 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"5e6b677dd1e8214ea1ef4297f85dbcbed8e8cdddb561040cc998ca2551c37561\"\n \"checksum termcolor 1.0.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"4096add70612622289f2fdcdbd5086dc81c1e2675e6ae58d6c4f62a16c6d7f2f\"\n@@ -960,9 +1022,7 @@ dependencies = [\n \"checksum unicode-width 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"882386231c45df4700b275c7ff55b6f3698780a650026380e72dabe76fa46526\"\n \"checksum unicode-xid 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"fc72304796d0818e357ead4e000d19c9c174ab23dc11093ac919054d20a6a7fc\"\n \"checksum unicode_categories 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"39ec24b3121d976906ece63c9daad25b85969647682eee313cb5779fdd69e14e\"\n-\"checksum unreachable 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"382810877fe448991dfc7f0dd6e3ae5d58088fd0ea5e35189655f84e6814fa56\"\n \"checksum utf8-ranges 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"796f7e48bef87609f7ade7e06495a87d5cd06c7866e6a5cbfceffc558a243737\"\n-\"checksum void 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"6a02e4885ed3bc0f2de90ea6dd45ebcbb66dacffe03547fadbb0eeae2770887d\"\n \"checksum winapi 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)\" = \"92c1eb33641e276cfa214a0522acad57be5c56b10cb348b3c5117db75f3ac4b0\"\n \"checksum winapi-i686-pc-windows-gnu 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6\"\n \"checksum winapi-util 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"7168bab6e1daee33b4557efd0e95d5ca70a03706d39fa5f3fe7a236f584b03c9\""}, {"sha": "f1d819f0d08b2bc633dec61e9b97b04a0e1307a2", "filename": "Cargo.toml", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ce5cccc32c3897488d2c503fe9d2a9a429a9b0eb/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/ce5cccc32c3897488d2c503fe9d2a9a429a9b0eb/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=ce5cccc32c3897488d2c503fe9d2a9a429a9b0eb", "patch": "@@ -49,9 +49,9 @@ env_logger = \"0.6\"\n getopts = \"0.2\"\n derive-new = \"0.5\"\n cargo_metadata = \"0.7\"\n-rustc-ap-rustc_target = \"373.0.0\"\n-rustc-ap-syntax = \"373.0.0\"\n-rustc-ap-syntax_pos = \"373.0.0\"\n+rustc-ap-rustc_target = \"407.0.0\"\n+rustc-ap-syntax = \"407.0.0\"\n+rustc-ap-syntax_pos = \"407.0.0\"\n failure = \"0.1.3\"\n bytecount = \"0.5\"\n unicode-width = \"0.1.5\""}, {"sha": "785d61749a45fb0fce48b4c7f2b2080fdaa85ad9", "filename": "src/config/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ce5cccc32c3897488d2c503fe9d2a9a429a9b0eb/src%2Fconfig%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce5cccc32c3897488d2c503fe9d2a9a429a9b0eb/src%2Fconfig%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconfig%2Fmod.rs?ref=ce5cccc32c3897488d2c503fe9d2a9a429a9b0eb", "patch": "@@ -21,10 +21,10 @@ pub mod file_lines;\n pub mod license;\n pub mod lists;\n \n-/// This macro defines configuration options used in rustfmt. Each option\n-/// is defined as follows:\n-///\n-/// `name: value type, default value, is stable, description;`\n+// This macro defines configuration options used in rustfmt. Each option\n+// is defined as follows:\n+//\n+// `name: value type, default value, is stable, description;`\n create_config! {\n     // Fundamental stuff\n     max_width: usize, 100, true, \"Maximum width of each line\";"}, {"sha": "02c3c87368ef564e6a5586c72390ce0b0d1cc941", "filename": "src/config/options.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ce5cccc32c3897488d2c503fe9d2a9a429a9b0eb/src%2Fconfig%2Foptions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce5cccc32c3897488d2c503fe9d2a9a429a9b0eb/src%2Fconfig%2Foptions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconfig%2Foptions.rs?ref=ce5cccc32c3897488d2c503fe9d2a9a429a9b0eb", "patch": "@@ -237,10 +237,11 @@ configuration_option_enum! { Heuristics:\n }\n \n impl Density {\n-    pub fn to_list_tactic(self) -> ListTactic {\n+    pub fn to_list_tactic(self, len: usize) -> ListTactic {\n         match self {\n             Density::Compressed => ListTactic::Mixed,\n             Density::Tall => ListTactic::HorizontalVertical,\n+            Density::Vertical if len == 1 => ListTactic::Horizontal,\n             Density::Vertical => ListTactic::Vertical,\n         }\n     }\n@@ -443,7 +444,7 @@ pub trait CliOptions {\n     fn config_path(&self) -> Option<&Path>;\n }\n \n-/// The edition of the compiler (RFC 2052)\n+// The edition of the compiler (RFC 2052)\n configuration_option_enum! { Edition:\n     Edition2015: 2015,\n     Edition2018: 2018,"}, {"sha": "eee02f275cf7221750c7aa5f72460531bb8f93bd", "filename": "src/formatting.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ce5cccc32c3897488d2c503fe9d2a9a429a9b0eb/src%2Fformatting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce5cccc32c3897488d2c503fe9d2a9a429a9b0eb/src%2Fformatting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fformatting.rs?ref=ce5cccc32c3897488d2c503fe9d2a9a429a9b0eb", "patch": "@@ -83,7 +83,7 @@ fn format_project<T: FormatHandler>(\n \n     // Suppress error output if we have to do any further parsing.\n     let silent_emitter = silent_emitter(source_map);\n-    parse_session.span_diagnostic = Handler::with_emitter(true, false, silent_emitter);\n+    parse_session.span_diagnostic = Handler::with_emitter(true, None, silent_emitter);\n \n     let mut context = FormatContext::new(&krate, report, parse_session, config, handler);\n \n@@ -657,15 +657,15 @@ fn silent_emitter(source_map: Rc<SourceMap>) -> Box<EmitterWriter> {\n fn make_parse_sess(source_map: Rc<SourceMap>, config: &Config) -> ParseSess {\n     let tty_handler = if config.hide_parse_errors() {\n         let silent_emitter = silent_emitter(source_map.clone());\n-        Handler::with_emitter(true, false, silent_emitter)\n+        Handler::with_emitter(true, None, silent_emitter)\n     } else {\n         let supports_color = term::stderr().map_or(false, |term| term.supports_color());\n         let color_cfg = if supports_color {\n             ColorConfig::Auto\n         } else {\n             ColorConfig::Never\n         };\n-        Handler::with_tty_emitter(color_cfg, true, false, Some(source_map.clone()))\n+        Handler::with_tty_emitter(color_cfg, true, None, Some(source_map.clone()))\n     };\n \n     ParseSess::with_span_handler(tty_handler, source_map)"}, {"sha": "8cd6010f72f43fa531f04fe4973e58831e790877", "filename": "src/items.rs", "status": "modified", "additions": 37, "deletions": 177, "changes": 214, "blob_url": "https://github.com/rust-lang/rust/blob/ce5cccc32c3897488d2c503fe9d2a9a429a9b0eb/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce5cccc32c3897488d2c503fe9d2a9a429a9b0eb/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=ce5cccc32c3897488d2c503fe9d2a9a429a9b0eb", "patch": "@@ -19,10 +19,7 @@ use crate::expr::{\n     format_expr, is_empty_block, is_simple_block_stmt, rewrite_assign_rhs, rewrite_assign_rhs_with,\n     ExprType, RhsTactics,\n };\n-use crate::lists::{\n-    definitive_tactic, extract_post_comment, extract_pre_comment, get_comment_end,\n-    has_extra_newline, itemize_list, write_list, ListFormatting, ListItem, Separator,\n-};\n+use crate::lists::{definitive_tactic, itemize_list, write_list, ListFormatting, Separator};\n use crate::macros::{rewrite_macro, MacroPosition};\n use crate::overflow;\n use crate::rewrite::{Rewrite, RewriteContext};\n@@ -194,7 +191,7 @@ impl<'a> FnSig<'a> {\n     ) -> FnSig<'a> {\n         FnSig {\n             unsafety: method_sig.header.unsafety,\n-            is_async: method_sig.header.asyncness,\n+            is_async: method_sig.header.asyncness.node,\n             constness: method_sig.header.constness.node,\n             defaultness: ast::Defaultness::Final,\n             abi: method_sig.header.abi,\n@@ -216,7 +213,7 @@ impl<'a> FnSig<'a> {\n                 generics,\n                 abi: fn_header.abi,\n                 constness: fn_header.constness.node,\n-                is_async: fn_header.asyncness,\n+                is_async: fn_header.asyncness.node,\n                 defaultness,\n                 unsafety: fn_header.unsafety,\n                 visibility: visibility.clone(),\n@@ -1833,7 +1830,9 @@ fn is_empty_infer(ty: &ast::Ty, pat_span: Span) -> bool {\n \n impl Rewrite for ast::Arg {\n     fn rewrite(&self, context: &RewriteContext<'_>, shape: Shape) -> Option<String> {\n-        if is_named_arg(self) {\n+        if let Some(ref explicit_self) = self.to_self() {\n+            rewrite_explicit_self(context, explicit_self)\n+        } else if is_named_arg(self) {\n             let mut result = self\n                 .pat\n                 .rewrite(context, Shape::legacy(shape.width, shape.indent))?;\n@@ -1862,9 +1861,8 @@ impl Rewrite for ast::Arg {\n }\n \n fn rewrite_explicit_self(\n-    explicit_self: &ast::ExplicitSelf,\n-    args: &[ast::Arg],\n     context: &RewriteContext<'_>,\n+    explicit_self: &ast::ExplicitSelf,\n ) -> Option<String> {\n     match explicit_self.node {\n         ast::SelfKind::Region(lt, m) => {\n@@ -1880,10 +1878,7 @@ fn rewrite_explicit_self(\n                 None => Some(format!(\"&{}self\", mut_str)),\n             }\n         }\n-        ast::SelfKind::Explicit(ref ty, _) => {\n-            assert!(!args.is_empty(), \"&[ast::Arg] shouldn't be empty.\");\n-\n-            let mutability = explicit_self_mutability(&args[0]);\n+        ast::SelfKind::Explicit(ref ty, mutability) => {\n             let type_str = ty.rewrite(\n                 context,\n                 Shape::legacy(context.config.max_width(), Indent::empty()),\n@@ -1895,23 +1890,7 @@ fn rewrite_explicit_self(\n                 type_str\n             ))\n         }\n-        ast::SelfKind::Value(_) => {\n-            assert!(!args.is_empty(), \"&[ast::Arg] shouldn't be empty.\");\n-\n-            let mutability = explicit_self_mutability(&args[0]);\n-\n-            Some(format!(\"{}self\", format_mutability(mutability)))\n-        }\n-    }\n-}\n-\n-// Hacky solution caused by absence of `Mutability` in `SelfValue` and\n-// `SelfExplicit` variants of `ast::ExplicitSelf_`.\n-fn explicit_self_mutability(arg: &ast::Arg) -> ast::Mutability {\n-    if let ast::PatKind::Ident(ast::BindingMode::ByValue(mutability), _, _) = arg.pat.node {\n-        mutability\n-    } else {\n-        unreachable!()\n+        ast::SelfKind::Value(mutability) => Some(format!(\"{}self\", format_mutability(mutability))),\n     }\n }\n \n@@ -2048,14 +2027,12 @@ fn rewrite_fn_base(\n     let arg_str = rewrite_args(\n         context,\n         &fd.inputs,\n-        fd.get_self().as_ref(),\n         one_line_budget,\n         multi_line_budget,\n         indent,\n         arg_indent,\n         args_span,\n-        fd.variadic,\n-        generics_str.contains('\\n'),\n+        fd.c_variadic,\n     )?;\n \n     let put_args_in_block = match context.config.indent_style() {\n@@ -2272,19 +2249,13 @@ impl WhereClauseOption {\n fn rewrite_args(\n     context: &RewriteContext<'_>,\n     args: &[ast::Arg],\n-    explicit_self: Option<&ast::ExplicitSelf>,\n     one_line_budget: usize,\n     multi_line_budget: usize,\n     indent: Indent,\n     arg_indent: Indent,\n     span: Span,\n     variadic: bool,\n-    generics_str_contains_newline: bool,\n ) -> Option<String> {\n-    let terminator = \")\";\n-    let separator = \",\";\n-    let next_span_start = span.hi();\n-\n     if args.len() == 0 {\n         let comment = context\n             .snippet(mk_sp(\n@@ -2295,158 +2266,47 @@ fn rewrite_args(\n             .trim();\n         return Some(comment.to_owned());\n     }\n-\n-    let mut arg_item_strs = args\n-        .iter()\n-        .map(|arg| {\n+    let arg_items: Vec<_> = itemize_list(\n+        context.snippet_provider,\n+        args.iter(),\n+        \")\",\n+        \",\",\n+        |arg| span_lo_for_arg(arg),\n+        |arg| arg.ty.span.hi(),\n+        |arg| {\n             arg.rewrite(context, Shape::legacy(multi_line_budget, arg_indent))\n-                .unwrap_or_else(|| context.snippet(arg.span()).to_owned())\n-        })\n-        .collect::<Vec<_>>();\n-\n-    // Account for sugary self.\n-    let mut pre_comment_str = \"\";\n-    let mut post_comment_str = \"\";\n-    let min_args = explicit_self\n-        .and_then(|explicit_self| rewrite_explicit_self(explicit_self, args, context))\n-        .map_or(1, |self_str| {\n-            pre_comment_str = context.snippet(mk_sp(span.lo(), args[0].pat.span.lo()));\n-\n-            let next_start = if args.len() > 1 {\n-                args[1].pat.span().lo()\n-            } else {\n-                span.hi()\n-            };\n-            post_comment_str = context.snippet(mk_sp(args[0].ty.span.hi(), next_start));\n-\n-            arg_item_strs[0] = self_str;\n-            2\n-        });\n-\n-    // Comments between args.\n-    let mut arg_items = Vec::new();\n-    if min_args == 2 {\n-        arg_items.push(ListItem::from_str(\"\"));\n-    }\n-\n-    if args.len() >= min_args || variadic {\n-        let comment_span_start = if min_args == 2 {\n-            let remove_comma_byte_pos = context\n-                .snippet_provider\n-                .span_after(mk_sp(args[0].ty.span.hi(), args[1].pat.span.lo()), \",\");\n-            let first_post_and_second_pre_span =\n-                mk_sp(remove_comma_byte_pos, args[1].pat.span.lo());\n-            if count_newlines(context.snippet(first_post_and_second_pre_span)) > 0 {\n-                context\n-                    .snippet_provider\n-                    .span_after(first_post_and_second_pre_span, \"\\n\")\n-            } else {\n-                remove_comma_byte_pos\n-            }\n-        } else {\n-            span.lo()\n-        };\n-\n-        enum ArgumentKind<'a> {\n-            Regular(&'a ast::Arg),\n-            Variadic(BytePos),\n-        }\n-\n-        let variadic_arg = if variadic {\n-            let variadic_span = mk_sp(args.last().unwrap().ty.span.hi(), span.hi());\n-            let variadic_start =\n-                context.snippet_provider.span_after(variadic_span, \"...\") - BytePos(3);\n-            Some(ArgumentKind::Variadic(variadic_start))\n-        } else {\n-            None\n-        };\n-\n-        let more_items = itemize_list(\n-            context.snippet_provider,\n-            args[min_args - 1..]\n-                .iter()\n-                .map(ArgumentKind::Regular)\n-                .chain(variadic_arg),\n-            terminator,\n-            separator,\n-            |arg| match *arg {\n-                ArgumentKind::Regular(arg) => span_lo_for_arg(arg),\n-                ArgumentKind::Variadic(start) => start,\n-            },\n-            |arg| match *arg {\n-                ArgumentKind::Regular(arg) => arg.ty.span.hi(),\n-                ArgumentKind::Variadic(start) => start + BytePos(3),\n-            },\n-            |arg| match *arg {\n-                ArgumentKind::Regular(..) => None,\n-                ArgumentKind::Variadic(..) => Some(\"...\".to_owned()),\n-            },\n-            comment_span_start,\n-            next_span_start,\n-            false,\n-        );\n-\n-        arg_items.extend(more_items);\n-    }\n-\n-    let arg_items_len = arg_items.len();\n-    let fits_in_one_line = !generics_str_contains_newline\n-        && (arg_items.is_empty()\n-            || arg_items_len == 1 && arg_item_strs[0].len() <= one_line_budget);\n-\n-    for (index, (item, arg)) in arg_items.iter_mut().zip(arg_item_strs).enumerate() {\n-        // add pre comment and post comment for first arg(self)\n-        if index == 0 && explicit_self.is_some() {\n-            let (pre_comment, pre_comment_style) = extract_pre_comment(pre_comment_str);\n-            item.pre_comment = pre_comment;\n-            item.pre_comment_style = pre_comment_style;\n-\n-            let comment_end =\n-                get_comment_end(post_comment_str, separator, terminator, arg_items_len == 1);\n-\n-            item.new_lines = has_extra_newline(post_comment_str, comment_end);\n-            item.post_comment = extract_post_comment(post_comment_str, comment_end, separator);\n-        }\n-        item.item = Some(arg);\n-    }\n-\n-    let last_line_ends_with_comment = arg_items\n-        .iter()\n-        .last()\n-        .and_then(|item| item.post_comment.as_ref())\n-        .map_or(false, |s| s.trim().starts_with(\"//\"));\n-\n-    let (indent, trailing_comma) = match context.config.indent_style() {\n-        IndentStyle::Block if fits_in_one_line => {\n-            (indent.block_indent(context.config), SeparatorTactic::Never)\n-        }\n-        IndentStyle::Block => (\n-            indent.block_indent(context.config),\n-            context.config.trailing_comma(),\n-        ),\n-        IndentStyle::Visual if last_line_ends_with_comment => {\n-            (arg_indent, context.config.trailing_comma())\n-        }\n-        IndentStyle::Visual => (arg_indent, SeparatorTactic::Never),\n-    };\n+                .or_else(|| Some(context.snippet(arg.span()).to_owned()))\n+        },\n+        span.lo(),\n+        span.hi(),\n+        false,\n+    )\n+    .collect();\n \n     let tactic = definitive_tactic(\n         &arg_items,\n-        context.config.fn_args_density().to_list_tactic(),\n+        context\n+            .config\n+            .fn_args_density()\n+            .to_list_tactic(arg_items.len()),\n         Separator::Comma,\n         one_line_budget,\n     );\n     let budget = match tactic {\n         DefinitiveListTactic::Horizontal => one_line_budget,\n         _ => multi_line_budget,\n     };\n-\n-    debug!(\"rewrite_args: budget: {}, tactic: {:?}\", budget, tactic);\n-\n+    let indent = match context.config.indent_style() {\n+        IndentStyle::Block => indent.block_indent(context.config),\n+        IndentStyle::Visual => arg_indent,\n+    };\n     let trailing_separator = if variadic {\n         SeparatorTactic::Never\n     } else {\n-        trailing_comma\n+        match context.config.indent_style() {\n+            IndentStyle::Block => context.config.trailing_comma(),\n+            IndentStyle::Visual => SeparatorTactic::Never,\n+        }\n     };\n     let fmt = ListFormatting::new(Shape::legacy(budget, indent), context.config)\n         .tactic(tactic)"}, {"sha": "c98b7596383e03b0739ac6cc4d4ad6749785b593", "filename": "src/source_map.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ce5cccc32c3897488d2c503fe9d2a9a429a9b0eb/src%2Fsource_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce5cccc32c3897488d2c503fe9d2a9a429a9b0eb/src%2Fsource_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fsource_map.rs?ref=ce5cccc32c3897488d2c503fe9d2a9a429a9b0eb", "patch": "@@ -26,7 +26,13 @@ pub trait LineRangeUtils {\n \n impl<'a> SpanUtils for SnippetProvider<'a> {\n     fn span_after(&self, original: Span, needle: &str) -> BytePos {\n-        self.opt_span_after(original, needle).expect(\"bad span\")\n+        self.opt_span_after(original, needle).unwrap_or_else(|| {\n+            panic!(\n+                \"bad span: `{}`: `{}`\",\n+                needle,\n+                self.span_to_snippet(original).unwrap()\n+            )\n+        })\n     }\n \n     fn span_after_last(&self, original: Span, needle: &str) -> BytePos {\n@@ -43,7 +49,7 @@ impl<'a> SpanUtils for SnippetProvider<'a> {\n     fn span_before(&self, original: Span, needle: &str) -> BytePos {\n         self.opt_span_before(original, needle).unwrap_or_else(|| {\n             panic!(\n-                \"bad span: {}: {}\",\n+                \"bad span: `{}`: `{}`\",\n                 needle,\n                 self.span_to_snippet(original).unwrap()\n             )"}, {"sha": "e6a16b38ce8e10fa42c3e782f47e25beec631368", "filename": "src/types.rs", "status": "modified", "additions": 6, "deletions": 32, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/ce5cccc32c3897488d2c503fe9d2a9a429a9b0eb/src%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce5cccc32c3897488d2c503fe9d2a9a429a9b0eb/src%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftypes.rs?ref=ce5cccc32c3897488d2c503fe9d2a9a429a9b0eb", "patch": "@@ -302,24 +302,6 @@ where\n         FunctionRetTy::Default(..) => String::new(),\n     };\n \n-    // Code for handling variadics is somewhat duplicated for items, but they\n-    // are different enough to need some serious refactoring to share code.\n-    enum ArgumentKind<T>\n-    where\n-        T: Deref,\n-        <T as Deref>::Target: Rewrite + Spanned,\n-    {\n-        Regular(T),\n-        Variadic(BytePos),\n-    }\n-\n-    let variadic_arg = if variadic {\n-        let variadic_start = context.snippet_provider.span_before(span, \"...\");\n-        Some(ArgumentKind::Variadic(variadic_start))\n-    } else {\n-        None\n-    };\n-\n     let list_shape = if context.use_block_indent() {\n         Shape::indented(\n             shape.block().indent.block_indent(context.config),\n@@ -335,21 +317,12 @@ where\n     let list_lo = context.snippet_provider.span_after(span, \"(\");\n     let items = itemize_list(\n         context.snippet_provider,\n-        inputs.map(ArgumentKind::Regular).chain(variadic_arg),\n+        inputs,\n         \")\",\n         \",\",\n-        |arg| match *arg {\n-            ArgumentKind::Regular(ref ty) => ty.span().lo(),\n-            ArgumentKind::Variadic(start) => start,\n-        },\n-        |arg| match *arg {\n-            ArgumentKind::Regular(ref ty) => ty.span().hi(),\n-            ArgumentKind::Variadic(start) => start + BytePos(3),\n-        },\n-        |arg| match *arg {\n-            ArgumentKind::Regular(ref ty) => ty.rewrite(context, list_shape),\n-            ArgumentKind::Variadic(_) => Some(\"...\".to_owned()),\n-        },\n+        |arg| arg.span().lo(),\n+        |arg| arg.span().hi(),\n+        |arg| arg.rewrite(context, list_shape),\n         list_lo,\n         span.hi(),\n         false,\n@@ -697,6 +670,7 @@ impl Rewrite for ast::Ty {\n             ast::TyKind::ImplTrait(_, ref it) => it\n                 .rewrite(context, shape)\n                 .map(|it_str| format!(\"impl {}\", it_str)),\n+            ast::TyKind::CVarArgs => Some(\"...\".to_owned()),\n             ast::TyKind::Err | ast::TyKind::Typeof(..) => unreachable!(),\n         }\n     }\n@@ -741,7 +715,7 @@ fn rewrite_bare_fn(\n     let rewrite = format_function_type(\n         bare_fn.decl.inputs.iter(),\n         &bare_fn.decl.output,\n-        bare_fn.decl.variadic,\n+        bare_fn.decl.c_variadic,\n         span,\n         context,\n         func_ty_shape,"}, {"sha": "3bd5af3112de3dda6a86975d2fd7f078c1ceeade", "filename": "src/visitor.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ce5cccc32c3897488d2c503fe9d2a9a429a9b0eb/src%2Fvisitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce5cccc32c3897488d2c503fe9d2a9a429a9b0eb/src%2Fvisitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvisitor.rs?ref=ce5cccc32c3897488d2c503fe9d2a9a429a9b0eb", "patch": "@@ -388,7 +388,7 @@ impl<'b, 'a: 'b> FmtVisitor<'a> {\n             ast::ItemKind::Static(..) | ast::ItemKind::Const(..) => {\n                 self.visit_static(&StaticParts::from_item(item));\n             }\n-            ast::ItemKind::Fn(ref decl, fn_header, ref generics, ref body) => {\n+            ast::ItemKind::Fn(ref decl, ref fn_header, ref generics, ref body) => {\n                 let inner_attrs = inner_attributes(&item.attrs);\n                 self.visit_fn(\n                     visit::FnKind::ItemFn(item.ident, fn_header, &item.vis, body),"}, {"sha": "f92c9cd31e235a8624fa4a6ec21d85b98de8700b", "filename": "tests/source/attrib.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ce5cccc32c3897488d2c503fe9d2a9a429a9b0eb/tests%2Fsource%2Fattrib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce5cccc32c3897488d2c503fe9d2a9a429a9b0eb/tests%2Fsource%2Fattrib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fattrib.rs?ref=ce5cccc32c3897488d2c503fe9d2a9a429a9b0eb", "patch": "@@ -168,7 +168,6 @@ pub fn foo() {}\n \n // path attrs\n #[clippy::bar]\n-#[clippy::bar=foo]\n #[clippy::bar(a, b, c)]\n pub fn foo() {}\n \n@@ -217,4 +216,4 @@ fn stmt_expr_attributes() {\n     let foo ;\n     #[must_use]\n    foo = false ;\n-}\n\\ No newline at end of file\n+}"}, {"sha": "cecc837d7f969ab147b2d2107a0da47e4c955cf6", "filename": "tests/source/doc-attrib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ce5cccc32c3897488d2c503fe9d2a9a429a9b0eb/tests%2Fsource%2Fdoc-attrib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce5cccc32c3897488d2c503fe9d2a9a429a9b0eb/tests%2Fsource%2Fdoc-attrib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fdoc-attrib.rs?ref=ce5cccc32c3897488d2c503fe9d2a9a429a9b0eb", "patch": "@@ -47,7 +47,6 @@ pub fn foo() {}\n \n // path attrs\n #[clippy::bar]\n-#[clippy::bar=foo]\n #[clippy::bar(a, b, c)]\n pub fn foo() {}\n "}, {"sha": "b5a6c3491de1ed598f95f992f39483bbf7aa6422", "filename": "tests/target/attrib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ce5cccc32c3897488d2c503fe9d2a9a429a9b0eb/tests%2Ftarget%2Fattrib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce5cccc32c3897488d2c503fe9d2a9a429a9b0eb/tests%2Ftarget%2Fattrib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fattrib.rs?ref=ce5cccc32c3897488d2c503fe9d2a9a429a9b0eb", "patch": "@@ -197,7 +197,6 @@ pub fn foo() {}\n \n // path attrs\n #[clippy::bar]\n-#[clippy::bar=foo]\n #[clippy::bar(a, b, c)]\n pub fn foo() {}\n "}, {"sha": "474c19282fdb1941fddf624089d1aeb9a58b427f", "filename": "tests/target/doc-attrib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ce5cccc32c3897488d2c503fe9d2a9a429a9b0eb/tests%2Ftarget%2Fdoc-attrib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce5cccc32c3897488d2c503fe9d2a9a429a9b0eb/tests%2Ftarget%2Fdoc-attrib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fdoc-attrib.rs?ref=ce5cccc32c3897488d2c503fe9d2a9a429a9b0eb", "patch": "@@ -55,7 +55,6 @@ pub fn foo() {}\n \n // path attrs\n #[clippy::bar]\n-#[clippy::bar=foo]\n #[clippy::bar(a, b, c)]\n pub fn foo() {}\n "}, {"sha": "68052b25f48305351cd10afe2a5e113ad28a5ef7", "filename": "tests/target/macro_rules.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ce5cccc32c3897488d2c503fe9d2a9a429a9b0eb/tests%2Ftarget%2Fmacro_rules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce5cccc32c3897488d2c503fe9d2a9a429a9b0eb/tests%2Ftarget%2Fmacro_rules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fmacro_rules.rs?ref=ce5cccc32c3897488d2c503fe9d2a9a429a9b0eb", "patch": "@@ -172,7 +172,7 @@ macro_rules! m [\n ];\n \n // #2470\n-macro foo($type_name:ident, $docs:expr) {\n+macro foo($type_name: ident, $docs: expr) {\n     #[allow(non_camel_case_types)]\n     #[doc=$docs]\n     #[derive(Debug, Clone, Copy)]"}, {"sha": "06f0a13b10ce5a80195325e67730b0c693a88e52", "filename": "tests/target/trailing_commas.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ce5cccc32c3897488d2c503fe9d2a9a429a9b0eb/tests%2Ftarget%2Ftrailing_commas.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce5cccc32c3897488d2c503fe9d2a9a429a9b0eb/tests%2Ftarget%2Ftrailing_commas.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Ftrailing_commas.rs?ref=ce5cccc32c3897488d2c503fe9d2a9a429a9b0eb", "patch": "@@ -23,7 +23,7 @@ impl Trait for T\n where\n     T: P,\n {\n-    fn f(x: T) -> T\n+    fn f(x: T,) -> T\n     where\n         T: Q + R,\n     {"}]}