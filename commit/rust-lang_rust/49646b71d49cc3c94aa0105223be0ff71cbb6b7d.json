{"sha": "49646b71d49cc3c94aa0105223be0ff71cbb6b7d", "node_id": "C_kwDOAAsO6NoAKDQ5NjQ2YjcxZDQ5Y2MzYzk0YWEwMTA1MjIzYmUwZmY3MWNiYjZiN2Q", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2022-03-07T16:49:12Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-03-07T16:49:12Z"}, "message": "Merge #11445\n\n11445: Upstream inlay hints r=lnicola a=lnicola\n\nCloses https://github.com/rust-analyzer/rust-analyzer/issues/2797\r\nCloses https://github.com/rust-analyzer/rust-analyzer/issues/3394 (since now resolve the hints for the range given only, not for the whole document. We don't actually resolve anything due to [hard requirement](https://github.com/rust-analyzer/rust-analyzer/pull/11445#issuecomment-1035227434) on label being immutable. Any further heavy actions could go to the `resolve` method that's now available via the official Code API for hints)\r\n\r\nBased on `@SomeoneToIgnore's` branch, with a couple of updates:\r\n\r\n - I squashed, more or less successfully, the commits on that branch\r\n - downloading the `.d.ts` no longer works, but you can get it manually from https://raw.githubusercontent.com/microsoft/vscode/release/1.64/src/vscode-dts/vscode.proposed.inlayHints.d.ts\r\n - you might need to pass `--enable-proposed-api matklad.rust-analyzer`\r\n - if I'm reading the definition right, `InlayHintKind` needs to be serialized as a number, not string\r\n - this doesn't work anyway -- the client-side gets the hints, but they don't display\n\nCo-authored-by: Kirill Bulatov <mail4score@gmail.com>\nCo-authored-by: Lauren\u021biu Nicola <lnicola@dend.ro>", "tree": {"sha": "533597081181df411cf4c043152f65a55f4f03dd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/533597081181df411cf4c043152f65a55f4f03dd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/49646b71d49cc3c94aa0105223be0ff71cbb6b7d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiJjeICRBK7hj4Ov3rIwAATbQIAE49kkRx58SSe5yTzEyLxHSp\nvC6ZsXWOggSiMmR+Ha8lO3MMVGrRI4kU2VNIlXl4tfDAiMAoqLAKKOYwxJ5KsD2F\n7cvU5hP8CMml14zs9T4gE2xLg/bvwcT1mMIMsBjtNt8WGj2D7kUiekg8yxKrRGmi\nYtvQNQxNSqUlGOocfhwHYD5M56WIXlT+spBUu8eXZlDksf1iuxj5EwRHPoD0WCmG\nAyBB6L5JYwrgcYkTJc5ZDs40f5ap970tJIt5c+a4/aL8B5ZuumBpY6vxm4pv3Ewn\n3irXzMIKT6p/kx81z4jggdCFsqOnUfmRmExKxEo5/qJYk/fyOP9gZrr3AxuGwvo=\n=qKuF\n-----END PGP SIGNATURE-----\n", "payload": "tree 533597081181df411cf4c043152f65a55f4f03dd\nparent 18d0faf027a0ea2808b842f2dfbd7b7e12438f44\nparent 88a2141b7702a553050dc46653251550300e6269\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1646671752 +0000\ncommitter GitHub <noreply@github.com> 1646671752 +0000\n\nMerge #11445\n\n11445: Upstream inlay hints r=lnicola a=lnicola\n\nCloses https://github.com/rust-analyzer/rust-analyzer/issues/2797\r\nCloses https://github.com/rust-analyzer/rust-analyzer/issues/3394 (since now resolve the hints for the range given only, not for the whole document. We don't actually resolve anything due to [hard requirement](https://github.com/rust-analyzer/rust-analyzer/pull/11445#issuecomment-1035227434) on label being immutable. Any further heavy actions could go to the `resolve` method that's now available via the official Code API for hints)\r\n\r\nBased on `@SomeoneToIgnore's` branch, with a couple of updates:\r\n\r\n - I squashed, more or less successfully, the commits on that branch\r\n - downloading the `.d.ts` no longer works, but you can get it manually from https://raw.githubusercontent.com/microsoft/vscode/release/1.64/src/vscode-dts/vscode.proposed.inlayHints.d.ts\r\n - you might need to pass `--enable-proposed-api matklad.rust-analyzer`\r\n - if I'm reading the definition right, `InlayHintKind` needs to be serialized as a number, not string\r\n - this doesn't work anyway -- the client-side gets the hints, but they don't display\n\nCo-authored-by: Kirill Bulatov <mail4score@gmail.com>\nCo-authored-by: Lauren\u021biu Nicola <lnicola@dend.ro>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/49646b71d49cc3c94aa0105223be0ff71cbb6b7d", "html_url": "https://github.com/rust-lang/rust/commit/49646b71d49cc3c94aa0105223be0ff71cbb6b7d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/49646b71d49cc3c94aa0105223be0ff71cbb6b7d/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "18d0faf027a0ea2808b842f2dfbd7b7e12438f44", "url": "https://api.github.com/repos/rust-lang/rust/commits/18d0faf027a0ea2808b842f2dfbd7b7e12438f44", "html_url": "https://github.com/rust-lang/rust/commit/18d0faf027a0ea2808b842f2dfbd7b7e12438f44"}, {"sha": "88a2141b7702a553050dc46653251550300e6269", "url": "https://api.github.com/repos/rust-lang/rust/commits/88a2141b7702a553050dc46653251550300e6269", "html_url": "https://github.com/rust-lang/rust/commit/88a2141b7702a553050dc46653251550300e6269"}], "stats": {"total": 1198, "additions": 555, "deletions": 643}, "files": [{"sha": "8ecc5567b43d209f4d70bb67d0989794b9ce3be7", "filename": "crates/ide/src/inlay_hints.rs", "status": "modified", "additions": 95, "deletions": 18, "changes": 113, "blob_url": "https://github.com/rust-lang/rust/blob/49646b71d49cc3c94aa0105223be0ff71cbb6b7d/crates%2Fide%2Fsrc%2Finlay_hints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49646b71d49cc3c94aa0105223be0ff71cbb6b7d/crates%2Fide%2Fsrc%2Finlay_hints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Finlay_hints.rs?ref=49646b71d49cc3c94aa0105223be0ff71cbb6b7d", "patch": "@@ -5,7 +5,7 @@ use itertools::Itertools;\n use stdx::to_lower_snake_case;\n use syntax::{\n     ast::{self, AstNode, HasArgList, HasName, UnaryOp},\n-    match_ast, Direction, NodeOrToken, SmolStr, SyntaxKind, TextRange, T,\n+    match_ast, Direction, NodeOrToken, SmolStr, SyntaxKind, SyntaxNode, TextRange, T,\n };\n \n use crate::FileId;\n@@ -58,32 +58,58 @@ pub struct InlayHint {\n pub(crate) fn inlay_hints(\n     db: &RootDatabase,\n     file_id: FileId,\n+    range_limit: Option<FileRange>,\n     config: &InlayHintsConfig,\n ) -> Vec<InlayHint> {\n     let _p = profile::span(\"inlay_hints\");\n     let sema = Semantics::new(db);\n     let file = sema.parse(file_id);\n     let file = file.syntax();\n \n-    let mut res = Vec::new();\n-\n-    for node in file.descendants() {\n-        if let Some(expr) = ast::Expr::cast(node.clone()) {\n-            get_chaining_hints(&mut res, &sema, config, &expr);\n-            match expr {\n-                ast::Expr::CallExpr(it) => {\n-                    get_param_name_hints(&mut res, &sema, config, ast::Expr::from(it));\n-                }\n-                ast::Expr::MethodCallExpr(it) => {\n-                    get_param_name_hints(&mut res, &sema, config, ast::Expr::from(it));\n+    let mut hints = Vec::new();\n+\n+    if let Some(range_limit) = range_limit {\n+        let range_limit = range_limit.range;\n+        match file.covering_element(range_limit) {\n+            NodeOrToken::Token(_) => return hints,\n+            NodeOrToken::Node(n) => {\n+                for node in n\n+                    .descendants()\n+                    .filter(|descendant| range_limit.contains_range(descendant.text_range()))\n+                {\n+                    get_hints(&mut hints, &sema, config, node);\n                 }\n-                _ => (),\n             }\n-        } else if let Some(it) = ast::IdentPat::cast(node.clone()) {\n-            get_bind_pat_hints(&mut res, &sema, config, &it);\n         }\n+    } else {\n+        for node in file.descendants() {\n+            get_hints(&mut hints, &sema, config, node);\n+        }\n+    }\n+\n+    hints\n+}\n+\n+fn get_hints(\n+    hints: &mut Vec<InlayHint>,\n+    sema: &Semantics<RootDatabase>,\n+    config: &InlayHintsConfig,\n+    node: SyntaxNode,\n+) {\n+    if let Some(expr) = ast::Expr::cast(node.clone()) {\n+        get_chaining_hints(hints, sema, config, &expr);\n+        match expr {\n+            ast::Expr::CallExpr(it) => {\n+                get_param_name_hints(hints, sema, config, ast::Expr::from(it));\n+            }\n+            ast::Expr::MethodCallExpr(it) => {\n+                get_param_name_hints(hints, sema, config, ast::Expr::from(it));\n+            }\n+            _ => (),\n+        }\n+    } else if let Some(it) = ast::IdentPat::cast(node) {\n+        get_bind_pat_hints(hints, sema, config, &it);\n     }\n-    res\n }\n \n fn get_chaining_hints(\n@@ -541,6 +567,8 @@ fn get_callable(\n #[cfg(test)]\n mod tests {\n     use expect_test::{expect, Expect};\n+    use ide_db::base_db::FileRange;\n+    use syntax::{TextRange, TextSize};\n     use test_utils::extract_annotations;\n \n     use crate::{fixture, inlay_hints::InlayHintsConfig};\n@@ -604,7 +632,7 @@ mod tests {\n     fn check_with_config(config: InlayHintsConfig, ra_fixture: &str) {\n         let (analysis, file_id) = fixture::file(ra_fixture);\n         let expected = extract_annotations(&*analysis.file_text(file_id).unwrap());\n-        let inlay_hints = analysis.inlay_hints(&config, file_id).unwrap();\n+        let inlay_hints = analysis.inlay_hints(&config, file_id, None).unwrap();\n         let actual =\n             inlay_hints.into_iter().map(|it| (it.range, it.label.to_string())).collect::<Vec<_>>();\n         assert_eq!(expected, actual, \"\\nExpected:\\n{:#?}\\n\\nActual:\\n{:#?}\", expected, actual);\n@@ -613,7 +641,7 @@ mod tests {\n     #[track_caller]\n     fn check_expect(config: InlayHintsConfig, ra_fixture: &str, expect: Expect) {\n         let (analysis, file_id) = fixture::file(ra_fixture);\n-        let inlay_hints = analysis.inlay_hints(&config, file_id).unwrap();\n+        let inlay_hints = analysis.inlay_hints(&config, file_id, None).unwrap();\n         expect.assert_debug_eq(&inlay_hints)\n     }\n \n@@ -1045,6 +1073,55 @@ fn main() {\n         )\n     }\n \n+    #[test]\n+    fn check_hint_range_limit() {\n+        let fixture = r#\"\n+        //- minicore: fn, sized\n+        fn foo() -> impl Fn() { loop {} }\n+        fn foo1() -> impl Fn(f64) { loop {} }\n+        fn foo2() -> impl Fn(f64, f64) { loop {} }\n+        fn foo3() -> impl Fn(f64, f64) -> u32 { loop {} }\n+        fn foo4() -> &'static dyn Fn(f64, f64) -> u32 { loop {} }\n+        fn foo5() -> &'static dyn Fn(&'static dyn Fn(f64, f64) -> u32, f64) -> u32 { loop {} }\n+        fn foo6() -> impl Fn(f64, f64) -> u32 + Sized { loop {} }\n+        fn foo7() -> *const (impl Fn(f64, f64) -> u32 + Sized) { loop {} }\n+\n+        fn main() {\n+            let foo = foo();\n+            let foo = foo1();\n+            let foo = foo2();\n+            let foo = foo3();\n+             // ^^^ impl Fn(f64, f64) -> u32\n+            let foo = foo4();\n+             // ^^^ &dyn Fn(f64, f64) -> u32\n+            let foo = foo5();\n+            let foo = foo6();\n+            let foo = foo7();\n+        }\n+        \"#;\n+        let (analysis, file_id) = fixture::file(fixture);\n+        let expected = extract_annotations(&*analysis.file_text(file_id).unwrap());\n+        let inlay_hints = analysis\n+            .inlay_hints(\n+                &InlayHintsConfig {\n+                    parameter_hints: false,\n+                    type_hints: true,\n+                    chaining_hints: false,\n+                    hide_named_constructor_hints: false,\n+                    max_length: None,\n+                },\n+                file_id,\n+                Some(FileRange {\n+                    file_id,\n+                    range: TextRange::new(TextSize::from(500), TextSize::from(600)),\n+                }),\n+            )\n+            .unwrap();\n+        let actual =\n+            inlay_hints.into_iter().map(|it| (it.range, it.label.to_string())).collect::<Vec<_>>();\n+        assert_eq!(expected, actual, \"\\nExpected:\\n{:#?}\\n\\nActual:\\n{:#?}\", expected, actual);\n+    }\n+\n     #[test]\n     fn fn_hints_ptr_rpit_fn_parentheses() {\n         check_types("}, {"sha": "1acaaaccf0da7e27663c99f9f0e57e67ca13cc8d", "filename": "crates/ide/src/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/49646b71d49cc3c94aa0105223be0ff71cbb6b7d/crates%2Fide%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49646b71d49cc3c94aa0105223be0ff71cbb6b7d/crates%2Fide%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Flib.rs?ref=49646b71d49cc3c94aa0105223be0ff71cbb6b7d", "patch": "@@ -358,8 +358,9 @@ impl Analysis {\n         &self,\n         config: &InlayHintsConfig,\n         file_id: FileId,\n+        range: Option<FileRange>,\n     ) -> Cancellable<Vec<InlayHint>> {\n-        self.with_db(|db| inlay_hints::inlay_hints(db, file_id, config))\n+        self.with_db(|db| inlay_hints::inlay_hints(db, file_id, range, config))\n     }\n \n     /// Returns the set of folding ranges."}, {"sha": "31d85c60e7a4900d6fe7bbf4cfe3a62bed10194b", "filename": "crates/ide/src/static_index.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49646b71d49cc3c94aa0105223be0ff71cbb6b7d/crates%2Fide%2Fsrc%2Fstatic_index.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49646b71d49cc3c94aa0105223be0ff71cbb6b7d/crates%2Fide%2Fsrc%2Fstatic_index.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fstatic_index.rs?ref=49646b71d49cc3c94aa0105223be0ff71cbb6b7d", "patch": "@@ -112,6 +112,7 @@ impl StaticIndex<'_> {\n                     max_length: Some(25),\n                 },\n                 file_id,\n+                None,\n             )\n             .unwrap();\n         // hovers"}, {"sha": "dc6cf61f79a8eb5196eba4fee92624e27106e0fd", "filename": "crates/rust-analyzer/src/caps.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49646b71d49cc3c94aa0105223be0ff71cbb6b7d/crates%2Frust-analyzer%2Fsrc%2Fcaps.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49646b71d49cc3c94aa0105223be0ff71cbb6b7d/crates%2Frust-analyzer%2Fsrc%2Fcaps.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fcaps.rs?ref=49646b71d49cc3c94aa0105223be0ff71cbb6b7d", "patch": "@@ -115,6 +115,7 @@ pub fn server_capabilities(config: &Config) -> ServerCapabilities {\n         experimental: Some(json!({\n             \"externalDocs\": true,\n             \"hoverRange\": true,\n+            \"inlayHints\": true,\n             \"joinLines\": true,\n             \"matchingBrace\": true,\n             \"moveItem\": true,"}, {"sha": "249e861f9b729df17021d935951a198cfaf23136", "filename": "crates/rust-analyzer/src/handlers.rs", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/49646b71d49cc3c94aa0105223be0ff71cbb6b7d/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49646b71d49cc3c94aa0105223be0ff71cbb6b7d/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs?ref=49646b71d49cc3c94aa0105223be0ff71cbb6b7d", "patch": "@@ -1318,11 +1318,22 @@ pub(crate) fn handle_inlay_hints(\n     params: InlayHintsParams,\n ) -> Result<Vec<InlayHint>> {\n     let _p = profile::span(\"handle_inlay_hints\");\n-    let file_id = from_proto::file_id(&snap, &params.text_document.uri)?;\n+    let document_uri = &params.text_document.uri;\n+    let file_id = from_proto::file_id(&snap, document_uri)?;\n     let line_index = snap.file_line_index(file_id)?;\n+    let range = params\n+        .range\n+        .map(|range| {\n+            from_proto::file_range(\n+                &snap,\n+                TextDocumentIdentifier::new(document_uri.to_owned()),\n+                range,\n+            )\n+        })\n+        .transpose()?;\n     Ok(snap\n         .analysis\n-        .inlay_hints(&snap.config.inlay_hints(), file_id)?\n+        .inlay_hints(&snap.config.inlay_hints(), file_id, range)?\n         .into_iter()\n         .map(|it| to_proto::inlay_hint(&line_index, it))\n         .collect())"}, {"sha": "846f151304424ef0f04aa001c42e4de3a2ccc882", "filename": "crates/rust-analyzer/src/lsp_ext.rs", "status": "modified", "additions": 15, "deletions": 8, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/49646b71d49cc3c94aa0105223be0ff71cbb6b7d/crates%2Frust-analyzer%2Fsrc%2Flsp_ext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49646b71d49cc3c94aa0105223be0ff71cbb6b7d/crates%2Frust-analyzer%2Fsrc%2Flsp_ext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Flsp_ext.rs?ref=49646b71d49cc3c94aa0105223be0ff71cbb6b7d", "patch": "@@ -233,27 +233,34 @@ pub enum InlayHints {}\n impl Request for InlayHints {\n     type Params = InlayHintsParams;\n     type Result = Vec<InlayHint>;\n-    const METHOD: &'static str = \"rust-analyzer/inlayHints\";\n+    const METHOD: &'static str = \"experimental/inlayHints\";\n }\n \n #[derive(Serialize, Deserialize, Debug)]\n #[serde(rename_all = \"camelCase\")]\n pub struct InlayHintsParams {\n     pub text_document: TextDocumentIdentifier,\n+    pub range: Option<lsp_types::Range>,\n }\n \n-#[derive(Debug, PartialEq, Eq, Deserialize, Serialize)]\n-pub enum InlayKind {\n-    TypeHint,\n-    ParameterHint,\n-    ChainingHint,\n+#[derive(Eq, PartialEq, Debug, Copy, Clone, Serialize, Deserialize)]\n+#[serde(transparent)]\n+pub struct InlayHintKind(u8);\n+\n+impl InlayHintKind {\n+    pub const TYPE: InlayHintKind = InlayHintKind(1);\n+    pub const PARAMETER: InlayHintKind = InlayHintKind(2);\n }\n \n #[derive(Debug, Deserialize, Serialize)]\n+#[serde(rename_all = \"camelCase\")]\n pub struct InlayHint {\n-    pub range: Range,\n-    pub kind: InlayKind,\n     pub label: String,\n+    pub position: Position,\n+    pub kind: Option<InlayHintKind>,\n+    pub tooltip: Option<String>,\n+    pub padding_left: Option<bool>,\n+    pub padding_right: Option<bool>,\n }\n \n pub enum Ssr {}"}, {"sha": "3ba097dc7ffe4e9ab84af7979f14700710a12e42", "filename": "crates/rust-analyzer/src/to_proto.rs", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/49646b71d49cc3c94aa0105223be0ff71cbb6b7d/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49646b71d49cc3c94aa0105223be0ff71cbb6b7d/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs?ref=49646b71d49cc3c94aa0105223be0ff71cbb6b7d", "patch": "@@ -416,12 +416,18 @@ pub(crate) fn signature_help(\n pub(crate) fn inlay_hint(line_index: &LineIndex, inlay_hint: InlayHint) -> lsp_ext::InlayHint {\n     lsp_ext::InlayHint {\n         label: inlay_hint.label.to_string(),\n-        range: range(line_index, inlay_hint.range),\n+        position: match inlay_hint.kind {\n+            InlayKind::ParameterHint => position(line_index, inlay_hint.range.start()),\n+            _ => position(line_index, inlay_hint.range.end()),\n+        },\n         kind: match inlay_hint.kind {\n-            InlayKind::ParameterHint => lsp_ext::InlayKind::ParameterHint,\n-            InlayKind::TypeHint => lsp_ext::InlayKind::TypeHint,\n-            InlayKind::ChainingHint => lsp_ext::InlayKind::ChainingHint,\n+            InlayKind::ParameterHint => Some(lsp_ext::InlayHintKind::PARAMETER),\n+            InlayKind::TypeHint => Some(lsp_ext::InlayHintKind::TYPE),\n+            InlayKind::ChainingHint => None,\n         },\n+        tooltip: None,\n+        padding_left: Some(true),\n+        padding_right: Some(true),\n     }\n }\n "}, {"sha": "9f1c7fe0a3a673e452369d0eadc89d9da90ae346", "filename": "docs/dev/lsp-extensions.md", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/49646b71d49cc3c94aa0105223be0ff71cbb6b7d/docs%2Fdev%2Flsp-extensions.md", "raw_url": "https://github.com/rust-lang/rust/raw/49646b71d49cc3c94aa0105223be0ff71cbb6b7d/docs%2Fdev%2Flsp-extensions.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fdev%2Flsp-extensions.md?ref=49646b71d49cc3c94aa0105223be0ff71cbb6b7d", "patch": "@@ -1,5 +1,5 @@\n <!---\n-lsp_ext.rs hash: 5b53b92c9f9d6650\n+lsp_ext.rs hash: e32fdde032ff6ebc\n \n If you need to change the above hash to make the test pass, please check if you\n need to adjust this doc as well and ping this issue:\n@@ -562,11 +562,11 @@ Expands macro call at a given position.\n \n ## Inlay Hints\n \n-**Method:** `rust-analyzer/inlayHints`\n+**Method:** `experimental/inlayHints`\n \n This request is sent from client to server to render \"inlay hints\" -- virtual text inserted into editor to show things like inferred types.\n Generally, the client should re-query inlay hints after every modification.\n-Note that we plan to move this request to `experimental/inlayHints`, as it is not really Rust-specific, but the current API is not necessary the right one.\n+Until it gets upstreamed, this follows the VS Code API.\n Upstream issues: https://github.com/microsoft/language-server-protocol/issues/956 , https://github.com/rust-analyzer/rust-analyzer/issues/2797\n \n **Request:**\n@@ -581,9 +581,12 @@ interface InlayHintsParams {\n \n ```typescript\n interface InlayHint {\n-    kind: \"TypeHint\" | \"ParameterHint\" | \"ChainingHint\",\n-    range: Range,\n-    label: string,\n+    position: Position;\n+    label: string | InlayHintLabelPart[];\n+    tooltip?: string | MarkdownString | undefined;\n+    kind?: InlayHintKind;\n+    paddingLeft?: boolean;\n+    paddingRight?: boolean;\n }\n ```\n "}, {"sha": "2c975a947eb35e25a9c10c66d45fe9f812c54a02", "filename": "editors/code/.gitignore", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/49646b71d49cc3c94aa0105223be0ff71cbb6b7d/editors%2Fcode%2F.gitignore", "raw_url": "https://github.com/rust-lang/rust/raw/49646b71d49cc3c94aa0105223be0ff71cbb6b7d/editors%2Fcode%2F.gitignore", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2F.gitignore?ref=49646b71d49cc3c94aa0105223be0ff71cbb6b7d", "patch": "@@ -3,3 +3,5 @@ node_modules\n server\n .vscode-test/\n *.vsix\n+bundle\n+vscode.proposed.d.ts"}, {"sha": "d2015b3bce58865261482270a1770abc45646fb1", "filename": "editors/code/package-lock.json", "status": "modified", "additions": 367, "deletions": 260, "changes": 627, "blob_url": "https://github.com/rust-lang/rust/blob/49646b71d49cc3c94aa0105223be0ff71cbb6b7d/editors%2Fcode%2Fpackage-lock.json", "raw_url": "https://github.com/rust-lang/rust/raw/49646b71d49cc3c94aa0105223be0ff71cbb6b7d/editors%2Fcode%2Fpackage-lock.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage-lock.json?ref=49646b71d49cc3c94aa0105223be0ff71cbb6b7d", "patch": "@@ -11,34 +11,34 @@\n             \"dependencies\": {\n                 \"d3\": \"^7.3.0\",\n                 \"d3-graphviz\": \"^4.0.0\",\n-                \"vscode-languageclient\": \"8.0.0-next.8\"\n+                \"vscode-languageclient\": \"8.0.0-next.12\"\n             },\n             \"devDependencies\": {\n                 \"@types/node\": \"~14.17.5\",\n-                \"@types/vscode\": \"~1.63.0\",\n+                \"@types/vscode\": \"~1.65.0\",\n                 \"@typescript-eslint/eslint-plugin\": \"^5.10.0\",\n                 \"@typescript-eslint/parser\": \"^5.10.0\",\n                 \"@vscode/test-electron\": \"^2.1.1\",\n                 \"esbuild\": \"^0.14.12\",\n-                \"eslint\": \"^8.7.0\",\n+                \"eslint\": \"^8.10.0\",\n                 \"tslib\": \"^2.3.0\",\n                 \"typescript\": \"^4.5.5\",\n                 \"typescript-formatter\": \"^7.2.2\",\n-                \"vsce\": \"^2.6.3\"\n+                \"vsce\": \"^2.6.7\"\n             },\n             \"engines\": {\n-                \"vscode\": \"^1.63.0\"\n+                \"vscode\": \"^1.65.0\"\n             }\n         },\n         \"node_modules/@eslint/eslintrc\": {\n-            \"version\": \"1.0.5\",\n-            \"resolved\": \"https://registry.npmjs.org/@eslint/eslintrc/-/eslintrc-1.0.5.tgz\",\n-            \"integrity\": \"sha512-BLxsnmK3KyPunz5wmCCpqy0YelEoxxGmH73Is+Z74oOTMtExcjkr3dDR6quwrjh1YspA8DH9gnX1o069KiS9AQ==\",\n+            \"version\": \"1.2.0\",\n+            \"resolved\": \"https://registry.npmjs.org/@eslint/eslintrc/-/eslintrc-1.2.0.tgz\",\n+            \"integrity\": \"sha512-igm9SjJHNEJRiUnecP/1R5T3wKLEJ7pL6e2P+GUSfCd0dGjPYYZve08uzw8L2J8foVHFz+NGu12JxRcU2gGo6w==\",\n             \"dev\": true,\n             \"dependencies\": {\n                 \"ajv\": \"^6.12.4\",\n                 \"debug\": \"^4.3.2\",\n-                \"espree\": \"^9.2.0\",\n+                \"espree\": \"^9.3.1\",\n                 \"globals\": \"^13.9.0\",\n                 \"ignore\": \"^4.0.6\",\n                 \"import-fresh\": \"^3.2.1\",\n@@ -141,9 +141,9 @@\n             \"dev\": true\n         },\n         \"node_modules/@types/vscode\": {\n-            \"version\": \"1.63.1\",\n-            \"resolved\": \"https://registry.npmjs.org/@types/vscode/-/vscode-1.63.1.tgz\",\n-            \"integrity\": \"sha512-Z+ZqjRcnGfHP86dvx/BtSwWyZPKQ/LBdmAVImY82TphyjOw2KgTKcp7Nx92oNwCTsHzlshwexAG/WiY2JuUm3g==\",\n+            \"version\": \"1.65.0\",\n+            \"resolved\": \"https://registry.npmjs.org/@types/vscode/-/vscode-1.65.0.tgz\",\n+            \"integrity\": \"sha512-wQhExnh2nEzpjDMSKhUvnNmz3ucpd3E+R7wJkOhBNK3No6fG3VUdmVmMOKD0A8NDZDDDiQcLNxe3oGmX5SjJ5w==\",\n             \"dev\": true\n         },\n         \"node_modules/@typescript-eslint/eslint-plugin\": {\n@@ -1514,268 +1514,359 @@\n             }\n         },\n         \"node_modules/esbuild\": {\n-            \"version\": \"0.14.12\",\n-            \"resolved\": \"https://registry.npmjs.org/esbuild/-/esbuild-0.14.12.tgz\",\n-            \"integrity\": \"sha512-o1vQkG+eSDLkWDqWfR8v6eI+byGAUkbRs30eAJcJxUFp3dwMGWR0tAjtam1Bb1RSS2j+4kAUFiuJTnW3J4CYcw==\",\n+            \"version\": \"0.14.25\",\n+            \"resolved\": \"https://registry.npmjs.org/esbuild/-/esbuild-0.14.25.tgz\",\n+            \"integrity\": \"sha512-4JHEIOMNFvK09ziiL+iVmldIhLbn49V4NAVo888tcGFKedEZY/Y8YapfStJ6zSE23tzYPKxqKwQBnQoIO0BI/Q==\",\n             \"dev\": true,\n             \"hasInstallScript\": true,\n             \"bin\": {\n                 \"esbuild\": \"bin/esbuild\"\n             },\n+            \"engines\": {\n+                \"node\": \">=12\"\n+            },\n             \"optionalDependencies\": {\n-                \"esbuild-android-arm64\": \"0.14.12\",\n-                \"esbuild-darwin-64\": \"0.14.12\",\n-                \"esbuild-darwin-arm64\": \"0.14.12\",\n-                \"esbuild-freebsd-64\": \"0.14.12\",\n-                \"esbuild-freebsd-arm64\": \"0.14.12\",\n-                \"esbuild-linux-32\": \"0.14.12\",\n-                \"esbuild-linux-64\": \"0.14.12\",\n-                \"esbuild-linux-arm\": \"0.14.12\",\n-                \"esbuild-linux-arm64\": \"0.14.12\",\n-                \"esbuild-linux-mips64le\": \"0.14.12\",\n-                \"esbuild-linux-ppc64le\": \"0.14.12\",\n-                \"esbuild-linux-s390x\": \"0.14.12\",\n-                \"esbuild-netbsd-64\": \"0.14.12\",\n-                \"esbuild-openbsd-64\": \"0.14.12\",\n-                \"esbuild-sunos-64\": \"0.14.12\",\n-                \"esbuild-windows-32\": \"0.14.12\",\n-                \"esbuild-windows-64\": \"0.14.12\",\n-                \"esbuild-windows-arm64\": \"0.14.12\"\n+                \"esbuild-android-64\": \"0.14.25\",\n+                \"esbuild-android-arm64\": \"0.14.25\",\n+                \"esbuild-darwin-64\": \"0.14.25\",\n+                \"esbuild-darwin-arm64\": \"0.14.25\",\n+                \"esbuild-freebsd-64\": \"0.14.25\",\n+                \"esbuild-freebsd-arm64\": \"0.14.25\",\n+                \"esbuild-linux-32\": \"0.14.25\",\n+                \"esbuild-linux-64\": \"0.14.25\",\n+                \"esbuild-linux-arm\": \"0.14.25\",\n+                \"esbuild-linux-arm64\": \"0.14.25\",\n+                \"esbuild-linux-mips64le\": \"0.14.25\",\n+                \"esbuild-linux-ppc64le\": \"0.14.25\",\n+                \"esbuild-linux-riscv64\": \"0.14.25\",\n+                \"esbuild-linux-s390x\": \"0.14.25\",\n+                \"esbuild-netbsd-64\": \"0.14.25\",\n+                \"esbuild-openbsd-64\": \"0.14.25\",\n+                \"esbuild-sunos-64\": \"0.14.25\",\n+                \"esbuild-windows-32\": \"0.14.25\",\n+                \"esbuild-windows-64\": \"0.14.25\",\n+                \"esbuild-windows-arm64\": \"0.14.25\"\n+            }\n+        },\n+        \"node_modules/esbuild-android-64\": {\n+            \"version\": \"0.14.25\",\n+            \"resolved\": \"https://registry.npmjs.org/esbuild-android-64/-/esbuild-android-64-0.14.25.tgz\",\n+            \"integrity\": \"sha512-L5vCUk7TzFbBnoESNoXjU3x9+/+7TDIE/1mTfy/erAfvZAqC+S3sp/Qa9wkypFMcFvN9FzvESkTlpeQDolREtQ==\",\n+            \"cpu\": [\n+                \"x64\"\n+            ],\n+            \"dev\": true,\n+            \"optional\": true,\n+            \"os\": [\n+                \"android\"\n+            ],\n+            \"engines\": {\n+                \"node\": \">=12\"\n             }\n         },\n         \"node_modules/esbuild-android-arm64\": {\n-            \"version\": \"0.14.12\",\n-            \"resolved\": \"https://registry.npmjs.org/esbuild-android-arm64/-/esbuild-android-arm64-0.14.12.tgz\",\n-            \"integrity\": \"sha512-eO4JHwnTeJq1/xC9K0FdHNEYztwT0HaWHnOzR5kXKwJxHatxDNZ+lCHOSxMzh9uVSmnA8YwdSiXPWbwTlWZVrw==\",\n+            \"version\": \"0.14.25\",\n+            \"resolved\": \"https://registry.npmjs.org/esbuild-android-arm64/-/esbuild-android-arm64-0.14.25.tgz\",\n+            \"integrity\": \"sha512-4jv5xPjM/qNm27T5j3ZEck0PvjgQtoMHnz4FzwF5zNP56PvY2CT0WStcAIl6jNlsuDdN63rk2HRBIsO6xFbcFw==\",\n             \"cpu\": [\n                 \"arm64\"\n             ],\n             \"dev\": true,\n             \"optional\": true,\n             \"os\": [\n                 \"android\"\n-            ]\n+            ],\n+            \"engines\": {\n+                \"node\": \">=12\"\n+            }\n         },\n         \"node_modules/esbuild-darwin-64\": {\n-            \"version\": \"0.14.12\",\n-            \"resolved\": \"https://registry.npmjs.org/esbuild-darwin-64/-/esbuild-darwin-64-0.14.12.tgz\",\n-            \"integrity\": \"sha512-LyZ81assnJWhq2IxKEVipwddKlXLTubbz/IObyKOm5cWS9jQCpuwQey2PpzroWSiy7QLGV8XCGWY5b8U8fsmWA==\",\n+            \"version\": \"0.14.25\",\n+            \"resolved\": \"https://registry.npmjs.org/esbuild-darwin-64/-/esbuild-darwin-64-0.14.25.tgz\",\n+            \"integrity\": \"sha512-TGp8tuudIxOyWd1+8aYPxQmC1ZQyvij/AfNBa35RubixD0zJ1vkKHVAzo0Zao1zcG6pNqiSyzfPto8vmg0s7oA==\",\n             \"cpu\": [\n                 \"x64\"\n             ],\n             \"dev\": true,\n             \"optional\": true,\n             \"os\": [\n                 \"darwin\"\n-            ]\n+            ],\n+            \"engines\": {\n+                \"node\": \">=12\"\n+            }\n         },\n         \"node_modules/esbuild-darwin-arm64\": {\n-            \"version\": \"0.14.12\",\n-            \"resolved\": \"https://registry.npmjs.org/esbuild-darwin-arm64/-/esbuild-darwin-arm64-0.14.12.tgz\",\n-            \"integrity\": \"sha512-jj27iSbDS4KlftN1PHHNiTrtXPQIk11J/qpQiQLwKJpeEMNeJUBfQlS7X7dXgFFMxV0rNtcRl8AimEFl+qEMRQ==\",\n+            \"version\": \"0.14.25\",\n+            \"resolved\": \"https://registry.npmjs.org/esbuild-darwin-arm64/-/esbuild-darwin-arm64-0.14.25.tgz\",\n+            \"integrity\": \"sha512-oTcDgdm0MDVEmw2DWu8BV68pYuImpFgvWREPErBZmNA4MYKGuBRaCiJqq6jZmBR1x+3y1DWCjez+5uLtuAm6mw==\",\n             \"cpu\": [\n                 \"arm64\"\n             ],\n             \"dev\": true,\n             \"optional\": true,\n             \"os\": [\n                 \"darwin\"\n-            ]\n+            ],\n+            \"engines\": {\n+                \"node\": \">=12\"\n+            }\n         },\n         \"node_modules/esbuild-freebsd-64\": {\n-            \"version\": \"0.14.12\",\n-            \"resolved\": \"https://registry.npmjs.org/esbuild-freebsd-64/-/esbuild-freebsd-64-0.14.12.tgz\",\n-            \"integrity\": \"sha512-RnTty09bA8Ts/eWnrJsYiE2dFM6ZseKYQ/7QCM5QYphU6GbifooO9oGjc/UE3Sg8R58yZVO15vnIV0i+kTgDOw==\",\n+            \"version\": \"0.14.25\",\n+            \"resolved\": \"https://registry.npmjs.org/esbuild-freebsd-64/-/esbuild-freebsd-64-0.14.25.tgz\",\n+            \"integrity\": \"sha512-ueAqbnMZ8arnuLH8tHwTCQYeptnHOUV7vA6px6j4zjjQwDx7TdP7kACPf3TLZLdJQ3CAD1XCvQ2sPhX+8tacvQ==\",\n             \"cpu\": [\n                 \"x64\"\n             ],\n             \"dev\": true,\n             \"optional\": true,\n             \"os\": [\n                 \"freebsd\"\n-            ]\n+            ],\n+            \"engines\": {\n+                \"node\": \">=12\"\n+            }\n         },\n         \"node_modules/esbuild-freebsd-arm64\": {\n-            \"version\": \"0.14.12\",\n-            \"resolved\": \"https://registry.npmjs.org/esbuild-freebsd-arm64/-/esbuild-freebsd-arm64-0.14.12.tgz\",\n-            \"integrity\": \"sha512-AvAQoEgsHE53hucgoVWdHnXJBl0r9W/7eUCaBvpcgYu3W/EbPZ26VnZwfSXLpk0Pf3t7o6SRwrU+KDTKPscDTw==\",\n+            \"version\": \"0.14.25\",\n+            \"resolved\": \"https://registry.npmjs.org/esbuild-freebsd-arm64/-/esbuild-freebsd-arm64-0.14.25.tgz\",\n+            \"integrity\": \"sha512-+ZVWud2HKh+Ob6k/qiJWjBtUg4KmJGGmbvEXXW1SNKS7hW7HU+Zq2ZCcE1akFxOPkVB+EhOty/sSek30tkCYug==\",\n             \"cpu\": [\n                 \"arm64\"\n             ],\n             \"dev\": true,\n             \"optional\": true,\n             \"os\": [\n                 \"freebsd\"\n-            ]\n+            ],\n+            \"engines\": {\n+                \"node\": \">=12\"\n+            }\n         },\n         \"node_modules/esbuild-linux-32\": {\n-            \"version\": \"0.14.12\",\n-            \"resolved\": \"https://registry.npmjs.org/esbuild-linux-32/-/esbuild-linux-32-0.14.12.tgz\",\n-            \"integrity\": \"sha512-na4I5i2c9ACPuglfYmrnJ6qGQnFJb59dFjyFk5OHTCtoKCq3lXbGHrvYa+3sYlOrRax1kYuRDRGse7YsDLbr3Q==\",\n+            \"version\": \"0.14.25\",\n+            \"resolved\": \"https://registry.npmjs.org/esbuild-linux-32/-/esbuild-linux-32-0.14.25.tgz\",\n+            \"integrity\": \"sha512-3OP/lwV3kCzEz45tobH9nj+uE4ubhGsfx+tn0L26WAGtUbmmcRpqy7XRG/qK7h1mClZ+eguIANcQntYMdYklfw==\",\n             \"cpu\": [\n                 \"ia32\"\n             ],\n             \"dev\": true,\n             \"optional\": true,\n             \"os\": [\n                 \"linux\"\n-            ]\n+            ],\n+            \"engines\": {\n+                \"node\": \">=12\"\n+            }\n         },\n         \"node_modules/esbuild-linux-64\": {\n-            \"version\": \"0.14.12\",\n-            \"resolved\": \"https://registry.npmjs.org/esbuild-linux-64/-/esbuild-linux-64-0.14.12.tgz\",\n-            \"integrity\": \"sha512-ObPoYGakJLx/RldQsFQiwsQ7N9YbQ4LLazHtpKx34bjqFjhqO5JiHPVAJYCmAtci3cJMsZ5DtEFXvijytTBz1g==\",\n+            \"version\": \"0.14.25\",\n+            \"resolved\": \"https://registry.npmjs.org/esbuild-linux-64/-/esbuild-linux-64-0.14.25.tgz\",\n+            \"integrity\": \"sha512-+aKHdHZmX9qwVlQmu5xYXh7GsBFf4TWrePgeJTalhXHOG7NNuUwoHmketGiZEoNsWyyqwH9rE5BC+iwcLY30Ug==\",\n             \"cpu\": [\n                 \"x64\"\n             ],\n             \"dev\": true,\n             \"optional\": true,\n             \"os\": [\n                 \"linux\"\n-            ]\n+            ],\n+            \"engines\": {\n+                \"node\": \">=12\"\n+            }\n         },\n         \"node_modules/esbuild-linux-arm\": {\n-            \"version\": \"0.14.12\",\n-            \"resolved\": \"https://registry.npmjs.org/esbuild-linux-arm/-/esbuild-linux-arm-0.14.12.tgz\",\n-            \"integrity\": \"sha512-tD4q/zVUeYkThGehYAJQElo80+ysxvq5vpd2QvykDp4hvIidEUJu2hf+NzG5OuMJSQJmAeAWPrkFOXN+6di9cA==\",\n+            \"version\": \"0.14.25\",\n+            \"resolved\": \"https://registry.npmjs.org/esbuild-linux-arm/-/esbuild-linux-arm-0.14.25.tgz\",\n+            \"integrity\": \"sha512-aTLcE2VBoLydL943REcAcgnDi3bHtmULSXWLbjtBdtykRatJVSxKMjK9YlBXUZC4/YcNQfH7AxwVeQr9fNxPhw==\",\n             \"cpu\": [\n                 \"arm\"\n             ],\n             \"dev\": true,\n             \"optional\": true,\n             \"os\": [\n                 \"linux\"\n-            ]\n+            ],\n+            \"engines\": {\n+                \"node\": \">=12\"\n+            }\n         },\n         \"node_modules/esbuild-linux-arm64\": {\n-            \"version\": \"0.14.12\",\n-            \"resolved\": \"https://registry.npmjs.org/esbuild-linux-arm64/-/esbuild-linux-arm64-0.14.12.tgz\",\n-            \"integrity\": \"sha512-i1/ikCl9gG9yx6QuI+8yJMk9XHUu8ekIQOo6cex2pDqXY5KVHSXDTAT4FDWOd5YXQ1QTjneBAQHcKGft4pd6PQ==\",\n+            \"version\": \"0.14.25\",\n+            \"resolved\": \"https://registry.npmjs.org/esbuild-linux-arm64/-/esbuild-linux-arm64-0.14.25.tgz\",\n+            \"integrity\": \"sha512-UxfenPx/wSZx55gScCImPtXekvZQLI2GW3qe5dtlmU7luiqhp5GWPzGeQEbD3yN3xg/pHc671m5bma5Ns7lBHw==\",\n             \"cpu\": [\n                 \"arm64\"\n             ],\n             \"dev\": true,\n             \"optional\": true,\n             \"os\": [\n                 \"linux\"\n-            ]\n+            ],\n+            \"engines\": {\n+                \"node\": \">=12\"\n+            }\n         },\n         \"node_modules/esbuild-linux-mips64le\": {\n-            \"version\": \"0.14.12\",\n-            \"resolved\": \"https://registry.npmjs.org/esbuild-linux-mips64le/-/esbuild-linux-mips64le-0.14.12.tgz\",\n-            \"integrity\": \"sha512-+/a6/tiKUCENep8ryUR75Jba4znG51Sb75OzKT6phZFEkB7fao4+GZD39Zxx3EaaA5OC10MsJPjJMFrn0dMusg==\",\n+            \"version\": \"0.14.25\",\n+            \"resolved\": \"https://registry.npmjs.org/esbuild-linux-mips64le/-/esbuild-linux-mips64le-0.14.25.tgz\",\n+            \"integrity\": \"sha512-wLWYyqVfYx9Ur6eU5RT92yJVsaBGi5RdkoWqRHOqcJ38Kn60QMlcghsKeWfe9jcYut8LangYZ98xO1LxIoSXrQ==\",\n             \"cpu\": [\n                 \"mips64el\"\n             ],\n             \"dev\": true,\n             \"optional\": true,\n             \"os\": [\n                 \"linux\"\n-            ]\n+            ],\n+            \"engines\": {\n+                \"node\": \">=12\"\n+            }\n         },\n         \"node_modules/esbuild-linux-ppc64le\": {\n-            \"version\": \"0.14.12\",\n-            \"resolved\": \"https://registry.npmjs.org/esbuild-linux-ppc64le/-/esbuild-linux-ppc64le-0.14.12.tgz\",\n-            \"integrity\": \"sha512-SD7e2VLza/cEU2qKuD18Ibt1V0h3TUuerC1Mp3jRJ4RRGXWAyUt4gUpqKSiB7R0rHe6LWECdLbeVFAuGEntCeA==\",\n+            \"version\": \"0.14.25\",\n+            \"resolved\": \"https://registry.npmjs.org/esbuild-linux-ppc64le/-/esbuild-linux-ppc64le-0.14.25.tgz\",\n+            \"integrity\": \"sha512-0dR6Csl6Zas3g4p9ULckEl8Mo8IInJh33VCJ3eaV1hj9+MHGdmDOakYMN8MZP9/5nl+NU/0ygpd14cWgy8uqRw==\",\n             \"cpu\": [\n                 \"ppc64\"\n             ],\n             \"dev\": true,\n             \"optional\": true,\n             \"os\": [\n                 \"linux\"\n-            ]\n+            ],\n+            \"engines\": {\n+                \"node\": \">=12\"\n+            }\n+        },\n+        \"node_modules/esbuild-linux-riscv64\": {\n+            \"version\": \"0.14.25\",\n+            \"resolved\": \"https://registry.npmjs.org/esbuild-linux-riscv64/-/esbuild-linux-riscv64-0.14.25.tgz\",\n+            \"integrity\": \"sha512-J4d20HDmTrgvhR0bdkDhvvJGaikH3LzXQnNaseo8rcw9Yqby9A90gKUmWpfwqLVNRILvNnAmKLfBjCKU9ajg8w==\",\n+            \"cpu\": [\n+                \"riscv64\"\n+            ],\n+            \"dev\": true,\n+            \"optional\": true,\n+            \"os\": [\n+                \"linux\"\n+            ],\n+            \"engines\": {\n+                \"node\": \">=12\"\n+            }\n         },\n         \"node_modules/esbuild-linux-s390x\": {\n-            \"version\": \"0.14.12\",\n-            \"resolved\": \"https://registry.npmjs.org/esbuild-linux-s390x/-/esbuild-linux-s390x-0.14.12.tgz\",\n-            \"integrity\": \"sha512-KZmjYgAvYUpPBG0v6xv8qCngbfcRKC2AdYx3H3j3VqJfICgjt5XYsyG7ntWdc8Rdw9jZxr9sni6othy2Rp/T+A==\",\n+            \"version\": \"0.14.25\",\n+            \"resolved\": \"https://registry.npmjs.org/esbuild-linux-s390x/-/esbuild-linux-s390x-0.14.25.tgz\",\n+            \"integrity\": \"sha512-YI2d5V6nTE73ZnhEKQD7MtsPs1EtUZJ3obS21oxQxGbbRw1G+PtJKjNyur+3t6nzHP9oTg6GHQ3S3hOLLmbDIQ==\",\n             \"cpu\": [\n                 \"s390x\"\n             ],\n             \"dev\": true,\n             \"optional\": true,\n             \"os\": [\n                 \"linux\"\n-            ]\n+            ],\n+            \"engines\": {\n+                \"node\": \">=12\"\n+            }\n         },\n         \"node_modules/esbuild-netbsd-64\": {\n-            \"version\": \"0.14.12\",\n-            \"resolved\": \"https://registry.npmjs.org/esbuild-netbsd-64/-/esbuild-netbsd-64-0.14.12.tgz\",\n-            \"integrity\": \"sha512-dG+hbCIJC65fHqzkTEYbrPSYG3m8pEaI9A1VDtqHfV13Oiw9/tua1odd47iwoWvTyurErb49wanHsIAKb8/2oQ==\",\n+            \"version\": \"0.14.25\",\n+            \"resolved\": \"https://registry.npmjs.org/esbuild-netbsd-64/-/esbuild-netbsd-64-0.14.25.tgz\",\n+            \"integrity\": \"sha512-TKIVgNWLUOkr+Exrye70XTEE1lJjdQXdM4tAXRzfHE9iBA7LXWcNtVIuSnphTqpanPzTDFarF0yqq4kpbC6miA==\",\n             \"cpu\": [\n                 \"x64\"\n             ],\n             \"dev\": true,\n             \"optional\": true,\n             \"os\": [\n                 \"netbsd\"\n-            ]\n+            ],\n+            \"engines\": {\n+                \"node\": \">=12\"\n+            }\n         },\n         \"node_modules/esbuild-openbsd-64\": {\n-            \"version\": \"0.14.12\",\n-            \"resolved\": \"https://registry.npmjs.org/esbuild-openbsd-64/-/esbuild-openbsd-64-0.14.12.tgz\",\n-            \"integrity\": \"sha512-W3SwxnMjJR3HtBD0aij5WPd0ow2bRB5BsW6FjhN7FgwDBQ+jgniFs1dq54HOkjQ2qBJrt8JvPDFAxacWjdD6Jw==\",\n+            \"version\": \"0.14.25\",\n+            \"resolved\": \"https://registry.npmjs.org/esbuild-openbsd-64/-/esbuild-openbsd-64-0.14.25.tgz\",\n+            \"integrity\": \"sha512-QgFJ37A15D7NIXBTYEqz29+uw3nNBOIyog+3kFidANn6kjw0GHZ0lEYQn+cwjyzu94WobR+fes7cTl/ZYlHb1A==\",\n             \"cpu\": [\n                 \"x64\"\n             ],\n             \"dev\": true,\n             \"optional\": true,\n             \"os\": [\n                 \"openbsd\"\n-            ]\n+            ],\n+            \"engines\": {\n+                \"node\": \">=12\"\n+            }\n         },\n         \"node_modules/esbuild-sunos-64\": {\n-            \"version\": \"0.14.12\",\n-            \"resolved\": \"https://registry.npmjs.org/esbuild-sunos-64/-/esbuild-sunos-64-0.14.12.tgz\",\n-            \"integrity\": \"sha512-jU/IcTFwvUtt21wOmqKJrevyHQ5XRfiCdFbPie4wsYr8VFcPZZsz18A9lcoI8gZdrF/8pBdD0V+L2UuUY0KsGg==\",\n+            \"version\": \"0.14.25\",\n+            \"resolved\": \"https://registry.npmjs.org/esbuild-sunos-64/-/esbuild-sunos-64-0.14.25.tgz\",\n+            \"integrity\": \"sha512-rmWfjUItYIVlqr5EnTH1+GCxXiBOC42WBZ3w++qh7n2cS9Xo0lO5pGSG2N+huOU2fX5L+6YUuJ78/vOYvefeFw==\",\n             \"cpu\": [\n                 \"x64\"\n             ],\n             \"dev\": true,\n             \"optional\": true,\n             \"os\": [\n                 \"sunos\"\n-            ]\n+            ],\n+            \"engines\": {\n+                \"node\": \">=12\"\n+            }\n         },\n         \"node_modules/esbuild-windows-32\": {\n-            \"version\": \"0.14.12\",\n-            \"resolved\": \"https://registry.npmjs.org/esbuild-windows-32/-/esbuild-windows-32-0.14.12.tgz\",\n-            \"integrity\": \"sha512-6luae9cmTB0rSPMCQFWMgf0SLNZ9hxusoS0poVEUHJf3n8bW6wgdyLE2xfYcEcXPMsjAt2e71/etkpqlFxeuYg==\",\n+            \"version\": \"0.14.25\",\n+            \"resolved\": \"https://registry.npmjs.org/esbuild-windows-32/-/esbuild-windows-32-0.14.25.tgz\",\n+            \"integrity\": \"sha512-HGAxVUofl3iUIz9W10Y9XKtD0bNsK9fBXv1D55N/ljNvkrAYcGB8YCm0v7DjlwtyS6ws3dkdQyXadbxkbzaKOA==\",\n             \"cpu\": [\n                 \"ia32\"\n             ],\n             \"dev\": true,\n             \"optional\": true,\n             \"os\": [\n                 \"win32\"\n-            ]\n+            ],\n+            \"engines\": {\n+                \"node\": \">=12\"\n+            }\n         },\n         \"node_modules/esbuild-windows-64\": {\n-            \"version\": \"0.14.12\",\n-            \"resolved\": \"https://registry.npmjs.org/esbuild-windows-64/-/esbuild-windows-64-0.14.12.tgz\",\n-            \"integrity\": \"sha512-CdCXvME/7s0uMt+4rYd8d5roHJJ5k2VDOzWaOMWExjroet+nSSZngfLpxI5St+28lXLeBorUxeBS+p1qcfEDfw==\",\n+            \"version\": \"0.14.25\",\n+            \"resolved\": \"https://registry.npmjs.org/esbuild-windows-64/-/esbuild-windows-64-0.14.25.tgz\",\n+            \"integrity\": \"sha512-TirEohRkfWU9hXLgoDxzhMQD1g8I2mOqvdQF2RS9E/wbkORTAqJHyh7wqGRCQAwNzdNXdg3JAyhQ9/177AadWA==\",\n             \"cpu\": [\n                 \"x64\"\n             ],\n             \"dev\": true,\n             \"optional\": true,\n             \"os\": [\n                 \"win32\"\n-            ]\n+            ],\n+            \"engines\": {\n+                \"node\": \">=12\"\n+            }\n         },\n         \"node_modules/esbuild-windows-arm64\": {\n-            \"version\": \"0.14.12\",\n-            \"resolved\": \"https://registry.npmjs.org/esbuild-windows-arm64/-/esbuild-windows-arm64-0.14.12.tgz\",\n-            \"integrity\": \"sha512-vNuLQh/MpYDepK0GNpEWHy0Kn7Jf3Shz/Xetf8hUIc31jgCR1qbLVLDf3ckQdanD2U430YZupOGtEZKRwno79w==\",\n+            \"version\": \"0.14.25\",\n+            \"resolved\": \"https://registry.npmjs.org/esbuild-windows-arm64/-/esbuild-windows-arm64-0.14.25.tgz\",\n+            \"integrity\": \"sha512-4ype9ERiI45rSh+R8qUoBtaj6kJvUOI7oVLhKqPEpcF4Pa5PpT3hm/mXAyotJHREkHpM87PAJcA442mLnbtlNA==\",\n             \"cpu\": [\n                 \"arm64\"\n             ],\n             \"dev\": true,\n             \"optional\": true,\n             \"os\": [\n                 \"win32\"\n-            ]\n+            ],\n+            \"engines\": {\n+                \"node\": \">=12\"\n+            }\n         },\n         \"node_modules/escape-string-regexp\": {\n             \"version\": \"4.0.0\",\n@@ -1790,23 +1881,23 @@\n             }\n         },\n         \"node_modules/eslint\": {\n-            \"version\": \"8.7.0\",\n-            \"resolved\": \"https://registry.npmjs.org/eslint/-/eslint-8.7.0.tgz\",\n-            \"integrity\": \"sha512-ifHYzkBGrzS2iDU7KjhCAVMGCvF6M3Xfs8X8b37cgrUlDt6bWRTpRh6T/gtSXv1HJ/BUGgmjvNvOEGu85Iif7w==\",\n+            \"version\": \"8.10.0\",\n+            \"resolved\": \"https://registry.npmjs.org/eslint/-/eslint-8.10.0.tgz\",\n+            \"integrity\": \"sha512-tcI1D9lfVec+R4LE1mNDnzoJ/f71Kl/9Cv4nG47jOueCMBrCCKYXr4AUVS7go6mWYGFD4+EoN6+eXSrEbRzXVw==\",\n             \"dev\": true,\n             \"dependencies\": {\n-                \"@eslint/eslintrc\": \"^1.0.5\",\n+                \"@eslint/eslintrc\": \"^1.2.0\",\n                 \"@humanwhocodes/config-array\": \"^0.9.2\",\n                 \"ajv\": \"^6.10.0\",\n                 \"chalk\": \"^4.0.0\",\n                 \"cross-spawn\": \"^7.0.2\",\n                 \"debug\": \"^4.3.2\",\n                 \"doctrine\": \"^3.0.0\",\n                 \"escape-string-regexp\": \"^4.0.0\",\n-                \"eslint-scope\": \"^7.1.0\",\n+                \"eslint-scope\": \"^7.1.1\",\n                 \"eslint-utils\": \"^3.0.0\",\n-                \"eslint-visitor-keys\": \"^3.2.0\",\n-                \"espree\": \"^9.3.0\",\n+                \"eslint-visitor-keys\": \"^3.3.0\",\n+                \"espree\": \"^9.3.1\",\n                 \"esquery\": \"^1.4.0\",\n                 \"esutils\": \"^2.0.2\",\n                 \"fast-deep-equal\": \"^3.1.3\",\n@@ -1882,18 +1973,18 @@\n             }\n         },\n         \"node_modules/eslint-visitor-keys\": {\n-            \"version\": \"3.2.0\",\n-            \"resolved\": \"https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-3.2.0.tgz\",\n-            \"integrity\": \"sha512-IOzT0X126zn7ALX0dwFiUQEdsfzrm4+ISsQS8nukaJXwEyYKRSnEIIDULYg1mCtGp7UUXgfGl7BIolXREQK+XQ==\",\n+            \"version\": \"3.3.0\",\n+            \"resolved\": \"https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-3.3.0.tgz\",\n+            \"integrity\": \"sha512-mQ+suqKJVyeuwGYHAdjMFqjCyfl8+Ldnxuyp3ldiMBFKkvytrXUZWaiPCEav8qDHKty44bD+qV1IP4T+w+xXRA==\",\n             \"dev\": true,\n             \"engines\": {\n                 \"node\": \"^12.22.0 || ^14.17.0 || >=16.0.0\"\n             }\n         },\n         \"node_modules/eslint/node_modules/eslint-scope\": {\n-            \"version\": \"7.1.0\",\n-            \"resolved\": \"https://registry.npmjs.org/eslint-scope/-/eslint-scope-7.1.0.tgz\",\n-            \"integrity\": \"sha512-aWwkhnS0qAXqNOgKOK0dJ2nvzEbhEvpy8OlJ9kZ0FeZnA6zpjv1/Vei+puGFFX7zkPCkHHXb7IDX3A+7yPrRWg==\",\n+            \"version\": \"7.1.1\",\n+            \"resolved\": \"https://registry.npmjs.org/eslint-scope/-/eslint-scope-7.1.1.tgz\",\n+            \"integrity\": \"sha512-QKQM/UXpIiHcLqJ5AOyIW7XZmzjkzQXYE54n1++wb0u9V/abW3l9uQnxX8Z5Xd18xyKIMTUAyQ0k1e8pz6LUrw==\",\n             \"dev\": true,\n             \"dependencies\": {\n                 \"esrecurse\": \"^4.3.0\",\n@@ -1913,14 +2004,14 @@\n             }\n         },\n         \"node_modules/espree\": {\n-            \"version\": \"9.3.0\",\n-            \"resolved\": \"https://registry.npmjs.org/espree/-/espree-9.3.0.tgz\",\n-            \"integrity\": \"sha512-d/5nCsb0JcqsSEeQzFZ8DH1RmxPcglRWh24EFTlUEmCKoehXGdpsx0RkHDubqUI8LSAIKMQp4r9SzQ3n+sm4HQ==\",\n+            \"version\": \"9.3.1\",\n+            \"resolved\": \"https://registry.npmjs.org/espree/-/espree-9.3.1.tgz\",\n+            \"integrity\": \"sha512-bvdyLmJMfwkV3NCRl5ZhJf22zBFo1y8bYh3VYb+bfzqNB4Je68P2sSuXyuFquzWLebHpNd2/d5uv7yoP9ISnGQ==\",\n             \"dev\": true,\n             \"dependencies\": {\n                 \"acorn\": \"^8.7.0\",\n                 \"acorn-jsx\": \"^5.3.1\",\n-                \"eslint-visitor-keys\": \"^3.1.0\"\n+                \"eslint-visitor-keys\": \"^3.3.0\"\n             },\n             \"engines\": {\n                 \"node\": \"^12.22.0 || ^14.17.0 || >=16.0.0\"\n@@ -2243,9 +2334,9 @@\n             }\n         },\n         \"node_modules/globals\": {\n-            \"version\": \"13.12.0\",\n-            \"resolved\": \"https://registry.npmjs.org/globals/-/globals-13.12.0.tgz\",\n-            \"integrity\": \"sha512-uS8X6lSKN2JumVoXrbUz+uG4BYG+eiawqm3qFcT7ammfbUHeCBoJMlHcec/S3krSk73/AE/f0szYFmgAA3kYZg==\",\n+            \"version\": \"13.12.1\",\n+            \"resolved\": \"https://registry.npmjs.org/globals/-/globals-13.12.1.tgz\",\n+            \"integrity\": \"sha512-317dFlgY2pdJZ9rspXDks7073GpDmXdfbM3vYYp0HAMKGDh1FfWPleI2ljVNLQX5M5lXcAslTcPTrOrMEFOjyw==\",\n             \"dev\": true,\n             \"dependencies\": {\n                 \"type-fest\": \"^0.20.2\"\n@@ -3764,39 +3855,39 @@\n             }\n         },\n         \"node_modules/vscode-jsonrpc\": {\n-            \"version\": \"8.0.0-next.5\",\n-            \"resolved\": \"https://registry.npmjs.org/vscode-jsonrpc/-/vscode-jsonrpc-8.0.0-next.5.tgz\",\n-            \"integrity\": \"sha512-owRllqcFTnz5rXxcbmHPFGmpFmLqj9Z1V3Dzrv+s8ejOHLIT62Pyb5Uqzyl2/in2VP22DmzErPgZwrxjLCIKiQ==\",\n+            \"version\": \"8.0.0-next.6\",\n+            \"resolved\": \"https://registry.npmjs.org/vscode-jsonrpc/-/vscode-jsonrpc-8.0.0-next.6.tgz\",\n+            \"integrity\": \"sha512-6Ld3RYjygn5Ih7CkAtcAwiDQC+rakj2O+PnASfNyYv3sLmm44eJpEKzuPUN30Iy2UB09AZg8T6LBKWTJTEJDVw==\",\n             \"engines\": {\n                 \"node\": \">=14.0.0\"\n             }\n         },\n         \"node_modules/vscode-languageclient\": {\n-            \"version\": \"8.0.0-next.8\",\n-            \"resolved\": \"https://registry.npmjs.org/vscode-languageclient/-/vscode-languageclient-8.0.0-next.8.tgz\",\n-            \"integrity\": \"sha512-CBdYRIVqqlRmZ2YBeTk0S2QMtsL8ZJfbddlfvERmRPXW4Pimr7Nk+mYq16F/k3HbrO9Xt+RAFP1t6FIIbmuUGw==\",\n+            \"version\": \"8.0.0-next.12\",\n+            \"resolved\": \"https://registry.npmjs.org/vscode-languageclient/-/vscode-languageclient-8.0.0-next.12.tgz\",\n+            \"integrity\": \"sha512-4+kr1BQcoh+sA5/4XJDJXrQXGQ5Yz/x+WpsVGGzK/TOB7RwQ63ooxG6Ej7i/+aOQM4/QdmcYWmipDtG7vqcOiw==\",\n             \"dependencies\": {\n                 \"minimatch\": \"^3.0.4\",\n                 \"semver\": \"^7.3.5\",\n-                \"vscode-languageserver-protocol\": \"3.17.0-next.12\"\n+                \"vscode-languageserver-protocol\": \"3.17.0-next.14\"\n             },\n             \"engines\": {\n                 \"vscode\": \"^1.63.0\"\n             }\n         },\n         \"node_modules/vscode-languageserver-protocol\": {\n-            \"version\": \"3.17.0-next.12\",\n-            \"resolved\": \"https://registry.npmjs.org/vscode-languageserver-protocol/-/vscode-languageserver-protocol-3.17.0-next.12.tgz\",\n-            \"integrity\": \"sha512-VLRcWKOpCXcx9UrqrS+NSF6pNxV498VGYGW+eyp9a79/F9ElUq3wdG6acXYlEfpWHuIxpm6MXps8FU88wqIgTg==\",\n+            \"version\": \"3.17.0-next.14\",\n+            \"resolved\": \"https://registry.npmjs.org/vscode-languageserver-protocol/-/vscode-languageserver-protocol-3.17.0-next.14.tgz\",\n+            \"integrity\": \"sha512-iangobY8dL6sFZkOx4OhRPJM9gN0I1caUsOVR+MnPozsqQUtwMXmbIcfaIf0Akp0pd3KhJDPf/tdwRX68QGeeA==\",\n             \"dependencies\": {\n-                \"vscode-jsonrpc\": \"8.0.0-next.5\",\n-                \"vscode-languageserver-types\": \"3.17.0-next.6\"\n+                \"vscode-jsonrpc\": \"8.0.0-next.6\",\n+                \"vscode-languageserver-types\": \"3.17.0-next.7\"\n             }\n         },\n         \"node_modules/vscode-languageserver-types\": {\n-            \"version\": \"3.17.0-next.6\",\n-            \"resolved\": \"https://registry.npmjs.org/vscode-languageserver-types/-/vscode-languageserver-types-3.17.0-next.6.tgz\",\n-            \"integrity\": \"sha512-rHYeCotiabJHgvIYzWjV8g0dHCxyOQtcryTv1Xa1horaQ4jx2V+rjLBstc6zMpCyrnZcjorwEcAvGBDCd6wudw==\"\n+            \"version\": \"3.17.0-next.7\",\n+            \"resolved\": \"https://registry.npmjs.org/vscode-languageserver-types/-/vscode-languageserver-types-3.17.0-next.7.tgz\",\n+            \"integrity\": \"sha512-KH4zdG1qBXxoso61ChgpeoZYyHGJo8bV7Jv4I+fwQ1Ryy59JAxoZ9GAbhR5TeeafHctLcg6RFvY3m8Jqfu17cg==\"\n         },\n         \"node_modules/which\": {\n             \"version\": \"2.0.2\",\n@@ -3886,14 +3977,14 @@\n     },\n     \"dependencies\": {\n         \"@eslint/eslintrc\": {\n-            \"version\": \"1.0.5\",\n-            \"resolved\": \"https://registry.npmjs.org/@eslint/eslintrc/-/eslintrc-1.0.5.tgz\",\n-            \"integrity\": \"sha512-BLxsnmK3KyPunz5wmCCpqy0YelEoxxGmH73Is+Z74oOTMtExcjkr3dDR6quwrjh1YspA8DH9gnX1o069KiS9AQ==\",\n+            \"version\": \"1.2.0\",\n+            \"resolved\": \"https://registry.npmjs.org/@eslint/eslintrc/-/eslintrc-1.2.0.tgz\",\n+            \"integrity\": \"sha512-igm9SjJHNEJRiUnecP/1R5T3wKLEJ7pL6e2P+GUSfCd0dGjPYYZve08uzw8L2J8foVHFz+NGu12JxRcU2gGo6w==\",\n             \"dev\": true,\n             \"requires\": {\n                 \"ajv\": \"^6.12.4\",\n                 \"debug\": \"^4.3.2\",\n-                \"espree\": \"^9.2.0\",\n+                \"espree\": \"^9.3.1\",\n                 \"globals\": \"^13.9.0\",\n                 \"ignore\": \"^4.0.6\",\n                 \"import-fresh\": \"^3.2.1\",\n@@ -3977,9 +4068,9 @@\n             \"dev\": true\n         },\n         \"@types/vscode\": {\n-            \"version\": \"1.63.1\",\n-            \"resolved\": \"https://registry.npmjs.org/@types/vscode/-/vscode-1.63.1.tgz\",\n-            \"integrity\": \"sha512-Z+ZqjRcnGfHP86dvx/BtSwWyZPKQ/LBdmAVImY82TphyjOw2KgTKcp7Nx92oNwCTsHzlshwexAG/WiY2JuUm3g==\",\n+            \"version\": \"1.65.0\",\n+            \"resolved\": \"https://registry.npmjs.org/@types/vscode/-/vscode-1.65.0.tgz\",\n+            \"integrity\": \"sha512-wQhExnh2nEzpjDMSKhUvnNmz3ucpd3E+R7wJkOhBNK3No6fG3VUdmVmMOKD0A8NDZDDDiQcLNxe3oGmX5SjJ5w==\",\n             \"dev\": true\n         },\n         \"@typescript-eslint/eslint-plugin\": {\n@@ -4977,154 +5068,170 @@\n             \"dev\": true\n         },\n         \"esbuild\": {\n-            \"version\": \"0.14.12\",\n-            \"resolved\": \"https://registry.npmjs.org/esbuild/-/esbuild-0.14.12.tgz\",\n-            \"integrity\": \"sha512-o1vQkG+eSDLkWDqWfR8v6eI+byGAUkbRs30eAJcJxUFp3dwMGWR0tAjtam1Bb1RSS2j+4kAUFiuJTnW3J4CYcw==\",\n-            \"dev\": true,\n-            \"requires\": {\n-                \"esbuild-android-arm64\": \"0.14.12\",\n-                \"esbuild-darwin-64\": \"0.14.12\",\n-                \"esbuild-darwin-arm64\": \"0.14.12\",\n-                \"esbuild-freebsd-64\": \"0.14.12\",\n-                \"esbuild-freebsd-arm64\": \"0.14.12\",\n-                \"esbuild-linux-32\": \"0.14.12\",\n-                \"esbuild-linux-64\": \"0.14.12\",\n-                \"esbuild-linux-arm\": \"0.14.12\",\n-                \"esbuild-linux-arm64\": \"0.14.12\",\n-                \"esbuild-linux-mips64le\": \"0.14.12\",\n-                \"esbuild-linux-ppc64le\": \"0.14.12\",\n-                \"esbuild-linux-s390x\": \"0.14.12\",\n-                \"esbuild-netbsd-64\": \"0.14.12\",\n-                \"esbuild-openbsd-64\": \"0.14.12\",\n-                \"esbuild-sunos-64\": \"0.14.12\",\n-                \"esbuild-windows-32\": \"0.14.12\",\n-                \"esbuild-windows-64\": \"0.14.12\",\n-                \"esbuild-windows-arm64\": \"0.14.12\"\n-            }\n+            \"version\": \"0.14.25\",\n+            \"resolved\": \"https://registry.npmjs.org/esbuild/-/esbuild-0.14.25.tgz\",\n+            \"integrity\": \"sha512-4JHEIOMNFvK09ziiL+iVmldIhLbn49V4NAVo888tcGFKedEZY/Y8YapfStJ6zSE23tzYPKxqKwQBnQoIO0BI/Q==\",\n+            \"dev\": true,\n+            \"requires\": {\n+                \"esbuild-android-64\": \"0.14.25\",\n+                \"esbuild-android-arm64\": \"0.14.25\",\n+                \"esbuild-darwin-64\": \"0.14.25\",\n+                \"esbuild-darwin-arm64\": \"0.14.25\",\n+                \"esbuild-freebsd-64\": \"0.14.25\",\n+                \"esbuild-freebsd-arm64\": \"0.14.25\",\n+                \"esbuild-linux-32\": \"0.14.25\",\n+                \"esbuild-linux-64\": \"0.14.25\",\n+                \"esbuild-linux-arm\": \"0.14.25\",\n+                \"esbuild-linux-arm64\": \"0.14.25\",\n+                \"esbuild-linux-mips64le\": \"0.14.25\",\n+                \"esbuild-linux-ppc64le\": \"0.14.25\",\n+                \"esbuild-linux-riscv64\": \"0.14.25\",\n+                \"esbuild-linux-s390x\": \"0.14.25\",\n+                \"esbuild-netbsd-64\": \"0.14.25\",\n+                \"esbuild-openbsd-64\": \"0.14.25\",\n+                \"esbuild-sunos-64\": \"0.14.25\",\n+                \"esbuild-windows-32\": \"0.14.25\",\n+                \"esbuild-windows-64\": \"0.14.25\",\n+                \"esbuild-windows-arm64\": \"0.14.25\"\n+            }\n+        },\n+        \"esbuild-android-64\": {\n+            \"version\": \"0.14.25\",\n+            \"resolved\": \"https://registry.npmjs.org/esbuild-android-64/-/esbuild-android-64-0.14.25.tgz\",\n+            \"integrity\": \"sha512-L5vCUk7TzFbBnoESNoXjU3x9+/+7TDIE/1mTfy/erAfvZAqC+S3sp/Qa9wkypFMcFvN9FzvESkTlpeQDolREtQ==\",\n+            \"dev\": true,\n+            \"optional\": true\n         },\n         \"esbuild-android-arm64\": {\n-            \"version\": \"0.14.12\",\n-            \"resolved\": \"https://registry.npmjs.org/esbuild-android-arm64/-/esbuild-android-arm64-0.14.12.tgz\",\n-            \"integrity\": \"sha512-eO4JHwnTeJq1/xC9K0FdHNEYztwT0HaWHnOzR5kXKwJxHatxDNZ+lCHOSxMzh9uVSmnA8YwdSiXPWbwTlWZVrw==\",\n+            \"version\": \"0.14.25\",\n+            \"resolved\": \"https://registry.npmjs.org/esbuild-android-arm64/-/esbuild-android-arm64-0.14.25.tgz\",\n+            \"integrity\": \"sha512-4jv5xPjM/qNm27T5j3ZEck0PvjgQtoMHnz4FzwF5zNP56PvY2CT0WStcAIl6jNlsuDdN63rk2HRBIsO6xFbcFw==\",\n             \"dev\": true,\n             \"optional\": true\n         },\n         \"esbuild-darwin-64\": {\n-            \"version\": \"0.14.12\",\n-            \"resolved\": \"https://registry.npmjs.org/esbuild-darwin-64/-/esbuild-darwin-64-0.14.12.tgz\",\n-            \"integrity\": \"sha512-LyZ81assnJWhq2IxKEVipwddKlXLTubbz/IObyKOm5cWS9jQCpuwQey2PpzroWSiy7QLGV8XCGWY5b8U8fsmWA==\",\n+            \"version\": \"0.14.25\",\n+            \"resolved\": \"https://registry.npmjs.org/esbuild-darwin-64/-/esbuild-darwin-64-0.14.25.tgz\",\n+            \"integrity\": \"sha512-TGp8tuudIxOyWd1+8aYPxQmC1ZQyvij/AfNBa35RubixD0zJ1vkKHVAzo0Zao1zcG6pNqiSyzfPto8vmg0s7oA==\",\n             \"dev\": true,\n             \"optional\": true\n         },\n         \"esbuild-darwin-arm64\": {\n-            \"version\": \"0.14.12\",\n-            \"resolved\": \"https://registry.npmjs.org/esbuild-darwin-arm64/-/esbuild-darwin-arm64-0.14.12.tgz\",\n-            \"integrity\": \"sha512-jj27iSbDS4KlftN1PHHNiTrtXPQIk11J/qpQiQLwKJpeEMNeJUBfQlS7X7dXgFFMxV0rNtcRl8AimEFl+qEMRQ==\",\n+            \"version\": \"0.14.25\",\n+            \"resolved\": \"https://registry.npmjs.org/esbuild-darwin-arm64/-/esbuild-darwin-arm64-0.14.25.tgz\",\n+            \"integrity\": \"sha512-oTcDgdm0MDVEmw2DWu8BV68pYuImpFgvWREPErBZmNA4MYKGuBRaCiJqq6jZmBR1x+3y1DWCjez+5uLtuAm6mw==\",\n             \"dev\": true,\n             \"optional\": true\n         },\n         \"esbuild-freebsd-64\": {\n-            \"version\": \"0.14.12\",\n-            \"resolved\": \"https://registry.npmjs.org/esbuild-freebsd-64/-/esbuild-freebsd-64-0.14.12.tgz\",\n-            \"integrity\": \"sha512-RnTty09bA8Ts/eWnrJsYiE2dFM6ZseKYQ/7QCM5QYphU6GbifooO9oGjc/UE3Sg8R58yZVO15vnIV0i+kTgDOw==\",\n+            \"version\": \"0.14.25\",\n+            \"resolved\": \"https://registry.npmjs.org/esbuild-freebsd-64/-/esbuild-freebsd-64-0.14.25.tgz\",\n+            \"integrity\": \"sha512-ueAqbnMZ8arnuLH8tHwTCQYeptnHOUV7vA6px6j4zjjQwDx7TdP7kACPf3TLZLdJQ3CAD1XCvQ2sPhX+8tacvQ==\",\n             \"dev\": true,\n             \"optional\": true\n         },\n         \"esbuild-freebsd-arm64\": {\n-            \"version\": \"0.14.12\",\n-            \"resolved\": \"https://registry.npmjs.org/esbuild-freebsd-arm64/-/esbuild-freebsd-arm64-0.14.12.tgz\",\n-            \"integrity\": \"sha512-AvAQoEgsHE53hucgoVWdHnXJBl0r9W/7eUCaBvpcgYu3W/EbPZ26VnZwfSXLpk0Pf3t7o6SRwrU+KDTKPscDTw==\",\n+            \"version\": \"0.14.25\",\n+            \"resolved\": \"https://registry.npmjs.org/esbuild-freebsd-arm64/-/esbuild-freebsd-arm64-0.14.25.tgz\",\n+            \"integrity\": \"sha512-+ZVWud2HKh+Ob6k/qiJWjBtUg4KmJGGmbvEXXW1SNKS7hW7HU+Zq2ZCcE1akFxOPkVB+EhOty/sSek30tkCYug==\",\n             \"dev\": true,\n             \"optional\": true\n         },\n         \"esbuild-linux-32\": {\n-            \"version\": \"0.14.12\",\n-            \"resolved\": \"https://registry.npmjs.org/esbuild-linux-32/-/esbuild-linux-32-0.14.12.tgz\",\n-            \"integrity\": \"sha512-na4I5i2c9ACPuglfYmrnJ6qGQnFJb59dFjyFk5OHTCtoKCq3lXbGHrvYa+3sYlOrRax1kYuRDRGse7YsDLbr3Q==\",\n+            \"version\": \"0.14.25\",\n+            \"resolved\": \"https://registry.npmjs.org/esbuild-linux-32/-/esbuild-linux-32-0.14.25.tgz\",\n+            \"integrity\": \"sha512-3OP/lwV3kCzEz45tobH9nj+uE4ubhGsfx+tn0L26WAGtUbmmcRpqy7XRG/qK7h1mClZ+eguIANcQntYMdYklfw==\",\n             \"dev\": true,\n             \"optional\": true\n         },\n         \"esbuild-linux-64\": {\n-            \"version\": \"0.14.12\",\n-            \"resolved\": \"https://registry.npmjs.org/esbuild-linux-64/-/esbuild-linux-64-0.14.12.tgz\",\n-            \"integrity\": \"sha512-ObPoYGakJLx/RldQsFQiwsQ7N9YbQ4LLazHtpKx34bjqFjhqO5JiHPVAJYCmAtci3cJMsZ5DtEFXvijytTBz1g==\",\n+            \"version\": \"0.14.25\",\n+            \"resolved\": \"https://registry.npmjs.org/esbuild-linux-64/-/esbuild-linux-64-0.14.25.tgz\",\n+            \"integrity\": \"sha512-+aKHdHZmX9qwVlQmu5xYXh7GsBFf4TWrePgeJTalhXHOG7NNuUwoHmketGiZEoNsWyyqwH9rE5BC+iwcLY30Ug==\",\n             \"dev\": true,\n             \"optional\": true\n         },\n         \"esbuild-linux-arm\": {\n-            \"version\": \"0.14.12\",\n-            \"resolved\": \"https://registry.npmjs.org/esbuild-linux-arm/-/esbuild-linux-arm-0.14.12.tgz\",\n-            \"integrity\": \"sha512-tD4q/zVUeYkThGehYAJQElo80+ysxvq5vpd2QvykDp4hvIidEUJu2hf+NzG5OuMJSQJmAeAWPrkFOXN+6di9cA==\",\n+            \"version\": \"0.14.25\",\n+            \"resolved\": \"https://registry.npmjs.org/esbuild-linux-arm/-/esbuild-linux-arm-0.14.25.tgz\",\n+            \"integrity\": \"sha512-aTLcE2VBoLydL943REcAcgnDi3bHtmULSXWLbjtBdtykRatJVSxKMjK9YlBXUZC4/YcNQfH7AxwVeQr9fNxPhw==\",\n             \"dev\": true,\n             \"optional\": true\n         },\n         \"esbuild-linux-arm64\": {\n-            \"version\": \"0.14.12\",\n-            \"resolved\": \"https://registry.npmjs.org/esbuild-linux-arm64/-/esbuild-linux-arm64-0.14.12.tgz\",\n-            \"integrity\": \"sha512-i1/ikCl9gG9yx6QuI+8yJMk9XHUu8ekIQOo6cex2pDqXY5KVHSXDTAT4FDWOd5YXQ1QTjneBAQHcKGft4pd6PQ==\",\n+            \"version\": \"0.14.25\",\n+            \"resolved\": \"https://registry.npmjs.org/esbuild-linux-arm64/-/esbuild-linux-arm64-0.14.25.tgz\",\n+            \"integrity\": \"sha512-UxfenPx/wSZx55gScCImPtXekvZQLI2GW3qe5dtlmU7luiqhp5GWPzGeQEbD3yN3xg/pHc671m5bma5Ns7lBHw==\",\n             \"dev\": true,\n             \"optional\": true\n         },\n         \"esbuild-linux-mips64le\": {\n-            \"version\": \"0.14.12\",\n-            \"resolved\": \"https://registry.npmjs.org/esbuild-linux-mips64le/-/esbuild-linux-mips64le-0.14.12.tgz\",\n-            \"integrity\": \"sha512-+/a6/tiKUCENep8ryUR75Jba4znG51Sb75OzKT6phZFEkB7fao4+GZD39Zxx3EaaA5OC10MsJPjJMFrn0dMusg==\",\n+            \"version\": \"0.14.25\",\n+            \"resolved\": \"https://registry.npmjs.org/esbuild-linux-mips64le/-/esbuild-linux-mips64le-0.14.25.tgz\",\n+            \"integrity\": \"sha512-wLWYyqVfYx9Ur6eU5RT92yJVsaBGi5RdkoWqRHOqcJ38Kn60QMlcghsKeWfe9jcYut8LangYZ98xO1LxIoSXrQ==\",\n             \"dev\": true,\n             \"optional\": true\n         },\n         \"esbuild-linux-ppc64le\": {\n-            \"version\": \"0.14.12\",\n-            \"resolved\": \"https://registry.npmjs.org/esbuild-linux-ppc64le/-/esbuild-linux-ppc64le-0.14.12.tgz\",\n-            \"integrity\": \"sha512-SD7e2VLza/cEU2qKuD18Ibt1V0h3TUuerC1Mp3jRJ4RRGXWAyUt4gUpqKSiB7R0rHe6LWECdLbeVFAuGEntCeA==\",\n+            \"version\": \"0.14.25\",\n+            \"resolved\": \"https://registry.npmjs.org/esbuild-linux-ppc64le/-/esbuild-linux-ppc64le-0.14.25.tgz\",\n+            \"integrity\": \"sha512-0dR6Csl6Zas3g4p9ULckEl8Mo8IInJh33VCJ3eaV1hj9+MHGdmDOakYMN8MZP9/5nl+NU/0ygpd14cWgy8uqRw==\",\n+            \"dev\": true,\n+            \"optional\": true\n+        },\n+        \"esbuild-linux-riscv64\": {\n+            \"version\": \"0.14.25\",\n+            \"resolved\": \"https://registry.npmjs.org/esbuild-linux-riscv64/-/esbuild-linux-riscv64-0.14.25.tgz\",\n+            \"integrity\": \"sha512-J4d20HDmTrgvhR0bdkDhvvJGaikH3LzXQnNaseo8rcw9Yqby9A90gKUmWpfwqLVNRILvNnAmKLfBjCKU9ajg8w==\",\n             \"dev\": true,\n             \"optional\": true\n         },\n         \"esbuild-linux-s390x\": {\n-            \"version\": \"0.14.12\",\n-            \"resolved\": \"https://registry.npmjs.org/esbuild-linux-s390x/-/esbuild-linux-s390x-0.14.12.tgz\",\n-            \"integrity\": \"sha512-KZmjYgAvYUpPBG0v6xv8qCngbfcRKC2AdYx3H3j3VqJfICgjt5XYsyG7ntWdc8Rdw9jZxr9sni6othy2Rp/T+A==\",\n+            \"version\": \"0.14.25\",\n+            \"resolved\": \"https://registry.npmjs.org/esbuild-linux-s390x/-/esbuild-linux-s390x-0.14.25.tgz\",\n+            \"integrity\": \"sha512-YI2d5V6nTE73ZnhEKQD7MtsPs1EtUZJ3obS21oxQxGbbRw1G+PtJKjNyur+3t6nzHP9oTg6GHQ3S3hOLLmbDIQ==\",\n             \"dev\": true,\n             \"optional\": true\n         },\n         \"esbuild-netbsd-64\": {\n-            \"version\": \"0.14.12\",\n-            \"resolved\": \"https://registry.npmjs.org/esbuild-netbsd-64/-/esbuild-netbsd-64-0.14.12.tgz\",\n-            \"integrity\": \"sha512-dG+hbCIJC65fHqzkTEYbrPSYG3m8pEaI9A1VDtqHfV13Oiw9/tua1odd47iwoWvTyurErb49wanHsIAKb8/2oQ==\",\n+            \"version\": \"0.14.25\",\n+            \"resolved\": \"https://registry.npmjs.org/esbuild-netbsd-64/-/esbuild-netbsd-64-0.14.25.tgz\",\n+            \"integrity\": \"sha512-TKIVgNWLUOkr+Exrye70XTEE1lJjdQXdM4tAXRzfHE9iBA7LXWcNtVIuSnphTqpanPzTDFarF0yqq4kpbC6miA==\",\n             \"dev\": true,\n             \"optional\": true\n         },\n         \"esbuild-openbsd-64\": {\n-            \"version\": \"0.14.12\",\n-            \"resolved\": \"https://registry.npmjs.org/esbuild-openbsd-64/-/esbuild-openbsd-64-0.14.12.tgz\",\n-            \"integrity\": \"sha512-W3SwxnMjJR3HtBD0aij5WPd0ow2bRB5BsW6FjhN7FgwDBQ+jgniFs1dq54HOkjQ2qBJrt8JvPDFAxacWjdD6Jw==\",\n+            \"version\": \"0.14.25\",\n+            \"resolved\": \"https://registry.npmjs.org/esbuild-openbsd-64/-/esbuild-openbsd-64-0.14.25.tgz\",\n+            \"integrity\": \"sha512-QgFJ37A15D7NIXBTYEqz29+uw3nNBOIyog+3kFidANn6kjw0GHZ0lEYQn+cwjyzu94WobR+fes7cTl/ZYlHb1A==\",\n             \"dev\": true,\n             \"optional\": true\n         },\n         \"esbuild-sunos-64\": {\n-            \"version\": \"0.14.12\",\n-            \"resolved\": \"https://registry.npmjs.org/esbuild-sunos-64/-/esbuild-sunos-64-0.14.12.tgz\",\n-            \"integrity\": \"sha512-jU/IcTFwvUtt21wOmqKJrevyHQ5XRfiCdFbPie4wsYr8VFcPZZsz18A9lcoI8gZdrF/8pBdD0V+L2UuUY0KsGg==\",\n+            \"version\": \"0.14.25\",\n+            \"resolved\": \"https://registry.npmjs.org/esbuild-sunos-64/-/esbuild-sunos-64-0.14.25.tgz\",\n+            \"integrity\": \"sha512-rmWfjUItYIVlqr5EnTH1+GCxXiBOC42WBZ3w++qh7n2cS9Xo0lO5pGSG2N+huOU2fX5L+6YUuJ78/vOYvefeFw==\",\n             \"dev\": true,\n             \"optional\": true\n         },\n         \"esbuild-windows-32\": {\n-            \"version\": \"0.14.12\",\n-            \"resolved\": \"https://registry.npmjs.org/esbuild-windows-32/-/esbuild-windows-32-0.14.12.tgz\",\n-            \"integrity\": \"sha512-6luae9cmTB0rSPMCQFWMgf0SLNZ9hxusoS0poVEUHJf3n8bW6wgdyLE2xfYcEcXPMsjAt2e71/etkpqlFxeuYg==\",\n+            \"version\": \"0.14.25\",\n+            \"resolved\": \"https://registry.npmjs.org/esbuild-windows-32/-/esbuild-windows-32-0.14.25.tgz\",\n+            \"integrity\": \"sha512-HGAxVUofl3iUIz9W10Y9XKtD0bNsK9fBXv1D55N/ljNvkrAYcGB8YCm0v7DjlwtyS6ws3dkdQyXadbxkbzaKOA==\",\n             \"dev\": true,\n             \"optional\": true\n         },\n         \"esbuild-windows-64\": {\n-            \"version\": \"0.14.12\",\n-            \"resolved\": \"https://registry.npmjs.org/esbuild-windows-64/-/esbuild-windows-64-0.14.12.tgz\",\n-            \"integrity\": \"sha512-CdCXvME/7s0uMt+4rYd8d5roHJJ5k2VDOzWaOMWExjroet+nSSZngfLpxI5St+28lXLeBorUxeBS+p1qcfEDfw==\",\n+            \"version\": \"0.14.25\",\n+            \"resolved\": \"https://registry.npmjs.org/esbuild-windows-64/-/esbuild-windows-64-0.14.25.tgz\",\n+            \"integrity\": \"sha512-TirEohRkfWU9hXLgoDxzhMQD1g8I2mOqvdQF2RS9E/wbkORTAqJHyh7wqGRCQAwNzdNXdg3JAyhQ9/177AadWA==\",\n             \"dev\": true,\n             \"optional\": true\n         },\n         \"esbuild-windows-arm64\": {\n-            \"version\": \"0.14.12\",\n-            \"resolved\": \"https://registry.npmjs.org/esbuild-windows-arm64/-/esbuild-windows-arm64-0.14.12.tgz\",\n-            \"integrity\": \"sha512-vNuLQh/MpYDepK0GNpEWHy0Kn7Jf3Shz/Xetf8hUIc31jgCR1qbLVLDf3ckQdanD2U430YZupOGtEZKRwno79w==\",\n+            \"version\": \"0.14.25\",\n+            \"resolved\": \"https://registry.npmjs.org/esbuild-windows-arm64/-/esbuild-windows-arm64-0.14.25.tgz\",\n+            \"integrity\": \"sha512-4ype9ERiI45rSh+R8qUoBtaj6kJvUOI7oVLhKqPEpcF4Pa5PpT3hm/mXAyotJHREkHpM87PAJcA442mLnbtlNA==\",\n             \"dev\": true,\n             \"optional\": true\n         },\n@@ -5135,23 +5242,23 @@\n             \"dev\": true\n         },\n         \"eslint\": {\n-            \"version\": \"8.7.0\",\n-            \"resolved\": \"https://registry.npmjs.org/eslint/-/eslint-8.7.0.tgz\",\n-            \"integrity\": \"sha512-ifHYzkBGrzS2iDU7KjhCAVMGCvF6M3Xfs8X8b37cgrUlDt6bWRTpRh6T/gtSXv1HJ/BUGgmjvNvOEGu85Iif7w==\",\n+            \"version\": \"8.10.0\",\n+            \"resolved\": \"https://registry.npmjs.org/eslint/-/eslint-8.10.0.tgz\",\n+            \"integrity\": \"sha512-tcI1D9lfVec+R4LE1mNDnzoJ/f71Kl/9Cv4nG47jOueCMBrCCKYXr4AUVS7go6mWYGFD4+EoN6+eXSrEbRzXVw==\",\n             \"dev\": true,\n             \"requires\": {\n-                \"@eslint/eslintrc\": \"^1.0.5\",\n+                \"@eslint/eslintrc\": \"^1.2.0\",\n                 \"@humanwhocodes/config-array\": \"^0.9.2\",\n                 \"ajv\": \"^6.10.0\",\n                 \"chalk\": \"^4.0.0\",\n                 \"cross-spawn\": \"^7.0.2\",\n                 \"debug\": \"^4.3.2\",\n                 \"doctrine\": \"^3.0.0\",\n                 \"escape-string-regexp\": \"^4.0.0\",\n-                \"eslint-scope\": \"^7.1.0\",\n+                \"eslint-scope\": \"^7.1.1\",\n                 \"eslint-utils\": \"^3.0.0\",\n-                \"eslint-visitor-keys\": \"^3.2.0\",\n-                \"espree\": \"^9.3.0\",\n+                \"eslint-visitor-keys\": \"^3.3.0\",\n+                \"espree\": \"^9.3.1\",\n                 \"esquery\": \"^1.4.0\",\n                 \"esutils\": \"^2.0.2\",\n                 \"fast-deep-equal\": \"^3.1.3\",\n@@ -5178,9 +5285,9 @@\n             },\n             \"dependencies\": {\n                 \"eslint-scope\": {\n-                    \"version\": \"7.1.0\",\n-                    \"resolved\": \"https://registry.npmjs.org/eslint-scope/-/eslint-scope-7.1.0.tgz\",\n-                    \"integrity\": \"sha512-aWwkhnS0qAXqNOgKOK0dJ2nvzEbhEvpy8OlJ9kZ0FeZnA6zpjv1/Vei+puGFFX7zkPCkHHXb7IDX3A+7yPrRWg==\",\n+                    \"version\": \"7.1.1\",\n+                    \"resolved\": \"https://registry.npmjs.org/eslint-scope/-/eslint-scope-7.1.1.tgz\",\n+                    \"integrity\": \"sha512-QKQM/UXpIiHcLqJ5AOyIW7XZmzjkzQXYE54n1++wb0u9V/abW3l9uQnxX8Z5Xd18xyKIMTUAyQ0k1e8pz6LUrw==\",\n                     \"dev\": true,\n                     \"requires\": {\n                         \"esrecurse\": \"^4.3.0\",\n@@ -5223,20 +5330,20 @@\n             }\n         },\n         \"eslint-visitor-keys\": {\n-            \"version\": \"3.2.0\",\n-            \"resolved\": \"https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-3.2.0.tgz\",\n-            \"integrity\": \"sha512-IOzT0X126zn7ALX0dwFiUQEdsfzrm4+ISsQS8nukaJXwEyYKRSnEIIDULYg1mCtGp7UUXgfGl7BIolXREQK+XQ==\",\n+            \"version\": \"3.3.0\",\n+            \"resolved\": \"https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-3.3.0.tgz\",\n+            \"integrity\": \"sha512-mQ+suqKJVyeuwGYHAdjMFqjCyfl8+Ldnxuyp3ldiMBFKkvytrXUZWaiPCEav8qDHKty44bD+qV1IP4T+w+xXRA==\",\n             \"dev\": true\n         },\n         \"espree\": {\n-            \"version\": \"9.3.0\",\n-            \"resolved\": \"https://registry.npmjs.org/espree/-/espree-9.3.0.tgz\",\n-            \"integrity\": \"sha512-d/5nCsb0JcqsSEeQzFZ8DH1RmxPcglRWh24EFTlUEmCKoehXGdpsx0RkHDubqUI8LSAIKMQp4r9SzQ3n+sm4HQ==\",\n+            \"version\": \"9.3.1\",\n+            \"resolved\": \"https://registry.npmjs.org/espree/-/espree-9.3.1.tgz\",\n+            \"integrity\": \"sha512-bvdyLmJMfwkV3NCRl5ZhJf22zBFo1y8bYh3VYb+bfzqNB4Je68P2sSuXyuFquzWLebHpNd2/d5uv7yoP9ISnGQ==\",\n             \"dev\": true,\n             \"requires\": {\n                 \"acorn\": \"^8.7.0\",\n                 \"acorn-jsx\": \"^5.3.1\",\n-                \"eslint-visitor-keys\": \"^3.1.0\"\n+                \"eslint-visitor-keys\": \"^3.3.0\"\n             }\n         },\n         \"esquery\": {\n@@ -5506,9 +5613,9 @@\n             }\n         },\n         \"globals\": {\n-            \"version\": \"13.12.0\",\n-            \"resolved\": \"https://registry.npmjs.org/globals/-/globals-13.12.0.tgz\",\n-            \"integrity\": \"sha512-uS8X6lSKN2JumVoXrbUz+uG4BYG+eiawqm3qFcT7ammfbUHeCBoJMlHcec/S3krSk73/AE/f0szYFmgAA3kYZg==\",\n+            \"version\": \"13.12.1\",\n+            \"resolved\": \"https://registry.npmjs.org/globals/-/globals-13.12.1.tgz\",\n+            \"integrity\": \"sha512-317dFlgY2pdJZ9rspXDks7073GpDmXdfbM3vYYp0HAMKGDh1FfWPleI2ljVNLQX5M5lXcAslTcPTrOrMEFOjyw==\",\n             \"dev\": true,\n             \"requires\": {\n                 \"type-fest\": \"^0.20.2\"\n@@ -6671,33 +6778,33 @@\n             }\n         },\n         \"vscode-jsonrpc\": {\n-            \"version\": \"8.0.0-next.5\",\n-            \"resolved\": \"https://registry.npmjs.org/vscode-jsonrpc/-/vscode-jsonrpc-8.0.0-next.5.tgz\",\n-            \"integrity\": \"sha512-owRllqcFTnz5rXxcbmHPFGmpFmLqj9Z1V3Dzrv+s8ejOHLIT62Pyb5Uqzyl2/in2VP22DmzErPgZwrxjLCIKiQ==\"\n+            \"version\": \"8.0.0-next.6\",\n+            \"resolved\": \"https://registry.npmjs.org/vscode-jsonrpc/-/vscode-jsonrpc-8.0.0-next.6.tgz\",\n+            \"integrity\": \"sha512-6Ld3RYjygn5Ih7CkAtcAwiDQC+rakj2O+PnASfNyYv3sLmm44eJpEKzuPUN30Iy2UB09AZg8T6LBKWTJTEJDVw==\"\n         },\n         \"vscode-languageclient\": {\n-            \"version\": \"8.0.0-next.8\",\n-            \"resolved\": \"https://registry.npmjs.org/vscode-languageclient/-/vscode-languageclient-8.0.0-next.8.tgz\",\n-            \"integrity\": \"sha512-CBdYRIVqqlRmZ2YBeTk0S2QMtsL8ZJfbddlfvERmRPXW4Pimr7Nk+mYq16F/k3HbrO9Xt+RAFP1t6FIIbmuUGw==\",\n+            \"version\": \"8.0.0-next.12\",\n+            \"resolved\": \"https://registry.npmjs.org/vscode-languageclient/-/vscode-languageclient-8.0.0-next.12.tgz\",\n+            \"integrity\": \"sha512-4+kr1BQcoh+sA5/4XJDJXrQXGQ5Yz/x+WpsVGGzK/TOB7RwQ63ooxG6Ej7i/+aOQM4/QdmcYWmipDtG7vqcOiw==\",\n             \"requires\": {\n                 \"minimatch\": \"^3.0.4\",\n                 \"semver\": \"^7.3.5\",\n-                \"vscode-languageserver-protocol\": \"3.17.0-next.12\"\n+                \"vscode-languageserver-protocol\": \"3.17.0-next.14\"\n             }\n         },\n         \"vscode-languageserver-protocol\": {\n-            \"version\": \"3.17.0-next.12\",\n-            \"resolved\": \"https://registry.npmjs.org/vscode-languageserver-protocol/-/vscode-languageserver-protocol-3.17.0-next.12.tgz\",\n-            \"integrity\": \"sha512-VLRcWKOpCXcx9UrqrS+NSF6pNxV498VGYGW+eyp9a79/F9ElUq3wdG6acXYlEfpWHuIxpm6MXps8FU88wqIgTg==\",\n+            \"version\": \"3.17.0-next.14\",\n+            \"resolved\": \"https://registry.npmjs.org/vscode-languageserver-protocol/-/vscode-languageserver-protocol-3.17.0-next.14.tgz\",\n+            \"integrity\": \"sha512-iangobY8dL6sFZkOx4OhRPJM9gN0I1caUsOVR+MnPozsqQUtwMXmbIcfaIf0Akp0pd3KhJDPf/tdwRX68QGeeA==\",\n             \"requires\": {\n-                \"vscode-jsonrpc\": \"8.0.0-next.5\",\n-                \"vscode-languageserver-types\": \"3.17.0-next.6\"\n+                \"vscode-jsonrpc\": \"8.0.0-next.6\",\n+                \"vscode-languageserver-types\": \"3.17.0-next.7\"\n             }\n         },\n         \"vscode-languageserver-types\": {\n-            \"version\": \"3.17.0-next.6\",\n-            \"resolved\": \"https://registry.npmjs.org/vscode-languageserver-types/-/vscode-languageserver-types-3.17.0-next.6.tgz\",\n-            \"integrity\": \"sha512-rHYeCotiabJHgvIYzWjV8g0dHCxyOQtcryTv1Xa1horaQ4jx2V+rjLBstc6zMpCyrnZcjorwEcAvGBDCd6wudw==\"\n+            \"version\": \"3.17.0-next.7\",\n+            \"resolved\": \"https://registry.npmjs.org/vscode-languageserver-types/-/vscode-languageserver-types-3.17.0-next.7.tgz\",\n+            \"integrity\": \"sha512-KH4zdG1qBXxoso61ChgpeoZYyHGJo8bV7Jv4I+fwQ1Ryy59JAxoZ9GAbhR5TeeafHctLcg6RFvY3m8Jqfu17cg==\"\n         },\n         \"which\": {\n             \"version\": \"2.0.2\","}, {"sha": "c94a09f084db69bfd934eb86fcd6f3abd5d2acb2", "filename": "editors/code/package.json", "status": "modified", "additions": 5, "deletions": 82, "changes": 87, "blob_url": "https://github.com/rust-lang/rust/blob/49646b71d49cc3c94aa0105223be0ff71cbb6b7d/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/49646b71d49cc3c94aa0105223be0ff71cbb6b7d/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=49646b71d49cc3c94aa0105223be0ff71cbb6b7d", "patch": "@@ -21,9 +21,9 @@\n         \"Programming Languages\"\n     ],\n     \"engines\": {\n-        \"vscode\": \"^1.63.0\"\n+        \"vscode\": \"^1.65.0\"\n     },\n-    \"enableProposedApi\": true,\n+    \"enabledApiProposals\": [],\n     \"scripts\": {\n         \"vscode:prepublish\": \"npm run build-base -- --minify\",\n         \"package\": \"vsce package -o rust-analyzer.vsix\",\n@@ -36,18 +36,18 @@\n         \"test\": \"node ./out/tests/runTests.js\"\n     },\n     \"dependencies\": {\n-        \"vscode-languageclient\": \"8.0.0-next.8\",\n+        \"vscode-languageclient\": \"8.0.0-next.12\",\n         \"d3\": \"^7.3.0\",\n         \"d3-graphviz\": \"^4.0.0\"\n     },\n     \"devDependencies\": {\n         \"@types/node\": \"~14.17.5\",\n-        \"@types/vscode\": \"~1.63.0\",\n+        \"@types/vscode\": \"~1.65.0\",\n         \"@typescript-eslint/eslint-plugin\": \"^5.10.0\",\n         \"@typescript-eslint/parser\": \"^5.10.0\",\n         \"@vscode/test-electron\": \"^2.1.1\",\n         \"esbuild\": \"^0.14.12\",\n-        \"eslint\": \"^8.7.0\",\n+        \"eslint\": \"^8.10.0\",\n         \"tslib\": \"^2.3.0\",\n         \"typescript\": \"^4.5.5\",\n         \"typescript-formatter\": \"^7.2.2\",\n@@ -298,11 +298,6 @@\n                     \"default\": true,\n                     \"description\": \"Whether to show inlay hints.\"\n                 },\n-                \"rust-analyzer.inlayHints.smallerHints\": {\n-                    \"type\": \"boolean\",\n-                    \"default\": true,\n-                    \"description\": \"Whether inlay hints font size should be smaller than editor's font size.\"\n-                },\n                 \"rust-analyzer.server.path\": {\n                     \"type\": [\n                         \"null\",\n@@ -1083,78 +1078,6 @@\n             }\n         ],\n         \"colors\": [\n-            {\n-                \"id\": \"rust_analyzer.inlayHints.foreground\",\n-                \"description\": \"Foreground color of inlay hints (is overriden by more specific rust_analyzer.inlayHints.foreground.* configurations)\",\n-                \"defaults\": {\n-                    \"dark\": \"#A0A0A0F0\",\n-                    \"light\": \"#747474\",\n-                    \"highContrast\": \"#BEBEBE\"\n-                }\n-            },\n-            {\n-                \"id\": \"rust_analyzer.inlayHints.background\",\n-                \"description\": \"Background color of inlay hints (is overriden by more specific rust_analyzer.inlayHints.background.* configurations)\",\n-                \"defaults\": {\n-                    \"dark\": \"#11223300\",\n-                    \"light\": \"#11223300\",\n-                    \"highContrast\": \"#11223300\"\n-                }\n-            },\n-            {\n-                \"id\": \"rust_analyzer.inlayHints.foreground.typeHints\",\n-                \"description\": \"Foreground color of inlay type hints for variables (overrides rust_analyzer.inlayHints.foreground)\",\n-                \"defaults\": {\n-                    \"dark\": \"rust_analyzer.inlayHints.foreground\",\n-                    \"light\": \"rust_analyzer.inlayHints.foreground\",\n-                    \"highContrast\": \"rust_analyzer.inlayHints.foreground\"\n-                }\n-            },\n-            {\n-                \"id\": \"rust_analyzer.inlayHints.foreground.chainingHints\",\n-                \"description\": \"Foreground color of inlay type hints for method chains (overrides rust_analyzer.inlayHints.foreground)\",\n-                \"defaults\": {\n-                    \"dark\": \"rust_analyzer.inlayHints.foreground\",\n-                    \"light\": \"rust_analyzer.inlayHints.foreground\",\n-                    \"highContrast\": \"rust_analyzer.inlayHints.foreground\"\n-                }\n-            },\n-            {\n-                \"id\": \"rust_analyzer.inlayHints.foreground.parameterHints\",\n-                \"description\": \"Foreground color of function parameter name inlay hints at the call site (overrides rust_analyzer.inlayHints.foreground)\",\n-                \"defaults\": {\n-                    \"dark\": \"rust_analyzer.inlayHints.foreground\",\n-                    \"light\": \"rust_analyzer.inlayHints.foreground\",\n-                    \"highContrast\": \"rust_analyzer.inlayHints.foreground\"\n-                }\n-            },\n-            {\n-                \"id\": \"rust_analyzer.inlayHints.background.typeHints\",\n-                \"description\": \"Background color of inlay type hints for variables (overrides rust_analyzer.inlayHints.background)\",\n-                \"defaults\": {\n-                    \"dark\": \"rust_analyzer.inlayHints.background\",\n-                    \"light\": \"rust_analyzer.inlayHints.background\",\n-                    \"highContrast\": \"rust_analyzer.inlayHints.background\"\n-                }\n-            },\n-            {\n-                \"id\": \"rust_analyzer.inlayHints.background.chainingHints\",\n-                \"description\": \"Background color of inlay type hints for method chains (overrides rust_analyzer.inlayHints.background)\",\n-                \"defaults\": {\n-                    \"dark\": \"rust_analyzer.inlayHints.background\",\n-                    \"light\": \"rust_analyzer.inlayHints.background\",\n-                    \"highContrast\": \"rust_analyzer.inlayHints.background\"\n-                }\n-            },\n-            {\n-                \"id\": \"rust_analyzer.inlayHints.background.parameterHints\",\n-                \"description\": \"Background color of function parameter name inlay hints at the call site (overrides rust_analyzer.inlayHints.background)\",\n-                \"defaults\": {\n-                    \"dark\": \"rust_analyzer.inlayHints.background\",\n-                    \"light\": \"rust_analyzer.inlayHints.background\",\n-                    \"highContrast\": \"rust_analyzer.inlayHints.background\"\n-                }\n-            },\n             {\n                 \"id\": \"rust_analyzer.syntaxTreeBorder\",\n                 \"description\": \"Color of the border displayed in the Rust source code for the selected syntax node (see \\\"Show Syntax Tree\\\" command)\","}, {"sha": "441370a677ab26674d5944eb99353537111a6f38", "filename": "editors/code/src/inlay_hints.ts", "status": "modified", "additions": 32, "deletions": 245, "changes": 277, "blob_url": "https://github.com/rust-lang/rust/blob/49646b71d49cc3c94aa0105223be0ff71cbb6b7d/editors%2Fcode%2Fsrc%2Finlay_hints.ts", "raw_url": "https://github.com/rust-lang/rust/raw/49646b71d49cc3c94aa0105223be0ff71cbb6b7d/editors%2Fcode%2Fsrc%2Finlay_hints.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Finlay_hints.ts?ref=49646b71d49cc3c94aa0105223be0ff71cbb6b7d", "patch": "@@ -1,267 +1,54 @@\n-import * as lc from \"vscode-languageclient\";\n import * as vscode from 'vscode';\n import * as ra from './lsp_ext';\n \n import { Ctx, Disposable } from './ctx';\n-import { sendRequestWithRetry, isRustDocument, RustDocument, RustEditor, sleep } from './util';\n-\n-interface InlayHintStyle {\n-    decorationType: vscode.TextEditorDecorationType;\n-    toDecoration(hint: ra.InlayHint, conv: lc.Protocol2CodeConverter): vscode.DecorationOptions;\n-};\n-\n-interface InlayHintsStyles {\n-    typeHints: InlayHintStyle;\n-    paramHints: InlayHintStyle;\n-    chainingHints: InlayHintStyle;\n-}\n-\n+import { sendRequestWithRetry, isRustDocument } from './util';\n \n export function activateInlayHints(ctx: Ctx) {\n     const maybeUpdater = {\n-        updater: null as null | HintsUpdater,\n+        hintsProvider: null as Disposable | null,\n+        updateHintsEventEmitter: new vscode.EventEmitter<void>(),\n+\n         async onConfigChange() {\n+            this.dispose();\n+\n             const anyEnabled = ctx.config.inlayHints.typeHints\n                 || ctx.config.inlayHints.parameterHints\n                 || ctx.config.inlayHints.chainingHints;\n             const enabled = ctx.config.inlayHints.enable && anyEnabled;\n+            if (!enabled) return;\n+\n+            const event = this.updateHintsEventEmitter.event;\n+            this.hintsProvider = vscode.languages.registerInlayHintsProvider({ scheme: 'file', language: 'rust' }, new class implements vscode.InlayHintsProvider {\n+                onDidChangeInlayHints = event;\n+                async provideInlayHints(document: vscode.TextDocument, range: vscode.Range, token: vscode.CancellationToken): Promise<vscode.InlayHint[]> {\n+                    const request = { textDocument: { uri: document.uri.toString() }, range: { start: range.start, end: range.end } };\n+                    const hints = await sendRequestWithRetry(ctx.client, ra.inlayHints, request, token).catch(_ => null);\n+                    if (hints == null) {\n+                        return [];\n+                    } else {\n+                        return hints;\n+                    }\n+                }\n+            });\n+        },\n \n-            if (!enabled) return this.dispose();\n-\n-            await sleep(100);\n-            if (this.updater) {\n-                this.updater.updateInlayHintsStyles();\n-                this.updater.syncCacheAndRenderHints();\n-            } else {\n-                this.updater = new HintsUpdater(ctx);\n-            }\n+        onDidChangeTextDocument({ contentChanges, document }: vscode.TextDocumentChangeEvent) {\n+            if (contentChanges.length === 0 || !isRustDocument(document)) return;\n+            this.updateHintsEventEmitter.fire();\n         },\n+\n         dispose() {\n-            this.updater?.dispose();\n-            this.updater = null;\n-        }\n+            this.hintsProvider?.dispose();\n+            this.hintsProvider = null;\n+            this.updateHintsEventEmitter.dispose();\n+        },\n     };\n \n     ctx.pushCleanup(maybeUpdater);\n \n-    vscode.workspace.onDidChangeConfiguration(\n-        maybeUpdater.onConfigChange, maybeUpdater, ctx.subscriptions\n-    );\n+    vscode.workspace.onDidChangeConfiguration(maybeUpdater.onConfigChange, maybeUpdater, ctx.subscriptions);\n+    vscode.workspace.onDidChangeTextDocument(maybeUpdater.onDidChangeTextDocument, maybeUpdater, ctx.subscriptions);\n \n     maybeUpdater.onConfigChange().catch(console.error);\n }\n-\n-function createHintStyle(hintKind: \"type\" | \"parameter\" | \"chaining\", smallerHints: boolean): InlayHintStyle {\n-    // U+200C is a zero-width non-joiner to prevent the editor from forming a ligature\n-    // between code and type hints\n-    const [pos, render] = ({\n-        type: [\"after\", (label: string) => `\\u{200c}: ${label}`],\n-        parameter: [\"before\", (label: string) => `${label}: `],\n-        chaining: [\"after\", (label: string) => `\\u{200c}: ${label}`],\n-    } as const)[hintKind];\n-\n-    const fg = new vscode.ThemeColor(`rust_analyzer.inlayHints.foreground.${hintKind}Hints`);\n-    const bg = new vscode.ThemeColor(`rust_analyzer.inlayHints.background.${hintKind}Hints`);\n-    return {\n-        decorationType: vscode.window.createTextEditorDecorationType({\n-            [pos]: {\n-                color: fg,\n-                backgroundColor: bg,\n-                fontStyle: \"normal\",\n-                fontWeight: \"normal\",\n-                textDecoration: smallerHints ? \";font-size:smaller\" : \"none\",\n-            },\n-        }),\n-        toDecoration(hint: ra.InlayHint, conv: lc.Protocol2CodeConverter): vscode.DecorationOptions {\n-            return {\n-                range: conv.asRange(hint.range),\n-                renderOptions: { [pos]: { contentText: render(hint.label) } }\n-            };\n-        }\n-    };\n-}\n-\n-const smallHintsStyles = {\n-    typeHints: createHintStyle(\"type\", true),\n-    paramHints: createHintStyle(\"parameter\", true),\n-    chainingHints: createHintStyle(\"chaining\", true),\n-};\n-\n-const biggerHintsStyles = {\n-    typeHints: createHintStyle(\"type\", false),\n-    paramHints: createHintStyle(\"parameter\", false),\n-    chainingHints: createHintStyle(\"chaining\", false),\n-};\n-\n-class HintsUpdater implements Disposable {\n-    private sourceFiles = new Map<string, RustSourceFile>(); // map Uri -> RustSourceFile\n-    private readonly disposables: Disposable[] = [];\n-    private pendingDisposeDecorations: undefined | InlayHintsStyles = undefined;\n-    private inlayHintsStyles!: InlayHintsStyles;\n-\n-    constructor(private readonly ctx: Ctx) {\n-        vscode.window.onDidChangeVisibleTextEditors(\n-            this.onDidChangeVisibleTextEditors,\n-            this,\n-            this.disposables\n-        );\n-\n-        vscode.workspace.onDidChangeTextDocument(\n-            this.onDidChangeTextDocument,\n-            this,\n-            this.disposables\n-        );\n-\n-        // Set up initial cache shape\n-        ctx.visibleRustEditors.forEach(editor => this.sourceFiles.set(\n-            editor.document.uri.toString(),\n-            {\n-                document: editor.document,\n-                inlaysRequest: null,\n-                cachedDecorations: null\n-            }\n-        ));\n-\n-        this.updateInlayHintsStyles();\n-        this.syncCacheAndRenderHints();\n-    }\n-\n-    dispose() {\n-        this.sourceFiles.forEach(file => file.inlaysRequest?.cancel());\n-        this.ctx.visibleRustEditors.forEach(editor => this.renderDecorations(editor, { param: [], type: [], chaining: [] }));\n-        this.disposables.forEach(d => d.dispose());\n-    }\n-\n-    onDidChangeTextDocument({ contentChanges, document }: vscode.TextDocumentChangeEvent) {\n-        if (contentChanges.length === 0 || !isRustDocument(document)) return;\n-        this.syncCacheAndRenderHints();\n-    }\n-\n-    updateInlayHintsStyles() {\n-        const inlayHintsStyles = this.ctx.config.inlayHints.smallerHints ? smallHintsStyles : biggerHintsStyles;\n-\n-        if (inlayHintsStyles !== this.inlayHintsStyles) {\n-            this.pendingDisposeDecorations = this.inlayHintsStyles;\n-            this.inlayHintsStyles = inlayHintsStyles;\n-        }\n-    }\n-\n-    syncCacheAndRenderHints() {\n-        this.sourceFiles.forEach((file, uri) => this.fetchHints(file).then(hints => {\n-            if (!hints) return;\n-\n-            file.cachedDecorations = this.hintsToDecorations(hints);\n-\n-            for (const editor of this.ctx.visibleRustEditors) {\n-                if (editor.document.uri.toString() === uri) {\n-                    this.renderDecorations(editor, file.cachedDecorations);\n-                }\n-            }\n-        }));\n-    }\n-\n-    onDidChangeVisibleTextEditors() {\n-        const newSourceFiles = new Map<string, RustSourceFile>();\n-\n-        // Rerendering all, even up-to-date editors for simplicity\n-        this.ctx.visibleRustEditors.forEach(async editor => {\n-            const uri = editor.document.uri.toString();\n-            const file = this.sourceFiles.get(uri) ?? {\n-                document: editor.document,\n-                inlaysRequest: null,\n-                cachedDecorations: null\n-            };\n-            newSourceFiles.set(uri, file);\n-\n-            // No text documents changed, so we may try to use the cache\n-            if (!file.cachedDecorations) {\n-                const hints = await this.fetchHints(file);\n-                if (!hints) return;\n-\n-                file.cachedDecorations = this.hintsToDecorations(hints);\n-            }\n-\n-            this.renderDecorations(editor, file.cachedDecorations);\n-        });\n-\n-        // Cancel requests for no longer visible (disposed) source files\n-        this.sourceFiles.forEach((file, uri) => {\n-            if (!newSourceFiles.has(uri)) file.inlaysRequest?.cancel();\n-        });\n-\n-        this.sourceFiles = newSourceFiles;\n-    }\n-\n-    private renderDecorations(editor: RustEditor, decorations: InlaysDecorations) {\n-        const { typeHints, paramHints, chainingHints } = this.inlayHintsStyles;\n-        if (this.pendingDisposeDecorations !== undefined) {\n-            const { typeHints, paramHints, chainingHints } = this.pendingDisposeDecorations;\n-            editor.setDecorations(typeHints.decorationType, []);\n-            editor.setDecorations(paramHints.decorationType, []);\n-            editor.setDecorations(chainingHints.decorationType, []);\n-        }\n-        editor.setDecorations(typeHints.decorationType, decorations.type);\n-        editor.setDecorations(paramHints.decorationType, decorations.param);\n-        editor.setDecorations(chainingHints.decorationType, decorations.chaining);\n-    }\n-\n-    private hintsToDecorations(hints: ra.InlayHint[]): InlaysDecorations {\n-        const { typeHints, paramHints, chainingHints } = this.inlayHintsStyles;\n-        const decorations: InlaysDecorations = { type: [], param: [], chaining: [] };\n-        const conv = this.ctx.client.protocol2CodeConverter;\n-\n-        for (const hint of hints) {\n-            switch (hint.kind) {\n-                case ra.InlayHint.Kind.TypeHint: {\n-                    decorations.type.push(typeHints.toDecoration(hint, conv));\n-                    continue;\n-                }\n-                case ra.InlayHint.Kind.ParamHint: {\n-                    decorations.param.push(paramHints.toDecoration(hint, conv));\n-                    continue;\n-                }\n-                case ra.InlayHint.Kind.ChainingHint: {\n-                    decorations.chaining.push(chainingHints.toDecoration(hint, conv));\n-                    continue;\n-                }\n-            }\n-        }\n-        return decorations;\n-    }\n-\n-    private async fetchHints(file: RustSourceFile): Promise<null | ra.InlayHint[]> {\n-        file.inlaysRequest?.cancel();\n-\n-        const tokenSource = new vscode.CancellationTokenSource();\n-        file.inlaysRequest = tokenSource;\n-\n-        const request = { textDocument: { uri: file.document.uri.toString() } };\n-\n-        return sendRequestWithRetry(this.ctx.client, ra.inlayHints, request, tokenSource.token)\n-            .catch(_ => null)\n-            .finally(() => {\n-                if (file.inlaysRequest === tokenSource) {\n-                    file.inlaysRequest = null;\n-                }\n-            });\n-    }\n-}\n-\n-interface InlaysDecorations {\n-    type: vscode.DecorationOptions[];\n-    param: vscode.DecorationOptions[];\n-    chaining: vscode.DecorationOptions[];\n-}\n-\n-interface RustSourceFile {\n-    /**\n-     * Source of the token to cancel in-flight inlay hints request if any.\n-     */\n-    inlaysRequest: null | vscode.CancellationTokenSource;\n-    /**\n-     * Last applied decorations.\n-     */\n-    cachedDecorations: null | InlaysDecorations;\n-\n-    document: RustDocument;\n-}"}, {"sha": "9493a034819ad775faa37f0c0098ae31598d4d30", "filename": "editors/code/src/lsp_ext.ts", "status": "modified", "additions": 3, "deletions": 17, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/49646b71d49cc3c94aa0105223be0ff71cbb6b7d/editors%2Fcode%2Fsrc%2Flsp_ext.ts", "raw_url": "https://github.com/rust-lang/rust/raw/49646b71d49cc3c94aa0105223be0ff71cbb6b7d/editors%2Fcode%2Fsrc%2Flsp_ext.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Flsp_ext.ts?ref=49646b71d49cc3c94aa0105223be0ff71cbb6b7d", "patch": "@@ -2,6 +2,7 @@\n  * This file mirrors `crates/rust-analyzer/src/lsp_ext.rs` declarations.\n  */\n \n+import { InlayHint } from \"vscode\";\n import * as lc from \"vscode-languageclient\";\n \n export interface AnalyzerStatusParams {\n@@ -99,26 +100,11 @@ export interface TestInfo {\n \n export const relatedTests = new lc.RequestType<lc.TextDocumentPositionParams, TestInfo[], void>(\"rust-analyzer/relatedTests\");\n \n-export type InlayHint = InlayHint.TypeHint | InlayHint.ParamHint | InlayHint.ChainingHint;\n-\n-export namespace InlayHint {\n-    export const enum Kind {\n-        TypeHint = \"TypeHint\",\n-        ParamHint = \"ParameterHint\",\n-        ChainingHint = \"ChainingHint\",\n-    }\n-    interface Common {\n-        range: lc.Range;\n-        label: string;\n-    }\n-    export type TypeHint = Common & { kind: Kind.TypeHint };\n-    export type ParamHint = Common & { kind: Kind.ParamHint };\n-    export type ChainingHint = Common & { kind: Kind.ChainingHint };\n-}\n export interface InlayHintsParams {\n     textDocument: lc.TextDocumentIdentifier;\n+    range: lc.Range;\n }\n-export const inlayHints = new lc.RequestType<InlayHintsParams, InlayHint[], void>(\"rust-analyzer/inlayHints\");\n+export const inlayHints = new lc.RequestType<InlayHintsParams, InlayHint[], void>(\"experimental/inlayHints\");\n \n export interface SsrParams {\n     query: string;"}]}