{"sha": "321a72c1c1329415c6b94cc18b42b05c1ce8b59d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMyMWE3MmMxYzEzMjk0MTVjNmI5NGNjMThiNDJiMDVjMWNlOGI1OWQ=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2017-08-02T01:26:28Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2017-08-02T01:26:28Z"}, "message": "closure unsafety check: stop moving up when we hit an item", "tree": {"sha": "ae55380e500dd76f3f474354b08f7723e1ff9fc4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ae55380e500dd76f3f474354b08f7723e1ff9fc4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/321a72c1c1329415c6b94cc18b42b05c1ce8b59d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/321a72c1c1329415c6b94cc18b42b05c1ce8b59d", "html_url": "https://github.com/rust-lang/rust/commit/321a72c1c1329415c6b94cc18b42b05c1ce8b59d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/321a72c1c1329415c6b94cc18b42b05c1ce8b59d/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a8129d128c314975d4d34a47e9cb7127de0d0dbc", "url": "https://api.github.com/repos/rust-lang/rust/commits/a8129d128c314975d4d34a47e9cb7127de0d0dbc", "html_url": "https://github.com/rust-lang/rust/commit/a8129d128c314975d4d34a47e9cb7127de0d0dbc"}], "stats": {"total": 30, "additions": 15, "deletions": 15}, "files": [{"sha": "bbd2829c303e696506da4a2ad2290744f9bde8b6", "filename": "src/librustc_mir/transform/add_validation.rs", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/321a72c1c1329415c6b94cc18b42b05c1ce8b59d/src%2Flibrustc_mir%2Ftransform%2Fadd_validation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/321a72c1c1329415c6b94cc18b42b05c1ce8b59d/src%2Flibrustc_mir%2Ftransform%2Fadd_validation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fadd_validation.rs?ref=321a72c1c1329415c6b94cc18b42b05c1ce8b59d", "patch": "@@ -128,29 +128,29 @@ fn fn_contains_unsafe<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>, src: MirSource) ->\n         let mut cur = fn_like.id();\n         loop {\n             // Go further upwards.\n-            let parent = tcx.hir.get_parent_node(cur);\n-            if cur == parent {\n-                bug!(\"Closures muts be inside a non-closure fn_like\");\n-            }\n-            cur = parent;\n-            // Check if this is an unsafe block\n-            match tcx.hir.find(cur) {\n-                Some(Node::NodeExpr(&hir::Expr { node: hir::ExprBlock(ref block), ..})) => {\n-                    if block_is_unsafe(&*block) {\n-                        // Found an unsafe block, we can bail out here.\n+            cur = tcx.hir.get_parent_node(cur);\n+            let node = tcx.hir.get(cur);\n+            // Check if this is an unsafe function\n+            if let Some(fn_like) = FnLikeNode::from_node(node) {\n+                if !fn_is_closure(fn_like) {\n+                    if fn_like.unsafety() == hir::Unsafety::Unsafe {\n                         return true;\n                     }\n                 }\n-                _ => {},\n             }\n-            // Check if this is a non-closure fn_like, at which point we have to stop moving up\n-            if let Some(fn_like) = FnLikeNode::from_node(tcx.hir.get(cur)) {\n-                if !fn_is_closure(fn_like) {\n-                    if fn_like.unsafety() == hir::Unsafety::Unsafe {\n+            // Check if this is an unsafe block, or an item\n+            match node {\n+                Node::NodeExpr(&hir::Expr { node: hir::ExprBlock(ref block), ..}) => {\n+                    if block_is_unsafe(&*block) {\n+                        // Found an unsafe block, we can bail out here.\n                         return true;\n                     }\n+                }\n+                Node::NodeItem(..) => {\n+                    // No walking up beyond items.  This makes sure the loop always terminates.\n                     break;\n                 }\n+                _ => {},\n             }\n         }\n     }"}]}