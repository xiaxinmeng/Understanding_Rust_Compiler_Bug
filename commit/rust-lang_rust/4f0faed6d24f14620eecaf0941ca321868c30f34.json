{"sha": "4f0faed6d24f14620eecaf0941ca321868c30f34", "node_id": "C_kwDOAAsO6NoAKDRmMGZhZWQ2ZDI0ZjE0NjIwZWVjYWYwOTQxY2EzMjE4NjhjMzBmMzQ", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-11-23T19:44:55Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-11-23T19:44:55Z"}, "message": "Auto merge of #1922 - RalfJung:async-run-fut, r=RalfJung\n\nasync-fn test: make run_fut more general and entirely safe", "tree": {"sha": "26a1492a3cab1e61bff9024e82f68650a7060f8e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/26a1492a3cab1e61bff9024e82f68650a7060f8e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4f0faed6d24f14620eecaf0941ca321868c30f34", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4f0faed6d24f14620eecaf0941ca321868c30f34", "html_url": "https://github.com/rust-lang/rust/commit/4f0faed6d24f14620eecaf0941ca321868c30f34", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4f0faed6d24f14620eecaf0941ca321868c30f34/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2cd6fe88d85fa1bcf007330fa7db583d3e4daa3d", "url": "https://api.github.com/repos/rust-lang/rust/commits/2cd6fe88d85fa1bcf007330fa7db583d3e4daa3d", "html_url": "https://github.com/rust-lang/rust/commit/2cd6fe88d85fa1bcf007330fa7db583d3e4daa3d"}, {"sha": "c4502cbbe80b691a28de18373fba0d508370177f", "url": "https://api.github.com/repos/rust-lang/rust/commits/c4502cbbe80b691a28de18373fba0d508370177f", "html_url": "https://github.com/rust-lang/rust/commit/c4502cbbe80b691a28de18373fba0d508370177f"}], "stats": {"total": 29, "additions": 17, "deletions": 12}, "files": [{"sha": "414d5aaf5cc7cfa317e6c363af8adbb1ca8c204c", "filename": "tests/run-pass/async-fn.rs", "status": "modified", "additions": 17, "deletions": 12, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/4f0faed6d24f14620eecaf0941ca321868c30f34/tests%2Frun-pass%2Fasync-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0faed6d24f14620eecaf0941ca321868c30f34/tests%2Frun-pass%2Fasync-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fasync-fn.rs?ref=4f0faed6d24f14620eecaf0941ca321868c30f34", "patch": "@@ -1,8 +1,6 @@\n #![feature(never_type)]\n \n-use std::{future::Future, pin::Pin, task::Poll};\n-use std::task::{Wake, Waker, Context};\n-use std::sync::Arc;\n+use std::future::Future;\n \n // See if we can run a basic `async fn`\n pub async fn foo(x: &u32, y: u32) -> u32 {\n@@ -47,7 +45,10 @@ async fn partial_init(x: u32) -> u32 {\n     let _x: (String, !) = (String::new(), return async { x + x }.await);\n }\n \n-fn run_fut(mut fut: impl Future<Output=u32>, output: u32) {\n+fn run_fut<T>(fut: impl Future<Output = T>) -> T {\n+    use std::sync::Arc;\n+    use std::task::{Context, Poll, Wake, Waker};\n+\n     struct MyWaker;\n     impl Wake for MyWaker {\n         fn wake(self: Arc<Self>) {\n@@ -57,16 +58,20 @@ fn run_fut(mut fut: impl Future<Output=u32>, output: u32) {\n \n     let waker = Waker::from(Arc::new(MyWaker));\n     let mut context = Context::from_waker(&waker);\n-    assert_eq!(unsafe { Pin::new_unchecked(&mut fut) }.poll(&mut context), Poll::Ready(output));\n+\n+    let mut pinned = Box::pin(fut);\n+    loop {\n+        match pinned.as_mut().poll(&mut context) {\n+            Poll::Pending => continue,\n+            Poll::Ready(v) => return v,\n+        }\n+    }\n }\n \n fn main() {\n     let x = 5;\n-    run_fut(foo(&x, 7), 31);\n-\n-    run_fut(build_aggregate(1, 2, 3, 4), 10);\n-\n-    run_fut(includes_never(false, 4), 16);\n-\n-    run_fut(partial_init(4), 8);\n+    assert_eq!(run_fut(foo(&x, 7)), 31);\n+    assert_eq!(run_fut(build_aggregate(1, 2, 3, 4)), 10);\n+    assert_eq!(run_fut(includes_never(false, 4)), 16);\n+    assert_eq!(run_fut(partial_init(4)), 8);\n }"}]}