{"sha": "795acb73950adf632d1e3fb48ea6104b4d61f3cd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc5NWFjYjczOTUwYWRmNjMyZDFlM2ZiNDhlYTYxMDRiNGQ2MWYzY2Q=", "commit": {"author": {"name": "Zack Corr", "email": "zack@z0w0.me", "date": "2012-08-27T23:51:30Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-08-31T23:20:36Z"}, "message": "jit: Link in __morestack and make it resolvable by JIT", "tree": {"sha": "7166836643edb5873508725a03ff95c335b4c4d5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7166836643edb5873508725a03ff95c335b4c4d5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/795acb73950adf632d1e3fb48ea6104b4d61f3cd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/795acb73950adf632d1e3fb48ea6104b4d61f3cd", "html_url": "https://github.com/rust-lang/rust/commit/795acb73950adf632d1e3fb48ea6104b4d61f3cd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/795acb73950adf632d1e3fb48ea6104b4d61f3cd/comments", "author": {"login": "z0w0", "id": 676417, "node_id": "MDQ6VXNlcjY3NjQxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/676417?v=4", "gravatar_id": "", "url": "https://api.github.com/users/z0w0", "html_url": "https://github.com/z0w0", "followers_url": "https://api.github.com/users/z0w0/followers", "following_url": "https://api.github.com/users/z0w0/following{/other_user}", "gists_url": "https://api.github.com/users/z0w0/gists{/gist_id}", "starred_url": "https://api.github.com/users/z0w0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/z0w0/subscriptions", "organizations_url": "https://api.github.com/users/z0w0/orgs", "repos_url": "https://api.github.com/users/z0w0/repos", "events_url": "https://api.github.com/users/z0w0/events{/privacy}", "received_events_url": "https://api.github.com/users/z0w0/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7993f4820995c9b26d73e8a58bb8f3c0e2e79d47", "url": "https://api.github.com/repos/rust-lang/rust/commits/7993f4820995c9b26d73e8a58bb8f3c0e2e79d47", "html_url": "https://github.com/rust-lang/rust/commit/7993f4820995c9b26d73e8a58bb8f3c0e2e79d47"}], "stats": {"total": 19, "additions": 9, "deletions": 10}, "files": [{"sha": "804a2cec5f2b150f50c355c7fd92a8e3f322b298", "filename": "mk/rustllvm.mk", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/795acb73950adf632d1e3fb48ea6104b4d61f3cd/mk%2Frustllvm.mk", "raw_url": "https://github.com/rust-lang/rust/raw/795acb73950adf632d1e3fb48ea6104b4d61f3cd/mk%2Frustllvm.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Frustllvm.mk?ref=795acb73950adf632d1e3fb48ea6104b4d61f3cd", "patch": "@@ -23,10 +23,11 @@ RUSTLLVM_OBJS_OBJS_$(1) := $$(RUSTLLVM_OBJS_CS_$(1):rustllvm/%.cpp=rustllvm/$(1)\n ALL_OBJ_FILES += $$(RUSTLLVM_OBJS_OBJS_$(1))\n \n rustllvm/$(1)/$(CFG_RUSTLLVM): $$(RUSTLLVM_OBJS_OBJS_$(1)) \\\n+                               rt/$(1)/arch/$$(HOST_$(1))/libmorestack.a \\\n                           $$(MKFILE_DEPS) $$(RUSTLLVM_DEF_$(1))\n \t@$$(call E, link: $$@)\n \t$$(Q)$$(call CFG_LINK_C_$(1),$$@,$$(RUSTLLVM_OBJS_OBJS_$(1)) \\\n-\t  $$(CFG_GCCISH_PRE_LIB_FLAGS) $$(LLVM_LIBS_$(1)) \\\n+\t  $$(CFG_GCCISH_PRE_LIB_FLAGS) $$(LLVM_LIBS_$(1)) rt/$(1)/arch/$$(HOST_$(1))/libmorestack.a \\\n           $$(CFG_GCCISH_POST_LIB_FLAGS) \\\n           $$(LLVM_LDFLAGS_$(1)),$$(RUSTLLVM_DEF_$(1)),$$(CFG_RUSTLLVM))\n "}, {"sha": "796c054e0781c89410d0e9410245159ebc7804fb", "filename": "src/rustllvm/RustWrapper.cpp", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/795acb73950adf632d1e3fb48ea6104b4d61f3cd/src%2Frustllvm%2FRustWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/795acb73950adf632d1e3fb48ea6104b4d61f3cd/src%2Frustllvm%2FRustWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2FRustWrapper.cpp?ref=795acb73950adf632d1e3fb48ea6104b4d61f3cd", "patch": "@@ -49,6 +49,9 @@\n #include <unistd.h>\n #endif\n \n+// Does this need to be done, or can it be made to resolve from the main program?\n+extern \"C\" void __morestack(void *args, void *fn_ptr, uintptr_t stack_ptr);\n+\n using namespace llvm;\n \n static const char *LLVMRustError;\n@@ -269,17 +272,12 @@ void *RustMCJITMemoryManager::getPointerToNamedFunction(const std::string &Name,\n   if (Name == \"mknod\") return (void*)(intptr_t)&mknod;\n #endif\n \n+  if (Name == \"__morestack\") return (void*)(intptr_t)&__morestack;\n+\n   const char *NameStr = Name.c_str();\n   void *Ptr = sys::DynamicLibrary::SearchForAddressOfSymbol(NameStr);\n   if (Ptr) return Ptr;\n \n-  // If it wasn't found and if it starts with an underscore ('_') character,\n-  // try again without the underscore.\n-  if (NameStr[0] == '_') {\n-    Ptr = sys::DynamicLibrary::SearchForAddressOfSymbol(NameStr+1);\n-    if (Ptr) return Ptr;\n-  }\n-\n   if (AbortOnFailure)\n     report_fatal_error(\"Program used external function '\" + Name +\n                       \"' which could not be resolved!\");\n@@ -309,8 +307,8 @@ LLVMRustPrepareJIT(LLVMPassManagerRef PMR,\n   std::string Err;\n   TargetOptions Options;\n   Options.JITEmitDebugInfo = true;\n-  //Options.NoFramePointerElim = true;\n-  //Options.EnableSegmentedStacks = EnableSegmentedStacks;\n+  Options.NoFramePointerElim = true;\n+  Options.EnableSegmentedStacks = EnableSegmentedStacks;\n \n   unwrap<PassManager>(PMR)->run(*unwrap(M));\n "}]}