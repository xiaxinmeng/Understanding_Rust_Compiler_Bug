{"sha": "397eb4f237b92f77eadf12c0bea7cfea5a31a92a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM5N2ViNGYyMzdiOTJmNzdlYWRmMTJjMGJlYTdjZmVhNWEzMWE5MmE=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2019-01-30T10:39:19Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2019-01-31T22:11:14Z"}, "message": "Add missing generation for test and proc_macro, remove old macro redirection", "tree": {"sha": "eb83d2343232e767210eb6e1c3e3a28b435d8447", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eb83d2343232e767210eb6e1c3e3a28b435d8447"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/397eb4f237b92f77eadf12c0bea7cfea5a31a92a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/397eb4f237b92f77eadf12c0bea7cfea5a31a92a", "html_url": "https://github.com/rust-lang/rust/commit/397eb4f237b92f77eadf12c0bea7cfea5a31a92a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/397eb4f237b92f77eadf12c0bea7cfea5a31a92a/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "65440a3f4fe42acbe9970638b567ee3fa68d4824", "url": "https://api.github.com/repos/rust-lang/rust/commits/65440a3f4fe42acbe9970638b567ee3fa68d4824", "html_url": "https://github.com/rust-lang/rust/commit/65440a3f4fe42acbe9970638b567ee3fa68d4824"}], "stats": {"total": 40, "additions": 23, "deletions": 17}, "files": [{"sha": "aeb15821b0bb742c32e35d8cccb2e70fd048f675", "filename": "src/bootstrap/bin/rustdoc.rs", "status": "modified", "additions": 17, "deletions": 3, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/397eb4f237b92f77eadf12c0bea7cfea5a31a92a/src%2Fbootstrap%2Fbin%2Frustdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/397eb4f237b92f77eadf12c0bea7cfea5a31a92a/src%2Fbootstrap%2Fbin%2Frustdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbin%2Frustdoc.rs?ref=397eb4f237b92f77eadf12c0bea7cfea5a31a92a", "patch": "@@ -16,6 +16,7 @@ fn main() {\n     let libdir = env::var_os(\"RUSTDOC_LIBDIR\").expect(\"RUSTDOC_LIBDIR was not set\");\n     let stage = env::var(\"RUSTC_STAGE\").expect(\"RUSTC_STAGE was not set\");\n     let sysroot = env::var_os(\"RUSTC_SYSROOT\").expect(\"RUSTC_SYSROOT was not set\");\n+    let mut has_unstable = false;\n \n     use std::str::FromStr;\n \n@@ -54,9 +55,22 @@ fn main() {\n     // it up so we can make rustdoc print this into the docs\n     if let Some(version) = env::var_os(\"RUSTDOC_CRATE_VERSION\") {\n         // This \"unstable-options\" can be removed when `--crate-version` is stabilized\n-        cmd.arg(\"-Z\")\n-           .arg(\"unstable-options\")\n-           .arg(\"--crate-version\").arg(version);\n+        if !has_unstable {\n+            cmd.arg(\"-Z\")\n+               .arg(\"unstable-options\");\n+        }\n+        cmd.arg(\"--crate-version\").arg(version);\n+        has_unstable = true;\n+    }\n+\n+    // Needed to be able to run all rustdoc tests.\n+    if let Some(_) = env::var_os(\"RUSTDOC_GENERATE_REDIRECT_PAGES\") {\n+        // This \"unstable-options\" can be removed when `--generate-redirect-pages` is stabilized\n+        if !has_unstable {\n+            cmd.arg(\"-Z\")\n+               .arg(\"unstable-options\");\n+        }\n+        cmd.arg(\"--generate-redirect-pages\");\n     }\n \n     if verbose > 1 {"}, {"sha": "af95b622e23f313d8e88b91f1e621301c0d6d345", "filename": "src/bootstrap/doc.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/397eb4f237b92f77eadf12c0bea7cfea5a31a92a/src%2Fbootstrap%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/397eb4f237b92f77eadf12c0bea7cfea5a31a92a/src%2Fbootstrap%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdoc.rs?ref=397eb4f237b92f77eadf12c0bea7cfea5a31a92a", "patch": "@@ -317,8 +317,7 @@ fn invoke_rustdoc(builder: &Builder, compiler: Compiler, target: Interned<String\n         .arg(\"-o\").arg(&out)\n         .arg(&path)\n         .arg(\"--markdown-css\")\n-        .arg(\"../rust.css\")\n-        .arg(\"--generate-redirect-pages\");\n+        .arg(\"../rust.css\");\n \n     builder.run(&mut cmd);\n }\n@@ -557,7 +556,9 @@ impl Step for Test {\n         let mut cargo = builder.cargo(compiler, Mode::Test, target, \"doc\");\n         compile::test_cargo(builder, &compiler, target, &mut cargo);\n \n-        cargo.arg(\"--no-deps\").arg(\"-p\").arg(\"test\");\n+        cargo.arg(\"--no-deps\")\n+             .arg(\"-p\").arg(\"test\")\n+             .env(\"RUSTDOC_GENERATE_REDIRECT_PAGES\", \"1\");\n \n         builder.run(&mut cargo);\n         builder.cp_r(&my_out, &out);\n@@ -626,9 +627,9 @@ impl Step for WhitelistedRustc {\n         // We don't want to build docs for internal compiler dependencies in this\n         // step (there is another step for that). Therefore, we whitelist the crates\n         // for which docs must be built.\n-        cargo.arg(\"--no-deps\");\n         for krate in &[\"proc_macro\"] {\n-            cargo.arg(\"-p\").arg(krate);\n+            cargo.arg(\"-p\").arg(krate)\n+                 .env(\"RUSTDOC_GENERATE_REDIRECT_PAGES\", \"1\");\n         }\n \n         builder.run(&mut cargo);"}, {"sha": "ecc5bcff12dbac2edc32dce4ce7b042a7023762f", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/397eb4f237b92f77eadf12c0bea7cfea5a31a92a/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/397eb4f237b92f77eadf12c0bea7cfea5a31a92a/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=397eb4f237b92f77eadf12c0bea7cfea5a31a92a", "patch": "@@ -2244,15 +2244,6 @@ impl Context {\n                         let mut redirect_out = BufWriter::new(redirect_out);\n                         try_err!(layout::redirect(&mut redirect_out, file_name), &redir_dst);\n                     }\n-                     // If the item is a macro, redirect from the old macro URL (with !)\n-                    // to the new one (without).\n-                    if item_type == ItemType::Macro {\n-                        let redir_name = format!(\"{}.{}!.html\", item_type, name);\n-                        let redir_dst = self.dst.join(redir_name);\n-                        let redirect_out = try_err!(File::create(&redir_dst), &redir_dst);\n-                        let mut redirect_out = BufWriter::new(redirect_out);\n-                        try_err!(layout::redirect(&mut redirect_out, file_name), &redir_dst);\n-                    }\n                 }\n             }\n         }"}]}