{"sha": "98ae63753bc6c2efe1c8ed50d45e665db686cde7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk4YWU2Mzc1M2JjNmMyZWZlMWM4ZWQ1MGQ0NWU2NjVkYjY4NmNkZTc=", "commit": {"author": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2014-11-28T00:09:59Z"}, "committer": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2014-12-07T04:53:02Z"}, "message": "libcollections: remove unnecessary `to_string()` calls", "tree": {"sha": "0a9aced79cc16baba1fb00e83cabf00a4550e43f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0a9aced79cc16baba1fb00e83cabf00a4550e43f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/98ae63753bc6c2efe1c8ed50d45e665db686cde7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/98ae63753bc6c2efe1c8ed50d45e665db686cde7", "html_url": "https://github.com/rust-lang/rust/commit/98ae63753bc6c2efe1c8ed50d45e665db686cde7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/98ae63753bc6c2efe1c8ed50d45e665db686cde7/comments", "author": null, "committer": null, "parents": [{"sha": "976660f3f73a2dba68695fce1b697f7694af0a23", "url": "https://api.github.com/repos/rust-lang/rust/commits/976660f3f73a2dba68695fce1b697f7694af0a23", "html_url": "https://github.com/rust-lang/rust/commit/976660f3f73a2dba68695fce1b697f7694af0a23"}], "stats": {"total": 72, "additions": 36, "deletions": 36}, "files": [{"sha": "ad5732c47a891b88dbb07497fba8ad9d8e46954c", "filename": "src/libcollections/bit.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/98ae63753bc6c2efe1c8ed50d45e665db686cde7/src%2Flibcollections%2Fbit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98ae63753bc6c2efe1c8ed50d45e665db686cde7/src%2Flibcollections%2Fbit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fbit.rs?ref=98ae63753bc6c2efe1c8ed50d45e665db686cde7", "patch": "@@ -2660,7 +2660,7 @@ mod tests {\n         s.insert(10);\n         s.insert(50);\n         s.insert(2);\n-        assert_eq!(\"{1, 2, 10, 50}\".to_string(), s.to_string());\n+        assert_eq!(\"{1, 2, 10, 50}\", s.to_string());\n     }\n \n     fn rng() -> rand::IsaacRng {"}, {"sha": "bacbe98ad612f3093273adbd413d196f3e783fca", "filename": "src/libcollections/btree/set.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/98ae63753bc6c2efe1c8ed50d45e665db686cde7/src%2Flibcollections%2Fbtree%2Fset.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98ae63753bc6c2efe1c8ed50d45e665db686cde7/src%2Flibcollections%2Fbtree%2Fset.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fbtree%2Fset.rs?ref=98ae63753bc6c2efe1c8ed50d45e665db686cde7", "patch": "@@ -580,7 +580,7 @@ mod test {\n \n         let set_str = format!(\"{}\", set);\n \n-        assert!(set_str == \"{1, 2}\".to_string());\n-        assert_eq!(format!(\"{}\", empty), \"{}\".to_string());\n+        assert!(set_str == \"{1, 2}\");\n+        assert_eq!(format!(\"{}\", empty), \"{}\");\n     }\n }"}, {"sha": "03b8ea8f20fa5de6002dc79c5e54338f24aaff73", "filename": "src/libcollections/slice.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/98ae63753bc6c2efe1c8ed50d45e665db686cde7/src%2Flibcollections%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98ae63753bc6c2efe1c8ed50d45e665db686cde7/src%2Flibcollections%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fslice.rs?ref=98ae63753bc6c2efe1c8ed50d45e665db686cde7", "patch": "@@ -1838,20 +1838,20 @@ mod tests {\n             })\n         )\n         let empty: Vec<int> = vec![];\n-        test_show_vec!(empty, \"[]\".to_string());\n-        test_show_vec!(vec![1i], \"[1]\".to_string());\n-        test_show_vec!(vec![1i, 2, 3], \"[1, 2, 3]\".to_string());\n+        test_show_vec!(empty, \"[]\");\n+        test_show_vec!(vec![1i], \"[1]\");\n+        test_show_vec!(vec![1i, 2, 3], \"[1, 2, 3]\");\n         test_show_vec!(vec![vec![], vec![1u], vec![1u, 1u]],\n-                       \"[[], [1], [1, 1]]\".to_string());\n+                       \"[[], [1], [1, 1]]\");\n \n         let empty_mut: &mut [int] = &mut[];\n-        test_show_vec!(empty_mut, \"[]\".to_string());\n+        test_show_vec!(empty_mut, \"[]\");\n         let v: &mut[int] = &mut[1];\n-        test_show_vec!(v, \"[1]\".to_string());\n+        test_show_vec!(v, \"[1]\");\n         let v: &mut[int] = &mut[1, 2, 3];\n-        test_show_vec!(v, \"[1, 2, 3]\".to_string());\n+        test_show_vec!(v, \"[1, 2, 3]\");\n         let v: &mut [&mut[uint]] = &mut[&mut[], &mut[1u], &mut[1u, 1u]];\n-        test_show_vec!(v, \"[[], [1], [1, 1]]\".to_string());\n+        test_show_vec!(v, \"[[], [1], [1, 1]]\");\n     }\n \n     #[test]"}, {"sha": "0c41a850ac3f8d72c36af6202bf4b1ce81c0c54d", "filename": "src/libcollections/str.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/98ae63753bc6c2efe1c8ed50d45e665db686cde7/src%2Flibcollections%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98ae63753bc6c2efe1c8ed50d45e665db686cde7/src%2Flibcollections%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fstr.rs?ref=98ae63753bc6c2efe1c8ed50d45e665db686cde7", "patch": "@@ -1831,7 +1831,7 @@ mod tests {\n     fn test_nfd_chars() {\n         macro_rules! t {\n             ($input: expr, $expected: expr) => {\n-                assert_eq!($input.nfd_chars().collect::<String>(), $expected.into_string());\n+                assert_eq!($input.nfd_chars().collect::<String>(), $expected);\n             }\n         }\n         t!(\"abc\", \"abc\");\n@@ -1850,7 +1850,7 @@ mod tests {\n     fn test_nfkd_chars() {\n         macro_rules! t {\n             ($input: expr, $expected: expr) => {\n-                assert_eq!($input.nfkd_chars().collect::<String>(), $expected.into_string());\n+                assert_eq!($input.nfkd_chars().collect::<String>(), $expected);\n             }\n         }\n         t!(\"abc\", \"abc\");\n@@ -1869,7 +1869,7 @@ mod tests {\n     fn test_nfc_chars() {\n         macro_rules! t {\n             ($input: expr, $expected: expr) => {\n-                assert_eq!($input.nfc_chars().collect::<String>(), $expected.into_string());\n+                assert_eq!($input.nfc_chars().collect::<String>(), $expected);\n             }\n         }\n         t!(\"abc\", \"abc\");\n@@ -1889,7 +1889,7 @@ mod tests {\n     fn test_nfkc_chars() {\n         macro_rules! t {\n             ($input: expr, $expected: expr) => {\n-                assert_eq!($input.nfkc_chars().collect::<String>(), $expected.into_string());\n+                assert_eq!($input.nfkc_chars().collect::<String>(), $expected);\n             }\n         }\n         t!(\"abc\", \"abc\");"}, {"sha": "571f3fa468589967cadf7ad9b0d1543fd1866e84", "filename": "src/libcollections/string.rs", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/98ae63753bc6c2efe1c8ed50d45e665db686cde7/src%2Flibcollections%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98ae63753bc6c2efe1c8ed50d45e665db686cde7/src%2Flibcollections%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fstring.rs?ref=98ae63753bc6c2efe1c8ed50d45e665db686cde7", "patch": "@@ -1287,24 +1287,24 @@ mod tests {\n \n     #[test]\n     fn test_simple_types() {\n-        assert_eq!(1i.to_string(), \"1\".to_string());\n-        assert_eq!((-1i).to_string(), \"-1\".to_string());\n-        assert_eq!(200u.to_string(), \"200\".to_string());\n-        assert_eq!(2u8.to_string(), \"2\".to_string());\n-        assert_eq!(true.to_string(), \"true\".to_string());\n-        assert_eq!(false.to_string(), \"false\".to_string());\n-        assert_eq!(().to_string(), \"()\".to_string());\n-        assert_eq!((\"hi\".to_string()).to_string(), \"hi\".to_string());\n+        assert_eq!(1i.to_string(), \"1\");\n+        assert_eq!((-1i).to_string(), \"-1\");\n+        assert_eq!(200u.to_string(), \"200\");\n+        assert_eq!(2u8.to_string(), \"2\");\n+        assert_eq!(true.to_string(), \"true\");\n+        assert_eq!(false.to_string(), \"false\");\n+        assert_eq!(().to_string(), \"()\");\n+        assert_eq!((\"hi\".to_string()).to_string(), \"hi\");\n     }\n \n     #[test]\n     fn test_vectors() {\n         let x: Vec<int> = vec![];\n-        assert_eq!(x.to_string(), \"[]\".to_string());\n-        assert_eq!((vec![1i]).to_string(), \"[1]\".to_string());\n-        assert_eq!((vec![1i, 2, 3]).to_string(), \"[1, 2, 3]\".to_string());\n+        assert_eq!(x.to_string(), \"[]\");\n+        assert_eq!((vec![1i]).to_string(), \"[1]\");\n+        assert_eq!((vec![1i, 2, 3]).to_string(), \"[1, 2, 3]\");\n         assert!((vec![vec![], vec![1i], vec![1i, 1]]).to_string() ==\n-               \"[[], [1], [1, 1]]\".to_string());\n+               \"[[], [1], [1, 1]]\");\n     }\n \n     #[bench]"}, {"sha": "3818be5a19791e6e1fe53f56399556536bb477ac", "filename": "src/libcollections/tree/map.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/98ae63753bc6c2efe1c8ed50d45e665db686cde7/src%2Flibcollections%2Ftree%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98ae63753bc6c2efe1c8ed50d45e665db686cde7/src%2Flibcollections%2Ftree%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Ftree%2Fmap.rs?ref=98ae63753bc6c2efe1c8ed50d45e665db686cde7", "patch": "@@ -1735,8 +1735,8 @@ mod test_treemap {\n \n         let map_str = format!(\"{}\", map);\n \n-        assert!(map_str == \"{1: 2, 3: 4}\".to_string());\n-        assert_eq!(format!(\"{}\", empty), \"{}\".to_string());\n+        assert!(map_str == \"{1: 2, 3: 4}\");\n+        assert_eq!(format!(\"{}\", empty), \"{}\");\n     }\n \n     #[test]"}, {"sha": "bdb33f70499131f400fbdf2cec9a077c60cdd406", "filename": "src/libcollections/tree/set.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/98ae63753bc6c2efe1c8ed50d45e665db686cde7/src%2Flibcollections%2Ftree%2Fset.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98ae63753bc6c2efe1c8ed50d45e665db686cde7/src%2Flibcollections%2Ftree%2Fset.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Ftree%2Fset.rs?ref=98ae63753bc6c2efe1c8ed50d45e665db686cde7", "patch": "@@ -979,7 +979,7 @@ mod test {\n \n         let set_str = format!(\"{}\", set);\n \n-        assert!(set_str == \"{1, 2}\".to_string());\n-        assert_eq!(format!(\"{}\", empty), \"{}\".to_string());\n+        assert!(set_str == \"{1, 2}\");\n+        assert_eq!(format!(\"{}\", empty), \"{}\");\n     }\n }"}, {"sha": "6491c9a569dc621486a11819e4efc70159cbee1e", "filename": "src/libcollections/trie/map.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/98ae63753bc6c2efe1c8ed50d45e665db686cde7/src%2Flibcollections%2Ftrie%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98ae63753bc6c2efe1c8ed50d45e665db686cde7/src%2Flibcollections%2Ftrie%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Ftrie%2Fmap.rs?ref=98ae63753bc6c2efe1c8ed50d45e665db686cde7", "patch": "@@ -1605,8 +1605,8 @@ mod test {\n \n         let map_str = format!(\"{}\", map);\n \n-        assert!(map_str == \"{1: a, 2: b}\".to_string());\n-        assert_eq!(format!(\"{}\", empty), \"{}\".to_string());\n+        assert!(map_str == \"{1: a, 2: b}\");\n+        assert_eq!(format!(\"{}\", empty), \"{}\");\n     }\n \n     #[test]"}, {"sha": "436da51174284d9aedbe40a87beae96de79c0bfb", "filename": "src/libcollections/trie/set.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/98ae63753bc6c2efe1c8ed50d45e665db686cde7/src%2Flibcollections%2Ftrie%2Fset.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98ae63753bc6c2efe1c8ed50d45e665db686cde7/src%2Flibcollections%2Ftrie%2Fset.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Ftrie%2Fset.rs?ref=98ae63753bc6c2efe1c8ed50d45e665db686cde7", "patch": "@@ -696,8 +696,8 @@ mod test {\n \n         let set_str = format!(\"{}\", set);\n \n-        assert!(set_str == \"{1, 2}\".to_string());\n-        assert_eq!(format!(\"{}\", empty), \"{}\".to_string());\n+        assert!(set_str == \"{1, 2}\");\n+        assert_eq!(format!(\"{}\", empty), \"{}\");\n     }\n \n     #[test]"}, {"sha": "97b80108d766ef6c60dd72d88dee162f99d9442b", "filename": "src/libcollections/vec_map.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/98ae63753bc6c2efe1c8ed50d45e665db686cde7/src%2Flibcollections%2Fvec_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98ae63753bc6c2efe1c8ed50d45e665db686cde7/src%2Flibcollections%2Fvec_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fvec_map.rs?ref=98ae63753bc6c2efe1c8ed50d45e665db686cde7", "patch": "@@ -871,7 +871,7 @@ mod test_map {\n \n         let map_str = map.to_string();\n         assert!(map_str == \"{1: 2, 3: 4}\" || map_str == \"{3: 4, 1: 2}\");\n-        assert_eq!(format!(\"{}\", empty), \"{}\".to_string());\n+        assert_eq!(format!(\"{}\", empty), \"{}\");\n     }\n \n     #[test]"}]}