{"sha": "80a1488601c9da1687a055a6970e78b98a356ae6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgwYTE0ODg2MDFjOWRhMTY4N2EwNTVhNjk3MGU3OGI5OGEzNTZhZTY=", "commit": {"author": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-05-24T12:10:13Z"}, "committer": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-05-24T18:49:38Z"}, "message": "Prefer `to_value_with_len` over manual expanison of it", "tree": {"sha": "f363031aded11a69622106fd2bf6520de9c7bcba", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f363031aded11a69622106fd2bf6520de9c7bcba"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/80a1488601c9da1687a055a6970e78b98a356ae6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/80a1488601c9da1687a055a6970e78b98a356ae6", "html_url": "https://github.com/rust-lang/rust/commit/80a1488601c9da1687a055a6970e78b98a356ae6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/80a1488601c9da1687a055a6970e78b98a356ae6/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6d513f752f5434029a1c5084deb70c66f9464c3e", "url": "https://api.github.com/repos/rust-lang/rust/commits/6d513f752f5434029a1c5084deb70c66f9464c3e", "html_url": "https://github.com/rust-lang/rust/commit/6d513f752f5434029a1c5084deb70c66f9464c3e"}], "stats": {"total": 9, "additions": 2, "deletions": 7}, "files": [{"sha": "e1ee4ebd70b3d7ff9aa9e9345b0328adee749a0b", "filename": "src/librustc_mir/hair/cx/mod.rs", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/80a1488601c9da1687a055a6970e78b98a356ae6/src%2Flibrustc_mir%2Fhair%2Fcx%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80a1488601c9da1687a055a6970e78b98a356ae6/src%2Flibrustc_mir%2Fhair%2Fcx%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fhair%2Fcx%2Fmod.rs?ref=80a1488601c9da1687a055a6970e78b98a356ae6", "patch": "@@ -173,13 +173,8 @@ impl<'a, 'gcx, 'tcx> Cx<'a, 'gcx, 'tcx> {\n             LitKind::Str(ref s, _) => {\n                 let s = s.as_str();\n                 let id = self.tcx.allocate_bytes(s.as_bytes());\n-                ConstValue::ScalarPair(\n-                    Scalar::Ptr(id.into()),\n-                    Scalar::Bits {\n-                        bits: s.len() as u128,\n-                        defined: self.tcx.data_layout.pointer_size.bits() as u8,\n-                    }\n-                )\n+                let value = Scalar::Ptr(id.into()).to_value_with_len(s.len() as u64, self.tcx);\n+                ConstValue::from_byval_value(value)\n             },\n             LitKind::ByteStr(ref data) => {\n                 let id = self.tcx.allocate_bytes(data);"}]}