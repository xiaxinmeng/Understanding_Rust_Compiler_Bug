{"sha": "6a2eb72d068570a1d0561d49c1a1c2eef32e8b3a", "node_id": "C_kwDOAAsO6NoAKDZhMmViNzJkMDY4NTcwYTFkMDU2MWQ0OWMxYTFjMmVlZjMyZThiM2E", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-03-19T11:13:23Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-03-19T11:13:23Z"}, "message": "Auto merge of #2816 - oli-obk:\ud83d\udca4, r=RalfJung\n\nUpdate the virtual clock in isolation mode to step forward with around the same speed as the host system.\n\nBefore this, the 1s sleep test took around 4 minutes on my machine.", "tree": {"sha": "8a1d16f0c927b46e8f9b07653ac8bd25ef9a76d5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8a1d16f0c927b46e8f9b07653ac8bd25ef9a76d5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6a2eb72d068570a1d0561d49c1a1c2eef32e8b3a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6a2eb72d068570a1d0561d49c1a1c2eef32e8b3a", "html_url": "https://github.com/rust-lang/rust/commit/6a2eb72d068570a1d0561d49c1a1c2eef32e8b3a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6a2eb72d068570a1d0561d49c1a1c2eef32e8b3a/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7b1c5b66be8b4986a85b3d3889ebd0e905484420", "url": "https://api.github.com/repos/rust-lang/rust/commits/7b1c5b66be8b4986a85b3d3889ebd0e905484420", "html_url": "https://github.com/rust-lang/rust/commit/7b1c5b66be8b4986a85b3d3889ebd0e905484420"}, {"sha": "abc824fd259fae798551a228571a97c3f4b03aed", "url": "https://api.github.com/repos/rust-lang/rust/commits/abc824fd259fae798551a228571a97c3f4b03aed", "html_url": "https://github.com/rust-lang/rust/commit/abc824fd259fae798551a228571a97c3f4b03aed"}], "stats": {"total": 33, "additions": 27, "deletions": 6}, "files": [{"sha": "24bf90f104ffd5abc4b4b086f7ddbf83c079be2a", "filename": "src/tools/miri/src/clock.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/6a2eb72d068570a1d0561d49c1a1c2eef32e8b3a/src%2Ftools%2Fmiri%2Fsrc%2Fclock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a2eb72d068570a1d0561d49c1a1c2eef32e8b3a/src%2Ftools%2Fmiri%2Fsrc%2Fclock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Fsrc%2Fclock.rs?ref=6a2eb72d068570a1d0561d49c1a1c2eef32e8b3a", "patch": "@@ -3,7 +3,10 @@ use std::time::{Duration, Instant as StdInstant};\n \n /// When using a virtual clock, this defines how many nanoseconds we pretend are passing for each\n /// basic block.\n-const NANOSECONDS_PER_BASIC_BLOCK: u64 = 10;\n+/// This number is pretty random, but it has been shown to approximately cause\n+/// some sample programs to run within an order of magnitude of real time on desktop CPUs.\n+/// (See `tests/pass/shims/time-with-isolation*.rs`.)\n+const NANOSECONDS_PER_BASIC_BLOCK: u64 = 5000;\n \n #[derive(Debug)]\n pub struct Instant {"}, {"sha": "7852d495e28facf724ca77377ce5fe224fb6ed19", "filename": "src/tools/miri/tests/pass/concurrency/thread_park_isolated.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6a2eb72d068570a1d0561d49c1a1c2eef32e8b3a/src%2Ftools%2Fmiri%2Ftests%2Fpass%2Fconcurrency%2Fthread_park_isolated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a2eb72d068570a1d0561d49c1a1c2eef32e8b3a/src%2Ftools%2Fmiri%2Ftests%2Fpass%2Fconcurrency%2Fthread_park_isolated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Fpass%2Fconcurrency%2Fthread_park_isolated.rs?ref=6a2eb72d068570a1d0561d49c1a1c2eef32e8b3a", "patch": "@@ -7,6 +7,6 @@ fn main() {\n \n     thread::park_timeout(Duration::from_millis(200));\n \n-    // Thanks to deterministic execution, this will wiat *exactly* 200ms (rounded to 1ms).\n-    assert!((200..201).contains(&start.elapsed().as_millis()));\n+    // Thanks to deterministic execution, this will wait *exactly* 200ms, plus the time for the surrounding code.\n+    assert!((200..210).contains(&start.elapsed().as_millis()), \"{}\", start.elapsed().as_millis());\n }"}, {"sha": "a0c3c6bbaa92e6aa75cd609592c1af0c0ecab1bf", "filename": "src/tools/miri/tests/pass/shims/time-with-isolation.rs", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/6a2eb72d068570a1d0561d49c1a1c2eef32e8b3a/src%2Ftools%2Fmiri%2Ftests%2Fpass%2Fshims%2Ftime-with-isolation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a2eb72d068570a1d0561d49c1a1c2eef32e8b3a/src%2Ftools%2Fmiri%2Ftests%2Fpass%2Fshims%2Ftime-with-isolation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Fpass%2Fshims%2Ftime-with-isolation.rs?ref=6a2eb72d068570a1d0561d49c1a1c2eef32e8b3a", "patch": "@@ -22,14 +22,23 @@ fn test_time_passes() {\n     let diff = now2.duration_since(now1);\n     assert_eq!(now1 + diff, now2);\n     assert_eq!(now2 - diff, now1);\n-    // The virtual clock is deterministic and I got 29us on a 64-bit Linux machine. However, this\n+    // The virtual clock is deterministic and I got 15ms on a 64-bit Linux machine. However, this\n     // changes according to the platform so we use an interval to be safe. This should be updated\n     // if `NANOSECONDS_PER_BASIC_BLOCK` changes.\n-    assert!(diff.as_micros() > 10);\n-    assert!(diff.as_micros() < 40);\n+    assert!(diff.as_millis() > 5);\n+    assert!(diff.as_millis() < 20);\n+}\n+\n+fn test_block_for_one_second() {\n+    let end = Instant::now() + Duration::from_secs(1);\n+    // This takes a long time, as we only increment when statements are executed.\n+    // When we sleep on all threads, we fast forward to the sleep duration, which we can't\n+    // do with busy waiting.\n+    while Instant::now() < end {}\n }\n \n fn main() {\n     test_time_passes();\n+    test_block_for_one_second();\n     test_sleep();\n }"}, {"sha": "24e72e22fd89505cc5b509cc2d132f312c0dfd8e", "filename": "src/tools/miri/tests/pass/shims/time-with-isolation2.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6a2eb72d068570a1d0561d49c1a1c2eef32e8b3a/src%2Ftools%2Fmiri%2Ftests%2Fpass%2Fshims%2Ftime-with-isolation2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a2eb72d068570a1d0561d49c1a1c2eef32e8b3a/src%2Ftools%2Fmiri%2Ftests%2Fpass%2Fshims%2Ftime-with-isolation2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Fpass%2Fshims%2Ftime-with-isolation2.rs?ref=6a2eb72d068570a1d0561d49c1a1c2eef32e8b3a", "patch": "@@ -0,0 +1,8 @@\n+use std::time::Instant;\n+\n+fn main() {\n+    let begin = Instant::now();\n+    for _ in 0..100_000 {}\n+    let time = begin.elapsed();\n+    println!(\"The loop took around {}s\", time.as_secs());\n+}"}, {"sha": "641e469f50c264a1ca4ec78c413fba786c946160", "filename": "src/tools/miri/tests/pass/shims/time-with-isolation2.stdout", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6a2eb72d068570a1d0561d49c1a1c2eef32e8b3a/src%2Ftools%2Fmiri%2Ftests%2Fpass%2Fshims%2Ftime-with-isolation2.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/6a2eb72d068570a1d0561d49c1a1c2eef32e8b3a/src%2Ftools%2Fmiri%2Ftests%2Fpass%2Fshims%2Ftime-with-isolation2.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Fpass%2Fshims%2Ftime-with-isolation2.stdout?ref=6a2eb72d068570a1d0561d49c1a1c2eef32e8b3a", "patch": "@@ -0,0 +1 @@\n+The loop took around 13s"}]}