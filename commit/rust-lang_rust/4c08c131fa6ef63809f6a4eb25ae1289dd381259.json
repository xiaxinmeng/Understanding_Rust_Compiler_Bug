{"sha": "4c08c131fa6ef63809f6a4eb25ae1289dd381259", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRjMDhjMTMxZmE2ZWY2MzgwOWY2YTRlYjI1YWUxMjg5ZGQzODEyNTk=", "commit": {"author": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2017-08-03T00:59:33Z"}, "committer": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2017-08-03T03:16:34Z"}, "message": "Indicate how `ThreadId` is created.", "tree": {"sha": "7aa9a7c8dac5d1d8546058a205e41491fb308621", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7aa9a7c8dac5d1d8546058a205e41491fb308621"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4c08c131fa6ef63809f6a4eb25ae1289dd381259", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4c08c131fa6ef63809f6a4eb25ae1289dd381259", "html_url": "https://github.com/rust-lang/rust/commit/4c08c131fa6ef63809f6a4eb25ae1289dd381259", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4c08c131fa6ef63809f6a4eb25ae1289dd381259/comments", "author": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "committer": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "795db4c946a5093877b50a59f0575e58103fec0f", "url": "https://api.github.com/repos/rust-lang/rust/commits/795db4c946a5093877b50a59f0575e58103fec0f", "html_url": "https://github.com/rust-lang/rust/commit/795db4c946a5093877b50a59f0575e58103fec0f"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "cbd019c2c0e64acb5665ab6ab090d079b9781d3c", "filename": "src/libstd/thread/mod.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4c08c131fa6ef63809f6a4eb25ae1289dd381259/src%2Flibstd%2Fthread%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c08c131fa6ef63809f6a4eb25ae1289dd381259/src%2Flibstd%2Fthread%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fthread%2Fmod.rs?ref=4c08c131fa6ef63809f6a4eb25ae1289dd381259", "patch": "@@ -820,7 +820,8 @@ pub fn park_timeout(dur: Duration) {\n ///\n /// A `ThreadId` is an opaque object that has a unique value for each thread\n /// that creates one. `ThreadId`s are not guaranteed to correspond to a thread's\n-/// system-designated identifier.\n+/// system-designated identifier. A `ThreadId` can be retrieved from the [`id`]\n+/// method on a [`Thread`].\n ///\n /// # Examples\n ///\n@@ -834,6 +835,9 @@ pub fn park_timeout(dur: Duration) {\n /// let other_thread_id = other_thread.join().unwrap();\n /// assert!(thread::current().id() != other_thread_id);\n /// ```\n+///\n+/// [`id`]: ../../std/thread/struct.Thread.html#method.id\n+/// [`Thread`]: ../../std/thread/struct.Thread.html\n #[stable(feature = \"thread_id\", since = \"1.19.0\")]\n #[derive(Eq, PartialEq, Clone, Copy, Hash, Debug)]\n pub struct ThreadId(u64);"}]}