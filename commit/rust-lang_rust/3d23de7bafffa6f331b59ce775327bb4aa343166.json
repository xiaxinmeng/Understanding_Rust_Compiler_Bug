{"sha": "3d23de7bafffa6f331b59ce775327bb4aa343166", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNkMjNkZTdiYWZmZmE2ZjMzMWI1OWNlNzc1MzI3YmI0YWEzNDMxNjY=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-03-12T15:32:15Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-03-12T15:32:15Z"}, "message": "Rollup merge of #69705 - ehuss:toolstate-remove-redundant-beta, r=Mark-Simulacrum\n\nToolstate: remove redundant beta-week check.\n\nI made a bit of a mistake in #69624.  The \"beta regression\" doesn't need to be checked twice.\n\nI also rolled up #69693 to avoid merge conflicts.", "tree": {"sha": "e15c2a68015ecbf718de0a41df6bf1c9219d3ab1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e15c2a68015ecbf718de0a41df6bf1c9219d3ab1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3d23de7bafffa6f331b59ce775327bb4aa343166", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJealX/CRBK7hj4Ov3rIwAAdHIIAF/QN7W1o9mmzpKYTmsye/E4\n0MULkXgLo8YdqQaAeghdBeTCE/r3wOdQOPnfh8AbOC+g2uWfmgSrHvUolMSXrvny\nuROrVXQ6vdMWD85JjZ3ANAAVqKKLcVtq4UMcfx6kDa2DdWISJC+2zx4Ybgiw6//f\n4ddxhXJhwL97pCg4miXkCiK1g6TpGDb1F0Zb9/5E7Mj4/6mO4ZBk+aoFsZHk35CF\n3yhLEWSccxx16GgoZyvfk9linltVSJoovRGFC2nvAPyQ+h95nEgSR8fMSg280sLx\nFUtTBsEnnyyykZoSmrcpaMwTtwFaLkXDbWN3cf7VRbcVsl4IVBhF9DOkbV6cc5Y=\n=Yxuc\n-----END PGP SIGNATURE-----\n", "payload": "tree e15c2a68015ecbf718de0a41df6bf1c9219d3ab1\nparent 9bc738697003db452a1a169dbddc74fe6237a02d\nparent a41f1f128ee9fbe595a588b9b91d545a895f5c39\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1584027135 +0100\ncommitter GitHub <noreply@github.com> 1584027135 +0100\n\nRollup merge of #69705 - ehuss:toolstate-remove-redundant-beta, r=Mark-Simulacrum\n\nToolstate: remove redundant beta-week check.\n\nI made a bit of a mistake in #69624.  The \"beta regression\" doesn't need to be checked twice.\n\nI also rolled up #69693 to avoid merge conflicts.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3d23de7bafffa6f331b59ce775327bb4aa343166", "html_url": "https://github.com/rust-lang/rust/commit/3d23de7bafffa6f331b59ce775327bb4aa343166", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3d23de7bafffa6f331b59ce775327bb4aa343166/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9bc738697003db452a1a169dbddc74fe6237a02d", "url": "https://api.github.com/repos/rust-lang/rust/commits/9bc738697003db452a1a169dbddc74fe6237a02d", "html_url": "https://github.com/rust-lang/rust/commit/9bc738697003db452a1a169dbddc74fe6237a02d"}, {"sha": "a41f1f128ee9fbe595a588b9b91d545a895f5c39", "url": "https://api.github.com/repos/rust-lang/rust/commits/a41f1f128ee9fbe595a588b9b91d545a895f5c39", "html_url": "https://github.com/rust-lang/rust/commit/a41f1f128ee9fbe595a588b9b91d545a895f5c39"}], "stats": {"total": 68, "additions": 29, "deletions": 39}, "files": [{"sha": "f0e0f92af55fc3e7b2abab1f78cd1eaf3f909c0f", "filename": "src/bootstrap/toolstate.rs", "status": "modified", "additions": 22, "deletions": 33, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/3d23de7bafffa6f331b59ce775327bb4aa343166/src%2Fbootstrap%2Ftoolstate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d23de7bafffa6f331b59ce775327bb4aa343166/src%2Fbootstrap%2Ftoolstate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftoolstate.rs?ref=3d23de7bafffa6f331b59ce775327bb4aa343166", "patch": "@@ -215,13 +215,21 @@ impl Step for ToolStateCheck {\n                             tool, old_state, state\n                         );\n                     } else {\n+                        // This warning only appears in the logs, which most\n+                        // people won't read. It's mostly here for testing and\n+                        // debugging.\n                         eprintln!(\n                             \"warning: Tool `{}` is not test-pass (is `{}`), \\\n                             this should be fixed before beta is branched.\",\n                             tool, state\n                         );\n                     }\n                 }\n+                // `publish_toolstate.py` is responsible for updating\n+                // `latest.json` and creating comments/issues warning people\n+                // if there is a regression. That all happens in a separate CI\n+                // job on the master branch once the PR has passed all tests\n+                // on the `auto` branch.\n             }\n         }\n \n@@ -230,7 +238,7 @@ impl Step for ToolStateCheck {\n         }\n \n         if builder.config.channel == \"nightly\" && env::var_os(\"TOOLSTATE_PUBLISH\").is_some() {\n-            commit_toolstate_change(&toolstates, in_beta_week);\n+            commit_toolstate_change(&toolstates);\n         }\n     }\n \n@@ -325,11 +333,11 @@ fn prepare_toolstate_config(token: &str) {\n             Err(_) => false,\n         };\n         if !success {\n-            panic!(\"git config key={} value={} successful (status: {:?})\", key, value, status);\n+            panic!(\"git config key={} value={} failed (status: {:?})\", key, value, status);\n         }\n     }\n \n-    // If changing anything here, then please check that src/ci/publish_toolstate.sh is up to date\n+    // If changing anything here, then please check that `src/ci/publish_toolstate.sh` is up to date\n     // as well.\n     git_config(\"user.email\", \"7378925+rust-toolstate-update@users.noreply.github.com\");\n     git_config(\"user.name\", \"Rust Toolstate Update\");\n@@ -373,14 +381,14 @@ fn read_old_toolstate() -> Vec<RepoState> {\n ///\n ///       * See <https://help.github.com/articles/about-commit-email-addresses/>\n ///           if a private email by GitHub is wanted.\n-fn commit_toolstate_change(current_toolstate: &ToolstateData, in_beta_week: bool) {\n-    let old_toolstate = read_old_toolstate();\n-\n+fn commit_toolstate_change(current_toolstate: &ToolstateData) {\n     let message = format!(\"({} CI update)\", OS.expect(\"linux/windows only\"));\n     let mut success = false;\n     for _ in 1..=5 {\n-        // Update the toolstate results (the new commit-to-toolstate mapping) in the toolstate repo.\n-        change_toolstate(&current_toolstate, &old_toolstate, in_beta_week);\n+        // Upload the test results (the new commit-to-toolstate mapping) to the toolstate repo.\n+        // This does *not* change the \"current toolstate\"; that only happens post-landing\n+        // via `src/ci/docker/publish_toolstate.sh`.\n+        publish_test_results(&current_toolstate);\n \n         // `git commit` failing means nothing to commit.\n         let status = t!(Command::new(\"git\")\n@@ -429,31 +437,12 @@ fn commit_toolstate_change(current_toolstate: &ToolstateData, in_beta_week: bool\n     }\n }\n \n-fn change_toolstate(\n-    current_toolstate: &ToolstateData,\n-    old_toolstate: &[RepoState],\n-    in_beta_week: bool,\n-) {\n-    let mut regressed = false;\n-    for repo_state in old_toolstate {\n-        let tool = &repo_state.tool;\n-        let state = repo_state.state();\n-        let new_state = current_toolstate[tool.as_str()];\n-\n-        if new_state != state {\n-            eprintln!(\"The state of `{}` has changed from `{}` to `{}`\", tool, state, new_state);\n-            if new_state < state {\n-                if !NIGHTLY_TOOLS.iter().any(|(name, _path)| name == tool) {\n-                    regressed = true;\n-                }\n-            }\n-        }\n-    }\n-\n-    if regressed && in_beta_week {\n-        std::process::exit(1);\n-    }\n-\n+/// Updates the \"history\" files with the latest results.\n+///\n+/// These results will later be promoted to `latest.json` by the\n+/// `publish_toolstate.py` script if the PR passes all tests and is merged to\n+/// master.\n+fn publish_test_results(current_toolstate: &ToolstateData) {\n     let commit = t!(std::process::Command::new(\"git\").arg(\"rev-parse\").arg(\"HEAD\").output());\n     let commit = t!(String::from_utf8(commit.stdout));\n "}, {"sha": "691df04e754a6fac9d1ccb6824ec4d63b1ca2ed4", "filename": "src/ci/publish_toolstate.sh", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3d23de7bafffa6f331b59ce775327bb4aa343166/src%2Fci%2Fpublish_toolstate.sh", "raw_url": "https://github.com/rust-lang/rust/raw/3d23de7bafffa6f331b59ce775327bb4aa343166/src%2Fci%2Fpublish_toolstate.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fpublish_toolstate.sh?ref=3d23de7bafffa6f331b59ce775327bb4aa343166", "patch": "@@ -23,7 +23,9 @@ GIT_COMMIT_MSG=\"$(git log --format=%s -n1 HEAD)\"\n cd rust-toolstate\n FAILURE=1\n for RETRY_COUNT in 1 2 3 4 5; do\n-    #  The purpose is to publish the new \"current\" toolstate in the toolstate repo.\n+    # The purpose of this is to publish the new \"current\" toolstate in the toolstate repo.\n+    # This happens post-landing, on master.\n+    # (Publishing the per-commit test results happens pre-landing in src/bootstrap/toolstate.rs).\n     \"$(ciCheckoutPath)/src/tools/publish_toolstate.py\" \"$GIT_COMMIT\" \\\n         \"$GIT_COMMIT_MSG\" \\\n         \"$MESSAGE_FILE\" \\"}, {"sha": "b389cd0373cc4da052b52f36660472b1f98089a9", "filename": "src/tools/publish_toolstate.py", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/3d23de7bafffa6f331b59ce775327bb4aa343166/src%2Ftools%2Fpublish_toolstate.py", "raw_url": "https://github.com/rust-lang/rust/raw/3d23de7bafffa6f331b59ce775327bb4aa343166/src%2Ftools%2Fpublish_toolstate.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fpublish_toolstate.py?ref=3d23de7bafffa6f331b59ce775327bb4aa343166", "patch": "@@ -1,11 +1,10 @@\n #!/usr/bin/env python\n # -*- coding: utf-8 -*-\n \n-# This script publishes the new \"current\" toolstate in the toolstate repo (not to be\n-# confused with publishing the test results, which happens in\n-# `src/ci/docker/x86_64-gnu-tools/checktools.sh`).\n-# It is set as callback for `src/ci/docker/x86_64-gnu-tools/repo.sh` by the CI scripts\n-# when a new commit lands on `master` (i.e., after it passed all checks on `auto`).\n+# This script computes the new \"current\" toolstate for the toolstate repo (not to be\n+# confused with publishing the test results, which happens in `src/bootstrap/toolstate.rs`).\n+# It gets called from `src/ci/publish_toolstate.sh` when a new commit lands on `master`\n+# (i.e., after it passed all checks on `auto`).\n \n from __future__ import print_function\n "}]}