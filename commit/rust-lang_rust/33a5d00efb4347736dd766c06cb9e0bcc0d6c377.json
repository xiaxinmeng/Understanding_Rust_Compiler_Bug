{"sha": "33a5d00efb4347736dd766c06cb9e0bcc0d6c377", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMzYTVkMDBlZmI0MzQ3NzM2ZGQ3NjZjMDZjYjllMGJjYzBkNmMzNzc=", "commit": {"author": {"name": "Seth Pellegrino", "email": "seth@codecopse.net", "date": "2020-07-07T02:35:07Z"}, "committer": {"name": "Seth Pellegrino", "email": "seth@codecopse.net", "date": "2020-07-07T02:35:07Z"}, "message": "Two new rustdoc tests for intra links\n\nThey both produce less-than-desirable output (links going to docs.rust-lang.org), but I haven't figured out yet how to assert about them properly.", "tree": {"sha": "417134c493bb1e7f7040b1638eddb2cd82dcf0a4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/417134c493bb1e7f7040b1638eddb2cd82dcf0a4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/33a5d00efb4347736dd766c06cb9e0bcc0d6c377", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/33a5d00efb4347736dd766c06cb9e0bcc0d6c377", "html_url": "https://github.com/rust-lang/rust/commit/33a5d00efb4347736dd766c06cb9e0bcc0d6c377", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/33a5d00efb4347736dd766c06cb9e0bcc0d6c377/comments", "author": {"login": "sethp", "id": 241129, "node_id": "MDQ6VXNlcjI0MTEyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/241129?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sethp", "html_url": "https://github.com/sethp", "followers_url": "https://api.github.com/users/sethp/followers", "following_url": "https://api.github.com/users/sethp/following{/other_user}", "gists_url": "https://api.github.com/users/sethp/gists{/gist_id}", "starred_url": "https://api.github.com/users/sethp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sethp/subscriptions", "organizations_url": "https://api.github.com/users/sethp/orgs", "repos_url": "https://api.github.com/users/sethp/repos", "events_url": "https://api.github.com/users/sethp/events{/privacy}", "received_events_url": "https://api.github.com/users/sethp/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sethp", "id": 241129, "node_id": "MDQ6VXNlcjI0MTEyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/241129?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sethp", "html_url": "https://github.com/sethp", "followers_url": "https://api.github.com/users/sethp/followers", "following_url": "https://api.github.com/users/sethp/following{/other_user}", "gists_url": "https://api.github.com/users/sethp/gists{/gist_id}", "starred_url": "https://api.github.com/users/sethp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sethp/subscriptions", "organizations_url": "https://api.github.com/users/sethp/orgs", "repos_url": "https://api.github.com/users/sethp/repos", "events_url": "https://api.github.com/users/sethp/events{/privacy}", "received_events_url": "https://api.github.com/users/sethp/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ee3a0f867e938f469cbbb422a76ed5662be2ecc7", "url": "https://api.github.com/repos/rust-lang/rust/commits/ee3a0f867e938f469cbbb422a76ed5662be2ecc7", "html_url": "https://github.com/rust-lang/rust/commit/ee3a0f867e938f469cbbb422a76ed5662be2ecc7"}], "stats": {"total": 49, "additions": 49, "deletions": 0}, "files": [{"sha": "999dfbdd8a3f5b25666b3dfda6b9bd71af7ce770", "filename": "src/test/rustdoc/auxiliary/my-core.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/33a5d00efb4347736dd766c06cb9e0bcc0d6c377/src%2Ftest%2Frustdoc%2Fauxiliary%2Fmy-core.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33a5d00efb4347736dd766c06cb9e0bcc0d6c377/src%2Ftest%2Frustdoc%2Fauxiliary%2Fmy-core.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fauxiliary%2Fmy-core.rs?ref=33a5d00efb4347736dd766c06cb9e0bcc0d6c377", "patch": "@@ -0,0 +1,18 @@\n+#![feature(no_core, lang_items)]\n+#![no_core]\n+\n+#[lang = \"char\"]\n+impl char {\n+    pub fn len_utf8(self) -> usize {\n+        42\n+    }\n+}\n+\n+#[lang = \"sized\"]\n+pub trait Sized {}\n+\n+#[lang = \"clone\"]\n+pub trait Clone: Sized {}\n+\n+#[lang = \"copy\"]\n+pub trait Copy: Clone {}"}, {"sha": "85e017e89b146206fddf73472f063f5152b4c15c", "filename": "src/test/rustdoc/intra-link-prim-methods-external-core.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/33a5d00efb4347736dd766c06cb9e0bcc0d6c377/src%2Ftest%2Frustdoc%2Fintra-link-prim-methods-external-core.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33a5d00efb4347736dd766c06cb9e0bcc0d6c377/src%2Ftest%2Frustdoc%2Fintra-link-prim-methods-external-core.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-link-prim-methods-external-core.rs?ref=33a5d00efb4347736dd766c06cb9e0bcc0d6c377", "patch": "@@ -0,0 +1,10 @@\n+// aux-build:my-core.rs\n+// ignore-cross-compile\n+\n+#![deny(intra_doc_link_resolution_failure)]\n+#![feature(no_core, lang_items)]\n+#![no_core]\n+\n+//! A [`char`] and its [`char::len_utf8`].\n+\n+extern crate my_core;"}, {"sha": "c0be16885dae812b36fdcd5c59d01df19c16b3ff", "filename": "src/test/rustdoc/intra-link-prim-methods-local.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/33a5d00efb4347736dd766c06cb9e0bcc0d6c377/src%2Ftest%2Frustdoc%2Fintra-link-prim-methods-local.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33a5d00efb4347736dd766c06cb9e0bcc0d6c377/src%2Ftest%2Frustdoc%2Fintra-link-prim-methods-local.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-link-prim-methods-local.rs?ref=33a5d00efb4347736dd766c06cb9e0bcc0d6c377", "patch": "@@ -0,0 +1,21 @@\n+#![deny(intra_doc_link_resolution_failure)]\n+#![feature(no_core, lang_items)]\n+#![no_core]\n+\n+//! A [`char`] and its [`char::len_utf8`].\n+\n+#[lang = \"char\"]\n+impl char {\n+    pub fn len_utf8(self) -> usize {\n+        42\n+    }\n+}\n+\n+#[lang = \"sized\"]\n+pub trait Sized {}\n+\n+#[lang = \"clone\"]\n+pub trait Clone: Sized {}\n+\n+#[lang = \"copy\"]\n+pub trait Copy: Clone {}"}]}