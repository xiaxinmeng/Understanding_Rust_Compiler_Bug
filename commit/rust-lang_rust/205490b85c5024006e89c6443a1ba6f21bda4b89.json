{"sha": "205490b85c5024006e89c6443a1ba6f21bda4b89", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIwNTQ5MGI4NWM1MDI0MDA2ZTg5YzY0NDNhMWJhNmYyMWJkYTRiODk=", "commit": {"author": {"name": "Alexander Regueiro", "email": "alexreg@me.com", "date": "2019-02-26T18:37:05Z"}, "committer": {"name": "Alexander Regueiro", "email": "alexreg@me.com", "date": "2019-02-26T18:37:46Z"}, "message": "Fixed nits raised in review.", "tree": {"sha": "7f2bdadd6028cb5c4b22461c2f4b5aac96b31c7c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7f2bdadd6028cb5c4b22461c2f4b5aac96b31c7c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/205490b85c5024006e89c6443a1ba6f21bda4b89", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/205490b85c5024006e89c6443a1ba6f21bda4b89", "html_url": "https://github.com/rust-lang/rust/commit/205490b85c5024006e89c6443a1ba6f21bda4b89", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/205490b85c5024006e89c6443a1ba6f21bda4b89/comments", "author": {"login": "alexreg", "id": 67036, "node_id": "MDQ6VXNlcjY3MDM2", "avatar_url": "https://avatars.githubusercontent.com/u/67036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexreg", "html_url": "https://github.com/alexreg", "followers_url": "https://api.github.com/users/alexreg/followers", "following_url": "https://api.github.com/users/alexreg/following{/other_user}", "gists_url": "https://api.github.com/users/alexreg/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexreg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexreg/subscriptions", "organizations_url": "https://api.github.com/users/alexreg/orgs", "repos_url": "https://api.github.com/users/alexreg/repos", "events_url": "https://api.github.com/users/alexreg/events{/privacy}", "received_events_url": "https://api.github.com/users/alexreg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexreg", "id": 67036, "node_id": "MDQ6VXNlcjY3MDM2", "avatar_url": "https://avatars.githubusercontent.com/u/67036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexreg", "html_url": "https://github.com/alexreg", "followers_url": "https://api.github.com/users/alexreg/followers", "following_url": "https://api.github.com/users/alexreg/following{/other_user}", "gists_url": "https://api.github.com/users/alexreg/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexreg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexreg/subscriptions", "organizations_url": "https://api.github.com/users/alexreg/orgs", "repos_url": "https://api.github.com/users/alexreg/repos", "events_url": "https://api.github.com/users/alexreg/events{/privacy}", "received_events_url": "https://api.github.com/users/alexreg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "12d3ecbaff9e7b627e79404fa21e2a52278e1368", "url": "https://api.github.com/repos/rust-lang/rust/commits/12d3ecbaff9e7b627e79404fa21e2a52278e1368", "html_url": "https://github.com/rust-lang/rust/commit/12d3ecbaff9e7b627e79404fa21e2a52278e1368"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "c1cad6edc0abb6c2078fce52b90f7e007ee7ffd3", "filename": "src/bin/miri.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/205490b85c5024006e89c6443a1ba6f21bda4b89/src%2Fbin%2Fmiri.rs", "raw_url": "https://github.com/rust-lang/rust/raw/205490b85c5024006e89c6443a1ba6f21bda4b89/src%2Fbin%2Fmiri.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fmiri.rs?ref=205490b85c5024006e89c6443a1ba6f21bda4b89", "patch": "@@ -178,7 +178,7 @@ fn find_sysroot() -> String {\n         _ => {\n             option_env!(\"RUST_SYSROOT\")\n                 .expect(\n-                    \"could not find sysroot. either set `MIRI_SYSROOT` at run-time, or at \\\n+                    \"could not find sysroot. Either set `MIRI_SYSROOT` at run-time, or at \\\n                      build-time specify `RUST_SYSROOT` env var or use rustup or multirust\",\n                 )\n                 .to_owned()"}, {"sha": "31a02a7466e31ad3aa2848e5d963f544f1a8667e", "filename": "src/lib.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/205490b85c5024006e89c6443a1ba6f21bda4b89/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/205490b85c5024006e89c6443a1ba6f21bda4b89/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=205490b85c5024006e89c6443a1ba6f21bda4b89", "patch": "@@ -39,8 +39,7 @@ pub use crate::operator::EvalContextExt as OperatorEvalContextExt;\n pub use crate::intrinsic::EvalContextExt as IntrinsicEvalContextExt;\n pub use crate::tls::{EvalContextExt as TlsEvalContextExt, TlsData};\n use crate::range_map::RangeMap;\n-// FIXME: rustc bug, issue <https://github.com/rust-lang/rust/issues/53682>.\n-#[allow(unused_imports)]\n+#[allow(unused_imports)] // FIXME: rustc bug, issue <https://github.com/rust-lang/rust/issues/53682>.\n pub use crate::helpers::{EvalContextExt as HelpersEvalContextExt};\n use crate::mono_hash_map::MonoHashMap;\n pub use crate::stacked_borrows::{EvalContextExt as StackedBorEvalContextExt};\n@@ -129,7 +128,7 @@ pub fn create_ecx<'a, 'mir: 'a, 'tcx: 'mir>(\n     let dest = ecx.eval_place(&mir::Place::Local(args.next().unwrap()))?;\n     let argc = Scalar::from_uint(config.args.len() as u128, dest.layout.size);\n     ecx.write_scalar(argc, dest)?;\n-    // Store argc for macOS: `_NSGetArgc`.\n+    // Store argc for macOS's `_NSGetArgc`.\n     {\n         let argc_place = ecx.allocate(dest.layout, MiriMemoryKind::Env.into());\n         ecx.write_scalar(argc, argc_place.into())?;"}, {"sha": "16e7e27241798adfc08590904a526e747ad165a0", "filename": "src/range_map.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/205490b85c5024006e89c6443a1ba6f21bda4b89/src%2Frange_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/205490b85c5024006e89c6443a1ba6f21bda4b89/src%2Frange_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frange_map.rs?ref=205490b85c5024006e89c6443a1ba6f21bda4b89", "patch": "@@ -14,8 +14,9 @@ use rustc::ty::layout::Size;\n \n #[derive(Clone, Debug)]\n struct Elem<T> {\n-    /// The range covered by this element, never empty.\n+    /// The range covered by this element; never empty.\n     range: ops::Range<u64>,\n+    /// The data stored for this element.\n     data: T,\n }\n #[derive(Clone, Debug)]\n@@ -49,11 +50,11 @@ impl<T> RangeMap<T> {\n             let candidate = left.checked_add(right).unwrap() / 2;\n             let elem = &self.v[candidate];\n             if offset < elem.range.start {\n-                // we are too far right (offset is further left)\n+                // We are too far right (offset is further left).\n                 debug_assert!(candidate < right); // we are making progress\n                 right = candidate;\n             } else if offset >= elem.range.end {\n-                // we are too far left (offset is further right)\n+                // We are too far left (offset is further right).\n                 debug_assert!(candidate >= left); // we are making progress\n                 left = candidate+1;\n             } else {"}]}