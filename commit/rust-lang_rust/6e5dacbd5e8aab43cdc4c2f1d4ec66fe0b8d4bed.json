{"sha": "6e5dacbd5e8aab43cdc4c2f1d4ec66fe0b8d4bed", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZlNWRhY2JkNWU4YWFiNDNjZGM0YzJmMWQ0ZWM2NmZlMGI4ZDRiZWQ=", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2018-02-07T15:28:32Z"}, "committer": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2018-02-20T00:50:26Z"}, "message": "rustc_mir: always run the deaggregator.", "tree": {"sha": "cac0486c26006fe8419259797ae187788c608be0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cac0486c26006fe8419259797ae187788c608be0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6e5dacbd5e8aab43cdc4c2f1d4ec66fe0b8d4bed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6e5dacbd5e8aab43cdc4c2f1d4ec66fe0b8d4bed", "html_url": "https://github.com/rust-lang/rust/commit/6e5dacbd5e8aab43cdc4c2f1d4ec66fe0b8d4bed", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6e5dacbd5e8aab43cdc4c2f1d4ec66fe0b8d4bed/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e598bdfaa017e3bf786c19587ea917c6a8aa984e", "url": "https://api.github.com/repos/rust-lang/rust/commits/e598bdfaa017e3bf786c19587ea917c6a8aa984e", "html_url": "https://github.com/rust-lang/rust/commit/e598bdfaa017e3bf786c19587ea917c6a8aa984e"}], "stats": {"total": 31, "additions": 15, "deletions": 16}, "files": [{"sha": "44c35960abaf8efc9fdff6fb9d4cc04a4ac73878", "filename": "src/librustc_mir/transform/deaggregator.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/6e5dacbd5e8aab43cdc4c2f1d4ec66fe0b8d4bed/src%2Flibrustc_mir%2Ftransform%2Fdeaggregator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e5dacbd5e8aab43cdc4c2f1d4ec66fe0b8d4bed/src%2Flibrustc_mir%2Ftransform%2Fdeaggregator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fdeaggregator.rs?ref=6e5dacbd5e8aab43cdc4c2f1d4ec66fe0b8d4bed", "patch": "@@ -39,11 +39,6 @@ impl MirPass for Deaggregator {\n             }\n         }\n \n-        // We only run when the MIR optimization level is > 2.\n-        if tcx.sess.opts.debugging_opts.mir_opt_level <= 2 {\n-            return;\n-        }\n-\n         let can_deaggregate = |statement: &Statement| {\n             if let StatementKind::Assign(_, ref rhs) = statement.kind {\n                 if let Rvalue::Aggregate(..) = *rhs {"}, {"sha": "b16c1436a1cbee682cb7e2cc131656318e239b8f", "filename": "src/librustc_mir/transform/mod.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6e5dacbd5e8aab43cdc4c2f1d4ec66fe0b8d4bed/src%2Flibrustc_mir%2Ftransform%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e5dacbd5e8aab43cdc4c2f1d4ec66fe0b8d4bed/src%2Flibrustc_mir%2Ftransform%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fmod.rs?ref=6e5dacbd5e8aab43cdc4c2f1d4ec66fe0b8d4bed", "patch": "@@ -258,14 +258,18 @@ fn optimized_mir<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>, def_id: DefId) -> &'tcx\n \n         // Optimizations begin.\n         inline::Inline,\n+\n+        // Lowering generator control-flow and variables\n+        // has to happen before we do anything else to them.\n+        generator::StateTransform,\n+\n         instcombine::InstCombine,\n         deaggregator::Deaggregator,\n         copy_prop::CopyPropagation,\n         remove_noop_landing_pads::RemoveNoopLandingPads,\n         simplify::SimplifyCfg::new(\"final\"),\n         simplify::SimplifyLocals,\n \n-        generator::StateTransform,\n         add_call_guards::CriticalCallEdges,\n         dump_mir::Marker(\"PreTrans\"),\n     ];"}, {"sha": "62aa93398ac42c4da050dcb68a3c3204525f4b75", "filename": "src/test/codegen/lifetime_start_end.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6e5dacbd5e8aab43cdc4c2f1d4ec66fe0b8d4bed/src%2Ftest%2Fcodegen%2Flifetime_start_end.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e5dacbd5e8aab43cdc4c2f1d4ec66fe0b8d4bed/src%2Ftest%2Fcodegen%2Flifetime_start_end.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Flifetime_start_end.rs?ref=6e5dacbd5e8aab43cdc4c2f1d4ec66fe0b8d4bed", "patch": "@@ -28,14 +28,14 @@ pub fn test() {\n // CHECK: [[S_b:%[0-9]+]] = bitcast %\"core::option::Option<i32>\"** %b to i8*\n // CHECK: call void @llvm.lifetime.start{{.*}}(i{{[0-9 ]+}}, i8* [[S_b]])\n \n-// CHECK: [[S__5:%[0-9]+]] = bitcast %\"core::option::Option<i32>\"* %_5 to i8*\n-// CHECK: call void @llvm.lifetime.start{{.*}}(i{{[0-9 ]+}}, i8* [[S__5]])\n+// CHECK: [[S__4:%[0-9]+]] = bitcast %\"core::option::Option<i32>\"* %_4 to i8*\n+// CHECK: call void @llvm.lifetime.start{{.*}}(i{{[0-9 ]+}}, i8* [[S__4]])\n \n // CHECK: [[E_b:%[0-9]+]] = bitcast %\"core::option::Option<i32>\"** %b to i8*\n // CHECK: call void @llvm.lifetime.end{{.*}}(i{{[0-9 ]+}}, i8* [[E_b]])\n \n-// CHECK: [[E__5:%[0-9]+]] = bitcast %\"core::option::Option<i32>\"* %_5 to i8*\n-// CHECK: call void @llvm.lifetime.end{{.*}}(i{{[0-9 ]+}}, i8* [[E__5]])\n+// CHECK: [[E__4:%[0-9]+]] = bitcast %\"core::option::Option<i32>\"* %_4 to i8*\n+// CHECK: call void @llvm.lifetime.end{{.*}}(i{{[0-9 ]+}}, i8* [[E__4]])\n     }\n \n     let c = 1;"}, {"sha": "c9d0427dd0ad43b76243d0d61f77c2f89111d307", "filename": "src/test/codegen/match.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6e5dacbd5e8aab43cdc4c2f1d4ec66fe0b8d4bed/src%2Ftest%2Fcodegen%2Fmatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e5dacbd5e8aab43cdc4c2f1d4ec66fe0b8d4bed/src%2Ftest%2Fcodegen%2Fmatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fmatch.rs?ref=6e5dacbd5e8aab43cdc4c2f1d4ec66fe0b8d4bed", "patch": "@@ -19,7 +19,7 @@ pub enum E {\n \n // CHECK-LABEL: @exhaustive_match\n #[no_mangle]\n-pub fn exhaustive_match(e: E) {\n+pub fn exhaustive_match(e: E, unit: ()) {\n // CHECK: switch{{.*}}, label %[[OTHERWISE:[a-zA-Z0-9_]+]] [\n // CHECK-NEXT: i[[TY:[0-9]+]] [[DISCR:[0-9]+]], label %[[A:[a-zA-Z0-9_]+]]\n // CHECK-NEXT: i[[TY:[0-9]+]] [[DISCR:[0-9]+]], label %[[B:[a-zA-Z0-9_]+]]\n@@ -31,7 +31,7 @@ pub fn exhaustive_match(e: E) {\n // CHECK: [[OTHERWISE]]:\n // CHECK-NEXT: unreachable\n     match e {\n-        E::A => (),\n-        E::B => (),\n+        E::A => unit,\n+        E::B => unit,\n     }\n }"}, {"sha": "73418f48860708e06c2113c82ae5266e4f60116b", "filename": "src/test/incremental/hashes/closure_expressions.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6e5dacbd5e8aab43cdc4c2f1d4ec66fe0b8d4bed/src%2Ftest%2Fincremental%2Fhashes%2Fclosure_expressions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e5dacbd5e8aab43cdc4c2f1d4ec66fe0b8d4bed/src%2Ftest%2Fincremental%2Fhashes%2Fclosure_expressions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Fclosure_expressions.rs?ref=6e5dacbd5e8aab43cdc4c2f1d4ec66fe0b8d4bed", "patch": "@@ -64,7 +64,7 @@ pub fn change_parameter_pattern() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, MirValidated, MirOptimized, TypeckTables\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, MirValidated, TypeckTables\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_parameter_pattern() {\n     let _ = |&x: &u32| x;"}, {"sha": "f890672aa8f587ad9932154851eb915350a1fef2", "filename": "src/test/incremental/issue-38222.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6e5dacbd5e8aab43cdc4c2f1d4ec66fe0b8d4bed/src%2Ftest%2Fincremental%2Fissue-38222.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e5dacbd5e8aab43cdc4c2f1d4ec66fe0b8d4bed/src%2Ftest%2Fincremental%2Fissue-38222.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fissue-38222.rs?ref=6e5dacbd5e8aab43cdc4c2f1d4ec66fe0b8d4bed", "patch": "@@ -18,7 +18,7 @@\n #![feature(rustc_attrs)]\n \n \n-#![rustc_partition_translated(module=\"issue_38222-mod1\", cfg=\"rpass2\")]\n+#![rustc_partition_reused(module=\"issue_38222-mod1\", cfg=\"rpass2\")]\n \n // If trans had added a dependency edge to the Krate dep-node, nothing would\n // be re-used, so checking that this module was re-used is sufficient."}, {"sha": "21fdbb3f5a1ccb17fcf33adc2a07f52dec95d8df", "filename": "src/test/ui/print_type_sizes/generics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6e5dacbd5e8aab43cdc4c2f1d4ec66fe0b8d4bed/src%2Ftest%2Fui%2Fprint_type_sizes%2Fgenerics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e5dacbd5e8aab43cdc4c2f1d4ec66fe0b8d4bed/src%2Ftest%2Fui%2Fprint_type_sizes%2Fgenerics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprint_type_sizes%2Fgenerics.rs?ref=6e5dacbd5e8aab43cdc4c2f1d4ec66fe0b8d4bed", "patch": "@@ -72,7 +72,7 @@ pub fn f1<T:Copy>(x: T) {\n fn start(_: isize, _: *const *const u8) -> isize {\n     let _b: Pair<u8> = Pair::new(0, 0);\n     let _s: Pair<SevenBytes> = Pair::new(SevenBytes::new(), SevenBytes::new());\n-    let _z: ZeroSized = ZeroSized;\n+    let ref _z: ZeroSized = ZeroSized;\n     f1::<SevenBytes>(SevenBytes::new());\n     0\n }"}]}