{"sha": "346456f59ff5eaa653cf8a4b7e0c6672ef1f0566", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM0NjQ1NmY1OWZmNWVhYTY1M2NmOGE0YjdlMGM2NjcyZWYxZjA1NjY=", "commit": {"author": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2018-12-20T12:41:55Z"}, "committer": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2018-12-20T12:41:55Z"}, "message": "Merge #301\n\n301: Fix break in a condition r=matklad a=DJMcNab\n\nThe part of fixing #290.\n\nCo-authored-by: DJMcNab <36049421+djmcnab@users.noreply.github.com>", "tree": {"sha": "2c6cdaf77d1a64ebf5faa61917dfb8b510f5426a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2c6cdaf77d1a64ebf5faa61917dfb8b510f5426a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/346456f59ff5eaa653cf8a4b7e0c6672ef1f0566", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/346456f59ff5eaa653cf8a4b7e0c6672ef1f0566", "html_url": "https://github.com/rust-lang/rust/commit/346456f59ff5eaa653cf8a4b7e0c6672ef1f0566", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/346456f59ff5eaa653cf8a4b7e0c6672ef1f0566/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "parents": [{"sha": "565a7b07584c16b0113fdf8c6154546546cca900", "url": "https://api.github.com/repos/rust-lang/rust/commits/565a7b07584c16b0113fdf8c6154546546cca900", "html_url": "https://github.com/rust-lang/rust/commit/565a7b07584c16b0113fdf8c6154546546cca900"}, {"sha": "27e814e182b97f8097121aceea8b42a4d4ea31b7", "url": "https://api.github.com/repos/rust-lang/rust/commits/27e814e182b97f8097121aceea8b42a4d4ea31b7", "html_url": "https://github.com/rust-lang/rust/commit/27e814e182b97f8097121aceea8b42a4d4ea31b7"}], "stats": {"total": 87, "additions": 83, "deletions": 4}, "files": [{"sha": "3b5749318d2d33a369b4da5888f780f0edb022c8", "filename": "crates/ra_syntax/src/grammar/expressions/atom.rs", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/346456f59ff5eaa653cf8a4b7e0c6672ef1f0566/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Fexpressions%2Fatom.rs", "raw_url": "https://github.com/rust-lang/rust/raw/346456f59ff5eaa653cf8a4b7e0c6672ef1f0566/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Fexpressions%2Fatom.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Fexpressions%2Fatom.rs?ref=346456f59ff5eaa653cf8a4b7e0c6672ef1f0566", "patch": "@@ -35,11 +35,12 @@ pub(crate) fn literal(p: &mut Parser) -> Option<CompletedMarker> {\n     Some(m.complete(p, LITERAL))\n }\n \n+// E.g. for after the break in `if break {}`, this should not match\n pub(super) const ATOM_EXPR_FIRST: TokenSet = token_set_union![\n     LITERAL_FIRST,\n     token_set![\n-        L_CURLY,\n         L_PAREN,\n+        L_CURLY,\n         L_BRACK,\n         PIPE,\n         MOVE_KW,\n@@ -108,7 +109,7 @@ pub(super) fn atom_expr(p: &mut Parser, r: Restrictions) -> Option<(CompletedMar\n         L_CURLY => block_expr(p, None),\n         RETURN_KW => return_expr(p),\n         CONTINUE_KW => continue_expr(p),\n-        BREAK_KW => break_expr(p),\n+        BREAK_KW => break_expr(p, r),\n         _ => {\n             p.err_recover(\"expected expression\", EXPR_RECOVERY_SET);\n             return None;\n@@ -427,12 +428,19 @@ fn continue_expr(p: &mut Parser) -> CompletedMarker {\n //         break 'l 92;\n //     }\n // }\n-fn break_expr(p: &mut Parser) -> CompletedMarker {\n+fn break_expr(p: &mut Parser, r: Restrictions) -> CompletedMarker {\n     assert!(p.at(BREAK_KW));\n     let m = p.start();\n     p.bump();\n     p.eat(LIFETIME);\n-    if p.at_ts(EXPR_FIRST) {\n+    // test break_ambiguity\n+    // fn foo(){\n+    //     if break {}\n+    //     while break {}\n+    //     for i in break {}\n+    //     match break {}\n+    // }\n+    if p.at_ts(EXPR_FIRST) && !(r.forbid_structs && p.at(L_CURLY)) {\n         expr(p);\n     }\n     m.complete(p, BREAK_EXPR)"}, {"sha": "560eb05b949e1c87559c2acd58ebe7cc9ca30af5", "filename": "crates/ra_syntax/tests/data/parser/inline/0119_break_ambiguity.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/346456f59ff5eaa653cf8a4b7e0c6672ef1f0566/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2F0119_break_ambiguity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/346456f59ff5eaa653cf8a4b7e0c6672ef1f0566/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2F0119_break_ambiguity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2F0119_break_ambiguity.rs?ref=346456f59ff5eaa653cf8a4b7e0c6672ef1f0566", "patch": "@@ -0,0 +1,6 @@\n+fn foo(){\n+    if break {}\n+    while break {}\n+    for i in break {}\n+    match break {}\n+}"}, {"sha": "6032a6c17fec7ca532f4e6b1cdbe9cdc9f1eefad", "filename": "crates/ra_syntax/tests/data/parser/inline/0119_break_ambiguity.txt", "status": "added", "additions": 65, "deletions": 0, "changes": 65, "blob_url": "https://github.com/rust-lang/rust/blob/346456f59ff5eaa653cf8a4b7e0c6672ef1f0566/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2F0119_break_ambiguity.txt", "raw_url": "https://github.com/rust-lang/rust/raw/346456f59ff5eaa653cf8a4b7e0c6672ef1f0566/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2F0119_break_ambiguity.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2F0119_break_ambiguity.txt?ref=346456f59ff5eaa653cf8a4b7e0c6672ef1f0566", "patch": "@@ -0,0 +1,65 @@\n+SOURCE_FILE@[0; 88)\n+  FN_DEF@[0; 87)\n+    FN_KW@[0; 2)\n+    WHITESPACE@[2; 3)\n+    NAME@[3; 6)\n+      IDENT@[3; 6) \"foo\"\n+    PARAM_LIST@[6; 8)\n+      L_PAREN@[6; 7)\n+      R_PAREN@[7; 8)\n+    BLOCK@[8; 87)\n+      L_CURLY@[8; 9)\n+      WHITESPACE@[9; 14)\n+      EXPR_STMT@[14; 25)\n+        IF_EXPR@[14; 25)\n+          IF_KW@[14; 16)\n+          WHITESPACE@[16; 17)\n+          CONDITION@[17; 22)\n+            BREAK_EXPR@[17; 22)\n+              BREAK_KW@[17; 22)\n+          WHITESPACE@[22; 23)\n+          BLOCK@[23; 25)\n+            L_CURLY@[23; 24)\n+            R_CURLY@[24; 25)\n+      WHITESPACE@[25; 30)\n+      EXPR_STMT@[30; 44)\n+        WHILE_EXPR@[30; 44)\n+          WHILE_KW@[30; 35)\n+          WHITESPACE@[35; 36)\n+          CONDITION@[36; 41)\n+            BREAK_EXPR@[36; 41)\n+              BREAK_KW@[36; 41)\n+          WHITESPACE@[41; 42)\n+          BLOCK@[42; 44)\n+            L_CURLY@[42; 43)\n+            R_CURLY@[43; 44)\n+      WHITESPACE@[44; 49)\n+      EXPR_STMT@[49; 66)\n+        FOR_EXPR@[49; 66)\n+          FOR_KW@[49; 52)\n+          WHITESPACE@[52; 53)\n+          BIND_PAT@[53; 54)\n+            NAME@[53; 54)\n+              IDENT@[53; 54) \"i\"\n+          WHITESPACE@[54; 55)\n+          IN_KW@[55; 57)\n+          WHITESPACE@[57; 58)\n+          BREAK_EXPR@[58; 63)\n+            BREAK_KW@[58; 63)\n+          WHITESPACE@[63; 64)\n+          BLOCK@[64; 66)\n+            L_CURLY@[64; 65)\n+            R_CURLY@[65; 66)\n+      WHITESPACE@[66; 71)\n+      MATCH_EXPR@[71; 85)\n+        MATCH_KW@[71; 76)\n+        WHITESPACE@[76; 77)\n+        BREAK_EXPR@[77; 82)\n+          BREAK_KW@[77; 82)\n+        WHITESPACE@[82; 83)\n+        MATCH_ARM_LIST@[83; 85)\n+          L_CURLY@[83; 84)\n+          R_CURLY@[84; 85)\n+      WHITESPACE@[85; 86)\n+      R_CURLY@[86; 87)\n+  WHITESPACE@[87; 88)"}]}