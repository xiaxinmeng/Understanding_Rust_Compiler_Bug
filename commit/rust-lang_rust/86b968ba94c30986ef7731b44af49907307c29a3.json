{"sha": "86b968ba94c30986ef7731b44af49907307c29a3", "node_id": "C_kwDOAAsO6NoAKDg2Yjk2OGJhOTRjMzA5ODZlZjc3MzFiNDRhZjQ5OTA3MzA3YzI5YTM", "commit": {"author": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2022-02-07T17:19:00Z"}, "committer": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2022-02-07T17:19:00Z"}, "message": "Add a check", "tree": {"sha": "001f901804f6f902d077f96a564bb9b687d789d1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/001f901804f6f902d077f96a564bb9b687d789d1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/86b968ba94c30986ef7731b44af49907307c29a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/86b968ba94c30986ef7731b44af49907307c29a3", "html_url": "https://github.com/rust-lang/rust/commit/86b968ba94c30986ef7731b44af49907307c29a3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/86b968ba94c30986ef7731b44af49907307c29a3/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b9c5d23f69ab45f6bcd16c8f83317ed2c0a4b1a8", "url": "https://api.github.com/repos/rust-lang/rust/commits/b9c5d23f69ab45f6bcd16c8f83317ed2c0a4b1a8", "html_url": "https://github.com/rust-lang/rust/commit/b9c5d23f69ab45f6bcd16c8f83317ed2c0a4b1a8"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "d3ba28f3bcf51325daaa0000dd0b756c4efeeb87", "filename": "crates/mbe/src/syntax_bridge.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/86b968ba94c30986ef7731b44af49907307c29a3/crates%2Fmbe%2Fsrc%2Fsyntax_bridge.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86b968ba94c30986ef7731b44af49907307c29a3/crates%2Fmbe%2Fsrc%2Fsyntax_bridge.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fmbe%2Fsrc%2Fsyntax_bridge.rs?ref=86b968ba94c30986ef7731b44af49907307c29a3", "patch": "@@ -1,7 +1,7 @@\n //! Conversions between [`SyntaxNode`] and [`tt::TokenTree`].\n \n use rustc_hash::{FxHashMap, FxHashSet};\n-use stdx::non_empty_vec::NonEmptyVec;\n+use stdx::{non_empty_vec::NonEmptyVec, always};\n use syntax::{\n     ast::{self, make::tokens::doc_comment},\n     AstToken, Parse, PreorderWithTokens, SmolStr, SyntaxElement, SyntaxKind,\n@@ -30,6 +30,8 @@ pub fn syntax_node_to_token_tree_censored(\n     let mut c = Convertor::new(node, global_offset, replace, append);\n     let subtree = convert_tokens(&mut c);\n     c.id_alloc.map.shrink_to_fit();\n+    always!(c.replace.is_empty());\n+    always!(c.append.is_empty());\n     (subtree, c.id_alloc.map)\n }\n "}]}