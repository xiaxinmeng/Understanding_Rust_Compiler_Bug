{"sha": "49a152885d6050529f2d71645564c73e205f9da6", "node_id": "C_kwDOAAsO6NoAKDQ5YTE1Mjg4NWQ2MDUwNTI5ZjJkNzE2NDU1NjRjNzNlMjA1ZjlkYTY", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-03-18T11:04:24Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-03-18T11:04:24Z"}, "message": "Rollup merge of #109288 - jmillikin:linux-abstract-socket-addr, r=joshtriplett\n\nStabilise `unix_socket_abstract`\n\nFixes https://github.com/rust-lang/rust/issues/85410", "tree": {"sha": "19401efe737d61d8b2ac9fac15cce45dd9ba3cfe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/19401efe737d61d8b2ac9fac15cce45dd9ba3cfe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/49a152885d6050529f2d71645564c73e205f9da6", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkFZq4CRBK7hj4Ov3rIwAAyEQIAAIBWOlb345y1tmG69uqEX8B\nWZZyBW3F+4v2eAFLe+yVp0HwE+1xReMuEJgYEXNT5YE56au5IFHzqVYNDOn4xf7b\nGuypnO1BwSHLMqxIwezpD6yZ+lXa5FkdQL03VTvf0spSYzOVxgLXCOfUmeDb4OHM\n3It5yNz+Eal4+ZLC3qFDlATtqwZn1tVIVW0wYR2chRbnNTBHCtTyTLwQyTh+vXbN\nWcN8nUL1yGujB0ZhqUAoZyYaHDajqB79WboJI6XGbMTGiiY9lVMT/+O8xaPEFMH+\nNKq2DjD4YvPoVZB8QbpiAEy3TII9vYKyD4MPGv9NKd6XYsgjU+xgN/42mM2sEQs=\n=PpOg\n-----END PGP SIGNATURE-----\n", "payload": "tree 19401efe737d61d8b2ac9fac15cce45dd9ba3cfe\nparent 0aa0043141004d9a3cfc94b46c78eaa789158b80\nparent a3f3db842df11849d7060eaa8c2b50d3e49bed03\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1679137464 +0100\ncommitter GitHub <noreply@github.com> 1679137464 +0100\n\nRollup merge of #109288 - jmillikin:linux-abstract-socket-addr, r=joshtriplett\n\nStabilise `unix_socket_abstract`\n\nFixes https://github.com/rust-lang/rust/issues/85410\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/49a152885d6050529f2d71645564c73e205f9da6", "html_url": "https://github.com/rust-lang/rust/commit/49a152885d6050529f2d71645564c73e205f9da6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/49a152885d6050529f2d71645564c73e205f9da6/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0aa0043141004d9a3cfc94b46c78eaa789158b80", "url": "https://api.github.com/repos/rust-lang/rust/commits/0aa0043141004d9a3cfc94b46c78eaa789158b80", "html_url": "https://github.com/rust-lang/rust/commit/0aa0043141004d9a3cfc94b46c78eaa789158b80"}, {"sha": "a3f3db842df11849d7060eaa8c2b50d3e49bed03", "url": "https://api.github.com/repos/rust-lang/rust/commits/a3f3db842df11849d7060eaa8c2b50d3e49bed03", "html_url": "https://github.com/rust-lang/rust/commit/a3f3db842df11849d7060eaa8c2b50d3e49bed03"}], "stats": {"total": 35, "additions": 15, "deletions": 20}, "files": [{"sha": "4e88ab8ff5c5204c1fd7f2fa4d99a0d8f96f36be", "filename": "library/std/src/os/android/net.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/49a152885d6050529f2d71645564c73e205f9da6/library%2Fstd%2Fsrc%2Fos%2Fandroid%2Fnet.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49a152885d6050529f2d71645564c73e205f9da6/library%2Fstd%2Fsrc%2Fos%2Fandroid%2Fnet.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Fandroid%2Fnet.rs?ref=49a152885d6050529f2d71645564c73e205f9da6", "patch": "@@ -1,8 +1,8 @@\n //! Android-specific networking functionality.\n \n-#![unstable(feature = \"tcp_quickack\", issue = \"96256\")]\n+#![stable(feature = \"unix_socket_abstract\", since = \"CURRENT_RUSTC_VERSION\")]\n \n-#[unstable(feature = \"unix_socket_abstract\", issue = \"85410\")]\n+#[stable(feature = \"unix_socket_abstract\", since = \"CURRENT_RUSTC_VERSION\")]\n pub use crate::os::net::linux_ext::addr::SocketAddrExt;\n \n #[unstable(feature = \"tcp_quickack\", issue = \"96256\")]"}, {"sha": "fcb3bb8348558cedcb7cd8e41b10d684054a49a5", "filename": "library/std/src/os/linux/net.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/49a152885d6050529f2d71645564c73e205f9da6/library%2Fstd%2Fsrc%2Fos%2Flinux%2Fnet.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49a152885d6050529f2d71645564c73e205f9da6/library%2Fstd%2Fsrc%2Fos%2Flinux%2Fnet.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Flinux%2Fnet.rs?ref=49a152885d6050529f2d71645564c73e205f9da6", "patch": "@@ -1,8 +1,8 @@\n //! Linux-specific networking functionality.\n \n-#![unstable(feature = \"tcp_quickack\", issue = \"96256\")]\n+#![stable(feature = \"unix_socket_abstract\", since = \"CURRENT_RUSTC_VERSION\")]\n \n-#[unstable(feature = \"unix_socket_abstract\", issue = \"85410\")]\n+#[stable(feature = \"unix_socket_abstract\", since = \"CURRENT_RUSTC_VERSION\")]\n pub use crate::os::net::linux_ext::addr::SocketAddrExt;\n \n #[unstable(feature = \"tcp_quickack\", issue = \"96256\")]"}, {"sha": "ea8102c9cc0aff771b3376d9f06406973ba4ea72", "filename": "library/std/src/os/net/linux_ext/addr.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/49a152885d6050529f2d71645564c73e205f9da6/library%2Fstd%2Fsrc%2Fos%2Fnet%2Flinux_ext%2Faddr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49a152885d6050529f2d71645564c73e205f9da6/library%2Fstd%2Fsrc%2Fos%2Fnet%2Flinux_ext%2Faddr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Fnet%2Flinux_ext%2Faddr.rs?ref=49a152885d6050529f2d71645564c73e205f9da6", "patch": "@@ -4,7 +4,7 @@ use crate::os::unix::net::SocketAddr;\n use crate::sealed::Sealed;\n \n /// Platform-specific extensions to [`SocketAddr`].\n-#[unstable(feature = \"unix_socket_abstract\", issue = \"85410\")]\n+#[stable(feature = \"unix_socket_abstract\", since = \"CURRENT_RUSTC_VERSION\")]\n pub trait SocketAddrExt: Sealed {\n     /// Creates a Unix socket address in the abstract namespace.\n     ///\n@@ -22,7 +22,6 @@ pub trait SocketAddrExt: Sealed {\n     /// # Examples\n     ///\n     /// ```no_run\n-    /// #![feature(unix_socket_abstract)]\n     /// use std::os::unix::net::{UnixListener, SocketAddr};\n     /// use std::os::linux::net::SocketAddrExt;\n     ///\n@@ -38,6 +37,7 @@ pub trait SocketAddrExt: Sealed {\n     ///     Ok(())\n     /// }\n     /// ```\n+    #[stable(feature = \"unix_socket_abstract\", since = \"CURRENT_RUSTC_VERSION\")]\n     fn from_abstract_name<N>(name: N) -> crate::io::Result<SocketAddr>\n     where\n         N: AsRef<[u8]>;\n@@ -47,7 +47,6 @@ pub trait SocketAddrExt: Sealed {\n     /// # Examples\n     ///\n     /// ```no_run\n-    /// #![feature(unix_socket_abstract)]\n     /// use std::os::unix::net::{UnixListener, SocketAddr};\n     /// use std::os::linux::net::SocketAddrExt;\n     ///\n@@ -60,5 +59,6 @@ pub trait SocketAddrExt: Sealed {\n     ///     Ok(())\n     /// }\n     /// ```\n+    #[stable(feature = \"unix_socket_abstract\", since = \"CURRENT_RUSTC_VERSION\")]\n     fn as_abstract_name(&self) -> Option<&[u8]>;\n }"}, {"sha": "e7423dce6135b2219a657e40621051127523f961", "filename": "library/std/src/os/net/linux_ext/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/49a152885d6050529f2d71645564c73e205f9da6/library%2Fstd%2Fsrc%2Fos%2Fnet%2Flinux_ext%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49a152885d6050529f2d71645564c73e205f9da6/library%2Fstd%2Fsrc%2Fos%2Fnet%2Flinux_ext%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Fnet%2Flinux_ext%2Fmod.rs?ref=49a152885d6050529f2d71645564c73e205f9da6", "patch": "@@ -2,7 +2,7 @@\n \n #![doc(cfg(any(target_os = \"linux\", target_os = \"android\")))]\n \n-#[unstable(feature = \"unix_socket_abstract\", issue = \"85410\")]\n+#[stable(feature = \"unix_socket_abstract\", since = \"CURRENT_RUSTC_VERSION\")]\n pub(crate) mod addr;\n \n #[unstable(feature = \"tcp_quickack\", issue = \"96256\")]"}, {"sha": "52a0da5bf1a65b31f4b903cf2c042f3b5e4a0dd9", "filename": "library/std/src/os/unix/net/addr.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/49a152885d6050529f2d71645564c73e205f9da6/library%2Fstd%2Fsrc%2Fos%2Funix%2Fnet%2Faddr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49a152885d6050529f2d71645564c73e205f9da6/library%2Fstd%2Fsrc%2Fos%2Funix%2Fnet%2Faddr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Funix%2Fnet%2Faddr.rs?ref=49a152885d6050529f2d71645564c73e205f9da6", "patch": "@@ -245,12 +245,12 @@ impl SocketAddr {\n     }\n }\n \n-#[unstable(feature = \"unix_socket_abstract\", issue = \"85410\")]\n+#[stable(feature = \"unix_socket_abstract\", since = \"CURRENT_RUSTC_VERSION\")]\n impl Sealed for SocketAddr {}\n \n #[doc(cfg(any(target_os = \"android\", target_os = \"linux\")))]\n #[cfg(any(doc, target_os = \"android\", target_os = \"linux\"))]\n-#[unstable(feature = \"unix_socket_abstract\", issue = \"85410\")]\n+#[stable(feature = \"unix_socket_abstract\", since = \"CURRENT_RUSTC_VERSION\")]\n impl linux_ext::addr::SocketAddrExt for SocketAddr {\n     fn as_abstract_name(&self) -> Option<&[u8]> {\n         if let AddressKind::Abstract(name) = self.address() { Some(name) } else { None }"}, {"sha": "e64569758a04a11ae4fb3b67805a2414886e8b0c", "filename": "library/std/src/os/unix/net/datagram.rs", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/49a152885d6050529f2d71645564c73e205f9da6/library%2Fstd%2Fsrc%2Fos%2Funix%2Fnet%2Fdatagram.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49a152885d6050529f2d71645564c73e205f9da6/library%2Fstd%2Fsrc%2Fos%2Funix%2Fnet%2Fdatagram.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Funix%2Fnet%2Fdatagram.rs?ref=49a152885d6050529f2d71645564c73e205f9da6", "patch": "@@ -102,7 +102,6 @@ impl UnixDatagram {\n     /// # Examples\n     ///\n     /// ```no_run\n-    /// #![feature(unix_socket_abstract)]\n     /// use std::os::unix::net::{UnixDatagram};\n     ///\n     /// fn main() -> std::io::Result<()> {\n@@ -119,7 +118,7 @@ impl UnixDatagram {\n     ///     Ok(())\n     /// }\n     /// ```\n-    #[unstable(feature = \"unix_socket_abstract\", issue = \"85410\")]\n+    #[stable(feature = \"unix_socket_abstract\", since = \"CURRENT_RUSTC_VERSION\")]\n     pub fn bind_addr(socket_addr: &SocketAddr) -> io::Result<UnixDatagram> {\n         unsafe {\n             let socket = UnixDatagram::unbound()?;\n@@ -217,7 +216,6 @@ impl UnixDatagram {\n     /// # Examples\n     ///\n     /// ```no_run\n-    /// #![feature(unix_socket_abstract)]\n     /// use std::os::unix::net::{UnixDatagram};\n     ///\n     /// fn main() -> std::io::Result<()> {\n@@ -235,7 +233,7 @@ impl UnixDatagram {\n     ///     Ok(())\n     /// }\n     /// ```\n-    #[unstable(feature = \"unix_socket_abstract\", issue = \"85410\")]\n+    #[stable(feature = \"unix_socket_abstract\", since = \"CURRENT_RUSTC_VERSION\")]\n     pub fn connect_addr(&self, socket_addr: &SocketAddr) -> io::Result<()> {\n         unsafe {\n             cvt(libc::connect(\n@@ -523,7 +521,6 @@ impl UnixDatagram {\n     /// # Examples\n     ///\n     /// ```no_run\n-    /// #![feature(unix_socket_abstract)]\n     /// use std::os::unix::net::{UnixDatagram};\n     ///\n     /// fn main() -> std::io::Result<()> {\n@@ -535,7 +532,7 @@ impl UnixDatagram {\n     ///     Ok(())\n     /// }\n     /// ```\n-    #[unstable(feature = \"unix_socket_abstract\", issue = \"85410\")]\n+    #[stable(feature = \"unix_socket_abstract\", since = \"CURRENT_RUSTC_VERSION\")]\n     pub fn send_to_addr(&self, buf: &[u8], socket_addr: &SocketAddr) -> io::Result<usize> {\n         unsafe {\n             let count = cvt(libc::sendto("}, {"sha": "83f0debe6765abb0d15268062a78f1bd557c4c18", "filename": "library/std/src/os/unix/net/listener.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/49a152885d6050529f2d71645564c73e205f9da6/library%2Fstd%2Fsrc%2Fos%2Funix%2Fnet%2Flistener.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49a152885d6050529f2d71645564c73e205f9da6/library%2Fstd%2Fsrc%2Fos%2Funix%2Fnet%2Flistener.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Funix%2Fnet%2Flistener.rs?ref=49a152885d6050529f2d71645564c73e205f9da6", "patch": "@@ -90,7 +90,6 @@ impl UnixListener {\n     /// # Examples\n     ///\n     /// ```no_run\n-    /// #![feature(unix_socket_abstract)]\n     /// use std::os::unix::net::{UnixListener};\n     ///\n     /// fn main() -> std::io::Result<()> {\n@@ -107,7 +106,7 @@ impl UnixListener {\n     ///     Ok(())\n     /// }\n     /// ```\n-    #[unstable(feature = \"unix_socket_abstract\", issue = \"85410\")]\n+    #[stable(feature = \"unix_socket_abstract\", since = \"CURRENT_RUSTC_VERSION\")]\n     pub fn bind_addr(socket_addr: &SocketAddr) -> io::Result<UnixListener> {\n         unsafe {\n             let inner = Socket::new_raw(libc::AF_UNIX, libc::SOCK_STREAM)?;"}, {"sha": "65cb4ae07a50426424f187fbe902bd99e860e083", "filename": "library/std/src/os/unix/net/stream.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/49a152885d6050529f2d71645564c73e205f9da6/library%2Fstd%2Fsrc%2Fos%2Funix%2Fnet%2Fstream.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49a152885d6050529f2d71645564c73e205f9da6/library%2Fstd%2Fsrc%2Fos%2Funix%2Fnet%2Fstream.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Funix%2Fnet%2Fstream.rs?ref=49a152885d6050529f2d71645564c73e205f9da6", "patch": "@@ -106,7 +106,6 @@ impl UnixStream {\n     /// # Examples\n     ///\n     /// ```no_run\n-    /// #![feature(unix_socket_abstract)]\n     /// use std::os::unix::net::{UnixListener, UnixStream};\n     ///\n     /// fn main() -> std::io::Result<()> {\n@@ -123,7 +122,7 @@ impl UnixStream {\n     ///     Ok(())\n     /// }\n     /// ````\n-    #[unstable(feature = \"unix_socket_abstract\", issue = \"85410\")]\n+    #[stable(feature = \"unix_socket_abstract\", since = \"CURRENT_RUSTC_VERSION\")]\n     pub fn connect_addr(socket_addr: &SocketAddr) -> io::Result<UnixStream> {\n         unsafe {\n             let inner = Socket::new_raw(libc::AF_UNIX, libc::SOCK_STREAM)?;"}]}