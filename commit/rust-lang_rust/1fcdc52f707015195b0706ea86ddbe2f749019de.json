{"sha": "1fcdc52f707015195b0706ea86ddbe2f749019de", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFmY2RjNTJmNzA3MDE1MTk1YjA3MDZlYTg2ZGRiZTJmNzQ5MDE5ZGU=", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2020-02-11T20:19:40Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2020-03-14T13:17:43Z"}, "message": "Make downstream crates compile.", "tree": {"sha": "a36b243b1fde94b92296cfa37cf4521d2968d3c8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a36b243b1fde94b92296cfa37cf4521d2968d3c8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1fcdc52f707015195b0706ea86ddbe2f749019de", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1fcdc52f707015195b0706ea86ddbe2f749019de", "html_url": "https://github.com/rust-lang/rust/commit/1fcdc52f707015195b0706ea86ddbe2f749019de", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1fcdc52f707015195b0706ea86ddbe2f749019de/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0535dd3721816f0df997976632fd5b133dbde1b3", "url": "https://api.github.com/repos/rust-lang/rust/commits/0535dd3721816f0df997976632fd5b133dbde1b3", "html_url": "https://github.com/rust-lang/rust/commit/0535dd3721816f0df997976632fd5b133dbde1b3"}], "stats": {"total": 219, "additions": 136, "deletions": 83}, "files": [{"sha": "bffbcd3366991c0db603f95f6d404d89b36a4c5c", "filename": "src/librustc_interface/passes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_interface%2Fpasses.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_interface%2Fpasses.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Fpasses.rs?ref=1fcdc52f707015195b0706ea86ddbe2f749019de", "patch": "@@ -27,7 +27,6 @@ use rustc_errors::PResult;\n use rustc_expand::base::ExtCtxt;\n use rustc_hir::def_id::{CrateNum, LOCAL_CRATE};\n use rustc_hir::Crate;\n-use rustc_infer::traits;\n use rustc_lint::LintStore;\n use rustc_mir as mir;\n use rustc_mir_build as mir_build;\n@@ -37,6 +36,7 @@ use rustc_plugin_impl as plugin;\n use rustc_resolve::{Resolver, ResolverArenas};\n use rustc_span::symbol::Symbol;\n use rustc_span::FileName;\n+use rustc_trait_selection::traits;\n use rustc_typeck as typeck;\n \n use rustc_serialize::json;"}, {"sha": "50c2c6f95522890db46ab6677588a5379c45ae81", "filename": "src/librustc_lint/builtin.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_lint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_lint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Fbuiltin.rs?ref=1fcdc52f707015195b0706ea86ddbe2f749019de", "patch": "@@ -39,12 +39,12 @@ use rustc_hir::def::{DefKind, Res};\n use rustc_hir::def_id::DefId;\n use rustc_hir::{GenericParamKind, PatKind};\n use rustc_hir::{HirIdSet, Node};\n-use rustc_infer::traits::misc::can_type_implement_copy;\n use rustc_session::lint::FutureIncompatibleInfo;\n use rustc_span::edition::Edition;\n use rustc_span::source_map::Spanned;\n use rustc_span::symbol::{kw, sym, Symbol};\n use rustc_span::{BytePos, Span};\n+use rustc_trait_selection::traits::misc::can_type_implement_copy;\n \n use crate::nonstandard_style::{method_context, MethodLateContext};\n "}, {"sha": "e895eec5d52af45752284c2cfccab48391defe94", "filename": "src/librustc_mir/borrow_check/diagnostics/conflict_errors.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fconflict_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fconflict_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fconflict_errors.rs?ref=1fcdc52f707015195b0706ea86ddbe2f749019de", "patch": "@@ -10,9 +10,9 @@ use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n use rustc_hir::{AsyncGeneratorKind, GeneratorKind};\n use rustc_index::vec::Idx;\n-use rustc_infer::traits::error_reporting::suggest_constraining_type_param;\n use rustc_span::source_map::DesugaringKind;\n use rustc_span::Span;\n+use rustc_trait_selection::traits::error_reporting::suggest_constraining_type_param;\n \n use crate::dataflow::drop_flag_effects;\n use crate::dataflow::indexes::{MoveOutIndex, MovePathIndex};"}, {"sha": "49b494373284712802a2c0e5e1f13654dba553b2", "filename": "src/librustc_mir/borrow_check/region_infer/opaque_types.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_mir%2Fborrow_check%2Fregion_infer%2Fopaque_types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_mir%2Fborrow_check%2Fregion_infer%2Fopaque_types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fregion_infer%2Fopaque_types.rs?ref=1fcdc52f707015195b0706ea86ddbe2f749019de", "patch": "@@ -3,6 +3,7 @@ use rustc_data_structures::fx::FxHashMap;\n use rustc_hir::def_id::DefId;\n use rustc_infer::infer::InferCtxt;\n use rustc_span::Span;\n+use rustc_trait_selection::opaque_types::InferCtxtExt;\n \n use super::RegionInferenceContext;\n "}, {"sha": "c17db926946cdc67091ff7adf0081cc93649047d", "filename": "src/librustc_mir/borrow_check/type_check/free_region_relations.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Ffree_region_relations.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Ffree_region_relations.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Ffree_region_relations.rs?ref=1fcdc52f707015195b0706ea86ddbe2f749019de", "patch": "@@ -7,8 +7,8 @@ use rustc_infer::infer::canonical::QueryRegionConstraints;\n use rustc_infer::infer::outlives;\n use rustc_infer::infer::region_constraints::GenericKind;\n use rustc_infer::infer::InferCtxt;\n-use rustc_infer::traits::query::type_op::{self, TypeOp};\n use rustc_span::DUMMY_SP;\n+use rustc_trait_selection::traits::query::type_op::{self, TypeOp};\n use std::rc::Rc;\n \n use crate::borrow_check::{"}, {"sha": "0c49ee44f9a5025ad6f63f779d74f62e1245f672", "filename": "src/librustc_mir/borrow_check/type_check/liveness/trace.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Fliveness%2Ftrace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Fliveness%2Ftrace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Fliveness%2Ftrace.rs?ref=1fcdc52f707015195b0706ea86ddbe2f749019de", "patch": "@@ -3,9 +3,9 @@ use rustc::ty::{Ty, TypeFoldable};\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_index::bit_set::HybridBitSet;\n use rustc_infer::infer::canonical::QueryRegionConstraints;\n-use rustc_infer::traits::query::dropck_outlives::DropckOutlivesResult;\n-use rustc_infer::traits::query::type_op::outlives::DropckOutlives;\n-use rustc_infer::traits::query::type_op::TypeOp;\n+use rustc_trait_selection::traits::query::dropck_outlives::DropckOutlivesResult;\n+use rustc_trait_selection::traits::query::type_op::outlives::DropckOutlives;\n+use rustc_trait_selection::traits::query::type_op::TypeOp;\n use std::rc::Rc;\n \n use crate::dataflow::generic::ResultsCursor;"}, {"sha": "351b30bab614cd82ca790d0114b59deb97e4f782", "filename": "src/librustc_mir/borrow_check/type_check/mod.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Fmod.rs?ref=1fcdc52f707015195b0706ea86ddbe2f749019de", "patch": "@@ -24,17 +24,19 @@ use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n use rustc_index::vec::{Idx, IndexVec};\n use rustc_infer::infer::canonical::QueryRegionConstraints;\n-use rustc_infer::infer::opaque_types::GenerateMemberConstraints;\n use rustc_infer::infer::outlives::env::RegionBoundPairs;\n use rustc_infer::infer::type_variable::{TypeVariableOrigin, TypeVariableOriginKind};\n use rustc_infer::infer::{\n     InferCtxt, InferOk, LateBoundRegionConversionTime, NLLRegionVariableOrigin,\n };\n-use rustc_infer::traits::query::type_op;\n-use rustc_infer::traits::query::type_op::custom::CustomTypeOp;\n-use rustc_infer::traits::query::{Fallible, NoSolution};\n-use rustc_infer::traits::{self, ObligationCause, PredicateObligations};\n use rustc_span::{Span, DUMMY_SP};\n+use rustc_trait_selection::infer::InferCtxtExt as _;\n+use rustc_trait_selection::opaque_types::{GenerateMemberConstraints, InferCtxtExt};\n+use rustc_trait_selection::traits::error_reporting::InferCtxtExt as _;\n+use rustc_trait_selection::traits::query::type_op;\n+use rustc_trait_selection::traits::query::type_op::custom::CustomTypeOp;\n+use rustc_trait_selection::traits::query::{Fallible, NoSolution};\n+use rustc_trait_selection::traits::{self, ObligationCause, PredicateObligations};\n \n use crate::dataflow::generic::ResultsCursor;\n use crate::dataflow::move_paths::MoveData;"}, {"sha": "ebaafd40262705a00a8a088503c575919ab0bdc6", "filename": "src/librustc_mir/borrow_check/type_check/relate_tys.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Frelate_tys.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Frelate_tys.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Frelate_tys.rs?ref=1fcdc52f707015195b0706ea86ddbe2f749019de", "patch": "@@ -3,8 +3,8 @@ use rustc::ty::relate::TypeRelation;\n use rustc::ty::{self, Ty};\n use rustc_infer::infer::nll_relate::{NormalizationStrategy, TypeRelating, TypeRelatingDelegate};\n use rustc_infer::infer::{InferCtxt, NLLRegionVariableOrigin};\n-use rustc_infer::traits::query::Fallible;\n-use rustc_infer::traits::DomainGoal;\n+use rustc_trait_selection::traits::query::Fallible;\n+use rustc_trait_selection::traits::DomainGoal;\n \n use crate::borrow_check::constraints::OutlivesConstraint;\n use crate::borrow_check::type_check::{BorrowCheckContext, Locations};"}, {"sha": "adffd444eb68b1e000ca1a5a3519c8077d3a5433", "filename": "src/librustc_mir/transform/check_consts/validation.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fvalidation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fvalidation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fvalidation.rs?ref=1fcdc52f707015195b0706ea86ddbe2f749019de", "patch": "@@ -9,9 +9,10 @@ use rustc_errors::struct_span_err;\n use rustc_hir::{def_id::DefId, HirId};\n use rustc_index::bit_set::BitSet;\n use rustc_infer::infer::TyCtxtInferExt;\n-use rustc_infer::traits::{self, TraitEngine};\n use rustc_span::symbol::sym;\n use rustc_span::Span;\n+use rustc_trait_selection::traits::error_reporting::InferCtxtExt;\n+use rustc_trait_selection::traits::{self, TraitEngine};\n \n use std::borrow::Cow;\n use std::ops::Deref;"}, {"sha": "289b198d2c949a909fed3bae50fcfe73d84b1831", "filename": "src/librustc_mir/transform/const_prop.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs?ref=1fcdc52f707015195b0706ea86ddbe2f749019de", "patch": "@@ -25,8 +25,8 @@ use rustc_data_structures::fx::FxHashMap;\n use rustc_hir::def::DefKind;\n use rustc_hir::HirId;\n use rustc_index::vec::IndexVec;\n-use rustc_infer::traits;\n use rustc_span::Span;\n+use rustc_trait_selection::traits;\n \n use crate::const_eval::error_to_const_error;\n use crate::interpret::{"}, {"sha": "99caa6a0f95b48b3d475ae145090ea3e73359b32", "filename": "src/librustc_mir_build/hair/cx/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_mir_build%2Fhair%2Fcx%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_mir_build%2Fhair%2Fcx%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir_build%2Fhair%2Fcx%2Fmod.rs?ref=1fcdc52f707015195b0706ea86ddbe2f749019de", "patch": "@@ -19,6 +19,7 @@ use rustc_hir::Node;\n use rustc_index::vec::Idx;\n use rustc_infer::infer::InferCtxt;\n use rustc_span::symbol::{sym, Symbol};\n+use rustc_trait_selection::infer::InferCtxtExt;\n \n #[derive(Clone)]\n crate struct Cx<'a, 'tcx> {"}, {"sha": "214e75fbdde43108676b90950611e0ed95afa7b1", "filename": "src/librustc_mir_build/hair/pattern/const_to_pat.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_mir_build%2Fhair%2Fpattern%2Fconst_to_pat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_mir_build%2Fhair%2Fpattern%2Fconst_to_pat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir_build%2Fhair%2Fpattern%2Fconst_to_pat.rs?ref=1fcdc52f707015195b0706ea86ddbe2f749019de", "patch": "@@ -3,8 +3,9 @@ use rustc::mir::Field;\n use rustc::ty::{self, Ty, TyCtxt};\n use rustc_hir as hir;\n use rustc_infer::infer::{InferCtxt, TyCtxtInferExt};\n-use rustc_infer::traits::predicate_for_trait_def;\n-use rustc_infer::traits::{self, ObligationCause, PredicateObligation};\n+use rustc_trait_selection::traits::predicate_for_trait_def;\n+use rustc_trait_selection::traits::query::evaluate_obligation::InferCtxtExt;\n+use rustc_trait_selection::traits::{self, ObligationCause, PredicateObligation};\n \n use rustc_index::vec::Idx;\n "}, {"sha": "d056d9f0562a323e834b617ff62147fc4871f063", "filename": "src/librustc_passes/stability.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_passes%2Fstability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_passes%2Fstability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fstability.rs?ref=1fcdc52f707015195b0706ea86ddbe2f749019de", "patch": "@@ -18,9 +18,9 @@ use rustc_hir::def::{DefKind, Res};\n use rustc_hir::def_id::{DefId, CRATE_DEF_INDEX, LOCAL_CRATE};\n use rustc_hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc_hir::{Generics, HirId, Item, StructField, Variant};\n-use rustc_infer::traits::misc::can_type_implement_copy;\n use rustc_span::symbol::{sym, Symbol};\n use rustc_span::Span;\n+use rustc_trait_selection::traits::misc::can_type_implement_copy;\n \n use std::cmp::Ordering;\n use std::mem::replace;"}, {"sha": "b13a7a3acb16509458d57ca38a6bfa822b151f68", "filename": "src/librustc_traits/dropck_outlives.rs", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_traits%2Fdropck_outlives.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_traits%2Fdropck_outlives.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_traits%2Fdropck_outlives.rs?ref=1fcdc52f707015195b0706ea86ddbe2f749019de", "patch": "@@ -5,11 +5,17 @@ use rustc_data_structures::fx::FxHashSet;\n use rustc_hir::def_id::DefId;\n use rustc_infer::infer::canonical::{Canonical, QueryResponse};\n use rustc_infer::infer::TyCtxtInferExt;\n-use rustc_infer::traits::query::dropck_outlives::trivial_dropck_outlives;\n-use rustc_infer::traits::query::dropck_outlives::{DropckOutlivesResult, DtorckConstraint};\n-use rustc_infer::traits::query::{CanonicalTyGoal, NoSolution};\n-use rustc_infer::traits::{Normalized, ObligationCause, TraitEngine, TraitEngineExt};\n+use rustc_infer::traits::TraitEngineExt as _;\n use rustc_span::source_map::{Span, DUMMY_SP};\n+use rustc_trait_selection::traits::query::dropck_outlives::trivial_dropck_outlives;\n+use rustc_trait_selection::traits::query::dropck_outlives::{\n+    DropckOutlivesResult, DtorckConstraint,\n+};\n+use rustc_trait_selection::traits::query::normalize::AtExt;\n+use rustc_trait_selection::traits::query::{CanonicalTyGoal, NoSolution};\n+use rustc_trait_selection::traits::{\n+    Normalized, ObligationCause, TraitEngine, TraitEngineExt as _,\n+};\n \n crate fn provide(p: &mut Providers<'_>) {\n     *p = Providers { dropck_outlives, adt_dtorck_constraint, ..*p };"}, {"sha": "87895d8e384da484681c621beaeb8c6bd657ffa1", "filename": "src/librustc_traits/evaluate_obligation.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_traits%2Fevaluate_obligation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_traits%2Fevaluate_obligation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_traits%2Fevaluate_obligation.rs?ref=1fcdc52f707015195b0706ea86ddbe2f749019de", "patch": "@@ -1,11 +1,11 @@\n use rustc::ty::query::Providers;\n use rustc::ty::{ParamEnvAnd, TyCtxt};\n use rustc_infer::infer::TyCtxtInferExt;\n-use rustc_infer::traits::query::CanonicalPredicateGoal;\n-use rustc_infer::traits::{\n+use rustc_span::source_map::DUMMY_SP;\n+use rustc_trait_selection::traits::query::CanonicalPredicateGoal;\n+use rustc_trait_selection::traits::{\n     EvaluationResult, Obligation, ObligationCause, OverflowError, SelectionContext, TraitQueryMode,\n };\n-use rustc_span::source_map::DUMMY_SP;\n \n crate fn provide(p: &mut Providers<'_>) {\n     *p = Providers { evaluate_obligation, ..*p };"}, {"sha": "4505a1e59d9ba936d3a17a8cfc81948b0bc3b551", "filename": "src/librustc_traits/implied_outlives_bounds.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_traits%2Fimplied_outlives_bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_traits%2Fimplied_outlives_bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_traits%2Fimplied_outlives_bounds.rs?ref=1fcdc52f707015195b0706ea86ddbe2f749019de", "patch": "@@ -7,12 +7,14 @@ use rustc::ty::{self, Ty, TyCtxt, TypeFoldable};\n use rustc_hir as hir;\n use rustc_infer::infer::canonical::{self, Canonical};\n use rustc_infer::infer::{InferCtxt, TyCtxtInferExt};\n-use rustc_infer::traits::query::outlives_bounds::OutlivesBound;\n-use rustc_infer::traits::query::{CanonicalTyGoal, Fallible, NoSolution};\n-use rustc_infer::traits::wf;\n-use rustc_infer::traits::FulfillmentContext;\n-use rustc_infer::traits::{TraitEngine, TraitEngineExt};\n+use rustc_infer::traits::TraitEngineExt as _;\n use rustc_span::source_map::DUMMY_SP;\n+use rustc_trait_selection::infer::InferCtxtBuilderExt;\n+use rustc_trait_selection::traits::query::outlives_bounds::OutlivesBound;\n+use rustc_trait_selection::traits::query::{CanonicalTyGoal, Fallible, NoSolution};\n+use rustc_trait_selection::traits::wf;\n+use rustc_trait_selection::traits::FulfillmentContext;\n+use rustc_trait_selection::traits::TraitEngine;\n use smallvec::{smallvec, SmallVec};\n \n crate fn provide(p: &mut Providers<'_>) {"}, {"sha": "c2fb237a05b5476783e59a5222aac5b728ceeadb", "filename": "src/librustc_traits/normalize_erasing_regions.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_traits%2Fnormalize_erasing_regions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_traits%2Fnormalize_erasing_regions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_traits%2Fnormalize_erasing_regions.rs?ref=1fcdc52f707015195b0706ea86ddbe2f749019de", "patch": "@@ -2,7 +2,8 @@ use rustc::traits::query::NoSolution;\n use rustc::ty::query::Providers;\n use rustc::ty::{self, ParamEnvAnd, Ty, TyCtxt};\n use rustc_infer::infer::TyCtxtInferExt;\n-use rustc_infer::traits::{Normalized, ObligationCause};\n+use rustc_trait_selection::traits::query::normalize::AtExt;\n+use rustc_trait_selection::traits::{Normalized, ObligationCause};\n use std::sync::atomic::Ordering;\n \n crate fn provide(p: &mut Providers<'_>) {"}, {"sha": "57abff769de9b67e9407a63b9c1d8997c88d7c3f", "filename": "src/librustc_traits/normalize_projection_ty.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_traits%2Fnormalize_projection_ty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_traits%2Fnormalize_projection_ty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_traits%2Fnormalize_projection_ty.rs?ref=1fcdc52f707015195b0706ea86ddbe2f749019de", "patch": "@@ -3,11 +3,13 @@ use rustc::ty::{ParamEnvAnd, TyCtxt};\n use rustc_hir as hir;\n use rustc_infer::infer::canonical::{Canonical, QueryResponse};\n use rustc_infer::infer::TyCtxtInferExt;\n-use rustc_infer::traits::query::{\n+use rustc_infer::traits::TraitEngineExt as _;\n+use rustc_span::DUMMY_SP;\n+use rustc_trait_selection::infer::InferCtxtBuilderExt;\n+use rustc_trait_selection::traits::query::{\n     normalize::NormalizationResult, CanonicalProjectionGoal, NoSolution,\n };\n-use rustc_infer::traits::{self, ObligationCause, SelectionContext, TraitEngineExt};\n-use rustc_span::DUMMY_SP;\n+use rustc_trait_selection::traits::{self, ObligationCause, SelectionContext};\n use std::sync::atomic::Ordering;\n \n crate fn provide(p: &mut Providers<'_>) {"}, {"sha": "e174c040e0da15b4da29298e853f080e42acff0c", "filename": "src/librustc_traits/type_op.rs", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_traits%2Ftype_op.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_traits%2Ftype_op.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_traits%2Ftype_op.rs?ref=1fcdc52f707015195b0706ea86ddbe2f749019de", "patch": "@@ -8,14 +8,18 @@ use rustc_hir::def_id::DefId;\n use rustc_infer::infer::at::ToTrace;\n use rustc_infer::infer::canonical::{Canonical, QueryResponse};\n use rustc_infer::infer::{InferCtxt, TyCtxtInferExt};\n-use rustc_infer::traits::query::type_op::ascribe_user_type::AscribeUserType;\n-use rustc_infer::traits::query::type_op::eq::Eq;\n-use rustc_infer::traits::query::type_op::normalize::Normalize;\n-use rustc_infer::traits::query::type_op::prove_predicate::ProvePredicate;\n-use rustc_infer::traits::query::type_op::subtype::Subtype;\n-use rustc_infer::traits::query::{Fallible, NoSolution};\n-use rustc_infer::traits::{Normalized, Obligation, ObligationCause, TraitEngine, TraitEngineExt};\n+use rustc_infer::traits::TraitEngineExt as _;\n use rustc_span::DUMMY_SP;\n+use rustc_trait_selection::infer::InferCtxtBuilderExt;\n+use rustc_trait_selection::infer::InferCtxtExt;\n+use rustc_trait_selection::traits::query::normalize::AtExt;\n+use rustc_trait_selection::traits::query::type_op::ascribe_user_type::AscribeUserType;\n+use rustc_trait_selection::traits::query::type_op::eq::Eq;\n+use rustc_trait_selection::traits::query::type_op::normalize::Normalize;\n+use rustc_trait_selection::traits::query::type_op::prove_predicate::ProvePredicate;\n+use rustc_trait_selection::traits::query::type_op::subtype::Subtype;\n+use rustc_trait_selection::traits::query::{Fallible, NoSolution};\n+use rustc_trait_selection::traits::{Normalized, Obligation, ObligationCause, TraitEngine};\n use std::fmt;\n \n crate fn provide(p: &mut Providers<'_>) {"}, {"sha": "311ba383f3055fbe3a819f3c81fc5138e7f943fa", "filename": "src/librustc_ty/common_traits.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_ty%2Fcommon_traits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_ty%2Fcommon_traits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ty%2Fcommon_traits.rs?ref=1fcdc52f707015195b0706ea86ddbe2f749019de", "patch": "@@ -3,8 +3,8 @@\n use rustc::middle::lang_items;\n use rustc::ty::{self, Ty, TyCtxt};\n use rustc_infer::infer::TyCtxtInferExt;\n-use rustc_infer::traits;\n use rustc_span::DUMMY_SP;\n+use rustc_trait_selection::traits;\n \n fn is_copy_raw<'tcx>(tcx: TyCtxt<'tcx>, query: ty::ParamEnvAnd<'tcx, Ty<'tcx>>) -> bool {\n     is_item_raw(tcx, query, lang_items::CopyTraitLangItem)"}, {"sha": "10cc2c0e3033c2f7477d7bc70c93a3b8057810d2", "filename": "src/librustc_ty/instance.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_ty%2Finstance.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_ty%2Finstance.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ty%2Finstance.rs?ref=1fcdc52f707015195b0706ea86ddbe2f749019de", "patch": "@@ -1,8 +1,8 @@\n use rustc::ty::subst::SubstsRef;\n use rustc::ty::{self, Instance, TyCtxt, TypeFoldable};\n use rustc_hir::def_id::DefId;\n-use rustc_infer::traits;\n use rustc_target::spec::abi::Abi;\n+use rustc_trait_selection::traits;\n \n use log::debug;\n "}, {"sha": "4c0903b6b9dfa22fa7a625959b35efcbc153a8f1", "filename": "src/librustc_ty/ty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_ty%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_ty%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ty%2Fty.rs?ref=1fcdc52f707015195b0706ea86ddbe2f749019de", "patch": "@@ -5,9 +5,9 @@ use rustc::ty::{self, ToPredicate, Ty, TyCtxt, WithConstness};\n use rustc_data_structures::svh::Svh;\n use rustc_hir as hir;\n use rustc_hir::def_id::{CrateNum, DefId, LOCAL_CRATE};\n-use rustc_infer::traits;\n use rustc_span::symbol::Symbol;\n use rustc_span::Span;\n+use rustc_trait_selection::traits;\n \n fn sized_constraint_for_ty<'tcx>(\n     tcx: TyCtxt<'tcx>,"}, {"sha": "be8090cf21b9c8617672962605100b9de1cfd28b", "filename": "src/librustc_typeck/astconv.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_typeck%2Fastconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_typeck%2Fastconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fastconv.rs?ref=1fcdc52f707015195b0706ea86ddbe2f749019de", "patch": "@@ -26,13 +26,13 @@ use rustc_hir::def_id::DefId;\n use rustc_hir::intravisit::Visitor;\n use rustc_hir::print;\n use rustc_hir::{Constness, ExprKind, GenericArg, GenericArgs};\n-use rustc_infer::traits;\n-use rustc_infer::traits::astconv_object_safety_violations;\n-use rustc_infer::traits::error_reporting::report_object_safety_error;\n-use rustc_infer::traits::wf::object_region_bounds;\n use rustc_span::symbol::sym;\n use rustc_span::{MultiSpan, Span, DUMMY_SP};\n use rustc_target::spec::abi;\n+use rustc_trait_selection::traits;\n+use rustc_trait_selection::traits::astconv_object_safety_violations;\n+use rustc_trait_selection::traits::error_reporting::report_object_safety_error;\n+use rustc_trait_selection::traits::wf::object_region_bounds;\n use smallvec::SmallVec;\n \n use std::collections::BTreeSet;"}, {"sha": "20737b44e7c17574ecb14729d1c7349116f579e6", "filename": "src/librustc_typeck/check/_match.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_typeck%2Fcheck%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_typeck%2Fcheck%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2F_match.rs?ref=1fcdc52f707015195b0706ea86ddbe2f749019de", "patch": "@@ -4,9 +4,9 @@ use rustc::ty::Ty;\n use rustc_hir as hir;\n use rustc_hir::ExprKind;\n use rustc_infer::infer::type_variable::{TypeVariableOrigin, TypeVariableOriginKind};\n-use rustc_infer::traits::ObligationCauseCode;\n-use rustc_infer::traits::{IfExpressionCause, MatchExpressionArmCause, ObligationCause};\n use rustc_span::Span;\n+use rustc_trait_selection::traits::ObligationCauseCode;\n+use rustc_trait_selection::traits::{IfExpressionCause, MatchExpressionArmCause, ObligationCause};\n \n impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n     pub fn check_match("}, {"sha": "991347714e841c20f5fd0095511f34a2fde105ca", "filename": "src/librustc_typeck/check/autoderef.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_typeck%2Fcheck%2Fautoderef.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_typeck%2Fcheck%2Fautoderef.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fautoderef.rs?ref=1fcdc52f707015195b0706ea86ddbe2f749019de", "patch": "@@ -8,7 +8,8 @@ use rustc::ty::{ToPredicate, TypeFoldable};\n use rustc_errors::struct_span_err;\n use rustc_hir as hir;\n use rustc_infer::infer::{InferCtxt, InferOk};\n-use rustc_infer::traits::{self, TraitEngine};\n+use rustc_trait_selection::traits::query::evaluate_obligation::InferCtxtExt;\n+use rustc_trait_selection::traits::{self, TraitEngine};\n \n use rustc_ast::ast::Ident;\n use rustc_span::Span;"}, {"sha": "d52b6c39ab58db837c25a8321ce266125ef76af2", "filename": "src/librustc_typeck/check/cast.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_typeck%2Fcheck%2Fcast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_typeck%2Fcheck%2Fcast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fcast.rs?ref=1fcdc52f707015195b0706ea86ddbe2f749019de", "patch": "@@ -44,9 +44,9 @@ use rustc::ty::{self, Ty, TypeAndMut, TypeFoldable};\n use rustc_ast::ast;\n use rustc_errors::{struct_span_err, Applicability, DiagnosticBuilder};\n use rustc_hir as hir;\n-use rustc_infer::traits;\n-use rustc_infer::traits::error_reporting::report_object_safety_error;\n use rustc_span::Span;\n+use rustc_trait_selection::traits;\n+use rustc_trait_selection::traits::error_reporting::report_object_safety_error;\n \n /// Reifies a cast check to be checked once we have full type information for\n /// a function context."}, {"sha": "49b7a997311044f80ffba4a850c8a32990c94d0c", "filename": "src/librustc_typeck/check/closure.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_typeck%2Fcheck%2Fclosure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_typeck%2Fcheck%2Fclosure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fclosure.rs?ref=1fcdc52f707015195b0706ea86ddbe2f749019de", "patch": "@@ -12,10 +12,11 @@ use rustc_hir::def_id::DefId;\n use rustc_infer::infer::type_variable::{TypeVariableOrigin, TypeVariableOriginKind};\n use rustc_infer::infer::LateBoundRegionConversionTime;\n use rustc_infer::infer::{InferOk, InferResult};\n-use rustc_infer::traits::error_reporting::ArgKind;\n-use rustc_infer::traits::Obligation;\n use rustc_span::source_map::Span;\n use rustc_target::spec::abi::Abi;\n+use rustc_trait_selection::traits::error_reporting::ArgKind;\n+use rustc_trait_selection::traits::error_reporting::InferCtxtExt as _;\n+use rustc_trait_selection::traits::Obligation;\n use std::cmp;\n use std::iter;\n "}, {"sha": "d74623a063f8f066965179cf99bc013add5e188f", "filename": "src/librustc_typeck/check/coercion.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_typeck%2Fcheck%2Fcoercion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_typeck%2Fcheck%2Fcoercion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fcoercion.rs?ref=1fcdc52f707015195b0706ea86ddbe2f749019de", "patch": "@@ -66,10 +66,11 @@ use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n use rustc_infer::infer::type_variable::{TypeVariableOrigin, TypeVariableOriginKind};\n use rustc_infer::infer::{Coercion, InferOk, InferResult};\n-use rustc_infer::traits::{self, ObligationCause, ObligationCauseCode};\n use rustc_span::symbol::sym;\n use rustc_span::{self, Span};\n use rustc_target::spec::abi::Abi;\n+use rustc_trait_selection::traits::error_reporting::InferCtxtExt;\n+use rustc_trait_selection::traits::{self, ObligationCause, ObligationCauseCode};\n use smallvec::{smallvec, SmallVec};\n use std::ops::Deref;\n "}, {"sha": "ff79d10273c84d8a3906c584aa675e4c90fcb374", "filename": "src/librustc_typeck/check/compare_method.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_typeck%2Fcheck%2Fcompare_method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_typeck%2Fcheck%2Fcompare_method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fcompare_method.rs?ref=1fcdc52f707015195b0706ea86ddbe2f749019de", "patch": "@@ -10,8 +10,9 @@ use rustc_hir::def::{DefKind, Res};\n use rustc_hir::intravisit;\n use rustc_hir::{GenericParamKind, ImplItemKind, TraitItemKind};\n use rustc_infer::infer::{self, InferOk, TyCtxtInferExt};\n-use rustc_infer::traits::{self, ObligationCause, ObligationCauseCode, Reveal};\n use rustc_span::Span;\n+use rustc_trait_selection::traits::error_reporting::InferCtxtExt;\n+use rustc_trait_selection::traits::{self, ObligationCause, ObligationCauseCode, Reveal};\n \n use super::{potentially_plural_count, FnCtxt, Inherited};\n "}, {"sha": "0556c80e4f70775fa17b4e010f9f95cbfec3aeab", "filename": "src/librustc_typeck/check/demand.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs?ref=1fcdc52f707015195b0706ea86ddbe2f749019de", "patch": "@@ -1,6 +1,8 @@\n use crate::check::FnCtxt;\n use rustc_infer::infer::InferOk;\n-use rustc_infer::traits::{self, ObligationCause};\n+use rustc_trait_selection::infer::InferCtxtExt as _;\n+use rustc_trait_selection::traits::query::evaluate_obligation::InferCtxtExt as _;\n+use rustc_trait_selection::traits::{self, ObligationCause};\n \n use rustc::ty::adjustment::AllowTwoPhase;\n use rustc::ty::{self, AssocItem, Ty};"}, {"sha": "dca4f9e7cbe08105cb4dd81d1f9dedf801d88080", "filename": "src/librustc_typeck/check/dropck.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_typeck%2Fcheck%2Fdropck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_typeck%2Fcheck%2Fdropck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fdropck.rs?ref=1fcdc52f707015195b0706ea86ddbe2f749019de", "patch": "@@ -10,8 +10,11 @@ use rustc::ty::{self, Predicate, Ty, TyCtxt};\n use rustc_errors::struct_span_err;\n use rustc_infer::infer::outlives::env::OutlivesEnvironment;\n use rustc_infer::infer::{InferOk, SuppressRegionErrors, TyCtxtInferExt};\n-use rustc_infer::traits::{ObligationCause, TraitEngine, TraitEngineExt};\n+use rustc_infer::traits::TraitEngineExt as _;\n use rustc_span::Span;\n+use rustc_trait_selection::traits::error_reporting::InferCtxtExt;\n+use rustc_trait_selection::traits::query::dropck_outlives::AtExt;\n+use rustc_trait_selection::traits::{ObligationCause, TraitEngine, TraitEngineExt};\n \n /// This function confirms that the `Drop` implementation identified by\n /// `drop_impl_did` is not any more specialized than the type it is"}, {"sha": "93f9050b26eb96bc59e99d6c34db5a3757168919", "filename": "src/librustc_typeck/check/expr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_typeck%2Fcheck%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_typeck%2Fcheck%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fexpr.rs?ref=1fcdc52f707015195b0706ea86ddbe2f749019de", "patch": "@@ -34,10 +34,10 @@ use rustc_hir::def_id::DefId;\n use rustc_hir::{ExprKind, QPath};\n use rustc_infer::infer;\n use rustc_infer::infer::type_variable::{TypeVariableOrigin, TypeVariableOriginKind};\n-use rustc_infer::traits::{self, ObligationCauseCode};\n use rustc_span::hygiene::DesugaringKind;\n use rustc_span::source_map::Span;\n use rustc_span::symbol::{kw, sym, Symbol};\n+use rustc_trait_selection::traits::{self, ObligationCauseCode};\n \n use std::fmt::Display;\n "}, {"sha": "48c72567b5c31ae8a15d454491e0b3aaf8947a8d", "filename": "src/librustc_typeck/check/method/confirm.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fconfirm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fconfirm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fconfirm.rs?ref=1fcdc52f707015195b0706ea86ddbe2f749019de", "patch": "@@ -11,8 +11,8 @@ use rustc::ty::subst::{Subst, SubstsRef};\n use rustc::ty::{self, GenericParamDefKind, Ty};\n use rustc_hir as hir;\n use rustc_infer::infer::{self, InferOk};\n-use rustc_infer::traits;\n use rustc_span::Span;\n+use rustc_trait_selection::traits;\n \n use std::ops::Deref;\n "}, {"sha": "3cf7b65e30f2f377688d4a08ac238cb51e07ea9d", "filename": "src/librustc_typeck/check/method/mod.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fmod.rs?ref=1fcdc52f707015195b0706ea86ddbe2f749019de", "patch": "@@ -22,8 +22,9 @@ use rustc_hir as hir;\n use rustc_hir::def::{CtorOf, DefKind, Namespace};\n use rustc_hir::def_id::DefId;\n use rustc_infer::infer::{self, InferOk};\n-use rustc_infer::traits;\n use rustc_span::Span;\n+use rustc_trait_selection::traits;\n+use rustc_trait_selection::traits::query::evaluate_obligation::InferCtxtExt;\n \n use self::probe::{IsSuggestion, ProbeScope};\n "}, {"sha": "16bab09feeef0266ecb376e7702607a09e4a642e", "filename": "src/librustc_typeck/check/method/probe.rs", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fprobe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fprobe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fprobe.rs?ref=1fcdc52f707015195b0706ea86ddbe2f749019de", "patch": "@@ -28,11 +28,14 @@ use rustc_infer::infer::canonical::{Canonical, QueryResponse};\n use rustc_infer::infer::type_variable::{TypeVariableOrigin, TypeVariableOriginKind};\n use rustc_infer::infer::unify_key::{ConstVariableOrigin, ConstVariableOriginKind};\n use rustc_infer::infer::{self, InferOk, TyCtxtInferExt};\n-use rustc_infer::traits::query::method_autoderef::MethodAutoderefBadTy;\n-use rustc_infer::traits::query::method_autoderef::{CandidateStep, MethodAutoderefStepsResult};\n-use rustc_infer::traits::query::CanonicalTyGoal;\n-use rustc_infer::traits::{self, ObligationCause};\n use rustc_span::{symbol::Symbol, Span, DUMMY_SP};\n+use rustc_trait_selection::traits::query::evaluate_obligation::InferCtxtExt;\n+use rustc_trait_selection::traits::query::method_autoderef::MethodAutoderefBadTy;\n+use rustc_trait_selection::traits::query::method_autoderef::{\n+    CandidateStep, MethodAutoderefStepsResult,\n+};\n+use rustc_trait_selection::traits::query::CanonicalTyGoal;\n+use rustc_trait_selection::traits::{self, ObligationCause};\n use std::cmp::max;\n use std::iter;\n use std::mem;"}, {"sha": "bfbad1a0ea961d9b13585419eb5c8327d05fe949", "filename": "src/librustc_typeck/check/method/suggest.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs?ref=1fcdc52f707015195b0706ea86ddbe2f749019de", "patch": "@@ -17,9 +17,10 @@ use rustc_hir::def_id::{DefId, CRATE_DEF_INDEX, LOCAL_CRATE};\n use rustc_hir::intravisit;\n use rustc_hir::{ExprKind, Node, QPath};\n use rustc_infer::infer::type_variable::{TypeVariableOrigin, TypeVariableOriginKind};\n-use rustc_infer::traits::Obligation;\n use rustc_span::symbol::kw;\n use rustc_span::{source_map, FileName, Span};\n+use rustc_trait_selection::traits::query::evaluate_obligation::InferCtxtExt;\n+use rustc_trait_selection::traits::Obligation;\n \n use std::cmp::Ordering;\n "}, {"sha": "1975b2489996023196a957fe937b0b4b7ef4dc2f", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=1fcdc52f707015195b0706ea86ddbe2f749019de", "patch": "@@ -121,17 +121,22 @@ use rustc_hir::{ExprKind, GenericArg, HirIdMap, Item, ItemKind, Node, PatKind, Q\n use rustc_index::vec::Idx;\n use rustc_infer::infer::canonical::{Canonical, OriginalQueryValues, QueryResponse};\n use rustc_infer::infer::error_reporting::TypeAnnotationNeeded::E0282;\n-use rustc_infer::infer::opaque_types::OpaqueTypeDecl;\n use rustc_infer::infer::type_variable::{TypeVariableOrigin, TypeVariableOriginKind};\n use rustc_infer::infer::unify_key::{ConstVariableOrigin, ConstVariableOriginKind};\n use rustc_infer::infer::{self, InferCtxt, InferOk, InferResult, TyCtxtInferExt};\n-use rustc_infer::traits::error_reporting::recursive_type_with_infinite_size_error;\n-use rustc_infer::traits::{self, ObligationCause, ObligationCauseCode, TraitEngine};\n use rustc_span::hygiene::DesugaringKind;\n use rustc_span::source_map::{original_sp, DUMMY_SP};\n use rustc_span::symbol::{kw, sym, Ident};\n use rustc_span::{self, BytePos, MultiSpan, Span};\n use rustc_target::spec::abi::Abi;\n+use rustc_trait_selection::infer::InferCtxtExt as _;\n+use rustc_trait_selection::opaque_types::{InferCtxtExt as _, OpaqueTypeDecl};\n+use rustc_trait_selection::traits::error_reporting::recursive_type_with_infinite_size_error;\n+use rustc_trait_selection::traits::error_reporting::InferCtxtExt as _;\n+use rustc_trait_selection::traits::query::evaluate_obligation::InferCtxtExt as _;\n+use rustc_trait_selection::traits::{\n+    self, ObligationCause, ObligationCauseCode, TraitEngine, TraitEngineExt,\n+};\n \n use std::cell::{Cell, Ref, RefCell, RefMut};\n use std::cmp;"}, {"sha": "f589805e1e2610ce0a7d1404a19467e9fca14e4a", "filename": "src/librustc_typeck/check/op.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_typeck%2Fcheck%2Fop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_typeck%2Fcheck%2Fop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fop.rs?ref=1fcdc52f707015195b0706ea86ddbe2f749019de", "patch": "@@ -10,6 +10,7 @@ use rustc_errors::{self, struct_span_err, Applicability, DiagnosticBuilder};\n use rustc_hir as hir;\n use rustc_infer::infer::type_variable::{TypeVariableOrigin, TypeVariableOriginKind};\n use rustc_span::Span;\n+use rustc_trait_selection::infer::InferCtxtExt;\n \n impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n     /// Checks a `a <op>= b`"}, {"sha": "60132dde9caec09c02aa24d44d022c2dafaf4ae3", "filename": "src/librustc_typeck/check/pat.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_typeck%2Fcheck%2Fpat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_typeck%2Fcheck%2Fpat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fpat.rs?ref=1fcdc52f707015195b0706ea86ddbe2f749019de", "patch": "@@ -11,9 +11,9 @@ use rustc_hir::pat_util::EnumerateAndAdjustIterator;\n use rustc_hir::{HirId, Pat, PatKind};\n use rustc_infer::infer;\n use rustc_infer::infer::type_variable::{TypeVariableOrigin, TypeVariableOriginKind};\n-use rustc_infer::traits::{ObligationCause, Pattern};\n use rustc_span::hygiene::DesugaringKind;\n use rustc_span::source_map::{Span, Spanned};\n+use rustc_trait_selection::traits::{ObligationCause, Pattern};\n \n use std::cmp;\n use std::collections::hash_map::Entry::{Occupied, Vacant};"}, {"sha": "bfa3d75b6b0f024e57278d294c5a6094db17ff91", "filename": "src/librustc_typeck/check/regionck.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_typeck%2Fcheck%2Fregionck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_typeck%2Fcheck%2Fregionck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fregionck.rs?ref=1fcdc52f707015195b0706ea86ddbe2f749019de", "patch": "@@ -87,6 +87,8 @@ use rustc_hir::PatKind;\n use rustc_infer::infer::outlives::env::OutlivesEnvironment;\n use rustc_infer::infer::{self, RegionObligation, SuppressRegionErrors};\n use rustc_span::Span;\n+use rustc_trait_selection::infer::OutlivesEnvironmentExt;\n+use rustc_trait_selection::opaque_types::InferCtxtExt;\n use std::mem;\n use std::ops::Deref;\n "}, {"sha": "026e68e10e04d2fc743c76c59be4544e60ee007a", "filename": "src/librustc_typeck/check/wfcheck.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs?ref=1fcdc52f707015195b0706ea86ddbe2f749019de", "patch": "@@ -12,10 +12,11 @@ use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_errors::{struct_span_err, Applicability, DiagnosticBuilder};\n use rustc_hir::def_id::DefId;\n use rustc_hir::ItemKind;\n-use rustc_infer::infer::opaque_types::may_define_opaque_type;\n-use rustc_infer::traits::{self, ObligationCause, ObligationCauseCode};\n use rustc_span::symbol::sym;\n use rustc_span::Span;\n+use rustc_trait_selection::opaque_types::may_define_opaque_type;\n+use rustc_trait_selection::traits::query::evaluate_obligation::InferCtxtExt;\n+use rustc_trait_selection::traits::{self, ObligationCause, ObligationCauseCode};\n \n use rustc_hir as hir;\n use rustc_hir::itemlikevisit::ParItemLikeVisitor;"}, {"sha": "f4c166b943d6ce20444b71a0691ba20367e52d31", "filename": "src/librustc_typeck/check/writeback.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_typeck%2Fcheck%2Fwriteback.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_typeck%2Fcheck%2Fwriteback.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fwriteback.rs?ref=1fcdc52f707015195b0706ea86ddbe2f749019de", "patch": "@@ -16,6 +16,7 @@ use rustc_infer::infer::error_reporting::TypeAnnotationNeeded::E0282;\n use rustc_infer::infer::InferCtxt;\n use rustc_span::symbol::sym;\n use rustc_span::Span;\n+use rustc_trait_selection::opaque_types::InferCtxtExt;\n \n use std::mem;\n "}, {"sha": "2ea7601ae65380c88719b7bade867563b4eb835a", "filename": "src/librustc_typeck/coherence/builtin.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_typeck%2Fcoherence%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_typeck%2Fcoherence%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcoherence%2Fbuiltin.rs?ref=1fcdc52f707015195b0706ea86ddbe2f749019de", "patch": "@@ -13,9 +13,10 @@ use rustc_hir::ItemKind;\n use rustc_infer::infer;\n use rustc_infer::infer::outlives::env::OutlivesEnvironment;\n use rustc_infer::infer::{SuppressRegionErrors, TyCtxtInferExt};\n-use rustc_infer::traits::misc::{can_type_implement_copy, CopyImplementationError};\n-use rustc_infer::traits::predicate_for_trait_def;\n-use rustc_infer::traits::{self, ObligationCause, TraitEngine};\n+use rustc_trait_selection::traits::error_reporting::InferCtxtExt;\n+use rustc_trait_selection::traits::misc::{can_type_implement_copy, CopyImplementationError};\n+use rustc_trait_selection::traits::predicate_for_trait_def;\n+use rustc_trait_selection::traits::{self, ObligationCause, TraitEngine, TraitEngineExt};\n \n pub fn check_trait(tcx: TyCtxt<'_>, trait_def_id: DefId) {\n     let lang_items = tcx.lang_items();"}, {"sha": "1eae9d3b7fa6c100376909111a80b6f7c3048a38", "filename": "src/librustc_typeck/coherence/inherent_impls_overlap.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_typeck%2Fcoherence%2Finherent_impls_overlap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_typeck%2Fcoherence%2Finherent_impls_overlap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcoherence%2Finherent_impls_overlap.rs?ref=1fcdc52f707015195b0706ea86ddbe2f749019de", "patch": "@@ -3,7 +3,7 @@ use rustc_errors::struct_span_err;\n use rustc_hir as hir;\n use rustc_hir::def_id::{CrateNum, DefId, LOCAL_CRATE};\n use rustc_hir::itemlikevisit::ItemLikeVisitor;\n-use rustc_infer::traits::{self, SkipLeakCheck};\n+use rustc_trait_selection::traits::{self, SkipLeakCheck};\n \n pub fn crate_inherent_impls_overlap_check(tcx: TyCtxt<'_>, crate_num: CrateNum) {\n     assert_eq!(crate_num, LOCAL_CRATE);"}, {"sha": "0d0149f9673586aa90e029cca6e160318debcc83", "filename": "src/librustc_typeck/coherence/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_typeck%2Fcoherence%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_typeck%2Fcoherence%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcoherence%2Fmod.rs?ref=1fcdc52f707015195b0706ea86ddbe2f749019de", "patch": "@@ -9,8 +9,8 @@ use rustc::ty::query::Providers;\n use rustc::ty::{self, TyCtxt, TypeFoldable};\n use rustc_errors::struct_span_err;\n use rustc_hir::def_id::{DefId, LOCAL_CRATE};\n-use rustc_infer::traits;\n use rustc_span::Span;\n+use rustc_trait_selection::traits;\n \n mod builtin;\n mod inherent_impls;"}, {"sha": "fc77aad8688c69e3c44147db45af5e2f7b4d9e58", "filename": "src/librustc_typeck/coherence/orphan.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_typeck%2Fcoherence%2Forphan.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_typeck%2Fcoherence%2Forphan.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcoherence%2Forphan.rs?ref=1fcdc52f707015195b0706ea86ddbe2f749019de", "patch": "@@ -6,7 +6,7 @@ use rustc_errors::struct_span_err;\n use rustc_hir as hir;\n use rustc_hir::itemlikevisit::ItemLikeVisitor;\n use rustc_infer::infer::TyCtxtInferExt;\n-use rustc_infer::traits;\n+use rustc_trait_selection::traits;\n \n pub fn check(tcx: TyCtxt<'_>) {\n     let mut orphan = OrphanChecker { tcx };"}, {"sha": "43cf65d81516cb15575e0f4d602e6aa1aee53555", "filename": "src/librustc_typeck/collect/type_of.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_typeck%2Fcollect%2Ftype_of.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_typeck%2Fcollect%2Ftype_of.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcollect%2Ftype_of.rs?ref=1fcdc52f707015195b0706ea86ddbe2f749019de", "patch": "@@ -11,9 +11,9 @@ use rustc_hir::def_id::DefId;\n use rustc_hir::intravisit;\n use rustc_hir::intravisit::Visitor;\n use rustc_hir::Node;\n-use rustc_infer::traits;\n use rustc_span::symbol::{sym, Ident};\n use rustc_span::{Span, DUMMY_SP};\n+use rustc_trait_selection::traits;\n \n use super::ItemCtxt;\n use super::{bad_placeholder_type, is_suggestable_infer_ty};"}, {"sha": "4e7985dd98812145006941e19fa91c7182230d86", "filename": "src/librustc_typeck/lib.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_typeck%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_typeck%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Flib.rs?ref=1fcdc52f707015195b0706ea86ddbe2f749019de", "patch": "@@ -101,9 +101,13 @@ use rustc_hir as hir;\n use rustc_hir::def_id::{DefId, LOCAL_CRATE};\n use rustc_hir::Node;\n use rustc_infer::infer::{InferOk, TyCtxtInferExt};\n-use rustc_infer::traits::{ObligationCause, ObligationCauseCode, TraitEngine, TraitEngineExt};\n+use rustc_infer::traits::TraitEngineExt as _;\n use rustc_span::{Span, DUMMY_SP};\n use rustc_target::spec::abi::Abi;\n+use rustc_trait_selection::traits::error_reporting::InferCtxtExt as _;\n+use rustc_trait_selection::traits::{\n+    ObligationCause, ObligationCauseCode, TraitEngine, TraitEngineExt as _,\n+};\n \n use std::iter;\n "}, {"sha": "4350b3dda97cef13ea5c603b0b16b6ca1e0bfe97", "filename": "src/librustc_typeck/mem_categorization.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_typeck%2Fmem_categorization.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustc_typeck%2Fmem_categorization.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fmem_categorization.rs?ref=1fcdc52f707015195b0706ea86ddbe2f749019de", "patch": "@@ -59,6 +59,7 @@ use rustc_hir::def_id::DefId;\n use rustc_hir::PatKind;\n use rustc_infer::infer::InferCtxt;\n use rustc_span::Span;\n+use rustc_trait_selection::infer::InferCtxtExt;\n \n #[derive(Clone, Debug)]\n pub enum PlaceBase {"}, {"sha": "c85b21a55007f1e0a72444cd9c39f5e8d1de44e0", "filename": "src/librustdoc/clean/auto_trait.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustdoc%2Fclean%2Fauto_trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustdoc%2Fclean%2Fauto_trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fauto_trait.rs?ref=1fcdc52f707015195b0706ea86ddbe2f749019de", "patch": "@@ -1,7 +1,7 @@\n use rustc::ty::{self, Region, RegionVid, TypeFoldable};\n use rustc_data_structures::fx::FxHashSet;\n use rustc_hir as hir;\n-use rustc_infer::traits::auto_trait::{self, AutoTraitResult};\n+use rustc_trait_selection::traits::auto_trait::{self, AutoTraitResult};\n \n use std::fmt::Debug;\n "}, {"sha": "e66f8697717940aaed8cd5d7811c7d8d603b2ad3", "filename": "src/librustdoc/clean/blanket_impl.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustdoc%2Fclean%2Fblanket_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustdoc%2Fclean%2Fblanket_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fblanket_impl.rs?ref=1fcdc52f707015195b0706ea86ddbe2f749019de", "patch": "@@ -1,3 +1,4 @@\n+use crate::rustc_trait_selection::traits::query::evaluate_obligation::InferCtxtExt;\n use rustc::ty::subst::Subst;\n use rustc::ty::{ToPredicate, WithConstness};\n use rustc_hir as hir;"}, {"sha": "2e90d6082bac92fedaec512dbaa5a5ccfbe48864", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fcdc52f707015195b0706ea86ddbe2f749019de/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=1fcdc52f707015195b0706ea86ddbe2f749019de", "patch": "@@ -38,6 +38,7 @@ extern crate rustc_resolve;\n extern crate rustc_session;\n extern crate rustc_span as rustc_span;\n extern crate rustc_target;\n+extern crate rustc_trait_selection;\n extern crate rustc_typeck;\n extern crate test as testing;\n #[macro_use]"}]}