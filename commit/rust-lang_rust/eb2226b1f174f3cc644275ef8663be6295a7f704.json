{"sha": "eb2226b1f174f3cc644275ef8663be6295a7f704", "node_id": "MDY6Q29tbWl0NzI0NzEyOmViMjIyNmIxZjE3NGYzY2M2NDQyNzVlZjg2NjNiZTYyOTVhN2Y3MDQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-08-12T04:30:41Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-08-12T04:30:41Z"}, "message": "Auto merge of #85296 - bjorn3:plugin_cleanup, r=petrochenkov\n\nPlugin interface cleanup\n\nThe first commit performs two uncontroversial cleanups. The second commit removes `#[plugin_registrar]` and instead requires you to export a `__rustc_plugin_registrar` function, this will require a change to servo's script_plugins (cc `@jdm)`", "tree": {"sha": "a4c1e2eca23c77daca0f86813dfa158eed80e1ac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a4c1e2eca23c77daca0f86813dfa158eed80e1ac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eb2226b1f174f3cc644275ef8663be6295a7f704", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eb2226b1f174f3cc644275ef8663be6295a7f704", "html_url": "https://github.com/rust-lang/rust/commit/eb2226b1f174f3cc644275ef8663be6295a7f704", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eb2226b1f174f3cc644275ef8663be6295a7f704/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "25d3e14da77f755ef858b976a25c7e856b62b42a", "url": "https://api.github.com/repos/rust-lang/rust/commits/25d3e14da77f755ef858b976a25c7e856b62b42a", "html_url": "https://github.com/rust-lang/rust/commit/25d3e14da77f755ef858b976a25c7e856b62b42a"}, {"sha": "a501308ec1601c2b1d50230a061fb2700940727d", "url": "https://api.github.com/repos/rust-lang/rust/commits/a501308ec1601c2b1d50230a061fb2700940727d", "html_url": "https://github.com/rust-lang/rust/commit/a501308ec1601c2b1d50230a061fb2700940727d"}], "stats": {"total": 843, "additions": 287, "deletions": 556}, "files": [{"sha": "6dc459ea40200e18edc9b0cefd352157c41bf126", "filename": "compiler/rustc_ast_passes/src/feature_gate.rs", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/eb2226b1f174f3cc644275ef8663be6295a7f704/compiler%2Frustc_ast_passes%2Fsrc%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb2226b1f174f3cc644275ef8663be6295a7f704/compiler%2Frustc_ast_passes%2Fsrc%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_passes%2Fsrc%2Ffeature_gate.rs?ref=eb2226b1f174f3cc644275ef8663be6295a7f704", "patch": "@@ -375,14 +375,6 @@ impl<'a> Visitor<'a> for PostExpansionVisitor<'a> {\n             }\n \n             ast::ItemKind::Fn(..) => {\n-                if self.sess.contains_name(&i.attrs[..], sym::plugin_registrar) {\n-                    gate_feature_post!(\n-                        &self,\n-                        plugin_registrar,\n-                        i.span,\n-                        \"compiler plugins are experimental and possibly buggy\"\n-                    );\n-                }\n                 if self.sess.contains_name(&i.attrs[..], sym::start) {\n                     gate_feature_post!(\n                         &self,"}, {"sha": "4a7090b31b4a9d8bc99247d24866a229563de40a", "filename": "compiler/rustc_codegen_ssa/src/back/symbol_export.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/eb2226b1f174f3cc644275ef8663be6295a7f704/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Fsymbol_export.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb2226b1f174f3cc644275ef8663be6295a7f704/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Fsymbol_export.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Fsymbol_export.rs?ref=eb2226b1f174f3cc644275ef8663be6295a7f704", "patch": "@@ -137,10 +137,6 @@ fn reachable_non_generics_provider(tcx: TyCtxt<'_>, cnum: CrateNum) -> DefIdMap<\n         reachable_non_generics.insert(id.to_def_id(), SymbolExportLevel::C);\n     }\n \n-    if let Some(id) = tcx.plugin_registrar_fn(()) {\n-        reachable_non_generics.insert(id.to_def_id(), SymbolExportLevel::C);\n-    }\n-\n     reachable_non_generics\n }\n "}, {"sha": "73b29d65e9132b9cbeb4cfbe12b37afb20774883", "filename": "compiler/rustc_feature/src/active.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/eb2226b1f174f3cc644275ef8663be6295a7f704/compiler%2Frustc_feature%2Fsrc%2Factive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb2226b1f174f3cc644275ef8663be6295a7f704/compiler%2Frustc_feature%2Fsrc%2Factive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_feature%2Fsrc%2Factive.rs?ref=eb2226b1f174f3cc644275ef8663be6295a7f704", "patch": "@@ -281,9 +281,6 @@ declare_features! (\n     // feature-group-start: actual feature gates\n     // -------------------------------------------------------------------------\n \n-    /// Allows using `#[plugin_registrar]` on functions.\n-    (active, plugin_registrar, \"1.0.0\", Some(29597), None),\n-\n     /// Allows using `#![plugin(myplugin)]`.\n     (active, plugin, \"1.0.0\", Some(29597), None),\n "}, {"sha": "5729384c0da25bec41570151474a79667e6595af", "filename": "compiler/rustc_feature/src/builtin_attrs.rs", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/eb2226b1f174f3cc644275ef8663be6295a7f704/compiler%2Frustc_feature%2Fsrc%2Fbuiltin_attrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb2226b1f174f3cc644275ef8663be6295a7f704/compiler%2Frustc_feature%2Fsrc%2Fbuiltin_attrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_feature%2Fsrc%2Fbuiltin_attrs.rs?ref=eb2226b1f174f3cc644275ef8663be6295a7f704", "patch": "@@ -291,18 +291,6 @@ pub const BUILTIN_ATTRIBUTES: &[BuiltinAttribute] = &[\n     ),\n \n     // Plugins:\n-    (\n-        sym::plugin_registrar, Normal, template!(Word),\n-        Gated(\n-            Stability::Deprecated(\n-                \"https://github.com/rust-lang/rust/pull/64675\",\n-                Some(\"may be removed in a future compiler version\"),\n-            ),\n-            sym::plugin_registrar,\n-            \"compiler plugins are deprecated\",\n-            cfg_fn!(plugin_registrar)\n-        )\n-    ),\n     (\n         sym::plugin, CrateLevel, template!(List: \"name\"),\n         Gated("}, {"sha": "5cadbd9e5cf7198bf87c908d4de5e2dff56818fa", "filename": "compiler/rustc_feature/src/removed.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/eb2226b1f174f3cc644275ef8663be6295a7f704/compiler%2Frustc_feature%2Fsrc%2Fremoved.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb2226b1f174f3cc644275ef8663be6295a7f704/compiler%2Frustc_feature%2Fsrc%2Fremoved.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_feature%2Fsrc%2Fremoved.rs?ref=eb2226b1f174f3cc644275ef8663be6295a7f704", "patch": "@@ -136,9 +136,12 @@ declare_features! (\n     (removed, main, \"1.53.0\", Some(29634), None, None),\n     (removed, pub_macro_rules, \"1.53.0\", Some(78855), None,\n      Some(\"removed due to being incomplete, in particular it does not work across crates\")),\n-     /// Allows the definition of `const` functions with some advanced features.\n+    /// Allows the definition of `const` functions with some advanced features.\n     (removed, const_fn, \"1.54.0\", Some(57563), None,\n      Some(\"split into finer-grained feature gates\")),\n+    /// Allows using `#[plugin_registrar]` on functions.\n+    (removed, plugin_registrar, \"1.54.0\", Some(29597), None,\n+     Some(\"a __rustc_plugin_registrar symbol must now be defined instead\")),\n \n     /// Allows `#[doc(include = \"some-file\")]`.\n     (removed, external_doc, \"1.54.0\", Some(44732), None,"}, {"sha": "5dc57f6023b767764ff7ea644b4e20c6c56e93be", "filename": "compiler/rustc_interface/src/passes.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/eb2226b1f174f3cc644275ef8663be6295a7f704/compiler%2Frustc_interface%2Fsrc%2Fpasses.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb2226b1f174f3cc644275ef8663be6295a7f704/compiler%2Frustc_interface%2Fsrc%2Fpasses.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_interface%2Fsrc%2Fpasses.rs?ref=eb2226b1f174f3cc644275ef8663be6295a7f704", "patch": "@@ -741,7 +741,6 @@ pub static DEFAULT_QUERY_PROVIDERS: SyncLazy<Providers> = SyncLazy::new(|| {\n     let providers = &mut Providers::default();\n     providers.analysis = analysis;\n     proc_macro_decls::provide(providers);\n-    plugin::build::provide(providers);\n     rustc_middle::hir::provide(providers);\n     mir::provide(providers);\n     mir_build::provide(providers);\n@@ -856,8 +855,6 @@ fn analysis(tcx: TyCtxt<'_>, (): ()) -> Result<()> {\n             {\n                 entry_point = sess.time(\"looking_for_entry_point\", || tcx.entry_fn(()));\n \n-                sess.time(\"looking_for_plugin_registrar\", || tcx.ensure().plugin_registrar_fn(()));\n-\n                 sess.time(\"looking_for_derive_registrar\", || {\n                     tcx.ensure().proc_macro_decls_static(())\n                 });"}, {"sha": "8d1bf6f55df09b0c54356babeb4c7cc4f1ea7b0a", "filename": "compiler/rustc_metadata/src/locator.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/eb2226b1f174f3cc644275ef8663be6295a7f704/compiler%2Frustc_metadata%2Fsrc%2Flocator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb2226b1f174f3cc644275ef8663be6295a7f704/compiler%2Frustc_metadata%2Fsrc%2Flocator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Flocator.rs?ref=eb2226b1f174f3cc644275ef8663be6295a7f704", "patch": "@@ -226,7 +226,7 @@ use rustc_session::config::{self, CrateType};\n use rustc_session::filesearch::{FileDoesntMatch, FileMatches, FileSearch};\n use rustc_session::search_paths::PathKind;\n use rustc_session::utils::CanonicalizedPath;\n-use rustc_session::{Session, StableCrateId};\n+use rustc_session::Session;\n use rustc_span::symbol::{sym, Symbol};\n use rustc_span::Span;\n use rustc_target::spec::{Target, TargetTriple};\n@@ -787,7 +787,7 @@ pub fn find_plugin_registrar(\n     metadata_loader: &dyn MetadataLoader,\n     span: Span,\n     name: Symbol,\n-) -> (PathBuf, StableCrateId) {\n+) -> PathBuf {\n     match find_plugin_registrar_impl(sess, metadata_loader, name) {\n         Ok(res) => res,\n         // `core` is always available if we got as far as loading plugins.\n@@ -799,7 +799,7 @@ fn find_plugin_registrar_impl<'a>(\n     sess: &'a Session,\n     metadata_loader: &dyn MetadataLoader,\n     name: Symbol,\n-) -> Result<(PathBuf, StableCrateId), CrateError> {\n+) -> Result<PathBuf, CrateError> {\n     info!(\"find plugin registrar `{}`\", name);\n     let mut locator = CrateLocator::new(\n         sess,\n@@ -816,7 +816,7 @@ fn find_plugin_registrar_impl<'a>(\n \n     match locator.maybe_load_library_crate()? {\n         Some(library) => match library.source.dylib {\n-            Some(dylib) => Ok((dylib.0, library.metadata.get_root().stable_crate_id())),\n+            Some(dylib) => Ok(dylib.0),\n             None => Err(CrateError::NonDylibPlugin(name)),\n         },\n         None => Err(locator.into_error()),"}, {"sha": "7c7025ac37a382509377edeac21b57e8998b7db2", "filename": "compiler/rustc_middle/src/query/mod.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/eb2226b1f174f3cc644275ef8663be6295a7f704/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb2226b1f174f3cc644275ef8663be6295a7f704/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs?ref=eb2226b1f174f3cc644275ef8663be6295a7f704", "patch": "@@ -1252,9 +1252,6 @@ rustc_queries! {\n     query entry_fn(_: ()) -> Option<(DefId, EntryFnType)> {\n         desc { \"looking up the entry function of a crate\" }\n     }\n-    query plugin_registrar_fn(_: ()) -> Option<LocalDefId> {\n-        desc { \"looking up the plugin registrar for a crate\" }\n-    }\n     query proc_macro_decls_static(_: ()) -> Option<LocalDefId> {\n         desc { \"looking up the derive registrar for a crate\" }\n     }"}, {"sha": "b95c4a720195a4daabdf7627aae16c74e37fb4c9", "filename": "compiler/rustc_plugin_impl/src/build.rs", "status": "removed", "additions": 0, "deletions": 57, "changes": 57, "blob_url": "https://github.com/rust-lang/rust/blob/25d3e14da77f755ef858b976a25c7e856b62b42a/compiler%2Frustc_plugin_impl%2Fsrc%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25d3e14da77f755ef858b976a25c7e856b62b42a/compiler%2Frustc_plugin_impl%2Fsrc%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_plugin_impl%2Fsrc%2Fbuild.rs?ref=25d3e14da77f755ef858b976a25c7e856b62b42a", "patch": "@@ -1,57 +0,0 @@\n-//! Used by `rustc` when compiling a plugin crate.\n-\n-use rustc_hir as hir;\n-use rustc_hir::def_id::LocalDefId;\n-use rustc_hir::itemlikevisit::ItemLikeVisitor;\n-use rustc_middle::ty::query::Providers;\n-use rustc_middle::ty::TyCtxt;\n-use rustc_span::symbol::sym;\n-use rustc_span::Span;\n-\n-struct RegistrarFinder<'tcx> {\n-    tcx: TyCtxt<'tcx>,\n-    registrars: Vec<(LocalDefId, Span)>,\n-}\n-\n-impl<'v, 'tcx> ItemLikeVisitor<'v> for RegistrarFinder<'tcx> {\n-    fn visit_item(&mut self, item: &hir::Item<'_>) {\n-        if let hir::ItemKind::Fn(..) = item.kind {\n-            let attrs = self.tcx.hir().attrs(item.hir_id());\n-            if self.tcx.sess.contains_name(attrs, sym::plugin_registrar) {\n-                self.registrars.push((item.def_id, item.span));\n-            }\n-        }\n-    }\n-\n-    fn visit_trait_item(&mut self, _trait_item: &hir::TraitItem<'_>) {}\n-\n-    fn visit_impl_item(&mut self, _impl_item: &hir::ImplItem<'_>) {}\n-\n-    fn visit_foreign_item(&mut self, _foreign_item: &hir::ForeignItem<'_>) {}\n-}\n-\n-/// Finds the function marked with `#[plugin_registrar]`, if any.\n-fn plugin_registrar_fn(tcx: TyCtxt<'_>, (): ()) -> Option<LocalDefId> {\n-    let mut finder = RegistrarFinder { tcx, registrars: Vec::new() };\n-    tcx.hir().krate().visit_all_item_likes(&mut finder);\n-\n-    let (def_id, span) = finder.registrars.pop()?;\n-\n-    if !finder.registrars.is_empty() {\n-        let diagnostic = tcx.sess.diagnostic();\n-        let mut e = diagnostic.struct_err(\"multiple plugin registration functions found\");\n-        e.span_note(span, \"one is here\");\n-        for &(_, span) in &finder.registrars {\n-            e.span_note(span, \"one is here\");\n-        }\n-        e.emit();\n-        diagnostic.abort_if_errors();\n-        unreachable!();\n-    }\n-\n-    Some(def_id)\n-}\n-\n-pub fn provide(providers: &mut Providers) {\n-    *providers = Providers { plugin_registrar_fn, ..*providers };\n-}"}, {"sha": "a1e13a1abb6197983624aa7acf7509d319ea8533", "filename": "compiler/rustc_plugin_impl/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/eb2226b1f174f3cc644275ef8663be6295a7f704/compiler%2Frustc_plugin_impl%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb2226b1f174f3cc644275ef8663be6295a7f704/compiler%2Frustc_plugin_impl%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_plugin_impl%2Fsrc%2Flib.rs?ref=eb2226b1f174f3cc644275ef8663be6295a7f704", "patch": "@@ -12,7 +12,6 @@\n \n use rustc_lint::LintStore;\n \n-pub mod build;\n pub mod load;\n \n /// Structure used to register plugins."}, {"sha": "5da02e3a4899fe442fe9c5b86aac4d1415b0c807", "filename": "compiler/rustc_plugin_impl/src/load.rs", "status": "modified", "additions": 5, "deletions": 12, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/eb2226b1f174f3cc644275ef8663be6295a7f704/compiler%2Frustc_plugin_impl%2Fsrc%2Fload.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb2226b1f174f3cc644275ef8663be6295a7f704/compiler%2Frustc_plugin_impl%2Fsrc%2Fload.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_plugin_impl%2Fsrc%2Fload.rs?ref=eb2226b1f174f3cc644275ef8663be6295a7f704", "patch": "@@ -55,20 +55,13 @@ fn load_plugin(\n     metadata_loader: &dyn MetadataLoader,\n     ident: Ident,\n ) {\n-    let (lib, disambiguator) =\n-        locator::find_plugin_registrar(sess, metadata_loader, ident.span, ident.name);\n-    let symbol = sess.generate_plugin_registrar_symbol(disambiguator);\n-    let fun = dylink_registrar(sess, ident.span, lib, symbol);\n+    let lib = locator::find_plugin_registrar(sess, metadata_loader, ident.span, ident.name);\n+    let fun = dylink_registrar(sess, ident.span, lib);\n     plugins.push(fun);\n }\n \n // Dynamically link a registrar function into the compiler process.\n-fn dylink_registrar(\n-    sess: &Session,\n-    span: Span,\n-    path: PathBuf,\n-    symbol: String,\n-) -> PluginRegistrarFn {\n+fn dylink_registrar(sess: &Session, span: Span, path: PathBuf) -> PluginRegistrarFn {\n     use rustc_metadata::dynamic_lib::DynamicLibrary;\n \n     // Make sure the path contains a / or the linker will search for it.\n@@ -83,15 +76,15 @@ fn dylink_registrar(\n     };\n \n     unsafe {\n-        let registrar = match lib.symbol(&symbol) {\n+        let registrar = match lib.symbol(\"__rustc_plugin_registrar\") {\n             Ok(registrar) => mem::transmute::<*mut u8, PluginRegistrarFn>(registrar),\n             // again fatal if we can't register macros\n             Err(err) => sess.span_fatal(span, &err),\n         };\n \n         // Intentionally leak the dynamic library. We can't ever unload it\n         // since the library can make things that will live arbitrarily long\n-        // (e.g., an @-box cycle or a thread).\n+        // (e.g., an Rc cycle or a thread).\n         mem::forget(lib);\n \n         registrar"}, {"sha": "0b1a99922d6d74fdb3e42af0bddc1315b4925c30", "filename": "compiler/rustc_session/src/session.rs", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/eb2226b1f174f3cc644275ef8663be6295a7f704/compiler%2Frustc_session%2Fsrc%2Fsession.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb2226b1f174f3cc644275ef8663be6295a7f704/compiler%2Frustc_session%2Fsrc%2Fsession.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Fsession.rs?ref=eb2226b1f174f3cc644275ef8663be6295a7f704", "patch": "@@ -792,12 +792,6 @@ impl Session {\n             )\n     }\n \n-    /// Returns the symbol name for the registrar function,\n-    /// given the crate `Svh` and the function `DefIndex`.\n-    pub fn generate_plugin_registrar_symbol(&self, stable_crate_id: StableCrateId) -> String {\n-        format!(\"__rustc_plugin_registrar_{:08x}__\", stable_crate_id.to_u64())\n-    }\n-\n     pub fn generate_proc_macro_decls_symbol(&self, stable_crate_id: StableCrateId) -> String {\n         format!(\"__rustc_proc_macro_decls_{:08x}__\", stable_crate_id.to_u64())\n     }"}, {"sha": "850d44eb339c72e7c737297f76166317abdae290", "filename": "compiler/rustc_symbol_mangling/src/lib.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/eb2226b1f174f3cc644275ef8663be6295a7f704/compiler%2Frustc_symbol_mangling%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb2226b1f174f3cc644275ef8663be6295a7f704/compiler%2Frustc_symbol_mangling%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_symbol_mangling%2Fsrc%2Flib.rs?ref=eb2226b1f174f3cc644275ef8663be6295a7f704", "patch": "@@ -164,10 +164,6 @@ fn compute_symbol_name(\n \n     // FIXME(eddyb) Precompute a custom symbol name based on attributes.\n     let is_foreign = if let Some(def_id) = def_id.as_local() {\n-        if tcx.plugin_registrar_fn(()) == Some(def_id) {\n-            let stable_crate_id = tcx.sess.local_stable_crate_id();\n-            return tcx.sess.generate_plugin_registrar_symbol(stable_crate_id);\n-        }\n         if tcx.proc_macro_decls_static(()) == Some(def_id) {\n             let stable_crate_id = tcx.sess.local_stable_crate_id();\n             return tcx.sess.generate_proc_macro_decls_symbol(stable_crate_id);"}, {"sha": "bf5dd81d735af768be0994f50fa6fb6193be9569", "filename": "src/doc/unstable-book/src/language-features/plugin-registrar.md", "status": "removed", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/25d3e14da77f755ef858b976a25c7e856b62b42a/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fplugin-registrar.md", "raw_url": "https://github.com/rust-lang/rust/raw/25d3e14da77f755ef858b976a25c7e856b62b42a/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fplugin-registrar.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fplugin-registrar.md?ref=25d3e14da77f755ef858b976a25c7e856b62b42a", "patch": "@@ -1,13 +0,0 @@\n-# `plugin_registrar`\n-\n-The tracking issue for this feature is: [#29597]\n-\n-[#29597]: https://github.com/rust-lang/rust/issues/29597\n-\n-This feature is part of \"compiler plugins.\" It will often be used with the\n-[`plugin`] and `rustc_private` features as well. For more details, see\n-their docs.\n-\n-[`plugin`]: plugin.md\n-\n-------------------------"}, {"sha": "040f46f8b7c771160f9cc91df0e3fb12a922b166", "filename": "src/doc/unstable-book/src/language-features/plugin.md", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/eb2226b1f174f3cc644275ef8663be6295a7f704/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fplugin.md", "raw_url": "https://github.com/rust-lang/rust/raw/eb2226b1f174f3cc644275ef8663be6295a7f704/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fplugin.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fplugin.md?ref=eb2226b1f174f3cc644275ef8663be6295a7f704", "patch": "@@ -6,9 +6,7 @@ The tracking issue for this feature is: [#29597]\n \n \n This feature is part of \"compiler plugins.\" It will often be used with the\n-[`plugin_registrar`] and `rustc_private` features.\n-\n-[`plugin_registrar`]: plugin-registrar.md\n+`rustc_private` feature.\n \n ------------------------\n \n@@ -39,7 +37,6 @@ additional checks for code style, safety, etc. Now let's write a plugin\n that warns about any item named `lintme`.\n \n ```rust,ignore (requires-stage-2)\n-#![feature(plugin_registrar)]\n #![feature(box_syntax, rustc_private)]\n \n extern crate rustc_ast;\n@@ -68,8 +65,8 @@ impl EarlyLintPass for Pass {\n     }\n }\n \n-#[plugin_registrar]\n-pub fn plugin_registrar(reg: &mut Registry) {\n+#[no_mangle]\n+fn __rustc_plugin_registrar(reg: &mut Registry) {\n     reg.lint_store.register_lints(&[&TEST_LINT]);\n     reg.lint_store.register_early_pass(|| box Pass);\n }"}, {"sha": "c24cdc97aa5004f579345ee055bdfc48e011e1b4", "filename": "src/test/ui-fulldeps/auxiliary/empty-plugin.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/eb2226b1f174f3cc644275ef8663be6295a7f704/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Fempty-plugin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb2226b1f174f3cc644275ef8663be6295a7f704/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Fempty-plugin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Fempty-plugin.rs?ref=eb2226b1f174f3cc644275ef8663be6295a7f704", "patch": "@@ -1,10 +1,9 @@\n // force-host\n \n-#![feature(plugin_registrar)]\n #![feature(rustc_private)]\n \n extern crate rustc_driver;\n use rustc_driver::plugin::Registry;\n \n-#[plugin_registrar]\n-pub fn plugin_registrar(_: &mut Registry) {}\n+#[no_mangle]\n+fn __rustc_plugin_registrar(_: &mut Registry) {}"}, {"sha": "0b68d5e04f7a208b262f52e7819f33e38fe548e7", "filename": "src/test/ui-fulldeps/auxiliary/issue-40001-plugin.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/eb2226b1f174f3cc644275ef8663be6295a7f704/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Fissue-40001-plugin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb2226b1f174f3cc644275ef8663be6295a7f704/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Fissue-40001-plugin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Fissue-40001-plugin.rs?ref=eb2226b1f174f3cc644275ef8663be6295a7f704", "patch": "@@ -1,10 +1,9 @@\n-#![feature(box_syntax, plugin, plugin_registrar, rustc_private)]\n+#![feature(box_syntax, plugin, rustc_private)]\n #![crate_type = \"dylib\"]\n \n extern crate rustc_ast_pretty;\n extern crate rustc_driver;\n extern crate rustc_hir;\n-#[macro_use]\n extern crate rustc_lint;\n #[macro_use]\n extern crate rustc_session;\n@@ -16,11 +15,11 @@ use rustc_driver::plugin::Registry;\n use rustc_hir as hir;\n use rustc_hir::intravisit;\n use rustc_hir::Node;\n-use rustc_lint::{LateContext, LateLintPass, LintArray, LintContext, LintPass};\n+use rustc_lint::{LateContext, LateLintPass, LintContext};\n use rustc_span::source_map;\n \n-#[plugin_registrar]\n-pub fn plugin_registrar(reg: &mut Registry) {\n+#[no_mangle]\n+fn __rustc_plugin_registrar(reg: &mut Registry) {\n     reg.lint_store.register_lints(&[&MISSING_ALLOWED_ATTR]);\n     reg.lint_store.register_late_pass(|| box MissingAllowedAttrPass);\n }"}, {"sha": "0015a826126ff5776117f4511e1c5c12a00dcd70", "filename": "src/test/ui-fulldeps/auxiliary/lint-for-crate-rpass.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/eb2226b1f174f3cc644275ef8663be6295a7f704/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flint-for-crate-rpass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb2226b1f174f3cc644275ef8663be6295a7f704/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flint-for-crate-rpass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flint-for-crate-rpass.rs?ref=eb2226b1f174f3cc644275ef8663be6295a7f704", "patch": "@@ -1,6 +1,6 @@\n // force-host\n \n-#![feature(plugin_registrar, rustc_private)]\n+#![feature(rustc_private)]\n #![feature(box_syntax)]\n \n extern crate rustc_driver;\n@@ -64,8 +64,8 @@ fake_lint_pass! {\n     Symbol::intern(\"crate_grey\"), Symbol::intern(\"crate_green\")\n }\n \n-#[plugin_registrar]\n-pub fn plugin_registrar(reg: &mut Registry) {\n+#[no_mangle]\n+fn __rustc_plugin_registrar(reg: &mut Registry) {\n     reg.lint_store.register_lints(&[\n         &CRATE_NOT_OKAY,\n         &CRATE_NOT_RED,"}, {"sha": "87c90b53648c79901be67c28a50950128554e5c4", "filename": "src/test/ui-fulldeps/auxiliary/lint-for-crate.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/eb2226b1f174f3cc644275ef8663be6295a7f704/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flint-for-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb2226b1f174f3cc644275ef8663be6295a7f704/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flint-for-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flint-for-crate.rs?ref=eb2226b1f174f3cc644275ef8663be6295a7f704", "patch": "@@ -1,6 +1,6 @@\n // force-host\n \n-#![feature(plugin_registrar, rustc_private)]\n+#![feature(rustc_private)]\n #![feature(box_syntax)]\n \n extern crate rustc_driver;\n@@ -38,8 +38,8 @@ impl<'tcx> LateLintPass<'tcx> for Pass {\n     }\n }\n \n-#[plugin_registrar]\n-pub fn plugin_registrar(reg: &mut Registry) {\n+#[no_mangle]\n+fn __rustc_plugin_registrar(reg: &mut Registry) {\n     reg.lint_store.register_lints(&[&CRATE_NOT_OKAY]);\n     reg.lint_store.register_late_pass(|| box Pass);\n }"}, {"sha": "f6ae560411b8e8f4cba0b29c39e8ba93444ffe97", "filename": "src/test/ui-fulldeps/auxiliary/lint-group-plugin-test.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/eb2226b1f174f3cc644275ef8663be6295a7f704/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flint-group-plugin-test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb2226b1f174f3cc644275ef8663be6295a7f704/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flint-group-plugin-test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flint-group-plugin-test.rs?ref=eb2226b1f174f3cc644275ef8663be6295a7f704", "patch": "@@ -1,6 +1,5 @@\n // force-host\n \n-#![feature(plugin_registrar)]\n #![feature(box_syntax, rustc_private)]\n \n // Load rustc as a plugin to get macros.\n@@ -34,8 +33,8 @@ impl<'tcx> LateLintPass<'tcx> for Pass {\n     }\n }\n \n-#[plugin_registrar]\n-pub fn plugin_registrar(reg: &mut Registry) {\n+#[no_mangle]\n+fn __rustc_plugin_registrar(reg: &mut Registry) {\n     reg.lint_store.register_lints(&[&TEST_LINT, &PLEASE_LINT]);\n     reg.lint_store.register_late_pass(|| box Pass);\n     reg.lint_store.register_group("}, {"sha": "32326bc8a5e5083ede7cefb6dcab661529106857", "filename": "src/test/ui-fulldeps/auxiliary/lint-plugin-test.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/eb2226b1f174f3cc644275ef8663be6295a7f704/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flint-plugin-test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb2226b1f174f3cc644275ef8663be6295a7f704/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flint-plugin-test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flint-plugin-test.rs?ref=eb2226b1f174f3cc644275ef8663be6295a7f704", "patch": "@@ -1,6 +1,5 @@\n // force-host\n \n-#![feature(plugin_registrar)]\n #![feature(box_syntax, rustc_private)]\n \n extern crate rustc_ast;\n@@ -29,8 +28,8 @@ impl EarlyLintPass for Pass {\n     }\n }\n \n-#[plugin_registrar]\n-pub fn plugin_registrar(reg: &mut Registry) {\n+#[no_mangle]\n+fn __rustc_plugin_registrar(reg: &mut Registry) {\n     reg.lint_store.register_lints(&[&TEST_LINT]);\n     reg.lint_store.register_early_pass(|| box Pass);\n }"}, {"sha": "42c1c851de8231105e1f7dd3876bbe11aeae6ca4", "filename": "src/test/ui-fulldeps/auxiliary/lint-tool-test.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/eb2226b1f174f3cc644275ef8663be6295a7f704/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flint-tool-test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb2226b1f174f3cc644275ef8663be6295a7f704/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flint-tool-test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flint-tool-test.rs?ref=eb2226b1f174f3cc644275ef8663be6295a7f704", "patch": "@@ -1,4 +1,3 @@\n-#![feature(plugin_registrar)]\n #![feature(box_syntax, rustc_private)]\n \n extern crate rustc_ast;\n@@ -44,8 +43,8 @@ impl EarlyLintPass for Pass {\n     }\n }\n \n-#[plugin_registrar]\n-pub fn plugin_registrar(reg: &mut Registry) {\n+#[no_mangle]\n+fn __rustc_plugin_registrar(reg: &mut Registry) {\n     reg.lint_store.register_lints(&[&TEST_RUSTC_TOOL_LINT, &TEST_LINT, &TEST_GROUP]);\n     reg.lint_store.register_early_pass(|| box Pass);\n     reg.lint_store.register_group("}, {"sha": "9b075c1a5b954e5be7ba965b8882153c64136778", "filename": "src/test/ui-fulldeps/auxiliary/lto-syntax-extension-plugin.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/eb2226b1f174f3cc644275ef8663be6295a7f704/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flto-syntax-extension-plugin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb2226b1f174f3cc644275ef8663be6295a7f704/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flto-syntax-extension-plugin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flto-syntax-extension-plugin.rs?ref=eb2226b1f174f3cc644275ef8663be6295a7f704", "patch": "@@ -1,12 +1,11 @@\n // force-host\n \n-#![feature(plugin_registrar)]\n #![feature(rustc_private)]\n \n extern crate rustc_middle;\n extern crate rustc_driver;\n \n use rustc_driver::plugin::Registry;\n \n-#[plugin_registrar]\n-pub fn plugin_registrar(_reg: &mut Registry) {}\n+#[no_mangle]\n+fn __rustc_plugin_registrar(_reg: &mut Registry) {}"}, {"sha": "fd6e9e20f03efd91e30148e35a5dea0217cab661", "filename": "src/test/ui-fulldeps/auxiliary/multiple-plugins-1.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/eb2226b1f174f3cc644275ef8663be6295a7f704/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Fmultiple-plugins-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb2226b1f174f3cc644275ef8663be6295a7f704/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Fmultiple-plugins-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Fmultiple-plugins-1.rs?ref=eb2226b1f174f3cc644275ef8663be6295a7f704", "patch": "@@ -0,0 +1,10 @@\n+#![crate_type = \"dylib\"]\n+#![feature(rustc_private)]\n+\n+extern crate rustc_middle;\n+extern crate rustc_driver;\n+\n+use rustc_driver::plugin::Registry;\n+\n+#[no_mangle]\n+fn __rustc_plugin_registrar(_: &mut Registry) {}"}, {"sha": "fd6e9e20f03efd91e30148e35a5dea0217cab661", "filename": "src/test/ui-fulldeps/auxiliary/multiple-plugins-2.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/eb2226b1f174f3cc644275ef8663be6295a7f704/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Fmultiple-plugins-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb2226b1f174f3cc644275ef8663be6295a7f704/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Fmultiple-plugins-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Fmultiple-plugins-2.rs?ref=eb2226b1f174f3cc644275ef8663be6295a7f704", "patch": "@@ -0,0 +1,10 @@\n+#![crate_type = \"dylib\"]\n+#![feature(rustc_private)]\n+\n+extern crate rustc_middle;\n+extern crate rustc_driver;\n+\n+use rustc_driver::plugin::Registry;\n+\n+#[no_mangle]\n+fn __rustc_plugin_registrar(_: &mut Registry) {}"}, {"sha": "d0eedf23cafe9661923f7ae9478ba2a5b6a3205a", "filename": "src/test/ui-fulldeps/auxiliary/outlive-expansion-phase.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/eb2226b1f174f3cc644275ef8663be6295a7f704/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Foutlive-expansion-phase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb2226b1f174f3cc644275ef8663be6295a7f704/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Foutlive-expansion-phase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Foutlive-expansion-phase.rs?ref=eb2226b1f174f3cc644275ef8663be6295a7f704", "patch": "@@ -1,6 +1,5 @@\n // force-host\n \n-#![feature(plugin_registrar)]\n #![feature(box_syntax, rustc_private)]\n \n extern crate rustc_middle;\n@@ -18,8 +17,8 @@ impl Drop for Foo {\n     fn drop(&mut self) {}\n }\n \n-#[plugin_registrar]\n-pub fn registrar(_: &mut Registry) {\n+#[no_mangle]\n+fn __rustc_plugin_registrar(_: &mut Registry) {\n     thread_local!(static FOO: RefCell<Option<Box<Any+Send>>> = RefCell::new(None));\n     FOO.with(|s| *s.borrow_mut() = Some(box Foo { foo: 10 } as Box<Any+Send>));\n }"}, {"sha": "3ba73538ecfb6da8d227b65608dec6c1fcaace3f", "filename": "src/test/ui-fulldeps/auxiliary/rlib-crate-test.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/eb2226b1f174f3cc644275ef8663be6295a7f704/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Frlib-crate-test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb2226b1f174f3cc644275ef8663be6295a7f704/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Frlib-crate-test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Frlib-crate-test.rs?ref=eb2226b1f174f3cc644275ef8663be6295a7f704", "patch": "@@ -1,12 +1,12 @@\n // no-prefer-dynamic\n \n #![crate_type = \"rlib\"]\n-#![feature(plugin_registrar, rustc_private)]\n+#![feature(rustc_private)]\n \n extern crate rustc_middle;\n extern crate rustc_driver;\n \n use rustc_driver::plugin::Registry;\n \n-#[plugin_registrar]\n-pub fn plugin_registrar(_: &mut Registry) {}\n+#[no_mangle]\n+fn __rustc_plugin_registrar(_: &mut Registry) {}"}, {"sha": "25d2c8bc1235bc0b94e187adcb3547557bb0d78a", "filename": "src/test/ui-fulldeps/multiple-plugins.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/eb2226b1f174f3cc644275ef8663be6295a7f704/src%2Ftest%2Fui-fulldeps%2Fmultiple-plugins.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb2226b1f174f3cc644275ef8663be6295a7f704/src%2Ftest%2Fui-fulldeps%2Fmultiple-plugins.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fmultiple-plugins.rs?ref=eb2226b1f174f3cc644275ef8663be6295a7f704", "patch": "@@ -0,0 +1,11 @@\n+// run-pass\n+// aux-build:multiple-plugins-1.rs\n+// aux-build:multiple-plugins-2.rs\n+\n+// Check that the plugin registrar of multiple plugins doesn't conflict\n+\n+#![feature(plugin)]\n+#![plugin(multiple_plugins_1)] //~ WARN use of deprecated attribute `plugin`\n+#![plugin(multiple_plugins_2)] //~ WARN use of deprecated attribute `plugin`\n+\n+fn main() {}"}, {"sha": "99151933c4b580479b6a3a894594743e986e4b4c", "filename": "src/test/ui-fulldeps/multiple-plugins.stderr", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/eb2226b1f174f3cc644275ef8663be6295a7f704/src%2Ftest%2Fui-fulldeps%2Fmultiple-plugins.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eb2226b1f174f3cc644275ef8663be6295a7f704/src%2Ftest%2Fui-fulldeps%2Fmultiple-plugins.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fmultiple-plugins.stderr?ref=eb2226b1f174f3cc644275ef8663be6295a7f704", "patch": "@@ -0,0 +1,16 @@\n+warning: use of deprecated attribute `plugin`: compiler plugins are deprecated. See https://github.com/rust-lang/rust/pull/64675\n+  --> $DIR/multiple-plugins.rs:8:1\n+   |\n+LL | #![plugin(multiple_plugins_1)]\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: may be removed in a future compiler version\n+   |\n+   = note: `#[warn(deprecated)]` on by default\n+\n+warning: use of deprecated attribute `plugin`: compiler plugins are deprecated. See https://github.com/rust-lang/rust/pull/64675\n+  --> $DIR/multiple-plugins.rs:9:1\n+   |\n+LL | #![plugin(multiple_plugins_2)]\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: may be removed in a future compiler version\n+\n+warning: 2 warnings emitted\n+"}, {"sha": "80e4aa76b4771e870193027817c6a68c3851f001", "filename": "src/test/ui/feature-gates/feature-gate-plugin_registrar.rs", "status": "removed", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/25d3e14da77f755ef858b976a25c7e856b62b42a/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-plugin_registrar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25d3e14da77f755ef858b976a25c7e856b62b42a/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-plugin_registrar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-plugin_registrar.rs?ref=25d3e14da77f755ef858b976a25c7e856b62b42a", "patch": "@@ -1,11 +0,0 @@\n-// Test that `#[plugin_registrar]` attribute is gated by `plugin_registrar`\n-// feature gate.\n-\n-// the registration function isn't typechecked yet\n-#[plugin_registrar]\n-//~^ ERROR compiler plugins are deprecated\n-//~| WARN use of deprecated attribute `plugin_registrar`: compiler plugins are deprecated\n-pub fn registrar() {}\n-//~^ ERROR compiler plugins are experimental and possibly buggy\n-\n-fn main() {}"}, {"sha": "b3a43f4eef2a9ecaf764cd5c1320e7020369f4ee", "filename": "src/test/ui/feature-gates/feature-gate-plugin_registrar.stderr", "status": "removed", "additions": 0, "deletions": 29, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/25d3e14da77f755ef858b976a25c7e856b62b42a/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-plugin_registrar.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/25d3e14da77f755ef858b976a25c7e856b62b42a/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-plugin_registrar.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-plugin_registrar.stderr?ref=25d3e14da77f755ef858b976a25c7e856b62b42a", "patch": "@@ -1,29 +0,0 @@\n-error[E0658]: compiler plugins are experimental and possibly buggy\n-  --> $DIR/feature-gate-plugin_registrar.rs:8:1\n-   |\n-LL | pub fn registrar() {}\n-   | ^^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = note: see issue #29597 <https://github.com/rust-lang/rust/issues/29597> for more information\n-   = help: add `#![feature(plugin_registrar)]` to the crate attributes to enable\n-\n-error[E0658]: compiler plugins are deprecated\n-  --> $DIR/feature-gate-plugin_registrar.rs:5:1\n-   |\n-LL | #[plugin_registrar]\n-   | ^^^^^^^^^^^^^^^^^^^\n-   |\n-   = note: see issue #29597 <https://github.com/rust-lang/rust/issues/29597> for more information\n-   = help: add `#![feature(plugin_registrar)]` to the crate attributes to enable\n-\n-warning: use of deprecated attribute `plugin_registrar`: compiler plugins are deprecated. See https://github.com/rust-lang/rust/pull/64675\n-  --> $DIR/feature-gate-plugin_registrar.rs:5:1\n-   |\n-LL | #[plugin_registrar]\n-   | ^^^^^^^^^^^^^^^^^^^ help: may be removed in a future compiler version\n-   |\n-   = note: `#[warn(deprecated)]` on by default\n-\n-error: aborting due to 2 previous errors; 1 warning emitted\n-\n-For more information about this error, try `rustc --explain E0658`."}, {"sha": "1e5f3d17a90965c665485aab3c44d7a5d31f2bd9", "filename": "src/test/ui/feature-gates/issue-43106-gating-of-builtin-attrs.rs", "status": "modified", "additions": 2, "deletions": 37, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/eb2226b1f174f3cc644275ef8663be6295a7f704/src%2Ftest%2Fui%2Ffeature-gates%2Fissue-43106-gating-of-builtin-attrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb2226b1f174f3cc644275ef8663be6295a7f704/src%2Ftest%2Fui%2Ffeature-gates%2Fissue-43106-gating-of-builtin-attrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Fissue-43106-gating-of-builtin-attrs.rs?ref=eb2226b1f174f3cc644275ef8663be6295a7f704", "patch": "@@ -35,18 +35,11 @@\n \n // check-pass\n \n-#![feature(test, plugin_registrar)]\n+#![feature(test)]\n #![warn(unused_attributes, unknown_lints)]\n //~^ NOTE the lint level is defined here\n //~| NOTE the lint level is defined here\n \n-// Exception, a gated and deprecated attribute.\n-\n-#![plugin_registrar]\n-//~^ WARN unused attribute\n-//~| WARN use of deprecated attribute\n-//~| HELP may be removed in a future compiler version\n-\n // UNGATED WHITE-LISTED BUILT-IN ATTRIBUTES\n \n #![warn(x5400)] //~ WARN unknown lint: `x5400`\n@@ -90,6 +83,7 @@\n #![crate_id = \"10\"]\n //~^ WARN use of deprecated attribute\n //~| HELP remove this attribute\n+//~| NOTE `#[warn(deprecated)]` on by default\n \n // FIXME(#44232) we should warn that this isn't used.\n #![feature(rust1)]\n@@ -219,35 +213,6 @@ mod macro_export {\n     //~^ WARN unused attribute\n }\n \n-#[plugin_registrar]\n-//~^ WARN unused attribute\n-//~| WARN use of deprecated attribute\n-//~| HELP may be removed in a future compiler version\n-mod plugin_registrar {\n-    mod inner { #![plugin_registrar] }\n-    //~^ WARN unused attribute\n-    //~| WARN use of deprecated attribute\n-    //~| HELP may be removed in a future compiler version\n-    //~| NOTE `#[warn(deprecated)]` on by default\n-\n-    // for `fn f()` case, see gated-plugin_registrar.rs\n-\n-    #[plugin_registrar] struct S;\n-    //~^ WARN unused attribute\n-    //~| WARN use of deprecated attribute\n-    //~| HELP may be removed in a future compiler version\n-\n-    #[plugin_registrar] type T = S;\n-    //~^ WARN unused attribute\n-    //~| WARN use of deprecated attribute\n-    //~| HELP may be removed in a future compiler version\n-\n-    #[plugin_registrar] impl S { }\n-    //~^ WARN unused attribute\n-    //~| WARN use of deprecated attribute\n-    //~| HELP may be removed in a future compiler version\n-}\n-\n // At time of unit test authorship, if compiling without `--test` then\n // non-crate-level #[test] attributes seem to be ignored.\n "}, {"sha": "6f5d73044677a28d46ac669ce914fdddf6c1a1f7", "filename": "src/test/ui/feature-gates/issue-43106-gating-of-builtin-attrs.stderr", "status": "modified", "additions": 197, "deletions": 269, "changes": 466, "blob_url": "https://github.com/rust-lang/rust/blob/eb2226b1f174f3cc644275ef8663be6295a7f704/src%2Ftest%2Fui%2Ffeature-gates%2Fissue-43106-gating-of-builtin-attrs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eb2226b1f174f3cc644275ef8663be6295a7f704/src%2Ftest%2Fui%2Ffeature-gates%2Fissue-43106-gating-of-builtin-attrs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Fissue-43106-gating-of-builtin-attrs.stderr?ref=eb2226b1f174f3cc644275ef8663be6295a7f704", "patch": "@@ -1,5 +1,5 @@\n warning: unknown lint: `x5400`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:52:9\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:45:9\n    |\n LL | #![warn(x5400)]\n    |         ^^^^^\n@@ -11,233 +11,197 @@ LL | #![warn(unused_attributes, unknown_lints)]\n    |                            ^^^^^^^^^^^^^\n \n warning: unknown lint: `x5300`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:53:10\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:46:10\n    |\n LL | #![allow(x5300)]\n    |          ^^^^^\n \n warning: unknown lint: `x5200`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:54:11\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:47:11\n    |\n LL | #![forbid(x5200)]\n    |           ^^^^^\n \n warning: unknown lint: `x5100`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:55:9\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:48:9\n    |\n LL | #![deny(x5100)]\n    |         ^^^^^\n \n warning: unknown lint: `x5400`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:110:8\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:104:8\n    |\n LL | #[warn(x5400)]\n    |        ^^^^^\n \n warning: unknown lint: `x5400`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:113:25\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:107:25\n    |\n LL |     mod inner { #![warn(x5400)] }\n    |                         ^^^^^\n \n warning: unknown lint: `x5400`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:116:12\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:110:12\n    |\n LL |     #[warn(x5400)] fn f() { }\n    |            ^^^^^\n \n warning: unknown lint: `x5400`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:119:12\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:113:12\n    |\n LL |     #[warn(x5400)] struct S;\n    |            ^^^^^\n \n warning: unknown lint: `x5400`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:122:12\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:116:12\n    |\n LL |     #[warn(x5400)] type T = S;\n    |            ^^^^^\n \n warning: unknown lint: `x5400`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:125:12\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:119:12\n    |\n LL |     #[warn(x5400)] impl S { }\n    |            ^^^^^\n \n warning: unknown lint: `x5300`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:129:9\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:123:9\n    |\n LL | #[allow(x5300)]\n    |         ^^^^^\n \n warning: unknown lint: `x5300`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:132:26\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:126:26\n    |\n LL |     mod inner { #![allow(x5300)] }\n    |                          ^^^^^\n \n warning: unknown lint: `x5300`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:135:13\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:129:13\n    |\n LL |     #[allow(x5300)] fn f() { }\n    |             ^^^^^\n \n warning: unknown lint: `x5300`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:138:13\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:132:13\n    |\n LL |     #[allow(x5300)] struct S;\n    |             ^^^^^\n \n warning: unknown lint: `x5300`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:141:13\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:135:13\n    |\n LL |     #[allow(x5300)] type T = S;\n    |             ^^^^^\n \n warning: unknown lint: `x5300`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:144:13\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:138:13\n    |\n LL |     #[allow(x5300)] impl S { }\n    |             ^^^^^\n \n warning: unknown lint: `x5200`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:148:10\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:142:10\n    |\n LL | #[forbid(x5200)]\n    |          ^^^^^\n \n warning: unknown lint: `x5200`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:151:27\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:145:27\n    |\n LL |     mod inner { #![forbid(x5200)] }\n    |                           ^^^^^\n \n warning: unknown lint: `x5200`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:154:14\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:148:14\n    |\n LL |     #[forbid(x5200)] fn f() { }\n    |              ^^^^^\n \n warning: unknown lint: `x5200`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:157:14\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:151:14\n    |\n LL |     #[forbid(x5200)] struct S;\n    |              ^^^^^\n \n warning: unknown lint: `x5200`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:160:14\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:154:14\n    |\n LL |     #[forbid(x5200)] type T = S;\n    |              ^^^^^\n \n warning: unknown lint: `x5200`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:163:14\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:157:14\n    |\n LL |     #[forbid(x5200)] impl S { }\n    |              ^^^^^\n \n warning: unknown lint: `x5100`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:167:8\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:161:8\n    |\n LL | #[deny(x5100)]\n    |        ^^^^^\n \n warning: unknown lint: `x5100`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:170:25\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:164:25\n    |\n LL |     mod inner { #![deny(x5100)] }\n    |                         ^^^^^\n \n warning: unknown lint: `x5100`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:173:12\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:167:12\n    |\n LL |     #[deny(x5100)] fn f() { }\n    |            ^^^^^\n \n warning: unknown lint: `x5100`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:176:12\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:170:12\n    |\n LL |     #[deny(x5100)] struct S;\n    |            ^^^^^\n \n warning: unknown lint: `x5100`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:179:12\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:173:12\n    |\n LL |     #[deny(x5100)] type T = S;\n    |            ^^^^^\n \n warning: unknown lint: `x5100`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:182:12\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:176:12\n    |\n LL |     #[deny(x5100)] impl S { }\n    |            ^^^^^\n \n warning: `#[macro_escape]` is a deprecated synonym for `#[macro_use]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:440:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:405:17\n    |\n LL |     mod inner { #![macro_escape] }\n    |                 ^^^^^^^^^^^^^^^^\n    |\n    = help: try an outer attribute: `#[macro_use]`\n \n warning: `#[macro_escape]` is a deprecated synonym for `#[macro_use]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:437:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:402:1\n    |\n LL | #[macro_escape]\n    | ^^^^^^^^^^^^^^^\n \n-warning: use of deprecated attribute `plugin_registrar`: compiler plugins are deprecated. See https://github.com/rust-lang/rust/pull/64675\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:227:17\n-   |\n-LL |     mod inner { #![plugin_registrar] }\n-   |                 ^^^^^^^^^^^^^^^^^^^^ help: may be removed in a future compiler version\n-   |\n-   = note: `#[warn(deprecated)]` on by default\n-\n-warning: use of deprecated attribute `plugin_registrar`: compiler plugins are deprecated. See https://github.com/rust-lang/rust/pull/64675\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:235:5\n-   |\n-LL |     #[plugin_registrar] struct S;\n-   |     ^^^^^^^^^^^^^^^^^^^ help: may be removed in a future compiler version\n-\n-warning: use of deprecated attribute `plugin_registrar`: compiler plugins are deprecated. See https://github.com/rust-lang/rust/pull/64675\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:240:5\n-   |\n-LL |     #[plugin_registrar] type T = S;\n-   |     ^^^^^^^^^^^^^^^^^^^ help: may be removed in a future compiler version\n-\n-warning: use of deprecated attribute `plugin_registrar`: compiler plugins are deprecated. See https://github.com/rust-lang/rust/pull/64675\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:245:5\n-   |\n-LL |     #[plugin_registrar] impl S { }\n-   |     ^^^^^^^^^^^^^^^^^^^ help: may be removed in a future compiler version\n-\n-warning: use of deprecated attribute `plugin_registrar`: compiler plugins are deprecated. See https://github.com/rust-lang/rust/pull/64675\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:222:1\n-   |\n-LL | #[plugin_registrar]\n-   | ^^^^^^^^^^^^^^^^^^^ help: may be removed in a future compiler version\n-\n-warning: use of deprecated attribute `plugin_registrar`: compiler plugins are deprecated. See https://github.com/rust-lang/rust/pull/64675\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:45:1\n-   |\n-LL | #![plugin_registrar]\n-   | ^^^^^^^^^^^^^^^^^^^^ help: may be removed in a future compiler version\n-\n warning: use of deprecated attribute `crate_id`: no longer used.\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:90:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:83:1\n    |\n LL | #![crate_id = \"10\"]\n    | ^^^^^^^^^^^^^^^^^^^ help: remove this attribute\n+   |\n+   = note: `#[warn(deprecated)]` on by default\n \n warning: use of deprecated attribute `no_start`: no longer used.\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:99:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:93:1\n    |\n LL | #![no_start]\n    | ^^^^^^^^^^^^ help: remove this attribute\n \n warning: attribute should be applied to a function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:332:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:297:1\n    |\n LL |   #[no_mangle]\n    |   ^^^^^^^^^^^^\n@@ -259,7 +223,7 @@ LL | #![warn(unused_attributes, unknown_lints)]\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a function\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:499:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:464:1\n    |\n LL |   #[cold]\n    |   ^^^^^^^\n@@ -276,7 +240,7 @@ LL | | }\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a foreign function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:528:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:493:1\n    |\n LL |   #[link_name = \"1900\"]\n    |   ^^^^^^^^^^^^^^^^^^^^^\n@@ -293,7 +257,7 @@ LL | | }\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:567:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:532:1\n    |\n LL |   #[link_section = \"1800\"]\n    |   ^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -310,95 +274,95 @@ LL | | }\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a function\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:68:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:61:1\n    |\n LL | #![cold]\n    | ^^^^^^^^\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a foreign function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:72:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:65:1\n    |\n LL | #![link_name = \"1900\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:75:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:68:1\n    |\n LL | #![link_section = \"1800\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:337:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:302:17\n    |\n LL |     mod inner { #![no_mangle] }\n    |     ------------^^^^^^^^^^^^^-- not a function or static\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:344:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:309:5\n    |\n LL |     #[no_mangle] struct S;\n    |     ^^^^^^^^^^^^ --------- not a function or static\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:349:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:314:5\n    |\n LL |     #[no_mangle] type T = S;\n    |     ^^^^^^^^^^^^ ----------- not a function or static\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:354:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:319:5\n    |\n LL |     #[no_mangle] impl S { }\n    |     ^^^^^^^^^^^^ ---------- not a function or static\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a function\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:505:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:470:17\n    |\n LL |     mod inner { #![cold] }\n    |     ------------^^^^^^^^-- not a function\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a function\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:512:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:477:5\n    |\n LL |     #[cold] struct S;\n    |     ^^^^^^^ --------- not a function\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a function\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:517:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:482:5\n    |\n LL |     #[cold] type T = S;\n    |     ^^^^^^^ ----------- not a function\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a function\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:522:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:487:5\n    |\n LL |     #[cold] impl S { }\n    |     ^^^^^^^ ---------- not a function\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a foreign function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:534:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:499:5\n    |\n LL |     #[link_name = \"1900\"]\n    |     ^^^^^^^^^^^^^^^^^^^^^\n@@ -408,936 +372,900 @@ LL |     extern \"C\" { }\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n help: try `#[link(name = \"1900\")]` instead\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:534:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:499:5\n    |\n LL |     #[link_name = \"1900\"]\n    |     ^^^^^^^^^^^^^^^^^^^^^\n \n warning: attribute should be applied to a foreign function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:541:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:506:17\n    |\n LL |     mod inner { #![link_name=\"1900\"] }\n    |     ------------^^^^^^^^^^^^^^^^^^^^-- not a foreign function or static\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a foreign function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:546:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:511:5\n    |\n LL |     #[link_name = \"1900\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^ ---------- not a foreign function or static\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a foreign function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:551:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:516:5\n    |\n LL |     #[link_name = \"1900\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^ --------- not a foreign function or static\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a foreign function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:556:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:521:5\n    |\n LL |     #[link_name = \"1900\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^ ----------- not a foreign function or static\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a foreign function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:561:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:526:5\n    |\n LL |     #[link_name = \"1900\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^ ---------- not a foreign function or static\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:573:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:538:17\n    |\n LL |     mod inner { #![link_section=\"1800\"] }\n    |     ------------^^^^^^^^^^^^^^^^^^^^^^^-- not a function or static\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:580:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:545:5\n    |\n LL |     #[link_section = \"1800\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^ --------- not a function or static\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:585:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:550:5\n    |\n LL |     #[link_section = \"1800\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^ ----------- not a function or static\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:590:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:555:5\n    |\n LL |     #[link_section = \"1800\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^ ---------- not a function or static\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: the feature `rust1` has been stable since 1.0.0 and no longer requires an attribute to enable\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:95:12\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:89:12\n    |\n LL | #![feature(rust1)]\n    |            ^^^^^\n    |\n    = note: `#[warn(stable_features)]` on by default\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:45:1\n-   |\n-LL | #![plugin_registrar]\n-   | ^^^^^^^^^^^^^^^^^^^^\n-\n-warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:59:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:52:1\n    |\n LL | #![should_panic]\n    | ^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:60:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:53:1\n    |\n LL | #![ignore]\n    | ^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:66:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:59:1\n    |\n LL | #![proc_macro_derive()]\n    | ^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:190:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:184:5\n    |\n LL |     #[macro_use] fn f() { }\n    |     ^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:193:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:187:5\n    |\n LL |     #[macro_use] struct S;\n    |     ^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:196:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:190:5\n    |\n LL |     #[macro_use] type T = S;\n    |     ^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:199:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:193:5\n    |\n LL |     #[macro_use] impl S { }\n    |     ^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:203:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:197:1\n    |\n LL | #[macro_export]\n    | ^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:206:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:200:17\n    |\n LL |     mod inner { #![macro_export] }\n    |                 ^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:209:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:203:5\n    |\n LL |     #[macro_export] fn f() { }\n    |     ^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:212:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:206:5\n    |\n LL |     #[macro_export] struct S;\n    |     ^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:215:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:209:5\n    |\n LL |     #[macro_export] type T = S;\n    |     ^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:218:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:212:5\n    |\n LL |     #[macro_export] impl S { }\n    |     ^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:222:1\n-   |\n-LL | #[plugin_registrar]\n-   | ^^^^^^^^^^^^^^^^^^^\n-\n-warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:227:17\n-   |\n-LL |     mod inner { #![plugin_registrar] }\n-   |                 ^^^^^^^^^^^^^^^^^^^^\n-\n-warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:235:5\n-   |\n-LL |     #[plugin_registrar] struct S;\n-   |     ^^^^^^^^^^^^^^^^^^^\n-\n-warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:240:5\n-   |\n-LL |     #[plugin_registrar] type T = S;\n-   |     ^^^^^^^^^^^^^^^^^^^\n-\n-warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:245:5\n-   |\n-LL |     #[plugin_registrar] impl S { }\n-   |     ^^^^^^^^^^^^^^^^^^^\n-\n-warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:300:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:265:5\n    |\n LL |     #[path = \"3800\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:303:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:268:5\n    |\n LL |     #[path = \"3800\"]  struct S;\n    |     ^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:306:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:271:5\n    |\n LL |     #[path = \"3800\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:309:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:274:5\n    |\n LL |     #[path = \"3800\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:313:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:278:1\n    |\n LL | #[automatically_derived]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:316:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:281:17\n    |\n LL |     mod inner { #![automatically_derived] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:319:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:284:5\n    |\n LL |     #[automatically_derived] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:322:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:287:5\n    |\n LL |     #[automatically_derived] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:325:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:290:5\n    |\n LL |     #[automatically_derived] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:328:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:293:5\n    |\n LL |     #[automatically_derived] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:360:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:325:1\n    |\n LL | #[should_panic]\n    | ^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:363:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:328:17\n    |\n LL |     mod inner { #![should_panic] }\n    |                 ^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:366:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:331:5\n    |\n LL |     #[should_panic] fn f() { }\n    |     ^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:369:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:334:5\n    |\n LL |     #[should_panic] struct S;\n    |     ^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:372:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:337:5\n    |\n LL |     #[should_panic] type T = S;\n    |     ^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:375:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:340:5\n    |\n LL |     #[should_panic] impl S { }\n    |     ^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:379:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:344:1\n    |\n LL | #[ignore]\n    | ^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:382:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:347:17\n    |\n LL |     mod inner { #![ignore] }\n    |                 ^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:385:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:350:5\n    |\n LL |     #[ignore] fn f() { }\n    |     ^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:388:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:353:5\n    |\n LL |     #[ignore] struct S;\n    |     ^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:391:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:356:5\n    |\n LL |     #[ignore] type T = S;\n    |     ^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:394:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:359:5\n    |\n LL |     #[ignore] impl S { }\n    |     ^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:398:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:363:1\n    |\n LL | #[no_implicit_prelude]\n    | ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:401:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:366:17\n    |\n LL |     mod inner { #![no_implicit_prelude] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:404:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:369:5\n    |\n LL |     #[no_implicit_prelude] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:407:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:372:5\n    |\n LL |     #[no_implicit_prelude] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:410:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:375:5\n    |\n LL |     #[no_implicit_prelude] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:413:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:378:5\n    |\n LL |     #[no_implicit_prelude] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:417:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:382:1\n    |\n LL | #[reexport_test_harness_main = \"2900\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:420:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:385:17\n    |\n LL |     mod inner { #![reexport_test_harness_main=\"2900\"] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:423:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:388:5\n    |\n LL |     #[reexport_test_harness_main = \"2900\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:426:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:391:5\n    |\n LL |     #[reexport_test_harness_main = \"2900\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:429:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:394:5\n    |\n LL |     #[reexport_test_harness_main = \"2900\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:432:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:397:5\n    |\n LL |     #[reexport_test_harness_main = \"2900\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:444:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:409:5\n    |\n LL |     #[macro_escape] fn f() { }\n    |     ^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:447:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:412:5\n    |\n LL |     #[macro_escape] struct S;\n    |     ^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:450:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:415:5\n    |\n LL |     #[macro_escape] type T = S;\n    |     ^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:453:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:418:5\n    |\n LL |     #[macro_escape] impl S { }\n    |     ^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:457:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:422:1\n    |\n LL | #[no_std]\n    | ^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:457:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:422:1\n    |\n LL | #[no_std]\n    | ^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:461:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:426:17\n    |\n LL |     mod inner { #![no_std] }\n    |                 ^^^^^^^^^^\n \n warning: crate-level attribute should be in the root module\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:461:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:426:17\n    |\n LL |     mod inner { #![no_std] }\n    |                 ^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:465:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:430:5\n    |\n LL |     #[no_std] fn f() { }\n    |     ^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:465:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:430:5\n    |\n LL |     #[no_std] fn f() { }\n    |     ^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:469:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:434:5\n    |\n LL |     #[no_std] struct S;\n    |     ^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:469:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:434:5\n    |\n LL |     #[no_std] struct S;\n    |     ^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:473:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:438:5\n    |\n LL |     #[no_std] type T = S;\n    |     ^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:473:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:438:5\n    |\n LL |     #[no_std] type T = S;\n    |     ^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:477:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:442:5\n    |\n LL |     #[no_std] impl S { }\n    |     ^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:477:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:442:5\n    |\n LL |     #[no_std] impl S { }\n    |     ^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:658:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:623:1\n    |\n LL | #[crate_name = \"0900\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:658:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:623:1\n    |\n LL | #[crate_name = \"0900\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:662:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:627:17\n    |\n LL |     mod inner { #![crate_name=\"0900\"] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be in the root module\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:662:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:627:17\n    |\n LL |     mod inner { #![crate_name=\"0900\"] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:666:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:631:5\n    |\n LL |     #[crate_name = \"0900\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:666:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:631:5\n    |\n LL |     #[crate_name = \"0900\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:670:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:635:5\n    |\n LL |     #[crate_name = \"0900\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:670:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:635:5\n    |\n LL |     #[crate_name = \"0900\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:674:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:639:5\n    |\n LL |     #[crate_name = \"0900\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:674:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:639:5\n    |\n LL |     #[crate_name = \"0900\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:678:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:643:5\n    |\n LL |     #[crate_name = \"0900\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:678:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:643:5\n    |\n LL |     #[crate_name = \"0900\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:683:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:648:1\n    |\n LL | #[crate_type = \"0800\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:683:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:648:1\n    |\n LL | #[crate_type = \"0800\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:687:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:652:17\n    |\n LL |     mod inner { #![crate_type=\"0800\"] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be in the root module\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:687:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:652:17\n    |\n LL |     mod inner { #![crate_type=\"0800\"] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:691:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:656:5\n    |\n LL |     #[crate_type = \"0800\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:691:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:656:5\n    |\n LL |     #[crate_type = \"0800\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:695:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:660:5\n    |\n LL |     #[crate_type = \"0800\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:695:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:660:5\n    |\n LL |     #[crate_type = \"0800\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:699:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:664:5\n    |\n LL |     #[crate_type = \"0800\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:699:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:664:5\n    |\n LL |     #[crate_type = \"0800\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:703:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:668:5\n    |\n LL |     #[crate_type = \"0800\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:703:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:668:5\n    |\n LL |     #[crate_type = \"0800\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:708:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:673:1\n    |\n LL | #[feature(x0600)]\n    | ^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:708:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:673:1\n    |\n LL | #[feature(x0600)]\n    | ^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:712:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:677:17\n    |\n LL |     mod inner { #![feature(x0600)] }\n    |                 ^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be in the root module\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:712:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:677:17\n    |\n LL |     mod inner { #![feature(x0600)] }\n    |                 ^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:716:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:681:5\n    |\n LL |     #[feature(x0600)] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:716:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:681:5\n    |\n LL |     #[feature(x0600)] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:720:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:685:5\n    |\n LL |     #[feature(x0600)] struct S;\n    |     ^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:720:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:685:5\n    |\n LL |     #[feature(x0600)] struct S;\n    |     ^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:724:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:689:5\n    |\n LL |     #[feature(x0600)] type T = S;\n    |     ^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:724:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:689:5\n    |\n LL |     #[feature(x0600)] type T = S;\n    |     ^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:728:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:693:5\n    |\n LL |     #[feature(x0600)] impl S { }\n    |     ^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:728:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:693:5\n    |\n LL |     #[feature(x0600)] impl S { }\n    |     ^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:734:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:699:1\n    |\n LL | #[no_main]\n    | ^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:734:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:699:1\n    |\n LL | #[no_main]\n    | ^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:738:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:703:17\n    |\n LL |     mod inner { #![no_main] }\n    |                 ^^^^^^^^^^^\n \n warning: crate-level attribute should be in the root module\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:738:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:703:17\n    |\n LL |     mod inner { #![no_main] }\n    |                 ^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:742:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:707:5\n    |\n LL |     #[no_main] fn f() { }\n    |     ^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:742:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:707:5\n    |\n LL |     #[no_main] fn f() { }\n    |     ^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:746:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:711:5\n    |\n LL |     #[no_main] struct S;\n    |     ^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:746:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:711:5\n    |\n LL |     #[no_main] struct S;\n    |     ^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:750:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:715:5\n    |\n LL |     #[no_main] type T = S;\n    |     ^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:750:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:715:5\n    |\n LL |     #[no_main] type T = S;\n    |     ^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:754:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:719:5\n    |\n LL |     #[no_main] impl S { }\n    |     ^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:754:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:719:5\n    |\n LL |     #[no_main] impl S { }\n    |     ^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:772:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:737:1\n    |\n LL | #[recursion_limit=\"0200\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:772:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:737:1\n    |\n LL | #[recursion_limit=\"0200\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:776:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:741:17\n    |\n LL |     mod inner { #![recursion_limit=\"0200\"] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be in the root module\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:776:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:741:17\n    |\n LL |     mod inner { #![recursion_limit=\"0200\"] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:780:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:745:5\n    |\n LL |     #[recursion_limit=\"0200\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:780:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:745:5\n    |\n LL |     #[recursion_limit=\"0200\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:784:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:749:5\n    |\n LL |     #[recursion_limit=\"0200\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:784:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:749:5\n    |\n LL |     #[recursion_limit=\"0200\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:788:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:753:5\n    |\n LL |     #[recursion_limit=\"0200\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:788:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:753:5\n    |\n LL |     #[recursion_limit=\"0200\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:792:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:757:5\n    |\n LL |     #[recursion_limit=\"0200\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:792:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:757:5\n    |\n LL |     #[recursion_limit=\"0200\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:797:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:762:1\n    |\n LL | #[type_length_limit=\"0100\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:797:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:762:1\n    |\n LL | #[type_length_limit=\"0100\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:801:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:766:17\n    |\n LL |     mod inner { #![type_length_limit=\"0100\"] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be in the root module\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:801:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:766:17\n    |\n LL |     mod inner { #![type_length_limit=\"0100\"] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:805:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:770:5\n    |\n LL |     #[type_length_limit=\"0100\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:805:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:770:5\n    |\n LL |     #[type_length_limit=\"0100\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:809:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:774:5\n    |\n LL |     #[type_length_limit=\"0100\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:809:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:774:5\n    |\n LL |     #[type_length_limit=\"0100\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:813:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:778:5\n    |\n LL |     #[type_length_limit=\"0100\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:813:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:778:5\n    |\n LL |     #[type_length_limit=\"0100\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:817:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:782:5\n    |\n LL |     #[type_length_limit=\"0100\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:817:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:782:5\n    |\n LL |     #[type_length_limit=\"0100\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-warning: 205 warnings emitted\n+warning: 193 warnings emitted\n "}, {"sha": "d211204b134be6a3d3a349bf3064cc99e399ac19", "filename": "src/test/ui/multiple-plugin-registrars.rs", "status": "removed", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/25d3e14da77f755ef858b976a25c7e856b62b42a/src%2Ftest%2Fui%2Fmultiple-plugin-registrars.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25d3e14da77f755ef858b976a25c7e856b62b42a/src%2Ftest%2Fui%2Fmultiple-plugin-registrars.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmultiple-plugin-registrars.rs?ref=25d3e14da77f755ef858b976a25c7e856b62b42a", "patch": "@@ -1,12 +0,0 @@\n-// error-pattern: multiple plugin registration functions found\n-\n-#![feature(plugin_registrar)]\n-\n-// the registration function isn't typechecked yet\n-#[plugin_registrar]\n-pub fn one() {}\n-\n-#[plugin_registrar]\n-pub fn two() {}\n-\n-fn main() {}"}, {"sha": "7b86d762e318cc5fda697c6a9e0a388f43d58422", "filename": "src/test/ui/multiple-plugin-registrars.stderr", "status": "removed", "additions": 0, "deletions": 29, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/25d3e14da77f755ef858b976a25c7e856b62b42a/src%2Ftest%2Fui%2Fmultiple-plugin-registrars.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/25d3e14da77f755ef858b976a25c7e856b62b42a/src%2Ftest%2Fui%2Fmultiple-plugin-registrars.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmultiple-plugin-registrars.stderr?ref=25d3e14da77f755ef858b976a25c7e856b62b42a", "patch": "@@ -1,29 +0,0 @@\n-warning: use of deprecated attribute `plugin_registrar`: compiler plugins are deprecated. See https://github.com/rust-lang/rust/pull/64675\n-  --> $DIR/multiple-plugin-registrars.rs:6:1\n-   |\n-LL | #[plugin_registrar]\n-   | ^^^^^^^^^^^^^^^^^^^ help: may be removed in a future compiler version\n-   |\n-   = note: `#[warn(deprecated)]` on by default\n-\n-warning: use of deprecated attribute `plugin_registrar`: compiler plugins are deprecated. See https://github.com/rust-lang/rust/pull/64675\n-  --> $DIR/multiple-plugin-registrars.rs:9:1\n-   |\n-LL | #[plugin_registrar]\n-   | ^^^^^^^^^^^^^^^^^^^ help: may be removed in a future compiler version\n-\n-error: multiple plugin registration functions found\n-   |\n-note: one is here\n-  --> $DIR/multiple-plugin-registrars.rs:10:1\n-   |\n-LL | pub fn two() {}\n-   | ^^^^^^^^^^^^^^^\n-note: one is here\n-  --> $DIR/multiple-plugin-registrars.rs:7:1\n-   |\n-LL | pub fn one() {}\n-   | ^^^^^^^^^^^^^^^\n-\n-error: aborting due to previous error; 2 warnings emitted\n-"}]}