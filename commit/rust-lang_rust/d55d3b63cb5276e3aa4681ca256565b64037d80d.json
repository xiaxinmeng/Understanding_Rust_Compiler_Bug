{"sha": "d55d3b63cb5276e3aa4681ca256565b64037d80d", "node_id": "C_kwDOAAsO6NoAKGQ1NWQzYjYzY2I1Mjc2ZTNhYTQ2ODFjYTI1NjU2NWI2NDAzN2Q4MGQ", "commit": {"author": {"name": "C\u00f4me ALLART", "email": "come.allart@etu.emse.fr", "date": "2021-12-06T18:04:44Z"}, "committer": {"name": "C\u00f4me ALLART", "email": "come.allart@etu.emse.fr", "date": "2021-12-06T18:04:44Z"}, "message": "fix: format assist doc for sourcegen_assists_docs", "tree": {"sha": "cd3a8fa1a1280bc03772a7b38d2f889bca6a883f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cd3a8fa1a1280bc03772a7b38d2f889bca6a883f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d55d3b63cb5276e3aa4681ca256565b64037d80d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d55d3b63cb5276e3aa4681ca256565b64037d80d", "html_url": "https://github.com/rust-lang/rust/commit/d55d3b63cb5276e3aa4681ca256565b64037d80d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d55d3b63cb5276e3aa4681ca256565b64037d80d/comments", "author": null, "committer": null, "parents": [{"sha": "998b91af9c5bc4d1515f4a219cbcb8e941ab6eef", "url": "https://api.github.com/repos/rust-lang/rust/commits/998b91af9c5bc4d1515f4a219cbcb8e941ab6eef", "html_url": "https://github.com/rust-lang/rust/commit/998b91af9c5bc4d1515f4a219cbcb8e941ab6eef"}], "stats": {"total": 87, "additions": 58, "deletions": 29}, "files": [{"sha": "8500a4d254ca0691e5728f59af984ed2e318e248", "filename": "crates/ide_assists/src/handlers/generate_documentation_template.rs", "status": "modified", "additions": 28, "deletions": 29, "changes": 57, "blob_url": "https://github.com/rust-lang/rust/blob/d55d3b63cb5276e3aa4681ca256565b64037d80d/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fgenerate_documentation_template.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d55d3b63cb5276e3aa4681ca256565b64037d80d/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fgenerate_documentation_template.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fgenerate_documentation_template.rs?ref=d55d3b63cb5276e3aa4681ca256565b64037d80d", "patch": "@@ -7,35 +7,34 @@ use syntax::{\n \n use crate::assist_context::{AssistContext, Assists};\n \n-/// Assist: generate_documentation_template\n-///\n-/// Adds a documentation template above a function definition / declaration\n-///\n-/// ```\n-/// fn my_func(a: i32, b: i32) -> Result<(), std::io::Error> {\n-///     unimplemented!()\n-/// }\n-/// ```\n-/// ->\n-/// ```\n-/// /// .\n-/// ///\n-/// /// # Examples\n-/// ///\n-/// /// ```rust\n-/// /// use my_crate::my_func;\n-/// ///\n-/// /// let result = my_func(a, b);\n-/// /// assert_eq!(result, );\n-/// /// ```\n-/// ///\n-/// /// # Errors\n-/// ///\n-/// /// This function will return an error if .\n-/// fn my_func(a: i32, b: i32) -> Result<(), std::io::Error> {\n-///     unimplemented!()\n-/// }\n-/// ```\n+// Assist: generate_documentation_template\n+//\n+// Adds a documentation template above a function definition / declaration.\n+//\n+// ```\n+// fn my_$0func(a: i32, b: i32) -> Result<(), std::io::Error> {\n+//     unimplemented!()\n+// }\n+// ```\n+// ->\n+// ```\n+// /// .\n+// ///\n+// /// # Examples\n+// ///\n+// /// ```\n+// /// use test::my_func;\n+// ///\n+// /// assert_eq!(my_func(a, b), );\n+// /// ```\n+// ///\n+// /// # Errors\n+// ///\n+// /// This function will return an error if .\n+// fn my_func(a: i32, b: i32) -> Result<(), std::io::Error> {\n+//     unimplemented!()\n+// }\n+// ```\n pub(crate) fn generate_documentation_template(\n     acc: &mut Assists,\n     ctx: &AssistContext,"}, {"sha": "653e51c837257247b39899a8a382645c4812a2d6", "filename": "crates/ide_assists/src/tests/generated.rs", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/d55d3b63cb5276e3aa4681ca256565b64037d80d/crates%2Fide_assists%2Fsrc%2Ftests%2Fgenerated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d55d3b63cb5276e3aa4681ca256565b64037d80d/crates%2Fide_assists%2Fsrc%2Ftests%2Fgenerated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Ftests%2Fgenerated.rs?ref=d55d3b63cb5276e3aa4681ca256565b64037d80d", "patch": "@@ -839,6 +839,36 @@ struct Point {\n     )\n }\n \n+#[test]\n+fn doctest_generate_documentation_template() {\n+    check_doc_test(\n+        \"generate_documentation_template\",\n+        r#####\"\n+fn my_$0func(a: i32, b: i32) -> Result<(), std::io::Error> {\n+    unimplemented!()\n+}\n+\"#####,\n+        r#####\"\n+/// .\n+///\n+/// # Examples\n+///\n+/// ```\n+/// use test::my_func;\n+///\n+/// assert_eq!(my_func(a, b), );\n+/// ```\n+///\n+/// # Errors\n+///\n+/// This function will return an error if .\n+fn my_func(a: i32, b: i32) -> Result<(), std::io::Error> {\n+    unimplemented!()\n+}\n+\"#####,\n+    )\n+}\n+\n #[test]\n fn doctest_generate_enum_as_method() {\n     check_doc_test("}]}