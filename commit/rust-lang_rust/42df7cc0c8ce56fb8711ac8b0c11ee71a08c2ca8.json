{"sha": "42df7cc0c8ce56fb8711ac8b0c11ee71a08c2ca8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQyZGY3Y2MwYzhjZTU2ZmI4NzExYWM4YjBjMTFlZTcxYTA4YzJjYTg=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-10-26T14:49:07Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-10-26T14:49:07Z"}, "message": "Merge #6313\n\n6313: Latest proposed LSP 3.16.0 and refresh semantic tokens r=matklad a=kjeremy\n\nNeeds: https://github.com/gluon-lang/lsp-types/pull/183\n\nCo-authored-by: kjeremy <kjeremy@gmail.com>\nCo-authored-by: Jeremy A. Kolb <jkolb@ara.com>", "tree": {"sha": "0f81997e2c68cf0cf8a212178c5f56882a30c4b8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0f81997e2c68cf0cf8a212178c5f56882a30c4b8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/42df7cc0c8ce56fb8711ac8b0c11ee71a08c2ca8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfluHjCRBK7hj4Ov3rIwAAdHIIAD3i0CE02247zcONI1Vn+Zem\n9BCXYMLjywjf0k8d3URYU9uAbBBwRS/pCo5g2LHZYTagL15bI/u4Boyeyukg5415\npdF7jmSvaUlRvvVSia5BQy+G1xiCf4JqFaBJeEKlCcMI8R80nlW1oBG6o1gBSI4c\n+damLniToxYkQqF0zLwLOyGRMf6GrmagOg0L6mmaZ9gFTpb9anPw4Z1ROWoz25aF\nXdv9MoBdk1DWql5oD8CPVT2i+pPmnkRhVuuxSIrqvdzW0Zveu+I8o9lSVzaLhmlo\nF8Q5YzGDeWmBFgJQ1kQod15UI16ZWP+PSkynv3wnyY39IF6zblQpYI5ej6zgbBA=\n=pmWF\n-----END PGP SIGNATURE-----\n", "payload": "tree 0f81997e2c68cf0cf8a212178c5f56882a30c4b8\nparent a0f134686409161b5bbef47388db19b30e373c81\nparent 8982c0610f88145fa259534d7ab4b981e824ee32\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1603723747 +0000\ncommitter GitHub <noreply@github.com> 1603723747 +0000\n\nMerge #6313\n\n6313: Latest proposed LSP 3.16.0 and refresh semantic tokens r=matklad a=kjeremy\n\nNeeds: https://github.com/gluon-lang/lsp-types/pull/183\n\nCo-authored-by: kjeremy <kjeremy@gmail.com>\nCo-authored-by: Jeremy A. Kolb <jkolb@ara.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/42df7cc0c8ce56fb8711ac8b0c11ee71a08c2ca8", "html_url": "https://github.com/rust-lang/rust/commit/42df7cc0c8ce56fb8711ac8b0c11ee71a08c2ca8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/42df7cc0c8ce56fb8711ac8b0c11ee71a08c2ca8/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a0f134686409161b5bbef47388db19b30e373c81", "url": "https://api.github.com/repos/rust-lang/rust/commits/a0f134686409161b5bbef47388db19b30e373c81", "html_url": "https://github.com/rust-lang/rust/commit/a0f134686409161b5bbef47388db19b30e373c81"}, {"sha": "8982c0610f88145fa259534d7ab4b981e824ee32", "url": "https://api.github.com/repos/rust-lang/rust/commits/8982c0610f88145fa259534d7ab4b981e824ee32", "html_url": "https://github.com/rust-lang/rust/commit/8982c0610f88145fa259534d7ab4b981e824ee32"}], "stats": {"total": 101, "additions": 77, "deletions": 24}, "files": [{"sha": "fe211b9b30fbd2e3df89bbe564eb8935cac7e4a5", "filename": "Cargo.lock", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/42df7cc0c8ce56fb8711ac8b0c11ee71a08c2ca8/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/42df7cc0c8ce56fb8711ac8b0c11ee71a08c2ca8/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=42df7cc0c8ce56fb8711ac8b0c11ee71a08c2ca8", "patch": "@@ -852,9 +852,9 @@ dependencies = [\n \n [[package]]\n name = \"lsp-types\"\n-version = \"0.82.0\"\n+version = \"0.83.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"db895abb8527cf59e3de893ab2acf52cf904faeb65e60ea6f373e11fe86464e8\"\n+checksum = \"25e0bd4b95038f2c23bda332ba0ca684e8dda765db1f9bdb63dc4c3e01f3b456\"\n dependencies = [\n  \"base64\",\n  \"bitflags\","}, {"sha": "d25c4bf83747202e06f0dc9a5ec237b7061712dc", "filename": "crates/rust-analyzer/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/42df7cc0c8ce56fb8711ac8b0c11ee71a08c2ca8/crates%2Frust-analyzer%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/42df7cc0c8ce56fb8711ac8b0c11ee71a08c2ca8/crates%2Frust-analyzer%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2FCargo.toml?ref=42df7cc0c8ce56fb8711ac8b0c11ee71a08c2ca8", "patch": "@@ -21,7 +21,7 @@ env_logger = { version = \"0.8.1\", default-features = false }\n itertools = \"0.9.0\"\n jod-thread = \"0.1.0\"\n log = \"0.4.8\"\n-lsp-types = { version = \"0.82.0\", features = [\"proposed\"] }\n+lsp-types = { version = \"0.83.0\", features = [\"proposed\"] }\n parking_lot = \"0.11.0\"\n pico-args = \"0.3.1\"\n oorandom = \"11.1.2\""}, {"sha": "ff1ae9575ffae6fcf95811420b78b7de23577d84", "filename": "crates/rust-analyzer/src/caps.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/42df7cc0c8ce56fb8711ac8b0c11ee71a08c2ca8/crates%2Frust-analyzer%2Fsrc%2Fcaps.rs", "raw_url": "https://github.com/rust-lang/rust/raw/42df7cc0c8ce56fb8711ac8b0c11ee71a08c2ca8/crates%2Frust-analyzer%2Fsrc%2Fcaps.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fcaps.rs?ref=42df7cc0c8ce56fb8711ac8b0c11ee71a08c2ca8", "patch": "@@ -48,7 +48,7 @@ pub fn server_capabilities(client_caps: &ClientCapabilities) -> ServerCapabiliti\n         references_provider: Some(OneOf::Left(true)),\n         document_highlight_provider: Some(OneOf::Left(true)),\n         document_symbol_provider: Some(OneOf::Left(true)),\n-        workspace_symbol_provider: Some(true),\n+        workspace_symbol_provider: Some(OneOf::Left(true)),\n         code_action_provider: Some(code_action_provider),\n         code_lens_provider: Some(CodeLensOptions { resolve_provider: Some(true) }),\n         document_formatting_provider: Some(OneOf::Left(true)),\n@@ -113,6 +113,7 @@ fn code_action_capabilities(client_caps: &ClientCapabilities) -> CodeActionProvi\n                     CodeActionKind::REFACTOR_INLINE,\n                     CodeActionKind::REFACTOR_REWRITE,\n                 ]),\n+                resolve_provider: None,\n                 work_done_progress_options: Default::default(),\n             })\n         })"}, {"sha": "2ed6a0d82e2127b4f6b9f60ba1c2487061013624", "filename": "crates/rust-analyzer/src/config.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/42df7cc0c8ce56fb8711ac8b0c11ee71a08c2ca8/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/42df7cc0c8ce56fb8711ac8b0c11ee71a08c2ca8/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs?ref=42df7cc0c8ce56fb8711ac8b0c11ee71a08c2ca8", "patch": "@@ -47,6 +47,7 @@ pub struct Config {\n     pub call_info_full: bool,\n     pub lens: LensConfig,\n     pub hover: HoverConfig,\n+    pub semantic_tokens_refresh: bool,\n \n     pub with_sysroot: bool,\n     pub linked_projects: Vec<LinkedProject>,\n@@ -193,6 +194,7 @@ impl Config {\n             call_info_full: true,\n             lens: LensConfig::default(),\n             hover: HoverConfig::default(),\n+            semantic_tokens_refresh: false,\n             linked_projects: Vec::new(),\n             root_path,\n         }\n@@ -402,6 +404,14 @@ impl Config {\n             self.client_caps.hover_actions = get_bool(\"hoverActions\");\n             self.client_caps.status_notification = get_bool(\"statusNotification\");\n         }\n+\n+        if let Some(workspace_caps) = caps.workspace.as_ref() {\n+            if let Some(refresh_support) =\n+                workspace_caps.semantic_tokens.as_ref().and_then(|it| it.refresh_support)\n+            {\n+                self.semantic_tokens_refresh = refresh_support;\n+            }\n+        }\n     }\n }\n "}, {"sha": "58d47d32a422d362f745e83430d8724bf8eb3483", "filename": "crates/rust-analyzer/src/diagnostics/test_data/clippy_pass_by_ref.txt", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/42df7cc0c8ce56fb8711ac8b0c11ee71a08c2ca8/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Fclippy_pass_by_ref.txt", "raw_url": "https://github.com/rust-lang/rust/raw/42df7cc0c8ce56fb8711ac8b0c11ee71a08c2ca8/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Fclippy_pass_by_ref.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Fclippy_pass_by_ref.txt?ref=42df7cc0c8ce56fb8711ac8b0c11ee71a08c2ca8", "patch": "@@ -20,6 +20,7 @@\n                     \"trivially_copy_pass_by_ref\",\n                 ),\n             ),\n+            code_description: None,\n             source: Some(\n                 \"clippy\",\n             ),\n@@ -61,6 +62,7 @@\n                 ],\n             ),\n             tags: None,\n+            data: None,\n         },\n         fixes: [],\n     },"}, {"sha": "6aa26bf63ab20a250e0ef72862abc1beeb7d8035", "filename": "crates/rust-analyzer/src/diagnostics/test_data/handles_macro_location.txt", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/42df7cc0c8ce56fb8711ac8b0c11ee71a08c2ca8/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Fhandles_macro_location.txt", "raw_url": "https://github.com/rust-lang/rust/raw/42df7cc0c8ce56fb8711ac8b0c11ee71a08c2ca8/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Fhandles_macro_location.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Fhandles_macro_location.txt?ref=42df7cc0c8ce56fb8711ac8b0c11ee71a08c2ca8", "patch": "@@ -20,12 +20,14 @@\n                     \"E0277\",\n                 ),\n             ),\n+            code_description: None,\n             source: Some(\n                 \"rustc\",\n             ),\n             message: \"can\\'t compare `{integer}` with `&str`\\nthe trait `std::cmp::PartialEq<&str>` is not implemented for `{integer}`\",\n             related_information: None,\n             tags: None,\n+            data: None,\n         },\n         fixes: [],\n     },"}, {"sha": "7aaffaba251d104c396eae6731a8a506f9bf8c91", "filename": "crates/rust-analyzer/src/diagnostics/test_data/macro_compiler_error.txt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/42df7cc0c8ce56fb8711ac8b0c11ee71a08c2ca8/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Fmacro_compiler_error.txt", "raw_url": "https://github.com/rust-lang/rust/raw/42df7cc0c8ce56fb8711ac8b0c11ee71a08c2ca8/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Fmacro_compiler_error.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Fmacro_compiler_error.txt?ref=42df7cc0c8ce56fb8711ac8b0c11ee71a08c2ca8", "patch": "@@ -16,6 +16,7 @@\n                 Error,\n             ),\n             code: None,\n+            code_description: None,\n             source: Some(\n                 \"rustc\",\n             ),\n@@ -41,6 +42,7 @@\n                 ],\n             ),\n             tags: None,\n+            data: None,\n         },\n         fixes: [],\n     },\n@@ -61,6 +63,7 @@\n                 Error,\n             ),\n             code: None,\n+            code_description: None,\n             source: Some(\n                 \"rustc\",\n             ),\n@@ -86,6 +89,7 @@\n                 ],\n             ),\n             tags: None,\n+            data: None,\n         },\n         fixes: [],\n     },"}, {"sha": "58421342001671138f655cb882f043846853847d", "filename": "crates/rust-analyzer/src/diagnostics/test_data/rustc_incompatible_type_for_trait.txt", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/42df7cc0c8ce56fb8711ac8b0c11ee71a08c2ca8/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Frustc_incompatible_type_for_trait.txt", "raw_url": "https://github.com/rust-lang/rust/raw/42df7cc0c8ce56fb8711ac8b0c11ee71a08c2ca8/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Frustc_incompatible_type_for_trait.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Frustc_incompatible_type_for_trait.txt?ref=42df7cc0c8ce56fb8711ac8b0c11ee71a08c2ca8", "patch": "@@ -20,12 +20,14 @@\n                     \"E0053\",\n                 ),\n             ),\n+            code_description: None,\n             source: Some(\n                 \"rustc\",\n             ),\n             message: \"method `next` has an incompatible type for trait\\nexpected type `fn(&mut ty::list_iter::ListIterator<\\'list, M>) -> std::option::Option<&ty::Ref<M>>`\\n   found type `fn(&ty::list_iter::ListIterator<\\'list, M>) -> std::option::Option<&\\'list ty::Ref<M>>`\",\n             related_information: None,\n             tags: None,\n+            data: None,\n         },\n         fixes: [],\n     },"}, {"sha": "2610e4e209ad3c57ac4dbb83294f8193e1a874e2", "filename": "crates/rust-analyzer/src/diagnostics/test_data/rustc_mismatched_type.txt", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/42df7cc0c8ce56fb8711ac8b0c11ee71a08c2ca8/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Frustc_mismatched_type.txt", "raw_url": "https://github.com/rust-lang/rust/raw/42df7cc0c8ce56fb8711ac8b0c11ee71a08c2ca8/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Frustc_mismatched_type.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Frustc_mismatched_type.txt?ref=42df7cc0c8ce56fb8711ac8b0c11ee71a08c2ca8", "patch": "@@ -20,12 +20,14 @@\n                     \"E0308\",\n                 ),\n             ),\n+            code_description: None,\n             source: Some(\n                 \"rustc\",\n             ),\n             message: \"mismatched types\\nexpected usize, found u32\",\n             related_information: None,\n             tags: None,\n+            data: None,\n         },\n         fixes: [],\n     },"}, {"sha": "8dc53391e941d0b4f209cc8d32aaa9066a5295f3", "filename": "crates/rust-analyzer/src/diagnostics/test_data/rustc_unused_variable.txt", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/42df7cc0c8ce56fb8711ac8b0c11ee71a08c2ca8/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Frustc_unused_variable.txt", "raw_url": "https://github.com/rust-lang/rust/raw/42df7cc0c8ce56fb8711ac8b0c11ee71a08c2ca8/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Frustc_unused_variable.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Frustc_unused_variable.txt?ref=42df7cc0c8ce56fb8711ac8b0c11ee71a08c2ca8", "patch": "@@ -20,6 +20,7 @@\n                     \"unused_variables\",\n                 ),\n             ),\n+            code_description: None,\n             source: Some(\n                 \"rustc\",\n             ),\n@@ -30,6 +31,7 @@\n                     Unnecessary,\n                 ],\n             ),\n+            data: None,\n         },\n         fixes: [\n             CodeAction {"}, {"sha": "c8703194c838e613a93aeefaefeed8dd84d78e7f", "filename": "crates/rust-analyzer/src/diagnostics/test_data/rustc_unused_variable_as_hint.txt", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/42df7cc0c8ce56fb8711ac8b0c11ee71a08c2ca8/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Frustc_unused_variable_as_hint.txt", "raw_url": "https://github.com/rust-lang/rust/raw/42df7cc0c8ce56fb8711ac8b0c11ee71a08c2ca8/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Frustc_unused_variable_as_hint.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Frustc_unused_variable_as_hint.txt?ref=42df7cc0c8ce56fb8711ac8b0c11ee71a08c2ca8", "patch": "@@ -20,6 +20,7 @@\n                     \"unused_variables\",\n                 ),\n             ),\n+            code_description: None,\n             source: Some(\n                 \"rustc\",\n             ),\n@@ -30,6 +31,7 @@\n                     Unnecessary,\n                 ],\n             ),\n+            data: None,\n         },\n         fixes: [\n             CodeAction {"}, {"sha": "dc93227adf445af6ccaf595318d3d83a6b1f1e81", "filename": "crates/rust-analyzer/src/diagnostics/test_data/rustc_unused_variable_as_info.txt", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/42df7cc0c8ce56fb8711ac8b0c11ee71a08c2ca8/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Frustc_unused_variable_as_info.txt", "raw_url": "https://github.com/rust-lang/rust/raw/42df7cc0c8ce56fb8711ac8b0c11ee71a08c2ca8/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Frustc_unused_variable_as_info.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Frustc_unused_variable_as_info.txt?ref=42df7cc0c8ce56fb8711ac8b0c11ee71a08c2ca8", "patch": "@@ -20,6 +20,7 @@\n                     \"unused_variables\",\n                 ),\n             ),\n+            code_description: None,\n             source: Some(\n                 \"rustc\",\n             ),\n@@ -30,6 +31,7 @@\n                     Unnecessary,\n                 ],\n             ),\n+            data: None,\n         },\n         fixes: [\n             CodeAction {"}, {"sha": "ba1b98b335e185c877f84b0c262d715971471c17", "filename": "crates/rust-analyzer/src/diagnostics/test_data/rustc_wrong_number_of_parameters.txt", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/42df7cc0c8ce56fb8711ac8b0c11ee71a08c2ca8/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Frustc_wrong_number_of_parameters.txt", "raw_url": "https://github.com/rust-lang/rust/raw/42df7cc0c8ce56fb8711ac8b0c11ee71a08c2ca8/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Frustc_wrong_number_of_parameters.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Frustc_wrong_number_of_parameters.txt?ref=42df7cc0c8ce56fb8711ac8b0c11ee71a08c2ca8", "patch": "@@ -20,6 +20,7 @@\n                     \"E0061\",\n                 ),\n             ),\n+            code_description: None,\n             source: Some(\n                 \"rustc\",\n             ),\n@@ -45,6 +46,7 @@\n                 ],\n             ),\n             tags: None,\n+            data: None,\n         },\n         fixes: [],\n     },"}, {"sha": "81f752672f03b59d94647755f699b567e8e6f302", "filename": "crates/rust-analyzer/src/diagnostics/test_data/snap_multi_line_fix.txt", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/42df7cc0c8ce56fb8711ac8b0c11ee71a08c2ca8/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Fsnap_multi_line_fix.txt", "raw_url": "https://github.com/rust-lang/rust/raw/42df7cc0c8ce56fb8711ac8b0c11ee71a08c2ca8/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Fsnap_multi_line_fix.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Fsnap_multi_line_fix.txt?ref=42df7cc0c8ce56fb8711ac8b0c11ee71a08c2ca8", "patch": "@@ -20,6 +20,7 @@\n                     \"let_and_return\",\n                 ),\n             ),\n+            code_description: None,\n             source: Some(\n                 \"clippy\",\n             ),\n@@ -45,6 +46,7 @@\n                 ],\n             ),\n             tags: None,\n+            data: None,\n         },\n         fixes: [\n             CodeAction {"}, {"sha": "b949577c13d63d99a69e9d36a34d12d9353f0b05", "filename": "crates/rust-analyzer/src/diagnostics/to_proto.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/42df7cc0c8ce56fb8711ac8b0c11ee71a08c2ca8/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Fto_proto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/42df7cc0c8ce56fb8711ac8b0c11ee71a08c2ca8/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Fto_proto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Fto_proto.rs?ref=42df7cc0c8ce56fb8711ac8b0c11ee71a08c2ca8", "patch": "@@ -248,10 +248,12 @@ pub(crate) fn map_rust_diagnostic_to_lsp(\n                         range: in_macro_location.range,\n                         severity,\n                         code: code.clone().map(lsp_types::NumberOrString::String),\n+                        code_description: None,\n                         source: Some(source.clone()),\n                         message: message.clone(),\n                         related_information: Some(information_for_additional_diagnostic),\n                         tags: if tags.is_empty() { None } else { Some(tags.clone()) },\n+                        data: None,\n                     };\n \n                     Some(MappedRustDiagnostic {\n@@ -267,6 +269,7 @@ pub(crate) fn map_rust_diagnostic_to_lsp(\n                 range: location.range,\n                 severity,\n                 code: code.clone().map(lsp_types::NumberOrString::String),\n+                code_description: None,\n                 source: Some(source.clone()),\n                 message,\n                 related_information: if related_information.is_empty() {\n@@ -275,6 +278,7 @@ pub(crate) fn map_rust_diagnostic_to_lsp(\n                     Some(related_information.clone())\n                 },\n                 tags: if tags.is_empty() { None } else { Some(tags.clone()) },\n+                data: None,\n             };\n \n             let main_diagnostic ="}, {"sha": "049c583a42cb6ec5a40e2a62572725074d8f96dd", "filename": "crates/rust-analyzer/src/handlers.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/42df7cc0c8ce56fb8711ac8b0c11ee71a08c2ca8/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/42df7cc0c8ce56fb8711ac8b0c11ee71a08c2ca8/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs?ref=42df7cc0c8ce56fb8711ac8b0c11ee71a08c2ca8", "patch": "@@ -1121,10 +1121,12 @@ pub(crate) fn publish_diagnostics(\n             range: to_proto::range(&line_index, d.range),\n             severity: Some(to_proto::diagnostic_severity(d.severity)),\n             code: None,\n+            code_description: None,\n             source: Some(\"rust-analyzer\".to_string()),\n             message: d.message,\n             related_information: None,\n             tags: if d.unused { Some(vec![DiagnosticTag::Unnecessary]) } else { None },\n+            data: None,\n         })\n         .collect();\n     Ok(diagnostics)"}, {"sha": "ff855fe1a6425ba0941feb6b5b55c2de83d9fe6a", "filename": "crates/rust-analyzer/src/main_loop.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/42df7cc0c8ce56fb8711ac8b0c11ee71a08c2ca8/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/42df7cc0c8ce56fb8711ac8b0c11ee71a08c2ca8/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs?ref=42df7cc0c8ce56fb8711ac8b0c11ee71a08c2ca8", "patch": "@@ -330,6 +330,12 @@ impl GlobalState {\n                 .collect::<Vec<_>>();\n \n             self.update_file_notifications_on_threadpool(subscriptions);\n+\n+            // Refresh semantic tokens if the client supports it.\n+            if self.config.semantic_tokens_refresh {\n+                self.semantic_tokens_cache.lock().clear();\n+                self.send_request::<lsp_types::request::SemanticTokensRefesh>((), |_, _| ());\n+            }\n         }\n \n         if let Some(diagnostic_changes) = self.diagnostics.take_changes() {"}, {"sha": "92b7c7b681073f4bd4c20df61022eb7c536c770b", "filename": "crates/rust-analyzer/src/to_proto.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/42df7cc0c8ce56fb8711ac8b0c11ee71a08c2ca8/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/42df7cc0c8ce56fb8711ac8b0c11ee71a08c2ca8/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs?ref=42df7cc0c8ce56fb8711ac8b0c11ee71a08c2ca8", "patch": "@@ -709,7 +709,16 @@ pub(crate) fn call_hierarchy_item(\n     let detail = target.description.clone();\n     let kind = symbol_kind(target.kind);\n     let (uri, range, selection_range) = location_info(snap, target)?;\n-    Ok(lsp_types::CallHierarchyItem { name, kind, tags: None, detail, uri, range, selection_range })\n+    Ok(lsp_types::CallHierarchyItem {\n+        name,\n+        kind,\n+        tags: None,\n+        detail,\n+        uri,\n+        range,\n+        selection_range,\n+        data: None,\n+    })\n }\n \n pub(crate) fn code_action_kind(kind: AssistKind) -> lsp_types::CodeActionKind {"}, {"sha": "83ef00058e4516029b387b8f8459dcef6fc53a8c", "filename": "editors/code/package-lock.json", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/42df7cc0c8ce56fb8711ac8b0c11ee71a08c2ca8/editors%2Fcode%2Fpackage-lock.json", "raw_url": "https://github.com/rust-lang/rust/raw/42df7cc0c8ce56fb8711ac8b0c11ee71a08c2ca8/editors%2Fcode%2Fpackage-lock.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage-lock.json?ref=42df7cc0c8ce56fb8711ac8b0c11ee71a08c2ca8", "patch": "@@ -2409,32 +2409,32 @@\n             }\n         },\n         \"vscode-jsonrpc\": {\n-            \"version\": \"6.0.0-next.5\",\n-            \"resolved\": \"https://registry.npmjs.org/vscode-jsonrpc/-/vscode-jsonrpc-6.0.0-next.5.tgz\",\n-            \"integrity\": \"sha512-IAgsltQPwg/pXOPsdXgbUTCaO9VSKZwirZN5SGtkdYQ/R3VjeC4v00WTVvoNayWMZpoC3O9u0ogqmsKzKhVasQ==\"\n+            \"version\": \"6.0.0-next.7\",\n+            \"resolved\": \"https://registry.npmjs.org/vscode-jsonrpc/-/vscode-jsonrpc-6.0.0-next.7.tgz\",\n+            \"integrity\": \"sha512-1nG+6cuTtpzmXe7yYfO9GCkYlyV6Ai+jDnwidHiT2T7zhc+bJM+VTtc0T/CdTlDyTNTqIcCj0V1nD4TcVjJ7Ug==\"\n         },\n         \"vscode-languageclient\": {\n-            \"version\": \"7.0.0-next.9\",\n-            \"resolved\": \"https://registry.npmjs.org/vscode-languageclient/-/vscode-languageclient-7.0.0-next.9.tgz\",\n-            \"integrity\": \"sha512-lFO+rN/i72CM2va6iKXq1lD7pJg8J93KEXf0w0boWVqU+DJhWzLrV3pXl8Xk1nCv//qOAyhlc/nx2KZCTeRF/A==\",\n+            \"version\": \"7.0.0-next.12\",\n+            \"resolved\": \"https://registry.npmjs.org/vscode-languageclient/-/vscode-languageclient-7.0.0-next.12.tgz\",\n+            \"integrity\": \"sha512-OrzvOvhS5o26C0KctTJC7hkwh3avCwkVhllzy42AqwpIUZ3p2aVqkSG2uVxaeodq8ThBb3TLgtg50vxyWs6FEg==\",\n             \"requires\": {\n                 \"semver\": \"^6.3.0\",\n-                \"vscode-languageserver-protocol\": \"3.16.0-next.7\"\n+                \"vscode-languageserver-protocol\": \"3.16.0-next.10\"\n             }\n         },\n         \"vscode-languageserver-protocol\": {\n-            \"version\": \"3.16.0-next.7\",\n-            \"resolved\": \"https://registry.npmjs.org/vscode-languageserver-protocol/-/vscode-languageserver-protocol-3.16.0-next.7.tgz\",\n-            \"integrity\": \"sha512-tOjrg+K3RddJ547zpC9/LAgTbzadkPuHlqJFFWIcKjVhiJOh73XyY+Ngcu9wukGaTsuSGjJ0W8rlmwanixa0FQ==\",\n+            \"version\": \"3.16.0-next.10\",\n+            \"resolved\": \"https://registry.npmjs.org/vscode-languageserver-protocol/-/vscode-languageserver-protocol-3.16.0-next.10.tgz\",\n+            \"integrity\": \"sha512-YRTctHUZvts0Z1xXKNYU0ha0o+Tlgtwr+6O8OmDquM086N8exiSKBMwMC+Ra1QtIE+1mfW43Wxsme2FnMkAS9A==\",\n             \"requires\": {\n-                \"vscode-jsonrpc\": \"6.0.0-next.5\",\n-                \"vscode-languageserver-types\": \"3.16.0-next.3\"\n+                \"vscode-jsonrpc\": \"6.0.0-next.7\",\n+                \"vscode-languageserver-types\": \"3.16.0-next.4\"\n             }\n         },\n         \"vscode-languageserver-types\": {\n-            \"version\": \"3.16.0-next.3\",\n-            \"resolved\": \"https://registry.npmjs.org/vscode-languageserver-types/-/vscode-languageserver-types-3.16.0-next.3.tgz\",\n-            \"integrity\": \"sha512-s/z5ZqSe7VpoXJ6JQcvwRiPPA3nG0nAcJ/HH03zoU6QaFfnkcgPK+HshC3WKPPnC2G08xA0iRB6h7kmyBB5Adg==\"\n+            \"version\": \"3.16.0-next.4\",\n+            \"resolved\": \"https://registry.npmjs.org/vscode-languageserver-types/-/vscode-languageserver-types-3.16.0-next.4.tgz\",\n+            \"integrity\": \"sha512-NlKJyGcET/ZBCCLBYIPaGo2c37R03bPYeWXozUtnjyye7+9dhlbMSODyoG2INcQf8zFmB4qhm2UOJjgYEgPCNA==\"\n         },\n         \"vscode-test\": {\n             \"version\": \"1.4.0\","}, {"sha": "eccafccdd9e60dbf58f73cd1d66f5d9a00a71382", "filename": "editors/code/package.json", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/42df7cc0c8ce56fb8711ac8b0c11ee71a08c2ca8/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/42df7cc0c8ce56fb8711ac8b0c11ee71a08c2ca8/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=42df7cc0c8ce56fb8711ac8b0c11ee71a08c2ca8", "patch": "@@ -36,7 +36,7 @@\n     },\n     \"dependencies\": {\n         \"node-fetch\": \"^2.6.1\",\n-        \"vscode-languageclient\": \"7.0.0-next.9\"\n+        \"vscode-languageclient\": \"7.0.0-next.12\"\n     },\n     \"devDependencies\": {\n         \"@rollup/plugin-commonjs\": \"^13.0.2\","}, {"sha": "53492a445c4eea8268f6f5ad71c33220e60de076", "filename": "editors/code/src/util.ts", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/42df7cc0c8ce56fb8711ac8b0c11ee71a08c2ca8/editors%2Fcode%2Fsrc%2Futil.ts", "raw_url": "https://github.com/rust-lang/rust/raw/42df7cc0c8ce56fb8711ac8b0c11ee71a08c2ca8/editors%2Fcode%2Fsrc%2Futil.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Futil.ts?ref=42df7cc0c8ce56fb8711ac8b0c11ee71a08c2ca8", "patch": "@@ -75,12 +75,11 @@ export async function sendRequestWithRetry<TParam, TRet>(\n                 log.warn(\"LSP request timed out\", { method: reqType.method, param, error });\n                 throw error;\n             }\n-\n-            if (error.code === lc.ErrorCodes.RequestCancelled) {\n+            if (error.code === lc.LSPErrorCodes.RequestCancelled) {\n                 throw error;\n             }\n \n-            if (error.code !== lc.ErrorCodes.ContentModified) {\n+            if (error.code !== lc.LSPErrorCodes.ContentModified) {\n                 log.warn(\"LSP request failed\", { method: reqType.method, param, error });\n                 throw error;\n             }"}]}