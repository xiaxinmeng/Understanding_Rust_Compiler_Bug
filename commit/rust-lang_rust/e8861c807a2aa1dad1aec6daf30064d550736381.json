{"sha": "e8861c807a2aa1dad1aec6daf30064d550736381", "node_id": "C_kwDOAAsO6NoAKGU4ODYxYzgwN2EyYWExZGFkMWFlYzZkYWYzMDA2NGQ1NTA3MzYzODE", "commit": {"author": {"name": "dswij", "email": "dswijj@gmail.com", "date": "2021-11-10T06:41:41Z"}, "committer": {"name": "dswij", "email": "dswijj@gmail.com", "date": "2021-11-10T06:41:41Z"}, "message": "Add `semicolon_if_nothing_returned` test for `let-else` stmts", "tree": {"sha": "4b02118ccf227ad02c6a9d5e18a4e547f1b6714f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4b02118ccf227ad02c6a9d5e18a4e547f1b6714f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e8861c807a2aa1dad1aec6daf30064d550736381", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e8861c807a2aa1dad1aec6daf30064d550736381", "html_url": "https://github.com/rust-lang/rust/commit/e8861c807a2aa1dad1aec6daf30064d550736381", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e8861c807a2aa1dad1aec6daf30064d550736381/comments", "author": {"login": "dswij", "id": 44697459, "node_id": "MDQ6VXNlcjQ0Njk3NDU5", "avatar_url": "https://avatars.githubusercontent.com/u/44697459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dswij", "html_url": "https://github.com/dswij", "followers_url": "https://api.github.com/users/dswij/followers", "following_url": "https://api.github.com/users/dswij/following{/other_user}", "gists_url": "https://api.github.com/users/dswij/gists{/gist_id}", "starred_url": "https://api.github.com/users/dswij/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dswij/subscriptions", "organizations_url": "https://api.github.com/users/dswij/orgs", "repos_url": "https://api.github.com/users/dswij/repos", "events_url": "https://api.github.com/users/dswij/events{/privacy}", "received_events_url": "https://api.github.com/users/dswij/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dswij", "id": 44697459, "node_id": "MDQ6VXNlcjQ0Njk3NDU5", "avatar_url": "https://avatars.githubusercontent.com/u/44697459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dswij", "html_url": "https://github.com/dswij", "followers_url": "https://api.github.com/users/dswij/followers", "following_url": "https://api.github.com/users/dswij/following{/other_user}", "gists_url": "https://api.github.com/users/dswij/gists{/gist_id}", "starred_url": "https://api.github.com/users/dswij/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dswij/subscriptions", "organizations_url": "https://api.github.com/users/dswij/orgs", "repos_url": "https://api.github.com/users/dswij/repos", "events_url": "https://api.github.com/users/dswij/events{/privacy}", "received_events_url": "https://api.github.com/users/dswij/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "93f13d532f9846eca9ecc090957e48bbc1e39c1a", "url": "https://api.github.com/repos/rust-lang/rust/commits/93f13d532f9846eca9ecc090957e48bbc1e39c1a", "html_url": "https://github.com/rust-lang/rust/commit/93f13d532f9846eca9ecc090957e48bbc1e39c1a"}], "stats": {"total": 20, "additions": 15, "deletions": 5}, "files": [{"sha": "91916e7480fe14a57707bab2225b3ca10cc6713b", "filename": "tests/ui/semicolon_if_nothing_returned.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e8861c807a2aa1dad1aec6daf30064d550736381/tests%2Fui%2Fsemicolon_if_nothing_returned.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8861c807a2aa1dad1aec6daf30064d550736381/tests%2Fui%2Fsemicolon_if_nothing_returned.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsemicolon_if_nothing_returned.rs?ref=e8861c807a2aa1dad1aec6daf30064d550736381", "patch": "@@ -1,6 +1,7 @@\n #![warn(clippy::semicolon_if_nothing_returned)]\n #![allow(clippy::redundant_closure)]\n #![feature(label_break_value)]\n+#![feature(let_else)]\n \n fn get_unit() {}\n \n@@ -110,3 +111,12 @@ fn macro_with_semicolon() {\n     }\n     repro!();\n }\n+\n+fn function_returning_option() -> Option<i32> {\n+    Some(1)\n+}\n+\n+// No warning\n+fn let_else_stmts() {\n+    let Some(x) = function_returning_option() else { return; };\n+}"}, {"sha": "41d2c1cfb87ae38ddda00a1cf2d4eaea3021a1c4", "filename": "tests/ui/semicolon_if_nothing_returned.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e8861c807a2aa1dad1aec6daf30064d550736381/tests%2Fui%2Fsemicolon_if_nothing_returned.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e8861c807a2aa1dad1aec6daf30064d550736381/tests%2Fui%2Fsemicolon_if_nothing_returned.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsemicolon_if_nothing_returned.stderr?ref=e8861c807a2aa1dad1aec6daf30064d550736381", "patch": "@@ -1,31 +1,31 @@\n error: consider adding a `;` to the last statement for consistent formatting\n-  --> $DIR/semicolon_if_nothing_returned.rs:9:5\n+  --> $DIR/semicolon_if_nothing_returned.rs:10:5\n    |\n LL |     println!(\"Hello\")\n    |     ^^^^^^^^^^^^^^^^^ help: add a `;` here: `println!(\"Hello\");`\n    |\n    = note: `-D clippy::semicolon-if-nothing-returned` implied by `-D warnings`\n \n error: consider adding a `;` to the last statement for consistent formatting\n-  --> $DIR/semicolon_if_nothing_returned.rs:13:5\n+  --> $DIR/semicolon_if_nothing_returned.rs:14:5\n    |\n LL |     get_unit()\n    |     ^^^^^^^^^^ help: add a `;` here: `get_unit();`\n \n error: consider adding a `;` to the last statement for consistent formatting\n-  --> $DIR/semicolon_if_nothing_returned.rs:18:5\n+  --> $DIR/semicolon_if_nothing_returned.rs:19:5\n    |\n LL |     y = x + 1\n    |     ^^^^^^^^^ help: add a `;` here: `y = x + 1;`\n \n error: consider adding a `;` to the last statement for consistent formatting\n-  --> $DIR/semicolon_if_nothing_returned.rs:24:9\n+  --> $DIR/semicolon_if_nothing_returned.rs:25:9\n    |\n LL |         hello()\n    |         ^^^^^^^ help: add a `;` here: `hello();`\n \n error: consider adding a `;` to the last statement for consistent formatting\n-  --> $DIR/semicolon_if_nothing_returned.rs:35:9\n+  --> $DIR/semicolon_if_nothing_returned.rs:36:9\n    |\n LL |         ptr::drop_in_place(s.as_mut_ptr())\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add a `;` here: `ptr::drop_in_place(s.as_mut_ptr());`"}]}