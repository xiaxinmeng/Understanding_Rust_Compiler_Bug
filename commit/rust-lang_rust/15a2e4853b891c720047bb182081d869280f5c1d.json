{"sha": "15a2e4853b891c720047bb182081d869280f5c1d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE1YTJlNDg1M2I4OTFjNzIwMDQ3YmIxODIwODFkODY5MjgwZjVjMWQ=", "commit": {"author": {"name": "Adam Gemmell", "email": "adam.gemmell@arm.com", "date": "2021-07-12T14:46:52Z"}, "committer": {"name": "Adam Gemmell", "email": "adam.gemmell@arm.com", "date": "2021-07-16T14:29:10Z"}, "message": "Package LLVM libs for the target rather than the build host", "tree": {"sha": "7981af716201968f0e0664336dacad36683d1cbb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7981af716201968f0e0664336dacad36683d1cbb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/15a2e4853b891c720047bb182081d869280f5c1d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/15a2e4853b891c720047bb182081d869280f5c1d", "html_url": "https://github.com/rust-lang/rust/commit/15a2e4853b891c720047bb182081d869280f5c1d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/15a2e4853b891c720047bb182081d869280f5c1d/comments", "author": {"login": "adamgemmell", "id": 3757567, "node_id": "MDQ6VXNlcjM3NTc1Njc=", "avatar_url": "https://avatars.githubusercontent.com/u/3757567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamgemmell", "html_url": "https://github.com/adamgemmell", "followers_url": "https://api.github.com/users/adamgemmell/followers", "following_url": "https://api.github.com/users/adamgemmell/following{/other_user}", "gists_url": "https://api.github.com/users/adamgemmell/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamgemmell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamgemmell/subscriptions", "organizations_url": "https://api.github.com/users/adamgemmell/orgs", "repos_url": "https://api.github.com/users/adamgemmell/repos", "events_url": "https://api.github.com/users/adamgemmell/events{/privacy}", "received_events_url": "https://api.github.com/users/adamgemmell/received_events", "type": "User", "site_admin": false}, "committer": {"login": "adamgemmell", "id": 3757567, "node_id": "MDQ6VXNlcjM3NTc1Njc=", "avatar_url": "https://avatars.githubusercontent.com/u/3757567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamgemmell", "html_url": "https://github.com/adamgemmell", "followers_url": "https://api.github.com/users/adamgemmell/followers", "following_url": "https://api.github.com/users/adamgemmell/following{/other_user}", "gists_url": "https://api.github.com/users/adamgemmell/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamgemmell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamgemmell/subscriptions", "organizations_url": "https://api.github.com/users/adamgemmell/orgs", "repos_url": "https://api.github.com/users/adamgemmell/repos", "events_url": "https://api.github.com/users/adamgemmell/events{/privacy}", "received_events_url": "https://api.github.com/users/adamgemmell/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "59d92bd0173fb0436b93aa56ff2cb288d4717701", "url": "https://api.github.com/repos/rust-lang/rust/commits/59d92bd0173fb0436b93aa56ff2cb288d4717701", "html_url": "https://github.com/rust-lang/rust/commit/59d92bd0173fb0436b93aa56ff2cb288d4717701"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "c37763243c0a55ab118318e3f8506f6decbcb568", "filename": "src/bootstrap/dist.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/15a2e4853b891c720047bb182081d869280f5c1d/src%2Fbootstrap%2Fdist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15a2e4853b891c720047bb182081d869280f5c1d/src%2Fbootstrap%2Fdist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdist.rs?ref=15a2e4853b891c720047bb182081d869280f5c1d", "patch": "@@ -1955,8 +1955,16 @@ fn maybe_install_llvm(builder: &Builder<'_>, target: TargetSelection, dst_libdir\n         cmd.arg(\"--libfiles\");\n         builder.verbose(&format!(\"running {:?}\", cmd));\n         let files = output(&mut cmd);\n+        let build_llvm_out = &builder.llvm_out(builder.config.build);\n+        let target_llvm_out = &builder.llvm_out(target);\n         for file in files.trim_end().split(' ') {\n-            builder.install(Path::new(file), dst_libdir, 0o644);\n+            // If we're not using a custom LLVM, make sure we package for the target.\n+            let file = if let Ok(relative_path) = Path::new(file).strip_prefix(build_llvm_out) {\n+                target_llvm_out.join(relative_path)\n+            } else {\n+                PathBuf::from(file)\n+            };\n+            builder.install(&file, dst_libdir, 0o644);\n         }\n         !builder.config.dry_run\n     } else {"}]}