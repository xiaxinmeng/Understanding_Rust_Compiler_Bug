{"sha": "06a6189376975ddff0d8db2fb20ab407066357b4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA2YTYxODkzNzY5NzVkZGZmMGQ4ZGIyZmIyMGFiNDA3MDY2MzU3YjQ=", "commit": {"author": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2020-01-14T12:52:08Z"}, "committer": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2020-02-21T10:14:17Z"}, "message": "Move enum_glob_use lint into wildcard_imports pass", "tree": {"sha": "7e09425d660362d876f4c9d7f68434b443887b3c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7e09425d660362d876f4c9d7f68434b443887b3c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/06a6189376975ddff0d8db2fb20ab407066357b4", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZxoS6lESXlRGMHWcaTCGhp1QZjcFAl5PrXkACgkQaTCGhp1Q\nZjfvZA//Ufuvj6UDP1D7rQZ0V4B28vDGhic88YWGTHN8BFkzf+kgDiUY5E3SiCW1\n7090re21uCgVmdA5ejBuv9rM3tvqisNSdZoeu8EAZ1b+R/3xZQJpB8khjIsIHIqo\nHZVysvMGq+MnRspaq8Q7mcmkBCDfVumTtgI4CgstS4hkPKXQ+b0KAOVim5ire/ZE\nfx5SOIAtfndcKUnTa3A3Tl1En6WvRduhsFFsdtPu/T79iRAhy55KzUM9LmR+07ZX\nrQtOqrzQk9N6n2Eh0zpzWRiuvHnhHFUsbUJ1rLmpYxkLxQxBj9bs1oTgeIZzzzIP\nb1pwZDONtReZ9QKIFESDqhu3USNaAddKVWuHYMgzHRQj2jYV0hvilJkQLczXvO0+\nDLLzsa2x9bwdeSaaxgcEravvj1rFydWwCvRhQKxqbAPz6xq4Iy2UKj8q9DVaB1bg\nrTjeIPNI0++n6w+oViPp9yvOoL8e3fslK2q5JU6e5zvv6RSjMx+5OKWUk63Us02Q\nn3YG+EUqm7gEcXOOPKhJyjk2WsjW3TJncOsYM34++tkJWSdkz7UuR+2v/S9Q3gAd\nbbmz0H/weflBU2tNAIt4SZlqCBMLgyu1G/MmeQUrfhqHRFBZ246R5fc0zIsx794P\nDsmYtJ9RRIyHMTEszg/wJeZdum2sLvVu+u5Us+G26+KCD25x06A=\n=qFSv\n-----END PGP SIGNATURE-----", "payload": "tree 7e09425d660362d876f4c9d7f68434b443887b3c\nparent 3f5ed285249b7222d05051b16c97e25b7bbd086d\nauthor flip1995 <hello@philkrones.com> 1579006328 +0100\ncommitter flip1995 <hello@philkrones.com> 1582280057 +0100\n\nMove enum_glob_use lint into wildcard_imports pass\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/06a6189376975ddff0d8db2fb20ab407066357b4", "html_url": "https://github.com/rust-lang/rust/commit/06a6189376975ddff0d8db2fb20ab407066357b4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/06a6189376975ddff0d8db2fb20ab407066357b4/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3f5ed285249b7222d05051b16c97e25b7bbd086d", "url": "https://api.github.com/repos/rust-lang/rust/commits/3f5ed285249b7222d05051b16c97e25b7bbd086d", "html_url": "https://github.com/rust-lang/rust/commit/3f5ed285249b7222d05051b16c97e25b7bbd086d"}], "stats": {"total": 171, "additions": 92, "deletions": 79}, "files": [{"sha": "4ffc73961a8c2e5a747c442bc581623ab62dcf39", "filename": "clippy_lints/src/enum_glob_use.rs", "status": "removed", "additions": 0, "deletions": 49, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/3f5ed285249b7222d05051b16c97e25b7bbd086d/clippy_lints%2Fsrc%2Fenum_glob_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f5ed285249b7222d05051b16c97e25b7bbd086d/clippy_lints%2Fsrc%2Fenum_glob_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fenum_glob_use.rs?ref=3f5ed285249b7222d05051b16c97e25b7bbd086d", "patch": "@@ -1,49 +0,0 @@\n-//! lint on `use`ing all variants of an enum\n-\n-use crate::utils::span_lint;\n-use rustc_hir::def::{DefKind, Res};\n-use rustc_hir::*;\n-use rustc_lint::{LateContext, LateLintPass};\n-use rustc_session::{declare_lint_pass, declare_tool_lint};\n-use rustc_span::source_map::Span;\n-\n-declare_clippy_lint! {\n-    /// **What it does:** Checks for `use Enum::*`.\n-    ///\n-    /// **Why is this bad?** It is usually better style to use the prefixed name of\n-    /// an enumeration variant, rather than importing variants.\n-    ///\n-    /// **Known problems:** Old-style enumerations that prefix the variants are\n-    /// still around.\n-    ///\n-    /// **Example:**\n-    /// ```rust\n-    /// use std::cmp::Ordering::*;\n-    /// ```\n-    pub ENUM_GLOB_USE,\n-    pedantic,\n-    \"use items that import all variants of an enum\"\n-}\n-\n-declare_lint_pass!(EnumGlobUse => [ENUM_GLOB_USE]);\n-\n-impl<'a, 'tcx> LateLintPass<'a, 'tcx> for EnumGlobUse {\n-    fn check_mod(&mut self, cx: &LateContext<'a, 'tcx>, m: &'tcx Mod<'_>, _: Span, _: HirId) {\n-        let map = cx.tcx.hir();\n-        // only check top level `use` statements\n-        for item in m.item_ids {\n-            lint_item(cx, map.expect_item(item.id));\n-        }\n-    }\n-}\n-\n-fn lint_item(cx: &LateContext<'_, '_>, item: &Item<'_>) {\n-    if item.vis.node.is_pub() {\n-        return; // re-exports are fine\n-    }\n-    if let ItemKind::Use(ref path, UseKind::Glob) = item.kind {\n-        if let Res::Def(DefKind::Enum, _) = path.res {\n-            span_lint(cx, ENUM_GLOB_USE, item.span, \"don't use glob imports for enum variants\");\n-        }\n-    }\n-}"}, {"sha": "2b5691f92555eb939889061b19c26a6017c93399", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/06a6189376975ddff0d8db2fb20ab407066357b4/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/06a6189376975ddff0d8db2fb20ab407066357b4/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=06a6189376975ddff0d8db2fb20ab407066357b4", "patch": "@@ -197,7 +197,6 @@ pub mod else_if_without_else;\n pub mod empty_enum;\n pub mod entry;\n pub mod enum_clike;\n-pub mod enum_glob_use;\n pub mod enum_variants;\n pub mod eq_op;\n pub mod erasing_op;\n@@ -520,7 +519,6 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         &empty_enum::EMPTY_ENUM,\n         &entry::MAP_ENTRY,\n         &enum_clike::ENUM_CLIKE_UNPORTABLE_VARIANT,\n-        &enum_glob_use::ENUM_GLOB_USE,\n         &enum_variants::ENUM_VARIANT_NAMES,\n         &enum_variants::MODULE_INCEPTION,\n         &enum_variants::MODULE_NAME_REPETITIONS,\n@@ -814,6 +812,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         &use_self::USE_SELF,\n         &vec::USELESS_VEC,\n         &wildcard_dependencies::WILDCARD_DEPENDENCIES,\n+        &wildcard_imports::ENUM_GLOB_USE,\n         &wildcard_imports::WILDCARD_IMPORTS,\n         &write::PRINTLN_EMPTY_STRING,\n         &write::PRINT_LITERAL,\n@@ -837,7 +836,6 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n     store.register_late_pass(move || box types::Types::new(vec_box_size_threshold));\n     store.register_late_pass(|| box booleans::NonminimalBool);\n     store.register_late_pass(|| box eq_op::EqOp);\n-    store.register_late_pass(|| box enum_glob_use::EnumGlobUse);\n     store.register_late_pass(|| box enum_clike::UnportableVariant);\n     store.register_late_pass(|| box float_literal::FloatLiteral);\n     let verbose_bit_mask_threshold = conf.verbose_bit_mask_threshold;\n@@ -1064,7 +1062,6 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         LintId::of(&doc::DOC_MARKDOWN),\n         LintId::of(&doc::MISSING_ERRORS_DOC),\n         LintId::of(&empty_enum::EMPTY_ENUM),\n-        LintId::of(&enum_glob_use::ENUM_GLOB_USE),\n         LintId::of(&enum_variants::MODULE_NAME_REPETITIONS),\n         LintId::of(&enum_variants::PUB_ENUM_VARIANT_NAMES),\n         LintId::of(&eta_reduction::REDUNDANT_CLOSURE_FOR_METHOD_CALLS),\n@@ -1108,6 +1105,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         LintId::of(&unicode::NON_ASCII_LITERAL),\n         LintId::of(&unicode::UNICODE_NOT_NFC),\n         LintId::of(&unused_self::UNUSED_SELF),\n+        LintId::of(&wildcard_imports::ENUM_GLOB_USE),\n         LintId::of(&wildcard_imports::WILDCARD_IMPORTS),\n     ]);\n "}, {"sha": "584e7adfccc72af291c52b86017063d8aa2917b8", "filename": "clippy_lints/src/wildcard_imports.rs", "status": "modified", "additions": 31, "deletions": 4, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/06a6189376975ddff0d8db2fb20ab407066357b4/clippy_lints%2Fsrc%2Fwildcard_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/06a6189376975ddff0d8db2fb20ab407066357b4/clippy_lints%2Fsrc%2Fwildcard_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fwildcard_imports.rs?ref=06a6189376975ddff0d8db2fb20ab407066357b4", "patch": "@@ -1,11 +1,32 @@\n use crate::utils::{in_macro, snippet_with_applicability, span_lint_and_sugg};\n use if_chain::if_chain;\n use rustc_errors::Applicability;\n-use rustc_hir::*;\n+use rustc_hir::{\n+    def::{DefKind, Res},\n+    Item, ItemKind, UseKind,\n+};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::BytePos;\n \n+declare_clippy_lint! {\n+    /// **What it does:** Checks for `use Enum::*`.\n+    ///\n+    /// **Why is this bad?** It is usually better style to use the prefixed name of\n+    /// an enumeration variant, rather than importing variants.\n+    ///\n+    /// **Known problems:** Old-style enumerations that prefix the variants are\n+    /// still around.\n+    ///\n+    /// **Example:**\n+    /// ```rust\n+    /// use std::cmp::Ordering::*;\n+    /// ```\n+    pub ENUM_GLOB_USE,\n+    pedantic,\n+    \"use items that import all variants of an enum\"\n+}\n+\n declare_clippy_lint! {\n     /// **What it does:** Checks for wildcard imports `use _::*`.\n     ///\n@@ -45,7 +66,7 @@ declare_clippy_lint! {\n     \"lint `use _::*` statements\"\n }\n \n-declare_lint_pass!(WildcardImports => [WILDCARD_IMPORTS]);\n+declare_lint_pass!(WildcardImports => [ENUM_GLOB_USE, WILDCARD_IMPORTS]);\n \n impl LateLintPass<'_, '_> for WildcardImports {\n     fn check_item(&mut self, cx: &LateContext<'_, '_>, item: &Item<'_>) {\n@@ -94,11 +115,17 @@ impl LateLintPass<'_, '_> for WildcardImports {\n                     format!(\"{}::{}\", import_source, imports_string)\n                 };\n \n+                let (lint, message) = if let Res::Def(DefKind::Enum, _) = use_path.res {\n+                    (ENUM_GLOB_USE, \"usage of wildcard import for enum variants\")\n+                } else {\n+                    (WILDCARD_IMPORTS, \"usage of wildcard import\")\n+                };\n+\n                 span_lint_and_sugg(\n                     cx,\n-                    WILDCARD_IMPORTS,\n+                    lint,\n                     span,\n-                    \"usage of wildcard import\",\n+                    message,\n                     \"try\",\n                     sugg,\n                     applicability,"}, {"sha": "29b5a7ba08a2cdab6f8cd82c59842b2562b27536", "filename": "src/lintlist/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/06a6189376975ddff0d8db2fb20ab407066357b4/src%2Flintlist%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/06a6189376975ddff0d8db2fb20ab407066357b4/src%2Flintlist%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flintlist%2Fmod.rs?ref=06a6189376975ddff0d8db2fb20ab407066357b4", "patch": "@@ -460,7 +460,7 @@ pub const ALL_LINTS: [Lint; 357] = [\n         group: \"pedantic\",\n         desc: \"use items that import all variants of an enum\",\n         deprecation: None,\n-        module: \"enum_glob_use\",\n+        module: \"wildcard_imports\",\n     },\n     Lint {\n         name: \"enum_variant_names\","}, {"sha": "a98216758bb9e9cac7533eb95df0b4ea2faa33d9", "filename": "tests/ui/enum_glob_use.fixed", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/06a6189376975ddff0d8db2fb20ab407066357b4/tests%2Fui%2Fenum_glob_use.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/06a6189376975ddff0d8db2fb20ab407066357b4/tests%2Fui%2Fenum_glob_use.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fenum_glob_use.fixed?ref=06a6189376975ddff0d8db2fb20ab407066357b4", "patch": "@@ -0,0 +1,30 @@\n+// run-rustfix\n+\n+#![warn(clippy::enum_glob_use)]\n+#![allow(unused)]\n+#![warn(unused_imports)]\n+\n+use std::cmp::Ordering::Less;\n+\n+enum Enum {\n+    Foo,\n+}\n+\n+use self::Enum::Foo;\n+\n+mod in_fn_test {\n+    fn blarg() {\n+        use crate::Enum::Foo;\n+\n+        let _ = Foo;\n+    }\n+}\n+\n+mod blurg {\n+    pub use std::cmp::Ordering::*; // ok, re-export\n+}\n+\n+fn main() {\n+    let _ = Foo;\n+    let _ = Less;\n+}"}, {"sha": "5d929c9731d341993c9f096f195b7bd661f33dde", "filename": "tests/ui/enum_glob_use.rs", "status": "modified", "additions": 15, "deletions": 14, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/06a6189376975ddff0d8db2fb20ab407066357b4/tests%2Fui%2Fenum_glob_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/06a6189376975ddff0d8db2fb20ab407066357b4/tests%2Fui%2Fenum_glob_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fenum_glob_use.rs?ref=06a6189376975ddff0d8db2fb20ab407066357b4", "patch": "@@ -1,29 +1,30 @@\n-#![warn(clippy::all, clippy::pedantic)]\n-#![allow(unused_imports, dead_code, clippy::missing_docs_in_private_items)]\n+// run-rustfix\n+\n+#![warn(clippy::enum_glob_use)]\n+#![allow(unused)]\n+#![warn(unused_imports)]\n \n use std::cmp::Ordering::*;\n \n enum Enum {\n-    _Foo,\n+    Foo,\n }\n \n use self::Enum::*;\n \n-fn blarg() {\n-    use self::Enum::*; // ok, just for a function\n+mod in_fn_test {\n+    fn blarg() {\n+        use crate::Enum::*;\n+\n+        let _ = Foo;\n+    }\n }\n \n mod blurg {\n     pub use std::cmp::Ordering::*; // ok, re-export\n }\n \n-mod tests {\n-    use super::*;\n+fn main() {\n+    let _ = Foo;\n+    let _ = Less;\n }\n-\n-#[allow(non_snake_case)]\n-mod CamelCaseName {}\n-\n-use CamelCaseName::*;\n-\n-fn main() {}"}, {"sha": "69531aed39bd46dcb86ced0ea5661b25bbc11bc1", "filename": "tests/ui/enum_glob_use.stderr", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/06a6189376975ddff0d8db2fb20ab407066357b4/tests%2Fui%2Fenum_glob_use.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/06a6189376975ddff0d8db2fb20ab407066357b4/tests%2Fui%2Fenum_glob_use.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fenum_glob_use.stderr?ref=06a6189376975ddff0d8db2fb20ab407066357b4", "patch": "@@ -1,16 +1,22 @@\n-error: don't use glob imports for enum variants\n-  --> $DIR/enum_glob_use.rs:4:1\n+error: usage of wildcard import for enum variants\n+  --> $DIR/enum_glob_use.rs:7:5\n    |\n LL | use std::cmp::Ordering::*;\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::cmp::Ordering::Less`\n    |\n    = note: `-D clippy::enum-glob-use` implied by `-D warnings`\n \n-error: don't use glob imports for enum variants\n-  --> $DIR/enum_glob_use.rs:10:1\n+error: usage of wildcard import for enum variants\n+  --> $DIR/enum_glob_use.rs:13:5\n    |\n LL | use self::Enum::*;\n-   | ^^^^^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^ help: try: `self::Enum::Foo`\n \n-error: aborting due to 2 previous errors\n+error: usage of wildcard import for enum variants\n+  --> $DIR/enum_glob_use.rs:17:13\n+   |\n+LL |         use crate::Enum::*;\n+   |             ^^^^^^^^^^^^^^ help: try: `crate::Enum::Foo`\n+\n+error: aborting due to 3 previous errors\n "}]}