{"sha": "d13b23f37e014d1ac63e937e69d4d8b1ed7b68b0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQxM2IyM2YzN2UwMTRkMWFjNjNlOTM3ZTY5ZDRkOGIxZWQ3YjY4YjA=", "commit": {"author": {"name": "Marvin L\u00f6bel", "email": "loebel.marvin@gmail.com", "date": "2013-01-24T20:09:58Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-02-03T23:37:24Z"}, "message": "Added ToStrRadix and FromStrRadix traits", "tree": {"sha": "860ced4973959b0c7ded01f95f40bf12707bb4e5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/860ced4973959b0c7ded01f95f40bf12707bb4e5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d13b23f37e014d1ac63e937e69d4d8b1ed7b68b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d13b23f37e014d1ac63e937e69d4d8b1ed7b68b0", "html_url": "https://github.com/rust-lang/rust/commit/d13b23f37e014d1ac63e937e69d4d8b1ed7b68b0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d13b23f37e014d1ac63e937e69d4d8b1ed7b68b0/comments", "author": {"login": "Kimundi", "id": 2903206, "node_id": "MDQ6VXNlcjI5MDMyMDY=", "avatar_url": "https://avatars.githubusercontent.com/u/2903206?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kimundi", "html_url": "https://github.com/Kimundi", "followers_url": "https://api.github.com/users/Kimundi/followers", "following_url": "https://api.github.com/users/Kimundi/following{/other_user}", "gists_url": "https://api.github.com/users/Kimundi/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kimundi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kimundi/subscriptions", "organizations_url": "https://api.github.com/users/Kimundi/orgs", "repos_url": "https://api.github.com/users/Kimundi/repos", "events_url": "https://api.github.com/users/Kimundi/events{/privacy}", "received_events_url": "https://api.github.com/users/Kimundi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "96f0512a45ffebbe7488332ec5e44827a14ce78d", "url": "https://api.github.com/repos/rust-lang/rust/commits/96f0512a45ffebbe7488332ec5e44827a14ce78d", "html_url": "https://github.com/rust-lang/rust/commit/96f0512a45ffebbe7488332ec5e44827a14ce78d"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "5d26696f01877e5a7b74832d73ae7c67e8832454", "filename": "src/libcore/num/num.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/d13b23f37e014d1ac63e937e69d4d8b1ed7b68b0/src%2Flibcore%2Fnum%2Fnum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d13b23f37e014d1ac63e937e69d4d8b1ed7b68b0/src%2Flibcore%2Fnum%2Fnum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fnum.rs?ref=d13b23f37e014d1ac63e937e69d4d8b1ed7b68b0", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n //! An interface for numeric types\n+use cmp::Eq;\n+use option::{None, Option, Some};\n \n pub trait Num {\n     // FIXME: Trait composition. (#2616)\n@@ -50,3 +52,11 @@ pub enum RoundMode {\n     RoundToZero,\n     RoundFromZero\n }\n+\n+pub trait ToStrRadix {\n+    pub pure fn to_str_radix(&self, radix: uint) -> ~str;\n+}\n+\n+pub trait FromStrRadix {\n+    static pub pure fn from_str_radix(str: &str, radix: uint) -> Option<self>;\n+}\n\\ No newline at end of file"}]}