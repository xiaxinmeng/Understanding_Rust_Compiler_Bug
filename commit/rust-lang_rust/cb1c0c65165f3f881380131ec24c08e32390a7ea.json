{"sha": "cb1c0c65165f3f881380131ec24c08e32390a7ea", "node_id": "C_kwDOAAsO6NoAKGNiMWMwYzY1MTY1ZjNmODgxMzgwMTMxZWMyNGMwOGUzMjM5MGE3ZWE", "commit": {"author": {"name": "Jack Huey", "email": "31162821+jackh726@users.noreply.github.com", "date": "2022-05-09T20:04:31Z"}, "committer": {"name": "Jack Huey", "email": "31162821+jackh726@users.noreply.github.com", "date": "2022-05-09T20:07:10Z"}, "message": "Don't subst an adt def", "tree": {"sha": "acf4c3f9a3c7cbe7b3aa647b96b5bd5642d46990", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/acf4c3f9a3c7cbe7b3aa647b96b5bd5642d46990"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cb1c0c65165f3f881380131ec24c08e32390a7ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cb1c0c65165f3f881380131ec24c08e32390a7ea", "html_url": "https://github.com/rust-lang/rust/commit/cb1c0c65165f3f881380131ec24c08e32390a7ea", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cb1c0c65165f3f881380131ec24c08e32390a7ea/comments", "author": {"login": "jackh726", "id": 31162821, "node_id": "MDQ6VXNlcjMxMTYyODIx", "avatar_url": "https://avatars.githubusercontent.com/u/31162821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackh726", "html_url": "https://github.com/jackh726", "followers_url": "https://api.github.com/users/jackh726/followers", "following_url": "https://api.github.com/users/jackh726/following{/other_user}", "gists_url": "https://api.github.com/users/jackh726/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackh726/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackh726/subscriptions", "organizations_url": "https://api.github.com/users/jackh726/orgs", "repos_url": "https://api.github.com/users/jackh726/repos", "events_url": "https://api.github.com/users/jackh726/events{/privacy}", "received_events_url": "https://api.github.com/users/jackh726/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jackh726", "id": 31162821, "node_id": "MDQ6VXNlcjMxMTYyODIx", "avatar_url": "https://avatars.githubusercontent.com/u/31162821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackh726", "html_url": "https://github.com/jackh726", "followers_url": "https://api.github.com/users/jackh726/followers", "following_url": "https://api.github.com/users/jackh726/following{/other_user}", "gists_url": "https://api.github.com/users/jackh726/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackh726/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackh726/subscriptions", "organizations_url": "https://api.github.com/users/jackh726/orgs", "repos_url": "https://api.github.com/users/jackh726/repos", "events_url": "https://api.github.com/users/jackh726/events{/privacy}", "received_events_url": "https://api.github.com/users/jackh726/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f9b2e3c87b76c03cc398be8b8f65d096c0583eb2", "url": "https://api.github.com/repos/rust-lang/rust/commits/f9b2e3c87b76c03cc398be8b8f65d096c0583eb2", "html_url": "https://github.com/rust-lang/rust/commit/f9b2e3c87b76c03cc398be8b8f65d096c0583eb2"}], "stats": {"total": 10, "additions": 3, "deletions": 7}, "files": [{"sha": "24ccc730781f251aa619245b1b9cc4767afb1610", "filename": "compiler/rustc_lint/src/builtin.rs", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/cb1c0c65165f3f881380131ec24c08e32390a7ea/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb1c0c65165f3f881380131ec24c08e32390a7ea/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs?ref=cb1c0c65165f3f881380131ec24c08e32390a7ea", "patch": "@@ -41,7 +41,7 @@ use rustc_index::vec::Idx;\n use rustc_middle::lint::LintDiagnosticBuilder;\n use rustc_middle::ty::layout::{LayoutError, LayoutOf};\n use rustc_middle::ty::print::with_no_trimmed_paths;\n-use rustc_middle::ty::subst::{GenericArgKind, Subst};\n+use rustc_middle::ty::subst::GenericArgKind;\n use rustc_middle::ty::Instance;\n use rustc_middle::ty::{self, Ty, TyCtxt};\n use rustc_session::lint::{BuiltinLintDiagnostics, FutureIncompatibilityReason};\n@@ -2776,7 +2776,7 @@ impl ClashingExternDeclarations {\n                 let mut ty = ty;\n                 loop {\n                     if let ty::Adt(def, substs) = *ty.kind() {\n-                        let is_transparent = def.subst(tcx, substs).repr().transparent();\n+                        let is_transparent = def.repr().transparent();\n                         let is_non_null = crate::types::nonnull_optimization_guaranteed(tcx, def);\n                         debug!(\n                             \"non_transparent_ty({:?}) -- type is transparent? {}, type is non-null? {}\",\n@@ -2836,11 +2836,7 @@ impl ClashingExternDeclarations {\n \n                 ensure_sufficient_stack(|| {\n                     match (a_kind, b_kind) {\n-                        (Adt(a_def, a_substs), Adt(b_def, b_substs)) => {\n-                            let a = a.subst(cx.tcx, a_substs);\n-                            let b = b.subst(cx.tcx, b_substs);\n-                            debug!(\"Comparing {:?} and {:?}\", a, b);\n-\n+                        (Adt(a_def, _), Adt(b_def, _)) => {\n                             // We can immediately rule out these types as structurally same if\n                             // their layouts differ.\n                             match compare_layouts(a, b) {"}]}