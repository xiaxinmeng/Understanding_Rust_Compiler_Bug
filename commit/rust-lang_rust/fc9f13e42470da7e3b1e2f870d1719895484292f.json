{"sha": "fc9f13e42470da7e3b1e2f870d1719895484292f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZjOWYxM2U0MjQ3MGRhN2UzYjFlMmY4NzBkMTcxOTg5NTQ4NDI5MmY=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2019-09-14T10:56:44Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2019-09-14T14:36:39Z"}, "message": "def_collector: Do not ICE on attributes on unnamed fields", "tree": {"sha": "dddeef8f9b2b6fae26412e1c2de7910ee708b663", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dddeef8f9b2b6fae26412e1c2de7910ee708b663"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fc9f13e42470da7e3b1e2f870d1719895484292f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fc9f13e42470da7e3b1e2f870d1719895484292f", "html_url": "https://github.com/rust-lang/rust/commit/fc9f13e42470da7e3b1e2f870d1719895484292f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fc9f13e42470da7e3b1e2f870d1719895484292f/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "457666860cf198ddacc3d235b7360499eec3b897", "url": "https://api.github.com/repos/rust-lang/rust/commits/457666860cf198ddacc3d235b7360499eec3b897", "html_url": "https://github.com/rust-lang/rust/commit/457666860cf198ddacc3d235b7360499eec3b897"}], "stats": {"total": 26, "additions": 24, "deletions": 2}, "files": [{"sha": "b42fbd5c0a1ae06107e4bf8185d3c37a9ce57a3b", "filename": "src/librustc/hir/map/def_collector.rs", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/fc9f13e42470da7e3b1e2f870d1719895484292f/src%2Flibrustc%2Fhir%2Fmap%2Fdef_collector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc9f13e42470da7e3b1e2f870d1719895484292f/src%2Flibrustc%2Fhir%2Fmap%2Fdef_collector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fdef_collector.rs?ref=fc9f13e42470da7e3b1e2f870d1719895484292f", "patch": "@@ -170,9 +170,13 @@ impl<'a> visit::Visitor<'a> for DefCollector<'a> {\n     }\n \n     fn visit_variant_data(&mut self, data: &'a VariantData) {\n+        // The assumption here is that non-`cfg` macro expansion cannot change field indices.\n+        // It currently holds because only inert attributes are accepted on fields,\n+        // and every such attribute expands into a single field after it's resolved.\n         for (index, field) in data.fields().iter().enumerate() {\n             if field.is_placeholder {\n                 self.visit_macro_invoc(field.id);\n+                self.definitions.placeholder_field_indices.insert(field.id, index);\n                 continue;\n             }\n             let name = field.ident.map(|ident| ident.name)\n@@ -338,12 +342,19 @@ impl<'a> visit::Visitor<'a> for DefCollector<'a> {\n         }\n     }\n \n+    // This method is called only when we are visiting an individual field\n+    // after expanding an attribute on it.\n     fn visit_struct_field(&mut self, sf: &'a StructField) {\n         if sf.is_placeholder {\n             self.visit_macro_invoc(sf.id)\n         } else {\n-            let name = sf.ident.map(|ident| ident.name)\n-                .unwrap_or_else(|| panic!(\"don't know the field number in this context\"));\n+            let name = sf.ident.map_or_else(\n+                || {\n+                    let expn_id = NodeId::placeholder_from_expn_id(self.expansion);\n+                    sym::integer(self.definitions.placeholder_field_indices[&expn_id])\n+                },\n+                |ident| ident.name,\n+            );\n             let def = self.create_def(sf.id,\n                                         DefPathData::ValueNs(name.as_interned_str()),\n                                         sf.span);"}, {"sha": "187bc5933246078819b9cba87d3a819c453c9677", "filename": "src/librustc/hir/map/definitions.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fc9f13e42470da7e3b1e2f870d1719895484292f/src%2Flibrustc%2Fhir%2Fmap%2Fdefinitions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc9f13e42470da7e3b1e2f870d1719895484292f/src%2Flibrustc%2Fhir%2Fmap%2Fdefinitions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fdefinitions.rs?ref=fc9f13e42470da7e3b1e2f870d1719895484292f", "patch": "@@ -104,6 +104,8 @@ pub struct Definitions {\n     /// When collecting definitions from an AST fragment produced by a macro invocation `ExpnId`\n     /// we know what parent node that fragment should be attached to thanks to this table.\n     invocation_parents: FxHashMap<ExpnId, DefIndex>,\n+    /// Indices of unnamed struct or variant fields with unresolved attributes.\n+    pub(super) placeholder_field_indices: NodeMap<usize>,\n }\n \n /// A unique identifier that we can use to lookup a definition"}, {"sha": "93f364047e9a5dfc6bf780cc66c56696a3caec4e", "filename": "src/test/ui/attributes/unnamed-field-attributes.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/fc9f13e42470da7e3b1e2f870d1719895484292f/src%2Ftest%2Fui%2Fattributes%2Funnamed-field-attributes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc9f13e42470da7e3b1e2f870d1719895484292f/src%2Ftest%2Fui%2Fattributes%2Funnamed-field-attributes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fattributes%2Funnamed-field-attributes.rs?ref=fc9f13e42470da7e3b1e2f870d1719895484292f", "patch": "@@ -0,0 +1,9 @@\n+// check-pass\n+\n+struct S(\n+    #[rustfmt::skip] u8,\n+    u16,\n+    #[rustfmt::skip] u32,\n+);\n+\n+fn main() {}"}]}