{"sha": "c06251b0d2765f31c7e1b3f94490c5e7f454a3b6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMwNjI1MWIwZDI3NjVmMzFjN2UxYjNmOTQ0OTBjNWU3ZjQ1NGEzYjY=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-no-reply-9879165716479413131@oli-obk.de", "date": "2017-02-09T18:08:24Z"}, "committer": {"name": "Oliver Schneider", "email": "git-no-reply-9879165716479413131@oli-obk.de", "date": "2017-02-09T18:08:24Z"}, "message": "double space", "tree": {"sha": "f852cf367684084c052d1bd9d36072858b5abfff", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f852cf367684084c052d1bd9d36072858b5abfff"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c06251b0d2765f31c7e1b3f94490c5e7f454a3b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c06251b0d2765f31c7e1b3f94490c5e7f454a3b6", "html_url": "https://github.com/rust-lang/rust/commit/c06251b0d2765f31c7e1b3f94490c5e7f454a3b6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c06251b0d2765f31c7e1b3f94490c5e7f454a3b6/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d92085fd0e113d4e4cb7f6c204008541760e39cc", "url": "https://api.github.com/repos/rust-lang/rust/commits/d92085fd0e113d4e4cb7f6c204008541760e39cc", "html_url": "https://github.com/rust-lang/rust/commit/d92085fd0e113d4e4cb7f6c204008541760e39cc"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "602edba0f54590b7d2ed0099afdab95014e3a37e", "filename": "src/vtable.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c06251b0d2765f31c7e1b3f94490c5e7f454a3b6/src%2Fvtable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c06251b0d2765f31c7e1b3f94490c5e7f454a3b6/src%2Fvtable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvtable.rs?ref=c06251b0d2765f31c7e1b3f94490c5e7f454a3b6", "patch": "@@ -94,7 +94,7 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n         self.memory.write_usize(vtable, 0)?;\n         if let ty::TyAdt(adt_def, substs) = trait_ref.self_ty().sty {\n             if let Some(drop_def_id) = adt_def.destructor() {\n-                let fn_ty = match  self.tcx.item_type(drop_def_id).sty {\n+                let fn_ty = match self.tcx.item_type(drop_def_id).sty {\n                     ty::TyFnDef(_, _, fn_ty) => self.tcx.erase_regions(&fn_ty),\n                     _ => bug!(\"drop method is not a TyFnDef\"),\n                 };"}]}