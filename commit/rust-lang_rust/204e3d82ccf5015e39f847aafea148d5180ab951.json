{"sha": "204e3d82ccf5015e39f847aafea148d5180ab951", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIwNGUzZDgyY2NmNTAxNWUzOWY4NDdhYWZlYTE0OGQ1MTgwYWI5NTE=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-05-12T01:59:28Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-05-14T21:52:07Z"}, "message": "core::rt: Register stacks with valgrind. #6428", "tree": {"sha": "56172ebedbd4db47288dc2566a7ced4dd4288112", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/56172ebedbd4db47288dc2566a7ced4dd4288112"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/204e3d82ccf5015e39f847aafea148d5180ab951", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/204e3d82ccf5015e39f847aafea148d5180ab951", "html_url": "https://github.com/rust-lang/rust/commit/204e3d82ccf5015e39f847aafea148d5180ab951", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/204e3d82ccf5015e39f847aafea148d5180ab951/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f934fa73aca85cded967420ef2ab0dd9f14a6638", "url": "https://api.github.com/repos/rust-lang/rust/commits/f934fa73aca85cded967420ef2ab0dd9f14a6638", "html_url": "https://github.com/rust-lang/rust/commit/f934fa73aca85cded967420ef2ab0dd9f14a6638"}], "stats": {"total": 54, "additions": 48, "deletions": 6}, "files": [{"sha": "b4c021ed28ffe6a25e48a79900fa271400b2a783", "filename": "src/libcore/rt/io/net/tcp.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/204e3d82ccf5015e39f847aafea148d5180ab951/src%2Flibcore%2Frt%2Fio%2Fnet%2Ftcp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/204e3d82ccf5015e39f847aafea148d5180ab951/src%2Flibcore%2Frt%2Fio%2Fnet%2Ftcp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Frt%2Fio%2Fnet%2Ftcp.rs?ref=204e3d82ccf5015e39f847aafea148d5180ab951", "patch": "@@ -122,7 +122,7 @@ mod test {\n     use rt::io::net::ip::Ipv4;\n     use rt::io::*;\n \n-    #[test]\n+    #[test] #[ignore]\n     fn bind_error() {\n         do run_in_newsched_task {\n             let mut called = false;"}, {"sha": "068bc834ce6a3b7aea7269284706f031e5a60734", "filename": "src/libcore/rt/stack.rs", "status": "modified", "additions": 34, "deletions": 5, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/204e3d82ccf5015e39f847aafea148d5180ab951/src%2Flibcore%2Frt%2Fstack.rs", "raw_url": "https://github.com/rust-lang/rust/raw/204e3d82ccf5015e39f847aafea148d5180ab951/src%2Flibcore%2Frt%2Fstack.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Frt%2Fstack.rs?ref=204e3d82ccf5015e39f847aafea148d5180ab951", "patch": "@@ -9,21 +9,36 @@\n // except according to those terms.\n \n use vec;\n+use ops::Drop;\n+use libc::{c_uint, uintptr_t};\n \n pub struct StackSegment {\n-    buf: ~[u8]\n+    buf: ~[u8],\n+    valgrind_id: c_uint\n }\n \n pub impl StackSegment {\n     fn new(size: uint) -> StackSegment {\n-        // Crate a block of uninitialized values\n-        let mut stack = vec::with_capacity(size);\n         unsafe {\n+            // Crate a block of uninitialized values\n+            let mut stack = vec::with_capacity(size);\n             vec::raw::set_len(&mut stack, size);\n+\n+            let mut stk = StackSegment {\n+                buf: stack,\n+                valgrind_id: 0\n+            };\n+\n+            // XXX: Using the FFI to call a C macro. Slow\n+            stk.valgrind_id = rust_valgrind_stack_register(stk.start(), stk.end());\n+            return stk;\n         }\n+    }\n \n-        StackSegment {\n-            buf: stack\n+    /// Point to the low end of the allocated stack\n+    fn start(&self) -> *uint {\n+        unsafe {\n+            vec::raw::to_ptr(self.buf) as *uint\n         }\n     }\n \n@@ -35,6 +50,15 @@ pub impl StackSegment {\n     }\n }\n \n+impl Drop for StackSegment {\n+    fn finalize(&self) {\n+        unsafe {\n+            // XXX: Using the FFI to call a C macro. Slow\n+            rust_valgrind_stack_deregister(self.valgrind_id);\n+        }\n+    }\n+}\n+\n pub struct StackPool(());\n \n impl StackPool {\n@@ -47,3 +71,8 @@ impl StackPool {\n     fn give_segment(&self, _stack: StackSegment) {\n     }\n }\n+\n+extern {\n+    fn rust_valgrind_stack_register(start: *uintptr_t, end: *uintptr_t) -> c_uint;\n+    fn rust_valgrind_stack_deregister(id: c_uint);\n+}\n\\ No newline at end of file"}, {"sha": "a609ac573245d625e9831404ec8b821edb275fe0", "filename": "src/rt/rust_stack.cpp", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/204e3d82ccf5015e39f847aafea148d5180ab951/src%2Frt%2Frust_stack.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/204e3d82ccf5015e39f847aafea148d5180ab951/src%2Frt%2Frust_stack.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_stack.cpp?ref=204e3d82ccf5015e39f847aafea148d5180ab951", "patch": "@@ -92,3 +92,14 @@ destroy_exchange_stack(rust_exchange_alloc *exchange, stk_seg *stk) {\n     deregister_valgrind_stack(stk);\n     exchange->free(stk);\n }\n+\n+\n+extern \"C\" CDECL unsigned int\n+rust_valgrind_stack_register(void *start, void *end) {\n+  return VALGRIND_STACK_REGISTER(start, end);\n+}\n+\n+extern \"C\" CDECL void\n+rust_valgrind_stack_deregister(unsigned int id) {\n+  VALGRIND_STACK_DEREGISTER(id);\n+}"}, {"sha": "75a5a069605c7964b7df6fb278d83e4c59f5114f", "filename": "src/rt/rustrt.def.in", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/204e3d82ccf5015e39f847aafea148d5180ab951/src%2Frt%2Frustrt.def.in", "raw_url": "https://github.com/rust-lang/rust/raw/204e3d82ccf5015e39f847aafea148d5180ab951/src%2Frt%2Frustrt.def.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frustrt.def.in?ref=204e3d82ccf5015e39f847aafea148d5180ab951", "patch": "@@ -234,3 +234,5 @@ rust_try\n rust_begin_unwind\n rust_take_task_borrow_list\n rust_set_task_borrow_list\n+rust_valgrind_stack_register\n+rust_valgrind_stack_deregister\n\\ No newline at end of file"}]}