{"sha": "051168b87641f8f10fa174a9f74a295eac2a4e7f", "node_id": "C_kwDOAAsO6NoAKDA1MTE2OGI4NzY0MWY4ZjEwZmExNzRhOWY3NGEyOTVlYWMyYTRlN2Y", "commit": {"author": {"name": "the8472", "email": "the8472@users.noreply.github.com", "date": "2021-09-21T20:53:59Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-09-21T20:53:59Z"}, "message": "Rollup merge of #89015 - klensy:escape-def, r=Mark-Simulacrum\n\ncore::ascii::escape_default: reduce struct size", "tree": {"sha": "2d7e222a28f390ccd1373b2c35d7122783cc0331", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2d7e222a28f390ccd1373b2c35d7122783cc0331"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/051168b87641f8f10fa174a9f74a295eac2a4e7f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhSkZnCRBK7hj4Ov3rIwAA534IAEBc1yprDIERmbhkiVR3h8RA\nqSDQAKl984Vlghk1pkW9hghASzD0a6J5nZcy2GFoKy/r/G2ZnWgeqz56kduNeQ9f\n54pXBxkZv/n9D5PXqqOdyByn6GZ1qSe+w/6SZjfcVasNleyo4tZrq0eSYQl52cHT\nNt2er805J4aW36Tsc8VCx5CeyeS1nUL87eVcmgrG7emwe4Fr2mvW29z+6w8fXu/v\nKbLP5d2rCg88DJhjhR+U8U8aRC9wWiWAZZGuKdmhXVUBQd04aWsH4lcCMUsUjszJ\nnKEJABjhoMVdAOXGWF5bGdxJjx7JiyAgMou53RTa8hD/rL2MIlK0DTk1tE5c48A=\n=5Nei\n-----END PGP SIGNATURE-----\n", "payload": "tree 2d7e222a28f390ccd1373b2c35d7122783cc0331\nparent c2cdba42b975d0fff4b48cb219e57c0a232c9bab\nparent cccd6e0e830fcaaa5891102f48b10786c24a2fe5\nauthor the8472 <the8472@users.noreply.github.com> 1632257639 +0200\ncommitter GitHub <noreply@github.com> 1632257639 +0200\n\nRollup merge of #89015 - klensy:escape-def, r=Mark-Simulacrum\n\ncore::ascii::escape_default: reduce struct size\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/051168b87641f8f10fa174a9f74a295eac2a4e7f", "html_url": "https://github.com/rust-lang/rust/commit/051168b87641f8f10fa174a9f74a295eac2a4e7f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/051168b87641f8f10fa174a9f74a295eac2a4e7f/comments", "author": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c2cdba42b975d0fff4b48cb219e57c0a232c9bab", "url": "https://api.github.com/repos/rust-lang/rust/commits/c2cdba42b975d0fff4b48cb219e57c0a232c9bab", "html_url": "https://github.com/rust-lang/rust/commit/c2cdba42b975d0fff4b48cb219e57c0a232c9bab"}, {"sha": "cccd6e0e830fcaaa5891102f48b10786c24a2fe5", "url": "https://api.github.com/repos/rust-lang/rust/commits/cccd6e0e830fcaaa5891102f48b10786c24a2fe5", "html_url": "https://github.com/rust-lang/rust/commit/cccd6e0e830fcaaa5891102f48b10786c24a2fe5"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "0a456ee1eb2d59fde0ac9d7c2b56382ee0a1da1a", "filename": "library/core/src/ascii.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/051168b87641f8f10fa174a9f74a295eac2a4e7f/library%2Fcore%2Fsrc%2Fascii.rs", "raw_url": "https://github.com/rust-lang/rust/raw/051168b87641f8f10fa174a9f74a295eac2a4e7f/library%2Fcore%2Fsrc%2Fascii.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fascii.rs?ref=051168b87641f8f10fa174a9f74a295eac2a4e7f", "patch": "@@ -21,7 +21,7 @@ use crate::str::from_utf8_unchecked;\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n #[derive(Clone)]\n pub struct EscapeDefault {\n-    range: Range<usize>,\n+    range: Range<u8>,\n     data: [u8; 4],\n }\n \n@@ -114,7 +114,7 @@ pub fn escape_default(c: u8) -> EscapeDefault {\n impl Iterator for EscapeDefault {\n     type Item = u8;\n     fn next(&mut self) -> Option<u8> {\n-        self.range.next().map(|i| self.data[i])\n+        self.range.next().map(|i| self.data[i as usize])\n     }\n     fn size_hint(&self) -> (usize, Option<usize>) {\n         self.range.size_hint()\n@@ -126,7 +126,7 @@ impl Iterator for EscapeDefault {\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl DoubleEndedIterator for EscapeDefault {\n     fn next_back(&mut self) -> Option<u8> {\n-        self.range.next_back().map(|i| self.data[i])\n+        self.range.next_back().map(|i| self.data[i as usize])\n     }\n }\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -138,7 +138,9 @@ impl FusedIterator for EscapeDefault {}\n impl fmt::Display for EscapeDefault {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n         // SAFETY: ok because `escape_default` created only valid utf-8 data\n-        f.write_str(unsafe { from_utf8_unchecked(&self.data[self.range.clone()]) })\n+        f.write_str(unsafe {\n+            from_utf8_unchecked(&self.data[(self.range.start as usize)..(self.range.end as usize)])\n+        })\n     }\n }\n "}]}