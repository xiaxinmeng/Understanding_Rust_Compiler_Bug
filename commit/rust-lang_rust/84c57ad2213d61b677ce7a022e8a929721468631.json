{"sha": "84c57ad2213d61b677ce7a022e8a929721468631", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg0YzU3YWQyMjEzZDYxYjY3N2NlN2EwMjJlOGE5Mjk3MjE0Njg2MzE=", "commit": {"author": {"name": "Mrmaxmeier", "email": "Mrmaxmeier@gmail.com", "date": "2017-01-18T20:35:38Z"}, "committer": {"name": "Mrmaxmeier", "email": "Mrmaxmeier@gmail.com", "date": "2017-01-18T20:35:38Z"}, "message": "rustup to rustc 1.16.0-nightly (c07a6ae77 2017-01-17)", "tree": {"sha": "371154dd5ff409f4dc2203a25632bed4ca7e9458", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/371154dd5ff409f4dc2203a25632bed4ca7e9458"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/84c57ad2213d61b677ce7a022e8a929721468631", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/84c57ad2213d61b677ce7a022e8a929721468631", "html_url": "https://github.com/rust-lang/rust/commit/84c57ad2213d61b677ce7a022e8a929721468631", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/84c57ad2213d61b677ce7a022e8a929721468631/comments", "author": {"login": "Mrmaxmeier", "id": 3913977, "node_id": "MDQ6VXNlcjM5MTM5Nzc=", "avatar_url": "https://avatars.githubusercontent.com/u/3913977?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mrmaxmeier", "html_url": "https://github.com/Mrmaxmeier", "followers_url": "https://api.github.com/users/Mrmaxmeier/followers", "following_url": "https://api.github.com/users/Mrmaxmeier/following{/other_user}", "gists_url": "https://api.github.com/users/Mrmaxmeier/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mrmaxmeier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mrmaxmeier/subscriptions", "organizations_url": "https://api.github.com/users/Mrmaxmeier/orgs", "repos_url": "https://api.github.com/users/Mrmaxmeier/repos", "events_url": "https://api.github.com/users/Mrmaxmeier/events{/privacy}", "received_events_url": "https://api.github.com/users/Mrmaxmeier/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mrmaxmeier", "id": 3913977, "node_id": "MDQ6VXNlcjM5MTM5Nzc=", "avatar_url": "https://avatars.githubusercontent.com/u/3913977?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mrmaxmeier", "html_url": "https://github.com/Mrmaxmeier", "followers_url": "https://api.github.com/users/Mrmaxmeier/followers", "following_url": "https://api.github.com/users/Mrmaxmeier/following{/other_user}", "gists_url": "https://api.github.com/users/Mrmaxmeier/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mrmaxmeier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mrmaxmeier/subscriptions", "organizations_url": "https://api.github.com/users/Mrmaxmeier/orgs", "repos_url": "https://api.github.com/users/Mrmaxmeier/repos", "events_url": "https://api.github.com/users/Mrmaxmeier/events{/privacy}", "received_events_url": "https://api.github.com/users/Mrmaxmeier/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "713da45906321233e8cc66aac200c2517162d3a2", "url": "https://api.github.com/repos/rust-lang/rust/commits/713da45906321233e8cc66aac200c2517162d3a2", "html_url": "https://github.com/rust-lang/rust/commit/713da45906321233e8cc66aac200c2517162d3a2"}], "stats": {"total": 29, "additions": 20, "deletions": 9}, "files": [{"sha": "720cf29247c2e28396fce8152f055deea2faee4e", "filename": "clippy_lints/src/lifetimes.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/84c57ad2213d61b677ce7a022e8a929721468631/clippy_lints%2Fsrc%2Flifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84c57ad2213d61b677ce7a022e8a929721468631/clippy_lints%2Fsrc%2Flifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flifetimes.rs?ref=84c57ad2213d61b677ce7a022e8a929721468631", "patch": "@@ -326,7 +326,8 @@ fn has_where_lifetimes<'a, 'tcx: 'a>(cx: &LateContext<'a, 'tcx>, where_clause: &\n             },\n             WherePredicate::EqPredicate(ref pred) => {\n                 let mut visitor = RefVisitor::new(cx);\n-                walk_ty(&mut visitor, &pred.ty);\n+                walk_ty(&mut visitor, &pred.lhs_ty);\n+                walk_ty(&mut visitor, &pred.rhs_ty);\n                 if !visitor.lts.is_empty() {\n                     return true;\n                 }"}, {"sha": "9fc089bef43eeccef85421b4117c70b0f25babb6", "filename": "clippy_lints/src/shadow.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/84c57ad2213d61b677ce7a022e8a929721468631/clippy_lints%2Fsrc%2Fshadow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84c57ad2213d61b677ce7a022e8a929721468631/clippy_lints%2Fsrc%2Fshadow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fshadow.rs?ref=84c57ad2213d61b677ce7a022e8a929721468631", "patch": "@@ -335,7 +335,6 @@ fn check_expr<'a, 'tcx>(cx: &LateContext<'a, 'tcx>, expr: &'tcx Expr, bindings:\n \n fn check_ty<'a, 'tcx>(cx: &LateContext<'a, 'tcx>, ty: &'tcx Ty, bindings: &mut Vec<(Name, Span)>) {\n     match ty.node {\n-        TyObjectSum(ref sty, _) |\n         TySlice(ref sty) => check_ty(cx, sty, bindings),\n         TyArray(ref fty, body_id) => {\n             check_ty(cx, fty, bindings);"}, {"sha": "bae4363659a6d5b06ad1969a249d8dfa4eaef767", "filename": "clippy_lints/src/types.rs", "status": "modified", "additions": 17, "deletions": 6, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/84c57ad2213d61b677ce7a022e8a929721468631/clippy_lints%2Fsrc%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84c57ad2213d61b677ce7a022e8a929721468631/clippy_lints%2Fsrc%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftypes.rs?ref=84c57ad2213d61b677ce7a022e8a929721468631", "patch": "@@ -699,12 +699,23 @@ impl<'a, 'tcx: 'a> Visitor<'tcx> for TypeComplexityVisitor<'a, 'tcx> {\n             // the \"normal\" components of a type: named types, arrays/tuples\n             TyPath(..) | TySlice(..) | TyTup(..) | TyArray(..) => (10 * self.nest, 1),\n \n-            // \"Sum\" of trait bounds\n-            TyObjectSum(..) => (20 * self.nest, 0),\n-\n-            // function types and \"for<...>\" bring a lot of overhead\n-            TyBareFn(..) |\n-            TyPolyTraitRef(..) => (50 * self.nest, 1),\n+            // function types bring a lot of overhead\n+            TyBareFn(..) => (50 * self.nest, 1),\n+\n+            TyTraitObject(ref bounds) => {\n+                let has_lifetimes = bounds.iter()\n+                    .any(|bound| match *bound {\n+                        TraitTyParamBound(ref poly_trait, ..) => !poly_trait.bound_lifetimes.is_empty(),\n+                        RegionTyParamBound(..) => true,\n+                    });\n+                if has_lifetimes {\n+                    // complex trait bounds like A<'a, 'b>\n+                    (50 * self.nest, 1)\n+                } else {\n+                    // simple trait bounds like A + B\n+                    (20 * self.nest, 0)\n+                }\n+            },\n \n             _ => (0, 0),\n         };"}, {"sha": "2c10db158cb32ba489f926bb0e6206db4511acc1", "filename": "clippy_lints/src/utils/sugg.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/84c57ad2213d61b677ce7a022e8a929721468631/clippy_lints%2Fsrc%2Futils%2Fsugg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84c57ad2213d61b677ce7a022e8a929721468631/clippy_lints%2Fsrc%2Futils%2Fsugg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fsugg.rs?ref=84c57ad2213d61b677ce7a022e8a929721468631", "patch": "@@ -116,7 +116,7 @@ impl<'a> Sugg<'a> {\n             ast::ExprKind::Try(..) |\n             ast::ExprKind::Tup(..) |\n             ast::ExprKind::TupField(..) |\n-            ast::ExprKind::Vec(..) |\n+            ast::ExprKind::Array(..) |\n             ast::ExprKind::While(..) |\n             ast::ExprKind::WhileLet(..) => Sugg::NonParen(snippet),\n             ast::ExprKind::Range(.., RangeLimits::HalfOpen) => Sugg::BinOp(AssocOp::DotDot, snippet),"}]}