{"sha": "8841ede3648b5f12284dae850ec065374fd3af46", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg4NDFlZGUzNjQ4YjVmMTIyODRkYWU4NTBlYzA2NTM3NGZkM2FmNDY=", "commit": {"author": {"name": "csmoe", "email": "csmoe@msn.com", "date": "2020-05-16T09:10:08Z"}, "committer": {"name": "csmoe", "email": "csmoe@msn.com", "date": "2020-05-18T00:44:38Z"}, "message": "bless suggestion on spell out", "tree": {"sha": "c0e15a9bf4bb1c11c01fd2c3e8a7395ded5f758f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c0e15a9bf4bb1c11c01fd2c3e8a7395ded5f758f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8841ede3648b5f12284dae850ec065374fd3af46", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8841ede3648b5f12284dae850ec065374fd3af46", "html_url": "https://github.com/rust-lang/rust/commit/8841ede3648b5f12284dae850ec065374fd3af46", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8841ede3648b5f12284dae850ec065374fd3af46/comments", "author": {"login": "csmoe", "id": 35686186, "node_id": "MDQ6VXNlcjM1Njg2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/35686186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csmoe", "html_url": "https://github.com/csmoe", "followers_url": "https://api.github.com/users/csmoe/followers", "following_url": "https://api.github.com/users/csmoe/following{/other_user}", "gists_url": "https://api.github.com/users/csmoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/csmoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csmoe/subscriptions", "organizations_url": "https://api.github.com/users/csmoe/orgs", "repos_url": "https://api.github.com/users/csmoe/repos", "events_url": "https://api.github.com/users/csmoe/events{/privacy}", "received_events_url": "https://api.github.com/users/csmoe/received_events", "type": "User", "site_admin": false}, "committer": {"login": "csmoe", "id": 35686186, "node_id": "MDQ6VXNlcjM1Njg2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/35686186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csmoe", "html_url": "https://github.com/csmoe", "followers_url": "https://api.github.com/users/csmoe/followers", "following_url": "https://api.github.com/users/csmoe/following{/other_user}", "gists_url": "https://api.github.com/users/csmoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/csmoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csmoe/subscriptions", "organizations_url": "https://api.github.com/users/csmoe/orgs", "repos_url": "https://api.github.com/users/csmoe/repos", "events_url": "https://api.github.com/users/csmoe/events{/privacy}", "received_events_url": "https://api.github.com/users/csmoe/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "633e4aafe65cd424cf6c8076869df1b49a4e0ec4", "url": "https://api.github.com/repos/rust-lang/rust/commits/633e4aafe65cd424cf6c8076869df1b49a4e0ec4", "html_url": "https://github.com/rust-lang/rust/commit/633e4aafe65cd424cf6c8076869df1b49a4e0ec4"}], "stats": {"total": 29, "additions": 13, "deletions": 16}, "files": [{"sha": "6467561e509fa6c2c1b5ee8e03cbb9761769217a", "filename": "src/librustc_error_codes/error_codes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8841ede3648b5f12284dae850ec065374fd3af46/src%2Flibrustc_error_codes%2Ferror_codes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8841ede3648b5f12284dae850ec065374fd3af46/src%2Flibrustc_error_codes%2Ferror_codes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_error_codes%2Ferror_codes.rs?ref=8841ede3648b5f12284dae850ec065374fd3af46", "patch": "@@ -435,7 +435,7 @@ E0750: include_str!(\"./error_codes/E0750.md\"),\n E0751: include_str!(\"./error_codes/E0751.md\"),\n E0752: include_str!(\"./error_codes/E0752.md\"),\n E0753: include_str!(\"./error_codes/E0753.md\"),\n-E0754: include_str!(\"./error_codes/E0754.md\"),\n+E0755: include_str!(\"./error_codes/E0755.md\"),\n ;\n //  E0006, // merged with E0005\n //  E0008, // cannot bind by-move into a pattern guard"}, {"sha": "b6eb2e34ccfc5d2c2656dd9e7303a9d941318159", "filename": "src/librustc_error_codes/error_codes/E0755.md", "status": "renamed", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/8841ede3648b5f12284dae850ec065374fd3af46/src%2Flibrustc_error_codes%2Ferror_codes%2FE0755.md", "raw_url": "https://github.com/rust-lang/rust/raw/8841ede3648b5f12284dae850ec065374fd3af46/src%2Flibrustc_error_codes%2Ferror_codes%2FE0755.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_error_codes%2Ferror_codes%2FE0755.md?ref=8841ede3648b5f12284dae850ec065374fd3af46", "patch": "@@ -1,4 +1,5 @@\n-`async fn`/`impl trait` return type cannot contain a projection or `Self` that references lifetimes from a parent scope.\n+`async fn`/`impl trait` return type cannot contain a projection\n+or `Self` that references lifetimes from a parent scope.\n \n Erroneous code example:\n \n@@ -24,6 +25,8 @@ impl<'a> S<'a> {\n }\n ```\n \n-This will be allowed at some point in the future, but the implementation is not yet complete. See the [issue-61949] for this limitation.\n+This will be allowed at some point in the future,\n+but the implementation is not yet complete.\n+See the [issue-61949] for this limitation.\n \n [issue-61949]: https://github.com/rust-lang/rust/issues/61949", "previous_filename": "src/librustc_error_codes/error_codes/E0754.md"}, {"sha": "bd8f628957dc12cb0fa5b49c1d55be0fa74842f9", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8841ede3648b5f12284dae850ec065374fd3af46/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8841ede3648b5f12284dae850ec065374fd3af46/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=8841ede3648b5f12284dae850ec065374fd3af46", "patch": "@@ -1701,7 +1701,7 @@ fn check_opaque_for_inheriting_lifetimes(tcx: TyCtxt<'tcx>, def_id: LocalDefId,\n         let mut err = struct_span_err!(\n             tcx.sess,\n             span,\n-            E0754,\n+            E0755,\n             \"`{}` return type cannot contain a projection or `Self` that references lifetimes from \\\n              a parent scope\",\n             if is_async { \"async fn\" } else { \"impl Trait\" },"}, {"sha": "fe05754c83ff865ad6c85a5cb19381ec06bb3c08", "filename": "src/test/ui/async-await/issue-61949-self-return-type.stderr", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/8841ede3648b5f12284dae850ec065374fd3af46/src%2Ftest%2Fui%2Fasync-await%2Fissue-61949-self-return-type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8841ede3648b5f12284dae850ec065374fd3af46/src%2Ftest%2Fui%2Fasync-await%2Fissue-61949-self-return-type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fissue-61949-self-return-type.stderr?ref=8841ede3648b5f12284dae850ec065374fd3af46", "patch": "@@ -1,8 +1,9 @@\n-error: `async fn` return type cannot contain a projection or `Self` that references lifetimes from a parent scope\n+error[E0755]: `async fn` return type cannot contain a projection or `Self` that references lifetimes from a parent scope\n   --> $DIR/issue-61949-self-return-type.rs:11:40\n    |\n LL |     pub async fn new(_bar: &'a i32) -> Self {\n-   |                                        ^^^^\n+   |                                        ^^^^ help: consider spelling out the type instead: `Foo<'a>`\n \n error: aborting due to previous error\n \n+For more information about this error, try `rustc --explain E0754`."}, {"sha": "1ebfdfa8b54c5810e9a91ce5bb9549adac221e6d", "filename": "src/test/ui/async-await/issue-69276.stderr", "status": "removed", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/633e4aafe65cd424cf6c8076869df1b49a4e0ec4/src%2Ftest%2Fui%2Fasync-await%2Fissue-69276.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/633e4aafe65cd424cf6c8076869df1b49a4e0ec4/src%2Ftest%2Fui%2Fasync-await%2Fissue-69276.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fissue-69276.stderr?ref=633e4aafe65cd424cf6c8076869df1b49a4e0ec4", "patch": "@@ -1,8 +0,0 @@\n-error: `async fn` return type cannot contain a projection or `Self` that references lifetimes from a parent scope\n-  --> $DIR/issue-69276.rs:6:33\n-   |\n-LL |     async fn new(i: &'a i32) -> Self {\n-   |                                 ^^^^\n-\n-error: aborting due to previous error\n-"}, {"sha": "04b398f5b528393f725c7d17a26d282cd5e5084c", "filename": "src/test/ui/impl-trait/bound-normalization-fail.stderr", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/8841ede3648b5f12284dae850ec065374fd3af46/src%2Ftest%2Fui%2Fimpl-trait%2Fbound-normalization-fail.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8841ede3648b5f12284dae850ec065374fd3af46/src%2Ftest%2Fui%2Fimpl-trait%2Fbound-normalization-fail.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fbound-normalization-fail.stderr?ref=8841ede3648b5f12284dae850ec065374fd3af46", "patch": "@@ -20,7 +20,7 @@ help: consider constraining the associated type `<T as impl_trait::Trait>::Assoc\n LL |     fn foo_fail<T: Trait<Assoc = ()>>() -> impl FooLike<Output=T::Assoc> {\n    |                         ^^^^^^^^^^^^\n \n-error: `impl Trait` return type cannot contain a projection or `Self` that references lifetimes from a parent scope\n+error[E0755]: `impl Trait` return type cannot contain a projection or `Self` that references lifetimes from a parent scope\n   --> $DIR/bound-normalization-fail.rs:43:41\n    |\n LL |     fn foo2_fail<'a, T: Trait<'a>>() -> impl FooLike<Output=T::Assoc> {\n@@ -42,4 +42,5 @@ LL |     fn foo2_fail<'a, T: Trait<'a, Assoc = ()>>() -> impl FooLike<Output=T::\n \n error: aborting due to 3 previous errors; 1 warning emitted\n \n-For more information about this error, try `rustc --explain E0271`.\n+Some errors have detailed explanations: E0271, E0755.\n+For more information about an error, try `rustc --explain E0271`."}]}