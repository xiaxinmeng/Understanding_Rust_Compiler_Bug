{"sha": "50619f568a250750fcb6bea271ccfd8fdc0926bf", "node_id": "C_kwDOAAsO6NoAKDUwNjE5ZjU2OGEyNTA3NTBmY2I2YmVhMjcxY2NmZDhmZGMwOTI2YmY", "commit": {"author": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2021-11-27T03:27:40Z"}, "committer": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2021-11-27T03:27:40Z"}, "message": "Demonstration test for #91161", "tree": {"sha": "b735534f2041bec7734dc6ae1ba5317f21d1bd82", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b735534f2041bec7734dc6ae1ba5317f21d1bd82"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/50619f568a250750fcb6bea271ccfd8fdc0926bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/50619f568a250750fcb6bea271ccfd8fdc0926bf", "html_url": "https://github.com/rust-lang/rust/commit/50619f568a250750fcb6bea271ccfd8fdc0926bf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/50619f568a250750fcb6bea271ccfd8fdc0926bf/comments", "author": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f7c48297ce21ac0dc5b36ff730377bdb7be6ece4", "url": "https://api.github.com/repos/rust-lang/rust/commits/f7c48297ce21ac0dc5b36ff730377bdb7be6ece4", "html_url": "https://github.com/rust-lang/rust/commit/f7c48297ce21ac0dc5b36ff730377bdb7be6ece4"}], "stats": {"total": 29, "additions": 29, "deletions": 0}, "files": [{"sha": "cb2b585ab96a8cd7680b5b006228e1cee1936a09", "filename": "src/test/ui/rfc-2008-non-exhaustive/auxiliary/enums.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/50619f568a250750fcb6bea271ccfd8fdc0926bf/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fauxiliary%2Fenums.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50619f568a250750fcb6bea271ccfd8fdc0926bf/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fauxiliary%2Fenums.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fauxiliary%2Fenums.rs?ref=50619f568a250750fcb6bea271ccfd8fdc0926bf", "patch": "@@ -30,3 +30,15 @@ pub enum VariantNonExhaustive {\n pub enum NonExhaustiveSingleVariant {\n     A(bool),\n }\n+\n+#[repr(u8)]\n+pub enum FieldLessWithNonExhaustiveVariant {\n+    A,\n+    B,\n+    #[non_exhaustive]\n+    C,\n+}\n+\n+impl Default for FieldLessWithNonExhaustiveVariant {\n+    fn default() -> Self { Self::A }\n+}"}, {"sha": "d9657bac776850916b972c148ce2b56bb18421e2", "filename": "src/test/ui/rfc-2008-non-exhaustive/enum-as-cast.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/50619f568a250750fcb6bea271ccfd8fdc0926bf/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fenum-as-cast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50619f568a250750fcb6bea271ccfd8fdc0926bf/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fenum-as-cast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fenum-as-cast.rs?ref=50619f568a250750fcb6bea271ccfd8fdc0926bf", "patch": "@@ -0,0 +1,17 @@\n+// aux-build:enums.rs\n+// run-pass\n+\n+extern crate enums;\n+\n+use enums::FieldLessWithNonExhaustiveVariant;\n+\n+fn main() {\n+    let e = FieldLessWithNonExhaustiveVariant::default();\n+    // FIXME: https://github.com/rust-lang/rust/issues/91161\n+    // This `as` cast *should* be an error, since it would fail\n+    // if the non-exhaustive variant got fields.  But today it\n+    // doesn't.  The fix for that will update this test to\n+    // show an error (and not be run-pass any more).\n+    let d = e as u8;\n+    assert_eq!(d, 0);\n+}"}]}