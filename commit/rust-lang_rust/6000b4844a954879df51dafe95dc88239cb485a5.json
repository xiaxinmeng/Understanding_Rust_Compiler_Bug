{"sha": "6000b4844a954879df51dafe95dc88239cb485a5", "node_id": "C_kwDOAAsO6NoAKDYwMDBiNDg0NGE5NTQ4NzlkZjUxZGFmZTk1ZGM4ODIzOWNiNDg1YTU", "commit": {"author": {"name": "b-naber", "email": "bn263@gmx.de", "date": "2021-10-18T16:25:45Z"}, "committer": {"name": "b-naber", "email": "bn263@gmx.de", "date": "2021-11-05T17:40:26Z"}, "message": "add tests", "tree": {"sha": "a09536ee87a291fc0de090eae8f6f3c7390f6095", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a09536ee87a291fc0de090eae8f6f3c7390f6095"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6000b4844a954879df51dafe95dc88239cb485a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6000b4844a954879df51dafe95dc88239cb485a5", "html_url": "https://github.com/rust-lang/rust/commit/6000b4844a954879df51dafe95dc88239cb485a5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6000b4844a954879df51dafe95dc88239cb485a5/comments", "author": {"login": "b-naber", "id": 71934879, "node_id": "MDQ6VXNlcjcxOTM0ODc5", "avatar_url": "https://avatars.githubusercontent.com/u/71934879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/b-naber", "html_url": "https://github.com/b-naber", "followers_url": "https://api.github.com/users/b-naber/followers", "following_url": "https://api.github.com/users/b-naber/following{/other_user}", "gists_url": "https://api.github.com/users/b-naber/gists{/gist_id}", "starred_url": "https://api.github.com/users/b-naber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/b-naber/subscriptions", "organizations_url": "https://api.github.com/users/b-naber/orgs", "repos_url": "https://api.github.com/users/b-naber/repos", "events_url": "https://api.github.com/users/b-naber/events{/privacy}", "received_events_url": "https://api.github.com/users/b-naber/received_events", "type": "User", "site_admin": false}, "committer": {"login": "b-naber", "id": 71934879, "node_id": "MDQ6VXNlcjcxOTM0ODc5", "avatar_url": "https://avatars.githubusercontent.com/u/71934879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/b-naber", "html_url": "https://github.com/b-naber", "followers_url": "https://api.github.com/users/b-naber/followers", "following_url": "https://api.github.com/users/b-naber/following{/other_user}", "gists_url": "https://api.github.com/users/b-naber/gists{/gist_id}", "starred_url": "https://api.github.com/users/b-naber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/b-naber/subscriptions", "organizations_url": "https://api.github.com/users/b-naber/orgs", "repos_url": "https://api.github.com/users/b-naber/repos", "events_url": "https://api.github.com/users/b-naber/events{/privacy}", "received_events_url": "https://api.github.com/users/b-naber/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7530c43b79b8054924430e4cb643003aa273d79f", "url": "https://api.github.com/repos/rust-lang/rust/commits/7530c43b79b8054924430e4cb643003aa273d79f", "html_url": "https://github.com/rust-lang/rust/commit/7530c43b79b8054924430e4cb643003aa273d79f"}], "stats": {"total": 228, "additions": 225, "deletions": 3}, "files": [{"sha": "bcb3e83b73a5fbf791012ee58a7a791fa40a1a3b", "filename": "src/test/ui/const-generics/generic_const_exprs/const_eval_resolve_canonical.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/6000b4844a954879df51dafe95dc88239cb485a5/src%2Ftest%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Fconst_eval_resolve_canonical.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6000b4844a954879df51dafe95dc88239cb485a5/src%2Ftest%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Fconst_eval_resolve_canonical.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Fconst_eval_resolve_canonical.rs?ref=6000b4844a954879df51dafe95dc88239cb485a5", "patch": "@@ -1,4 +1,3 @@\n-// run-pass\n #![feature(generic_const_exprs)]\n #![allow(incomplete_features)]\n \n@@ -22,8 +21,10 @@ where\n }\n \n fn main() {\n-    // Test that we can correctly infer `T` which requires evaluating\n-    // `{ N + 1 }` which has substs containing an inference var\n+    // FIXME(generic_const_exprs): We can't correctly infer `T` which requires\n+    // evaluating `{ N + 1 }` which has substs containing an inference var\n     let mut _q = Default::default();\n+    //~^ ERROR type annotations needed\n+\n     _q = foo::<_, 2>(_q);\n }"}, {"sha": "75bca058e7c5c55da1eadbd148ee668978b5279a", "filename": "src/test/ui/const-generics/generic_const_exprs/const_eval_resolve_canonical.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/6000b4844a954879df51dafe95dc88239cb485a5/src%2Ftest%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Fconst_eval_resolve_canonical.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6000b4844a954879df51dafe95dc88239cb485a5/src%2Ftest%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Fconst_eval_resolve_canonical.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Fconst_eval_resolve_canonical.stderr?ref=6000b4844a954879df51dafe95dc88239cb485a5", "patch": "@@ -0,0 +1,9 @@\n+error[E0282]: type annotations needed\n+  --> $DIR/const_eval_resolve_canonical.rs:26:9\n+   |\n+LL |     let mut _q = Default::default();\n+   |         ^^^^^^ consider giving `_q` a type\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0282`."}, {"sha": "65148c55ee54140bb40ae8ae550bd930898be274", "filename": "src/test/ui/const-generics/issues/issue-83249.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/6000b4844a954879df51dafe95dc88239cb485a5/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-83249.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6000b4844a954879df51dafe95dc88239cb485a5/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-83249.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-83249.rs?ref=6000b4844a954879df51dafe95dc88239cb485a5", "patch": "@@ -0,0 +1,23 @@\n+#![allow(incomplete_features)]\n+#![feature(generic_const_exprs)]\n+\n+trait Foo {\n+    const N: usize;\n+}\n+\n+impl Foo for u8 {\n+    const N: usize = 1;\n+}\n+\n+fn foo<T: Foo>(_: [u8; T::N]) -> T {\n+    todo!()\n+}\n+\n+pub fn bar() {\n+    let _: u8 = foo([0; 1]);\n+\n+    let _ = foo([0; 1]);\n+    //~^ ERROR type annotations needed\n+}\n+\n+fn main() {}"}, {"sha": "13914134eb2de469b3460f1a3d0c55f89b28b352", "filename": "src/test/ui/const-generics/issues/issue-83249.stderr", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/6000b4844a954879df51dafe95dc88239cb485a5/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-83249.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6000b4844a954879df51dafe95dc88239cb485a5/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-83249.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-83249.stderr?ref=6000b4844a954879df51dafe95dc88239cb485a5", "patch": "@@ -0,0 +1,22 @@\n+error[E0283]: type annotations needed\n+  --> $DIR/issue-83249.rs:19:13\n+   |\n+LL |     let _ = foo([0; 1]);\n+   |         -   ^^^ cannot infer type for type parameter `T` declared on the function `foo`\n+   |         |\n+   |         consider giving this pattern a type\n+   |\n+   = note: cannot satisfy `_: Foo`\n+note: required by a bound in `foo`\n+  --> $DIR/issue-83249.rs:12:11\n+   |\n+LL | fn foo<T: Foo>(_: [u8; T::N]) -> T {\n+   |           ^^^ required by this bound in `foo`\n+help: consider specifying the type argument in the function call\n+   |\n+LL |     let _ = foo::<T>([0; 1]);\n+   |                +++++\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0283`."}, {"sha": "a24596d242e0d9ad67ec5f9b4771394f0c741968", "filename": "src/test/ui/const-generics/issues/issue-83288.rs", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/rust-lang/rust/blob/6000b4844a954879df51dafe95dc88239cb485a5/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-83288.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6000b4844a954879df51dafe95dc88239cb485a5/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-83288.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-83288.rs?ref=6000b4844a954879df51dafe95dc88239cb485a5", "patch": "@@ -0,0 +1,69 @@\n+// build-pass\n+\n+#![allow(incomplete_features)]\n+#![feature(generic_const_exprs)]\n+\n+use std::{marker::PhantomData, ops::Mul};\n+\n+pub enum Nil {}\n+pub struct Cons<T, L> {\n+    _phantom: PhantomData<(T, L)>,\n+}\n+\n+pub trait Indices<const N: usize> {\n+    const RANK: usize;\n+    const NUM_ELEMS: usize;\n+}\n+\n+impl<const N: usize> Indices<N> for Nil {\n+    const RANK: usize = 0;\n+    const NUM_ELEMS: usize = 1;\n+}\n+\n+impl<T, I: Indices<N>, const N: usize> Indices<N> for Cons<T, I> {\n+    const RANK: usize = I::RANK + 1;\n+    const NUM_ELEMS: usize = I::NUM_ELEMS * N;\n+}\n+\n+pub trait Concat<J> {\n+    type Output;\n+}\n+\n+impl<J> Concat<J> for Nil {\n+    type Output = J;\n+}\n+\n+impl<T, I, J> Concat<J> for Cons<T, I>\n+where\n+    I: Concat<J>,\n+{\n+    type Output = Cons<T, <I as Concat<J>>::Output>;\n+}\n+\n+pub struct Tensor<I: Indices<N>, const N: usize>\n+where\n+    [u8; I::NUM_ELEMS]: Sized,\n+{\n+    pub data: [u8; I::NUM_ELEMS],\n+    _phantom: PhantomData<I>,\n+}\n+\n+impl<I: Indices<N>, J: Indices<N>, const N: usize> Mul<Tensor<J, N>> for Tensor<I, N>\n+where\n+    I: Concat<J>,\n+    <I as Concat<J>>::Output: Indices<N>,\n+    [u8; I::NUM_ELEMS]: Sized,\n+    [u8; J::NUM_ELEMS]: Sized,\n+    [u8; <I as Concat<J>>::Output::NUM_ELEMS]: Sized,\n+{\n+    type Output = Tensor<<I as Concat<J>>::Output, N>;\n+\n+    fn mul(self, _rhs: Tensor<J, N>) -> Self::Output {\n+        Tensor {\n+            data: [0u8; <I as Concat<J>>::Output::NUM_ELEMS],\n+            _phantom: PhantomData,\n+        }\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "d60181a418a157bcd59511b3d9fed427dee9ab0a", "filename": "src/test/ui/const-generics/issues/issue-87470.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/6000b4844a954879df51dafe95dc88239cb485a5/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-87470.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6000b4844a954879df51dafe95dc88239cb485a5/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-87470.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-87470.rs?ref=6000b4844a954879df51dafe95dc88239cb485a5", "patch": "@@ -0,0 +1,24 @@\n+// build-pass\n+\n+#![feature(generic_const_exprs)]\n+#![allow(incomplete_features)]\n+\n+pub trait TraitWithConst {\n+    const SOME_CONST: usize;\n+}\n+\n+pub trait OtherTrait: TraitWithConst {\n+    fn some_fn(self) -> [u8 ; <Self as TraitWithConst>::SOME_CONST];\n+}\n+\n+impl TraitWithConst for f32 {\n+    const SOME_CONST: usize = 32;\n+}\n+\n+impl OtherTrait for f32 {\n+    fn some_fn(self) -> [u8 ; <Self as TraitWithConst>::SOME_CONST] {\n+        [0; 32]\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "116686abb9e3d93d8fdeafc432cfbeefd1caaeda", "filename": "src/test/ui/const-generics/issues/issue-87964.rs", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/6000b4844a954879df51dafe95dc88239cb485a5/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-87964.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6000b4844a954879df51dafe95dc88239cb485a5/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-87964.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-87964.rs?ref=6000b4844a954879df51dafe95dc88239cb485a5", "patch": "@@ -0,0 +1,29 @@\n+// build-pass\n+\n+#![feature(generic_const_exprs)]\n+#![allow(incomplete_features)]\n+\n+pub trait Target {\n+    const LENGTH: usize;\n+}\n+\n+\n+pub struct Container<T: Target>\n+where\n+    [(); T::LENGTH]: Sized,\n+{\n+    _target: T,\n+}\n+\n+impl<T: Target> Container<T>\n+where\n+    [(); T::LENGTH]: Sized,\n+{\n+    pub fn start(\n+        _target: T,\n+    ) -> Container<T> {\n+        Container { _target }\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "e3540f46f1e81ef2d3a06419a1613d762efbfe8c", "filename": "src/test/ui/const-generics/issues/issue-89146.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/6000b4844a954879df51dafe95dc88239cb485a5/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-89146.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6000b4844a954879df51dafe95dc88239cb485a5/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-89146.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-89146.rs?ref=6000b4844a954879df51dafe95dc88239cb485a5", "patch": "@@ -0,0 +1,26 @@\n+// build-pass\n+\n+#![allow(incomplete_features)]\n+#![feature(generic_const_exprs)]\n+\n+pub trait Foo {\n+    const SIZE: usize;\n+\n+    fn to_bytes(&self) -> [u8; Self::SIZE];\n+}\n+\n+pub fn bar<G: Foo>(a: &G) -> u8\n+where\n+    [(); G::SIZE]: Sized,\n+{\n+    deeper_bar(a)\n+}\n+\n+fn deeper_bar<G: Foo>(a: &G) -> u8\n+where\n+    [(); G::SIZE]: Sized,\n+{\n+    a.to_bytes()[0]\n+}\n+\n+fn main() {}"}, {"sha": "afa5c8fab74e8ed8b46759303023d1a307ff964f", "filename": "src/test/ui/const-generics/issues/issue-89320.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/6000b4844a954879df51dafe95dc88239cb485a5/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-89320.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6000b4844a954879df51dafe95dc88239cb485a5/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-89320.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-89320.rs?ref=6000b4844a954879df51dafe95dc88239cb485a5", "patch": "@@ -0,0 +1,19 @@\n+// build-pass\n+\n+#![feature(generic_const_exprs)]\n+#![allow(incomplete_features)]\n+\n+pub trait Enumerable {\n+    const N: usize;\n+}\n+\n+#[derive(Clone)]\n+pub struct SymmetricGroup<S>\n+where\n+    S: Enumerable,\n+    [(); S::N]: Sized,\n+{\n+    _phantom: std::marker::PhantomData<S>,\n+}\n+\n+fn main() {}"}]}