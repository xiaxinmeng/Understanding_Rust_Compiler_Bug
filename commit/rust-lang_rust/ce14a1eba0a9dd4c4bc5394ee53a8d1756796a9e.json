{"sha": "ce14a1eba0a9dd4c4bc5394ee53a8d1756796a9e", "node_id": "C_kwDOAAsO6NoAKGNlMTRhMWViYTBhOWRkNGM0YmM1Mzk0ZWU1M2E4ZDE3NTY3OTZhOWU", "commit": {"author": {"name": "Boxy", "email": "supbscripter@gmail.com", "date": "2023-03-17T13:34:20Z"}, "committer": {"name": "Boxy", "email": "supbscripter@gmail.com", "date": "2023-03-17T13:38:12Z"}, "message": "add comments\n\nCo-authored-by: lcnr <rust@lcnr.de>", "tree": {"sha": "a4046fdd67ff068f09ea8f281027b23c16757525", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a4046fdd67ff068f09ea8f281027b23c16757525"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ce14a1eba0a9dd4c4bc5394ee53a8d1756796a9e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ce14a1eba0a9dd4c4bc5394ee53a8d1756796a9e", "html_url": "https://github.com/rust-lang/rust/commit/ce14a1eba0a9dd4c4bc5394ee53a8d1756796a9e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ce14a1eba0a9dd4c4bc5394ee53a8d1756796a9e/comments", "author": {"login": "BoxyUwU", "id": 21149742, "node_id": "MDQ6VXNlcjIxMTQ5NzQy", "avatar_url": "https://avatars.githubusercontent.com/u/21149742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BoxyUwU", "html_url": "https://github.com/BoxyUwU", "followers_url": "https://api.github.com/users/BoxyUwU/followers", "following_url": "https://api.github.com/users/BoxyUwU/following{/other_user}", "gists_url": "https://api.github.com/users/BoxyUwU/gists{/gist_id}", "starred_url": "https://api.github.com/users/BoxyUwU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BoxyUwU/subscriptions", "organizations_url": "https://api.github.com/users/BoxyUwU/orgs", "repos_url": "https://api.github.com/users/BoxyUwU/repos", "events_url": "https://api.github.com/users/BoxyUwU/events{/privacy}", "received_events_url": "https://api.github.com/users/BoxyUwU/received_events", "type": "User", "site_admin": false}, "committer": {"login": "BoxyUwU", "id": 21149742, "node_id": "MDQ6VXNlcjIxMTQ5NzQy", "avatar_url": "https://avatars.githubusercontent.com/u/21149742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BoxyUwU", "html_url": "https://github.com/BoxyUwU", "followers_url": "https://api.github.com/users/BoxyUwU/followers", "following_url": "https://api.github.com/users/BoxyUwU/following{/other_user}", "gists_url": "https://api.github.com/users/BoxyUwU/gists{/gist_id}", "starred_url": "https://api.github.com/users/BoxyUwU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BoxyUwU/subscriptions", "organizations_url": "https://api.github.com/users/BoxyUwU/orgs", "repos_url": "https://api.github.com/users/BoxyUwU/repos", "events_url": "https://api.github.com/users/BoxyUwU/events{/privacy}", "received_events_url": "https://api.github.com/users/BoxyUwU/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ea08d3a47cee34f9943a2ca850ac7b3435fb499e", "url": "https://api.github.com/repos/rust-lang/rust/commits/ea08d3a47cee34f9943a2ca850ac7b3435fb499e", "html_url": "https://github.com/rust-lang/rust/commit/ea08d3a47cee34f9943a2ca850ac7b3435fb499e"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "be138e0ab54b77435b533530db0e190f16cfc1e9", "filename": "compiler/rustc_trait_selection/src/solve/eval_ctxt.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ce14a1eba0a9dd4c4bc5394ee53a8d1756796a9e/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Feval_ctxt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce14a1eba0a9dd4c4bc5394ee53a8d1756796a9e/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Feval_ctxt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Feval_ctxt.rs?ref=ce14a1eba0a9dd4c4bc5394ee53a8d1756796a9e", "patch": "@@ -189,6 +189,11 @@ impl<'tcx> EvalCtxt<'_, 'tcx> {\n             })\n     }\n \n+    /// Equates two values returning the nested goals without adding them\n+    /// to the nested goals of the `EvalCtxt`.\n+    ///\n+    /// If possible, try using `eq` instead which automatically handles nested\n+    /// goals correctly.\n     #[instrument(level = \"debug\", skip(self, param_env), ret)]\n     pub(super) fn eq_and_get_goals<T: ToTrace<'tcx>>(\n         &self,"}]}