{"sha": "7ec38a9ae3c5e7b8eef0ec4696d058cd9e85583d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdlYzM4YTlhZTNjNWU3YjhlZWYwZWM0Njk2ZDA1OGNkOWU4NTU4M2Q=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-10-08T12:15:26Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-10-16T08:59:53Z"}, "message": "attr: remove dep on ExtCtxt", "tree": {"sha": "5625f724a106c073a4e01a2385af588d46ad0c6f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5625f724a106c073a4e01a2385af588d46ad0c6f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7ec38a9ae3c5e7b8eef0ec4696d058cd9e85583d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7ec38a9ae3c5e7b8eef0ec4696d058cd9e85583d", "html_url": "https://github.com/rust-lang/rust/commit/7ec38a9ae3c5e7b8eef0ec4696d058cd9e85583d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7ec38a9ae3c5e7b8eef0ec4696d058cd9e85583d/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "55f3c2d59a5f82b70c0bfbaa4ed783859c553b84", "url": "https://api.github.com/repos/rust-lang/rust/commits/55f3c2d59a5f82b70c0bfbaa4ed783859c553b84", "html_url": "https://github.com/rust-lang/rust/commit/55f3c2d59a5f82b70c0bfbaa4ed783859c553b84"}], "stats": {"total": 33, "additions": 22, "deletions": 11}, "files": [{"sha": "28b61c5aa77ccfc08561046623a73330c14330cc", "filename": "src/libsyntax/attr/builtin.rs", "status": "modified", "additions": 5, "deletions": 9, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/7ec38a9ae3c5e7b8eef0ec4696d058cd9e85583d/src%2Flibsyntax%2Fattr%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ec38a9ae3c5e7b8eef0ec4696d058cd9e85583d/src%2Flibsyntax%2Fattr%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fattr%2Fbuiltin.rs?ref=7ec38a9ae3c5e7b8eef0ec4696d058cd9e85583d", "patch": "@@ -2,7 +2,6 @@\n \n use crate::ast::{self, Attribute, MetaItem, NestedMetaItem};\n use crate::early_buffered_lints::BufferedEarlyLintId;\n-use crate::ext::base::ExtCtxt;\n use crate::feature_gate::{Features, GatedCfg};\n use crate::print::pprust;\n use crate::sess::ParseSess;\n@@ -32,6 +31,10 @@ pub struct AttributeTemplate {\n }\n \n impl AttributeTemplate {\n+    pub fn only_word() -> Self {\n+        Self { word: true, list: None, name_value_str: None }\n+    }\n+\n     /// Checks that the given meta-item is compatible with this template.\n     fn compatible(&self, meta_item_kind: &ast::MetaItemKind) -> bool {\n         match meta_item_kind {\n@@ -937,14 +940,7 @@ pub fn find_transparency(\n     (transparency.map_or(fallback, |t| t.0), error)\n }\n \n-pub fn check_builtin_macro_attribute(ecx: &ExtCtxt<'_>, meta_item: &MetaItem, name: Symbol) {\n-    // All the built-in macro attributes are \"words\" at the moment.\n-    let template = AttributeTemplate { word: true, list: None, name_value_str: None };\n-    let attr = ecx.attribute(meta_item.clone());\n-    check_builtin_attribute(ecx.parse_sess, &attr, name, template);\n-}\n-\n-crate fn check_builtin_attribute(\n+pub fn check_builtin_attribute(\n     sess: &ParseSess, attr: &ast::Attribute, name: Symbol, template: AttributeTemplate\n ) {\n     // Some special attributes like `cfg` must be checked"}, {"sha": "f014b4f4f9fd869eadd7a62034374a7d0141f9cd", "filename": "src/libsyntax_ext/global_allocator.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7ec38a9ae3c5e7b8eef0ec4696d058cd9e85583d/src%2Flibsyntax_ext%2Fglobal_allocator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ec38a9ae3c5e7b8eef0ec4696d058cd9e85583d/src%2Flibsyntax_ext%2Fglobal_allocator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fglobal_allocator.rs?ref=7ec38a9ae3c5e7b8eef0ec4696d058cd9e85583d", "patch": "@@ -1,6 +1,7 @@\n+use crate::util::check_builtin_macro_attribute;\n+\n use syntax::ast::{ItemKind, Mutability, Stmt, Ty, TyKind, Unsafety};\n use syntax::ast::{self, Param, Attribute, Expr, FnHeader, Generics, Ident};\n-use syntax::attr::check_builtin_macro_attribute;\n use syntax::ext::allocator::{AllocatorKind, AllocatorMethod, AllocatorTy, ALLOCATOR_METHODS};\n use syntax::ext::base::{Annotatable, ExtCtxt};\n use syntax::ptr::P;"}, {"sha": "5ba76a52350f9bbfe5ead18ee828df64c84c4bb5", "filename": "src/libsyntax_ext/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7ec38a9ae3c5e7b8eef0ec4696d058cd9e85583d/src%2Flibsyntax_ext%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ec38a9ae3c5e7b8eef0ec4696d058cd9e85583d/src%2Flibsyntax_ext%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Flib.rs?ref=7ec38a9ae3c5e7b8eef0ec4696d058cd9e85583d", "patch": "@@ -37,6 +37,7 @@ mod log_syntax;\n mod source_util;\n mod test;\n mod trace_macros;\n+mod util;\n \n pub mod cmdline_attrs;\n pub mod plugin_macro_defs;"}, {"sha": "4d7441ca0b66be21aa023eee92b1a275953443c9", "filename": "src/libsyntax_ext/test.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7ec38a9ae3c5e7b8eef0ec4696d058cd9e85583d/src%2Flibsyntax_ext%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ec38a9ae3c5e7b8eef0ec4696d058cd9e85583d/src%2Flibsyntax_ext%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Ftest.rs?ref=7ec38a9ae3c5e7b8eef0ec4696d058cd9e85583d", "patch": "@@ -1,8 +1,10 @@\n /// The expansion from a test function to the appropriate test struct for libtest\n /// Ideally, this code would be in libtest but for efficiency and error messages it lives here.\n \n+use crate::util::check_builtin_macro_attribute;\n+\n use syntax::ast;\n-use syntax::attr::{self, check_builtin_macro_attribute};\n+use syntax::attr;\n use syntax::ext::base::*;\n use syntax::print::pprust;\n use syntax::source_map::respan;"}, {"sha": "fbae68057c5b997be84d16dc67cc60047230d731", "filename": "src/libsyntax_ext/util.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/7ec38a9ae3c5e7b8eef0ec4696d058cd9e85583d/src%2Flibsyntax_ext%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ec38a9ae3c5e7b8eef0ec4696d058cd9e85583d/src%2Flibsyntax_ext%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Futil.rs?ref=7ec38a9ae3c5e7b8eef0ec4696d058cd9e85583d", "patch": "@@ -0,0 +1,11 @@\n+use syntax_pos::Symbol;\n+use syntax::ast::MetaItem;\n+use syntax::attr::{check_builtin_attribute, AttributeTemplate};\n+use syntax::ext::base::ExtCtxt;\n+\n+pub fn check_builtin_macro_attribute(ecx: &ExtCtxt<'_>, meta_item: &MetaItem, name: Symbol) {\n+    // All the built-in macro attributes are \"words\" at the moment.\n+    let template = AttributeTemplate::only_word();\n+    let attr = ecx.attribute(meta_item.clone());\n+    check_builtin_attribute(ecx.parse_sess, &attr, name, template);\n+}"}]}