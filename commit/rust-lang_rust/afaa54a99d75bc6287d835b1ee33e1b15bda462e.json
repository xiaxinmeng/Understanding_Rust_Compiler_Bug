{"sha": "afaa54a99d75bc6287d835b1ee33e1b15bda462e", "node_id": "C_kwDOAAsO6NoAKGFmYWE1NGE5OWQ3NWJjNjI4N2Q4MzViMWVlMzNlMWIxNWJkYTQ2MmU", "commit": {"author": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2021-10-29T20:45:09Z"}, "committer": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2021-10-29T20:45:09Z"}, "message": "Apply changes proposed in the review", "tree": {"sha": "e7ad8d58fd65a6611062da4eb494e31e396c1976", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e7ad8d58fd65a6611062da4eb494e31e396c1976"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/afaa54a99d75bc6287d835b1ee33e1b15bda462e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/afaa54a99d75bc6287d835b1ee33e1b15bda462e", "html_url": "https://github.com/rust-lang/rust/commit/afaa54a99d75bc6287d835b1ee33e1b15bda462e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/afaa54a99d75bc6287d835b1ee33e1b15bda462e/comments", "author": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "878ac10fe13761664da2d205c64e2a398f469601", "url": "https://api.github.com/repos/rust-lang/rust/commits/878ac10fe13761664da2d205c64e2a398f469601", "html_url": "https://github.com/rust-lang/rust/commit/878ac10fe13761664da2d205c64e2a398f469601"}], "stats": {"total": 17, "additions": 9, "deletions": 8}, "files": [{"sha": "81bb16d54015e9551266e41068e1bb6ec63cd5a5", "filename": "library/core/src/slice/raw.rs", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/afaa54a99d75bc6287d835b1ee33e1b15bda462e/library%2Fcore%2Fsrc%2Fslice%2Fraw.rs", "raw_url": "https://github.com/rust-lang/rust/raw/afaa54a99d75bc6287d835b1ee33e1b15bda462e/library%2Fcore%2Fsrc%2Fslice%2Fraw.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fslice%2Fraw.rs?ref=afaa54a99d75bc6287d835b1ee33e1b15bda462e", "patch": "@@ -141,17 +141,18 @@ const fn debug_check_data_len<T>(data: *const T, len: usize) {\n         assert!(is_aligned_and_not_null(data), \"attempt to create unaligned or null slice\");\n     }\n \n-    const fn ctfe_check<T>(_data: *const T) {\n-        // It's impossible to check alignment in const fn.\n-        //\n-        // CTFE engine checks that the pointer is aligned and not null.\n-    }\n+    const fn noop<T>(_: *const T) {}\n \n     // SAFETY:\n-    // - `calling from_raw_parts[_mut]` with arguments that fail to fulfil checks made here is UB, so unless UB is already triggered this is noop\n-    // - CTFE makes the same checks as `rt_check`, so behavior change is not observable due to compilation error\n+    //\n+    // `rt_check` is just a debug assert to hint users that they are causing UB,\n+    // it is not required for safety (the safety must be guatanteed by\n+    // the `from_raw_parts[_mut]` caller).\n+    //\n+    // Since the checks are not required, we ignore them in CTFE as they can't\n+    // be done there (alignment does not make much sense there).\n     unsafe {\n-        crate::intrinsics::const_eval_select((data,), ctfe_check, rt_check);\n+        crate::intrinsics::const_eval_select((data,), noop, rt_check);\n     }\n \n     assert!("}]}