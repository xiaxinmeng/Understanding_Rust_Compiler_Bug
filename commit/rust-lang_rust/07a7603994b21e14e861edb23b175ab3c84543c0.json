{"sha": "07a7603994b21e14e861edb23b175ab3c84543c0", "node_id": "C_kwDOAAsO6NoAKDA3YTc2MDM5OTRiMjFlMTRlODYxZWRiMjNiMTc1YWIzYzg0NTQzYzA", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-01-15T15:49:40Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-01-15T15:49:40Z"}, "message": "Auto merge of #10187 - dswij:issue-10182-semicolon, r=Jarcho\n\n[needless_return]: Remove all semicolons on suggestion\n\nCloses #10182\n\nMultiple semicolons currently breaks autofix for `needless_return` suggestions. Any semicolons left after removing return means that the return type will always be `()`, and thus fail to compile.\n\nThis PR allows `needless_return` to remove multiple semicolons.\n\nThe change won't cover the case where there is multiple line yet.\n\ni.e.\n\n```rust\nfn needless_return() -> bool {\n    return true;\n;;\n}\n```\n\n---\n\nchangelog: Sugg: [`needless_return`]: Now removes all semicolons on the same line\n[#10187](https://github.com/rust-lang/rust-clippy/pull/10187)\n<!-- changelog_checked -->", "tree": {"sha": "12003a66bd48ef6d48d84c605092655b1efb3a43", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/12003a66bd48ef6d48d84c605092655b1efb3a43"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/07a7603994b21e14e861edb23b175ab3c84543c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/07a7603994b21e14e861edb23b175ab3c84543c0", "html_url": "https://github.com/rust-lang/rust/commit/07a7603994b21e14e861edb23b175ab3c84543c0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/07a7603994b21e14e861edb23b175ab3c84543c0/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aceb4439d64f2bdb888536f870a04d68d07fa7bf", "url": "https://api.github.com/repos/rust-lang/rust/commits/aceb4439d64f2bdb888536f870a04d68d07fa7bf", "html_url": "https://github.com/rust-lang/rust/commit/aceb4439d64f2bdb888536f870a04d68d07fa7bf"}, {"sha": "d73adea465726944815eb62d373abf6e87dc3b12", "url": "https://api.github.com/repos/rust-lang/rust/commits/d73adea465726944815eb62d373abf6e87dc3b12", "html_url": "https://github.com/rust-lang/rust/commit/d73adea465726944815eb62d373abf6e87dc3b12"}], "stats": {"total": 160, "additions": 101, "deletions": 59}, "files": [{"sha": "42c51d7d071022cb31980c9ebe650e5594a26d2a", "filename": "clippy_lints/src/returns.rs", "status": "modified", "additions": 14, "deletions": 12, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/07a7603994b21e14e861edb23b175ab3c84543c0/clippy_lints%2Fsrc%2Freturns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07a7603994b21e14e861edb23b175ab3c84543c0/clippy_lints%2Fsrc%2Freturns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Freturns.rs?ref=07a7603994b21e14e861edb23b175ab3c84543c0", "patch": "@@ -1,7 +1,7 @@\n use clippy_utils::diagnostics::{span_lint_and_then, span_lint_hir_and_then};\n use clippy_utils::source::{snippet_opt, snippet_with_context};\n use clippy_utils::visitors::{for_each_expr, Descend};\n-use clippy_utils::{fn_def_id, path_to_local_id};\n+use clippy_utils::{fn_def_id, path_to_local_id, span_find_starting_semi};\n use core::ops::ControlFlow;\n use if_chain::if_chain;\n use rustc_errors::Applicability;\n@@ -151,7 +151,7 @@ impl<'tcx> LateLintPass<'tcx> for Return {\n         kind: FnKind<'tcx>,\n         _: &'tcx FnDecl<'tcx>,\n         body: &'tcx Body<'tcx>,\n-        _: Span,\n+        sp: Span,\n         _: HirId,\n     ) {\n         match kind {\n@@ -166,14 +166,14 @@ impl<'tcx> LateLintPass<'tcx> for Return {\n                 check_final_expr(cx, body.value, vec![], replacement);\n             },\n             FnKind::ItemFn(..) | FnKind::Method(..) => {\n-                check_block_return(cx, &body.value.kind, vec![]);\n+                check_block_return(cx, &body.value.kind, sp, vec![]);\n             },\n         }\n     }\n }\n \n // if `expr` is a block, check if there are needless returns in it\n-fn check_block_return<'tcx>(cx: &LateContext<'tcx>, expr_kind: &ExprKind<'tcx>, semi_spans: Vec<Span>) {\n+fn check_block_return<'tcx>(cx: &LateContext<'tcx>, expr_kind: &ExprKind<'tcx>, sp: Span, mut semi_spans: Vec<Span>) {\n     if let ExprKind::Block(block, _) = expr_kind {\n         if let Some(block_expr) = block.expr {\n             check_final_expr(cx, block_expr, semi_spans, RetReplacement::Empty);\n@@ -183,12 +183,14 @@ fn check_block_return<'tcx>(cx: &LateContext<'tcx>, expr_kind: &ExprKind<'tcx>,\n                     check_final_expr(cx, expr, semi_spans, RetReplacement::Empty);\n                 },\n                 StmtKind::Semi(semi_expr) => {\n-                    let mut semi_spans_and_this_one = semi_spans;\n-                    // we only want the span containing the semicolon so we can remove it later. From `entry.rs:382`\n-                    if let Some(semicolon_span) = stmt.span.trim_start(semi_expr.span) {\n-                        semi_spans_and_this_one.push(semicolon_span);\n-                        check_final_expr(cx, semi_expr, semi_spans_and_this_one, RetReplacement::Empty);\n+                    // Remove ending semicolons and any whitespace ' ' in between.\n+                    // Without `return`, the suggestion might not compile if the semicolon is retained\n+                    if let Some(semi_span) = stmt.span.trim_start(semi_expr.span) {\n+                        let semi_span_to_remove =\n+                            span_find_starting_semi(cx.sess().source_map(), semi_span.with_hi(sp.hi()));\n+                        semi_spans.push(semi_span_to_remove);\n                     }\n+                    check_final_expr(cx, semi_expr, semi_spans, RetReplacement::Empty);\n                 },\n                 _ => (),\n             }\n@@ -231,9 +233,9 @@ fn check_final_expr<'tcx>(\n             emit_return_lint(cx, ret_span, semi_spans, inner.as_ref().map(|i| i.span), replacement);\n         },\n         ExprKind::If(_, then, else_clause_opt) => {\n-            check_block_return(cx, &then.kind, semi_spans.clone());\n+            check_block_return(cx, &then.kind, peeled_drop_expr.span, semi_spans.clone());\n             if let Some(else_clause) = else_clause_opt {\n-                check_block_return(cx, &else_clause.kind, semi_spans);\n+                check_block_return(cx, &else_clause.kind, peeled_drop_expr.span, semi_spans);\n             }\n         },\n         // a match expr, check all arms\n@@ -246,7 +248,7 @@ fn check_final_expr<'tcx>(\n             }\n         },\n         // if it's a whole block, check it\n-        other_expr_kind => check_block_return(cx, other_expr_kind, semi_spans),\n+        other_expr_kind => check_block_return(cx, other_expr_kind, peeled_drop_expr.span, semi_spans),\n     }\n }\n "}, {"sha": "e675b134e5a148351bbce1486fe8048f70ef8b3d", "filename": "clippy_utils/src/lib.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/07a7603994b21e14e861edb23b175ab3c84543c0/clippy_utils%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07a7603994b21e14e861edb23b175ab3c84543c0/clippy_utils%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Flib.rs?ref=07a7603994b21e14e861edb23b175ab3c84543c0", "patch": "@@ -2491,6 +2491,10 @@ pub fn span_extract_comment(sm: &SourceMap, span: Span) -> String {\n     comments_buf.join(\"\\n\")\n }\n \n+pub fn span_find_starting_semi(sm: &SourceMap, span: Span) -> Span {\n+    sm.span_take_while(span, |&ch| ch == ' ' || ch == ';')\n+}\n+\n macro_rules! op_utils {\n     ($($name:ident $assign:ident)*) => {\n         /// Binary operation traits like `LangItem::Add`"}, {"sha": "079e3531def1b04d83f6adcfba39c9dd8e270eb5", "filename": "tests/ui/needless_return.fixed", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/07a7603994b21e14e861edb23b175ab3c84543c0/tests%2Fui%2Fneedless_return.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/07a7603994b21e14e861edb23b175ab3c84543c0/tests%2Fui%2Fneedless_return.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_return.fixed?ref=07a7603994b21e14e861edb23b175ab3c84543c0", "patch": "@@ -31,6 +31,16 @@ fn test_no_semicolon() -> bool {\n     true\n }\n \n+#[rustfmt::skip]\n+fn test_multiple_semicolon() -> bool {\n+    true\n+}\n+\n+#[rustfmt::skip]\n+fn test_multiple_semicolon_with_spaces() -> bool {\n+    true\n+}\n+\n fn test_if_block() -> bool {\n     if true {\n         true"}, {"sha": "c1c48284f086901d31e9353426684e967f52f76f", "filename": "tests/ui/needless_return.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/07a7603994b21e14e861edb23b175ab3c84543c0/tests%2Fui%2Fneedless_return.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07a7603994b21e14e861edb23b175ab3c84543c0/tests%2Fui%2Fneedless_return.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_return.rs?ref=07a7603994b21e14e861edb23b175ab3c84543c0", "patch": "@@ -31,6 +31,16 @@ fn test_no_semicolon() -> bool {\n     return true;\n }\n \n+#[rustfmt::skip]\n+fn test_multiple_semicolon() -> bool {\n+    return true;;;\n+}\n+\n+#[rustfmt::skip]\n+fn test_multiple_semicolon_with_spaces() -> bool {\n+    return true;; ; ;\n+}\n+\n fn test_if_block() -> bool {\n     if true {\n         return true;"}, {"sha": "08b04bfe9d8bfb120d0ee48329fa3b9114852628", "filename": "tests/ui/needless_return.stderr", "status": "modified", "additions": 63, "deletions": 47, "changes": 110, "blob_url": "https://github.com/rust-lang/rust/blob/07a7603994b21e14e861edb23b175ab3c84543c0/tests%2Fui%2Fneedless_return.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/07a7603994b21e14e861edb23b175ab3c84543c0/tests%2Fui%2Fneedless_return.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_return.stderr?ref=07a7603994b21e14e861edb23b175ab3c84543c0", "patch": "@@ -16,63 +16,79 @@ LL |     return true;\n    = help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:36:9\n+  --> $DIR/needless_return.rs:36:5\n+   |\n+LL |     return true;;;\n+   |     ^^^^^^^^^^^\n+   |\n+   = help: remove `return`\n+\n+error: unneeded `return` statement\n+  --> $DIR/needless_return.rs:41:5\n+   |\n+LL |     return true;; ; ;\n+   |     ^^^^^^^^^^^\n+   |\n+   = help: remove `return`\n+\n+error: unneeded `return` statement\n+  --> $DIR/needless_return.rs:46:9\n    |\n LL |         return true;\n    |         ^^^^^^^^^^^\n    |\n    = help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:38:9\n+  --> $DIR/needless_return.rs:48:9\n    |\n LL |         return false;\n    |         ^^^^^^^^^^^^\n    |\n    = help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:44:17\n+  --> $DIR/needless_return.rs:54:17\n    |\n LL |         true => return false,\n    |                 ^^^^^^^^^^^^\n    |\n    = help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:46:13\n+  --> $DIR/needless_return.rs:56:13\n    |\n LL |             return true;\n    |             ^^^^^^^^^^^\n    |\n    = help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:53:9\n+  --> $DIR/needless_return.rs:63:9\n    |\n LL |         return true;\n    |         ^^^^^^^^^^^\n    |\n    = help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:55:16\n+  --> $DIR/needless_return.rs:65:16\n    |\n LL |     let _ = || return true;\n    |                ^^^^^^^^^^^\n    |\n    = help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:59:5\n+  --> $DIR/needless_return.rs:69:5\n    |\n LL |     return the_answer!();\n    |     ^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:62:21\n+  --> $DIR/needless_return.rs:72:21\n    |\n LL |   fn test_void_fun() {\n    |  _____________________^\n@@ -82,7 +98,7 @@ LL | |     return;\n    = help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:67:11\n+  --> $DIR/needless_return.rs:77:11\n    |\n LL |       if b {\n    |  ___________^\n@@ -92,7 +108,7 @@ LL | |         return;\n    = help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:69:13\n+  --> $DIR/needless_return.rs:79:13\n    |\n LL |       } else {\n    |  _____________^\n@@ -102,15 +118,15 @@ LL | |         return;\n    = help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:77:14\n+  --> $DIR/needless_return.rs:87:14\n    |\n LL |         _ => return,\n    |              ^^^^^^\n    |\n    = help: replace `return` with a unit value\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:85:24\n+  --> $DIR/needless_return.rs:95:24\n    |\n LL |               let _ = 42;\n    |  ________________________^\n@@ -120,39 +136,39 @@ LL | |             return;\n    = help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:88:14\n+  --> $DIR/needless_return.rs:98:14\n    |\n LL |         _ => return,\n    |              ^^^^^^\n    |\n    = help: replace `return` with a unit value\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:101:9\n+  --> $DIR/needless_return.rs:111:9\n    |\n LL |         return String::from(\"test\");\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:103:9\n+  --> $DIR/needless_return.rs:113:9\n    |\n LL |         return String::new();\n    |         ^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:125:32\n+  --> $DIR/needless_return.rs:135:32\n    |\n LL |         bar.unwrap_or_else(|_| return)\n    |                                ^^^^^^\n    |\n    = help: replace `return` with an empty block\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:129:21\n+  --> $DIR/needless_return.rs:139:21\n    |\n LL |           let _ = || {\n    |  _____________________^\n@@ -162,95 +178,95 @@ LL | |             return;\n    = help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:132:20\n+  --> $DIR/needless_return.rs:142:20\n    |\n LL |         let _ = || return;\n    |                    ^^^^^^\n    |\n    = help: replace `return` with an empty block\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:138:32\n+  --> $DIR/needless_return.rs:148:32\n    |\n LL |         res.unwrap_or_else(|_| return Foo)\n    |                                ^^^^^^^^^^\n    |\n    = help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:147:5\n+  --> $DIR/needless_return.rs:157:5\n    |\n LL |     return true;\n    |     ^^^^^^^^^^^\n    |\n    = help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:151:5\n+  --> $DIR/needless_return.rs:161:5\n    |\n LL |     return true;\n    |     ^^^^^^^^^^^\n    |\n    = help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:156:9\n+  --> $DIR/needless_return.rs:166:9\n    |\n LL |         return true;\n    |         ^^^^^^^^^^^\n    |\n    = help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:158:9\n+  --> $DIR/needless_return.rs:168:9\n    |\n LL |         return false;\n    |         ^^^^^^^^^^^^\n    |\n    = help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:164:17\n+  --> $DIR/needless_return.rs:174:17\n    |\n LL |         true => return false,\n    |                 ^^^^^^^^^^^^\n    |\n    = help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:166:13\n+  --> $DIR/needless_return.rs:176:13\n    |\n LL |             return true;\n    |             ^^^^^^^^^^^\n    |\n    = help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:173:9\n+  --> $DIR/needless_return.rs:183:9\n    |\n LL |         return true;\n    |         ^^^^^^^^^^^\n    |\n    = help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:175:16\n+  --> $DIR/needless_return.rs:185:16\n    |\n LL |     let _ = || return true;\n    |                ^^^^^^^^^^^\n    |\n    = help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:179:5\n+  --> $DIR/needless_return.rs:189:5\n    |\n LL |     return the_answer!();\n    |     ^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:182:33\n+  --> $DIR/needless_return.rs:192:33\n    |\n LL |   async fn async_test_void_fun() {\n    |  _________________________________^\n@@ -260,7 +276,7 @@ LL | |     return;\n    = help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:187:11\n+  --> $DIR/needless_return.rs:197:11\n    |\n LL |       if b {\n    |  ___________^\n@@ -270,7 +286,7 @@ LL | |         return;\n    = help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:189:13\n+  --> $DIR/needless_return.rs:199:13\n    |\n LL |       } else {\n    |  _____________^\n@@ -280,95 +296,95 @@ LL | |         return;\n    = help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:197:14\n+  --> $DIR/needless_return.rs:207:14\n    |\n LL |         _ => return,\n    |              ^^^^^^\n    |\n    = help: replace `return` with a unit value\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:210:9\n+  --> $DIR/needless_return.rs:220:9\n    |\n LL |         return String::from(\"test\");\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:212:9\n+  --> $DIR/needless_return.rs:222:9\n    |\n LL |         return String::new();\n    |         ^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:228:5\n+  --> $DIR/needless_return.rs:238:5\n    |\n LL |     return format!(\"Hello {}\", \"world!\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:239:9\n+  --> $DIR/needless_return.rs:249:9\n    |\n LL |         return true;\n    |         ^^^^^^^^^^^\n    |\n    = help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:241:9\n+  --> $DIR/needless_return.rs:251:9\n    |\n LL |         return false;\n    |         ^^^^^^^^^^^^\n    |\n    = help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:248:13\n+  --> $DIR/needless_return.rs:258:13\n    |\n LL |             return 10;\n    |             ^^^^^^^^^\n    |\n    = help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:251:13\n+  --> $DIR/needless_return.rs:261:13\n    |\n LL |             return 100;\n    |             ^^^^^^^^^^\n    |\n    = help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:259:9\n+  --> $DIR/needless_return.rs:269:9\n    |\n LL |         return 0;\n    |         ^^^^^^^^\n    |\n    = help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:266:13\n+  --> $DIR/needless_return.rs:276:13\n    |\n LL |             return *(x as *const isize);\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:268:13\n+  --> $DIR/needless_return.rs:278:13\n    |\n LL |             return !*(x as *const isize);\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:275:20\n+  --> $DIR/needless_return.rs:285:20\n    |\n LL |           let _ = 42;\n    |  ____________________^\n@@ -379,28 +395,28 @@ LL | |         return;\n    = help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:282:20\n+  --> $DIR/needless_return.rs:292:20\n    |\n LL |         let _ = 42; return;\n    |                    ^^^^^^^\n    |\n    = help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:294:9\n+  --> $DIR/needless_return.rs:304:9\n    |\n LL |         return Ok(format!(\"ok!\"));\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:296:9\n+  --> $DIR/needless_return.rs:306:9\n    |\n LL |         return Err(format!(\"err!\"));\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: remove `return`\n \n-error: aborting due to 48 previous errors\n+error: aborting due to 50 previous errors\n "}]}