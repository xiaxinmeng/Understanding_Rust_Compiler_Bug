{"sha": "aba5ea1430df393eddc90068e838de6b1707c0d8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFiYTVlYTE0MzBkZjM5M2VkZGM5MDA2OGU4MzhkZTZiMTcwN2MwZDg=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2020-09-20T15:11:00Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2020-09-20T16:42:15Z"}, "message": "Lint on function pointers used in patterns", "tree": {"sha": "928e31eed00839be4f11e561811f1a48b45062a5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/928e31eed00839be4f11e561811f1a48b45062a5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aba5ea1430df393eddc90068e838de6b1707c0d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aba5ea1430df393eddc90068e838de6b1707c0d8", "html_url": "https://github.com/rust-lang/rust/commit/aba5ea1430df393eddc90068e838de6b1707c0d8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aba5ea1430df393eddc90068e838de6b1707c0d8/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3795886f7e1f3dc5f5dd207ba4a7c092fe929486", "url": "https://api.github.com/repos/rust-lang/rust/commits/3795886f7e1f3dc5f5dd207ba4a7c092fe929486", "html_url": "https://github.com/rust-lang/rust/commit/3795886f7e1f3dc5f5dd207ba4a7c092fe929486"}], "stats": {"total": 100, "additions": 97, "deletions": 3}, "files": [{"sha": "6ca1ff2c5f2e75fbb3d27e264a7fb21a26f0243b", "filename": "compiler/rustc_mir_build/src/thir/pattern/const_to_pat.rs", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/aba5ea1430df393eddc90068e838de6b1707c0d8/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2Fconst_to_pat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aba5ea1430df393eddc90068e838de6b1707c0d8/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2Fconst_to_pat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2Fconst_to_pat.rs?ref=aba5ea1430df393eddc90068e838de6b1707c0d8", "patch": "@@ -351,10 +351,27 @@ impl<'a, 'tcx> ConstToPat<'a, 'tcx> {\n             ty::Bool | ty::Char | ty::Int(_) | ty::Uint(_) | ty::FnDef(..) => {\n                 PatKind::Constant { value: cv }\n             }\n+            ty::RawPtr(pointee) if pointee.ty.is_sized(tcx.at(span), param_env) => {\n+                PatKind::Constant { value: cv }\n+            }\n             // FIXME: these can have very suprising behaviour where optimization levels or other\n             // compilation choices change the runtime behaviour of the match.\n             // See https://github.com/rust-lang/rust/issues/70861 for examples.\n-            ty::FnPtr(..) | ty::RawPtr(..) => PatKind::Constant { value: cv },\n+            ty::FnPtr(..) | ty::RawPtr(..) => {\n+                if self.include_lint_checks && !self.saw_const_match_error.get() {\n+                    self.saw_const_match_error.set(true);\n+                    let msg = \"function pointers and unsized pointers in patterns do not behave \\\n+                        deterministically. \\\n+                        See https://github.com/rust-lang/rust/issues/70861 for details.\";\n+                    tcx.struct_span_lint_hir(\n+                        lint::builtin::POINTER_STRUCTURAL_MATCH,\n+                        id,\n+                        span,\n+                        |lint| lint.build(&msg).emit(),\n+                    );\n+                }\n+                PatKind::Constant { value: cv }\n+            }\n             _ => {\n                 tcx.sess.delay_span_bug(span, &format!(\"cannot make a pattern out of {}\", cv.ty));\n                 PatKind::Wild"}, {"sha": "c72b97fa1cabca2a7d7bcee7d39a263d2d4bbefa", "filename": "compiler/rustc_session/src/lint/builtin.rs", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/aba5ea1430df393eddc90068e838de6b1707c0d8/compiler%2Frustc_session%2Fsrc%2Flint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aba5ea1430df393eddc90068e838de6b1707c0d8/compiler%2Frustc_session%2Fsrc%2Flint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Flint%2Fbuiltin.rs?ref=aba5ea1430df393eddc90068e838de6b1707c0d8", "patch": "@@ -2197,6 +2197,32 @@ declare_lint! {\n     report_in_external_macro\n }\n \n+declare_lint! {\n+    /// The `pointer_structural_match` lint detects pointers used in patterns that do not\n+    /// behave deterministically across optimizations.\n+    ///\n+    /// ### Example\n+    ///\n+    /// ```rust,compile_fail\n+    /// #![deny(pointer_structural_match)]\n+    /// fn foo(a: usize, b: usize) -> usize { a + b }\n+    /// const FOO: fn(usize, usize) -> usize = foo;\n+    /// fn main() {\n+    ///     match FOO {\n+    ///         FOO => {},\n+    ///         _ => {},\n+    ///     }\n+    /// }\n+    /// ```\n+    pub POINTER_STRUCTURAL_MATCH,\n+    Allow,\n+    \"pointers are not structural-match\",\n+    @future_incompatible = FutureIncompatibleInfo {\n+        reference: \"issue #62411 <https://github.com/rust-lang/rust/issues/70861>\",\n+        edition: None,\n+    };\n+}\n+\n declare_lint! {\n     /// The `ambiguous_associated_items` lint detects ambiguity between\n     /// [associated items] and [enum variants].\n@@ -2630,6 +2656,7 @@ declare_lint_pass! {\n         AMBIGUOUS_ASSOCIATED_ITEMS,\n         MUTABLE_BORROW_RESERVATION_CONFLICT,\n         INDIRECT_STRUCTURAL_MATCH,\n+        POINTER_STRUCTURAL_MATCH,\n         SOFT_UNSTABLE,\n         INLINE_NO_SANITIZE,\n         ASM_SUB_REGISTER,"}, {"sha": "85f5ccbdb65612f569e4b5064390008a5eb11f1c", "filename": "src/test/ui/issues/issue-44333.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/aba5ea1430df393eddc90068e838de6b1707c0d8/src%2Ftest%2Fui%2Fissues%2Fissue-44333.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aba5ea1430df393eddc90068e838de6b1707c0d8/src%2Ftest%2Fui%2Fissues%2Fissue-44333.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-44333.rs?ref=aba5ea1430df393eddc90068e838de6b1707c0d8", "patch": "@@ -1,4 +1,7 @@\n // run-pass\n+\n+#![warn(pointer_structural_match)]\n+\n type Func = fn(usize, usize) -> usize;\n \n fn foo(a: usize, b: usize) -> usize { a + b }\n@@ -13,8 +16,10 @@ const BAR: Func = bar;\n \n fn main() {\n     match test(std::env::consts::ARCH.len()) {\n-        FOO => println!(\"foo\"),\n-        BAR => println!(\"bar\"),\n+        FOO => println!(\"foo\"), //~ WARN pointers in patterns do not behave deterministically\n+        //~^ WARN will become a hard error\n+        BAR => println!(\"bar\"), //~ WARN pointers in patterns do not behave deterministically\n+        //~^ WARN will become a hard error\n         _ => unreachable!(),\n     }\n }"}, {"sha": "a9ee5fc4dd7b17efa5f323e9184926e4df572a58", "filename": "src/test/ui/issues/issue-44333.stderr", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/aba5ea1430df393eddc90068e838de6b1707c0d8/src%2Ftest%2Fui%2Fissues%2Fissue-44333.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aba5ea1430df393eddc90068e838de6b1707c0d8/src%2Ftest%2Fui%2Fissues%2Fissue-44333.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-44333.stderr?ref=aba5ea1430df393eddc90068e838de6b1707c0d8", "patch": "@@ -0,0 +1,25 @@\n+warning: function pointers and unsized pointers in patterns do not behave deterministically. See https://github.com/rust-lang/rust/issues/70861 for details.\n+  --> $DIR/issue-44333.rs:19:9\n+   |\n+LL |         FOO => println!(\"foo\"),\n+   |         ^^^\n+   |\n+note: the lint level is defined here\n+  --> $DIR/issue-44333.rs:3:9\n+   |\n+LL | #![warn(pointer_structural_match)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #62411 <https://github.com/rust-lang/rust/issues/70861>\n+\n+warning: function pointers and unsized pointers in patterns do not behave deterministically. See https://github.com/rust-lang/rust/issues/70861 for details.\n+  --> $DIR/issue-44333.rs:21:9\n+   |\n+LL |         BAR => println!(\"bar\"),\n+   |         ^^^\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #62411 <https://github.com/rust-lang/rust/issues/70861>\n+\n+warning: 2 warnings emitted\n+"}, {"sha": "0984b1d480ecbc4ebea5eae5c4ad06313008ad40", "filename": "src/test/ui/rfc1445/issue-63479-match-fnptr.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/aba5ea1430df393eddc90068e838de6b1707c0d8/src%2Ftest%2Fui%2Frfc1445%2Fissue-63479-match-fnptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aba5ea1430df393eddc90068e838de6b1707c0d8/src%2Ftest%2Fui%2Frfc1445%2Fissue-63479-match-fnptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc1445%2Fissue-63479-match-fnptr.rs?ref=aba5ea1430df393eddc90068e838de6b1707c0d8", "patch": "@@ -5,6 +5,8 @@\n // cover the case this hit; I've since expanded it accordingly, but the\n // experience left me wary of leaving this regression test out.)\n \n+#![warn(pointer_structural_match)]\n+\n #[derive(Eq)]\n struct A {\n   a: i64\n@@ -31,6 +33,8 @@ fn main() {\n   let s = B(my_fn);\n   match s {\n     B(TEST) => println!(\"matched\"),\n+    //~^ WARN pointers in patterns do not behave deterministically\n+    //~| WARN this was previously accepted by the compiler but is being phased out\n     _ => panic!(\"didn't match\")\n   };\n }"}, {"sha": "34b9c359ca85681b8405ec28dc0ac3b698a4d278", "filename": "src/test/ui/rfc1445/issue-63479-match-fnptr.stderr", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/aba5ea1430df393eddc90068e838de6b1707c0d8/src%2Ftest%2Fui%2Frfc1445%2Fissue-63479-match-fnptr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aba5ea1430df393eddc90068e838de6b1707c0d8/src%2Ftest%2Fui%2Frfc1445%2Fissue-63479-match-fnptr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc1445%2Fissue-63479-match-fnptr.stderr?ref=aba5ea1430df393eddc90068e838de6b1707c0d8", "patch": "@@ -0,0 +1,16 @@\n+warning: function pointers and unsized pointers in patterns do not behave deterministically. See https://github.com/rust-lang/rust/issues/70861 for details.\n+  --> $DIR/issue-63479-match-fnptr.rs:35:7\n+   |\n+LL |     B(TEST) => println!(\"matched\"),\n+   |       ^^^^\n+   |\n+note: the lint level is defined here\n+  --> $DIR/issue-63479-match-fnptr.rs:8:9\n+   |\n+LL | #![warn(pointer_structural_match)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #62411 <https://github.com/rust-lang/rust/issues/70861>\n+\n+warning: 1 warning emitted\n+"}]}