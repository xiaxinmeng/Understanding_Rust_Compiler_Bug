{"sha": "373b0fc56905c17d14438446e16712bf714c6f08", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM3M2IwZmM1NjkwNWMxN2QxNDQzODQ0NmUxNjcxMmJmNzE0YzZmMDg=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2014-06-17T12:52:11Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2014-06-18T14:42:57Z"}, "message": "some extra test cases to cover in the borrow checker.", "tree": {"sha": "664275a154c1ef624cabc085915c12f709788c94", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/664275a154c1ef624cabc085915c12f709788c94"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/373b0fc56905c17d14438446e16712bf714c6f08", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/373b0fc56905c17d14438446e16712bf714c6f08", "html_url": "https://github.com/rust-lang/rust/commit/373b0fc56905c17d14438446e16712bf714c6f08", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/373b0fc56905c17d14438446e16712bf714c6f08/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "95fdbeee48163691cf66de4a53fdc108157babcf", "url": "https://api.github.com/repos/rust-lang/rust/commits/95fdbeee48163691cf66de4a53fdc108157babcf", "html_url": "https://github.com/rust-lang/rust/commit/95fdbeee48163691cf66de4a53fdc108157babcf"}], "stats": {"total": 108, "additions": 108, "deletions": 0}, "files": [{"sha": "8b77500225022172302169bca8cca70f0f2bb8da", "filename": "src/test/run-pass/loop-no-reinit-needed-post-bot.rs", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/373b0fc56905c17d14438446e16712bf714c6f08/src%2Ftest%2Frun-pass%2Floop-no-reinit-needed-post-bot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/373b0fc56905c17d14438446e16712bf714c6f08/src%2Ftest%2Frun-pass%2Floop-no-reinit-needed-post-bot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Floop-no-reinit-needed-post-bot.rs?ref=373b0fc56905c17d14438446e16712bf714c6f08", "patch": "@@ -0,0 +1,41 @@\n+// Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+struct S;\n+// Ensure S is moved, not copied, on assignment.\n+impl Drop for S { fn drop(&mut self) { } }\n+\n+// user-defined function \"returning\" bottom (i.e. no return at all).\n+fn my_fail() -> ! { loop {} }\n+\n+pub fn step(f: bool) {\n+    let mut g = S;\n+    let mut i = 0;\n+    loop\n+    {\n+        if i > 10 { break; } else { i += 1; }\n+\n+        let _g = g;\n+\n+        if f {\n+            // re-initialize g, but only before restarting loop.\n+            g = S;\n+            continue;\n+        }\n+\n+        my_fail();\n+\n+        // we never get here, so we do not need to re-initialize g.\n+    }\n+}\n+\n+pub fn main() {\n+    step(true);\n+}"}, {"sha": "7e02d10208182a9b0338f68fd10b952263924bae", "filename": "src/test/run-pass/struct-partial-move-1.rs", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/373b0fc56905c17d14438446e16712bf714c6f08/src%2Ftest%2Frun-pass%2Fstruct-partial-move-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/373b0fc56905c17d14438446e16712bf714c6f08/src%2Ftest%2Frun-pass%2Fstruct-partial-move-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fstruct-partial-move-1.rs?ref=373b0fc56905c17d14438446e16712bf714c6f08", "patch": "@@ -0,0 +1,30 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#[deriving(PartialEq, Show)]\n+struct Partial<T> { x: T, y: T }\n+\n+#[deriving(PartialEq, Show)]\n+struct S { val: int }\n+impl S { fn new(v: int) -> S { S { val: v } } }\n+impl Drop for S { fn drop(&mut self) { } }\n+\n+pub fn f<T>((b1, b2): (T, T), f: |T| -> T) -> Partial<T> {\n+    let p = Partial { x: b1, y: b2 };\n+\n+    // Move of `p` is legal even though we are also moving `p.y`; the\n+    // `..p` moves all fields *except* `p.y` in this context.\n+    Partial { y: f(p.y), ..p }\n+}\n+\n+pub fn main() {\n+    let p = f((S::new(3), S::new(4)), |S { val: z }| S::new(z+1));\n+    assert_eq!(p, Partial { x: S::new(3), y: S::new(5) });\n+}"}, {"sha": "fe5e1eaaa1af578fdd31f44c52fc1a44da0737d7", "filename": "src/test/run-pass/struct-partial-move-2.rs", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/373b0fc56905c17d14438446e16712bf714c6f08/src%2Ftest%2Frun-pass%2Fstruct-partial-move-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/373b0fc56905c17d14438446e16712bf714c6f08/src%2Ftest%2Frun-pass%2Fstruct-partial-move-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fstruct-partial-move-2.rs?ref=373b0fc56905c17d14438446e16712bf714c6f08", "patch": "@@ -0,0 +1,37 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#[deriving(PartialEq, Show)]\n+struct Partial<T> { x: T, y: T }\n+\n+#[deriving(PartialEq, Show)]\n+struct S { val: int }\n+impl S { fn new(v: int) -> S { S { val: v } } }\n+impl Drop for S { fn drop(&mut self) { } }\n+\n+type Two<T> = (Partial<T>, Partial<T>);\n+\n+pub fn f<T>((b1, b2): (T, T), (b3, b4): (T, T), f: |T| -> T) -> Two<T> {\n+    let p = Partial { x: b1, y: b2 };\n+    let q = Partial { x: b3, y: b4 };\n+\n+     // Move of `q` is legal even though we have already moved `q.y`;\n+     // the `..q` moves all fields *except* `q.y` in this context.\n+     // Likewise, the move of `p.x` is legal for similar reasons.\n+    (Partial { x: f(q.y), ..p }, Partial { y: f(p.x), ..q })\n+}\n+\n+pub fn main() {\n+    let two = f((S::new(1), S::new(3)),\n+                (S::new(5), S::new(7)),\n+                |S { val: z }| S::new(z+1));\n+    assert_eq!(two, (Partial { x: S::new(8), y: S::new(3) },\n+                     Partial { x: S::new(5), y: S::new(2) }));\n+}"}]}