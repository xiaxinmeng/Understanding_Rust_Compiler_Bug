{"sha": "91712bc665d82019c5238dcd43280c9b8e2192cb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkxNzEyYmM2NjVkODIwMTljNTIzOGRjZDQzMjgwYzliOGUyMTkyY2I=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2018-06-14T10:42:12Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2018-06-20T11:23:23Z"}, "message": "Lift attrs into hir::GenericParam", "tree": {"sha": "63939d3d878878ead9b73ac300e81dc35be9da61", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/63939d3d878878ead9b73ac300e81dc35be9da61"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/91712bc665d82019c5238dcd43280c9b8e2192cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/91712bc665d82019c5238dcd43280c9b8e2192cb", "html_url": "https://github.com/rust-lang/rust/commit/91712bc665d82019c5238dcd43280c9b8e2192cb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/91712bc665d82019c5238dcd43280c9b8e2192cb/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7de6ed06a528db8f34ca3e75ded9d77ab9ba8b9a", "url": "https://api.github.com/repos/rust-lang/rust/commits/7de6ed06a528db8f34ca3e75ded9d77ab9ba8b9a", "html_url": "https://github.com/rust-lang/rust/commit/7de6ed06a528db8f34ca3e75ded9d77ab9ba8b9a"}], "stats": {"total": 28, "additions": 13, "deletions": 15}, "files": [{"sha": "a778ea12552be9cd22216e7950d91b1993aaa0f0", "filename": "src/librustc/hir/intravisit.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/91712bc665d82019c5238dcd43280c9b8e2192cb/src%2Flibrustc%2Fhir%2Fintravisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91712bc665d82019c5238dcd43280c9b8e2192cb/src%2Flibrustc%2Fhir%2Fintravisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fintravisit.rs?ref=91712bc665d82019c5238dcd43280c9b8e2192cb", "patch": "@@ -748,11 +748,9 @@ pub fn walk_generic_param<'v, V: Visitor<'v>>(visitor: &mut V, param: &'v Generi\n     }\n     match param.kind {\n         GenericParamKind::Lifetime { .. } => {}\n-        GenericParamKind::Type { ref default, ref attrs, .. } => {\n-            walk_list!(visitor, visit_ty, default);\n-            walk_list!(visitor, visit_attribute, attrs.iter());\n-        }\n+        GenericParamKind::Type { ref default, .. } => walk_list!(visitor, visit_ty, default),\n     }\n+    walk_list!(visitor, visit_attribute, &param.attrs);\n     walk_list!(visitor, visit_param_bound, &param.bounds);\n }\n "}, {"sha": "320d7d4cf3651f39f95fd3209cd6592844813cbc", "filename": "src/librustc/hir/lowering.rs", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/91712bc665d82019c5238dcd43280c9b8e2192cb/src%2Flibrustc%2Fhir%2Flowering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91712bc665d82019c5238dcd43280c9b8e2192cb/src%2Flibrustc%2Fhir%2Flowering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Flowering.rs?ref=91712bc665d82019c5238dcd43280c9b8e2192cb", "patch": "@@ -695,9 +695,10 @@ impl<'a> LoweringContext<'a> {\n                 hir::GenericParam {\n                     id: def_node_id,\n                     name: hir_name,\n+                    attrs: hir_vec![],\n+                    bounds: hir_vec![],\n                     span,\n                     pure_wrt_drop: false,\n-                    bounds: vec![].into(),\n                     kind: hir::GenericParamKind::Lifetime { in_band: true }\n                 }\n             })\n@@ -1239,11 +1240,11 @@ impl<'a> LoweringContext<'a> {\n                             name: ParamName::Plain(name),\n                             span,\n                             pure_wrt_drop: false,\n+                            attrs: hir_vec![],\n                             bounds: hir_bounds,\n                             kind: hir::GenericParamKind::Type {\n                                 default: None,\n                                 synthetic: Some(hir::SyntheticTyParamKind::ImplTrait),\n-                                attrs: P::new(),\n                             }\n                         });\n \n@@ -1413,7 +1414,8 @@ impl<'a> LoweringContext<'a> {\n                         name,\n                         span: lifetime.span,\n                         pure_wrt_drop: false,\n-                        bounds: vec![].into(),\n+                        attrs: hir_vec![],\n+                        bounds: hir_vec![],\n                         kind: hir::GenericParamKind::Lifetime {\n                             in_band: false,\n                         }\n@@ -1950,6 +1952,7 @@ impl<'a> LoweringContext<'a> {\n                     name: param_name,\n                     span: lt.span,\n                     pure_wrt_drop: attr::contains_name(&param.attrs, \"may_dangle\"),\n+                    attrs: self.lower_attrs(&param.attrs),\n                     bounds,\n                     kind: hir::GenericParamKind::Lifetime { in_band: false }\n                 };\n@@ -1980,6 +1983,7 @@ impl<'a> LoweringContext<'a> {\n                     name: hir::ParamName::Plain(name),\n                     span: param.ident.span,\n                     pure_wrt_drop: attr::contains_name(&param.attrs, \"may_dangle\"),\n+                    attrs: self.lower_attrs(&param.attrs),\n                     bounds,\n                     kind: hir::GenericParamKind::Type {\n                         default: default.as_ref().map(|x| {\n@@ -1989,7 +1993,6 @@ impl<'a> LoweringContext<'a> {\n                                               .filter(|attr| attr.check_name(\"rustc_synthetic\"))\n                                               .map(|_| hir::SyntheticTyParamKind::ImplTrait)\n                                               .next(),\n-                        attrs: self.lower_attrs(&param.attrs),\n                     }\n                 }\n             }"}, {"sha": "c2c8c7a391b9c02c417cc33b199a2e6a3dc8a2c3", "filename": "src/librustc/hir/map/mod.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/91712bc665d82019c5238dcd43280c9b8e2192cb/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91712bc665d82019c5238dcd43280c9b8e2192cb/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs?ref=91712bc665d82019c5238dcd43280c9b8e2192cb", "patch": "@@ -974,10 +974,7 @@ impl<'hir> Map<'hir> {\n             Some(NodeField(ref f)) => Some(&f.attrs[..]),\n             Some(NodeExpr(ref e)) => Some(&*e.attrs),\n             Some(NodeStmt(ref s)) => Some(s.node.attrs()),\n-            Some(NodeGenericParam(param)) => match param.kind {\n-                GenericParamKind::Lifetime { .. } => None,\n-                GenericParamKind::Type { ref attrs, .. } => Some(&attrs[..]),\n-            }\n+            Some(NodeGenericParam(param)) => Some(&param.attrs[..]),\n             // unit/tuple structs take the attributes straight from\n             // the struct definition.\n             Some(NodeStructCtor(_)) => {"}, {"sha": "63b4614ef5d21b8af6f1f9860c78882f95521f53", "filename": "src/librustc/hir/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/91712bc665d82019c5238dcd43280c9b8e2192cb/src%2Flibrustc%2Fhir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91712bc665d82019c5238dcd43280c9b8e2192cb/src%2Flibrustc%2Fhir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmod.rs?ref=91712bc665d82019c5238dcd43280c9b8e2192cb", "patch": "@@ -471,14 +471,14 @@ pub enum GenericParamKind {\n     Type {\n         default: Option<P<Ty>>,\n         synthetic: Option<SyntheticTyParamKind>,\n-        attrs: HirVec<Attribute>,\n     }\n }\n \n #[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]\n pub struct GenericParam {\n     pub id: NodeId,\n     pub name: ParamName,\n+    pub attrs: HirVec<Attribute>,\n     pub bounds: ParamBounds,\n     pub span: Span,\n     pub pure_wrt_drop: bool,"}, {"sha": "fbe2fdae8770648625f769ca44c2a3885c67ebbc", "filename": "src/librustc/ich/impls_hir.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/91712bc665d82019c5238dcd43280c9b8e2192cb/src%2Flibrustc%2Fich%2Fimpls_hir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91712bc665d82019c5238dcd43280c9b8e2192cb/src%2Flibrustc%2Fich%2Fimpls_hir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fich%2Fimpls_hir.rs?ref=91712bc665d82019c5238dcd43280c9b8e2192cb", "patch": "@@ -203,6 +203,7 @@ impl_stable_hash_for!(struct hir::GenericParam {\n     name,\n     span,\n     pure_wrt_drop,\n+    attrs,\n     bounds,\n     kind\n });\n@@ -216,10 +217,9 @@ impl<'a> HashStable<StableHashingContext<'a>> for hir::GenericParamKind {\n             hir::GenericParamKind::Lifetime { in_band } => {\n                 in_band.hash_stable(hcx, hasher);\n             }\n-            hir::GenericParamKind::Type { ref default, synthetic, attrs } => {\n+            hir::GenericParamKind::Type { ref default, synthetic } => {\n                 default.hash_stable(hcx, hasher);\n                 synthetic.hash_stable(hcx, hasher);\n-                attrs.hash_stable(hcx, hasher);\n             }\n         }\n     }"}]}