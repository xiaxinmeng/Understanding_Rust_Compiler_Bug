{"sha": "abff092f907bff0bdf3f640692494f0b7430efa0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFiZmYwOTJmOTA3YmZmMGJkZjNmNjQwNjkyNDk0ZjBiNzQzMGVmYTA=", "commit": {"author": {"name": "Shanavas M", "email": "shanavas.m2@gmail.com", "date": "2017-11-11T14:01:55Z"}, "committer": {"name": "Shanavas M", "email": "shanavas.m2@gmail.com", "date": "2017-11-11T14:32:29Z"}, "message": "Refactor Option::filter method", "tree": {"sha": "62c5a7904e151a1156ca44ee3e8ea19fdf19948d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/62c5a7904e151a1156ca44ee3e8ea19fdf19948d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/abff092f907bff0bdf3f640692494f0b7430efa0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/abff092f907bff0bdf3f640692494f0b7430efa0", "html_url": "https://github.com/rust-lang/rust/commit/abff092f907bff0bdf3f640692494f0b7430efa0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/abff092f907bff0bdf3f640692494f0b7430efa0/comments", "author": {"login": "shanavas786", "id": 5337197, "node_id": "MDQ6VXNlcjUzMzcxOTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5337197?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shanavas786", "html_url": "https://github.com/shanavas786", "followers_url": "https://api.github.com/users/shanavas786/followers", "following_url": "https://api.github.com/users/shanavas786/following{/other_user}", "gists_url": "https://api.github.com/users/shanavas786/gists{/gist_id}", "starred_url": "https://api.github.com/users/shanavas786/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shanavas786/subscriptions", "organizations_url": "https://api.github.com/users/shanavas786/orgs", "repos_url": "https://api.github.com/users/shanavas786/repos", "events_url": "https://api.github.com/users/shanavas786/events{/privacy}", "received_events_url": "https://api.github.com/users/shanavas786/received_events", "type": "User", "site_admin": false}, "committer": {"login": "shanavas786", "id": 5337197, "node_id": "MDQ6VXNlcjUzMzcxOTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5337197?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shanavas786", "html_url": "https://github.com/shanavas786", "followers_url": "https://api.github.com/users/shanavas786/followers", "following_url": "https://api.github.com/users/shanavas786/following{/other_user}", "gists_url": "https://api.github.com/users/shanavas786/gists{/gist_id}", "starred_url": "https://api.github.com/users/shanavas786/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shanavas786/subscriptions", "organizations_url": "https://api.github.com/users/shanavas786/orgs", "repos_url": "https://api.github.com/users/shanavas786/repos", "events_url": "https://api.github.com/users/shanavas786/events{/privacy}", "received_events_url": "https://api.github.com/users/shanavas786/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "69ee5a8a9787336f8635ec12ed0c6199a70505e0", "url": "https://api.github.com/repos/rust-lang/rust/commits/69ee5a8a9787336f8635ec12ed0c6199a70505e0", "html_url": "https://github.com/rust-lang/rust/commit/69ee5a8a9787336f8635ec12ed0c6199a70505e0"}], "stats": {"total": 12, "additions": 4, "deletions": 8}, "files": [{"sha": "12e6e8430562a8baeb3f1472b00a5c7121ed8094", "filename": "src/libcore/option.rs", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/abff092f907bff0bdf3f640692494f0b7430efa0/src%2Flibcore%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abff092f907bff0bdf3f640692494f0b7430efa0/src%2Flibcore%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Foption.rs?ref=abff092f907bff0bdf3f640692494f0b7430efa0", "patch": "@@ -634,16 +634,12 @@ impl<T> Option<T> {\n     #[inline]\n     #[unstable(feature = \"option_filter\", issue = \"45860\")]\n     pub fn filter<P: FnOnce(&T) -> bool>(self, predicate: P) -> Self {\n-        match self {\n-            Some(x) => {\n-                if predicate(&x) {\n-                    Some(x)\n-                } else {\n-                    None\n-                }\n+        if let Some(x) = self {\n+            if predicate(&x) {\n+                return Some(x)\n             }\n-            None => None,\n         }\n+        None\n     }\n \n     /// Returns the option if it contains a value, otherwise returns `optb`."}]}