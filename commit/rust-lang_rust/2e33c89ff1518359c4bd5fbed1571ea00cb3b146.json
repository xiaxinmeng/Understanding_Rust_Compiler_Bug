{"sha": "2e33c89ff1518359c4bd5fbed1571ea00cb3b146", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJlMzNjODlmZjE1MTgzNTljNGJkNWZiZWQxNTcxZWEwMGNiM2IxNDY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-01-09T07:12:08Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-01-09T07:12:08Z"}, "message": "Auto merge of #47231 - ereslibre:clean-emitted-diagnostics, r=nrc\n\nClean emitted diagnostics when `reset_err_count` is called.\n\nWhen external tools like `rustfmt` calls to `reset_err_count` for handler\nreusing, it will set the error count on the handler to 0, but since\nhttps://github.com/rust-lang/rust/pull/47146 the handler will contain\nstatus that will prevent the error count to be bumped if this handler is\nreused.\n\nThis caused `rustfmt` idempotency tests to fail:\nhttps://github.com/rust-lang-nursery/rustfmt/issues/2338\n\nFixes: https://github.com/rust-lang-nursery/rustfmt/issues/2338", "tree": {"sha": "ffb5f5e710ad1a80d0ccf9a4066e092343ab7b1d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ffb5f5e710ad1a80d0ccf9a4066e092343ab7b1d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2e33c89ff1518359c4bd5fbed1571ea00cb3b146", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2e33c89ff1518359c4bd5fbed1571ea00cb3b146", "html_url": "https://github.com/rust-lang/rust/commit/2e33c89ff1518359c4bd5fbed1571ea00cb3b146", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2e33c89ff1518359c4bd5fbed1571ea00cb3b146/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "74966b5cb84934737d21bd9001db07bd93fa5d64", "url": "https://api.github.com/repos/rust-lang/rust/commits/74966b5cb84934737d21bd9001db07bd93fa5d64", "html_url": "https://github.com/rust-lang/rust/commit/74966b5cb84934737d21bd9001db07bd93fa5d64"}, {"sha": "b48d944165dd878b887273898b7e4e4b4163c786", "url": "https://api.github.com/repos/rust-lang/rust/commits/b48d944165dd878b887273898b7e4e4b4163c786", "html_url": "https://github.com/rust-lang/rust/commit/b48d944165dd878b887273898b7e4e4b4163c786"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "c48f1761f28b7aee9004dcbca5ab73e0e2e0365e", "filename": "src/librustc_errors/lib.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2e33c89ff1518359c4bd5fbed1571ea00cb3b146/src%2Flibrustc_errors%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e33c89ff1518359c4bd5fbed1571ea00cb3b146/src%2Flibrustc_errors%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Flib.rs?ref=2e33c89ff1518359c4bd5fbed1571ea00cb3b146", "patch": "@@ -310,9 +310,13 @@ impl Handler {\n         self.continue_after_error.set(continue_after_error);\n     }\n \n-    // NOTE: DO NOT call this function from rustc, as it relies on `err_count` being non-zero\n-    // if an error happened to avoid ICEs. This function should only be called from tools.\n+    /// Resets the diagnostic error count as well as the cached emitted diagnostics.\n+    ///\n+    /// NOTE: DO NOT call this function from rustc. It is only meant to be called from external\n+    /// tools that want to reuse a `Parser` cleaning the previously emitted diagnostics as well as\n+    /// the overall count of emitted error diagnostics.\n     pub fn reset_err_count(&self) {\n+        self.emitted_diagnostics.replace(FxHashSet());\n         self.err_count.store(0, SeqCst);\n     }\n "}]}