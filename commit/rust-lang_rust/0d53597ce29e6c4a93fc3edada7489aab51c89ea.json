{"sha": "0d53597ce29e6c4a93fc3edada7489aab51c89ea", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBkNTM1OTdjZTI5ZTZjNGE5M2ZjM2VkYWRhNzQ4OWFhYjUxYzg5ZWE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-07-26T10:31:23Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-07-26T10:31:23Z"}, "message": "auto merge of #15988 : brson/rust/antlrprep, r=cmr\n\nAdd `check-secondary`, which runs the pretty and lexer tests so we can run them on a dedicated bot. Leaves the pretty tests running under `check` until the bots are switched over. Also fixes some issues.\r\n\r\nr? @cmr", "tree": {"sha": "6fe97ddc4c0ddd458cb8857f766d436a5502ef67", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6fe97ddc4c0ddd458cb8857f766d436a5502ef67"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0d53597ce29e6c4a93fc3edada7489aab51c89ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0d53597ce29e6c4a93fc3edada7489aab51c89ea", "html_url": "https://github.com/rust-lang/rust/commit/0d53597ce29e6c4a93fc3edada7489aab51c89ea", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0d53597ce29e6c4a93fc3edada7489aab51c89ea/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cf61980db2e2291e335094aa3fd675e219bb3c3f", "url": "https://api.github.com/repos/rust-lang/rust/commits/cf61980db2e2291e335094aa3fd675e219bb3c3f", "html_url": "https://github.com/rust-lang/rust/commit/cf61980db2e2291e335094aa3fd675e219bb3c3f"}, {"sha": "3382ffef3228c97ec7e3143be7e16ca32639695a", "url": "https://api.github.com/repos/rust-lang/rust/commits/3382ffef3228c97ec7e3143be7e16ca32639695a", "html_url": "https://github.com/rust-lang/rust/commit/3382ffef3228c97ec7e3143be7e16ca32639695a"}], "stats": {"total": 31, "additions": 25, "deletions": 6}, "files": [{"sha": "12190fb0348543881f934a5c141dfed441a014f7", "filename": "mk/grammar.mk", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/0d53597ce29e6c4a93fc3edada7489aab51c89ea/mk%2Fgrammar.mk", "raw_url": "https://github.com/rust-lang/rust/raw/0d53597ce29e6c4a93fc3edada7489aab51c89ea/mk%2Fgrammar.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fgrammar.mk?ref=0d53597ce29e6c4a93fc3edada7489aab51c89ea", "patch": "@@ -13,7 +13,7 @@ SG = $(S)src/grammar/\n B = $(CFG_BUILD_DIR)/$(CFG_BUILD)/stage2/\n L = $(B)lib/rustlib/$(CFG_BUILD)/lib\n LD = $(CFG_BUILD)/stage2/lib/rustlib/$(CFG_BUILD)/lib/\n-RUSTC = $(B)bin/rustc\n+RUSTC = $(STAGE2_T_$(CFG_BUILD)_H_$(CFG_BUILD))\n \n # Run the reference lexer against libsyntax and compare the tokens and spans.\n # If \"// ignore-lexer-test\" is present in the file, it will be ignored.\n@@ -37,19 +37,25 @@ $(BG)RustLexer.class: $(SG)RustLexer.g4\n $(BG)verify: $(SG)verify.rs rustc-stage2-H-$(CFG_BUILD) $(LD)stamp.regex_macros $(LD)stamp.rustc\n \t$(Q)$(RUSTC) -O --out-dir $(BG) -L $(L) $(SG)verify.rs\n \n-check-lexer: $(BG) $(BG)RustLexer.class $(BG)verify\n ifdef CFG_JAVAC\n ifdef CFG_ANTLR4\n ifdef CFG_GRUN\n+check-lexer: $(BG) $(BG)RustLexer.class $(BG)verify\n \t$(info Verifying libsyntax against the reference lexer ...)\n \t$(Q)$(SG)check.sh $(S) \"$(BG)\" \\\n \t\t\"$(CFG_GRUN)\" \"$(BG)verify\" \"$(BG)RustLexer.tokens\"\n else\n-$(info grun not available, skipping lexer test...)\n+$(info cfg: grun not available, skipping lexer test...)\n+check-lexer:\n+\n endif\n else\n-$(info antlr4 not available, skipping lexer test...)\n+$(info cfg: antlr4 not available, skipping lexer test...)\n+check-lexer:\n+\n endif\n else\n-$(info javac not available, skipping lexer test...)\n+$(info cfg: javac not available, skipping lexer test...)\n+check-lexer:\n+\n endif"}, {"sha": "f78243046801d6defaa9e560def866776fe575ff", "filename": "mk/tests.mk", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/0d53597ce29e6c4a93fc3edada7489aab51c89ea/mk%2Ftests.mk", "raw_url": "https://github.com/rust-lang/rust/raw/0d53597ce29e6c4a93fc3edada7489aab51c89ea/mk%2Ftests.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Ftests.mk?ref=0d53597ce29e6c4a93fc3edada7489aab51c89ea", "patch": "@@ -171,28 +171,41 @@ endif\n # Main test targets\n ######################################################################\n \n+# The main testing target. Tests lots of stuff.\n check: cleantmptestlogs cleantestlibs check-notidy tidy\n \n+# As above but don't bother running tidy.\n check-notidy: cleantmptestlogs cleantestlibs all check-stage2\n \t$(Q)$(CFG_PYTHON) $(S)src/etc/check-summary.py tmp/*.log\n \n+# A slightly smaller set of tests for smoke testing.\n check-lite: cleantestlibs cleantmptestlogs \\\n \t$(foreach crate,$(TEST_TARGET_CRATES),check-stage2-$(crate)) \\\n \tcheck-stage2-rpass \\\n \tcheck-stage2-rfail check-stage2-cfail check-stage2-rmake\n \t$(Q)$(CFG_PYTHON) $(S)src/etc/check-summary.py tmp/*.log\n \n+# Only check the 'reference' tests: rpass/cfail/rfail/rmake.\n check-ref: cleantestlibs cleantmptestlogs check-stage2-rpass \\\n \tcheck-stage2-rfail check-stage2-cfail check-stage2-rmake\n \t$(Q)$(CFG_PYTHON) $(S)src/etc/check-summary.py tmp/*.log\n \n+# Only check the docs.\n check-docs: cleantestlibs cleantmptestlogs check-stage2-docs\n \t$(Q)$(CFG_PYTHON) $(S)src/etc/check-summary.py tmp/*.log\n \n # NOTE: Remove after reprogramming windows bots\n check-fast: check-lite\n \n-check-syntax: check-lexer\n+# Some less critical tests that are not prone to breakage.\n+# Not run as part of the normal test suite, but tested by bors on checkin.\n+check-secondary: check-lexer check-pretty\n+\n+# check + check-secondary.\n+check-all: check check-secondary\n+\n+# Pretty-printing tests.\n+check-pretty: check-stage2-T-$(CFG_BUILD)-H-$(CFG_BUILD)-pretty-exec\n \n .PHONY: cleantmptestlogs cleantestlibs\n "}]}