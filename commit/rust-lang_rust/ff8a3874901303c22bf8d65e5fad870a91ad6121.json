{"sha": "ff8a3874901303c22bf8d65e5fad870a91ad6121", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZmOGEzODc0OTAxMzAzYzIyYmY4ZDY1ZTVmYWQ4NzBhOTFhZDYxMjE=", "commit": {"author": {"name": "Smitty", "email": "me@smitop.com", "date": "2021-05-26T17:16:26Z"}, "committer": {"name": "Smitty", "email": "me@smitop.com", "date": "2021-05-26T17:16:26Z"}, "message": "Remove unneeded workaround\n\nThis removes a workaround for #24159, which has been fixed.", "tree": {"sha": "6deabe85a756ec4b45f593276f0a2ea12d5d16e5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6deabe85a756ec4b45f593276f0a2ea12d5d16e5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ff8a3874901303c22bf8d65e5fad870a91ad6121", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ff8a3874901303c22bf8d65e5fad870a91ad6121", "html_url": "https://github.com/rust-lang/rust/commit/ff8a3874901303c22bf8d65e5fad870a91ad6121", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ff8a3874901303c22bf8d65e5fad870a91ad6121/comments", "author": {"login": "syvb", "id": 10530973, "node_id": "MDQ6VXNlcjEwNTMwOTcz", "avatar_url": "https://avatars.githubusercontent.com/u/10530973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/syvb", "html_url": "https://github.com/syvb", "followers_url": "https://api.github.com/users/syvb/followers", "following_url": "https://api.github.com/users/syvb/following{/other_user}", "gists_url": "https://api.github.com/users/syvb/gists{/gist_id}", "starred_url": "https://api.github.com/users/syvb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/syvb/subscriptions", "organizations_url": "https://api.github.com/users/syvb/orgs", "repos_url": "https://api.github.com/users/syvb/repos", "events_url": "https://api.github.com/users/syvb/events{/privacy}", "received_events_url": "https://api.github.com/users/syvb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "syvb", "id": 10530973, "node_id": "MDQ6VXNlcjEwNTMwOTcz", "avatar_url": "https://avatars.githubusercontent.com/u/10530973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/syvb", "html_url": "https://github.com/syvb", "followers_url": "https://api.github.com/users/syvb/followers", "following_url": "https://api.github.com/users/syvb/following{/other_user}", "gists_url": "https://api.github.com/users/syvb/gists{/gist_id}", "starred_url": "https://api.github.com/users/syvb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/syvb/subscriptions", "organizations_url": "https://api.github.com/users/syvb/orgs", "repos_url": "https://api.github.com/users/syvb/repos", "events_url": "https://api.github.com/users/syvb/events{/privacy}", "received_events_url": "https://api.github.com/users/syvb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fbf1b1a7193cda17008ab590e06ad28d9924023b", "url": "https://api.github.com/repos/rust-lang/rust/commits/fbf1b1a7193cda17008ab590e06ad28d9924023b", "html_url": "https://github.com/rust-lang/rust/commit/fbf1b1a7193cda17008ab590e06ad28d9924023b"}], "stats": {"total": 8, "additions": 3, "deletions": 5}, "files": [{"sha": "4c53510ed00eed86df702bad1068e68eba528c1f", "filename": "compiler/rustc_mir/src/interpret/place.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ff8a3874901303c22bf8d65e5fad870a91ad6121/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Fplace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff8a3874901303c22bf8d65e5fad870a91ad6121/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Fplace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Fplace.rs?ref=ff8a3874901303c22bf8d65e5fad870a91ad6121", "patch": "@@ -15,9 +15,9 @@ use rustc_target::abi::{Abi, Align, FieldsShape, TagEncoding};\n use rustc_target::abi::{HasDataLayout, LayoutOf, Size, VariantIdx, Variants};\n \n use super::{\n-    alloc_range, mir_assign_valid_types, AllocId, AllocMap, AllocRef, AllocRefMut, Allocation,\n-    ConstAlloc, ImmTy, Immediate, InterpCx, InterpResult, LocalValue, Machine, MemoryKind, OpTy,\n-    Operand, Pointer, PointerArithmetic, Scalar, ScalarMaybeUninit,\n+    alloc_range, mir_assign_valid_types, AllocRef, AllocRefMut, ConstAlloc, ImmTy, Immediate,\n+    InterpCx, InterpResult, LocalValue, Machine, MemoryKind, OpTy, Operand, Pointer,\n+    PointerArithmetic, Scalar, ScalarMaybeUninit,\n };\n \n #[derive(Copy, Clone, Debug, Hash, PartialEq, Eq, HashStable)]\n@@ -292,8 +292,6 @@ where\n     // FIXME: Working around https://github.com/rust-lang/rust/issues/54385\n     Tag: Debug + Copy + Eq + Hash + 'static,\n     M: Machine<'mir, 'tcx, PointerTag = Tag>,\n-    // FIXME: Working around https://github.com/rust-lang/rust/issues/24159\n-    M::MemoryMap: AllocMap<AllocId, (MemoryKind<M::MemoryKind>, Allocation<Tag, M::AllocExtra>)>,\n {\n     /// Take a value, which represents a (thin or wide) reference, and make it a place.\n     /// Alignment is just based on the type.  This is the inverse of `MemPlace::to_ref()`."}]}