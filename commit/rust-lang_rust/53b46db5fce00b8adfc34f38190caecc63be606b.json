{"sha": "53b46db5fce00b8adfc34f38190caecc63be606b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUzYjQ2ZGI1ZmNlMDBiOGFkZmMzNGYzODE5MGNhZWNjNjNiZTYwNmI=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-06-20T19:36:59Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-06-20T19:36:59Z"}, "message": "Merge pull request #774 from soc/patch-1\n\nFix project dirs path", "tree": {"sha": "9cc7bf010b018a4db8fdac09d20fa2e66fb09150", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9cc7bf010b018a4db8fdac09d20fa2e66fb09150"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/53b46db5fce00b8adfc34f38190caecc63be606b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdC+BbCRBK7hj4Ov3rIwAAdHIIAFoAEmHYeK77K+awszvrSlSr\nt5Q9hIKuIEzP5KYpU9TXGwesA9OP38oXHVcMpO5HMCmtDUJEiifU4feasye1eITU\nuH0rG2TcRH/ThrSDlpHx7GmGqBvoNFe2wUVhWKrf0OMlQNlZ18g5T4ivGlAuVsVo\nM47ZLC+/ToJnpFVaE/SXczUhkTsGUvbyv8tQZEsKW56vx+sxYfL0GDq35cyHNVip\nmoRhz1aalBh/m57itNpOLNhhklrSZ/khXmMIOemz4H0oq5GbCBfEx73pgI+hK2hb\n+3v8LZvWVEclQnlu+zExUk8M3cwiifQFnfeSMi8PWANwmpxSRuw5+bKvjl55v7s=\n=y5Jh\n-----END PGP SIGNATURE-----\n", "payload": "tree 9cc7bf010b018a4db8fdac09d20fa2e66fb09150\nparent e4b298bc4f5a7e86eb78404e25de08f179091e03\nparent 6f5529a05b66c0187bdded8485dc6a8bd9c5c222\nauthor Ralf Jung <post@ralfj.de> 1561059419 +0200\ncommitter GitHub <noreply@github.com> 1561059419 +0200\n\nMerge pull request #774 from soc/patch-1\n\nFix project dirs path"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/53b46db5fce00b8adfc34f38190caecc63be606b", "html_url": "https://github.com/rust-lang/rust/commit/53b46db5fce00b8adfc34f38190caecc63be606b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/53b46db5fce00b8adfc34f38190caecc63be606b/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e4b298bc4f5a7e86eb78404e25de08f179091e03", "url": "https://api.github.com/repos/rust-lang/rust/commits/e4b298bc4f5a7e86eb78404e25de08f179091e03", "html_url": "https://github.com/rust-lang/rust/commit/e4b298bc4f5a7e86eb78404e25de08f179091e03"}, {"sha": "6f5529a05b66c0187bdded8485dc6a8bd9c5c222", "url": "https://api.github.com/repos/rust-lang/rust/commits/6f5529a05b66c0187bdded8485dc6a8bd9c5c222", "html_url": "https://github.com/rust-lang/rust/commit/6f5529a05b66c0187bdded8485dc6a8bd9c5c222"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "5080a22aded9781e8ec50156b3e1fb611286c77e", "filename": ".appveyor.yml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/53b46db5fce00b8adfc34f38190caecc63be606b/.appveyor.yml", "raw_url": "https://github.com/rust-lang/rust/raw/53b46db5fce00b8adfc34f38190caecc63be606b/.appveyor.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.appveyor.yml?ref=53b46db5fce00b8adfc34f38190caecc63be606b", "patch": "@@ -36,7 +36,7 @@ build_script:\n     - cargo install --all-features --force --path . --locked --offline\n     # Get ourselves a MIR-full libstd, and use it henceforth\n     - cargo miri setup\n-    - set MIRI_SYSROOT=%USERPROFILE%\\AppData\\Local\\miri\\miri\\cache\\HOST\n+    - set MIRI_SYSROOT=%USERPROFILE%\\AppData\\Local\\rust-lang\\miri\\cache\\HOST\n \n test_script:\n     # Test miri"}, {"sha": "cc95eeb7f3a0a55e0c91b0fa26426c9e3811cac3", "filename": "src/bin/cargo-miri.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/53b46db5fce00b8adfc34f38190caecc63be606b/src%2Fbin%2Fcargo-miri.rs", "raw_url": "https://github.com/rust-lang/rust/raw/53b46db5fce00b8adfc34f38190caecc63be606b/src%2Fbin%2Fcargo-miri.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fcargo-miri.rs?ref=53b46db5fce00b8adfc34f38190caecc63be606b", "patch": "@@ -248,7 +248,7 @@ fn setup(ask_user: bool) {\n     }\n \n     // Next, we need our own libstd. We will do this work in whatever is a good cache dir for this platform.\n-    let dirs = directories::ProjectDirs::from(\"miri\", \"miri\", \"miri\").unwrap();\n+    let dirs = directories::ProjectDirs::from(\"org\", \"rust-lang\", \"miri\").unwrap();\n     let dir = dirs.cache_dir();\n     if !dir.exists() {\n         fs::create_dir_all(&dir).unwrap();"}]}