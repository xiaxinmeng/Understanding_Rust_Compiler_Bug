{"sha": "b13704a9cd866b9c1ed73c26f697158c16b75873", "node_id": "C_kwDOAAsO6NoAKGIxMzcwNGE5Y2Q4NjZiOWMxZWQ3M2MyNmY2OTcxNThjMTZiNzU4NzM", "commit": {"author": {"name": "tamaron", "email": "tamaron1203@gmail.com", "date": "2022-02-01T04:44:24Z"}, "committer": {"name": "tamaron", "email": "tamaron1203@gmail.com", "date": "2022-02-01T04:44:24Z"}, "message": "update test suites", "tree": {"sha": "1d14569881073ccead5f141ef846213dd601b8c8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1d14569881073ccead5f141ef846213dd601b8c8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b13704a9cd866b9c1ed73c26f697158c16b75873", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b13704a9cd866b9c1ed73c26f697158c16b75873", "html_url": "https://github.com/rust-lang/rust/commit/b13704a9cd866b9c1ed73c26f697158c16b75873", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b13704a9cd866b9c1ed73c26f697158c16b75873/comments", "author": {"login": "tamaroning", "id": 20992019, "node_id": "MDQ6VXNlcjIwOTkyMDE5", "avatar_url": "https://avatars.githubusercontent.com/u/20992019?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tamaroning", "html_url": "https://github.com/tamaroning", "followers_url": "https://api.github.com/users/tamaroning/followers", "following_url": "https://api.github.com/users/tamaroning/following{/other_user}", "gists_url": "https://api.github.com/users/tamaroning/gists{/gist_id}", "starred_url": "https://api.github.com/users/tamaroning/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tamaroning/subscriptions", "organizations_url": "https://api.github.com/users/tamaroning/orgs", "repos_url": "https://api.github.com/users/tamaroning/repos", "events_url": "https://api.github.com/users/tamaroning/events{/privacy}", "received_events_url": "https://api.github.com/users/tamaroning/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tamaroning", "id": 20992019, "node_id": "MDQ6VXNlcjIwOTkyMDE5", "avatar_url": "https://avatars.githubusercontent.com/u/20992019?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tamaroning", "html_url": "https://github.com/tamaroning", "followers_url": "https://api.github.com/users/tamaroning/followers", "following_url": "https://api.github.com/users/tamaroning/following{/other_user}", "gists_url": "https://api.github.com/users/tamaroning/gists{/gist_id}", "starred_url": "https://api.github.com/users/tamaroning/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tamaroning/subscriptions", "organizations_url": "https://api.github.com/users/tamaroning/orgs", "repos_url": "https://api.github.com/users/tamaroning/repos", "events_url": "https://api.github.com/users/tamaroning/events{/privacy}", "received_events_url": "https://api.github.com/users/tamaroning/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0e1cbc5cd1d2e2a52b934dda1701d46fdb4e09b8", "url": "https://api.github.com/repos/rust-lang/rust/commits/0e1cbc5cd1d2e2a52b934dda1701d46fdb4e09b8", "html_url": "https://github.com/rust-lang/rust/commit/0e1cbc5cd1d2e2a52b934dda1701d46fdb4e09b8"}], "stats": {"total": 32, "additions": 15, "deletions": 17}, "files": [{"sha": "f9f8407d57755481de85bad8ad47efe42eba1563", "filename": "tests/ui/explicit_counter_loop.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b13704a9cd866b9c1ed73c26f697158c16b75873/tests%2Fui%2Fexplicit_counter_loop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b13704a9cd866b9c1ed73c26f697158c16b75873/tests%2Fui%2Fexplicit_counter_loop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fexplicit_counter_loop.stderr?ref=b13704a9cd866b9c1ed73c26f697158c16b75873", "patch": "@@ -46,13 +46,13 @@ error: the variable `idx_usize` is used as a loop counter\n   --> $DIR/explicit_counter_loop.rs:170:9\n    |\n LL |         for _item in slice {\n-   |         ^^^^^^^^^^^^^^^^^^ help: consider using: `for (idx_usize, _item) in slice.into_iter().enumerate()`\n+   |         ^^^^^^^^^^^^^^^^^^ help: consider using: `for (idx_usize, _item) in slice.iter().enumerate()`\n \n error: the variable `idx_u32` is used as a loop counter\n   --> $DIR/explicit_counter_loop.rs:182:9\n    |\n LL |         for _item in slice {\n-   |         ^^^^^^^^^^^^^^^^^^ help: consider using: `for (idx_u32, _item) in (0_u32..).zip(slice.into_iter())`\n+   |         ^^^^^^^^^^^^^^^^^^ help: consider using: `for (idx_u32, _item) in (0_u32..).zip(slice.iter())`\n    |\n    = note: `idx_u32` is of type `u32`, making it ineligible for `Iterator::enumerate`\n "}, {"sha": "6c5232ec5f55b7d0e59dec9373f55b4f91cd0f16", "filename": "tests/ui/manual_flatten.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b13704a9cd866b9c1ed73c26f697158c16b75873/tests%2Fui%2Fmanual_flatten.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b13704a9cd866b9c1ed73c26f697158c16b75873/tests%2Fui%2Fmanual_flatten.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_flatten.rs?ref=b13704a9cd866b9c1ed73c26f697158c16b75873", "patch": "@@ -26,8 +26,6 @@ fn main() {\n     }\n \n     // Test for loop over an implicit reference\n-    // Note: if `clippy::manual_flatten` is made autofixable, this case will\n-    // lead to a follow-up lint `clippy::into_iter_on_ref`\n     let z = &y;\n     for n in z {\n         if let Ok(n) = n {"}, {"sha": "392e1a39393754214ce44a4c04bdc222b85cb6b3", "filename": "tests/ui/manual_flatten.stderr", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/b13704a9cd866b9c1ed73c26f697158c16b75873/tests%2Fui%2Fmanual_flatten.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b13704a9cd866b9c1ed73c26f697158c16b75873/tests%2Fui%2Fmanual_flatten.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_flatten.stderr?ref=b13704a9cd866b9c1ed73c26f697158c16b75873", "patch": "@@ -63,10 +63,10 @@ LL | |         }\n    | |_________^\n \n error: unnecessary `if let` since only the `Ok` variant of the iterator element is used\n-  --> $DIR/manual_flatten.rs:32:5\n+  --> $DIR/manual_flatten.rs:30:5\n    |\n LL |       for n in z {\n-   |       ^        - help: try: `z.into_iter().flatten()`\n+   |       ^        - help: try: `z.iter().flatten()`\n    |  _____|\n    | |\n LL | |         if let Ok(n) = n {\n@@ -76,15 +76,15 @@ LL | |     }\n    | |_____^\n    |\n help: ...and remove the `if let` statement in the for loop\n-  --> $DIR/manual_flatten.rs:33:9\n+  --> $DIR/manual_flatten.rs:31:9\n    |\n LL | /         if let Ok(n) = n {\n LL | |             println!(\"{}\", n);\n LL | |         }\n    | |_________^\n \n error: unnecessary `if let` since only the `Some` variant of the iterator element is used\n-  --> $DIR/manual_flatten.rs:41:5\n+  --> $DIR/manual_flatten.rs:39:5\n    |\n LL |       for n in z {\n    |       ^        - help: try: `z.flatten()`\n@@ -97,15 +97,15 @@ LL | |     }\n    | |_____^\n    |\n help: ...and remove the `if let` statement in the for loop\n-  --> $DIR/manual_flatten.rs:42:9\n+  --> $DIR/manual_flatten.rs:40:9\n    |\n LL | /         if let Some(m) = n {\n LL | |             println!(\"{}\", m);\n LL | |         }\n    | |_________^\n \n error: unnecessary `if let` since only the `Some` variant of the iterator element is used\n-  --> $DIR/manual_flatten.rs:74:5\n+  --> $DIR/manual_flatten.rs:72:5\n    |\n LL |       for n in &vec_of_ref {\n    |       ^        ----------- help: try: `vec_of_ref.iter().copied().flatten()`\n@@ -118,18 +118,18 @@ LL | |     }\n    | |_____^\n    |\n help: ...and remove the `if let` statement in the for loop\n-  --> $DIR/manual_flatten.rs:75:9\n+  --> $DIR/manual_flatten.rs:73:9\n    |\n LL | /         if let Some(n) = n {\n LL | |             println!(\"{:?}\", n);\n LL | |         }\n    | |_________^\n \n error: unnecessary `if let` since only the `Some` variant of the iterator element is used\n-  --> $DIR/manual_flatten.rs:81:5\n+  --> $DIR/manual_flatten.rs:79:5\n    |\n LL |       for n in vec_of_ref {\n-   |       ^        ---------- help: try: `vec_of_ref.into_iter().copied().flatten()`\n+   |       ^        ---------- help: try: `vec_of_ref.iter().copied().flatten()`\n    |  _____|\n    | |\n LL | |         if let Some(n) = n {\n@@ -139,18 +139,18 @@ LL | |     }\n    | |_____^\n    |\n help: ...and remove the `if let` statement in the for loop\n-  --> $DIR/manual_flatten.rs:82:9\n+  --> $DIR/manual_flatten.rs:80:9\n    |\n LL | /         if let Some(n) = n {\n LL | |             println!(\"{:?}\", n);\n LL | |         }\n    | |_________^\n \n error: unnecessary `if let` since only the `Some` variant of the iterator element is used\n-  --> $DIR/manual_flatten.rs:88:5\n+  --> $DIR/manual_flatten.rs:86:5\n    |\n LL |       for n in slice_of_ref {\n-   |       ^        ------------ help: try: `slice_of_ref.into_iter().copied().flatten()`\n+   |       ^        ------------ help: try: `slice_of_ref.iter().copied().flatten()`\n    |  _____|\n    | |\n LL | |         if let Some(n) = n {\n@@ -160,7 +160,7 @@ LL | |     }\n    | |_____^\n    |\n help: ...and remove the `if let` statement in the for loop\n-  --> $DIR/manual_flatten.rs:89:9\n+  --> $DIR/manual_flatten.rs:87:9\n    |\n LL | /         if let Some(n) = n {\n LL | |             println!(\"{:?}\", n);"}]}