{"sha": "41c44b498f021f8028151109abf2805fa4269866", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQxYzQ0YjQ5OGYwMjFmODAyODE1MTEwOWFiZjI4MDVmYTQyNjk4NjY=", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2020-11-14T00:29:30Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2020-11-14T00:30:56Z"}, "message": "Move Steal to rustc_data_structures.", "tree": {"sha": "c5a791114b56a1c488ce86071ee75384c09cbe01", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c5a791114b56a1c488ce86071ee75384c09cbe01"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/41c44b498f021f8028151109abf2805fa4269866", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/41c44b498f021f8028151109abf2805fa4269866", "html_url": "https://github.com/rust-lang/rust/commit/41c44b498f021f8028151109abf2805fa4269866", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/41c44b498f021f8028151109abf2805fa4269866/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cf9cf7c923eb01146971429044f216a3ca905e06", "url": "https://api.github.com/repos/rust-lang/rust/commits/cf9cf7c923eb01146971429044f216a3ca905e06", "html_url": "https://github.com/rust-lang/rust/commit/cf9cf7c923eb01146971429044f216a3ca905e06"}], "stats": {"total": 38, "additions": 18, "deletions": 20}, "files": [{"sha": "b4b9160ad007d8500c75302dc2eeeea75b65fa75", "filename": "compiler/rustc_data_structures/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/41c44b498f021f8028151109abf2805fa4269866/compiler%2Frustc_data_structures%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41c44b498f021f8028151109abf2805fa4269866/compiler%2Frustc_data_structures%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_data_structures%2Fsrc%2Flib.rs?ref=41c44b498f021f8028151109abf2805fa4269866", "patch": "@@ -102,6 +102,7 @@ pub mod work_queue;\n pub use atomic_ref::AtomicRef;\n pub mod frozen;\n pub mod sso;\n+pub mod steal;\n pub mod tagged_ptr;\n pub mod temp_dir;\n pub mod unhash;"}, {"sha": "e532a84cea3f23398807c2428e73743b2b4e91b7", "filename": "compiler/rustc_data_structures/src/steal.rs", "status": "renamed", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/41c44b498f021f8028151109abf2805fa4269866/compiler%2Frustc_data_structures%2Fsrc%2Fsteal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41c44b498f021f8028151109abf2805fa4269866/compiler%2Frustc_data_structures%2Fsrc%2Fsteal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_data_structures%2Fsrc%2Fsteal.rs?ref=41c44b498f021f8028151109abf2805fa4269866", "patch": "@@ -1,4 +1,5 @@\n-use rustc_data_structures::sync::{MappedReadGuard, ReadGuard, RwLock};\n+use crate::stable_hasher::{HashStable, StableHasher};\n+use crate::sync::{MappedReadGuard, ReadGuard, RwLock};\n \n /// The `Steal` struct is intended to used as the value for a query.\n /// Specifically, we sometimes have queries (*cough* MIR *cough*)\n@@ -31,7 +32,7 @@ impl<T> Steal<T> {\n \n     pub fn borrow(&self) -> MappedReadGuard<'_, T> {\n         ReadGuard::map(self.value.borrow(), |opt| match *opt {\n-            None => bug!(\"attempted to read from stolen value\"),\n+            None => panic!(\"attempted to read from stolen value\"),\n             Some(ref v) => v,\n         })\n     }\n@@ -42,3 +43,9 @@ impl<T> Steal<T> {\n         value.expect(\"attempt to read from stolen value\")\n     }\n }\n+\n+impl<CTX, T: HashStable<CTX>> HashStable<CTX> for Steal<T> {\n+    fn hash_stable(&self, hcx: &mut CTX, hasher: &mut StableHasher) {\n+        self.borrow().hash_stable(hcx, hasher);\n+    }\n+}", "previous_filename": "compiler/rustc_middle/src/ty/steal.rs"}, {"sha": "8f8aac532c99a89de489e887e044d31b191926d5", "filename": "compiler/rustc_interface/src/passes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41c44b498f021f8028151109abf2805fa4269866/compiler%2Frustc_interface%2Fsrc%2Fpasses.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41c44b498f021f8028151109abf2805fa4269866/compiler%2Frustc_interface%2Fsrc%2Fpasses.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_interface%2Fsrc%2Fpasses.rs?ref=41c44b498f021f8028151109abf2805fa4269866", "patch": "@@ -6,6 +6,7 @@ use rustc_ast::mut_visit::MutVisitor;\n use rustc_ast::{self as ast, visit};\n use rustc_codegen_ssa::back::link::emit_metadata;\n use rustc_codegen_ssa::traits::CodegenBackend;\n+use rustc_data_structures::steal::Steal;\n use rustc_data_structures::sync::{par_iter, Lrc, OnceCell, ParallelIterator, WorkerLocal};\n use rustc_data_structures::temp_dir::MaybeTempDir;\n use rustc_data_structures::{box_region_allow_access, declare_box_region_type, parallel};\n@@ -20,7 +21,6 @@ use rustc_middle::dep_graph::DepGraph;\n use rustc_middle::middle;\n use rustc_middle::middle::cstore::{CrateStore, MetadataLoader, MetadataLoaderDyn};\n use rustc_middle::ty::query::Providers;\n-use rustc_middle::ty::steal::Steal;\n use rustc_middle::ty::{self, GlobalCtxt, ResolverOutputs, TyCtxt};\n use rustc_mir as mir;\n use rustc_mir_build as mir_build;"}, {"sha": "a2704c3adbf00e28e3cabff7b40f702ac792cb02", "filename": "compiler/rustc_interface/src/queries.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41c44b498f021f8028151109abf2805fa4269866/compiler%2Frustc_interface%2Fsrc%2Fqueries.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41c44b498f021f8028151109abf2805fa4269866/compiler%2Frustc_interface%2Fsrc%2Fqueries.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_interface%2Fsrc%2Fqueries.rs?ref=41c44b498f021f8028151109abf2805fa4269866", "patch": "@@ -3,6 +3,7 @@ use crate::passes::{self, BoxedResolver, QueryContext};\n \n use rustc_ast as ast;\n use rustc_codegen_ssa::traits::CodegenBackend;\n+use rustc_data_structures::steal::Steal;\n use rustc_data_structures::svh::Svh;\n use rustc_data_structures::sync::{Lrc, OnceCell, WorkerLocal};\n use rustc_errors::ErrorReported;\n@@ -12,7 +13,6 @@ use rustc_incremental::DepGraphFuture;\n use rustc_lint::LintStore;\n use rustc_middle::arena::Arena;\n use rustc_middle::dep_graph::DepGraph;\n-use rustc_middle::ty::steal::Steal;\n use rustc_middle::ty::{GlobalCtxt, ResolverOutputs, TyCtxt};\n use rustc_serialize::json;\n use rustc_session::config::{self, OutputFilenames, OutputType};"}, {"sha": "672073b1d3472766eaa5c32ceb8283c5ad811736", "filename": "compiler/rustc_middle/src/arena.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/41c44b498f021f8028151109abf2805fa4269866/compiler%2Frustc_middle%2Fsrc%2Farena.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41c44b498f021f8028151109abf2805fa4269866/compiler%2Frustc_middle%2Fsrc%2Farena.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Farena.rs?ref=41c44b498f021f8028151109abf2805fa4269866", "patch": "@@ -14,10 +14,10 @@ macro_rules! arena_types {\n             [] layouts: rustc_target::abi::Layout,\n             // AdtDef are interned and compared by address\n             [] adt_def: rustc_middle::ty::AdtDef,\n-            [] steal_mir: rustc_middle::ty::steal::Steal<rustc_middle::mir::Body<$tcx>>,\n+            [] steal_mir: rustc_data_structures::steal::Steal<rustc_middle::mir::Body<$tcx>>,\n             [decode] mir: rustc_middle::mir::Body<$tcx>,\n             [] steal_promoted:\n-                rustc_middle::ty::steal::Steal<\n+                rustc_data_structures::steal::Steal<\n                     rustc_index::vec::IndexVec<\n                         rustc_middle::mir::Promoted,\n                         rustc_middle::mir::Body<$tcx>"}, {"sha": "69bb4e23c4c0dccecaa87e12292a2c7f7a0d3d23", "filename": "compiler/rustc_middle/src/ich/impls_ty.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/41c44b498f021f8028151109abf2805fa4269866/compiler%2Frustc_middle%2Fsrc%2Fich%2Fimpls_ty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41c44b498f021f8028151109abf2805fa4269866/compiler%2Frustc_middle%2Fsrc%2Fich%2Fimpls_ty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fich%2Fimpls_ty.rs?ref=41c44b498f021f8028151109abf2805fa4269866", "patch": "@@ -184,15 +184,6 @@ impl<'a> HashStable<StableHashingContext<'a>> for ty::FloatVid {\n     }\n }\n \n-impl<'a, T> HashStable<StableHashingContext<'a>> for ty::steal::Steal<T>\n-where\n-    T: HashStable<StableHashingContext<'a>>,\n-{\n-    fn hash_stable(&self, hcx: &mut StableHashingContext<'a>, hasher: &mut StableHasher) {\n-        self.borrow().hash_stable(hcx, hasher);\n-    }\n-}\n-\n impl<'a> HashStable<StableHashingContext<'a>> for crate::middle::privacy::AccessLevels {\n     fn hash_stable(&self, hcx: &mut StableHashingContext<'a>, hasher: &mut StableHasher) {\n         hcx.with_node_id_hashing_mode(NodeIdHashingMode::HashDefPath, |hcx| {"}, {"sha": "c11c8e5f969c32aabcbc511d394672c84f09b913", "filename": "compiler/rustc_middle/src/ty/context.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41c44b498f021f8028151109abf2805fa4269866/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41c44b498f021f8028151109abf2805fa4269866/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs?ref=41c44b498f021f8028151109abf2805fa4269866", "patch": "@@ -14,7 +14,6 @@ use crate::mir::interpret::{self, Allocation, ConstValue, Scalar};\n use crate::mir::{Body, Field, Local, Place, PlaceElem, ProjectionKind, Promoted};\n use crate::traits;\n use crate::ty::query::{self, TyCtxtAt};\n-use crate::ty::steal::Steal;\n use crate::ty::subst::{GenericArg, GenericArgKind, InternalSubsts, Subst, SubstsRef, UserSubsts};\n use crate::ty::TyKind::*;\n use crate::ty::{\n@@ -33,6 +32,7 @@ use rustc_data_structures::sharded::{IntoPointer, ShardedHashMap};\n use rustc_data_structures::stable_hasher::{\n     hash_stable_hashmap, HashStable, StableHasher, StableVec,\n };\n+use rustc_data_structures::steal::Steal;\n use rustc_data_structures::sync::{self, Lock, Lrc, WorkerLocal};\n use rustc_data_structures::unhash::UnhashMap;\n use rustc_errors::ErrorReported;"}, {"sha": "ea031040e7d2d5bb88a1d0dd1983c4e0a5e4acac", "filename": "compiler/rustc_middle/src/ty/mod.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/41c44b498f021f8028151109abf2805fa4269866/compiler%2Frustc_middle%2Fsrc%2Fty%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41c44b498f021f8028151109abf2805fa4269866/compiler%2Frustc_middle%2Fsrc%2Fty%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fmod.rs?ref=41c44b498f021f8028151109abf2805fa4269866", "patch": "@@ -106,7 +106,6 @@ pub mod outlives;\n pub mod print;\n pub mod query;\n pub mod relate;\n-pub mod steal;\n pub mod subst;\n pub mod trait_def;\n pub mod util;"}, {"sha": "187f86a52f4dc34abb5784c6811114a176826cfb", "filename": "compiler/rustc_middle/src/ty/query/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41c44b498f021f8028151109abf2805fa4269866/compiler%2Frustc_middle%2Fsrc%2Fty%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41c44b498f021f8028151109abf2805fa4269866/compiler%2Frustc_middle%2Fsrc%2Fty%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fquery%2Fmod.rs?ref=41c44b498f021f8028151109abf2805fa4269866", "patch": "@@ -28,13 +28,13 @@ use crate::traits::query::{\n };\n use crate::traits::specialization_graph;\n use crate::traits::{self, ImplSource};\n-use crate::ty::steal::Steal;\n use crate::ty::subst::{GenericArg, SubstsRef};\n use crate::ty::util::AlwaysRequiresDrop;\n use crate::ty::{self, AdtSizedConstraint, CrateInherentImpls, ParamEnvAnd, Ty, TyCtxt};\n use rustc_data_structures::fingerprint::Fingerprint;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet, FxIndexMap};\n use rustc_data_structures::stable_hasher::StableVec;\n+use rustc_data_structures::steal::Steal;\n use rustc_data_structures::svh::Svh;\n use rustc_data_structures::sync::Lrc;\n use rustc_errors::ErrorReported;"}, {"sha": "690051f8659cd9629dfd255ec6438eeb69cf8086", "filename": "compiler/rustc_mir/src/transform/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41c44b498f021f8028151109abf2805fa4269866/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41c44b498f021f8028151109abf2805fa4269866/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fmod.rs?ref=41c44b498f021f8028151109abf2805fa4269866", "patch": "@@ -1,14 +1,14 @@\n use crate::{shim, util};\n use required_consts::RequiredConstsVisitor;\n use rustc_data_structures::fx::FxHashSet;\n+use rustc_data_structures::steal::Steal;\n use rustc_hir as hir;\n use rustc_hir::def_id::{CrateNum, DefId, LocalDefId, LOCAL_CRATE};\n use rustc_hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc_index::vec::IndexVec;\n use rustc_middle::mir::visit::Visitor as _;\n use rustc_middle::mir::{traversal, Body, ConstQualifs, MirPhase, Promoted};\n use rustc_middle::ty::query::Providers;\n-use rustc_middle::ty::steal::Steal;\n use rustc_middle::ty::{self, TyCtxt, TypeFoldable};\n use rustc_span::{Span, Symbol};\n use std::borrow::Cow;"}, {"sha": "6982cdccd52059f8bd6e69accf7aaf9ceae98da6", "filename": "compiler/rustc_mir_build/src/build/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41c44b498f021f8028151109abf2805fa4269866/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41c44b498f021f8028151109abf2805fa4269866/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fmod.rs?ref=41c44b498f021f8028151109abf2805fa4269866", "patch": "@@ -24,7 +24,7 @@ use super::lints;\n crate fn mir_built<'tcx>(\n     tcx: TyCtxt<'tcx>,\n     def: ty::WithOptConstParam<LocalDefId>,\n-) -> &'tcx ty::steal::Steal<Body<'tcx>> {\n+) -> &'tcx rustc_data_structures::steal::Steal<Body<'tcx>> {\n     if let Some(def) = def.try_upgrade(tcx) {\n         return tcx.mir_built(def);\n     }"}]}