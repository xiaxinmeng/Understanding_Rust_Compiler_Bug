{"sha": "7444d07154652c4d7a3e91e645eaa604a8bc4c84", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc0NDRkMDcxNTQ2NTJjNGQ3YTNlOTFlNjQ1ZWFhNjA0YThiYzRjODQ=", "commit": {"author": {"name": "Andrew Cann", "email": "shum@canndrew.org", "date": "2017-02-04T06:03:28Z"}, "committer": {"name": "Andrew Cann", "email": "shum@canndrew.org", "date": "2017-02-04T06:03:28Z"}, "message": "Fix test", "tree": {"sha": "2aadb7542c60c7402caac247df416d6998c0b622", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2aadb7542c60c7402caac247df416d6998c0b622"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7444d07154652c4d7a3e91e645eaa604a8bc4c84", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7444d07154652c4d7a3e91e645eaa604a8bc4c84", "html_url": "https://github.com/rust-lang/rust/commit/7444d07154652c4d7a3e91e645eaa604a8bc4c84", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7444d07154652c4d7a3e91e645eaa604a8bc4c84/comments", "author": {"login": "canndrew", "id": 5555066, "node_id": "MDQ6VXNlcjU1NTUwNjY=", "avatar_url": "https://avatars.githubusercontent.com/u/5555066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/canndrew", "html_url": "https://github.com/canndrew", "followers_url": "https://api.github.com/users/canndrew/followers", "following_url": "https://api.github.com/users/canndrew/following{/other_user}", "gists_url": "https://api.github.com/users/canndrew/gists{/gist_id}", "starred_url": "https://api.github.com/users/canndrew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/canndrew/subscriptions", "organizations_url": "https://api.github.com/users/canndrew/orgs", "repos_url": "https://api.github.com/users/canndrew/repos", "events_url": "https://api.github.com/users/canndrew/events{/privacy}", "received_events_url": "https://api.github.com/users/canndrew/received_events", "type": "User", "site_admin": false}, "committer": {"login": "canndrew", "id": 5555066, "node_id": "MDQ6VXNlcjU1NTUwNjY=", "avatar_url": "https://avatars.githubusercontent.com/u/5555066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/canndrew", "html_url": "https://github.com/canndrew", "followers_url": "https://api.github.com/users/canndrew/followers", "following_url": "https://api.github.com/users/canndrew/following{/other_user}", "gists_url": "https://api.github.com/users/canndrew/gists{/gist_id}", "starred_url": "https://api.github.com/users/canndrew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/canndrew/subscriptions", "organizations_url": "https://api.github.com/users/canndrew/orgs", "repos_url": "https://api.github.com/users/canndrew/repos", "events_url": "https://api.github.com/users/canndrew/events{/privacy}", "received_events_url": "https://api.github.com/users/canndrew/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "40c9538d2cb391e6be11cb7c9ede9f302bef3d59", "url": "https://api.github.com/repos/rust-lang/rust/commits/40c9538d2cb391e6be11cb7c9ede9f302bef3d59", "html_url": "https://github.com/rust-lang/rust/commit/40c9538d2cb391e6be11cb7c9ede9f302bef3d59"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "5481de1811d78b91b411b6b470b288bec54dc154", "filename": "src/librustc_driver/test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7444d07154652c4d7a3e91e645eaa604a8bc4c84/src%2Flibrustc_driver%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7444d07154652c4d7a3e91e645eaa604a8bc4c84/src%2Flibrustc_driver%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Ftest.rs?ref=7444d07154652c4d7a3e91e645eaa604a8bc4c84", "patch": "@@ -819,7 +819,7 @@ fn walk_ty_skip_subtree() {\n         let int_ty = tcx.types.isize;\n         let uint_ty = tcx.types.usize;\n         let tup1_ty = tcx.intern_tup(&[int_ty, uint_ty, int_ty, uint_ty], false);\n-        let tup2_ty = tcx.intern_tup(&[tup1_ty, tup1_ty, uint_ty]);\n+        let tup2_ty = tcx.intern_tup(&[tup1_ty, tup1_ty, uint_ty], false);\n \n         // types we expect to see (in order), plus a boolean saying\n         // whether to skip the subtree."}]}