{"sha": "2fe451c6bab39f87070edfd9a4160296bf4a2d9e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJmZTQ1MWM2YmFiMzlmODcwNzBlZGZkOWE0MTYwMjk2YmY0YTJkOWU=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-09-28T21:59:03Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-09-28T21:59:23Z"}, "message": "Fix patterns in either", "tree": {"sha": "b486a71aee90618821b0e69fcb048c9447ba2a98", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b486a71aee90618821b0e69fcb048c9447ba2a98"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2fe451c6bab39f87070edfd9a4160296bf4a2d9e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2fe451c6bab39f87070edfd9a4160296bf4a2d9e", "html_url": "https://github.com/rust-lang/rust/commit/2fe451c6bab39f87070edfd9a4160296bf4a2d9e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2fe451c6bab39f87070edfd9a4160296bf4a2d9e/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d9a06be2249a539b17f629ea310c4a4c01a57197", "url": "https://api.github.com/repos/rust-lang/rust/commits/d9a06be2249a539b17f629ea310c4a4c01a57197", "html_url": "https://github.com/rust-lang/rust/commit/d9a06be2249a539b17f629ea310c4a4c01a57197"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "ee259263f47ebd4843bc5574db98a68ffe2f305c", "filename": "src/libcore/either.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/2fe451c6bab39f87070edfd9a4160296bf4a2d9e/src%2Flibcore%2Feither.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2fe451c6bab39f87070edfd9a4160296bf4a2d9e/src%2Flibcore%2Feither.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Feither.rs?ref=2fe451c6bab39f87070edfd9a4160296bf4a2d9e", "patch": "@@ -68,8 +68,8 @@ fn partition<T: Copy, U: Copy>(eithers: &[Either<T, U>])\n     let mut rights: ~[U] = ~[];\n     for vec::each(eithers) |elt| {\n         match *elt {\n-          Left(l) => lefts.push(l),\n-          Right(r) => rights.push(r)\n+          Left(copy l) => lefts.push(l),\n+          Right(copy r) => rights.push(r)\n         }\n     }\n     return {lefts: move lefts, rights: move rights};\n@@ -79,8 +79,8 @@ pure fn flip<T: Copy, U: Copy>(eith: &Either<T, U>) -> Either<U, T> {\n     //! Flips between left and right of a given either\n \n     match *eith {\n-      Right(r) => Left(r),\n-      Left(l) => Right(l)\n+      Right(copy r) => Left(r),\n+      Left(copy l) => Right(l)\n     }\n }\n \n@@ -93,8 +93,8 @@ pure fn to_result<T: Copy, U: Copy>(eith: &Either<T, U>) -> Result<U, T> {\n      */\n \n     match *eith {\n-      Right(r) => result::Ok(r),\n-      Left(l) => result::Err(l)\n+      Right(copy r) => result::Ok(r),\n+      Left(copy l) => result::Err(l)\n     }\n }\n \n@@ -129,16 +129,16 @@ pure fn unwrap_right<T,U>(+eith: Either<T,U>) -> U {\n impl<T:Eq,U:Eq> Either<T,U> : Eq {\n     pure fn eq(other: &Either<T,U>) -> bool {\n         match self {\n-            Left(a) => {\n+            Left(ref a) => {\n                 match (*other) {\n-                    Left(ref b) => a.eq(b),\n+                    Left(ref b) => (*a).eq(b),\n                     Right(_) => false\n                 }\n             }\n-            Right(a) => {\n+            Right(ref a) => {\n                 match (*other) {\n                     Left(_) => false,\n-                    Right(ref b) => a.eq(b)\n+                    Right(ref b) => (*a).eq(b)\n                 }\n             }\n         }"}]}