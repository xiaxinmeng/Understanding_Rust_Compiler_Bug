{"sha": "387e31c9a7e6f7df3da513e2241a03e0b738ea4d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM4N2UzMWM5YTdlNmY3ZGYzZGE1MTNlMjI0MWEwM2UwYjczOGVhNGQ=", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2020-09-21T04:13:34Z"}, "committer": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2020-10-21T01:43:56Z"}, "message": "rustc_mir: properly map scope parent chains into the caller when inlining.", "tree": {"sha": "cec026e2b65894b72c5c5f431df3bbd7d44e53db", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cec026e2b65894b72c5c5f431df3bbd7d44e53db"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/387e31c9a7e6f7df3da513e2241a03e0b738ea4d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/387e31c9a7e6f7df3da513e2241a03e0b738ea4d", "html_url": "https://github.com/rust-lang/rust/commit/387e31c9a7e6f7df3da513e2241a03e0b738ea4d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/387e31c9a7e6f7df3da513e2241a03e0b738ea4d/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6451b39a25fbad9e991c6ea014a86217c52d3fd6", "url": "https://api.github.com/repos/rust-lang/rust/commits/6451b39a25fbad9e991c6ea014a86217c52d3fd6", "html_url": "https://github.com/rust-lang/rust/commit/6451b39a25fbad9e991c6ea014a86217c52d3fd6"}], "stats": {"total": 91, "additions": 72, "deletions": 19}, "files": [{"sha": "947466c87fa9956a3987b441a05db679cd5b06c1", "filename": "compiler/rustc_mir/src/transform/inline.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/387e31c9a7e6f7df3da513e2241a03e0b738ea4d/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/387e31c9a7e6f7df3da513e2241a03e0b738ea4d/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Finline.rs?ref=387e31c9a7e6f7df3da513e2241a03e0b738ea4d", "patch": "@@ -435,6 +435,11 @@ impl Inliner<'tcx> {\n                 let mut scope_map = IndexVec::with_capacity(callee_body.source_scopes.len());\n \n                 for mut scope in callee_body.source_scopes.iter().cloned() {\n+                    // Map the callee scopes into the caller.\n+                    // FIXME(eddyb) this may ICE if the scopes are out of order.\n+                    scope.parent_scope = scope.parent_scope.map(|s| scope_map[s]);\n+                    scope.inlined_parent_scope = scope.inlined_parent_scope.map(|s| scope_map[s]);\n+\n                     if scope.parent_scope.is_none() {\n                         let callsite_scope = &caller_body.source_scopes[callsite.source_info.scope];\n "}, {"sha": "cb2cd785b48717fabbff0c7a991a108a6ae80686", "filename": "src/test/mir-opt/inline/inline_closure_borrows_arg.foo.Inline.after.mir", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/387e31c9a7e6f7df3da513e2241a03e0b738ea4d/src%2Ftest%2Fmir-opt%2Finline%2Finline_closure_borrows_arg.foo.Inline.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/387e31c9a7e6f7df3da513e2241a03e0b738ea4d/src%2Ftest%2Fmir-opt%2Finline%2Finline_closure_borrows_arg.foo.Inline.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Finline%2Finline_closure_borrows_arg.foo.Inline.after.mir?ref=387e31c9a7e6f7df3da513e2241a03e0b738ea4d", "patch": "@@ -17,11 +17,11 @@ fn foo(_1: T, _2: &i32) -> i32 {\n             debug r => _9;               // in scope 2 at $DIR/inline-closure-borrows-arg.rs:12:14: 12:15\n             debug _s => _10;             // in scope 2 at $DIR/inline-closure-borrows-arg.rs:12:23: 12:25\n             let _8: &i32;                // in scope 2 at $DIR/inline-closure-borrows-arg.rs:16:5: 16:12\n+            scope 3 {\n+                debug variable => _8;    // in scope 3 at $DIR/inline-closure-borrows-arg.rs:13:13: 13:21\n+            }\n         }\n     }\n-    scope 3 {\n-        debug variable => _8;            // in scope 3 at $DIR/inline-closure-borrows-arg.rs:13:13: 13:21\n-    }\n \n     bb0: {\n         StorageLive(_3);                 // scope 0 at $DIR/inline-closure-borrows-arg.rs:12:9: 12:10"}, {"sha": "76d806acc63491e97118171a14b1a2260e33fe94", "filename": "src/test/mir-opt/inline/issue-76997-inline-scopes-parenting.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/387e31c9a7e6f7df3da513e2241a03e0b738ea4d/src%2Ftest%2Fmir-opt%2Finline%2Fissue-76997-inline-scopes-parenting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/387e31c9a7e6f7df3da513e2241a03e0b738ea4d/src%2Ftest%2Fmir-opt%2Finline%2Fissue-76997-inline-scopes-parenting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Finline%2Fissue-76997-inline-scopes-parenting.rs?ref=387e31c9a7e6f7df3da513e2241a03e0b738ea4d", "patch": "@@ -0,0 +1,7 @@\n+// Tests that MIR inliner can handle `SourceScopeData` parenting correctly. (#76997)\n+\n+// EMIT_MIR issue_76997_inline_scopes_parenting.main.Inline.after.mir\n+fn main() {\n+    let f = |x| { let y = x; y };\n+    f(())\n+}"}, {"sha": "9d1e8aca40822ca52312c6f1ccc2f16bb222cb4b", "filename": "src/test/mir-opt/inline/issue_76997_inline_scopes_parenting.main.Inline.after.mir", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/387e31c9a7e6f7df3da513e2241a03e0b738ea4d/src%2Ftest%2Fmir-opt%2Finline%2Fissue_76997_inline_scopes_parenting.main.Inline.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/387e31c9a7e6f7df3da513e2241a03e0b738ea4d/src%2Ftest%2Fmir-opt%2Finline%2Fissue_76997_inline_scopes_parenting.main.Inline.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Finline%2Fissue_76997_inline_scopes_parenting.main.Inline.after.mir?ref=387e31c9a7e6f7df3da513e2241a03e0b738ea4d", "patch": "@@ -0,0 +1,41 @@\n+// MIR for `main` after Inline\n+\n+fn main() -> () {\n+    let mut _0: ();                      // return place in scope 0 at $DIR/issue-76997-inline-scopes-parenting.rs:4:11: 4:11\n+    let _1: [closure@$DIR/issue-76997-inline-scopes-parenting.rs:5:13: 5:33]; // in scope 0 at $DIR/issue-76997-inline-scopes-parenting.rs:5:9: 5:10\n+    let mut _2: &[closure@$DIR/issue-76997-inline-scopes-parenting.rs:5:13: 5:33]; // in scope 0 at $DIR/issue-76997-inline-scopes-parenting.rs:6:5: 6:6\n+    let mut _3: ((),);                   // in scope 0 at $DIR/issue-76997-inline-scopes-parenting.rs:6:5: 6:10\n+    let mut _4: ();                      // in scope 0 at $DIR/issue-76997-inline-scopes-parenting.rs:6:7: 6:9\n+    let mut _6: ();                      // in scope 0 at $DIR/issue-76997-inline-scopes-parenting.rs:6:5: 6:10\n+    scope 1 {\n+        debug f => _1;                   // in scope 1 at $DIR/issue-76997-inline-scopes-parenting.rs:5:9: 5:10\n+        scope 2 (inlined main::{closure#0}) { // at $DIR/issue-76997-inline-scopes-parenting.rs:6:5: 6:10\n+            debug x => _6;               // in scope 2 at $DIR/issue-76997-inline-scopes-parenting.rs:5:14: 5:15\n+            let _5: ();                  // in scope 2 at $DIR/issue-76997-inline-scopes-parenting.rs:6:5: 6:10\n+            scope 3 {\n+                debug y => _5;           // in scope 3 at $DIR/issue-76997-inline-scopes-parenting.rs:5:23: 5:24\n+            }\n+        }\n+    }\n+\n+    bb0: {\n+        StorageLive(_1);                 // scope 0 at $DIR/issue-76997-inline-scopes-parenting.rs:5:9: 5:10\n+        StorageLive(_2);                 // scope 1 at $DIR/issue-76997-inline-scopes-parenting.rs:6:5: 6:6\n+        _2 = &_1;                        // scope 1 at $DIR/issue-76997-inline-scopes-parenting.rs:6:5: 6:6\n+        StorageLive(_3);                 // scope 1 at $DIR/issue-76997-inline-scopes-parenting.rs:6:5: 6:10\n+        StorageLive(_4);                 // scope 1 at $DIR/issue-76997-inline-scopes-parenting.rs:6:7: 6:9\n+        (_3.0: ()) = move _4;            // scope 1 at $DIR/issue-76997-inline-scopes-parenting.rs:6:5: 6:10\n+        StorageLive(_6);                 // scope 1 at $DIR/issue-76997-inline-scopes-parenting.rs:6:5: 6:10\n+        _6 = move (_3.0: ());            // scope 1 at $DIR/issue-76997-inline-scopes-parenting.rs:6:5: 6:10\n+        StorageLive(_5);                 // scope 2 at $DIR/issue-76997-inline-scopes-parenting.rs:5:23: 5:24\n+        _5 = const ();                   // scope 2 at $DIR/issue-76997-inline-scopes-parenting.rs:5:27: 5:28\n+        _0 = const ();                   // scope 3 at $DIR/issue-76997-inline-scopes-parenting.rs:5:30: 5:31\n+        StorageDead(_5);                 // scope 2 at $DIR/issue-76997-inline-scopes-parenting.rs:5:32: 5:33\n+        StorageDead(_6);                 // scope 1 at $DIR/issue-76997-inline-scopes-parenting.rs:6:5: 6:10\n+        StorageDead(_4);                 // scope 1 at $DIR/issue-76997-inline-scopes-parenting.rs:6:9: 6:10\n+        StorageDead(_3);                 // scope 1 at $DIR/issue-76997-inline-scopes-parenting.rs:6:9: 6:10\n+        StorageDead(_2);                 // scope 1 at $DIR/issue-76997-inline-scopes-parenting.rs:6:9: 6:10\n+        StorageDead(_1);                 // scope 0 at $DIR/issue-76997-inline-scopes-parenting.rs:7:1: 7:2\n+        return;                          // scope 0 at $DIR/issue-76997-inline-scopes-parenting.rs:7:2: 7:2\n+    }\n+}"}, {"sha": "82d17488782ecd2ee827fa3354be2ce1cf7066d8", "filename": "src/test/mir-opt/issue_73223.main.PreCodegen.32bit.diff", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/387e31c9a7e6f7df3da513e2241a03e0b738ea4d/src%2Ftest%2Fmir-opt%2Fissue_73223.main.PreCodegen.32bit.diff", "raw_url": "https://github.com/rust-lang/rust/raw/387e31c9a7e6f7df3da513e2241a03e0b738ea4d/src%2Ftest%2Fmir-opt%2Fissue_73223.main.PreCodegen.32bit.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fissue_73223.main.PreCodegen.32bit.diff?ref=387e31c9a7e6f7df3da513e2241a03e0b738ea4d", "patch": "@@ -41,13 +41,17 @@\n                           let mut _23: for<'r, 's, 't0> fn(&'r core::fmt::Opaque, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>; // in scope 6 at $SRC_DIR/std/src/macros.rs:LL:COL\n                           let mut _24: for<'r, 's, 't0> fn(&'r &i32, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>; // in scope 6 at $SRC_DIR/std/src/macros.rs:LL:COL\n                           let mut _25: &&i32; // in scope 6 at $SRC_DIR/std/src/macros.rs:LL:COL\n+                          scope 7 {\n+                          }\n                       }\n                       scope 8 (inlined ArgumentV1::new::<&i32>) { // at $SRC_DIR/std/src/macros.rs:LL:COL\n                           debug x => _28;  // in scope 8 at $SRC_DIR/core/src/fmt/mod.rs:LL:COL\n                           debug f => _27;  // in scope 8 at $SRC_DIR/core/src/fmt/mod.rs:LL:COL\n                           let mut _26: for<'r, 's, 't0> fn(&'r core::fmt::Opaque, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>; // in scope 8 at $SRC_DIR/std/src/macros.rs:LL:COL\n                           let mut _27: for<'r, 's, 't0> fn(&'r &i32, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>; // in scope 8 at $SRC_DIR/std/src/macros.rs:LL:COL\n                           let mut _28: &&i32; // in scope 8 at $SRC_DIR/std/src/macros.rs:LL:COL\n+                          scope 9 {\n+                          }\n                       }\n                   }\n                   scope 10 (inlined Arguments::new_v1) { // at $SRC_DIR/std/src/macros.rs:LL:COL\n@@ -63,10 +67,6 @@\n       scope 2 {\n           debug v => _3;                   // in scope 2 at $DIR/issue-73223.rs:3:14: 3:15\n       }\n-      scope 7 {\n-      }\n-      scope 9 {\n-      }\n   \n       bb0: {\n           StorageLive(_1);                 // scope 0 at $DIR/issue-73223.rs:2:9: 2:14"}, {"sha": "82d17488782ecd2ee827fa3354be2ce1cf7066d8", "filename": "src/test/mir-opt/issue_73223.main.PreCodegen.64bit.diff", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/387e31c9a7e6f7df3da513e2241a03e0b738ea4d/src%2Ftest%2Fmir-opt%2Fissue_73223.main.PreCodegen.64bit.diff", "raw_url": "https://github.com/rust-lang/rust/raw/387e31c9a7e6f7df3da513e2241a03e0b738ea4d/src%2Ftest%2Fmir-opt%2Fissue_73223.main.PreCodegen.64bit.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fissue_73223.main.PreCodegen.64bit.diff?ref=387e31c9a7e6f7df3da513e2241a03e0b738ea4d", "patch": "@@ -41,13 +41,17 @@\n                           let mut _23: for<'r, 's, 't0> fn(&'r core::fmt::Opaque, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>; // in scope 6 at $SRC_DIR/std/src/macros.rs:LL:COL\n                           let mut _24: for<'r, 's, 't0> fn(&'r &i32, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>; // in scope 6 at $SRC_DIR/std/src/macros.rs:LL:COL\n                           let mut _25: &&i32; // in scope 6 at $SRC_DIR/std/src/macros.rs:LL:COL\n+                          scope 7 {\n+                          }\n                       }\n                       scope 8 (inlined ArgumentV1::new::<&i32>) { // at $SRC_DIR/std/src/macros.rs:LL:COL\n                           debug x => _28;  // in scope 8 at $SRC_DIR/core/src/fmt/mod.rs:LL:COL\n                           debug f => _27;  // in scope 8 at $SRC_DIR/core/src/fmt/mod.rs:LL:COL\n                           let mut _26: for<'r, 's, 't0> fn(&'r core::fmt::Opaque, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>; // in scope 8 at $SRC_DIR/std/src/macros.rs:LL:COL\n                           let mut _27: for<'r, 's, 't0> fn(&'r &i32, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>; // in scope 8 at $SRC_DIR/std/src/macros.rs:LL:COL\n                           let mut _28: &&i32; // in scope 8 at $SRC_DIR/std/src/macros.rs:LL:COL\n+                          scope 9 {\n+                          }\n                       }\n                   }\n                   scope 10 (inlined Arguments::new_v1) { // at $SRC_DIR/std/src/macros.rs:LL:COL\n@@ -63,10 +67,6 @@\n       scope 2 {\n           debug v => _3;                   // in scope 2 at $DIR/issue-73223.rs:3:14: 3:15\n       }\n-      scope 7 {\n-      }\n-      scope 9 {\n-      }\n   \n       bb0: {\n           StorageLive(_1);                 // scope 0 at $DIR/issue-73223.rs:2:9: 2:14"}, {"sha": "f4295b278e63eb49c215e2dfa60767ec2706250a", "filename": "src/test/mir-opt/issue_73223.main.SimplifyArmIdentity.32bit.diff", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/387e31c9a7e6f7df3da513e2241a03e0b738ea4d/src%2Ftest%2Fmir-opt%2Fissue_73223.main.SimplifyArmIdentity.32bit.diff", "raw_url": "https://github.com/rust-lang/rust/raw/387e31c9a7e6f7df3da513e2241a03e0b738ea4d/src%2Ftest%2Fmir-opt%2Fissue_73223.main.SimplifyArmIdentity.32bit.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fissue_73223.main.SimplifyArmIdentity.32bit.diff?ref=387e31c9a7e6f7df3da513e2241a03e0b738ea4d", "patch": "@@ -65,6 +65,8 @@\n                           let mut _47: for<'r, 's, 't0> fn(&'r &i32, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>; // in scope 6 at $SRC_DIR/std/src/macros.rs:LL:COL\n                           let mut _48: &core::fmt::Opaque; // in scope 6 at $SRC_DIR/std/src/macros.rs:LL:COL\n                           let mut _49: &&i32; // in scope 6 at $SRC_DIR/std/src/macros.rs:LL:COL\n+                          scope 7 {\n+                          }\n                       }\n                       scope 8 (inlined ArgumentV1::new::<&i32>) { // at $SRC_DIR/std/src/macros.rs:LL:COL\n                           debug x => _42;  // in scope 8 at $SRC_DIR/core/src/fmt/mod.rs:LL:COL\n@@ -73,6 +75,8 @@\n                           let mut _51: for<'r, 's, 't0> fn(&'r &i32, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>; // in scope 8 at $SRC_DIR/std/src/macros.rs:LL:COL\n                           let mut _52: &core::fmt::Opaque; // in scope 8 at $SRC_DIR/std/src/macros.rs:LL:COL\n                           let mut _53: &&i32; // in scope 8 at $SRC_DIR/std/src/macros.rs:LL:COL\n+                          scope 9 {\n+                          }\n                       }\n                   }\n                   scope 10 (inlined Arguments::new_v1) { // at $SRC_DIR/std/src/macros.rs:LL:COL\n@@ -88,10 +92,6 @@\n       scope 2 {\n           debug v => _4;                   // in scope 2 at $DIR/issue-73223.rs:3:14: 3:15\n       }\n-      scope 7 {\n-      }\n-      scope 9 {\n-      }\n   \n       bb0: {\n           StorageLive(_1);                 // scope 0 at $DIR/issue-73223.rs:2:9: 2:14"}, {"sha": "f4295b278e63eb49c215e2dfa60767ec2706250a", "filename": "src/test/mir-opt/issue_73223.main.SimplifyArmIdentity.64bit.diff", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/387e31c9a7e6f7df3da513e2241a03e0b738ea4d/src%2Ftest%2Fmir-opt%2Fissue_73223.main.SimplifyArmIdentity.64bit.diff", "raw_url": "https://github.com/rust-lang/rust/raw/387e31c9a7e6f7df3da513e2241a03e0b738ea4d/src%2Ftest%2Fmir-opt%2Fissue_73223.main.SimplifyArmIdentity.64bit.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fissue_73223.main.SimplifyArmIdentity.64bit.diff?ref=387e31c9a7e6f7df3da513e2241a03e0b738ea4d", "patch": "@@ -65,6 +65,8 @@\n                           let mut _47: for<'r, 's, 't0> fn(&'r &i32, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>; // in scope 6 at $SRC_DIR/std/src/macros.rs:LL:COL\n                           let mut _48: &core::fmt::Opaque; // in scope 6 at $SRC_DIR/std/src/macros.rs:LL:COL\n                           let mut _49: &&i32; // in scope 6 at $SRC_DIR/std/src/macros.rs:LL:COL\n+                          scope 7 {\n+                          }\n                       }\n                       scope 8 (inlined ArgumentV1::new::<&i32>) { // at $SRC_DIR/std/src/macros.rs:LL:COL\n                           debug x => _42;  // in scope 8 at $SRC_DIR/core/src/fmt/mod.rs:LL:COL\n@@ -73,6 +75,8 @@\n                           let mut _51: for<'r, 's, 't0> fn(&'r &i32, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>; // in scope 8 at $SRC_DIR/std/src/macros.rs:LL:COL\n                           let mut _52: &core::fmt::Opaque; // in scope 8 at $SRC_DIR/std/src/macros.rs:LL:COL\n                           let mut _53: &&i32; // in scope 8 at $SRC_DIR/std/src/macros.rs:LL:COL\n+                          scope 9 {\n+                          }\n                       }\n                   }\n                   scope 10 (inlined Arguments::new_v1) { // at $SRC_DIR/std/src/macros.rs:LL:COL\n@@ -88,10 +92,6 @@\n       scope 2 {\n           debug v => _4;                   // in scope 2 at $DIR/issue-73223.rs:3:14: 3:15\n       }\n-      scope 7 {\n-      }\n-      scope 9 {\n-      }\n   \n       bb0: {\n           StorageLive(_1);                 // scope 0 at $DIR/issue-73223.rs:2:9: 2:14"}]}