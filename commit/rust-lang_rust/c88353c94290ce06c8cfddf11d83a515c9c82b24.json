{"sha": "c88353c94290ce06c8cfddf11d83a515c9c82b24", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM4ODM1M2M5NDI5MGNlMDZjOGNmZGRmMTFkODNhNTE1YzljODJiMjQ=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-11-10T14:01:01Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-11-10T14:01:01Z"}, "message": "Warn and error about some things and make METADATA_FILENAME an &str", "tree": {"sha": "506c83512916a732e202bc868555a13f7a415c5e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/506c83512916a732e202bc868555a13f7a415c5e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c88353c94290ce06c8cfddf11d83a515c9c82b24", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c88353c94290ce06c8cfddf11d83a515c9c82b24", "html_url": "https://github.com/rust-lang/rust/commit/c88353c94290ce06c8cfddf11d83a515c9c82b24", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c88353c94290ce06c8cfddf11d83a515c9c82b24/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9ceb1a170be3af2d394babc376e1a021eab6f252", "url": "https://api.github.com/repos/rust-lang/rust/commits/9ceb1a170be3af2d394babc376e1a021eab6f252", "html_url": "https://github.com/rust-lang/rust/commit/9ceb1a170be3af2d394babc376e1a021eab6f252"}], "stats": {"total": 20, "additions": 16, "deletions": 4}, "files": [{"sha": "aacb3dae1215e59d479022cc948b88488620687e", "filename": "src/lib.rs", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/c88353c94290ce06c8cfddf11d83a515c9c82b24/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c88353c94290ce06c8cfddf11d83a515c9c82b24/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=c88353c94290ce06c8cfddf11d83a515c9c82b24", "patch": "@@ -73,7 +73,7 @@ mod prelude {\n \n     pub use rustc::hir::def_id::{CrateNum, DefId, LOCAL_CRATE};\n     pub use rustc::mir::{self, interpret::AllocId, *};\n-    pub use rustc::session::{config::CrateType, Session};\n+    pub use rustc::session::{config::{CrateType, Lto}, Session};\n     pub use rustc::ty::layout::{self, Abi, LayoutOf, Scalar, Size, TyLayout};\n     pub use rustc::ty::{\n         self, subst::Substs, FnSig, Instance, InstanceDef, ParamEnv, PolyFnSig, Ty, TyCtxt,\n@@ -143,6 +143,18 @@ impl CodegenBackend for CraneliftCodegenBackend {\n                 }\n             }\n         }\n+        match sess.lto() {\n+            Lto::Fat | Lto::Thin | Lto::ThinLocal => {\n+                sess.warn(\"Rustc codegen cranelift doesn't support lto\");\n+            }\n+            Lto::No => {},\n+        }\n+        if sess.opts.cg.rpath {\n+            sess.err(\"rpath is not yet supported\");\n+        }\n+        if sess.opts.debugging_opts.pgo_gen.is_some() {\n+            sess.err(\"pgo is not supported\");\n+        }\n     }\n \n     fn metadata_loader(&self) -> Box<MetadataLoader + Sync> {"}, {"sha": "14202a4a6d4545da813a41b90e04a79f453a82e3", "filename": "src/link.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c88353c94290ce06c8cfddf11d83a515c9c82b24/src%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c88353c94290ce06c8cfddf11d83a515c9c82b24/src%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flink.rs?ref=c88353c94290ce06c8cfddf11d83a515c9c82b24", "patch": "@@ -22,7 +22,7 @@ pub(crate) fn link_rlib(sess: &Session, res: &crate::CodegenResults, output_name\n     builder\n         .append(\n             &ar::Header::new(\n-                crate::metadata::METADATA_FILENAME.to_vec(),\n+                crate::metadata::METADATA_FILENAME.as_bytes().to_vec(),\n                 res.metadata.len() as u64,\n             ),\n             ::std::io::Cursor::new(res.metadata.clone()),"}, {"sha": "c70fdba35d848d623f914ed51268d02f0a478633", "filename": "src/metadata.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c88353c94290ce06c8cfddf11d83a515c9c82b24/src%2Fmetadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c88353c94290ce06c8cfddf11d83a515c9c82b24/src%2Fmetadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmetadata.rs?ref=c88353c94290ce06c8cfddf11d83a515c9c82b24", "patch": "@@ -3,7 +3,7 @@ use rustc_data_structures::owning_ref::{self, OwningRef};\n use std::fs::File;\n use std::path::Path;\n \n-pub const METADATA_FILENAME: &'static [u8] = b\"rust.metadata.bin\" as &[u8];\n+pub const METADATA_FILENAME: &str = \"rust.metadata.bin\";\n \n pub struct CraneliftMetadataLoader;\n \n@@ -17,7 +17,7 @@ impl MetadataLoader for CraneliftMetadataLoader {\n         // Iterate over all entries in the archive:\n         while let Some(entry_result) = archive.next_entry() {\n             let mut entry = entry_result.map_err(|e| format!(\"{:?}\", e))?;\n-            if entry.header().identifier() == METADATA_FILENAME {\n+            if entry.header().identifier() == METADATA_FILENAME.as_bytes() {\n                 let mut buf = Vec::new();\n                 ::std::io::copy(&mut entry, &mut buf).map_err(|e| format!(\"{:?}\", e))?;\n                 let buf: OwningRef<Vec<u8>, [u8]> = OwningRef::new(buf).into();"}]}