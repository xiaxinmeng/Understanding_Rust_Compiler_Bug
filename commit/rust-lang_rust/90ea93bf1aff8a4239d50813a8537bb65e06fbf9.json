{"sha": "90ea93bf1aff8a4239d50813a8537bb65e06fbf9", "node_id": "C_kwDOAAsO6NoAKDkwZWE5M2JmMWFmZjhhNDIzOWQ1MDgxM2E4NTM3YmI2NWUwNmZiZjk", "commit": {"author": {"name": "Kornel", "email": "kornel@cloudflare.com", "date": "2021-10-26T12:03:02Z"}, "committer": {"name": "Kornel", "email": "kornel@cloudflare.com", "date": "2021-10-26T12:03:02Z"}, "message": "track_caller for slice length assertions", "tree": {"sha": "d8976a381a211f994827e3b520a7f53fb79330dc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d8976a381a211f994827e3b520a7f53fb79330dc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/90ea93bf1aff8a4239d50813a8537bb65e06fbf9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/90ea93bf1aff8a4239d50813a8537bb65e06fbf9", "html_url": "https://github.com/rust-lang/rust/commit/90ea93bf1aff8a4239d50813a8537bb65e06fbf9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/90ea93bf1aff8a4239d50813a8537bb65e06fbf9/comments", "author": {"login": "kornelski", "id": 72159, "node_id": "MDQ6VXNlcjcyMTU5", "avatar_url": "https://avatars.githubusercontent.com/u/72159?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kornelski", "html_url": "https://github.com/kornelski", "followers_url": "https://api.github.com/users/kornelski/followers", "following_url": "https://api.github.com/users/kornelski/following{/other_user}", "gists_url": "https://api.github.com/users/kornelski/gists{/gist_id}", "starred_url": "https://api.github.com/users/kornelski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kornelski/subscriptions", "organizations_url": "https://api.github.com/users/kornelski/orgs", "repos_url": "https://api.github.com/users/kornelski/repos", "events_url": "https://api.github.com/users/kornelski/events{/privacy}", "received_events_url": "https://api.github.com/users/kornelski/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kornelski", "id": 72159, "node_id": "MDQ6VXNlcjcyMTU5", "avatar_url": "https://avatars.githubusercontent.com/u/72159?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kornelski", "html_url": "https://github.com/kornelski", "followers_url": "https://api.github.com/users/kornelski/followers", "following_url": "https://api.github.com/users/kornelski/following{/other_user}", "gists_url": "https://api.github.com/users/kornelski/gists{/gist_id}", "starred_url": "https://api.github.com/users/kornelski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kornelski/subscriptions", "organizations_url": "https://api.github.com/users/kornelski/orgs", "repos_url": "https://api.github.com/users/kornelski/repos", "events_url": "https://api.github.com/users/kornelski/events{/privacy}", "received_events_url": "https://api.github.com/users/kornelski/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c7a30c8b6860d1f3459086f7a91074db1b54bc37", "url": "https://api.github.com/repos/rust-lang/rust/commits/c7a30c8b6860d1f3459086f7a91074db1b54bc37", "html_url": "https://github.com/rust-lang/rust/commit/c7a30c8b6860d1f3459086f7a91074db1b54bc37"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "65ed72cb0cdbe24ca0a2bf493ca1db779ac0cce3", "filename": "library/core/src/slice/mod.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/90ea93bf1aff8a4239d50813a8537bb65e06fbf9/library%2Fcore%2Fsrc%2Fslice%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90ea93bf1aff8a4239d50813a8537bb65e06fbf9/library%2Fcore%2Fsrc%2Fslice%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fslice%2Fmod.rs?ref=90ea93bf1aff8a4239d50813a8537bb65e06fbf9", "patch": "@@ -3076,6 +3076,7 @@ impl<T> [T] {\n     /// [`copy_from_slice`]: slice::copy_from_slice\n     /// [`split_at_mut`]: slice::split_at_mut\n     #[stable(feature = \"clone_from_slice\", since = \"1.7.0\")]\n+    #[track_caller]\n     pub fn clone_from_slice(&mut self, src: &[T])\n     where\n         T: Clone,\n@@ -3139,6 +3140,7 @@ impl<T> [T] {\n     /// [`split_at_mut`]: slice::split_at_mut\n     #[doc(alias = \"memcpy\")]\n     #[stable(feature = \"copy_from_slice\", since = \"1.9.0\")]\n+    #[track_caller]\n     pub fn copy_from_slice(&mut self, src: &[T])\n     where\n         T: Copy,\n@@ -3259,6 +3261,7 @@ impl<T> [T] {\n     ///\n     /// [`split_at_mut`]: slice::split_at_mut\n     #[stable(feature = \"swap_with_slice\", since = \"1.27.0\")]\n+    #[track_caller]\n     pub fn swap_with_slice(&mut self, other: &mut [T]) {\n         assert!(self.len() == other.len(), \"destination and source slices have different lengths\");\n         // SAFETY: `self` is valid for `self.len()` elements by definition, and `src` was\n@@ -3581,6 +3584,7 @@ impl<T> CloneFromSpec<T> for [T]\n where\n     T: Clone,\n {\n+    #[track_caller]\n     default fn spec_clone_from(&mut self, src: &[T]) {\n         assert!(self.len() == src.len(), \"destination and source slices have different lengths\");\n         // NOTE: We need to explicitly slice them to the same length\n@@ -3598,6 +3602,7 @@ impl<T> CloneFromSpec<T> for [T]\n where\n     T: Copy,\n {\n+    #[track_caller]\n     fn spec_clone_from(&mut self, src: &[T]) {\n         self.copy_from_slice(src);\n     }"}]}