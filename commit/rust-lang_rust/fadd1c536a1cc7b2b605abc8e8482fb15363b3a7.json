{"sha": "fadd1c536a1cc7b2b605abc8e8482fb15363b3a7", "node_id": "C_kwDOAAsO6NoAKGZhZGQxYzUzNmExY2M3YjJiNjA1YWJjOGU4NDgyZmIxNTM2M2IzYTc", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-03-18T03:01:46Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-03-18T03:01:46Z"}, "message": "Auto merge of #88098 - Amanieu:oom_panic, r=nagisa\n\nImplement -Z oom=panic\n\nThis PR removes the `#[rustc_allocator_nounwind]` attribute on `alloc_error_handler` which allows it to unwind with a panic instead of always aborting. This is then used to implement `-Z oom=panic` as per RFC 2116 (tracking issue #43596).\n\nPerf and binary size tests show negligible impact.", "tree": {"sha": "d01a504b0a461eb810c05f98d832f531511d2820", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d01a504b0a461eb810c05f98d832f531511d2820"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fadd1c536a1cc7b2b605abc8e8482fb15363b3a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fadd1c536a1cc7b2b605abc8e8482fb15363b3a7", "html_url": "https://github.com/rust-lang/rust/commit/fadd1c536a1cc7b2b605abc8e8482fb15363b3a7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fadd1c536a1cc7b2b605abc8e8482fb15363b3a7/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1c389322d226db421892abb64e0730b60eb15712", "url": "https://api.github.com/repos/rust-lang/rust/commits/1c389322d226db421892abb64e0730b60eb15712", "html_url": "https://github.com/rust-lang/rust/commit/1c389322d226db421892abb64e0730b60eb15712"}, {"sha": "6fcfc3d8773ee0f318a3311bb02655e0ccafbc14", "url": "https://api.github.com/repos/rust-lang/rust/commits/6fcfc3d8773ee0f318a3311bb02655e0ccafbc14", "html_url": "https://github.com/rust-lang/rust/commit/6fcfc3d8773ee0f318a3311bb02655e0ccafbc14"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "c761e5aabd1071d3c4f22f58d63155e6b0e8a3c2", "filename": "src/allocator.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/fadd1c536a1cc7b2b605abc8e8482fb15363b3a7/src%2Fallocator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fadd1c536a1cc7b2b605abc8e8482fb15363b3a7/src%2Fallocator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fallocator.rs?ref=fadd1c536a1cc7b2b605abc8e8482fb15363b3a7", "patch": "@@ -1,7 +1,8 @@\n-use gccjit::{FunctionType, ToRValue};\n+use gccjit::{FunctionType, GlobalKind, ToRValue};\n use rustc_ast::expand::allocator::{AllocatorKind, AllocatorTy, ALLOCATOR_METHODS};\n use rustc_middle::bug;\n use rustc_middle::ty::TyCtxt;\n+use rustc_session::config::OomStrategy;\n use rustc_span::symbol::sym;\n \n use crate::GccContext;\n@@ -113,4 +114,10 @@ pub(crate) unsafe fn codegen(tcx: TyCtxt<'_>, mods: &mut GccContext, _module_nam\n     let _ret = context.new_call(None, callee, &args);\n     //llvm::LLVMSetTailCall(ret, True);\n     block.end_with_void_return(None);\n+\n+    let name = OomStrategy::SYMBOL.to_string();\n+    let global = context.new_global(None, GlobalKind::Exported, i8, name);\n+    let value = tcx.sess.opts.debugging_opts.oom.should_panic();\n+    let value = context.new_rvalue_from_int(i8, value as i32);\n+    global.global_set_initializer_rvalue(value);\n }"}]}