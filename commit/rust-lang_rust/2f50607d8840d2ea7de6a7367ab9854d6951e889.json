{"sha": "2f50607d8840d2ea7de6a7367ab9854d6951e889", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJmNTA2MDdkODg0MGQyZWE3ZGU2YTczNjdhYjk4NTRkNjk1MWU4ODk=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-10-05T22:48:28Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-10-06T02:06:25Z"}, "message": "Reword memory-ownership section.", "tree": {"sha": "c7315b2e62420d2209b54a4b8b1f8057f6f05b76", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c7315b2e62420d2209b54a4b8b1f8057f6f05b76"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2f50607d8840d2ea7de6a7367ab9854d6951e889", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2f50607d8840d2ea7de6a7367ab9854d6951e889", "html_url": "https://github.com/rust-lang/rust/commit/2f50607d8840d2ea7de6a7367ab9854d6951e889", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2f50607d8840d2ea7de6a7367ab9854d6951e889/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "df98cb8e884e7546b83ee229975759deb948e05a", "url": "https://api.github.com/repos/rust-lang/rust/commits/df98cb8e884e7546b83ee229975759deb948e05a", "html_url": "https://github.com/rust-lang/rust/commit/df98cb8e884e7546b83ee229975759deb948e05a"}], "stats": {"total": 19, "additions": 8, "deletions": 11}, "files": [{"sha": "b9eb633743fcb3f5cd4dc1b25c72bacae275fc1b", "filename": "doc/rust.md", "status": "modified", "additions": 8, "deletions": 11, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/2f50607d8840d2ea7de6a7367ab9854d6951e889/doc%2Frust.md", "raw_url": "https://github.com/rust-lang/rust/raw/2f50607d8840d2ea7de6a7367ab9854d6951e889/doc%2Frust.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Frust.md?ref=2f50607d8840d2ea7de6a7367ab9854d6951e889", "patch": "@@ -2733,20 +2733,17 @@ the box values pointing to it. Since box values may themselves be passed in\n and out of frames, or stored in the heap, heap allocations may outlive the\n frame they are allocated within.\n \n-\n ### Memory ownership\n \n A task owns all memory it can *safely* reach through local variables,\n-shared or unique boxes, and/or references. Sharing memory between tasks can\n-only be accomplished using *unsafe* constructs, such as raw pointer\n-operations or calling C code.\n-\n-When a task sends a value that has the `send` trait over a channel, it\n-loses ownership of the value sent and can no longer refer to it. This is\n-statically guaranteed by the combined use of \"move semantics\" and the\n-compiler-checked _meaning_ of the `send` trait: it is only instantiated\n-for (transitively) unique kinds of data constructor and pointers, never shared\n-pointers.\n+as well as managed, owning and borrowed pointers.\n+\n+When a task sends a value that has the `Send` trait to another task,\n+it loses ownership of the value sent and can no longer refer to it.\n+This is statically guaranteed by the combined use of \"move semantics\",\n+and the compiler-checked _meaning_ of the `Send` trait:\n+it is only instantiated for (transitively) sendable kinds of data constructor and pointers,\n+never including managed or borrowed pointers.\n \n When a stack frame is exited, its local allocations are all released, and its\n references to boxes (both shared and owned) are dropped."}]}