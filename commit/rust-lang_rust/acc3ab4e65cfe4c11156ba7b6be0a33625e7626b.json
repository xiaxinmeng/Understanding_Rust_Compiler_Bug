{"sha": "acc3ab4e65cfe4c11156ba7b6be0a33625e7626b", "node_id": "C_kwDOAAsO6NoAKGFjYzNhYjRlNjVjZmU0YzExMTU2YmE3YjZiZTBhMzM2MjVlNzYyNmI", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2022-06-06T11:45:02Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2022-06-06T11:49:23Z"}, "message": "Make all {Mutex, Condvar, RwLock}::new #[inline].", "tree": {"sha": "d55cec960939558db3ffc42cbde223bd74af38cb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d55cec960939558db3ffc42cbde223bd74af38cb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/acc3ab4e65cfe4c11156ba7b6be0a33625e7626b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/acc3ab4e65cfe4c11156ba7b6be0a33625e7626b", "html_url": "https://github.com/rust-lang/rust/commit/acc3ab4e65cfe4c11156ba7b6be0a33625e7626b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/acc3ab4e65cfe4c11156ba7b6be0a33625e7626b/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e70c60d34b9783a2fd3171d88d248c2e0ec8ecdd", "url": "https://api.github.com/repos/rust-lang/rust/commits/e70c60d34b9783a2fd3171d88d248c2e0ec8ecdd", "html_url": "https://github.com/rust-lang/rust/commit/e70c60d34b9783a2fd3171d88d248c2e0ec8ecdd"}], "stats": {"total": 25, "additions": 21, "deletions": 4}, "files": [{"sha": "a1d7b6ff06174c6cd83c0f75c2a975a091c5b8ac", "filename": "library/std/src/sync/condvar.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/acc3ab4e65cfe4c11156ba7b6be0a33625e7626b/library%2Fstd%2Fsrc%2Fsync%2Fcondvar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/acc3ab4e65cfe4c11156ba7b6be0a33625e7626b/library%2Fstd%2Fsrc%2Fsync%2Fcondvar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsync%2Fcondvar.rs?ref=acc3ab4e65cfe4c11156ba7b6be0a33625e7626b", "patch": "@@ -123,7 +123,8 @@ impl Condvar {\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[must_use]\n-    pub fn new() -> Condvar {\n+    #[inline]\n+    pub const fn new() -> Condvar {\n         Condvar { inner: sys::Condvar::new() }\n     }\n "}, {"sha": "d63f81e68c815ec875aae87a40cdd6b6e7635c7d", "filename": "library/std/src/sync/mutex.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/acc3ab4e65cfe4c11156ba7b6be0a33625e7626b/library%2Fstd%2Fsrc%2Fsync%2Fmutex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/acc3ab4e65cfe4c11156ba7b6be0a33625e7626b/library%2Fstd%2Fsrc%2Fsync%2Fmutex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsync%2Fmutex.rs?ref=acc3ab4e65cfe4c11156ba7b6be0a33625e7626b", "patch": "@@ -214,7 +214,8 @@ impl<T> Mutex<T> {\n     /// let mutex = Mutex::new(0);\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    pub fn new(t: T) -> Mutex<T> {\n+    #[inline]\n+    pub const fn new(t: T) -> Mutex<T> {\n         Mutex {\n             inner: sys::MovableMutex::new(),\n             poison: poison::Flag::new(),"}, {"sha": "adef1552016f895f8d070ed052d2976dac509dde", "filename": "library/std/src/sync/poison.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/acc3ab4e65cfe4c11156ba7b6be0a33625e7626b/library%2Fstd%2Fsrc%2Fsync%2Fpoison.rs", "raw_url": "https://github.com/rust-lang/rust/raw/acc3ab4e65cfe4c11156ba7b6be0a33625e7626b/library%2Fstd%2Fsrc%2Fsync%2Fpoison.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsync%2Fpoison.rs?ref=acc3ab4e65cfe4c11156ba7b6be0a33625e7626b", "patch": "@@ -19,6 +19,7 @@ pub struct Flag {\n // all cases.\n \n impl Flag {\n+    #[inline]\n     pub const fn new() -> Flag {\n         Flag { failed: AtomicBool::new(false) }\n     }"}, {"sha": "ce62c022ae08b6b79374c2ba01583a5c67ca7aa4", "filename": "library/std/src/sync/rwlock.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/acc3ab4e65cfe4c11156ba7b6be0a33625e7626b/library%2Fstd%2Fsrc%2Fsync%2Frwlock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/acc3ab4e65cfe4c11156ba7b6be0a33625e7626b/library%2Fstd%2Fsrc%2Fsync%2Frwlock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsync%2Frwlock.rs?ref=acc3ab4e65cfe4c11156ba7b6be0a33625e7626b", "patch": "@@ -146,7 +146,8 @@ impl<T> RwLock<T> {\n     /// let lock = RwLock::new(5);\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    pub fn new(t: T) -> RwLock<T> {\n+    #[inline]\n+    pub const fn new(t: T) -> RwLock<T> {\n         RwLock {\n             inner: sys::MovableRwLock::new(),\n             poison: poison::Flag::new(),"}, {"sha": "715e94c3b3d6a0928ba9497be25629c5d702a9a1", "filename": "library/std/src/sys/itron/mutex.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/acc3ab4e65cfe4c11156ba7b6be0a33625e7626b/library%2Fstd%2Fsrc%2Fsys%2Fitron%2Fmutex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/acc3ab4e65cfe4c11156ba7b6be0a33625e7626b/library%2Fstd%2Fsrc%2Fsys%2Fitron%2Fmutex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fitron%2Fmutex.rs?ref=acc3ab4e65cfe4c11156ba7b6be0a33625e7626b", "patch": "@@ -26,6 +26,7 @@ fn new_mtx() -> Result<abi::ID, ItronError> {\n }\n \n impl Mutex {\n+    #[inline]\n     pub const fn new() -> Mutex {\n         Mutex { mtx: SpinIdOnceCell::new() }\n     }"}, {"sha": "0a770cf03f2f5aa17afa9b12b761e26b45905623", "filename": "library/std/src/sys/solid/rwlock.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/acc3ab4e65cfe4c11156ba7b6be0a33625e7626b/library%2Fstd%2Fsrc%2Fsys%2Fsolid%2Frwlock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/acc3ab4e65cfe4c11156ba7b6be0a33625e7626b/library%2Fstd%2Fsrc%2Fsys%2Fsolid%2Frwlock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fsolid%2Frwlock.rs?ref=acc3ab4e65cfe4c11156ba7b6be0a33625e7626b", "patch": "@@ -23,6 +23,7 @@ fn new_rwl() -> Result<abi::ID, ItronError> {\n }\n \n impl RwLock {\n+    #[inline]\n     pub const fn new() -> RwLock {\n         RwLock { rwl: SpinIdOnceCell::new() }\n     }"}, {"sha": "e703fd0d269933fb91dd05db567318858932c71c", "filename": "library/std/src/sys/unsupported/locks/condvar.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/acc3ab4e65cfe4c11156ba7b6be0a33625e7626b/library%2Fstd%2Fsrc%2Fsys%2Funsupported%2Flocks%2Fcondvar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/acc3ab4e65cfe4c11156ba7b6be0a33625e7626b/library%2Fstd%2Fsrc%2Fsys%2Funsupported%2Flocks%2Fcondvar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funsupported%2Flocks%2Fcondvar.rs?ref=acc3ab4e65cfe4c11156ba7b6be0a33625e7626b", "patch": "@@ -6,6 +6,7 @@ pub struct Condvar {}\n pub type MovableCondvar = Condvar;\n \n impl Condvar {\n+    #[inline]\n     pub const fn new() -> Condvar {\n         Condvar {}\n     }"}, {"sha": "d7cb12e0cf9a49ad0240620c32146a1b8ddb217b", "filename": "library/std/src/sys/unsupported/locks/mutex.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/acc3ab4e65cfe4c11156ba7b6be0a33625e7626b/library%2Fstd%2Fsrc%2Fsys%2Funsupported%2Flocks%2Fmutex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/acc3ab4e65cfe4c11156ba7b6be0a33625e7626b/library%2Fstd%2Fsrc%2Fsys%2Funsupported%2Flocks%2Fmutex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funsupported%2Flocks%2Fmutex.rs?ref=acc3ab4e65cfe4c11156ba7b6be0a33625e7626b", "patch": "@@ -11,6 +11,7 @@ unsafe impl Send for Mutex {}\n unsafe impl Sync for Mutex {} // no threads on this platform\n \n impl Mutex {\n+    #[inline]\n     pub const fn new() -> Mutex {\n         Mutex { locked: Cell::new(false) }\n     }"}, {"sha": "aca5fb7152c990c214e13495d4e958d26de62919", "filename": "library/std/src/sys/unsupported/locks/rwlock.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/acc3ab4e65cfe4c11156ba7b6be0a33625e7626b/library%2Fstd%2Fsrc%2Fsys%2Funsupported%2Flocks%2Frwlock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/acc3ab4e65cfe4c11156ba7b6be0a33625e7626b/library%2Fstd%2Fsrc%2Fsys%2Funsupported%2Flocks%2Frwlock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funsupported%2Flocks%2Frwlock.rs?ref=acc3ab4e65cfe4c11156ba7b6be0a33625e7626b", "patch": "@@ -11,6 +11,7 @@ unsafe impl Send for RwLock {}\n unsafe impl Sync for RwLock {} // no threads on this platform\n \n impl RwLock {\n+    #[inline]\n     pub const fn new() -> RwLock {\n         RwLock { mode: Cell::new(0) }\n     }"}, {"sha": "be9a2abbe35d9a525a598487cca17f788e2f9062", "filename": "library/std/src/sys/windows/locks/condvar.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/acc3ab4e65cfe4c11156ba7b6be0a33625e7626b/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Flocks%2Fcondvar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/acc3ab4e65cfe4c11156ba7b6be0a33625e7626b/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Flocks%2Fcondvar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Flocks%2Fcondvar.rs?ref=acc3ab4e65cfe4c11156ba7b6be0a33625e7626b", "patch": "@@ -14,6 +14,7 @@ unsafe impl Send for Condvar {}\n unsafe impl Sync for Condvar {}\n \n impl Condvar {\n+    #[inline]\n     pub const fn new() -> Condvar {\n         Condvar { inner: UnsafeCell::new(c::CONDITION_VARIABLE_INIT) }\n     }"}, {"sha": "f91e8f9f59a140dbe58ff8f14581aff6112e04a7", "filename": "library/std/src/sys/windows/locks/mutex.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/acc3ab4e65cfe4c11156ba7b6be0a33625e7626b/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Flocks%2Fmutex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/acc3ab4e65cfe4c11156ba7b6be0a33625e7626b/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Flocks%2Fmutex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Flocks%2Fmutex.rs?ref=acc3ab4e65cfe4c11156ba7b6be0a33625e7626b", "patch": "@@ -33,6 +33,7 @@ pub unsafe fn raw(m: &Mutex) -> c::PSRWLOCK {\n }\n \n impl Mutex {\n+    #[inline]\n     pub const fn new() -> Mutex {\n         Mutex { srwlock: UnsafeCell::new(c::SRWLOCK_INIT) }\n     }"}, {"sha": "fa5ffe5749f259e9e6441c1926e53e888c2fbde9", "filename": "library/std/src/sys/windows/locks/rwlock.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/acc3ab4e65cfe4c11156ba7b6be0a33625e7626b/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Flocks%2Frwlock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/acc3ab4e65cfe4c11156ba7b6be0a33625e7626b/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Flocks%2Frwlock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Flocks%2Frwlock.rs?ref=acc3ab4e65cfe4c11156ba7b6be0a33625e7626b", "patch": "@@ -11,6 +11,7 @@ unsafe impl Send for RwLock {}\n unsafe impl Sync for RwLock {}\n \n impl RwLock {\n+    #[inline]\n     pub const fn new() -> RwLock {\n         RwLock { inner: UnsafeCell::new(c::SRWLOCK_INIT) }\n     }"}, {"sha": "f3ac1061b8935045ab1b01ca920dd324c4e06999", "filename": "library/std/src/sys_common/condvar.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/acc3ab4e65cfe4c11156ba7b6be0a33625e7626b/library%2Fstd%2Fsrc%2Fsys_common%2Fcondvar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/acc3ab4e65cfe4c11156ba7b6be0a33625e7626b/library%2Fstd%2Fsrc%2Fsys_common%2Fcondvar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys_common%2Fcondvar.rs?ref=acc3ab4e65cfe4c11156ba7b6be0a33625e7626b", "patch": "@@ -14,7 +14,8 @@ pub struct Condvar {\n \n impl Condvar {\n     /// Creates a new condition variable for use.\n-    pub fn new() -> Self {\n+    #[inline]\n+    pub const fn new() -> Self {\n         Self { inner: imp::MovableCondvar::new(), check: CondvarCheck::new() }\n     }\n "}, {"sha": "daba9c3f2b69c101950b77f04b97fe7c68dfdfaa", "filename": "library/std/src/sys_common/mutex.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/acc3ab4e65cfe4c11156ba7b6be0a33625e7626b/library%2Fstd%2Fsrc%2Fsys_common%2Fmutex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/acc3ab4e65cfe4c11156ba7b6be0a33625e7626b/library%2Fstd%2Fsrc%2Fsys_common%2Fmutex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys_common%2Fmutex.rs?ref=acc3ab4e65cfe4c11156ba7b6be0a33625e7626b", "patch": "@@ -15,6 +15,7 @@ unsafe impl Sync for StaticMutex {}\n \n impl StaticMutex {\n     /// Creates a new mutex for use.\n+    #[inline]\n     pub const fn new() -> Self {\n         Self(imp::Mutex::new())\n     }\n@@ -60,6 +61,7 @@ unsafe impl Sync for MovableMutex {}\n \n impl MovableMutex {\n     /// Creates a new mutex.\n+    #[inline]\n     pub fn new() -> Self {\n         Self(imp::MovableMutex::new())\n     }"}, {"sha": "b455074709288111628516f5073bfae4edbc1a5d", "filename": "library/std/src/sys_common/rwlock.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/acc3ab4e65cfe4c11156ba7b6be0a33625e7626b/library%2Fstd%2Fsrc%2Fsys_common%2Frwlock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/acc3ab4e65cfe4c11156ba7b6be0a33625e7626b/library%2Fstd%2Fsrc%2Fsys_common%2Frwlock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys_common%2Frwlock.rs?ref=acc3ab4e65cfe4c11156ba7b6be0a33625e7626b", "patch": "@@ -10,6 +10,7 @@ pub struct StaticRwLock(imp::RwLock);\n \n impl StaticRwLock {\n     /// Creates a new rwlock for use.\n+    #[inline]\n     pub const fn new() -> Self {\n         Self(imp::RwLock::new())\n     }\n@@ -73,6 +74,7 @@ pub struct MovableRwLock(imp::MovableRwLock);\n \n impl MovableRwLock {\n     /// Creates a new reader-writer lock for use.\n+    #[inline]\n     pub fn new() -> Self {\n         Self(imp::MovableRwLock::new())\n     }"}]}