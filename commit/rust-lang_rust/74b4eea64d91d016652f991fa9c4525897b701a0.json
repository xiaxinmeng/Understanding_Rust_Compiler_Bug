{"sha": "74b4eea64d91d016652f991fa9c4525897b701a0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc0YjRlZWE2NGQ5MWQwMTY2NTJmOTkxZmE5YzQ1MjU4OTdiNzAxYTA=", "commit": {"author": {"name": "Jubilee Young", "email": "workingjubilee@gmail.com", "date": "2020-08-20T12:32:14Z"}, "committer": {"name": "Jubilee Young", "email": "workingjubilee@gmail.com", "date": "2020-09-05T04:51:28Z"}, "message": "Remove reference to byteorder limits", "tree": {"sha": "51ed1b12a76042dc5020cf1b959ba08a03f8dcc7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/51ed1b12a76042dc5020cf1b959ba08a03f8dcc7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/74b4eea64d91d016652f991fa9c4525897b701a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/74b4eea64d91d016652f991fa9c4525897b701a0", "html_url": "https://github.com/rust-lang/rust/commit/74b4eea64d91d016652f991fa9c4525897b701a0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/74b4eea64d91d016652f991fa9c4525897b701a0/comments", "author": {"login": "workingjubilee", "id": 46493976, "node_id": "MDQ6VXNlcjQ2NDkzOTc2", "avatar_url": "https://avatars.githubusercontent.com/u/46493976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/workingjubilee", "html_url": "https://github.com/workingjubilee", "followers_url": "https://api.github.com/users/workingjubilee/followers", "following_url": "https://api.github.com/users/workingjubilee/following{/other_user}", "gists_url": "https://api.github.com/users/workingjubilee/gists{/gist_id}", "starred_url": "https://api.github.com/users/workingjubilee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/workingjubilee/subscriptions", "organizations_url": "https://api.github.com/users/workingjubilee/orgs", "repos_url": "https://api.github.com/users/workingjubilee/repos", "events_url": "https://api.github.com/users/workingjubilee/events{/privacy}", "received_events_url": "https://api.github.com/users/workingjubilee/received_events", "type": "User", "site_admin": false}, "committer": {"login": "workingjubilee", "id": 46493976, "node_id": "MDQ6VXNlcjQ2NDkzOTc2", "avatar_url": "https://avatars.githubusercontent.com/u/46493976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/workingjubilee", "html_url": "https://github.com/workingjubilee", "followers_url": "https://api.github.com/users/workingjubilee/followers", "following_url": "https://api.github.com/users/workingjubilee/following{/other_user}", "gists_url": "https://api.github.com/users/workingjubilee/gists{/gist_id}", "starred_url": "https://api.github.com/users/workingjubilee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/workingjubilee/subscriptions", "organizations_url": "https://api.github.com/users/workingjubilee/orgs", "repos_url": "https://api.github.com/users/workingjubilee/repos", "events_url": "https://api.github.com/users/workingjubilee/events{/privacy}", "received_events_url": "https://api.github.com/users/workingjubilee/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b97d4131fe2cb3f32c13a0f5b0e3eb6f97c4f75a", "url": "https://api.github.com/repos/rust-lang/rust/commits/b97d4131fe2cb3f32c13a0f5b0e3eb6f97c4f75a", "html_url": "https://github.com/rust-lang/rust/commit/b97d4131fe2cb3f32c13a0f5b0e3eb6f97c4f75a"}], "stats": {"total": 12, "additions": 4, "deletions": 8}, "files": [{"sha": "ee1ea816e019253bf7b945cf647135bef533cfbb", "filename": "compiler/rustc_middle/src/mir/interpret/allocation.rs", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/74b4eea64d91d016652f991fa9c4525897b701a0/compiler%2Frustc_middle%2Fsrc%2Fmir%2Finterpret%2Fallocation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74b4eea64d91d016652f991fa9c4525897b701a0/compiler%2Frustc_middle%2Fsrc%2Fmir%2Finterpret%2Fallocation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Finterpret%2Fallocation.rs?ref=74b4eea64d91d016652f991fa9c4525897b701a0", "patch": "@@ -345,10 +345,8 @@ impl<'tcx, Tag: Copy, Extra: AllocationExtra<Tag>> Allocation<Tag, Extra> {\n \n     /// Reads a *non-ZST* scalar.\n     ///\n-    /// ZSTs can't be read for two reasons:\n-    /// * byte-order cannot work with zero-element buffers;\n-    /// * in order to obtain a `Pointer`, we need to check for ZSTness anyway due to integer\n-    ///   pointers being valid for ZSTs.\n+    /// ZSTs can't be read because in order to obtain a `Pointer`, we need to check\n+    /// for ZSTness anyway due to integer pointers being valid for ZSTs.\n     ///\n     /// It is the caller's responsibility to check bounds and alignment beforehand.\n     /// Most likely, you want to call `InterpCx::read_scalar` instead of this method.\n@@ -397,10 +395,8 @@ impl<'tcx, Tag: Copy, Extra: AllocationExtra<Tag>> Allocation<Tag, Extra> {\n \n     /// Writes a *non-ZST* scalar.\n     ///\n-    /// ZSTs can't be read for two reasons:\n-    /// * byte-order cannot work with zero-element buffers;\n-    /// * in order to obtain a `Pointer`, we need to check for ZSTness anyway due to integer\n-    ///   pointers being valid for ZSTs.\n+    /// ZSTs can't be read because in order to obtain a `Pointer`, we need to check\n+    /// for ZSTness anyway due to integer pointers being valid for ZSTs.\n     ///\n     /// It is the caller's responsibility to check bounds and alignment beforehand.\n     /// Most likely, you want to call `InterpCx::write_scalar` instead of this method."}]}