{"sha": "c4b6224ea46f57bb59df8d321d8f40e7f2900423", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM0YjYyMjRlYTQ2ZjU3YmI1OWRmOGQzMjFkOGY0MGU3ZjI5MDA0MjM=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-05-29T22:02:30Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-05-29T22:02:30Z"}, "message": "more type sanity checks in Miri", "tree": {"sha": "27d7f3f11f69b9da77aec5ab12111b1f6a5e35f8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/27d7f3f11f69b9da77aec5ab12111b1f6a5e35f8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c4b6224ea46f57bb59df8d321d8f40e7f2900423", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c4b6224ea46f57bb59df8d321d8f40e7f2900423", "html_url": "https://github.com/rust-lang/rust/commit/c4b6224ea46f57bb59df8d321d8f40e7f2900423", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c4b6224ea46f57bb59df8d321d8f40e7f2900423/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ad7179d2a409faaf45465862f44efe7f989cd71e", "url": "https://api.github.com/repos/rust-lang/rust/commits/ad7179d2a409faaf45465862f44efe7f989cd71e", "html_url": "https://github.com/rust-lang/rust/commit/ad7179d2a409faaf45465862f44efe7f989cd71e"}], "stats": {"total": 20, "additions": 18, "deletions": 2}, "files": [{"sha": "3cfc331ef8c4ec3a354ef039842fc95f39bf77ab", "filename": "src/librustc_mir/interpret/operand.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/c4b6224ea46f57bb59df8d321d8f40e7f2900423/src%2Flibrustc_mir%2Finterpret%2Foperand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c4b6224ea46f57bb59df8d321d8f40e7f2900423/src%2Flibrustc_mir%2Finterpret%2Foperand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Foperand.rs?ref=c4b6224ea46f57bb59df8d321d8f40e7f2900423", "patch": "@@ -15,8 +15,8 @@ use rustc_target::abi::{Abi, DiscriminantKind, HasDataLayout, LayoutOf, Size};\n use rustc_target::abi::{VariantIdx, Variants};\n \n use super::{\n-    from_known_layout, ConstValue, GlobalId, InterpCx, InterpResult, MPlaceTy, Machine, MemPlace,\n-    Place, PlaceTy, Pointer, Scalar, ScalarMaybeUninit,\n+    from_known_layout, mir_assign_valid_types, ConstValue, GlobalId, InterpCx, InterpResult,\n+    MPlaceTy, Machine, MemPlace, Place, PlaceTy, Pointer, Scalar, ScalarMaybeUninit,\n };\n \n /// An `Immediate` represents a single immediate self-contained Rust value.\n@@ -469,6 +469,14 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n             .try_fold(base_op, |op, elem| self.operand_projection(op, elem))?;\n \n         trace!(\"eval_place_to_op: got {:?}\", *op);\n+        // Sanity-check the type we ended up with.\n+        debug_assert!(mir_assign_valid_types(\n+            *self.tcx,\n+            self.layout_of(self.subst_from_current_frame_and_normalize_erasing_regions(\n+                place.ty(&self.frame().body.local_decls, *self.tcx).ty\n+            ))?,\n+            op.layout,\n+        ));\n         Ok(op)\n     }\n "}, {"sha": "f5e7c1a4823cf031ba4c5ab0617cb46bd2d02f55", "filename": "src/librustc_mir/interpret/place.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c4b6224ea46f57bb59df8d321d8f40e7f2900423/src%2Flibrustc_mir%2Finterpret%2Fplace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c4b6224ea46f57bb59df8d321d8f40e7f2900423/src%2Flibrustc_mir%2Finterpret%2Fplace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fplace.rs?ref=c4b6224ea46f57bb59df8d321d8f40e7f2900423", "patch": "@@ -638,6 +638,14 @@ where\n         }\n \n         self.dump_place(place_ty.place);\n+        // Sanity-check the type we ended up with.\n+        debug_assert!(mir_assign_valid_types(\n+            *self.tcx,\n+            self.layout_of(self.subst_from_current_frame_and_normalize_erasing_regions(\n+                place.ty(&self.frame().body.local_decls, *self.tcx).ty\n+            ))?,\n+            place_ty.layout,\n+        ));\n         Ok(place_ty)\n     }\n "}]}