{"sha": "bb68ec6cfc76a6ec69d21c0f64dbc4aa99158958", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJiNjhlYzZjZmM3NmE2ZWM2OWQyMWMwZjY0ZGJjNGFhOTkxNTg5NTg=", "commit": {"author": {"name": "Eduardo Broto", "email": "ebroto@tutanota.com", "date": "2020-12-17T14:24:44Z"}, "committer": {"name": "Eduardo Broto", "email": "ebroto@tutanota.com", "date": "2020-12-17T14:28:05Z"}, "message": "Apply suggestion from PR review", "tree": {"sha": "9bad48213b806529455a9a4ea51a377591bcd0fd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9bad48213b806529455a9a4ea51a377591bcd0fd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bb68ec6cfc76a6ec69d21c0f64dbc4aa99158958", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bb68ec6cfc76a6ec69d21c0f64dbc4aa99158958", "html_url": "https://github.com/rust-lang/rust/commit/bb68ec6cfc76a6ec69d21c0f64dbc4aa99158958", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bb68ec6cfc76a6ec69d21c0f64dbc4aa99158958/comments", "author": {"login": "ebroto", "id": 816908, "node_id": "MDQ6VXNlcjgxNjkwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/816908?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebroto", "html_url": "https://github.com/ebroto", "followers_url": "https://api.github.com/users/ebroto/followers", "following_url": "https://api.github.com/users/ebroto/following{/other_user}", "gists_url": "https://api.github.com/users/ebroto/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebroto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebroto/subscriptions", "organizations_url": "https://api.github.com/users/ebroto/orgs", "repos_url": "https://api.github.com/users/ebroto/repos", "events_url": "https://api.github.com/users/ebroto/events{/privacy}", "received_events_url": "https://api.github.com/users/ebroto/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ebroto", "id": 816908, "node_id": "MDQ6VXNlcjgxNjkwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/816908?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebroto", "html_url": "https://github.com/ebroto", "followers_url": "https://api.github.com/users/ebroto/followers", "following_url": "https://api.github.com/users/ebroto/following{/other_user}", "gists_url": "https://api.github.com/users/ebroto/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebroto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebroto/subscriptions", "organizations_url": "https://api.github.com/users/ebroto/orgs", "repos_url": "https://api.github.com/users/ebroto/repos", "events_url": "https://api.github.com/users/ebroto/events{/privacy}", "received_events_url": "https://api.github.com/users/ebroto/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "41b5ebebfdc583d9e3702dd61c8d897999d1e7f5", "url": "https://api.github.com/repos/rust-lang/rust/commits/41b5ebebfdc583d9e3702dd61c8d897999d1e7f5", "html_url": "https://github.com/rust-lang/rust/commit/41b5ebebfdc583d9e3702dd61c8d897999d1e7f5"}], "stats": {"total": 21, "additions": 12, "deletions": 9}, "files": [{"sha": "aba655327959022632877be9d012706876adfc2b", "filename": "clippy_lints/src/doc.rs", "status": "modified", "additions": 12, "deletions": 9, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/bb68ec6cfc76a6ec69d21c0f64dbc4aa99158958/clippy_lints%2Fsrc%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb68ec6cfc76a6ec69d21c0f64dbc4aa99158958/clippy_lints%2Fsrc%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdoc.rs?ref=bb68ec6cfc76a6ec69d21c0f64dbc4aa99158958", "patch": "@@ -407,15 +407,18 @@ fn check_doc<'a, Events: Iterator<Item = (pulldown_cmark::Event<'a>, Range<usize\n             Start(CodeBlock(ref kind)) => {\n                 in_code = true;\n                 if let CodeBlockKind::Fenced(lang) = kind {\n-                    let infos = lang.split(',').collect::<Vec<_>>();\n-                    is_rust = !infos.iter().any(|&i| i == \"ignore\")\n-                        && infos\n-                            .iter()\n-                            .any(|i| i.is_empty() || i.starts_with(\"edition\") || RUST_CODE.contains(&i));\n-                    edition = infos\n-                        .iter()\n-                        .find_map(|i| i.starts_with(\"edition\").then(|| i[7..].parse::<Edition>().ok()))\n-                        .flatten();\n+                    for item in lang.split(',') {\n+                        if item == \"ignore\" {\n+                            is_rust = false;\n+                            break;\n+                        }\n+                        if let Some(stripped) = item.strip_prefix(\"edition\") {\n+                            is_rust = true;\n+                            edition = stripped.parse::<Edition>().ok();\n+                        } else if item.is_empty() || RUST_CODE.contains(&item) {\n+                            is_rust = true;\n+                        }\n+                    }\n                 }\n             },\n             End(CodeBlock(_)) => {"}]}