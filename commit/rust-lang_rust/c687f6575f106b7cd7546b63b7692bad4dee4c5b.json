{"sha": "c687f6575f106b7cd7546b63b7692bad4dee4c5b", "node_id": "C_kwDOAAsO6NoAKGM2ODdmNjU3NWYxMDZiN2NkNzU0NmI2M2I3NjkyYmFkNGRlZTRjNWI", "commit": {"author": {"name": "Caio", "email": "c410.f3r@gmail.com", "date": "2022-03-26T18:39:21Z"}, "committer": {"name": "Caio", "email": "c410.f3r@gmail.com", "date": "2022-03-26T18:39:21Z"}, "message": "Do not fire `panic` in a constant environment", "tree": {"sha": "a9af9248a8715a2fc0e7da0b31a3a3ac1da04c8e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a9af9248a8715a2fc0e7da0b31a3a3ac1da04c8e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c687f6575f106b7cd7546b63b7692bad4dee4c5b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c687f6575f106b7cd7546b63b7692bad4dee4c5b", "html_url": "https://github.com/rust-lang/rust/commit/c687f6575f106b7cd7546b63b7692bad4dee4c5b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c687f6575f106b7cd7546b63b7692bad4dee4c5b/comments", "author": {"login": "c410-f3r", "id": 17877264, "node_id": "MDQ6VXNlcjE3ODc3MjY0", "avatar_url": "https://avatars.githubusercontent.com/u/17877264?v=4", "gravatar_id": "", "url": "https://api.github.com/users/c410-f3r", "html_url": "https://github.com/c410-f3r", "followers_url": "https://api.github.com/users/c410-f3r/followers", "following_url": "https://api.github.com/users/c410-f3r/following{/other_user}", "gists_url": "https://api.github.com/users/c410-f3r/gists{/gist_id}", "starred_url": "https://api.github.com/users/c410-f3r/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/c410-f3r/subscriptions", "organizations_url": "https://api.github.com/users/c410-f3r/orgs", "repos_url": "https://api.github.com/users/c410-f3r/repos", "events_url": "https://api.github.com/users/c410-f3r/events{/privacy}", "received_events_url": "https://api.github.com/users/c410-f3r/received_events", "type": "User", "site_admin": false}, "committer": {"login": "c410-f3r", "id": 17877264, "node_id": "MDQ6VXNlcjE3ODc3MjY0", "avatar_url": "https://avatars.githubusercontent.com/u/17877264?v=4", "gravatar_id": "", "url": "https://api.github.com/users/c410-f3r", "html_url": "https://github.com/c410-f3r", "followers_url": "https://api.github.com/users/c410-f3r/followers", "following_url": "https://api.github.com/users/c410-f3r/following{/other_user}", "gists_url": "https://api.github.com/users/c410-f3r/gists{/gist_id}", "starred_url": "https://api.github.com/users/c410-f3r/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/c410-f3r/subscriptions", "organizations_url": "https://api.github.com/users/c410-f3r/orgs", "repos_url": "https://api.github.com/users/c410-f3r/repos", "events_url": "https://api.github.com/users/c410-f3r/events{/privacy}", "received_events_url": "https://api.github.com/users/c410-f3r/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8ebe766695e66a97775e4992d3d08f74ce2a7270", "url": "https://api.github.com/repos/rust-lang/rust/commits/8ebe766695e66a97775e4992d3d08f74ce2a7270", "html_url": "https://github.com/rust-lang/rust/commit/8ebe766695e66a97775e4992d3d08f74ce2a7270"}], "stats": {"total": 53, "additions": 36, "deletions": 17}, "files": [{"sha": "2f3007658ea6296f8e2b7b1c541f0224cc10fca0", "filename": "clippy_lints/src/panic_unimplemented.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c687f6575f106b7cd7546b63b7692bad4dee4c5b/clippy_lints%2Fsrc%2Fpanic_unimplemented.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c687f6575f106b7cd7546b63b7692bad4dee4c5b/clippy_lints%2Fsrc%2Fpanic_unimplemented.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fpanic_unimplemented.rs?ref=c687f6575f106b7cd7546b63b7692bad4dee4c5b", "patch": "@@ -78,6 +78,10 @@ impl<'tcx> LateLintPass<'tcx> for PanicUnimplemented {\n     fn check_expr(&mut self, cx: &LateContext<'tcx>, expr: &'tcx Expr<'_>) {\n         let Some(macro_call) = root_macro_call_first_node(cx, expr) else { return };\n         if is_panic(cx, macro_call.def_id) {\n+            if cx.tcx.hir().is_inside_const_context(expr.hir_id) {\n+                return;\n+            }\n+\n             span_lint(\n                 cx,\n                 PANIC,"}, {"sha": "841fc289b4c06575c6b053a3405d1999fc394492", "filename": "tests/ui/panicking_macros.rs", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/c687f6575f106b7cd7546b63b7692bad4dee4c5b/tests%2Fui%2Fpanicking_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c687f6575f106b7cd7546b63b7692bad4dee4c5b/tests%2Fui%2Fpanicking_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fpanicking_macros.rs?ref=c687f6575f106b7cd7546b63b7692bad4dee4c5b", "patch": "@@ -1,8 +1,23 @@\n+#![allow(clippy::assertions_on_constants, clippy::eq_op,)]\n+#![feature(inline_const)]\n #![warn(clippy::unimplemented, clippy::unreachable, clippy::todo, clippy::panic)]\n-#![allow(clippy::assertions_on_constants, clippy::eq_op)]\n \n extern crate core;\n \n+const _: () = {\n+    if 1 == 0 {\n+        panic!(\"A balanced diet means a cupcake in each hand\");\n+    }\n+};\n+\n+fn inline_const() {\n+    let _ = const {\n+        if 1 == 0 {\n+            panic!(\"When nothing goes right, go left\")\n+        }\n+    };\n+}\n+\n fn panic() {\n     let a = 2;\n     panic!();"}, {"sha": "4ceb6d1440f61c58d718ae051124d8e7c12285c4", "filename": "tests/ui/panicking_macros.stderr", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/c687f6575f106b7cd7546b63b7692bad4dee4c5b/tests%2Fui%2Fpanicking_macros.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c687f6575f106b7cd7546b63b7692bad4dee4c5b/tests%2Fui%2Fpanicking_macros.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fpanicking_macros.stderr?ref=c687f6575f106b7cd7546b63b7692bad4dee4c5b", "patch": "@@ -1,103 +1,103 @@\n error: `panic` should not be present in production code\n-  --> $DIR/panicking_macros.rs:8:5\n+  --> $DIR/panicking_macros.rs:23:5\n    |\n LL |     panic!();\n    |     ^^^^^^^^\n    |\n    = note: `-D clippy::panic` implied by `-D warnings`\n \n error: `panic` should not be present in production code\n-  --> $DIR/panicking_macros.rs:9:5\n+  --> $DIR/panicking_macros.rs:24:5\n    |\n LL |     panic!(\"message\");\n    |     ^^^^^^^^^^^^^^^^^\n \n error: `panic` should not be present in production code\n-  --> $DIR/panicking_macros.rs:10:5\n+  --> $DIR/panicking_macros.rs:25:5\n    |\n LL |     panic!(\"{} {}\", \"panic with\", \"multiple arguments\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: `todo` should not be present in production code\n-  --> $DIR/panicking_macros.rs:16:5\n+  --> $DIR/panicking_macros.rs:31:5\n    |\n LL |     todo!();\n    |     ^^^^^^^\n    |\n    = note: `-D clippy::todo` implied by `-D warnings`\n \n error: `todo` should not be present in production code\n-  --> $DIR/panicking_macros.rs:17:5\n+  --> $DIR/panicking_macros.rs:32:5\n    |\n LL |     todo!(\"message\");\n    |     ^^^^^^^^^^^^^^^^\n \n error: `todo` should not be present in production code\n-  --> $DIR/panicking_macros.rs:18:5\n+  --> $DIR/panicking_macros.rs:33:5\n    |\n LL |     todo!(\"{} {}\", \"panic with\", \"multiple arguments\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: `unimplemented` should not be present in production code\n-  --> $DIR/panicking_macros.rs:24:5\n+  --> $DIR/panicking_macros.rs:39:5\n    |\n LL |     unimplemented!();\n    |     ^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::unimplemented` implied by `-D warnings`\n \n error: `unimplemented` should not be present in production code\n-  --> $DIR/panicking_macros.rs:25:5\n+  --> $DIR/panicking_macros.rs:40:5\n    |\n LL |     unimplemented!(\"message\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: `unimplemented` should not be present in production code\n-  --> $DIR/panicking_macros.rs:26:5\n+  --> $DIR/panicking_macros.rs:41:5\n    |\n LL |     unimplemented!(\"{} {}\", \"panic with\", \"multiple arguments\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: usage of the `unreachable!` macro\n-  --> $DIR/panicking_macros.rs:32:5\n+  --> $DIR/panicking_macros.rs:47:5\n    |\n LL |     unreachable!();\n    |     ^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::unreachable` implied by `-D warnings`\n \n error: usage of the `unreachable!` macro\n-  --> $DIR/panicking_macros.rs:33:5\n+  --> $DIR/panicking_macros.rs:48:5\n    |\n LL |     unreachable!(\"message\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^\n \n error: usage of the `unreachable!` macro\n-  --> $DIR/panicking_macros.rs:34:5\n+  --> $DIR/panicking_macros.rs:49:5\n    |\n LL |     unreachable!(\"{} {}\", \"panic with\", \"multiple arguments\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: `panic` should not be present in production code\n-  --> $DIR/panicking_macros.rs:40:5\n+  --> $DIR/panicking_macros.rs:55:5\n    |\n LL |     panic!();\n    |     ^^^^^^^^\n \n error: `todo` should not be present in production code\n-  --> $DIR/panicking_macros.rs:41:5\n+  --> $DIR/panicking_macros.rs:56:5\n    |\n LL |     todo!();\n    |     ^^^^^^^\n \n error: `unimplemented` should not be present in production code\n-  --> $DIR/panicking_macros.rs:42:5\n+  --> $DIR/panicking_macros.rs:57:5\n    |\n LL |     unimplemented!();\n    |     ^^^^^^^^^^^^^^^^\n \n error: usage of the `unreachable!` macro\n-  --> $DIR/panicking_macros.rs:43:5\n+  --> $DIR/panicking_macros.rs:58:5\n    |\n LL |     unreachable!();\n    |     ^^^^^^^^^^^^^^"}]}