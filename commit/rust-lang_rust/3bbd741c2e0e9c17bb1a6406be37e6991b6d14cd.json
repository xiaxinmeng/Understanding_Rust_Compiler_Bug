{"sha": "3bbd741c2e0e9c17bb1a6406be37e6991b6d14cd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNiYmQ3NDFjMmUwZTljMTdiYjFhNjQwNmJlMzdlNjk5MWI2ZDE0Y2Q=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-03-15T01:12:16Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-03-15T01:13:04Z"}, "message": "llvmext: Make the Object bindings actually work", "tree": {"sha": "ea5cfbdc40cc775070ee9d4180c25e84f37e7904", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ea5cfbdc40cc775070ee9d4180c25e84f37e7904"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3bbd741c2e0e9c17bb1a6406be37e6991b6d14cd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3bbd741c2e0e9c17bb1a6406be37e6991b6d14cd", "html_url": "https://github.com/rust-lang/rust/commit/3bbd741c2e0e9c17bb1a6406be37e6991b6d14cd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3bbd741c2e0e9c17bb1a6406be37e6991b6d14cd/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "316158df8e423f6c123cf2d3349e27c2794b147b", "url": "https://api.github.com/repos/rust-lang/rust/commits/316158df8e423f6c123cf2d3349e27c2794b147b", "html_url": "https://github.com/rust-lang/rust/commit/316158df8e423f6c123cf2d3349e27c2794b147b"}], "stats": {"total": 18, "additions": 12, "deletions": 6}, "files": [{"sha": "603e72b9036ae8e6f4ec327a883b459fab133767", "filename": "src/llvmext/Object.cpp", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/3bbd741c2e0e9c17bb1a6406be37e6991b6d14cd/src%2Fllvmext%2FObject.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/3bbd741c2e0e9c17bb1a6406be37e6991b6d14cd/src%2Fllvmext%2FObject.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fllvmext%2FObject.cpp?ref=3bbd741c2e0e9c17bb1a6406be37e6991b6d14cd", "patch": "@@ -18,9 +18,8 @@\n using namespace llvm;\n using namespace object;\n \n-LLVMObjectFileRef LLVMCreateObjectFile(const char *ObjectPath) {\n-  StringRef SR(ObjectPath);\n-  return wrap(ObjectFile::createObjectFile(SR));\n+LLVMObjectFileRef LLVMCreateObjectFile(LLVMMemoryBufferRef MemBuf) {\n+  return wrap(ObjectFile::createObjectFile(unwrap(MemBuf)));\n }\n \n void LLVMDisposeObjectFile(LLVMObjectFileRef ObjectFile) {\n@@ -36,9 +35,14 @@ void LLVMDisposeSectionIterator(LLVMSectionIteratorRef SI) {\n   delete unwrap(SI);\n }\n \n+bool LLVMIsSectionIteratorAtEnd(LLVMObjectFileRef ObjectFile,\n+                                LLVMSectionIteratorRef SI) {\n+  return *unwrap(SI) == unwrap(ObjectFile)->end_sections();\n+}\n+\n void LLVMMoveToNextSection(LLVMSectionIteratorRef SI) {\n-  ObjectFile::section_iterator UnwrappedSI = *unwrap(SI);\n-  ++UnwrappedSI;\n+  // We can't use unwrap() here because the argument to ++ must be an lvalue.\n+  ++*reinterpret_cast<ObjectFile::section_iterator*>(SI);\n }\n \n const char *LLVMGetSectionName(LLVMSectionIteratorRef SI) {"}, {"sha": "1103d7dd9691711859c0b9e106d28396eb3a8c53", "filename": "src/llvmext/include/llvm-c/Object.h", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3bbd741c2e0e9c17bb1a6406be37e6991b6d14cd/src%2Fllvmext%2Finclude%2Fllvm-c%2FObject.h", "raw_url": "https://github.com/rust-lang/rust/raw/3bbd741c2e0e9c17bb1a6406be37e6991b6d14cd/src%2Fllvmext%2Finclude%2Fllvm-c%2FObject.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fllvmext%2Finclude%2Fllvm-c%2FObject.h?ref=3bbd741c2e0e9c17bb1a6406be37e6991b6d14cd", "patch": "@@ -33,11 +33,13 @@ typedef struct LLVMOpaqueObjectFile *LLVMObjectFileRef;\n \n typedef struct LLVMOpaqueSectionIterator *LLVMSectionIteratorRef;\n \n-LLVMObjectFileRef LLVMCreateObjectFile(const char *ObjectPath);\n+LLVMObjectFileRef LLVMCreateObjectFile(LLVMMemoryBufferRef MemBuf);\n void LLVMDisposeObjectFile(LLVMObjectFileRef ObjectFile);\n \n LLVMSectionIteratorRef LLVMGetSections(LLVMObjectFileRef ObjectFile);\n void LLVMDisposeSectionIterator(LLVMSectionIteratorRef SI);\n+bool LLVMIsSectionIteratorAtEnd(LLVMObjectFileRef ObjectFile,\n+                                LLVMSectionIteratorRef SI);\n void LLVMMoveToNextSection(LLVMSectionIteratorRef SI);\n const char *LLVMGetSectionName(LLVMSectionIteratorRef SI);\n uint64_t LLVMGetSectionSize(LLVMSectionIteratorRef SI);"}]}