{"sha": "b74cdb7b533a1c9b37ed66e74ca5246887d9afef", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI3NGNkYjdiNTMzYTFjOWIzN2VkNjZlNzRjYTUyNDY4ODdkOWFmZWY=", "commit": {"author": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2015-06-15T21:59:24Z"}, "committer": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2015-06-15T21:59:24Z"}, "message": "Merge pull request #109 from marcusklaas/fix-string-lit\n\nFix off-by-one errors in rewrite_string_lit", "tree": {"sha": "239e559731b4d161e69d3985ab13c9ce9b2e2a3d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/239e559731b4d161e69d3985ab13c9ce9b2e2a3d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b74cdb7b533a1c9b37ed66e74ca5246887d9afef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b74cdb7b533a1c9b37ed66e74ca5246887d9afef", "html_url": "https://github.com/rust-lang/rust/commit/b74cdb7b533a1c9b37ed66e74ca5246887d9afef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b74cdb7b533a1c9b37ed66e74ca5246887d9afef/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "129e2f12e4f625af02216dba2b882ee4eb580262", "url": "https://api.github.com/repos/rust-lang/rust/commits/129e2f12e4f625af02216dba2b882ee4eb580262", "html_url": "https://github.com/rust-lang/rust/commit/129e2f12e4f625af02216dba2b882ee4eb580262"}, {"sha": "963eafe94ace90ca224b7e026394aa1ffffa1172", "url": "https://api.github.com/repos/rust-lang/rust/commits/963eafe94ace90ca224b7e026394aa1ffffa1172", "html_url": "https://github.com/rust-lang/rust/commit/963eafe94ace90ca224b7e026394aa1ffffa1172"}], "stats": {"total": 59, "additions": 54, "deletions": 5}, "files": [{"sha": "eaa7b362b7de3bf1c3e0dcbcdcfc0ee59a4f4fd3", "filename": "src/expr.rs", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/b74cdb7b533a1c9b37ed66e74ca5246887d9afef/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b74cdb7b533a1c9b37ed66e74ca5246887d9afef/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=b74cdb7b533a1c9b37ed66e74ca5246887d9afef", "patch": "@@ -20,7 +20,6 @@ use syntax::print::pprust;\n use MIN_STRING;\n \n impl<'a> FmtVisitor<'a> {\n-    // TODO NEEDS TESTS\n     fn rewrite_string_lit(&mut self, s: &str, span: Span, width: usize, offset: usize) -> String {\n         // FIXME I bet this stomps unicode escapes in the source string\n \n@@ -40,12 +39,17 @@ impl<'a> FmtVisitor<'a> {\n         let indent = make_indent(offset);\n         let indent = &indent;\n \n-        let max_chars = width - 1;\n-\n         let mut cur_start = 0;\n-        let mut result = String::new();\n+        let mut result = String::with_capacity(round_up_to_power_of_two(s.len()));\n         result.push('\"');\n         loop {\n+            let max_chars = if cur_start == 0 {\n+                // First line.\n+                width - 2 // 2 = \" + \\\n+            } else {\n+                config!(max_width) - offset - 1 // 1 = either \\ or ;\n+            };\n+\n             let mut cur_end = cur_start + max_chars;\n \n             if cur_end >= s.len() {\n@@ -64,9 +68,10 @@ impl<'a> FmtVisitor<'a> {\n                     // We can't break at whitespace, fall back to splitting\n                     // anywhere that doesn't break an escape sequence\n                     cur_end = next_char(&s, cur_start + max_chars);\n-                    while s.char_at(cur_end) == '\\\\' {\n+                    while s.char_at(prev_char(&s, cur_end)) == '\\\\' {\n                         cur_end = prev_char(&s, cur_end);\n                     }\n+                    break;\n                 }\n             }\n             // Make sure there is no whitespace to the right of the break."}, {"sha": "1e2544c7b3ebbc4b6d490caa7795d1c5a84353e5", "filename": "tests/source/string-lit.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/b74cdb7b533a1c9b37ed66e74ca5246887d9afef/tests%2Fsource%2Fstring-lit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b74cdb7b533a1c9b37ed66e74ca5246887d9afef/tests%2Fsource%2Fstring-lit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fstring-lit.rs?ref=b74cdb7b533a1c9b37ed66e74ca5246887d9afef", "patch": "@@ -0,0 +1,21 @@\n+// Long string literals\n+\n+fn main() -> &'static str {\n+    let str = \"AAAAAAAAAAAAAAaAAAAAAAAAAAAAAAAAAAAAAAA AAAAAAAAAAAAAAAAAAAAAAaAA AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAaAa\";\n+    let str = \"AAAAAAAAAAAAAAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAaAa\";\n+    let str = \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\";\n+\n+    let too_many_lines = \"H\\\n+                          e\\\n+                          l\\\n+                          l\\\n+                          o\";\n+\n+    // Make sure we don't break after an escape character.\n+    let odd_length_name = \"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\";\n+    let even_length_name = \"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\";\n+\n+    let really_long_variable_name = \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\";\n+\n+    \"stuff\"\n+}"}, {"sha": "ad727552d4538c149f508bd76bd59af820f80f86", "filename": "tests/target/string-lit.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/b74cdb7b533a1c9b37ed66e74ca5246887d9afef/tests%2Ftarget%2Fstring-lit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b74cdb7b533a1c9b37ed66e74ca5246887d9afef/tests%2Ftarget%2Fstring-lit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fstring-lit.rs?ref=b74cdb7b533a1c9b37ed66e74ca5246887d9afef", "patch": "@@ -0,0 +1,23 @@\n+// Long string literals\n+\n+fn main() -> &'static str {\n+    let str = \"AAAAAAAAAAAAAAaAAAAAAAAAAAAAAAAAAAAAAAA AAAAAAAAAAAAAAAAAAAAAAaAA \\\n+               AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAaAa\";\n+    let str = \"AAAAAAAAAAAAAAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAaAAAAAAAAAAAAAAAAAAAAAA\\\n+               AAAAAAAAAAAaAa\";\n+    let str = \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\";\n+\n+    let too_many_lines = \"Hello\";\n+\n+    // Make sure we don't break after an escape character.\n+    let odd_length_name = \"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\\n+                           \\n\\n\";\n+    let even_length_name = \"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\\n+                            \\n\\n\\n\";\n+\n+    let really_long_variable_name = \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\\n+                                     AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\\n+                                     AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\";\n+\n+    \"stuff\"\n+}"}]}