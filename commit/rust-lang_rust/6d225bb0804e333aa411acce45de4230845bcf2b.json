{"sha": "6d225bb0804e333aa411acce45de4230845bcf2b", "node_id": "C_kwDOAAsO6NoAKDZkMjI1YmIwODA0ZTMzM2FhNDExYWNjZTQ1ZGU0MjMwODQ1YmNmMmI", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-02-07T16:57:13Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-02-07T16:57:13Z"}, "message": "Rollup merge of #100599 - MatthewPeterKelly:add-E0523-description-and-test, r=compiler-errors,GuillaumeGomez\n\nAdd compiler error E0523 long description and test\n\nThis PR is one step towards addressing:  https://github.com/rust-lang/rust/issues/61137.", "tree": {"sha": "8d469606ef687244fbedfefe21193c85464641f5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8d469606ef687244fbedfefe21193c85464641f5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6d225bb0804e333aa411acce45de4230845bcf2b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJj4oLpCRBK7hj4Ov3rIwAAwygIAEW8f3WxFXQOlx42u1rh/RJS\nVkdlk1BLUP8BmohZvzc6zpX+/deQSAUg92mOOrSIhB8ZJ3TqxG2U0yj5bbrr8eIZ\n+26ZfHi226flYDPqD2E5629ToIFsNUFrxMNiVziQC0PcLAhuyyXuug55AkIOlQgT\nkq35uPPfm55meJJW3gAz/g2wSm6mFOPRiQH5xXG9HPTmaSrdyM1nxIRIqJP9/C9h\nxYpC8r6W79aDaXVIRg5IP7iRe2lE4hN1+Uasz5OXYNSB8i4JjrdRvTYM9reYmMur\nW82TtnNrJfviooC6+NJ1D3R8Hz9RfdQXe9YDrdH1ZHdCY6xRS/4CXKLv4sydjgY=\n=Iu6g\n-----END PGP SIGNATURE-----\n", "payload": "tree 8d469606ef687244fbedfefe21193c85464641f5\nparent e4dd9edb76a34ecbca539967f9662b8c0cc9c7fb\nparent 2bcd4e256ac00db9185bfbe86286e7a8b35b865f\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1675789033 +0100\ncommitter GitHub <noreply@github.com> 1675789033 +0100\n\nRollup merge of #100599 - MatthewPeterKelly:add-E0523-description-and-test, r=compiler-errors,GuillaumeGomez\n\nAdd compiler error E0523 long description and test\n\nThis PR is one step towards addressing:  https://github.com/rust-lang/rust/issues/61137.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6d225bb0804e333aa411acce45de4230845bcf2b", "html_url": "https://github.com/rust-lang/rust/commit/6d225bb0804e333aa411acce45de4230845bcf2b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6d225bb0804e333aa411acce45de4230845bcf2b/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e4dd9edb76a34ecbca539967f9662b8c0cc9c7fb", "url": "https://api.github.com/repos/rust-lang/rust/commits/e4dd9edb76a34ecbca539967f9662b8c0cc9c7fb", "html_url": "https://github.com/rust-lang/rust/commit/e4dd9edb76a34ecbca539967f9662b8c0cc9c7fb"}, {"sha": "2bcd4e256ac00db9185bfbe86286e7a8b35b865f", "url": "https://api.github.com/repos/rust-lang/rust/commits/2bcd4e256ac00db9185bfbe86286e7a8b35b865f", "html_url": "https://github.com/rust-lang/rust/commit/2bcd4e256ac00db9185bfbe86286e7a8b35b865f"}], "stats": {"total": 90, "additions": 75, "deletions": 15}, "files": [{"sha": "800f3c521778d756f86b6c5e08f00dc76b2f1ada", "filename": "compiler/rustc_error_codes/src/error_codes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6d225bb0804e333aa411acce45de4230845bcf2b/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d225bb0804e333aa411acce45de4230845bcf2b/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes.rs?ref=6d225bb0804e333aa411acce45de4230845bcf2b", "patch": "@@ -286,6 +286,7 @@ E0519: include_str!(\"./error_codes/E0519.md\"),\n E0520: include_str!(\"./error_codes/E0520.md\"),\n E0521: include_str!(\"./error_codes/E0521.md\"),\n E0522: include_str!(\"./error_codes/E0522.md\"),\n+E0523: include_str!(\"./error_codes/E0523.md\"),\n E0524: include_str!(\"./error_codes/E0524.md\"),\n E0525: include_str!(\"./error_codes/E0525.md\"),\n E0527: include_str!(\"./error_codes/E0527.md\"),\n@@ -622,7 +623,6 @@ E0793: include_str!(\"./error_codes/E0793.md\"),\n //  E0488, // lifetime of variable does not enclose its declaration\n //  E0489, // type/lifetime parameter not in scope here\n //  E0490, // removed: unreachable\n-    E0523, // two dependencies have same (crate-name, disambiguator) but different SVH\n //  E0526, // shuffle indices are not constant\n //  E0540, // multiple rustc_deprecated attributes\n //  E0548, // replaced with a generic attribute input check"}, {"sha": "209cbb00db562f3daa36e38d79b58e70c938828f", "filename": "compiler/rustc_error_codes/src/error_codes/E0464.md", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/6d225bb0804e333aa411acce45de4230845bcf2b/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0464.md", "raw_url": "https://github.com/rust-lang/rust/raw/6d225bb0804e333aa411acce45de4230845bcf2b/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0464.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0464.md?ref=6d225bb0804e333aa411acce45de4230845bcf2b", "patch": "@@ -1,6 +1,21 @@\n The compiler found multiple library files with the requested crate name.\n \n+```compile_fail\n+// aux-build:crateresolve-1.rs\n+// aux-build:crateresolve-2.rs\n+// aux-build:crateresolve-3.rs\n+\n+extern crate crateresolve;\n+//~^ ERROR multiple candidates for `rlib` dependency `crateresolve` found\n+\n+fn main() {}\n+```\n+\n This error can occur in several different cases -- for example, when using\n `extern crate` or passing `--extern` options without crate paths. It can also be\n caused by caching issues with the build directory, in which case `cargo clean`\n may help.\n+\n+In the above example, there are three different library files, all of which\n+define the same crate name. Without providing a full path, there is no way for\n+the compiler to know which crate it should use."}, {"sha": "0ddf70386c28d847523bbe042b56f684c7a4d95f", "filename": "compiler/rustc_error_codes/src/error_codes/E0523.md", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/6d225bb0804e333aa411acce45de4230845bcf2b/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0523.md", "raw_url": "https://github.com/rust-lang/rust/raw/6d225bb0804e333aa411acce45de4230845bcf2b/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0523.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0523.md?ref=6d225bb0804e333aa411acce45de4230845bcf2b", "patch": "@@ -0,0 +1,25 @@\n+#### Note: this error code is no longer emitted by the compiler.\n+\n+The compiler found multiple library files with the requested crate name.\n+\n+```compile_fail\n+// aux-build:crateresolve-1.rs\n+// aux-build:crateresolve-2.rs\n+// aux-build:crateresolve-3.rs\n+\n+extern crate crateresolve;\n+//~^ ERROR multiple candidates for `rlib` dependency `crateresolve` found\n+\n+fn main() {}\n+```\n+\n+This error can occur in several different cases -- for example, when using\n+`extern crate` or passing `--extern` options without crate paths. It can also be\n+caused by caching issues with the build directory, in which case `cargo clean`\n+may help.\n+\n+In the above example, there are three different library files, all of which\n+define the same crate name. Without providing a full path, there is no way for\n+the compiler to know which crate it should use.\n+\n+*Note that E0523 has been merged into E0464.*"}, {"sha": "bf8b8aa2ce49704e13d47567f016d7ad2535e97b", "filename": "compiler/rustc_metadata/src/creader.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/6d225bb0804e333aa411acce45de4230845bcf2b/compiler%2Frustc_metadata%2Fsrc%2Fcreader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d225bb0804e333aa411acce45de4230845bcf2b/compiler%2Frustc_metadata%2Fsrc%2Fcreader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Fcreader.rs?ref=6d225bb0804e333aa411acce45de4230845bcf2b", "patch": "@@ -356,7 +356,12 @@ impl<'a> CrateLoader<'a> {\n         for (_, other) in self.cstore.iter_crate_data() {\n             // Same stable crate id but different SVH\n             if other.stable_crate_id() == root.stable_crate_id() && other.hash() != root.hash() {\n-                return Err(CrateError::SymbolConflictsOthers(root.name()));\n+                bug!(\n+                    \"Previously returned E0523 here. \\\n+                     See https://github.com/rust-lang/rust/pull/100599 for additional discussion.\\\n+                     root.name() = {}.\",\n+                    root.name()\n+                );\n             }\n         }\n "}, {"sha": "c32686779facb5be9c91f306815ceba751897316", "filename": "compiler/rustc_metadata/src/errors.rs", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6d225bb0804e333aa411acce45de4230845bcf2b/compiler%2Frustc_metadata%2Fsrc%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d225bb0804e333aa411acce45de4230845bcf2b/compiler%2Frustc_metadata%2Fsrc%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Ferrors.rs?ref=6d225bb0804e333aa411acce45de4230845bcf2b", "patch": "@@ -511,14 +511,6 @@ pub struct SymbolConflictsCurrent {\n     pub crate_name: Symbol,\n }\n \n-#[derive(Diagnostic)]\n-#[diag(metadata_symbol_conflicts_others, code = \"E0523\")]\n-pub struct SymbolConflictsOthers {\n-    #[primary_span]\n-    pub span: Span,\n-    pub crate_name: Symbol,\n-}\n-\n #[derive(Diagnostic)]\n #[diag(metadata_stable_crate_id_collision)]\n pub struct StableCrateIdCollision {"}, {"sha": "755a24253504ec844eb3be0225a8772db6e0bdc1", "filename": "compiler/rustc_metadata/src/locator.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6d225bb0804e333aa411acce45de4230845bcf2b/compiler%2Frustc_metadata%2Fsrc%2Flocator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d225bb0804e333aa411acce45de4230845bcf2b/compiler%2Frustc_metadata%2Fsrc%2Flocator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Flocator.rs?ref=6d225bb0804e333aa411acce45de4230845bcf2b", "patch": "@@ -945,7 +945,6 @@ pub(crate) enum CrateError {\n     ExternLocationNotFile(Symbol, PathBuf),\n     MultipleCandidates(Symbol, CrateFlavor, Vec<PathBuf>),\n     SymbolConflictsCurrent(Symbol),\n-    SymbolConflictsOthers(Symbol),\n     StableCrateIdCollision(Symbol, Symbol),\n     DlOpen(String),\n     DlSym(String),\n@@ -989,9 +988,6 @@ impl CrateError {\n             CrateError::SymbolConflictsCurrent(root_name) => {\n                 sess.emit_err(errors::SymbolConflictsCurrent { span, crate_name: root_name });\n             }\n-            CrateError::SymbolConflictsOthers(root_name) => {\n-                sess.emit_err(errors::SymbolConflictsOthers { span, crate_name: root_name });\n-            }\n             CrateError::StableCrateIdCollision(crate_name0, crate_name1) => {\n                 sess.emit_err(errors::StableCrateIdCollision { span, crate_name0, crate_name1 });\n             }"}, {"sha": "dd2fd1911f227c162b9b249b5a0e2c268dc538b8", "filename": "src/tools/tidy/src/error_codes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6d225bb0804e333aa411acce45de4230845bcf2b/src%2Ftools%2Ftidy%2Fsrc%2Ferror_codes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d225bb0804e333aa411acce45de4230845bcf2b/src%2Ftools%2Ftidy%2Fsrc%2Ferror_codes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Ferror_codes.rs?ref=6d225bb0804e333aa411acce45de4230845bcf2b", "patch": "@@ -31,7 +31,7 @@ const IGNORE_DOCTEST_CHECK: &[&str] = &[\"E0464\", \"E0570\", \"E0601\", \"E0602\", \"E06\n \n // Error codes that don't yet have a UI test. This list will eventually be removed.\n const IGNORE_UI_TEST_CHECK: &[&str] =\n-    &[\"E0461\", \"E0465\", \"E0476\", \"E0514\", \"E0523\", \"E0554\", \"E0640\", \"E0717\", \"E0729\"];\n+    &[\"E0461\", \"E0465\", \"E0476\", \"E0514\", \"E0554\", \"E0640\", \"E0717\", \"E0729\"];\n \n macro_rules! verbose_print {\n     ($verbose:expr, $($fmt:tt)*) => {"}, {"sha": "47717fbd508a899d03729d19e5623e1fa33f6d24", "filename": "tests/ui/error-codes/E0523.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/6d225bb0804e333aa411acce45de4230845bcf2b/tests%2Fui%2Ferror-codes%2FE0523.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d225bb0804e333aa411acce45de4230845bcf2b/tests%2Fui%2Ferror-codes%2FE0523.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ferror-codes%2FE0523.rs?ref=6d225bb0804e333aa411acce45de4230845bcf2b", "patch": "@@ -0,0 +1,14 @@\n+// aux-build:crateresolve1-1.rs\n+// aux-build:crateresolve1-2.rs\n+// aux-build:crateresolve1-3.rs\n+\n+// normalize-stderr-test: \"\\.nll/\" -> \"/\"\n+// normalize-stderr-test: \"\\\\\\?\\\\\" -> \"\"\n+// normalize-stderr-test: \"(lib)?crateresolve1-([123])\\.[a-z]+\" -> \"libcrateresolve1-$2.somelib\"\n+\n+// NOTE: This test is duplicated from `tests/ui/crate-loading/crateresolve1.rs`.\n+\n+extern crate crateresolve1;\n+//~^ ERROR multiple candidates for `rlib` dependency `crateresolve1` found\n+\n+fn main() {}"}, {"sha": "8e3eb2159c298d7b20f14804dea3f63d1598b21e", "filename": "tests/ui/error-codes/E0523.stderr", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/6d225bb0804e333aa411acce45de4230845bcf2b/tests%2Fui%2Ferror-codes%2FE0523.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6d225bb0804e333aa411acce45de4230845bcf2b/tests%2Fui%2Ferror-codes%2FE0523.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ferror-codes%2FE0523.stderr?ref=6d225bb0804e333aa411acce45de4230845bcf2b", "patch": "@@ -0,0 +1,13 @@\n+error[E0464]: multiple candidates for `rlib` dependency `crateresolve1` found\n+  --> $DIR/E0523.rs:11:1\n+   |\n+LL | extern crate crateresolve1;\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: candidate #1: $TEST_BUILD_DIR/error-codes/E0523/auxiliary/libcrateresolve1-1.somelib\n+   = note: candidate #2: $TEST_BUILD_DIR/error-codes/E0523/auxiliary/libcrateresolve1-2.somelib\n+   = note: candidate #3: $TEST_BUILD_DIR/error-codes/E0523/auxiliary/libcrateresolve1-3.somelib\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0464`."}]}