{"sha": "6adc989700d0ba9b16e74a9f9229bc19f1292158", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZhZGM5ODk3MDBkMGJhOWIxNmU3NGE5ZjkyMjliYzE5ZjEyOTIxNTg=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2020-10-20T19:46:33Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-10-20T19:46:33Z"}, "message": "Rollup merge of #78070 - RalfJung:const-panic-test, r=oli-obk\n\nwe can test std and core panic macros together\n\nr? @oli-obk", "tree": {"sha": "e1f3e83e3fc2ccc58ef7e17d2eae1e8d01c2e87f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e1f3e83e3fc2ccc58ef7e17d2eae1e8d01c2e87f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6adc989700d0ba9b16e74a9f9229bc19f1292158", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfjz6aCRBK7hj4Ov3rIwAAdHIIACBRVwY3icpvCwlYt3Q1V2Ko\n8j9QyHM99TaUS62SNdPy/Iex8RaMBqnjUk3d6Tjskm74xzLP71ThEPAGGg1h7QwV\n8CA+G1+5nUCsri42oDth7yxxqr1qmzH7lDth9bhURtbRAfTaEQ3/Ewa8cSMyKuNC\n54G0DIeThRn5+FJFYG4X1srRX8kN/GqwIjPbnSnMn4cDBq3KM/gevNA8Lhl85rLZ\n6QCDWBwIqtmYZqrmBZTUoQOcndv4Hp9FRA0Q9GcKEBxP5J3WwHaN6rc9631qP58A\nsUCZvX5W1AUzWBDrh91IEyH2QbKnGCRkDCzRjmI9QqO3o0lBKMX8lBzIITau+84=\n=CwAC\n-----END PGP SIGNATURE-----\n", "payload": "tree e1f3e83e3fc2ccc58ef7e17d2eae1e8d01c2e87f\nparent 3fea201b11245d65428a1db88d174657429f8bea\nparent 762ded17f83a9309c5d8a626e2bc30a544048007\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1603223193 +0200\ncommitter GitHub <noreply@github.com> 1603223193 +0200\n\nRollup merge of #78070 - RalfJung:const-panic-test, r=oli-obk\n\nwe can test std and core panic macros together\n\nr? @oli-obk\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6adc989700d0ba9b16e74a9f9229bc19f1292158", "html_url": "https://github.com/rust-lang/rust/commit/6adc989700d0ba9b16e74a9f9229bc19f1292158", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6adc989700d0ba9b16e74a9f9229bc19f1292158/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3fea201b11245d65428a1db88d174657429f8bea", "url": "https://api.github.com/repos/rust-lang/rust/commits/3fea201b11245d65428a1db88d174657429f8bea", "html_url": "https://github.com/rust-lang/rust/commit/3fea201b11245d65428a1db88d174657429f8bea"}, {"sha": "762ded17f83a9309c5d8a626e2bc30a544048007", "url": "https://api.github.com/repos/rust-lang/rust/commits/762ded17f83a9309c5d8a626e2bc30a544048007", "html_url": "https://github.com/rust-lang/rust/commit/762ded17f83a9309c5d8a626e2bc30a544048007"}], "stats": {"total": 160, "additions": 90, "deletions": 70}, "files": [{"sha": "ada9feec8971e15386755f80553d2fccc55bc2c0", "filename": "src/test/ui/consts/const-eval/const_panic.rs", "status": "modified", "additions": 18, "deletions": 3, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/6adc989700d0ba9b16e74a9f9229bc19f1292158/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst_panic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6adc989700d0ba9b16e74a9f9229bc19f1292158/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst_panic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst_panic.rs?ref=6adc989700d0ba9b16e74a9f9229bc19f1292158", "patch": "@@ -1,11 +1,26 @@\n #![feature(const_panic)]\n #![crate_type = \"lib\"]\n \n-pub const Z: () = panic!(\"cheese\");\n+const Z: () = std::panic!(\"cheese\");\n //~^ ERROR any use of this value will cause an error\n \n-pub const Y: () = unreachable!();\n+const Z2: () = std::panic!();\n //~^ ERROR any use of this value will cause an error\n \n-pub const X: () = unimplemented!();\n+const Y: () = std::unreachable!();\n+//~^ ERROR any use of this value will cause an error\n+\n+const X: () = std::unimplemented!();\n+//~^ ERROR any use of this value will cause an error\n+\n+const Z_CORE: () = core::panic!(\"cheese\");\n+//~^ ERROR any use of this value will cause an error\n+\n+const Z2_CORE: () = core::panic!();\n+//~^ ERROR any use of this value will cause an error\n+\n+const Y_CORE: () = core::unreachable!();\n+//~^ ERROR any use of this value will cause an error\n+\n+const X_CORE: () = core::unimplemented!();\n //~^ ERROR any use of this value will cause an error"}, {"sha": "e4ca1f4fa26a2ef19b882232cbe172c4d41fed3d", "filename": "src/test/ui/consts/const-eval/const_panic.stderr", "status": "modified", "additions": 66, "deletions": 16, "changes": 82, "blob_url": "https://github.com/rust-lang/rust/blob/6adc989700d0ba9b16e74a9f9229bc19f1292158/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst_panic.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6adc989700d0ba9b16e74a9f9229bc19f1292158/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst_panic.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst_panic.stderr?ref=6adc989700d0ba9b16e74a9f9229bc19f1292158", "patch": "@@ -1,33 +1,83 @@\n error: any use of this value will cause an error\n-  --> $DIR/const_panic.rs:4:19\n+  --> $DIR/const_panic.rs:4:15\n    |\n-LL | pub const Z: () = panic!(\"cheese\");\n-   | ------------------^^^^^^^^^^^^^^^^-\n-   |                   |\n-   |                   the evaluated program panicked at 'cheese', $DIR/const_panic.rs:4:19\n+LL | const Z: () = std::panic!(\"cheese\");\n+   | --------------^^^^^^^^^^^^^^^^^^^^^-\n+   |               |\n+   |               the evaluated program panicked at 'cheese', $DIR/const_panic.rs:4:15\n    |\n    = note: `#[deny(const_err)]` on by default\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: any use of this value will cause an error\n-  --> $DIR/const_panic.rs:7:19\n+  --> $DIR/const_panic.rs:7:16\n    |\n-LL | pub const Y: () = unreachable!();\n-   | ------------------^^^^^^^^^^^^^^-\n-   |                   |\n-   |                   the evaluated program panicked at 'internal error: entered unreachable code', $DIR/const_panic.rs:7:19\n+LL | const Z2: () = std::panic!();\n+   | ---------------^^^^^^^^^^^^^-\n+   |                |\n+   |                the evaluated program panicked at 'explicit panic', $DIR/const_panic.rs:7:16\n    |\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: any use of this value will cause an error\n-  --> $DIR/const_panic.rs:10:19\n+  --> $DIR/const_panic.rs:10:15\n    |\n-LL | pub const X: () = unimplemented!();\n-   | ------------------^^^^^^^^^^^^^^^^-\n-   |                   |\n-   |                   the evaluated program panicked at 'not implemented', $DIR/const_panic.rs:10:19\n+LL | const Y: () = std::unreachable!();\n+   | --------------^^^^^^^^^^^^^^^^^^^-\n+   |               |\n+   |               the evaluated program panicked at 'internal error: entered unreachable code', $DIR/const_panic.rs:10:15\n    |\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n-error: aborting due to 3 previous errors\n+error: any use of this value will cause an error\n+  --> $DIR/const_panic.rs:13:15\n+   |\n+LL | const X: () = std::unimplemented!();\n+   | --------------^^^^^^^^^^^^^^^^^^^^^-\n+   |               |\n+   |               the evaluated program panicked at 'not implemented', $DIR/const_panic.rs:13:15\n+   |\n+   = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+error: any use of this value will cause an error\n+  --> $DIR/const_panic.rs:16:20\n+   |\n+LL | const Z_CORE: () = core::panic!(\"cheese\");\n+   | -------------------^^^^^^^^^^^^^^^^^^^^^^-\n+   |                    |\n+   |                    the evaluated program panicked at 'cheese', $DIR/const_panic.rs:16:20\n+   |\n+   = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+error: any use of this value will cause an error\n+  --> $DIR/const_panic.rs:19:21\n+   |\n+LL | const Z2_CORE: () = core::panic!();\n+   | --------------------^^^^^^^^^^^^^^-\n+   |                     |\n+   |                     the evaluated program panicked at 'explicit panic', $DIR/const_panic.rs:19:21\n+   |\n+   = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+error: any use of this value will cause an error\n+  --> $DIR/const_panic.rs:22:20\n+   |\n+LL | const Y_CORE: () = core::unreachable!();\n+   | -------------------^^^^^^^^^^^^^^^^^^^^-\n+   |                    |\n+   |                    the evaluated program panicked at 'internal error: entered unreachable code', $DIR/const_panic.rs:22:20\n+   |\n+   = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+error: any use of this value will cause an error\n+  --> $DIR/const_panic.rs:25:20\n+   |\n+LL | const X_CORE: () = core::unimplemented!();\n+   | -------------------^^^^^^^^^^^^^^^^^^^^^^-\n+   |                    |\n+   |                    the evaluated program panicked at 'not implemented', $DIR/const_panic.rs:25:20\n+   |\n+   = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+error: aborting due to 8 previous errors\n "}, {"sha": "e42685e9c76b0f586083c68664dec122f6d42988", "filename": "src/test/ui/consts/const-eval/const_panic_libcore.rs", "status": "removed", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/3fea201b11245d65428a1db88d174657429f8bea/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst_panic_libcore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3fea201b11245d65428a1db88d174657429f8bea/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst_panic_libcore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst_panic_libcore.rs?ref=3fea201b11245d65428a1db88d174657429f8bea", "patch": "@@ -1,12 +0,0 @@\n-#![no_std]\n-#![crate_type = \"lib\"]\n-#![feature(const_panic)]\n-\n-const Z: () = panic!(\"cheese\");\n-//~^ ERROR any use of this value will cause an error\n-\n-const Y: () = unreachable!();\n-//~^ ERROR any use of this value will cause an error\n-\n-const X: () = unimplemented!();\n-//~^ ERROR any use of this value will cause an error"}, {"sha": "6b03e847def140dbf98864f75a05aaef99254ad9", "filename": "src/test/ui/consts/const-eval/const_panic_libcore_bin.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/6adc989700d0ba9b16e74a9f9229bc19f1292158/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst_panic_libcore_bin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6adc989700d0ba9b16e74a9f9229bc19f1292158/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst_panic_libcore_bin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst_panic_libcore_bin.rs?ref=6adc989700d0ba9b16e74a9f9229bc19f1292158", "previous_filename": "src/test/ui/consts/const-eval/const_panic_libcore_main.rs"}, {"sha": "9eeddc464f5ad489e16da2a8c2d9200c5befc43d", "filename": "src/test/ui/consts/const-eval/const_panic_libcore_bin.stderr", "status": "renamed", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/6adc989700d0ba9b16e74a9f9229bc19f1292158/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst_panic_libcore_bin.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6adc989700d0ba9b16e74a9f9229bc19f1292158/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst_panic_libcore_bin.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst_panic_libcore_bin.stderr?ref=6adc989700d0ba9b16e74a9f9229bc19f1292158", "patch": "@@ -1,31 +1,31 @@\n error: any use of this value will cause an error\n-  --> $DIR/const_panic_libcore.rs:5:15\n+  --> $DIR/const_panic_libcore_bin.rs:9:15\n    |\n LL | const Z: () = panic!(\"cheese\");\n    | --------------^^^^^^^^^^^^^^^^-\n    |               |\n-   |               the evaluated program panicked at 'cheese', $DIR/const_panic_libcore.rs:5:15\n+   |               the evaluated program panicked at 'cheese', $DIR/const_panic_libcore_bin.rs:9:15\n    |\n    = note: `#[deny(const_err)]` on by default\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: any use of this value will cause an error\n-  --> $DIR/const_panic_libcore.rs:8:15\n+  --> $DIR/const_panic_libcore_bin.rs:12:15\n    |\n LL | const Y: () = unreachable!();\n    | --------------^^^^^^^^^^^^^^-\n    |               |\n-   |               the evaluated program panicked at 'internal error: entered unreachable code', $DIR/const_panic_libcore.rs:8:15\n+   |               the evaluated program panicked at 'internal error: entered unreachable code', $DIR/const_panic_libcore_bin.rs:12:15\n    |\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: any use of this value will cause an error\n-  --> $DIR/const_panic_libcore.rs:11:15\n+  --> $DIR/const_panic_libcore_bin.rs:15:15\n    |\n LL | const X: () = unimplemented!();\n    | --------------^^^^^^^^^^^^^^^^-\n    |               |\n-   |               the evaluated program panicked at 'not implemented', $DIR/const_panic_libcore.rs:11:15\n+   |               the evaluated program panicked at 'not implemented', $DIR/const_panic_libcore_bin.rs:15:15\n    |\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n ", "previous_filename": "src/test/ui/consts/const-eval/const_panic_libcore.stderr"}, {"sha": "c5887ff8c5697c373476633d906f20d78f67e34d", "filename": "src/test/ui/consts/const-eval/const_panic_libcore_main.stderr", "status": "removed", "additions": 0, "deletions": 33, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/3fea201b11245d65428a1db88d174657429f8bea/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst_panic_libcore_main.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3fea201b11245d65428a1db88d174657429f8bea/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst_panic_libcore_main.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst_panic_libcore_main.stderr?ref=3fea201b11245d65428a1db88d174657429f8bea", "patch": "@@ -1,33 +0,0 @@\n-error: any use of this value will cause an error\n-  --> $DIR/const_panic_libcore_main.rs:9:15\n-   |\n-LL | const Z: () = panic!(\"cheese\");\n-   | --------------^^^^^^^^^^^^^^^^-\n-   |               |\n-   |               the evaluated program panicked at 'cheese', $DIR/const_panic_libcore_main.rs:9:15\n-   |\n-   = note: `#[deny(const_err)]` on by default\n-   = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n-\n-error: any use of this value will cause an error\n-  --> $DIR/const_panic_libcore_main.rs:12:15\n-   |\n-LL | const Y: () = unreachable!();\n-   | --------------^^^^^^^^^^^^^^-\n-   |               |\n-   |               the evaluated program panicked at 'internal error: entered unreachable code', $DIR/const_panic_libcore_main.rs:12:15\n-   |\n-   = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n-\n-error: any use of this value will cause an error\n-  --> $DIR/const_panic_libcore_main.rs:15:15\n-   |\n-LL | const X: () = unimplemented!();\n-   | --------------^^^^^^^^^^^^^^^^-\n-   |               |\n-   |               the evaluated program panicked at 'not implemented', $DIR/const_panic_libcore_main.rs:15:15\n-   |\n-   = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n-\n-error: aborting due to 3 previous errors\n-"}]}