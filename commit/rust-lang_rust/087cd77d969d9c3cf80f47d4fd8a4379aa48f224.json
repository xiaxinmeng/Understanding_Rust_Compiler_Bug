{"sha": "087cd77d969d9c3cf80f47d4fd8a4379aa48f224", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA4N2NkNzdkOTY5ZDljM2NmODBmNDdkNGZkOGE0Mzc5YWE0OGYyMjQ=", "commit": {"author": {"name": "Marc-Antoine Perennou", "email": "Marc-Antoine@Perennou.com", "date": "2019-06-24T07:12:24Z"}, "committer": {"name": "Marc-Antoine Perennou", "email": "Marc-Antoine@Perennou.com", "date": "2019-06-24T07:12:24Z"}, "message": "rustbuild: always set cxx for build host\n\nEven if it's not in hosts\n\nSigned-off-by: Marc-Antoine Perennou <Marc-Antoine@Perennou.com>", "tree": {"sha": "c6914bb29bf4f4c3e0f40ca2c226fc061f64d0d4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c6914bb29bf4f4c3e0f40ca2c226fc061f64d0d4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/087cd77d969d9c3cf80f47d4fd8a4379aa48f224", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/087cd77d969d9c3cf80f47d4fd8a4379aa48f224", "html_url": "https://github.com/rust-lang/rust/commit/087cd77d969d9c3cf80f47d4fd8a4379aa48f224", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/087cd77d969d9c3cf80f47d4fd8a4379aa48f224/comments", "author": {"login": "Keruspe", "id": 222942, "node_id": "MDQ6VXNlcjIyMjk0Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/222942?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Keruspe", "html_url": "https://github.com/Keruspe", "followers_url": "https://api.github.com/users/Keruspe/followers", "following_url": "https://api.github.com/users/Keruspe/following{/other_user}", "gists_url": "https://api.github.com/users/Keruspe/gists{/gist_id}", "starred_url": "https://api.github.com/users/Keruspe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Keruspe/subscriptions", "organizations_url": "https://api.github.com/users/Keruspe/orgs", "repos_url": "https://api.github.com/users/Keruspe/repos", "events_url": "https://api.github.com/users/Keruspe/events{/privacy}", "received_events_url": "https://api.github.com/users/Keruspe/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Keruspe", "id": 222942, "node_id": "MDQ6VXNlcjIyMjk0Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/222942?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Keruspe", "html_url": "https://github.com/Keruspe", "followers_url": "https://api.github.com/users/Keruspe/followers", "following_url": "https://api.github.com/users/Keruspe/following{/other_user}", "gists_url": "https://api.github.com/users/Keruspe/gists{/gist_id}", "starred_url": "https://api.github.com/users/Keruspe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Keruspe/subscriptions", "organizations_url": "https://api.github.com/users/Keruspe/orgs", "repos_url": "https://api.github.com/users/Keruspe/repos", "events_url": "https://api.github.com/users/Keruspe/events{/privacy}", "received_events_url": "https://api.github.com/users/Keruspe/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "870f13a0b342771746c22f335b4118303626ef23", "url": "https://api.github.com/repos/rust-lang/rust/commits/870f13a0b342771746c22f335b4118303626ef23", "html_url": "https://github.com/rust-lang/rust/commit/870f13a0b342771746c22f335b4118303626ef23"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "400375cd201c4dca8a8579a3f9c170b2d24f4404", "filename": "src/bootstrap/cc_detect.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/087cd77d969d9c3cf80f47d4fd8a4379aa48f224/src%2Fbootstrap%2Fcc_detect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/087cd77d969d9c3cf80f47d4fd8a4379aa48f224/src%2Fbootstrap%2Fcc_detect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcc_detect.rs?ref=087cd77d969d9c3cf80f47d4fd8a4379aa48f224", "patch": "@@ -106,7 +106,7 @@ pub fn find(build: &mut Build) {\n         let cxx_configured = if let Some(cxx) = config.and_then(|c| c.cxx.as_ref()) {\n             cfg.compiler(cxx);\n             true\n-        } else if build.hosts.contains(&target) {\n+        } else if build.hosts.contains(&target) || build.build == target {\n             set_compiler(&mut cfg, Language::CPlusPlus, target, config, build);\n             true\n         } else {"}]}