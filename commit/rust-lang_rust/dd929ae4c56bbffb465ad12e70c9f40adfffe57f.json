{"sha": "dd929ae4c56bbffb465ad12e70c9f40adfffe57f", "node_id": "C_kwDOAAsO6NoAKGRkOTI5YWU0YzU2YmJmZmI0NjVhZDEyZTcwYzlmNDBhZGZmZmU1N2Y", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-12-07T10:05:00Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-12-07T10:05:00Z"}, "message": "Rollup merge of #91493 - oli-obk:cleanup, r=michaelwoerister\n\nRemove a dead code path.\n\nIt is neither documented nor can I see any way it could ever be reached.\n\nAlso, no tests fail when turning that arm into an ICE", "tree": {"sha": "848a4e0deb64211329adb3939c9b25165e080798", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/848a4e0deb64211329adb3939c9b25165e080798"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dd929ae4c56bbffb465ad12e70c9f40adfffe57f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhrzHNCRBK7hj4Ov3rIwAAcOIIAGYnwxirlzbo68LW1rRFDeSm\nY3zw0O/jw2J0l2HszPW2YqMq5RYcWvWJI8mrye7QCXQ7b50eQUJv4TJV97I1odZc\nwwPwkn1Cl3eWHut1a/mqp6TzUY2D/oDKawYLafb3w1U4Wf+lqFqlmt6QP7DeYejI\npEDk88QBjQvpm7Pri7xf806g7Q09QJmJwfhgY+bOPnIXE8vWmFr2DSDvTAvO5hoS\ny5pB9wXZdJuZWZVedvMsmzzZ/7jxUdBgVo5He4l636Lqa8SNXpYRQLT4dHtsvq5+\nqXOz2yHaLoLgdt9IB4danBv51PrsdsRoFEDFlv4rkIQObpRTyPbwRZmuSsSJIDg=\n=25aB\n-----END PGP SIGNATURE-----\n", "payload": "tree 848a4e0deb64211329adb3939c9b25165e080798\nparent 677f878e36e6b089c3213063508ec6b11c340a1f\nparent 9e5939ad92ae1096e3945bbfdfe81ec515ed0c69\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1638871500 +0100\ncommitter GitHub <noreply@github.com> 1638871500 +0100\n\nRollup merge of #91493 - oli-obk:cleanup, r=michaelwoerister\n\nRemove a dead code path.\n\nIt is neither documented nor can I see any way it could ever be reached.\n\nAlso, no tests fail when turning that arm into an ICE\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dd929ae4c56bbffb465ad12e70c9f40adfffe57f", "html_url": "https://github.com/rust-lang/rust/commit/dd929ae4c56bbffb465ad12e70c9f40adfffe57f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dd929ae4c56bbffb465ad12e70c9f40adfffe57f/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "677f878e36e6b089c3213063508ec6b11c340a1f", "url": "https://api.github.com/repos/rust-lang/rust/commits/677f878e36e6b089c3213063508ec6b11c340a1f", "html_url": "https://github.com/rust-lang/rust/commit/677f878e36e6b089c3213063508ec6b11c340a1f"}, {"sha": "9e5939ad92ae1096e3945bbfdfe81ec515ed0c69", "url": "https://api.github.com/repos/rust-lang/rust/commits/9e5939ad92ae1096e3945bbfdfe81ec515ed0c69", "html_url": "https://github.com/rust-lang/rust/commit/9e5939ad92ae1096e3945bbfdfe81ec515ed0c69"}], "stats": {"total": 13, "additions": 8, "deletions": 5}, "files": [{"sha": "d9ab4ae1eda295ed86911ebeed4b6e5555589431", "filename": "compiler/rustc_infer/src/infer/opaque_types.rs", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/dd929ae4c56bbffb465ad12e70c9f40adfffe57f/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fopaque_types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd929ae4c56bbffb465ad12e70c9f40adfffe57f/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fopaque_types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fopaque_types.rs?ref=dd929ae4c56bbffb465ad12e70c9f40adfffe57f", "patch": "@@ -461,10 +461,6 @@ impl<'a, 'tcx> Instantiator<'a, 'tcx> {\n                     if let Some(def_id) = def_id.as_local() {\n                         let opaque_hir_id = tcx.hir().local_def_id_to_hir_id(def_id);\n                         let parent_def_id = self.infcx.defining_use_anchor;\n-                        let def_scope_default = || {\n-                            let opaque_parent_hir_id = tcx.hir().get_parent_item(opaque_hir_id);\n-                            parent_def_id == tcx.hir().local_def_id(opaque_parent_hir_id)\n-                        };\n                         let (in_definition_scope, origin) = match tcx.hir().expect_item(def_id).kind\n                         {\n                             // Anonymous `impl Trait`\n@@ -481,7 +477,14 @@ impl<'a, 'tcx> Instantiator<'a, 'tcx> {\n                             }) => {\n                                 (may_define_opaque_type(tcx, parent_def_id, opaque_hir_id), origin)\n                             }\n-                            _ => (def_scope_default(), hir::OpaqueTyOrigin::TyAlias),\n+                            ref itemkind => {\n+                                span_bug!(\n+                                    self.value_span,\n+                                    \"weird opaque type: {:#?}, {:#?}\",\n+                                    ty.kind(),\n+                                    itemkind\n+                                )\n+                            }\n                         };\n                         if in_definition_scope {\n                             let opaque_type_key ="}]}