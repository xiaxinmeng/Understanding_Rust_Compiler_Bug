{"sha": "acc61cc28461b72e8a03869b0ad60c144b4b3b20", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFjYzYxY2MyODQ2MWI3MmU4YTAzODY5YjBhZDYwYzE0NGI0YjNiMjA=", "commit": {"author": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2018-12-30T20:43:58Z"}, "committer": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2018-12-30T20:43:58Z"}, "message": "Merge #375\n\n375: Move renames into ra_analysis and rename the correct range r=DJMcNab a=DJMcNab\n\nFixes #230. Supersedes #235.\r\n\r\nTODO: add some tests for this\n\nCo-authored-by: DJMcNab <36049421+djmcnab@users.noreply.github.com>", "tree": {"sha": "72d9523c52aca48aac9dd8c5524bb044f547002b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/72d9523c52aca48aac9dd8c5524bb044f547002b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/acc61cc28461b72e8a03869b0ad60c144b4b3b20", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/acc61cc28461b72e8a03869b0ad60c144b4b3b20", "html_url": "https://github.com/rust-lang/rust/commit/acc61cc28461b72e8a03869b0ad60c144b4b3b20", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/acc61cc28461b72e8a03869b0ad60c144b4b3b20/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "parents": [{"sha": "f9b58454a43274d3b1d4d0e74cdef597b75f9a97", "url": "https://api.github.com/repos/rust-lang/rust/commits/f9b58454a43274d3b1d4d0e74cdef597b75f9a97", "html_url": "https://github.com/rust-lang/rust/commit/f9b58454a43274d3b1d4d0e74cdef597b75f9a97"}, {"sha": "872950bc188ba104ecd1f532427dea6dc52533bd", "url": "https://api.github.com/repos/rust-lang/rust/commits/872950bc188ba104ecd1f532427dea6dc52533bd", "html_url": "https://github.com/rust-lang/rust/commit/872950bc188ba104ecd1f532427dea6dc52533bd"}], "stats": {"total": 147, "additions": 131, "deletions": 16}, "files": [{"sha": "5ed374c7916e76697b6ae9f99fa881b37ac60403", "filename": "crates/ra_analysis/src/imp.rs", "status": "modified", "additions": 24, "deletions": 2, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/acc61cc28461b72e8a03869b0ad60c144b4b3b20/crates%2Fra_analysis%2Fsrc%2Fimp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/acc61cc28461b72e8a03869b0ad60c144b4b3b20/crates%2Fra_analysis%2Fsrc%2Fimp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fimp.rs?ref=acc61cc28461b72e8a03869b0ad60c144b4b3b20", "patch": "@@ -288,7 +288,11 @@ impl AnalysisImpl {\n             Some(it) => it,\n         };\n \n-        let mut ret = vec![(position.file_id, binding.syntax().range())];\n+        let mut ret = binding\n+            .name()\n+            .into_iter()\n+            .map(|name| (position.file_id, name.syntax().range()))\n+            .collect::<Vec<_>>();\n         ret.extend(\n             descr\n                 .scopes(&*self.db)\n@@ -505,7 +509,25 @@ impl AnalysisImpl {\n         let infer = function.infer(&*self.db)?;\n         Ok(infer.type_of_node(node).map(|t| t.to_string()))\n     }\n-\n+    pub fn rename(\n+        &self,\n+        position: FilePosition,\n+        new_name: &str,\n+    ) -> Cancelable<Vec<SourceFileEdit>> {\n+        let res = self\n+            .find_all_refs(position)?\n+            .iter()\n+            .map(|(file_id, text_range)| SourceFileEdit {\n+                file_id: *file_id,\n+                edit: {\n+                    let mut builder = ra_text_edit::TextEditBuilder::new();\n+                    builder.replace(*text_range, new_name.into());\n+                    builder.finish()\n+                },\n+            })\n+            .collect::<Vec<_>>();\n+        Ok(res)\n+    }\n     fn index_resolve(&self, name_ref: ast::NameRef) -> Cancelable<Vec<(FileId, FileSymbol)>> {\n         let name = name_ref.text();\n         let mut query = Query::new(name.to_string());"}, {"sha": "e5616851000537f7be1cf8c35386e27b4615808c", "filename": "crates/ra_analysis/src/lib.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/acc61cc28461b72e8a03869b0ad60c144b4b3b20/crates%2Fra_analysis%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/acc61cc28461b72e8a03869b0ad60c144b4b3b20/crates%2Fra_analysis%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Flib.rs?ref=acc61cc28461b72e8a03869b0ad60c144b4b3b20", "patch": "@@ -367,6 +367,13 @@ impl Analysis {\n     pub fn type_of(&self, frange: FileRange) -> Cancelable<Option<String>> {\n         self.imp.type_of(frange)\n     }\n+    pub fn rename(\n+        &self,\n+        position: FilePosition,\n+        new_name: &str,\n+    ) -> Cancelable<Vec<SourceFileEdit>> {\n+        self.imp.rename(position, new_name)\n+    }\n }\n \n pub struct LibraryData {"}, {"sha": "a314fbc40afb59255e0db48b13037af9b482a948", "filename": "crates/ra_analysis/tests/tests.rs", "status": "modified", "additions": 92, "deletions": 1, "changes": 93, "blob_url": "https://github.com/rust-lang/rust/blob/acc61cc28461b72e8a03869b0ad60c144b4b3b20/crates%2Fra_analysis%2Ftests%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/acc61cc28461b72e8a03869b0ad60c144b4b3b20/crates%2Fra_analysis%2Ftests%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Ftests%2Ftests.rs?ref=acc61cc28461b72e8a03869b0ad60c144b4b3b20", "patch": "@@ -1,5 +1,5 @@\n use ra_syntax::TextRange;\n-use test_utils::assert_eq_dbg;\n+use test_utils::{assert_eq_dbg, assert_eq_text};\n \n use ra_analysis::{\n     mock_analysis::{analysis_and_position, single_file, single_file_with_position, MockAnalysis},\n@@ -453,3 +453,94 @@ fn test_find_all_refs_for_fn_param() {\n     let refs = get_all_refs(code);\n     assert_eq!(refs.len(), 2);\n }\n+#[test]\n+fn test_rename_for_local() {\n+    test_rename(\n+        r#\"\n+    fn main() {\n+        let mut i = 1;\n+        let j = 1;\n+        i = i<|> + j;\n+\n+        {\n+            i = 0;\n+        }\n+\n+        i = 5;\n+    }\"#,\n+        \"k\",\n+        r#\"\n+    fn main() {\n+        let mut k = 1;\n+        let j = 1;\n+        k = k + j;\n+\n+        {\n+            k = 0;\n+        }\n+\n+        k = 5;\n+    }\"#,\n+    );\n+}\n+\n+#[test]\n+fn test_rename_for_param_inside() {\n+    test_rename(\n+        r#\"\n+    fn foo(i : u32) -> u32 {\n+        i<|>\n+    }\"#,\n+        \"j\",\n+        r#\"\n+    fn foo(j : u32) -> u32 {\n+        j\n+    }\"#,\n+    );\n+}\n+\n+#[test]\n+fn test_rename_refs_for_fn_param() {\n+    test_rename(\n+        r#\"\n+    fn foo(i<|> : u32) -> u32 {\n+        i\n+    }\"#,\n+        \"new_name\",\n+        r#\"\n+    fn foo(new_name : u32) -> u32 {\n+        new_name\n+    }\"#,\n+    );\n+}\n+\n+#[test]\n+fn test_rename_for_mut_param() {\n+    test_rename(\n+        r#\"\n+    fn foo(mut i<|> : u32) -> u32 {\n+        i\n+    }\"#,\n+        \"new_name\",\n+        r#\"\n+    fn foo(mut new_name : u32) -> u32 {\n+        new_name\n+    }\"#,\n+    );\n+}\n+fn test_rename(text: &str, new_name: &str, expected: &str) {\n+    let (analysis, position) = single_file_with_position(text);\n+    let edits = analysis.rename(position, new_name).unwrap();\n+    let mut text_edit_bulder = ra_text_edit::TextEditBuilder::new();\n+    let mut file_id: Option<FileId> = None;\n+    for edit in edits {\n+        file_id = Some(edit.file_id);\n+        for atom in edit.edit.as_atoms() {\n+            text_edit_bulder.replace(atom.delete, atom.insert.clone());\n+        }\n+    }\n+    let result = text_edit_bulder\n+        .finish()\n+        .apply(&*analysis.file_text(file_id.unwrap()));\n+    assert_eq_text!(expected, &*result);\n+}"}, {"sha": "3b7a14a5c0239864e357a140107455d097f30c48", "filename": "crates/ra_lsp_server/src/main_loop/handlers.rs", "status": "modified", "additions": 8, "deletions": 13, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/acc61cc28461b72e8a03869b0ad60c144b4b3b20/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/acc61cc28461b72e8a03869b0ad60c144b4b3b20/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs?ref=acc61cc28461b72e8a03869b0ad60c144b4b3b20", "patch": "@@ -557,24 +557,19 @@ pub fn handle_rename(world: ServerWorld, params: RenameParams) -> Result<Option<\n         .into());\n     }\n \n-    let refs = world\n+    let renames = world\n         .analysis()\n-        .find_all_refs(FilePosition { file_id, offset })?;\n-    if refs.is_empty() {\n+        .rename(FilePosition { file_id, offset }, &*params.new_name)?;\n+    if renames.is_empty() {\n         return Ok(None);\n     }\n \n     let mut changes = HashMap::new();\n-    for r in refs {\n-        if let Ok(loc) = to_location(r.0, r.1, &world, &line_index) {\n-            changes\n-                .entry(loc.uri)\n-                .or_insert_with(Vec::new)\n-                .push(TextEdit {\n-                    range: loc.range,\n-                    new_text: params.new_name.clone(),\n-                });\n-        }\n+    for edit in renames {\n+        changes\n+            .entry(file_id.try_conv_with(&world)?)\n+            .or_insert_with(Vec::new)\n+            .extend(edit.edit.conv_with(&line_index));\n     }\n \n     Ok(Some(WorkspaceEdit {"}]}