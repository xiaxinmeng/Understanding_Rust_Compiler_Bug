{"sha": "e8ae2d39763c7228314065c1374fbe06b2e234c0", "node_id": "C_kwDOAAsO6NoAKGU4YWUyZDM5NzYzYzcyMjgzMTQwNjVjMTM3NGZiZTA2YjJlMjM0YzA", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-05-19T07:41:46Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-05-19T07:41:46Z"}, "message": "Auto merge of #14848 - bm-w:fix/highlight-let-else-return, r=Veykril\n\nFix `preorder_expr` skipping the `else` block of let-else statements\n\nFixes exit/yield points not getting highlighted in such blocks for `highlight_related` (#14813; and possibly other bugs in features that use `preorder_expr`).", "tree": {"sha": "c0bc7f3551cc752107400a23cbbd8dc47a4a70c3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c0bc7f3551cc752107400a23cbbd8dc47a4a70c3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e8ae2d39763c7228314065c1374fbe06b2e234c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e8ae2d39763c7228314065c1374fbe06b2e234c0", "html_url": "https://github.com/rust-lang/rust/commit/e8ae2d39763c7228314065c1374fbe06b2e234c0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e8ae2d39763c7228314065c1374fbe06b2e234c0/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e110696118ec5b49eeb3b3596ec28bdbcdbfd92c", "url": "https://api.github.com/repos/rust-lang/rust/commits/e110696118ec5b49eeb3b3596ec28bdbcdbfd92c", "html_url": "https://github.com/rust-lang/rust/commit/e110696118ec5b49eeb3b3596ec28bdbcdbfd92c"}, {"sha": "c0519daf3b05b66b4878b938f093970825baa730", "url": "https://api.github.com/repos/rust-lang/rust/commits/c0519daf3b05b66b4878b938f093970825baa730", "html_url": "https://github.com/rust-lang/rust/commit/c0519daf3b05b66b4878b938f093970825baa730"}], "stats": {"total": 47, "additions": 46, "deletions": 1}, "files": [{"sha": "22ced69d81e4a9157c002b427eeec4fdac982fbf", "filename": "crates/ide-db/src/syntax_helpers/node_ext.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e8ae2d39763c7228314065c1374fbe06b2e234c0/crates%2Fide-db%2Fsrc%2Fsyntax_helpers%2Fnode_ext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8ae2d39763c7228314065c1374fbe06b2e234c0/crates%2Fide-db%2Fsrc%2Fsyntax_helpers%2Fnode_ext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-db%2Fsrc%2Fsyntax_helpers%2Fnode_ext.rs?ref=e8ae2d39763c7228314065c1374fbe06b2e234c0", "patch": "@@ -52,7 +52,9 @@ pub fn preorder_expr(start: &ast::Expr, cb: &mut dyn FnMut(WalkEvent<ast::Expr>)\n             }\n         };\n         if let Some(let_stmt) = node.parent().and_then(ast::LetStmt::cast) {\n-            if Some(node.clone()) != let_stmt.initializer().map(|it| it.syntax().clone()) {\n+            if let_stmt.initializer().map(|it| it.syntax() != &node).unwrap_or(true)\n+                && let_stmt.let_else().map(|it| it.syntax() != &node).unwrap_or(true)\n+            {\n                 // skipping potential const pat expressions in  let statements\n                 preorder.skip_subtree();\n                 continue;"}, {"sha": "7e545491f8e7ea58f16f7fe7bdd2dab5260fb8fa", "filename": "crates/ide/src/highlight_related.rs", "status": "modified", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/e8ae2d39763c7228314065c1374fbe06b2e234c0/crates%2Fide%2Fsrc%2Fhighlight_related.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8ae2d39763c7228314065c1374fbe06b2e234c0/crates%2Fide%2Fsrc%2Fhighlight_related.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fhighlight_related.rs?ref=e8ae2d39763c7228314065c1374fbe06b2e234c0", "patch": "@@ -692,6 +692,29 @@ pub async$0 fn foo() {\n         );\n     }\n \n+    #[test]\n+    fn test_hl_let_else_yield_points() {\n+        check(\n+            r#\"\n+pub async fn foo() {\n+ // ^^^^^\n+    let x = foo()\n+        .await$0\n+      // ^^^^^\n+        .await;\n+      // ^^^^^\n+    || { 0.await };\n+    let Some(_) = None else {\n+        foo().await\n+           // ^^^^^\n+    };\n+    (async { 0.await }).await\n+                     // ^^^^^\n+}\n+\"#,\n+        );\n+    }\n+\n     #[test]\n     fn test_hl_yield_nested_fn() {\n         check(\n@@ -788,6 +811,26 @@ async fn foo() {\n         );\n     }\n \n+    #[test]\n+    fn test_hl_let_else_exit_points() {\n+        check(\n+            r#\"\n+  fn$0 foo() -> u32 {\n+//^^\n+    let Some(bar) = None else {\n+        return 0;\n+     // ^^^^^^\n+    };\n+\n+    0?;\n+  // ^\n+    0xDEAD_BEEF\n+ // ^^^^^^^^^^^\n+}\n+\"#,\n+        );\n+    }\n+\n     #[test]\n     fn test_hl_prefer_ref_over_tail_exit() {\n         check("}]}