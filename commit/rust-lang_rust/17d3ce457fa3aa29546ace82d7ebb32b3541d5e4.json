{"sha": "17d3ce457fa3aa29546ace82d7ebb32b3541d5e4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE3ZDNjZTQ1N2ZhM2FhMjk1NDZhY2U4MmQ3ZWJiMzJiMzU0MWQ1ZTQ=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-08-19T06:54:24Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-08-19T06:54:24Z"}, "message": "Rollup merge of #75038 - rust-lang:Havvy-patch-1, r=steveklabnik\n\nSee also X-Link mem::{swap, take, replace}\n\nSince it's easy to end up at one of these functions when you really wanted the other one, cross link them with descriptions of why you'd want to use them.", "tree": {"sha": "1059a173194a921a39e3bad4669dd8458d70fa62", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1059a173194a921a39e3bad4669dd8458d70fa62"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/17d3ce457fa3aa29546ace82d7ebb32b3541d5e4", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfPMygCRBK7hj4Ov3rIwAAdHIIABaJR3t1KsobfUfzAeJJ7+F7\n05Mvi2pZ3gKH37EKGgNQ56yWPEMUG9C10Q6XgfPSIlfXzTJFpA2ptHYoDf/Ti8zd\nBqabLx6qzJw8XHW77aXmsS1PpV3n7vAYXgYKQ8mf6v72HxPxvUqjcSJbKtq4qFxq\nif+/FgABdn5hQMwD7kQ+CzZC+VIFrQQMP6pnDQcoSXgX+EeZeGiditAK1XVGKBFh\nVCzwWIO70zPNeGVfersJGy1ivRARJxIGmq6zrza5ZEe7OwOvL/kP6q9QigJoe+pw\nvwSBc7oq4eRSW4PMfwkOuNvQRPksu/UnvlvSgZVtvlmtT+uEJ+GrBgRQ2uWotRU=\n=YX2v\n-----END PGP SIGNATURE-----\n", "payload": "tree 1059a173194a921a39e3bad4669dd8458d70fa62\nparent c03c213daf5fe3b52c768b4f145e45d8994d87ea\nparent e720f4237a39dba0a4b741812de59d1654b3b253\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1597820064 +0900\ncommitter GitHub <noreply@github.com> 1597820064 +0900\n\nRollup merge of #75038 - rust-lang:Havvy-patch-1, r=steveklabnik\n\nSee also X-Link mem::{swap, take, replace}\n\nSince it's easy to end up at one of these functions when you really wanted the other one, cross link them with descriptions of why you'd want to use them.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/17d3ce457fa3aa29546ace82d7ebb32b3541d5e4", "html_url": "https://github.com/rust-lang/rust/commit/17d3ce457fa3aa29546ace82d7ebb32b3541d5e4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/17d3ce457fa3aa29546ace82d7ebb32b3541d5e4/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c03c213daf5fe3b52c768b4f145e45d8994d87ea", "url": "https://api.github.com/repos/rust-lang/rust/commits/c03c213daf5fe3b52c768b4f145e45d8994d87ea", "html_url": "https://github.com/rust-lang/rust/commit/c03c213daf5fe3b52c768b4f145e45d8994d87ea"}, {"sha": "e720f4237a39dba0a4b741812de59d1654b3b253", "url": "https://api.github.com/repos/rust-lang/rust/commits/e720f4237a39dba0a4b741812de59d1654b3b253", "html_url": "https://github.com/rust-lang/rust/commit/e720f4237a39dba0a4b741812de59d1654b3b253"}], "stats": {"total": 16, "additions": 16, "deletions": 0}, "files": [{"sha": "9107c570a897097bf542773ae5c58c402a020805", "filename": "library/core/src/mem/mod.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/17d3ce457fa3aa29546ace82d7ebb32b3541d5e4/library%2Fcore%2Fsrc%2Fmem%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/17d3ce457fa3aa29546ace82d7ebb32b3541d5e4/library%2Fcore%2Fsrc%2Fmem%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fmem%2Fmod.rs?ref=17d3ce457fa3aa29546ace82d7ebb32b3541d5e4", "patch": "@@ -670,6 +670,9 @@ pub unsafe fn uninitialized<T>() -> T {\n \n /// Swaps the values at two mutable locations, without deinitializing either one.\n ///\n+/// * If you want to swap with a default or dummy value, see [`take`].\n+/// * If you want to swap with a passed value, returning the old value, see [`replace`].\n+///\n /// # Examples\n ///\n /// ```\n@@ -683,6 +686,9 @@ pub unsafe fn uninitialized<T>() -> T {\n /// assert_eq!(42, x);\n /// assert_eq!(5, y);\n /// ```\n+///\n+/// [`replace`]: fn.replace.html\n+/// [`take`]: fn.take.html\n #[inline]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub fn swap<T>(x: &mut T, y: &mut T) {\n@@ -695,6 +701,9 @@ pub fn swap<T>(x: &mut T, y: &mut T) {\n \n /// Replaces `dest` with the default value of `T`, returning the previous `dest` value.\n ///\n+/// * If you want to replace the values of two variables, see [`swap`].\n+/// * If you want to replace with a passed value instead of the default value, see [`replace`].\n+///\n /// # Examples\n ///\n /// A simple example:\n@@ -747,6 +756,8 @@ pub fn swap<T>(x: &mut T, y: &mut T) {\n /// ```\n ///\n /// [`Clone`]: ../../std/clone/trait.Clone.html\n+/// [`replace`]: fn.replace.html\n+/// [`swap`]: fn.swap.html\n #[inline]\n #[stable(feature = \"mem_take\", since = \"1.40.0\")]\n pub fn take<T: Default>(dest: &mut T) -> T {\n@@ -757,6 +768,9 @@ pub fn take<T: Default>(dest: &mut T) -> T {\n ///\n /// Neither value is dropped.\n ///\n+/// * If you want to replace the values of two variables, see [`swap`].\n+/// * If you want to replace with a default value, see [`take`].\n+///\n /// # Examples\n ///\n /// A simple example:\n@@ -810,6 +824,8 @@ pub fn take<T: Default>(dest: &mut T) -> T {\n /// ```\n ///\n /// [`Clone`]: ../../std/clone/trait.Clone.html\n+/// [`swap`]: fn.swap.html\n+/// [`take`]: fn.take.html\n #[inline]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n #[must_use = \"if you don't need the old value, you can just assign the new value directly\"]"}]}