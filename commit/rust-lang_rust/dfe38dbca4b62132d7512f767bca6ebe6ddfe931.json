{"sha": "dfe38dbca4b62132d7512f767bca6ebe6ddfe931", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRmZTM4ZGJjYTRiNjIxMzJkNzUxMmY3NjdiY2E2ZWJlNmRkZmU5MzE=", "commit": {"author": {"name": "Florian Zeitz", "email": "florob@babelmonkeys.de", "date": "2013-11-26T05:15:45Z"}, "committer": {"name": "Florian Zeitz", "email": "florob@babelmonkeys.de", "date": "2013-11-27T22:36:20Z"}, "message": "Fix handling of upper/lowercase, and whitespace", "tree": {"sha": "2b29fb6610970340a22264acf8f5ecf8d872c3f5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2b29fb6610970340a22264acf8f5ecf8d872c3f5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dfe38dbca4b62132d7512f767bca6ebe6ddfe931", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dfe38dbca4b62132d7512f767bca6ebe6ddfe931", "html_url": "https://github.com/rust-lang/rust/commit/dfe38dbca4b62132d7512f767bca6ebe6ddfe931", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dfe38dbca4b62132d7512f767bca6ebe6ddfe931/comments", "author": {"login": "Florob", "id": 133684, "node_id": "MDQ6VXNlcjEzMzY4NA==", "avatar_url": "https://avatars.githubusercontent.com/u/133684?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Florob", "html_url": "https://github.com/Florob", "followers_url": "https://api.github.com/users/Florob/followers", "following_url": "https://api.github.com/users/Florob/following{/other_user}", "gists_url": "https://api.github.com/users/Florob/gists{/gist_id}", "starred_url": "https://api.github.com/users/Florob/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Florob/subscriptions", "organizations_url": "https://api.github.com/users/Florob/orgs", "repos_url": "https://api.github.com/users/Florob/repos", "events_url": "https://api.github.com/users/Florob/events{/privacy}", "received_events_url": "https://api.github.com/users/Florob/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Florob", "id": 133684, "node_id": "MDQ6VXNlcjEzMzY4NA==", "avatar_url": "https://avatars.githubusercontent.com/u/133684?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Florob", "html_url": "https://github.com/Florob", "followers_url": "https://api.github.com/users/Florob/followers", "following_url": "https://api.github.com/users/Florob/following{/other_user}", "gists_url": "https://api.github.com/users/Florob/gists{/gist_id}", "starred_url": "https://api.github.com/users/Florob/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Florob/subscriptions", "organizations_url": "https://api.github.com/users/Florob/orgs", "repos_url": "https://api.github.com/users/Florob/repos", "events_url": "https://api.github.com/users/Florob/events{/privacy}", "received_events_url": "https://api.github.com/users/Florob/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c234614950c8349607f08fab754057dfe047ca0c", "url": "https://api.github.com/repos/rust-lang/rust/commits/c234614950c8349607f08fab754057dfe047ca0c", "html_url": "https://github.com/rust-lang/rust/commit/c234614950c8349607f08fab754057dfe047ca0c"}], "stats": {"total": 718, "additions": 689, "deletions": 29}, "files": [{"sha": "d35263c100f4b400dd4b1eea62fa5e33080e1685", "filename": "src/etc/unicode.py", "status": "modified", "additions": 12, "deletions": 10, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/dfe38dbca4b62132d7512f767bca6ebe6ddfe931/src%2Fetc%2Funicode.py", "raw_url": "https://github.com/rust-lang/rust/raw/dfe38dbca4b62132d7512f767bca6ebe6ddfe931/src%2Fetc%2Funicode.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Funicode.py?ref=dfe38dbca4b62132d7512f767bca6ebe6ddfe931", "patch": "@@ -41,7 +41,7 @@ def load_unicode_data(f):\n             continue\n         [code, name, gencat, combine, bidi,\n          decomp, deci, digit, num, mirror,\n-         old, iso, upcase, lowcsae, titlecase ] = fields\n+         old, iso, upcase, lowcase, titlecase ] = fields\n \n         code = int(code, 16)\n \n@@ -89,11 +89,9 @@ def load_unicode_data(f):\n \n     return (canon_decomp, compat_decomp, gencats, combines)\n \n-\n-def load_derived_core_properties(f):\n+def load_properties(f, interestingprops):\n     fetch(f)\n-    derivedprops = {}\n-    interestingprops = [\"XID_Start\", \"XID_Continue\", \"Alphabetic\"]\n+    props = {}\n     re1 = re.compile(\"^([0-9A-F]+) +; (\\w+)\")\n     re2 = re.compile(\"^([0-9A-F]+)\\.\\.([0-9A-F]+) +; (\\w+)\")\n \n@@ -118,10 +116,10 @@ def load_derived_core_properties(f):\n             continue\n         d_lo = int(d_lo, 16)\n         d_hi = int(d_hi, 16)\n-        if prop not in derivedprops:\n-            derivedprops[prop] = []\n-        derivedprops[prop].append((d_lo, d_hi))\n-    return derivedprops\n+        if prop not in props:\n+            props[prop] = []\n+        props[prop].append((d_lo, d_hi))\n+    return props\n \n def escape_char(c):\n     if c <= 0xff:\n@@ -376,5 +374,9 @@ def emit_decomp_module(f, canon, compat, combine):\n \n emit_decomp_module(rf, canon_decomp, compat_decomp, combines)\n \n-derived = load_derived_core_properties(\"DerivedCoreProperties.txt\")\n+derived = load_properties(\"DerivedCoreProperties.txt\",\n+        [\"XID_Start\", \"XID_Continue\", \"Alphabetic\", \"Lowercase\", \"Uppercase\"])\n emit_property_module(rf, \"derived_property\", derived)\n+\n+props = load_properties(\"PropList.txt\", [\"White_Space\"])\n+emit_property_module(rf, \"property\", props)"}, {"sha": "3019e47c9f93e7e7be7e1486c8c1c62c5ee8f133", "filename": "src/libstd/char.rs", "status": "modified", "additions": 8, "deletions": 10, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/dfe38dbca4b62132d7512f767bca6ebe6ddfe931/src%2Flibstd%2Fchar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dfe38dbca4b62132d7512f767bca6ebe6ddfe931/src%2Flibstd%2Fchar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fchar.rs?ref=dfe38dbca4b62132d7512f767bca6ebe6ddfe931", "patch": "@@ -14,7 +14,7 @@ use cast::transmute;\n use option::{None, Option, Some};\n use iter::{Iterator, range_step};\n use str::StrSlice;\n-use unicode::{derived_property, general_category, decompose};\n+use unicode::{derived_property, property, general_category, decompose};\n use to_str::ToStr;\n use str;\n \n@@ -89,30 +89,28 @@ pub fn is_XID_continue(c: char) -> bool { derived_property::XID_Continue(c) }\n \n ///\n /// Indicates whether a character is in lower case, defined\n-/// in terms of the Unicode General Category 'Ll'\n+/// in terms of the Unicode Derived Core Property 'Lowercase'.\n ///\n #[inline]\n-pub fn is_lowercase(c: char) -> bool { general_category::Ll(c) }\n+pub fn is_lowercase(c: char) -> bool { derived_property::Lowercase(c) }\n \n ///\n /// Indicates whether a character is in upper case, defined\n-/// in terms of the Unicode General Category 'Lu'.\n+/// in terms of the Unicode Derived Core Property 'Uppercase'.\n ///\n #[inline]\n-pub fn is_uppercase(c: char) -> bool { general_category::Lu(c) }\n+pub fn is_uppercase(c: char) -> bool { derived_property::Uppercase(c) }\n \n ///\n /// Indicates whether a character is whitespace. Whitespace is defined in\n-/// terms of the Unicode General Categories 'Zs', 'Zl', 'Zp'\n-/// additional 'Cc'-category control codes in the range [0x09, 0x0d]\n+/// terms of the Unicode Property 'White_Space'.\n ///\n #[inline]\n pub fn is_whitespace(c: char) -> bool {\n+    // As an optimization ASCII whitespace characters are checked separately\n     c == ' '\n         || ('\\x09' <= c && c <= '\\x0d')\n-        || general_category::Zs(c)\n-        || general_category::Zl(c)\n-        || general_category::Zp(c)\n+        || property::White_Space(c)\n }\n \n ///"}, {"sha": "f19ce98ff1a331e440064db208b7ba62e8df8dca", "filename": "src/libstd/unicode.rs", "status": "modified", "additions": 662, "deletions": 0, "changes": 662, "blob_url": "https://github.com/rust-lang/rust/blob/dfe38dbca4b62132d7512f767bca6ebe6ddfe931/src%2Flibstd%2Funicode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dfe38dbca4b62132d7512f767bca6ebe6ddfe931/src%2Flibstd%2Funicode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Funicode.rs?ref=dfe38dbca4b62132d7512f767bca6ebe6ddfe931", "patch": "@@ -4087,6 +4087,640 @@ pub mod derived_property {\n         bsearch_range_table(c, Alphabetic_table)\n     }\n \n+    static Lowercase_table : &'static [(char,char)] = &[\n+        ('\\x61', '\\x7a'), ('\\xaa', '\\xaa'),\n+        ('\\xb5', '\\xb5'), ('\\xba', '\\xba'),\n+        ('\\xdf', '\\xf6'), ('\\xf8', '\\xff'),\n+        ('\\u0101', '\\u0101'), ('\\u0103', '\\u0103'),\n+        ('\\u0105', '\\u0105'), ('\\u0107', '\\u0107'),\n+        ('\\u0109', '\\u0109'), ('\\u010b', '\\u010b'),\n+        ('\\u010d', '\\u010d'), ('\\u010f', '\\u010f'),\n+        ('\\u0111', '\\u0111'), ('\\u0113', '\\u0113'),\n+        ('\\u0115', '\\u0115'), ('\\u0117', '\\u0117'),\n+        ('\\u0119', '\\u0119'), ('\\u011b', '\\u011b'),\n+        ('\\u011d', '\\u011d'), ('\\u011f', '\\u011f'),\n+        ('\\u0121', '\\u0121'), ('\\u0123', '\\u0123'),\n+        ('\\u0125', '\\u0125'), ('\\u0127', '\\u0127'),\n+        ('\\u0129', '\\u0129'), ('\\u012b', '\\u012b'),\n+        ('\\u012d', '\\u012d'), ('\\u012f', '\\u012f'),\n+        ('\\u0131', '\\u0131'), ('\\u0133', '\\u0133'),\n+        ('\\u0135', '\\u0135'), ('\\u0137', '\\u0138'),\n+        ('\\u013a', '\\u013a'), ('\\u013c', '\\u013c'),\n+        ('\\u013e', '\\u013e'), ('\\u0140', '\\u0140'),\n+        ('\\u0142', '\\u0142'), ('\\u0144', '\\u0144'),\n+        ('\\u0146', '\\u0146'), ('\\u0148', '\\u0149'),\n+        ('\\u014b', '\\u014b'), ('\\u014d', '\\u014d'),\n+        ('\\u014f', '\\u014f'), ('\\u0151', '\\u0151'),\n+        ('\\u0153', '\\u0153'), ('\\u0155', '\\u0155'),\n+        ('\\u0157', '\\u0157'), ('\\u0159', '\\u0159'),\n+        ('\\u015b', '\\u015b'), ('\\u015d', '\\u015d'),\n+        ('\\u015f', '\\u015f'), ('\\u0161', '\\u0161'),\n+        ('\\u0163', '\\u0163'), ('\\u0165', '\\u0165'),\n+        ('\\u0167', '\\u0167'), ('\\u0169', '\\u0169'),\n+        ('\\u016b', '\\u016b'), ('\\u016d', '\\u016d'),\n+        ('\\u016f', '\\u016f'), ('\\u0171', '\\u0171'),\n+        ('\\u0173', '\\u0173'), ('\\u0175', '\\u0175'),\n+        ('\\u0177', '\\u0177'), ('\\u017a', '\\u017a'),\n+        ('\\u017c', '\\u017c'), ('\\u017e', '\\u0180'),\n+        ('\\u0183', '\\u0183'), ('\\u0185', '\\u0185'),\n+        ('\\u0188', '\\u0188'), ('\\u018c', '\\u018d'),\n+        ('\\u0192', '\\u0192'), ('\\u0195', '\\u0195'),\n+        ('\\u0199', '\\u019b'), ('\\u019e', '\\u019e'),\n+        ('\\u01a1', '\\u01a1'), ('\\u01a3', '\\u01a3'),\n+        ('\\u01a5', '\\u01a5'), ('\\u01a8', '\\u01a8'),\n+        ('\\u01aa', '\\u01ab'), ('\\u01ad', '\\u01ad'),\n+        ('\\u01b0', '\\u01b0'), ('\\u01b4', '\\u01b4'),\n+        ('\\u01b6', '\\u01b6'), ('\\u01b9', '\\u01ba'),\n+        ('\\u01bd', '\\u01bf'), ('\\u01c6', '\\u01c6'),\n+        ('\\u01c9', '\\u01c9'), ('\\u01cc', '\\u01cc'),\n+        ('\\u01ce', '\\u01ce'), ('\\u01d0', '\\u01d0'),\n+        ('\\u01d2', '\\u01d2'), ('\\u01d4', '\\u01d4'),\n+        ('\\u01d6', '\\u01d6'), ('\\u01d8', '\\u01d8'),\n+        ('\\u01da', '\\u01da'), ('\\u01dc', '\\u01dd'),\n+        ('\\u01df', '\\u01df'), ('\\u01e1', '\\u01e1'),\n+        ('\\u01e3', '\\u01e3'), ('\\u01e5', '\\u01e5'),\n+        ('\\u01e7', '\\u01e7'), ('\\u01e9', '\\u01e9'),\n+        ('\\u01eb', '\\u01eb'), ('\\u01ed', '\\u01ed'),\n+        ('\\u01ef', '\\u01f0'), ('\\u01f3', '\\u01f3'),\n+        ('\\u01f5', '\\u01f5'), ('\\u01f9', '\\u01f9'),\n+        ('\\u01fb', '\\u01fb'), ('\\u01fd', '\\u01fd'),\n+        ('\\u01ff', '\\u01ff'), ('\\u0201', '\\u0201'),\n+        ('\\u0203', '\\u0203'), ('\\u0205', '\\u0205'),\n+        ('\\u0207', '\\u0207'), ('\\u0209', '\\u0209'),\n+        ('\\u020b', '\\u020b'), ('\\u020d', '\\u020d'),\n+        ('\\u020f', '\\u020f'), ('\\u0211', '\\u0211'),\n+        ('\\u0213', '\\u0213'), ('\\u0215', '\\u0215'),\n+        ('\\u0217', '\\u0217'), ('\\u0219', '\\u0219'),\n+        ('\\u021b', '\\u021b'), ('\\u021d', '\\u021d'),\n+        ('\\u021f', '\\u021f'), ('\\u0221', '\\u0221'),\n+        ('\\u0223', '\\u0223'), ('\\u0225', '\\u0225'),\n+        ('\\u0227', '\\u0227'), ('\\u0229', '\\u0229'),\n+        ('\\u022b', '\\u022b'), ('\\u022d', '\\u022d'),\n+        ('\\u022f', '\\u022f'), ('\\u0231', '\\u0231'),\n+        ('\\u0233', '\\u0239'), ('\\u023c', '\\u023c'),\n+        ('\\u023f', '\\u0240'), ('\\u0242', '\\u0242'),\n+        ('\\u0247', '\\u0247'), ('\\u0249', '\\u0249'),\n+        ('\\u024b', '\\u024b'), ('\\u024d', '\\u024d'),\n+        ('\\u024f', '\\u0293'), ('\\u0295', '\\u02af'),\n+        ('\\u02b0', '\\u02b8'), ('\\u02c0', '\\u02c1'),\n+        ('\\u02e0', '\\u02e4'), ('\\u0345', '\\u0345'),\n+        ('\\u0371', '\\u0371'), ('\\u0373', '\\u0373'),\n+        ('\\u0377', '\\u0377'), ('\\u037a', '\\u037a'),\n+        ('\\u037b', '\\u037d'), ('\\u0390', '\\u0390'),\n+        ('\\u03ac', '\\u03ce'), ('\\u03d0', '\\u03d1'),\n+        ('\\u03d5', '\\u03d7'), ('\\u03d9', '\\u03d9'),\n+        ('\\u03db', '\\u03db'), ('\\u03dd', '\\u03dd'),\n+        ('\\u03df', '\\u03df'), ('\\u03e1', '\\u03e1'),\n+        ('\\u03e3', '\\u03e3'), ('\\u03e5', '\\u03e5'),\n+        ('\\u03e7', '\\u03e7'), ('\\u03e9', '\\u03e9'),\n+        ('\\u03eb', '\\u03eb'), ('\\u03ed', '\\u03ed'),\n+        ('\\u03ef', '\\u03f3'), ('\\u03f5', '\\u03f5'),\n+        ('\\u03f8', '\\u03f8'), ('\\u03fb', '\\u03fc'),\n+        ('\\u0430', '\\u045f'), ('\\u0461', '\\u0461'),\n+        ('\\u0463', '\\u0463'), ('\\u0465', '\\u0465'),\n+        ('\\u0467', '\\u0467'), ('\\u0469', '\\u0469'),\n+        ('\\u046b', '\\u046b'), ('\\u046d', '\\u046d'),\n+        ('\\u046f', '\\u046f'), ('\\u0471', '\\u0471'),\n+        ('\\u0473', '\\u0473'), ('\\u0475', '\\u0475'),\n+        ('\\u0477', '\\u0477'), ('\\u0479', '\\u0479'),\n+        ('\\u047b', '\\u047b'), ('\\u047d', '\\u047d'),\n+        ('\\u047f', '\\u047f'), ('\\u0481', '\\u0481'),\n+        ('\\u048b', '\\u048b'), ('\\u048d', '\\u048d'),\n+        ('\\u048f', '\\u048f'), ('\\u0491', '\\u0491'),\n+        ('\\u0493', '\\u0493'), ('\\u0495', '\\u0495'),\n+        ('\\u0497', '\\u0497'), ('\\u0499', '\\u0499'),\n+        ('\\u049b', '\\u049b'), ('\\u049d', '\\u049d'),\n+        ('\\u049f', '\\u049f'), ('\\u04a1', '\\u04a1'),\n+        ('\\u04a3', '\\u04a3'), ('\\u04a5', '\\u04a5'),\n+        ('\\u04a7', '\\u04a7'), ('\\u04a9', '\\u04a9'),\n+        ('\\u04ab', '\\u04ab'), ('\\u04ad', '\\u04ad'),\n+        ('\\u04af', '\\u04af'), ('\\u04b1', '\\u04b1'),\n+        ('\\u04b3', '\\u04b3'), ('\\u04b5', '\\u04b5'),\n+        ('\\u04b7', '\\u04b7'), ('\\u04b9', '\\u04b9'),\n+        ('\\u04bb', '\\u04bb'), ('\\u04bd', '\\u04bd'),\n+        ('\\u04bf', '\\u04bf'), ('\\u04c2', '\\u04c2'),\n+        ('\\u04c4', '\\u04c4'), ('\\u04c6', '\\u04c6'),\n+        ('\\u04c8', '\\u04c8'), ('\\u04ca', '\\u04ca'),\n+        ('\\u04cc', '\\u04cc'), ('\\u04ce', '\\u04cf'),\n+        ('\\u04d1', '\\u04d1'), ('\\u04d3', '\\u04d3'),\n+        ('\\u04d5', '\\u04d5'), ('\\u04d7', '\\u04d7'),\n+        ('\\u04d9', '\\u04d9'), ('\\u04db', '\\u04db'),\n+        ('\\u04dd', '\\u04dd'), ('\\u04df', '\\u04df'),\n+        ('\\u04e1', '\\u04e1'), ('\\u04e3', '\\u04e3'),\n+        ('\\u04e5', '\\u04e5'), ('\\u04e7', '\\u04e7'),\n+        ('\\u04e9', '\\u04e9'), ('\\u04eb', '\\u04eb'),\n+        ('\\u04ed', '\\u04ed'), ('\\u04ef', '\\u04ef'),\n+        ('\\u04f1', '\\u04f1'), ('\\u04f3', '\\u04f3'),\n+        ('\\u04f5', '\\u04f5'), ('\\u04f7', '\\u04f7'),\n+        ('\\u04f9', '\\u04f9'), ('\\u04fb', '\\u04fb'),\n+        ('\\u04fd', '\\u04fd'), ('\\u04ff', '\\u04ff'),\n+        ('\\u0501', '\\u0501'), ('\\u0503', '\\u0503'),\n+        ('\\u0505', '\\u0505'), ('\\u0507', '\\u0507'),\n+        ('\\u0509', '\\u0509'), ('\\u050b', '\\u050b'),\n+        ('\\u050d', '\\u050d'), ('\\u050f', '\\u050f'),\n+        ('\\u0511', '\\u0511'), ('\\u0513', '\\u0513'),\n+        ('\\u0515', '\\u0515'), ('\\u0517', '\\u0517'),\n+        ('\\u0519', '\\u0519'), ('\\u051b', '\\u051b'),\n+        ('\\u051d', '\\u051d'), ('\\u051f', '\\u051f'),\n+        ('\\u0521', '\\u0521'), ('\\u0523', '\\u0523'),\n+        ('\\u0525', '\\u0525'), ('\\u0527', '\\u0527'),\n+        ('\\u0561', '\\u0587'), ('\\u1d00', '\\u1d2b'),\n+        ('\\u1d2c', '\\u1d6a'), ('\\u1d6b', '\\u1d77'),\n+        ('\\u1d78', '\\u1d78'), ('\\u1d79', '\\u1d9a'),\n+        ('\\u1d9b', '\\u1dbf'), ('\\u1e01', '\\u1e01'),\n+        ('\\u1e03', '\\u1e03'), ('\\u1e05', '\\u1e05'),\n+        ('\\u1e07', '\\u1e07'), ('\\u1e09', '\\u1e09'),\n+        ('\\u1e0b', '\\u1e0b'), ('\\u1e0d', '\\u1e0d'),\n+        ('\\u1e0f', '\\u1e0f'), ('\\u1e11', '\\u1e11'),\n+        ('\\u1e13', '\\u1e13'), ('\\u1e15', '\\u1e15'),\n+        ('\\u1e17', '\\u1e17'), ('\\u1e19', '\\u1e19'),\n+        ('\\u1e1b', '\\u1e1b'), ('\\u1e1d', '\\u1e1d'),\n+        ('\\u1e1f', '\\u1e1f'), ('\\u1e21', '\\u1e21'),\n+        ('\\u1e23', '\\u1e23'), ('\\u1e25', '\\u1e25'),\n+        ('\\u1e27', '\\u1e27'), ('\\u1e29', '\\u1e29'),\n+        ('\\u1e2b', '\\u1e2b'), ('\\u1e2d', '\\u1e2d'),\n+        ('\\u1e2f', '\\u1e2f'), ('\\u1e31', '\\u1e31'),\n+        ('\\u1e33', '\\u1e33'), ('\\u1e35', '\\u1e35'),\n+        ('\\u1e37', '\\u1e37'), ('\\u1e39', '\\u1e39'),\n+        ('\\u1e3b', '\\u1e3b'), ('\\u1e3d', '\\u1e3d'),\n+        ('\\u1e3f', '\\u1e3f'), ('\\u1e41', '\\u1e41'),\n+        ('\\u1e43', '\\u1e43'), ('\\u1e45', '\\u1e45'),\n+        ('\\u1e47', '\\u1e47'), ('\\u1e49', '\\u1e49'),\n+        ('\\u1e4b', '\\u1e4b'), ('\\u1e4d', '\\u1e4d'),\n+        ('\\u1e4f', '\\u1e4f'), ('\\u1e51', '\\u1e51'),\n+        ('\\u1e53', '\\u1e53'), ('\\u1e55', '\\u1e55'),\n+        ('\\u1e57', '\\u1e57'), ('\\u1e59', '\\u1e59'),\n+        ('\\u1e5b', '\\u1e5b'), ('\\u1e5d', '\\u1e5d'),\n+        ('\\u1e5f', '\\u1e5f'), ('\\u1e61', '\\u1e61'),\n+        ('\\u1e63', '\\u1e63'), ('\\u1e65', '\\u1e65'),\n+        ('\\u1e67', '\\u1e67'), ('\\u1e69', '\\u1e69'),\n+        ('\\u1e6b', '\\u1e6b'), ('\\u1e6d', '\\u1e6d'),\n+        ('\\u1e6f', '\\u1e6f'), ('\\u1e71', '\\u1e71'),\n+        ('\\u1e73', '\\u1e73'), ('\\u1e75', '\\u1e75'),\n+        ('\\u1e77', '\\u1e77'), ('\\u1e79', '\\u1e79'),\n+        ('\\u1e7b', '\\u1e7b'), ('\\u1e7d', '\\u1e7d'),\n+        ('\\u1e7f', '\\u1e7f'), ('\\u1e81', '\\u1e81'),\n+        ('\\u1e83', '\\u1e83'), ('\\u1e85', '\\u1e85'),\n+        ('\\u1e87', '\\u1e87'), ('\\u1e89', '\\u1e89'),\n+        ('\\u1e8b', '\\u1e8b'), ('\\u1e8d', '\\u1e8d'),\n+        ('\\u1e8f', '\\u1e8f'), ('\\u1e91', '\\u1e91'),\n+        ('\\u1e93', '\\u1e93'), ('\\u1e95', '\\u1e9d'),\n+        ('\\u1e9f', '\\u1e9f'), ('\\u1ea1', '\\u1ea1'),\n+        ('\\u1ea3', '\\u1ea3'), ('\\u1ea5', '\\u1ea5'),\n+        ('\\u1ea7', '\\u1ea7'), ('\\u1ea9', '\\u1ea9'),\n+        ('\\u1eab', '\\u1eab'), ('\\u1ead', '\\u1ead'),\n+        ('\\u1eaf', '\\u1eaf'), ('\\u1eb1', '\\u1eb1'),\n+        ('\\u1eb3', '\\u1eb3'), ('\\u1eb5', '\\u1eb5'),\n+        ('\\u1eb7', '\\u1eb7'), ('\\u1eb9', '\\u1eb9'),\n+        ('\\u1ebb', '\\u1ebb'), ('\\u1ebd', '\\u1ebd'),\n+        ('\\u1ebf', '\\u1ebf'), ('\\u1ec1', '\\u1ec1'),\n+        ('\\u1ec3', '\\u1ec3'), ('\\u1ec5', '\\u1ec5'),\n+        ('\\u1ec7', '\\u1ec7'), ('\\u1ec9', '\\u1ec9'),\n+        ('\\u1ecb', '\\u1ecb'), ('\\u1ecd', '\\u1ecd'),\n+        ('\\u1ecf', '\\u1ecf'), ('\\u1ed1', '\\u1ed1'),\n+        ('\\u1ed3', '\\u1ed3'), ('\\u1ed5', '\\u1ed5'),\n+        ('\\u1ed7', '\\u1ed7'), ('\\u1ed9', '\\u1ed9'),\n+        ('\\u1edb', '\\u1edb'), ('\\u1edd', '\\u1edd'),\n+        ('\\u1edf', '\\u1edf'), ('\\u1ee1', '\\u1ee1'),\n+        ('\\u1ee3', '\\u1ee3'), ('\\u1ee5', '\\u1ee5'),\n+        ('\\u1ee7', '\\u1ee7'), ('\\u1ee9', '\\u1ee9'),\n+        ('\\u1eeb', '\\u1eeb'), ('\\u1eed', '\\u1eed'),\n+        ('\\u1eef', '\\u1eef'), ('\\u1ef1', '\\u1ef1'),\n+        ('\\u1ef3', '\\u1ef3'), ('\\u1ef5', '\\u1ef5'),\n+        ('\\u1ef7', '\\u1ef7'), ('\\u1ef9', '\\u1ef9'),\n+        ('\\u1efb', '\\u1efb'), ('\\u1efd', '\\u1efd'),\n+        ('\\u1eff', '\\u1f07'), ('\\u1f10', '\\u1f15'),\n+        ('\\u1f20', '\\u1f27'), ('\\u1f30', '\\u1f37'),\n+        ('\\u1f40', '\\u1f45'), ('\\u1f50', '\\u1f57'),\n+        ('\\u1f60', '\\u1f67'), ('\\u1f70', '\\u1f7d'),\n+        ('\\u1f80', '\\u1f87'), ('\\u1f90', '\\u1f97'),\n+        ('\\u1fa0', '\\u1fa7'), ('\\u1fb0', '\\u1fb4'),\n+        ('\\u1fb6', '\\u1fb7'), ('\\u1fbe', '\\u1fbe'),\n+        ('\\u1fc2', '\\u1fc4'), ('\\u1fc6', '\\u1fc7'),\n+        ('\\u1fd0', '\\u1fd3'), ('\\u1fd6', '\\u1fd7'),\n+        ('\\u1fe0', '\\u1fe7'), ('\\u1ff2', '\\u1ff4'),\n+        ('\\u1ff6', '\\u1ff7'), ('\\u2071', '\\u2071'),\n+        ('\\u207f', '\\u207f'), ('\\u2090', '\\u209c'),\n+        ('\\u210a', '\\u210a'), ('\\u210e', '\\u210f'),\n+        ('\\u2113', '\\u2113'), ('\\u212f', '\\u212f'),\n+        ('\\u2134', '\\u2134'), ('\\u2139', '\\u2139'),\n+        ('\\u213c', '\\u213d'), ('\\u2146', '\\u2149'),\n+        ('\\u214e', '\\u214e'), ('\\u2170', '\\u217f'),\n+        ('\\u2184', '\\u2184'), ('\\u24d0', '\\u24e9'),\n+        ('\\u2c30', '\\u2c5e'), ('\\u2c61', '\\u2c61'),\n+        ('\\u2c65', '\\u2c66'), ('\\u2c68', '\\u2c68'),\n+        ('\\u2c6a', '\\u2c6a'), ('\\u2c6c', '\\u2c6c'),\n+        ('\\u2c71', '\\u2c71'), ('\\u2c73', '\\u2c74'),\n+        ('\\u2c76', '\\u2c7b'), ('\\u2c7c', '\\u2c7d'),\n+        ('\\u2c81', '\\u2c81'), ('\\u2c83', '\\u2c83'),\n+        ('\\u2c85', '\\u2c85'), ('\\u2c87', '\\u2c87'),\n+        ('\\u2c89', '\\u2c89'), ('\\u2c8b', '\\u2c8b'),\n+        ('\\u2c8d', '\\u2c8d'), ('\\u2c8f', '\\u2c8f'),\n+        ('\\u2c91', '\\u2c91'), ('\\u2c93', '\\u2c93'),\n+        ('\\u2c95', '\\u2c95'), ('\\u2c97', '\\u2c97'),\n+        ('\\u2c99', '\\u2c99'), ('\\u2c9b', '\\u2c9b'),\n+        ('\\u2c9d', '\\u2c9d'), ('\\u2c9f', '\\u2c9f'),\n+        ('\\u2ca1', '\\u2ca1'), ('\\u2ca3', '\\u2ca3'),\n+        ('\\u2ca5', '\\u2ca5'), ('\\u2ca7', '\\u2ca7'),\n+        ('\\u2ca9', '\\u2ca9'), ('\\u2cab', '\\u2cab'),\n+        ('\\u2cad', '\\u2cad'), ('\\u2caf', '\\u2caf'),\n+        ('\\u2cb1', '\\u2cb1'), ('\\u2cb3', '\\u2cb3'),\n+        ('\\u2cb5', '\\u2cb5'), ('\\u2cb7', '\\u2cb7'),\n+        ('\\u2cb9', '\\u2cb9'), ('\\u2cbb', '\\u2cbb'),\n+        ('\\u2cbd', '\\u2cbd'), ('\\u2cbf', '\\u2cbf'),\n+        ('\\u2cc1', '\\u2cc1'), ('\\u2cc3', '\\u2cc3'),\n+        ('\\u2cc5', '\\u2cc5'), ('\\u2cc7', '\\u2cc7'),\n+        ('\\u2cc9', '\\u2cc9'), ('\\u2ccb', '\\u2ccb'),\n+        ('\\u2ccd', '\\u2ccd'), ('\\u2ccf', '\\u2ccf'),\n+        ('\\u2cd1', '\\u2cd1'), ('\\u2cd3', '\\u2cd3'),\n+        ('\\u2cd5', '\\u2cd5'), ('\\u2cd7', '\\u2cd7'),\n+        ('\\u2cd9', '\\u2cd9'), ('\\u2cdb', '\\u2cdb'),\n+        ('\\u2cdd', '\\u2cdd'), ('\\u2cdf', '\\u2cdf'),\n+        ('\\u2ce1', '\\u2ce1'), ('\\u2ce3', '\\u2ce4'),\n+        ('\\u2cec', '\\u2cec'), ('\\u2cee', '\\u2cee'),\n+        ('\\u2cf3', '\\u2cf3'), ('\\u2d00', '\\u2d25'),\n+        ('\\u2d27', '\\u2d27'), ('\\u2d2d', '\\u2d2d'),\n+        ('\\ua641', '\\ua641'), ('\\ua643', '\\ua643'),\n+        ('\\ua645', '\\ua645'), ('\\ua647', '\\ua647'),\n+        ('\\ua649', '\\ua649'), ('\\ua64b', '\\ua64b'),\n+        ('\\ua64d', '\\ua64d'), ('\\ua64f', '\\ua64f'),\n+        ('\\ua651', '\\ua651'), ('\\ua653', '\\ua653'),\n+        ('\\ua655', '\\ua655'), ('\\ua657', '\\ua657'),\n+        ('\\ua659', '\\ua659'), ('\\ua65b', '\\ua65b'),\n+        ('\\ua65d', '\\ua65d'), ('\\ua65f', '\\ua65f'),\n+        ('\\ua661', '\\ua661'), ('\\ua663', '\\ua663'),\n+        ('\\ua665', '\\ua665'), ('\\ua667', '\\ua667'),\n+        ('\\ua669', '\\ua669'), ('\\ua66b', '\\ua66b'),\n+        ('\\ua66d', '\\ua66d'), ('\\ua681', '\\ua681'),\n+        ('\\ua683', '\\ua683'), ('\\ua685', '\\ua685'),\n+        ('\\ua687', '\\ua687'), ('\\ua689', '\\ua689'),\n+        ('\\ua68b', '\\ua68b'), ('\\ua68d', '\\ua68d'),\n+        ('\\ua68f', '\\ua68f'), ('\\ua691', '\\ua691'),\n+        ('\\ua693', '\\ua693'), ('\\ua695', '\\ua695'),\n+        ('\\ua697', '\\ua697'), ('\\ua723', '\\ua723'),\n+        ('\\ua725', '\\ua725'), ('\\ua727', '\\ua727'),\n+        ('\\ua729', '\\ua729'), ('\\ua72b', '\\ua72b'),\n+        ('\\ua72d', '\\ua72d'), ('\\ua72f', '\\ua731'),\n+        ('\\ua733', '\\ua733'), ('\\ua735', '\\ua735'),\n+        ('\\ua737', '\\ua737'), ('\\ua739', '\\ua739'),\n+        ('\\ua73b', '\\ua73b'), ('\\ua73d', '\\ua73d'),\n+        ('\\ua73f', '\\ua73f'), ('\\ua741', '\\ua741'),\n+        ('\\ua743', '\\ua743'), ('\\ua745', '\\ua745'),\n+        ('\\ua747', '\\ua747'), ('\\ua749', '\\ua749'),\n+        ('\\ua74b', '\\ua74b'), ('\\ua74d', '\\ua74d'),\n+        ('\\ua74f', '\\ua74f'), ('\\ua751', '\\ua751'),\n+        ('\\ua753', '\\ua753'), ('\\ua755', '\\ua755'),\n+        ('\\ua757', '\\ua757'), ('\\ua759', '\\ua759'),\n+        ('\\ua75b', '\\ua75b'), ('\\ua75d', '\\ua75d'),\n+        ('\\ua75f', '\\ua75f'), ('\\ua761', '\\ua761'),\n+        ('\\ua763', '\\ua763'), ('\\ua765', '\\ua765'),\n+        ('\\ua767', '\\ua767'), ('\\ua769', '\\ua769'),\n+        ('\\ua76b', '\\ua76b'), ('\\ua76d', '\\ua76d'),\n+        ('\\ua76f', '\\ua76f'), ('\\ua770', '\\ua770'),\n+        ('\\ua771', '\\ua778'), ('\\ua77a', '\\ua77a'),\n+        ('\\ua77c', '\\ua77c'), ('\\ua77f', '\\ua77f'),\n+        ('\\ua781', '\\ua781'), ('\\ua783', '\\ua783'),\n+        ('\\ua785', '\\ua785'), ('\\ua787', '\\ua787'),\n+        ('\\ua78c', '\\ua78c'), ('\\ua78e', '\\ua78e'),\n+        ('\\ua791', '\\ua791'), ('\\ua793', '\\ua793'),\n+        ('\\ua7a1', '\\ua7a1'), ('\\ua7a3', '\\ua7a3'),\n+        ('\\ua7a5', '\\ua7a5'), ('\\ua7a7', '\\ua7a7'),\n+        ('\\ua7a9', '\\ua7a9'), ('\\ua7f8', '\\ua7f9'),\n+        ('\\ua7fa', '\\ua7fa'), ('\\ufb00', '\\ufb06'),\n+        ('\\ufb13', '\\ufb17'), ('\\uff41', '\\uff5a'),\n+        ('\\U00010428', '\\U0001044f'), ('\\U0001d41a', '\\U0001d433'),\n+        ('\\U0001d44e', '\\U0001d454'), ('\\U0001d456', '\\U0001d467'),\n+        ('\\U0001d482', '\\U0001d49b'), ('\\U0001d4b6', '\\U0001d4b9'),\n+        ('\\U0001d4bb', '\\U0001d4bb'), ('\\U0001d4bd', '\\U0001d4c3'),\n+        ('\\U0001d4c5', '\\U0001d4cf'), ('\\U0001d4ea', '\\U0001d503'),\n+        ('\\U0001d51e', '\\U0001d537'), ('\\U0001d552', '\\U0001d56b'),\n+        ('\\U0001d586', '\\U0001d59f'), ('\\U0001d5ba', '\\U0001d5d3'),\n+        ('\\U0001d5ee', '\\U0001d607'), ('\\U0001d622', '\\U0001d63b'),\n+        ('\\U0001d656', '\\U0001d66f'), ('\\U0001d68a', '\\U0001d6a5'),\n+        ('\\U0001d6c2', '\\U0001d6da'), ('\\U0001d6dc', '\\U0001d6e1'),\n+        ('\\U0001d6fc', '\\U0001d714'), ('\\U0001d716', '\\U0001d71b'),\n+        ('\\U0001d736', '\\U0001d74e'), ('\\U0001d750', '\\U0001d755'),\n+        ('\\U0001d770', '\\U0001d788'), ('\\U0001d78a', '\\U0001d78f'),\n+        ('\\U0001d7aa', '\\U0001d7c2'), ('\\U0001d7c4', '\\U0001d7c9'),\n+        ('\\U0001d7cb', '\\U0001d7cb')\n+    ];\n+\n+    pub fn Lowercase(c: char) -> bool {\n+        bsearch_range_table(c, Lowercase_table)\n+    }\n+\n+    static Uppercase_table : &'static [(char,char)] = &[\n+        ('\\x41', '\\x5a'), ('\\xc0', '\\xd6'),\n+        ('\\xd8', '\\xde'), ('\\u0100', '\\u0100'),\n+        ('\\u0102', '\\u0102'), ('\\u0104', '\\u0104'),\n+        ('\\u0106', '\\u0106'), ('\\u0108', '\\u0108'),\n+        ('\\u010a', '\\u010a'), ('\\u010c', '\\u010c'),\n+        ('\\u010e', '\\u010e'), ('\\u0110', '\\u0110'),\n+        ('\\u0112', '\\u0112'), ('\\u0114', '\\u0114'),\n+        ('\\u0116', '\\u0116'), ('\\u0118', '\\u0118'),\n+        ('\\u011a', '\\u011a'), ('\\u011c', '\\u011c'),\n+        ('\\u011e', '\\u011e'), ('\\u0120', '\\u0120'),\n+        ('\\u0122', '\\u0122'), ('\\u0124', '\\u0124'),\n+        ('\\u0126', '\\u0126'), ('\\u0128', '\\u0128'),\n+        ('\\u012a', '\\u012a'), ('\\u012c', '\\u012c'),\n+        ('\\u012e', '\\u012e'), ('\\u0130', '\\u0130'),\n+        ('\\u0132', '\\u0132'), ('\\u0134', '\\u0134'),\n+        ('\\u0136', '\\u0136'), ('\\u0139', '\\u0139'),\n+        ('\\u013b', '\\u013b'), ('\\u013d', '\\u013d'),\n+        ('\\u013f', '\\u013f'), ('\\u0141', '\\u0141'),\n+        ('\\u0143', '\\u0143'), ('\\u0145', '\\u0145'),\n+        ('\\u0147', '\\u0147'), ('\\u014a', '\\u014a'),\n+        ('\\u014c', '\\u014c'), ('\\u014e', '\\u014e'),\n+        ('\\u0150', '\\u0150'), ('\\u0152', '\\u0152'),\n+        ('\\u0154', '\\u0154'), ('\\u0156', '\\u0156'),\n+        ('\\u0158', '\\u0158'), ('\\u015a', '\\u015a'),\n+        ('\\u015c', '\\u015c'), ('\\u015e', '\\u015e'),\n+        ('\\u0160', '\\u0160'), ('\\u0162', '\\u0162'),\n+        ('\\u0164', '\\u0164'), ('\\u0166', '\\u0166'),\n+        ('\\u0168', '\\u0168'), ('\\u016a', '\\u016a'),\n+        ('\\u016c', '\\u016c'), ('\\u016e', '\\u016e'),\n+        ('\\u0170', '\\u0170'), ('\\u0172', '\\u0172'),\n+        ('\\u0174', '\\u0174'), ('\\u0176', '\\u0176'),\n+        ('\\u0178', '\\u0179'), ('\\u017b', '\\u017b'),\n+        ('\\u017d', '\\u017d'), ('\\u0181', '\\u0182'),\n+        ('\\u0184', '\\u0184'), ('\\u0186', '\\u0187'),\n+        ('\\u0189', '\\u018b'), ('\\u018e', '\\u0191'),\n+        ('\\u0193', '\\u0194'), ('\\u0196', '\\u0198'),\n+        ('\\u019c', '\\u019d'), ('\\u019f', '\\u01a0'),\n+        ('\\u01a2', '\\u01a2'), ('\\u01a4', '\\u01a4'),\n+        ('\\u01a6', '\\u01a7'), ('\\u01a9', '\\u01a9'),\n+        ('\\u01ac', '\\u01ac'), ('\\u01ae', '\\u01af'),\n+        ('\\u01b1', '\\u01b3'), ('\\u01b5', '\\u01b5'),\n+        ('\\u01b7', '\\u01b8'), ('\\u01bc', '\\u01bc'),\n+        ('\\u01c4', '\\u01c4'), ('\\u01c7', '\\u01c7'),\n+        ('\\u01ca', '\\u01ca'), ('\\u01cd', '\\u01cd'),\n+        ('\\u01cf', '\\u01cf'), ('\\u01d1', '\\u01d1'),\n+        ('\\u01d3', '\\u01d3'), ('\\u01d5', '\\u01d5'),\n+        ('\\u01d7', '\\u01d7'), ('\\u01d9', '\\u01d9'),\n+        ('\\u01db', '\\u01db'), ('\\u01de', '\\u01de'),\n+        ('\\u01e0', '\\u01e0'), ('\\u01e2', '\\u01e2'),\n+        ('\\u01e4', '\\u01e4'), ('\\u01e6', '\\u01e6'),\n+        ('\\u01e8', '\\u01e8'), ('\\u01ea', '\\u01ea'),\n+        ('\\u01ec', '\\u01ec'), ('\\u01ee', '\\u01ee'),\n+        ('\\u01f1', '\\u01f1'), ('\\u01f4', '\\u01f4'),\n+        ('\\u01f6', '\\u01f8'), ('\\u01fa', '\\u01fa'),\n+        ('\\u01fc', '\\u01fc'), ('\\u01fe', '\\u01fe'),\n+        ('\\u0200', '\\u0200'), ('\\u0202', '\\u0202'),\n+        ('\\u0204', '\\u0204'), ('\\u0206', '\\u0206'),\n+        ('\\u0208', '\\u0208'), ('\\u020a', '\\u020a'),\n+        ('\\u020c', '\\u020c'), ('\\u020e', '\\u020e'),\n+        ('\\u0210', '\\u0210'), ('\\u0212', '\\u0212'),\n+        ('\\u0214', '\\u0214'), ('\\u0216', '\\u0216'),\n+        ('\\u0218', '\\u0218'), ('\\u021a', '\\u021a'),\n+        ('\\u021c', '\\u021c'), ('\\u021e', '\\u021e'),\n+        ('\\u0220', '\\u0220'), ('\\u0222', '\\u0222'),\n+        ('\\u0224', '\\u0224'), ('\\u0226', '\\u0226'),\n+        ('\\u0228', '\\u0228'), ('\\u022a', '\\u022a'),\n+        ('\\u022c', '\\u022c'), ('\\u022e', '\\u022e'),\n+        ('\\u0230', '\\u0230'), ('\\u0232', '\\u0232'),\n+        ('\\u023a', '\\u023b'), ('\\u023d', '\\u023e'),\n+        ('\\u0241', '\\u0241'), ('\\u0243', '\\u0246'),\n+        ('\\u0248', '\\u0248'), ('\\u024a', '\\u024a'),\n+        ('\\u024c', '\\u024c'), ('\\u024e', '\\u024e'),\n+        ('\\u0370', '\\u0370'), ('\\u0372', '\\u0372'),\n+        ('\\u0376', '\\u0376'), ('\\u0386', '\\u0386'),\n+        ('\\u0388', '\\u038a'), ('\\u038c', '\\u038c'),\n+        ('\\u038e', '\\u038f'), ('\\u0391', '\\u03a1'),\n+        ('\\u03a3', '\\u03ab'), ('\\u03cf', '\\u03cf'),\n+        ('\\u03d2', '\\u03d4'), ('\\u03d8', '\\u03d8'),\n+        ('\\u03da', '\\u03da'), ('\\u03dc', '\\u03dc'),\n+        ('\\u03de', '\\u03de'), ('\\u03e0', '\\u03e0'),\n+        ('\\u03e2', '\\u03e2'), ('\\u03e4', '\\u03e4'),\n+        ('\\u03e6', '\\u03e6'), ('\\u03e8', '\\u03e8'),\n+        ('\\u03ea', '\\u03ea'), ('\\u03ec', '\\u03ec'),\n+        ('\\u03ee', '\\u03ee'), ('\\u03f4', '\\u03f4'),\n+        ('\\u03f7', '\\u03f7'), ('\\u03f9', '\\u03fa'),\n+        ('\\u03fd', '\\u042f'), ('\\u0460', '\\u0460'),\n+        ('\\u0462', '\\u0462'), ('\\u0464', '\\u0464'),\n+        ('\\u0466', '\\u0466'), ('\\u0468', '\\u0468'),\n+        ('\\u046a', '\\u046a'), ('\\u046c', '\\u046c'),\n+        ('\\u046e', '\\u046e'), ('\\u0470', '\\u0470'),\n+        ('\\u0472', '\\u0472'), ('\\u0474', '\\u0474'),\n+        ('\\u0476', '\\u0476'), ('\\u0478', '\\u0478'),\n+        ('\\u047a', '\\u047a'), ('\\u047c', '\\u047c'),\n+        ('\\u047e', '\\u047e'), ('\\u0480', '\\u0480'),\n+        ('\\u048a', '\\u048a'), ('\\u048c', '\\u048c'),\n+        ('\\u048e', '\\u048e'), ('\\u0490', '\\u0490'),\n+        ('\\u0492', '\\u0492'), ('\\u0494', '\\u0494'),\n+        ('\\u0496', '\\u0496'), ('\\u0498', '\\u0498'),\n+        ('\\u049a', '\\u049a'), ('\\u049c', '\\u049c'),\n+        ('\\u049e', '\\u049e'), ('\\u04a0', '\\u04a0'),\n+        ('\\u04a2', '\\u04a2'), ('\\u04a4', '\\u04a4'),\n+        ('\\u04a6', '\\u04a6'), ('\\u04a8', '\\u04a8'),\n+        ('\\u04aa', '\\u04aa'), ('\\u04ac', '\\u04ac'),\n+        ('\\u04ae', '\\u04ae'), ('\\u04b0', '\\u04b0'),\n+        ('\\u04b2', '\\u04b2'), ('\\u04b4', '\\u04b4'),\n+        ('\\u04b6', '\\u04b6'), ('\\u04b8', '\\u04b8'),\n+        ('\\u04ba', '\\u04ba'), ('\\u04bc', '\\u04bc'),\n+        ('\\u04be', '\\u04be'), ('\\u04c0', '\\u04c1'),\n+        ('\\u04c3', '\\u04c3'), ('\\u04c5', '\\u04c5'),\n+        ('\\u04c7', '\\u04c7'), ('\\u04c9', '\\u04c9'),\n+        ('\\u04cb', '\\u04cb'), ('\\u04cd', '\\u04cd'),\n+        ('\\u04d0', '\\u04d0'), ('\\u04d2', '\\u04d2'),\n+        ('\\u04d4', '\\u04d4'), ('\\u04d6', '\\u04d6'),\n+        ('\\u04d8', '\\u04d8'), ('\\u04da', '\\u04da'),\n+        ('\\u04dc', '\\u04dc'), ('\\u04de', '\\u04de'),\n+        ('\\u04e0', '\\u04e0'), ('\\u04e2', '\\u04e2'),\n+        ('\\u04e4', '\\u04e4'), ('\\u04e6', '\\u04e6'),\n+        ('\\u04e8', '\\u04e8'), ('\\u04ea', '\\u04ea'),\n+        ('\\u04ec', '\\u04ec'), ('\\u04ee', '\\u04ee'),\n+        ('\\u04f0', '\\u04f0'), ('\\u04f2', '\\u04f2'),\n+        ('\\u04f4', '\\u04f4'), ('\\u04f6', '\\u04f6'),\n+        ('\\u04f8', '\\u04f8'), ('\\u04fa', '\\u04fa'),\n+        ('\\u04fc', '\\u04fc'), ('\\u04fe', '\\u04fe'),\n+        ('\\u0500', '\\u0500'), ('\\u0502', '\\u0502'),\n+        ('\\u0504', '\\u0504'), ('\\u0506', '\\u0506'),\n+        ('\\u0508', '\\u0508'), ('\\u050a', '\\u050a'),\n+        ('\\u050c', '\\u050c'), ('\\u050e', '\\u050e'),\n+        ('\\u0510', '\\u0510'), ('\\u0512', '\\u0512'),\n+        ('\\u0514', '\\u0514'), ('\\u0516', '\\u0516'),\n+        ('\\u0518', '\\u0518'), ('\\u051a', '\\u051a'),\n+        ('\\u051c', '\\u051c'), ('\\u051e', '\\u051e'),\n+        ('\\u0520', '\\u0520'), ('\\u0522', '\\u0522'),\n+        ('\\u0524', '\\u0524'), ('\\u0526', '\\u0526'),\n+        ('\\u0531', '\\u0556'), ('\\u10a0', '\\u10c5'),\n+        ('\\u10c7', '\\u10c7'), ('\\u10cd', '\\u10cd'),\n+        ('\\u1e00', '\\u1e00'), ('\\u1e02', '\\u1e02'),\n+        ('\\u1e04', '\\u1e04'), ('\\u1e06', '\\u1e06'),\n+        ('\\u1e08', '\\u1e08'), ('\\u1e0a', '\\u1e0a'),\n+        ('\\u1e0c', '\\u1e0c'), ('\\u1e0e', '\\u1e0e'),\n+        ('\\u1e10', '\\u1e10'), ('\\u1e12', '\\u1e12'),\n+        ('\\u1e14', '\\u1e14'), ('\\u1e16', '\\u1e16'),\n+        ('\\u1e18', '\\u1e18'), ('\\u1e1a', '\\u1e1a'),\n+        ('\\u1e1c', '\\u1e1c'), ('\\u1e1e', '\\u1e1e'),\n+        ('\\u1e20', '\\u1e20'), ('\\u1e22', '\\u1e22'),\n+        ('\\u1e24', '\\u1e24'), ('\\u1e26', '\\u1e26'),\n+        ('\\u1e28', '\\u1e28'), ('\\u1e2a', '\\u1e2a'),\n+        ('\\u1e2c', '\\u1e2c'), ('\\u1e2e', '\\u1e2e'),\n+        ('\\u1e30', '\\u1e30'), ('\\u1e32', '\\u1e32'),\n+        ('\\u1e34', '\\u1e34'), ('\\u1e36', '\\u1e36'),\n+        ('\\u1e38', '\\u1e38'), ('\\u1e3a', '\\u1e3a'),\n+        ('\\u1e3c', '\\u1e3c'), ('\\u1e3e', '\\u1e3e'),\n+        ('\\u1e40', '\\u1e40'), ('\\u1e42', '\\u1e42'),\n+        ('\\u1e44', '\\u1e44'), ('\\u1e46', '\\u1e46'),\n+        ('\\u1e48', '\\u1e48'), ('\\u1e4a', '\\u1e4a'),\n+        ('\\u1e4c', '\\u1e4c'), ('\\u1e4e', '\\u1e4e'),\n+        ('\\u1e50', '\\u1e50'), ('\\u1e52', '\\u1e52'),\n+        ('\\u1e54', '\\u1e54'), ('\\u1e56', '\\u1e56'),\n+        ('\\u1e58', '\\u1e58'), ('\\u1e5a', '\\u1e5a'),\n+        ('\\u1e5c', '\\u1e5c'), ('\\u1e5e', '\\u1e5e'),\n+        ('\\u1e60', '\\u1e60'), ('\\u1e62', '\\u1e62'),\n+        ('\\u1e64', '\\u1e64'), ('\\u1e66', '\\u1e66'),\n+        ('\\u1e68', '\\u1e68'), ('\\u1e6a', '\\u1e6a'),\n+        ('\\u1e6c', '\\u1e6c'), ('\\u1e6e', '\\u1e6e'),\n+        ('\\u1e70', '\\u1e70'), ('\\u1e72', '\\u1e72'),\n+        ('\\u1e74', '\\u1e74'), ('\\u1e76', '\\u1e76'),\n+        ('\\u1e78', '\\u1e78'), ('\\u1e7a', '\\u1e7a'),\n+        ('\\u1e7c', '\\u1e7c'), ('\\u1e7e', '\\u1e7e'),\n+        ('\\u1e80', '\\u1e80'), ('\\u1e82', '\\u1e82'),\n+        ('\\u1e84', '\\u1e84'), ('\\u1e86', '\\u1e86'),\n+        ('\\u1e88', '\\u1e88'), ('\\u1e8a', '\\u1e8a'),\n+        ('\\u1e8c', '\\u1e8c'), ('\\u1e8e', '\\u1e8e'),\n+        ('\\u1e90', '\\u1e90'), ('\\u1e92', '\\u1e92'),\n+        ('\\u1e94', '\\u1e94'), ('\\u1e9e', '\\u1e9e'),\n+        ('\\u1ea0', '\\u1ea0'), ('\\u1ea2', '\\u1ea2'),\n+        ('\\u1ea4', '\\u1ea4'), ('\\u1ea6', '\\u1ea6'),\n+        ('\\u1ea8', '\\u1ea8'), ('\\u1eaa', '\\u1eaa'),\n+        ('\\u1eac', '\\u1eac'), ('\\u1eae', '\\u1eae'),\n+        ('\\u1eb0', '\\u1eb0'), ('\\u1eb2', '\\u1eb2'),\n+        ('\\u1eb4', '\\u1eb4'), ('\\u1eb6', '\\u1eb6'),\n+        ('\\u1eb8', '\\u1eb8'), ('\\u1eba', '\\u1eba'),\n+        ('\\u1ebc', '\\u1ebc'), ('\\u1ebe', '\\u1ebe'),\n+        ('\\u1ec0', '\\u1ec0'), ('\\u1ec2', '\\u1ec2'),\n+        ('\\u1ec4', '\\u1ec4'), ('\\u1ec6', '\\u1ec6'),\n+        ('\\u1ec8', '\\u1ec8'), ('\\u1eca', '\\u1eca'),\n+        ('\\u1ecc', '\\u1ecc'), ('\\u1ece', '\\u1ece'),\n+        ('\\u1ed0', '\\u1ed0'), ('\\u1ed2', '\\u1ed2'),\n+        ('\\u1ed4', '\\u1ed4'), ('\\u1ed6', '\\u1ed6'),\n+        ('\\u1ed8', '\\u1ed8'), ('\\u1eda', '\\u1eda'),\n+        ('\\u1edc', '\\u1edc'), ('\\u1ede', '\\u1ede'),\n+        ('\\u1ee0', '\\u1ee0'), ('\\u1ee2', '\\u1ee2'),\n+        ('\\u1ee4', '\\u1ee4'), ('\\u1ee6', '\\u1ee6'),\n+        ('\\u1ee8', '\\u1ee8'), ('\\u1eea', '\\u1eea'),\n+        ('\\u1eec', '\\u1eec'), ('\\u1eee', '\\u1eee'),\n+        ('\\u1ef0', '\\u1ef0'), ('\\u1ef2', '\\u1ef2'),\n+        ('\\u1ef4', '\\u1ef4'), ('\\u1ef6', '\\u1ef6'),\n+        ('\\u1ef8', '\\u1ef8'), ('\\u1efa', '\\u1efa'),\n+        ('\\u1efc', '\\u1efc'), ('\\u1efe', '\\u1efe'),\n+        ('\\u1f08', '\\u1f0f'), ('\\u1f18', '\\u1f1d'),\n+        ('\\u1f28', '\\u1f2f'), ('\\u1f38', '\\u1f3f'),\n+        ('\\u1f48', '\\u1f4d'), ('\\u1f59', '\\u1f59'),\n+        ('\\u1f5b', '\\u1f5b'), ('\\u1f5d', '\\u1f5d'),\n+        ('\\u1f5f', '\\u1f5f'), ('\\u1f68', '\\u1f6f'),\n+        ('\\u1fb8', '\\u1fbb'), ('\\u1fc8', '\\u1fcb'),\n+        ('\\u1fd8', '\\u1fdb'), ('\\u1fe8', '\\u1fec'),\n+        ('\\u1ff8', '\\u1ffb'), ('\\u2102', '\\u2102'),\n+        ('\\u2107', '\\u2107'), ('\\u210b', '\\u210d'),\n+        ('\\u2110', '\\u2112'), ('\\u2115', '\\u2115'),\n+        ('\\u2119', '\\u211d'), ('\\u2124', '\\u2124'),\n+        ('\\u2126', '\\u2126'), ('\\u2128', '\\u2128'),\n+        ('\\u212a', '\\u212d'), ('\\u2130', '\\u2133'),\n+        ('\\u213e', '\\u213f'), ('\\u2145', '\\u2145'),\n+        ('\\u2160', '\\u216f'), ('\\u2183', '\\u2183'),\n+        ('\\u24b6', '\\u24cf'), ('\\u2c00', '\\u2c2e'),\n+        ('\\u2c60', '\\u2c60'), ('\\u2c62', '\\u2c64'),\n+        ('\\u2c67', '\\u2c67'), ('\\u2c69', '\\u2c69'),\n+        ('\\u2c6b', '\\u2c6b'), ('\\u2c6d', '\\u2c70'),\n+        ('\\u2c72', '\\u2c72'), ('\\u2c75', '\\u2c75'),\n+        ('\\u2c7e', '\\u2c80'), ('\\u2c82', '\\u2c82'),\n+        ('\\u2c84', '\\u2c84'), ('\\u2c86', '\\u2c86'),\n+        ('\\u2c88', '\\u2c88'), ('\\u2c8a', '\\u2c8a'),\n+        ('\\u2c8c', '\\u2c8c'), ('\\u2c8e', '\\u2c8e'),\n+        ('\\u2c90', '\\u2c90'), ('\\u2c92', '\\u2c92'),\n+        ('\\u2c94', '\\u2c94'), ('\\u2c96', '\\u2c96'),\n+        ('\\u2c98', '\\u2c98'), ('\\u2c9a', '\\u2c9a'),\n+        ('\\u2c9c', '\\u2c9c'), ('\\u2c9e', '\\u2c9e'),\n+        ('\\u2ca0', '\\u2ca0'), ('\\u2ca2', '\\u2ca2'),\n+        ('\\u2ca4', '\\u2ca4'), ('\\u2ca6', '\\u2ca6'),\n+        ('\\u2ca8', '\\u2ca8'), ('\\u2caa', '\\u2caa'),\n+        ('\\u2cac', '\\u2cac'), ('\\u2cae', '\\u2cae'),\n+        ('\\u2cb0', '\\u2cb0'), ('\\u2cb2', '\\u2cb2'),\n+        ('\\u2cb4', '\\u2cb4'), ('\\u2cb6', '\\u2cb6'),\n+        ('\\u2cb8', '\\u2cb8'), ('\\u2cba', '\\u2cba'),\n+        ('\\u2cbc', '\\u2cbc'), ('\\u2cbe', '\\u2cbe'),\n+        ('\\u2cc0', '\\u2cc0'), ('\\u2cc2', '\\u2cc2'),\n+        ('\\u2cc4', '\\u2cc4'), ('\\u2cc6', '\\u2cc6'),\n+        ('\\u2cc8', '\\u2cc8'), ('\\u2cca', '\\u2cca'),\n+        ('\\u2ccc', '\\u2ccc'), ('\\u2cce', '\\u2cce'),\n+        ('\\u2cd0', '\\u2cd0'), ('\\u2cd2', '\\u2cd2'),\n+        ('\\u2cd4', '\\u2cd4'), ('\\u2cd6', '\\u2cd6'),\n+        ('\\u2cd8', '\\u2cd8'), ('\\u2cda', '\\u2cda'),\n+        ('\\u2cdc', '\\u2cdc'), ('\\u2cde', '\\u2cde'),\n+        ('\\u2ce0', '\\u2ce0'), ('\\u2ce2', '\\u2ce2'),\n+        ('\\u2ceb', '\\u2ceb'), ('\\u2ced', '\\u2ced'),\n+        ('\\u2cf2', '\\u2cf2'), ('\\ua640', '\\ua640'),\n+        ('\\ua642', '\\ua642'), ('\\ua644', '\\ua644'),\n+        ('\\ua646', '\\ua646'), ('\\ua648', '\\ua648'),\n+        ('\\ua64a', '\\ua64a'), ('\\ua64c', '\\ua64c'),\n+        ('\\ua64e', '\\ua64e'), ('\\ua650', '\\ua650'),\n+        ('\\ua652', '\\ua652'), ('\\ua654', '\\ua654'),\n+        ('\\ua656', '\\ua656'), ('\\ua658', '\\ua658'),\n+        ('\\ua65a', '\\ua65a'), ('\\ua65c', '\\ua65c'),\n+        ('\\ua65e', '\\ua65e'), ('\\ua660', '\\ua660'),\n+        ('\\ua662', '\\ua662'), ('\\ua664', '\\ua664'),\n+        ('\\ua666', '\\ua666'), ('\\ua668', '\\ua668'),\n+        ('\\ua66a', '\\ua66a'), ('\\ua66c', '\\ua66c'),\n+        ('\\ua680', '\\ua680'), ('\\ua682', '\\ua682'),\n+        ('\\ua684', '\\ua684'), ('\\ua686', '\\ua686'),\n+        ('\\ua688', '\\ua688'), ('\\ua68a', '\\ua68a'),\n+        ('\\ua68c', '\\ua68c'), ('\\ua68e', '\\ua68e'),\n+        ('\\ua690', '\\ua690'), ('\\ua692', '\\ua692'),\n+        ('\\ua694', '\\ua694'), ('\\ua696', '\\ua696'),\n+        ('\\ua722', '\\ua722'), ('\\ua724', '\\ua724'),\n+        ('\\ua726', '\\ua726'), ('\\ua728', '\\ua728'),\n+        ('\\ua72a', '\\ua72a'), ('\\ua72c', '\\ua72c'),\n+        ('\\ua72e', '\\ua72e'), ('\\ua732', '\\ua732'),\n+        ('\\ua734', '\\ua734'), ('\\ua736', '\\ua736'),\n+        ('\\ua738', '\\ua738'), ('\\ua73a', '\\ua73a'),\n+        ('\\ua73c', '\\ua73c'), ('\\ua73e', '\\ua73e'),\n+        ('\\ua740', '\\ua740'), ('\\ua742', '\\ua742'),\n+        ('\\ua744', '\\ua744'), ('\\ua746', '\\ua746'),\n+        ('\\ua748', '\\ua748'), ('\\ua74a', '\\ua74a'),\n+        ('\\ua74c', '\\ua74c'), ('\\ua74e', '\\ua74e'),\n+        ('\\ua750', '\\ua750'), ('\\ua752', '\\ua752'),\n+        ('\\ua754', '\\ua754'), ('\\ua756', '\\ua756'),\n+        ('\\ua758', '\\ua758'), ('\\ua75a', '\\ua75a'),\n+        ('\\ua75c', '\\ua75c'), ('\\ua75e', '\\ua75e'),\n+        ('\\ua760', '\\ua760'), ('\\ua762', '\\ua762'),\n+        ('\\ua764', '\\ua764'), ('\\ua766', '\\ua766'),\n+        ('\\ua768', '\\ua768'), ('\\ua76a', '\\ua76a'),\n+        ('\\ua76c', '\\ua76c'), ('\\ua76e', '\\ua76e'),\n+        ('\\ua779', '\\ua779'), ('\\ua77b', '\\ua77b'),\n+        ('\\ua77d', '\\ua77e'), ('\\ua780', '\\ua780'),\n+        ('\\ua782', '\\ua782'), ('\\ua784', '\\ua784'),\n+        ('\\ua786', '\\ua786'), ('\\ua78b', '\\ua78b'),\n+        ('\\ua78d', '\\ua78d'), ('\\ua790', '\\ua790'),\n+        ('\\ua792', '\\ua792'), ('\\ua7a0', '\\ua7a0'),\n+        ('\\ua7a2', '\\ua7a2'), ('\\ua7a4', '\\ua7a4'),\n+        ('\\ua7a6', '\\ua7a6'), ('\\ua7a8', '\\ua7a8'),\n+        ('\\ua7aa', '\\ua7aa'), ('\\uff21', '\\uff3a'),\n+        ('\\U00010400', '\\U00010427'), ('\\U0001d400', '\\U0001d419'),\n+        ('\\U0001d434', '\\U0001d44d'), ('\\U0001d468', '\\U0001d481'),\n+        ('\\U0001d49c', '\\U0001d49c'), ('\\U0001d49e', '\\U0001d49f'),\n+        ('\\U0001d4a2', '\\U0001d4a2'), ('\\U0001d4a5', '\\U0001d4a6'),\n+        ('\\U0001d4a9', '\\U0001d4ac'), ('\\U0001d4ae', '\\U0001d4b5'),\n+        ('\\U0001d4d0', '\\U0001d4e9'), ('\\U0001d504', '\\U0001d505'),\n+        ('\\U0001d507', '\\U0001d50a'), ('\\U0001d50d', '\\U0001d514'),\n+        ('\\U0001d516', '\\U0001d51c'), ('\\U0001d538', '\\U0001d539'),\n+        ('\\U0001d53b', '\\U0001d53e'), ('\\U0001d540', '\\U0001d544'),\n+        ('\\U0001d546', '\\U0001d546'), ('\\U0001d54a', '\\U0001d550'),\n+        ('\\U0001d56c', '\\U0001d585'), ('\\U0001d5a0', '\\U0001d5b9'),\n+        ('\\U0001d5d4', '\\U0001d5ed'), ('\\U0001d608', '\\U0001d621'),\n+        ('\\U0001d63c', '\\U0001d655'), ('\\U0001d670', '\\U0001d689'),\n+        ('\\U0001d6a8', '\\U0001d6c0'), ('\\U0001d6e2', '\\U0001d6fa'),\n+        ('\\U0001d71c', '\\U0001d734'), ('\\U0001d756', '\\U0001d76e'),\n+        ('\\U0001d790', '\\U0001d7a8'), ('\\U0001d7ca', '\\U0001d7ca')\n+    ];\n+\n+    pub fn Uppercase(c: char) -> bool {\n+        bsearch_range_table(c, Uppercase_table)\n+    }\n+\n     static XID_Continue_table : &'static [(char,char)] = &[\n         ('\\x30', '\\x39'), ('\\x41', '\\x5a'),\n         ('\\x5f', '\\x5f'), ('\\x61', '\\x7a'),\n@@ -4856,3 +5490,31 @@ pub mod derived_property {\n     }\n \n }\n+pub mod property {\n+\n+    fn bsearch_range_table(c: char, r: &'static [(char,char)]) -> bool {\n+        use cmp::{Equal, Less, Greater};\n+        use vec::ImmutableVector;\n+        use option::None;\n+        r.bsearch(|&(lo,hi)| {\n+            if lo <= c && c <= hi { Equal }\n+            else if hi < c { Less }\n+            else { Greater }\n+        }) != None\n+    }\n+\n+\n+    static White_Space_table : &'static [(char,char)] = &[\n+        ('\\x09', '\\x0d'), ('\\x20', '\\x20'),\n+        ('\\x85', '\\x85'), ('\\xa0', '\\xa0'),\n+        ('\\u1680', '\\u1680'), ('\\u2000', '\\u200a'),\n+        ('\\u2028', '\\u2028'), ('\\u2029', '\\u2029'),\n+        ('\\u202f', '\\u202f'), ('\\u205f', '\\u205f'),\n+        ('\\u3000', '\\u3000')\n+    ];\n+\n+    pub fn White_Space(c: char) -> bool {\n+        bsearch_range_table(c, White_Space_table)\n+    }\n+\n+}"}, {"sha": "15e6e52e3baf324dde31be4ff64a960b37bdde35", "filename": "src/test/pretty/block-comment-wchar.pp", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/dfe38dbca4b62132d7512f767bca6ebe6ddfe931/src%2Ftest%2Fpretty%2Fblock-comment-wchar.pp", "raw_url": "https://github.com/rust-lang/rust/raw/dfe38dbca4b62132d7512f767bca6ebe6ddfe931/src%2Ftest%2Fpretty%2Fblock-comment-wchar.pp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fpretty%2Fblock-comment-wchar.pp?ref=dfe38dbca4b62132d7512f767bca6ebe6ddfe931", "patch": "@@ -51,7 +51,7 @@\n       CR4+2:                         (should align)\n     */\n     /*\n-    // (NEL deliberately omitted)\n+      NEL4+2:                        (should align)\n     */\n     /*\n       Ogham Space Mark 4+2:          (should align)\n@@ -103,11 +103,10 @@\n fn main() {\n     // Taken from http://www.unicode.org/Public/UNIDATA/PropList.txt\n     let chars =\n-        ['\\x0A', '\\x0B', '\\x0C', '\\x0D', '\\x20',\n-         // '\\x85', // for some reason Rust thinks NEL isn't whitespace\n-         '\\xA0', '\\u1680', '\\u2000', '\\u2001', '\\u2002', '\\u2003', '\\u2004',\n-         '\\u2005', '\\u2006', '\\u2007', '\\u2008', '\\u2009', '\\u200A', '\\u2028',\n-         '\\u2029', '\\u202F', '\\u205F', '\\u3000'];\n+        ['\\x0A', '\\x0B', '\\x0C', '\\x0D', '\\x20', '\\x85', '\\xA0', '\\u1680',\n+         '\\u2000', '\\u2001', '\\u2002', '\\u2003', '\\u2004', '\\u2005', '\\u2006',\n+         '\\u2007', '\\u2008', '\\u2009', '\\u200A', '\\u2028', '\\u2029', '\\u202F',\n+         '\\u205F', '\\u3000'];\n     for c in chars.iter() {\n         let ws = c.is_whitespace();\n         println!(\"{:?} {:?}\" , c , ws);"}, {"sha": "98b9fd0507799fc4d0c0284fcf514aa12eb52b9d", "filename": "src/test/pretty/block-comment-wchar.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/dfe38dbca4b62132d7512f767bca6ebe6ddfe931/src%2Ftest%2Fpretty%2Fblock-comment-wchar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dfe38dbca4b62132d7512f767bca6ebe6ddfe931/src%2Ftest%2Fpretty%2Fblock-comment-wchar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fpretty%2Fblock-comment-wchar.rs?ref=dfe38dbca4b62132d7512f767bca6ebe6ddfe931", "patch": "@@ -51,7 +51,7 @@ fn f() {\n \r\r\r\r  CR4+2:                         (should align)\n     */\n     /*\n-    // (NEL deliberately omitted)\n+\u0085\u0085\u0085\u0085  NEL4+2:                        (should align)\n     */\n     /*\n \u1680\u1680\u1680\u1680  Ogham Space Mark 4+2:          (should align)\n@@ -97,8 +97,7 @@ fn f() {\n fn main() {\n     // Taken from http://www.unicode.org/Public/UNIDATA/PropList.txt\n     let chars =\n-        ['\\x0A', '\\x0B', '\\x0C', '\\x0D', '\\x20',\n-         // '\\x85', // for some reason Rust thinks NEL isn't whitespace\n+        ['\\x0A', '\\x0B', '\\x0C', '\\x0D', '\\x20', '\\x85',\n          '\\xA0', '\\u1680', '\\u2000', '\\u2001', '\\u2002', '\\u2003',\n          '\\u2004', '\\u2005', '\\u2006', '\\u2007', '\\u2008', '\\u2009', '\\u200A',\n          '\\u2028', '\\u2029', '\\u202F', '\\u205F', '\\u3000'];"}]}