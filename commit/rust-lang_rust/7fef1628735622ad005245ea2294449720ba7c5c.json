{"sha": "7fef1628735622ad005245ea2294449720ba7c5c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdmZWYxNjI4NzM1NjIyYWQwMDUyNDVlYTIyOTQ0NDk3MjBiYTdjNWM=", "commit": {"author": {"name": "Nick Hamann", "email": "nick@wabbo.org", "date": "2016-05-18T05:02:04Z"}, "committer": {"name": "Nick Hamann", "email": "nick@wabbo.org", "date": "2016-05-18T06:50:21Z"}, "message": "Only print parameters with elided lifetimes in elision error messages.\n\nWhen displaying the function parameters for a lifetime elision error message,\nthis changes it to first filter out the parameters that don't have elided\nlifetimes.\n\nFixes #30255.", "tree": {"sha": "ed567d9c8b1fded86268c913cf9cdc75431512af", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ed567d9c8b1fded86268c913cf9cdc75431512af"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7fef1628735622ad005245ea2294449720ba7c5c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7fef1628735622ad005245ea2294449720ba7c5c", "html_url": "https://github.com/rust-lang/rust/commit/7fef1628735622ad005245ea2294449720ba7c5c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7fef1628735622ad005245ea2294449720ba7c5c/comments", "author": null, "committer": null, "parents": [{"sha": "0667ae93fb72eb25594258e55de9b4ae8f9f02a8", "url": "https://api.github.com/repos/rust-lang/rust/commits/0667ae93fb72eb25594258e55de9b4ae8f9f02a8", "html_url": "https://github.com/rust-lang/rust/commit/0667ae93fb72eb25594258e55de9b4ae8f9f02a8"}], "stats": {"total": 61, "additions": 53, "deletions": 8}, "files": [{"sha": "c3633625436ad450d1b3f6c2df286ea8556a811a", "filename": "src/librustc_typeck/astconv.rs", "status": "modified", "additions": 18, "deletions": 8, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/7fef1628735622ad005245ea2294449720ba7c5c/src%2Flibrustc_typeck%2Fastconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7fef1628735622ad005245ea2294449720ba7c5c/src%2Flibrustc_typeck%2Fastconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fastconv.rs?ref=7fef1628735622ad005245ea2294449720ba7c5c", "patch": "@@ -215,15 +215,24 @@ fn report_elision_failure(\n {\n     let mut m = String::new();\n     let len = params.len();\n-    let mut any_lifetimes = false;\n \n-    for (i, info) in params.into_iter().enumerate() {\n+    let elided_params: Vec<_> = params.into_iter()\n+                                       .filter(|info| info.lifetime_count > 0)\n+                                       .collect();\n+\n+    let elided_len = elided_params.len();\n+\n+    let any_lifetimes = if elided_len > 0 {\n+        true\n+    } else {\n+        false\n+    };\n+\n+    for (i, info) in elided_params.into_iter().enumerate() {\n         let ElisionFailureInfo {\n             name, lifetime_count: n, have_bound_regions\n         } = info;\n \n-        any_lifetimes = any_lifetimes || (n > 0);\n-\n         let help_name = if name.is_empty() {\n             format!(\"argument {}\", i + 1)\n         } else {\n@@ -237,13 +246,14 @@ fn report_elision_failure(\n                     if have_bound_regions { \"free \" } else { \"\" } )\n         })[..]);\n \n-        if len == 2 && i == 0 {\n+        if elided_len == 2 && i == 0 {\n             m.push_str(\" or \");\n-        } else if i + 2 == len {\n+        } else if i + 2 == elided_len {\n             m.push_str(\", or \");\n-        } else if i + 1 != len {\n+        } else if i != elided_len - 1 {\n             m.push_str(\", \");\n         }\n+\n     }\n \n     if len == 0 {\n@@ -260,7 +270,7 @@ fn report_elision_failure(\n         help!(db,\n                    \"consider giving it an explicit bounded or 'static \\\n                     lifetime\");\n-    } else if len == 1 {\n+    } else if elided_len == 1 {\n         help!(db,\n                    \"this function's return type contains a borrowed value, but \\\n                     the signature does not say which {} it is borrowed from\","}, {"sha": "1daa6a61f777ca5b183eccbbbae0591b0bb59c6c", "filename": "src/test/compile-fail/issue-30255.rs", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/7fef1628735622ad005245ea2294449720ba7c5c/src%2Ftest%2Fcompile-fail%2Fissue-30255.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7fef1628735622ad005245ea2294449720ba7c5c/src%2Ftest%2Fcompile-fail%2Fissue-30255.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-30255.rs?ref=7fef1628735622ad005245ea2294449720ba7c5c", "patch": "@@ -0,0 +1,35 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+//\n+// Test that lifetime elision error messages correctly omit parameters\n+// with no elided lifetimes\n+\n+struct S<'a> {\n+    field: &'a i32,\n+}\n+\n+fn f(a: &S, b: i32) -> &i32 {\n+//~^ ERROR missing lifetime specifier [E0106]\n+//~^^ HELP does not say which one of `a`'s 2 elided lifetimes it is borrowed from\n+    panic!();\n+}\n+\n+fn g(a: &S, b: bool, c: &i32) -> &i32 {\n+//~^ ERROR missing lifetime specifier [E0106]\n+//~^^ HELP does not say whether it is borrowed from one of `a`'s 2 elided lifetimes or `c`\n+    panic!();\n+}\n+\n+fn h(a: &bool, b: bool, c: &S, d: &i32) -> &i32 {\n+//~^ ERROR missing lifetime specifier [E0106]\n+//~^^ HELP does not say whether it is borrowed from `a`, one of `c`'s 2 elided lifetimes, or `d`\n+    panic!();\n+}\n+"}]}