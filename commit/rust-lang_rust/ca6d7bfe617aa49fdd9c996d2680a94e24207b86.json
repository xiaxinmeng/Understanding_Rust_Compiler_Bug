{"sha": "ca6d7bfe617aa49fdd9c996d2680a94e24207b86", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNhNmQ3YmZlNjE3YWE0OWZkZDljOTk2ZDI2ODBhOTRlMjQyMDdiODY=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-04-23T16:50:25Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-04-23T16:55:26Z"}, "message": "Cleanup proc_macro config\n\nIn general, there should be no reason to call `.to_string_lossy`.\nIf you want to display the path, use `.display()`.\nIf you want to pass the path to an OS API (like std::process::Command)\nthan use `PathBuf` or `OsString`.", "tree": {"sha": "47fb5ae530075e5e0130984542c58fea13850437", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/47fb5ae530075e5e0130984542c58fea13850437"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ca6d7bfe617aa49fdd9c996d2680a94e24207b86", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ca6d7bfe617aa49fdd9c996d2680a94e24207b86", "html_url": "https://github.com/rust-lang/rust/commit/ca6d7bfe617aa49fdd9c996d2680a94e24207b86", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ca6d7bfe617aa49fdd9c996d2680a94e24207b86/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "278bf351e3d9bf074b76f89afa04c4727d55fba6", "url": "https://api.github.com/repos/rust-lang/rust/commits/278bf351e3d9bf074b76f89afa04c4727d55fba6", "html_url": "https://github.com/rust-lang/rust/commit/278bf351e3d9bf074b76f89afa04c4727d55fba6"}], "stats": {"total": 19, "additions": 8, "deletions": 11}, "files": [{"sha": "642c345740a23c66b318c221102662678a872d30", "filename": "crates/rust-analyzer/src/config.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ca6d7bfe617aa49fdd9c996d2680a94e24207b86/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca6d7bfe617aa49fdd9c996d2680a94e24207b86/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs?ref=ca6d7bfe617aa49fdd9c996d2680a94e24207b86", "patch": "@@ -7,6 +7,8 @@\n //! configure the server itself, feature flags are passed into analysis, and\n //! tweak things like automatic insertion of `()` in completions.\n \n+use std::{ffi::OsString, path::PathBuf};\n+\n use lsp_types::TextDocumentClientCapabilities;\n use ra_flycheck::FlycheckConfig;\n use ra_ide::{CompletionConfig, InlayHintsConfig};\n@@ -20,7 +22,7 @@ pub struct Config {\n     pub with_sysroot: bool,\n     pub publish_diagnostics: bool,\n     pub lru_capacity: Option<usize>,\n-    pub proc_macro_srv: Option<(String, Vec<String>)>,\n+    pub proc_macro_srv: Option<(PathBuf, Vec<OsString>)>,\n     pub files: FilesConfig,\n     pub notifications: NotificationsConfig,\n \n@@ -135,7 +137,7 @@ impl Config {\n         match get(value, \"/procMacro/enable\") {\n             Some(true) => {\n                 if let Ok(path) = std::env::current_exe() {\n-                    self.proc_macro_srv = Some((path.to_string_lossy().to_string(), vec![\"proc-macro\".to_string()]));\n+                    self.proc_macro_srv = Some((path, vec![\"proc-macro\".into()]));\n                 }\n             }\n             _ => self.proc_macro_srv = None,"}, {"sha": "34941931b78f2a3271c8c4226a62834217a00fa1", "filename": "crates/rust-analyzer/src/world.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca6d7bfe617aa49fdd9c996d2680a94e24207b86/crates%2Frust-analyzer%2Fsrc%2Fworld.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca6d7bfe617aa49fdd9c996d2680a94e24207b86/crates%2Frust-analyzer%2Fsrc%2Fworld.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fworld.rs?ref=ca6d7bfe617aa49fdd9c996d2680a94e24207b86", "patch": "@@ -153,7 +153,7 @@ impl WorldState {\n                 Err(err) => {\n                     log::error!(\n                         \"Failed to run ra_proc_macro_srv from path {}, error: {:?}\",\n-                        path,\n+                        path.display(),\n                         err\n                     );\n                     ProcMacroClient::dummy()"}, {"sha": "b31533e5eff51d7567902b0091481b7508448299", "filename": "crates/rust-analyzer/tests/heavy_tests/main.rs", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/ca6d7bfe617aa49fdd9c996d2680a94e24207b86/crates%2Frust-analyzer%2Ftests%2Fheavy_tests%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca6d7bfe617aa49fdd9c996d2680a94e24207b86/crates%2Frust-analyzer%2Ftests%2Fheavy_tests%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Ftests%2Fheavy_tests%2Fmain.rs?ref=ca6d7bfe617aa49fdd9c996d2680a94e24207b86", "patch": "@@ -1,6 +1,6 @@\n mod support;\n \n-use std::{collections::HashMap, time::Instant};\n+use std::{collections::HashMap, path::PathBuf, time::Instant};\n \n use lsp_types::{\n     CodeActionContext, DidOpenTextDocumentParams, DocumentFormattingParams, FormattingOptions,\n@@ -692,15 +692,10 @@ pub fn foo(_input: TokenStream) -> TokenStream {\n \"###,\n     )\n     .with_config(|config| {\n-        // FIXME: Use env!(\"CARGO_BIN_EXE_ra-analyzer\") instead after\n-        // https://github.com/rust-lang/cargo/pull/7697 landed\n-        let macro_srv_path = std::path::Path::new(std::env!(\"CARGO_MANIFEST_DIR\"))\n-            .join(\"../../target/debug/rust-analyzer\")\n-            .to_string_lossy()\n-            .to_string();\n+        let macro_srv_path = PathBuf::from(env!(\"CARGO_BIN_EXE_rust-analyzer\"));\n \n         config.cargo.load_out_dirs_from_check = true;\n-        config.proc_macro_srv = Some((macro_srv_path, vec![\"proc-macro\".to_string()]));\n+        config.proc_macro_srv = Some((macro_srv_path, vec![\"proc-macro\".into()]));\n     })\n     .root(\"foo\")\n     .root(\"bar\")"}]}