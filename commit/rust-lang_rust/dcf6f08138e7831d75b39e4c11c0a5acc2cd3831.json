{"sha": "dcf6f08138e7831d75b39e4c11c0a5acc2cd3831", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRjZjZmMDgxMzhlNzgzMWQ3NWIzOWU0YzExYzBhNWFjYzJjZDM4MzE=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-08-18T21:41:46Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-08-18T21:41:46Z"}, "message": "kill the old funky `can_reach` fn", "tree": {"sha": "4affeedfdb855f089d812d3f4f5823984e3b17a9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4affeedfdb855f089d812d3f4f5823984e3b17a9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dcf6f08138e7831d75b39e4c11c0a5acc2cd3831", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dcf6f08138e7831d75b39e4c11c0a5acc2cd3831", "html_url": "https://github.com/rust-lang/rust/commit/dcf6f08138e7831d75b39e4c11c0a5acc2cd3831", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dcf6f08138e7831d75b39e4c11c0a5acc2cd3831/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4b1d3b703629db036ce685a852b80bf196419bb5", "url": "https://api.github.com/repos/rust-lang/rust/commits/4b1d3b703629db036ce685a852b80bf196419bb5", "html_url": "https://github.com/rust-lang/rust/commit/4b1d3b703629db036ce685a852b80bf196419bb5"}], "stats": {"total": 43, "additions": 0, "deletions": 43}, "files": [{"sha": "1ad5ae9917d97f9aed0adce65c7f1b7da8a064bc", "filename": "src/librustc/util/common.rs", "status": "modified", "additions": 0, "deletions": 43, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/dcf6f08138e7831d75b39e4c11c0a5acc2cd3831/src%2Flibrustc%2Futil%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dcf6f08138e7831d75b39e4c11c0a5acc2cd3831/src%2Flibrustc%2Futil%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Futil%2Fcommon.rs?ref=dcf6f08138e7831d75b39e4c11c0a5acc2cd3831", "patch": "@@ -203,49 +203,6 @@ pub fn block_query<P>(b: &ast::Block, p: P) -> bool where P: FnMut(&ast::Expr) -\n     return v.flag;\n }\n \n-/// K: Eq + Hash<S>, V, S, H: Hasher<S>\n-///\n-/// Determines whether there exists a path from `source` to `destination`.  The\n-/// graph is defined by the `edges_map`, which maps from a node `S` to a list of\n-/// its adjacent nodes `T`.\n-///\n-/// Efficiency note: This is implemented in an inefficient way because it is\n-/// typically invoked on very small graphs. If the graphs become larger, a more\n-/// efficient graph representation and algorithm would probably be advised.\n-pub fn can_reach<T, S>(edges_map: &HashMap<T, Vec<T>, S>, source: T,\n-                       destination: T) -> bool\n-    where S: HashState, T: Hash + Eq + Clone,\n-{\n-    if source == destination {\n-        return true;\n-    }\n-\n-    // Do a little breadth-first-search here.  The `queue` list\n-    // doubles as a way to detect if we've seen a particular FR\n-    // before.  Note that we expect this graph to be an *extremely\n-    // shallow* tree.\n-    let mut queue = vec!(source);\n-    let mut i = 0;\n-    while i < queue.len() {\n-        match edges_map.get(&queue[i]) {\n-            Some(edges) => {\n-                for target in edges {\n-                    if *target == destination {\n-                        return true;\n-                    }\n-\n-                    if !queue.iter().any(|x| x == target) {\n-                        queue.push((*target).clone());\n-                    }\n-                }\n-            }\n-            None => {}\n-        }\n-        i += 1;\n-    }\n-    return false;\n-}\n-\n /// Memoizes a one-argument closure using the given RefCell containing\n /// a type implementing MutableMap to serve as a cache.\n ///"}]}