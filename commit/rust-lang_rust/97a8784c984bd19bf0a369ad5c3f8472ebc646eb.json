{"sha": "97a8784c984bd19bf0a369ad5c3f8472ebc646eb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk3YTg3ODRjOTg0YmQxOWJmMGEzNjlhZDVjM2Y4NDcyZWJjNjQ2ZWI=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-08-03T04:41:56Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-08-03T17:55:59Z"}, "message": "Fix pretty-printer to read from files again\n\nI accidentally made the pretty-printer always read from stdin", "tree": {"sha": "668fffbb7ceb70426dd75b14b5401a0594a25eef", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/668fffbb7ceb70426dd75b14b5401a0594a25eef"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/97a8784c984bd19bf0a369ad5c3f8472ebc646eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/97a8784c984bd19bf0a369ad5c3f8472ebc646eb", "html_url": "https://github.com/rust-lang/rust/commit/97a8784c984bd19bf0a369ad5c3f8472ebc646eb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/97a8784c984bd19bf0a369ad5c3f8472ebc646eb/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0b7a94a94c15546016a2c85329bfa16f5a39628a", "url": "https://api.github.com/repos/rust-lang/rust/commits/0b7a94a94c15546016a2c85329bfa16f5a39628a", "html_url": "https://github.com/rust-lang/rust/commit/0b7a94a94c15546016a2c85329bfa16f5a39628a"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "77c2da6827a3ff9aa0055975ca8aee2e128b0898", "filename": "src/comp/driver/rustc.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/97a8784c984bd19bf0a369ad5c3f8472ebc646eb/src%2Fcomp%2Fdriver%2Frustc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97a8784c984bd19bf0a369ad5c3f8472ebc646eb/src%2Fcomp%2Fdriver%2Frustc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fdriver%2Frustc.rs?ref=97a8784c984bd19bf0a369ad5c3f8472ebc646eb", "patch": "@@ -99,7 +99,11 @@ fn parse_input(sess: session::session, cfg: &ast::crate_cfg, input: str) ->\n \n fn parse_input_src(sess: session::session, cfg: &ast::crate_cfg,\n                    infile: str) -> {crate: @ast::crate, src: str} {\n-    let srcbytes = ioivec::stdin().read_whole_stream();\n+    let srcbytes = if infile != \"-\" {\n+        ioivec::file_reader(infile)\n+    } else {\n+        ioivec::stdin()\n+    }.read_whole_stream();\n     let src = str::unsafe_from_bytes_ivec(srcbytes);\n     let crate = parser::parse_crate_from_source_str(infile, src, cfg,\n                                                     sess.get_codemap());"}]}