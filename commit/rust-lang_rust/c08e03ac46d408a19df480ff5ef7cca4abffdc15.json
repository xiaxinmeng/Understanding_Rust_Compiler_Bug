{"sha": "c08e03ac46d408a19df480ff5ef7cca4abffdc15", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMwOGUwM2FjNDZkNDA4YTE5ZGY0ODBmZjVlZjdjY2E0YWJmZmRjMTU=", "commit": {"author": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2017-11-13T14:25:09Z"}, "committer": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2017-11-13T14:25:09Z"}, "message": "incr.comp.: Add position() method to TyEncoder.", "tree": {"sha": "f39dc8d5405c15fb242173fc8f80f3dec28b4254", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f39dc8d5405c15fb242173fc8f80f3dec28b4254"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c08e03ac46d408a19df480ff5ef7cca4abffdc15", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c08e03ac46d408a19df480ff5ef7cca4abffdc15", "html_url": "https://github.com/rust-lang/rust/commit/c08e03ac46d408a19df480ff5ef7cca4abffdc15", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c08e03ac46d408a19df480ff5ef7cca4abffdc15/comments", "author": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8cbc02238da9f36245d61e1d77ecd214eeed2e6e", "url": "https://api.github.com/repos/rust-lang/rust/commits/8cbc02238da9f36245d61e1d77ecd214eeed2e6e", "html_url": "https://github.com/rust-lang/rust/commit/8cbc02238da9f36245d61e1d77ecd214eeed2e6e"}], "stats": {"total": 19, "additions": 17, "deletions": 2}, "files": [{"sha": "164aac303af80d00128d6f3ae15686ded5d2daed", "filename": "src/librustc/ty/codec.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/c08e03ac46d408a19df480ff5ef7cca4abffdc15/src%2Flibrustc%2Fty%2Fcodec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c08e03ac46d408a19df480ff5ef7cca4abffdc15/src%2Flibrustc%2Fty%2Fcodec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fcodec.rs?ref=c08e03ac46d408a19df480ff5ef7cca4abffdc15", "patch": "@@ -19,7 +19,7 @@\n use hir::def_id::{DefId, CrateNum};\n use middle::const_val::ByteArray;\n use rustc_data_structures::fx::FxHashMap;\n-use rustc_serialize::{Decodable, Decoder, Encoder, Encodable};\n+use rustc_serialize::{Decodable, Decoder, Encoder, Encodable, opaque};\n use std::hash::Hash;\n use std::intrinsics;\n use ty::{self, Ty, TyCtxt};\n@@ -53,6 +53,13 @@ pub trait TyEncoder: Encoder {\n     fn position(&self) -> usize;\n }\n \n+impl<'buf> TyEncoder for opaque::Encoder<'buf> {\n+    #[inline]\n+    fn position(&self) -> usize {\n+        self.position()\n+    }\n+}\n+\n /// Encode the given value or a previously cached shorthand.\n pub fn encode_with_shorthand<E, T, M>(encoder: &mut E,\n                                       value: &T,\n@@ -113,6 +120,8 @@ pub trait TyDecoder<'a, 'tcx: 'a>: Decoder {\n \n     fn peek_byte(&self) -> u8;\n \n+    fn position(&self) -> usize;\n+\n     fn cached_ty_for_shorthand<F>(&mut self,\n                                   shorthand: usize,\n                                   or_insert_with: F)\n@@ -142,7 +151,6 @@ pub fn decode_ty<'a, 'tcx, D>(decoder: &mut D) -> Result<Ty<'tcx>, D::Error>\n           'tcx: 'a,\n {\n     // Handle shorthands first, if we have an usize > 0x80.\n-    // if self.opaque.data[self.opaque.position()] & 0x80 != 0 {\n     if decoder.positioned_at_shorthand() {\n         let pos = decoder.read_usize()?;\n         assert!(pos >= SHORTHAND_OFFSET);"}, {"sha": "5fee7173c87e7fca45e1c4a8299a3cdc59b1ec57", "filename": "src/librustc_metadata/decoder.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/c08e03ac46d408a19df480ff5ef7cca4abffdc15/src%2Flibrustc_metadata%2Fdecoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c08e03ac46d408a19df480ff5ef7cca4abffdc15/src%2Flibrustc_metadata%2Fdecoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fdecoder.rs?ref=c08e03ac46d408a19df480ff5ef7cca4abffdc15", "patch": "@@ -217,14 +217,21 @@ impl<'doc, 'tcx> Decoder for DecodeContext<'doc, 'tcx> {\n \n impl<'a, 'tcx: 'a> TyDecoder<'a, 'tcx> for DecodeContext<'a, 'tcx> {\n \n+    #[inline]\n     fn tcx(&self) -> TyCtxt<'a, 'tcx, 'tcx> {\n         self.tcx.expect(\"missing TyCtxt in DecodeContext\")\n     }\n \n+    #[inline]\n     fn peek_byte(&self) -> u8 {\n         self.opaque.data[self.opaque.position()]\n     }\n \n+    #[inline]\n+    fn position(&self) -> usize {\n+        self.opaque.position()\n+    }\n+\n     fn cached_ty_for_shorthand<F>(&mut self,\n                                   shorthand: usize,\n                                   or_insert_with: F)"}]}