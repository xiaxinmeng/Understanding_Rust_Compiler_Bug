{"sha": "8448711534904cabae76795bf771e0275365c8ef", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg0NDg3MTE1MzQ5MDRjYWJhZTc2Nzk1YmY3NzFlMDI3NTM2NWM4ZWY=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-05-16T03:33:27Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-05-16T03:35:57Z"}, "message": "Add classes and class fields to the tcache\n\nThey were being added lazily, which prevented class types from being\nused as an argument to a variant.", "tree": {"sha": "2375a904734f16efce83637971072756bdd7a62e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2375a904734f16efce83637971072756bdd7a62e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8448711534904cabae76795bf771e0275365c8ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8448711534904cabae76795bf771e0275365c8ef", "html_url": "https://github.com/rust-lang/rust/commit/8448711534904cabae76795bf771e0275365c8ef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8448711534904cabae76795bf771e0275365c8ef/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bdef90730ec0187454545679f9d3bd26d8f042fa", "url": "https://api.github.com/repos/rust-lang/rust/commits/bdef90730ec0187454545679f9d3bd26d8f042fa", "html_url": "https://github.com/rust-lang/rust/commit/bdef90730ec0187454545679f9d3bd26d8f042fa"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "c419c607b595b4fa47e5e324a48d0a95f8df94b1", "filename": "src/rustc/middle/typeck/collect.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/8448711534904cabae76795bf771e0275365c8ef/src%2Frustc%2Fmiddle%2Ftypeck%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8448711534904cabae76795bf771e0275365c8ef/src%2Frustc%2Fmiddle%2Ftypeck%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftypeck%2Fcollect.rs?ref=8448711534904cabae76795bf771e0275365c8ef", "patch": "@@ -115,6 +115,7 @@ fn check_methods_against_iface(ccx: @crate_ctxt,\n \n fn convert_class_item(ccx: @crate_ctxt,\n                       rp: ast::region_param,\n+                      bounds: @[ty::param_bounds],\n                       v: ast_util::ivar) {\n     /* we want to do something here, b/c within the\n     scope of the class, it's ok to refer to fields &\n@@ -123,6 +124,8 @@ fn convert_class_item(ccx: @crate_ctxt,\n     class. outside the class, it's done with expr_field */\n     let tt = ccx.to_ty(type_rscope(rp), v.ty);\n     write_ty_to_tcx(ccx.tcx, v.id, tt);\n+    /* add the field to the tcache */\n+    ccx.tcx.tcache.insert(local_def(v.id), {bounds: bounds, rp: rp, ty: tt});\n }\n \n fn convert_methods(ccx: @crate_ctxt,\n@@ -228,6 +231,8 @@ fn convert(ccx: @crate_ctxt, it: @ast::item) {\n         // Write the class type\n         let tpt = ty_of_item(ccx, it);\n         write_ty_to_tcx(tcx, it.id, tpt.ty);\n+        tcx.tcache.insert(local_def(it.id), {bounds: tpt.bounds,\n+              rp: rp, ty: tpt.ty});\n         // Write the ctor type\n         let t_ctor =\n             ty::mk_fn(\n@@ -264,7 +269,7 @@ fn convert(ccx: @crate_ctxt, it: @ast::item) {\n         // Write the type of each of the members\n         let (fields, methods) = split_class_items(members);\n         for fields.each {|f|\n-            convert_class_item(ccx, rp, f);\n+           convert_class_item(ccx, rp, tpt.bounds, f);\n         }\n         // The selfty is just the class type\n         let {bounds:_, substs} = mk_substs(ccx, tps, rp);"}]}