{"sha": "a87d1bbb9326d28f73d4b837a9363ca53df7affb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE4N2QxYmJiOTMyNmQyOGY3M2Q0YjgzN2E5MzYzY2E1M2RmN2FmZmI=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-11-06T09:29:50Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-11-16T10:57:45Z"}, "message": "infer: give access to region variable origins", "tree": {"sha": "d1a36989c01edb665f537bfc64750d1d3911bb24", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d1a36989c01edb665f537bfc64750d1d3911bb24"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a87d1bbb9326d28f73d4b837a9363ca53df7affb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a87d1bbb9326d28f73d4b837a9363ca53df7affb", "html_url": "https://github.com/rust-lang/rust/commit/a87d1bbb9326d28f73d4b837a9363ca53df7affb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a87d1bbb9326d28f73d4b837a9363ca53df7affb/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "09b44bbe77dd345e9c0f76dea0ea55e835729ef8", "url": "https://api.github.com/repos/rust-lang/rust/commits/09b44bbe77dd345e9c0f76dea0ea55e835729ef8", "html_url": "https://github.com/rust-lang/rust/commit/09b44bbe77dd345e9c0f76dea0ea55e835729ef8"}], "stats": {"total": 23, "additions": 21, "deletions": 2}, "files": [{"sha": "10734802a6d0e4688505b1bdae0bbec46caa8895", "filename": "src/librustc/infer/mod.rs", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/a87d1bbb9326d28f73d4b837a9363ca53df7affb/src%2Flibrustc%2Finfer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a87d1bbb9326d28f73d4b837a9363ca53df7affb/src%2Flibrustc%2Finfer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Fmod.rs?ref=a87d1bbb9326d28f73d4b837a9363ca53df7affb", "patch": "@@ -25,7 +25,7 @@ use middle::lang_items;\n use mir::tcx::LvalueTy;\n use ty::subst::{Kind, Subst, Substs};\n use ty::{TyVid, IntVid, FloatVid};\n-use ty::{self, Ty, TyCtxt};\n+use ty::{self, RegionVid, Ty, TyCtxt};\n use ty::error::{ExpectedFound, TypeError, UnconstrainedNumeric};\n use ty::fold::{TypeFoldable, TypeFolder, TypeVisitor};\n use ty::relate::RelateResult;\n@@ -1166,6 +1166,21 @@ impl<'a, 'gcx, 'tcx> InferCtxt<'a, 'gcx, 'tcx> {\n         self.borrow_region_constraints().take_and_reset_data()\n     }\n \n+    /// Returns the number of region variables created thus far.\n+    pub fn num_region_vars(&self) -> usize {\n+        self.borrow_region_constraints().var_origins().len()\n+    }\n+\n+    /// Returns an iterator over all region variables created thus far.\n+    pub fn all_region_vars(&self) -> impl Iterator<Item = RegionVid> {\n+        self.borrow_region_constraints().var_origins().indices()\n+    }\n+\n+    /// Returns the origin of a given region variable.\n+    pub fn region_var_origin(&self, var: RegionVid) -> RegionVariableOrigin {\n+        self.borrow_region_constraints().var_origins()[var].clone()\n+    }\n+\n     pub fn ty_to_string(&self, t: Ty<'tcx>) -> String {\n         self.resolve_type_vars_if_possible(&t).to_string()\n     }"}, {"sha": "402fdeba56a7e708d825c8fa0fcbdccfe1d3bdb6", "filename": "src/librustc/infer/region_constraints/mod.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a87d1bbb9326d28f73d4b837a9363ca53df7affb/src%2Flibrustc%2Finfer%2Fregion_constraints%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a87d1bbb9326d28f73d4b837a9363ca53df7affb/src%2Flibrustc%2Finfer%2Fregion_constraints%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Fregion_constraints%2Fmod.rs?ref=a87d1bbb9326d28f73d4b837a9363ca53df7affb", "patch": "@@ -33,7 +33,7 @@ mod taint;\n \n pub struct RegionConstraintCollector<'tcx> {\n     /// For each `RegionVid`, the corresponding `RegionVariableOrigin`.\n-    pub var_origins: IndexVec<RegionVid, RegionVariableOrigin>,\n+    var_origins: IndexVec<RegionVid, RegionVariableOrigin>,\n \n     data: RegionConstraintData<'tcx>,\n \n@@ -284,6 +284,10 @@ impl<'tcx> RegionConstraintCollector<'tcx> {\n         }\n     }\n \n+    pub fn var_origins(&self) -> &VarOrigins {\n+        &self.var_origins\n+    }\n+\n     /// Once all the constraints have been gathered, extract out the final data.\n     ///\n     /// Not legal during a snapshot."}]}