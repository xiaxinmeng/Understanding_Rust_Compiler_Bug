{"sha": "5d56da1678c00ccff2c4c680de3f2245deef172a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVkNTZkYTE2NzhjMDBjY2ZmMmM0YzY4MGRlM2YyMjQ1ZGVlZjE3MmE=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-08-27T20:50:40Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-08-27T20:54:12Z"}, "message": "Convert over some residual uses of #oldmacros.", "tree": {"sha": "8ec679fa376960d177a75173767bf2b6ea1fa68d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8ec679fa376960d177a75173767bf2b6ea1fa68d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5d56da1678c00ccff2c4c680de3f2245deef172a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5d56da1678c00ccff2c4c680de3f2245deef172a", "html_url": "https://github.com/rust-lang/rust/commit/5d56da1678c00ccff2c4c680de3f2245deef172a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5d56da1678c00ccff2c4c680de3f2245deef172a/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "38fee9526a313104e3f869bf07c24b0c1d203d11", "url": "https://api.github.com/repos/rust-lang/rust/commits/38fee9526a313104e3f869bf07c24b0c1d203d11", "html_url": "https://github.com/rust-lang/rust/commit/38fee9526a313104e3f869bf07c24b0c1d203d11"}], "stats": {"total": 52, "additions": 31, "deletions": 21}, "files": [{"sha": "da684c8fab5b56af5eea4b0117da131ac292d7da", "filename": "src/libcore/hash.rs", "status": "modified", "additions": 28, "deletions": 18, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/5d56da1678c00ccff2c4c680de3f2245deef172a/src%2Flibcore%2Fhash.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d56da1678c00ccff2c4c680de3f2245deef172a/src%2Flibcore%2Fhash.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fhash.rs?ref=5d56da1678c00ccff2c4c680de3f2245deef172a", "patch": "@@ -131,24 +131,34 @@ impl &SipState : io::Writer {\n     // Methods for io::writer\n     fn write(msg: &[const u8]) {\n \n-        #macro[[#u8to64_le(buf,i),\n-                (buf[0+i] as u64 |\n-                 buf[1+i] as u64 << 8 |\n-                 buf[2+i] as u64 << 16 |\n-                 buf[3+i] as u64 << 24 |\n-                 buf[4+i] as u64 << 32 |\n-                 buf[5+i] as u64 << 40 |\n-                 buf[6+i] as u64 << 48 |\n-                 buf[7+i] as u64 << 56)]];\n-\n-        #macro[[#rotl(x,b), (x << b) | (x >> (64 - b))]];\n-\n-        #macro[[#compress(v0,v1,v2,v3), {\n-            v0 += v1; v1 = #rotl(v1, 13); v1 ^= v0; v0 = #rotl(v0, 32);\n-            v2 += v3; v3 = #rotl(v3, 16); v3 ^= v2;\n-            v0 += v3; v3 = #rotl(v3, 21); v3 ^= v0;\n-            v2 += v1; v1 = #rotl(v1, 17); v1 ^= v2; v2 = #rotl(v2, 32);\n-        }]];\n+        macro_rules! u8to64_le (\n+            ($buf:expr, $i:expr) =>\n+            ($buf[0+$i] as u64 |\n+             $buf[1+$i] as u64 << 8 |\n+             $buf[2+$i] as u64 << 16 |\n+             $buf[3+$i] as u64 << 24 |\n+             $buf[4+$i] as u64 << 32 |\n+             $buf[5+$i] as u64 << 40 |\n+             $buf[6+$i] as u64 << 48 |\n+             $buf[7+$i] as u64 << 56)\n+        );\n+\n+        macro_rules! rotl (\n+            ($x:expr, $b:expr) =>\n+            (($x << $b) | ($x >> (64 - $b)))\n+        );\n+\n+        macro_rules! compress (\n+            ($v0:expr, $v1:expr, $v2:expr, $v3:expr) =>\n+            {\n+                $v0 += $v1; $v1 = rotl!($v1, 13); $v1 ^= $v0;\n+                $v0 = rotl!($v0, 32);\n+                $v2 += $v3; $v3 = rotl!($v3, 16); $v3 ^= $v2;\n+                $v0 += $v3; $v3 = rotl!($v3, 21); $v3 ^= $v0;\n+                $v2 += $v1; $v1 = rotl!($v1, 17); $v1 ^= $v2;\n+                $v2 = rotl!($v2, 32);\n+            }\n+        );\n \n         let length = msg.len();\n         self.length += length;"}, {"sha": "2bf76c7e71ab2554232ad2ede59399e67fac4695", "filename": "src/libcore/run.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5d56da1678c00ccff2c4c680de3f2245deef172a/src%2Flibcore%2Frun.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d56da1678c00ccff2c4c680de3f2245deef172a/src%2Flibcore%2Frun.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Frun.rs?ref=5d56da1678c00ccff2c4c680de3f2245deef172a", "patch": "@@ -321,8 +321,8 @@ fn program_output(prog: &str, args: &[~str]) ->\n                 errs = s;\n             }\n             (n, _) => {\n-                fail(#fmt(\"program_output received an unexpected file \\\n-                  number: %u\", n));\n+                fail(fmt!(\"program_output received an unexpected file \\\n+                           number: %u\", n));\n             }\n         };\n         count -= 1;"}, {"sha": "01d4cf61067a1c398120402a8b4f9f92ea7310a1", "filename": "src/libcore/vec.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5d56da1678c00ccff2c4c680de3f2245deef172a/src%2Flibcore%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d56da1678c00ccff2c4c680de3f2245deef172a/src%2Flibcore%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fvec.rs?ref=5d56da1678c00ccff2c4c680de3f2245deef172a", "patch": "@@ -541,7 +541,7 @@ fn pop<T>(&v: ~[const T]) -> T {\n fn swap_remove<T>(&v: ~[const T], index: uint) -> T {\n     let ln = len(v);\n     if index >= ln {\n-        fail #fmt(\"vec::swap_remove - index %u >= length %u\", index, ln);\n+        fail fmt!(\"vec::swap_remove - index %u >= length %u\", index, ln);\n     }\n     let lastptr = ptr::mut_addr_of(v[ln - 1]);\n     unsafe {"}]}