{"sha": "9ec5e906089ddea234417f837ea1ceb955ccee8b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjllYzVlOTA2MDg5ZGRlYTIzNDQxN2Y4MzdlYTFjZWI5NTVjY2VlOGI=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2011-07-09T05:18:23Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2011-07-09T05:25:57Z"}, "message": "Tests for constraint propagation", "tree": {"sha": "0ee3493c948cb4d129a16702fbc1e4b9427c899b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0ee3493c948cb4d129a16702fbc1e4b9427c899b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9ec5e906089ddea234417f837ea1ceb955ccee8b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9ec5e906089ddea234417f837ea1ceb955ccee8b", "html_url": "https://github.com/rust-lang/rust/commit/9ec5e906089ddea234417f837ea1ceb955ccee8b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9ec5e906089ddea234417f837ea1ceb955ccee8b/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "182c413af199196155d4d82716988b2f5886e892", "url": "https://api.github.com/repos/rust-lang/rust/commits/182c413af199196155d4d82716988b2f5886e892", "html_url": "https://github.com/rust-lang/rust/commit/182c413af199196155d4d82716988b2f5886e892"}], "stats": {"total": 70, "additions": 70, "deletions": 0}, "files": [{"sha": "510b7ab0491a7b0b35247e9449625e458392d7ca", "filename": "src/test/compile-fail/no-constraint-prop.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/9ec5e906089ddea234417f837ea1ceb955ccee8b/src%2Ftest%2Fcompile-fail%2Fno-constraint-prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ec5e906089ddea234417f837ea1ceb955ccee8b/src%2Ftest%2Fcompile-fail%2Fno-constraint-prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fno-constraint-prop.rs?ref=9ec5e906089ddea234417f837ea1ceb955ccee8b", "patch": "@@ -0,0 +1,21 @@\n+// error-pattern:Unsatisfied precondition constraint (for example, le(b, d\n+// xfail-stage0\n+use std;\n+import std::str::*;\n+import std::uint::*;\n+\n+fn main() {\n+  let uint a = 1u;\n+  let uint b = 4u;\n+  let uint c = 5u;\n+  // make sure that the constraint le(b, a) exists...\n+  check le(b, a);\n+  // ...invalidate it...\n+  b += 1u;\n+  check le(c, a);\n+  // ...and check that it doesn't get set in the poststate of\n+  // the next statement, since it's not true in the\n+  // prestate.\n+  auto d <- a;\n+  log (safe_slice(\"kitties\", b, d)); \n+}\n\\ No newline at end of file"}, {"sha": "e7ef7f63bd51d3606008f88840104676e2f2f8fb", "filename": "src/test/run-pass/constraint-prop-expr-move.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/9ec5e906089ddea234417f837ea1ceb955ccee8b/src%2Ftest%2Frun-pass%2Fconstraint-prop-expr-move.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ec5e906089ddea234417f837ea1ceb955ccee8b/src%2Ftest%2Frun-pass%2Fconstraint-prop-expr-move.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fconstraint-prop-expr-move.rs?ref=9ec5e906089ddea234417f837ea1ceb955ccee8b", "patch": "@@ -0,0 +1,13 @@\n+// xfail-stage0\n+use std;\n+import std::str::*;\n+import std::uint::*;\n+\n+fn main() {\n+  let uint a = 1u;\n+  let uint b = 4u;\n+  let uint c = 17u;\n+  check le(a, b);\n+  c <- a;\n+  log (safe_slice(\"kitties\", c, b)); \n+}\n\\ No newline at end of file"}, {"sha": "1c426c21fc30639da68964cb601cb532e15537f9", "filename": "src/test/run-pass/constraint-prop-move.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/9ec5e906089ddea234417f837ea1ceb955ccee8b/src%2Ftest%2Frun-pass%2Fconstraint-prop-move.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ec5e906089ddea234417f837ea1ceb955ccee8b/src%2Ftest%2Frun-pass%2Fconstraint-prop-move.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fconstraint-prop-move.rs?ref=9ec5e906089ddea234417f837ea1ceb955ccee8b", "patch": "@@ -0,0 +1,12 @@\n+// xfail-stage0\n+use std;\n+import std::str::*;\n+import std::uint::*;\n+\n+fn main() {\n+  let uint a = 1u;\n+  let uint b = 4u;\n+  check le(a, b);\n+  auto c <- a;\n+  log (safe_slice(\"kitties\", c, b)); \n+}\n\\ No newline at end of file"}, {"sha": "c4ac4801135809493a676d006483705762e6763b", "filename": "src/test/run-pass/constraint-prop-swap.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/9ec5e906089ddea234417f837ea1ceb955ccee8b/src%2Ftest%2Frun-pass%2Fconstraint-prop-swap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ec5e906089ddea234417f837ea1ceb955ccee8b/src%2Ftest%2Frun-pass%2Fconstraint-prop-swap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fconstraint-prop-swap.rs?ref=9ec5e906089ddea234417f837ea1ceb955ccee8b", "patch": "@@ -0,0 +1,12 @@\n+// xfail-stage0\n+use std;\n+import std::str::*;\n+import std::uint::*;\n+\n+fn main() {\n+  let uint a = 4u;\n+  let uint b = 1u;\n+  check le(b, a);\n+  b <-> a;\n+  log (safe_slice(\"kitties\", a, b)); \n+}\n\\ No newline at end of file"}, {"sha": "9508daecadbe6892dc2d31754823b781d8507d07", "filename": "src/test/run-pass/constraint-prop.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/9ec5e906089ddea234417f837ea1ceb955ccee8b/src%2Ftest%2Frun-pass%2Fconstraint-prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ec5e906089ddea234417f837ea1ceb955ccee8b/src%2Ftest%2Frun-pass%2Fconstraint-prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fconstraint-prop.rs?ref=9ec5e906089ddea234417f837ea1ceb955ccee8b", "patch": "@@ -0,0 +1,12 @@\n+// xfail-stage0\n+use std;\n+import std::str::*;\n+import std::uint::*;\n+\n+fn main() {\n+  let uint a = 1u;\n+  let uint b = 4u;\n+  check le(a, b);\n+  auto c = b;\n+  log (safe_slice(\"kitties\", a, c)); \n+}\n\\ No newline at end of file"}]}