{"sha": "fe1b160dcfdeb3f582ccae1440c9580ade0beb39", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZlMWIxNjBkY2ZkZWIzZjU4MmNjYWUxNDQwYzk1ODBhZGUwYmViMzk=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-12-20T11:22:55Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-12-20T11:22:55Z"}, "message": "Support for nested statics, consts and type aliases", "tree": {"sha": "574aaf7ee9a3b57e39bf1129a6d20c1f4b330fb7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/574aaf7ee9a3b57e39bf1129a6d20c1f4b330fb7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fe1b160dcfdeb3f582ccae1440c9580ade0beb39", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fe1b160dcfdeb3f582ccae1440c9580ade0beb39", "html_url": "https://github.com/rust-lang/rust/commit/fe1b160dcfdeb3f582ccae1440c9580ade0beb39", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fe1b160dcfdeb3f582ccae1440c9580ade0beb39/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ac5a3f611b05dbedd286169539335ae9f0fbb7b0", "url": "https://api.github.com/repos/rust-lang/rust/commits/ac5a3f611b05dbedd286169539335ae9f0fbb7b0", "html_url": "https://github.com/rust-lang/rust/commit/ac5a3f611b05dbedd286169539335ae9f0fbb7b0"}], "stats": {"total": 23, "additions": 18, "deletions": 5}, "files": [{"sha": "b61f924b778b7250a086ca1131cffba3bcab7cff", "filename": "crates/ra_hir_def/src/body/lower.rs", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/fe1b160dcfdeb3f582ccae1440c9580ade0beb39/crates%2Fra_hir_def%2Fsrc%2Fbody%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe1b160dcfdeb3f582ccae1440c9580ade0beb39/crates%2Fra_hir_def%2Fsrc%2Fbody%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fbody%2Flower.rs?ref=fe1b160dcfdeb3f582ccae1440c9580ade0beb39", "patch": "@@ -25,7 +25,8 @@ use crate::{\n     path::GenericArgs,\n     path::Path,\n     type_ref::{Mutability, TypeRef},\n-    ContainerId, DefWithBodyId, EnumLoc, FunctionLoc, Intern, ModuleDefId, StructLoc, UnionLoc,\n+    ConstLoc, ContainerId, DefWithBodyId, EnumLoc, FunctionLoc, Intern, ModuleDefId, StaticLoc,\n+    StructLoc, TypeAliasLoc, UnionLoc,\n };\n \n pub(super) fn lower(\n@@ -497,6 +498,18 @@ where\n                     let ast_id = self.expander.ast_id(&def);\n                     FunctionLoc { container: container.into(), ast_id }.intern(self.db).into()\n                 }\n+                ast::ModuleItem::TypeAliasDef(def) => {\n+                    let ast_id = self.expander.ast_id(&def);\n+                    TypeAliasLoc { container: container.into(), ast_id }.intern(self.db).into()\n+                }\n+                ast::ModuleItem::ConstDef(def) => {\n+                    let ast_id = self.expander.ast_id(&def);\n+                    ConstLoc { container: container.into(), ast_id }.intern(self.db).into()\n+                }\n+                ast::ModuleItem::StaticDef(def) => {\n+                    let ast_id = self.expander.ast_id(&def);\n+                    StaticLoc { container, ast_id }.intern(self.db).into()\n+                }\n                 ast::ModuleItem::StructDef(def) => {\n                     let ast_id = self.expander.ast_id(&def);\n                     StructLoc { container, ast_id }.intern(self.db).into()"}, {"sha": "9b192b597ac7d5deb4142f774ee9a10adab1d324", "filename": "crates/ra_hir_def/src/lib.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/fe1b160dcfdeb3f582ccae1440c9580ade0beb39/crates%2Fra_hir_def%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe1b160dcfdeb3f582ccae1440c9580ade0beb39/crates%2Fra_hir_def%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Flib.rs?ref=fe1b160dcfdeb3f582ccae1440c9580ade0beb39", "patch": "@@ -211,7 +211,7 @@ impl_intern_key!(StaticId);\n \n #[derive(Debug, Clone, PartialEq, Eq, Hash)]\n pub struct StaticLoc {\n-    pub container: ModuleId,\n+    pub container: ContainerId,\n     pub ast_id: AstId<ast::StaticDef>,\n }\n \n@@ -558,7 +558,7 @@ impl HasModule for GenericDefId {\n }\n \n impl HasModule for StaticLoc {\n-    fn module(&self, _db: &impl db::DefDatabase) -> ModuleId {\n-        self.container\n+    fn module(&self, db: &impl db::DefDatabase) -> ModuleId {\n+        self.container.module(db)\n     }\n }"}, {"sha": "74c3d4670d7fed2fe13b16511d289cec2b256bcc", "filename": "crates/ra_hir_def/src/nameres/collector.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fe1b160dcfdeb3f582ccae1440c9580ade0beb39/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe1b160dcfdeb3f582ccae1440c9580ade0beb39/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Fcollector.rs?ref=fe1b160dcfdeb3f582ccae1440c9580ade0beb39", "patch": "@@ -796,7 +796,7 @@ where\n                 PerNs::values(def.into())\n             }\n             raw::DefKind::Static(ast_id) => {\n-                let def = StaticLoc { container: module, ast_id: AstId::new(self.file_id, ast_id) }\n+                let def = StaticLoc { container, ast_id: AstId::new(self.file_id, ast_id) }\n                     .intern(self.def_collector.db);\n \n                 PerNs::values(def.into())"}]}