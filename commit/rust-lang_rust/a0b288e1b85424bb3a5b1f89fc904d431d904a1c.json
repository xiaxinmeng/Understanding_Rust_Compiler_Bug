{"sha": "a0b288e1b85424bb3a5b1f89fc904d431d904a1c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEwYjI4OGUxYjg1NDI0YmIzYTViMWY4OWZjOTA0ZDQzMWQ5MDRhMWM=", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2018-07-11T18:38:49Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-07-11T18:38:49Z"}, "message": "Rollup merge of #52265 - ljedrz:dyn_librustc_codegen_utils, r=oli-obk\n\nDeny bare trait objects in in src/librustc_codegen_utils\n\nEnforce `#![deny(bare_trait_objects)]` in `src/librustc_codegen_utils`.", "tree": {"sha": "ecccdd7baa7a2aea62eb9fc8f40ffb877ce71903", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ecccdd7baa7a2aea62eb9fc8f40ffb877ce71903"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a0b288e1b85424bb3a5b1f89fc904d431d904a1c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbRk65CRBK7hj4Ov3rIwAAdHIIAF7LebCrYNzrEhE2xXAz4wGj\n759Q0L+ztEmwigwf0eKEfbSzXc0vXbAdcQXLBFJAi6+ZDftnUXQhFUUNzb2MCRcA\n3jRNrDLqijiQsV5RW8slk8cskf+yv5sTLVImUJhtq2QYbMCOeenSMnUvT0rOgewH\nhYKad70zO2gSq8IXpzbt/8vFdPpqbFDZbbcnKeD27ezfSOoh+xq4iJxwAAtNTmNl\n4jQUoi0Uto39QeIh9ilCDWGK31RaDCSwHTBlWhEdVgUUdHy5kzxPtpNrJ98gJ6Xc\nwYtey/ooJyOiBzb0M44aDWVkphTf5rjr+9ftA10qVwzlHCO0GRuXGzyHIwA6pX0=\n=lPhL\n-----END PGP SIGNATURE-----\n", "payload": "tree ecccdd7baa7a2aea62eb9fc8f40ffb877ce71903\nparent 7585bd5b394e6acb107da49fc5aa3365e2cc067c\nparent 715b8852e4a94875683c41771e45043d579065ce\nauthor Mark Rousskov <mark.simulacrum@gmail.com> 1531334329 -0600\ncommitter GitHub <noreply@github.com> 1531334329 -0600\n\nRollup merge of #52265 - ljedrz:dyn_librustc_codegen_utils, r=oli-obk\n\nDeny bare trait objects in in src/librustc_codegen_utils\n\nEnforce `#![deny(bare_trait_objects)]` in `src/librustc_codegen_utils`.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a0b288e1b85424bb3a5b1f89fc904d431d904a1c", "html_url": "https://github.com/rust-lang/rust/commit/a0b288e1b85424bb3a5b1f89fc904d431d904a1c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a0b288e1b85424bb3a5b1f89fc904d431d904a1c/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7585bd5b394e6acb107da49fc5aa3365e2cc067c", "url": "https://api.github.com/repos/rust-lang/rust/commits/7585bd5b394e6acb107da49fc5aa3365e2cc067c", "html_url": "https://github.com/rust-lang/rust/commit/7585bd5b394e6acb107da49fc5aa3365e2cc067c"}, {"sha": "715b8852e4a94875683c41771e45043d579065ce", "url": "https://api.github.com/repos/rust-lang/rust/commits/715b8852e4a94875683c41771e45043d579065ce", "html_url": "https://github.com/rust-lang/rust/commit/715b8852e4a94875683c41771e45043d579065ce"}], "stats": {"total": 25, "additions": 13, "deletions": 12}, "files": [{"sha": "3f230dd5d451b5545f241a6d8a9d5ce3ce0a69e5", "filename": "src/librustc_codegen_utils/codegen_backend.rs", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/a0b288e1b85424bb3a5b1f89fc904d431d904a1c/src%2Flibrustc_codegen_utils%2Fcodegen_backend.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a0b288e1b85424bb3a5b1f89fc904d431d904a1c/src%2Flibrustc_codegen_utils%2Fcodegen_backend.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_utils%2Fcodegen_backend.rs?ref=a0b288e1b85424bb3a5b1f89fc904d431d904a1c", "patch": "@@ -56,23 +56,23 @@ pub trait CodegenBackend {\n     fn print_version(&self) {}\n     fn diagnostics(&self) -> &[(&'static str, &'static str)] { &[] }\n \n-    fn metadata_loader(&self) -> Box<MetadataLoader + Sync>;\n+    fn metadata_loader(&self) -> Box<dyn MetadataLoader + Sync>;\n     fn provide(&self, _providers: &mut Providers);\n     fn provide_extern(&self, _providers: &mut Providers);\n     fn codegen_crate<'a, 'tcx>(\n         &self,\n         tcx: TyCtxt<'a, 'tcx, 'tcx>,\n-        rx: mpsc::Receiver<Box<Any + Send>>\n-    ) -> Box<Any>;\n+        rx: mpsc::Receiver<Box<dyn Any + Send>>\n+    ) -> Box<dyn Any>;\n \n-    /// This is called on the returned `Box<Any>` from `codegen_backend`\n+    /// This is called on the returned `Box<dyn Any>` from `codegen_backend`\n     ///\n     /// # Panics\n     ///\n-    /// Panics when the passed `Box<Any>` was not returned by `codegen_backend`.\n+    /// Panics when the passed `Box<dyn Any>` was not returned by `codegen_backend`.\n     fn join_codegen_and_link(\n         &self,\n-        ongoing_codegen: Box<Any>,\n+        ongoing_codegen: Box<dyn Any>,\n         sess: &Session,\n         dep_graph: &DepGraph,\n         outputs: &OutputFilenames,\n@@ -105,7 +105,7 @@ pub struct OngoingCodegen {\n }\n \n impl MetadataOnlyCodegenBackend {\n-    pub fn new() -> Box<CodegenBackend> {\n+    pub fn new() -> Box<dyn CodegenBackend> {\n         box MetadataOnlyCodegenBackend(())\n     }\n }\n@@ -125,7 +125,7 @@ impl CodegenBackend for MetadataOnlyCodegenBackend {\n         }\n     }\n \n-    fn metadata_loader(&self) -> Box<MetadataLoader + Sync> {\n+    fn metadata_loader(&self) -> Box<dyn MetadataLoader + Sync> {\n         box NoLlvmMetadataLoader\n     }\n \n@@ -145,8 +145,8 @@ impl CodegenBackend for MetadataOnlyCodegenBackend {\n     fn codegen_crate<'a, 'tcx>(\n         &self,\n         tcx: TyCtxt<'a, 'tcx, 'tcx>,\n-        _rx: mpsc::Receiver<Box<Any + Send>>\n-    ) -> Box<Any> {\n+        _rx: mpsc::Receiver<Box<dyn Any + Send>>\n+    ) -> Box<dyn Any> {\n         use rustc_mir::monomorphize::item::MonoItem;\n \n         ::check_for_rustc_errors_attr(tcx);\n@@ -193,13 +193,13 @@ impl CodegenBackend for MetadataOnlyCodegenBackend {\n \n     fn join_codegen_and_link(\n         &self,\n-        ongoing_codegen: Box<Any>,\n+        ongoing_codegen: Box<dyn Any>,\n         sess: &Session,\n         _dep_graph: &DepGraph,\n         outputs: &OutputFilenames,\n     ) -> Result<(), CompileIncomplete> {\n         let ongoing_codegen = ongoing_codegen.downcast::<OngoingCodegen>()\n-            .expect(\"Expected MetadataOnlyCodegenBackend's OngoingCodegen, found Box<Any>\");\n+            .expect(\"Expected MetadataOnlyCodegenBackend's OngoingCodegen, found Box<dyn Any>\");\n         for &crate_type in sess.opts.crate_types.iter() {\n             if crate_type != CrateType::CrateTypeRlib && crate_type != CrateType::CrateTypeDylib {\n                 continue;"}, {"sha": "e9031007a4eedbdce4b6b6d50035c925c16adbc6", "filename": "src/librustc_codegen_utils/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a0b288e1b85424bb3a5b1f89fc904d431d904a1c/src%2Flibrustc_codegen_utils%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a0b288e1b85424bb3a5b1f89fc904d431d904a1c/src%2Flibrustc_codegen_utils%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_utils%2Flib.rs?ref=a0b288e1b85424bb3a5b1f89fc904d431d904a1c", "patch": "@@ -20,6 +20,7 @@\n #![feature(box_syntax)]\n #![feature(custom_attribute)]\n #![allow(unused_attributes)]\n+#![deny(bare_trait_objects)]\n #![feature(quote)]\n #![feature(rustc_diagnostic_macros)]\n "}]}