{"sha": "d1731801163df1d3a8d4ddfa68adac2ec833ef7f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQxNzMxODAxMTYzZGYxZDNhOGQ0ZGRmYTY4YWRhYzJlYzgzM2VmN2Y=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-02-07T14:47:57Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-02-07T14:47:57Z"}, "message": "Auto merge of #58266 - GuillaumeGomez:rollup, r=GuillaumeGomez\n\nRollup of 11 pull requests\n\nSuccessful merges:\n\n - #57504 (Re-enable history api on file:// protocol)\n - #57848 (Generate a documentation page for core::mem::transmute.)\n - #57884 (Update minifier version)\n - #57954 (rustdoc: remove blank unstable spans)\n - #58028 (Fix image link in the settings menu)\n - #58033 (rustdoc: wrap stability tags in colored spans)\n - #58086 ([rustdoc] Improve file list display)\n - #58143 (Sort elements in the sidebar)\n - #58146 (Prevent automatic collapse of methods impl blocks)\n - #58150 (Don't apply impl block collapse rules to trait impls)\n - #58185 (Remove images' url to make it work even without internet connection)\n\nFailed merges:\n\nr? @ghost", "tree": {"sha": "460c196f56d88441245641462d833b4ca6a1100d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/460c196f56d88441245641462d833b4ca6a1100d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d1731801163df1d3a8d4ddfa68adac2ec833ef7f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d1731801163df1d3a8d4ddfa68adac2ec833ef7f", "html_url": "https://github.com/rust-lang/rust/commit/d1731801163df1d3a8d4ddfa68adac2ec833ef7f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ad433894abd4231fb2102416a520ae995ee09aed", "url": "https://api.github.com/repos/rust-lang/rust/commits/ad433894abd4231fb2102416a520ae995ee09aed", "html_url": "https://github.com/rust-lang/rust/commit/ad433894abd4231fb2102416a520ae995ee09aed"}, {"sha": "761caa2334bd7f3668819ee8218569f3098c4a36", "url": "https://api.github.com/repos/rust-lang/rust/commits/761caa2334bd7f3668819ee8218569f3098c4a36", "html_url": "https://github.com/rust-lang/rust/commit/761caa2334bd7f3668819ee8218569f3098c4a36"}], "stats": {"total": 484, "additions": 240, "deletions": 244}, "files": [{"sha": "f135dd0170bc1e77e121d76f53b16ec789fb6c58", "filename": "Cargo.lock", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=d1731801163df1d3a8d4ddfa68adac2ec833ef7f", "patch": "@@ -1503,7 +1503,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n [[package]]\n name = \"minifier\"\n-version = \"0.0.26\"\n+version = \"0.0.28\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"macro-utils 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -2992,7 +2992,7 @@ dependencies = [\n name = \"rustdoc\"\n version = \"0.0.0\"\n dependencies = [\n- \"minifier 0.0.26 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"minifier 0.0.28 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"parking_lot 0.6.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"pulldown-cmark 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"tempfile 3.0.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -4066,7 +4066,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum memchr 2.1.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"0a3eb002f0535929f1199681417029ebea04aadc0c7a4224b46be99c7f5d6a16\"\n \"checksum memmap 0.6.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"e2ffa2c986de11a9df78620c01eeaaf27d94d3ff02bf81bfcca953102dd0c6ff\"\n \"checksum memoffset 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"0f9dc261e2b62d7a622bf416ea3c5245cdd5d9a7fcc428c0d06804dfce1775b3\"\n-\"checksum minifier 0.0.26 (registry+https://github.com/rust-lang/crates.io-index)\" = \"f299df45afd73332044ea9f717c816a84fc90c8b631409abf339ba93642a7985\"\n+\"checksum minifier 0.0.28 (registry+https://github.com/rust-lang/crates.io-index)\" = \"3a2898502751dcc9d66b6fff57f3cf63cc91605e83e1a33515396f5027f8e4ca\"\n \"checksum miniz-sys 0.1.11 (registry+https://github.com/rust-lang/crates.io-index)\" = \"0300eafb20369952951699b68243ab4334f4b10a88f411c221d444b36c40e649\"\n \"checksum miniz_oxide 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"5ad30a47319c16cde58d0314f5d98202a80c9083b5f61178457403dfb14e509c\"\n \"checksum miniz_oxide_c_api 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"28edaef377517fd9fe3e085c37d892ce7acd1fbeab9239c5a36eec352d8a8b7e\""}, {"sha": "189ba84eeed1d3b385e8751f2738fe924cbe44a3", "filename": "src/liballoc/lib.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Fliballoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Fliballoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Flib.rs?ref=d1731801163df1d3a8d4ddfa68adac2ec833ef7f", "patch": "@@ -55,9 +55,7 @@\n             reason = \"this library is unlikely to be stabilized in its current \\\n                       form or name\",\n             issue = \"27783\")]\n-#![doc(html_logo_url = \"https://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png\",\n-       html_favicon_url = \"https://doc.rust-lang.org/favicon.ico\",\n-       html_root_url = \"https://doc.rust-lang.org/nightly/\",\n+#![doc(html_root_url = \"https://doc.rust-lang.org/nightly/\",\n        issue_tracker_base_url = \"https://github.com/rust-lang/rust/issues/\",\n        test(no_crate_inject, attr(allow(unused_variables), deny(warnings))))]\n #![no_std]"}, {"sha": "aa522d86dcf94d0137adc14461fc8ac70e4feedc", "filename": "src/libarena/lib.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Flibarena%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Flibarena%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibarena%2Flib.rs?ref=d1731801163df1d3a8d4ddfa68adac2ec833ef7f", "patch": "@@ -8,9 +8,7 @@\n //! This crate implements `TypedArena`, a simple arena that can only hold\n //! objects of a single type.\n \n-#![doc(html_logo_url = \"https://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png\",\n-       html_favicon_url = \"https://doc.rust-lang.org/favicon.ico\",\n-       html_root_url = \"https://doc.rust-lang.org/nightly/\",\n+#![doc(html_root_url = \"https://doc.rust-lang.org/nightly/\",\n        test(no_crate_inject, attr(deny(warnings))))]\n \n #![feature(alloc)]"}, {"sha": "78f1c3c0dffa5a1c9a5334cefc32c8696961e067", "filename": "src/libcore/lib.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Flibcore%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Flibcore%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Flib.rs?ref=d1731801163df1d3a8d4ddfa68adac2ec833ef7f", "patch": "@@ -51,9 +51,7 @@\n #![cfg(not(test))]\n \n #![stable(feature = \"core\", since = \"1.6.0\")]\n-#![doc(html_logo_url = \"https://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png\",\n-       html_favicon_url = \"https://doc.rust-lang.org/favicon.ico\",\n-       html_root_url = \"https://doc.rust-lang.org/nightly/\",\n+#![doc(html_root_url = \"https://doc.rust-lang.org/nightly/\",\n        html_playground_url = \"https://play.rust-lang.org/\",\n        issue_tracker_base_url = \"https://github.com/rust-lang/rust/issues/\",\n        test(no_crate_inject, attr(deny(warnings))),"}, {"sha": "6dad32f399b239ae282efea70256d6050c8bae98", "filename": "src/libcore/mem.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Flibcore%2Fmem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Flibcore%2Fmem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmem.rs?ref=d1731801163df1d3a8d4ddfa68adac2ec833ef7f", "patch": "@@ -15,6 +15,7 @@ use ptr;\n use ops::{Deref, DerefMut};\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+#[doc(inline)]\n pub use intrinsics::transmute;\n \n /// Takes ownership and \"forgets\" about the value **without running its destructor**."}, {"sha": "ea67c01dfc9ea2773ab712e8804faaf53d1c84f6", "filename": "src/libfmt_macros/lib.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Flibfmt_macros%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Flibfmt_macros%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibfmt_macros%2Flib.rs?ref=d1731801163df1d3a8d4ddfa68adac2ec833ef7f", "patch": "@@ -4,9 +4,7 @@\n //! Parsing does not happen at runtime: structures of `std::fmt::rt` are\n //! generated instead.\n \n-#![doc(html_logo_url = \"https://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png\",\n-       html_favicon_url = \"https://doc.rust-lang.org/favicon.ico\",\n-       html_root_url = \"https://doc.rust-lang.org/nightly/\",\n+#![doc(html_root_url = \"https://doc.rust-lang.org/nightly/\",\n        html_playground_url = \"https://play.rust-lang.org/\",\n        test(attr(deny(warnings))))]\n "}, {"sha": "8ce0f755df035328d4046e62b0a4bb9f613621de", "filename": "src/libgraphviz/lib.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Flibgraphviz%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Flibgraphviz%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibgraphviz%2Flib.rs?ref=d1731801163df1d3a8d4ddfa68adac2ec833ef7f", "patch": "@@ -271,9 +271,7 @@\n //!\n //! * [DOT language](http://www.graphviz.org/doc/info/lang.html)\n \n-#![doc(html_logo_url = \"https://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png\",\n-       html_favicon_url = \"https://doc.rust-lang.org/favicon.ico\",\n-       html_root_url = \"https://doc.rust-lang.org/nightly/\",\n+#![doc(html_root_url = \"https://doc.rust-lang.org/nightly/\",\n        test(attr(allow(unused_variables), deny(warnings))))]\n \n #![deny(rust_2018_idioms)]"}, {"sha": "7c6f36ece3c834096fd21b5c05e49b41bc7c489b", "filename": "src/libpanic_abort/lib.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Flibpanic_abort%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Flibpanic_abort%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibpanic_abort%2Flib.rs?ref=d1731801163df1d3a8d4ddfa68adac2ec833ef7f", "patch": "@@ -5,9 +5,7 @@\n \n #![no_std]\n #![unstable(feature = \"panic_abort\", issue = \"32837\")]\n-#![doc(html_logo_url = \"https://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png\",\n-       html_favicon_url = \"https://doc.rust-lang.org/favicon.ico\",\n-       html_root_url = \"https://doc.rust-lang.org/nightly/\",\n+#![doc(html_root_url = \"https://doc.rust-lang.org/nightly/\",\n        issue_tracker_base_url = \"https://github.com/rust-lang/rust/issues/\")]\n #![panic_runtime]\n "}, {"sha": "fa7a0916d429bc10074a55f75ceba5be9954018d", "filename": "src/libpanic_unwind/lib.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Flibpanic_unwind%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Flibpanic_unwind%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibpanic_unwind%2Flib.rs?ref=d1731801163df1d3a8d4ddfa68adac2ec833ef7f", "patch": "@@ -14,9 +14,7 @@\n \n #![no_std]\n #![unstable(feature = \"panic_unwind\", issue = \"32837\")]\n-#![doc(html_logo_url = \"https://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png\",\n-       html_favicon_url = \"https://doc.rust-lang.org/favicon.ico\",\n-       html_root_url = \"https://doc.rust-lang.org/nightly/\",\n+#![doc(html_root_url = \"https://doc.rust-lang.org/nightly/\",\n        issue_tracker_base_url = \"https://github.com/rust-lang/rust/issues/\")]\n \n #![feature(allocator_api)]"}, {"sha": "2cdc5a48a53168936d9389ab4da85b46fe99942b", "filename": "src/libproc_macro/lib.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Flibproc_macro%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Flibproc_macro%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibproc_macro%2Flib.rs?ref=d1731801163df1d3a8d4ddfa68adac2ec833ef7f", "patch": "@@ -9,9 +9,7 @@\n \n #![stable(feature = \"proc_macro_lib\", since = \"1.15.0\")]\n #![deny(missing_docs)]\n-#![doc(html_logo_url = \"https://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png\",\n-       html_favicon_url = \"https://doc.rust-lang.org/favicon.ico\",\n-       html_root_url = \"https://doc.rust-lang.org/nightly/\",\n+#![doc(html_root_url = \"https://doc.rust-lang.org/nightly/\",\n        html_playground_url = \"https://play.rust-lang.org/\",\n        issue_tracker_base_url = \"https://github.com/rust-lang/rust/issues/\",\n        test(no_crate_inject, attr(deny(warnings))),"}, {"sha": "be1475564778af30338d40e13e6b00ef7a6a5815", "filename": "src/librustc/lib.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Flibrustc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Flibrustc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flib.rs?ref=d1731801163df1d3a8d4ddfa68adac2ec833ef7f", "patch": "@@ -26,9 +26,7 @@\n //!\n //! This API is completely unstable and subject to change.\n \n-#![doc(html_logo_url = \"https://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png\",\n-       html_favicon_url = \"https://doc.rust-lang.org/favicon.ico\",\n-       html_root_url = \"https://doc.rust-lang.org/nightly/\")]\n+#![doc(html_root_url = \"https://doc.rust-lang.org/nightly/\")]\n \n #![deny(rust_2018_idioms)]\n #![allow(explicit_outlives_requirements)]"}, {"sha": "f79d448edce9f548d9d3dfe90ec61510e2df8ffb", "filename": "src/librustc_apfloat/lib.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Flibrustc_apfloat%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Flibrustc_apfloat%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_apfloat%2Flib.rs?ref=d1731801163df1d3a8d4ddfa68adac2ec833ef7f", "patch": "@@ -30,9 +30,7 @@\n //!\n //! This API is completely unstable and subject to change.\n \n-#![doc(html_logo_url = \"https://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png\",\n-      html_favicon_url = \"https://doc.rust-lang.org/favicon.ico\",\n-      html_root_url = \"https://doc.rust-lang.org/nightly/\")]\n+#![doc(html_root_url = \"https://doc.rust-lang.org/nightly/\")]\n #![forbid(unsafe_code)]\n #![deny(rust_2018_idioms)]\n "}, {"sha": "49890330a4e429c9101cedbf228a358b31238529", "filename": "src/librustc_borrowck/lib.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Flibrustc_borrowck%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Flibrustc_borrowck%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Flib.rs?ref=d1731801163df1d3a8d4ddfa68adac2ec833ef7f", "patch": "@@ -1,6 +1,4 @@\n-#![doc(html_logo_url = \"https://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png\",\n-      html_favicon_url = \"https://doc.rust-lang.org/favicon.ico\",\n-      html_root_url = \"https://doc.rust-lang.org/nightly/\")]\n+#![doc(html_root_url = \"https://doc.rust-lang.org/nightly/\")]\n \n #![allow(non_camel_case_types)]\n "}, {"sha": "ad8db25ee95a0c70446b67441bd4d7afa1f57ad8", "filename": "src/librustc_codegen_llvm/lib.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Flibrustc_codegen_llvm%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Flibrustc_codegen_llvm%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Flib.rs?ref=d1731801163df1d3a8d4ddfa68adac2ec833ef7f", "patch": "@@ -4,9 +4,7 @@\n //!\n //! This API is completely unstable and subject to change.\n \n-#![doc(html_logo_url = \"https://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png\",\n-      html_favicon_url = \"https://doc.rust-lang.org/favicon.ico\",\n-      html_root_url = \"https://doc.rust-lang.org/nightly/\")]\n+#![doc(html_root_url = \"https://doc.rust-lang.org/nightly/\")]\n \n #![feature(box_patterns)]\n #![feature(box_syntax)]"}, {"sha": "58b3f0434a6239ca458cc1db260a85356e87b184", "filename": "src/librustc_codegen_ssa/lib.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Flibrustc_codegen_ssa%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Flibrustc_codegen_ssa%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Flib.rs?ref=d1731801163df1d3a8d4ddfa68adac2ec833ef7f", "patch": "@@ -1,6 +1,4 @@\n-#![doc(html_logo_url = \"https://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png\",\n-      html_favicon_url = \"https://doc.rust-lang.org/favicon.ico\",\n-      html_root_url = \"https://doc.rust-lang.org/nightly/\")]\n+#![doc(html_root_url = \"https://doc.rust-lang.org/nightly/\")]\n \n #![feature(box_patterns)]\n #![feature(box_syntax)]"}, {"sha": "a87b02d33de8f2c4fce4957ded5400734639282f", "filename": "src/librustc_codegen_utils/codegen_backend.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Flibrustc_codegen_utils%2Fcodegen_backend.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Flibrustc_codegen_utils%2Fcodegen_backend.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_utils%2Fcodegen_backend.rs?ref=d1731801163df1d3a8d4ddfa68adac2ec833ef7f", "patch": "@@ -4,9 +4,7 @@\n //!\n //! This API is completely unstable and subject to change.\n \n-#![doc(html_logo_url = \"https://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png\",\n-      html_favicon_url = \"https://doc.rust-lang.org/favicon.ico\",\n-      html_root_url = \"https://doc.rust-lang.org/nightly/\")]\n+#![doc(html_root_url = \"https://doc.rust-lang.org/nightly/\")]\n #![deny(warnings)]\n \n #![feature(box_syntax)]"}, {"sha": "d6ef555144d201cfdfde13a8504b8288e974dbba", "filename": "src/librustc_codegen_utils/lib.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Flibrustc_codegen_utils%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Flibrustc_codegen_utils%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_utils%2Flib.rs?ref=d1731801163df1d3a8d4ddfa68adac2ec833ef7f", "patch": "@@ -2,9 +2,7 @@\n //!\n //! This API is completely unstable and subject to change.\n \n-#![doc(html_logo_url = \"https://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png\",\n-      html_favicon_url = \"https://doc.rust-lang.org/favicon.ico\",\n-      html_root_url = \"https://doc.rust-lang.org/nightly/\")]\n+#![doc(html_root_url = \"https://doc.rust-lang.org/nightly/\")]\n \n #![feature(box_patterns)]\n #![feature(box_syntax)]"}, {"sha": "a46f8aed324997e09bec0e70bf3fe7d6442879c0", "filename": "src/librustc_data_structures/lib.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Flibrustc_data_structures%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Flibrustc_data_structures%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Flib.rs?ref=d1731801163df1d3a8d4ddfa68adac2ec833ef7f", "patch": "@@ -6,9 +6,7 @@\n //!\n //! This API is completely unstable and subject to change.\n \n-#![doc(html_logo_url = \"https://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png\",\n-      html_favicon_url = \"https://www.rust-lang.org/favicon.ico\",\n-      html_root_url = \"https://doc.rust-lang.org/nightly/\")]\n+#![doc(html_root_url = \"https://doc.rust-lang.org/nightly/\")]\n \n #![feature(in_band_lifetimes)]\n #![feature(unboxed_closures)]"}, {"sha": "b356ae38e24ca7359427209e52cd28068507c2d1", "filename": "src/librustc_driver/lib.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Flibrustc_driver%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Flibrustc_driver%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Flib.rs?ref=d1731801163df1d3a8d4ddfa68adac2ec833ef7f", "patch": "@@ -4,9 +4,7 @@\n //!\n //! This API is completely unstable and subject to change.\n \n-#![doc(html_logo_url = \"https://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png\",\n-      html_favicon_url = \"https://doc.rust-lang.org/favicon.ico\",\n-      html_root_url = \"https://doc.rust-lang.org/nightly/\")]\n+#![doc(html_root_url = \"https://doc.rust-lang.org/nightly/\")]\n \n #![feature(box_syntax)]\n #![cfg_attr(unix, feature(libc))]"}, {"sha": "ea530fa1bfb739888a367d806532eef32d73ba38", "filename": "src/librustc_errors/lib.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Flibrustc_errors%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Flibrustc_errors%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Flib.rs?ref=d1731801163df1d3a8d4ddfa68adac2ec833ef7f", "patch": "@@ -1,6 +1,4 @@\n-#![doc(html_logo_url = \"https://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png\",\n-      html_favicon_url = \"https://doc.rust-lang.org/favicon.ico\",\n-      html_root_url = \"https://doc.rust-lang.org/nightly/\")]\n+#![doc(html_root_url = \"https://doc.rust-lang.org/nightly/\")]\n \n #![feature(custom_attribute)]\n #![allow(unused_attributes)]"}, {"sha": "f69a1cfa3a92b64003dfdb61b5326d8a0350c376", "filename": "src/librustc_incremental/lib.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Flibrustc_incremental%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Flibrustc_incremental%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Flib.rs?ref=d1731801163df1d3a8d4ddfa68adac2ec833ef7f", "patch": "@@ -1,8 +1,6 @@\n //! Support for serializing the dep-graph and reloading it.\n \n-#![doc(html_logo_url = \"https://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png\",\n-      html_favicon_url = \"https://doc.rust-lang.org/favicon.ico\",\n-      html_root_url = \"https://doc.rust-lang.org/nightly/\")]\n+#![doc(html_root_url = \"https://doc.rust-lang.org/nightly/\")]\n \n #![feature(nll)]\n #![feature(specialization)]"}, {"sha": "fd5e68d5ae60a5fb5367b82428242a1cd6bb9677", "filename": "src/librustc_lint/lib.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Flibrustc_lint%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Flibrustc_lint%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Flib.rs?ref=d1731801163df1d3a8d4ddfa68adac2ec833ef7f", "patch": "@@ -9,9 +9,7 @@\n //!\n //! This API is completely unstable and subject to change.\n \n-#![doc(html_logo_url = \"https://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png\",\n-      html_favicon_url = \"https://doc.rust-lang.org/favicon.ico\",\n-      html_root_url = \"https://doc.rust-lang.org/nightly/\")]\n+#![doc(html_root_url = \"https://doc.rust-lang.org/nightly/\")]\n \n #![cfg_attr(test, feature(test))]\n #![feature(box_patterns)]"}, {"sha": "3fcb20a29ddc9accab426246d60c4fd0af1037b9", "filename": "src/librustc_llvm/lib.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Flibrustc_llvm%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Flibrustc_llvm%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_llvm%2Flib.rs?ref=d1731801163df1d3a8d4ddfa68adac2ec833ef7f", "patch": "@@ -1,9 +1,7 @@\n #![deny(rust_2018_idioms)]\n #![feature(static_nobundle)]\n \n-#![doc(html_logo_url = \"https://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png\",\n-       html_favicon_url = \"https://doc.rust-lang.org/favicon.ico\",\n-       html_root_url = \"https://doc.rust-lang.org/nightly/\")]\n+#![doc(html_root_url = \"https://doc.rust-lang.org/nightly/\")]\n \n // See librustc_cratesio_shim/Cargo.toml for a comment explaining this.\n #[allow(unused_extern_crates)]"}, {"sha": "5dc736bfbd313f5af26af8bad0f1714e4aed9b79", "filename": "src/librustc_metadata/lib.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Flibrustc_metadata%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Flibrustc_metadata%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Flib.rs?ref=d1731801163df1d3a8d4ddfa68adac2ec833ef7f", "patch": "@@ -1,6 +1,4 @@\n-#![doc(html_logo_url = \"https://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png\",\n-       html_favicon_url = \"https://doc.rust-lang.org/favicon.ico\",\n-       html_root_url = \"https://doc.rust-lang.org/nightly/\")]\n+#![doc(html_root_url = \"https://doc.rust-lang.org/nightly/\")]\n \n #![feature(box_patterns)]\n #![feature(libc)]"}, {"sha": "625f2fcb249d139b7dd8ce92ad9be47617bb42c4", "filename": "src/librustc_passes/lib.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Flibrustc_passes%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Flibrustc_passes%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Flib.rs?ref=d1731801163df1d3a8d4ddfa68adac2ec833ef7f", "patch": "@@ -4,9 +4,7 @@\n //!\n //! This API is completely unstable and subject to change.\n \n-#![doc(html_logo_url = \"https://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png\",\n-       html_favicon_url = \"https://doc.rust-lang.org/favicon.ico\",\n-       html_root_url = \"https://doc.rust-lang.org/nightly/\")]\n+#![doc(html_root_url = \"https://doc.rust-lang.org/nightly/\")]\n \n #![feature(nll)]\n #![feature(rustc_diagnostic_macros)]"}, {"sha": "32e003ff10747ba9d30d536af22cc603a8caa903", "filename": "src/librustc_plugin/lib.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Flibrustc_plugin%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Flibrustc_plugin%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_plugin%2Flib.rs?ref=d1731801163df1d3a8d4ddfa68adac2ec833ef7f", "patch": "@@ -50,9 +50,7 @@\n //! See the [`plugin` feature](../unstable-book/language-features/plugin.html) of\n //! the Unstable Book for more examples.\n \n-#![doc(html_logo_url = \"https://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png\",\n-       html_favicon_url = \"https://doc.rust-lang.org/favicon.ico\",\n-       html_root_url = \"https://doc.rust-lang.org/nightly/\")]\n+#![doc(html_root_url = \"https://doc.rust-lang.org/nightly/\")]\n \n #![feature(rustc_diagnostic_macros)]\n "}, {"sha": "14a0922c477404edbc198a9ccf1d55bba3ed9b4d", "filename": "src/librustc_privacy/lib.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Flibrustc_privacy%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Flibrustc_privacy%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_privacy%2Flib.rs?ref=d1731801163df1d3a8d4ddfa68adac2ec833ef7f", "patch": "@@ -1,6 +1,4 @@\n-#![doc(html_logo_url = \"https://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png\",\n-       html_favicon_url = \"https://doc.rust-lang.org/favicon.ico\",\n-       html_root_url = \"https://doc.rust-lang.org/nightly/\")]\n+#![doc(html_root_url = \"https://doc.rust-lang.org/nightly/\")]\n \n #![deny(rust_2018_idioms)]\n "}, {"sha": "270f24241971499d6694d8694558c9ef03b2d161", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=d1731801163df1d3a8d4ddfa68adac2ec833ef7f", "patch": "@@ -1,6 +1,4 @@\n-#![doc(html_logo_url = \"https://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png\",\n-       html_favicon_url = \"https://doc.rust-lang.org/favicon.ico\",\n-       html_root_url = \"https://doc.rust-lang.org/nightly/\")]\n+#![doc(html_root_url = \"https://doc.rust-lang.org/nightly/\")]\n \n #![feature(crate_visibility_modifier)]\n #![feature(label_break_value)]"}, {"sha": "b9d195d571568bfd3a32fc8d7c14b77407d234f4", "filename": "src/librustc_save_analysis/lib.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Flibrustc_save_analysis%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Flibrustc_save_analysis%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_save_analysis%2Flib.rs?ref=d1731801163df1d3a8d4ddfa68adac2ec833ef7f", "patch": "@@ -1,6 +1,4 @@\n-#![doc(html_logo_url = \"https://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png\",\n-       html_favicon_url = \"https://doc.rust-lang.org/favicon.ico\",\n-       html_root_url = \"https://doc.rust-lang.org/nightly/\")]\n+#![doc(html_root_url = \"https://doc.rust-lang.org/nightly/\")]\n #![feature(custom_attribute)]\n #![feature(nll)]\n #![allow(unused_attributes)]"}, {"sha": "8e9d0851af162d83de4f668746a38cb081d0f0b0", "filename": "src/librustc_target/lib.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Flibrustc_target%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Flibrustc_target%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Flib.rs?ref=d1731801163df1d3a8d4ddfa68adac2ec833ef7f", "patch": "@@ -7,9 +7,7 @@\n //! more 'stuff' here in the future.  It does not have a dependency on\n //! LLVM.\n \n-#![doc(html_logo_url = \"https://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png\",\n-      html_favicon_url = \"https://doc.rust-lang.org/favicon.ico\",\n-      html_root_url = \"https://doc.rust-lang.org/nightly/\")]\n+#![doc(html_root_url = \"https://doc.rust-lang.org/nightly/\")]\n \n #![feature(box_syntax)]\n #![feature(nll)]"}, {"sha": "8d77310f3d427ccb40ce3529e6ff781aec84839c", "filename": "src/librustc_typeck/lib.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Flibrustc_typeck%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Flibrustc_typeck%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Flib.rs?ref=d1731801163df1d3a8d4ddfa68adac2ec833ef7f", "patch": "@@ -55,9 +55,7 @@ This API is completely unstable and subject to change.\n \n */\n \n-#![doc(html_logo_url = \"https://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png\",\n-      html_favicon_url = \"https://doc.rust-lang.org/favicon.ico\",\n-      html_root_url = \"https://doc.rust-lang.org/nightly/\")]\n+#![doc(html_root_url = \"https://doc.rust-lang.org/nightly/\")]\n \n #![allow(non_camel_case_types)]\n "}, {"sha": "20d5e672a83688c5733e5343ef30180e663607bb", "filename": "src/librustdoc/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Flibrustdoc%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Flibrustdoc%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2FCargo.toml?ref=d1731801163df1d3a8d4ddfa68adac2ec833ef7f", "patch": "@@ -9,6 +9,6 @@ path = \"lib.rs\"\n \n [dependencies]\n pulldown-cmark = { version = \"0.1.2\", default-features = false }\n-minifier = \"0.0.26\"\n+minifier = \"0.0.28\"\n tempfile = \"3\"\n parking_lot = \"0.6.4\""}, {"sha": "b444993c1b5ecd9f153492c5a2058248c2fe6d93", "filename": "src/librustdoc/html/layout.rs", "status": "modified", "additions": 18, "deletions": 10, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Flibrustdoc%2Fhtml%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Flibrustdoc%2Fhtml%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Flayout.rs?ref=d1731801163df1d3a8d4ddfa68adac2ec833ef7f", "patch": "@@ -4,6 +4,8 @@ use std::path::PathBuf;\n \n use externalfiles::ExternalHtml;\n \n+use html::render::SlashChecker;\n+\n #[derive(Clone)]\n pub struct Layout {\n     pub logo: String,\n@@ -176,16 +178,22 @@ pub fn render<T: fmt::Display, S: fmt::Display>(\n     static_root_path = static_root_path,\n     root_path = page.root_path,\n     css_class = page.css_class,\n-    logo      = if layout.logo.is_empty() {\n-        format!(\"<a href='{}{}/index.html'>\\\n-                 <img src='{static_root_path}rust-logo{suffix}.png' alt='logo' width='100'></a>\",\n-                static_root_path=static_root_path,\n-                suffix=page.resource_suffix)\n-    } else {\n-        format!(\"<a href='{}{}/index.html'>\\\n-                 <img src='{}' alt='logo' width='100'></a>\",\n-                page.root_path, layout.krate,\n-                layout.logo)\n+    logo      = {\n+        let p = format!(\"{}{}\", page.root_path, layout.krate);\n+        let p = SlashChecker(&p);\n+        if layout.logo.is_empty() {\n+            format!(\"<a href='{path}index.html'>\\\n+                     <img src='{static_root_path}rust-logo{suffix}.png' \\\n+                          alt='logo' width='100'></a>\",\n+                    path=p,\n+                    static_root_path=static_root_path,\n+                    suffix=page.resource_suffix)\n+        } else {\n+            format!(\"<a href='{}index.html'>\\\n+                     <img src='{}' alt='logo' width='100'></a>\",\n+                    p,\n+                    layout.logo)\n+        }\n     },\n     title     = page.title,\n     description = page.description,"}, {"sha": "a85ac19286af533f6b320f69ab59eeaa7f67fddd", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 111, "deletions": 89, "changes": 200, "blob_url": "https://github.com/rust-lang/rust/blob/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=d1731801163df1d3a8d4ddfa68adac2ec833ef7f", "patch": "@@ -73,6 +73,18 @@ use minifier;\n /// A pair of name and its optional document.\n pub type NameDoc = (String, Option<String>);\n \n+pub struct SlashChecker<'a>(pub &'a str);\n+\n+impl<'a> Display for SlashChecker<'a> {\n+    fn fmt(&self, f: &mut Formatter) -> fmt::Result {\n+        if !self.0.ends_with(\"/\") && !self.0.is_empty() {\n+            write!(f, \"{}/\", self.0)\n+        } else {\n+            write!(f, \"{}\", self.0)\n+        }\n+    }\n+}\n+\n /// Major driving force in all rustdoc rendering. This contains information\n /// about where in the tree-like hierarchy rendering is occurring and controls\n /// how the current page is being rendered.\n@@ -939,7 +951,7 @@ themePicker.onblur = handleThemeButtonsBlur;\n         if path.exists() {\n             for line in BufReader::new(File::open(path)?).lines() {\n                 let line = line?;\n-                if for_search_index && line.starts_with(\"var r_\") {\n+                if for_search_index && line.starts_with(\"var R\") {\n                     variables.push(line.clone());\n                     // We need to check if the crate name has been put into a variable as well.\n                     let tokens = js::simple_minify(&line).apply(js::clean_tokens);\n@@ -1140,7 +1152,8 @@ themePicker.onblur = handleThemeButtonsBlur;\n                                   krates\n                                     .iter()\n                                     .map(|s| {\n-                                        format!(\"<li><a href=\\\"{}/index.html\\\">{}</li>\", s, s)\n+                                        format!(\"<li><a href=\\\"{}index.html\\\">{}</li>\",\n+                                                SlashChecker(s), s)\n                                     })\n                                     .collect::<String>());\n             try_err!(layout::render(&mut w, &cx.shared.layout,\n@@ -1299,8 +1312,9 @@ fn write_minify_replacer<W: Write>(\n                               })\n                               .apply(|f| {\n                                   // We add a backline after the newly created variables.\n-                                  minifier::js::aggregate_strings_with_separation(\n+                                  minifier::js::aggregate_strings_into_array_with_separation(\n                                       f,\n+                                      \"R\",\n                                       Token::Char(ReservedChar::Backline),\n                                   )\n                               })\n@@ -2074,8 +2088,7 @@ impl Context {\n         let mut themes = self.shared.themes.clone();\n         let sidebar = \"<p class='location'>Settings</p><div class='sidebar-elems'></div>\";\n         themes.push(PathBuf::from(\"settings.css\"));\n-        let mut layout = self.shared.layout.clone();\n-        layout.krate = String::new();\n+        let layout = self.shared.layout.clone();\n         try_err!(layout::render(&mut w, &layout,\n                                 &page, &sidebar, &settings,\n                                 self.shared.css_file_extension.is_some(),\n@@ -2454,7 +2467,7 @@ impl<'a> fmt::Display for Item<'a> {\n \n fn item_path(ty: ItemType, name: &str) -> String {\n     match ty {\n-        ItemType::Module => format!(\"{}/index.html\", name),\n+        ItemType::Module => format!(\"{}index.html\", SlashChecker(name)),\n         _ => format!(\"{}.{}.html\", ty.css_class(), name),\n     }\n }\n@@ -2798,9 +2811,13 @@ fn item_module(w: &mut fmt::Formatter, cx: &Context,\n fn stability_tags(item: &clean::Item) -> String {\n     let mut tags = String::new();\n \n+    fn tag_html(class: &str, contents: &str) -> String {\n+        format!(r#\"<span class=\"stab {}\">{}</span>\"#, class, contents)\n+    }\n+\n     // The trailing space after each tag is to space it properly against the rest of the docs.\n     if item.deprecation().is_some() {\n-        tags.push_str(\"[<div class='stab deprecated'>Deprecated</div>] \");\n+        tags += &tag_html(\"deprecated\", \"Deprecated\");\n     }\n \n     if let Some(stab) = item\n@@ -2809,17 +2826,14 @@ fn stability_tags(item: &clean::Item) -> String {\n         .filter(|s| s.level == stability::Unstable)\n     {\n         if stab.feature.as_ref().map(|s| &**s) == Some(\"rustc_private\") {\n-            tags.push_str(\"[<div class='stab internal'>Internal</div>] \");\n+            tags += &tag_html(\"internal\", \"Internal\");\n         } else {\n-            tags.push_str(\"[<div class='stab unstable'>Experimental</div>] \");\n+            tags += &tag_html(\"unstable\", \"Experimental\");\n         }\n     }\n \n     if let Some(ref cfg) = item.attrs.cfg {\n-        tags.push_str(&format!(\n-            \"[<div class='stab portability'>{}</div>] \",\n-            cfg.render_short_html()\n-        ));\n+        tags += &tag_html(\"portability\", &cfg.render_short_html());\n     }\n \n     tags\n@@ -3483,10 +3497,6 @@ fn item_struct(w: &mut fmt::Formatter, cx: &Context, it: &clean::Item,\n                        ns_id = ns_id,\n                        name = field.name.as_ref().unwrap(),\n                        ty = ty)?;\n-                if let Some(stability_class) = field.stability_class() {\n-                    write!(w, \"<span class='stab {stab}'></span>\",\n-                        stab = stability_class)?;\n-                }\n                 document(w, cx, field)?;\n             }\n         }\n@@ -4470,15 +4480,17 @@ fn sidebar_assoc_items(it: &clean::Item) -> String {\n \n         {\n             let used_links_bor = Rc::new(RefCell::new(&mut used_links));\n-            let ret = v.iter()\n-                       .filter(|i| i.inner_impl().trait_.is_none())\n-                       .flat_map(move |i| get_methods(i.inner_impl(),\n-                                                      false,\n-                                                      &mut used_links_bor.borrow_mut()))\n-                       .collect::<String>();\n+            let mut ret = v.iter()\n+                           .filter(|i| i.inner_impl().trait_.is_none())\n+                           .flat_map(move |i| get_methods(i.inner_impl(),\n+                                                          false,\n+                                                          &mut used_links_bor.borrow_mut()))\n+                           .collect::<Vec<_>>();\n+            // We want links' order to be reproducible so we don't use unstable sort.\n+            ret.sort();\n             if !ret.is_empty() {\n                 out.push_str(&format!(\"<a class=\\\"sidebar-title\\\" href=\\\"#methods\\\">Methods\\\n-                                       </a><div class=\\\"sidebar-links\\\">{}</div>\", ret));\n+                                       </a><div class=\\\"sidebar-links\\\">{}</div>\", ret.join(\"\")));\n             }\n         }\n \n@@ -4502,40 +4514,47 @@ fn sidebar_assoc_items(it: &clean::Item) -> String {\n                                                      impl_.inner_impl().trait_.as_ref().unwrap())),\n                                               Escape(&format!(\"{:#}\", target))));\n                         out.push_str(\"</a>\");\n-                        let ret = impls.iter()\n-                                       .filter(|i| i.inner_impl().trait_.is_none())\n-                                       .flat_map(|i| get_methods(i.inner_impl(),\n-                                                                 true,\n-                                                                 &mut used_links))\n-                                       .collect::<String>();\n-                        out.push_str(&format!(\"<div class=\\\"sidebar-links\\\">{}</div>\", ret));\n+                        let mut ret = impls.iter()\n+                                           .filter(|i| i.inner_impl().trait_.is_none())\n+                                           .flat_map(|i| get_methods(i.inner_impl(),\n+                                                                     true,\n+                                                                     &mut used_links))\n+                                           .collect::<Vec<_>>();\n+                        // We want links' order to be reproducible so we don't use unstable sort.\n+                        ret.sort();\n+                        if !ret.is_empty() {\n+                            out.push_str(&format!(\"<div class=\\\"sidebar-links\\\">{}</div>\",\n+                                                  ret.join(\"\")));\n+                        }\n                     }\n                 }\n             }\n             let format_impls = |impls: Vec<&Impl>| {\n                 let mut links = FxHashSet::default();\n \n-                impls.iter()\n-                     .filter_map(|i| {\n-                         let is_negative_impl = is_negative_impl(i.inner_impl());\n-                         if let Some(ref i) = i.inner_impl().trait_ {\n-                             let i_display = format!(\"{:#}\", i);\n-                             let out = Escape(&i_display);\n-                             let encoded = small_url_encode(&format!(\"{:#}\", i));\n-                             let generated = format!(\"<a href=\\\"#impl-{}\\\">{}{}</a>\",\n-                                                     encoded,\n-                                                     if is_negative_impl { \"!\" } else { \"\" },\n-                                                     out);\n-                             if links.insert(generated.clone()) {\n-                                 Some(generated)\n-                             } else {\n-                                 None\n-                             }\n-                         } else {\n-                             None\n-                         }\n-                     })\n-                     .collect::<String>()\n+                let mut ret = impls.iter()\n+                    .filter_map(|i| {\n+                        let is_negative_impl = is_negative_impl(i.inner_impl());\n+                        if let Some(ref i) = i.inner_impl().trait_ {\n+                            let i_display = format!(\"{:#}\", i);\n+                            let out = Escape(&i_display);\n+                            let encoded = small_url_encode(&format!(\"{:#}\", i));\n+                            let generated = format!(\"<a href=\\\"#impl-{}\\\">{}{}</a>\",\n+                                                    encoded,\n+                                                    if is_negative_impl { \"!\" } else { \"\" },\n+                                                    out);\n+                            if links.insert(generated.clone()) {\n+                                Some(generated)\n+                            } else {\n+                                None\n+                            }\n+                        } else {\n+                            None\n+                        }\n+                    })\n+                    .collect::<Vec<String>>();\n+                ret.sort();\n+                ret.join(\"\")\n             };\n \n             let (synthetic, concrete): (Vec<&Impl>, Vec<&Impl>) = v\n@@ -4637,29 +4656,29 @@ fn sidebar_trait(fmt: &mut fmt::Formatter, it: &clean::Item,\n                       }\n                   })\n                   .collect::<String>();\n-    let required = t.items\n-                    .iter()\n-                    .filter_map(|m| {\n-                        match m.name {\n-                            Some(ref name) if m.is_ty_method() => {\n-                                Some(format!(\"<a href=\\\"#tymethod.{name}\\\">{name}</a>\",\n-                                             name=name))\n+    let mut required = t.items\n+                        .iter()\n+                        .filter_map(|m| {\n+                            match m.name {\n+                                Some(ref name) if m.is_ty_method() => {\n+                                    Some(format!(\"<a href=\\\"#tymethod.{name}\\\">{name}</a>\",\n+                                                 name=name))\n+                                }\n+                                _ => None,\n                             }\n-                            _ => None,\n-                        }\n-                    })\n-                    .collect::<String>();\n-    let provided = t.items\n-                    .iter()\n-                    .filter_map(|m| {\n-                        match m.name {\n-                            Some(ref name) if m.is_method() => {\n-                                Some(format!(\"<a href=\\\"#method.{name}\\\">{name}</a>\", name=name))\n+                        })\n+                        .collect::<Vec<String>>();\n+    let mut provided = t.items\n+                        .iter()\n+                        .filter_map(|m| {\n+                            match m.name {\n+                                Some(ref name) if m.is_method() => {\n+                                    Some(format!(\"<a href=\\\"#method.{0}\\\">{0}</a>\", name))\n+                                }\n+                                _ => None,\n                             }\n-                            _ => None,\n-                        }\n-                    })\n-                    .collect::<String>();\n+                        })\n+                        .collect::<Vec<String>>();\n \n     if !types.is_empty() {\n         sidebar.push_str(&format!(\"<a class=\\\"sidebar-title\\\" href=\\\"#associated-types\\\">\\\n@@ -4672,38 +4691,41 @@ fn sidebar_trait(fmt: &mut fmt::Formatter, it: &clean::Item,\n                                   consts));\n     }\n     if !required.is_empty() {\n+        required.sort();\n         sidebar.push_str(&format!(\"<a class=\\\"sidebar-title\\\" href=\\\"#required-methods\\\">\\\n                                    Required Methods</a><div class=\\\"sidebar-links\\\">{}</div>\",\n-                                  required));\n+                                  required.join(\"\")));\n     }\n     if !provided.is_empty() {\n+        provided.sort();\n         sidebar.push_str(&format!(\"<a class=\\\"sidebar-title\\\" href=\\\"#provided-methods\\\">\\\n                                    Provided Methods</a><div class=\\\"sidebar-links\\\">{}</div>\",\n-                                  provided));\n+                                  provided.join(\"\")));\n     }\n \n     let c = cache();\n \n     if let Some(implementors) = c.implementors.get(&it.def_id) {\n-        let res = implementors.iter()\n-                              .filter(|i| i.inner_impl().for_.def_id()\n-                              .map_or(false, |d| !c.paths.contains_key(&d)))\n-                              .filter_map(|i| {\n-                                  match extract_for_impl_name(&i.impl_item) {\n-                                      Some((ref name, ref url)) => {\n-                                          Some(format!(\"<a href=\\\"#impl-{}\\\">{}</a>\",\n-                                                      small_url_encode(url),\n-                                                      Escape(name)))\n+        let mut res = implementors.iter()\n+                                  .filter(|i| i.inner_impl().for_.def_id()\n+                                  .map_or(false, |d| !c.paths.contains_key(&d)))\n+                                  .filter_map(|i| {\n+                                      match extract_for_impl_name(&i.impl_item) {\n+                                          Some((ref name, ref url)) => {\n+                                              Some(format!(\"<a href=\\\"#impl-{}\\\">{}</a>\",\n+                                                          small_url_encode(url),\n+                                                          Escape(name)))\n+                                          }\n+                                          _ => None,\n                                       }\n-                                      _ => None,\n-                                  }\n-                              })\n-                              .collect::<String>();\n+                                  })\n+                                  .collect::<Vec<String>>();\n         if !res.is_empty() {\n+            res.sort();\n             sidebar.push_str(&format!(\"<a class=\\\"sidebar-title\\\" href=\\\"#foreign-impls\\\">\\\n                                        Implementations on Foreign Types</a><div \\\n                                        class=\\\"sidebar-links\\\">{}</div>\",\n-                                      res));\n+                                      res.join(\"\")));\n         }\n     }\n "}, {"sha": "d6c05de0df6f2039988acecd7b28a88cd519dd27", "filename": "src/librustdoc/html/static/main.js", "status": "modified", "additions": 30, "deletions": 12, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js?ref=d1731801163df1d3a8d4ddfa68adac2ec833ef7f", "patch": "@@ -150,8 +150,7 @@ if (!DOMTokenList.prototype.remove) {\n     }\n \n     function browserSupportsHistoryApi() {\n-        return document.location.protocol != \"file:\" &&\n-          window.history && typeof window.history.pushState === \"function\";\n+        return window.history && typeof window.history.pushState === \"function\";\n     }\n \n     var main = document.getElementById(\"main\");\n@@ -1887,12 +1886,30 @@ if (!DOMTokenList.prototype.remove) {\n             updateLocalStorage(\"rustdoc-collapse\", \"true\");\n             addClass(innerToggle, \"will-expand\");\n             onEveryMatchingChild(innerToggle, \"inner\", function(e) {\n-                e.innerHTML = labelForToggleButton(true);\n+                var parent = e.parentNode;\n+                var superParent = null;\n+\n+                if (parent) {\n+                    superParent = parent.parentNode;\n+                }\n+                if (!parent || !superParent || superParent.id !== \"main\" ||\n+                    hasClass(parent, \"impl\") === false) {\n+                    e.innerHTML = labelForToggleButton(true);\n+                }\n             });\n             innerToggle.title = \"expand all docs\";\n             if (fromAutoCollapse !== true) {\n                 onEachLazy(document.getElementsByClassName(\"collapse-toggle\"), function(e) {\n-                    collapseDocs(e, \"hide\", pageId);\n+                    var parent = e.parentNode;\n+                    var superParent = null;\n+\n+                    if (parent) {\n+                        superParent = parent.parentNode;\n+                    }\n+                    if (!parent || !superParent || superParent.id !== \"main\" ||\n+                        hasClass(parent, \"impl\") === false) {\n+                        collapseDocs(e, \"hide\", pageId);\n+                    }\n                 });\n             }\n         }\n@@ -1918,9 +1935,9 @@ if (!DOMTokenList.prototype.remove) {\n             };\n         }\n \n-        function implHider(addOrRemove) {\n+        function implHider(addOrRemove, fullHide) {\n             return function(n) {\n-                var is_method = hasClass(n, \"method\");\n+                var is_method = hasClass(n, \"method\") || fullHide;\n                 if (is_method || hasClass(n, \"type\")) {\n                     if (is_method === true) {\n                         if (addOrRemove) {\n@@ -1974,7 +1991,7 @@ if (!DOMTokenList.prototype.remove) {\n                 }\n             }\n         } else {\n-            // we are collapsing the impl block\n+            // we are collapsing the impl block(s).\n \n             var parentElem = toggle.parentNode;\n             relatedDoc = parentElem;\n@@ -1989,7 +2006,7 @@ if (!DOMTokenList.prototype.remove) {\n                 return;\n             }\n \n-            // Hide all functions, but not associated types/consts\n+            // Hide all functions, but not associated types/consts.\n \n             if (mode === \"toggle\") {\n                 if (hasClass(relatedDoc, \"fns-now-collapsed\") ||\n@@ -2000,16 +2017,17 @@ if (!DOMTokenList.prototype.remove) {\n                 }\n             }\n \n+            var dontApplyBlockRule = toggle.parentNode.parentNode.id !== \"main\";\n             if (action === \"show\") {\n                 removeClass(relatedDoc, \"fns-now-collapsed\");\n                 removeClass(docblock, \"hidden-by-usual-hider\");\n-                onEachLazy(toggle.childNodes, adjustToggle(false));\n-                onEachLazy(relatedDoc.childNodes, implHider(false));\n+                onEachLazy(toggle.childNodes, adjustToggle(false, dontApplyBlockRule));\n+                onEachLazy(relatedDoc.childNodes, implHider(false, dontApplyBlockRule));\n             } else if (action === \"hide\") {\n                 addClass(relatedDoc, \"fns-now-collapsed\");\n                 addClass(docblock, \"hidden-by-usual-hider\");\n-                onEachLazy(toggle.childNodes, adjustToggle(true));\n-                onEachLazy(relatedDoc.childNodes, implHider(true));\n+                onEachLazy(toggle.childNodes, adjustToggle(true, dontApplyBlockRule);\n+                onEachLazy(relatedDoc.childNodes, implHider(true, dontApplyBlockRule));\n             }\n         }\n     }"}, {"sha": "4ec8637cc71f6f4f906bbf395afe347922ee03d8", "filename": "src/librustdoc/html/static/rustdoc.css", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css", "raw_url": "https://github.com/rust-lang/rust/raw/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css?ref=d1731801163df1d3a8d4ddfa68adac2ec833ef7f", "patch": "@@ -767,11 +767,14 @@ body.blur > :not(#help) {\n }\n \n .module-item .stab {\n-\tdisplay: inline;\n-\tborder-width: 0;\n-\tpadding: 0;\n-\tmargin: 0;\n-\tbackground: inherit !important;\n+\tborder-radius: 3px;\n+\tdisplay: inline-block;\n+\tfont-size: 80%;\n+\tline-height: 1.2;\n+\tmargin-bottom: 0;\n+\tmargin-right: .3em;\n+\tpadding: 2px;\n+\tvertical-align: text-bottom;\n }\n \n .module-item.unstable {\n@@ -1570,5 +1573,6 @@ div.name::before {\n }\n div.name.expand::before {\n \ttransform: rotate(90deg);\n-\tleft: -14px;\n+\tleft: -15px;\n+\ttop: 2px;\n }"}, {"sha": "509c628ce5a462d43678f54c4b3495a7fd8406ae", "filename": "src/librustdoc/html/static/source-script.js", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fsource-script.js", "raw_url": "https://github.com/rust-lang/rust/raw/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fsource-script.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fsource-script.js?ref=d1731801163df1d3a8d4ddfa68adac2ec833ef7f", "patch": "@@ -94,7 +94,7 @@ function createSidebarToggle() {\n     inner1.style.position = \"relative\";\n \n     var inner2 = document.createElement(\"div\");\n-    inner2.style.marginTop = \"-2px\";\n+    inner2.style.paddingTop = \"3px\";\n     if (getCurrentValue(\"rustdoc-source-sidebar-show\") === \"true\") {\n         inner2.innerText = \"<\";\n     } else {"}, {"sha": "ddb730672d2947ac6cf9ca8f5f9a74dd3bd7b54b", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=d1731801163df1d3a8d4ddfa68adac2ec833ef7f", "patch": "@@ -1,6 +1,4 @@\n-#![doc(html_logo_url = \"https://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png\",\n-       html_favicon_url = \"https://doc.rust-lang.org/favicon.ico\",\n-       html_root_url = \"https://doc.rust-lang.org/nightly/\",\n+#![doc(html_root_url = \"https://doc.rust-lang.org/nightly/\",\n        html_playground_url = \"https://play.rust-lang.org/\")]\n \n #![feature(bind_by_move_pattern_guards)]"}, {"sha": "fe93a2dfb29b1da7fae84fa4358c4d92e7b27ac2", "filename": "src/libserialize/lib.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Flibserialize%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Flibserialize%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibserialize%2Flib.rs?ref=d1731801163df1d3a8d4ddfa68adac2ec833ef7f", "patch": "@@ -4,9 +4,7 @@\n Core encoding and decoding interfaces.\n */\n \n-#![doc(html_logo_url = \"https://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png\",\n-       html_favicon_url = \"https://doc.rust-lang.org/favicon.ico\",\n-       html_root_url = \"https://doc.rust-lang.org/nightly/\",\n+#![doc(html_root_url = \"https://doc.rust-lang.org/nightly/\",\n        html_playground_url = \"https://play.rust-lang.org/\",\n        test(attr(allow(unused_variables), deny(warnings))))]\n "}, {"sha": "8ecba3ecd68fdb9c28c56de9a29a6461b70e86d9", "filename": "src/libstd/lib.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Flibstd%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Flibstd%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flib.rs?ref=d1731801163df1d3a8d4ddfa68adac2ec833ef7f", "patch": "@@ -196,9 +196,7 @@\n //! [primitive types]: ../book/ch03-02-data-types.html\n \n #![stable(feature = \"rust1\", since = \"1.0.0\")]\n-#![doc(html_logo_url = \"https://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png\",\n-       html_favicon_url = \"https://doc.rust-lang.org/favicon.ico\",\n-       html_root_url = \"https://doc.rust-lang.org/nightly/\",\n+#![doc(html_root_url = \"https://doc.rust-lang.org/nightly/\",\n        html_playground_url = \"https://play.rust-lang.org/\",\n        issue_tracker_base_url = \"https://github.com/rust-lang/rust/issues/\",\n        test(no_crate_inject, attr(deny(warnings))),"}, {"sha": "878d06c0f14584ef2db3ed91394c2db636235331", "filename": "src/libsyntax/lib.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Flibsyntax%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Flibsyntax%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Flib.rs?ref=d1731801163df1d3a8d4ddfa68adac2ec833ef7f", "patch": "@@ -4,9 +4,7 @@\n //!\n //! This API is completely unstable and subject to change.\n \n-#![doc(html_logo_url = \"https://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png\",\n-       html_favicon_url = \"https://doc.rust-lang.org/favicon.ico\",\n-       html_root_url = \"https://doc.rust-lang.org/nightly/\",\n+#![doc(html_root_url = \"https://doc.rust-lang.org/nightly/\",\n        test(attr(deny(warnings))))]\n \n #![deny(rust_2018_idioms)]"}, {"sha": "670d71fe25bb8e1dd3036f3a116e062c0a777def", "filename": "src/libsyntax_ext/lib.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Flibsyntax_ext%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Flibsyntax_ext%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Flib.rs?ref=d1731801163df1d3a8d4ddfa68adac2ec833ef7f", "patch": "@@ -1,8 +1,6 @@\n //! Syntax extensions in the Rust compiler.\n \n-#![doc(html_logo_url = \"https://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png\",\n-       html_favicon_url = \"https://doc.rust-lang.org/favicon.ico\",\n-       html_root_url = \"https://doc.rust-lang.org/nightly/\")]\n+#![doc(html_root_url = \"https://doc.rust-lang.org/nightly/\")]\n \n #![deny(rust_2018_idioms)]\n "}, {"sha": "70c45f7f9a7a62a098bffa2d621b7fb45dd1f81e", "filename": "src/libsyntax_pos/lib.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Flibsyntax_pos%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Flibsyntax_pos%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_pos%2Flib.rs?ref=d1731801163df1d3a8d4ddfa68adac2ec833ef7f", "patch": "@@ -4,9 +4,7 @@\n //!\n //! This API is completely unstable and subject to change.\n \n-#![doc(html_logo_url = \"https://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png\",\n-      html_favicon_url = \"https://doc.rust-lang.org/favicon.ico\",\n-      html_root_url = \"https://doc.rust-lang.org/nightly/\")]\n+#![doc(html_root_url = \"https://doc.rust-lang.org/nightly/\")]\n \n #![deny(rust_2018_idioms)]\n "}, {"sha": "4d3126212dcbe7e2a11985ce5ad441cbc591b853", "filename": "src/libterm/lib.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Flibterm%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Flibterm%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibterm%2Flib.rs?ref=d1731801163df1d3a8d4ddfa68adac2ec833ef7f", "patch": "@@ -30,9 +30,7 @@\n //! [win]: http://msdn.microsoft.com/en-us/library/windows/desktop/ms682010%28v=vs.85%29.aspx\n //! [ti]: https://en.wikipedia.org/wiki/Terminfo\n \n-#![doc(html_logo_url = \"https://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png\",\n-       html_favicon_url = \"https://doc.rust-lang.org/favicon.ico\",\n-       html_root_url = \"https://doc.rust-lang.org/nightly/\",\n+#![doc(html_root_url = \"https://doc.rust-lang.org/nightly/\",\n        html_playground_url = \"https://play.rust-lang.org/\",\n        test(attr(deny(warnings))))]\n #![deny(missing_docs)]"}, {"sha": "ae046f6d61447288d641885350e5f27004ce5bd9", "filename": "src/libtest/lib.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Flibtest%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Flibtest%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibtest%2Flib.rs?ref=d1731801163df1d3a8d4ddfa68adac2ec833ef7f", "patch": "@@ -20,12 +20,7 @@\n #![deny(rust_2018_idioms)]\n #![crate_name = \"test\"]\n #![unstable(feature = \"test\", issue = \"27812\")]\n-#![doc(\n-    html_logo_url = \"https://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png\",\n-    html_favicon_url = \"https://doc.rust-lang.org/favicon.ico\",\n-    html_root_url = \"https://doc.rust-lang.org/nightly/\",\n-    test(attr(deny(warnings)))\n-)]\n+#![doc(html_root_url = \"https://doc.rust-lang.org/nightly/\", test(attr(deny(warnings))))]\n #![feature(asm)]\n #![feature(fnbox)]\n #![cfg_attr(any(unix, target_os = \"cloudabi\"), feature(libc, rustc_private))]"}, {"sha": "74bd94548e036fd2781df453a8c7fc2a4dc5e54b", "filename": "src/test/rustdoc/deprecated.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Ftest%2Frustdoc%2Fdeprecated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Ftest%2Frustdoc%2Fdeprecated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fdeprecated.rs?ref=d1731801163df1d3a8d4ddfa68adac2ec833ef7f", "patch": "@@ -1,7 +1,9 @@\n #![feature(deprecated)]\n \n-// @matches deprecated/index.html '//*[@class=\"docblock-short\"]' \\\n-//      '^\\[Deprecated\\] Deprecated docs'\n+// @has deprecated/index.html '//*[@class=\"docblock-short\"]/span[@class=\"stab deprecated\"]' \\\n+//      'Deprecated'\n+// @has - '//*[@class=\"docblock-short\"]' 'Deprecated docs'\n+\n // @has deprecated/struct.S.html '//*[@class=\"stab deprecated\"]' \\\n //      'Deprecated since 1.0.0: text'\n /// Deprecated docs"}, {"sha": "f9bf982659e0210a68bed7a530d03acff0124f2f", "filename": "src/test/rustdoc/inline_cross/macros.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Ftest%2Frustdoc%2Finline_cross%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Ftest%2Frustdoc%2Finline_cross%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Finline_cross%2Fmacros.rs?ref=d1731801163df1d3a8d4ddfa68adac2ec833ef7f", "patch": "@@ -7,7 +7,8 @@\n \n extern crate macros;\n \n-// @has foo/index.html '//*[@class=\"docblock-short\"]' '[Deprecated] [Experimental]'\n+// @has foo/index.html '//*[@class=\"docblock-short\"]/span[@class=\"stab deprecated\"]' Deprecated\n+// @has - '//*[@class=\"docblock-short\"]/span[@class=\"stab unstable\"]' Experimental\n \n // @has foo/macro.my_macro.html\n // @has - '//*[@class=\"docblock\"]' 'docs for my_macro'"}, {"sha": "2cb7c472cc84b141bb3e70c574e1a85323c16cc1", "filename": "src/test/rustdoc/internal.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Ftest%2Frustdoc%2Finternal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Ftest%2Frustdoc%2Finternal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Finternal.rs?ref=d1731801163df1d3a8d4ddfa68adac2ec833ef7f", "patch": "@@ -1,7 +1,9 @@\n // compile-flags: -Z force-unstable-if-unmarked\n \n-// @matches internal/index.html '//*[@class=\"docblock-short\"]' \\\n-//      '^\\[Internal\\] Docs'\n+// @matches internal/index.html '//*[@class=\"docblock-short\"]/span[@class=\"stab internal\"]' \\\n+//      'Internal'\n+// @matches - '//*[@class=\"docblock-short\"]' 'Docs'\n+\n // @has internal/struct.S.html '//*[@class=\"stab internal\"]' \\\n //      'This is an internal compiler API. (rustc_private)'\n /// Docs"}, {"sha": "7babfaf6060f4c7c0b7dd3e70162bc87d03538a2", "filename": "src/test/rustdoc/issue-32374.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Ftest%2Frustdoc%2Fissue-32374.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Ftest%2Frustdoc%2Fissue-32374.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-32374.rs?ref=d1731801163df1d3a8d4ddfa68adac2ec833ef7f", "patch": "@@ -3,8 +3,11 @@\n \n #![unstable(feature=\"test\", issue = \"32374\")]\n \n-// @matches issue_32374/index.html '//*[@class=\"docblock-short\"]' \\\n-//      '^\\[Deprecated\\] \\[Experimental\\] Docs'\n+// @matches issue_32374/index.html '//*[@class=\"docblock-short\"]/span[@class=\"stab deprecated\"]' \\\n+//      'Deprecated'\n+// @matches issue_32374/index.html '//*[@class=\"docblock-short\"]/span[@class=\"stab unstable\"]' \\\n+//      'Experimental'\n+// @matches issue_32374/index.html '//*[@class=\"docblock-short\"]/text()' 'Docs'\n \n // @has issue_32374/struct.T.html '//*[@class=\"stab deprecated\"]' \\\n //      'Deprecated since 1.0.0: text'"}, {"sha": "c721c024468ddf2b75e8ee6b608b9217eba9ecad", "filename": "src/test/rustdoc/keyword.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Ftest%2Frustdoc%2Fkeyword.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Ftest%2Frustdoc%2Fkeyword.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fkeyword.rs?ref=d1731801163df1d3a8d4ddfa68adac2ec833ef7f", "patch": "@@ -7,7 +7,7 @@\n // @has foo/keyword.match.html '//a[@class=\"keyword\"]' 'match'\n // @has foo/keyword.match.html '//span[@class=\"in-band\"]' 'Keyword match'\n // @has foo/keyword.match.html '//section[@id=\"main\"]//div[@class=\"docblock\"]//p' 'this is a test!'\n-// @!has foo/index.html '//a/@href' 'foo/index.html'\n+// @has foo/index.html '//a/@href' '../foo/index.html'\n // @!has foo/foo/index.html\n // @!has-dir foo/foo\n #[doc(keyword = \"match\")]"}, {"sha": "18a21603493c2539efa38b27d3d9d2b3283f0e15", "filename": "src/test/rustdoc/stability.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Ftest%2Frustdoc%2Fstability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1731801163df1d3a8d4ddfa68adac2ec833ef7f/src%2Ftest%2Frustdoc%2Fstability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fstability.rs?ref=d1731801163df1d3a8d4ddfa68adac2ec833ef7f", "patch": "@@ -0,0 +1,12 @@\n+#![feature(staged_api)]\n+\n+#![unstable(feature = \"test\", issue = \"0\")]\n+\n+pub struct Unstable {\n+    // @has stability/struct.Unstable.html \\\n+    //      '//div[@class=\"stability\"]//div[@class=\"stab unstable\"]' \\\n+    //      'This is a nightly-only experimental API'\n+    // @count stability/struct.Unstable.html '//span[@class=\"stab unstable\"]' 0\n+    pub foo: u32,\n+    pub bar: u32,\n+}"}]}