{"sha": "2472e04291c6f69ce3f469838ebbeeefcbe2e529", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI0NzJlMDQyOTFjNmY2OWNlM2Y0Njk4MzhlYmJlZWVmY2JlMmU1Mjk=", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2020-04-17T00:54:13Z"}, "committer": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2020-04-17T00:54:13Z"}, "message": "ty/print/pretty: use `comma_sep` instead of replicating it.", "tree": {"sha": "c590130bcecbddec2b7346e16719db2a3df79021", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c590130bcecbddec2b7346e16719db2a3df79021"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2472e04291c6f69ce3f469838ebbeeefcbe2e529", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2472e04291c6f69ce3f469838ebbeeefcbe2e529", "html_url": "https://github.com/rust-lang/rust/commit/2472e04291c6f69ce3f469838ebbeeefcbe2e529", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2472e04291c6f69ce3f469838ebbeeefcbe2e529/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7fb5187d0423f4cd0441526571b8cd61927123c9", "url": "https://api.github.com/repos/rust-lang/rust/commits/7fb5187d0423f4cd0441526571b8cd61927123c9", "html_url": "https://github.com/rust-lang/rust/commit/7fb5187d0423f4cd0441526571b8cd61927123c9"}], "stats": {"total": 48, "additions": 12, "deletions": 36}, "files": [{"sha": "0cabd201a95bb0eae2de3965b08500ed64e23ceb", "filename": "src/librustc_middle/ty/print/pretty.rs", "status": "modified", "additions": 12, "deletions": 36, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/2472e04291c6f69ce3f469838ebbeeefcbe2e529/src%2Flibrustc_middle%2Fty%2Fprint%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2472e04291c6f69ce3f469838ebbeeefcbe2e529/src%2Flibrustc_middle%2Fty%2Fprint%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Fprint%2Fpretty.rs?ref=2472e04291c6f69ce3f469838ebbeeefcbe2e529", "patch": "@@ -498,16 +498,9 @@ pub trait PrettyPrinter<'tcx>:\n             }\n             ty::Never => p!(write(\"!\")),\n             ty::Tuple(ref tys) => {\n-                p!(write(\"(\"));\n-                let mut tys = tys.iter();\n-                if let Some(&ty) = tys.next() {\n-                    p!(print(ty), write(\",\"));\n-                    if let Some(&ty) = tys.next() {\n-                        p!(write(\" \"), print(ty));\n-                        for &ty in tys {\n-                            p!(write(\", \"), print(ty));\n-                        }\n-                    }\n+                p!(write(\"(\"), comma_sep(tys.iter().copied()));\n+                if tys.len() == 1 {\n+                    p!(write(\",\"));\n                 }\n                 p!(write(\")\"))\n             }\n@@ -570,15 +563,10 @@ pub trait PrettyPrinter<'tcx>:\n                     let def_key = self.tcx().def_key(def_id);\n                     if let Some(name) = def_key.disambiguated_data.data.get_opt_name() {\n                         p!(write(\"{}\", name));\n-                        let mut substs = substs.iter();\n                         // FIXME(eddyb) print this with `print_def_path`.\n-                        if let Some(first) = substs.next() {\n-                            p!(write(\"::<\"));\n-                            p!(print(first));\n-                            for subst in substs {\n-                                p!(write(\", \"), print(subst));\n-                            }\n-                            p!(write(\">\"));\n+                        if !substs.is_empty() {\n+                            p!(write(\"::\"));\n+                            p!(generic_delimiters(|cx| cx.comma_sep(substs.iter().copied())));\n                         }\n                         return Ok(self);\n                     }\n@@ -854,16 +842,12 @@ pub trait PrettyPrinter<'tcx>:\n     ) -> Result<Self, Self::Error> {\n         define_scoped_cx!(self);\n \n-        p!(write(\"(\"));\n-        let mut inputs = inputs.iter();\n-        if let Some(&ty) = inputs.next() {\n-            p!(print(ty));\n-            for &ty in inputs {\n-                p!(write(\", \"), print(ty));\n-            }\n-            if c_variadic {\n-                p!(write(\", ...\"));\n+        p!(write(\"(\"), comma_sep(inputs.iter().copied()));\n+        if c_variadic {\n+            if !inputs.is_empty() {\n+                p!(write(\", \"));\n             }\n+            p!(write(\"...\"));\n         }\n         p!(write(\")\"));\n         if !output.is_unit() {\n@@ -1913,15 +1897,7 @@ define_print_and_forward_display! {\n     (self, cx):\n \n     &'tcx ty::List<Ty<'tcx>> {\n-        p!(write(\"{{\"));\n-        let mut tys = self.iter();\n-        if let Some(&ty) = tys.next() {\n-            p!(print(ty));\n-            for &ty in tys {\n-                p!(write(\", \"), print(ty));\n-            }\n-        }\n-        p!(write(\"}}\"))\n+        p!(write(\"{{\"), comma_sep(self.iter().copied()), write(\"}}\"))\n     }\n \n     ty::TypeAndMut<'tcx> {"}]}