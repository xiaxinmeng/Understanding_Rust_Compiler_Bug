{"sha": "a4b53c9c14705475b6e9041b56c441c981e86423", "node_id": "C_kwDOAAsO6NoAKGE0YjUzYzljMTQ3MDU0NzViNmU5MDQxYjU2YzQ0MWM5ODFlODY0MjM", "commit": {"author": {"name": "dswij", "email": "dswijj@gmail.com", "date": "2022-11-25T10:04:31Z"}, "committer": {"name": "dswij", "email": "dswijj@gmail.com", "date": "2022-11-25T10:17:34Z"}, "message": "`manual_let_else`: Add test with expanded macros", "tree": {"sha": "2e9b2db65cb6b996de91aa0c26722d86b2f67e99", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2e9b2db65cb6b996de91aa0c26722d86b2f67e99"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a4b53c9c14705475b6e9041b56c441c981e86423", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a4b53c9c14705475b6e9041b56c441c981e86423", "html_url": "https://github.com/rust-lang/rust/commit/a4b53c9c14705475b6e9041b56c441c981e86423", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a4b53c9c14705475b6e9041b56c441c981e86423/comments", "author": {"login": "dswij", "id": 44697459, "node_id": "MDQ6VXNlcjQ0Njk3NDU5", "avatar_url": "https://avatars.githubusercontent.com/u/44697459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dswij", "html_url": "https://github.com/dswij", "followers_url": "https://api.github.com/users/dswij/followers", "following_url": "https://api.github.com/users/dswij/following{/other_user}", "gists_url": "https://api.github.com/users/dswij/gists{/gist_id}", "starred_url": "https://api.github.com/users/dswij/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dswij/subscriptions", "organizations_url": "https://api.github.com/users/dswij/orgs", "repos_url": "https://api.github.com/users/dswij/repos", "events_url": "https://api.github.com/users/dswij/events{/privacy}", "received_events_url": "https://api.github.com/users/dswij/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dswij", "id": 44697459, "node_id": "MDQ6VXNlcjQ0Njk3NDU5", "avatar_url": "https://avatars.githubusercontent.com/u/44697459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dswij", "html_url": "https://github.com/dswij", "followers_url": "https://api.github.com/users/dswij/followers", "following_url": "https://api.github.com/users/dswij/following{/other_user}", "gists_url": "https://api.github.com/users/dswij/gists{/gist_id}", "starred_url": "https://api.github.com/users/dswij/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dswij/subscriptions", "organizations_url": "https://api.github.com/users/dswij/orgs", "repos_url": "https://api.github.com/users/dswij/repos", "events_url": "https://api.github.com/users/dswij/events{/privacy}", "received_events_url": "https://api.github.com/users/dswij/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bbcc260b6feecdeadd2b366cc8f021cc3404c9ec", "url": "https://api.github.com/repos/rust-lang/rust/commits/bbcc260b6feecdeadd2b366cc8f021cc3404c9ec", "html_url": "https://github.com/rust-lang/rust/commit/bbcc260b6feecdeadd2b366cc8f021cc3404c9ec"}], "stats": {"total": 25, "additions": 24, "deletions": 1}, "files": [{"sha": "48a162c13602ca800b3fcfd8f2392b01181b94fb", "filename": "tests/ui/manual_let_else.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/a4b53c9c14705475b6e9041b56c441c981e86423/tests%2Fui%2Fmanual_let_else.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4b53c9c14705475b6e9041b56c441c981e86423/tests%2Fui%2Fmanual_let_else.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_let_else.rs?ref=a4b53c9c14705475b6e9041b56c441c981e86423", "patch": "@@ -234,4 +234,18 @@ fn not_fire() {\n     // If a type annotation is present, don't lint as\n     // expressing the type might be too hard\n     let v: () = if let Some(v_some) = g() { v_some } else { panic!() };\n+\n+    // Issue 9940\n+    // Suggestion should not expand macros\n+    macro_rules! macro_call {\n+        () => {\n+            return ()\n+        };\n+    }\n+\n+    let ff = Some(1);\n+    let _ = match ff {\n+        Some(value) => value,\n+        _ => macro_call!(),\n+    };\n }"}, {"sha": "52aac6bc673d195500f6f3ddf84fccacdd9aa65b", "filename": "tests/ui/manual_let_else.stderr", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/a4b53c9c14705475b6e9041b56c441c981e86423/tests%2Fui%2Fmanual_let_else.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a4b53c9c14705475b6e9041b56c441c981e86423/tests%2Fui%2Fmanual_let_else.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_let_else.stderr?ref=a4b53c9c14705475b6e9041b56c441c981e86423", "patch": "@@ -259,5 +259,14 @@ LL |     create_binding_if_some!(w, g());\n    |\n    = note: this error originates in the macro `create_binding_if_some` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n-error: aborting due to 17 previous errors\n+error: this could be rewritten as `let...else`\n+  --> $DIR/manual_let_else.rs:247:5\n+   |\n+LL | /     let _ = match ff {\n+LL | |         Some(value) => value,\n+LL | |         _ => macro_call!(),\n+LL | |     };\n+   | |______^ help: consider writing: `let Some(value) = ff else { macro_call!() };`\n+\n+error: aborting due to 18 previous errors\n "}]}