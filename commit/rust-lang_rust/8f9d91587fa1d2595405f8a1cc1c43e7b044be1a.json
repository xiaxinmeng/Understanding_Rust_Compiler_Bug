{"sha": "8f9d91587fa1d2595405f8a1cc1c43e7b044be1a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhmOWQ5MTU4N2ZhMWQyNTk1NDA1ZjhhMWNjMWM0M2U3YjA0NGJlMWE=", "commit": {"author": {"name": "Zack M. Davis", "email": "code@zackmdavis.net", "date": "2018-02-01T04:40:03Z"}, "committer": {"name": "Zack M. Davis", "email": "code@zackmdavis.net", "date": "2018-02-01T04:40:03Z"}, "message": "in which HirIdMap is introduced as an affordance for using HirIds more\n\nThe glossaries in the draft rustc-guide book and librustc/README.md\nstate that `NodeId` is being gradually phased out in favor of `HirId`;\nas such, the present author claims that we ought to have a typedef for\nefficient `HirId` maps and sets in the module for such, even if no use\nfor them has been made as yet (compatibility constraints preventing the\nuse of it in the author's present unit of work): it is important to\ncreate the psychological \"affordance\" (in James J. Gibson's sense) that\n`HirId`s are a thing that compiler developers can work with.", "tree": {"sha": "1da401513e5477dda73ab71347e064f2eb2606f1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1da401513e5477dda73ab71347e064f2eb2606f1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8f9d91587fa1d2595405f8a1cc1c43e7b044be1a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8f9d91587fa1d2595405f8a1cc1c43e7b044be1a", "html_url": "https://github.com/rust-lang/rust/commit/8f9d91587fa1d2595405f8a1cc1c43e7b044be1a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8f9d91587fa1d2595405f8a1cc1c43e7b044be1a/comments", "author": {"login": "zackmdavis", "id": 1076988, "node_id": "MDQ6VXNlcjEwNzY5ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/1076988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zackmdavis", "html_url": "https://github.com/zackmdavis", "followers_url": "https://api.github.com/users/zackmdavis/followers", "following_url": "https://api.github.com/users/zackmdavis/following{/other_user}", "gists_url": "https://api.github.com/users/zackmdavis/gists{/gist_id}", "starred_url": "https://api.github.com/users/zackmdavis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zackmdavis/subscriptions", "organizations_url": "https://api.github.com/users/zackmdavis/orgs", "repos_url": "https://api.github.com/users/zackmdavis/repos", "events_url": "https://api.github.com/users/zackmdavis/events{/privacy}", "received_events_url": "https://api.github.com/users/zackmdavis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "zackmdavis", "id": 1076988, "node_id": "MDQ6VXNlcjEwNzY5ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/1076988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zackmdavis", "html_url": "https://github.com/zackmdavis", "followers_url": "https://api.github.com/users/zackmdavis/followers", "following_url": "https://api.github.com/users/zackmdavis/following{/other_user}", "gists_url": "https://api.github.com/users/zackmdavis/gists{/gist_id}", "starred_url": "https://api.github.com/users/zackmdavis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zackmdavis/subscriptions", "organizations_url": "https://api.github.com/users/zackmdavis/orgs", "repos_url": "https://api.github.com/users/zackmdavis/repos", "events_url": "https://api.github.com/users/zackmdavis/events{/privacy}", "received_events_url": "https://api.github.com/users/zackmdavis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8ccab7eed5f4fc93500fbf242e575073ca70d7cb", "url": "https://api.github.com/repos/rust-lang/rust/commits/8ccab7eed5f4fc93500fbf242e575073ca70d7cb", "html_url": "https://github.com/rust-lang/rust/commit/8ccab7eed5f4fc93500fbf242e575073ca70d7cb"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "f98a8f834df8a912f1bdb914f1d904eed1c6270e", "filename": "src/librustc/util/nodemap.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8f9d91587fa1d2595405f8a1cc1c43e7b044be1a/src%2Flibrustc%2Futil%2Fnodemap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f9d91587fa1d2595405f8a1cc1c43e7b044be1a/src%2Flibrustc%2Futil%2Fnodemap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Futil%2Fnodemap.rs?ref=8f9d91587fa1d2595405f8a1cc1c43e7b044be1a", "patch": "@@ -13,18 +13,20 @@\n #![allow(non_snake_case)]\n \n use hir::def_id::DefId;\n-use hir::ItemLocalId;\n+use hir::{HirId, ItemLocalId};\n use syntax::ast;\n \n pub use rustc_data_structures::fx::FxHashMap;\n pub use rustc_data_structures::fx::FxHashSet;\n \n pub type NodeMap<T> = FxHashMap<ast::NodeId, T>;\n pub type DefIdMap<T> = FxHashMap<DefId, T>;\n+pub type HirIdMap<T> = FxHashMap<HirId, T>;\n pub type ItemLocalMap<T> = FxHashMap<ItemLocalId, T>;\n \n pub type NodeSet = FxHashSet<ast::NodeId>;\n pub type DefIdSet = FxHashSet<DefId>;\n+pub type HirIdSet = FxHashSet<HirId>;\n pub type ItemLocalSet = FxHashSet<ItemLocalId>;\n \n pub fn NodeMap<T>() -> NodeMap<T> { FxHashMap() }"}]}