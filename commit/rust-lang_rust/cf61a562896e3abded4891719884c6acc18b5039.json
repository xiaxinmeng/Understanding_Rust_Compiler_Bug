{"sha": "cf61a562896e3abded4891719884c6acc18b5039", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNmNjFhNTYyODk2ZTNhYmRlZDQ4OTE3MTk4ODRjNmFjYzE4YjUwMzk=", "commit": {"author": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-04-26T10:43:00Z"}, "committer": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-04-26T10:47:15Z"}, "message": "check that `AsRef` and `AsMut` are inlined", "tree": {"sha": "6ead314e74d5a35bfb08d77485a028c4a996c4d9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6ead314e74d5a35bfb08d77485a028c4a996c4d9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cf61a562896e3abded4891719884c6acc18b5039", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cf61a562896e3abded4891719884c6acc18b5039", "html_url": "https://github.com/rust-lang/rust/commit/cf61a562896e3abded4891719884c6acc18b5039", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cf61a562896e3abded4891719884c6acc18b5039/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "019ab732ce63a117cbb446db1488916c5c0bd2a7", "url": "https://api.github.com/repos/rust-lang/rust/commits/019ab732ce63a117cbb446db1488916c5c0bd2a7", "html_url": "https://github.com/rust-lang/rust/commit/019ab732ce63a117cbb446db1488916c5c0bd2a7"}], "stats": {"total": 139, "additions": 139, "deletions": 0}, "files": [{"sha": "317705f76121239709486103e4fa45f79dd3541d", "filename": "src/test/mir-opt/inline/issue-58867-inline-as-ref-as-mut.rs", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/cf61a562896e3abded4891719884c6acc18b5039/src%2Ftest%2Fmir-opt%2Finline%2Fissue-58867-inline-as-ref-as-mut.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf61a562896e3abded4891719884c6acc18b5039/src%2Ftest%2Fmir-opt%2Finline%2Fissue-58867-inline-as-ref-as-mut.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Finline%2Fissue-58867-inline-as-ref-as-mut.rs?ref=cf61a562896e3abded4891719884c6acc18b5039", "patch": "@@ -0,0 +1,27 @@\n+// EMIT_MIR rustc.a.Inline.after.mir\n+pub fn a<T>(x: &mut [T]) -> &mut [T] {\n+    x.as_mut()\n+}\n+\n+// EMIT_MIR rustc.b.Inline.after.mir\n+pub fn b<T>(x: &mut Box<T>) -> &mut T {\n+    x.as_mut()\n+}\n+\n+// EMIT_MIR rustc.c.Inline.after.mir\n+pub fn c<T>(x: &[T]) -> &[T] {\n+    x.as_ref()\n+}\n+\n+// EMIT_MIR rustc.d.Inline.after.mir\n+pub fn d<T>(x: &Box<T>) -> &T {\n+    x.as_ref()\n+}\n+\n+fn main() {\n+    let mut boxed = Box::new(1);\n+    println!(\"{:?}\", a(&mut [1]));\n+    println!(\"{:?}\", b(&mut boxed));\n+    println!(\"{:?}\", c(&[1]));\n+    println!(\"{:?}\", d(&boxed));\n+}"}, {"sha": "c5d44cbafac412db398b44550c48cd8fc61fdc1b", "filename": "src/test/mir-opt/inline/issue-58867-inline-as-ref-as-mut/rustc.a.Inline.after.mir", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/cf61a562896e3abded4891719884c6acc18b5039/src%2Ftest%2Fmir-opt%2Finline%2Fissue-58867-inline-as-ref-as-mut%2Frustc.a.Inline.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/cf61a562896e3abded4891719884c6acc18b5039/src%2Ftest%2Fmir-opt%2Finline%2Fissue-58867-inline-as-ref-as-mut%2Frustc.a.Inline.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Finline%2Fissue-58867-inline-as-ref-as-mut%2Frustc.a.Inline.after.mir?ref=cf61a562896e3abded4891719884c6acc18b5039", "patch": "@@ -0,0 +1,30 @@\n+// MIR for `a` after Inline\n+\n+fn a(_1: &mut [T]) -> &mut [T] {\n+    debug x => _1;                       // in scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:2:13: 2:14\n+    let mut _0: &mut [T];                // return place in scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:2:29: 2:37\n+    let mut _2: &mut [T];                // in scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:3:5: 3:15\n+    let mut _3: &mut [T];                // in scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:3:5: 3:15\n+    let mut _4: &mut [T];                // in scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:3:5: 3:6\n+    scope 1 {\n+        debug self => _4;                // in scope 1 at $SRC_DIR/libcore/convert/mod.rs:LL:COL\n+        let mut _5: &mut [T];            // in scope 1 at $DIR/issue-58867-inline-as-ref-as-mut.rs:3:5: 3:15\n+    }\n+\n+    bb0: {\n+        StorageLive(_2);                 // bb0[0]: scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:3:5: 3:15\n+        StorageLive(_3);                 // bb0[1]: scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:3:5: 3:15\n+        StorageLive(_4);                 // bb0[2]: scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:3:5: 3:6\n+        _4 = &mut (*_1);                 // bb0[3]: scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:3:5: 3:6\n+        StorageLive(_5);                 // bb0[4]: scope 1 at $SRC_DIR/libcore/convert/mod.rs:LL:COL\n+        _5 = _4;                         // bb0[5]: scope 1 at $SRC_DIR/libcore/convert/mod.rs:LL:COL\n+        _3 = _5;                         // bb0[6]: scope 1 at $SRC_DIR/libcore/convert/mod.rs:LL:COL\n+        StorageDead(_5);                 // bb0[7]: scope 1 at $SRC_DIR/libcore/convert/mod.rs:LL:COL\n+        _2 = &mut (*_3);                 // bb0[8]: scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:3:5: 3:15\n+        StorageDead(_4);                 // bb0[9]: scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:3:14: 3:15\n+        _0 = &mut (*_2);                 // bb0[10]: scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:3:5: 3:15\n+        StorageDead(_3);                 // bb0[11]: scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:4:1: 4:2\n+        StorageDead(_2);                 // bb0[12]: scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:4:1: 4:2\n+        return;                          // bb0[13]: scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:4:2: 4:2\n+    }\n+}"}, {"sha": "8384b949b954b45c2970d785be2d4c69672681c9", "filename": "src/test/mir-opt/inline/issue-58867-inline-as-ref-as-mut/rustc.b.Inline.after.mir", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/cf61a562896e3abded4891719884c6acc18b5039/src%2Ftest%2Fmir-opt%2Finline%2Fissue-58867-inline-as-ref-as-mut%2Frustc.b.Inline.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/cf61a562896e3abded4891719884c6acc18b5039/src%2Ftest%2Fmir-opt%2Finline%2Fissue-58867-inline-as-ref-as-mut%2Frustc.b.Inline.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Finline%2Fissue-58867-inline-as-ref-as-mut%2Frustc.b.Inline.after.mir?ref=cf61a562896e3abded4891719884c6acc18b5039", "patch": "@@ -0,0 +1,34 @@\n+// MIR for `b` after Inline\n+\n+fn b(_1: &mut std::boxed::Box<T>) -> &mut T {\n+    debug x => _1;                       // in scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:7:13: 7:14\n+    let mut _0: &mut T;                  // return place in scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:7:32: 7:38\n+    let mut _2: &mut T;                  // in scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:8:5: 8:15\n+    let mut _3: &mut T;                  // in scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:8:5: 8:15\n+    let mut _4: &mut std::boxed::Box<T>; // in scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:8:5: 8:6\n+    scope 1 {\n+        debug self => _4;                // in scope 1 at $SRC_DIR/liballoc/boxed.rs:LL:COL\n+        let mut _5: &mut T;              // in scope 1 at $DIR/issue-58867-inline-as-ref-as-mut.rs:8:5: 8:15\n+        let mut _6: &mut T;              // in scope 1 at $DIR/issue-58867-inline-as-ref-as-mut.rs:8:5: 8:15\n+    }\n+\n+    bb0: {\n+        StorageLive(_2);                 // bb0[0]: scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:8:5: 8:15\n+        StorageLive(_3);                 // bb0[1]: scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:8:5: 8:15\n+        StorageLive(_4);                 // bb0[2]: scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:8:5: 8:6\n+        _4 = &mut (*_1);                 // bb0[3]: scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:8:5: 8:6\n+        StorageLive(_5);                 // bb0[4]: scope 1 at $SRC_DIR/liballoc/boxed.rs:LL:COL\n+        StorageLive(_6);                 // bb0[5]: scope 1 at $SRC_DIR/liballoc/boxed.rs:LL:COL\n+        _6 = &mut (*(*_4));              // bb0[6]: scope 1 at $SRC_DIR/liballoc/boxed.rs:LL:COL\n+        _5 = _6;                         // bb0[7]: scope 1 at $SRC_DIR/liballoc/boxed.rs:LL:COL\n+        _3 = _5;                         // bb0[8]: scope 1 at $SRC_DIR/liballoc/boxed.rs:LL:COL\n+        StorageDead(_6);                 // bb0[9]: scope 1 at $SRC_DIR/liballoc/boxed.rs:LL:COL\n+        StorageDead(_5);                 // bb0[10]: scope 1 at $SRC_DIR/liballoc/boxed.rs:LL:COL\n+        _2 = &mut (*_3);                 // bb0[11]: scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:8:5: 8:15\n+        StorageDead(_4);                 // bb0[12]: scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:8:14: 8:15\n+        _0 = &mut (*_2);                 // bb0[13]: scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:8:5: 8:15\n+        StorageDead(_3);                 // bb0[14]: scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:9:1: 9:2\n+        StorageDead(_2);                 // bb0[15]: scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:9:1: 9:2\n+        return;                          // bb0[16]: scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:9:2: 9:2\n+    }\n+}"}, {"sha": "5adb4a68312576358084a2a3ed9c07a98a664a62", "filename": "src/test/mir-opt/inline/issue-58867-inline-as-ref-as-mut/rustc.c.Inline.after.mir", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/cf61a562896e3abded4891719884c6acc18b5039/src%2Ftest%2Fmir-opt%2Finline%2Fissue-58867-inline-as-ref-as-mut%2Frustc.c.Inline.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/cf61a562896e3abded4891719884c6acc18b5039/src%2Ftest%2Fmir-opt%2Finline%2Fissue-58867-inline-as-ref-as-mut%2Frustc.c.Inline.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Finline%2Fissue-58867-inline-as-ref-as-mut%2Frustc.c.Inline.after.mir?ref=cf61a562896e3abded4891719884c6acc18b5039", "patch": "@@ -0,0 +1,22 @@\n+// MIR for `c` after Inline\n+\n+fn c(_1: &[T]) -> &[T] {\n+    debug x => _1;                       // in scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:12:13: 12:14\n+    let mut _0: &[T];                    // return place in scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:12:25: 12:29\n+    let _2: &[T];                        // in scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:13:5: 13:15\n+    let mut _3: &[T];                    // in scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:13:5: 13:6\n+    scope 1 {\n+        debug self => _3;                // in scope 1 at $SRC_DIR/libcore/convert/mod.rs:LL:COL\n+    }\n+\n+    bb0: {\n+        StorageLive(_2);                 // bb0[0]: scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:13:5: 13:15\n+        StorageLive(_3);                 // bb0[1]: scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:13:5: 13:6\n+        _3 = &(*_1);                     // bb0[2]: scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:13:5: 13:6\n+        _2 = _3;                         // bb0[3]: scope 1 at $SRC_DIR/libcore/convert/mod.rs:LL:COL\n+        _0 = &(*_2);                     // bb0[4]: scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:13:5: 13:15\n+        StorageDead(_3);                 // bb0[5]: scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:13:14: 13:15\n+        StorageDead(_2);                 // bb0[6]: scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:14:1: 14:2\n+        return;                          // bb0[7]: scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:14:2: 14:2\n+    }\n+}"}, {"sha": "d4d62dd788e0002bb997ec4a18c6a3ce8c8db3d1", "filename": "src/test/mir-opt/inline/issue-58867-inline-as-ref-as-mut/rustc.d.Inline.after.mir", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/cf61a562896e3abded4891719884c6acc18b5039/src%2Ftest%2Fmir-opt%2Finline%2Fissue-58867-inline-as-ref-as-mut%2Frustc.d.Inline.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/cf61a562896e3abded4891719884c6acc18b5039/src%2Ftest%2Fmir-opt%2Finline%2Fissue-58867-inline-as-ref-as-mut%2Frustc.d.Inline.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Finline%2Fissue-58867-inline-as-ref-as-mut%2Frustc.d.Inline.after.mir?ref=cf61a562896e3abded4891719884c6acc18b5039", "patch": "@@ -0,0 +1,26 @@\n+// MIR for `d` after Inline\n+\n+fn d(_1: &std::boxed::Box<T>) -> &T {\n+    debug x => _1;                       // in scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:17:13: 17:14\n+    let mut _0: &T;                      // return place in scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:17:28: 17:30\n+    let _2: &T;                          // in scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:18:5: 18:15\n+    let mut _3: &std::boxed::Box<T>;     // in scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:18:5: 18:6\n+    scope 1 {\n+        debug self => _3;                // in scope 1 at $SRC_DIR/liballoc/boxed.rs:LL:COL\n+        let _4: &T;                      // in scope 1 at $DIR/issue-58867-inline-as-ref-as-mut.rs:18:5: 18:15\n+    }\n+\n+    bb0: {\n+        StorageLive(_2);                 // bb0[0]: scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:18:5: 18:15\n+        StorageLive(_3);                 // bb0[1]: scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:18:5: 18:6\n+        _3 = &(*_1);                     // bb0[2]: scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:18:5: 18:6\n+        StorageLive(_4);                 // bb0[3]: scope 1 at $SRC_DIR/liballoc/boxed.rs:LL:COL\n+        _4 = &(*(*_3));                  // bb0[4]: scope 1 at $SRC_DIR/liballoc/boxed.rs:LL:COL\n+        _2 = _4;                         // bb0[5]: scope 1 at $SRC_DIR/liballoc/boxed.rs:LL:COL\n+        StorageDead(_4);                 // bb0[6]: scope 1 at $SRC_DIR/liballoc/boxed.rs:LL:COL\n+        _0 = &(*_2);                     // bb0[7]: scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:18:5: 18:15\n+        StorageDead(_3);                 // bb0[8]: scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:18:14: 18:15\n+        StorageDead(_2);                 // bb0[9]: scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:19:1: 19:2\n+        return;                          // bb0[10]: scope 0 at $DIR/issue-58867-inline-as-ref-as-mut.rs:19:2: 19:2\n+    }\n+}"}]}