{"sha": "d1b69cf89b962210629149f191a7cd6647d8d5d1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQxYjY5Y2Y4OWI5NjIyMTA2MjkxNDlmMTkxYTdjZDY2NDdkOGQ1ZDE=", "commit": {"author": {"name": "BlackHoleFox", "email": "blackholefoxdev@gmail.com", "date": "2021-05-26T07:37:39Z"}, "committer": {"name": "BlackHoleFox", "email": "blackholefoxdev@gmail.com", "date": "2021-05-26T07:37:39Z"}, "message": "Fix typo in core::array::IntoIter comment", "tree": {"sha": "1ddfe2f467bc99628b39ef8a7c71ea7a8e0db584", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1ddfe2f467bc99628b39ef8a7c71ea7a8e0db584"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d1b69cf89b962210629149f191a7cd6647d8d5d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d1b69cf89b962210629149f191a7cd6647d8d5d1", "html_url": "https://github.com/rust-lang/rust/commit/d1b69cf89b962210629149f191a7cd6647d8d5d1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d1b69cf89b962210629149f191a7cd6647d8d5d1/comments", "author": {"login": "BlackHoleFox", "id": 20936452, "node_id": "MDQ6VXNlcjIwOTM2NDUy", "avatar_url": "https://avatars.githubusercontent.com/u/20936452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BlackHoleFox", "html_url": "https://github.com/BlackHoleFox", "followers_url": "https://api.github.com/users/BlackHoleFox/followers", "following_url": "https://api.github.com/users/BlackHoleFox/following{/other_user}", "gists_url": "https://api.github.com/users/BlackHoleFox/gists{/gist_id}", "starred_url": "https://api.github.com/users/BlackHoleFox/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BlackHoleFox/subscriptions", "organizations_url": "https://api.github.com/users/BlackHoleFox/orgs", "repos_url": "https://api.github.com/users/BlackHoleFox/repos", "events_url": "https://api.github.com/users/BlackHoleFox/events{/privacy}", "received_events_url": "https://api.github.com/users/BlackHoleFox/received_events", "type": "User", "site_admin": false}, "committer": {"login": "BlackHoleFox", "id": 20936452, "node_id": "MDQ6VXNlcjIwOTM2NDUy", "avatar_url": "https://avatars.githubusercontent.com/u/20936452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BlackHoleFox", "html_url": "https://github.com/BlackHoleFox", "followers_url": "https://api.github.com/users/BlackHoleFox/followers", "following_url": "https://api.github.com/users/BlackHoleFox/following{/other_user}", "gists_url": "https://api.github.com/users/BlackHoleFox/gists{/gist_id}", "starred_url": "https://api.github.com/users/BlackHoleFox/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BlackHoleFox/subscriptions", "organizations_url": "https://api.github.com/users/BlackHoleFox/orgs", "repos_url": "https://api.github.com/users/BlackHoleFox/repos", "events_url": "https://api.github.com/users/BlackHoleFox/events{/privacy}", "received_events_url": "https://api.github.com/users/BlackHoleFox/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "54bdfa125722c9ee6fadb61818f861b1102fd300", "url": "https://api.github.com/repos/rust-lang/rust/commits/54bdfa125722c9ee6fadb61818f861b1102fd300", "html_url": "https://github.com/rust-lang/rust/commit/54bdfa125722c9ee6fadb61818f861b1102fd300"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "aedbeab661058bf7f2953713e118fd272b907693", "filename": "library/core/src/array/iter.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d1b69cf89b962210629149f191a7cd6647d8d5d1/library%2Fcore%2Fsrc%2Farray%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1b69cf89b962210629149f191a7cd6647d8d5d1/library%2Fcore%2Fsrc%2Farray%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Farray%2Fiter.rs?ref=d1b69cf89b962210629149f191a7cd6647d8d5d1", "patch": "@@ -139,7 +139,7 @@ impl<T, const N: usize> Iterator for IntoIter<T, N> {\n         // SAFETY: Callers are only allowed to pass an index that is in bounds\n         // Additionally Self: TrustedRandomAccess is only implemented for T: Copy which means even\n         // multiple repeated reads of the same index would be safe and the\n-        // values aree !Drop, thus won't suffer from double drops.\n+        // values are !Drop, thus won't suffer from double drops.\n         unsafe { self.data.get_unchecked(self.alive.start + idx).assume_init_read() }\n     }\n }"}]}