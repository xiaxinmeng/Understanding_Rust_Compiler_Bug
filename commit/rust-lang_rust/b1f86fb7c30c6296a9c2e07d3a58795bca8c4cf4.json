{"sha": "b1f86fb7c30c6296a9c2e07d3a58795bca8c4cf4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIxZjg2ZmI3YzMwYzYyOTZhOWMyZTA3ZDNhNTg3OTViY2E4YzRjZjQ=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2016-11-23T18:50:22Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2016-11-23T18:50:22Z"}, "message": "Inspect def locally instead of using a method", "tree": {"sha": "84b0a5ab6e4a95604418ed2bda110c0e23a6ca6c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/84b0a5ab6e4a95604418ed2bda110c0e23a6ca6c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b1f86fb7c30c6296a9c2e07d3a58795bca8c4cf4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b1f86fb7c30c6296a9c2e07d3a58795bca8c4cf4", "html_url": "https://github.com/rust-lang/rust/commit/b1f86fb7c30c6296a9c2e07d3a58795bca8c4cf4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b1f86fb7c30c6296a9c2e07d3a58795bca8c4cf4/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "68312e3e20a881f2bcde20db0c7ee385c0aa27c1", "url": "https://api.github.com/repos/rust-lang/rust/commits/68312e3e20a881f2bcde20db0c7ee385c0aa27c1", "html_url": "https://github.com/rust-lang/rust/commit/68312e3e20a881f2bcde20db0c7ee385c0aa27c1"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "feefc43f4013e682af3628f86cb1353ae81f0397", "filename": "src/librustc/hir/def.rs", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/b1f86fb7c30c6296a9c2e07d3a58795bca8c4cf4/src%2Flibrustc%2Fhir%2Fdef.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1f86fb7c30c6296a9c2e07d3a58795bca8c4cf4/src%2Flibrustc%2Fhir%2Fdef.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fdef.rs?ref=b1f86fb7c30c6296a9c2e07d3a58795bca8c4cf4", "patch": "@@ -85,15 +85,10 @@ impl PathResolution {\n \n     /// Get the definition, if fully resolved, otherwise panic.\n     pub fn full_def(&self) -> Def {\n-        self.maybe_full_def().unwrap_or_else(|| bug!(\"path not fully resolved: {:?}\", self))\n-    }\n-\n-    pub fn maybe_full_def(&self) -> Option<Def> {\n-        if self.depth == 0 {\n-            Some(self.base_def)\n-        } else {\n-            None\n+        if self.depth != 0 {\n+            bug!(\"path not fully resolved: {:?}\", self);\n         }\n+        self.base_def\n     }\n \n     pub fn kind_name(&self) -> &'static str {"}, {"sha": "a82a51a2e17599aa7d5f91096072f3694f6ad436", "filename": "src/librustc_save_analysis/lib.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/b1f86fb7c30c6296a9c2e07d3a58795bca8c4cf4/src%2Flibrustc_save_analysis%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1f86fb7c30c6296a9c2e07d3a58795bca8c4cf4/src%2Flibrustc_save_analysis%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_save_analysis%2Flib.rs?ref=b1f86fb7c30c6296a9c2e07d3a58795bca8c4cf4", "patch": "@@ -497,7 +497,12 @@ impl<'l, 'tcx: 'l> SaveContext<'l, 'tcx> {\n     }\n \n     pub fn get_path_data(&self, id: NodeId, path: &ast::Path) -> Option<Data> {\n-        let def = option_try!(self.tcx.expect_resolution(id).maybe_full_def());\n+        let resolution = self.tcx.expect_resolution(id);\n+        if resolution.depth != 0 {\n+            return None;\n+        }\n+        let def = resolution.base_def;\n+\n         let sub_span = self.span_utils.span_for_last_ident(path.span);\n         filter!(self.span_utils, sub_span, path.span, None);\n         match def {"}]}