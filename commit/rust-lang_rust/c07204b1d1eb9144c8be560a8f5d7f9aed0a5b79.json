{"sha": "c07204b1d1eb9144c8be560a8f5d7f9aed0a5b79", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMwNzIwNGIxZDFlYjkxNDRjOGJlNTYwYThmNWQ3ZjlhZWQwYTViNzk=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-01-07T04:46:07Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-01-07T04:46:07Z"}, "message": "Rollup merge of #67908 - ollie27:rustdoc_const_html_escape, r=GuillaumeGomez\n\nrustdoc: HTML escape const values\n\nr? @GuillaumeGomez", "tree": {"sha": "1beee7ab161d7f31572d27e9e78f0905653284df", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1beee7ab161d7f31572d27e9e78f0905653284df"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c07204b1d1eb9144c8be560a8f5d7f9aed0a5b79", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeFA0PCRBK7hj4Ov3rIwAAdHIIAKJrJdHQQ7w0kJY+X6avJ094\nzwfOaAcME4D8GiyyuGCMeWsP2m0Tm4PpOWSG8Be8CEw1T6QqTl0MbuwFfZSG2FHi\nOmAvpOUu/ca7ZFORXtTR5SjvF68xF7ri3DnNdgb1YltNZJ9wnJ825gN3FXTW9fDz\nqcxMzhveGZcWG9wKaUqkGjOoiw1Ji7TdFYP/g5WxzulRJxoYS+hDbvuBBwa0BtG1\nxtBHy1FGbF9XUP+17oOIeRALLczLkrppHhGkQuwZ7Em+vx7Td2fMPImZ+w+jY3Ty\nkrGTuU3+n3mNEzUWAqiiS0O5YPP4I+/HV+i4kH9/oxiZjCSaCGd5QjeIew7FTiw=\n=M/JX\n-----END PGP SIGNATURE-----\n", "payload": "tree 1beee7ab161d7f31572d27e9e78f0905653284df\nparent 9ef3b2ca2a9d37657ea1b5de056dd7324dca0632\nparent e2305d0055805effb9d6200f995ad825aa0c56e1\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1578372367 +0900\ncommitter GitHub <noreply@github.com> 1578372367 +0900\n\nRollup merge of #67908 - ollie27:rustdoc_const_html_escape, r=GuillaumeGomez\n\nrustdoc: HTML escape const values\n\nr? @GuillaumeGomez\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c07204b1d1eb9144c8be560a8f5d7f9aed0a5b79", "html_url": "https://github.com/rust-lang/rust/commit/c07204b1d1eb9144c8be560a8f5d7f9aed0a5b79", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c07204b1d1eb9144c8be560a8f5d7f9aed0a5b79/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9ef3b2ca2a9d37657ea1b5de056dd7324dca0632", "url": "https://api.github.com/repos/rust-lang/rust/commits/9ef3b2ca2a9d37657ea1b5de056dd7324dca0632", "html_url": "https://github.com/rust-lang/rust/commit/9ef3b2ca2a9d37657ea1b5de056dd7324dca0632"}, {"sha": "e2305d0055805effb9d6200f995ad825aa0c56e1", "url": "https://api.github.com/repos/rust-lang/rust/commits/e2305d0055805effb9d6200f995ad825aa0c56e1", "html_url": "https://github.com/rust-lang/rust/commit/e2305d0055805effb9d6200f995ad825aa0c56e1"}], "stats": {"total": 31, "additions": 26, "deletions": 5}, "files": [{"sha": "6434dccdfc75bdbae0b277e6fd2ac0dc214fcf84", "filename": "src/librustdoc/html/format.rs", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/c07204b1d1eb9144c8be560a8f5d7f9aed0a5b79/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c07204b1d1eb9144c8be560a8f5d7f9aed0a5b79/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fformat.rs?ref=c07204b1d1eb9144c8be560a8f5d7f9aed0a5b79", "patch": "@@ -15,6 +15,7 @@ use rustc_hir::def_id::DefId;\n use rustc_target::spec::abi::Abi;\n \n use crate::clean::{self, PrimitiveType};\n+use crate::html::escape::Escape;\n use crate::html::item_type::ItemType;\n use crate::html::render::{self, cache, CURRENT_DEPTH};\n \n@@ -314,8 +315,14 @@ impl clean::Lifetime {\n }\n \n impl clean::Constant {\n-    crate fn print(&self) -> &str {\n-        &self.expr\n+    crate fn print(&self) -> impl fmt::Display + '_ {\n+        display_fn(move |f| {\n+            if f.alternate() {\n+                f.write_str(&self.expr)\n+            } else {\n+                write!(f, \"{}\", Escape(&self.expr))\n+            }\n+        })\n     }\n }\n \n@@ -689,7 +696,11 @@ fn fmt_type(t: &clean::Type, f: &mut fmt::Formatter<'_>, use_absolute: bool) ->\n         clean::Array(ref t, ref n) => {\n             primitive_link(f, PrimitiveType::Array, \"[\")?;\n             fmt::Display::fmt(&t.print(), f)?;\n-            primitive_link(f, PrimitiveType::Array, &format!(\"; {}]\", n))\n+            if f.alternate() {\n+                primitive_link(f, PrimitiveType::Array, &format!(\"; {}]\", n))\n+            } else {\n+                primitive_link(f, PrimitiveType::Array, &format!(\"; {}]\", Escape(n)))\n+            }\n         }\n         clean::Never => primitive_link(f, PrimitiveType::Never, \"!\"),\n         clean::RawPointer(m, ref t) => {"}, {"sha": "a01e2f793948e668967b94697d720d9473193c95", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c07204b1d1eb9144c8be560a8f5d7f9aed0a5b79/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c07204b1d1eb9144c8be560a8f5d7f9aed0a5b79/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=c07204b1d1eb9144c8be560a8f5d7f9aed0a5b79", "patch": "@@ -2280,7 +2280,7 @@ fn item_constant(w: &mut Buffer, cx: &Context, it: &clean::Item, c: &clean::Cons\n     );\n \n     if c.value.is_some() || c.is_literal {\n-        write!(w, \" = {expr};\", expr = c.expr);\n+        write!(w, \" = {expr};\", expr = Escape(&c.expr));\n     } else {\n         write!(w, \";\");\n     }\n@@ -2293,7 +2293,7 @@ fn item_constant(w: &mut Buffer, cx: &Context, it: &clean::Item, c: &clean::Cons\n             if value_lowercase != expr_lowercase\n                 && value_lowercase.trim_end_matches(\"i32\") != expr_lowercase\n             {\n-                write!(w, \" // {value}\", value = value);\n+                write!(w, \" // {value}\", value = Escape(value));\n             }\n         }\n     }"}, {"sha": "7361b22b7479842533420cd5c9685094677b2884", "filename": "src/test/rustdoc/const-generics/const-impl.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/c07204b1d1eb9144c8be560a8f5d7f9aed0a5b79/src%2Ftest%2Frustdoc%2Fconst-generics%2Fconst-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c07204b1d1eb9144c8be560a8f5d7f9aed0a5b79/src%2Ftest%2Frustdoc%2Fconst-generics%2Fconst-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fconst-generics%2Fconst-impl.rs?ref=c07204b1d1eb9144c8be560a8f5d7f9aed0a5b79", "patch": "@@ -30,3 +30,10 @@ impl <T> VSet<T, {Order::Unsorted}> {\n         Self { inner: Vec::new() }\n     }\n }\n+\n+pub struct Escape<const S: &'static str>;\n+\n+// @has foo/struct.Escape.html '//h3[@id=\"impl\"]/code' 'impl Escape<{ r#\"<script>alert(\"Escape\");</script>\"# }>'\n+impl Escape<{ r#\"<script>alert(\"Escape\");</script>\"# }> {\n+    pub fn f() {}\n+}"}, {"sha": "e84f6e52c75aa114cec4f6d22caab54d9d08afae", "filename": "src/test/rustdoc/show-const-contents.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c07204b1d1eb9144c8be560a8f5d7f9aed0a5b79/src%2Ftest%2Frustdoc%2Fshow-const-contents.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c07204b1d1eb9144c8be560a8f5d7f9aed0a5b79/src%2Ftest%2Frustdoc%2Fshow-const-contents.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fshow-const-contents.rs?ref=c07204b1d1eb9144c8be560a8f5d7f9aed0a5b79", "patch": "@@ -62,3 +62,6 @@ macro_rules! int_module {\n \n // @has show_const_contents/constant.MIN.html '= i16::min_value(); // -32_768i16'\n int_module!(i16);\n+\n+// @has show_const_contents/constant.ESCAPE.html //pre '= r#\"<script>alert(\"ESCAPE\");</script>\"#;'\n+pub const ESCAPE: &str = r#\"<script>alert(\"ESCAPE\");</script>\"#;"}]}