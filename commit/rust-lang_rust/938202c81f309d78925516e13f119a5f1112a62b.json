{"sha": "938202c81f309d78925516e13f119a5f1112a62b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkzODIwMmM4MWYzMDlkNzg5MjU1MTZlMTNmMTE5YTVmMTExMmE2MmI=", "commit": {"author": {"name": "mitaa", "email": "mitaa.ceb@gmail.com", "date": "2016-02-12T08:43:33Z"}, "committer": {"name": "mitaa", "email": "mitaa.ceb@gmail.com", "date": "2016-02-12T09:26:46Z"}, "message": "Fix associated item identifiers\n\nSearch results use the mapping found in `ItemType::to_static_str` for\nthe identifier, which could not be found on the page in the case of\nassociated items.", "tree": {"sha": "10de5eb2d0d856c98e19093f600afe873f0599db", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/10de5eb2d0d856c98e19093f600afe873f0599db"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/938202c81f309d78925516e13f119a5f1112a62b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/938202c81f309d78925516e13f119a5f1112a62b", "html_url": "https://github.com/rust-lang/rust/commit/938202c81f309d78925516e13f119a5f1112a62b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/938202c81f309d78925516e13f119a5f1112a62b/comments", "author": {"login": "mitaa", "id": 6785936, "node_id": "MDQ6VXNlcjY3ODU5MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/6785936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitaa", "html_url": "https://github.com/mitaa", "followers_url": "https://api.github.com/users/mitaa/followers", "following_url": "https://api.github.com/users/mitaa/following{/other_user}", "gists_url": "https://api.github.com/users/mitaa/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitaa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitaa/subscriptions", "organizations_url": "https://api.github.com/users/mitaa/orgs", "repos_url": "https://api.github.com/users/mitaa/repos", "events_url": "https://api.github.com/users/mitaa/events{/privacy}", "received_events_url": "https://api.github.com/users/mitaa/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mitaa", "id": 6785936, "node_id": "MDQ6VXNlcjY3ODU5MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/6785936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitaa", "html_url": "https://github.com/mitaa", "followers_url": "https://api.github.com/users/mitaa/followers", "following_url": "https://api.github.com/users/mitaa/following{/other_user}", "gists_url": "https://api.github.com/users/mitaa/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitaa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitaa/subscriptions", "organizations_url": "https://api.github.com/users/mitaa/orgs", "repos_url": "https://api.github.com/users/mitaa/repos", "events_url": "https://api.github.com/users/mitaa/events{/privacy}", "received_events_url": "https://api.github.com/users/mitaa/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a085e3bd456c2f8082aad0ce020a57e99fb77eb7", "url": "https://api.github.com/repos/rust-lang/rust/commits/a085e3bd456c2f8082aad0ce020a57e99fb77eb7", "html_url": "https://github.com/rust-lang/rust/commit/a085e3bd456c2f8082aad0ce020a57e99fb77eb7"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "b97ccfd3c8800fdef6d4ea711e47762c2e888bba", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/938202c81f309d78925516e13f119a5f1112a62b/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/938202c81f309d78925516e13f119a5f1112a62b/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=938202c81f309d78925516e13f119a5f1112a62b", "patch": "@@ -2550,25 +2550,25 @@ fn render_impl(w: &mut fmt::Formatter, cx: &Context, i: &Impl, link: AssocItemLi\n                 }\n             }\n             clean::TypedefItem(ref tydef, _) => {\n-                let id = derive_id(format!(\"assoc_type.{}\", name));\n+                let id = derive_id(format!(\"associatedtype.{}\", name));\n                 try!(write!(w, \"<h4 id='{}' class='{}'><code>\", id, shortty(item)));\n                 try!(write!(w, \"type {} = {}\", name, tydef.type_));\n                 try!(write!(w, \"</code></h4>\\n\"));\n             }\n             clean::AssociatedConstItem(ref ty, ref default) => {\n-                let id = derive_id(format!(\"assoc_const.{}\", name));\n+                let id = derive_id(format!(\"associatedconstant.{}\", name));\n                 try!(write!(w, \"<h4 id='{}' class='{}'><code>\", id, shortty(item)));\n                 try!(assoc_const(w, item, ty, default.as_ref()));\n                 try!(write!(w, \"</code></h4>\\n\"));\n             }\n             clean::ConstantItem(ref c) => {\n-                let id = derive_id(format!(\"assoc_const.{}\", name));\n+                let id = derive_id(format!(\"associatedconstant.{}\", name));\n                 try!(write!(w, \"<h4 id='{}' class='{}'><code>\", id, shortty(item)));\n                 try!(assoc_const(w, item, &c.type_, Some(&c.expr)));\n                 try!(write!(w, \"</code></h4>\\n\"));\n             }\n             clean::AssociatedTypeItem(ref bounds, ref default) => {\n-                let id = derive_id(format!(\"assoc_type.{}\", name));\n+                let id = derive_id(format!(\"associatedtype.{}\", name));\n                 try!(write!(w, \"<h4 id='{}' class='{}'><code>\", id, shortty(item)));\n                 try!(assoc_type(w, item, bounds, default));\n                 try!(write!(w, \"</code></h4>\\n\"));"}, {"sha": "8d3f9b59bb2eebe0e25cf48f66bb659b267675e5", "filename": "src/test/rustdoc/assoc-consts.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/938202c81f309d78925516e13f119a5f1112a62b/src%2Ftest%2Frustdoc%2Fassoc-consts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/938202c81f309d78925516e13f119a5f1112a62b/src%2Ftest%2Frustdoc%2Fassoc-consts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fassoc-consts.rs?ref=938202c81f309d78925516e13f119a5f1112a62b", "patch": "@@ -20,7 +20,7 @@ pub trait Foo {\n pub struct Bar;\n \n impl Bar {\n-    // @has assoc_consts/struct.Bar.html '//*[@id=\"assoc_const.BAR\"]' \\\n+    // @has assoc_consts/struct.Bar.html '//*[@id=\"associatedconstant.BAR\"]' \\\n     //      'const BAR: usize = 3'\n     pub const BAR: usize = 3;\n }"}, {"sha": "ff48c70fc58dc6e0f463b75fdb4967d08c6dcf6a", "filename": "src/test/rustdoc/issue-21092.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/938202c81f309d78925516e13f119a5f1112a62b/src%2Ftest%2Frustdoc%2Fissue-21092.rs", "raw_url": "https://github.com/rust-lang/rust/raw/938202c81f309d78925516e13f119a5f1112a62b/src%2Ftest%2Frustdoc%2Fissue-21092.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-21092.rs?ref=938202c81f309d78925516e13f119a5f1112a62b", "patch": "@@ -14,5 +14,5 @@\n extern crate issue_21092;\n \n // @has issue_21092/struct.Bar.html\n-// @has - '//*[@id=\"assoc_type.Bar\"]' 'type Bar = i32'\n+// @has - '//*[@id=\"associatedtype.Bar\"]' 'type Bar = i32'\n pub use issue_21092::{Foo, Bar};"}, {"sha": "2343b610ce448c30414892a8f13f4b19b9654162", "filename": "src/test/rustdoc/issue-25001.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/938202c81f309d78925516e13f119a5f1112a62b/src%2Ftest%2Frustdoc%2Fissue-25001.rs", "raw_url": "https://github.com/rust-lang/rust/raw/938202c81f309d78925516e13f119a5f1112a62b/src%2Ftest%2Frustdoc%2Fissue-25001.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-25001.rs?ref=938202c81f309d78925516e13f119a5f1112a62b", "patch": "@@ -31,21 +31,21 @@ impl<T> Foo<T> {\n }\n \n impl<T> Bar for Foo<T> {\n-    // @has - '//*[@id=\"assoc_type.Item\"]//code' 'type Item = T'\n+    // @has - '//*[@id=\"associatedtype.Item\"]//code' 'type Item = T'\n     type Item=T;\n \n     // @has - '//*[@id=\"method.quux\"]//code' 'fn quux(self)'\n     fn quux(self) {}\n }\n impl<'a, T> Bar for &'a Foo<T> {\n-    // @has - '//*[@id=\"assoc_type.Item-1\"]//code' \"type Item = &'a T\"\n+    // @has - '//*[@id=\"associatedtype.Item-1\"]//code' \"type Item = &'a T\"\n     type Item=&'a T;\n \n     // @has - '//*[@id=\"method.quux-1\"]//code' 'fn quux(self)'\n     fn quux(self) {}\n }\n impl<'a, T> Bar for &'a mut Foo<T> {\n-    // @has - '//*[@id=\"assoc_type.Item-2\"]//code' \"type Item = &'a mut T\"\n+    // @has - '//*[@id=\"associatedtype.Item-2\"]//code' \"type Item = &'a mut T\"\n     type Item=&'a mut T;\n \n     // @has - '//*[@id=\"method.quux-2\"]//code' 'fn quux(self)'"}]}