{"sha": "8db906c752bb1f3b69499acc7a44576611c123c6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhkYjkwNmM3NTJiYjFmM2I2OTQ5OWFjYzdhNDQ1NzY2MTFjMTIzYzY=", "commit": {"author": {"name": "Simonas Kazlauskas", "email": "git@kazlauskas.me", "date": "2015-09-01T17:26:51Z"}, "committer": {"name": "Simonas Kazlauskas", "email": "git@kazlauskas.me", "date": "2015-09-01T17:27:48Z"}, "message": "Implement Debug for BinaryHeap\n\nFixes #28154", "tree": {"sha": "37a27fe47ac661d70d587d1a72643720ba825d6b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/37a27fe47ac661d70d587d1a72643720ba825d6b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8db906c752bb1f3b69499acc7a44576611c123c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8db906c752bb1f3b69499acc7a44576611c123c6", "html_url": "https://github.com/rust-lang/rust/commit/8db906c752bb1f3b69499acc7a44576611c123c6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8db906c752bb1f3b69499acc7a44576611c123c6/comments", "author": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "05cc464d90f0189b776859c56c87db2e99cdbd87", "url": "https://api.github.com/repos/rust-lang/rust/commits/05cc464d90f0189b776859c56c87db2e99cdbd87", "html_url": "https://github.com/rust-lang/rust/commit/05cc464d90f0189b776859c56c87db2e99cdbd87"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "b73e7ab0d040c8b0dd90a3730fe56bfc38d8c1bb", "filename": "src/libcollections/binary_heap.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8db906c752bb1f3b69499acc7a44576611c123c6/src%2Flibcollections%2Fbinary_heap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8db906c752bb1f3b69499acc7a44576611c123c6/src%2Flibcollections%2Fbinary_heap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fbinary_heap.rs?ref=8db906c752bb1f3b69499acc7a44576611c123c6", "patch": "@@ -154,6 +154,7 @@\n use core::iter::{FromIterator};\n use core::mem::swap;\n use core::ptr;\n+use core::fmt;\n \n use slice;\n use vec::{self, Vec};\n@@ -178,6 +179,13 @@ impl<T: Ord> Default for BinaryHeap<T> {\n     fn default() -> BinaryHeap<T> { BinaryHeap::new() }\n }\n \n+#[stable(feature = \"binaryheap_debug\", since = \"1.4.0\")]\n+impl<T: fmt::Debug + Ord> fmt::Debug for BinaryHeap<T> {\n+    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n+        f.debug_list().entries(self.iter()).finish()\n+    }\n+}\n+\n impl<T: Ord> BinaryHeap<T> {\n     /// Creates an empty `BinaryHeap` as a max-heap.\n     ///"}]}