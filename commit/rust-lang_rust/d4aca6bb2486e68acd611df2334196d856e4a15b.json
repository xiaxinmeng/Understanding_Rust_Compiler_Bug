{"sha": "d4aca6bb2486e68acd611df2334196d856e4a15b", "node_id": "C_kwDOAAsO6NoAKGQ0YWNhNmJiMjQ4NmU2OGFjZDYxMWRmMjMzNDE5NmQ4NTZlNGExNWI", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-12-22T10:03:52Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-12-22T10:03:52Z"}, "message": "Rollup merge of #106010 - oli-obk:tait_coherence_diagnostic, r=compiler-errors\n\nGive opaque types a better coherence error", "tree": {"sha": "de8b94d1dfe1df91e2a14726b36a0022f876dc43", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/de8b94d1dfe1df91e2a14726b36a0022f876dc43"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d4aca6bb2486e68acd611df2334196d856e4a15b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjpCuICRBK7hj4Ov3rIwAAkroIABc/r4hSY7o5gruLlrtPuw3+\nl6rxxHer1FGKJCYWdrUBAK/49XrkvSBS12MUnoyDumX0UAvLuWH95q2pxSaUXfCh\nOzNhQaOx4D9Oo3hbWq0E7CLtJuZOC77WY181FWJD14YxSJN+dbFiAiiu4iwDhvEA\nMw/fq/KWB3AVDAqdCFqv3Q+zKBSxzAA6EHxu3PZv562vRz2zIYK4Va2kT7K+niYk\nF/v2SbQo8XO3ydjcgmtUE331JvWcbKEAriRY4OoQXv8E3hq0YEed+rP8La+wXo5X\npTFZm8aFEDo9/B91pxrEyrwljaR1GVYQ7j4tcRRgKIr0RWif2SzYVk9SeTpQ6ZE=\n=AS7c\n-----END PGP SIGNATURE-----\n", "payload": "tree de8b94d1dfe1df91e2a14726b36a0022f876dc43\nparent eb07d98648fe0a96280d2eb8827e7906f584ad77\nparent a9af75cdbc2f31fe0f68854d5b579616c4393839\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1671703432 +0100\ncommitter GitHub <noreply@github.com> 1671703432 +0100\n\nRollup merge of #106010 - oli-obk:tait_coherence_diagnostic, r=compiler-errors\n\nGive opaque types a better coherence error\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d4aca6bb2486e68acd611df2334196d856e4a15b", "html_url": "https://github.com/rust-lang/rust/commit/d4aca6bb2486e68acd611df2334196d856e4a15b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d4aca6bb2486e68acd611df2334196d856e4a15b/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eb07d98648fe0a96280d2eb8827e7906f584ad77", "url": "https://api.github.com/repos/rust-lang/rust/commits/eb07d98648fe0a96280d2eb8827e7906f584ad77", "html_url": "https://github.com/rust-lang/rust/commit/eb07d98648fe0a96280d2eb8827e7906f584ad77"}, {"sha": "a9af75cdbc2f31fe0f68854d5b579616c4393839", "url": "https://api.github.com/repos/rust-lang/rust/commits/a9af75cdbc2f31fe0f68854d5b579616c4393839", "html_url": "https://github.com/rust-lang/rust/commit/a9af75cdbc2f31fe0f68854d5b579616c4393839"}], "stats": {"total": 25, "additions": 16, "deletions": 9}, "files": [{"sha": "c6d4aeefc80e5e7883862065b6b6fe5fd63ba6d0", "filename": "compiler/rustc_hir_analysis/src/coherence/orphan.rs", "status": "modified", "additions": 15, "deletions": 8, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/d4aca6bb2486e68acd611df2334196d856e4a15b/compiler%2Frustc_hir_analysis%2Fsrc%2Fcoherence%2Forphan.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4aca6bb2486e68acd611df2334196d856e4a15b/compiler%2Frustc_hir_analysis%2Fsrc%2Fcoherence%2Forphan.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcoherence%2Forphan.rs?ref=d4aca6bb2486e68acd611df2334196d856e4a15b", "patch": "@@ -184,11 +184,19 @@ fn emit_orphan_check_error<'tcx>(\n                     ty::Adt(def, _) => tcx.mk_adt(*def, ty::List::empty()),\n                     _ => ty,\n                 };\n-                let this = \"this\".to_string();\n-                let (ty, postfix) = match &ty.kind() {\n-                    ty::Slice(_) => (this, \" because slices are always foreign\"),\n-                    ty::Array(..) => (this, \" because arrays are always foreign\"),\n-                    ty::Tuple(..) => (this, \" because tuples are always foreign\"),\n+                let msg = |ty: &str, postfix: &str| {\n+                    format!(\"{ty} is not defined in the current crate{postfix}\")\n+                };\n+                let this = |name: &str| msg(\"this\", &format!(\" because {name} are always foreign\"));\n+                let msg = match &ty.kind() {\n+                    ty::Slice(_) => this(\"slices\"),\n+                    ty::Array(..) => this(\"arrays\"),\n+                    ty::Tuple(..) => this(\"tuples\"),\n+                    ty::Alias(ty::Opaque, ..) => {\n+                        \"type alias impl trait is treated as if it were foreign, \\\n+                        because its hidden type could be from a foreign crate\"\n+                            .to_string()\n+                    }\n                     ty::RawPtr(ptr_ty) => {\n                         emit_newtype_suggestion_for_raw_ptr(\n                             full_impl_span,\n@@ -198,12 +206,11 @@ fn emit_orphan_check_error<'tcx>(\n                             &mut err,\n                         );\n \n-                        (format!(\"`{}`\", ty), \" because raw pointers are always foreign\")\n+                        msg(&format!(\"`{ty}`\"), \" because raw pointers are always foreign\")\n                     }\n-                    _ => (format!(\"`{}`\", ty), \"\"),\n+                    _ => msg(&format!(\"`{ty}`\"), \"\"),\n                 };\n \n-                let msg = format!(\"{} is not defined in the current crate{}\", ty, postfix);\n                 if is_target_ty {\n                     // Point at `D<A>` in `impl<A, B> for C<B> in D<A>`\n                     err.span_label(self_ty_span, &msg);"}, {"sha": "00b0dbbb583fd8724034ebefb11323b9a1a29f7a", "filename": "src/test/ui/type-alias-impl-trait/coherence.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d4aca6bb2486e68acd611df2334196d856e4a15b/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fcoherence.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d4aca6bb2486e68acd611df2334196d856e4a15b/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fcoherence.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fcoherence.stderr?ref=d4aca6bb2486e68acd611df2334196d856e4a15b", "patch": "@@ -4,7 +4,7 @@ error[E0117]: only traits defined in the current crate can be implemented for ar\n LL | impl<T> foreign_crate::ForeignTrait for AliasOfForeignType<T> {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^---------------------\n    | |                                       |\n-   | |                                       `AliasOfForeignType<T>` is not defined in the current crate\n+   | |                                       type alias impl trait is treated as if it were foreign, because its hidden type could be from a foreign crate\n    | impl doesn't use only types from inside the current crate\n    |\n    = note: define and implement a trait or new type instead"}]}