{"sha": "ecd41976fc5a13e8c9a706496d714f655a5ab995", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVjZDQxOTc2ZmM1YTEzZThjOWE3MDY0OTZkNzE0ZjY1NWE1YWI5OTU=", "commit": {"author": {"name": "Fabian Zaiser", "email": "fabian.zaiser@gmail.com", "date": "2018-04-11T12:27:00Z"}, "committer": {"name": "Fabian Zaiser", "email": "fabian.zaiser@gmail.com", "date": "2018-04-15T21:32:58Z"}, "message": "Rebase and update code.", "tree": {"sha": "e4cdaea295190b855187ff4976eb9cdaf352ffd8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e4cdaea295190b855187ff4976eb9cdaf352ffd8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ecd41976fc5a13e8c9a706496d714f655a5ab995", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ecd41976fc5a13e8c9a706496d714f655a5ab995", "html_url": "https://github.com/rust-lang/rust/commit/ecd41976fc5a13e8c9a706496d714f655a5ab995", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ecd41976fc5a13e8c9a706496d714f655a5ab995/comments", "author": {"login": "fanzier", "id": 5846332, "node_id": "MDQ6VXNlcjU4NDYzMzI=", "avatar_url": "https://avatars.githubusercontent.com/u/5846332?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fanzier", "html_url": "https://github.com/fanzier", "followers_url": "https://api.github.com/users/fanzier/followers", "following_url": "https://api.github.com/users/fanzier/following{/other_user}", "gists_url": "https://api.github.com/users/fanzier/gists{/gist_id}", "starred_url": "https://api.github.com/users/fanzier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fanzier/subscriptions", "organizations_url": "https://api.github.com/users/fanzier/orgs", "repos_url": "https://api.github.com/users/fanzier/repos", "events_url": "https://api.github.com/users/fanzier/events{/privacy}", "received_events_url": "https://api.github.com/users/fanzier/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fanzier", "id": 5846332, "node_id": "MDQ6VXNlcjU4NDYzMzI=", "avatar_url": "https://avatars.githubusercontent.com/u/5846332?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fanzier", "html_url": "https://github.com/fanzier", "followers_url": "https://api.github.com/users/fanzier/followers", "following_url": "https://api.github.com/users/fanzier/following{/other_user}", "gists_url": "https://api.github.com/users/fanzier/gists{/gist_id}", "starred_url": "https://api.github.com/users/fanzier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fanzier/subscriptions", "organizations_url": "https://api.github.com/users/fanzier/orgs", "repos_url": "https://api.github.com/users/fanzier/repos", "events_url": "https://api.github.com/users/fanzier/events{/privacy}", "received_events_url": "https://api.github.com/users/fanzier/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "27393b121054575824417bc8609c1602a08a9d08", "url": "https://api.github.com/repos/rust-lang/rust/commits/27393b121054575824417bc8609c1602a08a9d08", "html_url": "https://github.com/rust-lang/rust/commit/27393b121054575824417bc8609c1602a08a9d08"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "1b73cd480990c6bc766f547f683fe6e6bf8e21e6", "filename": "src/librustc_traits/lowering.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ecd41976fc5a13e8c9a706496d714f655a5ab995/src%2Flibrustc_traits%2Flowering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ecd41976fc5a13e8c9a706496d714f655a5ab995/src%2Flibrustc_traits%2Flowering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_traits%2Flowering.rs?ref=ecd41976fc5a13e8c9a706496d714f655a5ab995", "patch": "@@ -108,6 +108,7 @@ impl<'tcx> IntoFromEnvGoal for DomainGoal<'tcx> {\n             FromEnv(..) |\n             WellFormedTy(..) |\n             FromEnvTy(..) |\n+            Normalize(..) |\n             RegionOutlives(..) |\n             TypeOutlives(..) => self,\n         }\n@@ -288,8 +289,11 @@ pub fn program_clauses_for_associated_type_value<'a, 'tcx>(\n     // `Normalize(<A0 as Trait<A1..An>>::AssocType<Pn+1..Pm> -> T)`\n     let normalize_goal = DomainGoal::Normalize(ty::ProjectionPredicate { projection_ty, ty });\n     // `Normalize(... -> T) :- WC && WC1`\n-    let clause = Clause::Implies(where_clauses, normalize_goal);\n-    Lrc::new(vec![clause])\n+    let clause = ProgramClause {\n+        goal: normalize_goal,\n+        hypotheses: where_clauses.into_iter().map(|wc| wc.into()).collect(),\n+    };\n+    Lrc::new(vec![Clause::ForAll(ty::Binder::dummy(clause))])\n }\n \n pub fn dump_program_clauses<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>) {"}]}