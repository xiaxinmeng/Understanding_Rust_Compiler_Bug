{"sha": "5a8f102bf6065901a6115c02dab6fa29b71b2db6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVhOGYxMDJiZjYwNjU5MDFhNjExNWMwMmRhYjZmYTI5YjcxYjJkYjY=", "commit": {"author": {"name": "Ryan Prichard", "email": "ryan.prichard@gmail.com", "date": "2015-04-04T02:58:41Z"}, "committer": {"name": "Ryan Prichard", "email": "ryan.prichard@gmail.com", "date": "2015-04-11T23:00:58Z"}, "message": "Add compile-file/macro-backtrace-{invalid-internals,nested,println} tests", "tree": {"sha": "bb4fff38332c3a456f6a4790392c1ac8593023eb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bb4fff38332c3a456f6a4790392c1ac8593023eb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5a8f102bf6065901a6115c02dab6fa29b71b2db6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5a8f102bf6065901a6115c02dab6fa29b71b2db6", "html_url": "https://github.com/rust-lang/rust/commit/5a8f102bf6065901a6115c02dab6fa29b71b2db6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5a8f102bf6065901a6115c02dab6fa29b71b2db6/comments", "author": {"login": "rprichard", "id": 1572855, "node_id": "MDQ6VXNlcjE1NzI4NTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1572855?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rprichard", "html_url": "https://github.com/rprichard", "followers_url": "https://api.github.com/users/rprichard/followers", "following_url": "https://api.github.com/users/rprichard/following{/other_user}", "gists_url": "https://api.github.com/users/rprichard/gists{/gist_id}", "starred_url": "https://api.github.com/users/rprichard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rprichard/subscriptions", "organizations_url": "https://api.github.com/users/rprichard/orgs", "repos_url": "https://api.github.com/users/rprichard/repos", "events_url": "https://api.github.com/users/rprichard/events{/privacy}", "received_events_url": "https://api.github.com/users/rprichard/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rprichard", "id": 1572855, "node_id": "MDQ6VXNlcjE1NzI4NTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1572855?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rprichard", "html_url": "https://github.com/rprichard", "followers_url": "https://api.github.com/users/rprichard/followers", "following_url": "https://api.github.com/users/rprichard/following{/other_user}", "gists_url": "https://api.github.com/users/rprichard/gists{/gist_id}", "starred_url": "https://api.github.com/users/rprichard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rprichard/subscriptions", "organizations_url": "https://api.github.com/users/rprichard/orgs", "repos_url": "https://api.github.com/users/rprichard/repos", "events_url": "https://api.github.com/users/rprichard/events{/privacy}", "received_events_url": "https://api.github.com/users/rprichard/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a893c646d0ba9b58fb6167dca6fbbc567b479c95", "url": "https://api.github.com/repos/rust-lang/rust/commits/a893c646d0ba9b58fb6167dca6fbbc567b479c95", "html_url": "https://github.com/rust-lang/rust/commit/a893c646d0ba9b58fb6167dca6fbbc567b479c95"}], "stats": {"total": 115, "additions": 115, "deletions": 0}, "files": [{"sha": "df906d723566c78ca84d84a15e9783773e16b539", "filename": "src/test/compile-fail/macro-backtrace-invalid-internals.rs", "status": "added", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/rust-lang/rust/blob/5a8f102bf6065901a6115c02dab6fa29b71b2db6/src%2Ftest%2Fcompile-fail%2Fmacro-backtrace-invalid-internals.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a8f102bf6065901a6115c02dab6fa29b71b2db6/src%2Ftest%2Fcompile-fail%2Fmacro-backtrace-invalid-internals.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmacro-backtrace-invalid-internals.rs?ref=5a8f102bf6065901a6115c02dab6fa29b71b2db6", "patch": "@@ -0,0 +1,57 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Macros in statement vs expression position handle backtraces differently.\n+\n+macro_rules! fake_method_stmt { //~ NOTE in expansion of\n+     () => {\n+          1.fake() //~ ERROR does not implement any method\n+     }\n+}\n+\n+macro_rules! fake_field_stmt { //~ NOTE in expansion of\n+     () => {\n+          1.fake //~ ERROR no field with that name\n+     }\n+}\n+\n+macro_rules! fake_anon_field_stmt { //~ NOTE in expansion of\n+     () => {\n+          (1).0 //~ ERROR type was not a tuple\n+     }\n+}\n+\n+macro_rules! fake_method_expr { //~ NOTE in expansion of\n+     () => {\n+          1.fake() //~ ERROR does not implement any method\n+     }\n+}\n+\n+macro_rules! fake_field_expr {\n+     () => {\n+          1.fake\n+     }\n+}\n+\n+macro_rules! fake_anon_field_expr {\n+     () => {\n+          (1).0\n+     }\n+}\n+\n+fn main() {\n+    fake_method_stmt!(); //~ NOTE expansion site\n+    fake_field_stmt!(); //~ NOTE expansion site\n+    fake_anon_field_stmt!(); //~ NOTE expansion site\n+\n+    let _ = fake_method_expr!(); //~ NOTE expansion site\n+    let _ = fake_field_expr!(); //~ ERROR no field with that name\n+    let _ = fake_anon_field_expr!(); //~ ERROR type was not a tuple\n+}"}, {"sha": "7c1dc1a468c76802126ad8db8aeffacb3807ef7b", "filename": "src/test/compile-fail/macro-backtrace-nested.rs", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/5a8f102bf6065901a6115c02dab6fa29b71b2db6/src%2Ftest%2Fcompile-fail%2Fmacro-backtrace-nested.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a8f102bf6065901a6115c02dab6fa29b71b2db6/src%2Ftest%2Fcompile-fail%2Fmacro-backtrace-nested.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmacro-backtrace-nested.rs?ref=5a8f102bf6065901a6115c02dab6fa29b71b2db6", "patch": "@@ -0,0 +1,29 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// In expression position, but not statement position, when we expand a macro,\n+// we replace the span of the expanded expression with that of the call site.\n+\n+macro_rules! nested_expr {\n+    () => (fake)\n+}\n+\n+macro_rules! call_nested_expr {\n+    () => (nested_expr!())\n+}\n+\n+macro_rules! call_nested_expr_sum { //~ NOTE in expansion of\n+    () => { 1 + nested_expr!(); } //~ ERROR unresolved name\n+}\n+\n+fn main() {\n+    1 + call_nested_expr!(); //~ ERROR unresolved name\n+    call_nested_expr_sum!(); //~ NOTE expansion site\n+}"}, {"sha": "0c66bbfcf044a3da326d7441039543c8b3fd6c53", "filename": "src/test/compile-fail/macro-backtrace-println.rs", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/5a8f102bf6065901a6115c02dab6fa29b71b2db6/src%2Ftest%2Fcompile-fail%2Fmacro-backtrace-println.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a8f102bf6065901a6115c02dab6fa29b71b2db6/src%2Ftest%2Fcompile-fail%2Fmacro-backtrace-println.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmacro-backtrace-println.rs?ref=5a8f102bf6065901a6115c02dab6fa29b71b2db6", "patch": "@@ -0,0 +1,29 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// The `format_args!` syntax extension issues errors before code expansion\n+// has completed, but we still need a backtrace.\n+\n+// This test includes stripped-down versions of `print!` and `println!`,\n+// because we can't otherwise verify the lines of the backtrace.\n+\n+fn print(_args: std::fmt::Arguments) {}\n+\n+macro_rules! myprint { //~ NOTE in expansion of\n+    ($($arg:tt)*) => (print(format_args!($($arg)*)));\n+}\n+\n+macro_rules! myprintln { //~ NOTE in expansion of\n+    ($fmt:expr) => (myprint!(concat!($fmt, \"\\n\"))); //~ ERROR invalid reference to argument `0`\n+}\n+\n+fn main() {\n+    myprintln!(\"{}\"); //~ NOTE expansion site\n+}"}]}