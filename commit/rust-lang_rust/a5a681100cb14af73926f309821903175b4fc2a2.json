{"sha": "a5a681100cb14af73926f309821903175b4fc2a2", "node_id": "C_kwDOAAsO6NoAKGE1YTY4MTEwMGNiMTRhZjczOTI2ZjMwOTgyMTkwMzE3NWI0ZmMyYTI", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-07-20T16:58:22Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-07-20T16:58:22Z"}, "message": "Rollup merge of #99516 - m-ou-se:proc-macro-tracked-tracking-issue, r=Mark-Simulacrum\n\nUse new tracking issue for proc_macro::tracked_*.", "tree": {"sha": "9bb7d9917a083bdbea69ed55d5ee7e5c8c43e2a5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9bb7d9917a083bdbea69ed55d5ee7e5c8c43e2a5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a5a681100cb14af73926f309821903175b4fc2a2", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJi2DQvCRBK7hj4Ov3rIwAAquoIAKEzvWr8VLtnz+iZUcBNgRu6\n8I2okUlIE7kXyKILySLli6kbmqVrk2uEmKd7HZGdiQX2OoZiYrWf3lv5yJ9wEAfg\nwYlG/4ZNhsGnzCO4W4m7CvMsn2Zk5+tpp2Wfyl0WAcE8eNg1lwRTy0bOTxAg+gH6\n5MUiJ1yT9Tlo+FNANL3hWKiy/sNMC0swuj+LNZpDgMv5E+ulGAoajhqjZrr6yQbb\nnp8huYdgftnz9DM0SGSNuYBy8dfrCZsb/kc6fpPzg/P57IJ0VRdgf0TjCi9w1YLK\npyZKsGmJTvdi+c1IXVWCilfd04USQt+Cm388yf5zBmh7xP6exnY8SlCPhltJsx4=\n=fejO\n-----END PGP SIGNATURE-----\n", "payload": "tree 9bb7d9917a083bdbea69ed55d5ee7e5c8c43e2a5\nparent 2638f3a8d70decebca840c4679e3efcba0808e8a\nparent 12ff7a0d66779d70096670156e1703dff0747ea1\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1658336302 +0200\ncommitter GitHub <noreply@github.com> 1658336302 +0200\n\nRollup merge of #99516 - m-ou-se:proc-macro-tracked-tracking-issue, r=Mark-Simulacrum\n\nUse new tracking issue for proc_macro::tracked_*.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a5a681100cb14af73926f309821903175b4fc2a2", "html_url": "https://github.com/rust-lang/rust/commit/a5a681100cb14af73926f309821903175b4fc2a2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a5a681100cb14af73926f309821903175b4fc2a2/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2638f3a8d70decebca840c4679e3efcba0808e8a", "url": "https://api.github.com/repos/rust-lang/rust/commits/2638f3a8d70decebca840c4679e3efcba0808e8a", "html_url": "https://github.com/rust-lang/rust/commit/2638f3a8d70decebca840c4679e3efcba0808e8a"}, {"sha": "12ff7a0d66779d70096670156e1703dff0747ea1", "url": "https://api.github.com/repos/rust-lang/rust/commits/12ff7a0d66779d70096670156e1703dff0747ea1", "html_url": "https://github.com/rust-lang/rust/commit/12ff7a0d66779d70096670156e1703dff0747ea1"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "08b45ac11a14c2b06f427874f96210f755bcbccf", "filename": "library/proc_macro/src/lib.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a5a681100cb14af73926f309821903175b4fc2a2/library%2Fproc_macro%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a5a681100cb14af73926f309821903175b4fc2a2/library%2Fproc_macro%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fproc_macro%2Fsrc%2Flib.rs?ref=a5a681100cb14af73926f309821903175b4fc2a2", "patch": "@@ -1484,7 +1484,7 @@ impl fmt::Debug for Literal {\n }\n \n /// Tracked access to environment variables.\n-#[unstable(feature = \"proc_macro_tracked_env\", issue = \"74690\")]\n+#[unstable(feature = \"proc_macro_tracked_env\", issue = \"99515\")]\n pub mod tracked_env {\n     use std::env::{self, VarError};\n     use std::ffi::OsStr;\n@@ -1494,7 +1494,7 @@ pub mod tracked_env {\n     /// compilation, and will be able to rerun the build when the value of that variable changes.\n     /// Besides the dependency tracking this function should be equivalent to `env::var` from the\n     /// standard library, except that the argument must be UTF-8.\n-    #[unstable(feature = \"proc_macro_tracked_env\", issue = \"74690\")]\n+    #[unstable(feature = \"proc_macro_tracked_env\", issue = \"99515\")]\n     pub fn var<K: AsRef<OsStr> + AsRef<str>>(key: K) -> Result<String, VarError> {\n         let key: &str = key.as_ref();\n         let value = env::var(key);\n@@ -1504,13 +1504,13 @@ pub mod tracked_env {\n }\n \n /// Tracked access to additional files.\n-#[unstable(feature = \"track_path\", issue = \"73921\")]\n+#[unstable(feature = \"track_path\", issue = \"99515\")]\n pub mod tracked_path {\n \n     /// Track a file explicitly.\n     ///\n     /// Commonly used for tracking asset preprocessing.\n-    #[unstable(feature = \"track_path\", issue = \"73921\")]\n+    #[unstable(feature = \"track_path\", issue = \"99515\")]\n     pub fn path<P: AsRef<str>>(path: P) {\n         let path: &str = path.as_ref();\n         crate::bridge::client::FreeFunctions::track_path(path);"}]}