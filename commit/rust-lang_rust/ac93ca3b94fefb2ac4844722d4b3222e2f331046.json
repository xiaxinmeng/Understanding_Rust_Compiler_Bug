{"sha": "ac93ca3b94fefb2ac4844722d4b3222e2f331046", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFjOTNjYTNiOTRmZWZiMmFjNDg0NDcyMmQ0YjMyMjJlMmYzMzEwNDY=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-08-30T21:57:16Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-08-30T21:57:16Z"}, "message": "Turn to ifs into a match.", "tree": {"sha": "e9d88e3aae4c70e2d9c5a226de62e2baf18f1cef", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e9d88e3aae4c70e2d9c5a226de62e2baf18f1cef"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ac93ca3b94fefb2ac4844722d4b3222e2f331046", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ac93ca3b94fefb2ac4844722d4b3222e2f331046", "html_url": "https://github.com/rust-lang/rust/commit/ac93ca3b94fefb2ac4844722d4b3222e2f331046", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ac93ca3b94fefb2ac4844722d4b3222e2f331046/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "756ef3bff619e1d67620b1dfc80f1246cd6aac48", "url": "https://api.github.com/repos/rust-lang/rust/commits/756ef3bff619e1d67620b1dfc80f1246cd6aac48", "html_url": "https://github.com/rust-lang/rust/commit/756ef3bff619e1d67620b1dfc80f1246cd6aac48"}], "stats": {"total": 25, "additions": 9, "deletions": 16}, "files": [{"sha": "063c8e555677bd44fe59daba75be7aed1cb67bdd", "filename": "compiler/rustc_typeck/src/check/method/prelude2021.rs", "status": "modified", "additions": 9, "deletions": 16, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/ac93ca3b94fefb2ac4844722d4b3222e2f331046/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fprelude2021.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac93ca3b94fefb2ac4844722d4b3222e2f331046/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fprelude2021.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fprelude2021.rs?ref=ac93ca3b94fefb2ac4844722d4b3222e2f331046", "patch": "@@ -38,26 +38,19 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             return;\n         }\n \n-        // `try_into` was added to the prelude in Rust 2021.\n-        // `into_iter` wasn't, but `[T; N].into_iter()` doesn't resolve to\n-        // IntoIterator::into_iter before Rust 2021, which results in the same\n-        // problem.\n-        if !matches!(segment.ident.name, sym::try_into | sym::into_iter) {\n-            return;\n-        }\n-\n-        let prelude_or_array_lint = if segment.ident.name == sym::into_iter {\n-            // The `into_iter` problem is only a thing for arrays.\n-            if let Array(..) = self_ty.kind() {\n+        let prelude_or_array_lint = match segment.ident.name {\n+            // `try_into` was added to the prelude in Rust 2021.\n+            sym::try_into => RUST_2021_PRELUDE_COLLISIONS,\n+            // `into_iter` wasn't added to the prelude,\n+            // but `[T; N].into_iter()` doesn't resolve to IntoIterator::into_iter\n+            // before Rust 2021, which results in the same problem.\n+            // It is only a problem for arrays.\n+            sym::into_iter if let Array(..) = self_ty.kind() => {\n                 // In this case, it wasn't really a prelude addition that was the problem.\n                 // Instead, the problem is that the array-into_iter hack will no longer apply in Rust 2021.\n                 rustc_lint::ARRAY_INTO_ITER\n-            } else {\n-                // No problem in this case.\n-                return;\n             }\n-        } else {\n-            RUST_2021_PRELUDE_COLLISIONS\n+            _ => return,\n         };\n \n         // No need to lint if method came from std/core, as that will now be in the prelude"}]}