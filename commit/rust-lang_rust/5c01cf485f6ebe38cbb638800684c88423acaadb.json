{"sha": "5c01cf485f6ebe38cbb638800684c88423acaadb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVjMDFjZjQ4NWY2ZWJlMzhjYmI2Mzg4MDA2ODRjODg0MjNhY2FhZGI=", "commit": {"author": {"name": "mitaa", "email": "mitaa.ceb@gmail.com", "date": "2015-12-03T01:19:23Z"}, "committer": {"name": "mitaa", "email": "mitaa.ceb@gmail.com", "date": "2015-12-03T01:19:23Z"}, "message": "Initialize the ID map with known values", "tree": {"sha": "360a565577efd5ecf67d20527acae58ed830a317", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/360a565577efd5ecf67d20527acae58ed830a317"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5c01cf485f6ebe38cbb638800684c88423acaadb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5c01cf485f6ebe38cbb638800684c88423acaadb", "html_url": "https://github.com/rust-lang/rust/commit/5c01cf485f6ebe38cbb638800684c88423acaadb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5c01cf485f6ebe38cbb638800684c88423acaadb/comments", "author": {"login": "mitaa", "id": 6785936, "node_id": "MDQ6VXNlcjY3ODU5MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/6785936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitaa", "html_url": "https://github.com/mitaa", "followers_url": "https://api.github.com/users/mitaa/followers", "following_url": "https://api.github.com/users/mitaa/following{/other_user}", "gists_url": "https://api.github.com/users/mitaa/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitaa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitaa/subscriptions", "organizations_url": "https://api.github.com/users/mitaa/orgs", "repos_url": "https://api.github.com/users/mitaa/repos", "events_url": "https://api.github.com/users/mitaa/events{/privacy}", "received_events_url": "https://api.github.com/users/mitaa/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mitaa", "id": 6785936, "node_id": "MDQ6VXNlcjY3ODU5MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/6785936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitaa", "html_url": "https://github.com/mitaa", "followers_url": "https://api.github.com/users/mitaa/followers", "following_url": "https://api.github.com/users/mitaa/following{/other_user}", "gists_url": "https://api.github.com/users/mitaa/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitaa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitaa/subscriptions", "organizations_url": "https://api.github.com/users/mitaa/orgs", "repos_url": "https://api.github.com/users/mitaa/repos", "events_url": "https://api.github.com/users/mitaa/events{/privacy}", "received_events_url": "https://api.github.com/users/mitaa/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fa0269dd35eef80d7898de3843f9ed327c6f3a0c", "url": "https://api.github.com/repos/rust-lang/rust/commits/fa0269dd35eef80d7898de3843f9ed327c6f3a0c", "html_url": "https://github.com/rust-lang/rust/commit/fa0269dd35eef80d7898de3843f9ed327c6f3a0c"}], "stats": {"total": 24, "additions": 22, "deletions": 2}, "files": [{"sha": "3372c9d4807adbd0dc30759af298cdccb150b53b", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 22, "deletions": 2, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/5c01cf485f6ebe38cbb638800684c88423acaadb/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c01cf485f6ebe38cbb638800684c88423acaadb/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=5c01cf485f6ebe38cbb638800684c88423acaadb", "patch": "@@ -343,13 +343,33 @@ thread_local!(static CACHE_KEY: RefCell<Arc<Cache>> = Default::default());\n thread_local!(pub static CURRENT_LOCATION_KEY: RefCell<Vec<String>> =\n                     RefCell::new(Vec::new()));\n thread_local!(static USED_ID_MAP: RefCell<HashMap<String, usize>> =\n-                    RefCell::new(HashMap::new()));\n+                    RefCell::new(init_ids()));\n+\n+fn init_ids() -> HashMap<String, usize> {\n+    [\n+     \"main\",\n+     \"search\",\n+     \"help\",\n+     \"TOC\",\n+     \"render-detail\",\n+     \"associated-types\",\n+     \"associated-const\",\n+     \"required-methods\",\n+     \"provided-methods\",\n+     \"implementors\",\n+     \"implementors-list\",\n+     \"methods\",\n+     \"deref-methods\",\n+     \"implementations\",\n+     \"derived_implementations\"\n+     ].into_iter().map(|id| (String::from(*id), 1)).collect::<HashMap<_, _>>()\n+}\n \n /// This method resets the local table of used ID attributes. This is typically\n /// used at the beginning of rendering an entire HTML page to reset from the\n /// previous state (if any).\n pub fn reset_ids() {\n-    USED_ID_MAP.with(|s| s.borrow_mut().clear());\n+    USED_ID_MAP.with(|s| *s.borrow_mut() = init_ids());\n }\n \n pub fn with_unique_id<T, F: FnOnce(&str) -> T>(candidate: String, f: F) -> T {"}]}