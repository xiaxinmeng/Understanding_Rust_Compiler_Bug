{"sha": "3c2fd1a72d2e8cc80b354b4d2dd7931a7afe1b02", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNjMmZkMWE3MmQyZThjYzgwYjM1NGI0ZDJkZDc5MzFhN2FmZTFiMDI=", "commit": {"author": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2019-07-14T20:17:37Z"}, "committer": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2019-09-17T20:23:33Z"}, "message": "Print syntax contexts and marks when printing hygiene information", "tree": {"sha": "7dfa2a7fc81ea002b8c6fef446a1d8989fdb3c11", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7dfa2a7fc81ea002b8c6fef446a1d8989fdb3c11"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3c2fd1a72d2e8cc80b354b4d2dd7931a7afe1b02", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3c2fd1a72d2e8cc80b354b4d2dd7931a7afe1b02", "html_url": "https://github.com/rust-lang/rust/commit/3c2fd1a72d2e8cc80b354b4d2dd7931a7afe1b02", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3c2fd1a72d2e8cc80b354b4d2dd7931a7afe1b02/comments", "author": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b4ef99f4a61aa14f860c37eecbd04791005effc2", "url": "https://api.github.com/repos/rust-lang/rust/commits/b4ef99f4a61aa14f860c37eecbd04791005effc2", "html_url": "https://github.com/rust-lang/rust/commit/b4ef99f4a61aa14f860c37eecbd04791005effc2"}], "stats": {"total": 53, "additions": 51, "deletions": 2}, "files": [{"sha": "fa9504e22019ebfe585ca78846509f892675f7f9", "filename": "src/librustc_driver/pretty.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/3c2fd1a72d2e8cc80b354b4d2dd7931a7afe1b02/src%2Flibrustc_driver%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c2fd1a72d2e8cc80b354b4d2dd7931a7afe1b02/src%2Flibrustc_driver%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Fpretty.rs?ref=3c2fd1a72d2e8cc80b354b4d2dd7931a7afe1b02", "patch": "@@ -326,6 +326,7 @@ impl<'hir> pprust::PpAnn for IdentifiedAnnotation<'hir> {\n     }\n     fn post(&self, s: &mut pprust::State<'_>, node: pprust::AnnNode<'_>) {\n         match node {\n+            pprust::AnnNode::Crate(_) |\n             pprust::AnnNode::Ident(_) |\n             pprust::AnnNode::Name(_) => {},\n \n@@ -431,14 +432,18 @@ impl<'a> pprust::PpAnn for HygieneAnnotation<'a> {\n         match node {\n             pprust::AnnNode::Ident(&ast::Ident { name, span }) => {\n                 s.s.space();\n-                // FIXME #16420: this doesn't display the connections\n-                // between syntax contexts\n                 s.synth_comment(format!(\"{}{:?}\", name.as_u32(), span.ctxt()))\n             }\n             pprust::AnnNode::Name(&name) => {\n                 s.s.space();\n                 s.synth_comment(name.as_u32().to_string())\n             }\n+            pprust::AnnNode::Crate(_) => {\n+                s.s.hardbreak();\n+                let verbose = self.sess.verbose();\n+                s.synth_comment(syntax_pos::hygiene::debug_hygiene_data(verbose));\n+                s.s.hardbreak_if_not_bol();\n+            }\n             _ => {}\n         }\n     }"}, {"sha": "bf36c0d2f56581286703234e657585446f85175f", "filename": "src/libsyntax/print/pprust.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3c2fd1a72d2e8cc80b354b4d2dd7931a7afe1b02/src%2Flibsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c2fd1a72d2e8cc80b354b4d2dd7931a7afe1b02/src%2Flibsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpprust.rs?ref=3c2fd1a72d2e8cc80b354b4d2dd7931a7afe1b02", "patch": "@@ -35,6 +35,7 @@ pub enum AnnNode<'a> {\n     SubItem(ast::NodeId),\n     Expr(&'a ast::Expr),\n     Pat(&'a ast::Pat),\n+    Crate(&'a ast::Crate),\n }\n \n pub trait PpAnn {\n@@ -140,6 +141,7 @@ pub fn print_crate<'a>(cm: &'a SourceMap,\n \n     s.print_mod(&krate.module, &krate.attrs);\n     s.print_remaining_comments();\n+    s.ann.post(&mut s, AnnNode::Crate(krate));\n     s.s.eof()\n }\n "}, {"sha": "8142d44b3f609696d06a5a05c0ac467b2ad158a7", "filename": "src/libsyntax_pos/hygiene.rs", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/3c2fd1a72d2e8cc80b354b4d2dd7931a7afe1b02/src%2Flibsyntax_pos%2Fhygiene.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c2fd1a72d2e8cc80b354b4d2dd7931a7afe1b02/src%2Flibsyntax_pos%2Fhygiene.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_pos%2Fhygiene.rs?ref=3c2fd1a72d2e8cc80b354b4d2dd7931a7afe1b02", "patch": "@@ -343,6 +343,38 @@ pub fn update_dollar_crate_names(mut get_name: impl FnMut(SyntaxContext) -> Symb\n     }))\n }\n \n+pub fn debug_hygiene_data(verbose: bool) -> String {\n+    HygieneData::with(|data| {\n+        if verbose {\n+            format!(\"{:#?}\", data)\n+        } else {\n+            let mut s = String::from(\"\");\n+            s.push_str(\"Expansions:\");\n+            data.expn_data.iter().enumerate().for_each(|(id, expn_info)| {\n+                let expn_info = expn_info.as_ref().expect(\"no expansion data for an expansion ID\");\n+                s.push_str(&format!(\n+                    \"\\n{}: parent: {:?}, call_site_ctxt: {:?}, kind: {:?}\",\n+                    id,\n+                    expn_info.parent,\n+                    expn_info.call_site.ctxt(),\n+                    expn_info.kind,\n+                ));\n+            });\n+            s.push_str(\"\\n\\nSyntaxContexts:\");\n+            data.syntax_context_data.iter().enumerate().for_each(|(id, ctxt)| {\n+                s.push_str(&format!(\n+                    \"\\n#{}: parent: {:?}, outer_mark: ({:?}, {:?})\",\n+                    id,\n+                    ctxt.parent,\n+                    ctxt.outer_expn,\n+                    ctxt.outer_transparency,\n+                ));\n+            });\n+            s\n+        }\n+    })\n+}\n+\n impl SyntaxContext {\n     #[inline]\n     pub const fn root() -> Self {"}, {"sha": "6971873ba601e814670599a3c1a234b798d6e211", "filename": "src/test/ui/hygiene/unpretty-debug.stdout", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/3c2fd1a72d2e8cc80b354b4d2dd7931a7afe1b02/src%2Ftest%2Fui%2Fhygiene%2Funpretty-debug.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3c2fd1a72d2e8cc80b354b4d2dd7931a7afe1b02/src%2Ftest%2Fui%2Fhygiene%2Funpretty-debug.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhygiene%2Funpretty-debug.stdout?ref=3c2fd1a72d2e8cc80b354b4d2dd7931a7afe1b02", "patch": "@@ -13,3 +13,13 @@ macro_rules! foo /* 0#0 */ { ($ x : ident) => { y + $ x } }\n fn bar /* 0#0 */() { let x /* 0#0 */ = 1; y /* 0#1 */ + x /* 0#0 */ }\n \n fn y /* 0#0 */() { }\n+\n+/*\n+Expansions:\n+0: parent: ExpnId(0), call_site_ctxt: #0, kind: Root\n+1: parent: ExpnId(0), call_site_ctxt: #0, kind: Macro(Bang, foo)\n+\n+SyntaxContexts:\n+#0: parent: #0, outer_mark: (ExpnId(0), Opaque)\n+#1: parent: #0, outer_mark: (ExpnId(1), SemiTransparent)\n+*/"}]}