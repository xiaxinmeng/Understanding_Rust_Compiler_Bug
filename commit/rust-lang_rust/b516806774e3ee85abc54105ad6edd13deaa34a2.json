{"sha": "b516806774e3ee85abc54105ad6edd13deaa34a2", "node_id": "C_kwDOAAsO6NoAKGI1MTY4MDY3NzRlM2VlODVhYmM1NDEwNWFkNmVkZDEzZGVhYTM0YTI", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-06-17T10:21:46Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-06-17T10:21:46Z"}, "message": "Rollup merge of #95392 - Xuanwo:stablize_try_reserve_2, r=dtolnay\n\nstd: Stabilize feature try_reserve_2\n\nThis PR intends to stabilize feature `try_reserve_2`, closes https://github.com/rust-lang/rust/issues/91789\n\nThis PR will also replace the previous PR: https://github.com/rust-lang/rust/pull/95139", "tree": {"sha": "7a34cfbe14b349108fc6f3fdeb0cd728ead5af0b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7a34cfbe14b349108fc6f3fdeb0cd728ead5af0b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b516806774e3ee85abc54105ad6edd13deaa34a2", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJirFW7CRBK7hj4Ov3rIwAA/BsIAAMBleLINIlfzR/yWQUzrzQv\nFk4VULse/HmK5kf0m7G4oG1R6fixaKaEgRPbi5Gt1zcCOSGgvJEiQtpYZ6ifyVVs\nF24ddzd9TLUB3E3+C2Tz+Mh4jUSiJMiasBBUolfsZGGaoeCDk4Qw/egDfyMP591R\nY5b2XhI4erOiBV5LYva7YbTbpdpTluOh0xJ4LcUm9ALRD8xOkRhQ7Soky3MFT2HW\nQQtniobe6o3IsL4psWvjTQINPjUTRm47lWs4MwxnAjghN1h1E+N/19FzUpZAUMU+\n1p5zOTZLVuZQRXTFjlLqMTLJfQM5lk/4LPWzaXx5/se3oSZJHbjYYIyMg+UIasg=\n=op56\n-----END PGP SIGNATURE-----\n", "payload": "tree 7a34cfbe14b349108fc6f3fdeb0cd728ead5af0b\nparent ecdd374e6123d79b89c3ecea618d827c931b81cd\nparent 324286f1019bcf9abef19543d4bb8749d9f91ed9\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1655461306 +0200\ncommitter GitHub <noreply@github.com> 1655461306 +0200\n\nRollup merge of #95392 - Xuanwo:stablize_try_reserve_2, r=dtolnay\n\nstd: Stabilize feature try_reserve_2\n\nThis PR intends to stabilize feature `try_reserve_2`, closes https://github.com/rust-lang/rust/issues/91789\n\nThis PR will also replace the previous PR: https://github.com/rust-lang/rust/pull/95139\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b516806774e3ee85abc54105ad6edd13deaa34a2", "html_url": "https://github.com/rust-lang/rust/commit/b516806774e3ee85abc54105ad6edd13deaa34a2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b516806774e3ee85abc54105ad6edd13deaa34a2/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ecdd374e6123d79b89c3ecea618d827c931b81cd", "url": "https://api.github.com/repos/rust-lang/rust/commits/ecdd374e6123d79b89c3ecea618d827c931b81cd", "html_url": "https://github.com/rust-lang/rust/commit/ecdd374e6123d79b89c3ecea618d827c931b81cd"}, {"sha": "324286f1019bcf9abef19543d4bb8749d9f91ed9", "url": "https://api.github.com/repos/rust-lang/rust/commits/324286f1019bcf9abef19543d4bb8749d9f91ed9", "html_url": "https://github.com/rust-lang/rust/commit/324286f1019bcf9abef19543d4bb8749d9f91ed9"}], "stats": {"total": 16, "additions": 6, "deletions": 10}, "files": [{"sha": "3706300dcfeb717e53897d01fca200d0b9b8eb62", "filename": "library/alloc/src/collections/binary_heap.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b516806774e3ee85abc54105ad6edd13deaa34a2/library%2Falloc%2Fsrc%2Fcollections%2Fbinary_heap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b516806774e3ee85abc54105ad6edd13deaa34a2/library%2Falloc%2Fsrc%2Fcollections%2Fbinary_heap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fbinary_heap.rs?ref=b516806774e3ee85abc54105ad6edd13deaa34a2", "patch": "@@ -978,7 +978,6 @@ impl<T> BinaryHeap<T> {\n     /// # Examples\n     ///\n     /// ```\n-    /// #![feature(try_reserve_2)]\n     /// use std::collections::BinaryHeap;\n     /// use std::collections::TryReserveError;\n     ///\n@@ -995,7 +994,7 @@ impl<T> BinaryHeap<T> {\n     /// }\n     /// # find_max_slow(&[1, 2, 3]).expect(\"why is the test harness OOMing on 12 bytes?\");\n     /// ```\n-    #[unstable(feature = \"try_reserve_2\", issue = \"91789\")]\n+    #[stable(feature = \"try_reserve_2\", since = \"1.63.0\")]\n     pub fn try_reserve_exact(&mut self, additional: usize) -> Result<(), TryReserveError> {\n         self.data.try_reserve_exact(additional)\n     }\n@@ -1014,7 +1013,6 @@ impl<T> BinaryHeap<T> {\n     /// # Examples\n     ///\n     /// ```\n-    /// #![feature(try_reserve_2)]\n     /// use std::collections::BinaryHeap;\n     /// use std::collections::TryReserveError;\n     ///\n@@ -1031,7 +1029,7 @@ impl<T> BinaryHeap<T> {\n     /// }\n     /// # find_max_slow(&[1, 2, 3]).expect(\"why is the test harness OOMing on 12 bytes?\");\n     /// ```\n-    #[unstable(feature = \"try_reserve_2\", issue = \"91789\")]\n+    #[stable(feature = \"try_reserve_2\", since = \"1.63.0\")]\n     pub fn try_reserve(&mut self, additional: usize) -> Result<(), TryReserveError> {\n         self.data.try_reserve(additional)\n     }"}, {"sha": "95d274c3c91e7afed080cc11fee4c1d1aaa63baf", "filename": "library/std/src/ffi/os_str.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b516806774e3ee85abc54105ad6edd13deaa34a2/library%2Fstd%2Fsrc%2Fffi%2Fos_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b516806774e3ee85abc54105ad6edd13deaa34a2/library%2Fstd%2Fsrc%2Fffi%2Fos_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fffi%2Fos_str.rs?ref=b516806774e3ee85abc54105ad6edd13deaa34a2", "patch": "@@ -300,7 +300,6 @@ impl OsString {\n     /// # Examples\n     ///\n     /// ```\n-    /// #![feature(try_reserve_2)]\n     /// use std::ffi::{OsStr, OsString};\n     /// use std::collections::TryReserveError;\n     ///\n@@ -317,7 +316,7 @@ impl OsString {\n     /// }\n     /// # process_data(\"123\").expect(\"why is the test harness OOMing on 3 bytes?\");\n     /// ```\n-    #[unstable(feature = \"try_reserve_2\", issue = \"91789\")]\n+    #[stable(feature = \"try_reserve_2\", since = \"1.63.0\")]\n     #[inline]\n     pub fn try_reserve(&mut self, additional: usize) -> Result<(), TryReserveError> {\n         self.inner.try_reserve(additional)\n@@ -372,7 +371,6 @@ impl OsString {\n     /// # Examples\n     ///\n     /// ```\n-    /// #![feature(try_reserve_2)]\n     /// use std::ffi::{OsStr, OsString};\n     /// use std::collections::TryReserveError;\n     ///\n@@ -389,7 +387,7 @@ impl OsString {\n     /// }\n     /// # process_data(\"123\").expect(\"why is the test harness OOMing on 3 bytes?\");\n     /// ```\n-    #[unstable(feature = \"try_reserve_2\", issue = \"91789\")]\n+    #[stable(feature = \"try_reserve_2\", since = \"1.63.0\")]\n     #[inline]\n     pub fn try_reserve_exact(&mut self, additional: usize) -> Result<(), TryReserveError> {\n         self.inner.try_reserve_exact(additional)"}, {"sha": "6bbc8f55ace35552c4d9b6c36776190613bcc5ed", "filename": "library/std/src/path.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b516806774e3ee85abc54105ad6edd13deaa34a2/library%2Fstd%2Fsrc%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b516806774e3ee85abc54105ad6edd13deaa34a2/library%2Fstd%2Fsrc%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fpath.rs?ref=b516806774e3ee85abc54105ad6edd13deaa34a2", "patch": "@@ -1520,7 +1520,7 @@ impl PathBuf {\n     /// Invokes [`try_reserve`] on the underlying instance of [`OsString`].\n     ///\n     /// [`try_reserve`]: OsString::try_reserve\n-    #[unstable(feature = \"try_reserve_2\", issue = \"91789\")]\n+    #[stable(feature = \"try_reserve_2\", since = \"1.63.0\")]\n     #[inline]\n     pub fn try_reserve(&mut self, additional: usize) -> Result<(), TryReserveError> {\n         self.inner.try_reserve(additional)\n@@ -1538,7 +1538,7 @@ impl PathBuf {\n     /// Invokes [`try_reserve_exact`] on the underlying instance of [`OsString`].\n     ///\n     /// [`try_reserve_exact`]: OsString::try_reserve_exact\n-    #[unstable(feature = \"try_reserve_2\", issue = \"91789\")]\n+    #[stable(feature = \"try_reserve_2\", since = \"1.63.0\")]\n     #[inline]\n     pub fn try_reserve_exact(&mut self, additional: usize) -> Result<(), TryReserveError> {\n         self.inner.try_reserve_exact(additional)"}]}