{"sha": "72a3dee16f6c854fc61d475581b4730189984fa5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcyYTNkZWUxNmY2Yzg1NGZjNjFkNDc1NTgxYjQ3MzAxODk5ODRmYTU=", "commit": {"author": {"name": "CoffeeBlend", "email": "jonasboettiger@icloud.com", "date": "2021-01-01T21:56:54Z"}, "committer": {"name": "CoffeeBlend", "email": "jonasboettiger@icloud.com", "date": "2021-01-01T21:56:54Z"}, "message": "Format code", "tree": {"sha": "fb2eda1deba21f12deb086c6b2d6f36f14cd3e22", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fb2eda1deba21f12deb086c6b2d6f36f14cd3e22"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/72a3dee16f6c854fc61d475581b4730189984fa5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEVuz3PwcqDyifNyYbcE4BSbAZSzwFAl/vmqYACgkQcE4BSbAZ\nSzz3Iw/7BxdiFcUE/Xsa6oWc2LZD3YpKd9oOssqHjWDk9kPPjXZNVHwU5ByA6Gdn\n8cG3O61cnRYQAxgKWbfJzwzv11pAcdykUGkY5Inob7vgcUeeljnew38HEP0fY6ca\nsuyyE1cTOARApIjVikWG4vVlSCCFXQ2jivn4B5B1/BrWoa2K/rLCjVtGYyXs9rgp\nzIXpfNVnPRaf1eJuYhduk4CgAuDZH0tybKYULzuwZjE5Gzq08i6mgu5aKW9QWZSm\ncmJqRNOw6GDEapJutzu5JlK6/NTZP5HM9dicjMGy9P6/Y4F2Hz+VZg/4C6++0hzr\nCXcmYbbnP+kLTuWjgg/dLzFNQU1umDolO3B9i50e/NXzw1Y1hsTVjAaxcAags4/9\nR3+psdAncVHVO2nF++JCu0qQuHimBaSbFw0sAG4KTDSrahmpi9wsat1bh63sZTU6\nD/YwwM/6Ort28bdEDRuRRf2SbWupnQjvOpSd03Hxy4PVDan76Rr8JxdDZr5iszBR\n2GXxtTr+2BFBdWxmk1n3z71ZQjEaU0EZ22dTyobsGAZlY0boVb2QafsuGY12Da0j\nhLusdvNhAWXTa9TaqN+9HKCSfCupZL7JvGeUOx7xU0jwIbWh2uiRh6cUyzm/ssjV\nr1lYx4ahi+Fj+3zU4qQB12ixjIrV0clj8FACsn7gJNIVEEh+fYE=\n=KgXU\n-----END PGP SIGNATURE-----", "payload": "tree fb2eda1deba21f12deb086c6b2d6f36f14cd3e22\nparent 0ff1e6c697f711aa25b8fa2c0cc43bf2ad84ff52\nauthor CoffeeBlend <jonasboettiger@icloud.com> 1609538214 +0100\ncommitter CoffeeBlend <jonasboettiger@icloud.com> 1609538214 +0100\n\nFormat code\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/72a3dee16f6c854fc61d475581b4730189984fa5", "html_url": "https://github.com/rust-lang/rust/commit/72a3dee16f6c854fc61d475581b4730189984fa5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/72a3dee16f6c854fc61d475581b4730189984fa5/comments", "author": {"login": "joboet", "id": 25721079, "node_id": "MDQ6VXNlcjI1NzIxMDc5", "avatar_url": "https://avatars.githubusercontent.com/u/25721079?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joboet", "html_url": "https://github.com/joboet", "followers_url": "https://api.github.com/users/joboet/followers", "following_url": "https://api.github.com/users/joboet/following{/other_user}", "gists_url": "https://api.github.com/users/joboet/gists{/gist_id}", "starred_url": "https://api.github.com/users/joboet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joboet/subscriptions", "organizations_url": "https://api.github.com/users/joboet/orgs", "repos_url": "https://api.github.com/users/joboet/repos", "events_url": "https://api.github.com/users/joboet/events{/privacy}", "received_events_url": "https://api.github.com/users/joboet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "joboet", "id": 25721079, "node_id": "MDQ6VXNlcjI1NzIxMDc5", "avatar_url": "https://avatars.githubusercontent.com/u/25721079?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joboet", "html_url": "https://github.com/joboet", "followers_url": "https://api.github.com/users/joboet/followers", "following_url": "https://api.github.com/users/joboet/following{/other_user}", "gists_url": "https://api.github.com/users/joboet/gists{/gist_id}", "starred_url": "https://api.github.com/users/joboet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joboet/subscriptions", "organizations_url": "https://api.github.com/users/joboet/orgs", "repos_url": "https://api.github.com/users/joboet/repos", "events_url": "https://api.github.com/users/joboet/events{/privacy}", "received_events_url": "https://api.github.com/users/joboet/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0ff1e6c697f711aa25b8fa2c0cc43bf2ad84ff52", "url": "https://api.github.com/repos/rust-lang/rust/commits/0ff1e6c697f711aa25b8fa2c0cc43bf2ad84ff52", "html_url": "https://github.com/rust-lang/rust/commit/0ff1e6c697f711aa25b8fa2c0cc43bf2ad84ff52"}], "stats": {"total": 24, "additions": 10, "deletions": 14}, "files": [{"sha": "a39f93466377ad5e5ddcb026e85aceb3deb50a4c", "filename": "library/core/src/mem/maybe_uninit.rs", "status": "modified", "additions": 8, "deletions": 10, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/72a3dee16f6c854fc61d475581b4730189984fa5/library%2Fcore%2Fsrc%2Fmem%2Fmaybe_uninit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72a3dee16f6c854fc61d475581b4730189984fa5/library%2Fcore%2Fsrc%2Fmem%2Fmaybe_uninit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fmem%2Fmaybe_uninit.rs?ref=72a3dee16f6c854fc61d475581b4730189984fa5", "patch": "@@ -804,30 +804,30 @@ impl<T> MaybeUninit<T> {\n         }\n     }\n \n-    /// Extracts the values from an array of `MaybeUninit` containers. \n-    /// \n+    /// Extracts the values from an array of `MaybeUninit` containers.\n+    ///\n     /// # Safety\n-    /// \n+    ///\n     /// It is up to the caller to guarantee that all elements of the array are\n-    /// in an initialized state. \n+    /// in an initialized state.\n     ///\n     /// # Examples\n     ///\n     /// ```\n     /// #![feature(maybe_uninit_uninit_array)]\n     /// #![feature(maybe_uninit_array_assume_init)]\n     /// use std::mem::MaybeUninit;\n-    /// \n+    ///\n     /// let mut array: [MaybeUninit<i32>; 3] = MaybeUninit::uninit_array();\n     /// array[0] = MaybeUninit::new(0);\n     /// array[1] = MaybeUninit::new(1);\n     /// array[2] = MaybeUninit::new(2);\n-    /// \n+    ///\n     /// // SAFETY: Now safe as we initialised all elements\n     /// let array = unsafe {\n     ///     MaybeUninit::array_assume_init(array)\n     /// };\n-    /// \n+    ///\n     /// assert_eq!(array, [0, 1, 2]);\n     /// ```\n     #[unstable(feature = \"maybe_uninit_array_assume_init\", issue = \"none\")]\n@@ -846,9 +846,7 @@ impl<T> MaybeUninit<T> {\n         unsafe {\n             intrinsics::assert_inhabited::<T>();\n \n-            let array = ArrayInit {\n-                maybe_uninit: ManuallyDrop::new(array),\n-            };\n+            let array = ArrayInit { maybe_uninit: ManuallyDrop::new(array) };\n             ManuallyDrop::into_inner(array.init)\n         }\n     }"}, {"sha": "2279a16429f9875c7d4032516c2ff9d755e38078", "filename": "library/core/tests/mem.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/72a3dee16f6c854fc61d475581b4730189984fa5/library%2Fcore%2Ftests%2Fmem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72a3dee16f6c854fc61d475581b4730189984fa5/library%2Fcore%2Ftests%2Fmem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Fmem.rs?ref=72a3dee16f6c854fc61d475581b4730189984fa5", "patch": "@@ -149,10 +149,8 @@ fn uninit_array_assume_init() {\n     array[3].write(1);\n     array[4].write(5);\n \n-    let array = unsafe {\n-        MaybeUninit::array_assume_init(array)\n-    };\n-    \n+    let array = unsafe { MaybeUninit::array_assume_init(array) };\n+\n     assert_eq!(array, [3, 1, 4, 1, 5]);\n }\n "}]}