{"sha": "3295afa6e2dd9d3b50bce0342199a7d448d480aa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMyOTVhZmE2ZTJkZDlkM2I1MGJjZTAzNDIxOTlhN2Q0NDhkNDgwYWE=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2016-11-21T05:11:36Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2016-11-22T22:53:27Z"}, "message": "save-analysis: fix ICE on partially resolved path\n\nOccurs when we produce save-analysis before type checking is complete (due to errors).", "tree": {"sha": "4f335ef004baa40e6193ea523cba5f506427b313", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4f335ef004baa40e6193ea523cba5f506427b313"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3295afa6e2dd9d3b50bce0342199a7d448d480aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3295afa6e2dd9d3b50bce0342199a7d448d480aa", "html_url": "https://github.com/rust-lang/rust/commit/3295afa6e2dd9d3b50bce0342199a7d448d480aa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3295afa6e2dd9d3b50bce0342199a7d448d480aa/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4bc929013396eede8a22a3e7932fb3a63d2a11da", "url": "https://api.github.com/repos/rust-lang/rust/commits/4bc929013396eede8a22a3e7932fb3a63d2a11da", "html_url": "https://github.com/rust-lang/rust/commit/4bc929013396eede8a22a3e7932fb3a63d2a11da"}], "stats": {"total": 13, "additions": 9, "deletions": 4}, "files": [{"sha": "ce04a7c897a18fcac20d556d97a815765abde2c8", "filename": "src/librustc/hir/def.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/3295afa6e2dd9d3b50bce0342199a7d448d480aa/src%2Flibrustc%2Fhir%2Fdef.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3295afa6e2dd9d3b50bce0342199a7d448d480aa/src%2Flibrustc%2Fhir%2Fdef.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fdef.rs?ref=3295afa6e2dd9d3b50bce0342199a7d448d480aa", "patch": "@@ -85,10 +85,15 @@ impl PathResolution {\n \n     /// Get the definition, if fully resolved, otherwise panic.\n     pub fn full_def(&self) -> Def {\n-        if self.depth != 0 {\n-            bug!(\"path not fully resolved: {:?}\", self);\n+        self.maybe_full_def().unwrap_or_else(|| bug!(\"path not fully resolved: {:?}\", self))\n+    }\n+\n+    pub fn maybe_full_def(&self) -> Option<Def> {\n+        if self.depth == 0 {\n+            Some(self.base_def)\n+        } else {\n+            None\n         }\n-        self.base_def\n     }\n \n     pub fn kind_name(&self) -> &'static str {"}, {"sha": "4c59f5e8a83cbc22a166e0d39134b3a4f95730ad", "filename": "src/librustc_save_analysis/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3295afa6e2dd9d3b50bce0342199a7d448d480aa/src%2Flibrustc_save_analysis%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3295afa6e2dd9d3b50bce0342199a7d448d480aa/src%2Flibrustc_save_analysis%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_save_analysis%2Flib.rs?ref=3295afa6e2dd9d3b50bce0342199a7d448d480aa", "patch": "@@ -497,7 +497,7 @@ impl<'l, 'tcx: 'l> SaveContext<'l, 'tcx> {\n     }\n \n     pub fn get_path_data(&self, id: NodeId, path: &ast::Path) -> Option<Data> {\n-        let def = self.tcx.expect_def(id);\n+        let def = option_try!(self.tcx.expect_resolution(id).maybe_full_def());\n         let sub_span = self.span_utils.span_for_last_ident(path.span);\n         filter!(self.span_utils, sub_span, path.span, None);\n         match def {"}]}