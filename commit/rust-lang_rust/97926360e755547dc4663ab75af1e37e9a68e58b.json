{"sha": "97926360e755547dc4663ab75af1e37e9a68e58b", "node_id": "C_kwDOAAsO6NoAKDk3OTI2MzYwZTc1NTU0N2RjNDY2M2FiNzVhZjFlMzdlOWE2OGU1OGI", "commit": {"author": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2023-04-07T19:11:19Z"}, "committer": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2023-05-07T11:38:47Z"}, "message": "Fix num reserved clauses for landing pad", "tree": {"sha": "2899076ff62cee8cab97ba875db8aaeaf3cd5f90", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2899076ff62cee8cab97ba875db8aaeaf3cd5f90"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/97926360e755547dc4663ab75af1e37e9a68e58b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/97926360e755547dc4663ab75af1e37e9a68e58b", "html_url": "https://github.com/rust-lang/rust/commit/97926360e755547dc4663ab75af1e37e9a68e58b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/97926360e755547dc4663ab75af1e37e9a68e58b/comments", "author": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ecd04fd1b553c06e3e48c0f8485de46758e51636", "url": "https://api.github.com/repos/rust-lang/rust/commits/ecd04fd1b553c06e3e48c0f8485de46758e51636", "html_url": "https://github.com/rust-lang/rust/commit/ecd04fd1b553c06e3e48c0f8485de46758e51636"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "4d0bcd53d15624b3a2f7b91281d33f8c19b8a56c", "filename": "compiler/rustc_codegen_llvm/src/builder.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/97926360e755547dc4663ab75af1e37e9a68e58b/compiler%2Frustc_codegen_llvm%2Fsrc%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97926360e755547dc4663ab75af1e37e9a68e58b/compiler%2Frustc_codegen_llvm%2Fsrc%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fbuilder.rs?ref=97926360e755547dc4663ab75af1e37e9a68e58b", "patch": "@@ -985,7 +985,7 @@ impl<'a, 'll, 'tcx> BuilderMethods<'a, 'tcx> for Builder<'a, 'll, 'tcx> {\n \n     fn cleanup_landing_pad(&mut self, pers_fn: &'ll Value) -> (&'ll Value, &'ll Value) {\n         let ty = self.type_struct(&[self.type_i8p(), self.type_i32()], false);\n-        let landing_pad = self.landing_pad(ty, pers_fn, 1 /* FIXME should this be 0? */);\n+        let landing_pad = self.landing_pad(ty, pers_fn, 0);\n         unsafe {\n             llvm::LLVMSetCleanup(landing_pad, llvm::True);\n         }\n@@ -994,7 +994,7 @@ impl<'a, 'll, 'tcx> BuilderMethods<'a, 'tcx> for Builder<'a, 'll, 'tcx> {\n \n     fn filter_landing_pad(&mut self, pers_fn: &'ll Value) -> (&'ll Value, &'ll Value) {\n         let ty = self.type_struct(&[self.type_i8p(), self.type_i32()], false);\n-        let landing_pad = self.landing_pad(ty, pers_fn, 1 /* FIXME should this be 0? */);\n+        let landing_pad = self.landing_pad(ty, pers_fn, 1);\n         self.add_clause(landing_pad, self.const_array(self.type_i8p(), &[]));\n         (self.extract_value(landing_pad, 0), self.extract_value(landing_pad, 1))\n     }"}]}