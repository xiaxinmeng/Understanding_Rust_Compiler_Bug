{"sha": "9536d04a2d1af8163a0ec772ec747a0e98a8e4db", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk1MzZkMDRhMmQxYWY4MTYzYTBlYzc3MmVjNzQ3YTBlOThhOGU0ZGI=", "commit": {"author": {"name": "David Wood", "email": "david@davidtw.co", "date": "2018-11-29T21:00:09Z"}, "committer": {"name": "David Wood", "email": "david@davidtw.co", "date": "2018-12-13T08:41:46Z"}, "message": "Stabilize `linker-flavor` flag.\n\nThis commit moves the linker-flavor flag from a debugging option to a\ncodegen option, thus stabilizing it. There are no feature flags\nassociated with this flag.", "tree": {"sha": "9957482742268aaa4305a7b7e31572c3327a98b6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9957482742268aaa4305a7b7e31572c3327a98b6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9536d04a2d1af8163a0ec772ec747a0e98a8e4db", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEWwgxPGhT5b/6kagXAXYLT59T8VQFAlwSG0oACgkQAXYLT59T\n8VTlwg/8Cjk/OOW9lC3nklcyYIlrc1b3LQm6toVT0s65xbam5imbJjF7uWy+rFku\nuxV0BjsB68Dy/R3hrw1SDyLIcU1AAmZAi1ieG0cT9t9QDHKy2wqged/SKyEgFYf+\nQCV0ie6d/xmDhg5DEBdCQqnm3Sf4SLc62HpgJ2wkdvdiyYfDOdHxQzc4r6zYpK7C\n2ZhKykL9l1zet4VHXzomK/wFv/xqrkny8BJ+3FjmLKFpM2yiu6FT4XRLazwrklTH\nfldDOQvth6odzx+l4z+zQ78IwxpeZDfv+FJ3OCEIrYZ7DI/VVfsdj44reX78n7Zt\nbUE5MHpOMmzOHVwEpfxTIlRF8GGTdGL9SJ/5cv54WNIfcD54bhVwkdLYwbL9ILnB\nYO6AHZKIF+uIzRzgMJ9CkNXM88DHM74qnv6wqj2DtNHDsS+vuiJ8VSYWk69ONE9D\navhNBYEkoRFaSgRMSET1kWJASw76WRwGWMTETFPEslPNG8WQGO0R1l3zSA70QXmS\nu5RNowQ+FOT/ZTpjSx19CzBdEUS7iEBys47S8+0ClJYFhAw4wgzrbk223m7vJViR\npEUghZWE57h2ggNUUTvl/IRPU59+yAl45cyn4wM9BYE+uctpcKUkqEgveV7I/PE3\nNsxmv8rpyeRaXO6OpdEB5TC1BDpHk6bxqybAkRn5b+vVs0D6O7Y=\n=ghWd\n-----END PGP SIGNATURE-----", "payload": "tree 9957482742268aaa4305a7b7e31572c3327a98b6\nparent d8046ed51a366315ec467af144a258e0f76c30dc\nauthor David Wood <david@davidtw.co> 1543525209 +0100\ncommitter David Wood <david@davidtw.co> 1544690506 +0100\n\nStabilize `linker-flavor` flag.\n\nThis commit moves the linker-flavor flag from a debugging option to a\ncodegen option, thus stabilizing it. There are no feature flags\nassociated with this flag.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9536d04a2d1af8163a0ec772ec747a0e98a8e4db", "html_url": "https://github.com/rust-lang/rust/commit/9536d04a2d1af8163a0ec772ec747a0e98a8e4db", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9536d04a2d1af8163a0ec772ec747a0e98a8e4db/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d8046ed51a366315ec467af144a258e0f76c30dc", "url": "https://api.github.com/repos/rust-lang/rust/commits/d8046ed51a366315ec467af144a258e0f76c30dc", "html_url": "https://github.com/rust-lang/rust/commit/d8046ed51a366315ec467af144a258e0f76c30dc"}], "stats": {"total": 110, "additions": 12, "deletions": 98}, "files": [{"sha": "94f21042c8fdd86ffcd30fe8e8d7f8e6205a07d4", "filename": "src/doc/rustc/src/codegen-options/index.md", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/9536d04a2d1af8163a0ec772ec747a0e98a8e4db/src%2Fdoc%2Frustc%2Fsrc%2Fcodegen-options%2Findex.md", "raw_url": "https://github.com/rust-lang/rust/raw/9536d04a2d1af8163a0ec772ec747a0e98a8e4db/src%2Fdoc%2Frustc%2Fsrc%2Fcodegen-options%2Findex.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustc%2Fsrc%2Fcodegen-options%2Findex.md?ref=9536d04a2d1af8163a0ec772ec747a0e98a8e4db", "patch": "@@ -22,6 +22,13 @@ This flag lets you append a single extra argument to the linker invocation.\n This flag lets you append multiple extra arguments to the linker invocation. The\n options should be separated by spaces.\n \n+## linker-flavor\n+\n+This flag lets you control the linker flavor used by `rustc`. If a linker is given with the\n+`-C linker` flag described above then the linker flavor is inferred from the value provided. If no\n+linker is given then the linker flavor is used to determine the linker to use. Every `rustc` target\n+defaults to some linker flavor.\n+\n ## link-dead-code\n \n Normally, the linker will remove dead code. This flag disables this behavior."}, {"sha": "39659602e015c4d4b6ced94ae80458d5ce5399ad", "filename": "src/doc/unstable-book/src/compiler-flags/linker-flavor.md", "status": "removed", "additions": 0, "deletions": 61, "changes": 61, "blob_url": "https://github.com/rust-lang/rust/blob/d8046ed51a366315ec467af144a258e0f76c30dc/src%2Fdoc%2Funstable-book%2Fsrc%2Fcompiler-flags%2Flinker-flavor.md", "raw_url": "https://github.com/rust-lang/rust/raw/d8046ed51a366315ec467af144a258e0f76c30dc/src%2Fdoc%2Funstable-book%2Fsrc%2Fcompiler-flags%2Flinker-flavor.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Fcompiler-flags%2Flinker-flavor.md?ref=d8046ed51a366315ec467af144a258e0f76c30dc", "patch": "@@ -1,61 +0,0 @@\n-# `linker-flavor`\n-\n-The tracking issue for this feature is: None\n-\n-------------------------\n-\n-Every `rustc` target defaults to some linker. For example, Linux targets default\n-to gcc. In some cases, you may want to override the default; you can do that\n-with the unstable CLI argument: `-Z linker-flavor`.\n-\n-Here how you would use this flag to link a Rust binary for the\n-`thumbv7m-none-eabi` using LLD instead of GCC.\n-\n-``` text\n-$ xargo rustc --target thumbv7m-none-eabi -- \\\n-    -C linker=ld.lld \\\n-    -Z linker-flavor=ld \\\n-    -Z print-link-args | tr ' ' '\\n'\n-\"ld.lld\"\n-\"-L\"\n-\"$SYSROOT/lib/rustlib/thumbv7m-none-eabi/lib\"\n-\"$PWD/target/thumbv7m-none-eabi/debug/deps/app-512e9dbf385f233c.0.o\"\n-\"-o\"\n-\"$PWD/target/thumbv7m-none-eabi/debug/deps/app-512e9dbf385f233c\"\n-\"--gc-sections\"\n-\"-L\"\n-\"$PWD/target/thumbv7m-none-eabi/debug/deps\"\n-\"-L\"\n-\"$PWD/target/debug/deps\"\n-\"-L\"\n-\"$SYSROOT/lib/rustlib/thumbv7m-none-eabi/lib\"\n-\"-Bstatic\"\n-\"$SYSROOT/lib/rustlib/thumbv7m-none-eabi/lib/libcore-e1ccb7dfb1cb9ebb.rlib\"\n-\"-Bdynamic\"\n-```\n-\n-Whereas the default is:\n-\n-``` text\n-$ xargo rustc --target thumbv7m-none-eabi -- \\\n-    -C link-arg=-nostartfiles \\\n-    -Z print-link-args | tr ' ' '\\n'\n-\"arm-none-eabi-gcc\"\n-\"-L\"\n-\"$SYSROOT/lib/rustlib/thumbv7m-none-eabi/lib\"\n-\"$PWD/target/thumbv7m-none-eabi/debug/deps/app-961e39416baa38d9.0.o\"\n-\"-o\"\n-\"$PWD/target/thumbv7m-none-eabi/debug/deps/app-961e39416baa38d9\"\n-\"-Wl,--gc-sections\"\n-\"-nodefaultlibs\"\n-\"-L\"\n-\"$PWD/target/thumbv7m-none-eabi/debug/deps\"\n-\"-L\"\n-\"$PWD/target/debug/deps\"\n-\"-L\"\n-\"$SYSROOT/lib/rustlib/thumbv7m-none-eabi/lib\"\n-\"-Wl,-Bstatic\"\n-\"$SYSROOT/lib/rustlib/thumbv7m-none-eabi/lib/libcore-e1ccb7dfb1cb9ebb.rlib\"\n-\"-nostartfiles\"\n-\"-Wl,-Bdynamic\"\n-```"}, {"sha": "36281e319968eba6cc22027b12aac57e67689c47", "filename": "src/librustc/session/config.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9536d04a2d1af8163a0ec772ec747a0e98a8e4db/src%2Flibrustc%2Fsession%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9536d04a2d1af8163a0ec772ec747a0e98a8e4db/src%2Flibrustc%2Fsession%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fconfig.rs?ref=9536d04a2d1af8163a0ec772ec747a0e98a8e4db", "patch": "@@ -1136,6 +1136,8 @@ options! {CodegenOptions, CodegenSetter, basic_codegen_options,\n         \"enable incremental compilation\"),\n     default_linker_libraries: Option<bool> = (None, parse_opt_bool, [UNTRACKED],\n         \"allow the linker to link its default libraries\"),\n+    linker_flavor: Option<LinkerFlavor> = (None, parse_linker_flavor, [UNTRACKED],\n+                                           \"Linker flavor\"),\n }\n \n options! {DebuggingOptions, DebuggingSetter, basic_debugging_options,\n@@ -1292,8 +1294,6 @@ options! {DebuggingOptions, DebuggingSetter, basic_debugging_options,\n         \"pass `-install_name @rpath/...` to the macOS linker\"),\n     sanitizer: Option<Sanitizer> = (None, parse_sanitizer, [TRACKED],\n                                     \"Use a sanitizer\"),\n-    linker_flavor: Option<LinkerFlavor> = (None, parse_linker_flavor, [UNTRACKED],\n-                                           \"Linker flavor\"),\n     fuel: Option<(String, u64)> = (None, parse_optimization_fuel, [TRACKED],\n         \"set the optimization fuel quota for a crate\"),\n     print_fuel: Option<String> = (None, parse_opt_string, [TRACKED],"}, {"sha": "59102e09d4cbcc29696ffd956f42dea6dc58c0cf", "filename": "src/librustc_codegen_ssa/back/link.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9536d04a2d1af8163a0ec772ec747a0e98a8e4db/src%2Flibrustc_codegen_ssa%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9536d04a2d1af8163a0ec772ec747a0e98a8e4db/src%2Flibrustc_codegen_ssa%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fback%2Flink.rs?ref=9536d04a2d1af8163a0ec772ec747a0e98a8e4db", "patch": "@@ -192,11 +192,7 @@ pub fn linker_and_flavor(sess: &Session) -> (PathBuf, LinkerFlavor) {\n \n     // linker and linker flavor specified via command line have precedence over what the target\n     // specification specifies\n-    if let Some(ret) = infer_from(\n-        sess,\n-        sess.opts.cg.linker.clone(),\n-        sess.opts.debugging_opts.linker_flavor,\n-    ) {\n+    if let Some(ret) = infer_from(sess, sess.opts.cg.linker.clone(), sess.opts.cg.linker_flavor) {\n         return ret;\n     }\n "}, {"sha": "bb77748a416bc10a4ca8ed672f0d26432945a8c7", "filename": "src/test/compile-fail/issue-10755.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9536d04a2d1af8163a0ec772ec747a0e98a8e4db/src%2Ftest%2Fcompile-fail%2Fissue-10755.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9536d04a2d1af8163a0ec772ec747a0e98a8e4db/src%2Ftest%2Fcompile-fail%2Fissue-10755.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-10755.rs?ref=9536d04a2d1af8163a0ec772ec747a0e98a8e4db", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// compile-flags: -C linker=llllll -Z linker-flavor=ld\n+// compile-flags: -C linker=llllll -C linker-flavor=ld\n // error-pattern: linker `llllll` not found\n \n fn main() {"}, {"sha": "95f827ecb6338b36e8d55e7c697cdfe5a9a8dfee", "filename": "src/test/compile-fail/nolink-with-link-args.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9536d04a2d1af8163a0ec772ec747a0e98a8e4db/src%2Ftest%2Fcompile-fail%2Fnolink-with-link-args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9536d04a2d1af8163a0ec772ec747a0e98a8e4db/src%2Ftest%2Fcompile-fail%2Fnolink-with-link-args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fnolink-with-link-args.rs?ref=9536d04a2d1af8163a0ec772ec747a0e98a8e4db", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n // error-pattern:aFdEfSeVEE\n-// compile-flags: -Z linker-flavor=ld\n+// compile-flags: -C linker-flavor=ld\n \n /* We're testing that link_args are indeed passed when nolink is specified.\n So we try to compile with junk link_args and make sure they are visible in"}, {"sha": "56ede0104a5fd8fe48c168e9302c2bd64e0bdc72", "filename": "src/test/ui/feature-gates/feature-gate-linker-flavor.rs", "status": "removed", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/d8046ed51a366315ec467af144a258e0f76c30dc/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-linker-flavor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d8046ed51a366315ec467af144a258e0f76c30dc/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-linker-flavor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-linker-flavor.rs?ref=d8046ed51a366315ec467af144a258e0f76c30dc", "patch": "@@ -1,20 +0,0 @@\n-// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// This is a fake compile fail test as there's no way to generate a\n-// `#![feature(linker_flavor)]` error. The only reason we have a `linker_flavor`\n-// feature gate is to be able to document `-Z linker-flavor` in the unstable\n-// book\n-\n-#[used]\n-//~^ ERROR attribute must be applied to a `static` variable\n-fn foo() {}\n-\n-fn main() {}"}, {"sha": "7019a66654832d08629ff6dfd5e9409d58ba790c", "filename": "src/test/ui/feature-gates/feature-gate-linker-flavor.stderr", "status": "removed", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d8046ed51a366315ec467af144a258e0f76c30dc/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-linker-flavor.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d8046ed51a366315ec467af144a258e0f76c30dc/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-linker-flavor.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-linker-flavor.stderr?ref=d8046ed51a366315ec467af144a258e0f76c30dc", "patch": "@@ -1,8 +0,0 @@\n-error: attribute must be applied to a `static` variable\n-  --> $DIR/feature-gate-linker-flavor.rs:16:1\n-   |\n-LL | #[used]\n-   | ^^^^^^^\n-\n-error: aborting due to previous error\n-"}]}