{"sha": "54bc9c27e4255a8c33a0be7293bfb886b9f2996b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU0YmM5YzI3ZTQyNTVhOGMzM2EwYmU3MjkzYmZiODg2YjlmMjk5NmI=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-11-06T07:21:09Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-11-06T09:08:27Z"}, "message": "Rollup merge of #55694 - jsirs:issue-31076, r=oli-obk\n\nFixes #31076", "tree": {"sha": "7e1c961a4e4da68a5bdb1113d7042195385c9ca0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7e1c961a4e4da68a5bdb1113d7042195385c9ca0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/54bc9c27e4255a8c33a0be7293bfb886b9f2996b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZ1R8CLMp8f2GxWoQ/vbIBR0OATwFAlvhWgsACgkQ/vbIBR0O\nATwOuhAAipJOx9i7yESaD6rQkThmTw6oq9WO0yO7oxjWd+2tUeLuMLBwtlih+uUr\nHgBfDp/mY+cEnKJKdigLMXNy5jz4z2eIoFUBvoP+JQ1qfYODQupr1EkqiyrwRigI\nuE21ay/K5HMT4vvl3dQ5jnWK/aioFuTKO6fpzOFA68vh2Y01PM+3ss2EHIY4rh+y\na5XK75UuFNKoB0rZKzjOKkvPIKvf8p3ql5dKlPyJ29q0M4T1k+qmw+wncU3945ML\nq+npx2aoKLXtbwBB7FmfuK4t+9voZbbKRzovmTkVdSsI1+gcm1BN7bhp2bbMPtGS\nsCV+d4lPEBQdJCiHKafcSj3l66hX2WhzzGH40es2rULTpLkOvOrEVeMtN3NGnoXm\nYY3zeFpvPURXzMpGjIMAHopH/sLY5NrIRpBQ2k8tQwwEVOHS9B1AfrXl93+yC0OO\naZKdLTU5pyop7eATDFcvi70RsWmUZ7ydgJVmyJeOLAWamJcO7omyDmkYi7ywpM8u\niFekyq6TQC8JA8WH+rAr3Ag5YTdgx0Py3VyzeprA1GrGyDq37hHot1kEhj4K0tfy\n0782CY6PwFF7BU3JkDyf7peMBVD+/Xu7L/sH6zWyjjijwIDEog0a0weIELaxzMsN\nF3CS26SdfyTCAvKN2AxxXbTIjkoiDiM5jJSVAQyh6+90bkFKD5c=\n=j39F\n-----END PGP SIGNATURE-----", "payload": "tree 7e1c961a4e4da68a5bdb1113d7042195385c9ca0\nparent 8b3d9e5effaaeb19dfe13e82b3f238d43ec4c8b8\nparent 306397774de67c28a3408b4315552d6fc9bcf4f3\nauthor kennytm <kennytm@gmail.com> 1541488869 +0800\ncommitter kennytm <kennytm@gmail.com> 1541495307 +0800\n\nRollup merge of #55694 - jsirs:issue-31076, r=oli-obk\n\nFixes #31076\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/54bc9c27e4255a8c33a0be7293bfb886b9f2996b", "html_url": "https://github.com/rust-lang/rust/commit/54bc9c27e4255a8c33a0be7293bfb886b9f2996b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/54bc9c27e4255a8c33a0be7293bfb886b9f2996b/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8b3d9e5effaaeb19dfe13e82b3f238d43ec4c8b8", "url": "https://api.github.com/repos/rust-lang/rust/commits/8b3d9e5effaaeb19dfe13e82b3f238d43ec4c8b8", "html_url": "https://github.com/rust-lang/rust/commit/8b3d9e5effaaeb19dfe13e82b3f238d43ec4c8b8"}, {"sha": "306397774de67c28a3408b4315552d6fc9bcf4f3", "url": "https://api.github.com/repos/rust-lang/rust/commits/306397774de67c28a3408b4315552d6fc9bcf4f3", "html_url": "https://github.com/rust-lang/rust/commit/306397774de67c28a3408b4315552d6fc9bcf4f3"}], "stats": {"total": 46, "additions": 44, "deletions": 2}, "files": [{"sha": "637f3eaae9a6ac91e0f3e5874cd420354699f697", "filename": "src/librustc_typeck/check/method/mod.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/54bc9c27e4255a8c33a0be7293bfb886b9f2996b/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54bc9c27e4255a8c33a0be7293bfb886b9f2996b/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fmod.rs?ref=54bc9c27e4255a8c33a0be7293bfb886b9f2996b", "patch": "@@ -289,8 +289,14 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n         // Trait must have a method named `m_name` and it should not have\n         // type parameters or early-bound regions.\n         let tcx = self.tcx;\n-        let method_item =\n-            self.associated_item(trait_def_id, m_name, Namespace::Value).unwrap();\n+        let method_item = match self.associated_item(trait_def_id, m_name, Namespace::Value) {\n+            Some(method_item) => method_item,\n+            None => {\n+                tcx.sess.delay_span_bug(span,\n+                    \"operator trait does not have corresponding operator method\");\n+                return None;\n+            }\n+        };\n         let def_id = method_item.def_id;\n         let generics = tcx.generics_of(def_id);\n         assert_eq!(generics.params.len(), 0);"}, {"sha": "e4531072e9be42c3e6735619de0023e96e6a2564", "filename": "src/test/ui/issues/issue-31076.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/54bc9c27e4255a8c33a0be7293bfb886b9f2996b/src%2Ftest%2Fui%2Fissues%2Fissue-31076.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54bc9c27e4255a8c33a0be7293bfb886b9f2996b/src%2Ftest%2Fui%2Fissues%2Fissue-31076.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-31076.rs?ref=54bc9c27e4255a8c33a0be7293bfb886b9f2996b", "patch": "@@ -0,0 +1,17 @@\n+#![feature(no_core, lang_items)]\n+#![no_core]\n+\n+#[lang=\"sized\"]\n+trait Sized {}\n+\n+#[lang=\"add\"]\n+trait Add<T> {}\n+\n+impl Add<i32> for i32 {}\n+\n+fn main() {\n+    let x = 5 + 6;\n+    //~^ ERROR binary operation `+` cannot be applied to type `{integer}`\n+    let y = 5i32 + 6i32;\n+    //~^ ERROR binary operation `+` cannot be applied to type `i32`\n+}"}, {"sha": "3a13f02d9f45f34fd72086513bdf56319ba7a578", "filename": "src/test/ui/issues/issue-31076.stderr", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/54bc9c27e4255a8c33a0be7293bfb886b9f2996b/src%2Ftest%2Fui%2Fissues%2Fissue-31076.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/54bc9c27e4255a8c33a0be7293bfb886b9f2996b/src%2Ftest%2Fui%2Fissues%2Fissue-31076.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-31076.stderr?ref=54bc9c27e4255a8c33a0be7293bfb886b9f2996b", "patch": "@@ -0,0 +1,19 @@\n+error[E0369]: binary operation `+` cannot be applied to type `{integer}`\n+  --> $DIR/issue-31076.rs:13:13\n+   |\n+LL |     let x = 5 + 6;\n+   |             ^^^^^\n+   |\n+   = note: an implementation of `std::ops::Add` might be missing for `{integer}`\n+\n+error[E0369]: binary operation `+` cannot be applied to type `i32`\n+  --> $DIR/issue-31076.rs:15:13\n+   |\n+LL |     let y = 5i32 + 6i32;\n+   |             ^^^^^^^^^^^\n+   |\n+   = note: an implementation of `std::ops::Add` might be missing for `i32`\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0369`."}]}