{"sha": "2f650038ad3e53d92203153eef03294a95daba41", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJmNjUwMDM4YWQzZTUzZDkyMjAzMTUzZWVmMDMyOTRhOTVkYWJhNDE=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-08-20T21:06:04Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-08-20T21:06:04Z"}, "message": "rt: Move the GetProcAddress/dlsym stuff out of rust_gc.cpp into rust_abi.h", "tree": {"sha": "e8e77b15c7828288ab47466cbc58fac34661cb84", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e8e77b15c7828288ab47466cbc58fac34661cb84"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2f650038ad3e53d92203153eef03294a95daba41", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2f650038ad3e53d92203153eef03294a95daba41", "html_url": "https://github.com/rust-lang/rust/commit/2f650038ad3e53d92203153eef03294a95daba41", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2f650038ad3e53d92203153eef03294a95daba41/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "15e456d54757dded70bf4a4bd8e11256f0cceb5d", "url": "https://api.github.com/repos/rust-lang/rust/commits/15e456d54757dded70bf4a4bd8e11256f0cceb5d", "html_url": "https://github.com/rust-lang/rust/commit/15e456d54757dded70bf4a4bd8e11256f0cceb5d"}], "stats": {"total": 61, "additions": 43, "deletions": 18}, "files": [{"sha": "1894a56f6a4eab77e9506a32aabbfcd2de5fb3c6", "filename": "src/rt/rust_abi.h", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/2f650038ad3e53d92203153eef03294a95daba41/src%2Frt%2Frust_abi.h", "raw_url": "https://github.com/rust-lang/rust/raw/2f650038ad3e53d92203153eef03294a95daba41/src%2Frt%2Frust_abi.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_abi.h?ref=2f650038ad3e53d92203153eef03294a95daba41", "patch": "@@ -0,0 +1,38 @@\n+#ifndef RUST_ABI_H\n+#define RUST_ABI_H\n+\n+#ifdef __WIN32__\n+#include <windows.h>\n+#else\n+#include <dlfcn.h>\n+#endif\n+\n+template<typename T>\n+class weak_symbol {\n+private:\n+    bool init;\n+    T *data;\n+    const char *name;\n+\n+    void fill() {\n+        if (init)\n+            return;\n+\n+#ifdef __WIN32__\n+        data = (T *)GetProcAddress(GetModuleHandle(NULL), name);\n+#else\n+        data = (T *)dlsym(RTLD_DEFAULT, name);\n+#endif\n+\n+        init = true;\n+    }\n+\n+public:\n+    weak_symbol(const char *in_name)\n+    : init(false), data(NULL), name(in_name) {}\n+\n+    T *&operator*() { fill(); return data; }\n+};\n+\n+#endif\n+"}, {"sha": "cb9d7e949ad668c7d1b7d5cf7ebdb68cbbd77833", "filename": "src/rt/rust_gc.cpp", "status": "modified", "additions": 5, "deletions": 18, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/2f650038ad3e53d92203153eef03294a95daba41/src%2Frt%2Frust_gc.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/2f650038ad3e53d92203153eef03294a95daba41/src%2Frt%2Frust_gc.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_gc.cpp?ref=2f650038ad3e53d92203153eef03294a95daba41", "patch": "@@ -6,6 +6,7 @@\n #include <vector>\n #include <stdint.h>\n \n+#include \"rust_abi.h\"\n #include \"rust_gc.h\"\n #include \"rust_internal.h\"\n #include \"rust_shape.h\"\n@@ -22,6 +23,8 @@\n \n namespace gc {\n \n+weak_symbol<const uintptr_t> safe_point_data(\"rust_gc_safe_points\");\n+\n struct frame {\n     uint8_t *bp;    // The frame pointer.\n     void (*ra)();   // The return address.\n@@ -77,30 +80,14 @@ class safe_point_map {\n \n public:\n     safe_point_map() {\n-        const uintptr_t *data = get_safe_point_data();\n+        const uintptr_t *data = *safe_point_data;\n         n_safe_points = *data++;\n         index = (const safe_point_index_entry *)data;\n         data += n_safe_points * 2;\n         safe_points = (const safe_point *)data;\n     }\n \n     const safe_point *get_safe_point(void (*addr)());\n-\n-    static const uintptr_t *get_safe_point_data() {\n-        static bool init = false;\n-        static const uintptr_t *data;\n-        if (!init) {\n-#ifdef __WIN32__\n-            data = (const uintptr_t *)GetProcAddress(GetModuleHandle(NULL),\n-                                                     \"rust_gc_safe_points\");\n-#else\n-            data = (const uintptr_t *)dlsym(RTLD_DEFAULT,\n-                                            \"rust_gc_safe_points\");\n-#endif\n-            init = true;\n-        }\n-        return data;\n-    }\n };\n \n class gc {\n@@ -192,7 +179,7 @@ gc::run() {\n \n void\n maybe_gc(rust_task *task) {\n-    if (safe_point_map::get_safe_point_data() == NULL)\n+    if (*safe_point_data == NULL)\n         return;\n \n     // FIXME: We ought to lock this."}]}