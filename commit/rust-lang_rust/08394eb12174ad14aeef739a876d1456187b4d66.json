{"sha": "08394eb12174ad14aeef739a876d1456187b4d66", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA4Mzk0ZWIxMjE3NGFkMTRhZWVmNzM5YTg3NmQxNDU2MTg3YjRkNjY=", "commit": {"author": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-07-07T08:46:24Z"}, "committer": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-07-15T10:58:32Z"}, "message": "update test", "tree": {"sha": "1f405e56b374800f353af0c90f1990df63d43f54", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1f405e56b374800f353af0c90f1990df63d43f54"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/08394eb12174ad14aeef739a876d1456187b4d66", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/08394eb12174ad14aeef739a876d1456187b4d66", "html_url": "https://github.com/rust-lang/rust/commit/08394eb12174ad14aeef739a876d1456187b4d66", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/08394eb12174ad14aeef739a876d1456187b4d66/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "29b5844c2d7225936545ead6c25e13fc1e822b63", "url": "https://api.github.com/repos/rust-lang/rust/commits/29b5844c2d7225936545ead6c25e13fc1e822b63", "html_url": "https://github.com/rust-lang/rust/commit/29b5844c2d7225936545ead6c25e13fc1e822b63"}], "stats": {"total": 16, "additions": 4, "deletions": 12}, "files": [{"sha": "a7a923c6a59b7b7f4d3efb59acedeb30e23936dd", "filename": "src/test/ui/const-generics/type-dependent/issue-61936.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/08394eb12174ad14aeef739a876d1456187b4d66/src%2Ftest%2Fui%2Fconst-generics%2Ftype-dependent%2Fissue-61936.rs", "raw_url": "https://github.com/rust-lang/rust/raw/08394eb12174ad14aeef739a876d1456187b4d66/src%2Ftest%2Fui%2Fconst-generics%2Ftype-dependent%2Fissue-61936.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Ftype-dependent%2Fissue-61936.rs?ref=08394eb12174ad14aeef739a876d1456187b4d66", "patch": "@@ -20,11 +20,13 @@ struct ArrayWindows<'a, T, const N: usize> {\n impl <'a, T: Clone, const N: usize> Iterator for ArrayWindows<'a, T, N> {\n     type Item = [T; N];\n     fn next(&mut self) -> Option<Self::Item> {\n+        // Note: this is unsound for some `T` and not meant as an example\n+        // on how to implement `ArrayWindows`.\n         let mut res = unsafe{ std::mem::zeroed() };\n         let mut ptr = &mut res as *mut [T; N] as *mut T;\n \n         for i in 0..N {\n-            match self.slice[i..].get(i) {\n+            match self.slice[self.idx..].get(i) {\n                 None => return None,\n                 Some(elem) => unsafe { std::ptr::write_volatile(ptr, elem.clone())},\n             };\n@@ -39,7 +41,7 @@ impl <'a, T: Clone, const N: usize> Iterator for ArrayWindows<'a, T, N> {\n const FOUR: usize = 4;\n \n fn main() {\n-    let v: Vec<usize> = vec![100; 0usize];\n+    let v: Vec<usize> = vec![0; 100];\n \n     for array in v.as_slice().array_windows::<FOUR>() {\n         assert_eq!(array, [0, 0, 0, 0])"}, {"sha": "146704a623c007f34f81f5f28af3ff133ab68044", "filename": "src/test/ui/impl-trait/auto-trait-leak.stderr", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/08394eb12174ad14aeef739a876d1456187b4d66/src%2Ftest%2Fui%2Fimpl-trait%2Fauto-trait-leak.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/08394eb12174ad14aeef739a876d1456187b4d66/src%2Ftest%2Fui%2Fimpl-trait%2Fauto-trait-leak.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fauto-trait-leak.stderr?ref=08394eb12174ad14aeef739a876d1456187b4d66", "patch": "@@ -34,11 +34,6 @@ note: ...which requires building MIR for `cycle1`...\n    |\n LL | fn cycle1() -> impl Clone {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^\n-note: ...which requires type-checking the potential const argument `cycle1`...\n-  --> $DIR/auto-trait-leak.rs:12:1\n-   |\n-LL | fn cycle1() -> impl Clone {\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^\n note: ...which requires type-checking `cycle1`...\n   --> $DIR/auto-trait-leak.rs:12:1\n    |\n@@ -80,11 +75,6 @@ note: ...which requires building MIR for `cycle2`...\n    |\n LL | fn cycle2() -> impl Clone {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^\n-note: ...which requires type-checking the potential const argument `cycle2`...\n-  --> $DIR/auto-trait-leak.rs:20:1\n-   |\n-LL | fn cycle2() -> impl Clone {\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^\n note: ...which requires type-checking `cycle2`...\n   --> $DIR/auto-trait-leak.rs:20:1\n    |"}]}