{"sha": "aab80eedf3e271ada92a6509727461cc3aa6bb12", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFhYjgwZWVkZjNlMjcxYWRhOTJhNjUwOTcyNzQ2MWNjM2FhNmJiMTI=", "commit": {"author": {"name": "rail", "email": "12975677+rail-rain@users.noreply.github.com", "date": "2020-04-27T07:04:56Z"}, "committer": {"name": "rail", "email": "12975677+rail-rain@users.noreply.github.com", "date": "2020-04-27T07:04:56Z"}, "message": "Extract `get_fixed_offset_var`` from `fetch_cloned_fixed_offset_var`", "tree": {"sha": "72752bb2a780dcd505636cff74b270c15b7c4127", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/72752bb2a780dcd505636cff74b270c15b7c4127"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aab80eedf3e271ada92a6509727461cc3aa6bb12", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aab80eedf3e271ada92a6509727461cc3aa6bb12", "html_url": "https://github.com/rust-lang/rust/commit/aab80eedf3e271ada92a6509727461cc3aa6bb12", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aab80eedf3e271ada92a6509727461cc3aa6bb12/comments", "author": {"login": "rail-rain", "id": 12975677, "node_id": "MDQ6VXNlcjEyOTc1Njc3", "avatar_url": "https://avatars.githubusercontent.com/u/12975677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rail-rain", "html_url": "https://github.com/rail-rain", "followers_url": "https://api.github.com/users/rail-rain/followers", "following_url": "https://api.github.com/users/rail-rain/following{/other_user}", "gists_url": "https://api.github.com/users/rail-rain/gists{/gist_id}", "starred_url": "https://api.github.com/users/rail-rain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rail-rain/subscriptions", "organizations_url": "https://api.github.com/users/rail-rain/orgs", "repos_url": "https://api.github.com/users/rail-rain/repos", "events_url": "https://api.github.com/users/rail-rain/events{/privacy}", "received_events_url": "https://api.github.com/users/rail-rain/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rail-rain", "id": 12975677, "node_id": "MDQ6VXNlcjEyOTc1Njc3", "avatar_url": "https://avatars.githubusercontent.com/u/12975677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rail-rain", "html_url": "https://github.com/rail-rain", "followers_url": "https://api.github.com/users/rail-rain/followers", "following_url": "https://api.github.com/users/rail-rain/following{/other_user}", "gists_url": "https://api.github.com/users/rail-rain/gists{/gist_id}", "starred_url": "https://api.github.com/users/rail-rain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rail-rain/subscriptions", "organizations_url": "https://api.github.com/users/rail-rain/orgs", "repos_url": "https://api.github.com/users/rail-rain/repos", "events_url": "https://api.github.com/users/rail-rain/events{/privacy}", "received_events_url": "https://api.github.com/users/rail-rain/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ecb472c052c746d87ce26f6b184f2c5f11537e0c", "url": "https://api.github.com/repos/rust-lang/rust/commits/ecb472c052c746d87ce26f6b184f2c5f11537e0c", "html_url": "https://github.com/rust-lang/rust/commit/ecb472c052c746d87ce26f6b184f2c5f11537e0c"}], "stats": {"total": 30, "additions": 11, "deletions": 19}, "files": [{"sha": "2dc95f53078ec9e7b040bd24bb87cfc531019972", "filename": "clippy_lints/src/loops.rs", "status": "modified", "additions": 11, "deletions": 19, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/aab80eedf3e271ada92a6509727461cc3aa6bb12/clippy_lints%2Fsrc%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aab80eedf3e271ada92a6509727461cc3aa6bb12/clippy_lints%2Fsrc%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops.rs?ref=aab80eedf3e271ada92a6509727461cc3aa6bb12", "patch": "@@ -828,6 +828,16 @@ fn is_slice_like<'a, 'tcx>(cx: &LateContext<'a, 'tcx>, ty: Ty<'_>) -> bool {\n     is_slice || is_type_diagnostic_item(cx, ty, sym!(vec_type)) || is_type_diagnostic_item(cx, ty, sym!(vecdeque_type))\n }\n \n+fn fetch_cloned_expr<'tcx>(expr: &'tcx Expr<'tcx>) -> &'tcx Expr<'tcx> {\n+    if_chain! {\n+        if let ExprKind::MethodCall(method, _, args) = expr.kind;\n+        if method.ident.name == sym!(clone);\n+        if args.len() == 1;\n+        if let Some(arg) = args.get(0);\n+        then { arg } else { expr }\n+    }\n+}\n+\n fn get_fixed_offset_var<'a, 'tcx>(cx: &LateContext<'a, 'tcx>, expr: &Expr<'_>, var: HirId) -> Option<FixedOffsetVar> {\n     fn extract_offset<'a, 'tcx>(cx: &LateContext<'a, 'tcx>, e: &Expr<'_>, var: HirId) -> Option<String> {\n         match &e.kind {\n@@ -875,24 +885,6 @@ fn get_fixed_offset_var<'a, 'tcx>(cx: &LateContext<'a, 'tcx>, expr: &Expr<'_>, v\n     }\n }\n \n-fn fetch_cloned_fixed_offset_var<'a, 'tcx>(\n-    cx: &LateContext<'a, 'tcx>,\n-    expr: &Expr<'_>,\n-    var: HirId,\n-) -> Option<FixedOffsetVar> {\n-    if_chain! {\n-        if let ExprKind::MethodCall(method, _, args) = expr.kind;\n-        if method.ident.name == sym!(clone);\n-        if args.len() == 1;\n-        if let Some(arg) = args.get(0);\n-        then {\n-            get_fixed_offset_var(cx, arg, var)\n-        } else {\n-            get_fixed_offset_var(cx, expr, var)\n-        }\n-    }\n-}\n-\n fn get_indexed_assignments<'a, 'tcx>(\n     cx: &LateContext<'a, 'tcx>,\n     body: &Expr<'_>,\n@@ -906,7 +898,7 @@ fn get_indexed_assignments<'a, 'tcx>(\n         if let ExprKind::Assign(lhs, rhs, _) = e.kind {\n             match (\n                 get_fixed_offset_var(cx, lhs, var),\n-                fetch_cloned_fixed_offset_var(cx, rhs, var),\n+                get_fixed_offset_var(cx, fetch_cloned_expr(rhs), var),\n             ) {\n                 (Some(offset_left), Some(offset_right)) => {\n                     // Source and destination must be different"}]}