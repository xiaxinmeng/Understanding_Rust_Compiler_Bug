{"sha": "64310977e6e890563d9dfd6d9b2d6d6442ffd281", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY0MzEwOTc3ZTZlODkwNTYzZDlkZmQ2ZDliMmQ2ZDY0NDJmZmQyODE=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-08-12T10:17:35Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-08-16T09:38:32Z"}, "message": "Update test output.", "tree": {"sha": "e1f620dac84d4533871bb5632c9ae2bd650aaf9d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e1f620dac84d4533871bb5632c9ae2bd650aaf9d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/64310977e6e890563d9dfd6d9b2d6d6442ffd281", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/64310977e6e890563d9dfd6d9b2d6d6442ffd281", "html_url": "https://github.com/rust-lang/rust/commit/64310977e6e890563d9dfd6d9b2d6d6442ffd281", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/64310977e6e890563d9dfd6d9b2d6d6442ffd281/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "111201d27c4262d66834e495ffa515792e3a5771", "url": "https://api.github.com/repos/rust-lang/rust/commits/111201d27c4262d66834e495ffa515792e3a5771", "html_url": "https://github.com/rust-lang/rust/commit/111201d27c4262d66834e495ffa515792e3a5771"}], "stats": {"total": 196, "additions": 44, "deletions": 152}, "files": [{"sha": "98396abb6ff66d6f11cd3c5a3d3a331e01709899", "filename": "src/test/ui/closures/2229_closure_analysis/migrations/auto_traits.stderr", "status": "modified", "additions": 11, "deletions": 15, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/64310977e6e890563d9dfd6d9b2d6d6442ffd281/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmigrations%2Fauto_traits.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/64310977e6e890563d9dfd6d9b2d6d6442ffd281/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmigrations%2Fauto_traits.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmigrations%2Fauto_traits.stderr?ref=64310977e6e890563d9dfd6d9b2d6d6442ffd281", "patch": "@@ -16,11 +16,11 @@ LL | #![deny(rust_2021_incompatible_closure_captures)]\n help: add a dummy let to cause `fptr` to be fully captured\n    |\n LL ~     thread::spawn(move || { let _ = &fptr; unsafe {\n-LL +\n-LL +\n-LL +\n-LL +\n-LL +         *fptr.0 = 20;\n+LL |\n+LL |\n+LL |\n+LL |\n+LL |         *fptr.0 = 20;\n  ...\n \n error: changes to closure capture in Rust 2021 will affect `Sync`, `Send` trait implementation for closure\n@@ -36,11 +36,11 @@ LL |         *fptr.0.0 = 20;\n help: add a dummy let to cause `fptr` to be fully captured\n    |\n LL ~     thread::spawn(move || { let _ = &fptr; unsafe {\n-LL +\n-LL +\n-LL +\n-LL +\n-LL +         *fptr.0.0 = 20;\n+LL |\n+LL |\n+LL |\n+LL |\n+LL |         *fptr.0.0 = 20;\n  ...\n \n error: changes to closure capture in Rust 2021 will affect `Clone` trait implementation for closure and drop order\n@@ -60,11 +60,7 @@ help: add a dummy let to cause `f` to be fully captured\n    |\n LL ~     let c = || {\n LL +         let _ = &f;\n-LL +\n-LL +\n-LL +\n-LL +\n- ...\n+   |\n \n error: aborting due to 3 previous errors\n "}, {"sha": "7989a8fa5ccae1957c7972867e45ac6c54183a6b", "filename": "src/test/ui/closures/2229_closure_analysis/migrations/insignificant_drop.stderr", "status": "modified", "additions": 7, "deletions": 35, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/64310977e6e890563d9dfd6d9b2d6d6442ffd281/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmigrations%2Finsignificant_drop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/64310977e6e890563d9dfd6d9b2d6d6442ffd281/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmigrations%2Finsignificant_drop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmigrations%2Finsignificant_drop.stderr?ref=64310977e6e890563d9dfd6d9b2d6d6442ffd281", "patch": "@@ -30,11 +30,7 @@ help: add a dummy let to cause `t`, `t1`, `t2` to be fully captured\n    |\n LL ~     let c = || {\n LL +         let _ = (&t, &t1, &t2);\n-LL +\n-LL +\n-LL +\n-LL + \n- ...\n+   |\n \n error: changes to closure capture in Rust 2021 will affect drop order\n   --> $DIR/insignificant_drop.rs:41:13\n@@ -59,11 +55,7 @@ help: add a dummy let to cause `t`, `t1` to be fully captured\n    |\n LL ~     let c = || {\n LL +         let _ = (&t, &t1);\n-LL +\n-LL +\n-LL +\n-LL +         let _t = t.0;\n- ...\n+   |\n \n error: changes to closure capture in Rust 2021 will affect drop order\n   --> $DIR/insignificant_drop.rs:62:13\n@@ -82,11 +74,7 @@ help: add a dummy let to cause `t` to be fully captured\n    |\n LL ~     let c = || {\n LL +         let _ = &t;\n-LL +\n-LL +\n-LL +\n-LL +         let _t = t.0;\n- ...\n+   |\n \n error: changes to closure capture in Rust 2021 will affect drop order\n   --> $DIR/insignificant_drop.rs:83:13\n@@ -105,11 +93,7 @@ help: add a dummy let to cause `t` to be fully captured\n    |\n LL ~     let c = || {\n LL +         let _ = &t;\n-LL +\n-LL +\n-LL +\n-LL +         let _t = t.0;\n- ...\n+   |\n \n error: changes to closure capture in Rust 2021 will affect drop order\n   --> $DIR/insignificant_drop.rs:104:13\n@@ -128,11 +112,7 @@ help: add a dummy let to cause `t` to be fully captured\n    |\n LL ~     let c = || {\n LL +         let _ = &t;\n-LL +\n-LL +\n-LL +\n-LL +         let _t = t.0;\n- ...\n+   |\n \n error: changes to closure capture in Rust 2021 will affect drop order\n   --> $DIR/insignificant_drop.rs:122:13\n@@ -156,11 +136,7 @@ help: add a dummy let to cause `t1`, `t` to be fully captured\n    |\n LL ~     let c = move || {\n LL +         let _ = (&t1, &t);\n-LL +\n-LL +\n-LL +\n-LL +         println!(\"{} {}\", t1.1, t.1);\n- ...\n+   |\n \n error: changes to closure capture in Rust 2021 will affect drop order\n   --> $DIR/insignificant_drop.rs:142:13\n@@ -179,11 +155,7 @@ help: add a dummy let to cause `t` to be fully captured\n    |\n LL ~     let c = || {\n LL +         let _ = &t;\n-LL +\n-LL +\n-LL +\n-LL +         let _t = t.0;\n- ...\n+   |\n \n error: aborting due to 7 previous errors\n "}, {"sha": "961834aca194d4b2daef9f515bae695f76a66fc7", "filename": "src/test/ui/closures/2229_closure_analysis/migrations/insignificant_drop_attr_migrations.stderr", "status": "modified", "additions": 2, "deletions": 10, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/64310977e6e890563d9dfd6d9b2d6d6442ffd281/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmigrations%2Finsignificant_drop_attr_migrations.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/64310977e6e890563d9dfd6d9b2d6d6442ffd281/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmigrations%2Finsignificant_drop_attr_migrations.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmigrations%2Finsignificant_drop_attr_migrations.stderr?ref=64310977e6e890563d9dfd6d9b2d6d6442ffd281", "patch": "@@ -20,11 +20,7 @@ help: add a dummy let to cause `t` to be fully captured\n    |\n LL ~     let c = || {\n LL +         let _ = &t;\n-LL +\n-LL +\n-LL +\n-LL +         let _t = t.0;\n- ...\n+   |\n \n error: changes to closure capture in Rust 2021 will affect drop order\n   --> $DIR/insignificant_drop_attr_migrations.rs:57:13\n@@ -43,11 +39,7 @@ help: add a dummy let to cause `t` to be fully captured\n    |\n LL ~     let c = move || {\n LL +         let _ = &t;\n-LL +\n-LL +\n-LL +\n-LL +         let _t = t.1;\n- ...\n+   |\n \n error: aborting due to 2 previous errors\n "}, {"sha": "d1f959dfc520e2fe8f5f5e2965c2ff4670f26c1a", "filename": "src/test/ui/closures/2229_closure_analysis/migrations/macro.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/64310977e6e890563d9dfd6d9b2d6d6442ffd281/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmigrations%2Fmacro.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/64310977e6e890563d9dfd6d9b2d6d6442ffd281/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmigrations%2Fmacro.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmigrations%2Fmacro.stderr?ref=64310977e6e890563d9dfd6d9b2d6d6442ffd281", "patch": "@@ -18,7 +18,7 @@ LL | #![deny(rust_2021_incompatible_closure_captures)]\n help: add a dummy let to cause `a` to be fully captured\n    |\n LL |     let _ = || { let _ = &a; dbg!(a.0) };\n-   |                ~~~~~~~~~~~~~~~~~~~~~~~~~\n+   |                +++++++++++++           +\n \n error: aborting due to previous error\n "}, {"sha": "3589a6150d064b8e74731e0be1b8161eb45a7415", "filename": "src/test/ui/closures/2229_closure_analysis/migrations/migrations_rustfix.stderr", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/64310977e6e890563d9dfd6d9b2d6d6442ffd281/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmigrations%2Fmigrations_rustfix.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/64310977e6e890563d9dfd6d9b2d6d6442ffd281/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmigrations%2Fmigrations_rustfix.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmigrations%2Fmigrations_rustfix.stderr?ref=64310977e6e890563d9dfd6d9b2d6d6442ffd281", "patch": "@@ -20,11 +20,7 @@ help: add a dummy let to cause `t` to be fully captured\n    |\n LL ~     let c = || {\n LL +         let _ = &t;\n-LL +\n-LL +\n-LL +\n-LL +         let _t = t.0;\n- ...\n+   |\n \n error: changes to closure capture in Rust 2021 will affect drop order\n   --> $DIR/migrations_rustfix.rs:33:13\n@@ -41,7 +37,7 @@ LL | }\n help: add a dummy let to cause `t` to be fully captured\n    |\n LL |     let c = || { let _ = &t; t.0 };\n-   |                ~~~~~~~~~~~~~~~~~~~\n+   |                +++++++++++++     +\n \n error: aborting due to 2 previous errors\n "}, {"sha": "10816b7bc3adf9346df3414fd7ed2105e6b6a621", "filename": "src/test/ui/closures/2229_closure_analysis/migrations/mir_calls_to_shims.stderr", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/64310977e6e890563d9dfd6d9b2d6d6442ffd281/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmigrations%2Fmir_calls_to_shims.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/64310977e6e890563d9dfd6d9b2d6d6442ffd281/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmigrations%2Fmir_calls_to_shims.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmigrations%2Fmir_calls_to_shims.stderr?ref=64310977e6e890563d9dfd6d9b2d6d6442ffd281", "patch": "@@ -17,11 +17,7 @@ help: add a dummy let to cause `f` to be fully captured\n    |\n LL ~     let result = panic::catch_unwind(move || {\n LL +         let _ = &f;\n-LL +\n-LL +\n-LL +\n-LL +\n- ...\n+   |\n \n error: aborting due to previous error\n "}, {"sha": "8bee950c13eca0273b93632434119816ad03661c", "filename": "src/test/ui/closures/2229_closure_analysis/migrations/multi_diagnostics.stderr", "status": "modified", "additions": 9, "deletions": 25, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/64310977e6e890563d9dfd6d9b2d6d6442ffd281/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmigrations%2Fmulti_diagnostics.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/64310977e6e890563d9dfd6d9b2d6d6442ffd281/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmigrations%2Fmulti_diagnostics.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmigrations%2Fmulti_diagnostics.stderr?ref=64310977e6e890563d9dfd6d9b2d6d6442ffd281", "patch": "@@ -23,11 +23,7 @@ help: add a dummy let to cause `f1`, `f2` to be fully captured\n    |\n LL ~     let c = || {\n LL +         let _ = (&f1, &f2);\n-LL +\n-LL +\n-LL +\n-LL +\n- ...\n+   |\n \n error: changes to closure capture in Rust 2021 will affect `Clone` trait implementation for closure\n   --> $DIR/multi_diagnostics.rs:42:13\n@@ -43,11 +39,7 @@ help: add a dummy let to cause `f1` to be fully captured\n    |\n LL ~     let c = || {\n LL +         let _ = &f1;\n-LL +\n-LL +\n-LL +\n-LL +\n- ...\n+   |\n \n error: changes to closure capture in Rust 2021 will affect `Clone` trait implementation for closure\n   --> $DIR/multi_diagnostics.rs:67:13\n@@ -69,11 +61,7 @@ help: add a dummy let to cause `f1` to be fully captured\n    |\n LL ~     let c = || {\n LL +         let _ = &f1;\n-LL +\n-LL +\n-LL +\n-LL +\n- ...\n+   |\n \n error: changes to closure capture in Rust 2021 will affect `Clone` trait implementation for closure and drop order\n   --> $DIR/multi_diagnostics.rs:86:13\n@@ -98,11 +86,7 @@ help: add a dummy let to cause `f1` to be fully captured\n    |\n LL ~     let c = || {\n LL +         let _ = &f1;\n-LL +\n-LL +\n-LL +\n-LL +\n- ...\n+   |\n \n error: changes to closure capture in Rust 2021 will affect `Sync`, `Send` trait implementation for closure\n   --> $DIR/multi_diagnostics.rs:119:19\n@@ -123,11 +107,11 @@ LL |         *fptr2.0 = 20;\n help: add a dummy let to cause `fptr1`, `fptr2` to be fully captured\n    |\n LL ~     thread::spawn(move || { let _ = (&fptr1, &fptr2); unsafe {\n-LL +\n-LL +\n-LL +\n-LL +\n-LL +\n+LL |\n+LL |\n+LL |\n+LL |\n+LL |\n  ...\n \n error: aborting due to 5 previous errors"}, {"sha": "aa9b8672a0ffbdc6c6d36a89500323b7f19feb61", "filename": "src/test/ui/closures/2229_closure_analysis/migrations/precise.stderr", "status": "modified", "additions": 2, "deletions": 10, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/64310977e6e890563d9dfd6d9b2d6d6442ffd281/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmigrations%2Fprecise.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/64310977e6e890563d9dfd6d9b2d6d6442ffd281/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmigrations%2Fprecise.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmigrations%2Fprecise.stderr?ref=64310977e6e890563d9dfd6d9b2d6d6442ffd281", "patch": "@@ -20,11 +20,7 @@ help: add a dummy let to cause `t` to be fully captured\n    |\n LL ~     let c = || {\n LL +         let _ = &t;\n-LL +\n-LL +\n-LL +\n-LL +         let _t = t.0;\n- ...\n+   |\n \n error: changes to closure capture in Rust 2021 will affect drop order\n   --> $DIR/precise.rs:45:13\n@@ -53,11 +49,7 @@ help: add a dummy let to cause `u` to be fully captured\n    |\n LL ~     let c = || {\n LL +         let _ = &u;\n-LL +\n-LL +\n-LL +\n-LL +         let _x = u.0.0;\n- ...\n+   |\n \n error: aborting due to 2 previous errors\n "}, {"sha": "e9170eba3f17665f3855d65e8c389f1c5516996e", "filename": "src/test/ui/closures/2229_closure_analysis/migrations/significant_drop.stderr", "status": "modified", "additions": 9, "deletions": 45, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/64310977e6e890563d9dfd6d9b2d6d6442ffd281/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmigrations%2Fsignificant_drop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/64310977e6e890563d9dfd6d9b2d6d6442ffd281/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmigrations%2Fsignificant_drop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmigrations%2Fsignificant_drop.stderr?ref=64310977e6e890563d9dfd6d9b2d6d6442ffd281", "patch": "@@ -30,11 +30,7 @@ help: add a dummy let to cause `t`, `t1`, `t2` to be fully captured\n    |\n LL ~     let c = || {\n LL +         let _ = (&t, &t1, &t2);\n-LL +\n-LL +\n-LL +\n-LL +         let _t = t.0;\n- ...\n+   |\n \n error: changes to closure capture in Rust 2021 will affect drop order\n   --> $DIR/significant_drop.rs:50:13\n@@ -59,11 +55,7 @@ help: add a dummy let to cause `t`, `t1` to be fully captured\n    |\n LL ~     let c = || {\n LL +         let _ = (&t, &t1);\n-LL +\n-LL +\n-LL +\n-LL +         let _t = t.0;\n- ...\n+   |\n \n error: changes to closure capture in Rust 2021 will affect drop order\n   --> $DIR/significant_drop.rs:71:13\n@@ -82,11 +74,7 @@ help: add a dummy let to cause `t` to be fully captured\n    |\n LL ~     let c = || {\n LL +         let _ = &t;\n-LL +\n-LL +\n-LL +\n-LL +         let _t = t.0;\n- ...\n+   |\n \n error: changes to closure capture in Rust 2021 will affect drop order\n   --> $DIR/significant_drop.rs:91:13\n@@ -105,11 +93,7 @@ help: add a dummy let to cause `t` to be fully captured\n    |\n LL ~     let c = || {\n LL +         let _ = &t;\n-LL +\n-LL +\n-LL +\n-LL +         let _t = t.0;\n- ...\n+   |\n \n error: changes to closure capture in Rust 2021 will affect drop order\n   --> $DIR/significant_drop.rs:109:13\n@@ -128,11 +112,7 @@ help: add a dummy let to cause `t` to be fully captured\n    |\n LL ~     let c = || {\n LL +         let _ = &t;\n-LL +\n-LL +\n-LL +\n-LL +         let _t = t.0;\n- ...\n+   |\n \n error: changes to closure capture in Rust 2021 will affect drop order\n   --> $DIR/significant_drop.rs:125:13\n@@ -151,11 +131,7 @@ help: add a dummy let to cause `t` to be fully captured\n    |\n LL ~     let c = || {\n LL +         let _ = &t;\n-LL +\n-LL +\n-LL +\n-LL +         let _t = t.1;\n- ...\n+   |\n \n error: changes to closure capture in Rust 2021 will affect drop order\n   --> $DIR/significant_drop.rs:143:13\n@@ -179,11 +155,7 @@ help: add a dummy let to cause `t1`, `t` to be fully captured\n    |\n LL ~     let c = move || {\n LL +         let _ = (&t1, &t);\n-LL +\n-LL +\n-LL +\n-LL +         println!(\"{:?} {:?}\", t1.1, t.1);\n- ...\n+   |\n \n error: changes to closure capture in Rust 2021 will affect drop order\n   --> $DIR/significant_drop.rs:163:21\n@@ -202,11 +174,7 @@ help: add a dummy let to cause `tuple` to be fully captured\n    |\n LL ~             let c = || {\n LL +                 let _ = &tuple;\n-LL +\n-LL +\n-LL +\n-LL +                 tuple.0;\n- ...\n+   |\n \n error: changes to closure capture in Rust 2021 will affect drop order\n   --> $DIR/significant_drop.rs:181:17\n@@ -225,11 +193,7 @@ help: add a dummy let to cause `tuple` to be fully captured\n    |\n LL ~         let c = || {\n LL +             let _ = &tuple;\n-LL +\n-LL +\n-LL +\n-LL +             tuple.0;\n- ...\n+   |\n \n error: aborting due to 9 previous errors\n "}]}