{"sha": "3e1dd20230ef2926677e45dfef209b68a1e89c74", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNlMWRkMjAyMzBlZjI5MjY2NzdlNDVkZmVmMjA5YjY4YTFlODljNzQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-03-30T18:53:05Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-03-30T18:53:05Z"}, "message": "Auto merge of #5373 - flip1995:doc_release_backport, r=Manishearth\n\nDocument how to create releases and backports\n\nThis PR adds documentation on how to create Clippy releases and backports.\n\nThis PR also introduces a new backport/release process for Clippy:\n\n- A beta branch is introduced: https://github.com/rust-lang/rust-clippy/tree/beta\n- Backports are now done by PRs to the `beta` branch\n- also commits to the beta branch will be deployed, so that the documentation page has a tab for the Clippy beta release.\n\nThis has two advantages:\n\n1. The Clippy release process is closer to the Rust release process: stable releases are tagged, the beta release has its own branch\n2. Backports to beta are easier, since they don't need as much coordination as before. No new branch has to be created for a backport. Just a PR to the beta branch, like in the Rust repo.\u00b9\n\nI tested the deployment here: https://github.com/flip1995/rust-clippy/runs/534465081 and it created this commit: https://github.com/flip1995/rust-clippy/commit/734503377e5ade55864ee674c010227a780cbf34, so it works.\n\nr? @Manishearth your thoughts?\n\n[Rendered (release.md)](https://github.com/flip1995/rust-clippy/blob/doc_release_backport/doc/release.md)\n[Rendered (backport.md)](https://github.com/flip1995/rust-clippy/blob/doc_release_backport/doc/backport.md)\n\nchangelog: none\n\n---\n\n\u00b9: For this, we may have to modify the CI, so that beta rustc is used to check PRs to beta (or we test it locally, and merge it without bors)", "tree": {"sha": "715bdb3ba3d32266fd91e54a6ebfa38ef5ea9dd1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/715bdb3ba3d32266fd91e54a6ebfa38ef5ea9dd1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3e1dd20230ef2926677e45dfef209b68a1e89c74", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3e1dd20230ef2926677e45dfef209b68a1e89c74", "html_url": "https://github.com/rust-lang/rust/commit/3e1dd20230ef2926677e45dfef209b68a1e89c74", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3e1dd20230ef2926677e45dfef209b68a1e89c74/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "563da5248d867e7147b084161bee040a241a7419", "url": "https://api.github.com/repos/rust-lang/rust/commits/563da5248d867e7147b084161bee040a241a7419", "html_url": "https://github.com/rust-lang/rust/commit/563da5248d867e7147b084161bee040a241a7419"}, {"sha": "2a4493aaa6a9f728fcfb9aa259b26822f53b5fd1", "url": "https://api.github.com/repos/rust-lang/rust/commits/2a4493aaa6a9f728fcfb9aa259b26822f53b5fd1", "html_url": "https://github.com/rust-lang/rust/commit/2a4493aaa6a9f728fcfb9aa259b26822f53b5fd1"}], "stats": {"total": 168, "additions": 167, "deletions": 1}, "files": [{"sha": "3f425e5b7258d52580b162ba1b6aecac643d8191", "filename": ".github/deploy.sh", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/3e1dd20230ef2926677e45dfef209b68a1e89c74/.github%2Fdeploy.sh", "raw_url": "https://github.com/rust-lang/rust/raw/3e1dd20230ef2926677e45dfef209b68a1e89c74/.github%2Fdeploy.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fdeploy.sh?ref=3e1dd20230ef2926677e45dfef209b68a1e89c74", "patch": "@@ -17,6 +17,11 @@ if [[ -n $TAG_NAME ]]; then\n   ln -s \"$TAG_NAME\" out/stable\n fi\n \n+if [[ $BETA = \"true\" ]]; then\n+  echo \"Update documentation for the beta release\"\n+  cp -r out/master out/beta\n+fi\n+\n # Generate version index that is shown as root index page\n cp util/gh-pages/versions.html out/index.html\n \n@@ -35,12 +40,15 @@ fi\n \n if [[ -n $TAG_NAME ]]; then\n   # Add the new dir\n-  git add $TAG_NAME\n+  git add \"$TAG_NAME\"\n   # Update the symlink\n   git add stable\n   # Update versions file\n   git add versions.json\n   git commit -m \"Add documentation for ${TAG_NAME} release: ${SHA}\"\n+elif [[ $BETA = \"true\" ]]; then\n+  git add beta\n+  git commit -m \"Automatic deploy to GitHub Pages (beta): ${SHA}\"\n else\n   git add .\n   git commit -m \"Automatic deploy to GitHub Pages: ${SHA}\""}, {"sha": "10033daf0aedb428e9dc1f71a3f072f57aa3f468", "filename": ".github/workflows/deploy.yml", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3e1dd20230ef2926677e45dfef209b68a1e89c74/.github%2Fworkflows%2Fdeploy.yml", "raw_url": "https://github.com/rust-lang/rust/raw/3e1dd20230ef2926677e45dfef209b68a1e89c74/.github%2Fworkflows%2Fdeploy.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fworkflows%2Fdeploy.yml?ref=3e1dd20230ef2926677e45dfef209b68a1e89c74", "patch": "@@ -4,6 +4,7 @@ on:\n   push:\n     branches:\n       - master\n+      - beta\n     tags:\n       - rust-1.**\n \n@@ -34,6 +35,9 @@ jobs:\n       run: |\n         TAG=$(basename ${{ github.ref }})\n         echo \"::set-env name=TAG_NAME::$TAG\"\n+    - name: Set beta to true\n+      if: github.ref == 'refs/heads/beta'\n+      run: echo \"::set-env name=BETA::true\"\n     - name: Deploy\n       run: |\n         eval \"$(ssh-agent -s)\""}, {"sha": "259696658eababfe7496dfe0907f2d15f72399a6", "filename": "doc/backport.md", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/3e1dd20230ef2926677e45dfef209b68a1e89c74/doc%2Fbackport.md", "raw_url": "https://github.com/rust-lang/rust/raw/3e1dd20230ef2926677e45dfef209b68a1e89c74/doc%2Fbackport.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Fbackport.md?ref=3e1dd20230ef2926677e45dfef209b68a1e89c74", "patch": "@@ -0,0 +1,50 @@\n+# Backport Changes\n+\n+Sometimes it is necessary to backport changes to the beta release of Clippy.\n+Backports in Clippy are rare and should be approved by the Clippy team. For\n+example, a backport is done, if a crucial ICE was fixed or a lint is broken to a\n+point, that it has to be disabled, before landing on stable.\n+\n+Backports are done to the `beta` release of Clippy. Backports to stable Clippy\n+releases basically don't exist, since this would require a Rust point release,\n+which is almost never justifiable for a Clippy fix.\n+\n+\n+## Backport the changes\n+\n+Backports are done on the beta branch of the Clippy repository.\n+\n+```bash\n+# Assuming the current directory corresponds to the Clippy repository\n+$ git checkout beta\n+$ git checkout -b backport\n+$ git cherry-pick <SHA>  # `<SHA>` is the commit hash of the commit, that should be backported\n+$ git push origin backport\n+```\n+\n+After this, you can open a PR to the `beta` branch of the Clippy repository.\n+\n+\n+## Update Clippy in the Rust Repository\n+\n+This step must be done, **after** the PR of the previous step was merged.\n+\n+After the backport landed in the Clippy repository, also the Clippy version on\n+the Rust `beta` branch has to be updated.\n+\n+```bash\n+# Assuming the current directory corresponds to the Rust repository\n+$ git checkout beta\n+$ git checkout -b clippy_backport\n+$ pushd src/tools/clippy\n+$ git fetch\n+$ git checkout beta\n+$ popd\n+$ git add src/tools/clippy\n+\u00a7 git commit -m \"Update Clippy\"\n+$ git push origin clippy_backport\n+```\n+\n+After this you can open a PR to the `beta` branch of the Rust repository. In\n+this PR you should tag the Clippy team member, that agreed to the backport or\n+the `@rust-lang/clippy` team. Make sure to add `[beta]` to the title of the PR."}, {"sha": "25ddff4c48ca00a2f2cf19478d009da016b47f89", "filename": "doc/release.md", "status": "added", "additions": 101, "deletions": 0, "changes": 101, "blob_url": "https://github.com/rust-lang/rust/blob/3e1dd20230ef2926677e45dfef209b68a1e89c74/doc%2Frelease.md", "raw_url": "https://github.com/rust-lang/rust/raw/3e1dd20230ef2926677e45dfef209b68a1e89c74/doc%2Frelease.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Frelease.md?ref=3e1dd20230ef2926677e45dfef209b68a1e89c74", "patch": "@@ -0,0 +1,101 @@\n+# Release a new Clippy Version\n+\n+_NOTE: This document is probably only relevant to you, if you're a member of the\n+Clippy team._\n+\n+Clippy is released together with stable Rust releases. The dates for these\n+releases can be found at the [Rust Forge]. This document explains the necessary\n+steps to create a Clippy release.\n+\n+1. [Find the Clippy commit](#find-the-clippy-commit)\n+2. [Tag the stable commit](#tag-the-stable-commit)\n+3. [Update `CHANGELOG.md`](#update-changelogmd)\n+4. [Remerge the `beta` branch](#remerge-the-beta-branch)\n+5. [Update the `beta` branch](#update-the-beta-branch)\n+\n+_NOTE: This document is for stable Rust releases, not for point releases. For\n+point releases, step 1. and 2. should be enough._\n+\n+[Rust Forge]: https://forge.rust-lang.org/\n+\n+\n+## Find the Clippy commit\n+\n+The first step is to tag the Clippy commit, that is included in the stable Rust\n+release. This commit can be found in the Rust repository.\n+\n+```bash\n+# Assuming the current directory corresponds to the Rust repository\n+$ git fetch upstream    # `upstream` is the `rust-lang/rust` remote\n+$ git checkout 1.XX.0   # XX should be exchanged with the corresponding version\n+$ git submodule update\n+$ SHA=$(git submodule status src/tools/clippy | awk '{print $1}')\n+```\n+\n+\n+## Tag the stable commit\n+\n+After finding the Clippy commit, it can be tagged with the release number.\n+\n+```bash\n+# Assuming the current directory corresponds to the Clippy repository\n+$ git checkout $SHA\n+$ git tag rust-1.XX.0               # XX should be exchanged with the corresponding version\n+$ git push upstream master --tags   # `upstream` is the `rust-lang/rust-clippy` remote\n+```\n+\n+After this, the release should be available on the Clippy [release page].\n+\n+[release page]: https://github.com/rust-lang/rust-clippy/releases\n+\n+\n+## Update `CHANGELOG.md`\n+\n+For this see the document on [how to update the changelog].\n+\n+[how to update the changelog]: https://github.com/rust-lang/rust-clippy/blob/master/doc/changelog_update.md\n+\n+\n+## Remerge the `beta` branch\n+\n+This step is only necessary, if since the last release something was backported\n+to the beta Rust release. The remerge is then necessary, to make sure that the\n+Clippy commit, that was used by the now stable Rust release, persists in the\n+tree of the Clippy repository.\n+\n+```bash\n+# Assuming `HEAD` is the current `master` branch of rust-lang/rust-clippy\n+$ git checkout -b backport_remerge\n+$ git merge beta\n+$ git diff  # This diff has to be empty, otherwise something with the remerge failed\n+$ git push origin backport_remerge  # This can be pushed to your fork\n+```\n+\n+After this, open a PR to the master branch. In this PR, the commit hash of the\n+`HEAD` of the `beta` branch must exists. In addition to that, no files should\n+be changed by this PR.\n+\n+\n+## Update the `beta` branch\n+\n+This step must be done **after** the PR of the previous step was merged.\n+\n+First, the Clippy commit of the `beta` branch of the Rust repository has to be\n+determined.\n+\n+```bash\n+# Assuming the current directory corresponds to the Rust repository\n+$ git checkout beta\n+$ git submodule update\n+$ BETA_SHA=$(git submodule status src/tools/clippy | awk '{print $1}')\n+```\n+\n+After finding the Clippy commit, the `beta` branch in the Clippy repository can\n+be updated.\n+\n+```bash\n+# Assuming the current directory corresponds to the Clippy repository\n+$ git checkout beta\n+$ git rebase $BETA_SHA\n+$ git push upstream beta [-f]   # This requires a force push, if a remerge was done\n+```"}, {"sha": "6e810a349bfccb640adbabfd9ce97d258bfd91d0", "filename": "util/gh-pages/versions.html", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3e1dd20230ef2926677e45dfef209b68a1e89c74/util%2Fgh-pages%2Fversions.html", "raw_url": "https://github.com/rust-lang/rust/raw/3e1dd20230ef2926677e45dfef209b68a1e89c74/util%2Fgh-pages%2Fversions.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/util%2Fgh-pages%2Fversions.html?ref=3e1dd20230ef2926677e45dfef209b68a1e89c74", "patch": "@@ -65,6 +65,7 @@ <h3 class=\"panel-title\">\n             $scope.versionOrder = function(v) {\n                 if (v === 'master') { return Infinity; }\n                 if (v === 'stable') { return Number.MAX_VALUE; }\n+                if (v === 'beta') { return Number.MAX_VALUE - 1; }\n \n                 return $scope.normalizeVersion(v)\n                     .split('.')"}, {"sha": "5cdc7313f543906479d47f95c6b5be5edd189cc5", "filename": "util/versions.py", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3e1dd20230ef2926677e45dfef209b68a1e89c74/util%2Fversions.py", "raw_url": "https://github.com/rust-lang/rust/raw/3e1dd20230ef2926677e45dfef209b68a1e89c74/util%2Fversions.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/util%2Fversions.py?ref=3e1dd20230ef2926677e45dfef209b68a1e89c74", "patch": "@@ -12,6 +12,8 @@ def key(v):\n         return float('inf')\n     if v == 'stable':\n         return sys.maxsize\n+    if v == 'beta':\n+        return sys.maxsize - 1\n \n     v = v.replace('v', '').replace('rust-', '')\n "}]}