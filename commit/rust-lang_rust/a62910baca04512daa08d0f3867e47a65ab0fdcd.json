{"sha": "a62910baca04512daa08d0f3867e47a65ab0fdcd", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE2MjkxMGJhY2EwNDUxMmRhYTA4ZDBmMzg2N2U0N2E2NWFiMGZkY2Q=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-12-06T08:01:14Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-12-06T08:01:14Z"}, "message": "Auto merge of #46521 - SimonSapin:uninhabited-variants, r=eddyb\n\nrustc_trans: don't write discriminants for uninhabited variants\n\nFixes #46519.\n\nPatch as suggested by eddyb: https://github.com/rust-lang/rust/issues/46519#issuecomment-349443519", "tree": {"sha": "c930438cc34ec104066ba9d035206fdebe68c0e8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c930438cc34ec104066ba9d035206fdebe68c0e8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a62910baca04512daa08d0f3867e47a65ab0fdcd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a62910baca04512daa08d0f3867e47a65ab0fdcd", "html_url": "https://github.com/rust-lang/rust/commit/a62910baca04512daa08d0f3867e47a65ab0fdcd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a62910baca04512daa08d0f3867e47a65ab0fdcd/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6a5895c433f53b77e06071ee5b696c6f889d65ed", "url": "https://api.github.com/repos/rust-lang/rust/commits/6a5895c433f53b77e06071ee5b696c6f889d65ed", "html_url": "https://github.com/rust-lang/rust/commit/6a5895c433f53b77e06071ee5b696c6f889d65ed"}, {"sha": "d4fabb987b753c0856c22b4d2252abdbfd33f76c", "url": "https://api.github.com/repos/rust-lang/rust/commits/d4fabb987b753c0856c22b4d2252abdbfd33f76c", "html_url": "https://github.com/rust-lang/rust/commit/d4fabb987b753c0856c22b4d2252abdbfd33f76c"}], "stats": {"total": 49, "additions": 42, "deletions": 7}, "files": [{"sha": "47d0e6f4ecfa7460dfab70083a13a9d09beedbaf", "filename": "src/librustc_trans/mir/place.rs", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/a62910baca04512daa08d0f3867e47a65ab0fdcd/src%2Flibrustc_trans%2Fmir%2Fplace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a62910baca04512daa08d0f3867e47a65ab0fdcd/src%2Flibrustc_trans%2Fmir%2Fplace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fmir%2Fplace.rs?ref=a62910baca04512daa08d0f3867e47a65ab0fdcd", "patch": "@@ -359,14 +359,12 @@ impl<'a, 'tcx> PlaceRef<'tcx> {\n     /// Set the discriminant for a new value of the given case of the given\n     /// representation.\n     pub fn trans_set_discr(&self, bcx: &Builder<'a, 'tcx>, variant_index: usize) {\n-        match self.layout.variants {\n+            if self.layout.for_variant(bcx.ccx, variant_index).abi == layout::Abi::Uninhabited {\n+                return;\n+            }\n+            match self.layout.variants {\n             layout::Variants::Single { index } => {\n-                if index != variant_index {\n-                    // If the layout of an enum is `Single`, all\n-                    // other variants are necessarily uninhabited.\n-                    assert_eq!(self.layout.for_variant(bcx.ccx, variant_index).abi,\n-                               layout::Abi::Uninhabited);\n-                }\n+                assert_eq!(index, variant_index);\n             }\n             layout::Variants::Tagged { .. } => {\n                 let ptr = self.project_field(bcx, 0);"}, {"sha": "878cae4e387f4fd01c998b9898d7a7e452c57c07", "filename": "src/test/run-pass/issue-46519.rs", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/a62910baca04512daa08d0f3867e47a65ab0fdcd/src%2Ftest%2Frun-pass%2Fissue-46519.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a62910baca04512daa08d0f3867e47a65ab0fdcd/src%2Ftest%2Frun-pass%2Fissue-46519.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-46519.rs?ref=a62910baca04512daa08d0f3867e47a65ab0fdcd", "patch": "@@ -0,0 +1,37 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// compile-flags:--test -O\n+\n+#[test]\n+#[should_panic(expected = \"creating inhabited type\")]\n+fn test() {\n+    FontLanguageOverride::system_font(SystemFont::new());\n+}\n+\n+pub enum FontLanguageOverride {\n+    Normal,\n+    Override(&'static str),\n+    System(SystemFont)\n+}\n+\n+pub enum SystemFont {}\n+\n+impl FontLanguageOverride {\n+    fn system_font(f: SystemFont) -> Self {\n+        FontLanguageOverride::System(f)\n+    }\n+}\n+\n+impl SystemFont {\n+    fn new() -> Self {\n+        panic!(\"creating inhabited type\")\n+    }\n+}"}]}