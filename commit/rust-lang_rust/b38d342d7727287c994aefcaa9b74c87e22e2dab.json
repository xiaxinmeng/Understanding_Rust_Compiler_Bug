{"sha": "b38d342d7727287c994aefcaa9b74c87e22e2dab", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIzOGQzNDJkNzcyNzI4N2M5OTRhZWZjYWE5Yjc0Yzg3ZTIyZTJkYWI=", "commit": {"author": {"name": "Caleb Zulawski", "email": "caleb.zulawski@gmail.com", "date": "2021-02-13T05:41:58Z"}, "committer": {"name": "Caleb Zulawski", "email": "caleb.zulawski@gmail.com", "date": "2021-02-15T23:22:24Z"}, "message": "Simplify test creation", "tree": {"sha": "dc60cf837da670a72a7a26d54e4716505e6f2c1d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dc60cf837da670a72a7a26d54e4716505e6f2c1d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b38d342d7727287c994aefcaa9b74c87e22e2dab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b38d342d7727287c994aefcaa9b74c87e22e2dab", "html_url": "https://github.com/rust-lang/rust/commit/b38d342d7727287c994aefcaa9b74c87e22e2dab", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b38d342d7727287c994aefcaa9b74c87e22e2dab/comments", "author": {"login": "calebzulawski", "id": 563826, "node_id": "MDQ6VXNlcjU2MzgyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/563826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebzulawski", "html_url": "https://github.com/calebzulawski", "followers_url": "https://api.github.com/users/calebzulawski/followers", "following_url": "https://api.github.com/users/calebzulawski/following{/other_user}", "gists_url": "https://api.github.com/users/calebzulawski/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebzulawski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebzulawski/subscriptions", "organizations_url": "https://api.github.com/users/calebzulawski/orgs", "repos_url": "https://api.github.com/users/calebzulawski/repos", "events_url": "https://api.github.com/users/calebzulawski/events{/privacy}", "received_events_url": "https://api.github.com/users/calebzulawski/received_events", "type": "User", "site_admin": false}, "committer": {"login": "calebzulawski", "id": 563826, "node_id": "MDQ6VXNlcjU2MzgyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/563826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebzulawski", "html_url": "https://github.com/calebzulawski", "followers_url": "https://api.github.com/users/calebzulawski/followers", "following_url": "https://api.github.com/users/calebzulawski/following{/other_user}", "gists_url": "https://api.github.com/users/calebzulawski/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebzulawski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebzulawski/subscriptions", "organizations_url": "https://api.github.com/users/calebzulawski/orgs", "repos_url": "https://api.github.com/users/calebzulawski/repos", "events_url": "https://api.github.com/users/calebzulawski/events{/privacy}", "received_events_url": "https://api.github.com/users/calebzulawski/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "223daea83ea60c725944e62815ffae2639a8d652", "url": "https://api.github.com/repos/rust-lang/rust/commits/223daea83ea60c725944e62815ffae2639a8d652", "html_url": "https://github.com/rust-lang/rust/commit/223daea83ea60c725944e62815ffae2639a8d652"}], "stats": {"total": 78, "additions": 46, "deletions": 32}, "files": [{"sha": "77dafe38a10ab9de7616b535535ebe931d273dd1", "filename": "crates/test_helpers/src/lib.rs", "status": "modified", "additions": 46, "deletions": 32, "changes": 78, "blob_url": "https://github.com/rust-lang/rust/blob/b38d342d7727287c994aefcaa9b74c87e22e2dab/crates%2Ftest_helpers%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b38d342d7727287c994aefcaa9b74c87e22e2dab/crates%2Ftest_helpers%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Ftest_helpers%2Fsrc%2Flib.rs?ref=b38d342d7727287c994aefcaa9b74c87e22e2dab", "patch": "@@ -186,44 +186,58 @@ pub fn test_binary_scalar_lhs_elementwise<\n }\n \n #[macro_export]\n-#[doc(hidden)]\n-macro_rules! test_lanes_impl {\n+macro_rules! test_lanes {\n     {\n-        fn $test:ident<const $lanes:ident: usize>() $body:tt\n-\n-        $($name:ident => $lanes_lit:literal,)*\n+        $(fn $test:ident<const $lanes:ident: usize>() $body:tt)*\n     } => {\n-        mod $test {\n-            use super::*;\n-            $(\n+        $(\n+            mod $test {\n+                use super::*;\n+\n+                fn implementation<const $lanes: usize>() $body\n+\n                 #[test]\n                 #[cfg_attr(target_arch = \"wasm32\", wasm_bindgen_test)]\n-                fn $name() {\n-                    const $lanes: usize = $lanes_lit;\n-                    $body\n+                fn lanes_1() {\n+                    implementation::<1>();\n                 }\n-            )*\n-        }\n-    }\n-}\n \n-#[macro_export]\n-macro_rules! test_lanes {\n-    {\n-        $(fn $test:ident<const $lanes:ident: usize>() $body:tt)*\n-    } => {\n-        $(\n-        $crate::test_lanes_impl! {\n-            fn $test<const $lanes: usize>() $body\n-\n-            lanes_1 => 1,\n-            lanes_2 => 2,\n-            lanes_4 => 4,\n-            lanes_8 => 8,\n-            lanes_16 => 16,\n-            lanes_32 => 32,\n-            lanes_64 => 64,\n-        }\n+                #[test]\n+                #[cfg_attr(target_arch = \"wasm32\", wasm_bindgen_test)]\n+                fn lanes_2() {\n+                    implementation::<2>();\n+                }\n+\n+                #[test]\n+                #[cfg_attr(target_arch = \"wasm32\", wasm_bindgen_test)]\n+                fn lanes_4() {\n+                    implementation::<4>();\n+                }\n+\n+                #[test]\n+                #[cfg_attr(target_arch = \"wasm32\", wasm_bindgen_test)]\n+                fn lanes_8() {\n+                    implementation::<8>();\n+                }\n+\n+                #[test]\n+                #[cfg_attr(target_arch = \"wasm32\", wasm_bindgen_test)]\n+                fn lanes_16() {\n+                    implementation::<16>();\n+                }\n+\n+                #[test]\n+                #[cfg_attr(target_arch = \"wasm32\", wasm_bindgen_test)]\n+                fn lanes_32() {\n+                    implementation::<32>();\n+                }\n+\n+                #[test]\n+                #[cfg_attr(target_arch = \"wasm32\", wasm_bindgen_test)]\n+                fn lanes_64() {\n+                    implementation::<64>();\n+                }\n+            }\n         )*\n     }\n }"}]}