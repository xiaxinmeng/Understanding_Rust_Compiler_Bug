{"sha": "459fe6ad558e58db68d622ceacb79e3e8f95c35b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ1OWZlNmFkNTU4ZTU4ZGI2OGQ2MjJjZWFjYjc5ZTNlOGY5NWMzNWI=", "commit": {"author": {"name": "Benjamin Peterson", "email": "benjamin@python.org", "date": "2012-09-27T19:03:44Z"}, "committer": {"name": "Benjamin Peterson", "email": "benjamin@python.org", "date": "2012-09-27T19:05:06Z"}, "message": "factor out common lines", "tree": {"sha": "5f942106bd6496730a78ef085ee4f75f46a9a0d9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5f942106bd6496730a78ef085ee4f75f46a9a0d9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/459fe6ad558e58db68d622ceacb79e3e8f95c35b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/459fe6ad558e58db68d622ceacb79e3e8f95c35b", "html_url": "https://github.com/rust-lang/rust/commit/459fe6ad558e58db68d622ceacb79e3e8f95c35b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/459fe6ad558e58db68d622ceacb79e3e8f95c35b/comments", "author": {"login": "benjaminp", "id": 219470, "node_id": "MDQ6VXNlcjIxOTQ3MA==", "avatar_url": "https://avatars.githubusercontent.com/u/219470?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benjaminp", "html_url": "https://github.com/benjaminp", "followers_url": "https://api.github.com/users/benjaminp/followers", "following_url": "https://api.github.com/users/benjaminp/following{/other_user}", "gists_url": "https://api.github.com/users/benjaminp/gists{/gist_id}", "starred_url": "https://api.github.com/users/benjaminp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benjaminp/subscriptions", "organizations_url": "https://api.github.com/users/benjaminp/orgs", "repos_url": "https://api.github.com/users/benjaminp/repos", "events_url": "https://api.github.com/users/benjaminp/events{/privacy}", "received_events_url": "https://api.github.com/users/benjaminp/received_events", "type": "User", "site_admin": false}, "committer": {"login": "benjaminp", "id": 219470, "node_id": "MDQ6VXNlcjIxOTQ3MA==", "avatar_url": "https://avatars.githubusercontent.com/u/219470?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benjaminp", "html_url": "https://github.com/benjaminp", "followers_url": "https://api.github.com/users/benjaminp/followers", "following_url": "https://api.github.com/users/benjaminp/following{/other_user}", "gists_url": "https://api.github.com/users/benjaminp/gists{/gist_id}", "starred_url": "https://api.github.com/users/benjaminp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benjaminp/subscriptions", "organizations_url": "https://api.github.com/users/benjaminp/orgs", "repos_url": "https://api.github.com/users/benjaminp/repos", "events_url": "https://api.github.com/users/benjaminp/events{/privacy}", "received_events_url": "https://api.github.com/users/benjaminp/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7e7411e6209b10d99bc37c084c8ac45fbb706431", "url": "https://api.github.com/repos/rust-lang/rust/commits/7e7411e6209b10d99bc37c084c8ac45fbb706431", "html_url": "https://github.com/rust-lang/rust/commit/7e7411e6209b10d99bc37c084c8ac45fbb706431"}], "stats": {"total": 16, "additions": 5, "deletions": 11}, "files": [{"sha": "243f01c1e3a3d8a35972fe1000d16df1dd85ebb0", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 5, "deletions": 11, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/459fe6ad558e58db68d622ceacb79e3e8f95c35b/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/459fe6ad558e58db68d622ceacb79e3e8f95c35b/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=459fe6ad558e58db68d622ceacb79e3e8f95c35b", "patch": "@@ -2227,17 +2227,11 @@ impl parser {\n         }\n \n         let lo = self.span.lo;\n-        if self.eat_keyword(~\"unsafe\") {\n-            self.expect(token::LBRACE);\n-            let {inner, next} = maybe_parse_inner_attrs_and_next(self,\n-                                                                 parse_attrs);\n-            return (inner, self.parse_block_tail_(lo, unsafe_blk, next));\n-        } else {\n-            self.expect(token::LBRACE);\n-            let {inner, next} = maybe_parse_inner_attrs_and_next(self,\n-                                                                 parse_attrs);\n-            return (inner, self.parse_block_tail_(lo, default_blk, next));\n-        }\n+        let us = self.eat_keyword(~\"unsafe\");\n+        self.expect(token::LBRACE);\n+        let {inner, next} = maybe_parse_inner_attrs_and_next(self,\n+                                                             parse_attrs);\n+        return (inner, self.parse_block_tail_(lo, if us { unsafe_blk } else { default_blk }, next));\n     }\n \n     fn parse_block_no_value() -> blk {"}]}