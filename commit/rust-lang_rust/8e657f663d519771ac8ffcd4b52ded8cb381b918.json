{"sha": "8e657f663d519771ac8ffcd4b52ded8cb381b918", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhlNjU3ZjY2M2Q1MTk3NzFhYzhmZmNkNGI1MmRlZDhjYjM4MWI5MTg=", "commit": {"author": {"name": "Paul Daniel Faria", "email": "Nashenas88@users.noreply.github.com", "date": "2020-08-07T00:07:42Z"}, "committer": {"name": "Paul Daniel Faria", "email": "Nashenas88@users.noreply.github.com", "date": "2020-08-07T00:07:42Z"}, "message": "Mark static mutable names as unsafe", "tree": {"sha": "0b612b418d873a1f44753d8030ff2ec234109cad", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0b612b418d873a1f44753d8030ff2ec234109cad"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8e657f663d519771ac8ffcd4b52ded8cb381b918", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8e657f663d519771ac8ffcd4b52ded8cb381b918", "html_url": "https://github.com/rust-lang/rust/commit/8e657f663d519771ac8ffcd4b52ded8cb381b918", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8e657f663d519771ac8ffcd4b52ded8cb381b918/comments", "author": {"login": "Nashenas88", "id": 1673130, "node_id": "MDQ6VXNlcjE2NzMxMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1673130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nashenas88", "html_url": "https://github.com/Nashenas88", "followers_url": "https://api.github.com/users/Nashenas88/followers", "following_url": "https://api.github.com/users/Nashenas88/following{/other_user}", "gists_url": "https://api.github.com/users/Nashenas88/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nashenas88/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nashenas88/subscriptions", "organizations_url": "https://api.github.com/users/Nashenas88/orgs", "repos_url": "https://api.github.com/users/Nashenas88/repos", "events_url": "https://api.github.com/users/Nashenas88/events{/privacy}", "received_events_url": "https://api.github.com/users/Nashenas88/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Nashenas88", "id": 1673130, "node_id": "MDQ6VXNlcjE2NzMxMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1673130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nashenas88", "html_url": "https://github.com/Nashenas88", "followers_url": "https://api.github.com/users/Nashenas88/followers", "following_url": "https://api.github.com/users/Nashenas88/following{/other_user}", "gists_url": "https://api.github.com/users/Nashenas88/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nashenas88/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nashenas88/subscriptions", "organizations_url": "https://api.github.com/users/Nashenas88/orgs", "repos_url": "https://api.github.com/users/Nashenas88/repos", "events_url": "https://api.github.com/users/Nashenas88/events{/privacy}", "received_events_url": "https://api.github.com/users/Nashenas88/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6be528da0de45606498a9755ad2c54f3bc41dc6c", "url": "https://api.github.com/repos/rust-lang/rust/commits/6be528da0de45606498a9755ad2c54f3bc41dc6c", "html_url": "https://github.com/rust-lang/rust/commit/6be528da0de45606498a9755ad2c54f3bc41dc6c"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "89efe71dabc3641b9352d68526880feb8a17f6f4", "filename": "crates/ra_ide/src/syntax_highlighting.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8e657f663d519771ac8ffcd4b52ded8cb381b918/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e657f663d519771ac8ffcd4b52ded8cb381b918/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting.rs?ref=8e657f663d519771ac8ffcd4b52ded8cb381b918", "patch": "@@ -677,6 +677,7 @@ fn highlight_name(db: &RootDatabase, def: Definition) -> Highlight {\n                 let mut h = Highlight::new(HighlightTag::Static);\n                 if s.is_mut(db) {\n                     h |= HighlightModifier::Mutable;\n+                    h |= HighlightModifier::Unsafe;\n                 }\n                 return h;\n             }"}, {"sha": "87d8c15568547db52256ca2138f4fe14a23ca5ce", "filename": "crates/ra_ide/test_data/highlight_unsafe.html", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8e657f663d519771ac8ffcd4b52ded8cb381b918/crates%2Fra_ide%2Ftest_data%2Fhighlight_unsafe.html", "raw_url": "https://github.com/rust-lang/rust/raw/8e657f663d519771ac8ffcd4b52ded8cb381b918/crates%2Fra_ide%2Ftest_data%2Fhighlight_unsafe.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Ftest_data%2Fhighlight_unsafe.html?ref=8e657f663d519771ac8ffcd4b52ded8cb381b918", "patch": "@@ -47,7 +47,7 @@\n     <span class=\"field declaration\">a</span><span class=\"punctuation\">:</span> <span class=\"builtin_type\">u8</span>\n <span class=\"punctuation\">}</span>\n \n-<span class=\"keyword\">static</span> <span class=\"keyword\">mut</span> <span class=\"static declaration mutable\">global_mut</span><span class=\"punctuation\">:</span> <span class=\"struct\">TypeForStaticMut</span> <span class=\"operator\">=</span> <span class=\"struct\">TypeForStaticMut</span> <span class=\"punctuation\">{</span> <span class=\"field\">a</span><span class=\"punctuation\">:</span> <span class=\"numeric_literal\">0</span> <span class=\"punctuation\">}</span><span class=\"punctuation\">;</span>\n+<span class=\"keyword\">static</span> <span class=\"keyword\">mut</span> <span class=\"static declaration mutable unsafe\">global_mut</span><span class=\"punctuation\">:</span> <span class=\"struct\">TypeForStaticMut</span> <span class=\"operator\">=</span> <span class=\"struct\">TypeForStaticMut</span> <span class=\"punctuation\">{</span> <span class=\"field\">a</span><span class=\"punctuation\">:</span> <span class=\"numeric_literal\">0</span> <span class=\"punctuation\">}</span><span class=\"punctuation\">;</span>\n \n <span class=\"keyword\">fn</span> <span class=\"function declaration\">main</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n     <span class=\"keyword\">let</span> <span class=\"variable declaration\">x</span> <span class=\"operator\">=</span> <span class=\"operator\">&</span><span class=\"numeric_literal\">5</span> <span class=\"keyword\">as</span> <span class=\"keyword\">*</span><span class=\"keyword\">const</span> <span class=\"builtin_type\">usize</span><span class=\"punctuation\">;</span>\n@@ -56,6 +56,6 @@\n         <span class=\"struct\">HasUnsafeFn</span><span class=\"punctuation\">.</span><span class=\"function unsafe\">unsafe_method</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n         <span class=\"keyword\">let</span> <span class=\"variable declaration\">y</span> <span class=\"operator\">=</span> <span class=\"operator unsafe\">*</span><span class=\"punctuation\">(</span><span class=\"variable\">x</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n         <span class=\"keyword\">let</span> <span class=\"variable declaration\">z</span> <span class=\"operator\">=</span> <span class=\"numeric_literal\">-</span><span class=\"variable\">x</span><span class=\"punctuation\">;</span>\n-        <span class=\"keyword\">let</span> <span class=\"variable declaration\">a</span> <span class=\"operator\">=</span> <span class=\"static mutable\">global_mut</span><span class=\"punctuation\">.</span><span class=\"field\">a</span><span class=\"punctuation\">;</span>\n+        <span class=\"keyword\">let</span> <span class=\"variable declaration\">a</span> <span class=\"operator\">=</span> <span class=\"static mutable unsafe\">global_mut</span><span class=\"punctuation\">.</span><span class=\"field\">a</span><span class=\"punctuation\">;</span>\n     <span class=\"punctuation\">}</span>\n <span class=\"punctuation\">}</span></code></pre>\n\\ No newline at end of file"}, {"sha": "8e0160eee5b47dd945c106d23d47e4933f4e8b53", "filename": "crates/ra_ide/test_data/highlighting.html", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8e657f663d519771ac8ffcd4b52ded8cb381b918/crates%2Fra_ide%2Ftest_data%2Fhighlighting.html", "raw_url": "https://github.com/rust-lang/rust/raw/8e657f663d519771ac8ffcd4b52ded8cb381b918/crates%2Fra_ide%2Ftest_data%2Fhighlighting.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Ftest_data%2Fhighlighting.html?ref=8e657f663d519771ac8ffcd4b52ded8cb381b918", "patch": "@@ -64,7 +64,7 @@\n     <span class=\"punctuation\">}</span>\n <span class=\"punctuation\">}</span>\n \n-<span class=\"keyword\">static</span> <span class=\"keyword\">mut</span> <span class=\"static declaration mutable\">STATIC_MUT</span><span class=\"punctuation\">:</span> <span class=\"builtin_type\">i32</span> <span class=\"operator\">=</span> <span class=\"numeric_literal\">0</span><span class=\"punctuation\">;</span>\n+<span class=\"keyword\">static</span> <span class=\"keyword\">mut</span> <span class=\"static declaration mutable unsafe\">STATIC_MUT</span><span class=\"punctuation\">:</span> <span class=\"builtin_type\">i32</span> <span class=\"operator\">=</span> <span class=\"numeric_literal\">0</span><span class=\"punctuation\">;</span>\n \n <span class=\"keyword\">fn</span> <span class=\"function declaration\">foo</span><span class=\"punctuation\">&lt;</span><span class=\"lifetime declaration\">'a</span><span class=\"punctuation\">,</span> <span class=\"type_param declaration\">T</span><span class=\"punctuation\">&gt;</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"type_param\">T</span> <span class=\"punctuation\">{</span>\n     <span class=\"function\">foo</span><span class=\"operator\">::</span><span class=\"punctuation\">&lt;</span><span class=\"lifetime\">'a</span><span class=\"punctuation\">,</span> <span class=\"builtin_type\">i32</span><span class=\"punctuation\">&gt;</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span>\n@@ -97,7 +97,7 @@\n     <span class=\"punctuation\">}</span>\n     <span class=\"keyword unsafe\">unsafe</span> <span class=\"punctuation\">{</span>\n         <span class=\"variable mutable\">vec</span><span class=\"punctuation\">.</span><span class=\"unresolved_reference\">set_len</span><span class=\"punctuation\">(</span><span class=\"numeric_literal\">0</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n-        <span class=\"static mutable\">STATIC_MUT</span> <span class=\"operator\">=</span> <span class=\"numeric_literal\">1</span><span class=\"punctuation\">;</span>\n+        <span class=\"static mutable unsafe\">STATIC_MUT</span> <span class=\"operator\">=</span> <span class=\"numeric_literal\">1</span><span class=\"punctuation\">;</span>\n     <span class=\"punctuation\">}</span>\n \n     <span class=\"keyword control\">for</span> <span class=\"variable declaration\">e</span> <span class=\"keyword control\">in</span> <span class=\"variable mutable\">vec</span> <span class=\"punctuation\">{</span>"}]}