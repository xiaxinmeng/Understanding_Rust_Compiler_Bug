{"sha": "d6257b315be2a18ccb3a28c48a73b1619ab57df4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ2MjU3YjMxNWJlMmExOGNjYjNhMjhjNDhhNzNiMTYxOWFiNTdkZjQ=", "commit": {"author": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2013-08-07T04:08:39Z"}, "committer": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2013-08-07T21:06:50Z"}, "message": "std: remove unnecessary test from c_str.drop and use safer transmute", "tree": {"sha": "8c259d0ac445d08b987079a914e8b1dc1a47db6c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8c259d0ac445d08b987079a914e8b1dc1a47db6c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d6257b315be2a18ccb3a28c48a73b1619ab57df4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d6257b315be2a18ccb3a28c48a73b1619ab57df4", "html_url": "https://github.com/rust-lang/rust/commit/d6257b315be2a18ccb3a28c48a73b1619ab57df4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d6257b315be2a18ccb3a28c48a73b1619ab57df4/comments", "author": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e053bff5d0c83a5b36afcaf4c58a40a27162ec0f", "url": "https://api.github.com/repos/rust-lang/rust/commits/e053bff5d0c83a5b36afcaf4c58a40a27162ec0f", "html_url": "https://github.com/rust-lang/rust/commit/e053bff5d0c83a5b36afcaf4c58a40a27162ec0f"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "fef16581c020aa3718126a097b89ef2bf5cd2f12", "filename": "src/libstd/c_str.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d6257b315be2a18ccb3a28c48a73b1619ab57df4/src%2Flibstd%2Fc_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6257b315be2a18ccb3a28c48a73b1619ab57df4/src%2Flibstd%2Fc_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fc_str.rs?ref=d6257b315be2a18ccb3a28c48a73b1619ab57df4", "patch": "@@ -57,7 +57,7 @@ impl CString {\n     /// Fails if the CString is null.\n     pub fn with_mut_ref<T>(&mut self, f: &fn(*mut libc::c_char) -> T) -> T {\n         if self.buf.is_null() { fail!(\"CString is null!\"); }\n-        f(unsafe { cast::transmute(self.buf) })\n+        f(unsafe { cast::transmute_mut_unsafe(self.buf) })\n     }\n \n     /// Returns true if the CString is a null.\n@@ -99,7 +99,7 @@ impl CString {\n \n impl Drop for CString {\n     fn drop(&self) {\n-        if self.owns_buffer_ && self.buf.is_not_null() {\n+        if self.owns_buffer_ {\n             unsafe {\n                 libc::free(self.buf as *libc::c_void)\n             }"}]}