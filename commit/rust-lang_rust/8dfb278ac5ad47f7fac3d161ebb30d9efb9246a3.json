{"sha": "8dfb278ac5ad47f7fac3d161ebb30d9efb9246a3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhkZmIyNzhhYzVhZDQ3ZjdmYWMzZDE2MWViYjMwZDllZmI5MjQ2YTM=", "commit": {"author": {"name": "Christian Poveda", "email": "cpovedar@fnal.gov", "date": "2019-07-03T18:42:01Z"}, "committer": {"name": "Christian Poveda", "email": "cpovedar@fnal.gov", "date": "2019-07-03T20:59:32Z"}, "message": "Fix explicit cast test", "tree": {"sha": "0d73081357b97ff1281818ac1f7263f146b8e316", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0d73081357b97ff1281818ac1f7263f146b8e316"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8dfb278ac5ad47f7fac3d161ebb30d9efb9246a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8dfb278ac5ad47f7fac3d161ebb30d9efb9246a3", "html_url": "https://github.com/rust-lang/rust/commit/8dfb278ac5ad47f7fac3d161ebb30d9efb9246a3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8dfb278ac5ad47f7fac3d161ebb30d9efb9246a3/comments", "author": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "39d383d9e729965b406009033977cb942dc899b3", "url": "https://api.github.com/repos/rust-lang/rust/commits/39d383d9e729965b406009033977cb942dc899b3", "html_url": "https://github.com/rust-lang/rust/commit/39d383d9e729965b406009033977cb942dc899b3"}], "stats": {"total": 8, "additions": 5, "deletions": 3}, "files": [{"sha": "1b5251c91119a074e5d3286837ea5e16e4575bcf", "filename": "tests/run-pass-noseed/intptrcast.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8dfb278ac5ad47f7fac3d161ebb30d9efb9246a3/tests%2Frun-pass-noseed%2Fintptrcast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8dfb278ac5ad47f7fac3d161ebb30d9efb9246a3/tests%2Frun-pass-noseed%2Fintptrcast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass-noseed%2Fintptrcast.rs?ref=8dfb278ac5ad47f7fac3d161ebb30d9efb9246a3", "patch": "@@ -1,11 +1,13 @@\n // compile-flags: -Zmiri-seed=0000000000000000\n-fn transmute_ptr_to_int<T>(x: *const T) -> usize { \n-    unsafe { std::mem::transmute::<*const T, usize>(x) * 1 }\n+\n+// This returns a miri pointer at type usize, if the argument is a proper pointer\n+fn transmute_ptr_to_int<T>(x: *const T) -> usize {\n+    unsafe { std::mem::transmute(x) }\n }\n \n fn main() {\n     // Some casting-to-int with arithmetic.\n-    let x = &42 as *const i32 as usize; \n+    let x = &42 as *const i32 as usize;\n     let y = x * 2;\n     assert_eq!(y, x + x);\n     let z = y as u8 as usize;"}]}