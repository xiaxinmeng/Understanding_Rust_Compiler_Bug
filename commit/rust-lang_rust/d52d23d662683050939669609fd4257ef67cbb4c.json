{"sha": "d52d23d662683050939669609fd4257ef67cbb4c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ1MmQyM2Q2NjI2ODMwNTA5Mzk2Njk2MDlmZDQyNTdlZjY3Y2JiNGM=", "commit": {"author": {"name": "Taylor Cramer", "email": "cramertj@cs.washington.edu", "date": "2016-03-29T04:38:54Z"}, "committer": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-04-02T13:32:57Z"}, "message": "Erased numeric type to reduce branching", "tree": {"sha": "7133f2cea2f509892dafa6da6ef53f0f761a8768", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7133f2cea2f509892dafa6da6ef53f0f761a8768"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d52d23d662683050939669609fd4257ef67cbb4c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d52d23d662683050939669609fd4257ef67cbb4c", "html_url": "https://github.com/rust-lang/rust/commit/d52d23d662683050939669609fd4257ef67cbb4c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d52d23d662683050939669609fd4257ef67cbb4c/comments", "author": {"login": "cramertj", "id": 5963049, "node_id": "MDQ6VXNlcjU5NjMwNDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5963049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cramertj", "html_url": "https://github.com/cramertj", "followers_url": "https://api.github.com/users/cramertj/followers", "following_url": "https://api.github.com/users/cramertj/following{/other_user}", "gists_url": "https://api.github.com/users/cramertj/gists{/gist_id}", "starred_url": "https://api.github.com/users/cramertj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cramertj/subscriptions", "organizations_url": "https://api.github.com/users/cramertj/orgs", "repos_url": "https://api.github.com/users/cramertj/repos", "events_url": "https://api.github.com/users/cramertj/events{/privacy}", "received_events_url": "https://api.github.com/users/cramertj/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "106ae7da441c075aa1b83f5c021ea47f25589d05", "url": "https://api.github.com/repos/rust-lang/rust/commits/106ae7da441c075aa1b83f5c021ea47f25589d05", "html_url": "https://github.com/rust-lang/rust/commit/106ae7da441c075aa1b83f5c021ea47f25589d05"}], "stats": {"total": 15, "additions": 2, "deletions": 13}, "files": [{"sha": "e9b8e15303a53542720b074d4f42d8988787359c", "filename": "src/types.rs", "status": "modified", "additions": 2, "deletions": 13, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/d52d23d662683050939669609fd4257ef67cbb4c/src%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d52d23d662683050939669609fd4257ef67cbb4c/src%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftypes.rs?ref=d52d23d662683050939669609fd4257ef67cbb4c", "patch": "@@ -873,21 +873,10 @@ fn node_as_const_fullint(cx: &LateContext, expr: &Expr) -> Option<FullInt> {\n     match const_eval::eval_const_expr_partial(cx.tcx, expr, ExprTypeChecked, None) {\n         Ok(val) => {\n             if let Integral(const_int) = val {\n-                Some(match const_int {\n-                    I8(x) => FullInt::S(x as i64),\n-                    I16(x) => FullInt::S(x as i64),\n-                    I32(x) => FullInt::S(x as i64),\n-                    Isize(Is32(x)) => FullInt::S(x as i64),\n-                    Isize(Is64(x)) |\n-                    I64(x) => FullInt::S(x),\n+                Some(match const_int.erase_type() {\n                     InferSigned(x) => FullInt::S(x as i64),\n-                    U8(x) => FullInt::U(x as u64),\n-                    U16(x) => FullInt::U(x as u64),\n-                    U32(x) => FullInt::U(x as u64),\n-                    Usize(Us32(x)) => FullInt::U(x as u64),\n-                    Usize(Us64(x)) |\n-                    U64(x) => FullInt::U(x),\n                     Infer(x) => FullInt::U(x as u64),\n+                    _ => unreachable!(),\n                 })\n             } else {\n                 None"}]}