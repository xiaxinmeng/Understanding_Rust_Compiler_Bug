{"sha": "b2ee088c73158be66b643ace58857a842d38add8", "node_id": "C_kwDOAAsO6NoAKGIyZWUwODhjNzMxNThiZTY2YjY0M2FjZTU4ODU3YTg0MmQzOGFkZDg", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2023-05-05T03:46:26Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-05-05T03:46:26Z"}, "message": "Rollup merge of #111052 - nnethercote:fix-ice-test, r=Nilstrieb\n\nFix problems with backtraces in two ui tests.\n\n`default-backtrace-ice.rs` started started failing for me recently,\nbecause on my Ubuntu 23.04 system there are 100 stack frames, and the\ncurrent stack filtering pattern doesn't match on a stack frame with a\nthree digit number.\n\n`issue-86800.rs` can also be improved, backtrace-wise.\n\nr? `@Nilstrieb`", "tree": {"sha": "44b767ed77fd0f77c6d51694b471c265f2ea0a33", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/44b767ed77fd0f77c6d51694b471c265f2ea0a33"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b2ee088c73158be66b643ace58857a842d38add8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkVHwSCRBK7hj4Ov3rIwAArgwIACmZY09YNfR8L87O5YL4taqj\nYZ9CE4NNUMpnMDxzVjBMB4Y5ZLyhWHeZlw+t36giihmdE5JHmuVygfuW/r2994wu\nBwzIzT7tbG6mXhKWjdA3FvpxFHJbCqee9LY7Wzcy6UTI2i9gdXRYwKlmWQnlF7J3\n0m67rlp7eGGykgU8q7oYTKae2b1xajF7P06w+aV9hQNSqX/PfkkhB+E5dKF8ZlBN\nc02+Lcaa+ou6sB2PKS3k43QwL0Y9yHREksEpLXHjhS7k30YsULP8rz7pcY1lWdbc\ndB7hE4/Zt7wiTmemwY10QmZwmKDd+gsZbN+C4VSsHRoxpON/Bolv7o/Tv1suD1c=\n=CuLR\n-----END PGP SIGNATURE-----\n", "payload": "tree 44b767ed77fd0f77c6d51694b471c265f2ea0a33\nparent 18d4e22e573a8b06b5a578eb2f68e78b3531d7c5\nparent f20738dfb9b28acaa89c90bcdc6455a0dc00c4df\nauthor Yuki Okushi <jtitor@2k36.org> 1683258386 +0900\ncommitter GitHub <noreply@github.com> 1683258386 +0900\n\nRollup merge of #111052 - nnethercote:fix-ice-test, r=Nilstrieb\n\nFix problems with backtraces in two ui tests.\n\n`default-backtrace-ice.rs` started started failing for me recently,\nbecause on my Ubuntu 23.04 system there are 100 stack frames, and the\ncurrent stack filtering pattern doesn't match on a stack frame with a\nthree digit number.\n\n`issue-86800.rs` can also be improved, backtrace-wise.\n\nr? `@Nilstrieb`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b2ee088c73158be66b643ace58857a842d38add8", "html_url": "https://github.com/rust-lang/rust/commit/b2ee088c73158be66b643ace58857a842d38add8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b2ee088c73158be66b643ace58857a842d38add8/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "18d4e22e573a8b06b5a578eb2f68e78b3531d7c5", "url": "https://api.github.com/repos/rust-lang/rust/commits/18d4e22e573a8b06b5a578eb2f68e78b3531d7c5", "html_url": "https://github.com/rust-lang/rust/commit/18d4e22e573a8b06b5a578eb2f68e78b3531d7c5"}, {"sha": "f20738dfb9b28acaa89c90bcdc6455a0dc00c4df", "url": "https://api.github.com/repos/rust-lang/rust/commits/f20738dfb9b28acaa89c90bcdc6455a0dc00c4df", "html_url": "https://github.com/rust-lang/rust/commit/f20738dfb9b28acaa89c90bcdc6455a0dc00c4df"}], "stats": {"total": 43, "additions": 23, "deletions": 20}, "files": [{"sha": "ec4fda322d04f1bf3e4874be3f2944e2b827053f", "filename": "tests/ui/impl-trait/issues/issue-86800.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b2ee088c73158be66b643ace58857a842d38add8/tests%2Fui%2Fimpl-trait%2Fissues%2Fissue-86800.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2ee088c73158be66b643ace58857a842d38add8/tests%2Fui%2Fimpl-trait%2Fissues%2Fissue-86800.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimpl-trait%2Fissues%2Fissue-86800.rs?ref=b2ee088c73158be66b643ace58857a842d38add8", "patch": "@@ -1,14 +1,12 @@\n #![feature(type_alias_impl_trait)]\n \n // edition:2021\n-// unset-rustc-env:RUST_BACKTRACE\n // compile-flags:-Z treat-err-as-bug=1\n-// error-pattern:stack backtrace:\n+// error-pattern: aborting due to `-Z treat-err-as-bug=1`\n // failure-status:101\n-// normalize-stderr-test \"note: .*\" -> \"\"\n-// normalize-stderr-test \"thread 'rustc' .*\" -> \"\"\n-// normalize-stderr-test \" +[0-9]+:.*\\n\" -> \"\"\n-// normalize-stderr-test \" +at .*\\n\" -> \"\"\n+// normalize-stderr-test \".*note: .*\\n\\n\" -> \"\"\n+// normalize-stderr-test \"thread 'rustc' panicked.*\\n\" -> \"\"\n+// rustc-env:RUST_BACKTRACE=0\n \n use std::future::Future;\n "}, {"sha": "facab390d1524915c666a1adca8b6f8c262dfdae", "filename": "tests/ui/impl-trait/issues/issue-86800.stderr", "status": "modified", "additions": 1, "deletions": 13, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/b2ee088c73158be66b643ace58857a842d38add8/tests%2Fui%2Fimpl-trait%2Fissues%2Fissue-86800.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b2ee088c73158be66b643ace58857a842d38add8/tests%2Fui%2Fimpl-trait%2Fissues%2Fissue-86800.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimpl-trait%2Fissues%2Fissue-86800.stderr?ref=b2ee088c73158be66b643ace58857a842d38add8", "patch": "@@ -1,24 +1,12 @@\n error: unconstrained opaque type\n-  --> $DIR/issue-86800.rs:33:34\n+  --> $DIR/issue-86800.rs:31:34\n    |\n LL | type TransactionFuture<'__, O> = impl '__ + Future<Output = TransactionResult<O>>;\n    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = \n-\n-\n-stack backtrace:\n-\n error: the compiler unexpectedly panicked. this is a bug.\n \n-\n-\n-\n-\n-\n-\n query stack during panic:\n #0 [type_of] computing type of `TransactionFuture::{opaque#0}`\n #1 [check_mod_item_types] checking item types in top-level module\n-#2 [analysis] running analysis passes on this crate\n end of query stack"}, {"sha": "b40203c339d054df45c389ba7bae36e604d1148f", "filename": "tests/ui/panics/default-backtrace-ice.rs", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/b2ee088c73158be66b643ace58857a842d38add8/tests%2Fui%2Fpanics%2Fdefault-backtrace-ice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2ee088c73158be66b643ace58857a842d38add8/tests%2Fui%2Fpanics%2Fdefault-backtrace-ice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fpanics%2Fdefault-backtrace-ice.rs?ref=b2ee088c73158be66b643ace58857a842d38add8", "patch": "@@ -2,8 +2,20 @@\n // compile-flags:-Z treat-err-as-bug=1\n // error-pattern:stack backtrace:\n // failure-status:101\n+// ignore-msvc\n // normalize-stderr-test \"note: .*\" -> \"\"\n // normalize-stderr-test \"thread 'rustc' .*\" -> \"\"\n-// normalize-stderr-test \"  .*\\n\" -> \"\"\n+// normalize-stderr-test \" +\\d+:.*__rust_begin_short_backtrace.*\" -> \"(begin_short_backtrace)\"\n+// normalize-stderr-test \" +\\d+:.*__rust_end_short_backtrace.*\" -> \"(end_short_backtrace)\"\n+// normalize-stderr-test \" +\\d+:.*\\n\" -> \"\"\n+// normalize-stderr-test \" +at .*\\n\" -> \"\"\n+//\n+// This test makes sure that full backtraces are used for ICEs when\n+// RUST_BACKTRACE is not set. It does this by checking for the presence of\n+// `__rust_{begin,end}_short_backtrace` markers, which only appear in full\n+// backtraces. The rest of the backtrace is filtered out.\n+//\n+// Ignored on msvc becaue the `__rust_{begin,end}_short_backtrace` symbols\n+// aren't reliable.\n \n fn main() { missing_ident; }"}, {"sha": "ddbfc4e7f3a0cb82cc268353e0deb125db036786", "filename": "tests/ui/panics/default-backtrace-ice.stderr", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/b2ee088c73158be66b643ace58857a842d38add8/tests%2Fui%2Fpanics%2Fdefault-backtrace-ice.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b2ee088c73158be66b643ace58857a842d38add8/tests%2Fui%2Fpanics%2Fdefault-backtrace-ice.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fpanics%2Fdefault-backtrace-ice.stderr?ref=b2ee088c73158be66b643ace58857a842d38add8", "patch": "@@ -1,8 +1,13 @@\n error[E0425]: cannot find value `missing_ident` in this scope\n+  --> $DIR/default-backtrace-ice.rs:21:13\n+   |\n LL | fn main() { missing_ident; }\n+   |             ^^^^^^^^^^^^^ not found in this scope\n \n \n stack backtrace:\n+(end_short_backtrace)\n+(begin_short_backtrace)\n \n error: the compiler unexpectedly panicked. this is a bug.\n "}]}