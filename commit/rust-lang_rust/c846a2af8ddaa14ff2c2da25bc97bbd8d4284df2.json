{"sha": "c846a2af8ddaa14ff2c2da25bc97bbd8d4284df2", "node_id": "C_kwDOAAsO6NoAKGM4NDZhMmFmOGRkYWExNGZmMmMyZGEyNWJjOTdiYmQ4ZDQyODRkZjI", "commit": {"author": {"name": "Dan Gohman", "email": "dev@sunfishcode.online", "date": "2022-06-14T17:44:14Z"}, "committer": {"name": "Dan Gohman", "email": "dev@sunfishcode.online", "date": "2022-08-29T15:31:40Z"}, "message": "Make `std::os::fd` public.\n\n`std::os::fd` defines types like `OwnedFd` and `RawFd` and is common\nbetween Unix and non-Unix platforms that share a basic file-descriptor\nconcept. Rust currently uses this internally to simplify its own code,\nbut it would be useful for external users in the same way, so make it\npublic.\n\nThis means that `OwnedFd` etc. will all appear in three places, for\nexample on unix platforms:\n - `std::os::fd::OwnedFd`\n - `std::os::unix::io::OwnedFd`\n - `std::os::unix::prelude::OwnedFd`", "tree": {"sha": "64395199d0e913db21fdd1148b19df97ad5e37c4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/64395199d0e913db21fdd1148b19df97ad5e37c4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c846a2af8ddaa14ff2c2da25bc97bbd8d4284df2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c846a2af8ddaa14ff2c2da25bc97bbd8d4284df2", "html_url": "https://github.com/rust-lang/rust/commit/c846a2af8ddaa14ff2c2da25bc97bbd8d4284df2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c846a2af8ddaa14ff2c2da25bc97bbd8d4284df2/comments", "author": {"login": "sunfishcode", "id": 4503403, "node_id": "MDQ6VXNlcjQ1MDM0MDM=", "avatar_url": "https://avatars.githubusercontent.com/u/4503403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunfishcode", "html_url": "https://github.com/sunfishcode", "followers_url": "https://api.github.com/users/sunfishcode/followers", "following_url": "https://api.github.com/users/sunfishcode/following{/other_user}", "gists_url": "https://api.github.com/users/sunfishcode/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunfishcode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunfishcode/subscriptions", "organizations_url": "https://api.github.com/users/sunfishcode/orgs", "repos_url": "https://api.github.com/users/sunfishcode/repos", "events_url": "https://api.github.com/users/sunfishcode/events{/privacy}", "received_events_url": "https://api.github.com/users/sunfishcode/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sunfishcode", "id": 4503403, "node_id": "MDQ6VXNlcjQ1MDM0MDM=", "avatar_url": "https://avatars.githubusercontent.com/u/4503403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunfishcode", "html_url": "https://github.com/sunfishcode", "followers_url": "https://api.github.com/users/sunfishcode/followers", "following_url": "https://api.github.com/users/sunfishcode/following{/other_user}", "gists_url": "https://api.github.com/users/sunfishcode/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunfishcode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunfishcode/subscriptions", "organizations_url": "https://api.github.com/users/sunfishcode/orgs", "repos_url": "https://api.github.com/users/sunfishcode/repos", "events_url": "https://api.github.com/users/sunfishcode/events{/privacy}", "received_events_url": "https://api.github.com/users/sunfishcode/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b96fa1a25ced4cfa72923e6d45f47f36c2c00ce0", "url": "https://api.github.com/repos/rust-lang/rust/commits/b96fa1a25ced4cfa72923e6d45f47f36c2c00ce0", "html_url": "https://github.com/rust-lang/rust/commit/b96fa1a25ced4cfa72923e6d45f47f36c2c00ce0"}], "stats": {"total": 69, "additions": 23, "deletions": 46}, "files": [{"sha": "8043d1a53d279575318bc2ae79279941d645213b", "filename": "library/std/src/os/fd/mod.rs", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/c846a2af8ddaa14ff2c2da25bc97bbd8d4284df2/library%2Fstd%2Fsrc%2Fos%2Ffd%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c846a2af8ddaa14ff2c2da25bc97bbd8d4284df2/library%2Fstd%2Fsrc%2Fos%2Ffd%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Ffd%2Fmod.rs?ref=c846a2af8ddaa14ff2c2da25bc97bbd8d4284df2", "patch": "@@ -1,16 +1,26 @@\n //! Owned and borrowed Unix-like file descriptors.\n+//!\n+//! This module is supported on Unix platforms, and also some non-Unix\n+//! platforms which use a similar file descriptor system for referencing OS\n+//! resources.\n \n #![stable(feature = \"io_safety\", since = \"1.63.0\")]\n #![deny(unsafe_op_in_unsafe_fn)]\n \n // `RawFd`, `AsRawFd`, etc.\n-pub mod raw;\n+mod raw;\n \n // `OwnedFd`, `AsFd`, etc.\n-pub mod owned;\n+mod owned;\n \n // Implementations for `AsRawFd` etc. for network types.\n mod net;\n \n #[cfg(test)]\n mod tests;\n+\n+// Export the types and traits for the public API.\n+#[stable(feature = \"io_safety\", since = \"1.63.0\")]\n+pub use owned::*;\n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n+pub use raw::*;"}, {"sha": "3a1b04a83fa79b2c53a1875b03810a11c3c98863", "filename": "library/std/src/os/fd/owned.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/c846a2af8ddaa14ff2c2da25bc97bbd8d4284df2/library%2Fstd%2Fsrc%2Fos%2Ffd%2Fowned.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c846a2af8ddaa14ff2c2da25bc97bbd8d4284df2/library%2Fstd%2Fsrc%2Fos%2Ffd%2Fowned.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Ffd%2Fowned.rs?ref=c846a2af8ddaa14ff2c2da25bc97bbd8d4284df2", "patch": "@@ -205,10 +205,7 @@ pub trait AsFd {\n     /// ```rust,no_run\n     /// use std::fs::File;\n     /// # use std::io;\n-    /// # #[cfg(target_os = \"wasi\")]\n-    /// # use std::os::wasi::io::{AsFd, BorrowedFd};\n-    /// # #[cfg(unix)]\n-    /// # use std::os::unix::io::{AsFd, BorrowedFd};\n+    /// # use std::os::fd::{AsFd, BorrowedFd};\n     ///\n     /// let mut f = File::open(\"foo.txt\")?;\n     /// # #[cfg(any(unix, target_os = \"wasi\"))]"}, {"sha": "42a9effcf92abcee35e8d6f8914af4ce3085dd94", "filename": "library/std/src/os/fd/raw.rs", "status": "modified", "additions": 3, "deletions": 12, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/c846a2af8ddaa14ff2c2da25bc97bbd8d4284df2/library%2Fstd%2Fsrc%2Fos%2Ffd%2Fraw.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c846a2af8ddaa14ff2c2da25bc97bbd8d4284df2/library%2Fstd%2Fsrc%2Fos%2Ffd%2Fraw.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Ffd%2Fraw.rs?ref=c846a2af8ddaa14ff2c2da25bc97bbd8d4284df2", "patch": "@@ -42,10 +42,7 @@ pub trait AsRawFd {\n     /// ```no_run\n     /// use std::fs::File;\n     /// # use std::io;\n-    /// #[cfg(unix)]\n-    /// use std::os::unix::io::{AsRawFd, RawFd};\n-    /// #[cfg(target_os = \"wasi\")]\n-    /// use std::os::wasi::io::{AsRawFd, RawFd};\n+    /// use std::os::fd::{AsRawFd, RawFd};\n     ///\n     /// let mut f = File::open(\"foo.txt\")?;\n     /// // Note that `raw_fd` is only valid as long as `f` exists.\n@@ -83,10 +80,7 @@ pub trait FromRawFd {\n     /// ```no_run\n     /// use std::fs::File;\n     /// # use std::io;\n-    /// #[cfg(unix)]\n-    /// use std::os::unix::io::{FromRawFd, IntoRawFd, RawFd};\n-    /// #[cfg(target_os = \"wasi\")]\n-    /// use std::os::wasi::io::{FromRawFd, IntoRawFd, RawFd};\n+    /// use std::os::fd::{FromRawFd, IntoRawFd, RawFd};\n     ///\n     /// let f = File::open(\"foo.txt\")?;\n     /// # #[cfg(any(unix, target_os = \"wasi\"))]\n@@ -121,10 +115,7 @@ pub trait IntoRawFd {\n     /// ```no_run\n     /// use std::fs::File;\n     /// # use std::io;\n-    /// #[cfg(unix)]\n-    /// use std::os::unix::io::{IntoRawFd, RawFd};\n-    /// #[cfg(target_os = \"wasi\")]\n-    /// use std::os::wasi::io::{IntoRawFd, RawFd};\n+    /// use std::os::fd::{IntoRawFd, RawFd};\n     ///\n     /// let f = File::open(\"foo.txt\")?;\n     /// #[cfg(any(unix, target_os = \"wasi\"))]"}, {"sha": "f62f5af774f0e4a171000d2394613dc916dde08f", "filename": "library/std/src/os/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c846a2af8ddaa14ff2c2da25bc97bbd8d4284df2/library%2Fstd%2Fsrc%2Fos%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c846a2af8ddaa14ff2c2da25bc97bbd8d4284df2/library%2Fstd%2Fsrc%2Fos%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Fmod.rs?ref=c846a2af8ddaa14ff2c2da25bc97bbd8d4284df2", "patch": "@@ -147,7 +147,7 @@ pub mod solid;\n pub mod vxworks;\n \n #[cfg(any(unix, target_os = \"wasi\", doc))]\n-mod fd;\n+pub mod fd;\n \n #[cfg(any(target_os = \"linux\", target_os = \"android\", doc))]\n mod net;"}, {"sha": "d4cb696459b7e6c3f0f91ddc93fe2d729a8bea08", "filename": "library/std/src/os/unix/io/fd.rs", "status": "removed", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b96fa1a25ced4cfa72923e6d45f47f36c2c00ce0/library%2Fstd%2Fsrc%2Fos%2Funix%2Fio%2Ffd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b96fa1a25ced4cfa72923e6d45f47f36c2c00ce0/library%2Fstd%2Fsrc%2Fos%2Funix%2Fio%2Ffd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Funix%2Fio%2Ffd.rs?ref=b96fa1a25ced4cfa72923e6d45f47f36c2c00ce0", "patch": "@@ -1,8 +0,0 @@\n-//! Owned and borrowed file descriptors.\n-\n-// Tests for this module\n-#[cfg(test)]\n-mod tests;\n-\n-#[stable(feature = \"io_safety\", since = \"1.63.0\")]\n-pub use crate::os::fd::owned::*;"}, {"sha": "25b5dbff14f309d185d79f833ea419981586dc0d", "filename": "library/std/src/os/unix/io/mod.rs", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/c846a2af8ddaa14ff2c2da25bc97bbd8d4284df2/library%2Fstd%2Fsrc%2Fos%2Funix%2Fio%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c846a2af8ddaa14ff2c2da25bc97bbd8d4284df2/library%2Fstd%2Fsrc%2Fos%2Funix%2Fio%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Funix%2Fio%2Fmod.rs?ref=c846a2af8ddaa14ff2c2da25bc97bbd8d4284df2", "patch": "@@ -77,10 +77,9 @@\n \n #![stable(feature = \"rust1\", since = \"1.0.0\")]\n \n-mod fd;\n-mod raw;\n-\n-#[stable(feature = \"io_safety\", since = \"1.63.0\")]\n-pub use fd::*;\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-pub use raw::*;\n+pub use crate::os::fd::*;\n+\n+// Tests for this module\n+#[cfg(test)]\n+mod tests;"}, {"sha": "a4d2ba797d9c470362bb82916cdb52e333aac634", "filename": "library/std/src/os/unix/io/raw.rs", "status": "removed", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b96fa1a25ced4cfa72923e6d45f47f36c2c00ce0/library%2Fstd%2Fsrc%2Fos%2Funix%2Fio%2Fraw.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b96fa1a25ced4cfa72923e6d45f47f36c2c00ce0/library%2Fstd%2Fsrc%2Fos%2Funix%2Fio%2Fraw.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Funix%2Fio%2Fraw.rs?ref=b96fa1a25ced4cfa72923e6d45f47f36c2c00ce0", "patch": "@@ -1,6 +0,0 @@\n-//! Unix-specific extensions to general I/O primitives.\n-\n-#![stable(feature = \"rust1\", since = \"1.0.0\")]\n-\n-#[stable(feature = \"rust1\", since = \"1.0.0\")]\n-pub use crate::os::fd::raw::*;"}, {"sha": "84d2a7a1a91b4f391f5c79161708c01664d93273", "filename": "library/std/src/os/unix/io/tests.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/c846a2af8ddaa14ff2c2da25bc97bbd8d4284df2/library%2Fstd%2Fsrc%2Fos%2Funix%2Fio%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c846a2af8ddaa14ff2c2da25bc97bbd8d4284df2/library%2Fstd%2Fsrc%2Fos%2Funix%2Fio%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Funix%2Fio%2Ftests.rs?ref=c846a2af8ddaa14ff2c2da25bc97bbd8d4284df2", "previous_filename": "library/std/src/os/unix/io/fd/tests.rs"}, {"sha": "d528590d75b9ab6c37673ef48eb1cee89c5ae262", "filename": "library/std/src/os/wasi/io/mod.rs", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c846a2af8ddaa14ff2c2da25bc97bbd8d4284df2/library%2Fstd%2Fsrc%2Fos%2Fwasi%2Fio%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c846a2af8ddaa14ff2c2da25bc97bbd8d4284df2/library%2Fstd%2Fsrc%2Fos%2Fwasi%2Fio%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Fwasi%2Fio%2Fmod.rs?ref=c846a2af8ddaa14ff2c2da25bc97bbd8d4284df2", "patch": "@@ -1,12 +1,6 @@\n //! WASI-specific extensions to general I/O primitives.\n \n-#![deny(unsafe_op_in_unsafe_fn)]\n #![unstable(feature = \"wasi_ext\", issue = \"71213\")]\n \n-mod fd;\n-mod raw;\n-\n-#[unstable(feature = \"wasi_ext\", issue = \"71213\")]\n-pub use fd::*;\n #[unstable(feature = \"wasi_ext\", issue = \"71213\")]\n-pub use raw::*;\n+pub use crate::os::fd::*;"}]}