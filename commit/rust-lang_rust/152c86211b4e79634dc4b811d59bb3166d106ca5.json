{"sha": "152c86211b4e79634dc4b811d59bb3166d106ca5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE1MmM4NjIxMWI0ZTc5NjM0ZGM0YjgxMWQ1OWJiMzE2NmQxMDZjYTU=", "commit": {"author": {"name": "Ryan Levick", "email": "me@ryanlevick.com", "date": "2021-03-18T12:22:25Z"}, "committer": {"name": "Ryan Levick", "email": "me@ryanlevick.com", "date": "2021-04-08T13:36:28Z"}, "message": "Proper format for error code explanations", "tree": {"sha": "aab58af3ec9ac2ed0822071d39bef7c05ec785b7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aab58af3ec9ac2ed0822071d39bef7c05ec785b7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/152c86211b4e79634dc4b811d59bb3166d106ca5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/152c86211b4e79634dc4b811d59bb3166d106ca5", "html_url": "https://github.com/rust-lang/rust/commit/152c86211b4e79634dc4b811d59bb3166d106ca5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/152c86211b4e79634dc4b811d59bb3166d106ca5/comments", "author": {"login": "rylev", "id": 1327285, "node_id": "MDQ6VXNlcjEzMjcyODU=", "avatar_url": "https://avatars.githubusercontent.com/u/1327285?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rylev", "html_url": "https://github.com/rylev", "followers_url": "https://api.github.com/users/rylev/followers", "following_url": "https://api.github.com/users/rylev/following{/other_user}", "gists_url": "https://api.github.com/users/rylev/gists{/gist_id}", "starred_url": "https://api.github.com/users/rylev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rylev/subscriptions", "organizations_url": "https://api.github.com/users/rylev/orgs", "repos_url": "https://api.github.com/users/rylev/repos", "events_url": "https://api.github.com/users/rylev/events{/privacy}", "received_events_url": "https://api.github.com/users/rylev/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rylev", "id": 1327285, "node_id": "MDQ6VXNlcjEzMjcyODU=", "avatar_url": "https://avatars.githubusercontent.com/u/1327285?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rylev", "html_url": "https://github.com/rylev", "followers_url": "https://api.github.com/users/rylev/followers", "following_url": "https://api.github.com/users/rylev/following{/other_user}", "gists_url": "https://api.github.com/users/rylev/gists{/gist_id}", "starred_url": "https://api.github.com/users/rylev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rylev/subscriptions", "organizations_url": "https://api.github.com/users/rylev/orgs", "repos_url": "https://api.github.com/users/rylev/repos", "events_url": "https://api.github.com/users/rylev/events{/privacy}", "received_events_url": "https://api.github.com/users/rylev/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1d84947bb568ab7652fb0e04d6f0f1bdaaaf489a", "url": "https://api.github.com/repos/rust-lang/rust/commits/1d84947bb568ab7652fb0e04d6f0f1bdaaaf489a", "html_url": "https://github.com/rust-lang/rust/commit/1d84947bb568ab7652fb0e04d6f0f1bdaaaf489a"}], "stats": {"total": 43, "additions": 30, "deletions": 13}, "files": [{"sha": "63c48506e7fdec558ffd3d235a11d257dea8fab5", "filename": "compiler/rustc_error_codes/src/error_codes/E0782.md", "status": "modified", "additions": 15, "deletions": 6, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/152c86211b4e79634dc4b811d59bb3166d106ca5/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0782.md", "raw_url": "https://github.com/rust-lang/rust/raw/152c86211b4e79634dc4b811d59bb3166d106ca5/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0782.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0782.md?ref=152c86211b4e79634dc4b811d59bb3166d106ca5", "patch": "@@ -1,17 +1,26 @@\n Trait objects must include the `dyn` keyword.\n \n-Trait objects are a way to call methods on types that are not known until\n-runtime but conform to some trait.\n-\n-In the following code the trait object should be formed with\n-`Box<dyn Foo>`, but `dyn` is left off.\n+Erroneous code example:\n \n-```no_run\n+```edition2021,compile_fail,E782\n trait Foo {}\n fn test(arg: Box<Foo>) {}\n ```\n \n+Trait objects are a way to call methods on types that are not known until\n+runtime but conform to some trait.\n+\n+Trait objects should be formed with `Box<dyn Foo>`, but in the code above\n+`dyn` is left off.\n+\n This makes it harder to see that `arg` is a trait object and not a\n simply a heap allocated type called `Foo`.\n \n+To fix this issue, add `dyn` before the trait name.\n+\n+```\n+trait Foo {}\n+fn test(arg: Box<dyn Foo>) {}\n+```\n+\n This used to be allowed before edition 2021, but is now an error."}, {"sha": "41989b3ba2f925c8ed4157bfa04fe95ec8eaf7d6", "filename": "compiler/rustc_error_codes/src/error_codes/E0783.md", "status": "modified", "additions": 15, "deletions": 7, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/152c86211b4e79634dc4b811d59bb3166d106ca5/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0783.md", "raw_url": "https://github.com/rust-lang/rust/raw/152c86211b4e79634dc4b811d59bb3166d106ca5/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0783.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0783.md?ref=152c86211b4e79634dc4b811d59bb3166d106ca5", "patch": "@@ -1,18 +1,26 @@\n The range pattern `...` is no longer allowed.\n \n+Erroneous code example:\n+\n+```edition2021,compile_fail,E782\n+fn main() {\n+    match 2u8 {\n+        0...9 => println!(\"Got a number less than 10\"),\n+        _ => println!(\"Got a number 10 or more\")\n+    }\n+}\n+```\n+\n Older Rust code using previous editions allowed `...` to stand for exclusive\n ranges which are now signified using `..=`.\n \n-The following code use to compile, but now it now longer does.\n+To make this code compile replace the `...` with `..=`.\n \n-```no_run\n+```\n fn main() {\n-    let n = 2u8;\n-    match n {\n-        ...9 => println!(\"Got a number less than 10\"),\n+    match 2u8 {\n+        0..=9 => println!(\"Got a number less than 10\"),\n         _ => println!(\"Got a number 10 or more\")\n     }\n }\n ```\n-\n-To make this code compile replace the `...` with `..=`."}]}