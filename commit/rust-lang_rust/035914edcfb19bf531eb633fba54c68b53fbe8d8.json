{"sha": "035914edcfb19bf531eb633fba54c68b53fbe8d8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAzNTkxNGVkY2ZiMTliZjUzMWViNjMzZmJhNTRjNjhiNTNmYmU4ZDg=", "commit": {"author": {"name": "Adolfo Ochagav\u00eda", "email": "aochagavia92@gmail.com", "date": "2014-06-28T17:28:29Z"}, "committer": {"name": "Adolfo Ochagav\u00eda", "email": "aochagavia92@gmail.com", "date": "2014-06-30T19:35:49Z"}, "message": "Fix issues in librustdoc", "tree": {"sha": "b6dd09ca6548d9a4f1b58e37cd307e7eeca67016", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b6dd09ca6548d9a4f1b58e37cd307e7eeca67016"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/035914edcfb19bf531eb633fba54c68b53fbe8d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/035914edcfb19bf531eb633fba54c68b53fbe8d8", "html_url": "https://github.com/rust-lang/rust/commit/035914edcfb19bf531eb633fba54c68b53fbe8d8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/035914edcfb19bf531eb633fba54c68b53fbe8d8/comments", "author": {"login": "aochagavia", "id": 5196584, "node_id": "MDQ6VXNlcjUxOTY1ODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5196584?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aochagavia", "html_url": "https://github.com/aochagavia", "followers_url": "https://api.github.com/users/aochagavia/followers", "following_url": "https://api.github.com/users/aochagavia/following{/other_user}", "gists_url": "https://api.github.com/users/aochagavia/gists{/gist_id}", "starred_url": "https://api.github.com/users/aochagavia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aochagavia/subscriptions", "organizations_url": "https://api.github.com/users/aochagavia/orgs", "repos_url": "https://api.github.com/users/aochagavia/repos", "events_url": "https://api.github.com/users/aochagavia/events{/privacy}", "received_events_url": "https://api.github.com/users/aochagavia/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aochagavia", "id": 5196584, "node_id": "MDQ6VXNlcjUxOTY1ODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5196584?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aochagavia", "html_url": "https://github.com/aochagavia", "followers_url": "https://api.github.com/users/aochagavia/followers", "following_url": "https://api.github.com/users/aochagavia/following{/other_user}", "gists_url": "https://api.github.com/users/aochagavia/gists{/gist_id}", "starred_url": "https://api.github.com/users/aochagavia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aochagavia/subscriptions", "organizations_url": "https://api.github.com/users/aochagavia/orgs", "repos_url": "https://api.github.com/users/aochagavia/repos", "events_url": "https://api.github.com/users/aochagavia/events{/privacy}", "received_events_url": "https://api.github.com/users/aochagavia/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fb96cbba4185772dae47f3f3bddbaa8698426d93", "url": "https://api.github.com/repos/rust-lang/rust/commits/fb96cbba4185772dae47f3f3bddbaa8698426d93", "html_url": "https://github.com/rust-lang/rust/commit/fb96cbba4185772dae47f3f3bddbaa8698426d93"}], "stats": {"total": 26, "additions": 12, "deletions": 14}, "files": [{"sha": "86b80ee24943691a4abf49bab1ad1e7f0e9508c9", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 12, "deletions": 14, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/035914edcfb19bf531eb633fba54c68b53fbe8d8/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/035914edcfb19bf531eb633fba54c68b53fbe8d8/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=035914edcfb19bf531eb633fba54c68b53fbe8d8", "patch": "@@ -408,18 +408,17 @@ fn json_output(krate: clean::Crate, res: Vec<plugins::PluginJson> ,\n     //   \"crate\": { parsed crate ... },\n     //   \"plugins\": { output of plugins ... }\n     // }\n-    let mut json = box std::collections::TreeMap::new();\n-    json.insert(\"schema\".to_string(),\n-                json::String(SCHEMA_VERSION.to_string()));\n-    let plugins_json = box res.move_iter()\n-                              .filter_map(|opt| {\n-                                  match opt {\n-                                      None => None,\n-                                      Some((string, json)) => {\n-                                          Some((string.to_string(), json))\n-                                      }\n+    let mut json = std::collections::TreeMap::new();\n+    json.insert(\"schema\".to_string(), json::String(SCHEMA_VERSION.to_string()));\n+    let plugins_json = res.move_iter()\n+                          .filter_map(|opt| {\n+                              match opt {\n+                                  None => None,\n+                                  Some((string, json)) => {\n+                                      Some((string.to_string(), json))\n                                   }\n-                              }).collect();\n+                              }\n+                          }).collect();\n \n     // FIXME #8335: yuck, Rust -> str -> JSON round trip! No way to .encode\n     // straight to the Rust JSON representation.\n@@ -429,7 +428,7 @@ fn json_output(krate: clean::Crate, res: Vec<plugins::PluginJson> ,\n             let mut encoder = json::Encoder::new(&mut w as &mut io::Writer);\n             krate.encode(&mut encoder).unwrap();\n         }\n-        str::from_utf8(w.unwrap().as_slice()).unwrap().to_string()\n+        str::from_utf8_owned(w.unwrap()).unwrap()\n     };\n     let crate_json = match json::from_str(crate_json_str.as_slice()) {\n         Ok(j) => j,\n@@ -440,6 +439,5 @@ fn json_output(krate: clean::Crate, res: Vec<plugins::PluginJson> ,\n     json.insert(\"plugins\".to_string(), json::Object(plugins_json));\n \n     let mut file = try!(File::create(&dst));\n-    try!(json::Object(json).to_writer(&mut file));\n-    Ok(())\n+    json::Object(json).to_writer(&mut file)\n }"}]}