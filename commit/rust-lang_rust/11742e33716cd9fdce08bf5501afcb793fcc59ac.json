{"sha": "11742e33716cd9fdce08bf5501afcb793fcc59ac", "node_id": "MDY6Q29tbWl0NzI0NzEyOjExNzQyZTMzNzE2Y2Q5ZmRjZTA4YmY1NTAxYWZjYjc5M2ZjYzU5YWM=", "commit": {"author": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2019-05-20T19:27:05Z"}, "committer": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2019-05-20T19:27:05Z"}, "message": "Merge #1287\n\n1287: Add support of matching literal in mbe r=matklad a=edwin0cheng\n\nThis PR adds support of matching literal in mbe , which used in our `T` macro :\r\n\r\n```rust\r\nmacro_rules! foo {\r\n    ('(') => {\r\n        fn foo() {}\r\n    }\r\n}\r\n```\n\nCo-authored-by: Edwin Cheng <edwin0cheng@gmail.com>", "tree": {"sha": "072112a8cd2061bf1acc31aad9cfa343191d0204", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/072112a8cd2061bf1acc31aad9cfa343191d0204"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/11742e33716cd9fdce08bf5501afcb793fcc59ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/11742e33716cd9fdce08bf5501afcb793fcc59ac", "html_url": "https://github.com/rust-lang/rust/commit/11742e33716cd9fdce08bf5501afcb793fcc59ac", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/11742e33716cd9fdce08bf5501afcb793fcc59ac/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "parents": [{"sha": "c8f93ff58cf4f63d48d2258e1a4c449e043987f3", "url": "https://api.github.com/repos/rust-lang/rust/commits/c8f93ff58cf4f63d48d2258e1a4c449e043987f3", "html_url": "https://github.com/rust-lang/rust/commit/c8f93ff58cf4f63d48d2258e1a4c449e043987f3"}, {"sha": "ad9d2012ded90a33702efedabf8f8e2c8d992975", "url": "https://api.github.com/repos/rust-lang/rust/commits/ad9d2012ded90a33702efedabf8f8e2c8d992975", "html_url": "https://github.com/rust-lang/rust/commit/ad9d2012ded90a33702efedabf8f8e2c8d992975"}], "stats": {"total": 20, "additions": 19, "deletions": 1}, "files": [{"sha": "7fff8deff3d4ef7e9cfa2e09a8f7be2cd20d60e9", "filename": "crates/ra_mbe/src/mbe_expander.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/11742e33716cd9fdce08bf5501afcb793fcc59ac/crates%2Fra_mbe%2Fsrc%2Fmbe_expander.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11742e33716cd9fdce08bf5501afcb793fcc59ac/crates%2Fra_mbe%2Fsrc%2Fmbe_expander.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_mbe%2Fsrc%2Fmbe_expander.rs?ref=11742e33716cd9fdce08bf5501afcb793fcc59ac", "patch": "@@ -281,7 +281,11 @@ fn match_lhs(pattern: &crate::Subtree, input: &mut TtCursor) -> Result<Bindings,\n                         return Err(ExpandError::UnexpectedToken);\n                     }\n                 }\n-                _ => return Err(ExpandError::UnexpectedToken),\n+                crate::Leaf::Literal(literal) => {\n+                    if input.eat_literal().map(|i| &i.text) != Some(&literal.text) {\n+                        return Err(ExpandError::UnexpectedToken);\n+                    }\n+                }\n             },\n             crate::TokenTree::Repeat(crate::Repeat { subtree, kind, separator }) => {\n                 // Dirty hack to make macro-expansion terminate."}, {"sha": "e3a5ceecfe27c6a05851d25e33c1616b002ff8fe", "filename": "crates/ra_mbe/src/tests.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/11742e33716cd9fdce08bf5501afcb793fcc59ac/crates%2Fra_mbe%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11742e33716cd9fdce08bf5501afcb793fcc59ac/crates%2Fra_mbe%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_mbe%2Fsrc%2Ftests.rs?ref=11742e33716cd9fdce08bf5501afcb793fcc59ac", "patch": "@@ -575,6 +575,20 @@ fn test_tt_to_stmts() {\n     );\n }\n \n+#[test]\n+fn test_match_literal() {\n+    let rules = create_rules(\n+        r#\"\n+    macro_rules! foo {\n+        ('(') => {\n+            fn foo() {}\n+        }\n+    }\n+\"#,\n+    );\n+    assert_expansion(MacroKind::Items, &rules, \"foo! ['(']\", \"fn foo () {}\");\n+}\n+\n // The following tests are port from intellij-rust directly\n // https://github.com/intellij-rust/intellij-rust/blob/c4e9feee4ad46e7953b1948c112533360b6087bb/src/test/kotlin/org/rust/lang/core/macros/RsMacroExpansionTest.kt\n "}]}