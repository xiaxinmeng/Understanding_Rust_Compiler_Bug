{"sha": "4b8f4319954ff2642690b9e5cbe4af352d095bf6", "node_id": "C_kwDOAAsO6NoAKDRiOGY0MzE5OTU0ZmYyNjQyNjkwYjllNWNiZTRhZjM1MmQwOTViZjY", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-10-19T13:53:06Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-10-19T13:53:06Z"}, "message": "Auto merge of #103214 - Nilstrieb:set-theory, r=petrochenkov\n\nUse Set instead of Vec in transitive_relation\n\nHelps with #103195. It doesn't fix the underlying quadraticness but it makes it _a lot_ faster to an extent where even doubling the amount of nested references still takes less than two seconds (50s on nightly).\n\nI want to see whether this causes regressions (because the vec was usually quite small) or improvements (as lookup for bigger sets is now much faster) in real code.", "tree": {"sha": "e5b8d7bbaf6b66a33d4b54f2539115818efaa27c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e5b8d7bbaf6b66a33d4b54f2539115818efaa27c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4b8f4319954ff2642690b9e5cbe4af352d095bf6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4b8f4319954ff2642690b9e5cbe4af352d095bf6", "html_url": "https://github.com/rust-lang/rust/commit/4b8f4319954ff2642690b9e5cbe4af352d095bf6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4b8f4319954ff2642690b9e5cbe4af352d095bf6/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d7dd01fe8b071602510eaac9f676acc0e3cf8e4a", "url": "https://api.github.com/repos/rust-lang/rust/commits/d7dd01fe8b071602510eaac9f676acc0e3cf8e4a", "html_url": "https://github.com/rust-lang/rust/commit/d7dd01fe8b071602510eaac9f676acc0e3cf8e4a"}, {"sha": "d45f025c90c01b9ccea49e2036475ca09e581db1", "url": "https://api.github.com/repos/rust-lang/rust/commits/d45f025c90c01b9ccea49e2036475ca09e581db1", "html_url": "https://github.com/rust-lang/rust/commit/d45f025c90c01b9ccea49e2036475ca09e581db1"}], "stats": {"total": 12, "additions": 5, "deletions": 7}, "files": [{"sha": "cf616203842a69d6a613704ad7c968b11d02e405", "filename": "compiler/rustc_data_structures/src/transitive_relation.rs", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/4b8f4319954ff2642690b9e5cbe4af352d095bf6/compiler%2Frustc_data_structures%2Fsrc%2Ftransitive_relation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b8f4319954ff2642690b9e5cbe4af352d095bf6/compiler%2Frustc_data_structures%2Fsrc%2Ftransitive_relation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_data_structures%2Fsrc%2Ftransitive_relation.rs?ref=4b8f4319954ff2642690b9e5cbe4af352d095bf6", "patch": "@@ -1,5 +1,5 @@\n use crate::frozen::Frozen;\n-use crate::fx::FxIndexSet;\n+use crate::fx::{FxHashSet, FxIndexSet};\n use rustc_index::bit_set::BitMatrix;\n use std::fmt::Debug;\n use std::hash::Hash;\n@@ -16,7 +16,7 @@ pub struct TransitiveRelationBuilder<T> {\n \n     // List of base edges in the graph. Require to compute transitive\n     // closure.\n-    edges: Vec<Edge>,\n+    edges: FxHashSet<Edge>,\n }\n \n #[derive(Debug)]\n@@ -52,10 +52,10 @@ impl<T: Eq + Hash> Default for TransitiveRelationBuilder<T> {\n     }\n }\n \n-#[derive(Copy, Clone, PartialEq, Eq, PartialOrd, Debug)]\n+#[derive(Copy, Clone, PartialEq, Eq, PartialOrd, Debug, Hash)]\n struct Index(usize);\n \n-#[derive(Clone, PartialEq, Eq, Debug)]\n+#[derive(Clone, PartialEq, Eq, Debug, Hash)]\n struct Edge {\n     source: Index,\n     target: Index,\n@@ -99,9 +99,7 @@ impl<T: Eq + Hash + Copy> TransitiveRelationBuilder<T> {\n         let a = self.add_index(a);\n         let b = self.add_index(b);\n         let edge = Edge { source: a, target: b };\n-        if !self.edges.contains(&edge) {\n-            self.edges.push(edge);\n-        }\n+        self.edges.insert(edge);\n     }\n \n     /// Compute the transitive closure derived from the edges, and converted to"}]}