{"sha": "f09b7b0ecd7fc03c9d433632f89b3267f16cd4f8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYwOWI3YjBlY2Q3ZmMwM2M5ZDQzMzYzMmY4OWIzMjY3ZjE2Y2Q0Zjg=", "commit": {"author": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2013-11-27T15:48:58Z"}, "committer": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2013-11-27T15:48:58Z"}, "message": "Freeze the AST by removing a couple of unused @mut ~[T] from token_tree.", "tree": {"sha": "e4e3af4c616a6a6135709cc18313f0aa49a8e446", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e4e3af4c616a6a6135709cc18313f0aa49a8e446"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f09b7b0ecd7fc03c9d433632f89b3267f16cd4f8", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f09b7b0ecd7fc03c9d433632f89b3267f16cd4f8", "html_url": "https://github.com/rust-lang/rust/commit/f09b7b0ecd7fc03c9d433632f89b3267f16cd4f8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f09b7b0ecd7fc03c9d433632f89b3267f16cd4f8/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "17af6f7d0c92ee66df6b96d088e999db378ce125", "url": "https://api.github.com/repos/rust-lang/rust/commits/17af6f7d0c92ee66df6b96d088e999db378ce125", "html_url": "https://github.com/rust-lang/rust/commit/17af6f7d0c92ee66df6b96d088e999db378ce125"}], "stats": {"total": 39, "additions": 25, "deletions": 14}, "files": [{"sha": "6e73c6abd0b34e832c48ee94aac58d65b3ad2221", "filename": "src/libsyntax/ast.rs", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/f09b7b0ecd7fc03c9d433632f89b3267f16cd4f8/src%2Flibsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f09b7b0ecd7fc03c9d433632f89b3267f16cd4f8/src%2Flibsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast.rs?ref=f09b7b0ecd7fc03c9d433632f89b3267f16cd4f8", "patch": "@@ -612,14 +612,14 @@ pub enum token_tree {\n     tt_tok(Span, ::parse::token::Token),\n     // a delimited sequence (the delimiters appear as the first\n     // and last elements of the vector)\n-    tt_delim(@mut ~[token_tree]),\n+    tt_delim(@~[token_tree]),\n \n     // These only make sense for right-hand-sides of MBE macros:\n \n     // a kleene-style repetition sequence with a span, a tt_forest,\n     // an optional separator, and a boolean where true indicates\n     // zero or more (*), and false indicates one or more (+).\n-    tt_seq(Span, @mut ~[token_tree], Option<::parse::token::Token>, bool),\n+    tt_seq(Span, @~[token_tree], Option<::parse::token::Token>, bool),\n \n     // a syntactic variable that will be filled in by macro expansion.\n     tt_nonterminal(Span, Ident)\n@@ -1180,6 +1180,18 @@ pub enum inlined_item {\n     ii_foreign(@foreign_item),\n }\n \n+#[cfg(test)]\n+mod test {\n+    use super::*;\n+\n+    fn is_freeze<T: Freeze>() {}\n+\n+    // Assert that the AST remains Freeze (#10693).\n+    #[test] fn ast_is_freeze() {\n+        is_freeze::<item>();\n+    }\n+}\n+\n /* hold off on tests ... they appear in a later merge.\n #[cfg(test)]\n mod test {"}, {"sha": "2007abcc81cf7a64873d763b8cf5f47d897b9871", "filename": "src/libsyntax/ext/log_syntax.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f09b7b0ecd7fc03c9d433632f89b3267f16cd4f8/src%2Flibsyntax%2Fext%2Flog_syntax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f09b7b0ecd7fc03c9d433632f89b3267f16cd4f8/src%2Flibsyntax%2Fext%2Flog_syntax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Flog_syntax.rs?ref=f09b7b0ecd7fc03c9d433632f89b3267f16cd4f8", "patch": "@@ -23,7 +23,7 @@ pub fn expand_syntax_ext(cx: @ExtCtxt,\n     cx.print_backtrace();\n     println(\n         print::pprust::tt_to_str(\n-            &ast::tt_delim(@mut tt.to_owned()),\n+            &ast::tt_delim(@tt.to_owned()),\n             get_ident_interner()));\n \n     //trivial expression"}, {"sha": "8291a76fab65d3107d86d9400b384a374400f2b1", "filename": "src/libsyntax/ext/tt/macro_rules.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f09b7b0ecd7fc03c9d433632f89b3267f16cd4f8/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f09b7b0ecd7fc03c9d433632f89b3267f16cd4f8/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs?ref=f09b7b0ecd7fc03c9d433632f89b3267f16cd4f8", "patch": "@@ -104,7 +104,7 @@ fn generic_extension(cx: @ExtCtxt,\n         println!(\"{}! \\\\{ {} \\\\}\",\n                   cx.str_of(name),\n                   print::pprust::tt_to_str(\n-                      &ast::tt_delim(@mut arg.to_owned()),\n+                      &ast::tt_delim(@arg.to_owned()),\n                       get_ident_interner()));\n     }\n "}, {"sha": "1bcfbcf7ab24e3c8dbbaaf1dc2f184ae39240637", "filename": "src/libsyntax/ext/tt/transcribe.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f09b7b0ecd7fc03c9d433632f89b3267f16cd4f8/src%2Flibsyntax%2Fext%2Ftt%2Ftranscribe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f09b7b0ecd7fc03c9d433632f89b3267f16cd4f8/src%2Flibsyntax%2Fext%2Ftt%2Ftranscribe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Ftt%2Ftranscribe.rs?ref=f09b7b0ecd7fc03c9d433632f89b3267f16cd4f8", "patch": "@@ -22,7 +22,7 @@ use std::option;\n \n ///an unzipping of `token_tree`s\n struct TtFrame {\n-    forest: @mut ~[ast::token_tree],\n+    forest: @~[ast::token_tree],\n     idx: uint,\n     dotdotdoted: bool,\n     sep: Option<Token>,\n@@ -52,7 +52,7 @@ pub fn new_tt_reader(sp_diag: @mut span_handler,\n     let r = @mut TtReader {\n         sp_diag: sp_diag,\n         stack: @mut TtFrame {\n-            forest: @mut src,\n+            forest: @src,\n             idx: 0u,\n             dotdotdoted: false,\n             sep: None,\n@@ -74,7 +74,7 @@ pub fn new_tt_reader(sp_diag: @mut span_handler,\n \n fn dup_tt_frame(f: @mut TtFrame) -> @mut TtFrame {\n     @mut TtFrame {\n-        forest: @mut (*f.forest).clone(),\n+        forest: @(*f.forest).clone(),\n         idx: f.idx,\n         dotdotdoted: f.dotdotdoted,\n         sep: f.sep.clone(),\n@@ -175,8 +175,7 @@ pub fn tt_next_token(r: &mut TtReader) -> TokenAndSpan {\n     loop {\n         {\n             let stack = &mut *r.stack;\n-            let forest = &mut *stack.forest;\n-            if stack.idx < forest.len() {\n+            if stack.idx < stack.forest.len() {\n                 break;\n             }\n         }"}, {"sha": "887d3d2014ab0060d9f82ff30af11fa9b1e20664", "filename": "src/libsyntax/fold.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f09b7b0ecd7fc03c9d433632f89b3267f16cd4f8/src%2Flibsyntax%2Ffold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f09b7b0ecd7fc03c9d433632f89b3267f16cd4f8/src%2Flibsyntax%2Ffold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffold.rs?ref=f09b7b0ecd7fc03c9d433632f89b3267f16cd4f8", "patch": "@@ -457,10 +457,10 @@ pub fn fold_tts<T:ast_fold>(tts: &[token_tree], fld: &T) -> ~[token_tree] {\n         match *tt {\n             tt_tok(span, ref tok) =>\n             tt_tok(span,maybe_fold_ident(tok,fld)),\n-            tt_delim(ref tts) => tt_delim(@mut fold_tts(**tts, fld)),\n-            tt_seq(span, ref pattern, ref sep, is_optional) =>\n+            tt_delim(tts) => tt_delim(@fold_tts(*tts, fld)),\n+            tt_seq(span, pattern, ref sep, is_optional) =>\n             tt_seq(span,\n-                   @mut fold_tts(**pattern, fld),\n+                   @fold_tts(*pattern, fld),\n                    sep.as_ref().map(|tok|maybe_fold_ident(tok,fld)),\n                    is_optional),\n             tt_nonterminal(sp,ref ident) =>"}, {"sha": "fab0de4179edbdc576c2e0ce7c2ffd5e3d96eccc", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f09b7b0ecd7fc03c9d433632f89b3267f16cd4f8/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f09b7b0ecd7fc03c9d433632f89b3267f16cd4f8/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=f09b7b0ecd7fc03c9d433632f89b3267f16cd4f8", "patch": "@@ -2112,7 +2112,7 @@ impl Parser {\n                     };\n                     tt_seq(\n                         mk_sp(sp.lo, p.span.hi),\n-                        @mut seq,\n+                        @seq,\n                         s,\n                         z\n                     )\n@@ -2157,7 +2157,7 @@ impl Parser {\n                 result.push(parse_any_tt_tok(self));\n                 self.open_braces.pop();\n \n-                tt_delim(@mut result)\n+                tt_delim(@result)\n             }\n             _ => parse_non_delim_tt_tok(self)\n         }"}]}