{"sha": "b2f3a51e1a3b63a6558361b213dea4210f2460e1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIyZjNhNTFlMWEzYjYzYTY1NTgzNjFiMjEzZGVhNDIxMGYyNDYwZTE=", "commit": {"author": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2016-02-02T05:32:18Z"}, "committer": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2016-02-02T05:32:18Z"}, "message": "Rollup merge of #31327 - dirk:dirk/process-child-safety-docs, r=alexcrichton\n\n`Drop` is not implemented for `Child`, so if it goes out of scope in Rust-land and gets deallocated the child process will continue to exist and execute. If users want a guarantee that the process has finished running and exited they must manually use `kill`, `wait`, or `wait_with_output`.\n\nFixes #31289.\n\nr? @steveklabnik", "tree": {"sha": "91775e48b1fb96a34d65085221e75521974112cc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/91775e48b1fb96a34d65085221e75521974112cc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b2f3a51e1a3b63a6558361b213dea4210f2460e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b2f3a51e1a3b63a6558361b213dea4210f2460e1", "html_url": "https://github.com/rust-lang/rust/commit/b2f3a51e1a3b63a6558361b213dea4210f2460e1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b2f3a51e1a3b63a6558361b213dea4210f2460e1/comments", "author": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "committer": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a9fbb0553583bac39b442e2fe8a43f64efc1f09d", "url": "https://api.github.com/repos/rust-lang/rust/commits/a9fbb0553583bac39b442e2fe8a43f64efc1f09d", "html_url": "https://github.com/rust-lang/rust/commit/a9fbb0553583bac39b442e2fe8a43f64efc1f09d"}, {"sha": "76839221ff9bc4fd65ab9e7c0f1cd8e7514446f0", "url": "https://api.github.com/repos/rust-lang/rust/commits/76839221ff9bc4fd65ab9e7c0f1cd8e7514446f0", "html_url": "https://github.com/rust-lang/rust/commit/76839221ff9bc4fd65ab9e7c0f1cd8e7514446f0"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "5e0a54392d23de914b5a9cfcd0b354abec251f08", "filename": "src/libstd/process.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b2f3a51e1a3b63a6558361b213dea4210f2460e1/src%2Flibstd%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2f3a51e1a3b63a6558361b213dea4210f2460e1/src%2Flibstd%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fprocess.rs?ref=b2f3a51e1a3b63a6558361b213dea4210f2460e1", "patch": "@@ -47,6 +47,16 @@ use thread::{self, JoinHandle};\n ///\n /// assert!(ecode.success());\n /// ```\n+///\n+/// # Note\n+///\n+/// Take note that there is no implementation of\n+/// [`Drop`](../../core/ops/trait.Drop.html) for child processes, so if you\n+/// do not ensure the `Child` has exited then it will continue to run, even\n+/// after the `Child` handle to the child process has gone out of scope.\n+///\n+/// Calling `wait` (or other functions that wrap around it) will make the\n+/// parent process wait until the child has actually exited before continuing.\n #[stable(feature = \"process\", since = \"1.0.0\")]\n pub struct Child {\n     handle: imp::Process,"}]}