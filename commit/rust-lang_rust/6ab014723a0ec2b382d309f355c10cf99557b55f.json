{"sha": "6ab014723a0ec2b382d309f355c10cf99557b55f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZhYjAxNDcyM2EwZWMyYjM4MmQzMDlmMzU1YzEwY2Y5OTU1N2I1NWY=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-06-06T07:23:42Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-06-06T07:23:42Z"}, "message": "Merge pull request #761 from ecstatic-morse/type-name\n\nAdd a test for the new `type_name` intrinsic.", "tree": {"sha": "26e8403be31eb0db7fc2c6c9a70554a49c5ba21f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/26e8403be31eb0db7fc2c6c9a70554a49c5ba21f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6ab014723a0ec2b382d309f355c10cf99557b55f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJc+L9/CRBK7hj4Ov3rIwAAdHIIABfLwhmUWDZODznTfCfzBWge\n7KJzjdZk31hOW10HXuGCZdj6lHVVpbNanZSfg0LUvLPGtSkz8M7LZtOl4QHEw5vM\nBLw5RX3vw0HcBToHOBsqwfz6gGcBTC+vn2zlMpefCaBWBCrNy57J0kjOEtXTvwnS\n4QE1n7aEVofL3zMJHjerwwIXlQ2qJPfoxGd5JK+jpebhOApCfcKIp4IYtaW78IGd\n7SYoK7NNBSCkno9PqoFFyYED/lSuPjkymFmgTSJviM1EkB2XrEaTeYcqBgPIvsdU\n0cFrVc1ZzTqwAfGgG+COOhGQxrKvrw/sFPkqvLG+mDO4csRYr5ScCJCaQcyBO/Y=\n=lQjM\n-----END PGP SIGNATURE-----\n", "payload": "tree 26e8403be31eb0db7fc2c6c9a70554a49c5ba21f\nparent f1730d136a73b97ac7e1aa87ad61f0ba740cdb7f\nparent 1ceb81b34552c0ff466f4ffaa00fe2f87cb5e16c\nauthor Oliver Scherer <github35764891676564198441@oli-obk.de> 1559805822 +0200\ncommitter GitHub <noreply@github.com> 1559805822 +0200\n\nMerge pull request #761 from ecstatic-morse/type-name\n\nAdd a test for the new `type_name` intrinsic."}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6ab014723a0ec2b382d309f355c10cf99557b55f", "html_url": "https://github.com/rust-lang/rust/commit/6ab014723a0ec2b382d309f355c10cf99557b55f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6ab014723a0ec2b382d309f355c10cf99557b55f/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f1730d136a73b97ac7e1aa87ad61f0ba740cdb7f", "url": "https://api.github.com/repos/rust-lang/rust/commits/f1730d136a73b97ac7e1aa87ad61f0ba740cdb7f", "html_url": "https://github.com/rust-lang/rust/commit/f1730d136a73b97ac7e1aa87ad61f0ba740cdb7f"}, {"sha": "1ceb81b34552c0ff466f4ffaa00fe2f87cb5e16c", "url": "https://api.github.com/repos/rust-lang/rust/commits/1ceb81b34552c0ff466f4ffaa00fe2f87cb5e16c", "html_url": "https://github.com/rust-lang/rust/commit/1ceb81b34552c0ff466f4ffaa00fe2f87cb5e16c"}], "stats": {"total": 17, "additions": 7, "deletions": 10}, "files": [{"sha": "b2c0aca42bdf589970aa71fe3a69f27a9cd94240", "filename": "rust-version", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6ab014723a0ec2b382d309f355c10cf99557b55f/rust-version", "raw_url": "https://github.com/rust-lang/rust/raw/6ab014723a0ec2b382d309f355c10cf99557b55f/rust-version", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rust-version?ref=6ab014723a0ec2b382d309f355c10cf99557b55f", "patch": "@@ -1 +1 @@\n-021a5033098ff0e3f7126acc7ac35149d325f16d\n+7cdaffd7962c4aae0cadd82baa241901b03f9458"}, {"sha": "8d564456f4edfd6bb5d940b43b659b87512afcbc", "filename": "src/intrinsic.rs", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/6ab014723a0ec2b382d309f355c10cf99557b55f/src%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ab014723a0ec2b382d309f355c10cf99557b55f/src%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fintrinsic.rs?ref=6ab014723a0ec2b382d309f355c10cf99557b55f", "patch": "@@ -5,7 +5,7 @@ use rustc::ty;\n \n use crate::{\n     PlaceTy, OpTy, ImmTy, Immediate, Scalar, ScalarMaybeUndef, Tag,\n-    OperatorEvalContextExt, MiriMemoryKind,\n+    OperatorEvalContextExt\n };\n \n impl<'a, 'mir, 'tcx> EvalContextExt<'a, 'mir, 'tcx> for crate::MiriEvalContext<'a, 'mir, 'tcx> {}\n@@ -398,14 +398,6 @@ pub trait EvalContextExt<'a, 'mir, 'tcx: 'a+'mir>: crate::MiriEvalContextExt<'a,\n                 )?;\n             }\n \n-            \"type_name\" => {\n-                let ty = substs.type_at(0);\n-                let ty_name = ty.to_string();\n-                let ptr = this.memory_mut().allocate_static_bytes(ty_name.as_bytes(), MiriMemoryKind::Static.into());\n-                let value = Immediate::new_slice(Scalar::Ptr(ptr), ty_name.len() as u64, this);\n-                this.write_immediate(value, dest)?;\n-            }\n-\n             \"unchecked_div\" => {\n                 let l = this.read_immediate(args[0])?;\n                 let r = this.read_immediate(args[1])?;"}, {"sha": "963265749d13697d5ecc9249430a85f80d9d1efd", "filename": "tests/run-pass/intrinsics.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/6ab014723a0ec2b382d309f355c10cf99557b55f/tests%2Frun-pass%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ab014723a0ec2b382d309f355c10cf99557b55f/tests%2Frun-pass%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fintrinsics.rs?ref=6ab014723a0ec2b382d309f355c10cf99557b55f", "patch": "@@ -1,3 +1,6 @@\n+#![feature(core_intrinsics)]\n+\n+use std::intrinsics::type_name;\n use std::mem::{size_of, size_of_val};\n \n fn main() {\n@@ -7,4 +10,6 @@ fn main() {\n     assert_eq!(size_of_val(&[] as &[i32]), 0);\n     assert_eq!(size_of_val(&[1, 2, 3] as &[i32]), 12);\n     assert_eq!(size_of_val(\"foobar\"), 6);\n+\n+    assert_eq!(unsafe { type_name::<Option<i32>>() }, \"core::option::Option<i32>\");\n }"}]}