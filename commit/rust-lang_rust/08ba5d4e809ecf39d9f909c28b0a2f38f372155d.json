{"sha": "08ba5d4e809ecf39d9f909c28b0a2f38f372155d", "node_id": "C_kwDOAAsO6NoAKDA4YmE1ZDRlODA5ZWNmMzlkOWY5MDljMjhiMGEyZjM4ZjM3MjE1NWQ", "commit": {"author": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2022-12-14T12:25:53Z"}, "committer": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2022-12-14T12:25:53Z"}, "message": "Remove a couple of module.isa() calls", "tree": {"sha": "aab56199e1ecffe7a9cb95b569ca19d77841f240", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aab56199e1ecffe7a9cb95b569ca19d77841f240"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/08ba5d4e809ecf39d9f909c28b0a2f38f372155d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/08ba5d4e809ecf39d9f909c28b0a2f38f372155d", "html_url": "https://github.com/rust-lang/rust/commit/08ba5d4e809ecf39d9f909c28b0a2f38f372155d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/08ba5d4e809ecf39d9f909c28b0a2f38f372155d/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6e772b86a8b62132173f9610302361aadb2167bd", "url": "https://api.github.com/repos/rust-lang/rust/commits/6e772b86a8b62132173f9610302361aadb2167bd", "html_url": "https://github.com/rust-lang/rust/commit/6e772b86a8b62132173f9610302361aadb2167bd"}], "stats": {"total": 29, "additions": 17, "deletions": 12}, "files": [{"sha": "65cc6b4376713d8c7e855c2fca1f833894a3cd09", "filename": "src/abi/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/08ba5d4e809ecf39d9f909c28b0a2f38f372155d/src%2Fabi%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/08ba5d4e809ecf39d9f909c28b0a2f38f372155d/src%2Fabi%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fabi%2Fmod.rs?ref=08ba5d4e809ecf39d9f909c28b0a2f38f372155d", "patch": "@@ -56,13 +56,13 @@ pub(crate) fn conv_to_call_conv(c: Conv, default_call_conv: CallConv) -> CallCon\n \n pub(crate) fn get_function_sig<'tcx>(\n     tcx: TyCtxt<'tcx>,\n-    triple: &target_lexicon::Triple,\n+    default_call_conv: CallConv,\n     inst: Instance<'tcx>,\n ) -> Signature {\n     assert!(!inst.substs.needs_infer());\n     clif_sig_from_fn_abi(\n         tcx,\n-        CallConv::triple_default(triple),\n+        default_call_conv,\n         &RevealAllLayoutCx(tcx).fn_abi_of_instance(inst, ty::List::empty()),\n     )\n }\n@@ -74,7 +74,7 @@ pub(crate) fn import_function<'tcx>(\n     inst: Instance<'tcx>,\n ) -> FuncId {\n     let name = tcx.symbol_name(inst).name;\n-    let sig = get_function_sig(tcx, module.isa().triple(), inst);\n+    let sig = get_function_sig(tcx, module.target_config().default_call_conv, inst);\n     match module.declare_function(name, Linkage::Import, &sig) {\n         Ok(func_id) => func_id,\n         Err(ModuleError::IncompatibleDeclaration(_)) => tcx.sess.fatal(&format!("}, {"sha": "8508227179ac611fb77c350c541e5835e0313936", "filename": "src/allocator.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/08ba5d4e809ecf39d9f909c28b0a2f38f372155d/src%2Fallocator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/08ba5d4e809ecf39d9f909c28b0a2f38f372155d/src%2Fallocator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fallocator.rs?ref=08ba5d4e809ecf39d9f909c28b0a2f38f372155d", "patch": "@@ -66,7 +66,7 @@ fn codegen_inner(\n         };\n \n         let sig = Signature {\n-            call_conv: CallConv::triple_default(module.isa().triple()),\n+            call_conv: module.target_config().default_call_conv,\n             params: arg_tys.iter().cloned().map(AbiParam::new).collect(),\n             returns: output.into_iter().map(AbiParam::new).collect(),\n         };\n@@ -104,7 +104,7 @@ fn codegen_inner(\n     }\n \n     let sig = Signature {\n-        call_conv: CallConv::triple_default(module.isa().triple()),\n+        call_conv: module.target_config().default_call_conv,\n         params: vec![AbiParam::new(usize_ty), AbiParam::new(usize_ty)],\n         returns: vec![],\n     };"}, {"sha": "89d955e8bf2e1d84c1a40045d0b063140d325525", "filename": "src/base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/08ba5d4e809ecf39d9f909c28b0a2f38f372155d/src%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/08ba5d4e809ecf39d9f909c28b0a2f38f372155d/src%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbase.rs?ref=08ba5d4e809ecf39d9f909c28b0a2f38f372155d", "patch": "@@ -59,7 +59,7 @@ pub(crate) fn codegen_fn<'tcx>(\n \n     // Declare function\n     let symbol_name = tcx.symbol_name(instance).name.to_string();\n-    let sig = get_function_sig(tcx, module.isa().triple(), instance);\n+    let sig = get_function_sig(tcx, module.target_config().default_call_conv, instance);\n     let func_id = module.declare_function(&symbol_name, Linkage::Local, &sig).unwrap();\n \n     // Make the FunctionBuilder"}, {"sha": "be1b8c9ead3bf2e133d326818df523e19f201fda", "filename": "src/driver/jit.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/08ba5d4e809ecf39d9f909c28b0a2f38f372155d/src%2Fdriver%2Fjit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/08ba5d4e809ecf39d9f909c28b0a2f38f372155d/src%2Fdriver%2Fjit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdriver%2Fjit.rs?ref=08ba5d4e809ecf39d9f909c28b0a2f38f372155d", "patch": "@@ -245,7 +245,11 @@ fn jit_fn(instance_ptr: *const Instance<'static>, trampoline_ptr: *const u8) ->\n             let backend_config = lazy_jit_state.backend_config.clone();\n \n             let name = tcx.symbol_name(instance).name;\n-            let sig = crate::abi::get_function_sig(tcx, jit_module.isa().triple(), instance);\n+            let sig = crate::abi::get_function_sig(\n+                tcx,\n+                jit_module.target_config().default_call_conv,\n+                instance,\n+            );\n             let func_id = jit_module.declare_function(name, Linkage::Export, &sig).unwrap();\n \n             let current_ptr = jit_module.read_got_entry(func_id);\n@@ -344,7 +348,7 @@ fn codegen_shim<'tcx>(\n     let pointer_type = module.target_config().pointer_type();\n \n     let name = tcx.symbol_name(inst).name;\n-    let sig = crate::abi::get_function_sig(tcx, module.isa().triple(), inst);\n+    let sig = crate::abi::get_function_sig(tcx, module.target_config().default_call_conv, inst);\n     let func_id = module.declare_function(name, Linkage::Export, &sig).unwrap();\n \n     let instance_ptr = Box::into_raw(Box::new(inst));"}, {"sha": "6e925cea277078b68ac5d03de3cc18fae0e91e71", "filename": "src/driver/mod.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/08ba5d4e809ecf39d9f909c28b0a2f38f372155d/src%2Fdriver%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/08ba5d4e809ecf39d9f909c28b0a2f38f372155d/src%2Fdriver%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdriver%2Fmod.rs?ref=08ba5d4e809ecf39d9f909c28b0a2f38f372155d", "patch": "@@ -24,7 +24,8 @@ fn predefine_mono_items<'tcx>(\n                 MonoItem::Fn(instance) => {\n                     let name = tcx.symbol_name(instance).name;\n                     let _inst_guard = crate::PrintOnPanic(|| format!(\"{:?} {}\", instance, name));\n-                    let sig = get_function_sig(tcx, module.isa().triple(), instance);\n+                    let sig =\n+                        get_function_sig(tcx, module.target_config().default_call_conv, instance);\n                     let linkage = crate::linkage::get_clif_linkage(\n                         mono_item,\n                         linkage,"}, {"sha": "c10054e7f0d2c971711364aafdfe563558e3fd5d", "filename": "src/main_shim.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/08ba5d4e809ecf39d9f909c28b0a2f38f372155d/src%2Fmain_shim.rs", "raw_url": "https://github.com/rust-lang/rust/raw/08ba5d4e809ecf39d9f909c28b0a2f38f372155d/src%2Fmain_shim.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmain_shim.rs?ref=08ba5d4e809ecf39d9f909c28b0a2f38f372155d", "patch": "@@ -65,7 +65,7 @@ pub(crate) fn maybe_create_entry_wrapper(\n             returns: vec![AbiParam::new(m.target_config().pointer_type() /*isize*/)],\n             call_conv: crate::conv_to_call_conv(\n                 tcx.sess.target.options.entry_abi,\n-                CallConv::triple_default(m.isa().triple()),\n+                m.target_config().default_call_conv,\n             ),\n         };\n \n@@ -75,7 +75,7 @@ pub(crate) fn maybe_create_entry_wrapper(\n         let instance = Instance::mono(tcx, rust_main_def_id).polymorphize(tcx);\n \n         let main_name = tcx.symbol_name(instance).name;\n-        let main_sig = get_function_sig(tcx, m.isa().triple(), instance);\n+        let main_sig = get_function_sig(tcx, m.target_config().default_call_conv, instance);\n         let main_func_id = m.declare_function(main_name, Linkage::Import, &main_sig).unwrap();\n \n         let mut ctx = Context::new();\n@@ -119,7 +119,7 @@ pub(crate) fn maybe_create_entry_wrapper(\n                 .polymorphize(tcx);\n \n                 let report_name = tcx.symbol_name(report).name;\n-                let report_sig = get_function_sig(tcx, m.isa().triple(), report);\n+                let report_sig = get_function_sig(tcx, m.target_config().default_call_conv, report);\n                 let report_func_id =\n                     m.declare_function(report_name, Linkage::Import, &report_sig).unwrap();\n                 let report_func_ref = m.declare_func_in_func(report_func_id, &mut bcx.func);"}]}