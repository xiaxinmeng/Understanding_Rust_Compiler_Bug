{"sha": "9e9586da9555d779be81bd27f2390dced5ff78f4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjllOTU4NmRhOTU1NWQ3NzliZTgxYmQyN2YyMzkwZGNlZDVmZjc4ZjQ=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-10-21T09:21:52Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-10-21T09:21:52Z"}, "message": "constant ids are `Copy` now", "tree": {"sha": "0724b88453eaf19eb1518fd05b67c45cb5139df2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0724b88453eaf19eb1518fd05b67c45cb5139df2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9e9586da9555d779be81bd27f2390dced5ff78f4", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJYCd4wAAoJEFbW7qD8Z6xGQTAP/RD6EGE9WhUClMs1P2vnTyXH\n3WwCXViyo8k6Xv5OCIexrIv4np/nPH54svGNMmCXrPwsd2hQHzd41b1c6M1qxKGV\nbiXQsTFWQg6aAAotI77AdRPxYIpny0YN5vLkLh/649Ghk9nxoOHtFUg7bNx/wI95\n8e5D6TQU/jUlsyGtktWkbQa8d8M4Wcnkf4C1wpz7o+Il59J4QDmCD4SlzSW/9zhZ\nuNJQ1YzRvknwM/r3Is6E80FLeNK0qxpDmVTNym7kOImaNaZ8PAGloSUGCuPUFzGA\nYsvHBmGI5B/hMhm3wgPFrlRqfZM1yxReqXZIjJONq2aIchRor8MeM2QNuaiHMqsj\neaXBYREmu1kmEVONGl20ROwkIcq5LxIMdkkTCZvPHNgrlGFSTZDMZmhsXGBXRnYA\nm4E58uCS8aKDmICh4FLyPF9SoOYZ6tvD3p2nppbaIrk3WvihtbBats7sPIoPY880\nuQ7ULbFWJwBguu1fYQocNmFORvawtqOyzyqohA0eVm9xmx0SQAwzV8pFd5N4+5a6\n9YJoPZECub8SDIda7CHdg2onTvLfvuxJfy8FV3pGn02HGK9+NAmMax+EFt/XG+Tr\nv1bpN/5qxKhe12KAkZmz4qhT3jPwFCdsCiqrDiaCbvQIC9YNIh0ZUEmUjdLbj5gd\nUzDS86Ak0Da2br9w0u8Q\n=b+um\n-----END PGP SIGNATURE-----", "payload": "tree 0724b88453eaf19eb1518fd05b67c45cb5139df2\nparent f81c4ac91b7296dd306f1625fc995d55060a86d7\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1477041712 +0200\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1477041712 +0200\n\nconstant ids are `Copy` now"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9e9586da9555d779be81bd27f2390dced5ff78f4", "html_url": "https://github.com/rust-lang/rust/commit/9e9586da9555d779be81bd27f2390dced5ff78f4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9e9586da9555d779be81bd27f2390dced5ff78f4/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f81c4ac91b7296dd306f1625fc995d55060a86d7", "url": "https://api.github.com/repos/rust-lang/rust/commits/f81c4ac91b7296dd306f1625fc995d55060a86d7", "html_url": "https://github.com/rust-lang/rust/commit/f81c4ac91b7296dd306f1625fc995d55060a86d7"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "1207bed97a3aae4c8fba6a6431dd840c6bb3aa8d", "filename": "src/interpreter/step.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9e9586da9555d779be81bd27f2390dced5ff78f4/src%2Finterpreter%2Fstep.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e9586da9555d779be81bd27f2390dced5ff78f4/src%2Finterpreter%2Fstep.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Finterpreter%2Fstep.rs?ref=9e9586da9555d779be81bd27f2390dced5ff78f4", "patch": "@@ -129,13 +129,13 @@ impl<'a, 'b, 'tcx> ConstantExtractor<'a, 'b, 'tcx> {\n         }\n         self.try(|this| {\n             let mir = this.ecx.load_mir(def_id)?;\n-            this.ecx.statics.insert(cid.clone(), Constant::uninitialized(mir.return_ty));\n+            this.ecx.statics.insert(cid, Constant::uninitialized(mir.return_ty));\n             let cleanup = if immutable && !mir.return_ty.type_contents(this.ecx.tcx).interior_unsafe() {\n                 StackPopCleanup::Freeze\n             } else {\n                 StackPopCleanup::None\n             };\n-            this.ecx.push_stack_frame(def_id, span, mir, substs, Lvalue::Static(cid.clone()), cleanup)\n+            this.ecx.push_stack_frame(def_id, span, mir, substs, Lvalue::Static(cid), cleanup)\n         });\n     }\n     fn try<F: FnOnce(&mut Self) -> EvalResult<'tcx, ()>>(&mut self, f: F) {\n@@ -178,12 +178,12 @@ impl<'a, 'b, 'tcx> Visitor<'tcx> for ConstantExtractor<'a, 'b, 'tcx> {\n                 self.try(|this| {\n                     let mir = CachedMir::Owned(Rc::new(mir));\n                     let ty = this.ecx.monomorphize(mir.return_ty, this.substs);\n-                    this.ecx.statics.insert(cid.clone(), Constant::uninitialized(ty));\n+                    this.ecx.statics.insert(cid, Constant::uninitialized(ty));\n                     this.ecx.push_stack_frame(this.def_id,\n                                               constant.span,\n                                               mir,\n                                               this.substs,\n-                                              Lvalue::Static(cid.clone()),\n+                                              Lvalue::Static(cid),\n                                               StackPopCleanup::Freeze)\n                 });\n             }"}]}