{"sha": "2b151fd5c8a106f276477357b5371d1184d940d4", "node_id": "C_kwDOAAsO6NoAKDJiMTUxZmQ1YzhhMTA2ZjI3NjQ3NzM1N2I1MzcxZDExODRkOTQwZDQ", "commit": {"author": {"name": "Jack Huey", "email": "31162821+jackh726@users.noreply.github.com", "date": "2022-02-14T18:00:10Z"}, "committer": {"name": "Jack Huey", "email": "31162821+jackh726@users.noreply.github.com", "date": "2022-03-05T18:15:00Z"}, "message": "Review changes", "tree": {"sha": "e381d0c80e535cdfaeb0f23da8eb9d2cfdf31dba", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e381d0c80e535cdfaeb0f23da8eb9d2cfdf31dba"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2b151fd5c8a106f276477357b5371d1184d940d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2b151fd5c8a106f276477357b5371d1184d940d4", "html_url": "https://github.com/rust-lang/rust/commit/2b151fd5c8a106f276477357b5371d1184d940d4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2b151fd5c8a106f276477357b5371d1184d940d4/comments", "author": {"login": "jackh726", "id": 31162821, "node_id": "MDQ6VXNlcjMxMTYyODIx", "avatar_url": "https://avatars.githubusercontent.com/u/31162821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackh726", "html_url": "https://github.com/jackh726", "followers_url": "https://api.github.com/users/jackh726/followers", "following_url": "https://api.github.com/users/jackh726/following{/other_user}", "gists_url": "https://api.github.com/users/jackh726/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackh726/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackh726/subscriptions", "organizations_url": "https://api.github.com/users/jackh726/orgs", "repos_url": "https://api.github.com/users/jackh726/repos", "events_url": "https://api.github.com/users/jackh726/events{/privacy}", "received_events_url": "https://api.github.com/users/jackh726/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jackh726", "id": 31162821, "node_id": "MDQ6VXNlcjMxMTYyODIx", "avatar_url": "https://avatars.githubusercontent.com/u/31162821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackh726", "html_url": "https://github.com/jackh726", "followers_url": "https://api.github.com/users/jackh726/followers", "following_url": "https://api.github.com/users/jackh726/following{/other_user}", "gists_url": "https://api.github.com/users/jackh726/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackh726/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackh726/subscriptions", "organizations_url": "https://api.github.com/users/jackh726/orgs", "repos_url": "https://api.github.com/users/jackh726/repos", "events_url": "https://api.github.com/users/jackh726/events{/privacy}", "received_events_url": "https://api.github.com/users/jackh726/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c920eb88b247c40a64437db54c652f14b83113c3", "url": "https://api.github.com/repos/rust-lang/rust/commits/c920eb88b247c40a64437db54c652f14b83113c3", "html_url": "https://github.com/rust-lang/rust/commit/c920eb88b247c40a64437db54c652f14b83113c3"}], "stats": {"total": 180, "additions": 130, "deletions": 50}, "files": [{"sha": "ad1d4430c6b1926bf0fbeafc7b564c39a061586b", "filename": "compiler/rustc_ast/src/ast.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/2b151fd5c8a106f276477357b5371d1184d940d4/compiler%2Frustc_ast%2Fsrc%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b151fd5c8a106f276477357b5371d1184d940d4/compiler%2Frustc_ast%2Fsrc%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast%2Fsrc%2Fast.rs?ref=2b151fd5c8a106f276477357b5371d1184d940d4", "patch": "@@ -2666,6 +2666,18 @@ pub struct Trait {\n /// a `where` keyword (`bool`). This is split out from `WhereClause`, since there\n /// are two locations for where clause on type aliases, but their predicates\n /// are concatenated together.\n+///\n+/// Take this example:\n+/// ```rust, ignore\n+/// trait Foo {\n+///   type Assoc<'a, 'b> where Self: 'a, Self: 'b;\n+/// }\n+/// impl Foo for () {\n+///   type Assoc<'a, 'b> where Self: 'a = () where Self: 'b;\n+///   //                 ^^^^^^^^^^^^^^ first where clause\n+///   //                                     ^^^^^^^^^^^^^^ second where clause\n+/// }\n+/// ```\n #[derive(Copy, Clone, Encodable, Decodable, Debug, Default)]\n pub struct TyAliasWhereClause(pub bool, pub Span);\n "}, {"sha": "0cf73178d679d09dd3c0c3cac4a89ab1069ced04", "filename": "compiler/rustc_ast_passes/src/ast_validation.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2b151fd5c8a106f276477357b5371d1184d940d4/compiler%2Frustc_ast_passes%2Fsrc%2Fast_validation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b151fd5c8a106f276477357b5371d1184d940d4/compiler%2Frustc_ast_passes%2Fsrc%2Fast_validation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_passes%2Fsrc%2Fast_validation.rs?ref=2b151fd5c8a106f276477357b5371d1184d940d4", "patch": "@@ -1275,10 +1275,14 @@ impl<'a> Visitor<'a> for AstValidator<'a> {\n                 }\n                 self.check_type_no_bounds(bounds, \"this context\");\n                 if where_clauses.1.0 {\n-                    self.err_handler().span_err(\n+                    let mut err = self.err_handler().struct_span_err(\n                         where_clauses.1.1,\n                         \"where clauses are not allowed after the type for type aliases\",\n-                    )\n+                    );\n+                    err.note(\n+                        \"see issue #89122 <https://github.com/rust-lang/rust/issues/89122> for more information\",\n+                    );\n+                    err.emit();\n                 }\n             }\n             _ => {}"}, {"sha": "b892e520d3bdeb4194fef8342496f676752d3330", "filename": "compiler/rustc_lint/src/context.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/2b151fd5c8a106f276477357b5371d1184d940d4/compiler%2Frustc_lint%2Fsrc%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b151fd5c8a106f276477357b5371d1184d940d4/compiler%2Frustc_lint%2Fsrc%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fcontext.rs?ref=2b151fd5c8a106f276477357b5371d1184d940d4", "patch": "@@ -819,12 +819,14 @@ pub trait LintContext: Sized {\n                     }\n                 },\n                 BuiltinLintDiagnostics::DeprecatedWhereclauseLocation(new_span, suggestion) => {\n-                    db.span_suggestion(\n-                        new_span,\n-                        \"move it here\",\n-                        suggestion,\n+                    db.multipart_suggestion(\n+                        \"move it to the end of the type declaration\",\n+                        vec![(db.span.primary_span().unwrap(), \"\".to_string()), (new_span, suggestion)],\n                         Applicability::MachineApplicable,\n                     );\n+                    db.note(\n+                        \"see issue #89122 <https://github.com/rust-lang/rust/issues/89122> for more information\",\n+                    );\n                 },\n             }\n             // Rewrap `db`, and pass control to the user."}, {"sha": "41dd10676d5fd3cc41753344d5aa33f318dd195c", "filename": "src/test/ui/parser/type-alias-where-fixable.fixed", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/2b151fd5c8a106f276477357b5371d1184d940d4/src%2Ftest%2Fui%2Fparser%2Ftype-alias-where-fixable.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/2b151fd5c8a106f276477357b5371d1184d940d4/src%2Ftest%2Fui%2Fparser%2Ftype-alias-where-fixable.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Ftype-alias-where-fixable.fixed?ref=2b151fd5c8a106f276477357b5371d1184d940d4", "patch": "@@ -0,0 +1,30 @@\n+// check-pass\n+// run-rustfix\n+\n+#![feature(generic_associated_types)]\n+\n+trait Trait {\n+    // Fine.\n+    type Assoc where u32: Copy;\n+    // Fine.\n+    type Assoc2 where u32: Copy, i32: Copy;\n+}\n+\n+impl Trait for u32 {\n+    // Not fine, suggests moving.\n+    type Assoc  = () where u32: Copy;\n+    //~^ WARNING where clause not allowed here\n+    // Not fine, suggests moving `u32: Copy`\n+    type Assoc2  = () where i32: Copy, u32: Copy;\n+    //~^ WARNING where clause not allowed here\n+}\n+\n+impl Trait for i32 {\n+    // Fine.\n+    type Assoc = () where u32: Copy;\n+    // Not fine, suggests moving both.\n+    type Assoc2  = () where u32: Copy, i32: Copy;\n+    //~^ WARNING where clause not allowed here\n+}\n+\n+fn main() {}"}, {"sha": "562a530a7f302cd36e390e0cbf4fde833aedbdc4", "filename": "src/test/ui/parser/type-alias-where-fixable.rs", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/2b151fd5c8a106f276477357b5371d1184d940d4/src%2Ftest%2Fui%2Fparser%2Ftype-alias-where-fixable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b151fd5c8a106f276477357b5371d1184d940d4/src%2Ftest%2Fui%2Fparser%2Ftype-alias-where-fixable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Ftype-alias-where-fixable.rs?ref=2b151fd5c8a106f276477357b5371d1184d940d4", "patch": "@@ -0,0 +1,30 @@\n+// check-pass\n+// run-rustfix\n+\n+#![feature(generic_associated_types)]\n+\n+trait Trait {\n+    // Fine.\n+    type Assoc where u32: Copy;\n+    // Fine.\n+    type Assoc2 where u32: Copy, i32: Copy;\n+}\n+\n+impl Trait for u32 {\n+    // Not fine, suggests moving.\n+    type Assoc where u32: Copy = ();\n+    //~^ WARNING where clause not allowed here\n+    // Not fine, suggests moving `u32: Copy`\n+    type Assoc2 where u32: Copy = () where i32: Copy;\n+    //~^ WARNING where clause not allowed here\n+}\n+\n+impl Trait for i32 {\n+    // Fine.\n+    type Assoc = () where u32: Copy;\n+    // Not fine, suggests moving both.\n+    type Assoc2 where u32: Copy, i32: Copy = ();\n+    //~^ WARNING where clause not allowed here\n+}\n+\n+fn main() {}"}, {"sha": "7ec1a965bae7244999fe6356c006a5923d6016c2", "filename": "src/test/ui/parser/type-alias-where-fixable.stderr", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/2b151fd5c8a106f276477357b5371d1184d940d4/src%2Ftest%2Fui%2Fparser%2Ftype-alias-where-fixable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2b151fd5c8a106f276477357b5371d1184d940d4/src%2Ftest%2Fui%2Fparser%2Ftype-alias-where-fixable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Ftype-alias-where-fixable.stderr?ref=2b151fd5c8a106f276477357b5371d1184d940d4", "patch": "@@ -0,0 +1,42 @@\n+warning: where clause not allowed here\n+  --> $DIR/type-alias-where-fixable.rs:15:16\n+   |\n+LL |     type Assoc where u32: Copy = ();\n+   |                ^^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(deprecated_where_clause_location)]` on by default\n+   = note: see issue #89122 <https://github.com/rust-lang/rust/issues/89122> for more information\n+help: move it to the end of the type declaration\n+   |\n+LL -     type Assoc where u32: Copy = ();\n+LL +     type Assoc  = () where u32: Copy;\n+   | \n+\n+warning: where clause not allowed here\n+  --> $DIR/type-alias-where-fixable.rs:18:17\n+   |\n+LL |     type Assoc2 where u32: Copy = () where i32: Copy;\n+   |                 ^^^^^^^^^^^^^^^\n+   |\n+   = note: see issue #89122 <https://github.com/rust-lang/rust/issues/89122> for more information\n+help: move it to the end of the type declaration\n+   |\n+LL -     type Assoc2 where u32: Copy = () where i32: Copy;\n+LL +     type Assoc2  = () where i32: Copy, u32: Copy;\n+   | \n+\n+warning: where clause not allowed here\n+  --> $DIR/type-alias-where-fixable.rs:26:17\n+   |\n+LL |     type Assoc2 where u32: Copy, i32: Copy = ();\n+   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: see issue #89122 <https://github.com/rust-lang/rust/issues/89122> for more information\n+help: move it to the end of the type declaration\n+   |\n+LL -     type Assoc2 where u32: Copy, i32: Copy = ();\n+LL +     type Assoc2  = () where u32: Copy, i32: Copy;\n+   | \n+\n+warning: 3 warnings emitted\n+"}, {"sha": "f6e7dfb7b7b2ecd5788cf525625f2b4dc44060b6", "filename": "src/test/ui/parser/type-alias-where.rs", "status": "modified", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/2b151fd5c8a106f276477357b5371d1184d940d4/src%2Ftest%2Fui%2Fparser%2Ftype-alias-where.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b151fd5c8a106f276477357b5371d1184d940d4/src%2Ftest%2Fui%2Fparser%2Ftype-alias-where.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Ftype-alias-where.rs?ref=2b151fd5c8a106f276477357b5371d1184d940d4", "patch": "@@ -10,28 +10,4 @@ type Bar = () where u32: Copy;\n type Baz = () where;\n //~^ ERROR where clauses are not allowed\n \n-trait Trait {\n-    // Fine.\n-    type Assoc where u32: Copy;\n-    // Fine.\n-    type Assoc2 where u32: Copy, i32: Copy;\n-}\n-\n-impl Trait for u32 {\n-    // Not fine, suggests moving.\n-    type Assoc where u32: Copy = ();\n-    //~^ WARNING where clause not allowed here\n-    // Not fine, suggests moving `u32: Copy`\n-    type Assoc2 where u32: Copy = () where i32: Copy;\n-    //~^ WARNING where clause not allowed here\n-}\n-\n-impl Trait for i32 {\n-    // Fine.\n-    type Assoc = () where u32: Copy;\n-    // Not fine, suggests moving both.\n-    type Assoc2 where u32: Copy, i32: Copy = ();\n-    //~^ WARNING where clause not allowed here\n-}\n-\n fn main() {}"}, {"sha": "8789d2665ad92f49431c41fc51ea0c4497e2a89e", "filename": "src/test/ui/parser/type-alias-where.stderr", "status": "modified", "additions": 4, "deletions": 20, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/2b151fd5c8a106f276477357b5371d1184d940d4/src%2Ftest%2Fui%2Fparser%2Ftype-alias-where.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2b151fd5c8a106f276477357b5371d1184d940d4/src%2Ftest%2Fui%2Fparser%2Ftype-alias-where.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Ftype-alias-where.stderr?ref=2b151fd5c8a106f276477357b5371d1184d940d4", "patch": "@@ -3,32 +3,16 @@ error: where clauses are not allowed after the type for type aliases\n    |\n LL | type Bar = () where u32: Copy;\n    |               ^^^^^^^^^^^^^^^\n+   |\n+   = note: see issue #89122 <https://github.com/rust-lang/rust/issues/89122> for more information\n \n error: where clauses are not allowed after the type for type aliases\n   --> $DIR/type-alias-where.rs:10:15\n    |\n LL | type Baz = () where;\n    |               ^^^^^\n-\n-warning: where clause not allowed here\n-  --> $DIR/type-alias-where.rs:22:16\n-   |\n-LL |     type Assoc where u32: Copy = ();\n-   |                ^^^^^^^^^^^^^^^     - help: move it here: `where u32: Copy`\n-   |\n-   = note: `#[warn(deprecated_where_clause_location)]` on by default\n-\n-warning: where clause not allowed here\n-  --> $DIR/type-alias-where.rs:25:17\n-   |\n-LL |     type Assoc2 where u32: Copy = () where i32: Copy;\n-   |                 ^^^^^^^^^^^^^^^                     - help: move it here: `, u32: Copy`\n-\n-warning: where clause not allowed here\n-  --> $DIR/type-alias-where.rs:33:17\n    |\n-LL |     type Assoc2 where u32: Copy, i32: Copy = ();\n-   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^     - help: move it here: `where u32: Copy, i32: Copy`\n+   = note: see issue #89122 <https://github.com/rust-lang/rust/issues/89122> for more information\n \n-error: aborting due to 2 previous errors; 3 warnings emitted\n+error: aborting due to 2 previous errors\n "}]}