{"sha": "339fa20973c8dabe35a8c2ce65b2e1ee47e7d478", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMzOWZhMjA5NzNjOGRhYmUzNWE4YzJjZTY1YjJlMWVlNDdlN2Q0Nzg=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seiichi.uchida@dena.com", "date": "2018-07-24T22:16:43Z"}, "committer": {"name": "Seiichi Uchida", "email": "seiichi.uchida@dena.com", "date": "2018-07-24T23:58:37Z"}, "message": "Veto converting delimiters inside nested macro", "tree": {"sha": "211460a375a6ce310cedd48afb355815093ba25b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/211460a375a6ce310cedd48afb355815093ba25b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/339fa20973c8dabe35a8c2ce65b2e1ee47e7d478", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/339fa20973c8dabe35a8c2ce65b2e1ee47e7d478", "html_url": "https://github.com/rust-lang/rust/commit/339fa20973c8dabe35a8c2ce65b2e1ee47e7d478", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/339fa20973c8dabe35a8c2ce65b2e1ee47e7d478/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "975b3753ba9ef60889daa654b0f96db85be30e2a", "url": "https://api.github.com/repos/rust-lang/rust/commits/975b3753ba9ef60889daa654b0f96db85be30e2a", "html_url": "https://github.com/rust-lang/rust/commit/975b3753ba9ef60889daa654b0f96db85be30e2a"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "f00bb339cb09359d45705e4f49d4180632405d7c", "filename": "src/macros.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/339fa20973c8dabe35a8c2ce65b2e1ee47e7d478/src%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/339fa20973c8dabe35a8c2ce65b2e1ee47e7d478/src%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmacros.rs?ref=339fa20973c8dabe35a8c2ce65b2e1ee47e7d478", "patch": "@@ -168,7 +168,7 @@ pub fn rewrite_macro(\n     position: MacroPosition,\n ) -> Option<String> {\n     let guard = InsideMacroGuard::inside_macro_context(context);\n-    let result = rewrite_macro_inner(mac, extra_ident, context, shape, position);\n+    let result = rewrite_macro_inner(mac, extra_ident, context, shape, position, guard.is_nested);\n     if result.is_none() {\n         context.macro_rewrite_failure.replace(true);\n     }\n@@ -181,6 +181,7 @@ pub fn rewrite_macro_inner(\n     context: &RewriteContext,\n     shape: Shape,\n     position: MacroPosition,\n+    is_nested_macro: bool,\n ) -> Option<String> {\n     if context.config.use_try_shorthand() {\n         if let Some(expr) = convert_try_mac(mac, context) {\n@@ -193,7 +194,7 @@ pub fn rewrite_macro_inner(\n \n     let macro_name = rewrite_macro_name(context, &mac.node.path, extra_ident);\n \n-    let style = if FORCED_BRACKET_MACROS.contains(&&macro_name[..]) {\n+    let style = if FORCED_BRACKET_MACROS.contains(&&macro_name[..]) && !is_nested_macro {\n         DelimToken::Bracket\n     } else {\n         original_style\n@@ -326,7 +327,7 @@ pub fn rewrite_macro_inner(\n                 } else {\n                     Some(SeparatorTactic::Never)\n                 };\n-                if FORCED_BRACKET_MACROS.contains(macro_name) {\n+                if FORCED_BRACKET_MACROS.contains(macro_name) && !is_nested_macro {\n                     context.inside_macro.replace(false);\n                     if context.use_block_indent() {\n                         force_trailing_comma = Some(SeparatorTactic::Vertical);"}]}