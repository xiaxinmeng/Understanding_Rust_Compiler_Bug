{"sha": "50b1953f9b13342fa8034f91164ae8bb34d43207", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUwYjE5NTNmOWIxMzM0MmZhODAzNGY5MTE2NGFlOGJiMzRkNDMyMDc=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-06-30T23:03:07Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-06-30T23:08:28Z"}, "message": "Pretty-print view items in mod items\n\nFor mods that aren't defined at the file level we were forgetting to print the\nview items so, e.g. 'mod { use std; }' would not print correctly.", "tree": {"sha": "47e7b9c952c362cdddf84ab6edc7faabda7c8e4b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/47e7b9c952c362cdddf84ab6edc7faabda7c8e4b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/50b1953f9b13342fa8034f91164ae8bb34d43207", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/50b1953f9b13342fa8034f91164ae8bb34d43207", "html_url": "https://github.com/rust-lang/rust/commit/50b1953f9b13342fa8034f91164ae8bb34d43207", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/50b1953f9b13342fa8034f91164ae8bb34d43207/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1e63d5303f19b103393195a64d1069728015358f", "url": "https://api.github.com/repos/rust-lang/rust/commits/1e63d5303f19b103393195a64d1069728015358f", "html_url": "https://github.com/rust-lang/rust/commit/1e63d5303f19b103393195a64d1069728015358f"}], "stats": {"total": 24, "additions": 19, "deletions": 5}, "files": [{"sha": "9cc017a221f4dffc15f0bcfe400788e4e82bb71f", "filename": "src/comp/pretty/pprust.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/50b1953f9b13342fa8034f91164ae8bb34d43207/src%2Fcomp%2Fpretty%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50b1953f9b13342fa8034f91164ae8bb34d43207/src%2Fcomp%2Fpretty%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fpretty%2Fpprust.rs?ref=50b1953f9b13342fa8034f91164ae8bb34d43207", "patch": "@@ -41,8 +41,7 @@ fn print_crate(session sess, @ast::crate crate, str filename,\n              mutable cur_lit=0u,\n              mutable boxes=boxes,\n              mode=mode);\n-    print_inner_attributes(s, crate.node.attrs);\n-    print_mod(s, crate.node.module);\n+    print_mod(s, crate.node.module, crate.node.attrs);\n     eof(s.s);\n }\n \n@@ -186,7 +185,8 @@ fn commasep_exprs(&ps s, breaks b, vec[@ast::expr] exprs) {\n     commasep_cmnt(s, b, exprs, print_expr, expr_span);\n }\n \n-fn print_mod(&ps s, ast::_mod _mod) {\n+fn print_mod(&ps s, ast::_mod _mod, &vec[ast::attribute] attrs) {\n+    print_inner_attributes(s, attrs);\n     for (@ast::view_item vitem in _mod.view_items) {\n         print_view_item(s, vitem);\n     }\n@@ -322,8 +322,7 @@ fn print_item(&ps s, &@ast::item item) {\n             head(s, \"mod\");\n             word_nbsp(s, item.ident);\n             bopen(s);\n-            print_inner_attributes(s, item.attrs);\n-            for (@ast::item itm in _mod.items) { print_item(s, itm); }\n+            print_mod(s, _mod, item.attrs);\n             bclose(s, item.span);\n         }\n         case (ast::item_native_mod(?nmod)) {"}, {"sha": "b5041f106440e561970efaddc1cb7ac6759a8cb8", "filename": "src/test/run-pass/mod-view-items.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/50b1953f9b13342fa8034f91164ae8bb34d43207/src%2Ftest%2Frun-pass%2Fmod-view-items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50b1953f9b13342fa8034f91164ae8bb34d43207/src%2Ftest%2Frun-pass%2Fmod-view-items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmod-view-items.rs?ref=50b1953f9b13342fa8034f91164ae8bb34d43207", "patch": "@@ -0,0 +1,15 @@\n+// Test view items inside non-file-level mods\n+\n+// This is a regression test for an issue where we were failing to\n+// pretty-print such view items. If that happens again, this should\n+// begin failing.\n+\n+mod m {\n+  use std;\n+  import std::vec;\n+  fn f() -> vec[int] { vec::empty[int]() }\n+}\n+\n+fn main() {\n+  auto x = m::f();\n+}\n\\ No newline at end of file"}]}