{"sha": "81e06dac84fe073016befc2e860310fcd87715d6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgxZTA2ZGFjODRmZTA3MzAxNmJlZmMyZTg2MDMxMGZjZDg3NzE1ZDY=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2020-05-30T21:20:06Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2020-05-30T21:24:56Z"}, "message": "Add a test for `$:ident` in proc macro input", "tree": {"sha": "65cd0b180c30b075cd1fafb5010ae31961c5bf2e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/65cd0b180c30b075cd1fafb5010ae31961c5bf2e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/81e06dac84fe073016befc2e860310fcd87715d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/81e06dac84fe073016befc2e860310fcd87715d6", "html_url": "https://github.com/rust-lang/rust/commit/81e06dac84fe073016befc2e860310fcd87715d6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/81e06dac84fe073016befc2e860310fcd87715d6/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4d5ce340cd643cbb775728cfd223a7a4b5281bae", "url": "https://api.github.com/repos/rust-lang/rust/commits/4d5ce340cd643cbb775728cfd223a7a4b5281bae", "html_url": "https://github.com/rust-lang/rust/commit/4d5ce340cd643cbb775728cfd223a7a4b5281bae"}], "stats": {"total": 94, "additions": 94, "deletions": 0}, "files": [{"sha": "b57ce99b13841a41379ec11fa2527234cb948754", "filename": "src/test/ui/proc-macro/input-interpolated.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/81e06dac84fe073016befc2e860310fcd87715d6/src%2Ftest%2Fui%2Fproc-macro%2Finput-interpolated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81e06dac84fe073016befc2e860310fcd87715d6/src%2Ftest%2Fui%2Fproc-macro%2Finput-interpolated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Finput-interpolated.rs?ref=81e06dac84fe073016befc2e860310fcd87715d6", "patch": "@@ -0,0 +1,25 @@\n+// Check what token streams proc macros see when interpolated tokens are passed to them as input.\n+\n+// check-pass\n+// aux-build:test-macros.rs\n+\n+#[macro_use]\n+extern crate test_macros;\n+\n+macro_rules! pass_ident {\n+    ($i:ident) => {\n+        fn f() {\n+            print_bang!($i);\n+        }\n+\n+        #[print_attr]\n+        const $i: u8 = 0;\n+\n+        #[derive(Print)]\n+        struct $i {}\n+    };\n+}\n+\n+pass_ident!(A);\n+\n+fn main() {}"}, {"sha": "7529db3bd06f8dde1784962976e128bc4e47514b", "filename": "src/test/ui/proc-macro/input-interpolated.stdout", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/rust-lang/rust/blob/81e06dac84fe073016befc2e860310fcd87715d6/src%2Ftest%2Fui%2Fproc-macro%2Finput-interpolated.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/81e06dac84fe073016befc2e860310fcd87715d6/src%2Ftest%2Fui%2Fproc-macro%2Finput-interpolated.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Finput-interpolated.stdout?ref=81e06dac84fe073016befc2e860310fcd87715d6", "patch": "@@ -0,0 +1,69 @@\n+PRINT-BANG INPUT (DISPLAY): A\n+PRINT-BANG RE-COLLECTED (DISPLAY):  A \n+PRINT-BANG INPUT (DEBUG): TokenStream [\n+    Group {\n+        delimiter: None,\n+        stream: TokenStream [\n+            Ident {\n+                ident: \"A\",\n+                span: #0 bytes(402..403),\n+            },\n+        ],\n+        span: #3 bytes(269..271),\n+    },\n+]\n+PRINT-ATTR INPUT (DISPLAY): const A: u8 = 0;\n+PRINT-ATTR RE-COLLECTED (DISPLAY): const A : u8 = 0 ;\n+PRINT-ATTR INPUT (DEBUG): TokenStream [\n+    Ident {\n+        ident: \"const\",\n+        span: #0 bytes(0..0),\n+    },\n+    Ident {\n+        ident: \"A\",\n+        span: #0 bytes(0..0),\n+    },\n+    Punct {\n+        ch: ':',\n+        spacing: Alone,\n+        span: #0 bytes(0..0),\n+    },\n+    Ident {\n+        ident: \"u8\",\n+        span: #0 bytes(0..0),\n+    },\n+    Punct {\n+        ch: '=',\n+        spacing: Alone,\n+        span: #0 bytes(0..0),\n+    },\n+    Literal {\n+        kind: Integer,\n+        symbol: \"0\",\n+        suffix: None,\n+        span: #0 bytes(0..0),\n+    },\n+    Punct {\n+        ch: ';',\n+        spacing: Alone,\n+        span: #0 bytes(0..0),\n+    },\n+]\n+PRINT-DERIVE INPUT (DISPLAY): struct A {\n+}\n+PRINT-DERIVE RE-COLLECTED (DISPLAY): struct A { }\n+PRINT-DERIVE INPUT (DEBUG): TokenStream [\n+    Ident {\n+        ident: \"struct\",\n+        span: #0 bytes(0..0),\n+    },\n+    Ident {\n+        ident: \"A\",\n+        span: #0 bytes(0..0),\n+    },\n+    Group {\n+        delimiter: Brace,\n+        stream: TokenStream [],\n+        span: #0 bytes(0..0),\n+    },\n+]"}]}