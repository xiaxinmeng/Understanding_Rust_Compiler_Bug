{"sha": "5b795cf57e42aa31da7cb175d8ff27633085b5d7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjViNzk1Y2Y1N2U0MmFhMzFkYTdjYjE3NWQ4ZmYyNzYzMzA4NWI1ZDc=", "commit": {"author": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2018-07-07T21:16:27Z"}, "committer": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2018-07-07T21:16:27Z"}, "message": "Reformat std prelude source to show it is the sum of core and alloc preludes", "tree": {"sha": "61b464716e5cdc979b10876961bb1c46a2b55fdf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/61b464716e5cdc979b10876961bb1c46a2b55fdf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5b795cf57e42aa31da7cb175d8ff27633085b5d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5b795cf57e42aa31da7cb175d8ff27633085b5d7", "html_url": "https://github.com/rust-lang/rust/commit/5b795cf57e42aa31da7cb175d8ff27633085b5d7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5b795cf57e42aa31da7cb175d8ff27633085b5d7/comments", "author": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b842177cfac47668376c98932a931eaf47eed542", "url": "https://api.github.com/repos/rust-lang/rust/commits/b842177cfac47668376c98932a931eaf47eed542", "html_url": "https://github.com/rust-lang/rust/commit/b842177cfac47668376c98932a931eaf47eed542"}], "stats": {"total": 58, "additions": 42, "deletions": 16}, "files": [{"sha": "53763da5e288646d3216c7cb142a9159479dbd87", "filename": "src/libstd/prelude/v1.rs", "status": "modified", "additions": 42, "deletions": 16, "changes": 58, "blob_url": "https://github.com/rust-lang/rust/blob/5b795cf57e42aa31da7cb175d8ff27633085b5d7/src%2Flibstd%2Fprelude%2Fv1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b795cf57e42aa31da7cb175d8ff27633085b5d7/src%2Flibstd%2Fprelude%2Fv1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fprelude%2Fv1.rs?ref=5b795cf57e42aa31da7cb175d8ff27633085b5d7", "patch": "@@ -12,42 +12,68 @@\n //!\n //! See the [module-level documentation](../index.html) for more.\n \n+\n+\n #![stable(feature = \"rust1\", since = \"1.0.0\")]\n \n // Re-exported core operators\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-#[doc(no_inline)] pub use marker::{Copy, Send, Sized, Sync};\n+#[doc(no_inline)]\n+pub use marker::{Copy, Send, Sized, Sync};\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-#[doc(no_inline)] pub use ops::{Drop, Fn, FnMut, FnOnce};\n+#[doc(no_inline)]\n+pub use ops::{Drop, Fn, FnMut, FnOnce};\n \n // Re-exported functions\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-#[doc(no_inline)] pub use mem::drop;\n+#[doc(no_inline)]\n+pub use mem::drop;\n \n // Re-exported types and traits\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-#[doc(no_inline)] pub use boxed::Box;\n+#[doc(no_inline)]\n+pub use clone::Clone;\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-#[doc(no_inline)] pub use borrow::ToOwned;\n+#[doc(no_inline)]\n+pub use cmp::{PartialEq, PartialOrd, Eq, Ord};\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-#[doc(no_inline)] pub use clone::Clone;\n+#[doc(no_inline)]\n+pub use convert::{AsRef, AsMut, Into, From};\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-#[doc(no_inline)] pub use cmp::{PartialEq, PartialOrd, Eq, Ord};\n+#[doc(no_inline)]\n+pub use default::Default;\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-#[doc(no_inline)] pub use convert::{AsRef, AsMut, Into, From};\n+#[doc(no_inline)]\n+pub use iter::{Iterator, Extend, IntoIterator};\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-#[doc(no_inline)] pub use default::Default;\n+#[doc(no_inline)]\n+pub use iter::{DoubleEndedIterator, ExactSizeIterator};\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-#[doc(no_inline)] pub use iter::{Iterator, Extend, IntoIterator};\n+#[doc(no_inline)]\n+pub use option::Option::{self, Some, None};\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-#[doc(no_inline)] pub use iter::{DoubleEndedIterator, ExactSizeIterator};\n+#[doc(no_inline)]\n+pub use result::Result::{self, Ok, Err};\n+\n+\n+// The file so far is equivalent to src/libcore/prelude/v1.rs,\n+// and below to src/liballoc/prelude.rs.\n+// Those files are duplicated rather than using glob imports\n+// because we want docs to show these re-exports as pointing to within `std`.\n+\n+\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-#[doc(no_inline)] pub use option::Option::{self, Some, None};\n+#[doc(no_inline)]\n+pub use boxed::Box;\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-#[doc(no_inline)] pub use result::Result::{self, Ok, Err};\n+#[doc(no_inline)]\n+pub use borrow::ToOwned;\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-#[doc(no_inline)] pub use slice::SliceConcatExt;\n+#[doc(no_inline)]\n+pub use slice::SliceConcatExt;\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-#[doc(no_inline)] pub use string::{String, ToString};\n+#[doc(no_inline)]\n+pub use string::{String, ToString};\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-#[doc(no_inline)] pub use vec::Vec;\n+#[doc(no_inline)]\n+pub use vec::Vec;"}]}