{"sha": "9c89cf00c07daa35bb03909708d9597189e04def", "node_id": "MDY6Q29tbWl0NzI0NzEyOjljODljZjAwYzA3ZGFhMzViYjAzOTA5NzA4ZDk1OTcxODllMDRkZWY=", "commit": {"author": {"name": "logan-dev-oss", "email": "logan-dev-oss@protonmail.com", "date": "2020-04-10T08:40:49Z"}, "committer": {"name": "logan-dev-oss", "email": "logan-dev-oss@protonmail.com", "date": "2020-04-17T07:27:54Z"}, "message": "Fix issue #4892.", "tree": {"sha": "8f5bb4f595ac7a53faa2805de95d49a4db0a13da", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8f5bb4f595ac7a53faa2805de95d49a4db0a13da"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9c89cf00c07daa35bb03909708d9597189e04def", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9c89cf00c07daa35bb03909708d9597189e04def", "html_url": "https://github.com/rust-lang/rust/commit/9c89cf00c07daa35bb03909708d9597189e04def", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9c89cf00c07daa35bb03909708d9597189e04def/comments", "author": null, "committer": null, "parents": [{"sha": "82be9dc606afa8b3695f68eb082fb3f3bfb0c7b4", "url": "https://api.github.com/repos/rust-lang/rust/commits/82be9dc606afa8b3695f68eb082fb3f3bfb0c7b4", "html_url": "https://github.com/rust-lang/rust/commit/82be9dc606afa8b3695f68eb082fb3f3bfb0c7b4"}], "stats": {"total": 56, "additions": 55, "deletions": 1}, "files": [{"sha": "61c3cc37ae03e46f765da90ebdc84bb42669012a", "filename": "clippy_lints/src/precedence.rs", "status": "modified", "additions": 23, "deletions": 1, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/9c89cf00c07daa35bb03909708d9597189e04def/clippy_lints%2Fsrc%2Fprecedence.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c89cf00c07daa35bb03909708d9597189e04def/clippy_lints%2Fsrc%2Fprecedence.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fprecedence.rs?ref=9c89cf00c07daa35bb03909708d9597189e04def", "patch": "@@ -5,6 +5,23 @@ use rustc_lint::{EarlyContext, EarlyLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Spanned;\n \n+const ODD_FUNCTIONS_WHITELIST: [&str; 14] = [\n+    \"asin\",\n+    \"asinh\",\n+    \"atan\",\n+    \"atanh\",\n+    \"cbrt\",\n+    \"fract\",\n+    \"round\",\n+    \"signum\",\n+    \"sin\",\n+    \"sinh\",\n+    \"tan\",\n+    \"tanh\",\n+    \"to_degrees\",\n+    \"to_radians\",\n+];\n+\n declare_clippy_lint! {\n     /// **What it does:** Checks for operations where precedence may be unclear\n     /// and suggests to add parentheses. Currently it catches the following:\n@@ -86,11 +103,16 @@ impl EarlyLintPass for Precedence {\n         }\n \n         if let ExprKind::Unary(UnOp::Neg, ref rhs) = expr.kind {\n-            if let ExprKind::MethodCall(_, ref args) = rhs.kind {\n+            if let ExprKind::MethodCall(ref path_segment, ref args) = rhs.kind {\n                 if let Some(slf) = args.first() {\n                     if let ExprKind::Lit(ref lit) = slf.kind {\n                         match lit.kind {\n                             LitKind::Int(..) | LitKind::Float(..) => {\n+                                for &odd_function in &ODD_FUNCTIONS_WHITELIST {\n+                                    if odd_function == &*path_segment.ident.name.as_str() {\n+                                        return;\n+                                    }\n+                                }\n                                 let mut applicability = Applicability::MachineApplicable;\n                                 span_lint_and_sugg(\n                                     cx,"}, {"sha": "17b1f1bd0bf300171fd79a797ff0df0a765f1697", "filename": "tests/ui/precedence.fixed", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/9c89cf00c07daa35bb03909708d9597189e04def/tests%2Fui%2Fprecedence.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/9c89cf00c07daa35bb03909708d9597189e04def/tests%2Fui%2Fprecedence.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fprecedence.fixed?ref=9c89cf00c07daa35bb03909708d9597189e04def", "patch": "@@ -32,6 +32,22 @@ fn main() {\n     let _ = -(1i32.abs());\n     let _ = -(1f32.abs());\n \n+    // Odd functions shoud not trigger an error\n+    let _ = -1f64.asin();\n+    let _ = -1f64.asinh();\n+    let _ = -1f64.atan();\n+    let _ = -1f64.atanh();\n+    let _ = -1f64.cbrt();\n+    let _ = -1f64.fract();\n+    let _ = -1f64.round();\n+    let _ = -1f64.signum();\n+    let _ = -1f64.sin();\n+    let _ = -1f64.sinh();\n+    let _ = -1f64.tan();\n+    let _ = -1f64.tanh();\n+    let _ = -1f64.to_degrees();\n+    let _ = -1f64.to_radians();\n+\n     let b = 3;\n     trip!(b * 8);\n }"}, {"sha": "2d0891fd3c20c1c90631e6a582d14f50eafcdf95", "filename": "tests/ui/precedence.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/9c89cf00c07daa35bb03909708d9597189e04def/tests%2Fui%2Fprecedence.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c89cf00c07daa35bb03909708d9597189e04def/tests%2Fui%2Fprecedence.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fprecedence.rs?ref=9c89cf00c07daa35bb03909708d9597189e04def", "patch": "@@ -32,6 +32,22 @@ fn main() {\n     let _ = -(1i32.abs());\n     let _ = -(1f32.abs());\n \n+    // Odd functions shoud not trigger an error\n+    let _ = -1f64.asin();\n+    let _ = -1f64.asinh();\n+    let _ = -1f64.atan();\n+    let _ = -1f64.atanh();\n+    let _ = -1f64.cbrt();\n+    let _ = -1f64.fract();\n+    let _ = -1f64.round();\n+    let _ = -1f64.signum();\n+    let _ = -1f64.sin();\n+    let _ = -1f64.sinh();\n+    let _ = -1f64.tan();\n+    let _ = -1f64.tanh();\n+    let _ = -1f64.to_degrees();\n+    let _ = -1f64.to_radians();\n+\n     let b = 3;\n     trip!(b * 8);\n }"}]}