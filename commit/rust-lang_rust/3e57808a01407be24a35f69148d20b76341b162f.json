{"sha": "3e57808a01407be24a35f69148d20b76341b162f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNlNTc4MDhhMDE0MDdiZTI0YTM1ZjY5MTQ4ZDIwYjc2MzQxYjE2MmY=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2014-02-16T08:04:33Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2014-02-23T09:07:53Z"}, "message": "std: Move raw to std::raw\n\nIssue #1457", "tree": {"sha": "5b5d316455f91c7044b7fbc33e3da4c214b8821c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5b5d316455f91c7044b7fbc33e3da4c214b8821c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3e57808a01407be24a35f69148d20b76341b162f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3e57808a01407be24a35f69148d20b76341b162f", "html_url": "https://github.com/rust-lang/rust/commit/3e57808a01407be24a35f69148d20b76341b162f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3e57808a01407be24a35f69148d20b76341b162f/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4d10bdc5b9fecee38abcad78a86e552a961b1a0a", "url": "https://api.github.com/repos/rust-lang/rust/commits/4d10bdc5b9fecee38abcad78a86e552a961b1a0a", "html_url": "https://github.com/rust-lang/rust/commit/4d10bdc5b9fecee38abcad78a86e552a961b1a0a"}], "stats": {"total": 41, "additions": 22, "deletions": 19}, "files": [{"sha": "3f6dc299da515169b55cc05971e2c267b43f7271", "filename": "src/libgreen/context.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3e57808a01407be24a35f69148d20b76341b162f/src%2Flibgreen%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e57808a01407be24a35f69148d20b76341b162f/src%2Flibgreen%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibgreen%2Fcontext.rs?ref=3e57808a01407be24a35f69148d20b76341b162f", "patch": "@@ -13,7 +13,7 @@ use std::cast::{transmute, transmute_mut_unsafe,\n                 transmute_region, transmute_mut_region};\n use stack::Stack;\n use std::unstable::stack;\n-use std::unstable::raw;\n+use std::raw;\n \n // FIXME #7761: Registers is boxed so that it is 16-byte aligned, for storing\n // SSE regs.  It would be marginally better not to do this. In C++ we"}, {"sha": "f722744e23d78f5f8570e892093a2ae608b4e796", "filename": "src/libgreen/sched.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3e57808a01407be24a35f69148d20b76341b162f/src%2Flibgreen%2Fsched.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e57808a01407be24a35f69148d20b76341b162f/src%2Flibgreen%2Fsched.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibgreen%2Fsched.rs?ref=3e57808a01407be24a35f69148d20b76341b162f", "patch": "@@ -16,7 +16,7 @@ use std::rt::task::BlockedTask;\n use std::rt::task::Task;\n use std::sync::deque;\n use std::unstable::mutex::NativeMutex;\n-use std::unstable::raw;\n+use std::raw;\n \n use TaskState;\n use context::Context;"}, {"sha": "1d7fb64896f5213a6aa3e82822e02e9d143e7a28", "filename": "src/libgreen/task.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3e57808a01407be24a35f69148d20b76341b162f/src%2Flibgreen%2Ftask.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e57808a01407be24a35f69148d20b76341b162f/src%2Flibgreen%2Ftask.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibgreen%2Ftask.rs?ref=3e57808a01407be24a35f69148d20b76341b162f", "patch": "@@ -26,7 +26,7 @@ use std::rt::rtio;\n use std::rt::task::{Task, BlockedTask, SendMessage};\n use std::task::TaskOpts;\n use std::unstable::mutex::NativeMutex;\n-use std::unstable::raw;\n+use std::raw;\n \n use context::Context;\n use coroutine::Coroutine;"}, {"sha": "6dec7550fec345adddd28de9059050ef62ba1908", "filename": "src/librustc/back/archive.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3e57808a01407be24a35f69148d20b76341b162f/src%2Flibrustc%2Fback%2Farchive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e57808a01407be24a35f69148d20b76341b162f/src%2Flibrustc%2Fback%2Farchive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fback%2Farchive.rs?ref=3e57808a01407be24a35f69148d20b76341b162f", "patch": "@@ -22,7 +22,7 @@ use std::libc;\n use std::os;\n use std::run::{ProcessOptions, Process, ProcessOutput};\n use std::str;\n-use std::unstable::raw;\n+use std::raw;\n use extra::tempfile::TempDir;\n use syntax::abi;\n "}, {"sha": "af5d9838186d3e0f55b8f8520bb4d693f75a25fa", "filename": "src/libstd/c_str.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3e57808a01407be24a35f69148d20b76341b162f/src%2Flibstd%2Fc_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e57808a01407be24a35f69148d20b76341b162f/src%2Flibstd%2Fc_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fc_str.rs?ref=3e57808a01407be24a35f69148d20b76341b162f", "patch": "@@ -79,7 +79,7 @@ use str;\n use vec::{ImmutableVector, MutableVector};\n use vec;\n use rt::global_heap::malloc_raw;\n-use unstable::raw::Slice;\n+use raw::Slice;\n \n /// The representation of a C String.\n ///"}, {"sha": "8280553c1a3210347284697590db5cb1e86e0255", "filename": "src/libstd/cast.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3e57808a01407be24a35f69148d20b76341b162f/src%2Flibstd%2Fcast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e57808a01407be24a35f69148d20b76341b162f/src%2Flibstd%2Fcast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcast.rs?ref=3e57808a01407be24a35f69148d20b76341b162f", "patch": "@@ -113,7 +113,7 @@ pub unsafe fn copy_lifetime_vec<'a,S,T>(_ptr: &'a [S], ptr: &T) -> &'a T {\n #[cfg(test)]\n mod tests {\n     use cast::{bump_box_refcount, transmute};\n-    use unstable::raw;\n+    use raw;\n \n     #[test]\n     fn test_transmute_copy() {"}, {"sha": "39c7932cdc8f2e53a5009db979bcae8f2b149dec", "filename": "src/libstd/cleanup.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3e57808a01407be24a35f69148d20b76341b162f/src%2Flibstd%2Fcleanup.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e57808a01407be24a35f69148d20b76341b162f/src%2Flibstd%2Fcleanup.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcleanup.rs?ref=3e57808a01407be24a35f69148d20b76341b162f", "patch": "@@ -11,7 +11,7 @@\n #[doc(hidden)];\n \n use ptr;\n-use unstable::raw;\n+use raw;\n \n static RC_IMMORTAL : uint = 0x77777777;\n "}, {"sha": "65b908a9f5663a67e5f634322c898f9dca32e272", "filename": "src/libstd/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3e57808a01407be24a35f69148d20b76341b162f/src%2Flibstd%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e57808a01407be24a35f69148d20b76341b162f/src%2Flibstd%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flib.rs?ref=3e57808a01407be24a35f69148d20b76341b162f", "patch": "@@ -198,6 +198,8 @@ pub mod reflect;\n pub mod unstable;\n #[experimental]\n pub mod intrinsics;\n+#[experimental]\n+pub mod raw;\n \n /* For internal use, not exported */\n "}, {"sha": "4cd99492ee45836dd15bd1d85f650b5ee4ed3396", "filename": "src/libstd/managed.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3e57808a01407be24a35f69148d20b76341b162f/src%2Flibstd%2Fmanaged.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e57808a01407be24a35f69148d20b76341b162f/src%2Flibstd%2Fmanaged.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fmanaged.rs?ref=3e57808a01407be24a35f69148d20b76341b162f", "patch": "@@ -15,7 +15,7 @@\n /// Returns the refcount of a shared box (as just before calling this)\n #[inline]\n pub fn refcount<T>(t: @T) -> uint {\n-    use unstable::raw::Repr;\n+    use raw::Repr;\n     unsafe { (*t.repr()).ref_count - 1 }\n }\n "}, {"sha": "c7ba2ad393285b998a11a1f2ac356adeedc12760", "filename": "src/libstd/raw.rs", "status": "renamed", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3e57808a01407be24a35f69148d20b76341b162f/src%2Flibstd%2Fraw.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e57808a01407be24a35f69148d20b76341b162f/src%2Flibstd%2Fraw.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fraw.rs?ref=3e57808a01407be24a35f69148d20b76341b162f", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[allow(missing_doc)];\n+\n use cast;\n \n /// The representation of a Rust managed box", "previous_filename": "src/libstd/unstable/raw.rs"}, {"sha": "a9e70bd3c6316b9cc47e5991c5da27cada8b8ab5", "filename": "src/libstd/reflect.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3e57808a01407be24a35f69148d20b76341b162f/src%2Flibstd%2Freflect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e57808a01407be24a35f69148d20b76341b162f/src%2Flibstd%2Freflect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Freflect.rs?ref=3e57808a01407be24a35f69148d20b76341b162f", "patch": "@@ -18,7 +18,7 @@ Runtime type reflection\n \n use intrinsics::{Disr, Opaque, TyDesc, TyVisitor};\n use mem;\n-use unstable::raw;\n+use raw;\n \n /**\n  * Trait for visitor that wishes to reflect on data. To use this, create a"}, {"sha": "c1b276899d5a35ecfd0328137539b613b52a1afb", "filename": "src/libstd/repr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3e57808a01407be24a35f69148d20b76341b162f/src%2Flibstd%2Frepr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e57808a01407be24a35f69148d20b76341b162f/src%2Flibstd%2Frepr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frepr.rs?ref=3e57808a01407be24a35f69148d20b76341b162f", "patch": "@@ -30,7 +30,7 @@ use str::StrSlice;\n use to_str::ToStr;\n use vec::OwnedVector;\n use intrinsics::{Disr, Opaque, TyDesc, TyVisitor, get_tydesc, visit_tydesc};\n-use unstable::raw;\n+use raw;\n \n macro_rules! try( ($me:expr, $e:expr) => (\n     match $e {"}, {"sha": "23b23cf8af024ec85fc4f04de38534a65a451806", "filename": "src/libstd/rt/global_heap.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3e57808a01407be24a35f69148d20b76341b162f/src%2Flibstd%2Frt%2Fglobal_heap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e57808a01407be24a35f69148d20b76341b162f/src%2Flibstd%2Frt%2Fglobal_heap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fglobal_heap.rs?ref=3e57808a01407be24a35f69148d20b76341b162f", "patch": "@@ -11,7 +11,7 @@\n use libc::{c_void, size_t, free, malloc, realloc};\n use ptr::{RawPtr, mut_null};\n use intrinsics::abort;\n-use unstable::raw;\n+use raw;\n use mem::size_of;\n \n #[inline]"}, {"sha": "4ff25a34210e82b1bc55dd937c2bc7cbf535c673", "filename": "src/libstd/rt/local_heap.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3e57808a01407be24a35f69148d20b76341b162f/src%2Flibstd%2Frt%2Flocal_heap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e57808a01407be24a35f69148d20b76341b162f/src%2Flibstd%2Frt%2Flocal_heap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Flocal_heap.rs?ref=3e57808a01407be24a35f69148d20b76341b162f", "patch": "@@ -20,7 +20,7 @@ use ptr::RawPtr;\n use rt::global_heap;\n use rt::local::Local;\n use rt::task::Task;\n-use unstable::raw;\n+use raw;\n use vec::ImmutableVector;\n use vec_ng::Vec;\n "}, {"sha": "16d677b5ff251a4a11ee9488190de4417c9d6c30", "filename": "src/libstd/rt/unwind.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3e57808a01407be24a35f69148d20b76341b162f/src%2Flibstd%2Frt%2Funwind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e57808a01407be24a35f69148d20b76341b162f/src%2Flibstd%2Frt%2Funwind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Funwind.rs?ref=3e57808a01407be24a35f69148d20b76341b162f", "patch": "@@ -177,7 +177,7 @@ impl Unwinder {\n     }\n \n     pub fn try(&mut self, f: ||) {\n-        use unstable::raw::Closure;\n+        use raw::Closure;\n         use libc::{c_void};\n \n         unsafe {"}, {"sha": "4d5eabbed104e6644dbca6135146a780fefc8250", "filename": "src/libstd/str.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3e57808a01407be24a35f69148d20b76341b162f/src%2Flibstd%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e57808a01407be24a35f69148d20b76341b162f/src%2Flibstd%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fstr.rs?ref=3e57808a01407be24a35f69148d20b76341b162f", "patch": "@@ -104,7 +104,7 @@ use vec::{OwnedVector, OwnedCloneableVector, ImmutableVector, MutableVector};\n use vec_ng::Vec;\n use default::Default;\n use to_bytes::{IterBytes, Cb};\n-use unstable::raw::Repr;\n+use raw::Repr;\n \n /*\n Section: Creating a string\n@@ -1386,7 +1386,7 @@ pub mod raw {\n     use str::{is_utf8, OwnedStr, StrSlice};\n     use vec;\n     use vec::{MutableVector, ImmutableVector, OwnedVector};\n-    use unstable::raw::Slice;\n+    use raw::Slice;\n \n     /// Create a Rust string from a *u8 buffer of the given length\n     pub unsafe fn from_buf_len(buf: *u8, len: uint) -> ~str {"}, {"sha": "9f37bfcddb94ad1c6dead502940be0e44deb7dec", "filename": "src/libstd/unstable/mod.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3e57808a01407be24a35f69148d20b76341b162f/src%2Flibstd%2Funstable%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e57808a01407be24a35f69148d20b76341b162f/src%2Flibstd%2Funstable%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Funstable%2Fmod.rs?ref=3e57808a01407be24a35f69148d20b76341b162f", "patch": "@@ -21,7 +21,6 @@ pub mod simd;\n pub mod lang;\n pub mod sync;\n pub mod mutex;\n-pub mod raw;\n pub mod stack;\n \n /**"}, {"sha": "00617af05b19f6aa04afdd429534569136dec57d", "filename": "src/libstd/vec.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3e57808a01407be24a35f69148d20b76341b162f/src%2Flibstd%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e57808a01407be24a35f69148d20b76341b162f/src%2Flibstd%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fvec.rs?ref=3e57808a01407be24a35f69148d20b76341b162f", "patch": "@@ -122,7 +122,7 @@ use mem::size_of;\n use kinds::marker;\n use uint;\n use unstable::finally::try_finally;\n-use unstable::raw::{Repr, Slice, Vec};\n+use raw::{Repr, Slice, Vec};\n \n /**\n  * Creates and initializes an owned vector.\n@@ -2488,7 +2488,7 @@ pub mod raw {\n     use ptr;\n     use ptr::RawPtr;\n     use vec::{with_capacity, MutableVector, OwnedVector};\n-    use unstable::raw::Slice;\n+    use raw::Slice;\n \n     /**\n      * Form a slice from a pointer and length (as a number of units,"}, {"sha": "3532e7b26a40564eebe6259126167a03dbfa4fbd", "filename": "src/libstd/vec_ng.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3e57808a01407be24a35f69148d20b76341b162f/src%2Flibstd%2Fvec_ng.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e57808a01407be24a35f69148d20b76341b162f/src%2Flibstd%2Fvec_ng.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fvec_ng.rs?ref=3e57808a01407be24a35f69148d20b76341b162f", "patch": "@@ -24,7 +24,7 @@ use option::{None, Option, Some};\n use ptr::RawPtr;\n use ptr;\n use rt::global_heap::{malloc_raw, realloc_raw};\n-use unstable::raw::Slice;\n+use raw::Slice;\n use vec::{ImmutableVector, Items, MutItems, MutableVector, RevItems};\n \n pub struct Vec<T> {"}]}