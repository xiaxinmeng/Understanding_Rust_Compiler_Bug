{"sha": "0b43f70321df290f758cb4f835f861c4ea95d009", "node_id": "C_kwDOAAsO6NoAKDBiNDNmNzAzMjFkZjI5MGY3NThjYjRmODM1Zjg2MWM0ZWE5NWQwMDk", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-04-16T22:07:24Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-04-16T22:07:24Z"}, "message": "Rollup merge of #95933 - Urgau:rustdoc-htmldocck-tree-compare, r=GuillaumeGomez\n\nhtmldocck: Compare HTML tree instead of plain text html\n\nThis PR improves `htmldocck` by comparing HTML trees instead of plain text html in the case of doing a ```@snapshot``` test.\n\nThis fix the [CI issue](https://github.com/rust-lang-ci/rust/runs/5964305020?check_suite_focus=true) encounter in https://github.com/rust-lang/rust/pull/95813 where for some unknown reason one of the attributes is not always at the same place.\n\nThe code is largely based on https://github.com/formencode/formencode/blob/3a1ba9de2fdd494dd945510a4568a3afeddb0b2e/formencode/doctest_xml_compare.py#L72-L120 which is behind MIT License. The comparison function is straightforward except for the `text_compare` function which does some weird stuff that we may want to simply reduce to a plain old comparison.\n\nr? ``@GuillaumeGomez``", "tree": {"sha": "1b584f9123bafbc064bf190bea75c54d916369a7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1b584f9123bafbc064bf190bea75c54d916369a7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0b43f70321df290f758cb4f835f861c4ea95d009", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiWz4cCRBK7hj4Ov3rIwAAuwgIACCGwRId0IYnzYFJY6tVFFfA\nFhFWjavfjgFt0LiItxKNDgFW5d9VMD455ahYFeB+T7u4IA7f5tXDoIF/4ytEnz5H\nvQlHvf+JX40+b3PQJX/C1P1jHMLrGjaM7eAPKJ+YQJ6RhrfZnuj2k1CzGXXPSwZJ\nOqpnaK2zfMzOJ69RDq8xYxnV6JWB85WneePynVu+ulckgmjqj2PnuEEA8h/sVmGY\nwsS2Ye2ZyeHmgABC4EcpzcC+hvB4Mfa1p7mL0NHaZRNgy7NQXnD5ZEnQVTL1qQFF\nhHWTD0p4Jkj+UvOXCydBI+ccSlrJmoNkm6UmA9vM5CNy+Z6BkHGhJ5KV8JZ/DME=\n=1PD3\n-----END PGP SIGNATURE-----\n", "payload": "tree 1b584f9123bafbc064bf190bea75c54d916369a7\nparent bd334984e217235b2b2089f3008e1d4be79b6deb\nparent e6a87208071bc21bc3c5600e64f2fcd44245d805\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1650146844 +0200\ncommitter GitHub <noreply@github.com> 1650146844 +0200\n\nRollup merge of #95933 - Urgau:rustdoc-htmldocck-tree-compare, r=GuillaumeGomez\n\nhtmldocck: Compare HTML tree instead of plain text html\n\nThis PR improves `htmldocck` by comparing HTML trees instead of plain text html in the case of doing a ```@snapshot``` test.\n\nThis fix the [CI issue](https://github.com/rust-lang-ci/rust/runs/5964305020?check_suite_focus=true) encounter in https://github.com/rust-lang/rust/pull/95813 where for some unknown reason one of the attributes is not always at the same place.\n\nThe code is largely based on https://github.com/formencode/formencode/blob/3a1ba9de2fdd494dd945510a4568a3afeddb0b2e/formencode/doctest_xml_compare.py#L72-L120 which is behind MIT License. The comparison function is straightforward except for the `text_compare` function which does some weird stuff that we may want to simply reduce to a plain old comparison.\n\nr? ``@GuillaumeGomez``\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0b43f70321df290f758cb4f835f861c4ea95d009", "html_url": "https://github.com/rust-lang/rust/commit/0b43f70321df290f758cb4f835f861c4ea95d009", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0b43f70321df290f758cb4f835f861c4ea95d009/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bd334984e217235b2b2089f3008e1d4be79b6deb", "url": "https://api.github.com/repos/rust-lang/rust/commits/bd334984e217235b2b2089f3008e1d4be79b6deb", "html_url": "https://github.com/rust-lang/rust/commit/bd334984e217235b2b2089f3008e1d4be79b6deb"}, {"sha": "e6a87208071bc21bc3c5600e64f2fcd44245d805", "url": "https://api.github.com/repos/rust-lang/rust/commits/e6a87208071bc21bc3c5600e64f2fcd44245d805", "html_url": "https://github.com/rust-lang/rust/commit/e6a87208071bc21bc3c5600e64f2fcd44245d805"}], "stats": {"total": 70, "additions": 66, "deletions": 4}, "files": [{"sha": "df215f318239ec9e7120a0c58d83592704166cae", "filename": "src/etc/htmldocck.py", "status": "modified", "additions": 66, "deletions": 4, "changes": 70, "blob_url": "https://github.com/rust-lang/rust/blob/0b43f70321df290f758cb4f835f861c4ea95d009/src%2Fetc%2Fhtmldocck.py", "raw_url": "https://github.com/rust-lang/rust/raw/0b43f70321df290f758cb4f835f861c4ea95d009/src%2Fetc%2Fhtmldocck.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fhtmldocck.py?ref=0b43f70321df290f758cb4f835f861c4ea95d009", "patch": "@@ -285,6 +285,11 @@ def flatten(node):\n     return ''.join(acc)\n \n \n+def make_xml(text):\n+    xml = ET.XML('<xml>%s</xml>' % text)\n+    return xml\n+\n+\n def normalize_xpath(path):\n     path = path.replace(\"{{channel}}\", channel)\n     if path.startswith('//'):\n@@ -401,7 +406,7 @@ def get_tree_count(tree, path):\n     return len(tree.findall(path))\n \n \n-def check_snapshot(snapshot_name, tree, normalize_to_text):\n+def check_snapshot(snapshot_name, actual_tree, normalize_to_text):\n     assert rust_test_path.endswith('.rs')\n     snapshot_path = '{}.{}.{}'.format(rust_test_path[:-3], snapshot_name, 'html')\n     try:\n@@ -414,11 +419,15 @@ def check_snapshot(snapshot_name, tree, normalize_to_text):\n             raise FailedCheck('No saved snapshot value')\n \n     if not normalize_to_text:\n-        actual_str = ET.tostring(tree).decode('utf-8')\n+        actual_str = ET.tostring(actual_tree).decode('utf-8')\n     else:\n-        actual_str = flatten(tree)\n+        actual_str = flatten(actual_tree)\n+\n+    if not expected_str \\\n+        or (not normalize_to_text and\n+            not compare_tree(make_xml(actual_str), make_xml(expected_str), stderr)) \\\n+        or (normalize_to_text and actual_str != expected_str):\n \n-    if expected_str != actual_str:\n         if bless:\n             with open(snapshot_path, 'w') as snapshot_file:\n                 snapshot_file.write(actual_str)\n@@ -430,6 +439,59 @@ def check_snapshot(snapshot_name, tree, normalize_to_text):\n             print()\n             raise FailedCheck('Actual snapshot value is different than expected')\n \n+\n+# Adapted from https://github.com/formencode/formencode/blob/3a1ba9de2fdd494dd945510a4568a3afeddb0b2e/formencode/doctest_xml_compare.py#L72-L120\n+def compare_tree(x1, x2, reporter=None):\n+    if x1.tag != x2.tag:\n+        if reporter:\n+            reporter('Tags do not match: %s and %s' % (x1.tag, x2.tag))\n+        return False\n+    for name, value in x1.attrib.items():\n+        if x2.attrib.get(name) != value:\n+            if reporter:\n+                reporter('Attributes do not match: %s=%r, %s=%r'\n+                         % (name, value, name, x2.attrib.get(name)))\n+            return False\n+    for name in x2.attrib:\n+        if name not in x1.attrib:\n+            if reporter:\n+                reporter('x2 has an attribute x1 is missing: %s'\n+                         % name)\n+            return False\n+    if not text_compare(x1.text, x2.text):\n+        if reporter:\n+            reporter('text: %r != %r' % (x1.text, x2.text))\n+        return False\n+    if not text_compare(x1.tail, x2.tail):\n+        if reporter:\n+            reporter('tail: %r != %r' % (x1.tail, x2.tail))\n+        return False\n+    cl1 = list(x1)\n+    cl2 = list(x2)\n+    if len(cl1) != len(cl2):\n+        if reporter:\n+            reporter('children length differs, %i != %i'\n+                     % (len(cl1), len(cl2)))\n+        return False\n+    i = 0\n+    for c1, c2 in zip(cl1, cl2):\n+        i += 1\n+        if not compare_tree(c1, c2, reporter=reporter):\n+            if reporter:\n+                reporter('children %i do not match: %s'\n+                         % (i, c1.tag))\n+            return False\n+    return True\n+\n+\n+def text_compare(t1, t2):\n+    if not t1 and not t2:\n+        return True\n+    if t1 == '*' or t2 == '*':\n+        return True\n+    return (t1 or '').strip() == (t2 or '').strip()\n+\n+\n def stderr(*args):\n     if sys.version_info.major < 3:\n         file = codecs.getwriter('utf-8')(sys.stderr)"}]}