{"sha": "943152008fbea871013bec69c85baae8356a485d", "node_id": "C_kwDOAAsO6NoAKDk0MzE1MjAwOGZiZWE4NzEwMTNiZWM2OWM4NWJhYWU4MzU2YTQ4NWQ", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-07-11T09:49:29Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-07-11T09:49:29Z"}, "message": "Rollup merge of #98882 - compiler-errors:explain-doc-comments-in-macros, r=davidtwco\n\nexplain doc comments in macros a bit\n\nOpen to suggestions on improving this... macro parsing is very foreign to me.\n\nShould we have a structured suggestion to turn them into their regular non-doc comments?\n\nFixes #92846\nFixes #97850", "tree": {"sha": "5a03eddcd1d38ee407291d6ee5690e86d9d9718f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5a03eddcd1d38ee407291d6ee5690e86d9d9718f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/943152008fbea871013bec69c85baae8356a485d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiy/IpCRBK7hj4Ov3rIwAADvkIABi8B++5EufrSjBT43HT9JfB\n6oCAgVMcNPuKW0VVZLkjybM3pVYF/HfAYDFspFoefGIgwelTgd8nQLt/iKD2YRDF\nuiSFMDh3JR3+vj6Ps59Jr89m0+t9N3jr+u0kGFNHUXX+FHnj+L2j31G2fyV9loIQ\nIM8oTEY5EiTXaTrqDOnLkZHhxAXXB6Env1VO8We/kOkjlPgNdGiBhQi77Wkm5BRZ\nIvYWOw7DX74wcsLMBIWvl1ptYbSYh5eRAH8gMq6DFfjq/UuW6/8QBP2QQOTcah5g\nRAn7kl/nmMXsWbWb69KfHPf2v7blul5Qp6BC6YznYDOijCyrGzUPd/fL35o5ZmI=\n=hHVJ\n-----END PGP SIGNATURE-----\n", "payload": "tree 5a03eddcd1d38ee407291d6ee5690e86d9d9718f\nparent 2682b88c526d493edeb2d3f2df358f44db69b73f\nparent d2e5a929b99d8c26509ed638fb3b754c6603accf\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1657532969 +0530\ncommitter GitHub <noreply@github.com> 1657532969 +0530\n\nRollup merge of #98882 - compiler-errors:explain-doc-comments-in-macros, r=davidtwco\n\nexplain doc comments in macros a bit\n\nOpen to suggestions on improving this... macro parsing is very foreign to me.\n\nShould we have a structured suggestion to turn them into their regular non-doc comments?\n\nFixes #92846\nFixes #97850\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/943152008fbea871013bec69c85baae8356a485d", "html_url": "https://github.com/rust-lang/rust/commit/943152008fbea871013bec69c85baae8356a485d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/943152008fbea871013bec69c85baae8356a485d/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2682b88c526d493edeb2d3f2df358f44db69b73f", "url": "https://api.github.com/repos/rust-lang/rust/commits/2682b88c526d493edeb2d3f2df358f44db69b73f", "html_url": "https://github.com/rust-lang/rust/commit/2682b88c526d493edeb2d3f2df358f44db69b73f"}, {"sha": "d2e5a929b99d8c26509ed638fb3b754c6603accf", "url": "https://api.github.com/repos/rust-lang/rust/commits/d2e5a929b99d8c26509ed638fb3b754c6603accf", "html_url": "https://github.com/rust-lang/rust/commit/d2e5a929b99d8c26509ed638fb3b754c6603accf"}], "stats": {"total": 56, "additions": 50, "deletions": 6}, "files": [{"sha": "8d506a3ea8bbc64ee4d9c2cc23cd2a423e1eea8c", "filename": "compiler/rustc_error_messages/locales/en-US/expand.ftl", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/943152008fbea871013bec69c85baae8356a485d/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fexpand.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/943152008fbea871013bec69c85baae8356a485d/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fexpand.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fexpand.ftl?ref=943152008fbea871013bec69c85baae8356a485d", "patch": "@@ -0,0 +1,5 @@\n+expand-explain-doc-comment-outer =\n+    outer doc comments expand to `#[doc = \"...\"]`, which is what this macro attempted to match\n+\n+expand-explain-doc-comment-inner =\n+    inner doc comments expand to `#![doc = \"...\"]`, which is what this macro attempted to match"}, {"sha": "d16171cb162d6e45b4e9f189bf6e431ae665434a", "filename": "compiler/rustc_error_messages/src/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/943152008fbea871013bec69c85baae8356a485d/compiler%2Frustc_error_messages%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/943152008fbea871013bec69c85baae8356a485d/compiler%2Frustc_error_messages%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Fsrc%2Flib.rs?ref=943152008fbea871013bec69c85baae8356a485d", "patch": "@@ -33,11 +33,12 @@ pub use unic_langid::{langid, LanguageIdentifier};\n fluent_messages! {\n     borrowck => \"../locales/en-US/borrowck.ftl\",\n     builtin_macros => \"../locales/en-US/builtin_macros.ftl\",\n+    const_eval => \"../locales/en-US/const_eval.ftl\",\n+    expand => \"../locales/en-US/expand.ftl\",\n     lint => \"../locales/en-US/lint.ftl\",\n     parser => \"../locales/en-US/parser.ftl\",\n     privacy => \"../locales/en-US/privacy.ftl\",\n     typeck => \"../locales/en-US/typeck.ftl\",\n-    const_eval => \"../locales/en-US/const_eval.ftl\",\n }\n \n pub use fluent_generated::{self as fluent, DEFAULT_LOCALE_RESOURCES};"}, {"sha": "3e9ddd6aec075419e0d220bf6367605e32936585", "filename": "compiler/rustc_expand/src/mbe/macro_rules.rs", "status": "modified", "additions": 35, "deletions": 3, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/943152008fbea871013bec69c85baae8356a485d/compiler%2Frustc_expand%2Fsrc%2Fmbe%2Fmacro_rules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/943152008fbea871013bec69c85baae8356a485d/compiler%2Frustc_expand%2Fsrc%2Fmbe%2Fmacro_rules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_expand%2Fsrc%2Fmbe%2Fmacro_rules.rs?ref=943152008fbea871013bec69c85baae8356a485d", "patch": "@@ -14,7 +14,7 @@ use rustc_ast::{NodeId, DUMMY_NODE_ID};\n use rustc_ast_pretty::pprust;\n use rustc_attr::{self as attr, TransparencyError};\n use rustc_data_structures::fx::FxHashMap;\n-use rustc_errors::{Applicability, Diagnostic, DiagnosticBuilder};\n+use rustc_errors::{Applicability, Diagnostic, DiagnosticBuilder, ErrorGuaranteed};\n use rustc_feature::Features;\n use rustc_lint_defs::builtin::{\n     RUST_2021_INCOMPATIBLE_OR_PATTERNS, SEMICOLON_IN_EXPRESSIONS_FROM_MACROS,\n@@ -25,6 +25,7 @@ use rustc_session::parse::ParseSess;\n use rustc_session::Session;\n use rustc_span::edition::Edition;\n use rustc_span::hygiene::Transparency;\n+use rustc_span::source_map::SourceMap;\n use rustc_span::symbol::{kw, sym, Ident, MacroRulesNormalizedIdent};\n use rustc_span::Span;\n \n@@ -345,7 +346,7 @@ fn expand_macro<'cx>(\n     if !def_span.is_dummy() && !cx.source_map().is_imported(def_span) {\n         err.span_label(cx.source_map().guess_head_span(def_span), \"when calling this macro\");\n     }\n-\n+    annotate_doc_comment(&mut err, sess.source_map(), span);\n     // Check whether there's a missing comma in this macro call, like `println!(\"{}\" a);`\n     if let Some((arg, comma_span)) = arg.add_comma() {\n         for lhs in lhses {\n@@ -453,7 +454,10 @@ pub fn compile_declarative_macro(\n         Failure(token, msg) => {\n             let s = parse_failure_msg(&token);\n             let sp = token.span.substitute_dummy(def.span);\n-            sess.parse_sess.span_diagnostic.struct_span_err(sp, &s).span_label(sp, msg).emit();\n+            let mut err = sess.parse_sess.span_diagnostic.struct_span_err(sp, &s);\n+            err.span_label(sp, msg);\n+            annotate_doc_comment(&mut err, sess.source_map(), sp);\n+            err.emit();\n             return dummy_syn_ext();\n         }\n         Error(sp, msg) => {\n@@ -590,6 +594,34 @@ pub fn compile_declarative_macro(\n     (mk_syn_ext(expander), rule_spans)\n }\n \n+#[derive(SessionSubdiagnostic)]\n+enum ExplainDocComment {\n+    #[label(expand::explain_doc_comment_inner)]\n+    Inner {\n+        #[primary_span]\n+        span: Span,\n+    },\n+    #[label(expand::explain_doc_comment_outer)]\n+    Outer {\n+        #[primary_span]\n+        span: Span,\n+    },\n+}\n+\n+fn annotate_doc_comment(\n+    err: &mut DiagnosticBuilder<'_, ErrorGuaranteed>,\n+    sm: &SourceMap,\n+    span: Span,\n+) {\n+    if let Ok(src) = sm.span_to_snippet(span) {\n+        if src.starts_with(\"///\") || src.starts_with(\"/**\") {\n+            err.subdiagnostic(ExplainDocComment::Outer { span });\n+        } else if src.starts_with(\"//!\") || src.starts_with(\"/*!\") {\n+            err.subdiagnostic(ExplainDocComment::Inner { span });\n+        }\n+    }\n+}\n+\n fn check_lhs_nt_follows(sess: &ParseSess, def: &ast::Item, lhs: &mbe::TokenTree) -> bool {\n     // lhs is going to be like TokenTree::Delimited(...), where the\n     // entire lhs is those tts. Or, it can be a \"bare sequence\", not wrapped in parens."}, {"sha": "0ebf3d52b637252979c8a5a59826901c589365ee", "filename": "src/test/ui/parser/macro/macro-doc-comments-1.stderr", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/943152008fbea871013bec69c85baae8356a485d/src%2Ftest%2Fui%2Fparser%2Fmacro%2Fmacro-doc-comments-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/943152008fbea871013bec69c85baae8356a485d/src%2Ftest%2Fui%2Fparser%2Fmacro%2Fmacro-doc-comments-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fmacro%2Fmacro-doc-comments-1.stderr?ref=943152008fbea871013bec69c85baae8356a485d", "patch": "@@ -5,7 +5,10 @@ LL | macro_rules! outer {\n    | ------------------ when calling this macro\n ...\n LL |     //! Inner\n-   |     ^^^^^^^^^ no rules expected this token in macro call\n+   |     ^^^^^^^^^\n+   |     |\n+   |     no rules expected this token in macro call\n+   |     inner doc comments expand to `#![doc = \"...\"]`, which is what this macro attempted to match\n \n error: aborting due to previous error\n "}, {"sha": "346d865868d99078fdd54aecd88ac8b502ce848c", "filename": "src/test/ui/parser/macro/macro-doc-comments-2.stderr", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/943152008fbea871013bec69c85baae8356a485d/src%2Ftest%2Fui%2Fparser%2Fmacro%2Fmacro-doc-comments-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/943152008fbea871013bec69c85baae8356a485d/src%2Ftest%2Fui%2Fparser%2Fmacro%2Fmacro-doc-comments-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fmacro%2Fmacro-doc-comments-2.stderr?ref=943152008fbea871013bec69c85baae8356a485d", "patch": "@@ -5,7 +5,10 @@ LL | macro_rules! inner {\n    | ------------------ when calling this macro\n ...\n LL |     /// Outer\n-   |     ^^^^^^^^^ no rules expected this token in macro call\n+   |     ^^^^^^^^^\n+   |     |\n+   |     no rules expected this token in macro call\n+   |     outer doc comments expand to `#[doc = \"...\"]`, which is what this macro attempted to match\n \n error: aborting due to previous error\n "}]}