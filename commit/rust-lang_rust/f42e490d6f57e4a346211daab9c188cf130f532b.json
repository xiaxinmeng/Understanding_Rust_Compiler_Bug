{"sha": "f42e490d6f57e4a346211daab9c188cf130f532b", "node_id": "C_kwDOAAsO6NoAKGY0MmU0OTBkNmY1N2U0YTM0NjIxMWRhYWI5YzE4OGNmMTMwZjUzMmI", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-11-14T17:48:27Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-11-21T16:37:53Z"}, "message": "Register obligations from type relation", "tree": {"sha": "b85be2f9042b9caf34fe8055f4e65fc92ae866bb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b85be2f9042b9caf34fe8055f4e65fc92ae866bb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f42e490d6f57e4a346211daab9c188cf130f532b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f42e490d6f57e4a346211daab9c188cf130f532b", "html_url": "https://github.com/rust-lang/rust/commit/f42e490d6f57e4a346211daab9c188cf130f532b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f42e490d6f57e4a346211daab9c188cf130f532b/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9a8e1eea7a8c86d493c96c2010247ce6126c6a10", "url": "https://api.github.com/repos/rust-lang/rust/commits/9a8e1eea7a8c86d493c96c2010247ce6126c6a10", "html_url": "https://github.com/rust-lang/rust/commit/9a8e1eea7a8c86d493c96c2010247ce6126c6a10"}], "stats": {"total": 19, "additions": 13, "deletions": 6}, "files": [{"sha": "2353ccc0c0582454ab2445c6e0905931c756c39e", "filename": "compiler/rustc_borrowck/src/type_check/relate_tys.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f42e490d6f57e4a346211daab9c188cf130f532b/compiler%2Frustc_borrowck%2Fsrc%2Ftype_check%2Frelate_tys.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f42e490d6f57e4a346211daab9c188cf130f532b/compiler%2Frustc_borrowck%2Fsrc%2Ftype_check%2Frelate_tys.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Ftype_check%2Frelate_tys.rs?ref=f42e490d6f57e4a346211daab9c188cf130f532b", "patch": "@@ -155,7 +155,7 @@ impl<'tcx> TypeRelatingDelegate<'tcx> for NllTypeRelatingDelegate<'_, '_, 'tcx>\n         true\n     }\n \n-    fn register_opaque_type_obligations(&mut self, obligations: PredicateObligations<'tcx>) {\n+    fn register_obligations(&mut self, obligations: PredicateObligations<'tcx>) {\n         self.type_checker\n             .fully_perform_op(\n                 self.locations,"}, {"sha": "6972656db76c3b34362a3d557a0d27f56119352e", "filename": "compiler/rustc_infer/src/infer/canonical/query_response.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f42e490d6f57e4a346211daab9c188cf130f532b/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fcanonical%2Fquery_response.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f42e490d6f57e4a346211daab9c188cf130f532b/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fcanonical%2Fquery_response.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fcanonical%2Fquery_response.rs?ref=f42e490d6f57e4a346211daab9c188cf130f532b", "patch": "@@ -740,7 +740,7 @@ impl<'tcx> TypeRelatingDelegate<'tcx> for QueryTypeRelatingDelegate<'_, 'tcx> {\n         true\n     }\n \n-    fn register_opaque_type_obligations(&mut self, obligations: PredicateObligations<'tcx>) {\n+    fn register_obligations(&mut self, obligations: PredicateObligations<'tcx>) {\n         self.obligations.extend(obligations);\n     }\n }"}, {"sha": "62ec7f57bfb148e8a2f71dfc07f449c7549a7d4e", "filename": "compiler/rustc_infer/src/infer/nll_relate/mod.rs", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/f42e490d6f57e4a346211daab9c188cf130f532b/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fnll_relate%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f42e490d6f57e4a346211daab9c188cf130f532b/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fnll_relate%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fnll_relate%2Fmod.rs?ref=f42e490d6f57e4a346211daab9c188cf130f532b", "patch": "@@ -25,7 +25,7 @@ use crate::infer::combine::ConstEquateRelation;\n use crate::infer::InferCtxt;\n use crate::infer::{ConstVarValue, ConstVariableValue};\n use crate::infer::{TypeVariableOrigin, TypeVariableOriginKind};\n-use crate::traits::PredicateObligation;\n+use crate::traits::{Obligation, PredicateObligation};\n use rustc_data_structures::fx::FxHashMap;\n use rustc_middle::traits::ObligationCause;\n use rustc_middle::ty::error::TypeError;\n@@ -93,7 +93,7 @@ pub trait TypeRelatingDelegate<'tcx> {\n     );\n \n     fn const_equate(&mut self, a: ty::Const<'tcx>, b: ty::Const<'tcx>);\n-    fn register_opaque_type_obligations(&mut self, obligations: Vec<PredicateObligation<'tcx>>);\n+    fn register_obligations(&mut self, obligations: Vec<PredicateObligation<'tcx>>);\n \n     /// Creates a new universe index. Used when instantiating placeholders.\n     fn create_next_universe(&mut self) -> ty::UniverseIndex;\n@@ -416,7 +416,7 @@ where\n             .infcx\n             .handle_opaque_type(a, b, true, &cause, self.delegate.param_env())?\n             .obligations;\n-        self.delegate.register_opaque_type_obligations(obligations);\n+        self.delegate.register_obligations(obligations);\n         trace!(a = ?a.kind(), b = ?b.kind(), \"opaque type instantiated\");\n         Ok(a)\n     }\n@@ -545,7 +545,14 @@ where\n     }\n \n     fn mark_ambiguous(&mut self) {\n-        bug!()\n+        let cause = ObligationCause::dummy_with_span(self.delegate.span());\n+        let param_env = self.delegate.param_env();\n+        self.delegate.register_obligations(vec![Obligation::new(\n+            self.tcx(),\n+            cause,\n+            param_env,\n+            ty::Binder::dummy(ty::PredicateKind::Ambiguous),\n+        )]);\n     }\n \n     #[instrument(skip(self, info), level = \"trace\", ret)]"}]}