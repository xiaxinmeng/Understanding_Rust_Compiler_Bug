{"sha": "1578955500ab438f80f27361b74a82364caa499f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE1Nzg5NTU1MDBhYjQzOGY4MGYyNzM2MWI3NGE4MjM2NGNhYTQ5OWY=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-01-08T08:25:06Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-01-27T19:30:35Z"}, "message": "Fix indentation", "tree": {"sha": "331a7626e7d7e1a271c862397bb972fb6c2cd246", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/331a7626e7d7e1a271c862397bb972fb6c2cd246"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1578955500ab438f80f27361b74a82364caa499f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1578955500ab438f80f27361b74a82364caa499f", "html_url": "https://github.com/rust-lang/rust/commit/1578955500ab438f80f27361b74a82364caa499f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1578955500ab438f80f27361b74a82364caa499f/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "71c365c38085c3c6e82bc6bcad823d9926dd3942", "url": "https://api.github.com/repos/rust-lang/rust/commits/71c365c38085c3c6e82bc6bcad823d9926dd3942", "html_url": "https://github.com/rust-lang/rust/commit/71c365c38085c3c6e82bc6bcad823d9926dd3942"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "a0da7cf2137d0391fc1a162d7db7848b531690f7", "filename": "src/librustc/ty/context.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1578955500ab438f80f27361b74a82364caa499f/src%2Flibrustc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1578955500ab438f80f27361b74a82364caa499f/src%2Flibrustc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fcontext.rs?ref=1578955500ab438f80f27361b74a82364caa499f", "patch": "@@ -1767,7 +1767,7 @@ macro_rules! nop_list_lift {\n         impl<'a, 'tcx> Lift<'tcx> for &'a List<$ty> {\n             type Lifted = &'tcx List<$lifted>;\n             fn lift_to_tcx<'b, 'gcx>(&self, tcx: TyCtxt<'b, 'gcx, 'tcx>) -> Option<Self::Lifted> {\n-                        if self.is_empty() {\n+                if self.is_empty() {\n                     return Some(List::empty());\n                 }\n                 if tcx.interners.arena.in_arena(*self as *const _) {"}]}