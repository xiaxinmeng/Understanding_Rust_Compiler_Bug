{"sha": "6da55efa4e8dcdcf0277a5bad9df8967d6a175ea", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZkYTU1ZWZhNGU4ZGNkY2YwMjc3YTViYWQ5ZGY4OTY3ZDZhMTc1ZWE=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-19T01:05:03Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-19T01:05:03Z"}, "message": "rustdoc: Add argument types to the doc", "tree": {"sha": "b4561394afd7f8dcfeed5dc2226fbb6bd089eeb4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b4561394afd7f8dcfeed5dc2226fbb6bd089eeb4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6da55efa4e8dcdcf0277a5bad9df8967d6a175ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6da55efa4e8dcdcf0277a5bad9df8967d6a175ea", "html_url": "https://github.com/rust-lang/rust/commit/6da55efa4e8dcdcf0277a5bad9df8967d6a175ea", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6da55efa4e8dcdcf0277a5bad9df8967d6a175ea/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f3fa7c15552294fba231ca8add5c113c8e6dd15c", "url": "https://api.github.com/repos/rust-lang/rust/commits/f3fa7c15552294fba231ca8add5c113c8e6dd15c", "html_url": "https://github.com/rust-lang/rust/commit/f3fa7c15552294fba231ca8add5c113c8e6dd15c"}], "stats": {"total": 82, "additions": 63, "deletions": 19}, "files": [{"sha": "11a6702a7a6cec679ad85abe589139336e318d65", "filename": "src/rustdoc/doc.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6da55efa4e8dcdcf0277a5bad9df8967d6a175ea/src%2Frustdoc%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6da55efa4e8dcdcf0277a5bad9df8967d6a175ea/src%2Frustdoc%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fdoc.rs?ref=6da55efa4e8dcdcf0277a5bad9df8967d6a175ea", "patch": "@@ -22,7 +22,8 @@ type fndoc = ~{\n };\n \n type argdoc = ~{\n-    name: str\n+    name: str,\n+    ty: option<str>\n };\n \n type retdoc = {"}, {"sha": "559c2fc47ab7829aa5d799d75478802e4a3c7bb6", "filename": "src/rustdoc/extract.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6da55efa4e8dcdcf0277a5bad9df8967d6a175ea/src%2Frustdoc%2Fextract.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6da55efa4e8dcdcf0277a5bad9df8967d6a175ea/src%2Frustdoc%2Fextract.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fextract.rs?ref=6da55efa4e8dcdcf0277a5bad9df8967d6a175ea", "patch": "@@ -95,7 +95,8 @@ fn argdocs_from_args(args: [ast::arg]) -> [doc::argdoc] {\n \n fn argdoc_from_arg(arg: ast::arg) -> doc::argdoc {\n     ~{\n-        name: arg.ident\n+        name: arg.ident,\n+        ty: none\n     }\n }\n "}, {"sha": "7a1f5e1036e556268fa56e0a92c373a679ccb756", "filename": "src/rustdoc/tystr_pass.rs", "status": "modified", "additions": 59, "deletions": 17, "changes": 76, "blob_url": "https://github.com/rust-lang/rust/blob/6da55efa4e8dcdcf0277a5bad9df8967d6a175ea/src%2Frustdoc%2Ftystr_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6da55efa4e8dcdcf0277a5bad9df8967d6a175ea/src%2Frustdoc%2Ftystr_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Ftystr_pass.rs?ref=6da55efa4e8dcdcf0277a5bad9df8967d6a175ea", "patch": "@@ -33,43 +33,45 @@ fn fold_fn(\n ) -> doc::fndoc {\n \n     let srv = fold.ctxt;\n-    let ret_ty = get_ret_ty(srv, doc.id);\n \n     ~{\n-        return: merge_ret_ty(doc.return, ret_ty)\n+        return: merge_ret_ty(srv, doc.id, doc.return),\n+        args: merge_arg_tys(srv, doc.id, doc.args)\n         with *doc\n     }\n }\n \n-fn get_ret_ty(srv: astsrv::srv, id: doc::ast_id) -> str {\n-    astsrv::exec(srv) {|ctxt|\n-        alt ctxt.map.get(id) {\n-          ast_map::node_item(@{\n-            node: ast::item_fn(decl, _, _), _\n-          }) {\n-            pprust::ty_to_str(decl.output)\n-          }\n-        }\n-    }\n-}\n-\n fn merge_ret_ty(\n-    doc: option<doc::retdoc>,\n-    tystr: str\n+    srv: astsrv::srv,\n+    fn_id: doc::ast_id,\n+    doc: option<doc::retdoc>\n ) -> option<doc::retdoc> {\n+    let ty = get_ret_ty(srv, fn_id);\n     alt doc {\n       some(doc) {\n         fail \"unimplemented\";\n       }\n       none. {\n         some({\n             desc: none,\n-            ty: some(tystr)\n+            ty: some(ty)\n         })\n       }\n     }\n }\n \n+fn get_ret_ty(srv: astsrv::srv, id: doc::ast_id) -> str {\n+    astsrv::exec(srv) {|ctxt|\n+        alt ctxt.map.get(id) {\n+          ast_map::node_item(@{\n+            node: ast::item_fn(decl, _, _), _\n+          }) {\n+            pprust::ty_to_str(decl.output)\n+          }\n+        }\n+    }\n+}\n+\n #[test]\n fn should_add_fn_ret_types() {\n     let source = \"fn a() -> int { }\";\n@@ -79,3 +81,43 @@ fn should_add_fn_ret_types() {\n     assert option::get(doc.topmod.fns[0].return).ty == some(\"int\");\n }\n \n+fn merge_arg_tys(\n+    srv: astsrv::srv,\n+    fn_id: doc::ast_id,\n+    args: [doc::argdoc]\n+) -> [doc::argdoc] {\n+    let tys = get_arg_tys(srv, fn_id);\n+    vec::map2(args, tys) {|arg, ty|\n+        // Sanity check that we're talking about the same args\n+        assert arg.name == tuple::first(ty);\n+        ~{\n+            ty: some(tuple::second(ty))\n+            with *arg\n+        }\n+    }\n+}\n+\n+fn get_arg_tys(srv: astsrv::srv, fn_id: doc::ast_id) -> [(str, str)] {\n+    astsrv::exec(srv) {|ctxt|\n+        alt ctxt.map.get(fn_id) {\n+          ast_map::node_item(@{\n+            node: ast::item_fn(decl, _, _), _\n+          }) {\n+            vec::map(decl.inputs) {|arg|\n+                (arg.ident, pprust::ty_to_str(arg.ty))\n+            }\n+          }\n+        }\n+    }\n+}\n+\n+#[test]\n+fn should_add_arg_types() {\n+    let source = \"fn a(b: int, c: bool) { }\";\n+    let srv = astsrv::mk_srv_from_str(source);\n+    let doc = extract::from_srv(srv, \"\");\n+    let doc = run(srv, doc);\n+    let fn_ = doc.topmod.fns[0];\n+    assert fn_.args[0].ty == some(\"int\");\n+    assert fn_.args[1].ty == some(\"bool\");\n+}\n\\ No newline at end of file"}]}