{"sha": "c5ad6c8c5f783cd247a42d77a58d21afc91c6984", "node_id": "C_kwDOAAsO6NoAKGM1YWQ2YzhjNWY3ODNjZDI0N2E0MmQ3N2E1OGQyMWFmYzkxYzY5ODQ", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-12-01T10:28:49Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-12-01T10:28:49Z"}, "message": "Merge #10896\n\n10896: hir: resolve assoc trait type in path r=jhgg a=jhgg\n\nfixes #9802\r\n\r\n- [ ] write tests, maybe, if this is even a good fix...\n\nCo-authored-by: Jake Heinz <jh@discordapp.com>", "tree": {"sha": "4f8933803f5e8634c98d192d44bafc62fc4f5385", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4f8933803f5e8634c98d192d44bafc62fc4f5385"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c5ad6c8c5f783cd247a42d77a58d21afc91c6984", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhp05hCRBK7hj4Ov3rIwAAfmoIAJ1vqbOpqxPFM2AW/gbkMahq\n9GctwT9EyMpViCInKuUxRoZhe/2jGVlScj9B0Hto5XGS9//trF947+/b0PFDeuCO\nFddwSUVU3vRbYyg2NKOjHuv81sdVb8rnjSY0Xe9Ey15WxoqXQmaKf2/awNn7TSEK\nL9w7JD04actuem2vBJr9ysCSFsLS3GbV9TD6BpaqIj23LL+SPq4XvVta0UgHCP+0\nHkyUCxcsVX8niosQWkC58b9NWbGd3yC1RwvS7aAbqYr/qAQGKeQbHiyLNmiwtMDb\n6i3I/prH+ZayyMDr8cNOEpqEk5wdlh24GxX8gmN48Wr5jVAcOpRBsXeCCK+XmEw=\n=T62D\n-----END PGP SIGNATURE-----\n", "payload": "tree 4f8933803f5e8634c98d192d44bafc62fc4f5385\nparent 2d0db312b543343f1c208b6be21a7a001cec7dd6\nparent b357569d0f43481b0149246768d48b26dcc9273f\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1638354529 +0000\ncommitter GitHub <noreply@github.com> 1638354529 +0000\n\nMerge #10896\n\n10896: hir: resolve assoc trait type in path r=jhgg a=jhgg\n\nfixes #9802\r\n\r\n- [ ] write tests, maybe, if this is even a good fix...\n\nCo-authored-by: Jake Heinz <jh@discordapp.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c5ad6c8c5f783cd247a42d77a58d21afc91c6984", "html_url": "https://github.com/rust-lang/rust/commit/c5ad6c8c5f783cd247a42d77a58d21afc91c6984", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c5ad6c8c5f783cd247a42d77a58d21afc91c6984/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2d0db312b543343f1c208b6be21a7a001cec7dd6", "url": "https://api.github.com/repos/rust-lang/rust/commits/2d0db312b543343f1c208b6be21a7a001cec7dd6", "html_url": "https://github.com/rust-lang/rust/commit/2d0db312b543343f1c208b6be21a7a001cec7dd6"}, {"sha": "b357569d0f43481b0149246768d48b26dcc9273f", "url": "https://api.github.com/repos/rust-lang/rust/commits/b357569d0f43481b0149246768d48b26dcc9273f", "html_url": "https://github.com/rust-lang/rust/commit/b357569d0f43481b0149246768d48b26dcc9273f"}], "stats": {"total": 31, "additions": 30, "deletions": 1}, "files": [{"sha": "23fcd02b57a09461af2317a8a6a6765769a70659", "filename": "crates/hir/src/source_analyzer.rs", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/c5ad6c8c5f783cd247a42d77a58d21afc91c6984/crates%2Fhir%2Fsrc%2Fsource_analyzer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c5ad6c8c5f783cd247a42d77a58d21afc91c6984/crates%2Fhir%2Fsrc%2Fsource_analyzer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Fsource_analyzer.rs?ref=c5ad6c8c5f783cd247a42d77a58d21afc91c6984", "patch": "@@ -16,7 +16,7 @@ use hir_def::{\n     expr::{ExprId, Pat, PatId},\n     path::{ModPath, Path, PathKind},\n     resolver::{resolver_for_scope, Resolver, TypeNs, ValueNs},\n-    AsMacroCall, DefWithBodyId, FieldId, FunctionId, LocalFieldId, VariantId,\n+    AsMacroCall, DefWithBodyId, FieldId, FunctionId, LocalFieldId, ModuleDefId, VariantId,\n };\n use hir_expand::{hygiene::Hygiene, name::AsName, HirFileId, InFile};\n use hir_ty::{\n@@ -544,6 +544,17 @@ fn resolve_hir_path_(\n                 }\n             }\n         }?;\n+\n+        // If we are in a TypeNs for a Trait, and we have an unresolved name, try to resolve it as a type\n+        // within the trait's associated types.\n+        if let (Some(unresolved), &TypeNs::TraitId(trait_id)) = (&unresolved, &ty) {\n+            if let Some(type_alias_id) =\n+                db.trait_data(trait_id).associated_type_by_name(&unresolved.name)\n+            {\n+                return Some(PathResolution::Def(ModuleDefId::from(type_alias_id).into()));\n+            }\n+        }\n+\n         let res = match ty {\n             TypeNs::SelfType(it) => PathResolution::SelfType(it.into()),\n             TypeNs::GenericParam(id) => PathResolution::TypeParam(TypeParam { id }),"}, {"sha": "d8c9827b5e0290df796151292eef580288676c78", "filename": "crates/ide/src/syntax_highlighting/test_data/highlighting.html", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/c5ad6c8c5f783cd247a42d77a58d21afc91c6984/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlighting.html", "raw_url": "https://github.com/rust-lang/rust/raw/c5ad6c8c5f783cd247a42d77a58d21afc91c6984/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlighting.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlighting.html?ref=c5ad6c8c5f783cd247a42d77a58d21afc91c6984", "patch": "@@ -265,4 +265,13 @@\n <span class=\"brace\">}</span>\n <span class=\"keyword\">const</span> <span class=\"constant declaration\">USAGE_OF_BOOL</span><span class=\"colon\">:</span><span class=\"builtin_type\">bool</span> <span class=\"operator\">=</span> <span class=\"enum public\">Bool</span><span class=\"operator\">::</span><span class=\"enum_variant public\">True</span><span class=\"operator\">.</span><span class=\"function associated consuming public\">to_primitive</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n \n+<span class=\"keyword\">trait</span> <span class=\"trait declaration\">Baz</span> <span class=\"brace\">{</span>\n+    <span class=\"keyword\">type</span> <span class=\"type_alias associated declaration trait\">Qux</span><span class=\"semicolon\">;</span>\n+<span class=\"brace\">}</span>\n+\n+<span class=\"keyword\">fn</span> <span class=\"function declaration\">baz</span><span class=\"angle\">&lt;</span><span class=\"type_param declaration\">T</span><span class=\"angle\">&gt;</span><span class=\"parenthesis\">(</span><span class=\"value_param declaration\">t</span><span class=\"colon\">:</span> <span class=\"type_param\">T</span><span class=\"parenthesis\">)</span>\n+<span class=\"keyword\">where</span>\n+    <span class=\"type_param\">T</span><span class=\"colon\">:</span> <span class=\"trait\">Baz</span><span class=\"comma\">,</span>\n+    <span class=\"angle\">&lt;</span><span class=\"type_param\">T</span> <span class=\"keyword\">as</span> <span class=\"trait\">Baz</span><span class=\"angle\">&gt;</span><span class=\"operator\">::</span><span class=\"type_alias associated trait\">Qux</span><span class=\"colon\">:</span> <span class=\"trait\">Bar</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n+\n </code></pre>\n\\ No newline at end of file"}, {"sha": "e74f39a8650885a40defb70b498878043dbd1032", "filename": "crates/ide/src/syntax_highlighting/tests.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/c5ad6c8c5f783cd247a42d77a58d21afc91c6984/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c5ad6c8c5f783cd247a42d77a58d21afc91c6984/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs?ref=c5ad6c8c5f783cd247a42d77a58d21afc91c6984", "patch": "@@ -238,6 +238,15 @@ impl Bool {\n }\n const USAGE_OF_BOOL:bool = Bool::True.to_primitive();\n \n+trait Baz {\n+    type Qux;\n+}\n+\n+fn baz<T>(t: T)\n+where\n+    T: Baz,\n+    <T as Baz>::Qux: Bar {}\n+\n //- /foo.rs crate:foo\n pub struct Person {\n     pub name: &'static str,"}]}