{"sha": "5e577b8aee60b7ee2394a50d8eec8a3b26541d11", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVlNTc3YjhhZWU2MGI3ZWUyMzk0YTUwZDhlZWM4YTNiMjY1NDFkMTE=", "commit": {"author": {"name": "Jorge Aparicio", "email": "jorge@japaric.io", "date": "2018-04-30T08:15:48Z"}, "committer": {"name": "Jorge Aparicio", "email": "jorge@japaric.io", "date": "2018-06-03T16:23:01Z"}, "message": "ship LLVM tools with the toolchain", "tree": {"sha": "0a55efe8512a2fd5c987f727bbe852ff8815224b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0a55efe8512a2fd5c987f727bbe852ff8815224b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5e577b8aee60b7ee2394a50d8eec8a3b26541d11", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5e577b8aee60b7ee2394a50d8eec8a3b26541d11", "html_url": "https://github.com/rust-lang/rust/commit/5e577b8aee60b7ee2394a50d8eec8a3b26541d11", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5e577b8aee60b7ee2394a50d8eec8a3b26541d11/comments", "author": {"login": "japaric", "id": 5018213, "node_id": "MDQ6VXNlcjUwMTgyMTM=", "avatar_url": "https://avatars.githubusercontent.com/u/5018213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/japaric", "html_url": "https://github.com/japaric", "followers_url": "https://api.github.com/users/japaric/followers", "following_url": "https://api.github.com/users/japaric/following{/other_user}", "gists_url": "https://api.github.com/users/japaric/gists{/gist_id}", "starred_url": "https://api.github.com/users/japaric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/japaric/subscriptions", "organizations_url": "https://api.github.com/users/japaric/orgs", "repos_url": "https://api.github.com/users/japaric/repos", "events_url": "https://api.github.com/users/japaric/events{/privacy}", "received_events_url": "https://api.github.com/users/japaric/received_events", "type": "User", "site_admin": false}, "committer": {"login": "japaric", "id": 5018213, "node_id": "MDQ6VXNlcjUwMTgyMTM=", "avatar_url": "https://avatars.githubusercontent.com/u/5018213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/japaric", "html_url": "https://github.com/japaric", "followers_url": "https://api.github.com/users/japaric/followers", "following_url": "https://api.github.com/users/japaric/following{/other_user}", "gists_url": "https://api.github.com/users/japaric/gists{/gist_id}", "starred_url": "https://api.github.com/users/japaric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/japaric/subscriptions", "organizations_url": "https://api.github.com/users/japaric/orgs", "repos_url": "https://api.github.com/users/japaric/repos", "events_url": "https://api.github.com/users/japaric/events{/privacy}", "received_events_url": "https://api.github.com/users/japaric/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7d576f25fcb0b0ea1e4d442329a4949765fa02f0", "url": "https://api.github.com/repos/rust-lang/rust/commits/7d576f25fcb0b0ea1e4d442329a4949765fa02f0", "html_url": "https://github.com/rust-lang/rust/commit/7d576f25fcb0b0ea1e4d442329a4949765fa02f0"}], "stats": {"total": 59, "additions": 55, "deletions": 4}, "files": [{"sha": "cbf209932099e3d2e285adade2322fc9172ca08d", "filename": "config.toml.example", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5e577b8aee60b7ee2394a50d8eec8a3b26541d11/config.toml.example", "raw_url": "https://github.com/rust-lang/rust/raw/5e577b8aee60b7ee2394a50d8eec8a3b26541d11/config.toml.example", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/config.toml.example?ref=5e577b8aee60b7ee2394a50d8eec8a3b26541d11", "patch": "@@ -347,6 +347,10 @@\n # rustc to execute.\n #lld = false\n \n+# Indicates whether some LLVM tools, like llvm-objdump, will be made available in the\n+# sysroot.\n+#llvm-tools = false\n+\n # Whether to deny warnings in crates\n #deny-warnings = true\n "}, {"sha": "ea234c0016c345374a73d284e2f81755c51269c6", "filename": "src/bootstrap/compile.rs", "status": "modified", "additions": 21, "deletions": 1, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/5e577b8aee60b7ee2394a50d8eec8a3b26541d11/src%2Fbootstrap%2Fcompile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e577b8aee60b7ee2394a50d8eec8a3b26541d11/src%2Fbootstrap%2Fcompile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcompile.rs?ref=5e577b8aee60b7ee2394a50d8eec8a3b26541d11", "patch": "@@ -31,7 +31,7 @@ use filetime::FileTime;\n use serde_json;\n \n use util::{exe, libdir, is_dylib, CiEnv};\n-use {Compiler, Mode};\n+use {Compiler, Mode, LLVM_TOOLS};\n use native;\n use tool;\n \n@@ -775,6 +775,23 @@ fn copy_codegen_backends_to_sysroot(builder: &Builder,\n     }\n }\n \n+fn copy_llvm_tools_to_sysroot(builder: &Builder,\n+                              target_compiler: Compiler) {\n+    let target = target_compiler.host;\n+\n+    let dst = builder.sysroot_libdir(target_compiler, target)\n+        .parent()\n+        .unwrap()\n+        .join(\"bin\");\n+    t!(fs::create_dir_all(&dst));\n+\n+    let src = builder.llvm_out(target).join(\"bin\");\n+    for tool in LLVM_TOOLS {\n+        let exe = exe(tool, &target);\n+        builder.copy(&src.join(&exe), &dst.join(&exe));\n+    }\n+}\n+\n fn copy_lld_to_sysroot(builder: &Builder,\n                        target_compiler: Compiler,\n                        lld_install_root: &Path) {\n@@ -966,6 +983,9 @@ impl Step for Assemble {\n         copy_codegen_backends_to_sysroot(builder,\n                                          build_compiler,\n                                          target_compiler);\n+        if builder.config.ship_llvm_tools {\n+            copy_llvm_tools_to_sysroot(builder, target_compiler);\n+        }\n         if let Some(lld_install) = lld_install {\n             copy_lld_to_sysroot(builder, target_compiler, &lld_install);\n         }"}, {"sha": "b676ba22172b5bea7bb5f1d4e656972fd2171f4a", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5e577b8aee60b7ee2394a50d8eec8a3b26541d11/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e577b8aee60b7ee2394a50d8eec8a3b26541d11/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=5e577b8aee60b7ee2394a50d8eec8a3b26541d11", "patch": "@@ -88,6 +88,7 @@ pub struct Config {\n     pub llvm_link_jobs: Option<u32>,\n \n     pub lld_enabled: bool,\n+    pub ship_llvm_tools: bool,\n \n     // rust codegen options\n     pub rust_optimize: bool,\n@@ -308,6 +309,7 @@ struct Rust {\n     codegen_backends_dir: Option<String>,\n     wasm_syscall: Option<bool>,\n     lld: Option<bool>,\n+    llvm_tools: Option<bool>,\n     deny_warnings: Option<bool>,\n     backtrace_on_ice: Option<bool>,\n }\n@@ -531,6 +533,7 @@ impl Config {\n             set(&mut config.test_miri, rust.test_miri);\n             set(&mut config.wasm_syscall, rust.wasm_syscall);\n             set(&mut config.lld_enabled, rust.lld);\n+            set(&mut config.ship_llvm_tools, rust.llvm_tools);\n             config.rustc_parallel_queries = rust.experimental_parallel_queries.unwrap_or(false);\n             config.rustc_default_linker = rust.default_linker.clone();\n             config.musl_root = rust.musl_root.clone().map(PathBuf::from);"}, {"sha": "36d936bab3baa719cdb0019ddcef7e71dae0d117", "filename": "src/bootstrap/configure.py", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5e577b8aee60b7ee2394a50d8eec8a3b26541d11/src%2Fbootstrap%2Fconfigure.py", "raw_url": "https://github.com/rust-lang/rust/raw/5e577b8aee60b7ee2394a50d8eec8a3b26541d11/src%2Fbootstrap%2Fconfigure.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfigure.py?ref=5e577b8aee60b7ee2394a50d8eec8a3b26541d11", "patch": "@@ -335,6 +335,7 @@ def set(key, value):\n     elif option.name == 'full-tools':\n         set('rust.codegen-backends', ['llvm', 'emscripten'])\n         set('rust.lld', True)\n+        set('rust.llvm-tools', True)\n         set('build.extended', True)\n     elif option.name == 'option-checking':\n         # this was handled above"}, {"sha": "9092deeac461862d63f23b48678cc7566e2e3715", "filename": "src/bootstrap/dist.rs", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/5e577b8aee60b7ee2394a50d8eec8a3b26541d11/src%2Fbootstrap%2Fdist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e577b8aee60b7ee2394a50d8eec8a3b26541d11/src%2Fbootstrap%2Fdist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdist.rs?ref=5e577b8aee60b7ee2394a50d8eec8a3b26541d11", "patch": "@@ -26,7 +26,7 @@ use std::process::{Command, Stdio};\n \n use build_helper::output;\n \n-use {Compiler, Mode};\n+use {Compiler, Mode, LLVM_TOOLS};\n use channel;\n use util::{libdir, is_dylib, exe};\n use builder::{Builder, RunConfig, ShouldRun, Step};\n@@ -503,6 +503,24 @@ impl Step for Rustc {\n                 builder.copy(&src, &dst);\n             }\n \n+            if builder.config.ship_llvm_tools {\n+                let src = builder.sysroot_libdir(compiler, host)\n+                    .parent()\n+                    .unwrap()\n+                    .join(\"bin\");\n+\n+                let dst = image.join(\"lib/rustlib\")\n+                    .join(&*host)\n+                    .join(\"bin\");\n+\n+                t!(fs::create_dir_all(&dst.parent().unwrap()));\n+\n+                for tool in LLVM_TOOLS {\n+                    let exe = exe(tool, &compiler.host);\n+                    builder.copy(&src.join(&exe), &dst.join(&exe));\n+                }\n+            }\n+\n             // Man pages\n             t!(fs::create_dir_all(image.join(\"share/man/man1\")));\n             let man_src = builder.src.join(\"src/doc/man\");"}, {"sha": "4d1bc6ad6bae3f91f285afadd67bb82d23b33c7a", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5e577b8aee60b7ee2394a50d8eec8a3b26541d11/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e577b8aee60b7ee2394a50d8eec8a3b26541d11/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=5e577b8aee60b7ee2394a50d8eec8a3b26541d11", "patch": "@@ -199,6 +199,8 @@ use flags::Subcommand;\n use cache::{Interned, INTERNER};\n use toolstate::ToolState;\n \n+const LLVM_TOOLS: &[&str] = &[\"llvm-nm\", \"llvm-objcopy\", \"llvm-objdump\", \"llvm-size\"];\n+\n /// A structure representing a Rust compiler.\n ///\n /// Each compiler has a `stage` that it is associated with and a `host` that"}, {"sha": "2f6af1e0640621b1cf461174f049034daad0e515", "filename": "src/bootstrap/native.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/5e577b8aee60b7ee2394a50d8eec8a3b26541d11/src%2Fbootstrap%2Fnative.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e577b8aee60b7ee2394a50d8eec8a3b26541d11/src%2Fbootstrap%2Fnative.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fnative.rs?ref=5e577b8aee60b7ee2394a50d8eec8a3b26541d11", "patch": "@@ -167,8 +167,11 @@ impl Step for Llvm {\n         // which saves both memory during parallel links and overall disk space\n         // for the tools.  We don't distribute any of those tools, so this is\n         // just a local concern.  However, it doesn't work well everywhere.\n-        if target.contains(\"linux-gnu\") || target.contains(\"apple-darwin\") {\n-           cfg.define(\"LLVM_LINK_LLVM_DYLIB\", \"ON\");\n+        //\n+        // If we are shipping llvm tools then we statically link them LLVM\n+        if (target.contains(\"linux-gnu\") || target.contains(\"apple-darwin\")) &&\n+            !builder.config.ship_llvm_tools  {\n+                cfg.define(\"LLVM_LINK_LLVM_DYLIB\", \"ON\");\n         }\n \n         if target.contains(\"msvc\") {"}]}