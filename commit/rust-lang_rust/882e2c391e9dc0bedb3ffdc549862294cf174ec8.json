{"sha": "882e2c391e9dc0bedb3ffdc549862294cf174ec8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg4MmUyYzM5MWU5ZGMwYmVkYjNmZmRjNTQ5ODYyMjk0Y2YxNzRlYzg=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-02-09T19:54:19Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-02-09T19:54:19Z"}, "message": "Fix the signature of CreateSymbolicLinkW\n\nCloses #12123", "tree": {"sha": "7327d8528becad90181e8480ac6f14d6ba08aa2c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7327d8528becad90181e8480ac6f14d6ba08aa2c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/882e2c391e9dc0bedb3ffdc549862294cf174ec8", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/882e2c391e9dc0bedb3ffdc549862294cf174ec8", "html_url": "https://github.com/rust-lang/rust/commit/882e2c391e9dc0bedb3ffdc549862294cf174ec8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/882e2c391e9dc0bedb3ffdc549862294cf174ec8/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b66ec3483bd5081bcc829efb88ceb841189b754d", "url": "https://api.github.com/repos/rust-lang/rust/commits/b66ec3483bd5081bcc829efb88ceb841189b754d", "html_url": "https://github.com/rust-lang/rust/commit/b66ec3483bd5081bcc829efb88ceb841189b754d"}], "stats": {"total": 20, "additions": 11, "deletions": 9}, "files": [{"sha": "255d4da33b8b46515167d8cb587aea3f081bfe43", "filename": "src/libnative/io/file.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/882e2c391e9dc0bedb3ffdc549862294cf174ec8/src%2Flibnative%2Fio%2Ffile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/882e2c391e9dc0bedb3ffdc549862294cf174ec8/src%2Flibnative%2Fio%2Ffile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibnative%2Fio%2Ffile.rs?ref=882e2c391e9dc0bedb3ffdc549862294cf174ec8", "patch": "@@ -746,7 +746,7 @@ pub fn symlink(src: &CString, dst: &CString) -> IoResult<()> {\n         super::mkerr_winbool(as_utf16_p(src.as_str().unwrap(), |src| {\n             as_utf16_p(dst.as_str().unwrap(), |dst| {\n                 unsafe { libc::CreateSymbolicLinkW(dst, src, 0) }\n-            })\n+            }) as libc::BOOL\n         }))\n     }\n "}, {"sha": "39383f993924cebf9bca7c6c2176e5bc1daa8de7", "filename": "src/libstd/libc.rs", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/882e2c391e9dc0bedb3ffdc549862294cf174ec8/src%2Flibstd%2Flibc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/882e2c391e9dc0bedb3ffdc549862294cf174ec8/src%2Flibstd%2Flibc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flibc.rs?ref=882e2c391e9dc0bedb3ffdc549862294cf174ec8", "patch": "@@ -970,6 +970,7 @@ pub mod types {\n \n                 pub type BOOL = c_int;\n                 pub type BYTE = u8;\n+                pub type BOOLEAN = BYTE;\n                 pub type CCHAR = c_char;\n                 pub type CHAR = c_char;\n \n@@ -3984,15 +3985,16 @@ pub mod funcs {\n \n         pub mod kernel32 {\n             use libc::types::os::arch::c95::{c_uint};\n-            use libc::types::os::arch::extra::{BOOL, DWORD, SIZE_T, HMODULE};\n-            use libc::types::os::arch::extra::{LPCWSTR, LPWSTR, LPCSTR, LPSTR, LPCH,\n-                                               LPDWORD, LPVOID,\n-                                               LPCVOID, LPOVERLAPPED};\n-            use libc::types::os::arch::extra::{LPSECURITY_ATTRIBUTES, LPSTARTUPINFO,\n+            use libc::types::os::arch::extra::{BOOL, DWORD, SIZE_T, HMODULE,\n+                                               LPCWSTR, LPWSTR, LPCSTR, LPSTR,\n+                                               LPCH, LPDWORD, LPVOID,\n+                                               LPCVOID, LPOVERLAPPED,\n+                                               LPSECURITY_ATTRIBUTES,\n+                                               LPSTARTUPINFO,\n                                                LPPROCESS_INFORMATION,\n                                                LPMEMORY_BASIC_INFORMATION,\n-                                               LPSYSTEM_INFO};\n-            use libc::types::os::arch::extra::{HANDLE, LPHANDLE, LARGE_INTEGER,\n+                                               LPSYSTEM_INFO, BOOLEAN,\n+                                               HANDLE, LPHANDLE, LARGE_INTEGER,\n                                                PLARGE_INTEGER, LPFILETIME};\n \n             extern \"system\" {\n@@ -4105,7 +4107,7 @@ pub mod funcs {\n                                    dwFlags: DWORD) -> BOOL;\n                 pub fn CreateSymbolicLinkW(lpSymlinkFileName: LPCWSTR,\n                                            lpTargetFileName: LPCWSTR,\n-                                           dwFlags: DWORD) -> BOOL;\n+                                           dwFlags: DWORD) -> BOOLEAN;\n                 pub fn CreateHardLinkW(lpSymlinkFileName: LPCWSTR,\n                                        lpTargetFileName: LPCWSTR,\n                                        lpSecurityAttributes: LPSECURITY_ATTRIBUTES)"}]}