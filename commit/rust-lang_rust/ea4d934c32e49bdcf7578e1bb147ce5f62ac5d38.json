{"sha": "ea4d934c32e49bdcf7578e1bb147ce5f62ac5d38", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVhNGQ5MzRjMzJlNDliZGNmNzU3OGUxYmIxNDdjZTVmNjJhYzVkMzg=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2018-09-25T14:06:28Z"}, "committer": {"name": "Mikhail Modin", "email": "mikhailm1@gmail.com", "date": "2018-09-25T14:23:57Z"}, "message": "Change the diagnostic number from 714 to 716.", "tree": {"sha": "a534016dd16158f79a411e8bbc5ff454050821ee", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a534016dd16158f79a411e8bbc5ff454050821ee"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ea4d934c32e49bdcf7578e1bb147ce5f62ac5d38", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ea4d934c32e49bdcf7578e1bb147ce5f62ac5d38", "html_url": "https://github.com/rust-lang/rust/commit/ea4d934c32e49bdcf7578e1bb147ce5f62ac5d38", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ea4d934c32e49bdcf7578e1bb147ce5f62ac5d38/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mikhail-m1", "id": 5663581, "node_id": "MDQ6VXNlcjU2NjM1ODE=", "avatar_url": "https://avatars.githubusercontent.com/u/5663581?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikhail-m1", "html_url": "https://github.com/mikhail-m1", "followers_url": "https://api.github.com/users/mikhail-m1/followers", "following_url": "https://api.github.com/users/mikhail-m1/following{/other_user}", "gists_url": "https://api.github.com/users/mikhail-m1/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikhail-m1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikhail-m1/subscriptions", "organizations_url": "https://api.github.com/users/mikhail-m1/orgs", "repos_url": "https://api.github.com/users/mikhail-m1/repos", "events_url": "https://api.github.com/users/mikhail-m1/events{/privacy}", "received_events_url": "https://api.github.com/users/mikhail-m1/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5fc0b743d752f57d39cbd7ff10450211affe79a0", "url": "https://api.github.com/repos/rust-lang/rust/commits/5fc0b743d752f57d39cbd7ff10450211affe79a0", "html_url": "https://github.com/rust-lang/rust/commit/5fc0b743d752f57d39cbd7ff10450211affe79a0"}], "stats": {"total": 116, "additions": 58, "deletions": 58}, "files": [{"sha": "75745849290eb7cc40aaa768bb43e20d5b551b94", "filename": "src/librustc_mir/diagnostics.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ea4d934c32e49bdcf7578e1bb147ce5f62ac5d38/src%2Flibrustc_mir%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea4d934c32e49bdcf7578e1bb147ce5f62ac5d38/src%2Flibrustc_mir%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdiagnostics.rs?ref=ea4d934c32e49bdcf7578e1bb147ce5f62ac5d38", "patch": "@@ -2263,13 +2263,13 @@ lifetime, which would again violate the `&mut`-borrow's exclusive\n access.\n \"##,\n \n-E0714: r##\"\n+E0716: r##\"\n This error indicates that a temporary value is being dropped\n while a borrow is still in active use.\n \n Erroneous code example:\n \n-```compile_fail,E0714\n+```compile_fail,E0716\n # #![feature(nll)]\n fn foo() -> i32 { 22 }\n fn bar(x: &i32) -> &i32 { x }"}, {"sha": "2616d0cd9640b746618f7e4a06e5d6730dd3f251", "filename": "src/librustc_mir/util/borrowck_errors.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea4d934c32e49bdcf7578e1bb147ce5f62ac5d38/src%2Flibrustc_mir%2Futil%2Fborrowck_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea4d934c32e49bdcf7578e1bb147ce5f62ac5d38/src%2Flibrustc_mir%2Futil%2Fborrowck_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Futil%2Fborrowck_errors.rs?ref=ea4d934c32e49bdcf7578e1bb147ce5f62ac5d38", "patch": "@@ -739,7 +739,7 @@ pub trait BorrowckErrors<'cx>: Sized + Copy {\n         let err = struct_span_err!(\n             self,\n             span,\n-            E0714,\n+            E0716,\n             \"temporary value dropped while borrowed{OGN}\",\n             OGN = o\n         );"}, {"sha": "fe2bc0ca79b2351b910727b65ea253c3cea954d7", "filename": "src/test/ui/borrowck/borrowck-borrow-from-temporary.nll.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ea4d934c32e49bdcf7578e1bb147ce5f62ac5d38/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-borrow-from-temporary.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ea4d934c32e49bdcf7578e1bb147ce5f62ac5d38/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-borrow-from-temporary.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-borrow-from-temporary.nll.stderr?ref=ea4d934c32e49bdcf7578e1bb147ce5f62ac5d38", "patch": "@@ -1,4 +1,4 @@\n-error[E0714]: temporary value dropped while borrowed\n+error[E0716]: temporary value dropped while borrowed\n   --> $DIR/borrowck-borrow-from-temporary.rs:19:24\n    |\n LL |     let &Foo(ref x) = &id(Foo(3)); //~ ERROR borrowed value does not live long enough\n@@ -15,4 +15,4 @@ LL | fn foo<'a>() -> &'a isize {\n \n error: aborting due to previous error\n \n-For more information about this error, try `rustc --explain E0714`.\n+For more information about this error, try `rustc --explain E0716`."}, {"sha": "80c71b8e28203e9ca7224150f3bb336559244aed", "filename": "src/test/ui/borrowck/borrowck-borrowed-uniq-rvalue-2.nll.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ea4d934c32e49bdcf7578e1bb147ce5f62ac5d38/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-borrowed-uniq-rvalue-2.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ea4d934c32e49bdcf7578e1bb147ce5f62ac5d38/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-borrowed-uniq-rvalue-2.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-borrowed-uniq-rvalue-2.nll.stderr?ref=ea4d934c32e49bdcf7578e1bb147ce5f62ac5d38", "patch": "@@ -1,4 +1,4 @@\n-error[E0714]: temporary value dropped while borrowed\n+error[E0716]: temporary value dropped while borrowed\n   --> $DIR/borrowck-borrowed-uniq-rvalue-2.rs:32:20\n    |\n LL |     let x = defer(&vec![\"Goodbye\", \"world!\"]);\n@@ -13,4 +13,4 @@ LL |     x.x[0];\n \n error: aborting due to previous error\n \n-For more information about this error, try `rustc --explain E0714`.\n+For more information about this error, try `rustc --explain E0716`."}, {"sha": "0c71ac793df75e842d3c82cd61afd9c4264608ea", "filename": "src/test/ui/borrowck/borrowck-borrowed-uniq-rvalue.nll.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ea4d934c32e49bdcf7578e1bb147ce5f62ac5d38/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-borrowed-uniq-rvalue.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ea4d934c32e49bdcf7578e1bb147ce5f62ac5d38/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-borrowed-uniq-rvalue.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-borrowed-uniq-rvalue.nll.stderr?ref=ea4d934c32e49bdcf7578e1bb147ce5f62ac5d38", "patch": "@@ -1,4 +1,4 @@\n-error[E0714]: temporary value dropped while borrowed\n+error[E0716]: temporary value dropped while borrowed\n   --> $DIR/borrowck-borrowed-uniq-rvalue.rs:20:28\n    |\n LL |     buggy_map.insert(42, &*Box::new(1)); //~ ERROR borrowed value does not live long enough\n@@ -13,4 +13,4 @@ LL |     buggy_map.insert(43, &*tmp);\n \n error: aborting due to previous error\n \n-For more information about this error, try `rustc --explain E0714`.\n+For more information about this error, try `rustc --explain E0716`."}, {"sha": "101fb530a91015c95de826d1bf9991c1e85ea8e3", "filename": "src/test/ui/borrowck/promote-ref-mut-in-let-issue-46557.nll.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/ea4d934c32e49bdcf7578e1bb147ce5f62ac5d38/src%2Ftest%2Fui%2Fborrowck%2Fpromote-ref-mut-in-let-issue-46557.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ea4d934c32e49bdcf7578e1bb147ce5f62ac5d38/src%2Ftest%2Fui%2Fborrowck%2Fpromote-ref-mut-in-let-issue-46557.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fpromote-ref-mut-in-let-issue-46557.nll.stderr?ref=ea4d934c32e49bdcf7578e1bb147ce5f62ac5d38", "patch": "@@ -1,4 +1,4 @@\n-error[E0714]: temporary value dropped while borrowed\n+error[E0716]: temporary value dropped while borrowed\n   --> $DIR/promote-ref-mut-in-let-issue-46557.rs:15:21\n    |\n LL |     let ref mut x = 1234543; //~ ERROR\n@@ -9,7 +9,7 @@ LL | }\n    |\n    = note: borrowed value must be valid for the static lifetime...\n \n-error[E0714]: temporary value dropped while borrowed\n+error[E0716]: temporary value dropped while borrowed\n   --> $DIR/promote-ref-mut-in-let-issue-46557.rs:20:25\n    |\n LL |     let (ref mut x, ) = (1234543, ); //~ ERROR\n@@ -20,7 +20,7 @@ LL | }\n    |\n    = note: borrowed value must be valid for the static lifetime...\n \n-error[E0714]: temporary value dropped while borrowed\n+error[E0716]: temporary value dropped while borrowed\n   --> $DIR/promote-ref-mut-in-let-issue-46557.rs:25:11\n    |\n LL |     match 1234543 {\n@@ -31,7 +31,7 @@ LL | }\n    |\n    = note: borrowed value must be valid for the static lifetime...\n \n-error[E0714]: temporary value dropped while borrowed\n+error[E0716]: temporary value dropped while borrowed\n   --> $DIR/promote-ref-mut-in-let-issue-46557.rs:31:11\n    |\n LL |     match (123443,) {\n@@ -42,7 +42,7 @@ LL | }\n    |\n    = note: borrowed value must be valid for the static lifetime...\n \n-error[E0714]: temporary value dropped while borrowed\n+error[E0716]: temporary value dropped while borrowed\n   --> $DIR/promote-ref-mut-in-let-issue-46557.rs:37:10\n    |\n LL |     &mut 1234543 //~ ERROR\n@@ -54,4 +54,4 @@ LL | }\n \n error: aborting due to 5 previous errors\n \n-For more information about this error, try `rustc --explain E0714`.\n+For more information about this error, try `rustc --explain E0716`."}, {"sha": "fe7187af5f59825a1254cb7bcdf749b7a819ea66", "filename": "src/test/ui/consts/const-eval/dont_promote_unstable_const_fn.nll.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ea4d934c32e49bdcf7578e1bb147ce5f62ac5d38/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fdont_promote_unstable_const_fn.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ea4d934c32e49bdcf7578e1bb147ce5f62ac5d38/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fdont_promote_unstable_const_fn.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fdont_promote_unstable_const_fn.nll.stderr?ref=ea4d934c32e49bdcf7578e1bb147ce5f62ac5d38", "patch": "@@ -6,7 +6,7 @@ LL | const fn bar() -> u32 { foo() } //~ ERROR `foo` is not yet stable as a cons\n    |\n    = help: in Nightly builds, add `#![feature(foo)]` to the crate attributes to enable\n \n-error[E0714]: temporary value dropped while borrowed\n+error[E0716]: temporary value dropped while borrowed\n   --> $DIR/dont_promote_unstable_const_fn.rs:28:28\n    |\n LL |     let _: &'static u32 = &foo(); //~ ERROR does not live long enough\n@@ -16,7 +16,7 @@ LL | }\n    |\n    = note: borrowed value must be valid for the static lifetime...\n \n-error[E0714]: temporary value dropped while borrowed\n+error[E0716]: temporary value dropped while borrowed\n   --> $DIR/dont_promote_unstable_const_fn.rs:32:28\n    |\n LL |     let _: &'static u32 = &meh(); //~ ERROR does not live long enough\n@@ -27,7 +27,7 @@ LL | }\n    |\n    = note: borrowed value must be valid for the static lifetime...\n \n-error[E0714]: temporary value dropped while borrowed\n+error[E0716]: temporary value dropped while borrowed\n   --> $DIR/dont_promote_unstable_const_fn.rs:33:26\n    |\n LL |     let x: &'static _ = &std::time::Duration::from_millis(42).subsec_millis();\n@@ -40,4 +40,4 @@ LL | }\n \n error: aborting due to 4 previous errors\n \n-For more information about this error, try `rustc --explain E0714`.\n+For more information about this error, try `rustc --explain E0716`."}, {"sha": "c4feb1129014c1f895ebc2ed4bc2cb0723a716cb", "filename": "src/test/ui/consts/const-eval/dont_promote_unstable_const_fn_cross_crate.nll.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ea4d934c32e49bdcf7578e1bb147ce5f62ac5d38/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fdont_promote_unstable_const_fn_cross_crate.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ea4d934c32e49bdcf7578e1bb147ce5f62ac5d38/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fdont_promote_unstable_const_fn_cross_crate.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fdont_promote_unstable_const_fn_cross_crate.nll.stderr?ref=ea4d934c32e49bdcf7578e1bb147ce5f62ac5d38", "patch": "@@ -1,4 +1,4 @@\n-error[E0714]: temporary value dropped while borrowed\n+error[E0716]: temporary value dropped while borrowed\n   --> $DIR/dont_promote_unstable_const_fn_cross_crate.rs:18:28\n    |\n LL |     let _: &'static u32 = &foo(); //~ ERROR does not live long enough\n@@ -9,7 +9,7 @@ LL | }\n    |\n    = note: borrowed value must be valid for the static lifetime...\n \n-error[E0714]: temporary value dropped while borrowed\n+error[E0716]: temporary value dropped while borrowed\n   --> $DIR/dont_promote_unstable_const_fn_cross_crate.rs:19:29\n    |\n LL |     let _x: &'static u32 = &foo(); //~ ERROR does not live long enough\n@@ -21,4 +21,4 @@ LL | }\n \n error: aborting due to 2 previous errors\n \n-For more information about this error, try `rustc --explain E0714`.\n+For more information about this error, try `rustc --explain E0716`."}, {"sha": "bc8a99f55483fcb984f1d7a0431f5d2e26c811d0", "filename": "src/test/ui/consts/const-eval/promoted_raw_ptr_ops.nll.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ea4d934c32e49bdcf7578e1bb147ce5f62ac5d38/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpromoted_raw_ptr_ops.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ea4d934c32e49bdcf7578e1bb147ce5f62ac5d38/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpromoted_raw_ptr_ops.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpromoted_raw_ptr_ops.nll.stderr?ref=ea4d934c32e49bdcf7578e1bb147ce5f62ac5d38", "patch": "@@ -1,4 +1,4 @@\n-error[E0714]: temporary value dropped while borrowed\n+error[E0716]: temporary value dropped while borrowed\n   --> $DIR/promoted_raw_ptr_ops.rs:14:29\n    |\n LL |     let x: &'static bool = &(42 as *const i32 == 43 as *const i32);\n@@ -9,7 +9,7 @@ LL | }\n    |\n    = note: borrowed value must be valid for the static lifetime...\n \n-error[E0714]: temporary value dropped while borrowed\n+error[E0716]: temporary value dropped while borrowed\n   --> $DIR/promoted_raw_ptr_ops.rs:16:30\n    |\n LL |     let y: &'static usize = &(&1 as *const i32 as usize + 1); //~ ERROR does not live long enough\n@@ -20,7 +20,7 @@ LL | }\n    |\n    = note: borrowed value must be valid for the static lifetime...\n \n-error[E0714]: temporary value dropped while borrowed\n+error[E0716]: temporary value dropped while borrowed\n   --> $DIR/promoted_raw_ptr_ops.rs:17:28\n    |\n LL |     let z: &'static i32 = &(unsafe { *(42 as *const i32) }); //~ ERROR does not live long enough\n@@ -32,4 +32,4 @@ LL | }\n \n error: aborting due to 3 previous errors\n \n-For more information about this error, try `rustc --explain E0714`.\n+For more information about this error, try `rustc --explain E0716`."}, {"sha": "cf3678e7d60ddd97f90c85c276b0da8dc42d1251", "filename": "src/test/ui/consts/const-eval/transmute-const-promotion.nll.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ea4d934c32e49bdcf7578e1bb147ce5f62ac5d38/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Ftransmute-const-promotion.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ea4d934c32e49bdcf7578e1bb147ce5f62ac5d38/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Ftransmute-const-promotion.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Ftransmute-const-promotion.nll.stderr?ref=ea4d934c32e49bdcf7578e1bb147ce5f62ac5d38", "patch": "@@ -1,4 +1,4 @@\n-error[E0714]: temporary value dropped while borrowed\n+error[E0716]: temporary value dropped while borrowed\n   --> $DIR/transmute-const-promotion.rs:16:37\n    |\n LL |     let x: &'static u32 = unsafe { &mem::transmute(3.0f32) };\n@@ -11,4 +11,4 @@ LL | }\n \n error: aborting due to previous error\n \n-For more information about this error, try `rustc --explain E0714`.\n+For more information about this error, try `rustc --explain E0716`."}, {"sha": "7fa7cee0aec1eeec5452827ab8fe64cd28be373e", "filename": "src/test/ui/issues/issue-36082.mir.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ea4d934c32e49bdcf7578e1bb147ce5f62ac5d38/src%2Ftest%2Fui%2Fissues%2Fissue-36082.mir.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ea4d934c32e49bdcf7578e1bb147ce5f62ac5d38/src%2Ftest%2Fui%2Fissues%2Fissue-36082.mir.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-36082.mir.stderr?ref=ea4d934c32e49bdcf7578e1bb147ce5f62ac5d38", "patch": "@@ -1,4 +1,4 @@\n-error[E0714]: temporary value dropped while borrowed\n+error[E0716]: temporary value dropped while borrowed\n   --> $DIR/issue-36082.rs:23:19\n    |\n LL |     let val: &_ = x.borrow().0;\n@@ -13,4 +13,4 @@ LL |     println!(\"{}\", val);\n \n error: aborting due to previous error\n \n-For more information about this error, try `rustc --explain E0714`.\n+For more information about this error, try `rustc --explain E0716`."}, {"sha": "b8a498a4dc85c14a9a5bc6ce09f09472521a8ad2", "filename": "src/test/ui/issues/issue-36082.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea4d934c32e49bdcf7578e1bb147ce5f62ac5d38/src%2Ftest%2Fui%2Fissues%2Fissue-36082.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea4d934c32e49bdcf7578e1bb147ce5f62ac5d38/src%2Ftest%2Fui%2Fissues%2Fissue-36082.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-36082.rs?ref=ea4d934c32e49bdcf7578e1bb147ce5f62ac5d38", "patch": "@@ -25,7 +25,7 @@ fn main() {\n     //[ast]~| NOTE temporary value dropped here while still borrowed\n     //[ast]~| NOTE temporary value does not live long enough\n     //[ast]~| NOTE consider using a `let` binding to increase its lifetime\n-    //[mir]~^^^^^ ERROR temporary value dropped while borrowed [E0714]\n+    //[mir]~^^^^^ ERROR temporary value dropped while borrowed [E0716]\n     //[mir]~| NOTE temporary value is freed at the end of this statement\n     //[mir]~| NOTE creates a temporary which is freed while still in use\n     //[mir]~| NOTE consider using a `let` binding to create a longer lived value"}, {"sha": "84e30a4d29167a0765207d1927f84d9763426a36", "filename": "src/test/ui/issues/issue-46472.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea4d934c32e49bdcf7578e1bb147ce5f62ac5d38/src%2Ftest%2Fui%2Fissues%2Fissue-46472.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea4d934c32e49bdcf7578e1bb147ce5f62ac5d38/src%2Ftest%2Fui%2Fissues%2Fissue-46472.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-46472.rs?ref=ea4d934c32e49bdcf7578e1bb147ce5f62ac5d38", "patch": "@@ -13,7 +13,7 @@\n fn bar<'a>() -> &'a mut u32 {\n     &mut 4\n     //~^ ERROR borrowed value does not live long enough (Ast) [E0597]\n-    //~| ERROR temporary value dropped while borrowed (Mir) [E0714]\n+    //~| ERROR temporary value dropped while borrowed (Mir) [E0716]\n }\n \n fn main() { }"}, {"sha": "4c0e6544a93939d32798fc29b37a521c6bf5b6b5", "filename": "src/test/ui/issues/issue-46472.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ea4d934c32e49bdcf7578e1bb147ce5f62ac5d38/src%2Ftest%2Fui%2Fissues%2Fissue-46472.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ea4d934c32e49bdcf7578e1bb147ce5f62ac5d38/src%2Ftest%2Fui%2Fissues%2Fissue-46472.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-46472.stderr?ref=ea4d934c32e49bdcf7578e1bb147ce5f62ac5d38", "patch": "@@ -13,7 +13,7 @@ note: borrowed value must be valid for the lifetime 'a as defined on the functio\n LL | fn bar<'a>() -> &'a mut u32 {\n    |        ^^\n \n-error[E0714]: temporary value dropped while borrowed (Mir)\n+error[E0716]: temporary value dropped while borrowed (Mir)\n   --> $DIR/issue-46472.rs:14:10\n    |\n LL |     &mut 4\n@@ -30,5 +30,5 @@ LL | fn bar<'a>() -> &'a mut u32 {\n \n error: aborting due to 2 previous errors\n \n-Some errors occurred: E0597, E0714.\n+Some errors occurred: E0597, E0716.\n For more information about an error, try `rustc --explain E0597`."}, {"sha": "95d9d858ecdb05baec49a7d2f0a3e193093642fa", "filename": "src/test/ui/issues/issue-47184.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea4d934c32e49bdcf7578e1bb147ce5f62ac5d38/src%2Ftest%2Fui%2Fissues%2Fissue-47184.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea4d934c32e49bdcf7578e1bb147ce5f62ac5d38/src%2Ftest%2Fui%2Fissues%2Fissue-47184.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-47184.rs?ref=ea4d934c32e49bdcf7578e1bb147ce5f62ac5d38", "patch": "@@ -12,5 +12,5 @@\n \n fn main() {\n     let _vec: Vec<&'static String> = vec![&String::new()];\n-    //~^ ERROR temporary value dropped while borrowed [E0714]\n+    //~^ ERROR temporary value dropped while borrowed [E0716]\n }"}, {"sha": "4a8e9255723cc6c8a15955357d5c30c259666a14", "filename": "src/test/ui/issues/issue-47184.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ea4d934c32e49bdcf7578e1bb147ce5f62ac5d38/src%2Ftest%2Fui%2Fissues%2Fissue-47184.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ea4d934c32e49bdcf7578e1bb147ce5f62ac5d38/src%2Ftest%2Fui%2Fissues%2Fissue-47184.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-47184.stderr?ref=ea4d934c32e49bdcf7578e1bb147ce5f62ac5d38", "patch": "@@ -1,4 +1,4 @@\n-error[E0714]: temporary value dropped while borrowed\n+error[E0716]: temporary value dropped while borrowed\n   --> $DIR/issue-47184.rs:14:44\n    |\n LL |     let _vec: Vec<&'static String> = vec![&String::new()];\n@@ -10,4 +10,4 @@ LL |     let _vec: Vec<&'static String> = vec![&String::new()];\n \n error: aborting due to previous error\n \n-For more information about this error, try `rustc --explain E0714`.\n+For more information about this error, try `rustc --explain E0716`."}, {"sha": "3bfb319ff318a8189abea8430b9e5e4c7f134032", "filename": "src/test/ui/nll/borrowed-temporary-error.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea4d934c32e49bdcf7578e1bb147ce5f62ac5d38/src%2Ftest%2Fui%2Fnll%2Fborrowed-temporary-error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea4d934c32e49bdcf7578e1bb147ce5f62ac5d38/src%2Ftest%2Fui%2Fnll%2Fborrowed-temporary-error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fborrowed-temporary-error.rs?ref=ea4d934c32e49bdcf7578e1bb147ce5f62ac5d38", "patch": "@@ -18,7 +18,7 @@ fn main() {\n     let x = gimme({\n         let v = 22;\n         &(v,)\n-        //~^ ERROR temporary value dropped while borrowed [E0714]\n+        //~^ ERROR temporary value dropped while borrowed [E0716]\n     });\n     println!(\"{:?}\", x);\n }"}, {"sha": "7f62f2ee52a9e95e0654e5d8f35dd239f6dae223", "filename": "src/test/ui/nll/borrowed-temporary-error.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ea4d934c32e49bdcf7578e1bb147ce5f62ac5d38/src%2Ftest%2Fui%2Fnll%2Fborrowed-temporary-error.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ea4d934c32e49bdcf7578e1bb147ce5f62ac5d38/src%2Ftest%2Fui%2Fnll%2Fborrowed-temporary-error.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fborrowed-temporary-error.stderr?ref=ea4d934c32e49bdcf7578e1bb147ce5f62ac5d38", "patch": "@@ -1,9 +1,9 @@\n-error[E0714]: temporary value dropped while borrowed\n+error[E0716]: temporary value dropped while borrowed\n   --> $DIR/borrowed-temporary-error.rs:20:10\n    |\n LL |         &(v,)\n    |          ^^^^ creates a temporary which is freed while still in use\n-LL |         //~^ ERROR temporary value dropped while borrowed [E0714]\n+LL |         //~^ ERROR temporary value dropped while borrowed [E0716]\n LL |     });\n    |       - temporary value is freed at the end of this statement\n LL |     println!(\"{:?}\", x);\n@@ -13,4 +13,4 @@ LL |     println!(\"{:?}\", x);\n \n error: aborting due to previous error\n \n-For more information about this error, try `rustc --explain E0714`.\n+For more information about this error, try `rustc --explain E0716`."}, {"sha": "016a4f49e504ac525126b1074fb464800f5f7ff0", "filename": "src/test/ui/nll/borrowed-universal-error.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea4d934c32e49bdcf7578e1bb147ce5f62ac5d38/src%2Ftest%2Fui%2Fnll%2Fborrowed-universal-error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea4d934c32e49bdcf7578e1bb147ce5f62ac5d38/src%2Ftest%2Fui%2Fnll%2Fborrowed-universal-error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fborrowed-universal-error.rs?ref=ea4d934c32e49bdcf7578e1bb147ce5f62ac5d38", "patch": "@@ -18,7 +18,7 @@ fn gimme(x: &(u32,)) -> &u32 {\n fn foo<'a>(x: &'a (u32,)) -> &'a u32 {\n     let v = 22;\n     gimme(&(v,))\n-    //~^ ERROR temporary value dropped while borrowed [E0714]\n+    //~^ ERROR temporary value dropped while borrowed [E0716]\n }\n \n fn main() {}"}, {"sha": "d7ab5cec4a84ae856122f817e15ab0c751d0bc3c", "filename": "src/test/ui/nll/borrowed-universal-error.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ea4d934c32e49bdcf7578e1bb147ce5f62ac5d38/src%2Ftest%2Fui%2Fnll%2Fborrowed-universal-error.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ea4d934c32e49bdcf7578e1bb147ce5f62ac5d38/src%2Ftest%2Fui%2Fnll%2Fborrowed-universal-error.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fborrowed-universal-error.stderr?ref=ea4d934c32e49bdcf7578e1bb147ce5f62ac5d38", "patch": "@@ -1,9 +1,9 @@\n-error[E0714]: temporary value dropped while borrowed\n+error[E0716]: temporary value dropped while borrowed\n   --> $DIR/borrowed-universal-error.rs:20:12\n    |\n LL |     gimme(&(v,))\n    |            ^^^^ creates a temporary which is freed while still in use\n-LL |     //~^ ERROR temporary value dropped while borrowed [E0714]\n+LL |     //~^ ERROR temporary value dropped while borrowed [E0716]\n LL | }\n    | - temporary value is freed at the end of this statement\n    |\n@@ -15,4 +15,4 @@ LL | fn foo<'a>(x: &'a (u32,)) -> &'a u32 {\n \n error: aborting due to previous error\n \n-For more information about this error, try `rustc --explain E0714`.\n+For more information about this error, try `rustc --explain E0716`."}, {"sha": "0d071915a3b892547de0c9ce13c3f4c1787ea8e6", "filename": "src/test/ui/nll/issue-52534-1.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ea4d934c32e49bdcf7578e1bb147ce5f62ac5d38/src%2Ftest%2Fui%2Fnll%2Fissue-52534-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ea4d934c32e49bdcf7578e1bb147ce5f62ac5d38/src%2Ftest%2Fui%2Fnll%2Fissue-52534-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fissue-52534-1.stderr?ref=ea4d934c32e49bdcf7578e1bb147ce5f62ac5d38", "patch": "@@ -52,7 +52,7 @@ LL | }\n    = note: functions cannot return a borrow to data owned within the function's scope, functions can only return borrows to data passed as arguments\n    = note: to learn more, visit <https://doc.rust-lang.org/book/second-edition/ch04-02-references-and-borrowing.html#dangling-references>\n \n-error[E0714]: temporary value dropped while borrowed\n+error[E0716]: temporary value dropped while borrowed\n   --> $DIR/issue-52534-1.rs:30:6\n    |\n LL |     &&x\n@@ -137,5 +137,5 @@ LL | }\n \n error: aborting due to 8 previous errors\n \n-Some errors occurred: E0597, E0714.\n+Some errors occurred: E0597, E0716.\n For more information about an error, try `rustc --explain E0597`."}, {"sha": "e598147bdab770d2163cdd6bb3098eefd28ea1af", "filename": "src/test/ui/nll/return-ref-mut-issue-46557.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea4d934c32e49bdcf7578e1bb147ce5f62ac5d38/src%2Ftest%2Fui%2Fnll%2Freturn-ref-mut-issue-46557.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea4d934c32e49bdcf7578e1bb147ce5f62ac5d38/src%2Ftest%2Fui%2Fnll%2Freturn-ref-mut-issue-46557.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Freturn-ref-mut-issue-46557.rs?ref=ea4d934c32e49bdcf7578e1bb147ce5f62ac5d38", "patch": "@@ -14,7 +14,7 @@\n #![allow(dead_code)]\n \n fn gimme_static_mut() -> &'static mut u32 {\n-    let ref mut x = 1234543; //~ ERROR temporary value dropped while borrowed [E0714]\n+    let ref mut x = 1234543; //~ ERROR temporary value dropped while borrowed [E0716]\n     x\n }\n "}, {"sha": "368cc67747185b7581da86261036aec06018fc75", "filename": "src/test/ui/nll/return-ref-mut-issue-46557.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ea4d934c32e49bdcf7578e1bb147ce5f62ac5d38/src%2Ftest%2Fui%2Fnll%2Freturn-ref-mut-issue-46557.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ea4d934c32e49bdcf7578e1bb147ce5f62ac5d38/src%2Ftest%2Fui%2Fnll%2Freturn-ref-mut-issue-46557.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Freturn-ref-mut-issue-46557.stderr?ref=ea4d934c32e49bdcf7578e1bb147ce5f62ac5d38", "patch": "@@ -1,7 +1,7 @@\n-error[E0714]: temporary value dropped while borrowed\n+error[E0716]: temporary value dropped while borrowed\n   --> $DIR/return-ref-mut-issue-46557.rs:17:21\n    |\n-LL |     let ref mut x = 1234543; //~ ERROR temporary value dropped while borrowed [E0714]\n+LL |     let ref mut x = 1234543; //~ ERROR temporary value dropped while borrowed [E0716]\n    |                     ^^^^^^^ creates a temporary which is freed while still in use\n LL |     x\n LL | }\n@@ -11,4 +11,4 @@ LL | }\n \n error: aborting due to previous error\n \n-For more information about this error, try `rustc --explain E0714`.\n+For more information about this error, try `rustc --explain E0716`."}, {"sha": "e3bac513fa8748b79968ebbd48d0f65f3926e3bd", "filename": "src/test/ui/nll/user-annotations/patterns.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ea4d934c32e49bdcf7578e1bb147ce5f62ac5d38/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fpatterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea4d934c32e49bdcf7578e1bb147ce5f62ac5d38/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fpatterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fpatterns.rs?ref=ea4d934c32e49bdcf7578e1bb147ce5f62ac5d38", "patch": "@@ -51,13 +51,13 @@ fn underscore_with_initializer() {\n     let _: &'static u32 = &x; //~ ERROR\n \n     let _: Vec<&'static String> = vec![&String::new()];\n-    //~^ ERROR temporary value dropped while borrowed [E0714]\n+    //~^ ERROR temporary value dropped while borrowed [E0716]\n \n     let (_, a): (Vec<&'static String>, _) = (vec![&String::new()], 44);\n-    //~^ ERROR temporary value dropped while borrowed [E0714]\n+    //~^ ERROR temporary value dropped while borrowed [E0716]\n \n     let (_a, b): (Vec<&'static String>, _) = (vec![&String::new()], 44);\n-    //~^ ERROR temporary value dropped while borrowed [E0714]\n+    //~^ ERROR temporary value dropped while borrowed [E0716]\n }\n \n fn pair_underscores_with_initializer() {"}, {"sha": "b01dc65fc5f9a905f00731deda1999a1b109776f", "filename": "src/test/ui/nll/user-annotations/patterns.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ea4d934c32e49bdcf7578e1bb147ce5f62ac5d38/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fpatterns.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ea4d934c32e49bdcf7578e1bb147ce5f62ac5d38/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fpatterns.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fpatterns.stderr?ref=ea4d934c32e49bdcf7578e1bb147ce5f62ac5d38", "patch": "@@ -40,7 +40,7 @@ LL | }\n    |\n    = note: borrowed value must be valid for the static lifetime...\n \n-error[E0714]: temporary value dropped while borrowed\n+error[E0716]: temporary value dropped while borrowed\n   --> $DIR/patterns.rs:53:41\n    |\n LL |     let _: Vec<&'static String> = vec![&String::new()];\n@@ -50,7 +50,7 @@ LL |     let _: Vec<&'static String> = vec![&String::new()];\n    |\n    = note: borrowed value must be valid for the static lifetime...\n \n-error[E0714]: temporary value dropped while borrowed\n+error[E0716]: temporary value dropped while borrowed\n   --> $DIR/patterns.rs:56:52\n    |\n LL |     let (_, a): (Vec<&'static String>, _) = (vec![&String::new()], 44);\n@@ -60,7 +60,7 @@ LL |     let (_, a): (Vec<&'static String>, _) = (vec![&String::new()], 44);\n    |\n    = note: borrowed value must be valid for the static lifetime...\n \n-error[E0714]: temporary value dropped while borrowed\n+error[E0716]: temporary value dropped while borrowed\n   --> $DIR/patterns.rs:59:53\n    |\n LL |     let (_a, b): (Vec<&'static String>, _) = (vec![&String::new()], 44);\n@@ -140,5 +140,5 @@ LL |     let (y, _z): (&'static u32, u32) = (x, 44); //~ ERROR\n \n error: aborting due to 14 previous errors\n \n-Some errors occurred: E0597, E0714.\n+Some errors occurred: E0597, E0716.\n For more information about an error, try `rustc --explain E0597`."}]}