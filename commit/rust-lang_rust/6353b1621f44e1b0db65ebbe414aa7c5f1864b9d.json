{"sha": "6353b1621f44e1b0db65ebbe414aa7c5f1864b9d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYzNTNiMTYyMWY0NGUxYjBkYjY1ZWJiZTQxNGFhN2M1ZjE4NjRiOWQ=", "commit": {"author": {"name": "uHOOCCOOHu", "email": "hooccooh1896@gmail.com", "date": "2019-09-11T14:44:44Z"}, "committer": {"name": "uHOOCCOOHu", "email": "hooccooh1896@gmail.com", "date": "2019-09-11T14:44:44Z"}, "message": "Split out `complete_macro_in_item_position`", "tree": {"sha": "dd32501321994bc8e9dcacd634cb4511053b20bf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dd32501321994bc8e9dcacd634cb4511053b20bf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6353b1621f44e1b0db65ebbe414aa7c5f1864b9d", "comment_count": 0, "verification": {"verified": false, "reason": "no_user", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEXLDp5dXVcfV/VA/qztOS3gxIPQAFAl15CFwACgkQztOS3gxI\nPQC0TRAAsr0Ir+NpZb5o+jaAttX2Q+ahGYZP0R/zQdydhXlAuq9ma1dfem4X9JcK\nQgmuu4hpg8Nn/KZxgFnw+OFL9NQvrmyoA3jNM6ybQo+o6JvvlEoNHNyNaLEmsdFj\nrjH9TDZwXN1x3Az8tEFUKieqg0GaZTbzqSjgcBUK/cBADXFkfim9KwMT7P32VXQ3\nCUVVnX2S7+SLXm4tBphgXWgvzaWDrutoIwF/nyw9wSlcQA0nhkzYvc2/NmjMvDK2\n4ryivQ7b43UevXznUmDDwmOqutmIa19+TXJoXG5eNqMwcJFqMdWpigNUZHAbzDdF\nVYqdOXaPZby4iAJCNAqrOj7sv6QE+f0Y1yOEkWXHJClrPzsmG8Bty4gl6gK98PJj\n246pJOzpIBzXCJuNF16muvgRECfBynhRAJyRTdeeiGv7JZuhUEv0h0bPvozjNVvp\nR72zaXbEtnRhL2hFUQF+oST40mVXElvCV0moyuFFI3DrYa6JfYhGOOOy3yaDU+5S\nBojCjL5/Njn2Js8CXPv21aQRJ12iF8ujbsowT/52aQy8yPU5DZB5bmqD05DXRalD\nQ/n1ihWmERg7ZorSmmN+CH0++bXM8K9XNvYnpROtECzcti5nw0ynX2KrzAlL5nsi\n1vgkQYPc3lVcmt+kyEjpC1fuTH3TZTAEcVBce/rWiW7f+9vcItY=\n=hus1\n-----END PGP SIGNATURE-----", "payload": "tree dd32501321994bc8e9dcacd634cb4511053b20bf\nparent c033d18700e86c9bb028344f28e2eb7d670fe241\nauthor uHOOCCOOHu <hooccooh1896@gmail.com> 1568213084 +0800\ncommitter uHOOCCOOHu <hooccooh1896@gmail.com> 1568213084 +0800\n\nSplit out `complete_macro_in_item_position`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6353b1621f44e1b0db65ebbe414aa7c5f1864b9d", "html_url": "https://github.com/rust-lang/rust/commit/6353b1621f44e1b0db65ebbe414aa7c5f1864b9d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6353b1621f44e1b0db65ebbe414aa7c5f1864b9d/comments", "author": null, "committer": null, "parents": [{"sha": "c033d18700e86c9bb028344f28e2eb7d670fe241", "url": "https://api.github.com/repos/rust-lang/rust/commits/c033d18700e86c9bb028344f28e2eb7d670fe241", "html_url": "https://github.com/rust-lang/rust/commit/c033d18700e86c9bb028344f28e2eb7d670fe241"}], "stats": {"total": 89, "additions": 52, "deletions": 37}, "files": [{"sha": "0ad4148311c1048f538322afacaf7d1fd6ad96b0", "filename": "crates/ra_ide_api/src/completion.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6353b1621f44e1b0db65ebbe414aa7c5f1864b9d/crates%2Fra_ide_api%2Fsrc%2Fcompletion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6353b1621f44e1b0db65ebbe414aa7c5f1864b9d/crates%2Fra_ide_api%2Fsrc%2Fcompletion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion.rs?ref=6353b1621f44e1b0db65ebbe414aa7c5f1864b9d", "patch": "@@ -12,6 +12,7 @@ mod complete_snippet;\n mod complete_path;\n mod complete_scope;\n mod complete_postfix;\n+mod complete_macro_in_item_position;\n \n use ra_db::SourceDatabase;\n \n@@ -69,5 +70,6 @@ pub(crate) fn completions(db: &db::RootDatabase, position: FilePosition) -> Opti\n     complete_record_pattern::complete_record_pattern(&mut acc, &ctx);\n     complete_pattern::complete_pattern(&mut acc, &ctx);\n     complete_postfix::complete_postfix(&mut acc, &ctx);\n+    complete_macro_in_item_position::complete_macro_in_item_position(&mut acc, &ctx);\n     Some(acc)\n }"}, {"sha": "708dc97771e8eddcc2f5645d9eff15063018c2a7", "filename": "crates/ra_ide_api/src/completion/complete_macro_in_item_position.rs", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/6353b1621f44e1b0db65ebbe414aa7c5f1864b9d/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_macro_in_item_position.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6353b1621f44e1b0db65ebbe414aa7c5f1864b9d/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_macro_in_item_position.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_macro_in_item_position.rs?ref=6353b1621f44e1b0db65ebbe414aa7c5f1864b9d", "patch": "@@ -0,0 +1,50 @@\n+use crate::completion::{CompletionContext, Completions};\n+\n+pub(super) fn complete_macro_in_item_position(acc: &mut Completions, ctx: &CompletionContext) {\n+    // Show only macros in top level.\n+    if ctx.is_new_item {\n+        for (name, res) in ctx.analyzer.all_names(ctx.db) {\n+            if res.get_macros().is_some() {\n+                acc.add_resolution(ctx, name.to_string(), &res.only_macros());\n+            }\n+        }\n+    }\n+}\n+\n+#[cfg(test)]\n+mod tests {\n+    use crate::completion::{do_completion, CompletionItem, CompletionKind};\n+    use insta::assert_debug_snapshot;\n+\n+    fn do_reference_completion(code: &str) -> Vec<CompletionItem> {\n+        do_completion(code, CompletionKind::Reference)\n+    }\n+\n+    #[test]\n+    fn completes_macros_as_item() {\n+        assert_debug_snapshot!(\n+            do_reference_completion(\n+                \"\n+                //- /main.rs\n+                macro_rules! foo {\n+                    () => {}\n+                }\n+\n+                fn foo() {}\n+\n+                <|>\n+                \"\n+            ),\n+            @r##\"[\n+    CompletionItem {\n+        label: \"foo\",\n+        source_range: [46; 46),\n+        delete: [46; 46),\n+        insert: \"foo!\",\n+        kind: Macro,\n+        detail: \"macro_rules! foo\",\n+    },\n+]\"##\n+        );\n+    }\n+}"}, {"sha": "2062e7300c975bd36616793c12e0cad829ae20e8", "filename": "crates/ra_ide_api/src/completion/complete_scope.rs", "status": "modified", "additions": 0, "deletions": 37, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/6353b1621f44e1b0db65ebbe414aa7c5f1864b9d/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_scope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6353b1621f44e1b0db65ebbe414aa7c5f1864b9d/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_scope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_scope.rs?ref=6353b1621f44e1b0db65ebbe414aa7c5f1864b9d", "patch": "@@ -6,15 +6,6 @@ use rustc_hash::FxHashMap;\n use crate::completion::{CompletionContext, CompletionItem, CompletionKind, Completions};\n \n pub(super) fn complete_scope(acc: &mut Completions, ctx: &CompletionContext) {\n-    // Show only macros in top level.\n-    if ctx.is_new_item {\n-        for (name, res) in ctx.analyzer.all_names(ctx.db) {\n-            if res.get_macros().is_some() {\n-                acc.add_resolution(ctx, name.to_string(), &res.only_macros());\n-            }\n-        }\n-    }\n-\n     if !ctx.is_trivial_path {\n         return;\n     }\n@@ -730,34 +721,6 @@ mod tests {\n         kind: Function,\n         detail: \"fn main()\",\n     },\n-]\"##\n-        );\n-    }\n-\n-    #[test]\n-    fn completes_macros_as_item() {\n-        assert_debug_snapshot!(\n-            do_reference_completion(\n-                \"\n-                //- /main.rs\n-                macro_rules! foo {\n-                    () => {}\n-                }\n-\n-                fn foo() {}\n-\n-                <|>\n-                \"\n-            ),\n-            @r##\"[\n-    CompletionItem {\n-        label: \"foo\",\n-        source_range: [46; 46),\n-        delete: [46; 46),\n-        insert: \"foo!\",\n-        kind: Macro,\n-        detail: \"macro_rules! foo\",\n-    },\n ]\"##\n         );\n     }"}]}