{"sha": "ee2dd934caeeb2fb044ac1cacd3e65c3b033bc8b", "node_id": "C_kwDOAAsO6NoAKGVlMmRkOTM0Y2FlZWIyZmIwNDRhYzFjYWNkM2U2NWMzYjAzM2JjOGI", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-11-07T11:49:52Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-11-07T11:49:52Z"}, "message": "Don't trigger adjustment hints in all inlay hint tests", "tree": {"sha": "93d7ef33ff3e6b67d01fb0ba9b3fbcd85871ee0c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/93d7ef33ff3e6b67d01fb0ba9b3fbcd85871ee0c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ee2dd934caeeb2fb044ac1cacd3e65c3b033bc8b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ee2dd934caeeb2fb044ac1cacd3e65c3b033bc8b", "html_url": "https://github.com/rust-lang/rust/commit/ee2dd934caeeb2fb044ac1cacd3e65c3b033bc8b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ee2dd934caeeb2fb044ac1cacd3e65c3b033bc8b/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d841ad116a3d438c4b04db1d895d9cc4991ca2c0", "url": "https://api.github.com/repos/rust-lang/rust/commits/d841ad116a3d438c4b04db1d895d9cc4991ca2c0", "html_url": "https://github.com/rust-lang/rust/commit/d841ad116a3d438c4b04db1d895d9cc4991ca2c0"}], "stats": {"total": 37, "additions": 18, "deletions": 19}, "files": [{"sha": "325e609054dc8f5d3a91c19a04325b1eba1192b2", "filename": "crates/ide/src/inlay_hints.rs", "status": "modified", "additions": 18, "deletions": 19, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/ee2dd934caeeb2fb044ac1cacd3e65c3b033bc8b/crates%2Fide%2Fsrc%2Finlay_hints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee2dd934caeeb2fb044ac1cacd3e65c3b033bc8b/crates%2Fide%2Fsrc%2Finlay_hints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Finlay_hints.rs?ref=ee2dd934caeeb2fb044ac1cacd3e65c3b033bc8b", "patch": "@@ -861,23 +861,23 @@ fn binding_mode_hints(\n             tooltip: Some(InlayTooltip::String(\"Inferred binding mode\".into())),\n         });\n     });\n-    // match pat {\n-    //     ast::Pat::IdentPat(pat) if pat.ref_token().is_none() && pat.mut_token().is_none() => {\n-    //         let bm = sema.binding_mode_of_pat(pat)?;\n-    //         let bm = match bm {\n-    //             hir::BindingMode::Move => return None,\n-    //             hir::BindingMode::Ref(Mutability::Mut) => \"ref mut\",\n-    //             hir::BindingMode::Ref(Mutability::Shared) => \"ref\",\n-    //         };\n-    //         acc.push(InlayHint {\n-    //             range,\n-    //             kind: InlayKind::BindingModeHint,\n-    //             label: bm.to_string().into(),\n-    //             tooltip: Some(InlayTooltip::String(\"Inferred binding mode\".into())),\n-    //         });\n-    //     }\n-    //     _ => (),\n-    // }\n+    match pat {\n+        ast::Pat::IdentPat(pat) if pat.ref_token().is_none() && pat.mut_token().is_none() => {\n+            let bm = sema.binding_mode_of_pat(pat)?;\n+            let bm = match bm {\n+                hir::BindingMode::Move => return None,\n+                hir::BindingMode::Ref(Mutability::Mut) => \"ref mut\",\n+                hir::BindingMode::Ref(Mutability::Shared) => \"ref\",\n+            };\n+            acc.push(InlayHint {\n+                range,\n+                kind: InlayKind::BindingModeHint,\n+                label: bm.to_string().into(),\n+                tooltip: Some(InlayTooltip::String(\"Inferred binding mode\".into())),\n+            });\n+        }\n+        _ => (),\n+    }\n \n     Some(())\n }\n@@ -1306,7 +1306,7 @@ mod tests {\n         chaining_hints: false,\n         lifetime_elision_hints: LifetimeElisionHints::Never,\n         closure_return_type_hints: ClosureReturnTypeHints::Never,\n-        adjustment_hints: AdjustmentHints::Always,\n+        adjustment_hints: AdjustmentHints::Never,\n         binding_mode_hints: false,\n         hide_named_constructor_hints: false,\n         hide_closure_initialization_hints: false,\n@@ -1318,7 +1318,6 @@ mod tests {\n         type_hints: true,\n         parameter_hints: true,\n         chaining_hints: true,\n-        adjustment_hints: AdjustmentHints::Always,\n         closure_return_type_hints: ClosureReturnTypeHints::WithBlock,\n         binding_mode_hints: true,\n         lifetime_elision_hints: LifetimeElisionHints::Always,"}]}