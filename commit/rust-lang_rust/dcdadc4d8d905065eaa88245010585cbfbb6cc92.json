{"sha": "dcdadc4d8d905065eaa88245010585cbfbb6cc92", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRjZGFkYzRkOGQ5MDUwNjVlYWE4ODI0NTAxMDU4NWNiZmJiNmNjOTI=", "commit": {"author": {"name": "est31", "email": "MTest31@outlook.com", "date": "2021-08-05T03:14:53Z"}, "committer": {"name": "est31", "email": "MTest31@outlook.com", "date": "2021-08-18T07:25:26Z"}, "message": "Remove box syntax from rustc_middle", "tree": {"sha": "f8af3b2c8a830ca905ba48302df2b7f0372a8ee3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f8af3b2c8a830ca905ba48302df2b7f0372a8ee3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dcdadc4d8d905065eaa88245010585cbfbb6cc92", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dcdadc4d8d905065eaa88245010585cbfbb6cc92", "html_url": "https://github.com/rust-lang/rust/commit/dcdadc4d8d905065eaa88245010585cbfbb6cc92", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dcdadc4d8d905065eaa88245010585cbfbb6cc92/comments", "author": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "committer": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8830f8e30c7ce78dc2d895c699460d0fc2c99883", "url": "https://api.github.com/repos/rust-lang/rust/commits/8830f8e30c7ce78dc2d895c699460d0fc2c99883", "html_url": "https://github.com/rust-lang/rust/commit/8830f8e30c7ce78dc2d895c699460d0fc2c99883"}], "stats": {"total": 13, "additions": 6, "deletions": 7}, "files": [{"sha": "0e72e916cc6acec3988d2dab011ebad5381c6d0c", "filename": "compiler/rustc_middle/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/dcdadc4d8d905065eaa88245010585cbfbb6cc92/compiler%2Frustc_middle%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dcdadc4d8d905065eaa88245010585cbfbb6cc92/compiler%2Frustc_middle%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Flib.rs?ref=dcdadc4d8d905065eaa88245010585cbfbb6cc92", "patch": "@@ -29,7 +29,6 @@\n #![feature(backtrace)]\n #![feature(bool_to_option)]\n #![feature(box_patterns)]\n-#![feature(box_syntax)]\n #![feature(core_intrinsics)]\n #![feature(discriminant_kind)]\n #![feature(never_type)]"}, {"sha": "b66995afc6db66c5c57dd54f14eb2ade020a1146", "filename": "compiler/rustc_middle/src/mir/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/dcdadc4d8d905065eaa88245010585cbfbb6cc92/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dcdadc4d8d905065eaa88245010585cbfbb6cc92/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs?ref=dcdadc4d8d905065eaa88245010585cbfbb6cc92", "patch": "@@ -2061,11 +2061,11 @@ impl<'tcx> Operand<'tcx> {\n         span: Span,\n     ) -> Self {\n         let ty = tcx.type_of(def_id).subst(tcx, substs);\n-        Operand::Constant(box Constant {\n+        Operand::Constant(Box::new(Constant {\n             span,\n             user_ty: None,\n             literal: ConstantKind::Ty(ty::Const::zero_sized(tcx, ty)),\n-        })\n+        }))\n     }\n \n     pub fn is_move(&self) -> bool {\n@@ -2092,11 +2092,11 @@ impl<'tcx> Operand<'tcx> {\n             };\n             scalar_size == type_size\n         });\n-        Operand::Constant(box Constant {\n+        Operand::Constant(Box::new(Constant {\n             span,\n             user_ty: None,\n             literal: ConstantKind::Val(ConstValue::Scalar(val), ty),\n-        })\n+        }))\n     }\n \n     pub fn to_copy(&self) -> Self {"}, {"sha": "b2d4a22194c628a25a4cf004e1a215b6a66b204b", "filename": "compiler/rustc_middle/src/mir/type_foldable.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/dcdadc4d8d905065eaa88245010585cbfbb6cc92/compiler%2Frustc_middle%2Fsrc%2Fmir%2Ftype_foldable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dcdadc4d8d905065eaa88245010585cbfbb6cc92/compiler%2Frustc_middle%2Fsrc%2Fmir%2Ftype_foldable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Ftype_foldable.rs?ref=dcdadc4d8d905065eaa88245010585cbfbb6cc92", "patch": "@@ -182,10 +182,10 @@ impl<'tcx> TypeFoldable<'tcx> for Rvalue<'tcx> {\n             Len(place) => Len(place.fold_with(folder)),\n             Cast(kind, op, ty) => Cast(kind, op.fold_with(folder), ty.fold_with(folder)),\n             BinaryOp(op, box (rhs, lhs)) => {\n-                BinaryOp(op, box (rhs.fold_with(folder), lhs.fold_with(folder)))\n+                BinaryOp(op, Box::new((rhs.fold_with(folder), lhs.fold_with(folder))))\n             }\n             CheckedBinaryOp(op, box (rhs, lhs)) => {\n-                CheckedBinaryOp(op, box (rhs.fold_with(folder), lhs.fold_with(folder)))\n+                CheckedBinaryOp(op, Box::new((rhs.fold_with(folder), lhs.fold_with(folder))))\n             }\n             UnaryOp(op, val) => UnaryOp(op, val.fold_with(folder)),\n             Discriminant(place) => Discriminant(place.fold_with(folder)),"}]}