{"sha": "a456a55feaee9cdda257f80720c09a5dc731e5d4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE0NTZhNTVmZWFlZTljZGRhMjU3ZjgwNzIwYzA5YTVkYzczMWU1ZDQ=", "commit": {"author": {"name": "tabokie", "email": "xy.tao@outlook.com", "date": "2021-09-07T10:44:10Z"}, "committer": {"name": "tabokie", "email": "xy.tao@outlook.com", "date": "2021-09-07T10:45:37Z"}, "message": "Optimize VecDeque::append\n\nSigned-off-by: tabokie <xy.tao@outlook.com>", "tree": {"sha": "abd480db40566f0d9acd21e7aec0511f3f6ec7ad", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/abd480db40566f0d9acd21e7aec0511f3f6ec7ad"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a456a55feaee9cdda257f80720c09a5dc731e5d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a456a55feaee9cdda257f80720c09a5dc731e5d4", "html_url": "https://github.com/rust-lang/rust/commit/a456a55feaee9cdda257f80720c09a5dc731e5d4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a456a55feaee9cdda257f80720c09a5dc731e5d4/comments", "author": {"login": "tabokie", "id": 27005812, "node_id": "MDQ6VXNlcjI3MDA1ODEy", "avatar_url": "https://avatars.githubusercontent.com/u/27005812?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tabokie", "html_url": "https://github.com/tabokie", "followers_url": "https://api.github.com/users/tabokie/followers", "following_url": "https://api.github.com/users/tabokie/following{/other_user}", "gists_url": "https://api.github.com/users/tabokie/gists{/gist_id}", "starred_url": "https://api.github.com/users/tabokie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tabokie/subscriptions", "organizations_url": "https://api.github.com/users/tabokie/orgs", "repos_url": "https://api.github.com/users/tabokie/repos", "events_url": "https://api.github.com/users/tabokie/events{/privacy}", "received_events_url": "https://api.github.com/users/tabokie/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tabokie", "id": 27005812, "node_id": "MDQ6VXNlcjI3MDA1ODEy", "avatar_url": "https://avatars.githubusercontent.com/u/27005812?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tabokie", "html_url": "https://github.com/tabokie", "followers_url": "https://api.github.com/users/tabokie/followers", "following_url": "https://api.github.com/users/tabokie/following{/other_user}", "gists_url": "https://api.github.com/users/tabokie/gists{/gist_id}", "starred_url": "https://api.github.com/users/tabokie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tabokie/subscriptions", "organizations_url": "https://api.github.com/users/tabokie/orgs", "repos_url": "https://api.github.com/users/tabokie/repos", "events_url": "https://api.github.com/users/tabokie/events{/privacy}", "received_events_url": "https://api.github.com/users/tabokie/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c4f26b15e37101c54829efab456922a53e3103ad", "url": "https://api.github.com/repos/rust-lang/rust/commits/c4f26b15e37101c54829efab456922a53e3103ad", "html_url": "https://github.com/rust-lang/rust/commit/c4f26b15e37101c54829efab456922a53e3103ad"}], "stats": {"total": 30, "additions": 28, "deletions": 2}, "files": [{"sha": "e702ddb3f2ae69addddf1ab77e8527983b923b7d", "filename": "library/alloc/src/collections/vec_deque/mod.rs", "status": "modified", "additions": 28, "deletions": 2, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/a456a55feaee9cdda257f80720c09a5dc731e5d4/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a456a55feaee9cdda257f80720c09a5dc731e5d4/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque%2Fmod.rs?ref=a456a55feaee9cdda257f80720c09a5dc731e5d4", "patch": "@@ -417,6 +417,26 @@ impl<T, A: Allocator> VecDeque<T, A> {\n         }\n     }\n \n+    /// Append all values from `src` to `self`, wrapping around if needed.\n+    /// Assumes capacity is sufficient.\n+    #[inline]\n+    unsafe fn append_slice(&mut self, src: &[T]) {\n+        debug_assert!(self.len() + src.len() + 1 <= self.cap());\n+        let head_room = self.cap() - self.head;\n+        if self.head < self.tail || src.len() <= head_room {\n+            unsafe {\n+                ptr::copy_nonoverlapping(src.as_ptr(), self.ptr().add(self.head), src.len());\n+            }\n+        } else {\n+            let (left, right) = src.split_at(head_room);\n+            unsafe {\n+                ptr::copy_nonoverlapping(left.as_ptr(), self.ptr().add(self.head), left.len());\n+                ptr::copy_nonoverlapping(right.as_ptr(), self.ptr(), right.len());\n+            }\n+        }\n+        self.head = self.wrap_add(self.head, src.len());\n+    }\n+\n     /// Frobs the head and tail sections around to handle the fact that we\n     /// just reallocated. Unsafe because it trusts old_capacity.\n     #[inline]\n@@ -2088,8 +2108,14 @@ impl<T, A: Allocator> VecDeque<T, A> {\n     #[inline]\n     #[stable(feature = \"append\", since = \"1.4.0\")]\n     pub fn append(&mut self, other: &mut Self) {\n-        // naive impl\n-        self.extend(other.drain(..));\n+        self.reserve(other.len());\n+        unsafe {\n+            let (left, right) = other.as_slices();\n+            self.append_slice(left);\n+            self.append_slice(right);\n+        }\n+        // Silently drop values in `other`.\n+        other.tail = other.head;\n     }\n \n     /// Retains only the elements specified by the predicate."}]}