{"sha": "bebc34003e2d60297448b73b964db89a8030ba47", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJlYmMzNDAwM2UyZDYwMjk3NDQ4YjczYjk2NGRiODlhODAzMGJhNDc=", "commit": {"author": {"name": "1011X", "email": "1011XXXXX@gmail.com", "date": "2018-03-04T19:39:14Z"}, "committer": {"name": "1011X", "email": "1011XXXXX@gmail.com", "date": "2018-03-04T19:39:14Z"}, "message": "Fix unintended rename and a doc example", "tree": {"sha": "999476136a87e4fbe7d5f31db56c5e7bc531077b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/999476136a87e4fbe7d5f31db56c5e7bc531077b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bebc34003e2d60297448b73b964db89a8030ba47", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bebc34003e2d60297448b73b964db89a8030ba47", "html_url": "https://github.com/rust-lang/rust/commit/bebc34003e2d60297448b73b964db89a8030ba47", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bebc34003e2d60297448b73b964db89a8030ba47/comments", "author": {"login": "1011X", "id": 1851619, "node_id": "MDQ6VXNlcjE4NTE2MTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1851619?v=4", "gravatar_id": "", "url": "https://api.github.com/users/1011X", "html_url": "https://github.com/1011X", "followers_url": "https://api.github.com/users/1011X/followers", "following_url": "https://api.github.com/users/1011X/following{/other_user}", "gists_url": "https://api.github.com/users/1011X/gists{/gist_id}", "starred_url": "https://api.github.com/users/1011X/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/1011X/subscriptions", "organizations_url": "https://api.github.com/users/1011X/orgs", "repos_url": "https://api.github.com/users/1011X/repos", "events_url": "https://api.github.com/users/1011X/events{/privacy}", "received_events_url": "https://api.github.com/users/1011X/received_events", "type": "User", "site_admin": false}, "committer": {"login": "1011X", "id": 1851619, "node_id": "MDQ6VXNlcjE4NTE2MTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1851619?v=4", "gravatar_id": "", "url": "https://api.github.com/users/1011X", "html_url": "https://github.com/1011X", "followers_url": "https://api.github.com/users/1011X/followers", "following_url": "https://api.github.com/users/1011X/following{/other_user}", "gists_url": "https://api.github.com/users/1011X/gists{/gist_id}", "starred_url": "https://api.github.com/users/1011X/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/1011X/subscriptions", "organizations_url": "https://api.github.com/users/1011X/orgs", "repos_url": "https://api.github.com/users/1011X/repos", "events_url": "https://api.github.com/users/1011X/events{/privacy}", "received_events_url": "https://api.github.com/users/1011X/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "16076d47507cc42e2c519f2fbd5e4a1733b17b55", "url": "https://api.github.com/repos/rust-lang/rust/commits/16076d47507cc42e2c519f2fbd5e4a1733b17b55", "html_url": "https://github.com/rust-lang/rust/commit/16076d47507cc42e2c519f2fbd5e4a1733b17b55"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "989a98ec8e78c429cd71f1f59194792a5140621a", "filename": "src/libcore/ascii.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bebc34003e2d60297448b73b964db89a8030ba47/src%2Flibcore%2Fascii.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bebc34003e2d60297448b73b964db89a8030ba47/src%2Flibcore%2Fascii.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fascii.rs?ref=bebc34003e2d60297448b73b964db89a8030ba47", "patch": "@@ -57,6 +57,8 @@ pub struct EscapeDefault {\n /// # Examples\n ///\n /// ```\n+/// use core::ascii;\n+///\n /// let escaped = ascii::escape_default(b'0').next().unwrap();\n /// assert_eq!(b'0', escaped);\n ///\n@@ -98,7 +100,7 @@ pub struct EscapeDefault {\n /// assert_eq!(b'd', escaped.next().unwrap());\n /// ```\n #[unstable(feature = \"core_ascii\", issue = \"46409\")]\n-pub fn escape_ascii(c: u8) -> EscapeDefault {\n+pub fn escape_default(c: u8) -> EscapeDefault {\n     let (data, len) = match c {\n         b'\\t' => ([b'\\\\', b't', 0, 0], 2),\n         b'\\r' => ([b'\\\\', b'r', 0, 0], 2),"}]}