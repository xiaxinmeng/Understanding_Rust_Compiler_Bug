{"sha": "2226f19f701fa53172fa48406c0f4ccb96b88ee6", "node_id": "C_kwDOAAsO6NoAKDIyMjZmMTlmNzAxZmE1MzE3MmZhNDg0MDZjMGY0Y2NiOTZiODhlZTY", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-05-10T05:27:54Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-05-10T05:27:54Z"}, "message": "Auto merge of #96808 - cjgillot:impossible-trait, r=compiler-errors\n\nDetect trait fulfillment in `subst_and_check_impossible_predicates`\n\nSplit from https://github.com/rust-lang/rust/pull/91743\nr? `@compiler-errors`", "tree": {"sha": "23c08672d9a9f5c636faf549ede16e6f11511d8a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/23c08672d9a9f5c636faf549ede16e6f11511d8a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2226f19f701fa53172fa48406c0f4ccb96b88ee6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2226f19f701fa53172fa48406c0f4ccb96b88ee6", "html_url": "https://github.com/rust-lang/rust/commit/2226f19f701fa53172fa48406c0f4ccb96b88ee6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2226f19f701fa53172fa48406c0f4ccb96b88ee6/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "87fd70c107b23fe08336a12a20a0f5e85561d499", "url": "https://api.github.com/repos/rust-lang/rust/commits/87fd70c107b23fe08336a12a20a0f5e85561d499", "html_url": "https://github.com/rust-lang/rust/commit/87fd70c107b23fe08336a12a20a0f5e85561d499"}, {"sha": "69e5b2fde01e93a19a8102201ed1b1d2cab0661d", "url": "https://api.github.com/repos/rust-lang/rust/commits/69e5b2fde01e93a19a8102201ed1b1d2cab0661d", "html_url": "https://github.com/rust-lang/rust/commit/69e5b2fde01e93a19a8102201ed1b1d2cab0661d"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "81819534e8b3bea0b3dd39f12416b34d4e1f4d64", "filename": "compiler/rustc_trait_selection/src/traits/mod.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/2226f19f701fa53172fa48406c0f4ccb96b88ee6/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2226f19f701fa53172fa48406c0f4ccb96b88ee6/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fmod.rs?ref=2226f19f701fa53172fa48406c0f4ccb96b88ee6", "patch": "@@ -432,6 +432,9 @@ pub fn impossible_predicates<'tcx>(\n     debug!(\"impossible_predicates(predicates={:?})\", predicates);\n \n     let result = tcx.infer_ctxt().enter(|infcx| {\n+        // HACK: Set tainted by errors to gracefully exit in case of overflow.\n+        infcx.set_tainted_by_errors();\n+\n         let param_env = ty::ParamEnv::reveal_all();\n         let mut selcx = SelectionContext::new(&infcx);\n         let mut fulfill_cx = FulfillmentContext::new();\n@@ -448,6 +451,9 @@ pub fn impossible_predicates<'tcx>(\n \n         let errors = fulfill_cx.select_all_or_error(&infcx);\n \n+        // Clean up after ourselves\n+        let _ = infcx.inner.borrow_mut().opaque_type_storage.take_opaque_types();\n+\n         !errors.is_empty()\n     });\n     debug!(\"impossible_predicates = {:?}\", result);\n@@ -461,6 +467,14 @@ fn subst_and_check_impossible_predicates<'tcx>(\n     debug!(\"subst_and_check_impossible_predicates(key={:?})\", key);\n \n     let mut predicates = tcx.predicates_of(key.0).instantiate(tcx, key.1).predicates;\n+\n+    // Specifically check trait fulfillment to avoid an error when trying to resolve\n+    // associated items.\n+    if let Some(trait_def_id) = tcx.trait_of_item(key.0) {\n+        let trait_ref = ty::TraitRef::from_method(tcx, trait_def_id, key.1);\n+        predicates.push(ty::Binder::dummy(trait_ref).to_poly_trait_predicate().to_predicate(tcx));\n+    }\n+\n     predicates.retain(|predicate| !predicate.needs_subst());\n     let result = impossible_predicates(tcx, predicates);\n "}]}