{"sha": "87c4a4104da2acc662f777324f4ae3c6702bb5cc", "node_id": "C_kwDOAAsO6NoAKDg3YzRhNDEwNGRhMmFjYzY2MmY3NzczMjRmNGFlM2M2NzAyYmI1Y2M", "commit": {"author": {"name": "Lauren\u021biu Nicola", "email": "lnicola@dend.ro", "date": "2022-02-26T14:45:06Z"}, "committer": {"name": "Lauren\u021biu Nicola", "email": "lnicola@dend.ro", "date": "2022-02-26T14:45:06Z"}, "message": "Fix body selection in while loops", "tree": {"sha": "66a38b9f43426914a84a2c6f023f3a53e066523d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/66a38b9f43426914a84a2c6f023f3a53e066523d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/87c4a4104da2acc662f777324f4ae3c6702bb5cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/87c4a4104da2acc662f777324f4ae3c6702bb5cc", "html_url": "https://github.com/rust-lang/rust/commit/87c4a4104da2acc662f777324f4ae3c6702bb5cc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/87c4a4104da2acc662f777324f4ae3c6702bb5cc/comments", "author": {"login": "lnicola", "id": 308347, "node_id": "MDQ6VXNlcjMwODM0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/308347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lnicola", "html_url": "https://github.com/lnicola", "followers_url": "https://api.github.com/users/lnicola/followers", "following_url": "https://api.github.com/users/lnicola/following{/other_user}", "gists_url": "https://api.github.com/users/lnicola/gists{/gist_id}", "starred_url": "https://api.github.com/users/lnicola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lnicola/subscriptions", "organizations_url": "https://api.github.com/users/lnicola/orgs", "repos_url": "https://api.github.com/users/lnicola/repos", "events_url": "https://api.github.com/users/lnicola/events{/privacy}", "received_events_url": "https://api.github.com/users/lnicola/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lnicola", "id": 308347, "node_id": "MDQ6VXNlcjMwODM0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/308347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lnicola", "html_url": "https://github.com/lnicola", "followers_url": "https://api.github.com/users/lnicola/followers", "following_url": "https://api.github.com/users/lnicola/following{/other_user}", "gists_url": "https://api.github.com/users/lnicola/gists{/gist_id}", "starred_url": "https://api.github.com/users/lnicola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lnicola/subscriptions", "organizations_url": "https://api.github.com/users/lnicola/orgs", "repos_url": "https://api.github.com/users/lnicola/repos", "events_url": "https://api.github.com/users/lnicola/events{/privacy}", "received_events_url": "https://api.github.com/users/lnicola/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a2cc1d6b7b499d6b03436db7fc8053aea72f75ac", "url": "https://api.github.com/repos/rust-lang/rust/commits/a2cc1d6b7b499d6b03436db7fc8053aea72f75ac", "html_url": "https://github.com/rust-lang/rust/commit/a2cc1d6b7b499d6b03436db7fc8053aea72f75ac"}], "stats": {"total": 37, "additions": 34, "deletions": 3}, "files": [{"sha": "812f12acede31d717dc1962d6b0c797063ba236a", "filename": "crates/hir_ty/src/tests/regression.rs", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/87c4a4104da2acc662f777324f4ae3c6702bb5cc/crates%2Fhir_ty%2Fsrc%2Ftests%2Fregression.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87c4a4104da2acc662f777324f4ae3c6702bb5cc/crates%2Fhir_ty%2Fsrc%2Ftests%2Fregression.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Ftests%2Fregression.rs?ref=87c4a4104da2acc662f777324f4ae3c6702bb5cc", "patch": "@@ -1245,3 +1245,25 @@ fn test() {\n         \"#]],\n     );\n }\n+\n+#[test]\n+fn while_loop_block_expr_iterable() {\n+    check_infer(\n+        r#\"\n+fn test() {\n+    while { true } {\n+        let y = 0;\n+    }\n+}\n+        \"#,\n+        expect![[r#\"\n+            10..59 '{     ...   } }': ()\n+            16..57 'while ...     }': ()\n+            22..30 '{ true }': bool\n+            24..28 'true': bool\n+            31..57 '{     ...     }': ()\n+            45..46 'y': i32\n+            49..50 '0': i32\n+        \"#]],\n+    );\n+}"}, {"sha": "11247fbf1c982a45506374db226d65654bddca3f", "filename": "crates/syntax/src/ast/generated/nodes.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/87c4a4104da2acc662f777324f4ae3c6702bb5cc/crates%2Fsyntax%2Fsrc%2Fast%2Fgenerated%2Fnodes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87c4a4104da2acc662f777324f4ae3c6702bb5cc/crates%2Fsyntax%2Fsrc%2Fast%2Fgenerated%2Fnodes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Fsrc%2Fast%2Fgenerated%2Fnodes.rs?ref=87c4a4104da2acc662f777324f4ae3c6702bb5cc", "patch": "@@ -1035,7 +1035,6 @@ pub struct WhileExpr {\n     pub(crate) syntax: SyntaxNode,\n }\n impl ast::HasAttrs for WhileExpr {}\n-impl ast::HasLoopBody for WhileExpr {}\n impl WhileExpr {\n     pub fn while_token(&self) -> Option<SyntaxToken> { support::token(&self.syntax, T![while]) }\n     pub fn condition(&self) -> Option<Expr> { support::child(&self.syntax) }"}, {"sha": "97455abd8094bec32454e4a14a8e90a6814bf8f9", "filename": "crates/syntax/src/ast/node_ext.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/87c4a4104da2acc662f777324f4ae3c6702bb5cc/crates%2Fsyntax%2Fsrc%2Fast%2Fnode_ext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87c4a4104da2acc662f777324f4ae3c6702bb5cc/crates%2Fsyntax%2Fsrc%2Fast%2Fnode_ext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Fsrc%2Fast%2Fnode_ext.rs?ref=87c4a4104da2acc662f777324f4ae3c6702bb5cc", "patch": "@@ -769,6 +769,15 @@ impl ast::HasLoopBody for ast::ForExpr {\n     }\n }\n \n+impl ast::HasLoopBody for ast::WhileExpr {\n+    fn loop_body(&self) -> Option<ast::BlockExpr> {\n+        let mut exprs = support::children(self.syntax());\n+        let first = exprs.next();\n+        let second = exprs.next();\n+        second.or(first)\n+    }\n+}\n+\n impl ast::HasAttrs for ast::AnyHasDocComments {}\n \n impl From<ast::Adt> for ast::Item {"}, {"sha": "5ed56a81c49717a48f006b9ef7c84340b7f25a43", "filename": "crates/syntax/src/tests/sourcegen_ast.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/87c4a4104da2acc662f777324f4ae3c6702bb5cc/crates%2Fsyntax%2Fsrc%2Ftests%2Fsourcegen_ast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87c4a4104da2acc662f777324f4ae3c6702bb5cc/crates%2Fsyntax%2Fsrc%2Ftests%2Fsourcegen_ast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Fsrc%2Ftests%2Fsourcegen_ast.rs?ref=87c4a4104da2acc662f777324f4ae3c6702bb5cc", "patch": "@@ -85,8 +85,9 @@ fn generate_nodes(kinds: KindsSrc<'_>, grammar: &AstSrc) -> String {\n                 .traits\n                 .iter()\n                 .filter(|trait_name| {\n-                    // For loops have two expressions so this might collide, therefor manual impl it\n-                    node.name != \"ForExpr\" || trait_name.as_str() != \"HasLoopBody\"\n+                    // Loops have two expressions so this might collide, therefor manual impl it\n+                    node.name != \"ForExpr\" && node.name != \"WhileExpr\"\n+                        || trait_name.as_str() != \"HasLoopBody\"\n                 })\n                 .map(|trait_name| {\n                     let trait_name = format_ident!(\"{}\", trait_name);"}]}