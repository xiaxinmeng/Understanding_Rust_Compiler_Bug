{"sha": "1ebc7eff46fb01c625ecce55a0537dcc78e58756", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFlYmM3ZWZmNDZmYjAxYzYyNWVjY2U1NWEwNTM3ZGNjNzhlNTg3NTY=", "commit": {"author": {"name": "scalexm", "email": "martin.alex32@hotmail.fr", "date": "2017-08-10T12:41:24Z"}, "committer": {"name": "scalexm", "email": "martin.alex32@hotmail.fr", "date": "2017-08-10T12:41:24Z"}, "message": "Fix for the supertrait example in #43784", "tree": {"sha": "65bf875401c6dfcfcda9098679c32059e2f65e16", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/65bf875401c6dfcfcda9098679c32059e2f65e16"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1ebc7eff46fb01c625ecce55a0537dcc78e58756", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1ebc7eff46fb01c625ecce55a0537dcc78e58756", "html_url": "https://github.com/rust-lang/rust/commit/1ebc7eff46fb01c625ecce55a0537dcc78e58756", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1ebc7eff46fb01c625ecce55a0537dcc78e58756/comments", "author": {"login": "scalexm", "id": 1173131, "node_id": "MDQ6VXNlcjExNzMxMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1173131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scalexm", "html_url": "https://github.com/scalexm", "followers_url": "https://api.github.com/users/scalexm/followers", "following_url": "https://api.github.com/users/scalexm/following{/other_user}", "gists_url": "https://api.github.com/users/scalexm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scalexm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scalexm/subscriptions", "organizations_url": "https://api.github.com/users/scalexm/orgs", "repos_url": "https://api.github.com/users/scalexm/repos", "events_url": "https://api.github.com/users/scalexm/events{/privacy}", "received_events_url": "https://api.github.com/users/scalexm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "scalexm", "id": 1173131, "node_id": "MDQ6VXNlcjExNzMxMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1173131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scalexm", "html_url": "https://github.com/scalexm", "followers_url": "https://api.github.com/users/scalexm/followers", "following_url": "https://api.github.com/users/scalexm/following{/other_user}", "gists_url": "https://api.github.com/users/scalexm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scalexm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scalexm/subscriptions", "organizations_url": "https://api.github.com/users/scalexm/orgs", "repos_url": "https://api.github.com/users/scalexm/repos", "events_url": "https://api.github.com/users/scalexm/events{/privacy}", "received_events_url": "https://api.github.com/users/scalexm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c2de81f4c97c8d1af685162f5a6faf8c89f6cd83", "url": "https://api.github.com/repos/rust-lang/rust/commits/c2de81f4c97c8d1af685162f5a6faf8c89f6cd83", "html_url": "https://github.com/rust-lang/rust/commit/c2de81f4c97c8d1af685162f5a6faf8c89f6cd83"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "580a3aec3e8701348a82c02a57e7bb332146ecaa", "filename": "src/librustc/ty/wf.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/1ebc7eff46fb01c625ecce55a0537dcc78e58756/src%2Flibrustc%2Fty%2Fwf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ebc7eff46fb01c625ecce55a0537dcc78e58756/src%2Flibrustc%2Fty%2Fwf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fwf.rs?ref=1ebc7eff46fb01c625ecce55a0537dcc78e58756", "patch": "@@ -141,6 +141,17 @@ impl<'a, 'gcx, 'tcx> WfPredicates<'a, 'gcx, 'tcx> {\n \n         let cause = self.cause(traits::MiscObligation);\n         let param_env = self.param_env;\n+\n+        let implied_obligations = traits::elaborate_predicates(self.infcx.tcx, vec![\n+            ty::Predicate::Trait(ty::Binder(\n+                ty::TraitPredicate { trait_ref: *trait_ref }\n+            ))\n+        ]);\n+        let implied_obligations = implied_obligations.map(|pred| {\n+            traits::Obligation::new(cause.clone(), param_env, pred)\n+        });\n+        self.out.extend(implied_obligations);\n+\n         self.out.extend(\n             trait_ref.substs.types()\n                             .filter(|ty| !ty.has_escaping_regions())"}]}