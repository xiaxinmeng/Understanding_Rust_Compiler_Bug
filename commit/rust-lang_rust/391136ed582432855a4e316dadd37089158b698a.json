{"sha": "391136ed582432855a4e316dadd37089158b698a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM5MTEzNmVkNTgyNDMyODU1YTRlMzE2ZGFkZDM3MDg5MTU4YjY5OGE=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-11-09T18:06:42Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-11-09T18:06:42Z"}, "message": "Rollup merge of #77016 - Mark-Simulacrum:clippy-tests, r=pietroalbini\n\nTest clippy on PR CI on changes\n\nThis runs the tools builder (which builds and tests tools, including clippy) when the clippy submodule changes. This essentially returns us to the prior state when clippy was a submodule; it makes sense for us to test it on CI when it changes. It might make sense for it to be tested regardless of changing but it is somewhat rare for it to fail and we don't want to add to CI time for the majority of PRs which don't affect it.\n\nFixes #76999.", "tree": {"sha": "82fdf85d13ed3b07249ad776ccb146bec80342df", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/82fdf85d13ed3b07249ad776ccb146bec80342df"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/391136ed582432855a4e316dadd37089158b698a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfqYUzCRBK7hj4Ov3rIwAAdHIIAAbssNivr7RDiWIwK5/SFbwQ\nOzqaV4U88lQsEbqaz0bRhFVSfMs5DWrkqPCr/Fx7oce+hvvv5nOyr9yPbuJZdZc0\nLFM1oDL7RA6W9/VNlGB48I+ZDpgo/HCJYGtm2NdcUwkjdG5yWeITdvFM3CG15i06\nz5B4//TApMF1wkNettbZc73eqCa39WW1gxvOSqTYNPBGX0VXmNEotZErX82W2nwM\nQlJqdwnF9giJ+p3y4dpABGFVRd3465fN+VzSnlpvAluR3XOzSr7jD67G2piqIZOY\n1gWmxp3TUu4b7NuuayWObqvV596Ps01ku9OryIGs1UfDuvNA+hdFuuys+QknAJA=\n=pmX4\n-----END PGP SIGNATURE-----\n", "payload": "tree 82fdf85d13ed3b07249ad776ccb146bec80342df\nparent 99f16e637b47fb9de3b88e8df6dbc68be180cd96\nparent d847299674c35d36091b166051909a2e1b965de8\nauthor Dylan DPC <dylan.dpc@gmail.com> 1604945202 +0100\ncommitter GitHub <noreply@github.com> 1604945202 +0100\n\nRollup merge of #77016 - Mark-Simulacrum:clippy-tests, r=pietroalbini\n\nTest clippy on PR CI on changes\n\nThis runs the tools builder (which builds and tests tools, including clippy) when the clippy submodule changes. This essentially returns us to the prior state when clippy was a submodule; it makes sense for us to test it on CI when it changes. It might make sense for it to be tested regardless of changing but it is somewhat rare for it to fail and we don't want to add to CI time for the majority of PRs which don't affect it.\n\nFixes #76999.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/391136ed582432855a4e316dadd37089158b698a", "html_url": "https://github.com/rust-lang/rust/commit/391136ed582432855a4e316dadd37089158b698a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/391136ed582432855a4e316dadd37089158b698a/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "99f16e637b47fb9de3b88e8df6dbc68be180cd96", "url": "https://api.github.com/repos/rust-lang/rust/commits/99f16e637b47fb9de3b88e8df6dbc68be180cd96", "html_url": "https://github.com/rust-lang/rust/commit/99f16e637b47fb9de3b88e8df6dbc68be180cd96"}, {"sha": "d847299674c35d36091b166051909a2e1b965de8", "url": "https://api.github.com/repos/rust-lang/rust/commits/d847299674c35d36091b166051909a2e1b965de8", "html_url": "https://github.com/rust-lang/rust/commit/d847299674c35d36091b166051909a2e1b965de8"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "36bf4368990c90f3d1ce415b6b928ba5d4257c66", "filename": "src/ci/scripts/should-skip-this.sh", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/391136ed582432855a4e316dadd37089158b698a/src%2Fci%2Fscripts%2Fshould-skip-this.sh", "raw_url": "https://github.com/rust-lang/rust/raw/391136ed582432855a4e316dadd37089158b698a/src%2Fci%2Fscripts%2Fshould-skip-this.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fscripts%2Fshould-skip-this.sh?ref=391136ed582432855a4e316dadd37089158b698a", "patch": "@@ -14,6 +14,10 @@ elif git diff HEAD^ | grep --quiet \"^index .* 160000\"; then\n     # Submodules pseudo-files inside git have the 160000 permissions, so when\n     # those files are present in the diff a submodule was updated.\n     echo \"Executing the job since submodules are updated\"\n+elif git diff --name-only HEAD^ | grep --quiet src/tools/clippy; then\n+    # There is not an easy blanket search for subtrees. For now, manually list\n+    # clippy.\n+    echo \"Executing the job since clippy subtree was updated\"\n else\n     echo \"Not executing this job since no submodules were updated\"\n     ciCommandSetEnv SKIP_JOB 1"}]}