{"sha": "5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVjYjllZjM5MGFlYTJhMWFkYWFlNGI5ODM2YmI3YTNhNzVjNDdmMjU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-06-02T12:11:28Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-06-02T12:11:28Z"}, "message": "Auto merge of #5664 - ThibsG:GiveCorrectedCode, r=flip1995\n\nGive corrected code\n\nThis PR adds corrected code for doc examples.\n\nI did this in several commits to facilitate review.\nDon't hesitate to tell me if I forgot some.\nAlso, sometimes I felt it was not necessary to give corrected code, but I maybe wrong.\n\nfixes: #4829\n\nchangelog: Improve documentation examples across multiple lints.", "tree": {"sha": "3264f79738b35896cde8fb12ed376fee02a4fad5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3264f79738b35896cde8fb12ed376fee02a4fad5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25", "html_url": "https://github.com/rust-lang/rust/commit/5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f760d77bdb2bff46f284500f77ecc697dd8507c5", "url": "https://api.github.com/repos/rust-lang/rust/commits/f760d77bdb2bff46f284500f77ecc697dd8507c5", "html_url": "https://github.com/rust-lang/rust/commit/f760d77bdb2bff46f284500f77ecc697dd8507c5"}, {"sha": "137a3b4d3242cfe331f8f9b87c51ac0c431fe160", "url": "https://api.github.com/repos/rust-lang/rust/commits/137a3b4d3242cfe331f8f9b87c51ac0c431fe160", "html_url": "https://github.com/rust-lang/rust/commit/137a3b4d3242cfe331f8f9b87c51ac0c431fe160"}], "stats": {"total": 523, "additions": 433, "deletions": 90}, "files": [{"sha": "13e61fe98bac1d6ff18a1f61dce52ba52acf9a45", "filename": "clippy_lints/src/assign_ops.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25/clippy_lints%2Fsrc%2Fassign_ops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25/clippy_lints%2Fsrc%2Fassign_ops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fassign_ops.rs?ref=5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25", "patch": "@@ -24,7 +24,11 @@ declare_clippy_lint! {\n     /// let mut a = 5;\n     /// let b = 0;\n     /// // ...\n+    /// // Bad\n     /// a = a + b;\n+    ///\n+    /// // Good\n+    /// a += b;\n     /// ```\n     pub ASSIGN_OP_PATTERN,\n     style,"}, {"sha": "05517f6f9f0ccfe4f8b28bd38e09e19205739316", "filename": "clippy_lints/src/double_parens.rs", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25/clippy_lints%2Fsrc%2Fdouble_parens.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25/clippy_lints%2Fsrc%2Fdouble_parens.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdouble_parens.rs?ref=5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25", "patch": "@@ -13,10 +13,24 @@ declare_clippy_lint! {\n     ///\n     /// **Example:**\n     /// ```rust\n+    /// // Bad\n+    /// fn simple_double_parens() -> i32 {\n+    ///     ((0))\n+    /// }\n+    ///\n+    /// // Good\n+    /// fn simple_no_parens() -> i32 {\n+    ///     0\n+    /// }\n+    ///\n+    /// // or\n+    ///\n     /// # fn foo(bar: usize) {}\n-    /// ((0));\n+    /// // Bad\n     /// foo((0));\n-    /// ((1, 2));\n+    ///\n+    /// // Good\n+    /// foo(0);\n     /// ```\n     pub DOUBLE_PARENS,\n     complexity,"}, {"sha": "5a7f759486edd2cbe13df1c26235a8f56b1d7184", "filename": "clippy_lints/src/drop_bounds.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25/clippy_lints%2Fsrc%2Fdrop_bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25/clippy_lints%2Fsrc%2Fdrop_bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdrop_bounds.rs?ref=5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25", "patch": "@@ -27,6 +27,10 @@ declare_clippy_lint! {\n     /// ```rust\n     /// fn foo<T: Drop>() {}\n     /// ```\n+    /// Could be written as:\n+    /// ```rust\n+    /// fn foo<T>() {}\n+    /// ```\n     pub DROP_BOUNDS,\n     correctness,\n     \"Bounds of the form `T: Drop` are useless\""}, {"sha": "afefa2506381b99f0a108e12b5ee3e09160b12d8", "filename": "clippy_lints/src/duration_subsec.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25/clippy_lints%2Fsrc%2Fduration_subsec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25/clippy_lints%2Fsrc%2Fduration_subsec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fduration_subsec.rs?ref=5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25", "patch": "@@ -22,8 +22,14 @@ declare_clippy_lint! {\n     /// ```rust\n     /// # use std::time::Duration;\n     /// let dur = Duration::new(5, 0);\n+    ///\n+    /// // Bad\n     /// let _micros = dur.subsec_nanos() / 1_000;\n     /// let _millis = dur.subsec_nanos() / 1_000_000;\n+    ///\n+    /// // Good\n+    /// let _micros = dur.subsec_micros();\n+    /// let _millis = dur.subsec_millis();\n     /// ```\n     pub DURATION_SUBSEC,\n     complexity,"}, {"sha": "cb0fd59a2d4079acd2835fb752cd3e045cb43b1f", "filename": "clippy_lints/src/enum_variants.rs", "status": "modified", "additions": 27, "deletions": 5, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25/clippy_lints%2Fsrc%2Fenum_variants.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25/clippy_lints%2Fsrc%2Fenum_variants.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fenum_variants.rs?ref=5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25", "patch": "@@ -25,31 +25,47 @@ declare_clippy_lint! {\n     ///     BattenbergCake,\n     /// }\n     /// ```\n+    /// Could be written as:\n+    /// ```rust\n+    /// enum Cake {\n+    ///     BlackForest,\n+    ///     Hummingbird,\n+    ///     Battenberg,\n+    /// }\n+    /// ```\n     pub ENUM_VARIANT_NAMES,\n     style,\n     \"enums where all variants share a prefix/postfix\"\n }\n \n declare_clippy_lint! {\n-    /// **What it does:** Detects enumeration variants that are prefixed or suffixed\n-    /// by the same characters.\n+    /// **What it does:** Detects public enumeration variants that are\n+    /// prefixed or suffixed by the same characters.\n     ///\n-    /// **Why is this bad?** Enumeration variant names should specify their variant,\n+    /// **Why is this bad?** Public enumeration variant names should specify their variant,\n     /// not repeat the enumeration name.\n     ///\n     /// **Known problems:** None.\n     ///\n     /// **Example:**\n     /// ```rust\n-    /// enum Cake {\n+    /// pub enum Cake {\n     ///     BlackForestCake,\n     ///     HummingbirdCake,\n     ///     BattenbergCake,\n     /// }\n     /// ```\n+    /// Could be written as:\n+    /// ```rust\n+    /// pub enum Cake {\n+    ///     BlackForest,\n+    ///     Hummingbird,\n+    ///     Battenberg,\n+    /// }\n+    /// ```\n     pub PUB_ENUM_VARIANT_NAMES,\n     pedantic,\n-    \"enums where all variants share a prefix/postfix\"\n+    \"public enums where all variants share a prefix/postfix\"\n }\n \n declare_clippy_lint! {\n@@ -66,6 +82,12 @@ declare_clippy_lint! {\n     ///     struct BlackForestCake;\n     /// }\n     /// ```\n+    /// Could be written as:\n+    /// ```rust\n+    /// mod cake {\n+    ///     struct BlackForest;\n+    /// }\n+    /// ```\n     pub MODULE_NAME_REPETITIONS,\n     pedantic,\n     \"type names prefixed/postfixed with their containing module's name\""}, {"sha": "d7819d737ea0445565b4bd67f7b1467b4b6b4f25", "filename": "clippy_lints/src/eq_op.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25/clippy_lints%2Fsrc%2Feq_op.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25/clippy_lints%2Fsrc%2Feq_op.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Feq_op.rs?ref=5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25", "patch": "@@ -39,7 +39,11 @@ declare_clippy_lint! {\n     ///\n     /// **Example:**\n     /// ```ignore\n+    /// // Bad\n     /// &x == y\n+    ///\n+    /// // Good\n+    /// x == *y\n     /// ```\n     pub OP_REF,\n     style,"}, {"sha": "7227683aa5ac2c0104f1a535c1bbbdbb641da55b", "filename": "clippy_lints/src/escape.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25/clippy_lints%2Fsrc%2Fescape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25/clippy_lints%2Fsrc%2Fescape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fescape.rs?ref=5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25", "patch": "@@ -28,9 +28,16 @@ declare_clippy_lint! {\n     /// **Example:**\n     /// ```rust\n     /// # fn foo(bar: usize) {}\n+    ///\n+    /// // Bad\n     /// let x = Box::new(1);\n     /// foo(*x);\n     /// println!(\"{}\", *x);\n+    ///\n+    /// // Good\n+    /// let x = 1;\n+    /// foo(x);\n+    /// println!(\"{}\", x);\n     /// ```\n     pub BOXED_LOCAL,\n     perf,"}, {"sha": "d093025fd3d7a912219d96f2975a71a165e4833e", "filename": "clippy_lints/src/eta_reduction.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25/clippy_lints%2Fsrc%2Feta_reduction.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25/clippy_lints%2Fsrc%2Feta_reduction.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Feta_reduction.rs?ref=5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25", "patch": "@@ -26,7 +26,11 @@ declare_clippy_lint! {\n     ///\n     /// **Example:**\n     /// ```rust,ignore\n+    /// // Bad\n     /// xs.map(|x| foo(x))\n+    ///\n+    /// // Good\n+    /// xs.map(foo)\n     /// ```\n     /// where `foo(_)` is a plain function that takes the exact argument type of\n     /// `x`."}, {"sha": "74144fb299de2c6727f1e62429127c56997bf7c4", "filename": "clippy_lints/src/eval_order_dependence.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25/clippy_lints%2Fsrc%2Feval_order_dependence.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25/clippy_lints%2Fsrc%2Feval_order_dependence.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Feval_order_dependence.rs?ref=5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25", "patch": "@@ -21,11 +21,20 @@ declare_clippy_lint! {\n     /// **Example:**\n     /// ```rust\n     /// let mut x = 0;\n+    ///\n+    /// // Bad\n     /// let a = {\n     ///     x = 1;\n     ///     1\n     /// } + x;\n     /// // Unclear whether a is 1 or 2.\n+    ///\n+    /// // Good\n+    /// let tmp = {\n+    ///     x = 1;\n+    ///     1\n+    /// };\n+    /// let a = tmp + x;\n     /// ```\n     pub EVAL_ORDER_DEPENDENCE,\n     complexity,"}, {"sha": "92812816461c568b75c309da7c2f08853564f75b", "filename": "clippy_lints/src/fallible_impl_from.rs", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25/clippy_lints%2Fsrc%2Ffallible_impl_from.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25/clippy_lints%2Fsrc%2Ffallible_impl_from.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ffallible_impl_from.rs?ref=5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25", "patch": "@@ -20,12 +20,31 @@ declare_clippy_lint! {\n     /// **Example:**\n     /// ```rust\n     /// struct Foo(i32);\n+    ///\n+    /// // Bad\n     /// impl From<String> for Foo {\n     ///     fn from(s: String) -> Self {\n     ///         Foo(s.parse().unwrap())\n     ///     }\n     /// }\n     /// ```\n+    ///\n+    /// ```rust\n+    /// // Good\n+    /// struct Foo(i32);\n+    ///\n+    /// use std::convert::TryFrom;\n+    /// impl TryFrom<String> for Foo {\n+    ///     type Error = ();\n+    ///     fn try_from(s: String) -> Result<Self, Self::Error> {\n+    ///         if let Ok(parsed) = s.parse() {\n+    ///             Ok(Foo(parsed))\n+    ///         } else {\n+    ///             Err(())\n+    ///         }\n+    ///     }\n+    /// }\n+    /// ```\n     pub FALLIBLE_IMPL_FROM,\n     nursery,\n     \"Warn on impls of `From<..>` that contain `panic!()` or `unwrap()`\"\n@@ -120,7 +139,7 @@ fn lint_impl_body<'a, 'tcx>(cx: &LateContext<'a, 'tcx>, impl_span: Span, impl_it\n                         move |diag| {\n                             diag.help(\n                                 \"`From` is intended for infallible conversions only. \\\n-                                 Use `TryFrom` if there's a possibility for the conversion to fail.\");\n+                                Use `TryFrom` if there's a possibility for the conversion to fail.\");\n                             diag.span_note(fpu.result, \"potential failure(s)\");\n                         });\n                 }"}, {"sha": "3a912d928375ddc79e6b620f8e4c23a302a0c4f5", "filename": "clippy_lints/src/floating_point_arithmetic.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25/clippy_lints%2Fsrc%2Ffloating_point_arithmetic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25/clippy_lints%2Fsrc%2Ffloating_point_arithmetic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ffloating_point_arithmetic.rs?ref=5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25", "patch": "@@ -28,7 +28,6 @@ declare_clippy_lint! {\n     /// **Example:**\n     ///\n     /// ```rust\n-    ///\n     /// let a = 3f32;\n     /// let _ = a.powf(1.0 / 3.0);\n     /// let _ = (1.0 + a).ln();\n@@ -38,7 +37,6 @@ declare_clippy_lint! {\n     /// is better expressed as\n     ///\n     /// ```rust\n-    ///\n     /// let a = 3f32;\n     /// let _ = a.cbrt();\n     /// let _ = a.ln_1p();"}, {"sha": "1530538aa7d13107f07fce63377a54ce44e6ad0b", "filename": "clippy_lints/src/format.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25/clippy_lints%2Fsrc%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25/clippy_lints%2Fsrc%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fformat.rs?ref=5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25", "patch": "@@ -25,9 +25,13 @@ declare_clippy_lint! {\n     ///\n     /// **Examples:**\n     /// ```rust\n+    ///\n+    /// // Bad\n     /// # let foo = \"foo\";\n-    /// format!(\"foo\");\n     /// format!(\"{}\", foo);\n+    ///\n+    /// // Good\n+    /// format!(\"foo\");\n     /// ```\n     pub USELESS_FORMAT,\n     complexity,"}, {"sha": "325b6cf32a3d293a03c0abe2e7337a19c28e4a34", "filename": "clippy_lints/src/functions.rs", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25/clippy_lints%2Fsrc%2Ffunctions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25/clippy_lints%2Fsrc%2Ffunctions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ffunctions.rs?ref=5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25", "patch": "@@ -49,11 +49,11 @@ declare_clippy_lint! {\n     /// **Known problems:** None.\n     ///\n     /// **Example:**\n-    /// ``` rust\n+    /// ```rust\n     /// fn im_too_long() {\n-    /// println!(\"\");\n-    /// // ... 100 more LoC\n-    /// println!(\"\");\n+    ///     println!(\"\");\n+    ///     // ... 100 more LoC\n+    ///     println!(\"\");\n     /// }\n     /// ```\n     pub TOO_MANY_LINES,\n@@ -79,10 +79,16 @@ declare_clippy_lint! {\n     /// `some_argument.get_raw_ptr()`).\n     ///\n     /// **Example:**\n-    /// ```rust\n+    /// ```rust,ignore\n+    /// // Bad\n     /// pub fn foo(x: *const u8) {\n     ///     println!(\"{}\", unsafe { *x });\n     /// }\n+    ///\n+    /// // Good\n+    /// pub unsafe fn foo(x: *const u8) {\n+    ///     println!(\"{}\", unsafe { *x });\n+    /// }\n     /// ```\n     pub NOT_UNSAFE_PTR_ARG_DEREF,\n     correctness,"}, {"sha": "fdaf37e5e08fa79abb7a21ae94550db6aadfdfd6", "filename": "clippy_lints/src/implicit_saturating_sub.rs", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25/clippy_lints%2Fsrc%2Fimplicit_saturating_sub.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25/clippy_lints%2Fsrc%2Fimplicit_saturating_sub.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fimplicit_saturating_sub.rs?ref=5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25", "patch": "@@ -25,13 +25,6 @@ declare_clippy_lint! {\n     /// if i != 0 {\n     ///     i -= 1;\n     /// }\n-    /// ```\n-    /// Use instead:\n-    /// ```rust\n-    /// let end: u32 = 10;\n-    /// let start: u32 = 5;\n-    ///\n-    /// let mut i: u32 = end - start;\n     ///\n     /// // Good\n     /// i = i.saturating_sub(1);"}, {"sha": "e91fb0c2f27cd0340caf1ace6afb0fb8e70d7098", "filename": "clippy_lints/src/int_plus_one.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25/clippy_lints%2Fsrc%2Fint_plus_one.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25/clippy_lints%2Fsrc%2Fint_plus_one.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fint_plus_one.rs?ref=5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25", "patch": "@@ -10,7 +10,6 @@ use crate::utils::{snippet_opt, span_lint_and_sugg};\n declare_clippy_lint! {\n     /// **What it does:** Checks for usage of `x >= y + 1` or `x - 1 >= y` (and `<=`) in a block\n     ///\n-    ///\n     /// **Why is this bad?** Readability -- better to use `> y` instead of `>= y + 1`.\n     ///\n     /// **Known problems:** None."}, {"sha": "d537ef3f3238e05c9cb0029d959800fbd1ca145f", "filename": "clippy_lints/src/integer_division.rs", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25/clippy_lints%2Fsrc%2Finteger_division.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25/clippy_lints%2Fsrc%2Finteger_division.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Finteger_division.rs?ref=5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25", "patch": "@@ -15,10 +15,13 @@ declare_clippy_lint! {\n     ///\n     /// **Example:**\n     /// ```rust\n-    /// fn main() {\n-    ///     let x = 3 / 2;\n-    ///     println!(\"{}\", x);\n-    /// }\n+    /// // Bad\n+    /// let x = 3 / 2;\n+    /// println!(\"{}\", x);\n+    ///\n+    /// // Good\n+    /// let x = 3f32 / 2f32;\n+    /// println!(\"{}\", x);\n     /// ```\n     pub INTEGER_DIVISION,\n     restriction,"}, {"sha": "c8576bcfcb444bfdcd436e005da71d0791ece679", "filename": "clippy_lints/src/items_after_statements.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25/clippy_lints%2Fsrc%2Fitems_after_statements.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25/clippy_lints%2Fsrc%2Fitems_after_statements.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fitems_after_statements.rs?ref=5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25", "patch": "@@ -16,6 +16,7 @@ declare_clippy_lint! {\n     ///\n     /// **Example:**\n     /// ```rust\n+    /// // Bad\n     /// fn foo() {\n     ///     println!(\"cake\");\n     /// }\n@@ -28,6 +29,21 @@ declare_clippy_lint! {\n     ///     foo(); // prints \"foo\"\n     /// }\n     /// ```\n+    ///\n+    /// ```rust\n+    /// // Good\n+    /// fn foo() {\n+    ///     println!(\"cake\");\n+    /// }\n+    ///\n+    /// fn main() {\n+    ///     fn foo() {\n+    ///         println!(\"foo\");\n+    ///     }\n+    ///     foo(); // prints \"foo\"\n+    ///     foo(); // prints \"foo\"\n+    /// }\n+    /// ```\n     pub ITEMS_AFTER_STATEMENTS,\n     pedantic,\n     \"blocks where an item comes after a statement\""}, {"sha": "7ba43562d7d447b565095ae2b033d1f125df6483", "filename": "clippy_lints/src/literal_representation.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25/clippy_lints%2Fsrc%2Fliteral_representation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25/clippy_lints%2Fsrc%2Fliteral_representation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fliteral_representation.rs?ref=5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25", "patch": "@@ -24,7 +24,11 @@ declare_clippy_lint! {\n     /// **Example:**\n     ///\n     /// ```rust\n+    /// // Bad\n     /// let x: u64 = 61864918973511;\n+    ///\n+    /// // Good\n+    /// let x: u64 = 61_864_918_973_511;\n     /// ```\n     pub UNREADABLE_LITERAL,\n     pedantic,\n@@ -44,7 +48,11 @@ declare_clippy_lint! {\n     /// **Example:**\n     ///\n     /// ```rust\n+    /// // Probably mistyped\n     /// 2_32;\n+    ///\n+    /// // Good\n+    /// 2_i32;\n     /// ```\n     pub MISTYPED_LITERAL_SUFFIXES,\n     correctness,\n@@ -63,7 +71,11 @@ declare_clippy_lint! {\n     /// **Example:**\n     ///\n     /// ```rust\n+    /// // Bad\n     /// let x: u64 = 618_64_9189_73_511;\n+    ///\n+    /// // Good\n+    /// let x: u64 = 61_864_918_973_511;\n     /// ```\n     pub INCONSISTENT_DIGIT_GROUPING,\n     style,"}, {"sha": "146212cb2c7a1933806e3e098243cc22ac9e891e", "filename": "clippy_lints/src/matches.rs", "status": "modified", "additions": 39, "deletions": 5, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25/clippy_lints%2Fsrc%2Fmatches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25/clippy_lints%2Fsrc%2Fmatches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmatches.rs?ref=5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25", "patch": "@@ -36,10 +36,17 @@ declare_clippy_lint! {\n     /// ```rust\n     /// # fn bar(stool: &str) {}\n     /// # let x = Some(\"abc\");\n+    ///\n+    /// // Bad\n     /// match x {\n     ///     Some(ref foo) => bar(foo),\n     ///     _ => (),\n     /// }\n+    ///\n+    /// // Good\n+    /// if let Some(ref foo) = x {\n+    ///     bar(foo);\n+    /// }\n     /// ```\n     pub SINGLE_MATCH,\n     style,\n@@ -97,11 +104,19 @@ declare_clippy_lint! {\n     ///\n     /// **Example:**\n     /// ```rust,ignore\n+    /// // Bad\n     /// match x {\n     ///     &A(ref y) => foo(y),\n     ///     &B => bar(),\n     ///     _ => frob(&x),\n     /// }\n+    ///\n+    /// // Good\n+    /// match *x {\n+    ///     A(ref y) => foo(y),\n+    ///     B => bar(),\n+    ///     _ => frob(x),\n+    /// }\n     /// ```\n     pub MATCH_REF_PATS,\n     style,\n@@ -197,10 +212,15 @@ declare_clippy_lint! {\n     /// **Example:**\n     /// ```rust\n     /// let x: Option<()> = None;\n+    ///\n+    /// // Bad\n     /// let r: Option<&()> = match x {\n     ///     None => None,\n     ///     Some(ref v) => Some(v),\n     /// };\n+    ///\n+    /// // Good\n+    /// let r: Option<&()> = x.as_ref();\n     /// ```\n     pub MATCH_AS_REF,\n     complexity,\n@@ -219,10 +239,18 @@ declare_clippy_lint! {\n     /// ```rust\n     /// # enum Foo { A(usize), B(usize) }\n     /// # let x = Foo::B(1);\n+    ///\n+    /// // Bad\n     /// match x {\n     ///     Foo::A(_) => {},\n     ///     _ => {},\n     /// }\n+    ///\n+    /// // Good\n+    /// match x {\n+    ///     Foo::A(_) => {},\n+    ///     Foo::B(_) => {},\n+    /// }\n     /// ```\n     pub WILDCARD_ENUM_MATCH_ARM,\n     restriction,\n@@ -242,16 +270,15 @@ declare_clippy_lint! {\n     /// ```rust\n     /// # enum Foo { A, B, C }\n     /// # let x = Foo::B;\n+    ///\n+    /// // Bad\n     /// match x {\n     ///     Foo::A => {},\n     ///     Foo::B => {},\n     ///     _ => {},\n     /// }\n-    /// ```\n-    /// Use instead:\n-    /// ```rust\n-    /// # enum Foo { A, B, C }\n-    /// # let x = Foo::B;\n+    ///\n+    /// // Good\n     /// match x {\n     ///     Foo::A => {},\n     ///     Foo::B => {},\n@@ -273,10 +300,17 @@ declare_clippy_lint! {\n     ///\n     /// **Example:**\n     /// ```rust\n+    /// // Bad\n     /// match \"foo\" {\n     ///     \"a\" => {},\n     ///     \"bar\" | _ => {},\n     /// }\n+    ///\n+    /// // Good\n+    /// match \"foo\" {\n+    ///     \"a\" => {},\n+    ///     _ => {},\n+    /// }\n     /// ```\n     pub WILDCARD_IN_OR_PATTERNS,\n     complexity,"}, {"sha": "a9c0ff24fa602587a334e5a34fc87508292e5fb3", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 54, "deletions": 15, "changes": 69, "blob_url": "https://github.com/rust-lang/rust/blob/5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25", "patch": "@@ -218,7 +218,12 @@ declare_clippy_lint! {\n     /// **Example:**\n     /// ```rust\n     /// # let x = Ok::<_, ()>(());\n-    /// x.ok().expect(\"why did I do this again?\")\n+    ///\n+    /// // Bad\n+    /// x.ok().expect(\"why did I do this again?\");\n+    ///\n+    /// // Good\n+    /// x.expect(\"why did I do this again?\");\n     /// ```\n     pub OK_EXPECT,\n     style,\n@@ -273,8 +278,12 @@ declare_clippy_lint! {\n     /// **Example:**\n     /// ```rust\n     /// # let opt = Some(1);\n-    /// opt.map_or(None, |a| Some(a + 1))\n-    /// # ;\n+    ///\n+    /// // Bad\n+    /// opt.map_or(None, |a| Some(a + 1));\n+    ///\n+    /// // Good\n+    /// opt.and_then(|a| Some(a + 1));\n     /// ```\n     pub OPTION_MAP_OR_NONE,\n     style,\n@@ -390,14 +399,19 @@ declare_clippy_lint! {\n     /// **What it does:** Checks for usage of `_.map(_).flatten(_)`,\n     ///\n     /// **Why is this bad?** Readability, this can be written more concisely as a\n-    /// single method call.\n+    /// single method call using `_.flat_map(_)`\n     ///\n     /// **Known problems:**\n     ///\n     /// **Example:**\n     /// ```rust\n     /// let vec = vec![vec![1]];\n+    ///\n+    /// // Bad\n     /// vec.iter().map(|x| x.iter()).flatten();\n+    ///\n+    /// // Good\n+    /// vec.iter().flat_map(|x| x.iter());\n     /// ```\n     pub MAP_FLATTEN,\n     pedantic,\n@@ -417,7 +431,16 @@ declare_clippy_lint! {\n     /// **Example:**\n     /// ```rust\n     /// let vec = vec![1];\n+    ///\n+    /// // Bad\n     /// vec.iter().filter(|x| **x == 0).map(|x| *x * 2);\n+    ///\n+    /// // Good\n+    /// vec.iter().filter_map(|x| if *x == 0 {\n+    ///     Some(*x * 2)\n+    /// } else {\n+    ///     None\n+    /// });\n     /// ```\n     pub FILTER_MAP,\n     pedantic,\n@@ -634,7 +657,12 @@ declare_clippy_lint! {\n     /// ```rust\n     /// # use std::rc::Rc;\n     /// let x = Rc::new(1);\n+    ///\n+    /// // Bad\n     /// x.clone();\n+    ///\n+    /// // Good\n+    /// Rc::clone(&x);\n     /// ```\n     pub CLONE_ON_REF_PTR,\n     restriction,\n@@ -741,7 +769,12 @@ declare_clippy_lint! {\n     /// **Known problems:** Does not catch multi-byte unicode characters.\n     ///\n     /// **Example:**\n-    /// `_.split(\"x\")` could be `_.split('x')`\n+    /// ```rust,ignore\n+    /// // Bad\n+    /// _.split(\"x\");\n+    ///\n+    /// // Good\n+    /// _.split('x');\n     pub SINGLE_CHAR_PATTERN,\n     perf,\n     \"using a single-character str where a char could be used, e.g., `_.split(\\\"x\\\")`\"\n@@ -964,8 +997,8 @@ declare_clippy_lint! {\n }\n \n declare_clippy_lint! {\n-    /// **What it does:** Checks for usage of `.chars().last()` or\n-    /// `.chars().next_back()` on a `str` to check if it ends with a given char.\n+    /// **What it does:** Checks for usage of `_.chars().last()` or\n+    /// `_.chars().next_back()` on a `str` to check if it ends with a given char.\n     ///\n     /// **Why is this bad?** Readability, this can be written more concisely as\n     /// `_.ends_with(_)`.\n@@ -975,8 +1008,12 @@ declare_clippy_lint! {\n     /// **Example:**\n     /// ```rust\n     /// # let name = \"_\";\n-    /// name.chars().last() == Some('_') || name.chars().next_back() == Some('-')\n-    /// # ;\n+    ///\n+    /// // Bad\n+    /// name.chars().last() == Some('_') || name.chars().next_back() == Some('-');\n+    ///\n+    /// // Good\n+    /// name.ends_with('_') || name.ends_with('-');\n     /// ```\n     pub CHARS_LAST_CMP,\n     style,\n@@ -1044,17 +1081,15 @@ declare_clippy_lint! {\n     /// **Example:**\n     /// ```rust\n     /// let _ = (0..3).filter_map(|x| if x > 2 { Some(x) } else { None });\n-    /// ```\n-    /// As there is no transformation of the argument this could be written as:\n-    /// ```rust\n+    ///\n+    /// // As there is no transformation of the argument this could be written as:\n     /// let _ = (0..3).filter(|&x| x > 2);\n     /// ```\n     ///\n     /// ```rust\n     /// let _ = (0..4).filter_map(|x| Some(x + 1));\n-    /// ```\n-    /// As there is no conditional check on the argument this could be written as:\n-    /// ```rust\n+    ///\n+    /// // As there is no conditional check on the argument this could be written as:\n     /// let _ = (0..4).map(|x| x + 1);\n     /// ```\n     pub UNNECESSARY_FILTER_MAP,\n@@ -1075,7 +1110,11 @@ declare_clippy_lint! {\n     /// **Example:**\n     ///\n     /// ```rust\n+    /// // Bad\n     /// let _ = (&vec![3, 4, 5]).into_iter();\n+    ///\n+    /// // Good\n+    /// let _ = (&vec![3, 4, 5]).iter();\n     /// ```\n     pub INTO_ITER_ON_REF,\n     style,"}, {"sha": "51282ab93ef6ec5bd9f856487e97f0db48b9e7ba", "filename": "clippy_lints/src/misc.rs", "status": "modified", "additions": 29, "deletions": 2, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25/clippy_lints%2Fsrc%2Fmisc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25/clippy_lints%2Fsrc%2Fmisc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmisc.rs?ref=5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25", "patch": "@@ -38,10 +38,16 @@ declare_clippy_lint! {\n     /// dereferences, e.g., changing `*x` to `x` within the function.\n     ///\n     /// **Example:**\n-    /// ```rust\n+    /// ```rust,ignore\n+    /// // Bad\n     /// fn foo(ref x: u8) -> bool {\n     ///     true\n     /// }\n+    ///\n+    /// // Good\n+    /// fn foo(x: &u8) -> bool {\n+    ///     true\n+    /// }\n     /// ```\n     pub TOPLEVEL_REF_ARG,\n     style,\n@@ -60,7 +66,11 @@ declare_clippy_lint! {\n     /// ```rust\n     /// # let x = 1.0;\n     ///\n+    /// // Bad\n     /// if x == f32::NAN { }\n+    ///\n+    /// // Good\n+    /// if x.is_nan() { }\n     /// ```\n     pub CMP_NAN,\n     correctness,\n@@ -83,8 +93,15 @@ declare_clippy_lint! {\n     /// ```rust\n     /// let x = 1.2331f64;\n     /// let y = 1.2332f64;\n+    ///\n+    /// // Bad\n     /// if y == 1.23f64 { }\n     /// if y != x {} // where both are floats\n+    ///\n+    /// // Good\n+    /// let error = 0.01f64; // Use an epsilon for comparison\n+    /// if (y - 1.23f64).abs() < error { }\n+    /// if (y - x).abs() > error { }\n     /// ```\n     pub FLOAT_CMP,\n     correctness,\n@@ -191,7 +208,11 @@ declare_clippy_lint! {\n     /// **Example:**\n     ///\n     /// ```rust\n+    /// // Bad\n     /// let a = 0 as *const u32;\n+    ///\n+    /// // Good\n+    /// let a = std::ptr::null::<u32>();\n     /// ```\n     pub ZERO_PTR,\n     style,\n@@ -214,7 +235,13 @@ declare_clippy_lint! {\n     /// ```rust\n     /// let x: f64 = 1.0;\n     /// const ONE: f64 = 1.00;\n-    /// x == ONE;  // where both are floats\n+    ///\n+    /// // Bad\n+    /// if x == ONE { }  // where both are floats\n+    ///\n+    /// // Good\n+    /// let error = 0.1f64; // Use an epsilon for comparison\n+    /// if (x - ONE).abs() < error { }\n     /// ```\n     pub FLOAT_CMP_CONST,\n     restriction,"}, {"sha": "ad39e59d0678a29bdac0ae5420e3443869865d33", "filename": "clippy_lints/src/misc_early.rs", "status": "modified", "additions": 27, "deletions": 7, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25/clippy_lints%2Fsrc%2Fmisc_early.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25/clippy_lints%2Fsrc%2Fmisc_early.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmisc_early.rs?ref=5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25", "patch": "@@ -59,7 +59,11 @@ declare_clippy_lint! {\n     ///\n     /// **Example:**\n     /// ```rust\n+    /// // Bad\n     /// fn foo(a: i32, _a: i32) {}\n+    ///\n+    /// // Good\n+    /// fn bar(a: i32, _b: i32) {}\n     /// ```\n     pub DUPLICATE_UNDERSCORE_ARGUMENT,\n     style,\n@@ -77,7 +81,11 @@ declare_clippy_lint! {\n     ///\n     /// **Example:**\n     /// ```rust,ignore\n-    /// (|| 42)()\n+    /// // Bad\n+    /// let a = (|| 42)()\n+    ///\n+    /// // Good\n+    /// let a = 42\n     /// ```\n     pub REDUNDANT_CLOSURE_CALL,\n     complexity,\n@@ -112,7 +120,11 @@ declare_clippy_lint! {\n     ///\n     /// **Example:**\n     /// ```rust\n+    /// // Bad\n     /// let y = 0x1a9BAcD;\n+    ///\n+    /// // Good\n+    /// let y = 0x1A9BACD;\n     /// ```\n     pub MIXED_CASE_HEX_LITERALS,\n     style,\n@@ -129,7 +141,11 @@ declare_clippy_lint! {\n     ///\n     /// **Example:**\n     /// ```rust\n+    /// // Bad\n     /// let y = 123832i32;\n+    ///\n+    /// // Good\n+    /// let y = 123832_i32;\n     /// ```\n     pub UNSEPARATED_LITERAL_SUFFIX,\n     pedantic,\n@@ -207,9 +223,16 @@ declare_clippy_lint! {\n     /// ```rust\n     /// # let v = Some(\"abc\");\n     ///\n+    /// // Bad\n+    /// match v {\n+    ///     Some(x) => (),\n+    ///     y @ _ => (),\n+    /// }\n+    ///\n+    /// // Good\n     /// match v {\n     ///     Some(x) => (),\n-    ///     y @ _ => (), // easier written as `y`,\n+    ///     y => (),\n     /// }\n     /// ```\n     pub REDUNDANT_PATTERN,\n@@ -235,16 +258,13 @@ declare_clippy_lint! {\n     /// # struct TupleStruct(u32, u32, u32);\n     /// # let t = TupleStruct(1, 2, 3);\n     ///\n+    /// // Bad\n     /// match t {\n     ///     TupleStruct(0, .., _) => (),\n     ///     _ => (),\n     /// }\n-    /// ```\n-    /// can be written as\n-    /// ```rust\n-    /// # struct TupleStruct(u32, u32, u32);\n-    /// # let t = TupleStruct(1, 2, 3);\n     ///\n+    /// // Good\n     /// match t {\n     ///     TupleStruct(0, ..) => (),\n     ///     _ => (),"}, {"sha": "58a8e1a1064ae7603f46bce495a4a76c70afaff7", "filename": "clippy_lints/src/mut_reference.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25/clippy_lints%2Fsrc%2Fmut_reference.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25/clippy_lints%2Fsrc%2Fmut_reference.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmut_reference.rs?ref=5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25", "patch": "@@ -16,7 +16,11 @@ declare_clippy_lint! {\n     ///\n     /// **Example:**\n     /// ```ignore\n+    /// // Bad\n     /// my_vec.push(&mut value)\n+    ///\n+    /// // Good\n+    /// my_vec.push(&value)\n     /// ```\n     pub UNNECESSARY_MUT_PASSED,\n     style,"}, {"sha": "78b15afc5a7fac4105fc5be6e699838bd43f5342", "filename": "clippy_lints/src/mutex_atomic.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25/clippy_lints%2Fsrc%2Fmutex_atomic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25/clippy_lints%2Fsrc%2Fmutex_atomic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmutex_atomic.rs?ref=5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25", "patch": "@@ -22,9 +22,15 @@ declare_clippy_lint! {\n     ///\n     /// **Example:**\n     /// ```rust\n+    /// # let y = true;\n+    ///\n+    /// // Bad\n     /// # use std::sync::Mutex;\n-    /// # let y = 1;\n     /// let x = Mutex::new(&y);\n+    ///\n+    /// // Good\n+    /// # use std::sync::atomic::AtomicBool;\n+    /// let x = AtomicBool::new(y);\n     /// ```\n     pub MUTEX_ATOMIC,\n     perf,\n@@ -46,6 +52,10 @@ declare_clippy_lint! {\n     /// ```rust\n     /// # use std::sync::Mutex;\n     /// let x = Mutex::new(0usize);\n+    ///\n+    /// // Good\n+    /// # use std::sync::atomic::AtomicUsize;\n+    /// let x = AtomicUsize::new(0usize);\n     /// ```\n     pub MUTEX_INTEGER,\n     nursery,"}, {"sha": "15b129fa09802922543c184d3e47d7905dc622c2", "filename": "clippy_lints/src/needless_bool.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25/clippy_lints%2Fsrc%2Fneedless_bool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25/clippy_lints%2Fsrc%2Fneedless_bool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_bool.rs?ref=5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25", "patch": "@@ -15,8 +15,7 @@ use rustc_span::Span;\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for expressions of the form `if c { true } else {\n-    /// false }`\n-    /// (or vice versa) and suggest using the condition directly.\n+    /// false }` (or vice versa) and suggests using the condition directly.\n     ///\n     /// **Why is this bad?** Redundant code.\n     ///"}, {"sha": "5880d1d610206365b77e0be95f1e88af9d7d9d56", "filename": "clippy_lints/src/needless_borrow.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25/clippy_lints%2Fsrc%2Fneedless_borrow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25/clippy_lints%2Fsrc%2Fneedless_borrow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_borrow.rs?ref=5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25", "patch": "@@ -18,12 +18,16 @@ declare_clippy_lint! {\n     /// **Why is this bad?** Suggests that the receiver of the expression borrows\n     /// the expression.\n     ///\n+    /// **Known problems:** None.\n+    ///\n     /// **Example:**\n     /// ```rust\n+    /// // Bad\n     /// let x: &i32 = &&&&&&5;\n-    /// ```\n     ///\n-    /// **Known problems:** None.\n+    /// // Good\n+    /// let x: &i32 = &5;\n+    /// ```\n     pub NEEDLESS_BORROW,\n     nursery,\n     \"taking a reference that is going to be automatically dereferenced\""}, {"sha": "fbdf927b82476544c7cd79456d3a9720207c9641", "filename": "clippy_lints/src/needless_pass_by_value.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs?ref=5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25", "patch": "@@ -40,9 +40,8 @@ declare_clippy_lint! {\n     ///     assert_eq!(v.len(), 42);\n     /// }\n     /// ```\n-    ///\n+    /// should be\n     /// ```rust\n-    /// // should be\n     /// fn foo(v: &[i32]) {\n     ///     assert_eq!(v.len(), 42);\n     /// }"}, {"sha": "d866bab2f642c46242b92bed638c577612aa062a", "filename": "clippy_lints/src/needless_update.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25/clippy_lints%2Fsrc%2Fneedless_update.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25/clippy_lints%2Fsrc%2Fneedless_update.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_update.rs?ref=5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25", "patch": "@@ -21,6 +21,16 @@ declare_clippy_lint! {\n     /// #     z: i32,\n     /// # }\n     /// # let zero_point = Point { x: 0, y: 0, z: 0 };\n+    ///\n+    /// // Bad\n+    /// Point {\n+    ///     x: 1,\n+    ///     y: 1,\n+    ///     z: 1,\n+    ///     ..zero_point\n+    /// };\n+    ///\n+    /// // Ok\n     /// Point {\n     ///     x: 1,\n     ///     y: 1,"}, {"sha": "c77b44e0c99c710381a39bebcfe9b6e88d6557df", "filename": "clippy_lints/src/ptr.rs", "status": "modified", "additions": 15, "deletions": 8, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25/clippy_lints%2Fsrc%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25/clippy_lints%2Fsrc%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fptr.rs?ref=5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25", "patch": "@@ -47,7 +47,11 @@ declare_clippy_lint! {\n     ///\n     /// **Example:**\n     /// ```ignore\n+    /// // Bad\n     /// fn foo(&Vec<u32>) { .. }\n+    ///\n+    /// // Good\n+    /// fn foo(&[u32]) { .. }\n     /// ```\n     pub PTR_ARG,\n     style,\n@@ -65,9 +69,15 @@ declare_clippy_lint! {\n     ///\n     /// **Example:**\n     /// ```ignore\n+    /// // Bad\n     /// if x == ptr::null {\n     ///     ..\n     /// }\n+    ///\n+    /// // Good\n+    /// if x.is_null() {\n+    ///     ..\n+    /// }\n     /// ```\n     pub CMP_NULL,\n     style,\n@@ -76,19 +86,16 @@ declare_clippy_lint! {\n \n declare_clippy_lint! {\n     /// **What it does:** This lint checks for functions that take immutable\n-    /// references and return\n-    /// mutable ones.\n+    /// references and return mutable ones.\n     ///\n     /// **Why is this bad?** This is trivially unsound, as one can create two\n-    /// mutable references\n-    /// from the same (immutable!) source. This\n-    /// [error](https://github.com/rust-lang/rust/issues/39465)\n+    /// mutable references from the same (immutable!) source.\n+    /// This [error](https://github.com/rust-lang/rust/issues/39465)\n     /// actually lead to an interim Rust release 1.15.1.\n     ///\n     /// **Known problems:** To be on the conservative side, if there's at least one\n-    /// mutable reference\n-    /// with the output lifetime, this lint will not trigger. In practice, this\n-    /// case is unlikely anyway.\n+    /// mutable reference with the output lifetime, this lint will not trigger.\n+    /// In practice, this case is unlikely anyway.\n     ///\n     /// **Example:**\n     /// ```ignore"}, {"sha": "e4361b00fb4c2df025c79612ca2baf87a4888c66", "filename": "clippy_lints/src/question_mark.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25/clippy_lints%2Fsrc%2Fquestion_mark.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25/clippy_lints%2Fsrc%2Fquestion_mark.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fquestion_mark.rs?ref=5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25", "patch": "@@ -88,7 +88,7 @@ impl QuestionMark {\n                         replacement_str,\n                         applicability,\n                     )\n-               }\n+                }\n             }\n         }\n     }"}, {"sha": "fe457aad50e368adb6605b7fbcfc912bfcb1cd17", "filename": "clippy_lints/src/reference.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25/clippy_lints%2Fsrc%2Freference.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25/clippy_lints%2Fsrc%2Freference.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Freference.rs?ref=5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25", "patch": "@@ -16,8 +16,13 @@ declare_clippy_lint! {\n     ///\n     /// **Example:**\n     /// ```rust,ignore\n+    /// // Bad\n     /// let a = f(*&mut b);\n     /// let c = *&d;\n+    ///\n+    /// // Good\n+    /// let a = f(b);\n+    /// let c = d;\n     /// ```\n     pub DEREF_ADDROF,\n     complexity,"}, {"sha": "a2c35c4267344a95eef43abf696e465d4d7d2b22", "filename": "clippy_lints/src/regex.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25/clippy_lints%2Fsrc%2Fregex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25/clippy_lints%2Fsrc%2Fregex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fregex.rs?ref=5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25", "patch": "@@ -86,11 +86,13 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Regex {\n             if let Some(span) = is_expn_of(expr.span, \"regex\");\n             then {\n                 if !self.spans.contains(&span) {\n-                    span_lint(cx,\n-                              REGEX_MACRO,\n-                              span,\n-                              \"`regex!(_)` found. \\\n-                              Please use `Regex::new(_)`, which is faster for now.\");\n+                    span_lint(\n+                        cx,\n+                        REGEX_MACRO,\n+                        span,\n+                        \"`regex!(_)` found. \\\n+                        Please use `Regex::new(_)`, which is faster for now.\"\n+                    );\n                     self.spans.insert(span);\n                 }\n                 self.last = Some(block.hir_id);"}, {"sha": "68c36f918918438a79f80bf4b3ff7a9a34b50ef7", "filename": "clippy_lints/src/shadow.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25/clippy_lints%2Fsrc%2Fshadow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25/clippy_lints%2Fsrc%2Fshadow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fshadow.rs?ref=5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25", "patch": "@@ -25,7 +25,12 @@ declare_clippy_lint! {\n     /// **Example:**\n     /// ```rust\n     /// # let x = 1;\n+    ///\n+    /// // Bad\n     /// let x = &x;\n+    ///\n+    /// // Good\n+    /// let y = &x; // use different variable name\n     /// ```\n     pub SHADOW_SAME,\n     restriction,\n@@ -77,7 +82,12 @@ declare_clippy_lint! {\n     /// # let y = 1;\n     /// # let z = 2;\n     /// let x = y;\n+    ///\n+    /// // Bad\n     /// let x = z; // shadows the earlier binding\n+    ///\n+    /// // Good\n+    /// let w = z; // use different variable name\n     /// ```\n     pub SHADOW_UNRELATED,\n     pedantic,"}, {"sha": "2e853e8301d6999ac2ef1313787ab1129e338bfd", "filename": "clippy_lints/src/single_component_path_imports.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25/clippy_lints%2Fsrc%2Fsingle_component_path_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25/clippy_lints%2Fsrc%2Fsingle_component_path_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fsingle_component_path_imports.rs?ref=5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25", "patch": "@@ -16,15 +16,15 @@ declare_clippy_lint! {\n     ///\n     /// **Example:**\n     ///\n-    /// ```rust, ignore\n+    /// ```rust,ignore\n     /// use regex;\n     ///\n     /// fn main() {\n     ///     regex::Regex::new(r\"^\\d{4}-\\d{2}-\\d{2}$\").unwrap();\n     /// }\n     /// ```\n     /// Better as\n-    /// ```rust, ignore\n+    /// ```rust,ignore\n     /// fn main() {\n     ///     regex::Regex::new(r\"^\\d{4}-\\d{2}-\\d{2}$\").unwrap();\n     /// }"}, {"sha": "a7c4f2c2291f12f0ef1582cbba569d9d4cd6a55c", "filename": "clippy_lints/src/slow_vector_initialization.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25/clippy_lints%2Fsrc%2Fslow_vector_initialization.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25/clippy_lints%2Fsrc%2Fslow_vector_initialization.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fslow_vector_initialization.rs?ref=5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25", "patch": "@@ -22,11 +22,17 @@ declare_clippy_lint! {\n     /// ```rust\n     /// # use core::iter::repeat;\n     /// # let len = 4;\n+    ///\n+    /// // Bad\n     /// let mut vec1 = Vec::with_capacity(len);\n     /// vec1.resize(len, 0);\n     ///\n     /// let mut vec2 = Vec::with_capacity(len);\n-    /// vec2.extend(repeat(0).take(len))\n+    /// vec2.extend(repeat(0).take(len));\n+    ///\n+    /// // Good\n+    /// let mut vec1 = vec![0; len];\n+    /// let mut vec2 = vec![0; len];\n     /// ```\n     pub SLOW_VECTOR_INITIALIZATION,\n     perf,"}, {"sha": "f84566ef707a8e41dbc8a2b00275d7d55c07aeb6", "filename": "clippy_lints/src/strings.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25/clippy_lints%2Fsrc%2Fstrings.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25/clippy_lints%2Fsrc%2Fstrings.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fstrings.rs?ref=5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25", "patch": "@@ -24,6 +24,10 @@ declare_clippy_lint! {\n     /// ```rust\n     /// let mut x = \"Hello\".to_owned();\n     /// x = x + \", World\";\n+    ///\n+    /// // More readable\n+    /// x += \", World\";\n+    /// x.push_str(\", World\");\n     /// ```\n     pub STRING_ADD_ASSIGN,\n     pedantic,\n@@ -69,7 +73,11 @@ declare_clippy_lint! {\n     ///\n     /// **Example:**\n     /// ```rust\n+    /// // Bad\n     /// let bs = \"a byte string\".as_bytes();\n+    ///\n+    /// // Good\n+    /// let bs = b\"a byte string\";\n     /// ```\n     pub STRING_LIT_AS_BYTES,\n     style,"}, {"sha": "a8d4c7620b1ef11e92ed9ac0368a145b39bec76d", "filename": "clippy_lints/src/vec.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25/clippy_lints%2Fsrc%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25/clippy_lints%2Fsrc%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fvec.rs?ref=5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25", "patch": "@@ -17,8 +17,14 @@ declare_clippy_lint! {\n     /// **Known problems:** None.\n     ///\n     /// **Example:**\n-    /// ```rust,ignore\n-    /// foo(&vec![1, 2])\n+    /// ```rust\n+    /// # fn foo(my_vec: &[u8]) {}\n+    ///\n+    /// // Bad\n+    /// foo(&vec![1, 2]);\n+    ///\n+    /// // Good\n+    /// foo(&[1, 2]);\n     /// ```\n     pub USELESS_VEC,\n     perf,"}, {"sha": "7247518e19b9dd8aa69f87951b8f1b004f65fad2", "filename": "clippy_lints/src/verbose_file_reads.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25/clippy_lints%2Fsrc%2Fverbose_file_reads.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25/clippy_lints%2Fsrc%2Fverbose_file_reads.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fverbose_file_reads.rs?ref=5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25", "patch": "@@ -9,6 +9,7 @@ declare_clippy_lint! {\n     ///\n     /// **Why is this bad?** `fs::{read, read_to_string}` provide the same functionality when `buf` is empty with fewer imports and no intermediate values.\n     /// See also: [fs::read docs](https://doc.rust-lang.org/std/fs/fn.read.html), [fs::read_to_string docs](https://doc.rust-lang.org/std/fs/fn.read_to_string.html)\n+    ///\n     /// **Known problems:** None.\n     ///\n     /// **Example:**"}, {"sha": "b637253bd0264666418adde8d5c4c86f6f55beee", "filename": "clippy_lints/src/wildcard_imports.rs", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25/clippy_lints%2Fsrc%2Fwildcard_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25/clippy_lints%2Fsrc%2Fwildcard_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fwildcard_imports.rs?ref=5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25", "patch": "@@ -19,8 +19,14 @@ declare_clippy_lint! {\n     /// still around.\n     ///\n     /// **Example:**\n-    /// ```rust\n+    /// ```rust,ignore\n+    /// // Bad\n     /// use std::cmp::Ordering::*;\n+    /// foo(Less);\n+    ///\n+    /// // Good\n+    /// use std::cmp::Ordering;\n+    /// foo(Ordering::Less)\n     /// ```\n     pub ENUM_GLOB_USE,\n     pedantic,\n@@ -60,15 +66,15 @@ declare_clippy_lint! {\n     ///\n     /// **Example:**\n     ///\n-    /// Bad:\n     /// ```rust,ignore\n+    /// // Bad\n     /// use crate1::*;\n     ///\n     /// foo();\n     /// ```\n     ///\n-    /// Good:\n     /// ```rust,ignore\n+    /// // Good\n     /// use crate1::foo;\n     ///\n     /// foo();"}, {"sha": "22ce484b24e40050f72fce96a65293bad0c513f2", "filename": "clippy_lints/src/write.rs", "status": "modified", "additions": 20, "deletions": 2, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25/clippy_lints%2Fsrc%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25/clippy_lints%2Fsrc%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fwrite.rs?ref=5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25", "patch": "@@ -23,7 +23,11 @@ declare_clippy_lint! {\n     ///\n     /// **Example:**\n     /// ```rust\n+    /// // Bad\n     /// println!(\"\");\n+    ///\n+    /// // Good\n+    /// println!();\n     /// ```\n     pub PRINTLN_EMPTY_STRING,\n     style,\n@@ -32,8 +36,7 @@ declare_clippy_lint! {\n \n declare_clippy_lint! {\n     /// **What it does:** This lint warns when you use `print!()` with a format\n-    /// string that\n-    /// ends in a newline.\n+    /// string that ends in a newline.\n     ///\n     /// **Why is this bad?** You should use `println!()` instead, which appends the\n     /// newline.\n@@ -125,7 +128,12 @@ declare_clippy_lint! {\n     /// ```rust\n     /// # use std::fmt::Write;\n     /// # let mut buf = String::new();\n+    ///\n+    /// // Bad\n     /// writeln!(buf, \"\");\n+    ///\n+    /// // Good\n+    /// writeln!(buf);\n     /// ```\n     pub WRITELN_EMPTY_STRING,\n     style,\n@@ -147,7 +155,12 @@ declare_clippy_lint! {\n     /// # use std::fmt::Write;\n     /// # let mut buf = String::new();\n     /// # let name = \"World\";\n+    ///\n+    /// // Bad\n     /// write!(buf, \"Hello {}!\\n\", name);\n+    ///\n+    /// // Good\n+    /// writeln!(buf, \"Hello {}!\", name);\n     /// ```\n     pub WRITE_WITH_NEWLINE,\n     style,\n@@ -168,7 +181,12 @@ declare_clippy_lint! {\n     /// ```rust\n     /// # use std::fmt::Write;\n     /// # let mut buf = String::new();\n+    ///\n+    /// // Bad\n     /// writeln!(buf, \"{}\", \"foo\");\n+    ///\n+    /// // Good\n+    /// writeln!(buf, \"foo\");\n     /// ```\n     pub WRITE_LITERAL,\n     style,"}, {"sha": "0820385e01bb5f68d940a2da8e7f433a137dd55a", "filename": "clippy_lints/src/zero_div_zero.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25/clippy_lints%2Fsrc%2Fzero_div_zero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25/clippy_lints%2Fsrc%2Fzero_div_zero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fzero_div_zero.rs?ref=5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25", "patch": "@@ -14,7 +14,11 @@ declare_clippy_lint! {\n     ///\n     /// **Example:**\n     /// ```rust\n-    /// 0.0f32 / 0.0;\n+    /// // Bad\n+    /// let nan = 0.0f32 / 0.0;\n+    ///\n+    /// // Good\n+    /// let nan = f32::NAN;\n     /// ```\n     pub ZERO_DIVIDED_BY_ZERO,\n     complexity,"}, {"sha": "d5d07ccb2eb0d3a5604caf375d885c8e0e492375", "filename": "src/lintlist/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25/src%2Flintlist%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25/src%2Flintlist%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flintlist%2Fmod.rs?ref=5cb9ef390aea2a1adaae4b9836bb7a3a75c47f25", "patch": "@@ -1742,7 +1742,7 @@ pub static ref ALL_LINTS: Vec<Lint> = vec![\n     Lint {\n         name: \"pub_enum_variant_names\",\n         group: \"pedantic\",\n-        desc: \"enums where all variants share a prefix/postfix\",\n+        desc: \"public enums where all variants share a prefix/postfix\",\n         deprecation: None,\n         module: \"enum_variants\",\n     },"}]}