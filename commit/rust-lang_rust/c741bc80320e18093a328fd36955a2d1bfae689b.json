{"sha": "c741bc80320e18093a328fd36955a2d1bfae689b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM3NDFiYzgwMzIwZTE4MDkzYTMyOGZkMzY5NTVhMmQxYmZhZTY4OWI=", "commit": {"author": {"name": "alexey zabelin", "email": "zabelin.alex@gmail.com", "date": "2017-04-28T22:01:06Z"}, "committer": {"name": "alexey zabelin", "email": "zabelin.alex@gmail.com", "date": "2017-04-28T22:01:06Z"}, "message": "Fix error message label", "tree": {"sha": "6dac329f0ec0ddfb0e96080b8311465dd172bc8e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6dac329f0ec0ddfb0e96080b8311465dd172bc8e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c741bc80320e18093a328fd36955a2d1bfae689b", "comment_count": 0, "verification": {"verified": false, "reason": "bad_email", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEEyGBf8fbcGdY6ClTCOhaZhUeDJOkFAlkDu78ACgkQOhaZhUeD\nJOkY1gf9GnaY7A2WiB0+wgwu9SwiqyTbixrcn3N6hSSwVFw16/Ca5qyaNW0uNa6u\nyhCxLVBxVh7BvUZup3IebPe/K3za28EPM1GnQGNEPTgxmqTDm942VR3pt7xW6WgB\n10FqjE1AmIOWHNVo/Pwh0Qd/5vQj6jq6TqlyGPPGLOJHuPM427LhlntCSx6qsnur\nb7rC0ijUk5lLIjwz9Dl0oG0CaATSZa9U0k986DRKRjQv7Q5afcME+8L8OLy/1NBR\nz3ausIUhusEWLYkgSX2/32540pu0A8cs7Vcw3IEqY1XWcbfN8j3TJxEqb++3/Opp\najVTxrMhBNC9nNYP2M1a9fZEYiz4rA==\n=0ssu\n-----END PGP SIGNATURE-----", "payload": "tree 6dac329f0ec0ddfb0e96080b8311465dd172bc8e\nparent 5312f0c3296bcc20db41010203188813247690f4\nauthor alexey zabelin <zabelin.alex@gmail.com> 1493416866 -0400\ncommitter alexey zabelin <zabelin.alex@gmail.com> 1493416866 -0400\n\nFix error message label\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c741bc80320e18093a328fd36955a2d1bfae689b", "html_url": "https://github.com/rust-lang/rust/commit/c741bc80320e18093a328fd36955a2d1bfae689b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c741bc80320e18093a328fd36955a2d1bfae689b/comments", "author": {"login": "alexeyzab", "id": 5606260, "node_id": "MDQ6VXNlcjU2MDYyNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/5606260?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexeyzab", "html_url": "https://github.com/alexeyzab", "followers_url": "https://api.github.com/users/alexeyzab/followers", "following_url": "https://api.github.com/users/alexeyzab/following{/other_user}", "gists_url": "https://api.github.com/users/alexeyzab/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexeyzab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexeyzab/subscriptions", "organizations_url": "https://api.github.com/users/alexeyzab/orgs", "repos_url": "https://api.github.com/users/alexeyzab/repos", "events_url": "https://api.github.com/users/alexeyzab/events{/privacy}", "received_events_url": "https://api.github.com/users/alexeyzab/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexeyzab", "id": 5606260, "node_id": "MDQ6VXNlcjU2MDYyNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/5606260?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexeyzab", "html_url": "https://github.com/alexeyzab", "followers_url": "https://api.github.com/users/alexeyzab/followers", "following_url": "https://api.github.com/users/alexeyzab/following{/other_user}", "gists_url": "https://api.github.com/users/alexeyzab/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexeyzab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexeyzab/subscriptions", "organizations_url": "https://api.github.com/users/alexeyzab/orgs", "repos_url": "https://api.github.com/users/alexeyzab/repos", "events_url": "https://api.github.com/users/alexeyzab/events{/privacy}", "received_events_url": "https://api.github.com/users/alexeyzab/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5312f0c3296bcc20db41010203188813247690f4", "url": "https://api.github.com/repos/rust-lang/rust/commits/5312f0c3296bcc20db41010203188813247690f4", "html_url": "https://github.com/rust-lang/rust/commit/5312f0c3296bcc20db41010203188813247690f4"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "57415021976b349cc10f34ae7f864cfa6ca152f2", "filename": "src/librustc_typeck/check/coercion.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c741bc80320e18093a328fd36955a2d1bfae689b/src%2Flibrustc_typeck%2Fcheck%2Fcoercion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c741bc80320e18093a328fd36955a2d1bfae689b/src%2Flibrustc_typeck%2Fcheck%2Fcoercion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fcoercion.rs?ref=c741bc80320e18093a328fd36955a2d1bfae689b", "patch": "@@ -1104,7 +1104,7 @@ impl<'gcx, 'tcx, 'exprs, E> CoerceMany<'gcx, 'tcx, 'exprs, E>\n             // Another example is `break` with no argument expression.\n             assert!(expression_ty.is_nil());\n             assert!(expression_ty.is_nil(), \"if let hack without unit type\");\n-            fcx.eq_types(true, cause, expression_ty, self.merged_ty())\n+            fcx.eq_types(label_expression_as_expected, cause, expression_ty, self.merged_ty())\n                .map(|infer_ok| {\n                    fcx.register_infer_ok_obligations(infer_ok);\n                    expression_ty\n@@ -1128,6 +1128,10 @@ impl<'gcx, 'tcx, 'exprs, E> CoerceMany<'gcx, 'tcx, 'exprs, E>\n             }\n             Err(err) => {\n                 let (expected, found) = if label_expression_as_expected {\n+                    // In the case where this is a \"forced unit\", like\n+                    // `break`, we want to call the `()` \"expected\"\n+                    // since it is implied by the syntax.\n+                    // (Note: not all force-units work this way.)\"\n                     (expression_ty, self.final_ty.unwrap_or(self.expected_ty))\n                 } else {\n                     // Otherwise, the \"expected\" type for error"}, {"sha": "8f08ff34637707851e48ec63c00a0745e980aa6a", "filename": "src/test/ui/coercion-missing-tail-expected-type.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c741bc80320e18093a328fd36955a2d1bfae689b/src%2Ftest%2Fui%2Fcoercion-missing-tail-expected-type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c741bc80320e18093a328fd36955a2d1bfae689b/src%2Ftest%2Fui%2Fcoercion-missing-tail-expected-type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoercion-missing-tail-expected-type.stderr?ref=c741bc80320e18093a328fd36955a2d1bfae689b", "patch": "@@ -5,7 +5,7 @@ error[E0308]: mismatched types\n    |  ____________________________^\n 14 | |     x + 1;\n 15 | | }\n-   | |_^ expected (), found i32\n+   | |_^ expected i32, found ()\n    |\n    = note: expected type `i32`\n               found type `()`"}]}