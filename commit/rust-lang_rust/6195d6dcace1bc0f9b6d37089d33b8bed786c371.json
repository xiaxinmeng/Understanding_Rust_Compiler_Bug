{"sha": "6195d6dcace1bc0f9b6d37089d33b8bed786c371", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYxOTVkNmRjYWNlMWJjMGY5YjZkMzcwODlkMzNiOGJlZDc4NmMzNzE=", "commit": {"author": {"name": "Aman Arora", "email": "me@aman-arora.com", "date": "2021-07-09T07:55:03Z"}, "committer": {"name": "Aman Arora", "email": "me@aman-arora.com", "date": "2021-07-09T07:55:03Z"}, "message": "Move optimization to the central processing function", "tree": {"sha": "052874c7c5b5718733195f30f436377bcb7bed3a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/052874c7c5b5718733195f30f436377bcb7bed3a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6195d6dcace1bc0f9b6d37089d33b8bed786c371", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6195d6dcace1bc0f9b6d37089d33b8bed786c371", "html_url": "https://github.com/rust-lang/rust/commit/6195d6dcace1bc0f9b6d37089d33b8bed786c371", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6195d6dcace1bc0f9b6d37089d33b8bed786c371/comments", "author": {"login": "arora-aman", "id": 4193035, "node_id": "MDQ6VXNlcjQxOTMwMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4193035?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arora-aman", "html_url": "https://github.com/arora-aman", "followers_url": "https://api.github.com/users/arora-aman/followers", "following_url": "https://api.github.com/users/arora-aman/following{/other_user}", "gists_url": "https://api.github.com/users/arora-aman/gists{/gist_id}", "starred_url": "https://api.github.com/users/arora-aman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arora-aman/subscriptions", "organizations_url": "https://api.github.com/users/arora-aman/orgs", "repos_url": "https://api.github.com/users/arora-aman/repos", "events_url": "https://api.github.com/users/arora-aman/events{/privacy}", "received_events_url": "https://api.github.com/users/arora-aman/received_events", "type": "User", "site_admin": false}, "committer": {"login": "arora-aman", "id": 4193035, "node_id": "MDQ6VXNlcjQxOTMwMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4193035?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arora-aman", "html_url": "https://github.com/arora-aman", "followers_url": "https://api.github.com/users/arora-aman/followers", "following_url": "https://api.github.com/users/arora-aman/following{/other_user}", "gists_url": "https://api.github.com/users/arora-aman/gists{/gist_id}", "starred_url": "https://api.github.com/users/arora-aman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arora-aman/subscriptions", "organizations_url": "https://api.github.com/users/arora-aman/orgs", "repos_url": "https://api.github.com/users/arora-aman/repos", "events_url": "https://api.github.com/users/arora-aman/events{/privacy}", "received_events_url": "https://api.github.com/users/arora-aman/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c55db232d87320d9fc3f466baeee36eb64e49e68", "url": "https://api.github.com/repos/rust-lang/rust/commits/c55db232d87320d9fc3f466baeee36eb64e49e68", "html_url": "https://github.com/rust-lang/rust/commit/c55db232d87320d9fc3f466baeee36eb64e49e68"}], "stats": {"total": 21, "additions": 8, "deletions": 13}, "files": [{"sha": "6a086370713b35c6cae2fbf25da2adb3cf225c32", "filename": "compiler/rustc_typeck/src/check/upvar.rs", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/6195d6dcace1bc0f9b6d37089d33b8bed786c371/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fupvar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6195d6dcace1bc0f9b6d37089d33b8bed786c371/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fupvar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fupvar.rs?ref=6195d6dcace1bc0f9b6d37089d33b8bed786c371", "patch": "@@ -335,6 +335,8 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             // Apply rules for safety before inferring closure kind\n             let place = restrict_capture_precision(place);\n \n+            let place = truncate_capture_for_optimization(&place);\n+\n             let usage_span = if let Some(usage_expr) = capture_info.path_expr_id {\n                 self.tcx.hir().span(usage_expr)\n             } else {\n@@ -1638,11 +1640,6 @@ impl<'a, 'tcx> euv::Delegate<'tcx> for InferBorrowKind<'a, 'tcx> {\n             place_with_id, diag_expr_id, mode\n         );\n \n-        let place_with_id = PlaceWithHirId {\n-            place: truncate_capture_for_optimization(&place_with_id.place),\n-            ..*place_with_id\n-        };\n-\n         if !self.capture_information.contains_key(&place_with_id.place) {\n             self.init_capture_info_for_place(&place_with_id, diag_expr_id);\n         }\n@@ -1670,8 +1667,6 @@ impl<'a, 'tcx> euv::Delegate<'tcx> for InferBorrowKind<'a, 'tcx> {\n             &place_with_id.place,\n         );\n \n-        let place = truncate_capture_for_optimization(&place);\n-\n         let place_with_id = PlaceWithHirId { place, ..*place_with_id };\n \n         if !self.capture_information.contains_key(&place_with_id.place) {"}, {"sha": "f196a9774cb8a7b68acddbe471a303544ddf98c1", "filename": "src/test/ui/closures/2229_closure_analysis/move_closure.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6195d6dcace1bc0f9b6d37089d33b8bed786c371/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmove_closure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6195d6dcace1bc0f9b6d37089d33b8bed786c371/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmove_closure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmove_closure.rs?ref=6195d6dcace1bc0f9b6d37089d33b8bed786c371", "patch": "@@ -78,7 +78,7 @@ fn struct_contains_ref_to_another_struct_2() {\n     //~^ ERROR: First Pass analysis includes:\n     //~| ERROR: Min Capture analysis includes:\n         let _t = t.0.0;\n-        //~^ NOTE: Capturing t[(0, 0),Deref] -> ImmBorrow\n+        //~^ NOTE: Capturing t[(0, 0),Deref,(0, 0)] -> ImmBorrow\n         //~| NOTE: Min Capture t[(0, 0),Deref] -> ImmBorrow\n     };\n \n@@ -100,7 +100,7 @@ fn struct_contains_ref_to_another_struct_3() {\n     //~^ ERROR: First Pass analysis includes:\n     //~| ERROR: Min Capture analysis includes:\n         let _t = t.0.0;\n-        //~^ NOTE: Capturing t[(0, 0),Deref] -> ByValue\n+        //~^ NOTE: Capturing t[(0, 0),Deref,(0, 0)] -> ByValue\n         //~| NOTE: Min Capture t[(0, 0)] -> ByValue\n     };\n "}, {"sha": "13c55534797f9d2492b8ee70e7f9103114fb0b12", "filename": "src/test/ui/closures/2229_closure_analysis/move_closure.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6195d6dcace1bc0f9b6d37089d33b8bed786c371/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmove_closure.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6195d6dcace1bc0f9b6d37089d33b8bed786c371/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmove_closure.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmove_closure.stderr?ref=6195d6dcace1bc0f9b6d37089d33b8bed786c371", "patch": "@@ -190,7 +190,7 @@ LL | |\n LL | |     };\n    | |_____^\n    |\n-note: Capturing t[(0, 0),Deref] -> ImmBorrow\n+note: Capturing t[(0, 0),Deref,(0, 0)] -> ImmBorrow\n   --> $DIR/move_closure.rs:80:18\n    |\n LL |         let _t = t.0.0;\n@@ -226,7 +226,7 @@ LL | |\n LL | |     };\n    | |_____^\n    |\n-note: Capturing t[(0, 0),Deref] -> ByValue\n+note: Capturing t[(0, 0),Deref,(0, 0)] -> ByValue\n   --> $DIR/move_closure.rs:102:18\n    |\n LL |         let _t = t.0.0;"}, {"sha": "e7edc0bbce39d12d7b68c2b122addd23112a1f57", "filename": "src/test/ui/closures/2229_closure_analysis/optimization/edge_case.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6195d6dcace1bc0f9b6d37089d33b8bed786c371/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Foptimization%2Fedge_case.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6195d6dcace1bc0f9b6d37089d33b8bed786c371/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Foptimization%2Fedge_case.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Foptimization%2Fedge_case.rs?ref=6195d6dcace1bc0f9b6d37089d33b8bed786c371", "patch": "@@ -22,7 +22,7 @@ fn foo<'a, 'b>(m: &'a MyStruct<'b>) -> impl FnMut() + 'static {\n     //~| NOTE: see issue #15701 <https://github.com/rust-lang/rust/issues/15701>\n     //~| ERROR: First Pass analysis includes:\n     //~| ERROR: Min Capture analysis includes:\n-    //~| NOTE: Capturing m[Deref,(0, 0),Deref] -> ImmBorrow\n+    //~| NOTE: Capturing m[Deref,(0, 0),Deref,(0, 0)] -> ImmBorrow\n     //~| NOTE: Min Capture m[Deref,(0, 0),Deref] -> ImmBorrow\n     c\n }"}, {"sha": "87d5d5bee07d84c4b27741c490515112813c442c", "filename": "src/test/ui/closures/2229_closure_analysis/optimization/edge_case.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6195d6dcace1bc0f9b6d37089d33b8bed786c371/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Foptimization%2Fedge_case.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6195d6dcace1bc0f9b6d37089d33b8bed786c371/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Foptimization%2Fedge_case.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Foptimization%2Fedge_case.stderr?ref=6195d6dcace1bc0f9b6d37089d33b8bed786c371", "patch": "@@ -13,7 +13,7 @@ error: First Pass analysis includes:\n LL |     let c = #[rustc_capture_analysis] || drop(&m.a.0);\n    |                                       ^^^^^^^^^^^^^^^\n    |\n-note: Capturing m[Deref,(0, 0),Deref] -> ImmBorrow\n+note: Capturing m[Deref,(0, 0),Deref,(0, 0)] -> ImmBorrow\n   --> $DIR/edge_case.rs:20:48\n    |\n LL |     let c = #[rustc_capture_analysis] || drop(&m.a.0);"}]}