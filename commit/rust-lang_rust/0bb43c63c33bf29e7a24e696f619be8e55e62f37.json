{"sha": "0bb43c63c33bf29e7a24e696f619be8e55e62f37", "node_id": "C_kwDOAAsO6NoAKDBiYjQzYzYzYzMzYmYyOWU3YTI0ZTY5NmY2MTliZThlNTVlNjJmMzc", "commit": {"author": {"name": "yukang", "email": "moorekang@gmail.com", "date": "2023-05-03T03:46:34Z"}, "committer": {"name": "yukang", "email": "moorekang@gmail.com", "date": "2023-05-08T02:56:20Z"}, "message": "Suggest let for possible binding with ty", "tree": {"sha": "35e583a3194d2e531e3d49a8b9daf112ae813926", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/35e583a3194d2e531e3d49a8b9daf112ae813926"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0bb43c63c33bf29e7a24e696f619be8e55e62f37", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0bb43c63c33bf29e7a24e696f619be8e55e62f37", "html_url": "https://github.com/rust-lang/rust/commit/0bb43c63c33bf29e7a24e696f619be8e55e62f37", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0bb43c63c33bf29e7a24e696f619be8e55e62f37/comments", "author": {"login": "chenyukang", "id": 230646, "node_id": "MDQ6VXNlcjIzMDY0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/230646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenyukang", "html_url": "https://github.com/chenyukang", "followers_url": "https://api.github.com/users/chenyukang/followers", "following_url": "https://api.github.com/users/chenyukang/following{/other_user}", "gists_url": "https://api.github.com/users/chenyukang/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenyukang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenyukang/subscriptions", "organizations_url": "https://api.github.com/users/chenyukang/orgs", "repos_url": "https://api.github.com/users/chenyukang/repos", "events_url": "https://api.github.com/users/chenyukang/events{/privacy}", "received_events_url": "https://api.github.com/users/chenyukang/received_events", "type": "User", "site_admin": false}, "committer": {"login": "chenyukang", "id": 230646, "node_id": "MDQ6VXNlcjIzMDY0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/230646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenyukang", "html_url": "https://github.com/chenyukang", "followers_url": "https://api.github.com/users/chenyukang/followers", "following_url": "https://api.github.com/users/chenyukang/following{/other_user}", "gists_url": "https://api.github.com/users/chenyukang/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenyukang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenyukang/subscriptions", "organizations_url": "https://api.github.com/users/chenyukang/orgs", "repos_url": "https://api.github.com/users/chenyukang/repos", "events_url": "https://api.github.com/users/chenyukang/events{/privacy}", "received_events_url": "https://api.github.com/users/chenyukang/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ad6b20bf5225c65aab30169c9a173719f5bdfc04", "url": "https://api.github.com/repos/rust-lang/rust/commits/ad6b20bf5225c65aab30169c9a173719f5bdfc04", "html_url": "https://github.com/rust-lang/rust/commit/ad6b20bf5225c65aab30169c9a173719f5bdfc04"}], "stats": {"total": 73, "additions": 61, "deletions": 12}, "files": [{"sha": "a536eb3b04e69e648ed9282d05b96c8e4db6c5b3", "filename": "compiler/rustc_macros/src/diagnostics/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0bb43c63c33bf29e7a24e696f619be8e55e62f37/compiler%2Frustc_macros%2Fsrc%2Fdiagnostics%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bb43c63c33bf29e7a24e696f619be8e55e62f37/compiler%2Frustc_macros%2Fsrc%2Fdiagnostics%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_macros%2Fsrc%2Fdiagnostics%2Fmod.rs?ref=0bb43c63c33bf29e7a24e696f619be8e55e62f37", "patch": "@@ -140,7 +140,7 @@ pub fn lint_diagnostic_derive(s: Structure<'_>) -> TokenStream {\n /// ```fluent\n /// parser_expected_identifier = expected identifier\n ///\n-/// parser_expected_identifier-found = expected identifier, found {$found}\n+/// parser_expected_identifier_found = expected identifier, found {$found}\n ///\n /// parser_raw_identifier = escape `{$ident}` to use it as an identifier\n /// ```"}, {"sha": "e8f47346fa7cbe5c938d252b2cde1a12c5561c84", "filename": "compiler/rustc_parse/src/parser/diagnostics.rs", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/0bb43c63c33bf29e7a24e696f619be8e55e62f37/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bb43c63c33bf29e7a24e696f619be8e55e62f37/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs?ref=0bb43c63c33bf29e7a24e696f619be8e55e62f37", "patch": "@@ -399,6 +399,23 @@ impl<'a> Parser<'a> {\n                 }\n             }\n         }\n+        // we suggest add the missing `let` before the identifier\n+        // `a: Ty = 1` -> `let a: Ty = 1`\n+        if self.token == token::Colon {\n+            let prev_span = self.prev_token.span.shrink_to_lo();\n+            let snapshot = self.create_snapshot_for_diagnostic();\n+            self.bump();\n+            let res = self.parse_ty();\n+            if res.is_ok() && self.token == token::Eq {\n+                err.span_suggestion_verbose(\n+                    prev_span,\n+                    \"you might have meant to introduce a new binding\",\n+                    \"let \".to_string(),\n+                    Applicability::MaybeIncorrect,\n+                );\n+            }\n+            self.restore_snapshot(snapshot);\n+        }\n \n         if let Some(recovered_ident) = recovered_ident && recover {\n             err.emit();"}, {"sha": "ab04219b1772b9110856aea96e30b8544a00a3f7", "filename": "compiler/rustc_parse/src/parser/stmt.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/0bb43c63c33bf29e7a24e696f619be8e55e62f37/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fstmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bb43c63c33bf29e7a24e696f619be8e55e62f37/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fstmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fstmt.rs?ref=0bb43c63c33bf29e7a24e696f619be8e55e62f37", "patch": "@@ -555,7 +555,6 @@ impl<'a> Parser<'a> {\n                     if self.token == token::Colon {\n                         // if next token is following a colon, it's likely a path\n                         // and we can suggest a path separator\n-                        let ident_span = self.prev_token.span;\n                         self.bump();\n                         if self.token.span.lo() == self.prev_token.span.hi() {\n                             err.span_suggestion_verbose(\n@@ -565,14 +564,6 @@ impl<'a> Parser<'a> {\n                                 Applicability::MaybeIncorrect,\n                             );\n                         }\n-                        if self.look_ahead(1, |token| token == &token::Eq) {\n-                            err.span_suggestion_verbose(\n-                                ident_span.shrink_to_lo(),\n-                                \"you might have meant to introduce a new binding\",\n-                                \"let \",\n-                                Applicability::MaybeIncorrect,\n-                            );\n-                        }\n                         if self.sess.unstable_features.is_nightly_build() {\n                             // FIXME(Nilstrieb): Remove this again after a few months.\n                             err.note(\"type ascription syntax has been removed, see issue #101728 <https://github.com/rust-lang/rust/issues/101728>\");"}, {"sha": "e3d03b6f22ad6a01ce3bfb7feaebfb316bc8d338", "filename": "tests/ui/suggestions/type-ascription-instead-of-let.fixed", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/0bb43c63c33bf29e7a24e696f619be8e55e62f37/tests%2Fui%2Fsuggestions%2Ftype-ascription-instead-of-let.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/0bb43c63c33bf29e7a24e696f619be8e55e62f37/tests%2Fui%2Fsuggestions%2Ftype-ascription-instead-of-let.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsuggestions%2Ftype-ascription-instead-of-let.fixed?ref=0bb43c63c33bf29e7a24e696f619be8e55e62f37", "patch": "@@ -0,0 +1,11 @@\n+// run-rustfix\n+\n+fn fun(x: i32) -> i32 { x }\n+\n+fn main() {\n+    let _closure_annotated = |value: i32| -> i32 {\n+        let temp: i32 = fun(5i32);\n+        //~^ ERROR expected identifier, found `:`\n+        temp + value + 1\n+    };\n+}"}, {"sha": "6e1c86f96711923fb9d3447d9459e9af1cb5b1d8", "filename": "tests/ui/suggestions/type-ascription-instead-of-let.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0bb43c63c33bf29e7a24e696f619be8e55e62f37/tests%2Fui%2Fsuggestions%2Ftype-ascription-instead-of-let.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bb43c63c33bf29e7a24e696f619be8e55e62f37/tests%2Fui%2Fsuggestions%2Ftype-ascription-instead-of-let.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsuggestions%2Ftype-ascription-instead-of-let.rs?ref=0bb43c63c33bf29e7a24e696f619be8e55e62f37", "patch": "@@ -1,7 +1,9 @@\n+// run-rustfix\n+\n fn fun(x: i32) -> i32 { x }\n \n fn main() {\n-    let closure_annotated = |value: i32| -> i32 {\n+    let _closure_annotated = |value: i32| -> i32 {\n         temp: i32 = fun(5i32);\n         //~^ ERROR expected identifier, found `:`\n         temp + value + 1"}, {"sha": "065b1f4d3538e9e44398ad4ae358f893adffefd7", "filename": "tests/ui/suggestions/type-ascription-instead-of-let.stderr", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/0bb43c63c33bf29e7a24e696f619be8e55e62f37/tests%2Fui%2Fsuggestions%2Ftype-ascription-instead-of-let.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0bb43c63c33bf29e7a24e696f619be8e55e62f37/tests%2Fui%2Fsuggestions%2Ftype-ascription-instead-of-let.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsuggestions%2Ftype-ascription-instead-of-let.stderr?ref=0bb43c63c33bf29e7a24e696f619be8e55e62f37", "patch": "@@ -1,8 +1,13 @@\n error: expected identifier, found `:`\n-  --> $DIR/type-ascription-instead-of-let.rs:5:13\n+  --> $DIR/type-ascription-instead-of-let.rs:7:13\n    |\n LL |         temp: i32 = fun(5i32);\n    |             ^ expected identifier\n+   |\n+help: you might have meant to introduce a new binding\n+   |\n+LL |         let temp: i32 = fun(5i32);\n+   |         +++\n \n error: aborting due to previous error\n "}, {"sha": "d64013c8c838557d5e8d609b45fdb644a252777b", "filename": "tests/ui/type/missing-let-in-binding-2.fixed", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0bb43c63c33bf29e7a24e696f619be8e55e62f37/tests%2Fui%2Ftype%2Fmissing-let-in-binding-2.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/0bb43c63c33bf29e7a24e696f619be8e55e62f37/tests%2Fui%2Ftype%2Fmissing-let-in-binding-2.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftype%2Fmissing-let-in-binding-2.fixed?ref=0bb43c63c33bf29e7a24e696f619be8e55e62f37", "patch": "@@ -0,0 +1,5 @@\n+// run-rustfix\n+\n+fn main() {\n+    let _v: Vec<i32> = vec![1, 2, 3]; //~ ERROR expected identifier, found `:`\n+}"}, {"sha": "f95f7bef2158568426c3d7fbb132330ccda7598f", "filename": "tests/ui/type/missing-let-in-binding-2.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0bb43c63c33bf29e7a24e696f619be8e55e62f37/tests%2Fui%2Ftype%2Fmissing-let-in-binding-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bb43c63c33bf29e7a24e696f619be8e55e62f37/tests%2Fui%2Ftype%2Fmissing-let-in-binding-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftype%2Fmissing-let-in-binding-2.rs?ref=0bb43c63c33bf29e7a24e696f619be8e55e62f37", "patch": "@@ -0,0 +1,5 @@\n+// run-rustfix\n+\n+fn main() {\n+    _v: Vec<i32> = vec![1, 2, 3]; //~ ERROR expected identifier, found `:`\n+}"}, {"sha": "2e10125943e7577734eda243ce4dae85c61c0408", "filename": "tests/ui/type/missing-let-in-binding-2.stderr", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/0bb43c63c33bf29e7a24e696f619be8e55e62f37/tests%2Fui%2Ftype%2Fmissing-let-in-binding-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0bb43c63c33bf29e7a24e696f619be8e55e62f37/tests%2Fui%2Ftype%2Fmissing-let-in-binding-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftype%2Fmissing-let-in-binding-2.stderr?ref=0bb43c63c33bf29e7a24e696f619be8e55e62f37", "patch": "@@ -0,0 +1,13 @@\n+error: expected identifier, found `:`\n+  --> $DIR/missing-let-in-binding-2.rs:4:7\n+   |\n+LL |     _v: Vec<i32> = vec![1, 2, 3];\n+   |       ^ expected identifier\n+   |\n+help: you might have meant to introduce a new binding\n+   |\n+LL |     let _v: Vec<i32> = vec![1, 2, 3];\n+   |     +++\n+\n+error: aborting due to previous error\n+"}]}