{"sha": "d708b444e4dc324369ba7ee2235451399f828321", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ3MDhiNDQ0ZTRkYzMyNDM2OWJhN2VlMjIzNTQ1MTM5OWY4MjgzMjE=", "commit": {"author": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2020-10-25T01:35:46Z"}, "committer": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2020-11-23T19:28:25Z"}, "message": "Qualify `panic!` as `core::panic!` in non-built-in `core` macros\n\nOtherwise code like this\n\n    #![no_implicit_prelude]\n\n    fn main() {\n        ::std::todo!();\n        ::std::unimplemented!();\n    }\n\nwill fail to compile, which is unfortunate and presumably unintended.\n\nThis changes many invocations of `panic!` in a `macro_rules!` definition\nto invocations of `$crate::panic!`, which makes the invocations hygienic.\n\nNote that this does not make the built-in macro `assert!` hygienic.", "tree": {"sha": "71604c0af904a251695958d1be77ff7014f42c56", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/71604c0af904a251695958d1be77ff7014f42c56"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d708b444e4dc324369ba7ee2235451399f828321", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d708b444e4dc324369ba7ee2235451399f828321", "html_url": "https://github.com/rust-lang/rust/commit/d708b444e4dc324369ba7ee2235451399f828321", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d708b444e4dc324369ba7ee2235451399f828321/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "113c1476c923492ea1427b061458a6ab8faf8df8", "url": "https://api.github.com/repos/rust-lang/rust/commits/113c1476c923492ea1427b061458a6ab8faf8df8", "html_url": "https://github.com/rust-lang/rust/commit/113c1476c923492ea1427b061458a6ab8faf8df8"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "a01c6ef99db921386fb8ea8bdaac007cb804c08a", "filename": "tests/ui/logic_bug.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d708b444e4dc324369ba7ee2235451399f828321/tests%2Fui%2Flogic_bug.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d708b444e4dc324369ba7ee2235451399f828321/tests%2Fui%2Flogic_bug.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flogic_bug.rs?ref=d708b444e4dc324369ba7ee2235451399f828321", "patch": "@@ -1,4 +1,4 @@\n-#![allow(unused, clippy::many_single_char_names)]\n+#![allow(unused, clippy::many_single_char_names, clippy::diverging_sub_expression)]\n #![warn(clippy::logic_bug)]\n \n fn main() {"}, {"sha": "971be26278f3c4276e2d8b0b1490cd62f4902d96", "filename": "tests/ui/nonminimal_bool.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d708b444e4dc324369ba7ee2235451399f828321/tests%2Fui%2Fnonminimal_bool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d708b444e4dc324369ba7ee2235451399f828321/tests%2Fui%2Fnonminimal_bool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fnonminimal_bool.rs?ref=d708b444e4dc324369ba7ee2235451399f828321", "patch": "@@ -1,4 +1,4 @@\n-#![allow(unused, clippy::many_single_char_names)]\n+#![allow(unused, clippy::many_single_char_names, clippy::diverging_sub_expression)]\n #![warn(clippy::nonminimal_bool)]\n \n fn main() {"}, {"sha": "907587402908a7bf09ec65e1bead808c9426239b", "filename": "tests/ui/nonminimal_bool_methods.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d708b444e4dc324369ba7ee2235451399f828321/tests%2Fui%2Fnonminimal_bool_methods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d708b444e4dc324369ba7ee2235451399f828321/tests%2Fui%2Fnonminimal_bool_methods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fnonminimal_bool_methods.rs?ref=d708b444e4dc324369ba7ee2235451399f828321", "patch": "@@ -1,4 +1,4 @@\n-#![allow(unused, clippy::many_single_char_names)]\n+#![allow(unused, clippy::many_single_char_names, clippy::diverging_sub_expression)]\n #![warn(clippy::nonminimal_bool)]\n \n fn methods_with_negation() {"}, {"sha": "b1e5742b78531870fafac354b30323eafbcf72eb", "filename": "tests/ui/wildcard_enum_match_arm.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d708b444e4dc324369ba7ee2235451399f828321/tests%2Fui%2Fwildcard_enum_match_arm.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/d708b444e4dc324369ba7ee2235451399f828321/tests%2Fui%2Fwildcard_enum_match_arm.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwildcard_enum_match_arm.fixed?ref=d708b444e4dc324369ba7ee2235451399f828321", "patch": "@@ -7,7 +7,7 @@\n     dead_code,\n     clippy::single_match,\n     clippy::wildcard_in_or_patterns,\n-    clippy::unnested_or_patterns\n+    clippy::unnested_or_patterns, clippy::diverging_sub_expression\n )]\n \n use std::io::ErrorKind;"}, {"sha": "cd3ec3ea8d2629a3e22a532dc10279a234c080d4", "filename": "tests/ui/wildcard_enum_match_arm.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d708b444e4dc324369ba7ee2235451399f828321/tests%2Fui%2Fwildcard_enum_match_arm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d708b444e4dc324369ba7ee2235451399f828321/tests%2Fui%2Fwildcard_enum_match_arm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwildcard_enum_match_arm.rs?ref=d708b444e4dc324369ba7ee2235451399f828321", "patch": "@@ -7,7 +7,7 @@\n     dead_code,\n     clippy::single_match,\n     clippy::wildcard_in_or_patterns,\n-    clippy::unnested_or_patterns\n+    clippy::unnested_or_patterns, clippy::diverging_sub_expression\n )]\n \n use std::io::ErrorKind;"}]}