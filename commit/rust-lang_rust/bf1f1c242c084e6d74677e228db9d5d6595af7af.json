{"sha": "bf1f1c242c084e6d74677e228db9d5d6595af7af", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJmMWYxYzI0MmMwODRlNmQ3NDY3N2UyMjhkYjlkNWQ2NTk1YWY3YWY=", "commit": {"author": {"name": "Lzu Tao", "email": "taolzu@gmail.com", "date": "2019-12-09T10:39:57Z"}, "committer": {"name": "Lzu Tao", "email": "taolzu@gmail.com", "date": "2019-12-09T10:39:57Z"}, "message": "inline some common methods on OsStr", "tree": {"sha": "7bc9a03b77c56ad753b974542d0f496233d327a9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7bc9a03b77c56ad753b974542d0f496233d327a9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bf1f1c242c084e6d74677e228db9d5d6595af7af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bf1f1c242c084e6d74677e228db9d5d6595af7af", "html_url": "https://github.com/rust-lang/rust/commit/bf1f1c242c084e6d74677e228db9d5d6595af7af", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bf1f1c242c084e6d74677e228db9d5d6595af7af/comments", "author": {"login": "tesuji", "id": 15225902, "node_id": "MDQ6VXNlcjE1MjI1OTAy", "avatar_url": "https://avatars.githubusercontent.com/u/15225902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tesuji", "html_url": "https://github.com/tesuji", "followers_url": "https://api.github.com/users/tesuji/followers", "following_url": "https://api.github.com/users/tesuji/following{/other_user}", "gists_url": "https://api.github.com/users/tesuji/gists{/gist_id}", "starred_url": "https://api.github.com/users/tesuji/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tesuji/subscriptions", "organizations_url": "https://api.github.com/users/tesuji/orgs", "repos_url": "https://api.github.com/users/tesuji/repos", "events_url": "https://api.github.com/users/tesuji/events{/privacy}", "received_events_url": "https://api.github.com/users/tesuji/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tesuji", "id": 15225902, "node_id": "MDQ6VXNlcjE1MjI1OTAy", "avatar_url": "https://avatars.githubusercontent.com/u/15225902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tesuji", "html_url": "https://github.com/tesuji", "followers_url": "https://api.github.com/users/tesuji/followers", "following_url": "https://api.github.com/users/tesuji/following{/other_user}", "gists_url": "https://api.github.com/users/tesuji/gists{/gist_id}", "starred_url": "https://api.github.com/users/tesuji/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tesuji/subscriptions", "organizations_url": "https://api.github.com/users/tesuji/orgs", "repos_url": "https://api.github.com/users/tesuji/repos", "events_url": "https://api.github.com/users/tesuji/events{/privacy}", "received_events_url": "https://api.github.com/users/tesuji/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "14195e1f1dc7bcc318226fe2218be09f542a72ef", "url": "https://api.github.com/repos/rust-lang/rust/commits/14195e1f1dc7bcc318226fe2218be09f542a72ef", "html_url": "https://github.com/rust-lang/rust/commit/14195e1f1dc7bcc318226fe2218be09f542a72ef"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "b9cede7aa53baf005198eb4102a894fdc61ecde2", "filename": "src/libstd/ffi/os_str.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/bf1f1c242c084e6d74677e228db9d5d6595af7af/src%2Flibstd%2Fffi%2Fos_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf1f1c242c084e6d74677e228db9d5d6595af7af/src%2Flibstd%2Fffi%2Fos_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fffi%2Fos_str.rs?ref=bf1f1c242c084e6d74677e228db9d5d6595af7af", "patch": "@@ -495,11 +495,13 @@ impl OsStr {\n     ///\n     /// let os_str = OsStr::new(\"foo\");\n     /// ```\n+    #[inline]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn new<S: AsRef<OsStr> + ?Sized>(s: &S) -> &OsStr {\n         s.as_ref()\n     }\n \n+    #[inline]\n     fn from_inner(inner: &Slice) -> &OsStr {\n         unsafe { &*(inner as *const Slice as *const OsStr) }\n     }\n@@ -658,6 +660,7 @@ impl OsStr {\n     ///\n     /// Note: it is *crucial* that this API is private, to avoid\n     /// revealing the internal, platform-specific encodings.\n+    #[inline]\n     fn bytes(&self) -> &[u8] {\n         unsafe { &*(&self.inner as *const _ as *const [u8]) }\n     }\n@@ -797,20 +800,23 @@ impl Default for &OsStr {\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl PartialEq for OsStr {\n+    #[inline]\n     fn eq(&self, other: &OsStr) -> bool {\n         self.bytes().eq(other.bytes())\n     }\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl PartialEq<str> for OsStr {\n+    #[inline]\n     fn eq(&self, other: &str) -> bool {\n         *self == *OsStr::new(other)\n     }\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl PartialEq<OsStr> for str {\n+    #[inline]\n     fn eq(&self, other: &OsStr) -> bool {\n         *other == *OsStr::new(self)\n     }\n@@ -944,13 +950,15 @@ impl AsRef<OsStr> for OsString {\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl AsRef<OsStr> for str {\n+    #[inline]\n     fn as_ref(&self) -> &OsStr {\n         OsStr::from_inner(Slice::from_str(self))\n     }\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl AsRef<OsStr> for String {\n+    #[inline]\n     fn as_ref(&self) -> &OsStr {\n         (&**self).as_ref()\n     }"}, {"sha": "ef260f9c5d21f57a15b46e58ed3ab613df4acc69", "filename": "src/libstd/sys/windows/os_str.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bf1f1c242c084e6d74677e228db9d5d6595af7af/src%2Flibstd%2Fsys%2Fwindows%2Fos_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf1f1c242c084e6d74677e228db9d5d6595af7af/src%2Flibstd%2Fsys%2Fwindows%2Fos_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fos_str.rs?ref=bf1f1c242c084e6d74677e228db9d5d6595af7af", "patch": "@@ -128,6 +128,7 @@ impl Buf {\n }\n \n impl Slice {\n+    #[inline]\n     pub fn from_str(s: &str) -> &Slice {\n         unsafe { mem::transmute(Wtf8::from_str(s)) }\n     }"}, {"sha": "eb8a881ec8881f522e75e852f785b0b2f982b291", "filename": "src/libstd/sys_common/os_str_bytes.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf1f1c242c084e6d74677e228db9d5d6595af7af/src%2Flibstd%2Fsys_common%2Fos_str_bytes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf1f1c242c084e6d74677e228db9d5d6595af7af/src%2Flibstd%2Fsys_common%2Fos_str_bytes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys_common%2Fos_str_bytes.rs?ref=bf1f1c242c084e6d74677e228db9d5d6595af7af", "patch": "@@ -139,10 +139,12 @@ impl Buf {\n }\n \n impl Slice {\n+    #[inline]\n     fn from_u8_slice(s: &[u8]) -> &Slice {\n         unsafe { mem::transmute(s) }\n     }\n \n+    #[inline]\n     pub fn from_str(s: &str) -> &Slice {\n         Slice::from_u8_slice(s.as_bytes())\n     }"}]}