{"sha": "1057dc97afce39ff6a224966ece3ed438af4c1f5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEwNTdkYzk3YWZjZTM5ZmY2YTIyNDk2NmVjZTNlZDQzOGFmNGMxZjU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-03-20T19:02:32Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-03-20T19:02:32Z"}, "message": "Auto merge of #69509 - RalfJung:debug-assert-write, r=eddyb\n\ndebug-assert ptr sanity in ptr::write\n\nThis is a re-submission of the parts that we removed from https://github.com/rust-lang/rust/pull/69208 due to [\"interesting\" test failures](https://github.com/rust-lang/rust/pull/69208#issuecomment-591310437).\n\nFixes https://github.com/rust-lang/rust/issues/53871\nr? @Mark-Simulacrum @eddyb", "tree": {"sha": "3ae6e64d6e60e9aeac52df17f5a1cb4ba37688af", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3ae6e64d6e60e9aeac52df17f5a1cb4ba37688af"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1057dc97afce39ff6a224966ece3ed438af4c1f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1057dc97afce39ff6a224966ece3ed438af4c1f5", "html_url": "https://github.com/rust-lang/rust/commit/1057dc97afce39ff6a224966ece3ed438af4c1f5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1057dc97afce39ff6a224966ece3ed438af4c1f5/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2835ca65845c5fac8da2a2612a06b12ad2f4c77c", "url": "https://api.github.com/repos/rust-lang/rust/commits/2835ca65845c5fac8da2a2612a06b12ad2f4c77c", "html_url": "https://github.com/rust-lang/rust/commit/2835ca65845c5fac8da2a2612a06b12ad2f4c77c"}, {"sha": "c95f08affac33aa86c9c39110e7d717d2a5e3d33", "url": "https://api.github.com/repos/rust-lang/rust/commits/c95f08affac33aa86c9c39110e7d717d2a5e3d33", "html_url": "https://github.com/rust-lang/rust/commit/c95f08affac33aa86c9c39110e7d717d2a5e3d33"}], "stats": {"total": 18, "additions": 6, "deletions": 12}, "files": [{"sha": "4913cd73a2a9a373edb03badb983f8e640cb11b8", "filename": "src/libcore/ptr/mod.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1057dc97afce39ff6a224966ece3ed438af4c1f5/src%2Flibcore%2Fptr%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1057dc97afce39ff6a224966ece3ed438af4c1f5/src%2Flibcore%2Fptr%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fptr%2Fmod.rs?ref=1057dc97afce39ff6a224966ece3ed438af4c1f5", "patch": "@@ -810,9 +810,7 @@ pub unsafe fn read_unaligned<T>(src: *const T) -> T {\n #[inline]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub unsafe fn write<T>(dst: *mut T, src: T) {\n-    // FIXME: the debug assertion here causes codegen test failures on some architectures.\n-    // See <https://github.com/rust-lang/rust/pull/69208#issuecomment-591326757>.\n-    // debug_assert!(is_aligned_and_not_null(dst), \"attempt to write to unaligned or null pointer\");\n+    debug_assert!(is_aligned_and_not_null(dst), \"attempt to write to unaligned or null pointer\");\n     intrinsics::move_val_init(&mut *dst, src)\n }\n "}, {"sha": "8e08b78ad1eee83a3d44e437d58ae876edd61c5b", "filename": "src/test/codegen/repeat-trusted-len.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/1057dc97afce39ff6a224966ece3ed438af4c1f5/src%2Ftest%2Fcodegen%2Frepeat-trusted-len.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1057dc97afce39ff6a224966ece3ed438af4c1f5/src%2Ftest%2Fcodegen%2Frepeat-trusted-len.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Frepeat-trusted-len.rs?ref=1057dc97afce39ff6a224966ece3ed438af4c1f5", "patch": "@@ -5,14 +5,9 @@\n \n use std::iter;\n \n-// CHECK: @helper([[USIZE:i[0-9]+]] %_1)\n-#[no_mangle]\n-pub fn helper(_: usize) {\n-}\n-\n // CHECK-LABEL: @repeat_take_collect\n #[no_mangle]\n pub fn repeat_take_collect() -> Vec<u8> {\n-// CHECK: call void @llvm.memset.p0i8.[[USIZE]](i8* {{(nonnull )?}}align 1{{.*}} %{{[0-9]+}}, i8 42, [[USIZE]] 100000, i1 false)\n+// CHECK: call void @llvm.memset.p0i8.i{{[0-9]+}}(i8* {{(nonnull )?}}align 1{{.*}} %{{[0-9]+}}, i8 42, i{{[0-9]+}} 100000, i1 false)\n     iter::repeat(42).take(100000).collect()\n }"}, {"sha": "8a4aef46dd5145bc93d0c3e9c12ba14234165cf0", "filename": "src/test/ui/issues/issue-40883.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/1057dc97afce39ff6a224966ece3ed438af4c1f5/src%2Ftest%2Fui%2Fissues%2Fissue-40883.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1057dc97afce39ff6a224966ece3ed438af4c1f5/src%2Ftest%2Fui%2Fissues%2Fissue-40883.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-40883.rs?ref=1057dc97afce39ff6a224966ece3ed438af4c1f5", "patch": "@@ -71,15 +71,16 @@ pub fn supersize_me(out: &mut Vec<Big>) {\n \n #[inline(never)]\n fn verify_stack_usage(before_ptr: *mut Vec<Big>) {\n-    // to check stack usage, create locals before and after\n+    // To check stack usage, create locals before and after\n     // and check the difference in addresses between them.\n     let mut stack_var: Vec<Big> = vec![];\n     test::black_box(&mut stack_var);\n     let stack_usage = isize::abs(\n         (&mut stack_var as *mut _ as isize) -\n             (before_ptr as isize)) as usize;\n-    // give space for 2 copies of `Big` + 128 \"misc\" bytes.\n-    if stack_usage > mem::size_of::<Big>() * 2 + 128 {\n+    // Give space for 2 copies of `Big` + 272 \"misc\" bytes\n+    // (value observed on x86_64-pc-windows-gnu).\n+    if stack_usage > mem::size_of::<Big>() * 2 + 272 {\n         panic!(\"used {} bytes of stack, but `struct Big` is only {} bytes\",\n                stack_usage, mem::size_of::<Big>());\n     }"}]}