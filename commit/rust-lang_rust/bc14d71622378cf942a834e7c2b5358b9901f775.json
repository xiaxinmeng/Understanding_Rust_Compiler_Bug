{"sha": "bc14d71622378cf942a834e7c2b5358b9901f775", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJjMTRkNzE2MjIzNzhjZjk0MmE4MzRlN2MyYjUzNThiOTkwMWY3NzU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-07-20T02:52:19Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-07-20T02:52:19Z"}, "message": "Auto merge of #52349 - RalfJung:once, r=alexcrichton\n\nsync::Once use release-acquire access modes\n\nNothing here makes a case distinction like \"this happened before OR after that\". All we need is to get happens-before edges whenever we see that the state/signal has been changed. Release-acquire is good enough for that.", "tree": {"sha": "d7287a0944a97635767ce59ea6bf2e8fc40fc743", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d7287a0944a97635767ce59ea6bf2e8fc40fc743"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bc14d71622378cf942a834e7c2b5358b9901f775", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bc14d71622378cf942a834e7c2b5358b9901f775", "html_url": "https://github.com/rust-lang/rust/commit/bc14d71622378cf942a834e7c2b5358b9901f775", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bc14d71622378cf942a834e7c2b5358b9901f775/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c7cba3d33f564be140275c4fb9e33c6dc2c97b21", "url": "https://api.github.com/repos/rust-lang/rust/commits/c7cba3d33f564be140275c4fb9e33c6dc2c97b21", "html_url": "https://github.com/rust-lang/rust/commit/c7cba3d33f564be140275c4fb9e33c6dc2c97b21"}, {"sha": "3e1254d956d944a2909f61f733427350cd96f410", "url": "https://api.github.com/repos/rust-lang/rust/commits/3e1254d956d944a2909f61f733427350cd96f410", "html_url": "https://github.com/rust-lang/rust/commit/3e1254d956d944a2909f61f733427350cd96f410"}], "stats": {"total": 12, "additions": 10, "deletions": 2}, "files": [{"sha": "443e2a6980d9eb85571a8db0bd4dda60211e3547", "filename": "src/libstd/sync/once.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/bc14d71622378cf942a834e7c2b5358b9901f775/src%2Flibstd%2Fsync%2Fonce.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc14d71622378cf942a834e7c2b5358b9901f775/src%2Flibstd%2Fsync%2Fonce.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Fonce.rs?ref=bc14d71622378cf942a834e7c2b5358b9901f775", "patch": "@@ -220,7 +220,11 @@ impl Once {\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn call_once<F>(&self, f: F) where F: FnOnce() {\n         // Fast path, just see if we've completed initialization.\n-        if self.state.load(Ordering::SeqCst) == COMPLETE {\n+        // An `Acquire` load is enough because that makes all the initialization\n+        // operations visible to us. The cold path uses SeqCst consistently\n+        // because the performance difference really does not matter there,\n+        // and SeqCst minimizes the chances of something going wrong.\n+        if self.state.load(Ordering::Acquire) == COMPLETE {\n             return\n         }\n \n@@ -277,7 +281,11 @@ impl Once {\n     #[unstable(feature = \"once_poison\", issue = \"33577\")]\n     pub fn call_once_force<F>(&self, f: F) where F: FnOnce(&OnceState) {\n         // same as above, just with a different parameter to `call_inner`.\n-        if self.state.load(Ordering::SeqCst) == COMPLETE {\n+        // An `Acquire` load is enough because that makes all the initialization\n+        // operations visible to us. The cold path uses SeqCst consistently\n+        // because the performance difference really does not matter there,\n+        // and SeqCst minimizes the chances of something going wrong.\n+        if self.state.load(Ordering::Acquire) == COMPLETE {\n             return\n         }\n "}]}