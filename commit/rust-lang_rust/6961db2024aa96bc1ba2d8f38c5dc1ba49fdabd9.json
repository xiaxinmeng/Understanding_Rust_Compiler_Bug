{"sha": "6961db2024aa96bc1ba2d8f38c5dc1ba49fdabd9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY5NjFkYjIwMjRhYTk2YmMxYmEyZDhmMzhjNWRjMWJhNDlmZGFiZDk=", "commit": {"author": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2020-01-30T04:22:53Z"}, "committer": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2020-01-30T04:22:53Z"}, "message": "Remove unused `read_uleb128` parameter.", "tree": {"sha": "9fe9120a2983a7c4d45fdf86a01fe3d2e330c1b4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9fe9120a2983a7c4d45fdf86a01fe3d2e330c1b4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6961db2024aa96bc1ba2d8f38c5dc1ba49fdabd9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6961db2024aa96bc1ba2d8f38c5dc1ba49fdabd9", "html_url": "https://github.com/rust-lang/rust/commit/6961db2024aa96bc1ba2d8f38c5dc1ba49fdabd9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6961db2024aa96bc1ba2d8f38c5dc1ba49fdabd9/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eed12bcd0cb281979c4c9ed956b9e41fda2bfaeb", "url": "https://api.github.com/repos/rust-lang/rust/commits/eed12bcd0cb281979c4c9ed956b9e41fda2bfaeb", "html_url": "https://github.com/rust-lang/rust/commit/eed12bcd0cb281979c4c9ed956b9e41fda2bfaeb"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "39f3abb75271b1823ac176c738814fe24e9acc43", "filename": "src/libserialize/opaque.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/6961db2024aa96bc1ba2d8f38c5dc1ba49fdabd9/src%2Flibserialize%2Fopaque.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6961db2024aa96bc1ba2d8f38c5dc1ba49fdabd9/src%2Flibserialize%2Fopaque.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibserialize%2Fopaque.rs?ref=6961db2024aa96bc1ba2d8f38c5dc1ba49fdabd9", "patch": "@@ -192,7 +192,7 @@ impl<'a> Decoder<'a> {\n }\n \n macro_rules! read_uleb128 {\n-    ($dec:expr, $t:ty, $fun:ident) => {{\n+    ($dec:expr, $fun:ident) => {{\n         let (value, bytes_read) = leb128::$fun(&$dec.data[$dec.position..]);\n         $dec.position += bytes_read;\n         Ok(value)\n@@ -217,22 +217,22 @@ impl<'a> serialize::Decoder for Decoder<'a> {\n \n     #[inline]\n     fn read_u128(&mut self) -> Result<u128, Self::Error> {\n-        read_uleb128!(self, u128, read_u128_leb128)\n+        read_uleb128!(self, read_u128_leb128)\n     }\n \n     #[inline]\n     fn read_u64(&mut self) -> Result<u64, Self::Error> {\n-        read_uleb128!(self, u64, read_u64_leb128)\n+        read_uleb128!(self, read_u64_leb128)\n     }\n \n     #[inline]\n     fn read_u32(&mut self) -> Result<u32, Self::Error> {\n-        read_uleb128!(self, u32, read_u32_leb128)\n+        read_uleb128!(self, read_u32_leb128)\n     }\n \n     #[inline]\n     fn read_u16(&mut self) -> Result<u16, Self::Error> {\n-        read_uleb128!(self, u16, read_u16_leb128)\n+        read_uleb128!(self, read_u16_leb128)\n     }\n \n     #[inline]\n@@ -244,7 +244,7 @@ impl<'a> serialize::Decoder for Decoder<'a> {\n \n     #[inline]\n     fn read_usize(&mut self) -> Result<usize, Self::Error> {\n-        read_uleb128!(self, usize, read_usize_leb128)\n+        read_uleb128!(self, read_usize_leb128)\n     }\n \n     #[inline]"}]}