{"sha": "1bb3694b1a6368f456c2e62cf234a332a21df2a0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFiYjM2OTRiMWE2MzY4ZjQ1NmMyZTYyY2YyMzRhMzMyYTIxZGYyYTA=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-03-26T19:09:13Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-03-26T19:09:13Z"}, "message": "Reword invalid suffixe errors", "tree": {"sha": "42bc7bae70bedc6bc9f5dcdb61517685715cbc48", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/42bc7bae70bedc6bc9f5dcdb61517685715cbc48"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1bb3694b1a6368f456c2e62cf234a332a21df2a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1bb3694b1a6368f456c2e62cf234a332a21df2a0", "html_url": "https://github.com/rust-lang/rust/commit/1bb3694b1a6368f456c2e62cf234a332a21df2a0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1bb3694b1a6368f456c2e62cf234a332a21df2a0/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c7ddb83980a89118937c8f9c264183f5abf73339", "url": "https://api.github.com/repos/rust-lang/rust/commits/c7ddb83980a89118937c8f9c264183f5abf73339", "html_url": "https://github.com/rust-lang/rust/commit/c7ddb83980a89118937c8f9c264183f5abf73339"}], "stats": {"total": 73, "additions": 36, "deletions": 37}, "files": [{"sha": "bb3dc8edfb001793de492b947f810fed8ef22fce", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/1bb3694b1a6368f456c2e62cf234a332a21df2a0/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1bb3694b1a6368f456c2e62cf234a332a21df2a0/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=1bb3694b1a6368f456c2e62cf234a332a21df2a0", "patch": "@@ -1119,9 +1119,8 @@ impl<'a> Parser<'a> {\n                 if text.is_empty() {\n                     self.span_bug(sp, \"found empty literal suffix in Some\")\n                 }\n-                let msg = format!(\"{} with a suffix is invalid\", kind);\n-                self.struct_span_err(sp, &msg)\n-                    .span_label(sp, msg)\n+                self.struct_span_err(sp, &format!(\"suffixes on {} are invalid\", kind))\n+                    .span_label(sp, format!(\"invalid suffix `{}`\", text))\n                     .emit();\n             }\n         }\n@@ -2150,7 +2149,7 @@ impl<'a> Parser<'a> {\n \n                 if suffix_illegal {\n                     let sp = self.span;\n-                    self.expect_no_suffix(sp, lit.literal_name(), suf)\n+                    self.expect_no_suffix(sp, &format!(\"a {}\", lit.literal_name()), suf)\n                 }\n \n                 result.unwrap()\n@@ -3205,7 +3204,7 @@ impl<'a> Parser<'a> {\n                         let field = ExprKind::Field(e, Ident::new(name, span));\n                         e = self.mk_expr(lo.to(span), field, ThinVec::new());\n \n-                        self.expect_no_suffix(span, \"tuple index\", suffix);\n+                        self.expect_no_suffix(span, \"a tuple index\", suffix);\n                     }\n                     token::Literal(token::Float(n), _suf) => {\n                       self.bump();\n@@ -7791,7 +7790,7 @@ impl<'a> Parser<'a> {\n         match self.token {\n             token::Literal(token::Str_(s), suf) | token::Literal(token::StrRaw(s, _), suf) => {\n                 let sp = self.span;\n-                self.expect_no_suffix(sp, \"ABI spec\", suf);\n+                self.expect_no_suffix(sp, \"an ABI spec\", suf);\n                 self.bump();\n                 match abi::lookup(&s.as_str()) {\n                     Some(abi) => Ok(Some(abi)),\n@@ -8612,7 +8611,7 @@ impl<'a> Parser<'a> {\n         match self.parse_optional_str() {\n             Some((s, style, suf)) => {\n                 let sp = self.prev_span;\n-                self.expect_no_suffix(sp, \"string literal\", suf);\n+                self.expect_no_suffix(sp, \"a string literal\", suf);\n                 Ok((s, style))\n             }\n             _ => {"}, {"sha": "75bed3088587ca3b4a577498d9d4fefc187c5275", "filename": "src/test/ui/parser/bad-lit-suffixes.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/1bb3694b1a6368f456c2e62cf234a332a21df2a0/src%2Ftest%2Fui%2Fparser%2Fbad-lit-suffixes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1bb3694b1a6368f456c2e62cf234a332a21df2a0/src%2Ftest%2Fui%2Fparser%2Fbad-lit-suffixes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fbad-lit-suffixes.rs?ref=1bb3694b1a6368f456c2e62cf234a332a21df2a0", "patch": "@@ -2,20 +2,20 @@\n \n \n extern\n-    \"C\"suffix //~ ERROR ABI spec with a suffix is invalid\n+    \"C\"suffix //~ ERROR suffixes on an ABI spec are invalid\n     fn foo() {}\n \n extern\n-    \"C\"suffix //~ ERROR ABI spec with a suffix is invalid\n+    \"C\"suffix //~ ERROR suffixes on an ABI spec are invalid\n {}\n \n fn main() {\n-    \"\"suffix; //~ ERROR string literal with a suffix is invalid\n-    b\"\"suffix; //~ ERROR byte string literal with a suffix is invalid\n-    r#\"\"#suffix; //~ ERROR string literal with a suffix is invalid\n-    br#\"\"#suffix; //~ ERROR byte string literal with a suffix is invalid\n-    'a'suffix; //~ ERROR char literal with a suffix is invalid\n-    b'a'suffix; //~ ERROR byte literal with a suffix is invalid\n+    \"\"suffix; //~ ERROR suffixes on a string literal are invalid\n+    b\"\"suffix; //~ ERROR suffixes on a byte string literal are invalid\n+    r#\"\"#suffix; //~ ERROR suffixes on a string literal are invalid\n+    br#\"\"#suffix; //~ ERROR suffixes on a byte string literal are invalid\n+    'a'suffix; //~ ERROR suffixes on a char literal are invalid\n+    b'a'suffix; //~ ERROR suffixes on a byte literal are invalid\n \n     1234u1024; //~ ERROR invalid width `1024` for integer literal\n     1234i1024; //~ ERROR invalid width `1024` for integer literal"}, {"sha": "de194f4820de0e0ec47459d30a1cdda4aa72651e", "filename": "src/test/ui/parser/bad-lit-suffixes.stderr", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/1bb3694b1a6368f456c2e62cf234a332a21df2a0/src%2Ftest%2Fui%2Fparser%2Fbad-lit-suffixes.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1bb3694b1a6368f456c2e62cf234a332a21df2a0/src%2Ftest%2Fui%2Fparser%2Fbad-lit-suffixes.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fbad-lit-suffixes.stderr?ref=1bb3694b1a6368f456c2e62cf234a332a21df2a0", "patch": "@@ -1,50 +1,50 @@\n-error: ABI spec with a suffix is invalid\n+error: suffixes on an ABI spec are invalid\n   --> $DIR/bad-lit-suffixes.rs:5:5\n    |\n LL |     \"C\"suffix\n-   |     ^^^^^^^^^ ABI spec with a suffix is invalid\n+   |     ^^^^^^^^^ invalid suffix `suffix`\n \n-error: ABI spec with a suffix is invalid\n+error: suffixes on an ABI spec are invalid\n   --> $DIR/bad-lit-suffixes.rs:9:5\n    |\n LL |     \"C\"suffix\n-   |     ^^^^^^^^^ ABI spec with a suffix is invalid\n+   |     ^^^^^^^^^ invalid suffix `suffix`\n \n-error: string literal with a suffix is invalid\n+error: suffixes on a string literal are invalid\n   --> $DIR/bad-lit-suffixes.rs:13:5\n    |\n LL |     \"\"suffix;\n-   |     ^^^^^^^^ string literal with a suffix is invalid\n+   |     ^^^^^^^^ invalid suffix `suffix`\n \n-error: byte string literal with a suffix is invalid\n+error: suffixes on a byte string literal are invalid\n   --> $DIR/bad-lit-suffixes.rs:14:5\n    |\n LL |     b\"\"suffix;\n-   |     ^^^^^^^^^ byte string literal with a suffix is invalid\n+   |     ^^^^^^^^^ invalid suffix `suffix`\n \n-error: string literal with a suffix is invalid\n+error: suffixes on a string literal are invalid\n   --> $DIR/bad-lit-suffixes.rs:15:5\n    |\n LL |     r#\"\"#suffix;\n-   |     ^^^^^^^^^^^ string literal with a suffix is invalid\n+   |     ^^^^^^^^^^^ invalid suffix `suffix`\n \n-error: byte string literal with a suffix is invalid\n+error: suffixes on a byte string literal are invalid\n   --> $DIR/bad-lit-suffixes.rs:16:5\n    |\n LL |     br#\"\"#suffix;\n-   |     ^^^^^^^^^^^^ byte string literal with a suffix is invalid\n+   |     ^^^^^^^^^^^^ invalid suffix `suffix`\n \n-error: char literal with a suffix is invalid\n+error: suffixes on a char literal are invalid\n   --> $DIR/bad-lit-suffixes.rs:17:5\n    |\n LL |     'a'suffix;\n-   |     ^^^^^^^^^ char literal with a suffix is invalid\n+   |     ^^^^^^^^^ invalid suffix `suffix`\n \n-error: byte literal with a suffix is invalid\n+error: suffixes on a byte literal are invalid\n   --> $DIR/bad-lit-suffixes.rs:18:5\n    |\n LL |     b'a'suffix;\n-   |     ^^^^^^^^^^ byte literal with a suffix is invalid\n+   |     ^^^^^^^^^^ invalid suffix `suffix`\n \n error: invalid width `1024` for integer literal\n   --> $DIR/bad-lit-suffixes.rs:20:5"}, {"sha": "a37af2180bf1bb8d5adf8c9d88c483e81b9e0310", "filename": "src/test/ui/parser/issue-59418.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1bb3694b1a6368f456c2e62cf234a332a21df2a0/src%2Ftest%2Fui%2Fparser%2Fissue-59418.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1bb3694b1a6368f456c2e62cf234a332a21df2a0/src%2Ftest%2Fui%2Fparser%2Fissue-59418.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-59418.rs?ref=1bb3694b1a6368f456c2e62cf234a332a21df2a0", "patch": "@@ -3,10 +3,10 @@ struct X(i32,i32,i32);\n fn main() {\n     let a = X(1, 2, 3);\n     let b = a.1suffix;\n-    //~^ ERROR tuple index with a suffix is invalid\n+    //~^ ERROR suffixes on a tuple index are invalid\n     println!(\"{}\", b);\n     let c = (1, 2, 3);\n     let d = c.1suffix;\n-    //~^ ERROR tuple index with a suffix is invalid\n+    //~^ ERROR suffixes on a tuple index are invalid\n     println!(\"{}\", d);\n }"}, {"sha": "ca7d4cfda72944578642989029dd8f3a592661f6", "filename": "src/test/ui/parser/issue-59418.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1bb3694b1a6368f456c2e62cf234a332a21df2a0/src%2Ftest%2Fui%2Fparser%2Fissue-59418.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1bb3694b1a6368f456c2e62cf234a332a21df2a0/src%2Ftest%2Fui%2Fparser%2Fissue-59418.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-59418.stderr?ref=1bb3694b1a6368f456c2e62cf234a332a21df2a0", "patch": "@@ -1,14 +1,14 @@\n-error: tuple index with a suffix is invalid\n+error: suffixes on a tuple index are invalid\n   --> $DIR/issue-59418.rs:5:15\n    |\n LL |     let b = a.1suffix;\n-   |               ^^^^^^^ tuple index with a suffix is invalid\n+   |               ^^^^^^^ invalid suffix `suffix`\n \n-error: tuple index with a suffix is invalid\n+error: suffixes on a tuple index are invalid\n   --> $DIR/issue-59418.rs:9:15\n    |\n LL |     let d = c.1suffix;\n-   |               ^^^^^^^ tuple index with a suffix is invalid\n+   |               ^^^^^^^ invalid suffix `suffix`\n \n error: aborting due to 2 previous errors\n "}]}