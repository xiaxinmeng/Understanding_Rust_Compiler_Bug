{"sha": "5df0a18849b11baf33f9a5ee0cc58e6f3be7e518", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVkZjBhMTg4NDliMTFiYWYzM2Y5YTVlZTBjYzU4ZTZmM2JlN2U1MTg=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2019-01-27T11:50:16Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2019-01-28T14:05:39Z"}, "message": "Avoid putting a long macro call in a single line", "tree": {"sha": "3db8fce967fef43e2e8b9916838eb75271ec055f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3db8fce967fef43e2e8b9916838eb75271ec055f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5df0a18849b11baf33f9a5ee0cc58e6f3be7e518", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5df0a18849b11baf33f9a5ee0cc58e6f3be7e518", "html_url": "https://github.com/rust-lang/rust/commit/5df0a18849b11baf33f9a5ee0cc58e6f3be7e518", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5df0a18849b11baf33f9a5ee0cc58e6f3be7e518/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "203e6d265d88bee97f89bb0529f3a33cb46e0477", "url": "https://api.github.com/repos/rust-lang/rust/commits/203e6d265d88bee97f89bb0529f3a33cb46e0477", "html_url": "https://github.com/rust-lang/rust/commit/203e6d265d88bee97f89bb0529f3a33cb46e0477"}], "stats": {"total": 77, "additions": 55, "deletions": 22}, "files": [{"sha": "8cc42cadfd405d1d192283fe50c8bdc6accb28bc", "filename": "src/overflow.rs", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/5df0a18849b11baf33f9a5ee0cc58e6f3be7e518/src%2Foverflow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5df0a18849b11baf33f9a5ee0cc58e6f3be7e518/src%2Foverflow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Foverflow.rs?ref=5df0a18849b11baf33f9a5ee0cc58e6f3be7e518", "patch": "@@ -11,6 +11,7 @@\n //! Rewrite a list some items with overflow.\n \n use config::lists::*;\n+use config::Version;\n use syntax::parse::token::DelimToken;\n use syntax::source_map::Span;\n use syntax::{ast, ptr};\n@@ -632,8 +633,6 @@ impl<'a> Context<'a> {\n             _ => (self.prefix, self.suffix),\n         };\n \n-        // 2 = `()`\n-        let fits_one_line = items_str.len() + 2 <= shape.width;\n         let extend_width = if items_str.is_empty() {\n             2\n         } else {\n@@ -652,10 +651,16 @@ impl<'a> Context<'a> {\n         );\n         result.push_str(self.ident);\n         result.push_str(prefix);\n-        if !self.context.use_block_indent()\n-            || (self.context.inside_macro() && !items_str.contains('\\n') && fits_one_line)\n-            || (is_extendable && extend_width <= shape.width)\n-        {\n+        let force_single_line = if self.context.config.version() == Version::Two {\n+            !self.context.use_block_indent() || (is_extendable && extend_width <= shape.width)\n+        } else {\n+            // 2 = `()`\n+            let fits_one_line = items_str.len() + 2 <= shape.width;\n+            !self.context.use_block_indent()\n+                || (self.context.inside_macro() && !items_str.contains('\\n') && fits_one_line)\n+                || (is_extendable && extend_width <= shape.width)\n+        };\n+        if force_single_line {\n             result.push_str(items_str);\n         } else {\n             if !items_str.is_empty() {"}, {"sha": "5386d68898ded9fda94f58ecc8e94cd270edd62c", "filename": "tests/source/macros.rs", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5df0a18849b11baf33f9a5ee0cc58e6f3be7e518/tests%2Fsource%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5df0a18849b11baf33f9a5ee0cc58e6f3be7e518/tests%2Fsource%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fmacros.rs?ref=5df0a18849b11baf33f9a5ee0cc58e6f3be7e518", "patch": "@@ -400,14 +400,6 @@ fn foo() {\n     foo!(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,);\n }\n \n-// #2652\n-// Preserve trailing comma inside macro, even if it looks an array.\n-macro_rules! bar {\n-    ($m:ident) => {\n-        $m!([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z]);\n-    };\n-}\n-\n // #2830\n // Preserve trailing comma-less/ness inside nested macro.\n named!("}, {"sha": "a3aa631ed4af3b78e650a3dee135a1359a0d96b9", "filename": "tests/source/single-line-macro/v1.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5df0a18849b11baf33f9a5ee0cc58e6f3be7e518/tests%2Fsource%2Fsingle-line-macro%2Fv1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5df0a18849b11baf33f9a5ee0cc58e6f3be7e518/tests%2Fsource%2Fsingle-line-macro%2Fv1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fsingle-line-macro%2Fv1.rs?ref=5df0a18849b11baf33f9a5ee0cc58e6f3be7e518", "patch": "@@ -0,0 +1,10 @@\n+// rustfmt-version: One\n+\n+// #2652\n+// Preserve trailing comma inside macro, even if it looks an array.\n+macro_rules! bar {\n+    ($m:ident) => {\n+        $m!([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z,]);\n+        $m!([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z]);\n+    };\n+}"}, {"sha": "51a665f756056e3f711fa0a34d637e0ea903b356", "filename": "tests/source/single-line-macro/v2.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5df0a18849b11baf33f9a5ee0cc58e6f3be7e518/tests%2Fsource%2Fsingle-line-macro%2Fv2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5df0a18849b11baf33f9a5ee0cc58e6f3be7e518/tests%2Fsource%2Fsingle-line-macro%2Fv2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fsingle-line-macro%2Fv2.rs?ref=5df0a18849b11baf33f9a5ee0cc58e6f3be7e518", "patch": "@@ -0,0 +1,10 @@\n+// rustfmt-version: Two\n+\n+// #2652\n+// Preserve trailing comma inside macro, even if it looks an array.\n+macro_rules! bar {\n+    ($m:ident) => {\n+        $m!([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z,]);\n+        $m!([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z]);\n+    };\n+}"}, {"sha": "ca5f91b715e2bbee90ca866a004898225a457398", "filename": "tests/target/macros.rs", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5df0a18849b11baf33f9a5ee0cc58e6f3be7e518/tests%2Ftarget%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5df0a18849b11baf33f9a5ee0cc58e6f3be7e518/tests%2Ftarget%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fmacros.rs?ref=5df0a18849b11baf33f9a5ee0cc58e6f3be7e518", "patch": "@@ -980,14 +980,6 @@ fn foo() {\n     );\n }\n \n-// #2652\n-// Preserve trailing comma inside macro, even if it looks an array.\n-macro_rules! bar {\n-    ($m:ident) => {\n-        $m!([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z]);\n-    };\n-}\n-\n // #2830\n // Preserve trailing comma-less/ness inside nested macro.\n named!("}, {"sha": "a3aa631ed4af3b78e650a3dee135a1359a0d96b9", "filename": "tests/target/single-line-macro/v1.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5df0a18849b11baf33f9a5ee0cc58e6f3be7e518/tests%2Ftarget%2Fsingle-line-macro%2Fv1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5df0a18849b11baf33f9a5ee0cc58e6f3be7e518/tests%2Ftarget%2Fsingle-line-macro%2Fv1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fsingle-line-macro%2Fv1.rs?ref=5df0a18849b11baf33f9a5ee0cc58e6f3be7e518", "patch": "@@ -0,0 +1,10 @@\n+// rustfmt-version: One\n+\n+// #2652\n+// Preserve trailing comma inside macro, even if it looks an array.\n+macro_rules! bar {\n+    ($m:ident) => {\n+        $m!([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z,]);\n+        $m!([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z]);\n+    };\n+}"}, {"sha": "9c6bcf33ad5345b0c12fa9be20a96847da8dbbf5", "filename": "tests/target/single-line-macro/v2.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/5df0a18849b11baf33f9a5ee0cc58e6f3be7e518/tests%2Ftarget%2Fsingle-line-macro%2Fv2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5df0a18849b11baf33f9a5ee0cc58e6f3be7e518/tests%2Ftarget%2Fsingle-line-macro%2Fv2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fsingle-line-macro%2Fv2.rs?ref=5df0a18849b11baf33f9a5ee0cc58e6f3be7e518", "patch": "@@ -0,0 +1,14 @@\n+// rustfmt-version: Two\n+\n+// #2652\n+// Preserve trailing comma inside macro, even if it looks an array.\n+macro_rules! bar {\n+    ($m:ident) => {\n+        $m!([\n+            a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z,\n+        ]);\n+        $m!([\n+            a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z\n+        ]);\n+    };\n+}"}]}