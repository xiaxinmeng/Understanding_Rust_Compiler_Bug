{"sha": "869b28e393f1b87723c9186097bd6acd16366fbd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg2OWIyOGUzOTNmMWI4NzcyM2M5MTg2MDk3YmQ2YWNkMTYzNjZmYmQ=", "commit": {"author": {"name": "Brian Anderson", "email": "andersrb@gmail.com", "date": "2011-04-19T01:25:22Z"}, "committer": {"name": "Brian Anderson", "email": "andersrb@gmail.com", "date": "2011-04-19T01:36:04Z"}, "message": "Left-justification overrides 0-padding in #fmt", "tree": {"sha": "6d5069e96da7cff50446c4261968d02bcc2f06b0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6d5069e96da7cff50446c4261968d02bcc2f06b0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/869b28e393f1b87723c9186097bd6acd16366fbd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/869b28e393f1b87723c9186097bd6acd16366fbd", "html_url": "https://github.com/rust-lang/rust/commit/869b28e393f1b87723c9186097bd6acd16366fbd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/869b28e393f1b87723c9186097bd6acd16366fbd/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d4f1a48111673c158d1c9493be4a87eaa24064b1", "url": "https://api.github.com/repos/rust-lang/rust/commits/d4f1a48111673c158d1c9493be4a87eaa24064b1", "html_url": "https://github.com/rust-lang/rust/commit/d4f1a48111673c158d1c9493be4a87eaa24064b1"}], "stats": {"total": 58, "additions": 35, "deletions": 23}, "files": [{"sha": "938e86b65114794ce6981bef7a33dacebbcb0541", "filename": "src/lib/ExtFmt.rs", "status": "modified", "additions": 24, "deletions": 22, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/869b28e393f1b87723c9186097bd6acd16366fbd/src%2Flib%2FExtFmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869b28e393f1b87723c9186097bd6acd16366fbd/src%2Flib%2FExtFmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2FExtFmt.rs?ref=869b28e393f1b87723c9186097bd6acd16366fbd", "patch": "@@ -467,33 +467,35 @@ mod RT {\n                 auto uwidth = width as uint;\n                 auto strlen = _str.char_len(s);\n                 if (strlen < uwidth) {\n-                    auto zero_padding = false;\n-                    auto signed = false;\n                     auto padchar = ' ';\n-                    alt (pt) {\n-                        case (pad_nozero) {\n-                            // fallthrough\n-                        }\n-                        case (pad_signed) {\n-                            signed = true;\n-                            if (have_flag(cv.flags, flag_left_zero_pad)) {\n-                                padchar = '0';\n-                                zero_padding = true;\n-                            }\n-                        }\n-                        case (pad_unsigned) {\n-                            if (have_flag(cv.flags, flag_left_zero_pad)) {\n-                                padchar = '0';\n-                                zero_padding = true;\n-                            }\n-                        }\n-                    }\n-\n                     auto diff = uwidth - strlen;\n-                    auto padstr = str_init_elt(padchar, diff);\n                     if (have_flag(cv.flags, flag_left_justify)) {\n+                        auto padstr = str_init_elt(padchar, diff);\n                         ret s + padstr;\n                     } else {\n+                        auto zero_padding = false;\n+                        auto signed = false;\n+                        alt (pt) {\n+                            case (pad_nozero) {\n+                                // fallthrough\n+                            }\n+                            case (pad_signed) {\n+                                signed = true;\n+                                if (have_flag(cv.flags, flag_left_zero_pad)) {\n+                                    padchar = '0';\n+                                    zero_padding = true;\n+                                }\n+                            }\n+                            case (pad_unsigned) {\n+                                if (have_flag(cv.flags, flag_left_zero_pad)) {\n+                                    padchar = '0';\n+                                    zero_padding = true;\n+                                }\n+                            }\n+                        }\n+\n+                        auto padstr = str_init_elt(padchar, diff);\n+\n                         // This is completely heinous. If we have a signed\n                         // value then potentially rip apart the intermediate\n                         // result and insert some zeros. It may make sense"}, {"sha": "c3b2cd765d93fec6b024c19bf08d788bc87db28c", "filename": "src/test/run-pass/syntax-extension-fmt.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/869b28e393f1b87723c9186097bd6acd16366fbd/src%2Ftest%2Frun-pass%2Fsyntax-extension-fmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869b28e393f1b87723c9186097bd6acd16366fbd/src%2Ftest%2Frun-pass%2Fsyntax-extension-fmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsyntax-extension-fmt.rs?ref=869b28e393f1b87723c9186097bd6acd16366fbd", "patch": "@@ -139,7 +139,17 @@ fn main() {\n   test(#fmt(\"%05s\", \"test\"), \" test\");\n   test(#fmt(\"%05b\", true), \" true\");\n \n-  // TODO: Left-justify overrides 0-padding\n+  // Left-justify overrides 0-padding\n+  test(#fmt(\"%-05d\", 0), \"0    \");\n+  test(#fmt(\"%-05d\", 1), \"1    \");\n+  test(#fmt(\"%-05d\", -1), \"-1   \");\n+  test(#fmt(\"%-05u\", 1u), \"1    \");\n+  test(#fmt(\"%-05x\", 127u), \"7f   \");\n+  test(#fmt(\"%-05X\", 127u), \"7F   \");\n+  test(#fmt(\"%-05t\", 3u), \"11   \");\n+  test(#fmt(\"%-05s\", \"test\"), \"test \");\n+  test(#fmt(\"%-05b\", true), \"true \");\n+\n   // TODO: Precision overrides 0-padding\n   // TODO: Padding and +\n   // TODO: Padding and ' '"}]}