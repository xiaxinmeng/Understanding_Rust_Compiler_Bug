{"sha": "afad9c3f644ddbfef3301f617cb9d23ca4e71fe0", "node_id": "C_kwDOAAsO6NoAKGFmYWQ5YzNmNjQ0ZGRiZmVmMzMwMWY2MTdjYjlkMjNjYTRlNzFmZTA", "commit": {"author": {"name": "Markus Everling", "email": "markuseverling@gmail.com", "date": "2023-04-22T21:12:35Z"}, "committer": {"name": "Markus Everling", "email": "markuseverling@gmail.com", "date": "2023-04-22T21:40:36Z"}, "message": "Don't use direct field access in `Simd` functions", "tree": {"sha": "a64fa253401212e007e3326439b8799b09abf37b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a64fa253401212e007e3326439b8799b09abf37b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/afad9c3f644ddbfef3301f617cb9d23ca4e71fe0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/afad9c3f644ddbfef3301f617cb9d23ca4e71fe0", "html_url": "https://github.com/rust-lang/rust/commit/afad9c3f644ddbfef3301f617cb9d23ca4e71fe0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/afad9c3f644ddbfef3301f617cb9d23ca4e71fe0/comments", "author": {"login": "Sp00ph", "id": 61327188, "node_id": "MDQ6VXNlcjYxMzI3MTg4", "avatar_url": "https://avatars.githubusercontent.com/u/61327188?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sp00ph", "html_url": "https://github.com/Sp00ph", "followers_url": "https://api.github.com/users/Sp00ph/followers", "following_url": "https://api.github.com/users/Sp00ph/following{/other_user}", "gists_url": "https://api.github.com/users/Sp00ph/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sp00ph/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sp00ph/subscriptions", "organizations_url": "https://api.github.com/users/Sp00ph/orgs", "repos_url": "https://api.github.com/users/Sp00ph/repos", "events_url": "https://api.github.com/users/Sp00ph/events{/privacy}", "received_events_url": "https://api.github.com/users/Sp00ph/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Sp00ph", "id": 61327188, "node_id": "MDQ6VXNlcjYxMzI3MTg4", "avatar_url": "https://avatars.githubusercontent.com/u/61327188?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sp00ph", "html_url": "https://github.com/Sp00ph", "followers_url": "https://api.github.com/users/Sp00ph/followers", "following_url": "https://api.github.com/users/Sp00ph/following{/other_user}", "gists_url": "https://api.github.com/users/Sp00ph/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sp00ph/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sp00ph/subscriptions", "organizations_url": "https://api.github.com/users/Sp00ph/orgs", "repos_url": "https://api.github.com/users/Sp00ph/repos", "events_url": "https://api.github.com/users/Sp00ph/events{/privacy}", "received_events_url": "https://api.github.com/users/Sp00ph/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ceb26115928c5c69b10268fd2f9e500865c142d6", "url": "https://api.github.com/repos/rust-lang/rust/commits/ceb26115928c5c69b10268fd2f9e500865c142d6", "html_url": "https://github.com/rust-lang/rust/commit/ceb26115928c5c69b10268fd2f9e500865c142d6"}], "stats": {"total": 28, "additions": 20, "deletions": 8}, "files": [{"sha": "a372e2e40c475fd2c5cbc3a076cc9ed15c5857eb", "filename": "crates/core_simd/src/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/afad9c3f644ddbfef3301f617cb9d23ca4e71fe0/crates%2Fcore_simd%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/afad9c3f644ddbfef3301f617cb9d23ca4e71fe0/crates%2Fcore_simd%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Flib.rs?ref=afad9c3f644ddbfef3301f617cb9d23ca4e71fe0", "patch": "@@ -1,6 +1,8 @@\n #![no_std]\n #![feature(\n     const_ptr_read,\n+    const_refs_to_cell,\n+    const_transmute_copy,\n     convert_float_to_int,\n     decl_macro,\n     intra_doc_pointers,"}, {"sha": "c1af4af5f57e7a262fd1701ea4b09863440eabca", "filename": "crates/core_simd/src/vector.rs", "status": "modified", "additions": 18, "deletions": 8, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/afad9c3f644ddbfef3301f617cb9d23ca4e71fe0/crates%2Fcore_simd%2Fsrc%2Fvector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/afad9c3f644ddbfef3301f617cb9d23ca4e71fe0/crates%2Fcore_simd%2Fsrc%2Fvector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Fvector.rs?ref=afad9c3f644ddbfef3301f617cb9d23ca4e71fe0", "patch": "@@ -135,22 +135,32 @@ where\n     /// assert_eq!(v.as_array(), &[0, 1, 2, 3]);\n     /// ```\n     pub const fn as_array(&self) -> &[T; LANES] {\n-        &self.0\n+        // SAFETY: Transmuting between `Simd<T, LANES>` and `[T; LANES]`\n+        // is always valid and `Simd<T, LANES>` never has a lower alignment\n+        // than `[T; LANES]`.\n+        unsafe { &*(self as *const Self as *const [T; LANES]) }\n     }\n \n     /// Returns a mutable array reference containing the entire SIMD vector.\n     pub fn as_mut_array(&mut self) -> &mut [T; LANES] {\n-        &mut self.0\n+        // SAFETY: Transmuting between `Simd<T, LANES>` and `[T; LANES]`\n+        // is always valid and `Simd<T, LANES>` never has a lower alignment\n+        // than `[T; LANES]`.\n+        unsafe { &mut *(self as *mut Self as *mut [T; LANES]) }\n     }\n \n     /// Converts an array to a SIMD vector.\n     pub const fn from_array(array: [T; LANES]) -> Self {\n-        Self(array)\n+        // SAFETY: Transmuting between `Simd<T, LANES>` and `[T; LANES]`\n+        // is always valid.\n+        unsafe { core::mem::transmute_copy(&array) }\n     }\n \n     /// Converts a SIMD vector to an array.\n     pub const fn to_array(self) -> [T; LANES] {\n-        self.0\n+        // SAFETY: Transmuting between `Simd<T, LANES>` and `[T; LANES]`\n+        // is always valid.\n+        unsafe { core::mem::transmute_copy(&self) }\n     }\n \n     /// Converts a slice to a SIMD vector containing `slice[..LANES]`.\n@@ -735,7 +745,7 @@ where\n {\n     #[inline]\n     fn as_ref(&self) -> &[T; LANES] {\n-        &self.0\n+        self.as_array()\n     }\n }\n \n@@ -746,7 +756,7 @@ where\n {\n     #[inline]\n     fn as_mut(&mut self) -> &mut [T; LANES] {\n-        &mut self.0\n+        self.as_mut_array()\n     }\n }\n \n@@ -758,7 +768,7 @@ where\n {\n     #[inline]\n     fn as_ref(&self) -> &[T] {\n-        &self.0\n+        self.as_array()\n     }\n }\n \n@@ -769,7 +779,7 @@ where\n {\n     #[inline]\n     fn as_mut(&mut self) -> &mut [T] {\n-        &mut self.0\n+        self.as_mut_array()\n     }\n }\n "}]}