{"sha": "9a4efb4cc3f6516d27c246bdb414e99bb916b554", "node_id": "C_kwDOAAsO6NoAKDlhNGVmYjRjYzNmNjUxNmQyN2MyNDZiZGI0MTRlOTliYjkxNmI1NTQ", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-02-25T13:23:17Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-02-25T13:23:17Z"}, "message": "Auto merge of #14202 - lowr:minor/use-either-either, r=lnicola\n\nminor: import `Either` from `either`\n\nThis is a clean-up patch to replace `use itertools::Either` with `use either::Either` for the sake of consistency.", "tree": {"sha": "4eff479fcda6b951830857cdcc23d5f631df1853", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4eff479fcda6b951830857cdcc23d5f631df1853"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9a4efb4cc3f6516d27c246bdb414e99bb916b554", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9a4efb4cc3f6516d27c246bdb414e99bb916b554", "html_url": "https://github.com/rust-lang/rust/commit/9a4efb4cc3f6516d27c246bdb414e99bb916b554", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9a4efb4cc3f6516d27c246bdb414e99bb916b554/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f5401f620699b26ed9d47a1d2e838143a18dbe3b", "url": "https://api.github.com/repos/rust-lang/rust/commits/f5401f620699b26ed9d47a1d2e838143a18dbe3b", "html_url": "https://github.com/rust-lang/rust/commit/f5401f620699b26ed9d47a1d2e838143a18dbe3b"}, {"sha": "cf0c8fe0003be7bbb4f57dd553f0eb85ec845099", "url": "https://api.github.com/repos/rust-lang/rust/commits/cf0c8fe0003be7bbb4f57dd553f0eb85ec845099", "html_url": "https://github.com/rust-lang/rust/commit/cf0c8fe0003be7bbb4f57dd553f0eb85ec845099"}], "stats": {"total": 22, "additions": 13, "deletions": 9}, "files": [{"sha": "fc77515b63bfdf3b8f64fa6b0f970993ef36ef9e", "filename": "Cargo.lock", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9a4efb4cc3f6516d27c246bdb414e99bb916b554/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/9a4efb4cc3f6516d27c246bdb414e99bb916b554/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=9a4efb4cc3f6516d27c246bdb414e99bb916b554", "patch": "@@ -572,6 +572,7 @@ dependencies = [\n  \"chalk-recursive\",\n  \"chalk-solve\",\n  \"cov-mark\",\n+ \"either\",\n  \"ena\",\n  \"expect-test\",\n  \"hir-def\",\n@@ -1714,6 +1715,7 @@ name = \"syntax\"\n version = \"0.0.0\"\n dependencies = [\n  \"cov-mark\",\n+ \"either\",\n  \"expect-test\",\n  \"indexmap\",\n  \"itertools\","}, {"sha": "4572e33486f0ec24a12fb30c83d4956739159bec", "filename": "crates/hir-ty/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9a4efb4cc3f6516d27c246bdb414e99bb916b554/crates%2Fhir-ty%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/9a4efb4cc3f6516d27c246bdb414e99bb916b554/crates%2Fhir-ty%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-ty%2FCargo.toml?ref=9a4efb4cc3f6516d27c246bdb414e99bb916b554", "patch": "@@ -18,6 +18,7 @@ arrayvec = \"0.7.2\"\n bitflags = \"1.3.2\"\n smallvec.workspace = true\n ena = \"0.14.0\"\n+either = \"1.7.0\"\n tracing = \"0.1.35\"\n rustc-hash = \"1.1.0\"\n scoped-tls = \"1.0.0\""}, {"sha": "91b467028937005408ceff76a51f025a11b50fed", "filename": "crates/hir-ty/src/diagnostics/expr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9a4efb4cc3f6516d27c246bdb414e99bb916b554/crates%2Fhir-ty%2Fsrc%2Fdiagnostics%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a4efb4cc3f6516d27c246bdb414e99bb916b554/crates%2Fhir-ty%2Fsrc%2Fdiagnostics%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-ty%2Fsrc%2Fdiagnostics%2Fexpr.rs?ref=9a4efb4cc3f6516d27c246bdb414e99bb916b554", "patch": "@@ -5,11 +5,11 @@\n use std::fmt;\n use std::sync::Arc;\n \n+use either::Either;\n use hir_def::lang_item::LangItem;\n use hir_def::{resolver::HasResolver, AdtId, AssocItemId, DefWithBodyId, HasModule};\n use hir_def::{ItemContainerId, Lookup};\n use hir_expand::name;\n-use itertools::Either;\n use itertools::Itertools;\n use rustc_hash::FxHashSet;\n use typed_arena::Arena;"}, {"sha": "512ba63dfca90b83821c683825083471d81862ac", "filename": "crates/hir-ty/src/infer.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9a4efb4cc3f6516d27c246bdb414e99bb916b554/crates%2Fhir-ty%2Fsrc%2Finfer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a4efb4cc3f6516d27c246bdb414e99bb916b554/crates%2Fhir-ty%2Fsrc%2Finfer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-ty%2Fsrc%2Finfer.rs?ref=9a4efb4cc3f6516d27c246bdb414e99bb916b554", "patch": "@@ -17,6 +17,7 @@ use std::ops::Index;\n use std::sync::Arc;\n \n use chalk_ir::{cast::Cast, ConstValue, DebruijnIndex, Mutability, Safety, Scalar, TypeFlags};\n+use either::Either;\n use hir_def::{\n     body::Body,\n     builtin_type::{BuiltinInt, BuiltinType, BuiltinUint},\n@@ -31,7 +32,6 @@ use hir_def::{\n     ItemContainerId, Lookup, TraitId, TypeAliasId, VariantId,\n };\n use hir_expand::name::name;\n-use itertools::Either;\n use la_arena::ArenaMap;\n use rustc_hash::FxHashMap;\n use stdx::always;"}, {"sha": "6056043dcd9de520970f0cf3bbf0c24e8d43dcf9", "filename": "crates/hir-ty/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9a4efb4cc3f6516d27c246bdb414e99bb916b554/crates%2Fhir-ty%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a4efb4cc3f6516d27c246bdb414e99bb916b554/crates%2Fhir-ty%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-ty%2Fsrc%2Flib.rs?ref=9a4efb4cc3f6516d27c246bdb414e99bb916b554", "patch": "@@ -42,9 +42,9 @@ use chalk_ir::{\n     visit::{TypeSuperVisitable, TypeVisitable, TypeVisitor},\n     NoSolution, TyData,\n };\n+use either::Either;\n use hir_def::{expr::ExprId, type_ref::Rawness, TypeOrConstParamId};\n use hir_expand::name;\n-use itertools::Either;\n use la_arena::{Arena, Idx};\n use rustc_hash::FxHashSet;\n use traits::FnTrait;"}, {"sha": "140ed7f59193e266c0161195401b0f6a133d53c8", "filename": "crates/hir-ty/src/lower.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9a4efb4cc3f6516d27c246bdb414e99bb916b554/crates%2Fhir-ty%2Fsrc%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a4efb4cc3f6516d27c246bdb414e99bb916b554/crates%2Fhir-ty%2Fsrc%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-ty%2Fsrc%2Flower.rs?ref=9a4efb4cc3f6516d27c246bdb414e99bb916b554", "patch": "@@ -16,6 +16,7 @@ use chalk_ir::{\n     cast::Cast, fold::Shift, fold::TypeFoldable, interner::HasInterner, Mutability, Safety,\n };\n \n+use either::Either;\n use hir_def::{\n     adt::StructKind,\n     body::{Expander, LowerCtx},\n@@ -35,7 +36,6 @@ use hir_def::{\n };\n use hir_expand::{name::Name, ExpandResult};\n use intern::Interned;\n-use itertools::Either;\n use la_arena::{Arena, ArenaMap};\n use rustc_hash::FxHashSet;\n use smallvec::SmallVec;\n@@ -1583,10 +1583,10 @@ pub(crate) fn generic_defaults_recover(\n         .iter_id()\n         .map(|id| {\n             let val = match id {\n-                itertools::Either::Left(_) => {\n+                Either::Left(_) => {\n                     GenericArgData::Ty(TyKind::Error.intern(Interner)).intern(Interner)\n                 }\n-                itertools::Either::Right(id) => unknown_const_as_generic(db.const_param_ty(id)),\n+                Either::Right(id) => unknown_const_as_generic(db.const_param_ty(id)),\n             };\n             crate::make_binders(db, &generic_params, val)\n         })"}, {"sha": "f69cb6bacbd1a4f34f1a32d39073047ac7db6d34", "filename": "crates/hir-ty/src/utils.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9a4efb4cc3f6516d27c246bdb414e99bb916b554/crates%2Fhir-ty%2Fsrc%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a4efb4cc3f6516d27c246bdb414e99bb916b554/crates%2Fhir-ty%2Fsrc%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-ty%2Fsrc%2Futils.rs?ref=9a4efb4cc3f6516d27c246bdb414e99bb916b554", "patch": "@@ -5,6 +5,7 @@ use std::iter;\n \n use base_db::CrateId;\n use chalk_ir::{cast::Cast, fold::Shift, BoundVar, DebruijnIndex};\n+use either::Either;\n use hir_def::{\n     db::DefDatabase,\n     generics::{\n@@ -19,7 +20,6 @@ use hir_def::{\n };\n use hir_expand::name::Name;\n use intern::Interned;\n-use itertools::Either;\n use rustc_hash::FxHashSet;\n use smallvec::{smallvec, SmallVec};\n "}, {"sha": "305cf2d394b44586c0e67180963c1750956d09f2", "filename": "crates/syntax/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9a4efb4cc3f6516d27c246bdb414e99bb916b554/crates%2Fsyntax%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/9a4efb4cc3f6516d27c246bdb414e99bb916b554/crates%2Fsyntax%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2FCargo.toml?ref=9a4efb4cc3f6516d27c246bdb414e99bb916b554", "patch": "@@ -14,6 +14,7 @@ doctest = false\n \n [dependencies]\n cov-mark = \"2.0.0-pre.1\"\n+either = \"1.7.0\"\n itertools = \"0.10.5\"\n rowan = \"0.15.10\"\n rustc_lexer = { version = \"727.0.0\", package = \"rustc-ap-rustc_lexer\" }"}, {"sha": "679536fe27af150c12f5d433a5be8caa804664b0", "filename": "crates/syntax/src/ast.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9a4efb4cc3f6516d27c246bdb414e99bb916b554/crates%2Fsyntax%2Fsrc%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a4efb4cc3f6516d27c246bdb414e99bb916b554/crates%2Fsyntax%2Fsrc%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Fsrc%2Fast.rs?ref=9a4efb4cc3f6516d27c246bdb414e99bb916b554", "patch": "@@ -13,7 +13,7 @@ pub mod prec;\n \n use std::marker::PhantomData;\n \n-use itertools::Either;\n+use either::Either;\n \n use crate::{\n     syntax_node::{SyntaxNode, SyntaxNodeChildren, SyntaxToken},"}, {"sha": "bc7b5582318c074845f0b8ca46cdd051f270de3a", "filename": "crates/syntax/src/ast/traits.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9a4efb4cc3f6516d27c246bdb414e99bb916b554/crates%2Fsyntax%2Fsrc%2Fast%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a4efb4cc3f6516d27c246bdb414e99bb916b554/crates%2Fsyntax%2Fsrc%2Fast%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Fsrc%2Fast%2Ftraits.rs?ref=9a4efb4cc3f6516d27c246bdb414e99bb916b554", "patch": "@@ -1,7 +1,7 @@\n //! Various traits that are implemented by ast nodes.\n //!\n //! The implementations are usually trivial, and live in generated.rs\n-use itertools::Either;\n+use either::Either;\n \n use crate::{\n     ast::{self, support, AstChildren, AstNode, AstToken},"}]}