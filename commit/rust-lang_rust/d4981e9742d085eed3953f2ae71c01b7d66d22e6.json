{"sha": "d4981e9742d085eed3953f2ae71c01b7d66d22e6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ0OTgxZTk3NDJkMDg1ZWVkMzk1M2YyYWU3MWMwMWI3ZDY2ZDIyZTY=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2017-12-21T18:50:49Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-12-21T18:50:49Z"}, "message": "Rollup merge of #46809 - eddyb:issue-46769-optimal, r=arielb1\n\n rustc: do not raise the alignment of optimized enums to the niche's alignment.\n\nThis is the improved fix for #46769 that does not increase the size of any types (see also #46808).", "tree": {"sha": "569b1cfbf64e5f9bab821b9106596064497568e7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/569b1cfbf64e5f9bab821b9106596064497568e7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d4981e9742d085eed3953f2ae71c01b7d66d22e6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d4981e9742d085eed3953f2ae71c01b7d66d22e6", "html_url": "https://github.com/rust-lang/rust/commit/d4981e9742d085eed3953f2ae71c01b7d66d22e6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d4981e9742d085eed3953f2ae71c01b7d66d22e6/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9341321be4c9708d9a62ec05aa58b52f8b35b391", "url": "https://api.github.com/repos/rust-lang/rust/commits/9341321be4c9708d9a62ec05aa58b52f8b35b391", "html_url": "https://github.com/rust-lang/rust/commit/9341321be4c9708d9a62ec05aa58b52f8b35b391"}, {"sha": "5c3dcfaf8570abca15c006920fd2b4b150ecaad7", "url": "https://api.github.com/repos/rust-lang/rust/commits/5c3dcfaf8570abca15c006920fd2b4b150ecaad7", "html_url": "https://github.com/rust-lang/rust/commit/5c3dcfaf8570abca15c006920fd2b4b150ecaad7"}], "stats": {"total": 25, "additions": 16, "deletions": 9}, "files": [{"sha": "978c6c742339c12d629c8ffe236a6f1a4d809170", "filename": "src/librustc/ty/layout.rs", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/d4981e9742d085eed3953f2ae71c01b7d66d22e6/src%2Flibrustc%2Fty%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4981e9742d085eed3953f2ae71c01b7d66d22e6/src%2Flibrustc%2Fty%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Flayout.rs?ref=d4981e9742d085eed3953f2ae71c01b7d66d22e6", "patch": "@@ -1484,27 +1484,25 @@ impl<'a, 'tcx> LayoutDetails {\n                                     Some(niche) => niche,\n                                     None => continue\n                                 };\n+                            let mut align = dl.aggregate_align;\n                             let st = variants.iter().enumerate().map(|(j, v)| {\n                                 let mut st = univariant_uninterned(v,\n                                     &def.repr, StructKind::AlwaysSized)?;\n                                 st.variants = Variants::Single { index: j };\n+\n+                                align = align.max(st.align);\n+\n                                 Ok(st)\n                             }).collect::<Result<Vec<_>, _>>()?;\n \n                             let offset = st[i].fields.offset(field_index) + offset;\n-                            let LayoutDetails { mut size, mut align, .. } = st[i];\n+                            let size = st[i].size;\n \n-                            let mut niche_align = niche.value.align(dl);\n                             let abi = if offset.bytes() == 0 && niche.value.size(dl) == size {\n                                 Abi::Scalar(niche.clone())\n                             } else {\n-                                if offset.abi_align(niche_align) != offset {\n-                                    niche_align = dl.i8_align;\n-                                }\n                                 Abi::Aggregate { sized: true }\n                             };\n-                            align = align.max(niche_align);\n-                            size = size.abi_align(align);\n \n                             return Ok(tcx.intern_layout(LayoutDetails {\n                                 variants: Variants::NicheFilling {"}, {"sha": "7968ae2278ae93a06eba631c4885e39408d52972", "filename": "src/test/run-pass/packed-struct-optimized-enum.rs", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/d4981e9742d085eed3953f2ae71c01b7d66d22e6/src%2Ftest%2Frun-pass%2Fpacked-struct-optimized-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4981e9742d085eed3953f2ae71c01b7d66d22e6/src%2Ftest%2Frun-pass%2Fpacked-struct-optimized-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fpacked-struct-optimized-enum.rs?ref=d4981e9742d085eed3953f2ae71c01b7d66d22e6", "patch": "@@ -19,7 +19,9 @@ impl<T: Copy> Clone for Packed<T> {\n fn sanity_check_size<T: Copy>(one: T) {\n     let two = [one, one];\n     let stride = (&two[1] as *const _ as usize) - (&two[0] as *const _ as usize);\n-    assert_eq!(stride, std::mem::size_of_val(&one));\n+    let (size, align) = (std::mem::size_of::<T>(), std::mem::align_of::<T>());\n+    assert_eq!(stride, size);\n+    assert_eq!(size % align, 0);\n }\n \n fn main() {\n@@ -32,5 +34,12 @@ fn main() {\n     // In #46769, `Option<(Packed<&()>, bool)>` was found to have\n     // pointer alignment, without actually being aligned in size.\n     // E.g. on 64-bit platforms, it had alignment `8` but size `9`.\n-    sanity_check_size(Some((Packed(&()), true)));\n+    type PackedRefAndBool<'a> = (Packed<&'a ()>, bool);\n+    sanity_check_size::<Option<PackedRefAndBool>>(Some((Packed(&()), true)));\n+\n+    // Make sure we don't pay for the enum optimization in size,\n+    // e.g. we shouldn't need extra padding after the packed data.\n+    assert_eq!(std::mem::align_of::<Option<PackedRefAndBool>>(), 1);\n+    assert_eq!(std::mem::size_of::<Option<PackedRefAndBool>>(),\n+               std::mem::size_of::<PackedRefAndBool>());\n }"}]}