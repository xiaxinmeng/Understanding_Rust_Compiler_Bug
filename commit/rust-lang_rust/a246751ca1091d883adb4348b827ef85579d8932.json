{"sha": "a246751ca1091d883adb4348b827ef85579d8932", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEyNDY3NTFjYTEwOTFkODgzYWRiNDM0OGI4MjdlZjg1NTc5ZDg5MzI=", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-05-30T20:32:22Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-06-09T18:23:46Z"}, "message": "Do not store crate in latest_foreign_def_path_hashes.", "tree": {"sha": "3decced810967e3db2ff6ec005886354bff543b3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3decced810967e3db2ff6ec005886354bff543b3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a246751ca1091d883adb4348b827ef85579d8932", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a246751ca1091d883adb4348b827ef85579d8932", "html_url": "https://github.com/rust-lang/rust/commit/a246751ca1091d883adb4348b827ef85579d8932", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a246751ca1091d883adb4348b827ef85579d8932/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5be514992fdeddbf56bb44c7baec3ab5e4f79e1b", "url": "https://api.github.com/repos/rust-lang/rust/commits/5be514992fdeddbf56bb44c7baec3ab5e4f79e1b", "html_url": "https://github.com/rust-lang/rust/commit/5be514992fdeddbf56bb44c7baec3ab5e4f79e1b"}], "stats": {"total": 7, "additions": 0, "deletions": 7}, "files": [{"sha": "30e44e8b70a182fd642ca997d91f9ac339dce3da", "filename": "compiler/rustc_middle/src/ty/query/on_disk_cache.rs", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/a246751ca1091d883adb4348b827ef85579d8932/compiler%2Frustc_middle%2Fsrc%2Fty%2Fquery%2Fon_disk_cache.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a246751ca1091d883adb4348b827ef85579d8932/compiler%2Frustc_middle%2Fsrc%2Fty%2Fquery%2Fon_disk_cache.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fquery%2Fon_disk_cache.rs?ref=a246751ca1091d883adb4348b827ef85579d8932", "patch": "@@ -1023,13 +1023,6 @@ where\n {\n     fn encode(&self, s: &mut CacheEncoder<'a, 'tcx, E>) -> Result<(), E::Error> {\n         let def_path_hash = s.tcx.def_path_hash(self.as_def_id());\n-        // Store additional information when we encode a foreign `DefId`,\n-        // so that we can map its `DefPathHash` back to a `DefId` in the next\n-        // compilation session.\n-        if *self != LOCAL_CRATE {\n-            s.latest_foreign_def_path_hashes\n-                .insert(def_path_hash, RawDefId { krate: self.as_u32(), index: 0 });\n-        }\n         def_path_hash.stable_crate_id().encode(s)\n     }\n }"}]}