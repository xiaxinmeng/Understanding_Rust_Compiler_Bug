{"sha": "e53bd4c2828d475528a387fdba0a80e65a81a05a", "node_id": "C_kwDOAAsO6NoAKGU1M2JkNGMyODI4ZDQ3NTUyOGEzODdmZGJhMGE4MGU2NWE4MWEwNWE", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-02-17T11:39:06Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-02-17T11:39:06Z"}, "message": "Rollup merge of #108126 - tshepang:nits, r=lcnr\n\nfix a line, and do a consistency fix", "tree": {"sha": "2b121f869107219656cc884c3e8b8be41ef98627", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2b121f869107219656cc884c3e8b8be41ef98627"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e53bd4c2828d475528a387fdba0a80e65a81a05a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJj72daCRBK7hj4Ov3rIwAABHwIAFWvjAd9LXjCilFU4SG8wMqw\ndB4oufqT/VzzUIuzQtbvi05xOkDUtGjvQfWlOVvNIWZh4ztcdd7LvfGV/z4dbpUI\nqTMK7KS66JhiVpuU0ZNFD1ytLVnoSFWv1G9kPsszitk7Ja72IiKvExKm0YEVIIwq\nrgXxLfzY4/zzQ4VSpPtmLSn/CnBldRz0uk1sl+jhUbIIyuyVdGvm91ZGfAcgdroe\nThZSji3wLnphhKKC3XIOgB2dCkUki+O3UlG6Z3RVj/gPyqj55ordz1W++MWf/gyD\nIvAYEbA/+8yy1lRcmSbhciR9oA1gqs9ZoUouXpM355wwLSm2/zXG2+4HiMyWvsk=\n=rpz8\n-----END PGP SIGNATURE-----\n", "payload": "tree 2b121f869107219656cc884c3e8b8be41ef98627\nparent 99567662abd0bff3f55ca3c383f430899953d4c5\nparent f9972313aec9cf4c3bedb765496c8ee07e4cb7ed\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1676633946 +0100\ncommitter GitHub <noreply@github.com> 1676633946 +0100\n\nRollup merge of #108126 - tshepang:nits, r=lcnr\n\nfix a line, and do a consistency fix\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e53bd4c2828d475528a387fdba0a80e65a81a05a", "html_url": "https://github.com/rust-lang/rust/commit/e53bd4c2828d475528a387fdba0a80e65a81a05a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e53bd4c2828d475528a387fdba0a80e65a81a05a/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "99567662abd0bff3f55ca3c383f430899953d4c5", "url": "https://api.github.com/repos/rust-lang/rust/commits/99567662abd0bff3f55ca3c383f430899953d4c5", "html_url": "https://github.com/rust-lang/rust/commit/99567662abd0bff3f55ca3c383f430899953d4c5"}, {"sha": "f9972313aec9cf4c3bedb765496c8ee07e4cb7ed", "url": "https://api.github.com/repos/rust-lang/rust/commits/f9972313aec9cf4c3bedb765496c8ee07e4cb7ed", "html_url": "https://github.com/rust-lang/rust/commit/f9972313aec9cf4c3bedb765496c8ee07e4cb7ed"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "9116e71beac83f0aa9b1ac94b1f21ee331f2ac02", "filename": "compiler/rustc_codegen_llvm/src/consts.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e53bd4c2828d475528a387fdba0a80e65a81a05a/compiler%2Frustc_codegen_llvm%2Fsrc%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e53bd4c2828d475528a387fdba0a80e65a81a05a/compiler%2Frustc_codegen_llvm%2Fsrc%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fconsts.rs?ref=e53bd4c2828d475528a387fdba0a80e65a81a05a", "patch": "@@ -521,7 +521,7 @@ impl<'ll> StaticMethods for CodegenCx<'ll, '_> {\n \n                 // The semantics of #[used] in Rust only require the symbol to make it into the\n                 // object file. It is explicitly allowed for the linker to strip the symbol if it\n-                // is dead, which means we are allowed use `llvm.compiler.used` instead of\n+                // is dead, which means we are allowed to use `llvm.compiler.used` instead of\n                 // `llvm.used` here.\n                 //\n                 // Additionally, https://reviews.llvm.org/D97448 in LLVM 13 started emitting unique\n@@ -532,7 +532,7 @@ impl<'ll> StaticMethods for CodegenCx<'ll, '_> {\n                 // That said, we only ever emit these when compiling for ELF targets, unless\n                 // `#[used(compiler)]` is explicitly requested. This is to avoid similar breakage\n                 // on other targets, in particular MachO targets have *their* static constructor\n-                // lists broken if `llvm.compiler.used` is emitted rather than llvm.used. However,\n+                // lists broken if `llvm.compiler.used` is emitted rather than `llvm.used`. However,\n                 // that check happens when assigning the `CodegenFnAttrFlags` in `rustc_hir_analysis`,\n                 // so we don't need to take care of it here.\n                 self.add_compiler_used_global(g);"}, {"sha": "c4601a1fb4189423219953d201a8ffa0a6058016", "filename": "compiler/rustc_middle/src/middle/codegen_fn_attrs.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e53bd4c2828d475528a387fdba0a80e65a81a05a/compiler%2Frustc_middle%2Fsrc%2Fmiddle%2Fcodegen_fn_attrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e53bd4c2828d475528a387fdba0a80e65a81a05a/compiler%2Frustc_middle%2Fsrc%2Fmiddle%2Fcodegen_fn_attrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmiddle%2Fcodegen_fn_attrs.rs?ref=e53bd4c2828d475528a387fdba0a80e65a81a05a", "patch": "@@ -91,7 +91,8 @@ bitflags! {\n         /// the MIR `InstrumentCoverage` pass and not added to the coverage map\n         /// during codegen.\n         const NO_COVERAGE               = 1 << 15;\n-        /// `#[used(linker)]`: indicates that LLVM nor the linker can eliminate this function.\n+        /// `#[used(linker)]`:\n+        /// indicates that neither LLVM nor the linker will eliminate this function.\n         const USED_LINKER               = 1 << 16;\n         /// `#[rustc_deallocator]`: a hint to LLVM that the function only deallocates memory.\n         const DEALLOCATOR               = 1 << 17;"}]}