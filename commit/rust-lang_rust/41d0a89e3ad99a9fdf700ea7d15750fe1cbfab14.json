{"sha": "41d0a89e3ad99a9fdf700ea7d15750fe1cbfab14", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQxZDBhODllM2FkOTlhOWZkZjcwMGVhN2QxNTc1MGZlMWNiZmFiMTQ=", "commit": {"author": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2016-08-17T15:41:33Z"}, "committer": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2016-08-29T15:34:02Z"}, "message": "Implement From<char> for u32, and From<u8> for char\n\nThese fit with other From implementations between integer types.\n\nThis helps the coding style of avoiding the 'as' operator that sometimes\nsilently truncates, and signals that these specific conversions are\nlossless and infaillible.", "tree": {"sha": "b837e9f2c8401f2a2ef300d2a2973e43231b69c3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b837e9f2c8401f2a2ef300d2a2973e43231b69c3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/41d0a89e3ad99a9fdf700ea7d15750fe1cbfab14", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/41d0a89e3ad99a9fdf700ea7d15750fe1cbfab14", "html_url": "https://github.com/rust-lang/rust/commit/41d0a89e3ad99a9fdf700ea7d15750fe1cbfab14", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/41d0a89e3ad99a9fdf700ea7d15750fe1cbfab14/comments", "author": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "86dde9bbda92c02c61282b5df5d38338a798ef3b", "url": "https://api.github.com/repos/rust-lang/rust/commits/86dde9bbda92c02c61282b5df5d38338a798ef3b", "html_url": "https://github.com/rust-lang/rust/commit/86dde9bbda92c02c61282b5df5d38338a798ef3b"}], "stats": {"total": 42, "additions": 42, "deletions": 0}, "files": [{"sha": "47a8678d608ae235f7b92f37e47523c0fc411290", "filename": "src/libcore/char.rs", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/41d0a89e3ad99a9fdf700ea7d15750fe1cbfab14/src%2Flibcore%2Fchar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41d0a89e3ad99a9fdf700ea7d15750fe1cbfab14/src%2Flibcore%2Fchar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fchar.rs?ref=41d0a89e3ad99a9fdf700ea7d15750fe1cbfab14", "patch": "@@ -175,6 +175,40 @@ pub unsafe fn from_u32_unchecked(i: u32) -> char {\n     transmute(i)\n }\n \n+#[stable(feature = \"char_convert\", since = \"1.13.0\")]\n+impl From<char> for u32 {\n+    #[inline]\n+    fn from(c: char) -> Self {\n+        c as u32\n+    }\n+}\n+\n+/// Maps a byte in 0x00...0xFF to a `char` whose code point has the same value, in U+0000 to U+00FF.\n+///\n+/// Unicode is designed such that this effectively decodes bytes\n+/// with the character encoding that IANA calls ISO-8859-1.\n+/// This encoding is compatible with ASCII.\n+///\n+/// Note that this is different from ISO/IEC 8859-1 a.k.a. ISO 8859-1 (with one less hypen),\n+/// which leaves some \"blanks\", byte values that are not assigned to any character.\n+/// ISO-8859-1 (the IANA one) assigns them to the C0 and C1 control codes.\n+///\n+/// Note that this is *also* different from Windows-1252 a.k.a. code page 1252,\n+/// which is a superset ISO/IEC 8859-1 that assigns some (not all!) blanks\n+/// to punctuation and various Latin characters.\n+///\n+/// To confuse things further, [on the Web](https://encoding.spec.whatwg.org/)\n+/// `ascii`, `iso-8859-1`, and `windows-1252` are all aliases\n+/// for a superset of Windows-1252 that fills the remaining blanks with corresponding\n+/// C0 and C1 control codes.\n+#[stable(feature = \"char_convert\", since = \"1.13.0\")]\n+impl From<u8> for char {\n+    #[inline]\n+    fn from(i: u8) -> Self {\n+        i as char\n+    }\n+}\n+\n /// Converts a digit in the given radix to a `char`.\n ///\n /// A 'radix' here is sometimes also called a 'base'. A radix of two"}, {"sha": "92a2b23d242b986bc2bb2269990411daf598cbc3", "filename": "src/libcoretest/char.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/41d0a89e3ad99a9fdf700ea7d15750fe1cbfab14/src%2Flibcoretest%2Fchar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41d0a89e3ad99a9fdf700ea7d15750fe1cbfab14/src%2Flibcoretest%2Fchar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcoretest%2Fchar.rs?ref=41d0a89e3ad99a9fdf700ea7d15750fe1cbfab14", "patch": "@@ -10,6 +10,14 @@\n \n use std::char;\n \n+#[test]\n+fn test_convert() {\n+    assert_eq!(u32::from('a'), 0x61);\n+    assert_eq!(char::from(b'\\0'), '\\0');\n+    assert_eq!(char::from(b'a'), 'a');\n+    assert_eq!(char::from(b'\\xFF'), '\\u{FF}');\n+}\n+\n #[test]\n fn test_is_lowercase() {\n     assert!('a'.is_lowercase());"}]}