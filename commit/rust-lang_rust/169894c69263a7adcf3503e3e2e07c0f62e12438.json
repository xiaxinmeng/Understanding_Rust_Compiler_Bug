{"sha": "169894c69263a7adcf3503e3e2e07c0f62e12438", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE2OTg5NGM2OTI2M2E3YWRjZjM1MDNlM2UyZTA3YzBmNjJlMTI0Mzg=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-07-05T14:08:54Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-07-05T14:08:54Z"}, "message": "Merge #9499\n\n9499: fix: Fix cycle in visibility computation with modules from the same block r=jonas-schievink a=jonas-schievink\n\nfixes https://github.com/rust-analyzer/rust-analyzer/issues/9481\r\n\r\nbors r+\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>", "tree": {"sha": "7b9793055d1f25a748a40ec967719b5b9e072d7a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7b9793055d1f25a748a40ec967719b5b9e072d7a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/169894c69263a7adcf3503e3e2e07c0f62e12438", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJg4xJ2CRBK7hj4Ov3rIwAAT+sIABl8lP80Qu/bTbfSTMcIJIMA\nLszlELJrOwac+pOxDsySKeTMe040l6KKbts78yw1j5Bc8cklcDSruK9mgFQeDee4\n5YfPzfWqH+EHuLiVdlWuk0bR1Dtxy8zmlYDF88n0m/HF2Dcw0G/2vTVwbey83+mD\nuO/58adsKhDFX8I3CyYHcv+HR6W5WnyVFG11POM4uoqLY6nrNkaPu+3G5KrdUywn\nUidoDB1WgoLAl8gQEeoq2eM+iFbUeNknpIQu7iPHhT9fH8W7SmYipkY30SpDupZo\ntXPmHMmopZX0Zb2RLSgkcCStZIKbzcUhUX0WyIJ/PsspMuvLoX75Ez8B59WQeo4=\n=ux9o\n-----END PGP SIGNATURE-----\n", "payload": "tree 7b9793055d1f25a748a40ec967719b5b9e072d7a\nparent ac300eaceb76fbd3f81a7c10d70b2a91ca5b89bc\nparent 835723ca67bf63785fbbf385f2e879a5312c569a\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1625494134 +0000\ncommitter GitHub <noreply@github.com> 1625494134 +0000\n\nMerge #9499\n\n9499: fix: Fix cycle in visibility computation with modules from the same block r=jonas-schievink a=jonas-schievink\n\nfixes https://github.com/rust-analyzer/rust-analyzer/issues/9481\r\n\r\nbors r+\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/169894c69263a7adcf3503e3e2e07c0f62e12438", "html_url": "https://github.com/rust-lang/rust/commit/169894c69263a7adcf3503e3e2e07c0f62e12438", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/169894c69263a7adcf3503e3e2e07c0f62e12438/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ac300eaceb76fbd3f81a7c10d70b2a91ca5b89bc", "url": "https://api.github.com/repos/rust-lang/rust/commits/ac300eaceb76fbd3f81a7c10d70b2a91ca5b89bc", "html_url": "https://github.com/rust-lang/rust/commit/ac300eaceb76fbd3f81a7c10d70b2a91ca5b89bc"}, {"sha": "835723ca67bf63785fbbf385f2e879a5312c569a", "url": "https://api.github.com/repos/rust-lang/rust/commits/835723ca67bf63785fbbf385f2e879a5312c569a", "html_url": "https://github.com/rust-lang/rust/commit/835723ca67bf63785fbbf385f2e879a5312c569a"}], "stats": {"total": 67, "additions": 53, "deletions": 14}, "files": [{"sha": "ea5804c2f07e27cb78802e1076a725cc472fe7f4", "filename": "crates/hir_def/src/body/tests/block.rs", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/169894c69263a7adcf3503e3e2e07c0f62e12438/crates%2Fhir_def%2Fsrc%2Fbody%2Ftests%2Fblock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/169894c69263a7adcf3503e3e2e07c0f62e12438/crates%2Fhir_def%2Fsrc%2Fbody%2Ftests%2Fblock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fbody%2Ftests%2Fblock.rs?ref=169894c69263a7adcf3503e3e2e07c0f62e12438", "patch": "@@ -344,3 +344,40 @@ fn foo() {\n         \"#]],\n     )\n }\n+\n+#[test]\n+fn is_visible_from_same_def_map() {\n+    // Regression test for https://github.com/rust-analyzer/rust-analyzer/issues/9481\n+    check_at(\n+        r#\"\n+fn outer() {\n+    mod command {\n+        use crate::name;\n+    }\n+\n+    mod tests {\n+        use super::*;\n+    }\n+    $0\n+}\n+        \"#,\n+        expect![[r#\"\n+            block scope\n+            command: t\n+            name: _\n+            tests: t\n+\n+            block scope::command\n+            name: _\n+\n+            block scope::tests\n+            name: _\n+            outer: v\n+\n+            crate\n+            outer: v\n+        \"#]],\n+    );\n+    // FIXME: `name` should not be visible in the block scope. This happens because ItemTrees store\n+    // inner items incorrectly.\n+}"}, {"sha": "ec8185ec3606a3973248d677c5287b1f810b819e", "filename": "crates/hir_def/src/lib.rs", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/169894c69263a7adcf3503e3e2e07c0f62e12438/crates%2Fhir_def%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/169894c69263a7adcf3503e3e2e07c0f62e12438/crates%2Fhir_def%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Flib.rs?ref=169894c69263a7adcf3503e3e2e07c0f62e12438", "patch": "@@ -115,18 +115,6 @@ impl ModuleId {\n     pub fn containing_block(&self) -> Option<BlockId> {\n         self.block\n     }\n-\n-    /// Returns `true` if this module represents a block expression.\n-    ///\n-    /// Returns `false` if this module is a submodule *inside* a block expression\n-    /// (eg. `m` in `{ mod m {} }`).\n-    pub fn is_block_root(&self, db: &dyn db::DefDatabase) -> bool {\n-        if self.block.is_none() {\n-            return false;\n-        }\n-\n-        self.def_map(db)[self.local_id].parent.is_none()\n-    }\n }\n \n /// An ID of a module, **local** to a specific crate"}, {"sha": "d6790e74e140c0b760c3b24bdcb0198cf43b80ca", "filename": "crates/hir_def/src/visibility.rs", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/169894c69263a7adcf3503e3e2e07c0f62e12438/crates%2Fhir_def%2Fsrc%2Fvisibility.rs", "raw_url": "https://github.com/rust-lang/rust/raw/169894c69263a7adcf3503e3e2e07c0f62e12438/crates%2Fhir_def%2Fsrc%2Fvisibility.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fvisibility.rs?ref=169894c69263a7adcf3503e3e2e07c0f62e12438", "patch": "@@ -134,8 +134,22 @@ impl Visibility {\n         // visibility as the containing module (even though no items are directly nameable from\n         // there, getting this right is important for method resolution).\n         // In that case, we adjust the visibility of `to_module` to point to the containing module.\n-        if to_module.is_block_root(db) {\n-            to_module = to_module.containing_module(db).unwrap();\n+        // Additional complication: `to_module` might be in `from_module`'s `DefMap`, which we're\n+        // currently computing, so we must not call the `def_map` query for it.\n+        let arc;\n+        let to_module_def_map =\n+            if to_module.krate == def_map.krate() && to_module.block == def_map.block_id() {\n+                def_map\n+            } else {\n+                arc = to_module.def_map(db);\n+                &arc\n+            };\n+        let is_block_root = match to_module.block {\n+            Some(_) => to_module_def_map[to_module.local_id].parent.is_none(),\n+            None => false,\n+        };\n+        if is_block_root {\n+            to_module = to_module_def_map.containing_module(to_module.local_id).unwrap();\n         }\n \n         // from_module needs to be a descendant of to_module"}]}