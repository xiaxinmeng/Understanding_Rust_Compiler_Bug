{"sha": "06ca736e14da34739ff2fb6c02a8a475d7b0159d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA2Y2E3MzZlMTRkYTM0NzM5ZmYyZmI2YzAyYThhNDc1ZDdiMDE1OWQ=", "commit": {"author": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2021-06-12T00:00:00Z"}, "committer": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2021-06-12T16:28:17Z"}, "message": "Pretty print generator witness only in `-Zverbose` mode\n\nIn release build of deeply-nested-async benchmark the size of\n`no-opt.bc` file is reduced from 46MB to 62kB.", "tree": {"sha": "770182e2cccc33f675efc4550ca8593b9b21486d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/770182e2cccc33f675efc4550ca8593b9b21486d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/06ca736e14da34739ff2fb6c02a8a475d7b0159d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/06ca736e14da34739ff2fb6c02a8a475d7b0159d", "html_url": "https://github.com/rust-lang/rust/commit/06ca736e14da34739ff2fb6c02a8a475d7b0159d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/06ca736e14da34739ff2fb6c02a8a475d7b0159d/comments", "author": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "60f1a2fc4b535ead9c85ce085fdce49b1b097531", "url": "https://api.github.com/repos/rust-lang/rust/commits/60f1a2fc4b535ead9c85ce085fdce49b1b097531", "html_url": "https://github.com/rust-lang/rust/commit/60f1a2fc4b535ead9c85ce085fdce49b1b097531"}], "stats": {"total": 58, "additions": 29, "deletions": 29}, "files": [{"sha": "69e3b8c76c860ba483eadda0ffe66a3ee1f2181a", "filename": "compiler/rustc_middle/src/ty/print/pretty.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/06ca736e14da34739ff2fb6c02a8a475d7b0159d/compiler%2Frustc_middle%2Fsrc%2Fty%2Fprint%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/06ca736e14da34739ff2fb6c02a8a475d7b0159d/compiler%2Frustc_middle%2Fsrc%2Fty%2Fprint%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fprint%2Fpretty.rs?ref=06ca736e14da34739ff2fb6c02a8a475d7b0159d", "patch": "@@ -685,10 +685,10 @@ pub trait PrettyPrinter<'tcx>:\n                         self = self.comma_sep(substs.as_generator().upvar_tys())?;\n                     }\n                     p!(\")\");\n-                }\n \n-                if substs.as_generator().is_valid() {\n-                    p!(\" \", print(substs.as_generator().witness()));\n+                    if substs.as_generator().is_valid() {\n+                        p!(\" \", print(substs.as_generator().witness()));\n+                    }\n                 }\n \n                 p!(\"]\")"}, {"sha": "d19229aabada8c215e7d93c253140926c95ff1f4", "filename": "src/test/mir-opt/generator_drop_cleanup.main-{closure#0}.generator_drop.0.mir", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/06ca736e14da34739ff2fb6c02a8a475d7b0159d/src%2Ftest%2Fmir-opt%2Fgenerator_drop_cleanup.main-%7Bclosure%230%7D.generator_drop.0.mir", "raw_url": "https://github.com/rust-lang/rust/raw/06ca736e14da34739ff2fb6c02a8a475d7b0159d/src%2Ftest%2Fmir-opt%2Fgenerator_drop_cleanup.main-%7Bclosure%230%7D.generator_drop.0.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fgenerator_drop_cleanup.main-%7Bclosure%230%7D.generator_drop.0.mir?ref=06ca736e14da34739ff2fb6c02a8a475d7b0159d", "patch": "@@ -14,7 +14,7 @@\n     },\n } */\n \n-fn main::{closure#0}(_1: *mut [generator@$DIR/generator-drop-cleanup.rs:10:15: 13:6 {String, ()}]) -> () {\n+fn main::{closure#0}(_1: *mut [generator@$DIR/generator-drop-cleanup.rs:10:15: 13:6]) -> () {\n     let mut _0: ();                      // return place in scope 0 at $DIR/generator-drop-cleanup.rs:10:15: 13:6\n     let mut _2: ();                      // in scope 0 at $DIR/generator-drop-cleanup.rs:10:15: 13:6\n     let _3: std::string::String;         // in scope 0 at $DIR/generator-drop-cleanup.rs:11:13: 11:15"}, {"sha": "642d9b3fb35dd6b5af34dfbfbff3890b8a4e45a4", "filename": "src/test/mir-opt/generator_storage_dead_unwind.main-{closure#0}.StateTransform.before.mir", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/06ca736e14da34739ff2fb6c02a8a475d7b0159d/src%2Ftest%2Fmir-opt%2Fgenerator_storage_dead_unwind.main-%7Bclosure%230%7D.StateTransform.before.mir", "raw_url": "https://github.com/rust-lang/rust/raw/06ca736e14da34739ff2fb6c02a8a475d7b0159d/src%2Ftest%2Fmir-opt%2Fgenerator_storage_dead_unwind.main-%7Bclosure%230%7D.StateTransform.before.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fgenerator_storage_dead_unwind.main-%7Bclosure%230%7D.StateTransform.before.mir?ref=06ca736e14da34739ff2fb6c02a8a475d7b0159d", "patch": "@@ -1,6 +1,6 @@\n // MIR for `main::{closure#0}` before StateTransform\n \n-fn main::{closure#0}(_1: [generator@$DIR/generator-storage-dead-unwind.rs:22:16: 28:6 {Foo, Bar, ()}], _2: ()) -> ()\n+fn main::{closure#0}(_1: [generator@$DIR/generator-storage-dead-unwind.rs:22:16: 28:6], _2: ()) -> ()\n yields ()\n  {\n     let mut _0: ();                      // return place in scope 0 at $DIR/generator-storage-dead-unwind.rs:22:19: 22:19"}, {"sha": "539988cad245efc11f9049a70bd7071b22ef2571", "filename": "src/test/mir-opt/generator_tiny.main-{closure#0}.generator_resume.0.mir", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/06ca736e14da34739ff2fb6c02a8a475d7b0159d/src%2Ftest%2Fmir-opt%2Fgenerator_tiny.main-%7Bclosure%230%7D.generator_resume.0.mir", "raw_url": "https://github.com/rust-lang/rust/raw/06ca736e14da34739ff2fb6c02a8a475d7b0159d/src%2Ftest%2Fmir-opt%2Fgenerator_tiny.main-%7Bclosure%230%7D.generator_resume.0.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fgenerator_tiny.main-%7Bclosure%230%7D.generator_resume.0.mir?ref=06ca736e14da34739ff2fb6c02a8a475d7b0159d", "patch": "@@ -10,7 +10,7 @@\n     storage_conflicts: BitMatrix(0x0) {},\n } */\n \n-fn main::{closure#0}(_1: Pin<&mut [generator@$DIR/generator-tiny.rs:19:16: 25:6 {u8, HasDrop, ()}]>, _2: u8) -> GeneratorState<(), ()> {\n+fn main::{closure#0}(_1: Pin<&mut [generator@$DIR/generator-tiny.rs:19:16: 25:6]>, _2: u8) -> GeneratorState<(), ()> {\n     debug _x => _10;                     // in scope 0 at $DIR/generator-tiny.rs:19:17: 19:19\n     let mut _0: std::ops::GeneratorState<(), ()>; // return place in scope 0 at $DIR/generator-tiny.rs:19:16: 25:6\n     let _3: HasDrop;                     // in scope 0 at $DIR/generator-tiny.rs:20:13: 20:15\n@@ -27,7 +27,7 @@ fn main::{closure#0}(_1: Pin<&mut [generator@$DIR/generator-tiny.rs:19:16: 25:6\n     }\n \n     bb0: {\n-        _11 = discriminant((*(_1.0: &mut [generator@$DIR/generator-tiny.rs:19:16: 25:6 {u8, HasDrop, ()}]))); // scope 0 at $DIR/generator-tiny.rs:19:16: 25:6\n+        _11 = discriminant((*(_1.0: &mut [generator@$DIR/generator-tiny.rs:19:16: 25:6]))); // scope 0 at $DIR/generator-tiny.rs:19:16: 25:6\n         switchInt(move _11) -> [0_u32: bb1, 3_u32: bb5, otherwise: bb6]; // scope 0 at $DIR/generator-tiny.rs:19:16: 25:6\n     }\n \n@@ -43,7 +43,7 @@ fn main::{closure#0}(_1: Pin<&mut [generator@$DIR/generator-tiny.rs:19:16: 25:6\n         StorageLive(_7);                 // scope 1 at $DIR/generator-tiny.rs:22:13: 22:18\n         ((_0 as Yielded).0: ()) = move _7; // scope 1 at $DIR/generator-tiny.rs:22:13: 22:18\n         discriminant(_0) = 0;            // scope 1 at $DIR/generator-tiny.rs:22:13: 22:18\n-        discriminant((*(_1.0: &mut [generator@$DIR/generator-tiny.rs:19:16: 25:6 {u8, HasDrop, ()}]))) = 3; // scope 1 at $DIR/generator-tiny.rs:22:13: 22:18\n+        discriminant((*(_1.0: &mut [generator@$DIR/generator-tiny.rs:19:16: 25:6]))) = 3; // scope 1 at $DIR/generator-tiny.rs:22:13: 22:18\n         return;                          // scope 1 at $DIR/generator-tiny.rs:22:13: 22:18\n     }\n "}, {"sha": "9035b46f4c69da407697aa3eba9822edf7525788", "filename": "src/test/mir-opt/inline/inline_generator.main.Inline.diff", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/06ca736e14da34739ff2fb6c02a8a475d7b0159d/src%2Ftest%2Fmir-opt%2Finline%2Finline_generator.main.Inline.diff", "raw_url": "https://github.com/rust-lang/rust/raw/06ca736e14da34739ff2fb6c02a8a475d7b0159d/src%2Ftest%2Fmir-opt%2Finline%2Finline_generator.main.Inline.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Finline%2Finline_generator.main.Inline.diff?ref=06ca736e14da34739ff2fb6c02a8a475d7b0159d", "patch": "@@ -13,13 +13,13 @@\n       }\n +     scope 2 (inlined g) {                // at $DIR/inline-generator.rs:9:28: 9:31\n +     }\n-+     scope 3 (inlined Pin::<&mut [generator@$DIR/inline-generator.rs:15:5: 15:41 {bool, i32}]>::new) { // at $DIR/inline-generator.rs:9:14: 9:32\n++     scope 3 (inlined Pin::<&mut [generator@$DIR/inline-generator.rs:15:5: 15:41]>::new) { // at $DIR/inline-generator.rs:9:14: 9:32\n +         debug pointer => _3;             // in scope 3 at $DIR/inline-generator.rs:9:14: 9:32\n-+         let mut _5: &mut [generator@$DIR/inline-generator.rs:15:5: 15:41 {bool, i32}]; // in scope 3 at $DIR/inline-generator.rs:9:14: 9:32\n++         let mut _5: &mut [generator@$DIR/inline-generator.rs:15:5: 15:41]; // in scope 3 at $DIR/inline-generator.rs:9:14: 9:32\n +         scope 4 {\n-+             scope 5 (inlined Pin::<&mut [generator@$DIR/inline-generator.rs:15:5: 15:41 {bool, i32}]>::new_unchecked) { // at $DIR/inline-generator.rs:9:14: 9:32\n++             scope 5 (inlined Pin::<&mut [generator@$DIR/inline-generator.rs:15:5: 15:41]>::new_unchecked) { // at $DIR/inline-generator.rs:9:14: 9:32\n +                 debug pointer => _5;     // in scope 5 at $DIR/inline-generator.rs:9:14: 9:32\n-+                 let mut _6: &mut [generator@$DIR/inline-generator.rs:15:5: 15:41 {bool, i32}]; // in scope 5 at $DIR/inline-generator.rs:9:14: 9:32\n++                 let mut _6: &mut [generator@$DIR/inline-generator.rs:15:5: 15:41]; // in scope 5 at $DIR/inline-generator.rs:9:14: 9:32\n +             }\n +         }\n +     }\n@@ -58,7 +58,7 @@\n +         _5 = move _3;                    // scope 4 at $DIR/inline-generator.rs:9:14: 9:32\n +         StorageLive(_6);                 // scope 5 at $DIR/inline-generator.rs:9:14: 9:32\n +         _6 = move _5;                    // scope 5 at $DIR/inline-generator.rs:9:14: 9:32\n-+         (_2.0: &mut [generator@$DIR/inline-generator.rs:15:5: 15:41 {bool, i32}]) = move _6; // scope 5 at $DIR/inline-generator.rs:9:14: 9:32\n++         (_2.0: &mut [generator@$DIR/inline-generator.rs:15:5: 15:41]) = move _6; // scope 5 at $DIR/inline-generator.rs:9:14: 9:32\n +         StorageDead(_6);                 // scope 5 at $DIR/inline-generator.rs:9:14: 9:32\n +         StorageDead(_5);                 // scope 4 at $DIR/inline-generator.rs:9:14: 9:32\n           StorageDead(_3);                 // scope 0 at $DIR/inline-generator.rs:9:31: 9:32\n@@ -71,7 +71,7 @@\n +         StorageLive(_10);                // scope 0 at $DIR/inline-generator.rs:9:14: 9:46\n +         StorageLive(_11);                // scope 0 at $DIR/inline-generator.rs:9:14: 9:46\n +         StorageLive(_12);                // scope 0 at $DIR/inline-generator.rs:9:14: 9:46\n-+         _12 = discriminant((*(_2.0: &mut [generator@$DIR/inline-generator.rs:15:5: 15:41 {bool, i32}]))); // scope 6 at $DIR/inline-generator.rs:9:14: 9:46\n++         _12 = discriminant((*(_2.0: &mut [generator@$DIR/inline-generator.rs:15:5: 15:41]))); // scope 6 at $DIR/inline-generator.rs:9:14: 9:46\n +         switchInt(move _12) -> [0_u32: bb3, 1_u32: bb8, 3_u32: bb7, otherwise: bb9]; // scope 6 at $DIR/inline-generator.rs:9:14: 9:46\n       }\n   \n@@ -115,7 +115,7 @@\n +         StorageDead(_9);                 // scope 6 at $DIR/inline-generator.rs:9:14: 9:46\n +         ((_1 as Yielded).0: i32) = move _8; // scope 6 at $DIR/inline-generator.rs:9:14: 9:46\n +         discriminant(_1) = 0;            // scope 6 at $DIR/inline-generator.rs:9:14: 9:46\n-+         discriminant((*(_2.0: &mut [generator@$DIR/inline-generator.rs:15:5: 15:41 {bool, i32}]))) = 3; // scope 6 at $DIR/inline-generator.rs:9:14: 9:46\n++         discriminant((*(_2.0: &mut [generator@$DIR/inline-generator.rs:15:5: 15:41]))) = 3; // scope 6 at $DIR/inline-generator.rs:9:14: 9:46\n +         goto -> bb1;                     // scope 0 at $DIR/inline-generator.rs:15:11: 15:39\n +     }\n + \n@@ -125,7 +125,7 @@\n +         StorageDead(_8);                 // scope 6 at $DIR/inline-generator.rs:9:14: 9:46\n +         ((_1 as Complete).0: bool) = move _10; // scope 6 at $DIR/inline-generator.rs:9:14: 9:46\n +         discriminant(_1) = 1;            // scope 6 at $DIR/inline-generator.rs:9:14: 9:46\n-+         discriminant((*(_2.0: &mut [generator@$DIR/inline-generator.rs:15:5: 15:41 {bool, i32}]))) = 1; // scope 6 at $DIR/inline-generator.rs:9:14: 9:46\n++         discriminant((*(_2.0: &mut [generator@$DIR/inline-generator.rs:15:5: 15:41]))) = 1; // scope 6 at $DIR/inline-generator.rs:9:14: 9:46\n +         goto -> bb1;                     // scope 0 at $DIR/inline-generator.rs:15:41: 15:41\n +     }\n + "}, {"sha": "62a1f451a1c7ed1121e100ee8fb48bbe4741c4e9", "filename": "src/test/ui/async-await/issue-68112.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/06ca736e14da34739ff2fb6c02a8a475d7b0159d/src%2Ftest%2Fui%2Fasync-await%2Fissue-68112.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/06ca736e14da34739ff2fb6c02a8a475d7b0159d/src%2Ftest%2Fui%2Fasync-await%2Fissue-68112.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fissue-68112.stderr?ref=06ca736e14da34739ff2fb6c02a8a475d7b0159d", "patch": "@@ -41,14 +41,14 @@ LL |     require_send(send_fut);\n    |\n    = help: the trait `Sync` is not implemented for `RefCell<i32>`\n    = note: required because of the requirements on the impl of `Send` for `Arc<RefCell<i32>>`\n-   = note: required because it appears within the type `[static generator@$DIR/issue-68112.rs:47:31: 47:36 {}]`\n-   = note: required because it appears within the type `from_generator::GenFuture<[static generator@$DIR/issue-68112.rs:47:31: 47:36 {}]>`\n+   = note: required because it appears within the type `[static generator@$DIR/issue-68112.rs:47:31: 47:36]`\n+   = note: required because it appears within the type `from_generator::GenFuture<[static generator@$DIR/issue-68112.rs:47:31: 47:36]>`\n    = note: required because it appears within the type `impl Future`\n    = note: required because it appears within the type `impl Future`\n    = note: required because it appears within the type `impl Future`\n    = note: required because it appears within the type `{ResumeTy, impl Future, (), i32, Ready<i32>}`\n-   = note: required because it appears within the type `[static generator@$DIR/issue-68112.rs:55:26: 59:6 {ResumeTy, impl Future, (), i32, Ready<i32>}]`\n-   = note: required because it appears within the type `from_generator::GenFuture<[static generator@$DIR/issue-68112.rs:55:26: 59:6 {ResumeTy, impl Future, (), i32, Ready<i32>}]>`\n+   = note: required because it appears within the type `[static generator@$DIR/issue-68112.rs:55:26: 59:6]`\n+   = note: required because it appears within the type `from_generator::GenFuture<[static generator@$DIR/issue-68112.rs:55:26: 59:6]>`\n    = note: required because it appears within the type `impl Future`\n \n error: aborting due to 3 previous errors"}, {"sha": "ea5c90a81d4f9ae7503958197b6e334a2ea3360a", "filename": "src/test/ui/async-await/issues/issue-67893.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/06ca736e14da34739ff2fb6c02a8a475d7b0159d/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-67893.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/06ca736e14da34739ff2fb6c02a8a475d7b0159d/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-67893.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-67893.stderr?ref=06ca736e14da34739ff2fb6c02a8a475d7b0159d", "patch": "@@ -14,8 +14,8 @@ LL | pub async fn run() {\n    |\n    = help: within `impl Future`, the trait `Send` is not implemented for `MutexGuard<'_, ()>`\n    = note: required because it appears within the type `for<'r, 's, 't0, 't1, 't2, 't3> {ResumeTy, Arc<Mutex<()>>, &'r Mutex<()>, Result<MutexGuard<'s, ()>, PoisonError<MutexGuard<'t0, ()>>>, &'t1 MutexGuard<'t2, ()>, MutexGuard<'t3, ()>, (), impl Future}`\n-   = note: required because it appears within the type `[static generator@run::{closure#0} for<'r, 's, 't0, 't1, 't2, 't3> {ResumeTy, Arc<Mutex<()>>, &'r Mutex<()>, Result<MutexGuard<'s, ()>, PoisonError<MutexGuard<'t0, ()>>>, &'t1 MutexGuard<'t2, ()>, MutexGuard<'t3, ()>, (), impl Future}]`\n-   = note: required because it appears within the type `from_generator::GenFuture<[static generator@run::{closure#0} for<'r, 's, 't0, 't1, 't2, 't3> {ResumeTy, Arc<Mutex<()>>, &'r Mutex<()>, Result<MutexGuard<'s, ()>, PoisonError<MutexGuard<'t0, ()>>>, &'t1 MutexGuard<'t2, ()>, MutexGuard<'t3, ()>, (), impl Future}]>`\n+   = note: required because it appears within the type `[static generator@run::{closure#0}]`\n+   = note: required because it appears within the type `from_generator::GenFuture<[static generator@run::{closure#0}]>`\n    = note: required because it appears within the type `impl Future`\n    = note: required because it appears within the type `impl Future`\n "}, {"sha": "46d27baa5453b3ebc4fdc4c2066976c2552a3153", "filename": "src/test/ui/generator/issue-68112.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/06ca736e14da34739ff2fb6c02a8a475d7b0159d/src%2Ftest%2Fui%2Fgenerator%2Fissue-68112.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/06ca736e14da34739ff2fb6c02a8a475d7b0159d/src%2Ftest%2Fui%2Fgenerator%2Fissue-68112.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerator%2Fissue-68112.stderr?ref=06ca736e14da34739ff2fb6c02a8a475d7b0159d", "patch": "@@ -29,11 +29,11 @@ LL |     require_send(send_gen);\n    |\n    = help: the trait `Sync` is not implemented for `RefCell<i32>`\n    = note: required because of the requirements on the impl of `Send` for `Arc<RefCell<i32>>`\n-   = note: required because it appears within the type `[generator@$DIR/issue-68112.rs:38:5: 41:6 {()}]`\n+   = note: required because it appears within the type `[generator@$DIR/issue-68112.rs:38:5: 41:6]`\n    = note: required because it appears within the type `impl Generator`\n    = note: required because it appears within the type `impl Generator`\n    = note: required because it appears within the type `{impl Generator, ()}`\n-   = note: required because it appears within the type `[generator@$DIR/issue-68112.rs:48:20: 51:6 {impl Generator, ()}]`\n+   = note: required because it appears within the type `[generator@$DIR/issue-68112.rs:48:20: 51:6]`\n \n error: aborting due to 2 previous errors\n "}, {"sha": "448cb2a043a059092d899805b03b5f5ccdf6ebe0", "filename": "src/test/ui/generator/not-send-sync.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/06ca736e14da34739ff2fb6c02a8a475d7b0159d/src%2Ftest%2Fui%2Fgenerator%2Fnot-send-sync.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/06ca736e14da34739ff2fb6c02a8a475d7b0159d/src%2Ftest%2Fui%2Fgenerator%2Fnot-send-sync.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerator%2Fnot-send-sync.stderr?ref=06ca736e14da34739ff2fb6c02a8a475d7b0159d", "patch": "@@ -9,7 +9,7 @@ LL |     assert_send(|| {\n    |\n    = help: the trait `Sync` is not implemented for `Cell<i32>`\n    = note: required because of the requirements on the impl of `Send` for `&Cell<i32>`\n-   = note: required because it appears within the type `[generator@$DIR/not-send-sync.rs:16:17: 20:6 _]`\n+   = note: required because it appears within the type `[generator@$DIR/not-send-sync.rs:16:17: 20:6]`\n \n error: generator cannot be shared between threads safely\n   --> $DIR/not-send-sync.rs:9:5\n@@ -20,7 +20,7 @@ LL |     fn assert_sync<T: Sync>(_: T) {}\n LL |     assert_sync(|| {\n    |     ^^^^^^^^^^^ generator is not `Sync`\n    |\n-   = help: within `[generator@$DIR/not-send-sync.rs:9:17: 13:6 {Cell<i32>, ()}]`, the trait `Sync` is not implemented for `Cell<i32>`\n+   = help: within `[generator@$DIR/not-send-sync.rs:9:17: 13:6]`, the trait `Sync` is not implemented for `Cell<i32>`\n note: generator is not `Sync` as this value is used across a yield\n   --> $DIR/not-send-sync.rs:12:9\n    |"}, {"sha": "b9b2ce249f7bf5be81746a7399986fb943e98ab3", "filename": "src/test/ui/impl-trait/recursive-impl-trait-type-indirect.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/06ca736e14da34739ff2fb6c02a8a475d7b0159d/src%2Ftest%2Fui%2Fimpl-trait%2Frecursive-impl-trait-type-indirect.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/06ca736e14da34739ff2fb6c02a8a475d7b0159d/src%2Ftest%2Fui%2Fimpl-trait%2Frecursive-impl-trait-type-indirect.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Frecursive-impl-trait-type-indirect.stderr?ref=06ca736e14da34739ff2fb6c02a8a475d7b0159d", "patch": "@@ -95,7 +95,7 @@ LL | /     move || {\n LL | |         yield;\n LL | |         x;\n LL | |     }\n-   | |_____- returning here with type `[generator@$DIR/recursive-impl-trait-type-indirect.rs:61:5: 64:6 {()}]`\n+   | |_____- returning here with type `[generator@$DIR/recursive-impl-trait-type-indirect.rs:61:5: 64:6]`\n \n error[E0720]: cannot resolve opaque type\n   --> $DIR/recursive-impl-trait-type-indirect.rs:67:35\n@@ -117,7 +117,7 @@ LL | |         let x = generator_hold();\n LL | |         yield;\n LL | |         x;\n LL | |     }\n-   | |_____- returning here with type `[generator@$DIR/recursive-impl-trait-type-indirect.rs:74:5: 78:6 {impl Sized, ()}]`\n+   | |_____- returning here with type `[generator@$DIR/recursive-impl-trait-type-indirect.rs:74:5: 78:6]`\n \n error[E0720]: cannot resolve opaque type\n   --> $DIR/recursive-impl-trait-type-indirect.rs:86:26"}, {"sha": "05a7baa68bafb01c7257469939fce4a35a38eb26", "filename": "src/test/ui/suggestions/unnamable-types.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/06ca736e14da34739ff2fb6c02a8a475d7b0159d/src%2Ftest%2Fui%2Fsuggestions%2Funnamable-types.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/06ca736e14da34739ff2fb6c02a8a475d7b0159d/src%2Ftest%2Fui%2Fsuggestions%2Funnamable-types.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Funnamable-types.stderr?ref=06ca736e14da34739ff2fb6c02a8a475d7b0159d", "patch": "@@ -55,7 +55,7 @@ error: missing type for `const` item\n LL | const G = || -> i32 { yield 0; return 1; };\n    |       ^\n    |\n-note: however, the inferred type `[generator@$DIR/unnamable-types.rs:37:11: 37:43 {i32, ()}]` cannot be named\n+note: however, the inferred type `[generator@$DIR/unnamable-types.rs:37:11: 37:43]` cannot be named\n   --> $DIR/unnamable-types.rs:37:11\n    |\n LL | const G = || -> i32 { yield 0; return 1; };"}]}