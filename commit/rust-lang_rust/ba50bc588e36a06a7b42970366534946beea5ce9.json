{"sha": "ba50bc588e36a06a7b42970366534946beea5ce9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJhNTBiYzU4OGUzNmEwNmE3YjQyOTcwMzY2NTM0OTQ2YmVlYTVjZTk=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-04-09T03:29:38Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-04-09T03:29:38Z"}, "message": "Rollup merge of #70367 - nikomatsakis:issue-69307, r=Aaron1011\n\nsave/restore `pessimistic_yield` when entering bodies\n\nThis flag is used to make the execution order around `+=` operators\npessimistic. Failure to save/restore the flag was causing independent\nasync blocks to effect one another, leading to strange ICEs and failed\nassumptions.\n\nFixes #69307\n\nr? @Zoxc", "tree": {"sha": "302aa53464e05e34c56cb335a0b69bfc70becace", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/302aa53464e05e34c56cb335a0b69bfc70becace"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ba50bc588e36a06a7b42970366534946beea5ce9", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJejpaiCRBK7hj4Ov3rIwAAdHIIAIgY2vCkKmSUdOqPP+SXP6bm\nse8CyfU+tm4/U7NeDs64lNmQB1zA8yuAmevbJVSsLvdrRbpK/gnPvlwrCb4zLtci\nAwPpGjBGnftNrcWHQgLeh0tkaNWVaFcHup2R6ztJEgfELNeVV+Gg1nenHsWVSRp1\naDXdfZ0kWIE/UD2Uht9/z/6pgsnnxcrBH5HSjKd2TJjleyRrtGpwHfGM0ld95of5\n018CfhMjLhpGirdVTYTRrtO3V5uF6ePAktIa/yoflDCPA1HO4fhWDZKaHSP6lmbw\nJVyFe2mzhM7JGJS+FyL2IR7wsFUYopMVdwIkp4tj+Ez5EUMC7nNIUvtvCTZqpfY=\n=49F/\n-----END PGP SIGNATURE-----\n", "payload": "tree 302aa53464e05e34c56cb335a0b69bfc70becace\nparent e89cb0733a33906f2097ed3511f6766a95432a3b\nparent 563152d8830737b65d39d280214b1a64aa006f98\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1586402978 +0200\ncommitter GitHub <noreply@github.com> 1586402978 +0200\n\nRollup merge of #70367 - nikomatsakis:issue-69307, r=Aaron1011\n\nsave/restore `pessimistic_yield` when entering bodies\n\nThis flag is used to make the execution order around `+=` operators\npessimistic. Failure to save/restore the flag was causing independent\nasync blocks to effect one another, leading to strange ICEs and failed\nassumptions.\n\nFixes #69307\n\nr? @Zoxc\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ba50bc588e36a06a7b42970366534946beea5ce9", "html_url": "https://github.com/rust-lang/rust/commit/ba50bc588e36a06a7b42970366534946beea5ce9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ba50bc588e36a06a7b42970366534946beea5ce9/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e89cb0733a33906f2097ed3511f6766a95432a3b", "url": "https://api.github.com/repos/rust-lang/rust/commits/e89cb0733a33906f2097ed3511f6766a95432a3b", "html_url": "https://github.com/rust-lang/rust/commit/e89cb0733a33906f2097ed3511f6766a95432a3b"}, {"sha": "563152d8830737b65d39d280214b1a64aa006f98", "url": "https://api.github.com/repos/rust-lang/rust/commits/563152d8830737b65d39d280214b1a64aa006f98", "html_url": "https://github.com/rust-lang/rust/commit/563152d8830737b65d39d280214b1a64aa006f98"}], "stats": {"total": 62, "additions": 62, "deletions": 0}, "files": [{"sha": "4c02127c1066990ac3ef9867f495d94df5aba865", "filename": "src/librustc_passes/region.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ba50bc588e36a06a7b42970366534946beea5ce9/src%2Flibrustc_passes%2Fregion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba50bc588e36a06a7b42970366534946beea5ce9/src%2Flibrustc_passes%2Fregion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fregion.rs?ref=ba50bc588e36a06a7b42970366534946beea5ce9", "patch": "@@ -717,9 +717,17 @@ impl<'tcx> Visitor<'tcx> for RegionResolutionVisitor<'tcx> {\n             self.cx.parent\n         );\n \n+        // Save all state that is specific to the outer function\n+        // body. These will be restored once down below, once we've\n+        // visited the body.\n         let outer_ec = mem::replace(&mut self.expr_and_pat_count, 0);\n         let outer_cx = self.cx;\n         let outer_ts = mem::take(&mut self.terminating_scopes);\n+        // The 'pessimistic yield' flag is set to true when we are\n+        // processing a `+=` statement and have to make pessimistic\n+        // control flow assumptions. This doesn't apply to nested\n+        // bodies within the `+=` statements. See #69307.\n+        let outer_pessimistic_yield = mem::replace(&mut self.pessimistic_yield, false);\n         self.terminating_scopes.insert(body.value.hir_id.local_id);\n \n         if let Some(root_id) = self.cx.root_id {\n@@ -771,6 +779,7 @@ impl<'tcx> Visitor<'tcx> for RegionResolutionVisitor<'tcx> {\n         self.expr_and_pat_count = outer_ec;\n         self.cx = outer_cx;\n         self.terminating_scopes = outer_ts;\n+        self.pessimistic_yield = outer_pessimistic_yield;\n     }\n \n     fn visit_arm(&mut self, a: &'tcx Arm<'tcx>) {"}, {"sha": "b7cdf3987f1cb3ba12c393aec35663d3a3ad02d0", "filename": "src/test/ui/async-await/issues/issue-69307-nested.rs", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/ba50bc588e36a06a7b42970366534946beea5ce9/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-69307-nested.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba50bc588e36a06a7b42970366534946beea5ce9/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-69307-nested.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-69307-nested.rs?ref=ba50bc588e36a06a7b42970366534946beea5ce9", "patch": "@@ -0,0 +1,30 @@\n+// Regression test for #69307\n+//\n+// Having a `async { .. foo.await .. }` block appear inside of a `+=`\n+// expression was causing an ICE due to a failure to save/restore\n+// state in the AST numbering pass when entering a nested body.\n+//\n+// check-pass\n+// edition:2018\n+\n+fn block_on<F>(_: F) -> usize {\n+    0\n+}\n+\n+fn main() {}\n+\n+async fn bar() {\n+    let mut sum = 0;\n+    sum += {\n+        block_on(async {\n+            baz().await;\n+            let mut inner = 1;\n+            inner += block_on(async {\n+                baz().await;\n+                0\n+            })\n+        })\n+    };\n+}\n+\n+async fn baz() {}"}, {"sha": "4dae96ec8a6a7bbbaab976f33bcdefac215ad067", "filename": "src/test/ui/async-await/issues/issue-69307.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/ba50bc588e36a06a7b42970366534946beea5ce9/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-69307.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba50bc588e36a06a7b42970366534946beea5ce9/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-69307.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-69307.rs?ref=ba50bc588e36a06a7b42970366534946beea5ce9", "patch": "@@ -0,0 +1,23 @@\n+// Regression test for #69307\n+//\n+// Having a `async { .. foo.await .. }` block appear inside of a `+=`\n+// expression was causing an ICE due to a failure to save/restore\n+// state in the AST numbering pass when entering a nested body.\n+//\n+// check-pass\n+// edition:2018\n+\n+fn block_on<F>(_: F) -> usize {\n+    0\n+}\n+\n+fn main() {}\n+\n+async fn bar() {\n+    let mut sum = 0;\n+    sum += block_on(async {\n+        baz().await;\n+    });\n+}\n+\n+async fn baz() {}"}]}