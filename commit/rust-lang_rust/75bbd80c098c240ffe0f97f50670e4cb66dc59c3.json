{"sha": "75bbd80c098c240ffe0f97f50670e4cb66dc59c3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc1YmJkODBjMDk4YzI0MGZmZTBmOTdmNTA2NzBlNGNiNjZkYzU5YzM=", "commit": {"author": {"name": "Alex Macleod", "email": "alex@macleod.io", "date": "2020-10-23T17:41:07Z"}, "committer": {"name": "Alex Macleod", "email": "alex@macleod.io", "date": "2020-10-24T12:13:52Z"}, "message": "Add some regression tests\n\nCloses #56229\nCloses #59494\nCloses #70746\nCloses #73229", "tree": {"sha": "5219ec0f9011dd96b07df9d0df718992de0f7fad", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5219ec0f9011dd96b07df9d0df718992de0f7fad"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/75bbd80c098c240ffe0f97f50670e4cb66dc59c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/75bbd80c098c240ffe0f97f50670e4cb66dc59c3", "html_url": "https://github.com/rust-lang/rust/commit/75bbd80c098c240ffe0f97f50670e4cb66dc59c3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/75bbd80c098c240ffe0f97f50670e4cb66dc59c3/comments", "author": {"login": "Alexendoo", "id": 1830331, "node_id": "MDQ6VXNlcjE4MzAzMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1830331?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Alexendoo", "html_url": "https://github.com/Alexendoo", "followers_url": "https://api.github.com/users/Alexendoo/followers", "following_url": "https://api.github.com/users/Alexendoo/following{/other_user}", "gists_url": "https://api.github.com/users/Alexendoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/Alexendoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Alexendoo/subscriptions", "organizations_url": "https://api.github.com/users/Alexendoo/orgs", "repos_url": "https://api.github.com/users/Alexendoo/repos", "events_url": "https://api.github.com/users/Alexendoo/events{/privacy}", "received_events_url": "https://api.github.com/users/Alexendoo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Alexendoo", "id": 1830331, "node_id": "MDQ6VXNlcjE4MzAzMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1830331?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Alexendoo", "html_url": "https://github.com/Alexendoo", "followers_url": "https://api.github.com/users/Alexendoo/followers", "following_url": "https://api.github.com/users/Alexendoo/following{/other_user}", "gists_url": "https://api.github.com/users/Alexendoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/Alexendoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Alexendoo/subscriptions", "organizations_url": "https://api.github.com/users/Alexendoo/orgs", "repos_url": "https://api.github.com/users/Alexendoo/repos", "events_url": "https://api.github.com/users/Alexendoo/events{/privacy}", "received_events_url": "https://api.github.com/users/Alexendoo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "07a63e6d1fabf3560e8e1e17c1d56b10a06152d9", "url": "https://api.github.com/repos/rust-lang/rust/commits/07a63e6d1fabf3560e8e1e17c1d56b10a06152d9", "html_url": "https://github.com/rust-lang/rust/commit/07a63e6d1fabf3560e8e1e17c1d56b10a06152d9"}], "stats": {"total": 134, "additions": 134, "deletions": 0}, "files": [{"sha": "9e5897b98925aa3b0d63d72de0224f50096fa573", "filename": "src/test/ui/issues/issue-56229.rs", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/75bbd80c098c240ffe0f97f50670e4cb66dc59c3/src%2Ftest%2Fui%2Fissues%2Fissue-56229.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75bbd80c098c240ffe0f97f50670e4cb66dc59c3/src%2Ftest%2Fui%2Fissues%2Fissue-56229.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-56229.rs?ref=75bbd80c098c240ffe0f97f50670e4cb66dc59c3", "patch": "@@ -0,0 +1,35 @@\n+// check-pass\n+\n+trait Mirror {\n+    type Other;\n+}\n+\n+#[derive(Debug)]\n+struct Even(usize);\n+struct Odd;\n+\n+impl Mirror for Even {\n+    type Other = Odd;\n+}\n+\n+impl Mirror for Odd {\n+    type Other = Even;\n+}\n+\n+trait Dyn<T: Mirror>: AsRef<<T as Mirror>::Other> {}\n+\n+impl Dyn<Odd> for Even {}\n+\n+impl AsRef<Even> for Even {\n+    fn as_ref(&self) -> &Even {\n+        self\n+    }\n+}\n+\n+fn code<T: Mirror>(d: &dyn Dyn<T>) -> &T::Other {\n+    d.as_ref()\n+}\n+\n+fn main() {\n+    println!(\"{:?}\", code(&Even(22)));\n+}"}, {"sha": "06b8eb777c035198993ad7573cbf24b6f7ee7ddc", "filename": "src/test/ui/issues/issue-59494.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/75bbd80c098c240ffe0f97f50670e4cb66dc59c3/src%2Ftest%2Fui%2Fissues%2Fissue-59494.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75bbd80c098c240ffe0f97f50670e4cb66dc59c3/src%2Ftest%2Fui%2Fissues%2Fissue-59494.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-59494.rs?ref=75bbd80c098c240ffe0f97f50670e4cb66dc59c3", "patch": "@@ -0,0 +1,23 @@\n+fn t7p<A, B, C>(f: impl Fn(B) -> C, g: impl Fn(A) -> B) -> impl Fn(A) -> C {\n+    move |a: A| -> C { f(g(a)) }\n+}\n+\n+fn t8n<A, B, C>(f: impl Fn(A) -> B, g: impl Fn(A) -> C) -> impl Fn(A) -> (B, C)\n+where\n+    A: Copy,\n+{\n+    move |a: A| -> (B, C) {\n+        let b = a;\n+        let fa = f(a);\n+        let ga = g(b);\n+        (fa, ga)\n+    }\n+}\n+\n+fn main() {\n+    let f = |(_, _)| {};\n+    let g = |(a, _)| a;\n+    let t7 = |env| |a| |b| t7p(f, g)(((env, a), b));\n+    let t8 = t8n(t7, t7p(f, g));\n+    //~^ ERROR: expected a `Fn<(_,)>` closure, found `impl Fn<(((_, _), _),)>\n+}"}, {"sha": "e2ac5d94da1088b7c9464704a2d9a07db0cd6ba8", "filename": "src/test/ui/issues/issue-59494.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/75bbd80c098c240ffe0f97f50670e4cb66dc59c3/src%2Ftest%2Fui%2Fissues%2Fissue-59494.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/75bbd80c098c240ffe0f97f50670e4cb66dc59c3/src%2Ftest%2Fui%2Fissues%2Fissue-59494.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-59494.stderr?ref=75bbd80c098c240ffe0f97f50670e4cb66dc59c3", "patch": "@@ -0,0 +1,14 @@\n+error[E0277]: expected a `Fn<(_,)>` closure, found `impl Fn<(((_, _), _),)>`\n+  --> $DIR/issue-59494.rs:21:22\n+   |\n+LL | fn t8n<A, B, C>(f: impl Fn(A) -> B, g: impl Fn(A) -> C) -> impl Fn(A) -> (B, C)\n+   |                                             ---------- required by this bound in `t8n`\n+...\n+LL |     let t8 = t8n(t7, t7p(f, g));\n+   |                      ^^^^^^^^^ expected an `Fn<(_,)>` closure, found `impl Fn<(((_, _), _),)>`\n+   |\n+   = help: the trait `Fn<(_,)>` is not implemented for `impl Fn<(((_, _), _),)>`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0277`."}, {"sha": "8930c15f57edcacf9d38c1a2f28f1d99d3a20814", "filename": "src/test/ui/issues/issue-70746.rs", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/75bbd80c098c240ffe0f97f50670e4cb66dc59c3/src%2Ftest%2Fui%2Fissues%2Fissue-70746.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75bbd80c098c240ffe0f97f50670e4cb66dc59c3/src%2Ftest%2Fui%2Fissues%2Fissue-70746.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-70746.rs?ref=75bbd80c098c240ffe0f97f50670e4cb66dc59c3", "patch": "@@ -0,0 +1,29 @@\n+// check-pass\n+\n+pub trait Trait1 {\n+    type C;\n+}\n+\n+struct T1;\n+impl Trait1 for T1 {\n+    type C = usize;\n+}\n+pub trait Callback<T: Trait1>: FnMut(<T as Trait1>::C) {}\n+impl<T: Trait1, F: FnMut(<T as Trait1>::C)> Callback<T> for F {}\n+\n+pub struct State<T: Trait1> {\n+    callback: Option<Box<dyn Callback<T>>>,\n+}\n+impl<T: Trait1> State<T> {\n+    fn new() -> Self {\n+        Self { callback: None }\n+    }\n+    fn test_cb(&mut self, d: <T as Trait1>::C) {\n+        (self.callback.as_mut().unwrap())(d)\n+    }\n+}\n+\n+fn main() {\n+    let mut s = State::<T1>::new();\n+    s.test_cb(1);\n+}"}, {"sha": "35346199add927b76d35cd2087e245942db0d7ba", "filename": "src/test/ui/issues/issue-73229.rs", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/75bbd80c098c240ffe0f97f50670e4cb66dc59c3/src%2Ftest%2Fui%2Fissues%2Fissue-73229.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75bbd80c098c240ffe0f97f50670e4cb66dc59c3/src%2Ftest%2Fui%2Fissues%2Fissue-73229.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-73229.rs?ref=75bbd80c098c240ffe0f97f50670e4cb66dc59c3", "patch": "@@ -0,0 +1,33 @@\n+// check-pass\n+\n+fn any<T>() -> T {\n+    loop {}\n+}\n+\n+trait Foo {\n+    type V;\n+}\n+\n+trait Callback<T: Foo>: Fn(&T, &T::V) {}\n+impl<T: Foo, F: Fn(&T, &T::V)> Callback<T> for F {}\n+\n+struct Bar<T: Foo> {\n+    callback: Box<dyn Callback<T>>,\n+}\n+\n+impl<T: Foo> Bar<T> {\n+    fn event(&self) {\n+        (self.callback)(any(), any());\n+    }\n+}\n+\n+struct A;\n+struct B;\n+impl Foo for A {\n+    type V = B;\n+}\n+\n+fn main() {\n+    let foo = Bar::<A> { callback: Box::new(|_: &A, _: &B| ()) };\n+    foo.event();\n+}"}]}