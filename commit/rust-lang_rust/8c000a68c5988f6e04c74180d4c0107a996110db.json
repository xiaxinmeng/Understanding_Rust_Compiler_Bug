{"sha": "8c000a68c5988f6e04c74180d4c0107a996110db", "node_id": "C_kwDOAAsO6NoAKDhjMDAwYTY4YzU5ODhmNmUwNGM3NDE4MGQ0YzAxMDdhOTk2MTEwZGI", "commit": {"author": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2022-12-12T19:37:28Z"}, "committer": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2022-12-31T17:20:13Z"}, "message": "Add missing extern crate rustc_driver", "tree": {"sha": "662aed0311db6ff4da6e8812d0771f950af5f0a4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/662aed0311db6ff4da6e8812d0771f950af5f0a4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8c000a68c5988f6e04c74180d4c0107a996110db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8c000a68c5988f6e04c74180d4c0107a996110db", "html_url": "https://github.com/rust-lang/rust/commit/8c000a68c5988f6e04c74180d4c0107a996110db", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8c000a68c5988f6e04c74180d4c0107a996110db/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7837058073722f1d4a591cdd8d68b6a81466f5f2", "url": "https://api.github.com/repos/rust-lang/rust/commits/7837058073722f1d4a591cdd8d68b6a81466f5f2", "html_url": "https://github.com/rust-lang/rust/commit/7837058073722f1d4a591cdd8d68b6a81466f5f2"}], "stats": {"total": 72, "additions": 72, "deletions": 0}, "files": [{"sha": "384589de3b4807b789679eca7020edfdd3006ad1", "filename": "src/test/run-make-fulldeps/save-analysis/foo.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/8c000a68c5988f6e04c74180d4c0107a996110db/src%2Ftest%2Frun-make-fulldeps%2Fsave-analysis%2Ffoo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c000a68c5988f6e04c74180d4c0107a996110db/src%2Ftest%2Frun-make-fulldeps%2Fsave-analysis%2Ffoo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fsave-analysis%2Ffoo.rs?ref=8c000a68c5988f6e04c74180d4c0107a996110db", "patch": "@@ -5,6 +5,11 @@\n extern crate rustc_graphviz;\n // A simple rust project\n \n+// Necessary to pull in object code as the rest of the rustc crates are shipped only as rmeta\n+// files.\n+#[allow(unused_extern_crates)]\n+extern crate rustc_driver;\n+\n extern crate krate2;\n extern crate krate2 as krate3;\n "}, {"sha": "1c376f59e5174a4d82654d5724de868e39e933e9", "filename": "src/test/ui-fulldeps/deriving-encodable-decodable-box.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/8c000a68c5988f6e04c74180d4c0107a996110db/src%2Ftest%2Fui-fulldeps%2Fderiving-encodable-decodable-box.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c000a68c5988f6e04c74180d4c0107a996110db/src%2Ftest%2Fui-fulldeps%2Fderiving-encodable-decodable-box.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fderiving-encodable-decodable-box.rs?ref=8c000a68c5988f6e04c74180d4c0107a996110db", "patch": "@@ -6,6 +6,11 @@\n extern crate rustc_macros;\n extern crate rustc_serialize;\n \n+// Necessary to pull in object code as the rest of the rustc crates are shipped only as rmeta\n+// files.\n+#[allow(unused_extern_crates)]\n+extern crate rustc_driver;\n+\n use rustc_macros::{Decodable, Encodable};\n use rustc_serialize::opaque::{MemDecoder, MemEncoder};\n use rustc_serialize::{Decodable, Encodable, Encoder};"}, {"sha": "844d40f2ecd6a4590500b18a1727df21d8dbbca9", "filename": "src/test/ui-fulldeps/deriving-encodable-decodable-cell-refcell.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/8c000a68c5988f6e04c74180d4c0107a996110db/src%2Ftest%2Fui-fulldeps%2Fderiving-encodable-decodable-cell-refcell.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c000a68c5988f6e04c74180d4c0107a996110db/src%2Ftest%2Fui-fulldeps%2Fderiving-encodable-decodable-cell-refcell.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fderiving-encodable-decodable-cell-refcell.rs?ref=8c000a68c5988f6e04c74180d4c0107a996110db", "patch": "@@ -8,6 +8,11 @@\n extern crate rustc_macros;\n extern crate rustc_serialize;\n \n+// Necessary to pull in object code as the rest of the rustc crates are shipped only as rmeta\n+// files.\n+#[allow(unused_extern_crates)]\n+extern crate rustc_driver;\n+\n use rustc_macros::{Decodable, Encodable};\n use rustc_serialize::opaque::{MemDecoder, MemEncoder};\n use rustc_serialize::{Decodable, Encodable, Encoder};"}, {"sha": "214bb4368ffdd808aba26eeb77b533fd77bd339c", "filename": "src/test/ui-fulldeps/deriving-global.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/8c000a68c5988f6e04c74180d4c0107a996110db/src%2Ftest%2Fui-fulldeps%2Fderiving-global.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c000a68c5988f6e04c74180d4c0107a996110db/src%2Ftest%2Fui-fulldeps%2Fderiving-global.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fderiving-global.rs?ref=8c000a68c5988f6e04c74180d4c0107a996110db", "patch": "@@ -5,6 +5,11 @@\n extern crate rustc_macros;\n extern crate rustc_serialize;\n \n+// Necessary to pull in object code as the rest of the rustc crates are shipped only as rmeta\n+// files.\n+#[allow(unused_extern_crates)]\n+extern crate rustc_driver;\n+\n mod submod {\n     use rustc_macros::{Decodable, Encodable};\n "}, {"sha": "e1084a08fec93f0baf472ca8bbe16f447cdc528f", "filename": "src/test/ui-fulldeps/deriving-hygiene.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/8c000a68c5988f6e04c74180d4c0107a996110db/src%2Ftest%2Fui-fulldeps%2Fderiving-hygiene.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c000a68c5988f6e04c74180d4c0107a996110db/src%2Ftest%2Fui-fulldeps%2Fderiving-hygiene.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fderiving-hygiene.rs?ref=8c000a68c5988f6e04c74180d4c0107a996110db", "patch": "@@ -7,6 +7,11 @@ extern crate rustc_serialize;\n \n use rustc_macros::{Decodable, Encodable};\n \n+// Necessary to pull in object code as the rest of the rustc crates are shipped only as rmeta\n+// files.\n+#[allow(unused_extern_crates)]\n+extern crate rustc_driver;\n+\n pub const other: u8 = 1;\n pub const f: u8 = 1;\n pub const d: u8 = 1;"}, {"sha": "ffad80171da7798645608a04194101cdcb475b90", "filename": "src/test/ui-fulldeps/dropck_tarena_sound_drop.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/8c000a68c5988f6e04c74180d4c0107a996110db/src%2Ftest%2Fui-fulldeps%2Fdropck_tarena_sound_drop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c000a68c5988f6e04c74180d4c0107a996110db/src%2Ftest%2Fui-fulldeps%2Fdropck_tarena_sound_drop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fdropck_tarena_sound_drop.rs?ref=8c000a68c5988f6e04c74180d4c0107a996110db", "patch": "@@ -14,6 +14,11 @@\n \n extern crate rustc_arena;\n \n+// Necessary to pull in object code as the rest of the rustc crates are shipped only as rmeta\n+// files.\n+#[allow(unused_extern_crates)]\n+extern crate rustc_driver;\n+\n use rustc_arena::TypedArena;\n \n trait HasId { fn count(&self) -> usize; }"}, {"sha": "10e8beaa7b119d944d9e4a6bad24a2538dd75f5c", "filename": "src/test/ui-fulldeps/empty-struct-braces-derive.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/8c000a68c5988f6e04c74180d4c0107a996110db/src%2Ftest%2Fui-fulldeps%2Fempty-struct-braces-derive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c000a68c5988f6e04c74180d4c0107a996110db/src%2Ftest%2Fui-fulldeps%2Fempty-struct-braces-derive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fempty-struct-braces-derive.rs?ref=8c000a68c5988f6e04c74180d4c0107a996110db", "patch": "@@ -6,6 +6,11 @@\n extern crate rustc_macros;\n extern crate rustc_serialize;\n \n+// Necessary to pull in object code as the rest of the rustc crates are shipped only as rmeta\n+// files.\n+#[allow(unused_extern_crates)]\n+extern crate rustc_driver;\n+\n use rustc_macros::{Decodable, Encodable};\n \n #[derive(Clone, Copy, PartialEq, Eq, PartialOrd, Ord, Hash, Default, Debug, Encodable, Decodable)]"}, {"sha": "309b5c4a03d57c3b3f0e1e95561720dc60129936", "filename": "src/test/ui-fulldeps/issue-14021.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/8c000a68c5988f6e04c74180d4c0107a996110db/src%2Ftest%2Fui-fulldeps%2Fissue-14021.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c000a68c5988f6e04c74180d4c0107a996110db/src%2Ftest%2Fui-fulldeps%2Fissue-14021.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fissue-14021.rs?ref=8c000a68c5988f6e04c74180d4c0107a996110db", "patch": "@@ -7,6 +7,11 @@\n extern crate rustc_macros;\n extern crate rustc_serialize;\n \n+// Necessary to pull in object code as the rest of the rustc crates are shipped only as rmeta\n+// files.\n+#[allow(unused_extern_crates)]\n+extern crate rustc_driver;\n+\n use rustc_macros::{Decodable, Encodable};\n use rustc_serialize::opaque::{MemDecoder, MemEncoder};\n use rustc_serialize::{Decodable, Encodable, Encoder};"}, {"sha": "654cd6f6dc9aae55a4465dd2007a1d7a9da4a8a5", "filename": "src/test/ui-fulldeps/missing-rustc-driver-error.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8c000a68c5988f6e04c74180d4c0107a996110db/src%2Ftest%2Fui-fulldeps%2Fmissing-rustc-driver-error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c000a68c5988f6e04c74180d4c0107a996110db/src%2Ftest%2Fui-fulldeps%2Fmissing-rustc-driver-error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fmissing-rustc-driver-error.rs?ref=8c000a68c5988f6e04c74180d4c0107a996110db", "patch": "@@ -1,6 +1,8 @@\n // Test that we get the following hint when trying to use a compiler crate without rustc_driver.\n // error-pattern: try adding `extern crate rustc_driver;` at the top level of this crate\n // compile-flags: --emit link\n+// The exactly list of required crates depends on the target. as such only test Unix targets.\n+// only-unix\n \n #![feature(rustc_private)]\n "}, {"sha": "ff1be0804151b58973c1a41c5616e7a3cc5f73df", "filename": "src/test/ui-fulldeps/mod_dir_path_canonicalized.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/8c000a68c5988f6e04c74180d4c0107a996110db/src%2Ftest%2Fui-fulldeps%2Fmod_dir_path_canonicalized.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c000a68c5988f6e04c74180d4c0107a996110db/src%2Ftest%2Fui-fulldeps%2Fmod_dir_path_canonicalized.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fmod_dir_path_canonicalized.rs?ref=8c000a68c5988f6e04c74180d4c0107a996110db", "patch": "@@ -10,6 +10,11 @@ extern crate rustc_parse;\n extern crate rustc_session;\n extern crate rustc_span;\n \n+// Necessary to pull in object code as the rest of the rustc crates are shipped only as rmeta\n+// files.\n+#[allow(unused_extern_crates)]\n+extern crate rustc_driver;\n+\n use rustc_parse::new_parser_from_file;\n use rustc_session::parse::ParseSess;\n use rustc_span::source_map::FilePathMapping;"}, {"sha": "6dbabc8eb348512d437c60bbd9aad8113017310e", "filename": "src/test/ui-fulldeps/pprust-expr-roundtrip.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/8c000a68c5988f6e04c74180d4c0107a996110db/src%2Ftest%2Fui-fulldeps%2Fpprust-expr-roundtrip.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c000a68c5988f6e04c74180d4c0107a996110db/src%2Ftest%2Fui-fulldeps%2Fpprust-expr-roundtrip.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fpprust-expr-roundtrip.rs?ref=8c000a68c5988f6e04c74180d4c0107a996110db", "patch": "@@ -27,6 +27,11 @@ extern crate rustc_session;\n extern crate rustc_span;\n extern crate thin_vec;\n \n+// Necessary to pull in object code as the rest of the rustc crates are shipped only as rmeta\n+// files.\n+#[allow(unused_extern_crates)]\n+extern crate rustc_driver;\n+\n use rustc_ast::mut_visit::{self, visit_clobber, MutVisitor};\n use rustc_ast::ptr::P;\n use rustc_ast::*;"}, {"sha": "63975ef62c591f422762d233682fd092b92a4e81", "filename": "src/test/ui-fulldeps/regions-mock-tcx.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/8c000a68c5988f6e04c74180d4c0107a996110db/src%2Ftest%2Fui-fulldeps%2Fregions-mock-tcx.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c000a68c5988f6e04c74180d4c0107a996110db/src%2Ftest%2Fui-fulldeps%2Fregions-mock-tcx.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fregions-mock-tcx.rs?ref=8c000a68c5988f6e04c74180d4c0107a996110db", "patch": "@@ -14,6 +14,11 @@\n extern crate rustc_arena;\n extern crate libc;\n \n+// Necessary to pull in object code as the rest of the rustc crates are shipped only as rmeta\n+// files.\n+#[allow(unused_extern_crates)]\n+extern crate rustc_driver;\n+\n use TypeStructure::{TypeInt, TypeFunction};\n use AstKind::{ExprInt, ExprVar, ExprLambda};\n use rustc_arena::TypedArena;"}, {"sha": "509a6b1d22ca61769fc0cc714e64b20cd3014db5", "filename": "src/test/ui-fulldeps/rustc_encodable_hygiene.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/8c000a68c5988f6e04c74180d4c0107a996110db/src%2Ftest%2Fui-fulldeps%2Frustc_encodable_hygiene.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c000a68c5988f6e04c74180d4c0107a996110db/src%2Ftest%2Fui-fulldeps%2Frustc_encodable_hygiene.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Frustc_encodable_hygiene.rs?ref=8c000a68c5988f6e04c74180d4c0107a996110db", "patch": "@@ -6,6 +6,11 @@ extern crate rustc_macros;\n #[allow(dead_code)]\n extern crate rustc_serialize;\n \n+// Necessary to pull in object code as the rest of the rustc crates are shipped only as rmeta\n+// files.\n+#[allow(unused_extern_crates)]\n+extern crate rustc_driver;\n+\n use rustc_macros::{Decodable, Encodable};\n \n #[derive(Decodable, Encodable, Debug)]"}, {"sha": "7024927b20561e81f78a432107f579afa683474c", "filename": "src/tools/miri/src/lib.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/8c000a68c5988f6e04c74180d4c0107a996110db/src%2Ftools%2Fmiri%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c000a68c5988f6e04c74180d4c0107a996110db/src%2Ftools%2Fmiri%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Fsrc%2Flib.rs?ref=8c000a68c5988f6e04c74180d4c0107a996110db", "patch": "@@ -54,6 +54,11 @@ extern crate rustc_session;\n extern crate rustc_span;\n extern crate rustc_target;\n \n+// Necessary to pull in object code as the rest of the rustc crates are shipped only as rmeta\n+// files.\n+#[allow(unused_extern_crates)]\n+extern crate rustc_driver;\n+\n mod borrow_tracker;\n mod clock;\n mod concurrency;"}, {"sha": "0c27bcacfb83ca73c77744e4ff02b6d640f63215", "filename": "src/tools/rustfmt/src/lib.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/8c000a68c5988f6e04c74180d4c0107a996110db/src%2Ftools%2Frustfmt%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c000a68c5988f6e04c74180d4c0107a996110db/src%2Ftools%2Frustfmt%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frustfmt%2Fsrc%2Flib.rs?ref=8c000a68c5988f6e04c74180d4c0107a996110db", "patch": "@@ -24,6 +24,11 @@ extern crate rustc_parse;\n extern crate rustc_session;\n extern crate rustc_span;\n \n+// Necessary to pull in object code as the rest of the rustc crates are shipped only as rmeta\n+// files.\n+#[allow(unused_extern_crates)]\n+extern crate rustc_driver;\n+\n use std::cell::RefCell;\n use std::collections::HashMap;\n use std::fmt;"}]}