{"sha": "6a0d37b69c6c32c4dcd2df85f0cd4df156d46b5a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZhMGQzN2I2OWM2YzMyYzRkY2QyZGY4NWYwY2Q0ZGYxNTZkNDZiNWE=", "commit": {"author": {"name": "Wesley Wiser", "email": "wwiser@gmail.com", "date": "2018-06-05T02:43:27Z"}, "committer": {"name": "Wesley Wiser", "email": "wwiser@gmail.com", "date": "2018-08-02T22:57:24Z"}, "message": "Fix some missed query data", "tree": {"sha": "de5f3c2f25142c333aee9773c04ef03992cef111", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/de5f3c2f25142c333aee9773c04ef03992cef111"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6a0d37b69c6c32c4dcd2df85f0cd4df156d46b5a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6a0d37b69c6c32c4dcd2df85f0cd4df156d46b5a", "html_url": "https://github.com/rust-lang/rust/commit/6a0d37b69c6c32c4dcd2df85f0cd4df156d46b5a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6a0d37b69c6c32c4dcd2df85f0cd4df156d46b5a/comments", "author": {"login": "wesleywiser", "id": 831192, "node_id": "MDQ6VXNlcjgzMTE5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/831192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesleywiser", "html_url": "https://github.com/wesleywiser", "followers_url": "https://api.github.com/users/wesleywiser/followers", "following_url": "https://api.github.com/users/wesleywiser/following{/other_user}", "gists_url": "https://api.github.com/users/wesleywiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesleywiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesleywiser/subscriptions", "organizations_url": "https://api.github.com/users/wesleywiser/orgs", "repos_url": "https://api.github.com/users/wesleywiser/repos", "events_url": "https://api.github.com/users/wesleywiser/events{/privacy}", "received_events_url": "https://api.github.com/users/wesleywiser/received_events", "type": "User", "site_admin": false}, "committer": {"login": "wesleywiser", "id": 831192, "node_id": "MDQ6VXNlcjgzMTE5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/831192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesleywiser", "html_url": "https://github.com/wesleywiser", "followers_url": "https://api.github.com/users/wesleywiser/followers", "following_url": "https://api.github.com/users/wesleywiser/following{/other_user}", "gists_url": "https://api.github.com/users/wesleywiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesleywiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesleywiser/subscriptions", "organizations_url": "https://api.github.com/users/wesleywiser/orgs", "repos_url": "https://api.github.com/users/wesleywiser/repos", "events_url": "https://api.github.com/users/wesleywiser/events{/privacy}", "received_events_url": "https://api.github.com/users/wesleywiser/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0f43800d10efd4e6255d375dad00be6b8ab6b5d7", "url": "https://api.github.com/repos/rust-lang/rust/commits/0f43800d10efd4e6255d375dad00be6b8ab6b5d7", "html_url": "https://github.com/rust-lang/rust/commit/0f43800d10efd4e6255d375dad00be6b8ab6b5d7"}], "stats": {"total": 7, "additions": 3, "deletions": 4}, "files": [{"sha": "2b0cdccd51afc2e7ac31a9f64f478a08fa3f94af", "filename": "src/librustc/ty/query/plumbing.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/6a0d37b69c6c32c4dcd2df85f0cd4df156d46b5a/src%2Flibrustc%2Fty%2Fquery%2Fplumbing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a0d37b69c6c32c4dcd2df85f0cd4df156d46b5a/src%2Flibrustc%2Fty%2Fquery%2Fplumbing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fquery%2Fplumbing.rs?ref=6a0d37b69c6c32c4dcd2df85f0cd4df156d46b5a", "patch": "@@ -363,6 +363,8 @@ impl<'a, 'gcx, 'tcx> TyCtxt<'a, 'gcx, 'tcx> {\n             )\n         );\n \n+        self.sess.profiler(|p| p.record_query(Q::CATEGORY));\n+\n         let job = match JobOwner::try_get(self, span, &key) {\n             TryGetJob::NotYetStarted(job) => job,\n             TryGetJob::JobCompleted(result) => {\n@@ -384,10 +386,7 @@ impl<'a, 'gcx, 'tcx> TyCtxt<'a, 'gcx, 'tcx> {\n \n         if dep_node.kind.is_anon() {\n             profq_msg!(self, ProfileQueriesMsg::ProviderBegin);\n-            self.sess.profiler(|p| {\n-                p.start_activity(Q::CATEGORY);\n-                p.record_query(Q::CATEGORY);\n-            });\n+            self.sess.profiler(|p| p.start_activity(Q::CATEGORY));\n \n             let res = job.start(self, |tcx| {\n                 tcx.dep_graph.with_anon_task(dep_node.kind, || {"}]}