{"sha": "d18b405faf09514febc4163d96e85e57e137df81", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQxOGI0MDVmYWYwOTUxNGZlYmM0MTYzZDk2ZTg1ZTU3ZTEzN2RmODE=", "commit": {"author": {"name": "Seo Sanghyeon", "email": "sanxiyn@gmail.com", "date": "2015-04-07T15:45:57Z"}, "committer": {"name": "Seo Sanghyeon", "email": "sanxiyn@gmail.com", "date": "2015-04-07T15:45:57Z"}, "message": "Check casts from fat pointer", "tree": {"sha": "a81b1eb65722e34ef2201cd3542c3928028617d1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a81b1eb65722e34ef2201cd3542c3928028617d1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d18b405faf09514febc4163d96e85e57e137df81", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d18b405faf09514febc4163d96e85e57e137df81", "html_url": "https://github.com/rust-lang/rust/commit/d18b405faf09514febc4163d96e85e57e137df81", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d18b405faf09514febc4163d96e85e57e137df81/comments", "author": {"login": "sanxiyn", "id": 45249, "node_id": "MDQ6VXNlcjQ1MjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/45249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanxiyn", "html_url": "https://github.com/sanxiyn", "followers_url": "https://api.github.com/users/sanxiyn/followers", "following_url": "https://api.github.com/users/sanxiyn/following{/other_user}", "gists_url": "https://api.github.com/users/sanxiyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanxiyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanxiyn/subscriptions", "organizations_url": "https://api.github.com/users/sanxiyn/orgs", "repos_url": "https://api.github.com/users/sanxiyn/repos", "events_url": "https://api.github.com/users/sanxiyn/events{/privacy}", "received_events_url": "https://api.github.com/users/sanxiyn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sanxiyn", "id": 45249, "node_id": "MDQ6VXNlcjQ1MjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/45249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanxiyn", "html_url": "https://github.com/sanxiyn", "followers_url": "https://api.github.com/users/sanxiyn/followers", "following_url": "https://api.github.com/users/sanxiyn/following{/other_user}", "gists_url": "https://api.github.com/users/sanxiyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanxiyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanxiyn/subscriptions", "organizations_url": "https://api.github.com/users/sanxiyn/orgs", "repos_url": "https://api.github.com/users/sanxiyn/repos", "events_url": "https://api.github.com/users/sanxiyn/events{/privacy}", "received_events_url": "https://api.github.com/users/sanxiyn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f4c2228be05887aeaee741c37715f6a1f2b51a5d", "url": "https://api.github.com/repos/rust-lang/rust/commits/f4c2228be05887aeaee741c37715f6a1f2b51a5d", "html_url": "https://github.com/rust-lang/rust/commit/f4c2228be05887aeaee741c37715f6a1f2b51a5d"}], "stats": {"total": 29, "additions": 29, "deletions": 0}, "files": [{"sha": "045b88e2357cdfab2a38d092d34353e47d2f0a58", "filename": "src/librustc_typeck/check/cast.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/d18b405faf09514febc4163d96e85e57e137df81/src%2Flibrustc_typeck%2Fcheck%2Fcast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d18b405faf09514febc4163d96e85e57e137df81/src%2Flibrustc_typeck%2Fcheck%2Fcast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fcast.rs?ref=d18b405faf09514febc4163d96e85e57e137df81", "patch": "@@ -170,6 +170,11 @@ pub fn check_cast<'a, 'tcx>(fcx: &FnCtxt<'a, 'tcx>, cast: &CastCheck<'tcx>) {\n                 demand::coerce(fcx, e.span, t_1, &e);\n             }\n         }\n+    } else if fcx.type_is_fat_ptr(t_e, span) && !fcx.type_is_fat_ptr(t_1, span) {\n+        fcx.type_error_message(span, |actual| {\n+            format!(\"illegal cast; cast from fat pointer: `{}` as `{}`\",\n+                    actual, fcx.infcx().ty_to_string(t_1))\n+        }, t_e, None);\n     } else if !(t_e_is_scalar && t_1_is_trivial) {\n         /*\n         If more type combinations should be supported than are"}, {"sha": "cab6f76d0271b3006e96b37a46f4bf7f470b86ec", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/d18b405faf09514febc4163d96e85e57e137df81/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d18b405faf09514febc4163d96e85e57e137df81/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=d18b405faf09514febc4163d96e85e57e137df81", "patch": "@@ -1559,6 +1559,16 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                                                  span)\n     }\n \n+    pub fn type_is_fat_ptr(&self, ty: Ty<'tcx>, span: Span) -> bool {\n+        match ty.sty {\n+            ty::ty_ptr(ty::mt { ty: t, .. }) |\n+            ty::ty_rptr(_, ty::mt { ty: t, .. }) => {\n+                !self.type_is_known_to_be_sized(t, span)\n+            }\n+            _ => false\n+        }\n+    }\n+\n     pub fn register_builtin_bound(&self,\n                                   ty: Ty<'tcx>,\n                                   builtin_bound: ty::BuiltinBound,"}, {"sha": "839ebbd279a997bdae6fbf851294b7b24ff80ad2", "filename": "src/test/compile-fail/fat-ptr-cast.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/d18b405faf09514febc4163d96e85e57e137df81/src%2Ftest%2Fcompile-fail%2Ffat-ptr-cast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d18b405faf09514febc4163d96e85e57e137df81/src%2Ftest%2Fcompile-fail%2Ffat-ptr-cast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffat-ptr-cast.rs?ref=d18b405faf09514febc4163d96e85e57e137df81", "patch": "@@ -0,0 +1,14 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn main() {\n+    let a: &[i32] = &[1, 2, 3];\n+    a as *const [i32] as usize; //~ ERROR cast from fat pointer\n+}"}]}