{"sha": "b16bd7c3e27c655d9aeb645743dbe7ce25d567f4", "node_id": "C_kwDOAAsO6NoAKGIxNmJkN2MzZTI3YzY1NWQ5YWViNjQ1NzQzZGJlN2NlMjVkNTY3ZjQ", "commit": {"author": {"name": "Jack Huey", "email": "31162821+jackh726@users.noreply.github.com", "date": "2022-05-22T04:26:21Z"}, "committer": {"name": "Jack Huey", "email": "31162821+jackh726@users.noreply.github.com", "date": "2022-05-22T19:21:27Z"}, "message": "Use revisions for NLL in traits", "tree": {"sha": "5cb74027a873c03df06974521728538e5c0cc433", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5cb74027a873c03df06974521728538e5c0cc433"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b16bd7c3e27c655d9aeb645743dbe7ce25d567f4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b16bd7c3e27c655d9aeb645743dbe7ce25d567f4", "html_url": "https://github.com/rust-lang/rust/commit/b16bd7c3e27c655d9aeb645743dbe7ce25d567f4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b16bd7c3e27c655d9aeb645743dbe7ce25d567f4/comments", "author": {"login": "jackh726", "id": 31162821, "node_id": "MDQ6VXNlcjMxMTYyODIx", "avatar_url": "https://avatars.githubusercontent.com/u/31162821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackh726", "html_url": "https://github.com/jackh726", "followers_url": "https://api.github.com/users/jackh726/followers", "following_url": "https://api.github.com/users/jackh726/following{/other_user}", "gists_url": "https://api.github.com/users/jackh726/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackh726/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackh726/subscriptions", "organizations_url": "https://api.github.com/users/jackh726/orgs", "repos_url": "https://api.github.com/users/jackh726/repos", "events_url": "https://api.github.com/users/jackh726/events{/privacy}", "received_events_url": "https://api.github.com/users/jackh726/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jackh726", "id": 31162821, "node_id": "MDQ6VXNlcjMxMTYyODIx", "avatar_url": "https://avatars.githubusercontent.com/u/31162821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackh726", "html_url": "https://github.com/jackh726", "followers_url": "https://api.github.com/users/jackh726/followers", "following_url": "https://api.github.com/users/jackh726/following{/other_user}", "gists_url": "https://api.github.com/users/jackh726/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackh726/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackh726/subscriptions", "organizations_url": "https://api.github.com/users/jackh726/orgs", "repos_url": "https://api.github.com/users/jackh726/repos", "events_url": "https://api.github.com/users/jackh726/events{/privacy}", "received_events_url": "https://api.github.com/users/jackh726/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "34a3154bd9ba92360966fd942df17eb11c7baca7", "url": "https://api.github.com/repos/rust-lang/rust/commits/34a3154bd9ba92360966fd942df17eb11c7baca7", "html_url": "https://github.com/rust-lang/rust/commit/34a3154bd9ba92360966fd942df17eb11c7baca7"}], "stats": {"total": 136, "additions": 110, "deletions": 26}, "files": [{"sha": "e1831c5617fcf2bbfa5342ec9a6a11c4eee9ca53", "filename": "src/test/ui/traits/trait-upcasting/type-checking-test-3.base.stderr", "status": "renamed", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b16bd7c3e27c655d9aeb645743dbe7ce25d567f4/src%2Ftest%2Fui%2Ftraits%2Ftrait-upcasting%2Ftype-checking-test-3.base.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b16bd7c3e27c655d9aeb645743dbe7ce25d567f4/src%2Ftest%2Fui%2Ftraits%2Ftrait-upcasting%2Ftype-checking-test-3.base.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Ftrait-upcasting%2Ftype-checking-test-3.base.stderr?ref=b16bd7c3e27c655d9aeb645743dbe7ce25d567f4", "patch": "@@ -1,28 +1,28 @@\n error[E0308]: mismatched types\n-  --> $DIR/type-checking-test-3.rs:13:13\n+  --> $DIR/type-checking-test-3.rs:16:13\n    |\n LL |     let _ = x as &dyn Bar<'a>; // Error\n    |             ^ lifetime mismatch\n    |\n    = note: expected trait object `dyn Bar<'a>`\n               found trait object `dyn Bar<'static>`\n note: the lifetime `'a` as defined here...\n-  --> $DIR/type-checking-test-3.rs:12:16\n+  --> $DIR/type-checking-test-3.rs:15:16\n    |\n LL | fn test_wrong1<'a>(x: &dyn Foo<'static>, y: &'a u32) {\n    |                ^^\n    = note: ...does not necessarily outlive the static lifetime\n \n error[E0308]: mismatched types\n-  --> $DIR/type-checking-test-3.rs:18:13\n+  --> $DIR/type-checking-test-3.rs:22:13\n    |\n LL |     let _ = x as &dyn Bar<'static>; // Error\n    |             ^ lifetime mismatch\n    |\n    = note: expected trait object `dyn Bar<'static>`\n               found trait object `dyn Bar<'a>`\n note: the lifetime `'a` as defined here...\n-  --> $DIR/type-checking-test-3.rs:17:16\n+  --> $DIR/type-checking-test-3.rs:21:16\n    |\n LL | fn test_wrong2<'a>(x: &dyn Foo<'a>) {\n    |                ^^", "previous_filename": "src/test/ui/traits/trait-upcasting/type-checking-test-3.stderr"}, {"sha": "983027d9b164bfb0051d4a7b977136b9651abe7f", "filename": "src/test/ui/traits/trait-upcasting/type-checking-test-3.nll.stderr", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/b16bd7c3e27c655d9aeb645743dbe7ce25d567f4/src%2Ftest%2Fui%2Ftraits%2Ftrait-upcasting%2Ftype-checking-test-3.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b16bd7c3e27c655d9aeb645743dbe7ce25d567f4/src%2Ftest%2Fui%2Ftraits%2Ftrait-upcasting%2Ftype-checking-test-3.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Ftrait-upcasting%2Ftype-checking-test-3.nll.stderr?ref=b16bd7c3e27c655d9aeb645743dbe7ce25d567f4", "patch": "@@ -0,0 +1,18 @@\n+error: lifetime may not live long enough\n+  --> $DIR/type-checking-test-3.rs:16:13\n+   |\n+LL | fn test_wrong1<'a>(x: &dyn Foo<'static>, y: &'a u32) {\n+   |                -- lifetime `'a` defined here\n+LL |     let _ = x as &dyn Bar<'a>; // Error\n+   |             ^^^^^^^^^^^^^^^^^ type annotation requires that `'a` must outlive `'static`\n+\n+error: lifetime may not live long enough\n+  --> $DIR/type-checking-test-3.rs:22:13\n+   |\n+LL | fn test_wrong2<'a>(x: &dyn Foo<'a>) {\n+   |                -- lifetime `'a` defined here\n+LL |     let _ = x as &dyn Bar<'static>; // Error\n+   |             ^^^^^^^^^^^^^^^^^^^^^^ type annotation requires that `'a` must outlive `'static`\n+\n+error: aborting due to 2 previous errors\n+"}, {"sha": "89e8821d34e698025ccb0f5421af19e5ea500a46", "filename": "src/test/ui/traits/trait-upcasting/type-checking-test-3.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/b16bd7c3e27c655d9aeb645743dbe7ce25d567f4/src%2Ftest%2Fui%2Ftraits%2Ftrait-upcasting%2Ftype-checking-test-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b16bd7c3e27c655d9aeb645743dbe7ce25d567f4/src%2Ftest%2Fui%2Ftraits%2Ftrait-upcasting%2Ftype-checking-test-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Ftrait-upcasting%2Ftype-checking-test-3.rs?ref=b16bd7c3e27c655d9aeb645743dbe7ce25d567f4", "patch": "@@ -1,4 +1,7 @@\n+// revisions: base nll\n // ignore-compare-mode-nll\n+//[nll] compile-flags: -Z borrowck=mir\n+\n #![feature(trait_upcasting)]\n #![allow(incomplete_features)]\n \n@@ -11,12 +14,14 @@ fn test_correct(x: &dyn Foo<'static>) {\n \n fn test_wrong1<'a>(x: &dyn Foo<'static>, y: &'a u32) {\n     let _ = x as &dyn Bar<'a>; // Error\n-                               //~^ ERROR mismatched types\n+    //[base]~^ ERROR mismatched types\n+    //[nll]~^^ ERROR lifetime may not live long enough\n }\n \n fn test_wrong2<'a>(x: &dyn Foo<'a>) {\n     let _ = x as &dyn Bar<'static>; // Error\n-                                    //~^ ERROR mismatched types\n+    //[base]~^ ERROR mismatched types\n+    //[nll]~^^ ERROR lifetime may not live long enough\n }\n \n fn main() {}"}, {"sha": "c343698f27fb5b45c5577262236939b99a1d3191", "filename": "src/test/ui/traits/trait-upcasting/type-checking-test-4.base.stderr", "status": "renamed", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/b16bd7c3e27c655d9aeb645743dbe7ce25d567f4/src%2Ftest%2Fui%2Ftraits%2Ftrait-upcasting%2Ftype-checking-test-4.base.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b16bd7c3e27c655d9aeb645743dbe7ce25d567f4/src%2Ftest%2Fui%2Ftraits%2Ftrait-upcasting%2Ftype-checking-test-4.base.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Ftrait-upcasting%2Ftype-checking-test-4.base.stderr?ref=b16bd7c3e27c655d9aeb645743dbe7ce25d567f4", "patch": "@@ -1,35 +1,35 @@\n error[E0308]: mismatched types\n-  --> $DIR/type-checking-test-4.rs:17:13\n+  --> $DIR/type-checking-test-4.rs:20:13\n    |\n LL |     let _ = x as &dyn Bar<'static, 'a>; // Error\n    |             ^ lifetime mismatch\n    |\n    = note: expected trait object `dyn Bar<'static, 'a>`\n               found trait object `dyn Bar<'static, 'static>`\n note: the lifetime `'a` as defined here...\n-  --> $DIR/type-checking-test-4.rs:16:16\n+  --> $DIR/type-checking-test-4.rs:19:16\n    |\n LL | fn test_wrong1<'a>(x: &dyn Foo<'static>, y: &'a u32) {\n    |                ^^\n    = note: ...does not necessarily outlive the static lifetime\n \n error[E0308]: mismatched types\n-  --> $DIR/type-checking-test-4.rs:22:13\n+  --> $DIR/type-checking-test-4.rs:26:13\n    |\n LL |     let _ = x as &dyn Bar<'a, 'static>; // Error\n    |             ^ lifetime mismatch\n    |\n    = note: expected trait object `dyn Bar<'a, 'static>`\n               found trait object `dyn Bar<'static, 'static>`\n note: the lifetime `'a` as defined here...\n-  --> $DIR/type-checking-test-4.rs:21:16\n+  --> $DIR/type-checking-test-4.rs:25:16\n    |\n LL | fn test_wrong2<'a>(x: &dyn Foo<'static>, y: &'a u32) {\n    |                ^^\n    = note: ...does not necessarily outlive the static lifetime\n \n error[E0759]: `x` has lifetime `'a` but it needs to satisfy a `'static` lifetime requirement\n-  --> $DIR/type-checking-test-4.rs:27:27\n+  --> $DIR/type-checking-test-4.rs:32:27\n    |\n LL | fn test_wrong3<'a>(x: &dyn Foo<'a>) -> Option<&'static u32> {\n    |                       ------------ this data with lifetime `'a`...\n@@ -42,12 +42,12 @@ LL |     y.get_b() // ERROR\n    |     - ...is used here...\n    |\n note: ...and is required to live as long as `'static` here\n-  --> $DIR/type-checking-test-4.rs:29:5\n+  --> $DIR/type-checking-test-4.rs:34:5\n    |\n LL |     y.get_b() // ERROR\n    |     ^^^^^^^^^\n note: `'static` lifetime requirement introduced by the return type\n-  --> $DIR/type-checking-test-4.rs:26:48\n+  --> $DIR/type-checking-test-4.rs:31:48\n    |\n LL | fn test_wrong3<'a>(x: &dyn Foo<'a>) -> Option<&'static u32> {\n    |                                                ^^^^^^^ `'static` requirement introduced here\n@@ -56,39 +56,39 @@ LL |     y.get_b() // ERROR\n    |     --------- because of this returned expression\n \n error[E0759]: `x` has lifetime `'a` but it needs to satisfy a `'static` lifetime requirement\n-  --> $DIR/type-checking-test-4.rs:33:5\n+  --> $DIR/type-checking-test-4.rs:39:5\n    |\n LL | fn test_wrong4<'a>(x: &dyn Foo<'a>) -> Option<&'static u32> {\n    |                       ------------ this data with lifetime `'a`...\n LL |     <_ as Bar>::get_b(x) // ERROR\n    |     ^^^^^^^^^^^^^^^^^ ...is used and required to live as long as `'static` here\n    |\n note: `'static` lifetime requirement introduced by the return type\n-  --> $DIR/type-checking-test-4.rs:32:48\n+  --> $DIR/type-checking-test-4.rs:38:48\n    |\n LL | fn test_wrong4<'a>(x: &dyn Foo<'a>) -> Option<&'static u32> {\n    |                                                ^^^^^^^ `'static` requirement introduced here\n LL |     <_ as Bar>::get_b(x) // ERROR\n    |     -------------------- because of this returned expression\n \n error[E0759]: `x` has lifetime `'a` but it needs to satisfy a `'static` lifetime requirement\n-  --> $DIR/type-checking-test-4.rs:38:15\n+  --> $DIR/type-checking-test-4.rs:45:15\n    |\n LL | fn test_wrong5<'a>(x: &dyn Foo<'a>) -> Option<&'static u32> {\n    |                       ------------ this data with lifetime `'a`...\n LL |     <_ as Bar<'_, '_>>::get_b(x) // ERROR\n    |     ----------^^------------- ...is used and required to live as long as `'static` here\n    |\n note: `'static` lifetime requirement introduced by the return type\n-  --> $DIR/type-checking-test-4.rs:37:48\n+  --> $DIR/type-checking-test-4.rs:44:48\n    |\n LL | fn test_wrong5<'a>(x: &dyn Foo<'a>) -> Option<&'static u32> {\n    |                                                ^^^^^^^ `'static` requirement introduced here\n LL |     <_ as Bar<'_, '_>>::get_b(x) // ERROR\n    |     ---------------------------- because of this returned expression\n \n error[E0759]: `x` has lifetime `'a` but it needs to satisfy a `'static` lifetime requirement\n-  --> $DIR/type-checking-test-4.rs:43:27\n+  --> $DIR/type-checking-test-4.rs:51:27\n    |\n LL | fn test_wrong6<'a>(x: &dyn Foo<'a>) -> Option<&'static u32> {\n    |                       ------------ this data with lifetime `'a`...\n@@ -104,12 +104,12 @@ LL |     z.get_b() // ERROR\n    |     - ...is used here...\n    |\n note: ...and is required to live as long as `'static` here\n-  --> $DIR/type-checking-test-4.rs:47:5\n+  --> $DIR/type-checking-test-4.rs:55:5\n    |\n LL |     z.get_b() // ERROR\n    |     ^^^^^^^^^\n note: `'static` lifetime requirement introduced by the return type\n-  --> $DIR/type-checking-test-4.rs:42:48\n+  --> $DIR/type-checking-test-4.rs:50:48\n    |\n LL | fn test_wrong6<'a>(x: &dyn Foo<'a>) -> Option<&'static u32> {\n    |                                                ^^^^^^^ `'static` requirement introduced here", "previous_filename": "src/test/ui/traits/trait-upcasting/type-checking-test-4.stderr"}, {"sha": "9b69bab56aec3f139bb974c5c2c4a17a60ee08eb", "filename": "src/test/ui/traits/trait-upcasting/type-checking-test-4.nll.stderr", "status": "added", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/b16bd7c3e27c655d9aeb645743dbe7ce25d567f4/src%2Ftest%2Fui%2Ftraits%2Ftrait-upcasting%2Ftype-checking-test-4.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b16bd7c3e27c655d9aeb645743dbe7ce25d567f4/src%2Ftest%2Fui%2Ftraits%2Ftrait-upcasting%2Ftype-checking-test-4.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Ftrait-upcasting%2Ftype-checking-test-4.nll.stderr?ref=b16bd7c3e27c655d9aeb645743dbe7ce25d567f4", "patch": "@@ -0,0 +1,52 @@\n+error: lifetime may not live long enough\n+  --> $DIR/type-checking-test-4.rs:20:13\n+   |\n+LL | fn test_wrong1<'a>(x: &dyn Foo<'static>, y: &'a u32) {\n+   |                -- lifetime `'a` defined here\n+LL |     let _ = x as &dyn Bar<'static, 'a>; // Error\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^ type annotation requires that `'a` must outlive `'static`\n+\n+error: lifetime may not live long enough\n+  --> $DIR/type-checking-test-4.rs:26:13\n+   |\n+LL | fn test_wrong2<'a>(x: &dyn Foo<'static>, y: &'a u32) {\n+   |                -- lifetime `'a` defined here\n+LL |     let _ = x as &dyn Bar<'a, 'static>; // Error\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^ type annotation requires that `'a` must outlive `'static`\n+\n+error: lifetime may not live long enough\n+  --> $DIR/type-checking-test-4.rs:34:5\n+   |\n+LL | fn test_wrong3<'a>(x: &dyn Foo<'a>) -> Option<&'static u32> {\n+   |                -- lifetime `'a` defined here\n+...\n+LL |     y.get_b() // ERROR\n+   |     ^^^^^^^^^ returning this value requires that `'a` must outlive `'static`\n+\n+error: lifetime may not live long enough\n+  --> $DIR/type-checking-test-4.rs:39:5\n+   |\n+LL | fn test_wrong4<'a>(x: &dyn Foo<'a>) -> Option<&'static u32> {\n+   |                -- lifetime `'a` defined here\n+LL |     <_ as Bar>::get_b(x) // ERROR\n+   |     ^^^^^^^^^^^^^^^^^^^^ returning this value requires that `'a` must outlive `'static`\n+\n+error: lifetime may not live long enough\n+  --> $DIR/type-checking-test-4.rs:45:5\n+   |\n+LL | fn test_wrong5<'a>(x: &dyn Foo<'a>) -> Option<&'static u32> {\n+   |                -- lifetime `'a` defined here\n+LL |     <_ as Bar<'_, '_>>::get_b(x) // ERROR\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ returning this value requires that `'a` must outlive `'static`\n+\n+error: lifetime may not live long enough\n+  --> $DIR/type-checking-test-4.rs:55:5\n+   |\n+LL | fn test_wrong6<'a>(x: &dyn Foo<'a>) -> Option<&'static u32> {\n+   |                -- lifetime `'a` defined here\n+...\n+LL |     z.get_b() // ERROR\n+   |     ^^^^^^^^^ returning this value requires that `'a` must outlive `'static`\n+\n+error: aborting due to 6 previous errors\n+"}, {"sha": "575d60a5e56d4d36a5460f062ac6e91dde07d493", "filename": "src/test/ui/traits/trait-upcasting/type-checking-test-4.rs", "status": "modified", "additions": 15, "deletions": 6, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/b16bd7c3e27c655d9aeb645743dbe7ce25d567f4/src%2Ftest%2Fui%2Ftraits%2Ftrait-upcasting%2Ftype-checking-test-4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b16bd7c3e27c655d9aeb645743dbe7ce25d567f4/src%2Ftest%2Fui%2Ftraits%2Ftrait-upcasting%2Ftype-checking-test-4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Ftrait-upcasting%2Ftype-checking-test-4.rs?ref=b16bd7c3e27c655d9aeb645743dbe7ce25d567f4", "patch": "@@ -1,4 +1,7 @@\n+// revisions: base nll\n // ignore-compare-mode-nll\n+//[nll] compile-flags: -Z borrowck=mir\n+\n #![feature(trait_upcasting)]\n #![allow(incomplete_features)]\n \n@@ -15,36 +18,42 @@ fn test_correct(x: &dyn Foo<'static>) {\n \n fn test_wrong1<'a>(x: &dyn Foo<'static>, y: &'a u32) {\n     let _ = x as &dyn Bar<'static, 'a>; // Error\n-                                        //~^ ERROR mismatched types\n+    //[base]~^ ERROR mismatched types\n+    //[nll]~^^ ERROR lifetime may not live long enough\n }\n \n fn test_wrong2<'a>(x: &dyn Foo<'static>, y: &'a u32) {\n     let _ = x as &dyn Bar<'a, 'static>; // Error\n-                                        //~^ ERROR mismatched types\n+    //[base]~^ ERROR mismatched types\n+    //[nll]~^^ ERROR lifetime may not live long enough\n }\n \n fn test_wrong3<'a>(x: &dyn Foo<'a>) -> Option<&'static u32> {\n     let y = x as &dyn Bar<'_, '_>;\n-    //~^ ERROR `x` has lifetime `'a` but it needs to satisfy a `'static` lifetime requirement\n+    //[base]~^ ERROR `x` has lifetime `'a` but it needs to satisfy a `'static` lifetime requirement\n     y.get_b() // ERROR\n+    //[nll]~^ ERROR lifetime may not live long enough\n }\n \n fn test_wrong4<'a>(x: &dyn Foo<'a>) -> Option<&'static u32> {\n     <_ as Bar>::get_b(x) // ERROR\n-    //~^ ERROR `x` has lifetime `'a` but it needs to satisfy a `'static` lifetime requirement\n+    //[base]~^ ERROR `x` has lifetime `'a` but it needs to satisfy a `'static` lifetime requirement\n+    //[nll]~^^ ERROR lifetime may not live long enough\n }\n \n fn test_wrong5<'a>(x: &dyn Foo<'a>) -> Option<&'static u32> {\n     <_ as Bar<'_, '_>>::get_b(x) // ERROR\n-    //~^ ERROR `x` has lifetime `'a` but it needs to satisfy a `'static` lifetime requirement\n+    //[base]~^ ERROR `x` has lifetime `'a` but it needs to satisfy a `'static` lifetime requirement\n+    //[nll]~^^ ERROR lifetime may not live long enough\n }\n \n fn test_wrong6<'a>(x: &dyn Foo<'a>) -> Option<&'static u32> {\n     let y = x as &dyn Bar<'_, '_>;\n-    //~^ ERROR `x` has lifetime `'a` but it needs to satisfy a `'static` lifetime requirement\n+    //[base]~^ ERROR `x` has lifetime `'a` but it needs to satisfy a `'static` lifetime requirement\n     y.get_b(); // ERROR\n     let z = y;\n     z.get_b() // ERROR\n+    //[nll]~^ ERROR lifetime may not live long enough\n }\n \n fn main() {}"}]}