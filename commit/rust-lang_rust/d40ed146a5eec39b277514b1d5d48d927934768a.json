{"sha": "d40ed146a5eec39b277514b1d5d48d927934768a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ0MGVkMTQ2YTVlZWMzOWIyNzc1MTRiMWQ1ZDQ4ZDkyNzkzNDc2OGE=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seiichi.uchida@dena.com", "date": "2018-07-20T07:18:45Z"}, "committer": {"name": "Seiichi Uchida", "email": "seiichi.uchida@dena.com", "date": "2018-07-20T07:18:45Z"}, "message": "Fix breaking changes\n\ncc https://github.com/rust-lang/rust/pull/51829.", "tree": {"sha": "1565978f112927f08afeb681414adea27b0bf248", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1565978f112927f08afeb681414adea27b0bf248"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d40ed146a5eec39b277514b1d5d48d927934768a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d40ed146a5eec39b277514b1d5d48d927934768a", "html_url": "https://github.com/rust-lang/rust/commit/d40ed146a5eec39b277514b1d5d48d927934768a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d40ed146a5eec39b277514b1d5d48d927934768a/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "52f9f7bbe25f8eff504b4f9f29f2f13b10837685", "url": "https://api.github.com/repos/rust-lang/rust/commits/52f9f7bbe25f8eff504b4f9f29f2f13b10837685", "html_url": "https://github.com/rust-lang/rust/commit/52f9f7bbe25f8eff504b4f9f29f2f13b10837685"}], "stats": {"total": 45, "additions": 39, "deletions": 6}, "files": [{"sha": "783ca1c029b1cb66477fbd8e724fbc0456861332", "filename": "src/closures.rs", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/d40ed146a5eec39b277514b1d5d48d927934768a/src%2Fclosures.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d40ed146a5eec39b277514b1d5d48d927934768a/src%2Fclosures.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fclosures.rs?ref=d40ed146a5eec39b277514b1d5d48d927934768a", "patch": "@@ -118,6 +118,22 @@ fn needs_block(block: &ast::Block, prefix: &str, context: &RewriteContext) -> bo\n         || prefix.contains('\\n')\n }\n \n+fn veto_block(e: &ast::Expr) -> bool {\n+    match e.node {\n+        ast::ExprKind::Call(..)\n+        | ast::ExprKind::Binary(..)\n+        | ast::ExprKind::Cast(..)\n+        | ast::ExprKind::Type(..)\n+        | ast::ExprKind::Assign(..)\n+        | ast::ExprKind::AssignOp(..)\n+        | ast::ExprKind::Field(..)\n+        | ast::ExprKind::Index(..)\n+        | ast::ExprKind::Range(..)\n+        | ast::ExprKind::Try(..) => true,\n+        _ => false,\n+    }\n+}\n+\n // Rewrite closure with a single expression wrapping its body with block.\n fn rewrite_closure_with_block(\n     body: &ast::Expr,\n@@ -126,7 +142,7 @@ fn rewrite_closure_with_block(\n     shape: Shape,\n ) -> Option<String> {\n     let left_most = left_most_sub_expr(body);\n-    let veto_block = left_most != body && !classify::expr_requires_semi_to_be_stmt(left_most);\n+    let veto_block = veto_block(body) && !classify::expr_requires_semi_to_be_stmt(left_most);\n     if veto_block {\n         return None;\n     }"}, {"sha": "79d0641504ef23a57accc813abb4a6e31821dc49", "filename": "src/imports.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/d40ed146a5eec39b277514b1d5d48d927934768a/src%2Fimports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d40ed146a5eec39b277514b1d5d48d927934768a/src%2Fimports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fimports.rs?ref=d40ed146a5eec39b277514b1d5d48d927934768a", "patch": "@@ -21,7 +21,7 @@ use lists::{definitive_tactic, itemize_list, write_list, ListFormatting, ListIte\n use rewrite::{Rewrite, RewriteContext};\n use shape::Shape;\n use spanned::Spanned;\n-use utils::{mk_sp, rewrite_ident};\n+use utils::{is_same_visibility, mk_sp, rewrite_ident};\n use visitor::FmtVisitor;\n \n use std::borrow::Cow;\n@@ -485,10 +485,7 @@ impl UseTree {\n                 }),\n             )\n             | (None, None) => true,\n-            (\n-                Some(codemap::Spanned { node: lnode, .. }),\n-                Some(codemap::Spanned { node: rnode, .. }),\n-            ) => lnode == rnode,\n+            (Some(ref a), Some(ref b)) => is_same_visibility(a, b),\n             _ => false,\n         }\n     }"}, {"sha": "f1b0582b1200f539cc433c6751ee8ab0bea2bc95", "filename": "src/utils.rs", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/d40ed146a5eec39b277514b1d5d48d927934768a/src%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d40ed146a5eec39b277514b1d5d48d927934768a/src%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Futils.rs?ref=d40ed146a5eec39b277514b1d5d48d927934768a", "patch": "@@ -37,6 +37,26 @@ pub fn extra_offset(text: &str, shape: Shape) -> usize {\n     }\n }\n \n+pub fn is_same_visibility(a: &Visibility, b: &Visibility) -> bool {\n+    match (&a.node, &b.node) {\n+        (\n+            VisibilityKind::Restricted { path: p, .. },\n+            VisibilityKind::Restricted { path: q, .. },\n+        ) => format!(\"{}\", p) == format!(\"{}\", q),\n+        (VisibilityKind::Public, VisibilityKind::Public)\n+        | (VisibilityKind::Inherited, VisibilityKind::Inherited)\n+        | (\n+            VisibilityKind::Crate(CrateSugar::PubCrate),\n+            VisibilityKind::Crate(CrateSugar::PubCrate),\n+        )\n+        | (\n+            VisibilityKind::Crate(CrateSugar::JustCrate),\n+            VisibilityKind::Crate(CrateSugar::JustCrate),\n+        ) => true,\n+        _ => false,\n+    }\n+}\n+\n // Uses Cow to avoid allocating in the common cases.\n pub fn format_visibility(context: &RewriteContext, vis: &Visibility) -> Cow<'static, str> {\n     match vis.node {"}]}