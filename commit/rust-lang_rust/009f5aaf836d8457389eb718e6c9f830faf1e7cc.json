{"sha": "009f5aaf836d8457389eb718e6c9f830faf1e7cc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAwOWY1YWFmODM2ZDg0NTczODllYjcxOGU2YzlmODMwZmFmMWU3Y2M=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-09-04T14:10:36Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-09-04T14:10:36Z"}, "message": "Update to latest nightly", "tree": {"sha": "d2f537622978d4b76adf10c24b518229285bb944", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d2f537622978d4b76adf10c24b518229285bb944"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/009f5aaf836d8457389eb718e6c9f830faf1e7cc", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEYFTdM4NKd7XQft77pp+NIls619kFAlmtXuMACgkQpp+NIls6\n19msMxAAmJOptYzLILTn3fePMYbaIoS1liNUMn5DT9H/Sq4LK0HPb6BOsrOVHNy9\nMC7BvunLNWIZwYl+B85EzLzS6fnHIYARODIktHeR86GuiKrx6yzvwZrBXcigLnGT\nyEbXP4xHpJmv5GWwQ9Jdo2+7CXyukmqKQCZS4+6PNwieTIQK4dA2reM9EEr0TXZk\nOnRjmW9udlsPgnFfRzg6UvkqePXOGnbpEl/3UVqHuNbbYclDYDt/aHiOTAROByW6\nSfajHPuqQscczYA0CXzJPLU/I/F8rZ4qDLCl3U9iSsKMWSRf1eoI4U6VLsWHNiBF\nDtNvEvWzY6L5mj0JIooHdIdd+paIKfrGcavGvjeqA2tpBSqBn7cxqOIvSTx3qToI\nUOFxMtutF+j9dLy26KOcKBKNh3/UkhuTLRJGkLPpCYr7k2pAJYej9BScPMQ4Z5Nm\n1IWXwPAE1lzAIgrZZzWbZZ/rNTdIMVSKn49b/jcrG2MOIsz5ia8TRXz+gK7B5Nzf\nzmuOtDwMrQSxu+P/+qXz/svIEa2MK38sBa6KxT0QxsLh563ouVO45AxzdjNtFx08\nPvRrJpDCb1pJ5sa37ELz7q/E5SZE0pWwN8tja5y6WUKf71PZmpkQT1+juHYgmkuf\nScSrb4LobUY0GCbmSsYA2tmQcQfYrT+SZB5uhGpG+6YYlM/eiLk=\n=oot0\n-----END PGP SIGNATURE-----", "payload": "tree d2f537622978d4b76adf10c24b518229285bb944\nparent 5e1899138f122f5493ba29fe3c4313ca0d873018\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1504534236 +0200\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1504534236 +0200\n\nUpdate to latest nightly\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/009f5aaf836d8457389eb718e6c9f830faf1e7cc", "html_url": "https://github.com/rust-lang/rust/commit/009f5aaf836d8457389eb718e6c9f830faf1e7cc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/009f5aaf836d8457389eb718e6c9f830faf1e7cc/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5e1899138f122f5493ba29fe3c4313ca0d873018", "url": "https://api.github.com/repos/rust-lang/rust/commits/5e1899138f122f5493ba29fe3c4313ca0d873018", "html_url": "https://github.com/rust-lang/rust/commit/5e1899138f122f5493ba29fe3c4313ca0d873018"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "c6183948ef38e076daef6903689abb61f4409043", "filename": "clippy_lints/src/escape.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/009f5aaf836d8457389eb718e6c9f830faf1e7cc/clippy_lints%2Fsrc%2Fescape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/009f5aaf836d8457389eb718e6c9f830faf1e7cc/clippy_lints%2Fsrc%2Fescape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fescape.rs?ref=009f5aaf836d8457389eb718e6c9f830faf1e7cc", "patch": "@@ -70,8 +70,8 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Pass {\n             too_large_for_stack: self.too_large_for_stack,\n         };\n \n-        let region_maps = &cx.tcx.region_maps(fn_def_id);\n-        ExprUseVisitor::new(&mut v, cx.tcx, cx.param_env, region_maps, cx.tables).consume_body(body);\n+        let region_scope_tree = &cx.tcx.region_scope_tree(fn_def_id);\n+        ExprUseVisitor::new(&mut v, cx.tcx, cx.param_env, region_scope_tree, cx.tables).consume_body(body);\n \n         for node in v.set {\n             span_lint("}, {"sha": "7a5f7b492785a0cbb872fb3f4777c9cbe27d3706", "filename": "clippy_lints/src/loops.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/009f5aaf836d8457389eb718e6c9f830faf1e7cc/clippy_lints%2Fsrc%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/009f5aaf836d8457389eb718e6c9f830faf1e7cc/clippy_lints%2Fsrc%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops.rs?ref=009f5aaf836d8457389eb718e6c9f830faf1e7cc", "patch": "@@ -6,7 +6,7 @@ use rustc::hir::intravisit::{Visitor, walk_expr, walk_block, walk_decl, walk_pat\n use rustc::hir::map::Node::{NodeBlock, NodeExpr, NodeStmt};\n use rustc::lint::*;\n use rustc::middle::const_val::ConstVal;\n-use rustc::middle::region::CodeExtent;\n+use rustc::middle::region;\n use rustc::ty::{self, Ty};\n use rustc::ty::subst::{Subst, Substs};\n use rustc_const_eval::ConstContext;\n@@ -621,9 +621,9 @@ fn check_for_loop_range<'a, 'tcx>(\n                 if let Some(indexed_extent) = indexed_extent {\n                     let parent_id = cx.tcx.hir.get_parent(expr.id);\n                     let parent_def_id = cx.tcx.hir.local_def_id(parent_id);\n-                    let region_maps = cx.tcx.region_maps(parent_def_id);\n-                    let pat_extent = region_maps.var_scope(pat.hir_id.local_id);\n-                    if region_maps.is_subscope_of(indexed_extent, pat_extent) {\n+                    let region_scope_tree = cx.tcx.region_scope_tree(parent_def_id);\n+                    let pat_extent = region_scope_tree.var_scope(pat.hir_id.local_id);\n+                    if region_scope_tree.is_subscope_of(indexed_extent, pat_extent) {\n                         return;\n                     }\n                 }\n@@ -1034,7 +1034,7 @@ struct VarVisitor<'a, 'tcx: 'a> {\n     /// var name to look for as index\n     var: DefId,\n     /// indexed variables, the extend is `None` for global\n-    indexed: HashMap<Name, Option<CodeExtent>>,\n+    indexed: HashMap<Name, Option<region::Scope>>,\n     /// Any names that are used outside an index operation.\n     /// Used to detect things like `&mut vec` used together with `vec[i]`\n     referenced: HashSet<Name>,\n@@ -1068,7 +1068,7 @@ impl<'a, 'tcx> Visitor<'tcx> for VarVisitor<'a, 'tcx> {\n \n                     let parent_id = self.cx.tcx.hir.get_parent(expr.id);\n                     let parent_def_id = self.cx.tcx.hir.local_def_id(parent_id);\n-                    let extent = self.cx.tcx.region_maps(parent_def_id).var_scope(hir_id.local_id);\n+                    let extent = self.cx.tcx.region_scope_tree(parent_def_id).var_scope(hir_id.local_id);\n                     self.indexed.insert(seqvar.segments[0].name, Some(extent));\n                     return;  // no need to walk further\n                 }"}, {"sha": "89ef4ff67f327ddb9724164efdb90abeea719c72", "filename": "clippy_lints/src/needless_pass_by_value.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/009f5aaf836d8457389eb718e6c9f830faf1e7cc/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/009f5aaf836d8457389eb718e6c9f830faf1e7cc/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs?ref=009f5aaf836d8457389eb718e6c9f830faf1e7cc", "patch": "@@ -97,8 +97,8 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for NeedlessPassByValue {\n             ..\n         } = {\n             let mut ctx = MovedVariablesCtxt::new(cx);\n-            let region_maps = &cx.tcx.region_maps(fn_def_id);\n-            euv::ExprUseVisitor::new(&mut ctx, cx.tcx, cx.param_env, region_maps, cx.tables).consume_body(body);\n+            let region_scope_tree = &cx.tcx.region_scope_tree(fn_def_id);\n+            euv::ExprUseVisitor::new(&mut ctx, cx.tcx, cx.param_env, region_scope_tree, cx.tables).consume_body(body);\n             ctx\n         };\n "}]}