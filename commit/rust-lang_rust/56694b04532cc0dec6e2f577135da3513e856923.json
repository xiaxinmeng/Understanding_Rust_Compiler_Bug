{"sha": "56694b04532cc0dec6e2f577135da3513e856923", "node_id": "C_kwDOAAsO6NoAKDU2Njk0YjA0NTMyY2MwZGVjNmUyZjU3NzEzNWRhMzUxM2U4NTY5MjM", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-10-25T05:28:07Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-10-25T05:28:07Z"}, "message": "Auto merge of #89808 - tmiasko:llvm-multithreaded, r=nagisa\n\nCleanup LLVM multi-threading checks\n\nThe support for runtime multi-threading was removed from LLVM. Calls to\n`LLVMStartMultithreaded` became no-ops equivalent to checking if LLVM\nwas compiled with support for threads http://reviews.llvm.org/D4216.", "tree": {"sha": "dfd76c5c36901910f82aca781807eaf256dcc54b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dfd76c5c36901910f82aca781807eaf256dcc54b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/56694b04532cc0dec6e2f577135da3513e856923", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/56694b04532cc0dec6e2f577135da3513e856923", "html_url": "https://github.com/rust-lang/rust/commit/56694b04532cc0dec6e2f577135da3513e856923", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/56694b04532cc0dec6e2f577135da3513e856923/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "28d0e75269ad092662fef27f44c6aa029c376d49", "url": "https://api.github.com/repos/rust-lang/rust/commits/28d0e75269ad092662fef27f44c6aa029c376d49", "html_url": "https://github.com/rust-lang/rust/commit/28d0e75269ad092662fef27f44c6aa029c376d49"}, {"sha": "aa3bf01889e451222a653b73ccd0b25b5f88170a", "url": "https://api.github.com/repos/rust-lang/rust/commits/aa3bf01889e451222a653b73ccd0b25b5f88170a", "html_url": "https://github.com/rust-lang/rust/commit/aa3bf01889e451222a653b73ccd0b25b5f88170a"}], "stats": {"total": 22, "additions": 6, "deletions": 16}, "files": [{"sha": "45fb638e3b49f779a75fd3a4f4f417821e562e36", "filename": "compiler/rustc_codegen_llvm/src/llvm/ffi.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56694b04532cc0dec6e2f577135da3513e856923/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm%2Fffi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56694b04532cc0dec6e2f577135da3513e856923/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm%2Fffi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm%2Fffi.rs?ref=56694b04532cc0dec6e2f577135da3513e856923", "patch": "@@ -1770,7 +1770,7 @@ extern \"C\" {\n \n     pub fn LLVMDisposeMessage(message: *mut c_char);\n \n-    pub fn LLVMStartMultithreaded() -> Bool;\n+    pub fn LLVMIsMultithreaded() -> Bool;\n \n     /// Returns a string describing the last error caused by an LLVMRust* call.\n     pub fn LLVMRustGetLastError() -> *const c_char;"}, {"sha": "baa257069aa1ce156b0ae22d9736dac39a838dd6", "filename": "compiler/rustc_codegen_llvm/src/llvm_util.rs", "status": "modified", "additions": 5, "deletions": 15, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/56694b04532cc0dec6e2f577135da3513e856923/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56694b04532cc0dec6e2f577135da3513e856923/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm_util.rs?ref=56694b04532cc0dec6e2f577135da3513e856923", "patch": "@@ -17,35 +17,25 @@ use std::path::Path;\n use std::ptr;\n use std::slice;\n use std::str;\n-use std::sync::atomic::{AtomicBool, Ordering};\n use std::sync::Once;\n \n-static POISONED: AtomicBool = AtomicBool::new(false);\n static INIT: Once = Once::new();\n \n pub(crate) fn init(sess: &Session) {\n     unsafe {\n         // Before we touch LLVM, make sure that multithreading is enabled.\n+        if llvm::LLVMIsMultithreaded() != 1 {\n+            bug!(\"LLVM compiled without support for threads\");\n+        }\n         INIT.call_once(|| {\n-            if llvm::LLVMStartMultithreaded() != 1 {\n-                // use an extra bool to make sure that all future usage of LLVM\n-                // cannot proceed despite the Once not running more than once.\n-                POISONED.store(true, Ordering::SeqCst);\n-            }\n-\n             configure_llvm(sess);\n         });\n-\n-        if POISONED.load(Ordering::SeqCst) {\n-            bug!(\"couldn't enable multi-threaded LLVM\");\n-        }\n     }\n }\n \n fn require_inited() {\n-    INIT.call_once(|| bug!(\"llvm is not initialized\"));\n-    if POISONED.load(Ordering::SeqCst) {\n-        bug!(\"couldn't enable multi-threaded LLVM\");\n+    if !INIT.is_completed() {\n+        bug!(\"LLVM is not initialized\");\n     }\n }\n "}]}