{"sha": "5136e051fa8c0b87bd1d882f92b1a1d9c0146e82", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUxMzZlMDUxZmE4YzBiODdiZDFkODgyZjkyYjFhMWQ5YzAxNDZlODI=", "commit": {"author": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2017-06-11T22:37:50Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-06-11T22:37:50Z"}, "message": "Merge pull request #1646 from topecongiro/issue-1606\n\nReset the error count of parser from the previous file", "tree": {"sha": "301580a5ee5408a8de88a69619708fe057a004c8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/301580a5ee5408a8de88a69619708fe057a004c8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5136e051fa8c0b87bd1d882f92b1a1d9c0146e82", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5136e051fa8c0b87bd1d882f92b1a1d9c0146e82", "html_url": "https://github.com/rust-lang/rust/commit/5136e051fa8c0b87bd1d882f92b1a1d9c0146e82", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5136e051fa8c0b87bd1d882f92b1a1d9c0146e82/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "53e29dfe9a464a588baecc3e75a8fc777fc2782a", "url": "https://api.github.com/repos/rust-lang/rust/commits/53e29dfe9a464a588baecc3e75a8fc777fc2782a", "html_url": "https://github.com/rust-lang/rust/commit/53e29dfe9a464a588baecc3e75a8fc777fc2782a"}, {"sha": "762639e7fd968905d97599f9396568554c304f61", "url": "https://api.github.com/repos/rust-lang/rust/commits/762639e7fd968905d97599f9396568554c304f61", "html_url": "https://github.com/rust-lang/rust/commit/762639e7fd968905d97599f9396568554c304f61"}], "stats": {"total": 21, "additions": 15, "deletions": 6}, "files": [{"sha": "6488c83e9831fa260e0bd0e88726188fcd9fce8f", "filename": "src/lib.rs", "status": "modified", "additions": 15, "deletions": 6, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/5136e051fa8c0b87bd1d882f92b1a1d9c0146e82/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5136e051fa8c0b87bd1d882f92b1a1d9c0146e82/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=5136e051fa8c0b87bd1d882f92b1a1d9c0146e82", "patch": "@@ -427,9 +427,10 @@ impl fmt::Display for FormatReport {\n \n // Formatting which depends on the AST.\n fn format_ast<F>(krate: &ast::Crate,\n-                 parse_session: &ParseSess,\n+                 mut parse_session: &mut ParseSess,\n                  main_file: &Path,\n                  config: &Config,\n+                 codemap: &Rc<CodeMap>,\n                  mut after_file: F)\n                  -> Result<(FileMap, bool), io::Error>\n     where F: FnMut(&str, &mut StringBuffer) -> Result<bool, io::Error>\n@@ -449,12 +450,19 @@ fn format_ast<F>(krate: &ast::Crate,\n         if config.verbose() {\n             println!(\"Formatting {}\", path);\n         }\n-        let mut visitor = FmtVisitor::from_codemap(parse_session, config);\n-        visitor.format_separate_mod(module);\n+        {\n+            let mut visitor = FmtVisitor::from_codemap(parse_session, config);\n+            visitor.format_separate_mod(module);\n \n-        has_diff |= after_file(path, &mut visitor.buffer)?;\n+            has_diff |= after_file(path, &mut visitor.buffer)?;\n \n-        result.push((path.to_owned(), visitor.buffer));\n+            result.push((path.to_owned(), visitor.buffer));\n+        }\n+        // Reset the error count.\n+        if parse_session.span_diagnostic.has_errors() {\n+            parse_session.span_diagnostic =\n+                Handler::with_tty_emitter(ColorConfig::Auto, true, false, Some(codemap.clone()));\n+        }\n     }\n \n     Ok((result, has_diff))\n@@ -612,9 +620,10 @@ pub fn format_input<T: Write>(input: Input,\n \n     match format_ast(\n         &krate,\n-        &parse_session,\n+        &mut parse_session,\n         &main_file,\n         config,\n+        &codemap,\n         |file_name, file| {\n             // For some reason, the codemap does not include terminating\n             // newlines so we must add one on for each file. This is sad."}]}