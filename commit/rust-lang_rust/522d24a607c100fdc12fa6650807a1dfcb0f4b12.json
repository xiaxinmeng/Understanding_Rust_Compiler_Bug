{"sha": "522d24a607c100fdc12fa6650807a1dfcb0f4b12", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUyMmQyNGE2MDdjMTAwZmRjMTJmYTY2NTA4MDdhMWRmY2IwZjRiMTI=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-06-05T11:58:52Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-06-05T11:58:52Z"}, "message": "Inlay Hints: more directly account for self param", "tree": {"sha": "a55c47121466610e54e1fbb1df490a121e3247cb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a55c47121466610e54e1fbb1df490a121e3247cb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/522d24a607c100fdc12fa6650807a1dfcb0f4b12", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/522d24a607c100fdc12fa6650807a1dfcb0f4b12", "html_url": "https://github.com/rust-lang/rust/commit/522d24a607c100fdc12fa6650807a1dfcb0f4b12", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/522d24a607c100fdc12fa6650807a1dfcb0f4b12/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "913a623281ed4cd190ca04845c64e5054d176a2a", "url": "https://api.github.com/repos/rust-lang/rust/commits/913a623281ed4cd190ca04845c64e5054d176a2a", "html_url": "https://github.com/rust-lang/rust/commit/913a623281ed4cd190ca04845c64e5054d176a2a"}], "stats": {"total": 3, "additions": 1, "deletions": 2}, "files": [{"sha": "49366de983be75b19284470bea0767fbbfb3e841", "filename": "crates/ra_ide/src/inlay_hints.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/522d24a607c100fdc12fa6650807a1dfcb0f4b12/crates%2Fra_ide%2Fsrc%2Finlay_hints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/522d24a607c100fdc12fa6650807a1dfcb0f4b12/crates%2Fra_ide%2Fsrc%2Finlay_hints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Finlay_hints.rs?ref=522d24a607c100fdc12fa6650807a1dfcb0f4b12", "patch": "@@ -149,11 +149,10 @@ fn get_param_name_hints(\n         ast::Expr::MethodCallExpr(expr) => expr.arg_list()?.args(),\n         _ => return None,\n     };\n-    let args_count = args.clone().count();\n \n     let fn_signature = get_fn_signature(sema, &expr)?;\n     let n_params_to_skip =\n-        if fn_signature.has_self_param && fn_signature.parameter_names.len() > args_count {\n+        if fn_signature.has_self_param && matches!(&expr, ast::Expr::MethodCallExpr(_)) {\n             1\n         } else {\n             0"}]}