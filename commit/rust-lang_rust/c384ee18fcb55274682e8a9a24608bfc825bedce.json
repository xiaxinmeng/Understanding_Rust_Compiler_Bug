{"sha": "c384ee18fcb55274682e8a9a24608bfc825bedce", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMzODRlZTE4ZmNiNTUyNzQ2ODJlOGE5YTI0NjA4YmZjODI1YmVkY2U=", "commit": {"author": {"name": "Kevin Ballard", "email": "kevin@sb.org", "date": "2015-01-19T18:15:17Z"}, "committer": {"name": "Kevin Ballard", "email": "kevin@sb.org", "date": "2015-01-19T19:11:07Z"}, "message": "Don't reallocate when capacity is already equal to length\n\n`Vec::shrink_to_fit()` may be called on vectors that are already the\ncorrect length. Calling out to `reallocate()` in this case is a bad idea\nbecause there is no guarantee that `reallocate()` won't allocate a new\nbuffer anyway, and based on performance seen in external benchmarks, it\nseems likely that it is in fact reallocating a new buffer.\n\nBefore:\n\n    test string::tests::bench_exact_size_shrink_to_fit         ... bench:        45 ns/iter (+/- 2)\n\nAfter:\n\n    test string::tests::bench_exact_size_shrink_to_fit         ... bench:        26 ns/iter (+/- 1)", "tree": {"sha": "e3dd72dae67d23000b0cebcac81b85ce16a41faf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e3dd72dae67d23000b0cebcac81b85ce16a41faf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c384ee18fcb55274682e8a9a24608bfc825bedce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c384ee18fcb55274682e8a9a24608bfc825bedce", "html_url": "https://github.com/rust-lang/rust/commit/c384ee18fcb55274682e8a9a24608bfc825bedce", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c384ee18fcb55274682e8a9a24608bfc825bedce/comments", "author": {"login": "lilyball", "id": 714, "node_id": "MDQ6VXNlcjcxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lilyball", "html_url": "https://github.com/lilyball", "followers_url": "https://api.github.com/users/lilyball/followers", "following_url": "https://api.github.com/users/lilyball/following{/other_user}", "gists_url": "https://api.github.com/users/lilyball/gists{/gist_id}", "starred_url": "https://api.github.com/users/lilyball/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lilyball/subscriptions", "organizations_url": "https://api.github.com/users/lilyball/orgs", "repos_url": "https://api.github.com/users/lilyball/repos", "events_url": "https://api.github.com/users/lilyball/events{/privacy}", "received_events_url": "https://api.github.com/users/lilyball/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lilyball", "id": 714, "node_id": "MDQ6VXNlcjcxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lilyball", "html_url": "https://github.com/lilyball", "followers_url": "https://api.github.com/users/lilyball/followers", "following_url": "https://api.github.com/users/lilyball/following{/other_user}", "gists_url": "https://api.github.com/users/lilyball/gists{/gist_id}", "starred_url": "https://api.github.com/users/lilyball/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lilyball/subscriptions", "organizations_url": "https://api.github.com/users/lilyball/orgs", "repos_url": "https://api.github.com/users/lilyball/repos", "events_url": "https://api.github.com/users/lilyball/events{/privacy}", "received_events_url": "https://api.github.com/users/lilyball/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a913fc64d2f179dfcf7b11895f5b6c7c24d6979c", "url": "https://api.github.com/repos/rust-lang/rust/commits/a913fc64d2f179dfcf7b11895f5b6c7c24d6979c", "html_url": "https://github.com/rust-lang/rust/commit/a913fc64d2f179dfcf7b11895f5b6c7c24d6979c"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "4c25c9866e473d48d96e4ab9b7c91a7ee0dce760", "filename": "src/libcollections/vec.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c384ee18fcb55274682e8a9a24608bfc825bedce/src%2Flibcollections%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c384ee18fcb55274682e8a9a24608bfc825bedce/src%2Flibcollections%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fvec.rs?ref=c384ee18fcb55274682e8a9a24608bfc825bedce", "patch": "@@ -356,7 +356,7 @@ impl<T> Vec<T> {\n                 }\n                 self.cap = 0;\n             }\n-        } else {\n+        } else if self.cap != self.len {\n             unsafe {\n                 // Overflow check is unnecessary as the vector is already at\n                 // least this large."}]}