{"sha": "5ada328d81a75a19163a038555669e36070edf5d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVhZGEzMjhkODFhNzVhMTkxNjNhMDM4NTU1NjY5ZTM2MDcwZWRmNWQ=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2017-02-02T21:22:19Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-02-02T21:22:19Z"}, "message": "Rollup merge of #38823 - Freyskeyd:doc-missingInformationCfgTest, r=steveklabnik\n\nImprove doc cfg(test) and tests directory\n\nHi,\n\nI was facing a problem with my code organisation. I was using a tests directory and i defined some `#[cfg(test)]` in my `src/`. But i was not able to use it in my `tests` folder.\n\n```bash\n.\n\u251c\u2500\u2500 Cargo.lock\n\u251c\u2500\u2500 Cargo.toml\n\u251c\u2500\u2500 src\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 lib.rs\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 test.rs\n\u2514\u2500\u2500 tests\n    \u2514\u2500\u2500 x.rs\n```\n> src/lib.rs\n```rust\npub mod test;\n\nfn tesst() {\n    assert!(test::t());\n}\n```\n> src/test.rs\n```rust\npub fn t() -> bool { true }\n```\n> test/x.rs\n```rust\nextern crate testt;\n\nuse testt::test;\nfn tesst() {\n    assert!(test::t());\n}\n```\n\nI was unable to compile using `cargo test`:\n```bash\nerror[E0432]: unresolved import `testt::test`\n --> tests/x.rs:3:5\n  |\n3 | use testt::test;\n  |     ^^^^^^^^^^^ no `test` in `testt`\n```\n\nIf i remove the `tests` directory everything works fine. To use an utils module in your `tests` directory, you need to create a module in the directory (like `tests/utils.rs`). My `tests/x.rs` look like this now:\n\n```rust\nextern crate testt;\n\nmod utils;\n\nfn tesst() {\n    assert!(utils::t());\n}\n```\n\nAnd my tree:\n```bash\n.\n\u251c\u2500\u2500 Cargo.lock\n\u251c\u2500\u2500 Cargo.toml\n\u251c\u2500\u2500 src\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 lib.rs\n\u2514\u2500\u2500 tests\n    \u251c\u2500\u2500 utils.rs\n    \u2514\u2500\u2500 x.rs\n```\n\nI think that thing must be documented in the book.\n\nPing:\n- @badboy : Because he's the one who showed me the path\n- @shahn : Because he helped me too to find the solution\n\nSigned-off-by: Freyskeyd <simon.paitrault@iadvize.com>", "tree": {"sha": "c09894e673d9ad4fc281f8a5794bf32ab9ab5ff6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c09894e673d9ad4fc281f8a5794bf32ab9ab5ff6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5ada328d81a75a19163a038555669e36070edf5d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5ada328d81a75a19163a038555669e36070edf5d", "html_url": "https://github.com/rust-lang/rust/commit/5ada328d81a75a19163a038555669e36070edf5d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5ada328d81a75a19163a038555669e36070edf5d/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a47a6ea771ca4426b6bba29219bdc7d2bceec3d5", "url": "https://api.github.com/repos/rust-lang/rust/commits/a47a6ea771ca4426b6bba29219bdc7d2bceec3d5", "html_url": "https://github.com/rust-lang/rust/commit/a47a6ea771ca4426b6bba29219bdc7d2bceec3d5"}, {"sha": "b996a7ecec4bb22a28bce3b86f68fe51b4409287", "url": "https://api.github.com/repos/rust-lang/rust/commits/b996a7ecec4bb22a28bce3b86f68fe51b4409287", "html_url": "https://github.com/rust-lang/rust/commit/b996a7ecec4bb22a28bce3b86f68fe51b4409287"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "ef19c0dc7cc5e16a1fbc85a2577783dc6c1447cf", "filename": "src/doc/book/testing.md", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5ada328d81a75a19163a038555669e36070edf5d/src%2Fdoc%2Fbook%2Ftesting.md", "raw_url": "https://github.com/rust-lang/rust/raw/5ada328d81a75a19163a038555669e36070edf5d/src%2Fdoc%2Fbook%2Ftesting.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Ftesting.md?ref=5ada328d81a75a19163a038555669e36070edf5d", "patch": "@@ -499,6 +499,10 @@ be imported in every test with `mod common;`\n That's all there is to the `tests` directory. The `tests` module isn't needed\n here, since the whole thing is focused on tests.\n \n+Note, when building integration tests, cargo will not pass the `test` attribute\n+to the compiler. It means that all parts in `cfg(test)` won't be included in\n+the build used in your integration tests.\n+\n Let's finally check out that third section: documentation tests.\n \n # Documentation tests"}]}