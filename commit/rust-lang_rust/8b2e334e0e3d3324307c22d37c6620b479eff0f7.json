{"sha": "8b2e334e0e3d3324307c22d37c6620b479eff0f7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhiMmUzMzRlMGUzZDMzMjQzMDdjMjJkMzdjNjYyMGI0NzllZmYwZjc=", "commit": {"author": {"name": "Clar Charr", "email": "clar@charr.xyz", "date": "2017-01-26T21:10:48Z"}, "committer": {"name": "Clar Charr", "email": "clar@charr.xyz", "date": "2017-02-05T23:55:37Z"}, "message": "Ipv6Addr <-> u128", "tree": {"sha": "ebb9e3b1a3e312fa8ff7949dc531e6520eab7857", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ebb9e3b1a3e312fa8ff7949dc531e6520eab7857"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8b2e334e0e3d3324307c22d37c6620b479eff0f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8b2e334e0e3d3324307c22d37c6620b479eff0f7", "html_url": "https://github.com/rust-lang/rust/commit/8b2e334e0e3d3324307c22d37c6620b479eff0f7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8b2e334e0e3d3324307c22d37c6620b479eff0f7/comments", "author": {"login": "clarfonthey", "id": 15850505, "node_id": "MDQ6VXNlcjE1ODUwNTA1", "avatar_url": "https://avatars.githubusercontent.com/u/15850505?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clarfonthey", "html_url": "https://github.com/clarfonthey", "followers_url": "https://api.github.com/users/clarfonthey/followers", "following_url": "https://api.github.com/users/clarfonthey/following{/other_user}", "gists_url": "https://api.github.com/users/clarfonthey/gists{/gist_id}", "starred_url": "https://api.github.com/users/clarfonthey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clarfonthey/subscriptions", "organizations_url": "https://api.github.com/users/clarfonthey/orgs", "repos_url": "https://api.github.com/users/clarfonthey/repos", "events_url": "https://api.github.com/users/clarfonthey/events{/privacy}", "received_events_url": "https://api.github.com/users/clarfonthey/received_events", "type": "User", "site_admin": false}, "committer": {"login": "clarfonthey", "id": 15850505, "node_id": "MDQ6VXNlcjE1ODUwNTA1", "avatar_url": "https://avatars.githubusercontent.com/u/15850505?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clarfonthey", "html_url": "https://github.com/clarfonthey", "followers_url": "https://api.github.com/users/clarfonthey/followers", "following_url": "https://api.github.com/users/clarfonthey/following{/other_user}", "gists_url": "https://api.github.com/users/clarfonthey/gists{/gist_id}", "starred_url": "https://api.github.com/users/clarfonthey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clarfonthey/subscriptions", "organizations_url": "https://api.github.com/users/clarfonthey/orgs", "repos_url": "https://api.github.com/users/clarfonthey/repos", "events_url": "https://api.github.com/users/clarfonthey/events{/privacy}", "received_events_url": "https://api.github.com/users/clarfonthey/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "031c1168b9b3f38405090f6be678a156b7d71e12", "url": "https://api.github.com/repos/rust-lang/rust/commits/031c1168b9b3f38405090f6be678a156b7d71e12", "html_url": "https://github.com/rust-lang/rust/commit/031c1168b9b3f38405090f6be678a156b7d71e12"}], "stats": {"total": 43, "additions": 38, "deletions": 5}, "files": [{"sha": "1f3526e1a09ffd0bd2dff66fe0288b2030adfb4b", "filename": "src/libstd/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8b2e334e0e3d3324307c22d37c6620b479eff0f7/src%2Flibstd%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b2e334e0e3d3324307c22d37c6620b479eff0f7/src%2Flibstd%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flib.rs?ref=8b2e334e0e3d3324307c22d37c6620b479eff0f7", "patch": "@@ -261,6 +261,8 @@\n #![feature(generic_param_attrs)]\n #![feature(hashmap_hasher)]\n #![feature(heap_api)]\n+#![feature(i128)]\n+#![feature(i128_type)]\n #![feature(inclusive_range)]\n #![feature(int_error_internals)]\n #![feature(integer_atomics)]\n@@ -304,7 +306,6 @@\n #![feature(unwind_attributes)]\n #![feature(vec_push_all)]\n #![feature(zero_one)]\n-#![feature(i128)]\n #![cfg_attr(test, feature(update_panic_count))]\n \n // Explicitly import the prelude. The compiler uses this same unstable attribute"}, {"sha": "3dc89e390ee200c71d64543168173f73e79910a2", "filename": "src/libstd/net/ip.rs", "status": "modified", "additions": 36, "deletions": 4, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/8b2e334e0e3d3324307c22d37c6620b479eff0f7/src%2Flibstd%2Fnet%2Fip.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b2e334e0e3d3324307c22d37c6620b479eff0f7/src%2Flibstd%2Fnet%2Fip.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnet%2Fip.rs?ref=8b2e334e0e3d3324307c22d37c6620b479eff0f7", "patch": "@@ -1149,6 +1149,26 @@ impl FromInner<c::in6_addr> for Ipv6Addr {\n     }\n }\n \n+#[unstable(feature = \"i128\", issue = \"35118\")]\n+impl From<Ipv6Addr> for u128 {\n+    fn from(ip: Ipv6Addr) -> u128 {\n+        let ip = ip.segments();\n+        ((ip[0] as u128) << 112) + ((ip[1] as u128) << 96) + ((ip[2] as u128) << 80) +\n+            ((ip[3] as u128) << 64) + ((ip[4] as u128) << 48) + ((ip[5] as u128) << 32) +\n+            ((ip[6] as u128) << 16) + (ip[7] as u128)\n+    }\n+}\n+#[unstable(feature = \"i128\", issue = \"35118\")]\n+impl From<u128> for Ipv6Addr {\n+    fn from(ip: u128) -> Ipv6Addr {\n+        Ipv6Addr::new(\n+            (ip >> 112) as u16, (ip >> 96) as u16, (ip >> 80) as u16,\n+            (ip >> 64) as u16, (ip >> 48) as u16, (ip >> 32) as u16,\n+            (ip >> 16) as u16, ip as u16,\n+        )\n+    }\n+}\n+\n #[stable(feature = \"ipv6_from_octets\", since = \"1.9.0\")]\n impl From<[u8; 16]> for Ipv6Addr {\n     fn from(octets: [u8; 16]) -> Ipv6Addr {\n@@ -1500,14 +1520,26 @@ mod tests {\n \n     #[test]\n     fn test_ipv4_to_int() {\n-        let a = Ipv4Addr::new(127, 0, 0, 1);\n-        assert_eq!(u32::from(a), 2130706433);\n+        let a = Ipv4Addr::new(0x11, 0x22, 0x33, 0x44);\n+        assert_eq!(u32::from(a), 0x11223344);\n     }\n \n     #[test]\n     fn test_int_to_ipv4() {\n-        let a = Ipv4Addr::new(127, 0, 0, 1);\n-        assert_eq!(Ipv4Addr::from(2130706433), a);\n+        let a = Ipv4Addr::new(0x11, 0x22, 0x33, 0x44);\n+        assert_eq!(Ipv4Addr::from(0x11223344), a);\n+    }\n+\n+    #[test]\n+    fn test_ipv6_to_int() {\n+        let a = Ipv6Addr::new(0x1122, 0x3344, 0x5566, 0x7788, 0x99aa, 0xbbcc, 0xddee, 0xff11);\n+        assert_eq!(u128::from(a), 0x112233445566778899aabbccddeeff11u128);\n+    }\n+\n+    #[test]\n+    fn test_int_to_ipv6() {\n+        let a = Ipv6Addr::new(0x1122, 0x3344, 0x5566, 0x7788, 0x99aa, 0xbbcc, 0xddee, 0xff11);\n+        assert_eq!(Ipv6Addr::from(0x112233445566778899aabbccddeeff11u128), a);\n     }\n \n     #[test]"}]}