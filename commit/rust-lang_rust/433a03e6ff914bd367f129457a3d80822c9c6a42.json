{"sha": "433a03e6ff914bd367f129457a3d80822c9c6a42", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQzM2EwM2U2ZmY5MTRiZDM2N2YxMjk0NTdhM2Q4MDgyMmM5YzZhNDI=", "commit": {"author": {"name": "Michal 'vorner' Vaner", "email": "vorner@vorner.cz", "date": "2018-03-24T16:07:58Z"}, "committer": {"name": "Michal 'vorner' Vaner", "email": "vorner@vorner.cz", "date": "2018-03-24T16:07:58Z"}, "message": "fixup! Some comments and documentation for name resolution crate", "tree": {"sha": "5b542b3bf94f40202ad479c0a5a3997d29dc5d49", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5b542b3bf94f40202ad479c0a5a3997d29dc5d49"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/433a03e6ff914bd367f129457a3d80822c9c6a42", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEQ8wy/3jh6tM0kr/e9wDQwBnkxm8FAlq2d94ACgkQ9wDQwBnk\nxm+49g/+JYhfD7rcQ9kgNKfMNn84BOqihS3mdRj85S39KocOeirovwrHG0An/OBK\nMwRxlNoZVCWFncKVusTivn+aMO26hQ8h0ZQdAd9Ddd5vJlwY2rxhrNas1V/nkFt3\n/h3UkQj4cs81FUGMgsqLkP6oMmmYkx1W/W9gqp+toUa+c0bscFNvvI8vNqcL0WTp\neuiEo/JElmZxzEIDQCUUQLUxckRxt24pffm/hXW95C/FeCqLzTUL0GSxLXesjpPE\nUVjbFe2FrIPKb1V0e91RMZawtmZQCCFDkcyZcRwhYmj7i9Nx0qcjdErcZ/RJi4PU\nbJqG711DsS4p4hKPVbx6YOGHGySgIWB6ylUrv/2om8og8f7DSHfRCfPWjqnBT/7t\nQlQ+6HN94gZ1jZ/71qWjYv//jbEcVqg/OeRIi/Fvu+kiuzA0ShJm0y+hzXC3fGSo\nhglkK4FEfq54BNkJYYcJZ9NEVo7F1EDWOt8wPhc0OTRqfmggYp/GPnBuerRWffp0\nB1oLHxSGBHSHltpDa2/02u2wnv0m3K8BFDbc2tM0EZyKoyDBAvK10/xl87ByszBN\nSufeLbbsu/9DeOMO4kx822OSCsS7eRQZ06zU1iJHqlWXicsczYamypHMRWTR+yjH\n1MvqlCAueNYPoIEOAa+FNohp2/I1teNyAt0kV/6IgHqGoGgG/DI=\n=fBIx\n-----END PGP SIGNATURE-----", "payload": "tree 5b542b3bf94f40202ad479c0a5a3997d29dc5d49\nparent 68d6eddaf8e1d34c1fa44f60463b70c81b277665\nauthor Michal 'vorner' Vaner <vorner@vorner.cz> 1521907678 +0100\ncommitter Michal 'vorner' Vaner <vorner@vorner.cz> 1521907678 +0100\n\nfixup! Some comments and documentation for name resolution crate\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/433a03e6ff914bd367f129457a3d80822c9c6a42", "html_url": "https://github.com/rust-lang/rust/commit/433a03e6ff914bd367f129457a3d80822c9c6a42", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/433a03e6ff914bd367f129457a3d80822c9c6a42/comments", "author": {"login": "vorner", "id": 11783500, "node_id": "MDQ6VXNlcjExNzgzNTAw", "avatar_url": "https://avatars.githubusercontent.com/u/11783500?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vorner", "html_url": "https://github.com/vorner", "followers_url": "https://api.github.com/users/vorner/followers", "following_url": "https://api.github.com/users/vorner/following{/other_user}", "gists_url": "https://api.github.com/users/vorner/gists{/gist_id}", "starred_url": "https://api.github.com/users/vorner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vorner/subscriptions", "organizations_url": "https://api.github.com/users/vorner/orgs", "repos_url": "https://api.github.com/users/vorner/repos", "events_url": "https://api.github.com/users/vorner/events{/privacy}", "received_events_url": "https://api.github.com/users/vorner/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vorner", "id": 11783500, "node_id": "MDQ6VXNlcjExNzgzNTAw", "avatar_url": "https://avatars.githubusercontent.com/u/11783500?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vorner", "html_url": "https://github.com/vorner", "followers_url": "https://api.github.com/users/vorner/followers", "following_url": "https://api.github.com/users/vorner/following{/other_user}", "gists_url": "https://api.github.com/users/vorner/gists{/gist_id}", "starred_url": "https://api.github.com/users/vorner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vorner/subscriptions", "organizations_url": "https://api.github.com/users/vorner/orgs", "repos_url": "https://api.github.com/users/vorner/repos", "events_url": "https://api.github.com/users/vorner/events{/privacy}", "received_events_url": "https://api.github.com/users/vorner/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "68d6eddaf8e1d34c1fa44f60463b70c81b277665", "url": "https://api.github.com/repos/rust-lang/rust/commits/68d6eddaf8e1d34c1fa44f60463b70c81b277665", "html_url": "https://github.com/rust-lang/rust/commit/68d6eddaf8e1d34c1fa44f60463b70c81b277665"}], "stats": {"total": 30, "additions": 23, "deletions": 7}, "files": [{"sha": "d3689f7b5277319b0461d25a3f90a8ce285b3b66", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 23, "deletions": 7, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/433a03e6ff914bd367f129457a3d80822c9c6a42/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/433a03e6ff914bd367f129457a3d80822c9c6a42/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=433a03e6ff914bd367f129457a3d80822c9c6a42", "patch": "@@ -878,8 +878,9 @@ enum RibKind<'a> {\n ///\n /// A rib represents a scope names can live in. Note that these appear in many places, not just\n /// around braces. At any place where the list of accessible names (of the given namespace)\n-/// changes, a new rib is put onto a stack. This may be, for example, a `let` statement (because it\n-/// introduces variables), a macro, etc.\n+/// changes or a new restrictions on the name accessibility are introduced, a new rib is put onto a\n+/// stack. This may be, for example, a `let` statement (because it introduces variables), a macro,\n+/// etc.\n ///\n /// Different [rib kinds](enum.RibKind) are transparent for different names.\n ///\n@@ -935,11 +936,26 @@ enum PathResult<'a> {\n }\n \n enum ModuleKind {\n-    /// Inline `mod something { ... }`.\n+    /// An anonymous module, eg. just a block.\n+    ///\n+    /// ```\n+    /// fn main() {\n+    ///     fn f() {} // (1)\n+    ///     { // This is an anonymous module\n+    ///         f(); // This resolves to (2) as we are inside the block.\n+    ///         fn f() {} // (2)\n+    ///     }\n+    ///     f(); // Resolves to (1)\n+    /// }\n+    /// ```\n     Block(NodeId),\n-    /// Module from another file.\n+    /// Any module with a name.\n+    ///\n+    /// This could be:\n     ///\n-    /// Also called a normal module in the following code.\n+    /// * A normal module \u2012 either `mod from_file;` or `mod from_block { }`.\n+    /// * A trait or an enum (it implicitly contains associated types, methods and variant\n+    ///   constructors).\n     Def(Def, Name),\n }\n \n@@ -1444,8 +1460,8 @@ impl<'a, 'b: 'a> ty::DefIdTree for &'a Resolver<'b> {\n     }\n }\n \n-/// This is the interface through which the rest of the compiler asks about name resolution after\n-/// the whole AST has been indexed.\n+/// This interface is used through the AST\u2192HIR step, to embed full paths into the HIR. After that\n+/// the resolver is no longer needed as all the relevant information is inline.\n impl<'a> hir::lowering::Resolver for Resolver<'a> {\n     fn resolve_hir_path(&mut self, path: &mut hir::Path, is_value: bool) {\n         self.resolve_hir_path_cb(path, is_value,"}]}