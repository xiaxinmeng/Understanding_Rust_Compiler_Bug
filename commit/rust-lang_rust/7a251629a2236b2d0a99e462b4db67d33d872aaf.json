{"sha": "7a251629a2236b2d0a99e462b4db67d33d872aaf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdhMjUxNjI5YTIyMzZiMmQwYTk5ZTQ2MmI0ZGI2N2QzM2Q4NzJhYWY=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-08-09T12:07:31Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-08-09T12:07:31Z"}, "message": "Rollup merge of #63397 - JohnTitor:add-tests-for-ices, r=Centril\n\nAdd tests for some ICEs\n\nCloses #43623\nCloses #44405\n\nr? @Centril", "tree": {"sha": "4e4ba888705463fa50c32b98390ac0ce3f15e765", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4e4ba888705463fa50c32b98390ac0ce3f15e765"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7a251629a2236b2d0a99e462b4db67d33d872aaf", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdTWIDCRBK7hj4Ov3rIwAAdHIIAGkmNLzrTptRY/KpmPfAi81E\nvM2B4gEwmzNakIRpHGQGInba3b9+iOpRdPzTaRsMgZ3NWKzUHl/UDjExLJ5Ze/WG\nWntVgFU+oVAY5NEr55Ou1l/XLf1QaA4yl3pex7Yz7QJDgiNutf/RCRmuhj9uEgsE\nhzgEmXNtPLvtogOfKUdDiEEA/yWCK6vJS2p3VSZTJh/b9e5iKO0l6pQ9GbGGG4oK\nM0BgRgt3Yly/CZ0L5oziVzOFIIRJPYTydAEs0EAQPdKzfICnPLHQILmyaSG8vAYn\n/Ug7FXcO8WEnRVdsn52vK5aZYgtl1+t5fvkkXkEYukOC8FZczYgz4zlcsARRqJs=\n=i+Xz\n-----END PGP SIGNATURE-----\n", "payload": "tree 4e4ba888705463fa50c32b98390ac0ce3f15e765\nparent 714c8ea9b5f1c15fec4211eef2ea04385fe4d386\nparent 55f15d765565773e95c60e7e14b956bfeed30157\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1565352451 +0200\ncommitter GitHub <noreply@github.com> 1565352451 +0200\n\nRollup merge of #63397 - JohnTitor:add-tests-for-ices, r=Centril\n\nAdd tests for some ICEs\n\nCloses #43623\nCloses #44405\n\nr? @Centril\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7a251629a2236b2d0a99e462b4db67d33d872aaf", "html_url": "https://github.com/rust-lang/rust/commit/7a251629a2236b2d0a99e462b4db67d33d872aaf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7a251629a2236b2d0a99e462b4db67d33d872aaf/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "714c8ea9b5f1c15fec4211eef2ea04385fe4d386", "url": "https://api.github.com/repos/rust-lang/rust/commits/714c8ea9b5f1c15fec4211eef2ea04385fe4d386", "html_url": "https://github.com/rust-lang/rust/commit/714c8ea9b5f1c15fec4211eef2ea04385fe4d386"}, {"sha": "55f15d765565773e95c60e7e14b956bfeed30157", "url": "https://api.github.com/repos/rust-lang/rust/commits/55f15d765565773e95c60e7e14b956bfeed30157", "html_url": "https://github.com/rust-lang/rust/commit/55f15d765565773e95c60e7e14b956bfeed30157"}], "stats": {"total": 94, "additions": 94, "deletions": 0}, "files": [{"sha": "b259e9e269d06836ad5447cd5ca074da0f7f260d", "filename": "src/test/ui/issues/issue-43623.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/7a251629a2236b2d0a99e462b4db67d33d872aaf/src%2Ftest%2Fui%2Fissues%2Fissue-43623.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a251629a2236b2d0a99e462b4db67d33d872aaf/src%2Ftest%2Fui%2Fissues%2Fissue-43623.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-43623.rs?ref=7a251629a2236b2d0a99e462b4db67d33d872aaf", "patch": "@@ -0,0 +1,19 @@\n+pub trait Trait<'a> {\n+    type Assoc;\n+}\n+\n+pub struct Type;\n+\n+impl<'a> Trait<'a> for Type {\n+    type Assoc = ();\n+}\n+\n+pub fn break_me<T, F>(f: F)\n+where T: for<'b> Trait<'b>,\n+      F: for<'b> FnMut(<T as Trait<'b>>::Assoc) {\n+    break_me::<Type, fn(_)>;\n+    //~^ ERROR: type mismatch in function arguments\n+    //~| ERROR: type mismatch resolving\n+}\n+\n+fn main() {}"}, {"sha": "b5674105f75d22e5f432dd5663c046027d0da1d8", "filename": "src/test/ui/issues/issue-43623.stderr", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/7a251629a2236b2d0a99e462b4db67d33d872aaf/src%2Ftest%2Fui%2Fissues%2Fissue-43623.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7a251629a2236b2d0a99e462b4db67d33d872aaf/src%2Ftest%2Fui%2Fissues%2Fissue-43623.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-43623.stderr?ref=7a251629a2236b2d0a99e462b4db67d33d872aaf", "patch": "@@ -0,0 +1,42 @@\n+error[E0631]: type mismatch in function arguments\n+  --> $DIR/issue-43623.rs:14:5\n+   |\n+LL |     break_me::<Type, fn(_)>;\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^\n+   |     |\n+   |     expected signature of `for<'b> fn(<Type as Trait<'b>>::Assoc) -> _`\n+   |     found signature of `fn(_) -> _`\n+   |\n+note: required by `break_me`\n+  --> $DIR/issue-43623.rs:11:1\n+   |\n+LL | / pub fn break_me<T, F>(f: F)\n+LL | | where T: for<'b> Trait<'b>,\n+LL | |       F: for<'b> FnMut(<T as Trait<'b>>::Assoc) {\n+LL | |     break_me::<Type, fn(_)>;\n+LL | |\n+LL | |\n+LL | | }\n+   | |_^\n+\n+error[E0271]: type mismatch resolving `for<'b> <fn(_) as std::ops::FnOnce<(<Type as Trait<'b>>::Assoc,)>>::Output == ()`\n+  --> $DIR/issue-43623.rs:14:5\n+   |\n+LL |     break_me::<Type, fn(_)>;\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^ expected bound lifetime parameter 'b, found concrete lifetime\n+   |\n+note: required by `break_me`\n+  --> $DIR/issue-43623.rs:11:1\n+   |\n+LL | / pub fn break_me<T, F>(f: F)\n+LL | | where T: for<'b> Trait<'b>,\n+LL | |       F: for<'b> FnMut(<T as Trait<'b>>::Assoc) {\n+LL | |     break_me::<Type, fn(_)>;\n+LL | |\n+LL | |\n+LL | | }\n+   | |_^\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0271`."}, {"sha": "d404b9044dd6f9260e2883c01838371ba4b65726", "filename": "src/test/ui/issues/issue-44405.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/7a251629a2236b2d0a99e462b4db67d33d872aaf/src%2Ftest%2Fui%2Fissues%2Fissue-44405.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a251629a2236b2d0a99e462b4db67d33d872aaf/src%2Ftest%2Fui%2Fissues%2Fissue-44405.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-44405.rs?ref=7a251629a2236b2d0a99e462b4db67d33d872aaf", "patch": "@@ -0,0 +1,22 @@\n+use std::ops::Index;\n+\n+struct Test;\n+struct Container(Test);\n+\n+impl Test {\n+    fn test(&mut self) {}\n+}\n+\n+impl<'a> Index<&'a bool> for Container {\n+    type Output = Test;\n+\n+    fn index(&self, _index: &'a bool) -> &Test {\n+        &self.0\n+    }\n+}\n+\n+fn main() {\n+    let container = Container(Test);\n+    let mut val = true;\n+    container[&mut val].test(); //~ ERROR: cannot borrow data\n+}"}, {"sha": "1fd69f6e77799c7738c0d6ca04bcd672690460de", "filename": "src/test/ui/issues/issue-44405.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/7a251629a2236b2d0a99e462b4db67d33d872aaf/src%2Ftest%2Fui%2Fissues%2Fissue-44405.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7a251629a2236b2d0a99e462b4db67d33d872aaf/src%2Ftest%2Fui%2Fissues%2Fissue-44405.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-44405.stderr?ref=7a251629a2236b2d0a99e462b4db67d33d872aaf", "patch": "@@ -0,0 +1,11 @@\n+error[E0596]: cannot borrow data in an index of `Container` as mutable\n+  --> $DIR/issue-44405.rs:21:5\n+   |\n+LL |     container[&mut val].test();\n+   |     ^^^^^^^^^^^^^^^^^^^ cannot borrow as mutable\n+   |\n+   = help: trait `IndexMut` is required to modify indexed content, but it is not implemented for `Container`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0596`."}]}