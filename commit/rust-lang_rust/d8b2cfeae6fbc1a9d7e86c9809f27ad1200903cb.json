{"sha": "d8b2cfeae6fbc1a9d7e86c9809f27ad1200903cb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ4YjJjZmVhZTZmYmMxYTlkN2U4NmM5ODA5ZjI3YWQxMjAwOTAzY2I=", "commit": {"author": {"name": "Cobrand", "email": "cobrandw@gmail.com", "date": "2016-09-16T21:52:03Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-09-16T21:52:03Z"}, "message": "Remove stray println! when invoking error E0316", "tree": {"sha": "11e84599c8918f243ca86a903c67c7e6f188a639", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/11e84599c8918f243ca86a903c67c7e6f188a639"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d8b2cfeae6fbc1a9d7e86c9809f27ad1200903cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d8b2cfeae6fbc1a9d7e86c9809f27ad1200903cb", "html_url": "https://github.com/rust-lang/rust/commit/d8b2cfeae6fbc1a9d7e86c9809f27ad1200903cb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d8b2cfeae6fbc1a9d7e86c9809f27ad1200903cb/comments", "author": {"login": "Cobrand", "id": 8882127, "node_id": "MDQ6VXNlcjg4ODIxMjc=", "avatar_url": "https://avatars.githubusercontent.com/u/8882127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Cobrand", "html_url": "https://github.com/Cobrand", "followers_url": "https://api.github.com/users/Cobrand/followers", "following_url": "https://api.github.com/users/Cobrand/following{/other_user}", "gists_url": "https://api.github.com/users/Cobrand/gists{/gist_id}", "starred_url": "https://api.github.com/users/Cobrand/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Cobrand/subscriptions", "organizations_url": "https://api.github.com/users/Cobrand/orgs", "repos_url": "https://api.github.com/users/Cobrand/repos", "events_url": "https://api.github.com/users/Cobrand/events{/privacy}", "received_events_url": "https://api.github.com/users/Cobrand/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8394685b8385156fc4bc31cfbc693867e276d9d7", "url": "https://api.github.com/repos/rust-lang/rust/commits/8394685b8385156fc4bc31cfbc693867e276d9d7", "html_url": "https://github.com/rust-lang/rust/commit/8394685b8385156fc4bc31cfbc693867e276d9d7"}], "stats": {"total": 1, "additions": 0, "deletions": 1}, "files": [{"sha": "2d93c33afb4095e743978841418b33b9ce65dc2b", "filename": "src/librustc/middle/resolve_lifetime.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d8b2cfeae6fbc1a9d7e86c9809f27ad1200903cb/src%2Flibrustc%2Fmiddle%2Fresolve_lifetime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d8b2cfeae6fbc1a9d7e86c9809f27ad1200903cb/src%2Flibrustc%2Fmiddle%2Fresolve_lifetime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fresolve_lifetime.rs?ref=d8b2cfeae6fbc1a9d7e86c9809f27ad1200903cb", "patch": "@@ -337,7 +337,6 @@ impl<'a, 'tcx, 'v> Visitor<'v> for LifetimeContext<'a, 'tcx> {\n \n         if !self.trait_ref_hack || !trait_ref.bound_lifetimes.is_empty() {\n             if self.trait_ref_hack {\n-                println!(\"{:?}\", trait_ref.span);\n                 span_err!(self.sess, trait_ref.span, E0316,\n                           \"nested quantification of lifetimes\");\n             }"}]}