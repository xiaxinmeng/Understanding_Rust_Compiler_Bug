{"sha": "7dc36e9d9991608c59ac9e40e89573318cd08b74", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdkYzM2ZTlkOTk5MTYwOGM1OWFjOWU0MGU4OTU3MzMxOGNkMDhiNzQ=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-03-06T15:19:48Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-03-07T05:01:19Z"}, "message": "Add tests for issues with the 'E-needtest' label.", "tree": {"sha": "dd8699df20f882b11b9ddc1bf22558ad4b1737a1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dd8699df20f882b11b9ddc1bf22558ad4b1737a1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7dc36e9d9991608c59ac9e40e89573318cd08b74", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7dc36e9d9991608c59ac9e40e89573318cd08b74", "html_url": "https://github.com/rust-lang/rust/commit/7dc36e9d9991608c59ac9e40e89573318cd08b74", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7dc36e9d9991608c59ac9e40e89573318cd08b74/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b04ebef43242ade6be8968694caf56a0fb00a4d3", "url": "https://api.github.com/repos/rust-lang/rust/commits/b04ebef43242ade6be8968694caf56a0fb00a4d3", "html_url": "https://github.com/rust-lang/rust/commit/b04ebef43242ade6be8968694caf56a0fb00a4d3"}], "stats": {"total": 130, "additions": 130, "deletions": 0}, "files": [{"sha": "320ea6b5cc4e381b571b9607692cfe847f239f2f", "filename": "src/test/codegen/issue-15953.rs", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/7dc36e9d9991608c59ac9e40e89573318cd08b74/src%2Ftest%2Fcodegen%2Fissue-15953.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7dc36e9d9991608c59ac9e40e89573318cd08b74/src%2Ftest%2Fcodegen%2Fissue-15953.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fissue-15953.rs?ref=7dc36e9d9991608c59ac9e40e89573318cd08b74", "patch": "@@ -0,0 +1,39 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Test that llvm generates `memcpy` for moving a value\n+// inside a function and moving an argument.\n+\n+struct Foo {\n+    x: Vec<i32>,\n+}\n+\n+#[inline(never)]\n+#[no_mangle]\n+// CHECK: memcpy\n+fn interior(x: Vec<i32>) -> Vec<i32> {\n+    let Foo { x } = Foo { x: x };\n+    x\n+}\n+\n+#[inline(never)]\n+#[no_mangle]\n+// CHECK: memcpy\n+fn exterior(x: Vec<i32>) -> Vec<i32> {\n+    x\n+}\n+\n+fn main() {\n+    let x = interior(Vec::new());\n+    println!(\"{:?}\", x);\n+\n+    let x = exterior(Vec::new());\n+    println!(\"{:?}\", x);\n+}"}, {"sha": "60afea5a621bd7219fe0168508d62979975fc444", "filename": "src/test/compile-fail/issue-18446.rs", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/7dc36e9d9991608c59ac9e40e89573318cd08b74/src%2Ftest%2Fcompile-fail%2Fissue-18446.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7dc36e9d9991608c59ac9e40e89573318cd08b74/src%2Ftest%2Fcompile-fail%2Fissue-18446.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-18446.rs?ref=7dc36e9d9991608c59ac9e40e89573318cd08b74", "patch": "@@ -0,0 +1,29 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Test that name clashes between the method in an impl for the type\n+// and the method in the trait when both are in the same scope.\n+\n+trait T {\n+    fn foo(&self);\n+}\n+\n+impl<'a> T + 'a {\n+    fn foo(&self) {}\n+}\n+\n+impl T for i32 {\n+    fn foo(&self) {}\n+}\n+\n+fn main() {\n+    let x: &T = &0i32;\n+    x.foo(); //~ ERROR multiple applicable items in scope [E0034]\n+}"}, {"sha": "0df84a436c0a936f0409dd159ac6f8934e09d428", "filename": "src/test/compile-fail/issue-22874.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/7dc36e9d9991608c59ac9e40e89573318cd08b74/src%2Ftest%2Fcompile-fail%2Fissue-22874.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7dc36e9d9991608c59ac9e40e89573318cd08b74/src%2Ftest%2Fcompile-fail%2Fissue-22874.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-22874.rs?ref=7dc36e9d9991608c59ac9e40e89573318cd08b74", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+struct Table {\n+    rows: [[String]],\n+    //~^ ERROR the trait bound `[std::string::String]: std::marker::Sized` is not satisfied [E0277]\n+}\n+\n+fn f(table: &Table) -> &[String] {\n+    &table.rows[0]\n+}\n+\n+fn main() {}"}, {"sha": "eb321e046dcbf55a9c46522f5a347f88cdf5fbd1", "filename": "src/test/run-pass/issue-18446.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/7dc36e9d9991608c59ac9e40e89573318cd08b74/src%2Ftest%2Frun-pass%2Fissue-18446.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7dc36e9d9991608c59ac9e40e89573318cd08b74/src%2Ftest%2Frun-pass%2Fissue-18446.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-18446.rs?ref=7dc36e9d9991608c59ac9e40e89573318cd08b74", "patch": "@@ -0,0 +1,21 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Test that methods in trait impls should override default methods.\n+\n+trait T {\n+    fn foo(&self) -> i32 { 0 }\n+}\n+\n+impl<'a> T + 'a {\n+    fn foo(&self) -> i32 { 1 }\n+}\n+\n+fn main() {}"}, {"sha": "fc286184dcb351a44266098ca90ce52863355fc6", "filename": "src/test/run-pass/issue-23311.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/7dc36e9d9991608c59ac9e40e89573318cd08b74/src%2Ftest%2Frun-pass%2Fissue-23311.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7dc36e9d9991608c59ac9e40e89573318cd08b74/src%2Ftest%2Frun-pass%2Fissue-23311.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-23311.rs?ref=7dc36e9d9991608c59ac9e40e89573318cd08b74", "patch": "@@ -0,0 +1,21 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Test that we do not ICE when pattern matching an array against a slice.\n+\n+#![feature(slice_patterns)]\n+\n+fn main() {\n+    match \"foo\".as_bytes() {\n+        b\"food\" => (),\n+        &[b'f', ..] => (),\n+        _ => ()\n+    }\n+}"}]}