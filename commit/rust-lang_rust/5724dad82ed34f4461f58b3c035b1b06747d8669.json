{"sha": "5724dad82ed34f4461f58b3c035b1b06747d8669", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU3MjRkYWQ4MmVkMzRmNDQ2MWY1OGIzYzAzNWIxYjA2NzQ3ZDg2Njk=", "commit": {"author": {"name": "est31", "email": "MTest31@outlook.com", "date": "2018-05-26T00:48:08Z"}, "committer": {"name": "est31", "email": "MTest31@outlook.com", "date": "2018-05-26T01:09:55Z"}, "message": "Fail typecheck if we encounter a bogus break\n\nLone breaks outside of loops create errors in the\nloop check pass but as they are not fatal,\ncompilation continues.\n\nMIR building code assumes all HIR break statements\nto point to valid locations and fires ICEs if this\nassumption is violated. In normal compilation,\nthis causes no issues, as code apparently prevents\nMIR from being built if errors are present.\n\nHowever, before that, typecheck runs and with it\nMIR const eval. Here we operate differently\nfrom normal compilation: it doesn't check for any\nerrors except for type checker ones and then\ndirectly builds the MIR.\n\nThis constellation causes an ICE-on-error if\nbogus break statements are being put into array\nlength expressions.\n\nThis commit fixes this ICE by letting typecheck\nfail if bogus break statements are encountered.\nThis way, MIR const eval fails cleanly with a\ntype check error.\n\nFixes #50576\nFixes #50581", "tree": {"sha": "3aad7416f0bb6961578b9e1076528dbc0cf7f2f4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3aad7416f0bb6961578b9e1076528dbc0cf7f2f4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5724dad82ed34f4461f58b3c035b1b06747d8669", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5724dad82ed34f4461f58b3c035b1b06747d8669", "html_url": "https://github.com/rust-lang/rust/commit/5724dad82ed34f4461f58b3c035b1b06747d8669", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5724dad82ed34f4461f58b3c035b1b06747d8669/comments", "author": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "committer": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "990d8aa743b1dda3cc0f68fe09524486261812c6", "url": "https://api.github.com/repos/rust-lang/rust/commits/990d8aa743b1dda3cc0f68fe09524486261812c6", "html_url": "https://github.com/rust-lang/rust/commit/990d8aa743b1dda3cc0f68fe09524486261812c6"}], "stats": {"total": 68, "additions": 66, "deletions": 2}, "files": [{"sha": "16695dcef8f7108cbded11795f02845f30262665", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/5724dad82ed34f4461f58b3c035b1b06747d8669/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5724dad82ed34f4461f58b3c035b1b06747d8669/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=5724dad82ed34f4461f58b3c035b1b06747d8669", "patch": "@@ -3764,6 +3764,9 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                   }\n \n                   ctxt.may_break = true;\n+\n+                  // the type of a `break` is always `!`, since it diverges\n+                  tcx.types.never\n               } else {\n                   // Otherwise, we failed to find the enclosing loop;\n                   // this can only happen if the `break` was not\n@@ -3784,10 +3787,10 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                           }\n                       }\n                   }\n+                  // There was an error, make typecheck fail\n+                  tcx.types.err\n               }\n \n-              // the type of a `break` is always `!`, since it diverges\n-              tcx.types.never\n           }\n           hir::ExprAgain(_) => { tcx.types.never }\n           hir::ExprRet(ref expr_opt) => {"}, {"sha": "b236283f75764df226ac90130d0bd1f7d2e82df3", "filename": "src/test/compile-fail/issue-43162.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5724dad82ed34f4461f58b3c035b1b06747d8669/src%2Ftest%2Fcompile-fail%2Fissue-43162.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5724dad82ed34f4461f58b3c035b1b06747d8669/src%2Ftest%2Fcompile-fail%2Fissue-43162.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-43162.rs?ref=5724dad82ed34f4461f58b3c035b1b06747d8669", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n fn foo() -> bool {\n+    //~^ ERROR E0308\n     break true; //~ ERROR E0268\n }\n "}, {"sha": "b2032fb226bd13e6dd295bfb9463247a7165681c", "filename": "src/test/ui/issue-50576.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/5724dad82ed34f4461f58b3c035b1b06747d8669/src%2Ftest%2Fui%2Fissue-50576.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5724dad82ed34f4461f58b3c035b1b06747d8669/src%2Ftest%2Fui%2Fissue-50576.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-50576.rs?ref=5724dad82ed34f4461f58b3c035b1b06747d8669", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn main() {\n+    |bool: [u8; break 'L]| 0;\n+    //~^ ERROR [E0426]\n+    //~| ERROR [E0268]\n+    Vec::<[u8; break]>::new(); //~ ERROR [E0268]\n+}"}, {"sha": "e661be2133900abe5d69c0a5112b9d09c0c16d71", "filename": "src/test/ui/issue-50576.stderr", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/5724dad82ed34f4461f58b3c035b1b06747d8669/src%2Ftest%2Fui%2Fissue-50576.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5724dad82ed34f4461f58b3c035b1b06747d8669/src%2Ftest%2Fui%2Fissue-50576.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-50576.stderr?ref=5724dad82ed34f4461f58b3c035b1b06747d8669", "patch": "@@ -0,0 +1,22 @@\n+error[E0426]: use of undeclared label `'L`\n+  --> $DIR/issue-50576.rs:12:23\n+   |\n+LL |     |bool: [u8; break 'L]| 0;\n+   |                       ^^ undeclared label `'L`\n+\n+error[E0268]: `break` outside of loop\n+  --> $DIR/issue-50576.rs:12:17\n+   |\n+LL |     |bool: [u8; break 'L]| 0;\n+   |                 ^^^^^^^^ cannot break outside of a loop\n+\n+error[E0268]: `break` outside of loop\n+  --> $DIR/issue-50576.rs:15:16\n+   |\n+LL |     Vec::<[u8; break]>::new(); //~ ERROR [E0268]\n+   |                ^^^^^ cannot break outside of a loop\n+\n+error: aborting due to 3 previous errors\n+\n+Some errors occurred: E0268, E0426.\n+For more information about an error, try `rustc --explain E0268`."}, {"sha": "97b3f81eaf5fb1ff058d90e758158d2dd2a0cee2", "filename": "src/test/ui/issue-50581.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/5724dad82ed34f4461f58b3c035b1b06747d8669/src%2Ftest%2Fui%2Fissue-50581.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5724dad82ed34f4461f58b3c035b1b06747d8669/src%2Ftest%2Fui%2Fissue-50581.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-50581.rs?ref=5724dad82ed34f4461f58b3c035b1b06747d8669", "patch": "@@ -0,0 +1,13 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn main() {\n+    |_: [u8; break]| (); //~ ERROR [E0268]\n+}"}, {"sha": "38a87b1e78a1bc671d2b8f5967c7bce67ef4db1b", "filename": "src/test/ui/issue-50581.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/5724dad82ed34f4461f58b3c035b1b06747d8669/src%2Ftest%2Fui%2Fissue-50581.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5724dad82ed34f4461f58b3c035b1b06747d8669/src%2Ftest%2Fui%2Fissue-50581.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-50581.stderr?ref=5724dad82ed34f4461f58b3c035b1b06747d8669", "patch": "@@ -0,0 +1,9 @@\n+error[E0268]: `break` outside of loop\n+  --> $DIR/issue-50581.rs:12:14\n+   |\n+LL |     |_: [u8; break]| (); //~ ERROR [E0268]\n+   |              ^^^^^ cannot break outside of a loop\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0268`."}]}