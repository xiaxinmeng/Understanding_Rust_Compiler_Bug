{"sha": "d0ae6ebe63913b56ddcb557e836e36b49136944a", "node_id": "C_kwDOAAsO6NoAKGQwYWU2ZWJlNjM5MTNiNTZkZGNiNTU3ZTgzNmUzNmI0OTEzNjk0NGE", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-06-27T20:35:11Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-06-27T20:35:11Z"}, "message": "Rollup merge of #98577 - GuillaumeGomez:associated-items, r=notriddle\n\nFix \"kind\" for associated types in trait implementations in rustdoc JSON\n\nFixes https://github.com/rust-lang/rust/issues/81340.\n\nContrary to what is suggested in the issue, I really think we should distinguish between associated items and \"normal\" constants and types.\n\ncc `@CraftSpider` `@SimonSapin`\nr? `@notriddle`", "tree": {"sha": "698e6f09404603453c315889769462b85b5cf186", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/698e6f09404603453c315889769462b85b5cf186"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d0ae6ebe63913b56ddcb557e836e36b49136944a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiuhR/CRBK7hj4Ov3rIwAAFFQIAFU3TWZIU7D1X2vv91O9z3ZE\n8++s824wfkw5iPVLMxxTeR5Xh5GNido9G0cQK/j2np2RGPexNnCzidw6sHtUPSrN\n4LPszIQhaXtVgsLCZXx5hD24WSk21IIfc81RWuxLx2K5MU5O1eBP7HYcQMctG3NM\n3+agWjyM3S7z/omCANeZ2LdYWvtLg1GbuVAdK0sB8QO9OLrBkMvj96Z6frc4GIew\nnZObFfGwRNiN7fitaNy76epcq7+UtX4zcf1WaUylNsNyoIKmHfSwzdAQ5HVIIjvh\nAgvvMI5RiOyi0WRSVfcXIwEowdk5tXEROPtu23eBffdvqlYwY05e+AqUhKP6yu0=\n=iCfo\n-----END PGP SIGNATURE-----\n", "payload": "tree 698e6f09404603453c315889769462b85b5cf186\nparent 950934801ee6480e47973dc99a8c9e5eb8e884f0\nparent 9277f959dda23b3a4129b28cc5b059788f6653af\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1656362111 +0200\ncommitter GitHub <noreply@github.com> 1656362111 +0200\n\nRollup merge of #98577 - GuillaumeGomez:associated-items, r=notriddle\n\nFix \"kind\" for associated types in trait implementations in rustdoc JSON\n\nFixes https://github.com/rust-lang/rust/issues/81340.\n\nContrary to what is suggested in the issue, I really think we should distinguish between associated items and \"normal\" constants and types.\n\ncc `@CraftSpider` `@SimonSapin`\nr? `@notriddle`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d0ae6ebe63913b56ddcb557e836e36b49136944a", "html_url": "https://github.com/rust-lang/rust/commit/d0ae6ebe63913b56ddcb557e836e36b49136944a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d0ae6ebe63913b56ddcb557e836e36b49136944a/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "950934801ee6480e47973dc99a8c9e5eb8e884f0", "url": "https://api.github.com/repos/rust-lang/rust/commits/950934801ee6480e47973dc99a8c9e5eb8e884f0", "html_url": "https://github.com/rust-lang/rust/commit/950934801ee6480e47973dc99a8c9e5eb8e884f0"}, {"sha": "9277f959dda23b3a4129b28cc5b059788f6653af", "url": "https://api.github.com/repos/rust-lang/rust/commits/9277f959dda23b3a4129b28cc5b059788f6653af", "html_url": "https://github.com/rust-lang/rust/commit/9277f959dda23b3a4129b28cc5b059788f6653af"}], "stats": {"total": 36, "additions": 34, "deletions": 2}, "files": [{"sha": "428519dbc16b31df8814af4fc89460d93f66c9b2", "filename": "src/librustdoc/json/conversions.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/d0ae6ebe63913b56ddcb557e836e36b49136944a/src%2Flibrustdoc%2Fjson%2Fconversions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0ae6ebe63913b56ddcb557e836e36b49136944a/src%2Flibrustdoc%2Fjson%2Fconversions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fjson%2Fconversions.rs?ref=d0ae6ebe63913b56ddcb557e836e36b49136944a", "patch": "@@ -252,8 +252,11 @@ fn from_clean_item(item: clean::Item, tcx: TyCtxt<'_>) -> ItemEnum {\n             bounds: b.into_iter().map(|x| x.into_tcx(tcx)).collect(),\n             default: None,\n         },\n-        // FIXME: do not map to Typedef but to a custom variant\n-        AssocTypeItem(t, _) => ItemEnum::Typedef(t.into_tcx(tcx)),\n+        AssocTypeItem(t, b) => ItemEnum::AssocType {\n+            generics: t.generics.into_tcx(tcx),\n+            bounds: b.into_iter().map(|x| x.into_tcx(tcx)).collect(),\n+            default: t.item_type.map(|ty| ty.into_tcx(tcx)),\n+        },\n         // `convert_item` early returns `None` for striped items and keywords.\n         StrippedItem(_) | KeywordItem(_) => unreachable!(),\n         ExternCrateItem { ref src } => ItemEnum::ExternCrate {"}, {"sha": "2ee64c9f6eb99237865f75a9d5e627561517d1ab", "filename": "src/test/rustdoc-json/assoc_items.rs", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/d0ae6ebe63913b56ddcb557e836e36b49136944a/src%2Ftest%2Frustdoc-json%2Fassoc_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0ae6ebe63913b56ddcb557e836e36b49136944a/src%2Ftest%2Frustdoc-json%2Fassoc_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-json%2Fassoc_items.rs?ref=d0ae6ebe63913b56ddcb557e836e36b49136944a", "patch": "@@ -0,0 +1,29 @@\n+#![no_std]\n+\n+// @has assoc_items.json\n+\n+pub struct Simple;\n+\n+impl Simple {\n+    // @has - \"$.index[*][?(@.name=='CONSTANT')].kind\" \\\"assoc_const\\\"\n+    pub const CONSTANT: usize = 0;\n+}\n+\n+pub trait EasyToImpl {\n+    // @has - \"$.index[*][?(@.name=='ToDeclare')].kind\" \\\"assoc_type\\\"\n+    // @has - \"$.index[*][?(@.name=='ToDeclare')].inner.default\" null\n+    type ToDeclare;\n+    // @has - \"$.index[*][?(@.name=='AN_ATTRIBUTE')].kind\" \\\"assoc_const\\\"\n+    // @has - \"$.index[*][?(@.name=='AN_ATTRIBUTE')].inner.default\" null\n+    const AN_ATTRIBUTE: usize;\n+}\n+\n+impl EasyToImpl for Simple {\n+    // @has - \"$.index[*][?(@.name=='ToDeclare')].inner.default.kind\" \\\"primitive\\\"\n+    // @has - \"$.index[*][?(@.name=='ToDeclare')].inner.default.inner\" \\\"usize\\\"\n+    type ToDeclare = usize;\n+    // @has - \"$.index[*][?(@.name=='AN_ATTRIBUTE')].inner.type.kind\" \\\"primitive\\\"\n+    // @has - \"$.index[*][?(@.name=='AN_ATTRIBUTE')].inner.type.inner\" \\\"usize\\\"\n+    // @has - \"$.index[*][?(@.name=='AN_ATTRIBUTE')].inner.default\" \\\"12\\\"\n+    const AN_ATTRIBUTE: usize = 12;\n+}"}]}