{"sha": "605225a366b62f29f5fd4b03cc298fff03bc3bdf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYwNTIyNWEzNjZiNjJmMjlmNWZkNGIwM2NjMjk4ZmZmMDNiYzNiZGY=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-02-06T22:47:55Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-02-09T23:58:13Z"}, "message": "std: Rename IntoIterator::Iter to IntoIter\n\nThis is in preparation for stabilization of the `IntoIterator` trait. All\nimplementations and references to `Iter` need to be renamed to `IntoIter`.\n\n[breaking-change]", "tree": {"sha": "50d9d4dc2b5c3e9aa552cb408a5dcc7e192beede", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/50d9d4dc2b5c3e9aa552cb408a5dcc7e192beede"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/605225a366b62f29f5fd4b03cc298fff03bc3bdf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/605225a366b62f29f5fd4b03cc298fff03bc3bdf", "html_url": "https://github.com/rust-lang/rust/commit/605225a366b62f29f5fd4b03cc298fff03bc3bdf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/605225a366b62f29f5fd4b03cc298fff03bc3bdf/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "64a4decec779ee0a30585a12352d20a54b722506", "url": "https://api.github.com/repos/rust-lang/rust/commits/64a4decec779ee0a30585a12352d20a54b722506", "html_url": "https://github.com/rust-lang/rust/commit/64a4decec779ee0a30585a12352d20a54b722506"}], "stats": {"total": 68, "additions": 34, "deletions": 34}, "files": [{"sha": "11576fbb00c9b5dcb44710df6d51da75cc0efd02", "filename": "src/libcollections/binary_heap.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/605225a366b62f29f5fd4b03cc298fff03bc3bdf/src%2Flibcollections%2Fbinary_heap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/605225a366b62f29f5fd4b03cc298fff03bc3bdf/src%2Flibcollections%2Fbinary_heap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fbinary_heap.rs?ref=605225a366b62f29f5fd4b03cc298fff03bc3bdf", "patch": "@@ -656,15 +656,15 @@ impl<T: Ord> FromIterator<T> for BinaryHeap<T> {\n }\n \n impl<T: Ord> IntoIterator for BinaryHeap<T> {\n-    type Iter = IntoIter<T>;\n+    type IntoIter = IntoIter<T>;\n \n     fn into_iter(self) -> IntoIter<T> {\n         self.into_iter()\n     }\n }\n \n impl<'a, T> IntoIterator for &'a BinaryHeap<T> where T: Ord {\n-    type Iter = Iter<'a, T>;\n+    type IntoIter = Iter<'a, T>;\n \n     fn into_iter(self) -> Iter<'a, T> {\n         self.iter()"}, {"sha": "6d15a264172a1c53f2b34f0d108a59ead8318c46", "filename": "src/libcollections/bit.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/605225a366b62f29f5fd4b03cc298fff03bc3bdf/src%2Flibcollections%2Fbit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/605225a366b62f29f5fd4b03cc298fff03bc3bdf/src%2Flibcollections%2Fbit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fbit.rs?ref=605225a366b62f29f5fd4b03cc298fff03bc3bdf", "patch": "@@ -1071,7 +1071,7 @@ impl<'a> RandomAccessIterator for Iter<'a> {\n }\n \n impl<'a> IntoIterator for &'a Bitv {\n-    type Iter = Iter<'a>;\n+    type IntoIter = Iter<'a>;\n \n     fn into_iter(self) -> Iter<'a> {\n         self.iter()\n@@ -1883,7 +1883,7 @@ impl<'a> Iterator for SymmetricDifference<'a> {\n }\n \n impl<'a> IntoIterator for &'a BitvSet {\n-    type Iter = SetIter<'a>;\n+    type IntoIter = SetIter<'a>;\n \n     fn into_iter(self) -> SetIter<'a> {\n         self.iter()"}, {"sha": "2cef08725a2f6aa13294085eb6f56b66de535550", "filename": "src/libcollections/btree/map.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/605225a366b62f29f5fd4b03cc298fff03bc3bdf/src%2Flibcollections%2Fbtree%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/605225a366b62f29f5fd4b03cc298fff03bc3bdf/src%2Flibcollections%2Fbtree%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fbtree%2Fmap.rs?ref=605225a366b62f29f5fd4b03cc298fff03bc3bdf", "patch": "@@ -463,23 +463,23 @@ impl<K: Ord, V> BTreeMap<K, V> {\n }\n \n impl<K, V> IntoIterator for BTreeMap<K, V> {\n-    type Iter = IntoIter<K, V>;\n+    type IntoIter = IntoIter<K, V>;\n \n     fn into_iter(self) -> IntoIter<K, V> {\n         self.into_iter()\n     }\n }\n \n impl<'a, K, V> IntoIterator for &'a BTreeMap<K, V> {\n-    type Iter = Iter<'a, K, V>;\n+    type IntoIter = Iter<'a, K, V>;\n \n     fn into_iter(self) -> Iter<'a, K, V> {\n         self.iter()\n     }\n }\n \n impl<'a, K, V> IntoIterator for &'a mut BTreeMap<K, V> {\n-    type Iter = IterMut<'a, K, V>;\n+    type IntoIter = IterMut<'a, K, V>;\n \n     fn into_iter(mut self) -> IterMut<'a, K, V> {\n         self.iter_mut()"}, {"sha": "7cb31ab1f6dbec86664400dd1aca636980cc641f", "filename": "src/libcollections/btree/set.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/605225a366b62f29f5fd4b03cc298fff03bc3bdf/src%2Flibcollections%2Fbtree%2Fset.rs", "raw_url": "https://github.com/rust-lang/rust/raw/605225a366b62f29f5fd4b03cc298fff03bc3bdf/src%2Flibcollections%2Fbtree%2Fset.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fbtree%2Fset.rs?ref=605225a366b62f29f5fd4b03cc298fff03bc3bdf", "patch": "@@ -481,15 +481,15 @@ impl<T: Ord> FromIterator<T> for BTreeSet<T> {\n }\n \n impl<T> IntoIterator for BTreeSet<T> {\n-    type Iter = IntoIter<T>;\n+    type IntoIter = IntoIter<T>;\n \n     fn into_iter(self) -> IntoIter<T> {\n         self.into_iter()\n     }\n }\n \n impl<'a, T> IntoIterator for &'a BTreeSet<T> {\n-    type Iter = Iter<'a, T>;\n+    type IntoIter = Iter<'a, T>;\n \n     fn into_iter(self) -> Iter<'a, T> {\n         self.iter()"}, {"sha": "a080146e0ec508fe6c2d443de0f21809468d5e27", "filename": "src/libcollections/dlist.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/605225a366b62f29f5fd4b03cc298fff03bc3bdf/src%2Flibcollections%2Fdlist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/605225a366b62f29f5fd4b03cc298fff03bc3bdf/src%2Flibcollections%2Fdlist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fdlist.rs?ref=605225a366b62f29f5fd4b03cc298fff03bc3bdf", "patch": "@@ -831,23 +831,23 @@ impl<A> FromIterator<A> for DList<A> {\n }\n \n impl<T> IntoIterator for DList<T> {\n-    type Iter = IntoIter<T>;\n+    type IntoIter = IntoIter<T>;\n \n     fn into_iter(self) -> IntoIter<T> {\n         self.into_iter()\n     }\n }\n \n impl<'a, T> IntoIterator for &'a DList<T> {\n-    type Iter = Iter<'a, T>;\n+    type IntoIter = Iter<'a, T>;\n \n     fn into_iter(self) -> Iter<'a, T> {\n         self.iter()\n     }\n }\n \n impl<'a, T> IntoIterator for &'a mut DList<T> {\n-    type Iter = IterMut<'a, T>;\n+    type IntoIter = IterMut<'a, T>;\n \n     fn into_iter(mut self) -> IterMut<'a, T> {\n         self.iter_mut()"}, {"sha": "da533d34703dd9574cf9b9a5c97d0af6b3863b3b", "filename": "src/libcollections/enum_set.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/605225a366b62f29f5fd4b03cc298fff03bc3bdf/src%2Flibcollections%2Fenum_set.rs", "raw_url": "https://github.com/rust-lang/rust/raw/605225a366b62f29f5fd4b03cc298fff03bc3bdf/src%2Flibcollections%2Fenum_set.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fenum_set.rs?ref=605225a366b62f29f5fd4b03cc298fff03bc3bdf", "patch": "@@ -258,7 +258,7 @@ impl<E:CLike> FromIterator<E> for EnumSet<E> {\n }\n \n impl<'a, E> IntoIterator for &'a EnumSet<E> where E: CLike {\n-    type Iter = Iter<E>;\n+    type IntoIter = Iter<E>;\n \n     fn into_iter(self) -> Iter<E> {\n         self.iter()"}, {"sha": "5f1dc1d2ef4ffb0ef8cbf26d871485849c65497c", "filename": "src/libcollections/ring_buf.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/605225a366b62f29f5fd4b03cc298fff03bc3bdf/src%2Flibcollections%2Fring_buf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/605225a366b62f29f5fd4b03cc298fff03bc3bdf/src%2Flibcollections%2Fring_buf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fring_buf.rs?ref=605225a366b62f29f5fd4b03cc298fff03bc3bdf", "patch": "@@ -1608,23 +1608,23 @@ impl<A> FromIterator<A> for RingBuf<A> {\n }\n \n impl<T> IntoIterator for RingBuf<T> {\n-    type Iter = IntoIter<T>;\n+    type IntoIter = IntoIter<T>;\n \n     fn into_iter(self) -> IntoIter<T> {\n         self.into_iter()\n     }\n }\n \n impl<'a, T> IntoIterator for &'a RingBuf<T> {\n-    type Iter = Iter<'a, T>;\n+    type IntoIter = Iter<'a, T>;\n \n     fn into_iter(self) -> Iter<'a, T> {\n         self.iter()\n     }\n }\n \n impl<'a, T> IntoIterator for &'a mut RingBuf<T> {\n-    type Iter = IterMut<'a, T>;\n+    type IntoIter = IterMut<'a, T>;\n \n     fn into_iter(mut self) -> IterMut<'a, T> {\n         self.iter_mut()"}, {"sha": "1cd2a89ad604e970bda2f690a1d4b0a7a40abb12", "filename": "src/libcollections/vec.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/605225a366b62f29f5fd4b03cc298fff03bc3bdf/src%2Flibcollections%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/605225a366b62f29f5fd4b03cc298fff03bc3bdf/src%2Flibcollections%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fvec.rs?ref=605225a366b62f29f5fd4b03cc298fff03bc3bdf", "patch": "@@ -1388,23 +1388,23 @@ impl<T> FromIterator<T> for Vec<T> {\n }\n \n impl<T> IntoIterator for Vec<T> {\n-    type Iter = IntoIter<T>;\n+    type IntoIter = IntoIter<T>;\n \n     fn into_iter(self) -> IntoIter<T> {\n         self.into_iter()\n     }\n }\n \n impl<'a, T> IntoIterator for &'a Vec<T> {\n-    type Iter = slice::Iter<'a, T>;\n+    type IntoIter = slice::Iter<'a, T>;\n \n     fn into_iter(self) -> slice::Iter<'a, T> {\n         self.iter()\n     }\n }\n \n impl<'a, T> IntoIterator for &'a mut Vec<T> {\n-    type Iter = slice::IterMut<'a, T>;\n+    type IntoIter = slice::IterMut<'a, T>;\n \n     fn into_iter(mut self) -> slice::IterMut<'a, T> {\n         self.iter_mut()"}, {"sha": "93d02de9b550e9aaecce48a15da6155f6ded66a6", "filename": "src/libcollections/vec_map.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/605225a366b62f29f5fd4b03cc298fff03bc3bdf/src%2Flibcollections%2Fvec_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/605225a366b62f29f5fd4b03cc298fff03bc3bdf/src%2Flibcollections%2Fvec_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fvec_map.rs?ref=605225a366b62f29f5fd4b03cc298fff03bc3bdf", "patch": "@@ -669,23 +669,23 @@ impl<V> FromIterator<(usize, V)> for VecMap<V> {\n }\n \n impl<T> IntoIterator for VecMap<T> {\n-    type Iter = IntoIter<T>;\n+    type IntoIter = IntoIter<T>;\n \n     fn into_iter(self) -> IntoIter<T> {\n         self.into_iter()\n     }\n }\n \n impl<'a, T> IntoIterator for &'a VecMap<T> {\n-    type Iter = Iter<'a, T>;\n+    type IntoIter = Iter<'a, T>;\n \n     fn into_iter(self) -> Iter<'a, T> {\n         self.iter()\n     }\n }\n \n impl<'a, T> IntoIterator for &'a mut VecMap<T> {\n-    type Iter = IterMut<'a, T>;\n+    type IntoIter = IterMut<'a, T>;\n \n     fn into_iter(mut self) -> IterMut<'a, T> {\n         self.iter_mut()"}, {"sha": "a596fe4a588098685c301244bbf9a9aea8b22b7e", "filename": "src/libcore/array.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/605225a366b62f29f5fd4b03cc298fff03bc3bdf/src%2Flibcore%2Farray.rs", "raw_url": "https://github.com/rust-lang/rust/raw/605225a366b62f29f5fd4b03cc298fff03bc3bdf/src%2Flibcore%2Farray.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Farray.rs?ref=605225a366b62f29f5fd4b03cc298fff03bc3bdf", "patch": "@@ -49,15 +49,15 @@ macro_rules! array_impls {\n             }\n \n             impl<'a, T> IntoIterator for &'a [T; $N] {\n-                type Iter = Iter<'a, T>;\n+                type IntoIter = Iter<'a, T>;\n \n                 fn into_iter(self) -> Iter<'a, T> {\n                     self.iter()\n                 }\n             }\n \n             impl<'a, T> IntoIterator for &'a mut [T; $N] {\n-                type Iter = IterMut<'a, T>;\n+                type IntoIter = IterMut<'a, T>;\n \n                 fn into_iter(self) -> IterMut<'a, T> {\n                     self.iter_mut()"}, {"sha": "2d240a53c4fea57dc76bfd85bd50e86ecebae02c", "filename": "src/libcore/iter.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/605225a366b62f29f5fd4b03cc298fff03bc3bdf/src%2Flibcore%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/605225a366b62f29f5fd4b03cc298fff03bc3bdf/src%2Flibcore%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter.rs?ref=605225a366b62f29f5fd4b03cc298fff03bc3bdf", "patch": "@@ -120,14 +120,14 @@ pub trait FromIterator<A> {\n \n /// Conversion into an `Iterator`\n pub trait IntoIterator {\n-    type Iter: Iterator;\n+    type IntoIter: Iterator;\n \n     /// Consumes `Self` and returns an iterator over it\n-    fn into_iter(self) -> Self::Iter;\n+    fn into_iter(self) -> Self::IntoIter;\n }\n \n impl<I> IntoIterator for I where I: Iterator {\n-    type Iter = I;\n+    type IntoIter = I;\n \n     fn into_iter(self) -> I {\n         self"}, {"sha": "459addb09fd721ad78b4dbf1504c86b6f367214a", "filename": "src/libcore/slice.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/605225a366b62f29f5fd4b03cc298fff03bc3bdf/src%2Flibcore%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/605225a366b62f29f5fd4b03cc298fff03bc3bdf/src%2Flibcore%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fslice.rs?ref=605225a366b62f29f5fd4b03cc298fff03bc3bdf", "patch": "@@ -628,15 +628,15 @@ impl<'a, T> Default for &'a [T] {\n //\n \n impl<'a, T> IntoIterator for &'a [T] {\n-    type Iter = Iter<'a, T>;\n+    type IntoIter = Iter<'a, T>;\n \n     fn into_iter(self) -> Iter<'a, T> {\n         self.iter()\n     }\n }\n \n impl<'a, T> IntoIterator for &'a mut [T] {\n-    type Iter = IterMut<'a, T>;\n+    type IntoIter = IterMut<'a, T>;\n \n     fn into_iter(self) -> IterMut<'a, T> {\n         self.iter_mut()"}, {"sha": "18dd122891daee93c08c2d2e9ae06aeab6acf1f7", "filename": "src/libstd/collections/hash/map.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/605225a366b62f29f5fd4b03cc298fff03bc3bdf/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/605225a366b62f29f5fd4b03cc298fff03bc3bdf/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs?ref=605225a366b62f29f5fd4b03cc298fff03bc3bdf", "patch": "@@ -1377,7 +1377,7 @@ impl<'a, K, V, S, H> IntoIterator for &'a HashMap<K, V, S>\n           S: HashState<Hasher=H>,\n           H: hash::Hasher<Output=u64>\n {\n-    type Iter = Iter<'a, K, V>;\n+    type IntoIter = Iter<'a, K, V>;\n \n     fn into_iter(self) -> Iter<'a, K, V> {\n         self.iter()\n@@ -1389,7 +1389,7 @@ impl<'a, K, V, S, H> IntoIterator for &'a mut HashMap<K, V, S>\n           S: HashState<Hasher=H>,\n           H: hash::Hasher<Output=u64>\n {\n-    type Iter = IterMut<'a, K, V>;\n+    type IntoIter = IterMut<'a, K, V>;\n \n     fn into_iter(mut self) -> IterMut<'a, K, V> {\n         self.iter_mut()\n@@ -1401,7 +1401,7 @@ impl<K, V, S, H> IntoIterator for HashMap<K, V, S>\n           S: HashState<Hasher=H>,\n           H: hash::Hasher<Output=u64>\n {\n-    type Iter = IntoIter<K, V>;\n+    type IntoIter = IntoIter<K, V>;\n \n     fn into_iter(self) -> IntoIter<K, V> {\n         self.into_iter()"}, {"sha": "de3c0424c9a858073c2a07db44bf76d480921e25", "filename": "src/libstd/collections/hash/set.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/605225a366b62f29f5fd4b03cc298fff03bc3bdf/src%2Flibstd%2Fcollections%2Fhash%2Fset.rs", "raw_url": "https://github.com/rust-lang/rust/raw/605225a366b62f29f5fd4b03cc298fff03bc3bdf/src%2Flibstd%2Fcollections%2Fhash%2Fset.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcollections%2Fhash%2Fset.rs?ref=605225a366b62f29f5fd4b03cc298fff03bc3bdf", "patch": "@@ -840,7 +840,7 @@ impl<'a, T, S, H> IntoIterator for &'a HashSet<T, S>\n           S: HashState<Hasher=H>,\n           H: hash::Hasher<Output=u64>\n {\n-    type Iter = Iter<'a, T>;\n+    type IntoIter = Iter<'a, T>;\n \n     fn into_iter(self) -> Iter<'a, T> {\n         self.iter()\n@@ -852,7 +852,7 @@ impl<T, S, H> IntoIterator for HashSet<T, S>\n           S: HashState<Hasher=H>,\n           H: hash::Hasher<Output=u64>\n {\n-    type Iter = IntoIter<T>;\n+    type IntoIter = IntoIter<T>;\n \n     fn into_iter(self) -> IntoIter<T> {\n         self.into_iter()"}]}