{"sha": "61ac138b5cc9c6e6d7a4ac33135c6086d2d4d644", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYxYWMxMzhiNWNjOWM2ZTZkN2E0YWMzMzEzNWM2MDg2ZDJkNGQ2NDQ=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-09-05T09:33:01Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-09-05T09:35:01Z"}, "message": "Disable atomics on avr target.\n\n`max_atomic_width` was missing in the spec, which means it fell back to\nthe pointer width of 16 bits.", "tree": {"sha": "08e2376f8d1232842945816730d8acb576bb79fa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/08e2376f8d1232842945816730d8acb576bb79fa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/61ac138b5cc9c6e6d7a4ac33135c6086d2d4d644", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/61ac138b5cc9c6e6d7a4ac33135c6086d2d4d644", "html_url": "https://github.com/rust-lang/rust/commit/61ac138b5cc9c6e6d7a4ac33135c6086d2d4d644", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/61ac138b5cc9c6e6d7a4ac33135c6086d2d4d644/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c3364780d2cfddfe329f62a3ec138fd4f9a60e27", "url": "https://api.github.com/repos/rust-lang/rust/commits/c3364780d2cfddfe329f62a3ec138fd4f9a60e27", "html_url": "https://github.com/rust-lang/rust/commit/c3364780d2cfddfe329f62a3ec138fd4f9a60e27"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "527a322d56a4fd1f8b5d708650f2ecd0e9e5f475", "filename": "compiler/rustc_target/src/spec/avr_gnu_base.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/61ac138b5cc9c6e6d7a4ac33135c6086d2d4d644/compiler%2Frustc_target%2Fsrc%2Fspec%2Favr_gnu_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/61ac138b5cc9c6e6d7a4ac33135c6086d2d4d644/compiler%2Frustc_target%2Fsrc%2Fspec%2Favr_gnu_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Favr_gnu_base.rs?ref=61ac138b5cc9c6e6d7a4ac33135c6086d2d4d644", "patch": "@@ -45,6 +45,8 @@ pub fn target(target_cpu: String) -> TargetResult {\n             late_link_args: vec![(LinkerFlavor::Gcc, vec![\"-lgcc\".to_owned()])]\n                 .into_iter()\n                 .collect(),\n+            max_atomic_width: Some(0),\n+            atomic_cas: false,\n             ..TargetOptions::default()\n         },\n     })"}]}