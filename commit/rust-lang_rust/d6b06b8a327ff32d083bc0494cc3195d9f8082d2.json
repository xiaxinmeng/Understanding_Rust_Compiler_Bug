{"sha": "d6b06b8a327ff32d083bc0494cc3195d9f8082d2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ2YjA2YjhhMzI3ZmYzMmQwODNiYzA0OTRjYzMxOTVkOWY4MDgyZDI=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2021-03-05T16:43:25Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2021-03-05T16:43:25Z"}, "message": "std: Fix a bug on the wasm32-wasi target opening files\n\nThis commit fixes an issue pointed out in #82758 where LTO changed the\nbehavior of a program. It turns out that LTO was not at fault here, it\nsimply uncovered an existing bug. The bindings to\n`__wasilibc_find_relpath` assumed that the relative portion of the path\nreturned was always contained within thee input `buf` we passed in. This\nisn't actually the case, however, and sometimes the relative portion of\nthe path may reference a sub-portion of the input string itself.\n\nThe fix here is to use the relative path pointer coming out of\n`__wasilibc_find_relpath` as the source of truth. The `buf` used for\nlocal storage is discarded in this function and the relative path is\ncopied out unconditionally. We might be able to get away with some\n`Cow`-like business or such to avoid the extra allocation, but for now\nthis is probably the easiest patch to fix the original issue.", "tree": {"sha": "81de2e3100001b9191d5fbf20041222e715c7f95", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/81de2e3100001b9191d5fbf20041222e715c7f95"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d6b06b8a327ff32d083bc0494cc3195d9f8082d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d6b06b8a327ff32d083bc0494cc3195d9f8082d2", "html_url": "https://github.com/rust-lang/rust/commit/d6b06b8a327ff32d083bc0494cc3195d9f8082d2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d6b06b8a327ff32d083bc0494cc3195d9f8082d2/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8ccc89bc312caa65ca46b55b47492abdd5b6910a", "url": "https://api.github.com/repos/rust-lang/rust/commits/8ccc89bc312caa65ca46b55b47492abdd5b6910a", "html_url": "https://github.com/rust-lang/rust/commit/8ccc89bc312caa65ca46b55b47492abdd5b6910a"}], "stats": {"total": 6, "additions": 2, "deletions": 4}, "files": [{"sha": "63c22136273fb4b9b723b6ab12aa56dc395ff466", "filename": "library/std/src/sys/wasi/fs.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d6b06b8a327ff32d083bc0494cc3195d9f8082d2/library%2Fstd%2Fsrc%2Fsys%2Fwasi%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6b06b8a327ff32d083bc0494cc3195d9f8082d2/library%2Fstd%2Fsrc%2Fsys%2Fwasi%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwasi%2Ffs.rs?ref=d6b06b8a327ff32d083bc0494cc3195d9f8082d2", "patch": "@@ -650,13 +650,11 @@ fn open_parent(p: &Path) -> io::Result<(ManuallyDrop<WasiFd>, PathBuf)> {\n                 );\n                 return Err(io::Error::new(io::ErrorKind::Other, msg));\n             }\n-            let len = CStr::from_ptr(buf.as_ptr().cast()).to_bytes().len();\n-            buf.set_len(len);\n-            buf.shrink_to_fit();\n+            let relative = CStr::from_ptr(relative_path).to_bytes().to_vec();\n \n             return Ok((\n                 ManuallyDrop::new(WasiFd::from_raw(fd as u32)),\n-                PathBuf::from(OsString::from_vec(buf)),\n+                PathBuf::from(OsString::from_vec(relative)),\n             ));\n         }\n     }"}]}