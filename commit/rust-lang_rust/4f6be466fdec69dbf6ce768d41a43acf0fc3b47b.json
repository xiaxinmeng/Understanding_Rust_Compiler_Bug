{"sha": "4f6be466fdec69dbf6ce768d41a43acf0fc3b47b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRmNmJlNDY2ZmRlYzY5ZGJmNmNlNzY4ZDQxYTQzYWNmMGZjM2I0N2I=", "commit": {"author": {"name": "ThePuzzlemaker", "email": "tpzker@thepuzzlemaker.info", "date": "2020-12-22T02:23:21Z"}, "committer": {"name": "ThePuzzlemaker", "email": "tpzker@thepuzzlemaker.info", "date": "2020-12-22T19:26:28Z"}, "message": "Suggest fn ptr rather than fn item and suggest to use `Fn` trait bounds rather than the unique closure type in E0121\n\nThis is a squash of the titular commit along with these minor commits:\n- Improve note\n- Improve note pt2", "tree": {"sha": "1233b8fb27b856bc15bcff68dfaacc74e66a36f2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1233b8fb27b856bc15bcff68dfaacc74e66a36f2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4f6be466fdec69dbf6ce768d41a43acf0fc3b47b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCAAdFiEEcJXCCpIkPbZRdwewlozZ1xyfu2wFAl/iSGQACgkQlozZ1xyf\nu2wCaAwApyEClIFoFj5/JW871gw28C29v98ACbcIuCys9Je0J4zUV4tbJGwu8v/B\ngQPeK7uGwdzFLy2SdsOkUbfy5g2KtrKGFPZ/HptkT3L4gnG9toc0j6IlwxzbVWm3\nRPSLf92XVISiZkcHWYZhot4aaPS2EuD/e2GbVQY0l0RXhXm3j0AHgCo3AfuQZcZH\ngD65QxvfhvkTROFTid+q4EoqhKl0imkWahkksPEdV+J072A9asLl0PpFxlxxxCr2\nAUWIl2tI39DIZB7Wzaamm0GuNuVGESaj+ucYzAsOe8ZWlBW6HmOGWSsaOvkwr8O4\nzTttGF9hjI2JVnxMizrER2vnOUPIRxhSLp3NT+KVsrnjoXeETDkjm9YF61+oYH6s\nW5ZY3BsHYWLLYkjaZv6ZrTI80txMo4MT6mV4IFAMIjbjxc1v562bRmpC5GAW+5fI\n2lqEqd1o8FAy493nZfW8dUSFPKd5zp8Aq8uODjNsbp7MOIdXlR3ZHDUa1DIY/OEO\nXSwOVVW6\n=oT0c\n-----END PGP SIGNATURE-----", "payload": "tree 1233b8fb27b856bc15bcff68dfaacc74e66a36f2\nparent 353f3a38460d3c2222d2ab29143f48595b1a32a9\nauthor ThePuzzlemaker <tpzker@thepuzzlemaker.info> 1608603801 -0600\ncommitter ThePuzzlemaker <tpzker@thepuzzlemaker.info> 1608665188 -0600\n\nSuggest fn ptr rather than fn item and suggest to use `Fn` trait bounds rather than the unique closure type in E0121\n\nThis is a squash of the titular commit along with these minor commits:\n- Improve note\n- Improve note pt2\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4f6be466fdec69dbf6ce768d41a43acf0fc3b47b", "html_url": "https://github.com/rust-lang/rust/commit/4f6be466fdec69dbf6ce768d41a43acf0fc3b47b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4f6be466fdec69dbf6ce768d41a43acf0fc3b47b/comments", "author": {"login": "ThePuzzlemaker", "id": 12666617, "node_id": "MDQ6VXNlcjEyNjY2NjE3", "avatar_url": "https://avatars.githubusercontent.com/u/12666617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ThePuzzlemaker", "html_url": "https://github.com/ThePuzzlemaker", "followers_url": "https://api.github.com/users/ThePuzzlemaker/followers", "following_url": "https://api.github.com/users/ThePuzzlemaker/following{/other_user}", "gists_url": "https://api.github.com/users/ThePuzzlemaker/gists{/gist_id}", "starred_url": "https://api.github.com/users/ThePuzzlemaker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ThePuzzlemaker/subscriptions", "organizations_url": "https://api.github.com/users/ThePuzzlemaker/orgs", "repos_url": "https://api.github.com/users/ThePuzzlemaker/repos", "events_url": "https://api.github.com/users/ThePuzzlemaker/events{/privacy}", "received_events_url": "https://api.github.com/users/ThePuzzlemaker/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ThePuzzlemaker", "id": 12666617, "node_id": "MDQ6VXNlcjEyNjY2NjE3", "avatar_url": "https://avatars.githubusercontent.com/u/12666617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ThePuzzlemaker", "html_url": "https://github.com/ThePuzzlemaker", "followers_url": "https://api.github.com/users/ThePuzzlemaker/followers", "following_url": "https://api.github.com/users/ThePuzzlemaker/following{/other_user}", "gists_url": "https://api.github.com/users/ThePuzzlemaker/gists{/gist_id}", "starred_url": "https://api.github.com/users/ThePuzzlemaker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ThePuzzlemaker/subscriptions", "organizations_url": "https://api.github.com/users/ThePuzzlemaker/orgs", "repos_url": "https://api.github.com/users/ThePuzzlemaker/repos", "events_url": "https://api.github.com/users/ThePuzzlemaker/events{/privacy}", "received_events_url": "https://api.github.com/users/ThePuzzlemaker/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "353f3a38460d3c2222d2ab29143f48595b1a32a9", "url": "https://api.github.com/repos/rust-lang/rust/commits/353f3a38460d3c2222d2ab29143f48595b1a32a9", "html_url": "https://github.com/rust-lang/rust/commit/353f3a38460d3c2222d2ab29143f48595b1a32a9"}], "stats": {"total": 27, "additions": 21, "deletions": 6}, "files": [{"sha": "ebbcf6304b65a00878400928e1049f79db3a2efd", "filename": "compiler/rustc_typeck/src/collect.rs", "status": "modified", "additions": 21, "deletions": 6, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/4f6be466fdec69dbf6ce768d41a43acf0fc3b47b/compiler%2Frustc_typeck%2Fsrc%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f6be466fdec69dbf6ce768d41a43acf0fc3b47b/compiler%2Frustc_typeck%2Fsrc%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcollect.rs?ref=4f6be466fdec69dbf6ce768d41a43acf0fc3b47b", "patch": "@@ -1544,12 +1544,27 @@ fn fn_sig(tcx: TyCtxt<'_>, def_id: DefId) -> ty::PolyFnSig<'_> {\n                     let mut diag = bad_placeholder_type(tcx, visitor.0);\n                     let ret_ty = fn_sig.output();\n                     if ret_ty != tcx.ty_error() {\n-                        diag.span_suggestion(\n-                            ty.span,\n-                            \"replace with the correct return type\",\n-                            ret_ty.to_string(),\n-                            Applicability::MaybeIncorrect,\n-                        );\n+                        if !ret_ty.is_closure() {\n+                            let ret_ty_str = match ret_ty.kind() {\n+                                // Suggest a function pointer return type instead of a unique function definition\n+                                // (e.g. `fn() -> i32` instead of `fn() -> i32 { f }`, the latter of which is invalid\n+                                // syntax)\n+                                ty::FnDef(..) => ret_ty.fn_sig(tcx).to_string(),\n+                                _ => ret_ty.to_string(),\n+                            };\n+                            diag.span_suggestion(\n+                                ty.span,\n+                                \"replace with the correct return type\",\n+                                ret_ty_str,\n+                                Applicability::MaybeIncorrect,\n+                            );\n+                        } else {\n+                            // We're dealing with a closure, so we should suggest using `impl Fn` or trait bounds\n+                            // to prevent the user from getting a papercut while trying to use the unique closure\n+                            // syntax (e.g. `[closure@src/lib.rs:2:5: 2:9]`).\n+                            diag.help(\"consider using an `Fn`, `FnMut`, or `FnOnce` trait bound\");\n+                            diag.note(\"for more information on `Fn` traits and closure types, see https://doc.rust-lang.org/book/ch13-01-closures.html\");\n+                        }\n                     }\n                     diag.emit();\n                     ty::Binder::bind(fn_sig)"}]}