{"sha": "4b08c7e9748dafa9c38f090ca046a2f372739792", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRiMDhjN2U5NzQ4ZGFmYTljMzhmMDkwY2EwNDZhMmYzNzI3Mzk3OTI=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-01-07T14:13:47Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-01-08T20:58:41Z"}, "message": "NestedVisitorMap: reduce visibilities", "tree": {"sha": "a4bbeb9968d3bd319a5a4b971cdfd6e77e44e7d5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a4bbeb9968d3bd319a5a4b971cdfd6e77e44e7d5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4b08c7e9748dafa9c38f090ca046a2f372739792", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4b08c7e9748dafa9c38f090ca046a2f372739792", "html_url": "https://github.com/rust-lang/rust/commit/4b08c7e9748dafa9c38f090ca046a2f372739792", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4b08c7e9748dafa9c38f090ca046a2f372739792/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3f13ba8523e8aefa670c061b0d0d5e551b47fb45", "url": "https://api.github.com/repos/rust-lang/rust/commits/3f13ba8523e8aefa670c061b0d0d5e551b47fb45", "html_url": "https://github.com/rust-lang/rust/commit/3f13ba8523e8aefa670c061b0d0d5e551b47fb45"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "e1245dbb66580a848246878ed9c6537bc69af5d7", "filename": "src/librustc/hir/intravisit.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4b08c7e9748dafa9c38f090ca046a2f372739792/src%2Flibrustc%2Fhir%2Fintravisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b08c7e9748dafa9c38f090ca046a2f372739792/src%2Flibrustc%2Fhir%2Fintravisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fintravisit.rs?ref=4b08c7e9748dafa9c38f090ca046a2f372739792", "patch": "@@ -159,7 +159,7 @@ pub enum NestedVisitorMap<'this, 'tcx> {\n impl<'this, 'tcx> NestedVisitorMap<'this, 'tcx> {\n     /// Returns the map to use for an \"intra item-like\" thing (if any).\n     /// E.g., function body.\n-    pub fn intra(self) -> Option<&'this Map<'tcx>> {\n+    fn intra(self) -> Option<&'this Map<'tcx>> {\n         match self {\n             NestedVisitorMap::None => None,\n             NestedVisitorMap::OnlyBodies(map) => Some(map),\n@@ -169,7 +169,7 @@ impl<'this, 'tcx> NestedVisitorMap<'this, 'tcx> {\n \n     /// Returns the map to use for an \"item-like\" thing (if any).\n     /// E.g., item, impl-item.\n-    pub fn inter(self) -> Option<&'this Map<'tcx>> {\n+    fn inter(self) -> Option<&'this Map<'tcx>> {\n         match self {\n             NestedVisitorMap::None => None,\n             NestedVisitorMap::OnlyBodies(_) => None,\n@@ -214,7 +214,7 @@ pub trait Visitor<'v>: Sized {\n     /// `panic!()`. This way, if a new `visit_nested_XXX` variant is\n     /// added in the future, we will see the panic in your code and\n     /// fix it appropriately.\n-    fn nested_visit_map<'this>(&'this mut self) -> NestedVisitorMap<'this, 'v>;\n+    fn nested_visit_map(&mut self) -> NestedVisitorMap<'_, 'v>;\n \n     /// Invoked when a nested item is encountered. By default does\n     /// nothing unless you override `nested_visit_map` to return other than"}]}