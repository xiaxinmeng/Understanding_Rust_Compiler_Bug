{"sha": "0387f0d19b3e439b4f361cecd5be8977665f35c2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAzODdmMGQxOWIzZTQzOWI0ZjM2MWNlY2Q1YmU4OTc3NjY1ZjM1YzI=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2020-02-19T02:20:23Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2020-02-28T19:37:59Z"}, "message": "Mention the full path of the implementing trait", "tree": {"sha": "456f3195a2f4777dc74bb1bbcd738b4542ccfda1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/456f3195a2f4777dc74bb1bbcd738b4542ccfda1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0387f0d19b3e439b4f361cecd5be8977665f35c2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0387f0d19b3e439b4f361cecd5be8977665f35c2", "html_url": "https://github.com/rust-lang/rust/commit/0387f0d19b3e439b4f361cecd5be8977665f35c2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0387f0d19b3e439b4f361cecd5be8977665f35c2/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "89e96e9bc575b370c7b55055aad28bebd14e8dfe", "url": "https://api.github.com/repos/rust-lang/rust/commits/89e96e9bc575b370c7b55055aad28bebd14e8dfe", "html_url": "https://github.com/rust-lang/rust/commit/89e96e9bc575b370c7b55055aad28bebd14e8dfe"}], "stats": {"total": 59, "additions": 32, "deletions": 27}, "files": [{"sha": "af7f63772c33642ad1c6a91e8f7d3d9fa6f6278f", "filename": "src/librustc_typeck/check/method/suggest.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/0387f0d19b3e439b4f361cecd5be8977665f35c2/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0387f0d19b3e439b4f361cecd5be8977665f35c2/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs?ref=0387f0d19b3e439b4f361cecd5be8977665f35c2", "patch": "@@ -574,14 +574,15 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                                     .tcx\n                                     .associated_item(pred.skip_binder().projection_ty.item_def_id);\n                                 let ty = pred.skip_binder().ty;\n-                                let msg = format!(\"`{}::{} = {}`\", trait_ref, assoc.ident, ty);\n+                                let obligation =\n+                                    format!(\"`{}::{} = {}`\", trait_ref, assoc.ident, ty);\n                                 let quiet = format!(\n                                     \"`<_ as {}>::{} = {}`\",\n                                     trait_ref.print_only_trait_path(),\n                                     assoc.ident,\n                                     ty\n                                 );\n-                                bound_span_label(trait_ref.self_ty(), &msg, &quiet);\n+                                bound_span_label(trait_ref.self_ty(), &obligation, &quiet);\n                                 Some(obligation)\n                             }\n                             ty::Predicate::Trait(poly_trait_ref, _) => {\n@@ -994,7 +995,11 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                     if let Some(span) = self.tcx.hir().span_if_local(trait_info.def_id) {\n                         err.span_label(\n                             self.tcx.sess.source_map().def_span(span),\n-                            &format!(\"this trait defines an item `{}`\", item_name),\n+                            &format!(\n+                                \"`{}` defines an item `{}`\",\n+                                self.tcx.def_path_str(trait_info.def_id),\n+                                item_name\n+                            ),\n                         );\n                         use_note = false\n                     }"}, {"sha": "02d4866e3f52b00f97baa99dcf4cdae94a178357", "filename": "src/test/ui/associated-const/associated-const-no-item.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0387f0d19b3e439b4f361cecd5be8977665f35c2/src%2Ftest%2Fui%2Fassociated-const%2Fassociated-const-no-item.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0387f0d19b3e439b4f361cecd5be8977665f35c2/src%2Ftest%2Fui%2Fassociated-const%2Fassociated-const-no-item.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-const%2Fassociated-const-no-item.stderr?ref=0387f0d19b3e439b4f361cecd5be8977665f35c2", "patch": "@@ -2,7 +2,7 @@ error[E0599]: no associated item named `ID` found for type `i32` in the current\n   --> $DIR/associated-const-no-item.rs:5:23\n    |\n LL | trait Foo {\n-   | --------- this trait defines an item `ID`\n+   | --------- `Foo` defines an item `ID`\n ...\n LL | const X: i32 = <i32>::ID;\n    |                       ^^ associated item not found in `i32`"}, {"sha": "26b2c44fdd9e492baab399d5ed457f68465c89b7", "filename": "src/test/ui/auto-ref-slice-plus-ref.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0387f0d19b3e439b4f361cecd5be8977665f35c2/src%2Ftest%2Fui%2Fauto-ref-slice-plus-ref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0387f0d19b3e439b4f361cecd5be8977665f35c2/src%2Ftest%2Fui%2Fauto-ref-slice-plus-ref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fauto-ref-slice-plus-ref.stderr?ref=0387f0d19b3e439b4f361cecd5be8977665f35c2", "patch": "@@ -5,7 +5,7 @@ LL |     a.test_mut();\n    |       ^^^^^^^^ help: there is a method with a similar name: `get_mut`\n ...\n LL | trait MyIter {\n-   | ------------ this trait defines an item `test_mut`\n+   | ------------ `MyIter` defines an item `test_mut`\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n \n@@ -16,7 +16,7 @@ LL |     a.test();\n    |       ^^^^ method not found in `std::vec::Vec<{integer}>`\n ...\n LL | trait MyIter {\n-   | ------------ this trait defines an item `test`\n+   | ------------ `MyIter` defines an item `test`\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n \n@@ -27,7 +27,7 @@ LL |     ([1]).test();\n    |           ^^^^ method not found in `[{integer}; 1]`\n ...\n LL | trait MyIter {\n-   | ------------ this trait defines an item `test`\n+   | ------------ `MyIter` defines an item `test`\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n \n@@ -38,7 +38,7 @@ LL |     (&[1]).test();\n    |            ^^^^ method not found in `&[{integer}; 1]`\n ...\n LL | trait MyIter {\n-   | ------------ this trait defines an item `test`\n+   | ------------ `MyIter` defines an item `test`\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n "}, {"sha": "cdcf84a706357e7197a6e240fd695b4a6d8419b4", "filename": "src/test/ui/impl-trait/issues/issue-21659-show-relevant-trait-impls-3.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0387f0d19b3e439b4f361cecd5be8977665f35c2/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Fissue-21659-show-relevant-trait-impls-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0387f0d19b3e439b4f361cecd5be8977665f35c2/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Fissue-21659-show-relevant-trait-impls-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Fissue-21659-show-relevant-trait-impls-3.stderr?ref=0387f0d19b3e439b4f361cecd5be8977665f35c2", "patch": "@@ -2,7 +2,7 @@ error[E0599]: no method named `foo` found for struct `Bar` in the current scope\n   --> $DIR/issue-21659-show-relevant-trait-impls-3.rs:20:8\n    |\n LL | trait Foo<A> {\n-   | ------------ this trait defines an item `foo`\n+   | ------------ `Foo` defines an item `foo`\n ...\n LL | struct Bar;\n    | ----------- method `foo` not found for this"}, {"sha": "b3da4a6ead664ae40ac777e7f8c16354aee4719b", "filename": "src/test/ui/impl-trait/no-method-suggested-traits.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/0387f0d19b3e439b4f361cecd5be8977665f35c2/src%2Ftest%2Fui%2Fimpl-trait%2Fno-method-suggested-traits.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0387f0d19b3e439b4f361cecd5be8977665f35c2/src%2Ftest%2Fui%2Fimpl-trait%2Fno-method-suggested-traits.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fno-method-suggested-traits.stderr?ref=0387f0d19b3e439b4f361cecd5be8977665f35c2", "patch": "@@ -123,7 +123,7 @@ error[E0599]: no method named `method2` found for type `u64` in the current scop\n   --> $DIR/no-method-suggested-traits.rs:45:10\n    |\n LL |     pub trait Bar {\n-   |     ------------- this trait defines an item `method2`\n+   |     ------------- `foo::Bar` defines an item `method2`\n ...\n LL |     1u64.method2();\n    |          ^^^^^^^ method not found in `u64`\n@@ -134,7 +134,7 @@ error[E0599]: no method named `method2` found for struct `std::rc::Rc<&mut std::\n   --> $DIR/no-method-suggested-traits.rs:47:44\n    |\n LL |     pub trait Bar {\n-   |     ------------- this trait defines an item `method2`\n+   |     ------------- `foo::Bar` defines an item `method2`\n ...\n LL |     std::rc::Rc::new(&mut Box::new(&1u64)).method2();\n    |                                            ^^^^^^^ method not found in `std::rc::Rc<&mut std::boxed::Box<&u64>>`\n@@ -145,7 +145,7 @@ error[E0599]: no method named `method2` found for struct `no_method_suggested_tr\n   --> $DIR/no-method-suggested-traits.rs:50:37\n    |\n LL |     pub trait Bar {\n-   |     ------------- this trait defines an item `method2`\n+   |     ------------- `foo::Bar` defines an item `method2`\n ...\n LL |     no_method_suggested_traits::Foo.method2();\n    |                                     ^^^^^^^ method not found in `no_method_suggested_traits::Foo`\n@@ -156,7 +156,7 @@ error[E0599]: no method named `method2` found for struct `std::rc::Rc<&mut std::\n   --> $DIR/no-method-suggested-traits.rs:52:71\n    |\n LL |     pub trait Bar {\n-   |     ------------- this trait defines an item `method2`\n+   |     ------------- `foo::Bar` defines an item `method2`\n ...\n LL |     std::rc::Rc::new(&mut Box::new(&no_method_suggested_traits::Foo)).method2();\n    |                                                                       ^^^^^^^ method not found in `std::rc::Rc<&mut std::boxed::Box<&no_method_suggested_traits::Foo>>`\n@@ -167,7 +167,7 @@ error[E0599]: no method named `method2` found for enum `no_method_suggested_trai\n   --> $DIR/no-method-suggested-traits.rs:54:40\n    |\n LL |     pub trait Bar {\n-   |     ------------- this trait defines an item `method2`\n+   |     ------------- `foo::Bar` defines an item `method2`\n ...\n LL |     no_method_suggested_traits::Bar::X.method2();\n    |                                        ^^^^^^^ method not found in `no_method_suggested_traits::Bar`\n@@ -178,7 +178,7 @@ error[E0599]: no method named `method2` found for struct `std::rc::Rc<&mut std::\n   --> $DIR/no-method-suggested-traits.rs:56:74\n    |\n LL |     pub trait Bar {\n-   |     ------------- this trait defines an item `method2`\n+   |     ------------- `foo::Bar` defines an item `method2`\n ...\n LL |     std::rc::Rc::new(&mut Box::new(&no_method_suggested_traits::Bar::X)).method2();\n    |                                                                          ^^^^^^^ method not found in `std::rc::Rc<&mut std::boxed::Box<&no_method_suggested_traits::Bar>>`"}, {"sha": "bf48c662383fe129b23b238b32ca83d8dba8c40b", "filename": "src/test/ui/issues/issue-5153.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0387f0d19b3e439b4f361cecd5be8977665f35c2/src%2Ftest%2Fui%2Fissues%2Fissue-5153.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0387f0d19b3e439b4f361cecd5be8977665f35c2/src%2Ftest%2Fui%2Fissues%2Fissue-5153.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-5153.stderr?ref=0387f0d19b3e439b4f361cecd5be8977665f35c2", "patch": "@@ -2,7 +2,7 @@ error[E0599]: no method named `foo` found for reference `&dyn Foo` in the curren\n   --> $DIR/issue-5153.rs:10:27\n    |\n LL | trait Foo {\n-   | --------- this trait defines an item `foo`\n+   | --------- `Foo` defines an item `foo`\n ...\n LL |     (&5isize as &dyn Foo).foo();\n    |                           ^^^ method not found in `&dyn Foo`"}, {"sha": "4eaa5adbea4e64d39aa78da3d3b1b7ab770d8b53", "filename": "src/test/ui/issues/issue-57362-1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0387f0d19b3e439b4f361cecd5be8977665f35c2/src%2Ftest%2Fui%2Fissues%2Fissue-57362-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0387f0d19b3e439b4f361cecd5be8977665f35c2/src%2Ftest%2Fui%2Fissues%2Fissue-57362-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-57362-1.stderr?ref=0387f0d19b3e439b4f361cecd5be8977665f35c2", "patch": "@@ -2,7 +2,7 @@ error[E0599]: no method named `f` found for fn pointer `fn(&u8)` in the current\n   --> $DIR/issue-57362-1.rs:20:7\n    |\n LL | trait Trait {\n-   | ----------- this trait defines an item `f`\n+   | ----------- `Trait` defines an item `f`\n ...\n LL |     a.f();\n    |       ^ method not found in `fn(&u8)`"}, {"sha": "ce689334cc13d3dadf076888fe707cdbab60914e", "filename": "src/test/ui/issues/issue-57362-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0387f0d19b3e439b4f361cecd5be8977665f35c2/src%2Ftest%2Fui%2Fissues%2Fissue-57362-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0387f0d19b3e439b4f361cecd5be8977665f35c2/src%2Ftest%2Fui%2Fissues%2Fissue-57362-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-57362-2.stderr?ref=0387f0d19b3e439b4f361cecd5be8977665f35c2", "patch": "@@ -2,7 +2,7 @@ error[E0599]: no function or associated item named `make_g` found for fn pointer\n   --> $DIR/issue-57362-2.rs:22:25\n    |\n LL | trait X {\n-   | ------- this trait defines an item `make_g`\n+   | ------- `X` defines an item `make_g`\n ...\n LL |     let x = <fn (&())>::make_g();\n    |                         ^^^^^^ function or associated item not found in `for<'r> fn(&'r ())`"}, {"sha": "b92ab5dde27665904d710010c049bb67a883c3ee", "filename": "src/test/ui/never_type/issue-2149.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0387f0d19b3e439b4f361cecd5be8977665f35c2/src%2Ftest%2Fui%2Fnever_type%2Fissue-2149.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0387f0d19b3e439b4f361cecd5be8977665f35c2/src%2Ftest%2Fui%2Fnever_type%2Fissue-2149.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnever_type%2Fissue-2149.stderr?ref=0387f0d19b3e439b4f361cecd5be8977665f35c2", "patch": "@@ -10,7 +10,7 @@ error[E0599]: no method named `bind` found for array `[&str; 1]` in the current\n   --> $DIR/issue-2149.rs:13:12\n    |\n LL | trait VecMonad<A> {\n-   | ----------------- this trait defines an item `bind`\n+   | ----------------- `VecMonad` defines an item `bind`\n ...\n LL |     [\"hi\"].bind(|x| [x] );\n    |            ^^^^ method not found in `[&str; 1]`"}, {"sha": "7364ead97f6d93ad3cede9b25af51e464ef4c0bc", "filename": "src/test/ui/object-pointer-types.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0387f0d19b3e439b4f361cecd5be8977665f35c2/src%2Ftest%2Fui%2Fobject-pointer-types.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0387f0d19b3e439b4f361cecd5be8977665f35c2/src%2Ftest%2Fui%2Fobject-pointer-types.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fobject-pointer-types.stderr?ref=0387f0d19b3e439b4f361cecd5be8977665f35c2", "patch": "@@ -2,7 +2,7 @@ error[E0599]: no method named `owned` found for reference `&dyn Foo` in the curr\n   --> $DIR/object-pointer-types.rs:11:7\n    |\n LL | trait Foo {\n-   | --------- this trait defines an item `owned`\n+   | --------- `Foo` defines an item `owned`\n ...\n LL |     x.owned();\n    |       ^^^^^ method not found in `&dyn Foo`\n@@ -13,7 +13,7 @@ error[E0599]: no method named `owned` found for mutable reference `&mut dyn Foo`\n   --> $DIR/object-pointer-types.rs:17:7\n    |\n LL | trait Foo {\n-   | --------- this trait defines an item `owned`\n+   | --------- `Foo` defines an item `owned`\n ...\n LL |     x.owned();\n    |       ^^^^^ method not found in `&mut dyn Foo`"}, {"sha": "fefa6dab15acc1688f11b63d5597356d6a0cbec1", "filename": "src/test/ui/self/point-at-arbitrary-self-type-trait-method.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0387f0d19b3e439b4f361cecd5be8977665f35c2/src%2Ftest%2Fui%2Fself%2Fpoint-at-arbitrary-self-type-trait-method.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0387f0d19b3e439b4f361cecd5be8977665f35c2/src%2Ftest%2Fui%2Fself%2Fpoint-at-arbitrary-self-type-trait-method.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fself%2Fpoint-at-arbitrary-self-type-trait-method.stderr?ref=0387f0d19b3e439b4f361cecd5be8977665f35c2", "patch": "@@ -4,7 +4,7 @@ error[E0599]: no method named `foo` found for struct `A` in the current scope\n LL | trait B { fn foo(self: Box<Self>); }\n    | -------      --- the method is available for `std::boxed::Box<A>` here\n    | |\n-   | this trait defines an item `foo`\n+   | `B` defines an item `foo`\n LL | struct A;\n    | --------- method `foo` not found for this\n ..."}, {"sha": "93a5f3051fe33efa618d11e2e0ca5438a63180b1", "filename": "src/test/ui/specialization/defaultimpl/specialization-trait-not-implemented.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0387f0d19b3e439b4f361cecd5be8977665f35c2/src%2Ftest%2Fui%2Fspecialization%2Fdefaultimpl%2Fspecialization-trait-not-implemented.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0387f0d19b3e439b4f361cecd5be8977665f35c2/src%2Ftest%2Fui%2Fspecialization%2Fdefaultimpl%2Fspecialization-trait-not-implemented.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspecialization%2Fdefaultimpl%2Fspecialization-trait-not-implemented.stderr?ref=0387f0d19b3e439b4f361cecd5be8977665f35c2", "patch": "@@ -2,7 +2,7 @@ error[E0599]: no method named `foo_one` found for struct `MyStruct` in the curre\n   --> $DIR/specialization-trait-not-implemented.rs:22:29\n    |\n LL | trait Foo {\n-   | --------- this trait defines an item `foo_one`\n+   | --------- `Foo` defines an item `foo_one`\n ...\n LL | struct MyStruct;\n    | ----------------"}, {"sha": "23f08f37826f8afe5ad71fd1e10e9bac7916d959", "filename": "src/test/ui/traits/trait-item-privacy.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0387f0d19b3e439b4f361cecd5be8977665f35c2/src%2Ftest%2Fui%2Ftraits%2Ftrait-item-privacy.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0387f0d19b3e439b4f361cecd5be8977665f35c2/src%2Ftest%2Fui%2Ftraits%2Ftrait-item-privacy.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Ftrait-item-privacy.stderr?ref=0387f0d19b3e439b4f361cecd5be8977665f35c2", "patch": "@@ -5,7 +5,7 @@ LL | struct S;\n    | --------- method `a` not found for this\n ...\n LL |     trait A {\n-   |     ------- this trait defines an item `a`\n+   |     ------- `method::A` defines an item `a`\n ...\n LL |     S.a();\n    |       ^ method not found in `S`\n@@ -47,7 +47,7 @@ LL | struct S;\n    | --------- function or associated item `a` not found for this\n ...\n LL |     trait A {\n-   |     ------- this trait defines an item `a`\n+   |     ------- `method::A` defines an item `a`\n ...\n LL |     S::a(&S);\n    |        ^ function or associated item not found in `S`\n@@ -82,7 +82,7 @@ LL | struct S;\n    | --------- associated item `A` not found for this\n ...\n LL |     trait A {\n-   |     ------- this trait defines an item `A`\n+   |     ------- `assoc_const::A` defines an item `A`\n ...\n LL |     S::A;\n    |        ^ associated item not found in `S`"}, {"sha": "0bd18763ac9771cea345062bf5c8c03ce80b6ad3", "filename": "src/test/ui/trivial-bounds/trivial-bounds-leak.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0387f0d19b3e439b4f361cecd5be8977665f35c2/src%2Ftest%2Fui%2Ftrivial-bounds%2Ftrivial-bounds-leak.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0387f0d19b3e439b4f361cecd5be8977665f35c2/src%2Ftest%2Fui%2Ftrivial-bounds%2Ftrivial-bounds-leak.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftrivial-bounds%2Ftrivial-bounds-leak.stderr?ref=0387f0d19b3e439b4f361cecd5be8977665f35c2", "patch": "@@ -12,7 +12,7 @@ error[E0599]: no method named `test` found for type `i32` in the current scope\n   --> $DIR/trivial-bounds-leak.rs:24:10\n    |\n LL | pub trait Foo {\n-   | ------------- this trait defines an item `test`\n+   | ------------- `Foo` defines an item `test`\n ...\n LL |     3i32.test();\n    |          ^^^^ method not found in `i32`"}]}