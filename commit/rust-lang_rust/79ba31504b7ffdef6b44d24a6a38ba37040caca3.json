{"sha": "79ba31504b7ffdef6b44d24a6a38ba37040caca3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc5YmEzMTUwNGI3ZmZkZWY2YjQ0ZDI0YTZhMzhiYTM3MDQwY2FjYTM=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-06-25T19:23:27Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-06-25T19:23:32Z"}, "message": "Fixes to speed and clean up makefiles.", "tree": {"sha": "23276b672b13f4e0941439fb28deba58fcfb9265", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/23276b672b13f4e0941439fb28deba58fcfb9265"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/79ba31504b7ffdef6b44d24a6a38ba37040caca3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/79ba31504b7ffdef6b44d24a6a38ba37040caca3", "html_url": "https://github.com/rust-lang/rust/commit/79ba31504b7ffdef6b44d24a6a38ba37040caca3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/79ba31504b7ffdef6b44d24a6a38ba37040caca3/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "afa632124f149b190ff3fb0a625a6a162637d82c", "url": "https://api.github.com/repos/rust-lang/rust/commits/afa632124f149b190ff3fb0a625a6a162637d82c", "html_url": "https://github.com/rust-lang/rust/commit/afa632124f149b190ff3fb0a625a6a162637d82c"}], "stats": {"total": 208, "additions": 123, "deletions": 85}, "files": [{"sha": "c9d961ead38e5704cf85a0f3d9ce306e4215bed1", "filename": "Makefile.in", "status": "modified", "additions": 35, "deletions": 8, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/79ba31504b7ffdef6b44d24a6a38ba37040caca3/Makefile.in", "raw_url": "https://github.com/rust-lang/rust/raw/79ba31504b7ffdef6b44d24a6a38ba37040caca3/Makefile.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Makefile.in?ref=79ba31504b7ffdef6b44d24a6a38ba37040caca3", "patch": "@@ -50,7 +50,7 @@ CFG_STDLIB :=$(call CFG_LIB_NAME,std)\n \n # version-string calculation\n CFG_GIT_DIR := $(CFG_SRC_DIR).git\n-CFG_VERSION := prerelease\n+CFG_VERSION = prerelease\n ifneq ($(wildcard $(CFG_GIT)),)\n ifneq ($(wildcard $(CFG_GIT_DIR)),)\n     CFG_VERSION += $(shell git --git-dir=$(CFG_GIT_DIR) log -1 \\\n@@ -233,7 +233,7 @@ config.mk: $(S)configure $(S)Makefile.in $(S)src/snapshots.txt\n \n \n ######################################################################\n-# Additional makefiles\n+# Primary-target makefiles\n ######################################################################\n \n include $(CFG_SRC_DIR)/mk/intrinsics.mk\n@@ -243,11 +243,38 @@ include $(CFG_SRC_DIR)/mk/stage2.mk\n include $(CFG_SRC_DIR)/mk/stage3.mk\n include $(CFG_SRC_DIR)/mk/rt.mk\n include $(CFG_SRC_DIR)/mk/rustllvm.mk\n-include $(CFG_SRC_DIR)/mk/docs.mk\n-include $(CFG_SRC_DIR)/mk/tests.mk\n-include $(CFG_SRC_DIR)/mk/dist.mk\n-include $(CFG_SRC_DIR)/mk/snap.mk\n-include $(CFG_SRC_DIR)/mk/clean.mk\n include $(CFG_SRC_DIR)/mk/autodep.mk\n include $(CFG_SRC_DIR)/mk/fuzzer.mk\n-include $(CFG_SRC_DIR)/mk/pp.mk\n+include $(CFG_SRC_DIR)/mk/docs.mk\n+\n+\n+######################################################################\n+# Secondary makefiles, conditionalized for speed\n+######################################################################\n+\n+ifneq ($(findstring dist,$(MAKECMDGOALS)),)\n+  include $(CFG_SRC_DIR)/mk/dist.mk\n+endif\n+\n+ifneq ($(findstring snap,$(MAKECMDGOALS)),)\n+  include $(CFG_SRC_DIR)/mk/snap.mk\n+endif\n+\n+ifneq ($(findstring reformat,$(MAKECMDGOALS)),)\n+  include $(CFG_SRC_DIR)/mk/pp.mk\n+endif\n+\n+ifneq ($(findstring check,$(MAKECMDGOALS)),)\n+  include $(CFG_SRC_DIR)/mk/tests.mk\n+else\n+  ifneq ($(findstring test,$(MAKECMDGOALS)),)\n+    include $(CFG_SRC_DIR)/mk/tests.mk\n+  endif\n+endif\n+\n+ifneq ($(findstring clean,$(MAKECMDGOALS)),)\n+  include $(CFG_SRC_DIR)/mk/dist.mk\n+  include $(CFG_SRC_DIR)/mk/snap.mk\n+  include $(CFG_SRC_DIR)/mk/tests.mk\n+  include $(CFG_SRC_DIR)/mk/clean.mk\n+endif\n\\ No newline at end of file"}, {"sha": "1ed29ae90b1883d1669b467c187a188cf2e8d21d", "filename": "mk/clean.mk", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/79ba31504b7ffdef6b44d24a6a38ba37040caca3/mk%2Fclean.mk", "raw_url": "https://github.com/rust-lang/rust/raw/79ba31504b7ffdef6b44d24a6a38ba37040caca3/mk%2Fclean.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fclean.mk?ref=79ba31504b7ffdef6b44d24a6a38ba37040caca3", "patch": "@@ -4,15 +4,6 @@\n \n .PHONY: clean\n \n-tidy:\n-\t@$(call E, check: formatting)\n-\t$(Q)echo \\\n-      $(filter-out $(GENERATED) $(addprefix $(S)src/, $(GENERATED)) \\\n-        $(addprefix $(S)src/, $(RUSTLLVM_LIB_CS) $(RUSTLLVM_OBJS_CS) \\\n-          $(RUSTLLVM_HDR) $(PKG_3RDPARTY)) \\\n-        $(S)src/etc/%, $(PKG_FILES)) \\\n-    | xargs -n 10 python $(S)src/etc/tidy.py\n-\n clean:\n \t@$(call E, cleaning)\n \t$(Q)rm -f $(RUNTIME_OBJS) $(RUNTIME_DEF)"}, {"sha": "7f6d408acbd9601db8783f05e4ad78c59ff7143a", "filename": "mk/docs.mk", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/79ba31504b7ffdef6b44d24a6a38ba37040caca3/mk%2Fdocs.mk", "raw_url": "https://github.com/rust-lang/rust/raw/79ba31504b7ffdef6b44d24a6a38ba37040caca3/mk%2Fdocs.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fdocs.mk?ref=79ba31504b7ffdef6b44d24a6a38ba37040caca3", "patch": "@@ -3,15 +3,19 @@\n ######################################################################\n \n doc/version.texi: $(MKFILES) rust.texi\n-\techo \"@macro gitversion\" >$@\n-\techo \"$(CFG_VERSION)\" >>$@\n-\techo \"@end macro\" >>$@\n+\t@$(call E, version-stamp: $@)\n+\t$(Q)echo \"@macro gitversion\" >$@\n+\t$(Q)echo \"$(CFG_VERSION)\" >>$@\n+\t$(Q)echo \"@end macro\" >>$@\n \n doc/%.pdf: %.texi doc/version.texi\n-\ttexi2pdf --batch -I doc -o $@ --clean $<\n+\t@$(call E, texi2pdf: $@)\n+\t$(Q)texi2pdf --batch -I doc -o $@ --clean $<\n \n doc/%.html: %.texi doc/version.texi\n-\tmakeinfo -I doc --html --ifhtml --force --no-split --output=$@ $<\n+\t@$(call E, makeinfo: $@)\n+\t$(Q)makeinfo -I doc --html --ifhtml --force --no-split --output=$@ $<\n \n docsnap: doc/rust.pdf\n-\tmv $< doc/rust-$(shell date +\"%Y-%m-%d\")-snap.pdf\n+\t@$(call E, snap: doc/rust-$(shell date +\"%Y-%m-%d\")-snap.pdf)\n+\t$(Q)mv $< doc/rust-$(shell date +\"%Y-%m-%d\")-snap.pdf"}, {"sha": "1e9fc5b6840722a4b18a44f12677fd070f9493eb", "filename": "mk/pp.mk", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/79ba31504b7ffdef6b44d24a6a38ba37040caca3/mk%2Fpp.mk", "raw_url": "https://github.com/rust-lang/rust/raw/79ba31504b7ffdef6b44d24a6a38ba37040caca3/mk%2Fpp.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fpp.mk?ref=79ba31504b7ffdef6b44d24a6a38ba37040caca3", "patch": "@@ -1,8 +1,8 @@\n \n-PP_INPUTS := $(wildcard $(addprefix $(S)src/lib/,*.rs */*.rs)) \\\n-             $(wildcard $(addprefix $(S)src/comp/,*.rs */*.rs */*/*.rs)) \\\n-             $(wildcard $(S)src/test/*/*.rs   \\\n-                        $(S)src/test/*/*/*.rs)\n+PP_INPUTS = $(wildcard $(addprefix $(S)src/lib/,*.rs */*.rs)) \\\n+            $(wildcard $(addprefix $(S)src/comp/,*.rs */*.rs */*/*.rs)) \\\n+            $(wildcard $(S)src/test/*/*.rs   \\\n+                       $(S)src/test/*/*/*.rs)\n \n PP_INPUTS_FILTERED = $(shell echo $(PP_INPUTS) | xargs grep -L no-reformat)\n "}, {"sha": "d25c866ec16f9d3791779cf8ca424dd0ab50d16b", "filename": "mk/rt.mk", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/79ba31504b7ffdef6b44d24a6a38ba37040caca3/mk%2Frt.mk", "raw_url": "https://github.com/rust-lang/rust/raw/79ba31504b7ffdef6b44d24a6a38ba37040caca3/mk%2Frt.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Frt.mk?ref=79ba31504b7ffdef6b44d24a6a38ba37040caca3", "patch": "@@ -81,10 +81,12 @@ rt/%.o: rt/%.s $(MKFILES)\n \n ifdef CFG_WINDOWSY\n rt/main.ll: rt/main.ll.in\n-\tsed 's/MAIN/WinMain@16/' < $^ > $@\n+\t@$(call E, sed: $@)\n+\t$(Q)sed 's/MAIN/WinMain@16/' < $^ > $@\n else\n rt/main.ll: rt/main.ll.in\n-\tsed 's/MAIN/main/' < $^ > $@\n+\t@$(call E, sed: $@)\n+\t$(Q)sed 's/MAIN/main/' < $^ > $@\n endif\n \n rt/%.o: rt/%.ll $(MKFILES)"}, {"sha": "d2ff5e8347ace70c14ec64150fd0884beaede016", "filename": "mk/rustllvm.mk", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/79ba31504b7ffdef6b44d24a6a38ba37040caca3/mk%2Frustllvm.mk", "raw_url": "https://github.com/rust-lang/rust/raw/79ba31504b7ffdef6b44d24a6a38ba37040caca3/mk%2Frustllvm.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Frustllvm.mk?ref=79ba31504b7ffdef6b44d24a6a38ba37040caca3", "patch": "@@ -20,8 +20,9 @@ RUSTLLVM_OBJS_OBJS := $(RUSTLLVM_OBJS_CS:.cpp=.o)\n # versions of LLVM. In newer versions some of the bits of this library are\n # already in LLVM itself, so they are skipped.\n rustllvm/rustllvmbits.a: $(RUSTLLVM_LIB_OBJS)\n-\trm -f $@\n-\tar crs $@ $^\n+\t@$(call E, archive: $@)\n+\t$(Q)rm -f $@\n+\t$(Q)ar crs $@ $^\n \n # Note: We pass $(CFG_LLVM_LIBS) twice to fix the windows link since\n # it has no -whole-archive."}, {"sha": "6be52f8e831fb55c29e7e648b216de568034704e", "filename": "mk/tests.mk", "status": "modified", "additions": 67, "deletions": 54, "changes": 121, "blob_url": "https://github.com/rust-lang/rust/blob/79ba31504b7ffdef6b44d24a6a38ba37040caca3/mk%2Ftests.mk", "raw_url": "https://github.com/rust-lang/rust/raw/79ba31504b7ffdef6b44d24a6a38ba37040caca3/mk%2Ftests.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Ftests.mk?ref=79ba31504b7ffdef6b44d24a6a38ba37040caca3", "patch": "@@ -6,9 +6,11 @@ ALL_TEST_INPUTS = $(wildcard $(S)src/test/*/*.rs   \\\n                               $(S)src/test/*/*/*.rs \\\n                               $(S)src/test/*/*.rc)\n \n-TEST_XFAILS_STAGE0 = $(shell grep -l xfail-stage0 $(ALL_TEST_INPUTS))\n-TEST_XFAILS_STAGE1 = $(shell grep -l xfail-stage1 $(ALL_TEST_INPUTS))\n-TEST_XFAILS_STAGE2 = $(shell grep -l xfail-stage2 $(ALL_TEST_INPUTS))\n+ifneq ($(findstring check,$(MAKECMDGOALS)),)\n+XFAIL_INPUTS := $(shell grep -l xfail $(ALL_TEST_INPUTS))\n+TEST_XFAILS_STAGE0 := $(shell grep -l xfail-stage0 $(XFAIL_INPUTS))\n+TEST_XFAILS_STAGE1 := $(shell grep -l xfail-stage1 $(XFAIL_INPUTS))\n+TEST_XFAILS_STAGE2 := $(shell grep -l xfail-stage2 $(XFAIL_INPUTS))\n \n ifdef MINGW_CROSS\n TEST_XFAILS_STAGE0 += $(S)src/test/run-pass/native-mod.rc\n@@ -20,101 +22,103 @@ TEST_XFAILS_STAGE0 += $(S)src/test/run-pass/native-mod.rc\n TEST_XFAILS_STAGE1 += $(S)src/test/run-pass/native-mod.rc\n TEST_XFAILS_STAGE2 += $(S)src/test/run-pass/native-mod.rc\n endif\n+endif\n+\n \n-BENCH_RS = $(wildcard $(S)src/test/bench/shootout/*.rs) \\\n+BENCH_RS := $(wildcard $(S)src/test/bench/shootout/*.rs) \\\n             $(wildcard $(S)src/test/bench/99-bottles/*.rs)\n-RPASS_RC = $(wildcard $(S)src/test/run-pass/*.rc)\n-RPASS_RS = $(wildcard $(S)src/test/run-pass/*.rs) $(BENCH_RS)\n-RFAIL_RC = $(wildcard $(S)src/test/run-fail/*.rc)\n-RFAIL_RS = $(wildcard $(S)src/test/run-fail/*.rs)\n-CFAIL_RC = $(wildcard $(S)src/test/compile-fail/*.rc)\n-CFAIL_RS = $(wildcard $(S)src/test/compile-fail/*.rs)\n+RPASS_RC := $(wildcard $(S)src/test/run-pass/*.rc)\n+RPASS_RS := $(wildcard $(S)src/test/run-pass/*.rs) $(BENCH_RS)\n+RFAIL_RC := $(wildcard $(S)src/test/run-fail/*.rc)\n+RFAIL_RS := $(wildcard $(S)src/test/run-fail/*.rs)\n+CFAIL_RC := $(wildcard $(S)src/test/compile-fail/*.rc)\n+CFAIL_RS := $(wildcard $(S)src/test/compile-fail/*.rs)\n \n ifdef CHECK_XFAILS\n-TEST_RPASS_CRATES_STAGE0 = $(filter $(TEST_XFAILS_STAGE0), $(RPASS_RC))\n-TEST_RPASS_CRATES_STAGE1 = $(filter $(TEST_XFAILS_STAGE1), $(RPASS_RC))\n-TEST_RPASS_CRATES_STAGE2 = $(filter $(TEST_XFAILS_STAGE2), $(RPASS_RC))\n-TEST_RPASS_SOURCES_STAGE0 = $(filter $(TEST_XFAILS_STAGE0), $(RPASS_RS))\n-TEST_RPASS_SOURCES_STAGE1 = $(filter $(TEST_XFAILS_STAGE1), $(RPASS_RS))\n-TEST_RPASS_SOURCES_STAGE2 = $(filter $(TEST_XFAILS_STAGE2), $(RPASS_RS))\n+TEST_RPASS_CRATES_STAGE0 := $(filter $(TEST_XFAILS_STAGE0), $(RPASS_RC))\n+TEST_RPASS_CRATES_STAGE1 := $(filter $(TEST_XFAILS_STAGE1), $(RPASS_RC))\n+TEST_RPASS_CRATES_STAGE2 := $(filter $(TEST_XFAILS_STAGE2), $(RPASS_RC))\n+TEST_RPASS_SOURCES_STAGE0 := $(filter $(TEST_XFAILS_STAGE0), $(RPASS_RS))\n+TEST_RPASS_SOURCES_STAGE1 := $(filter $(TEST_XFAILS_STAGE1), $(RPASS_RS))\n+TEST_RPASS_SOURCES_STAGE2 := $(filter $(TEST_XFAILS_STAGE2), $(RPASS_RS))\n else\n-TEST_RPASS_CRATES_STAGE0 = $(filter-out $(TEST_XFAILS_STAGE0), $(RPASS_RC))\n-TEST_RPASS_CRATES_STAGE1 = $(filter-out $(TEST_XFAILS_STAGE1), $(RPASS_RC))\n-TEST_RPASS_CRATES_STAGE1 = $(filter-out $(TEST_XFAILS_STAGE2), $(RPASS_RC))\n-TEST_RPASS_SOURCES_STAGE0 = $(filter-out $(TEST_XFAILS_STAGE0), $(RPASS_RS))\n-TEST_RPASS_SOURCES_STAGE1 = $(filter-out $(TEST_XFAILS_STAGE1), $(RPASS_RS))\n-TEST_RPASS_SOURCES_STAGE2 = $(filter-out $(TEST_XFAILS_STAGE2), $(RPASS_RS))\n+TEST_RPASS_CRATES_STAGE0 := $(filter-out $(TEST_XFAILS_STAGE0), $(RPASS_RC))\n+TEST_RPASS_CRATES_STAGE1 := $(filter-out $(TEST_XFAILS_STAGE1), $(RPASS_RC))\n+TEST_RPASS_CRATES_STAGE1 := $(filter-out $(TEST_XFAILS_STAGE2), $(RPASS_RC))\n+TEST_RPASS_SOURCES_STAGE0 := $(filter-out $(TEST_XFAILS_STAGE0), $(RPASS_RS))\n+TEST_RPASS_SOURCES_STAGE1 := $(filter-out $(TEST_XFAILS_STAGE1), $(RPASS_RS))\n+TEST_RPASS_SOURCES_STAGE2 := $(filter-out $(TEST_XFAILS_STAGE2), $(RPASS_RS))\n endif\n \n-TEST_RPASS_EXES_STAGE0 = \\\n+TEST_RPASS_EXES_STAGE0 := \\\n   $(subst $(S)src/,,$(TEST_RPASS_CRATES_STAGE0:.rc=.stage0$(X))) \\\n   $(subst $(S)src/,,$(TEST_RPASS_SOURCES_STAGE0:.rs=.stage0$(X)))\n-TEST_RPASS_EXES_STAGE1 = \\\n+TEST_RPASS_EXES_STAGE1 := \\\n   $(subst $(S)src/,,$(TEST_RPASS_CRATES_STAGE1:.rc=.stage1$(X))) \\\n   $(subst $(S)src/,,$(TEST_RPASS_SOURCES_STAGE1:.rs=.stage1$(X)))\n-TEST_RPASS_EXES_STAGE2 = \\\n+TEST_RPASS_EXES_STAGE2 := \\\n   $(subst $(S)src/,,$(TEST_RPASS_CRATES_STAGE1:.rc=.stage2$(X))) \\\n   $(subst $(S)src/,,$(TEST_RPASS_SOURCES_STAGE1:.rs=.stage2$(X)))\n \n-TEST_RPASS_OUTS_STAGE0 = \\\n+TEST_RPASS_OUTS_STAGE0 := \\\n   $(TEST_RPASS_EXES_STAGE0:.stage0$(X)=.stage0.out)\n-TEST_RPASS_OUTS_STAGE1 = \\\n+TEST_RPASS_OUTS_STAGE1 := \\\n   $(TEST_RPASS_EXES_STAGE1:.stage1$(X)=.stage1.out)\n-TEST_RPASS_OUTS_STAGE2 = \\\n+TEST_RPASS_OUTS_STAGE2 := \\\n   $(TEST_RPASS_EXES_STAGE2:.stage2$(X)=.stage2.out)\n \n-TEST_RPASS_TMPS_STAGE0 = \\\n+TEST_RPASS_TMPS_STAGE0 := \\\n   $(TEST_RPASS_EXES_STAGE0:.stage0$(X)=.stage0$(X).tmp)\n-TEST_RPASS_TMPS_STAGE1 = \\\n+TEST_RPASS_TMPS_STAGE1 := \\\n   $(TEST_RPASS_EXES_STAGE1:.stage1$(X)=.stage1$(X).tmp)\n-TEST_RPASS_TMPS_STAGE2 = \\\n+TEST_RPASS_TMPS_STAGE2 := \\\n   $(TEST_RPASS_EXES_STAGE2:.stage2$(X)=.stage2$(X).tmp)\n \n \n-TEST_RFAIL_CRATES_STAGE0 = $(filter-out $(TEST_XFAILS_STAGE0), $(RFAIL_RC))\n-TEST_RFAIL_CRATES_STAGE1 = $(filter-out $(TEST_XFAILS_STAGE1), $(RFAIL_RC))\n-TEST_RFAIL_CRATES_STAGE2 = $(filter-out $(TEST_XFAILS_STAGE2), $(RFAIL_RC))\n-TEST_RFAIL_SOURCES_STAGE0 = $(filter-out $(TEST_XFAILS_STAGE0), $(RFAIL_RS))\n-TEST_RFAIL_SOURCES_STAGE1 = $(filter-out $(TEST_XFAILS_STAGE1), $(RFAIL_RS))\n-TEST_RFAIL_SOURCES_STAGE2 = $(filter-out $(TEST_XFAILS_STAGE2), $(RFAIL_RS))\n+TEST_RFAIL_CRATES_STAGE0 := $(filter-out $(TEST_XFAILS_STAGE0), $(RFAIL_RC))\n+TEST_RFAIL_CRATES_STAGE1 := $(filter-out $(TEST_XFAILS_STAGE1), $(RFAIL_RC))\n+TEST_RFAIL_CRATES_STAGE2 := $(filter-out $(TEST_XFAILS_STAGE2), $(RFAIL_RC))\n+TEST_RFAIL_SOURCES_STAGE0 := $(filter-out $(TEST_XFAILS_STAGE0), $(RFAIL_RS))\n+TEST_RFAIL_SOURCES_STAGE1 := $(filter-out $(TEST_XFAILS_STAGE1), $(RFAIL_RS))\n+TEST_RFAIL_SOURCES_STAGE2 := $(filter-out $(TEST_XFAILS_STAGE2), $(RFAIL_RS))\n \n-TEST_RFAIL_EXES_STAGE0 = \\\n+TEST_RFAIL_EXES_STAGE0 := \\\n   $(subst $(S)src/,,$(TEST_RFAIL_CRATES_STAGE0:.rc=.stage0$(X))) \\\n   $(subst $(S)src/,,$(TEST_RFAIL_SOURCES_STAGE0:.rs=.stage0$(X)))\n-TEST_RFAIL_EXES_STAGE1 = \\\n+TEST_RFAIL_EXES_STAGE1 := \\\n   $(subst $(S)src/,,$(TEST_RFAIL_CRATES_STAGE1:.rc=.stage1$(X))) \\\n   $(subst $(S)src/,,$(TEST_RFAIL_SOURCES_STAGE1:.rs=.stage1$(X)))\n-TEST_RFAIL_EXES_STAGE2 = \\\n+TEST_RFAIL_EXES_STAGE2 := \\\n   $(subst $(S)src/,,$(TEST_RFAIL_CRATES_STAGE2:.rc=.stage2$(X))) \\\n   $(subst $(S)src/,,$(TEST_RFAIL_SOURCES_STAGE2:.rs=.stage2$(X)))\n \n-TEST_RFAIL_OUTS_STAGE0 = \\\n+TEST_RFAIL_OUTS_STAGE0 := \\\n   $(TEST_RFAIL_EXES_STAGE0:.stage0$(X)=.stage0.out)\n-TEST_RFAIL_OUTS_STAGE1 = \\\n+TEST_RFAIL_OUTS_STAGE1 := \\\n   $(TEST_RFAIL_EXES_STAGE1:.stage1$(X)=.stage1.out)\n-TEST_RFAIL_OUTS_STAGE2 = \\\n+TEST_RFAIL_OUTS_STAGE2 := \\\n   $(TEST_RFAIL_EXES_STAGE2:.stage2$(X)=.stage2.out)\n \n \n-TEST_CFAIL_CRATES_STAGE0 = $(filter-out $(TEST_XFAILS_STAGE0), $(CFAIL_RC))\n-TEST_CFAIL_CRATES_STAGE1 = $(filter-out $(TEST_XFAILS_STAGE1), $(CFAIL_RC))\n-TEST_CFAIL_CRATES_STAGE2 = $(filter-out $(TEST_XFAILS_STAGE2), $(CFAIL_RC))\n-TEST_CFAIL_SOURCES_STAGE0 = $(filter-out $(TEST_XFAILS_STAGE0), $(CFAIL_RS))\n-TEST_CFAIL_SOURCES_STAGE1 = $(filter-out $(TEST_XFAILS_STAGE1), $(CFAIL_RS))\n-TEST_CFAIL_SOURCES_STAGE2 = $(filter-out $(TEST_XFAILS_STAGE2), $(CFAIL_RS))\n+TEST_CFAIL_CRATES_STAGE0 := $(filter-out $(TEST_XFAILS_STAGE0), $(CFAIL_RC))\n+TEST_CFAIL_CRATES_STAGE1 := $(filter-out $(TEST_XFAILS_STAGE1), $(CFAIL_RC))\n+TEST_CFAIL_CRATES_STAGE2 := $(filter-out $(TEST_XFAILS_STAGE2), $(CFAIL_RC))\n+TEST_CFAIL_SOURCES_STAGE0 := $(filter-out $(TEST_XFAILS_STAGE0), $(CFAIL_RS))\n+TEST_CFAIL_SOURCES_STAGE1 := $(filter-out $(TEST_XFAILS_STAGE1), $(CFAIL_RS))\n+TEST_CFAIL_SOURCES_STAGE2 := $(filter-out $(TEST_XFAILS_STAGE2), $(CFAIL_RS))\n \n-TEST_CFAIL_OUTS_STAGE0 = \\\n+TEST_CFAIL_OUTS_STAGE0 := \\\n   $(subst $(S)src/,,$(TEST_CFAIL_CRATES_STAGE0:.rc=.stage0.out)) \\\n   $(subst $(S)src/,,$(TEST_CFAIL_SOURCES_STAGE0:.rs=.stage0.out))\n-TEST_CFAIL_OUTS_STAGE1 = \\\n+TEST_CFAIL_OUTS_STAGE1 := \\\n   $(subst $(S)src/,,$(TEST_CFAIL_CRATES_STAGE1:.rc=.stage1.out)) \\\n   $(subst $(S)src/,,$(TEST_CFAIL_SOURCES_STAGE1:.rs=.stage1.out))\n-TEST_CFAIL_OUTS_STAGE2 = \\\n+TEST_CFAIL_OUTS_STAGE2 := \\\n   $(subst $(S)src/,,$(TEST_CFAIL_CRATES_STAGE2:.rc=.stage2.out)) \\\n   $(subst $(S)src/,,$(TEST_CFAIL_SOURCES_STAGE2:.rs=.stage2.out))\n \n \n-ALL_TEST_CRATES =  $(TEST_CFAIL_CRATES_STAGE0) \\\n+ALL_TEST_CRATES := $(TEST_CFAIL_CRATES_STAGE0) \\\n                    $(TEST_RFAIL_CRATES_STAGE0) \\\n                    $(TEST_RPASS_CRATES_STAGE0) \\\n                    $(TEST_CFAIL_CRATES_STAGE1) \\\n@@ -124,7 +128,7 @@ ALL_TEST_CRATES =  $(TEST_CFAIL_CRATES_STAGE0) \\\n                    $(TEST_RFAIL_CRATES_STAGE2) \\\n                    $(TEST_RPASS_CRATES_STAGE2)\n \n-ALL_TEST_SOURCES =  $(TEST_CFAIL_SOURCES_STAGE0) \\\n+ALL_TEST_SOURCES := $(TEST_CFAIL_SOURCES_STAGE0) \\\n                     $(TEST_RFAIL_SOURCES_STAGE0) \\\n                     $(TEST_RPASS_SOURCES_STAGE0) \\\n                     $(TEST_CFAIL_SOURCES_STAGE1) \\\n@@ -182,6 +186,15 @@ compile-check: tidy \\\n # Testing rules\n ######################################################################\n \n+tidy:\n+\t@$(call E, check: formatting)\n+\t$(Q)echo \\\n+      $(filter-out $(GENERATED) $(addprefix $(S)src/, $(GENERATED)) \\\n+        $(addprefix $(S)src/, $(RUSTLLVM_LIB_CS) $(RUSTLLVM_OBJS_CS) \\\n+          $(RUSTLLVM_HDR) $(PKG_3RDPARTY)) \\\n+        $(S)src/etc/%, $(PKG_FILES)) \\\n+    | xargs -n 10 python $(S)src/etc/tidy.py\n+\n %.stage0$(X): %.rs $(SREQ0)\n \t@$(call E, compile_and_link: $@)\n \t$(STAGE0) -o $@ $<"}]}