{"sha": "6fd909b2b1dd2789e0f1af79283c6105fa502ca3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZmZDkwOWIyYjFkZDI3ODllMGYxYWY3OTI4M2M2MTA1ZmE1MDJjYTM=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-11-06T10:07:00Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-02-29T08:27:25Z"}, "message": "reference tracking issue", "tree": {"sha": "64615a6fbec7dfcbac3d42489689a039746fc4aa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/64615a6fbec7dfcbac3d42489689a039746fc4aa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6fd909b2b1dd2789e0f1af79283c6105fa502ca3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6fd909b2b1dd2789e0f1af79283c6105fa502ca3", "html_url": "https://github.com/rust-lang/rust/commit/6fd909b2b1dd2789e0f1af79283c6105fa502ca3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6fd909b2b1dd2789e0f1af79283c6105fa502ca3/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "503026b622d1095770178fbe606a4ba783216992", "url": "https://api.github.com/repos/rust-lang/rust/commits/503026b622d1095770178fbe606a4ba783216992", "html_url": "https://github.com/rust-lang/rust/commit/503026b622d1095770178fbe606a4ba783216992"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "4e4ef46909095319f6e2e50f554b64cc3c08d1fc", "filename": "src/librustc_target/abi/mod.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/6fd909b2b1dd2789e0f1af79283c6105fa502ca3/src%2Flibrustc_target%2Fabi%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6fd909b2b1dd2789e0f1af79283c6105fa502ca3/src%2Flibrustc_target%2Fabi%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fabi%2Fmod.rs?ref=6fd909b2b1dd2789e0f1af79283c6105fa502ca3", "patch": "@@ -1077,10 +1077,11 @@ impl<'a, Ty> TyLayout<'a, Ty> {\n                 match self.variants {\n                     Variants::Multiple { .. } =>\n                         if zero {\n-                            // FIXME: could we identify the variant with discriminant 0, check that?\n+                            // FIXME(#66151):\n+                            // could we identify the variant with discriminant 0, check that?\n                             true\n                         } else {\n-                            // FIXME: This needs to have some sort of discriminant,\n+                            // FIXME(#66151): This needs to have some sort of discriminant,\n                             // which cannot be undef. But for now we are conservative.\n                             true\n                         },\n@@ -1089,7 +1090,7 @@ impl<'a, Ty> TyLayout<'a, Ty> {\n                         match self.fields {\n                             FieldPlacement::Union(..) => true, // An all-0 unit is fine.\n                             FieldPlacement::Array { .. } =>\n-                                // FIXME: The widely use smallvec 0.6 creates uninit arrays\n+                                // FIXME(#66151): The widely use smallvec 0.6 creates uninit arrays\n                                 // with any element type, so let us not (yet) complain about that.\n                                 // count == 0 ||\n                                 // self.field(cx, 0).to_result()?.might_permit_raw_init(cx, zero)?"}]}