{"sha": "838df8dfb60e8a17b3b3b43a642da0d8ca9828e2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgzOGRmOGRmYjYwZThhMTdiM2IzYjQzYTY0MmRhMGQ4Y2E5ODI4ZTI=", "commit": {"author": {"name": "Ivan Molodetskikh", "email": "yalterz@gmail.com", "date": "2018-09-11T05:41:16Z"}, "committer": {"name": "Ivan Molodetskikh", "email": "yalterz@gmail.com", "date": "2018-09-11T05:54:43Z"}, "message": "Use correct heuristic for match block flattening", "tree": {"sha": "e4b3ef7a65e3d770e5beddf87ce49fa8c4cdad26", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e4b3ef7a65e3d770e5beddf87ce49fa8c4cdad26"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/838df8dfb60e8a17b3b3b43a642da0d8ca9828e2", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJGBAABCAAwFiEE1hPewaQLbx3Fswa5As442kfp1pEFAluXWKMSHHlhbHRlcnpA\nZ21haWwuY29tAAoJEALOONpH6daRm2wP/3ZooqQb1QRVNa0ggE5PeKhH3jWgzYQL\nv9+ep0cR5ObEzN6TqlrqqP8MswIg1wpzodybzuK3OXeVtkjiv/fz3yzf85RMQ4tA\nPSacbyKNPxTnhxO5tJXgK8zo7MPptYREr9nlYAOTtKTwj6i02S2LnBfNcT0hBVJo\n3TWyjLbALpymDD/AxGnJwKJGmAkltZukTOXIRTKOQ8ylqEly0WCxi5qKXHP77bQF\nlwhgRf8LYPHwqlKhoeM1KfBQrw7vIwHovaKGVf1/gUgfq6b5F1x76PaB7vW1wHAO\nO1MtZAZGxSuUax79DWtbKfKDqh9beytibldkZStDBV/28pwdLMYt04zuwHwaK+yn\ndR4Y7LWChInflbSxlxAiML+pMl6kzZbcV/ucreBUwuLHFpoVJSJRgMmyQ3OslFp6\nyUF4yoKbsb9EKlUMK9JH6udc9WeWb5qaWoN5DqPz9zTd4yJWVkJYY064IGCGa+TR\no1i+b0UoxI03kOHGSV8LZPGZIFrDDDCvqdYhD6skXpy5w4+GX7cCygQzyPmlE5EP\nEFkmpz7FaynTyORQw48MXSHvQYayqW+XvJQLE90dP2DjUbrxQjGLdEncznxuN6Ls\nfMAzLrsPejmsqQxvFgvVJ9bpdSPDqL3GP9BzErHit3wAvs1hBqh/keB4MRXZ+XOC\nyoZeACYc+LzD\n=xx1s\n-----END PGP SIGNATURE-----", "payload": "tree e4b3ef7a65e3d770e5beddf87ce49fa8c4cdad26\nparent f116baeed7072d7126c4cf844dbd02fc4e49080f\nauthor Ivan Molodetskikh <yalterz@gmail.com> 1536644476 +0300\ncommitter Ivan Molodetskikh <yalterz@gmail.com> 1536645283 +0300\n\nUse correct heuristic for match block flattening\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/838df8dfb60e8a17b3b3b43a642da0d8ca9828e2", "html_url": "https://github.com/rust-lang/rust/commit/838df8dfb60e8a17b3b3b43a642da0d8ca9828e2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/838df8dfb60e8a17b3b3b43a642da0d8ca9828e2/comments", "author": {"login": "YaLTeR", "id": 1794388, "node_id": "MDQ6VXNlcjE3OTQzODg=", "avatar_url": "https://avatars.githubusercontent.com/u/1794388?v=4", "gravatar_id": "", "url": "https://api.github.com/users/YaLTeR", "html_url": "https://github.com/YaLTeR", "followers_url": "https://api.github.com/users/YaLTeR/followers", "following_url": "https://api.github.com/users/YaLTeR/following{/other_user}", "gists_url": "https://api.github.com/users/YaLTeR/gists{/gist_id}", "starred_url": "https://api.github.com/users/YaLTeR/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/YaLTeR/subscriptions", "organizations_url": "https://api.github.com/users/YaLTeR/orgs", "repos_url": "https://api.github.com/users/YaLTeR/repos", "events_url": "https://api.github.com/users/YaLTeR/events{/privacy}", "received_events_url": "https://api.github.com/users/YaLTeR/received_events", "type": "User", "site_admin": false}, "committer": {"login": "YaLTeR", "id": 1794388, "node_id": "MDQ6VXNlcjE3OTQzODg=", "avatar_url": "https://avatars.githubusercontent.com/u/1794388?v=4", "gravatar_id": "", "url": "https://api.github.com/users/YaLTeR", "html_url": "https://github.com/YaLTeR", "followers_url": "https://api.github.com/users/YaLTeR/followers", "following_url": "https://api.github.com/users/YaLTeR/following{/other_user}", "gists_url": "https://api.github.com/users/YaLTeR/gists{/gist_id}", "starred_url": "https://api.github.com/users/YaLTeR/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/YaLTeR/subscriptions", "organizations_url": "https://api.github.com/users/YaLTeR/orgs", "repos_url": "https://api.github.com/users/YaLTeR/repos", "events_url": "https://api.github.com/users/YaLTeR/events{/privacy}", "received_events_url": "https://api.github.com/users/YaLTeR/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f116baeed7072d7126c4cf844dbd02fc4e49080f", "url": "https://api.github.com/repos/rust-lang/rust/commits/f116baeed7072d7126c4cf844dbd02fc4e49080f", "html_url": "https://github.com/rust-lang/rust/commit/f116baeed7072d7126c4cf844dbd02fc4e49080f"}], "stats": {"total": 42, "additions": 22, "deletions": 20}, "files": [{"sha": "6fcd0609b6569912c96977412f3307b9492e95c5", "filename": "Configurations.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/838df8dfb60e8a17b3b3b43a642da0d8ca9828e2/Configurations.md", "raw_url": "https://github.com/rust-lang/rust/raw/838df8dfb60e8a17b3b3b43a642da0d8ca9828e2/Configurations.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Configurations.md?ref=838df8dfb60e8a17b3b3b43a642da0d8ca9828e2", "patch": "@@ -1303,7 +1303,7 @@ fn main() {\n     });\n \n     match lorem {\n-        None => if ipsum {\n+        None => |ipsum| {\n             println!(\"Hello World\");\n         },\n         Some(dolor) => foo(),\n@@ -1324,7 +1324,7 @@ fn main() {\n \n     match lorem {\n         None => {\n-            if ipsum {\n+            |ipsum| {\n                 println!(\"Hello World\");\n             }\n         }"}, {"sha": "9dc3a7e6b0f23887dda3f2000ac32092445ad2f4", "filename": "src/config/lists.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/838df8dfb60e8a17b3b3b43a642da0d8ca9828e2/src%2Fconfig%2Flists.rs", "raw_url": "https://github.com/rust-lang/rust/raw/838df8dfb60e8a17b3b3b43a642da0d8ca9828e2/src%2Fconfig%2Flists.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconfig%2Flists.rs?ref=838df8dfb60e8a17b3b3b43a642da0d8ca9828e2", "patch": "@@ -95,11 +95,13 @@ impl SeparatorPlace {\n     ) -> SeparatorPlace {\n         match tactic {\n             DefinitiveListTactic::Vertical => default,\n-            _ => if sep == \",\" {\n-                SeparatorPlace::Back\n-            } else {\n-                default\n-            },\n+            _ => {\n+                if sep == \",\" {\n+                    SeparatorPlace::Back\n+                } else {\n+                    default\n+                }\n+            }\n         }\n     }\n }"}, {"sha": "fef4a024cf5e306c48ab7fedbb192985baf6481a", "filename": "src/expr.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/838df8dfb60e8a17b3b3b43a642da0d8ca9828e2/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/838df8dfb60e8a17b3b3b43a642da0d8ca9828e2/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=838df8dfb60e8a17b3b3b43a642da0d8ca9828e2", "patch": "@@ -179,11 +179,13 @@ pub fn format_expr(\n                 Some(format!(\"break{}\", id_str))\n             }\n         }\n-        ast::ExprKind::Yield(ref opt_expr) => if let Some(ref expr) = *opt_expr {\n-            rewrite_unary_prefix(context, \"yield \", &**expr, shape)\n-        } else {\n-            Some(\"yield\".to_string())\n-        },\n+        ast::ExprKind::Yield(ref opt_expr) => {\n+            if let Some(ref expr) = *opt_expr {\n+                rewrite_unary_prefix(context, \"yield \", &**expr, shape)\n+            } else {\n+                Some(\"yield\".to_string())\n+            }\n+        }\n         ast::ExprKind::Closure(capture, asyncness, movability, ref fn_decl, ref body, _) => {\n             closures::rewrite_closure(\n                 capture, asyncness, movability, fn_decl, body, expr.span, context, shape,"}, {"sha": "2295535b1215c902bf6e4a5e5895cc83e860316f", "filename": "src/matches.rs", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/838df8dfb60e8a17b3b3b43a642da0d8ca9828e2/src%2Fmatches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/838df8dfb60e8a17b3b3b43a642da0d8ca9828e2/src%2Fmatches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmatches.rs?ref=838df8dfb60e8a17b3b3b43a642da0d8ca9828e2", "patch": "@@ -20,7 +20,7 @@ use comment::{combine_strs_with_missing_comments, rewrite_comment};\n use config::{Config, ControlBraceStyle, IndentStyle};\n use expr::{\n     format_expr, is_empty_block, is_simple_block, is_unsafe_block, prefer_next_line,\n-    rewrite_multiple_patterns, ExprType, RhsTactics, ToExpr,\n+    rewrite_multiple_patterns, ExprType, RhsTactics,\n };\n use lists::{itemize_list, write_list, ListFormatting};\n use rewrite::{Rewrite, RewriteContext};\n@@ -314,23 +314,21 @@ fn block_can_be_flattened<'a>(\n // @extend: true if the arm body can be put next to `=>`\n // @body: flattened body, if the body is block with a single expression\n fn flatten_arm_body<'a>(context: &'a RewriteContext, body: &'a ast::Expr) -> (bool, &'a ast::Expr) {\n+    let can_extend =\n+        |expr| !context.config.force_multiline_blocks() && can_flatten_block_around_this(expr);\n+\n     if let Some(ref block) = block_can_be_flattened(context, body) {\n         if let ast::StmtKind::Expr(ref expr) = block.stmts[0].node {\n             if let ast::ExprKind::Block(..) = expr.node {\n                 flatten_arm_body(context, expr)\n             } else {\n-                let can_extend_expr =\n-                    !context.config.force_multiline_blocks() && can_flatten_block_around_this(expr);\n-                (can_extend_expr, &*expr)\n+                (can_extend(expr), &*expr)\n             }\n         } else {\n             (false, &*body)\n         }\n     } else {\n-        (\n-            !context.config.force_multiline_blocks() && body.can_be_overflowed(context, 1),\n-            &*body,\n-        )\n+        (can_extend(body), &*body)\n     }\n }\n "}]}