{"sha": "1909d933d50799b7ba13fa28b953f400dd18ca61", "node_id": "C_kwDOAAsO6NoAKDE5MDlkOTMzZDUwNzk5YjdiYTEzZmEyOGI5NTNmNDAwZGQxOGNhNjE", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-03-11T14:43:14Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-03-11T14:43:14Z"}, "message": "Rollup merge of #108690 - Zoxc:query-size-limits, r=cjgillot\n\nPlace size limits on query keys and values\n\nThis just prevents these from growing accidentally too large. I'm not sure if there's an easy way to also print the actual size too.", "tree": {"sha": "9091ce78886e5595efbbd582c040a5be330e882f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9091ce78886e5595efbbd582c040a5be330e882f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1909d933d50799b7ba13fa28b953f400dd18ca61", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkDJOCCRBK7hj4Ov3rIwAA8ogIAEujQh4YptmsFblTqRFEpbNM\n/mBT1YkuFBU99lMkFSRZxbtYpmvgv2SIc8sOosN/PeJ5JcIdFAhimNhjNI8zLp7r\n+mcltXJf+gpWX2uWNko67ekYc9ZV7V/BGjENVwrcIkFIb2g71bMD4RUKyHOBPt6/\n1Dy5I3x/QL1lOFTJHzIgytuSrcMBJDITMs3Fh1AtN/p5x5d1akc+GjqAOz8ngu1B\nqx/p3W2l7WrOfg720Sn9eD4N0E5RzfFBUS/pzmUoF/8Oww+ftqWsexCUatazyLIw\nQNQ1tH2rLMjkgvg1rO8NU2UdTGJ9oQiGrV8kXKXmtwSGWSEz1R8Wxb+oYbJ7K9g=\n=cWpb\n-----END PGP SIGNATURE-----\n", "payload": "tree 9091ce78886e5595efbbd582c040a5be330e882f\nparent 9c38ae5653041af5384eca797e6148109d5661b8\nparent 1ccb1de5992dce38f7b8a941ee390a4f9aee1159\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1678545794 +0100\ncommitter GitHub <noreply@github.com> 1678545794 +0100\n\nRollup merge of #108690 - Zoxc:query-size-limits, r=cjgillot\n\nPlace size limits on query keys and values\n\nThis just prevents these from growing accidentally too large. I'm not sure if there's an easy way to also print the actual size too.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1909d933d50799b7ba13fa28b953f400dd18ca61", "html_url": "https://github.com/rust-lang/rust/commit/1909d933d50799b7ba13fa28b953f400dd18ca61", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1909d933d50799b7ba13fa28b953f400dd18ca61/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9c38ae5653041af5384eca797e6148109d5661b8", "url": "https://api.github.com/repos/rust-lang/rust/commits/9c38ae5653041af5384eca797e6148109d5661b8", "html_url": "https://github.com/rust-lang/rust/commit/9c38ae5653041af5384eca797e6148109d5661b8"}, {"sha": "1ccb1de5992dce38f7b8a941ee390a4f9aee1159", "url": "https://api.github.com/repos/rust-lang/rust/commits/1ccb1de5992dce38f7b8a941ee390a4f9aee1159", "html_url": "https://github.com/rust-lang/rust/commit/1ccb1de5992dce38f7b8a941ee390a4f9aee1159"}], "stats": {"total": 30, "additions": 30, "deletions": 0}, "files": [{"sha": "963cb29ffb3269d8d0e519d83f06d0e9b7dba72e", "filename": "compiler/rustc_middle/src/ty/query.rs", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/1909d933d50799b7ba13fa28b953f400dd18ca61/compiler%2Frustc_middle%2Fsrc%2Fty%2Fquery.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1909d933d50799b7ba13fa28b953f400dd18ca61/compiler%2Frustc_middle%2Fsrc%2Fty%2Fquery.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fquery.rs?ref=1909d933d50799b7ba13fa28b953f400dd18ca61", "patch": "@@ -252,6 +252,36 @@ macro_rules! define_callbacks {\n             )*\n         }\n \n+        $(\n+            // Ensure that keys grow no larger than 64 bytes\n+            #[cfg(all(target_arch = \"x86_64\", target_pointer_width = \"64\"))]\n+            const _: () = {\n+                if mem::size_of::<query_keys::$name<'static>>() > 64 {\n+                    panic!(\"{}\", concat!(\n+                        \"the query `\",\n+                        stringify!($name),\n+                        \"` has a key type `\",\n+                        stringify!($($K)*),\n+                        \"` that is too large\"\n+                    ));\n+                }\n+            };\n+\n+            // Ensure that values grow no larger than 64 bytes\n+            #[cfg(all(target_arch = \"x86_64\", target_pointer_width = \"64\"))]\n+            const _: () = {\n+                if mem::size_of::<query_values::$name<'static>>() > 64 {\n+                    panic!(\"{}\", concat!(\n+                        \"the query `\",\n+                        stringify!($name),\n+                        \"` has a value type `\",\n+                        stringify!($V),\n+                        \"` that is too large\"\n+                    ));\n+                }\n+            };\n+        )*\n+\n         pub struct QueryArenas<'tcx> {\n             $($(#[$attr])* pub $name: query_if_arena!([$($modifiers)*]\n                 (WorkerLocal<TypedArena<<$V as Deref>::Target>>)"}]}