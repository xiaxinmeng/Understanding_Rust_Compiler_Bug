{"sha": "133ba2d063af3a078dff30ff4df3dd864082fcb5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEzM2JhMmQwNjNhZjNhMDc4ZGZmMzBmZjRkZjNkZDg2NDA4MmZjYjU=", "commit": {"author": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2018-11-01T10:55:28Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-11-01T14:52:15Z"}, "message": "Rollup merge of #55542 - ljedrz:syntax_alloc_improvements, r=kennytm\n\nsyntax: improve a few allocations\n\nAdd 2 `reserve`s and a `with_capacity` where the final vector size is known.", "tree": {"sha": "9b496b41355d5c34b2bd2a986eb9e189c2bcc97e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9b496b41355d5c34b2bd2a986eb9e189c2bcc97e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/133ba2d063af3a078dff30ff4df3dd864082fcb5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZ1R8CLMp8f2GxWoQ/vbIBR0OATwFAlvbEx8ACgkQ/vbIBR0O\nATzOqxAAjmR7kTQohGAQB7eAg/18zVTGvugdNes1BB8Sw8TBlAauXAK7FNAfVQxr\nFqqb9XWS5e+OPZxXkIbr2QQbvhvQDUxOlsE2QW6o7ZjbPyUGe0WVXt5veS8JsatW\n8CtuSwlcmI8LAazDISVxRwYK+UBDkftC0FzIgkMMmkZBr6e5tS9qRADx0n+i9nEb\ncNR8jn/j8Z5C9+eJdsakkKDY0kgND/lUdG4ZvImETjpV8J4J+Lg9VMcNcvMwizKP\n82DAlxH5PSCO93T/ahGvw7/CRqRl9XL0XgLRC9Hgvks281HRsy7FnP1dOXSBcciO\nP2Fnv2l/Wg10e3+AQI3VY9vdj8dimbfIpzb8/usNWHVnjmo9jitT/k3YSRy2pqW6\nY2CyPAq3UTGFYw/LAhEUCXMFjnKXB3LXOyi+MHne92ZFvmKS/ibVnswKz3s9Y7Y1\nVPaU8B7py3oppEt26HYfrCpJ3lMeCJYVLoDk7ZPvpxJfvbYsBduQz/NF54C5S/49\naBnz8obXPGzTTzL8umeF9lw6v5dqahKUqABpCp2zcjJ44gDR7cuWyZNFXZEVmmYy\nuDKo+yLtVUEfeJglskk+qtiFpBCj+Csqs/839BzFjHziMsUlnfCksFUppkr6K2gQ\nz/Qny+tUwJSo6DPY3qFN1kJrMl/5vO4BJd4chroXzgGpLDS7D5A=\n=D4oZ\n-----END PGP SIGNATURE-----", "payload": "tree 9b496b41355d5c34b2bd2a986eb9e189c2bcc97e\nparent 912f00c187fbe6293a71e2c3c46e14e5d5f7385c\nparent f4c03fd8473c2b5a254789abcb712c90b558f92d\nauthor Pietro Albini <pietro@pietroalbini.org> 1541069728 +0100\ncommitter kennytm <kennytm@gmail.com> 1541083935 +0800\n\nRollup merge of #55542 - ljedrz:syntax_alloc_improvements, r=kennytm\n\nsyntax: improve a few allocations\n\nAdd 2 `reserve`s and a `with_capacity` where the final vector size is known.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/133ba2d063af3a078dff30ff4df3dd864082fcb5", "html_url": "https://github.com/rust-lang/rust/commit/133ba2d063af3a078dff30ff4df3dd864082fcb5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/133ba2d063af3a078dff30ff4df3dd864082fcb5/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "912f00c187fbe6293a71e2c3c46e14e5d5f7385c", "url": "https://api.github.com/repos/rust-lang/rust/commits/912f00c187fbe6293a71e2c3c46e14e5d5f7385c", "html_url": "https://github.com/rust-lang/rust/commit/912f00c187fbe6293a71e2c3c46e14e5d5f7385c"}, {"sha": "f4c03fd8473c2b5a254789abcb712c90b558f92d", "url": "https://api.github.com/repos/rust-lang/rust/commits/f4c03fd8473c2b5a254789abcb712c90b558f92d", "html_url": "https://github.com/rust-lang/rust/commit/f4c03fd8473c2b5a254789abcb712c90b558f92d"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "41ed90fb94eedfc25a7d5ad0ca1ba1168f80e84d", "filename": "src/libsyntax/ext/expand.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/133ba2d063af3a078dff30ff4df3dd864082fcb5/src%2Flibsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/133ba2d063af3a078dff30ff4df3dd864082fcb5/src%2Flibsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fexpand.rs?ref=133ba2d063af3a078dff30ff4df3dd864082fcb5", "patch": "@@ -387,6 +387,8 @@ impl<'a, 'b> MacroExpander<'a, 'b> {\n                         add_derived_markers(&mut self.cx, item.span(), &traits, item.clone());\n                     let derives = derives.entry(invoc.expansion_data.mark).or_default();\n \n+                    derives.reserve(traits.len());\n+                    invocations.reserve(traits.len());\n                     for path in &traits {\n                         let mark = Mark::fresh(self.cx.current_expansion.mark);\n                         derives.push(mark);"}, {"sha": "dd90ef06c39295da68bab608be45b3a0f5937b65", "filename": "src/libsyntax_ext/deriving/generic/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/133ba2d063af3a078dff30ff4df3dd864082fcb5/src%2Flibsyntax_ext%2Fderiving%2Fgeneric%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/133ba2d063af3a078dff30ff4df3dd864082fcb5/src%2Flibsyntax_ext%2Fderiving%2Fgeneric%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fderiving%2Fgeneric%2Fmod.rs?ref=133ba2d063af3a078dff30ff4df3dd864082fcb5", "patch": "@@ -1384,7 +1384,7 @@ impl<'a> MethodDef<'a> {\n             // let __self2_vi = unsafe {\n             //     std::intrinsics::discriminant_value(&arg2) } as i32;\n             // ```\n-            let mut index_let_stmts: Vec<ast::Stmt> = Vec::new();\n+            let mut index_let_stmts: Vec<ast::Stmt> = Vec::with_capacity(vi_idents.len() + 1);\n \n             // We also build an expression which checks whether all discriminants are equal\n             // discriminant_test = __self0_vi == __self1_vi && __self0_vi == __self2_vi && ..."}]}