{"sha": "66488a50f9752a87a6947f9284f5a3f6cb61301c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY2NDg4YTUwZjk3NTJhODdhNjk0N2Y5Mjg0ZjVhM2Y2Y2I2MTMwMWM=", "commit": {"author": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2018-04-01T06:26:22Z"}, "committer": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2018-04-10T12:40:26Z"}, "message": "Make Session.dependency_formats thread-safe", "tree": {"sha": "ced86435fe50dc481fa62cb5d691d4c2a3b3a8b7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ced86435fe50dc481fa62cb5d691d4c2a3b3a8b7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/66488a50f9752a87a6947f9284f5a3f6cb61301c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/66488a50f9752a87a6947f9284f5a3f6cb61301c", "html_url": "https://github.com/rust-lang/rust/commit/66488a50f9752a87a6947f9284f5a3f6cb61301c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/66488a50f9752a87a6947f9284f5a3f6cb61301c/comments", "author": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cbf8ad4a40425b9a82ff5e0eb43cbd9c36366f53", "url": "https://api.github.com/repos/rust-lang/rust/commits/cbf8ad4a40425b9a82ff5e0eb43cbd9c36366f53", "html_url": "https://github.com/rust-lang/rust/commit/cbf8ad4a40425b9a82ff5e0eb43cbd9c36366f53"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "f7dfc3c33c0a7830f2b14fac2e03b1ba4519c49f", "filename": "src/librustc/middle/dependency_format.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/66488a50f9752a87a6947f9284f5a3f6cb61301c/src%2Flibrustc%2Fmiddle%2Fdependency_format.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66488a50f9752a87a6947f9284f5a3f6cb61301c/src%2Flibrustc%2Fmiddle%2Fdependency_format.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fdependency_format.rs?ref=66488a50f9752a87a6947f9284f5a3f6cb61301c", "patch": "@@ -94,13 +94,14 @@ pub enum Linkage {\n \n pub fn calculate<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>) {\n     let sess = &tcx.sess;\n-    let mut fmts = sess.dependency_formats.borrow_mut();\n+    let mut fmts = FxHashMap();\n     for &ty in sess.crate_types.borrow().iter() {\n         let linkage = calculate_type(tcx, ty);\n         verify_ok(tcx, &linkage);\n         fmts.insert(ty, linkage);\n     }\n     sess.abort_if_errors();\n+    sess.dependency_formats.set(fmts);\n }\n \n fn calculate_type<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,"}, {"sha": "55da5b921af0064ce0745ce3fb0d2c0b98815af2", "filename": "src/librustc/session/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/66488a50f9752a87a6947f9284f5a3f6cb61301c/src%2Flibrustc%2Fsession%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66488a50f9752a87a6947f9284f5a3f6cb61301c/src%2Flibrustc%2Fsession%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fmod.rs?ref=66488a50f9752a87a6947f9284f5a3f6cb61301c", "patch": "@@ -22,7 +22,7 @@ use middle::dependency_format;\n use session::search_paths::PathKind;\n use session::config::{DebugInfoLevel, OutputType};\n use ty::tls;\n-use util::nodemap::{FxHashMap, FxHashSet};\n+use util::nodemap::{FxHashSet};\n use util::common::{duration_to_secs_str, ErrorReported};\n use util::common::ProfileQueriesMsg;\n \n@@ -93,7 +93,7 @@ pub struct Session {\n     pub plugin_llvm_passes: OneThread<RefCell<Vec<String>>>,\n     pub plugin_attributes: OneThread<RefCell<Vec<(String, AttributeType)>>>,\n     pub crate_types: Once<Vec<config::CrateType>>,\n-    pub dependency_formats: RefCell<dependency_format::Dependencies>,\n+    pub dependency_formats: Once<dependency_format::Dependencies>,\n     /// The crate_disambiguator is constructed out of all the `-C metadata`\n     /// arguments passed to the compiler. Its value together with the crate-name\n     /// forms a unique global identifier for the crate. It is used to allow\n@@ -1097,7 +1097,7 @@ pub fn build_session_(\n         plugin_llvm_passes: OneThread::new(RefCell::new(Vec::new())),\n         plugin_attributes: OneThread::new(RefCell::new(Vec::new())),\n         crate_types: Once::new(),\n-        dependency_formats: RefCell::new(FxHashMap()),\n+        dependency_formats: Once::new(),\n         crate_disambiguator: Once::new(),\n         features: Once::new(),\n         recursion_limit: Once::new(),"}]}