{"sha": "f3b2d37e7754458a14ac99cee970ede383eddc2f", "node_id": "C_kwDOAAsO6NoAKGYzYjJkMzdlNzc1NDQ1OGExNGFjOTljZWU5NzBlZGUzODNlZGRjMmY", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2022-01-18T14:24:11Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2022-01-18T14:24:11Z"}, "message": "Record object file artifact size in self profile data", "tree": {"sha": "0f06412b7e7482fc12d85bdcd82dbb642a0b9a8b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0f06412b7e7482fc12d85bdcd82dbb642a0b9a8b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f3b2d37e7754458a14ac99cee970ede383eddc2f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f3b2d37e7754458a14ac99cee970ede383eddc2f", "html_url": "https://github.com/rust-lang/rust/commit/f3b2d37e7754458a14ac99cee970ede383eddc2f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f3b2d37e7754458a14ac99cee970ede383eddc2f/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b91ecc78bf619f3d5ad1b9b590e25f77f3ab11f6", "url": "https://api.github.com/repos/rust-lang/rust/commits/b91ecc78bf619f3d5ad1b9b590e25f77f3ab11f6", "html_url": "https://github.com/rust-lang/rust/commit/b91ecc78bf619f3d5ad1b9b590e25f77f3ab11f6"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "2e047c7eea14e49d739aa97ce9b0dee6c9ba9bb3", "filename": "src/driver/aot.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f3b2d37e7754458a14ac99cee970ede383eddc2f/src%2Fdriver%2Faot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3b2d37e7754458a14ac99cee970ede383eddc2f/src%2Fdriver%2Faot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdriver%2Faot.rs?ref=f3b2d37e7754458a14ac99cee970ede383eddc2f", "patch": "@@ -56,6 +56,9 @@ fn emit_module(\n \n     let tmp_file = tcx.output_filenames(()).temp_path(OutputType::Object, Some(&name));\n     let obj = product.object.write().unwrap();\n+\n+    tcx.sess.prof.artifact_size(\"object_file\", name.clone(), obj.len().try_into().unwrap());\n+\n     if let Err(err) = std::fs::write(&tmp_file, obj) {\n         tcx.sess.fatal(&format!(\"error writing object file: {}\", err));\n     }"}]}