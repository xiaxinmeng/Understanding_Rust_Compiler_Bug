{"sha": "6a73dedb36516c89914bbdf7f97c425d8615e1ae", "node_id": "C_kwDOAAsO6NoAKDZhNzNkZWRiMzY1MTZjODk5MTRiYmRmN2Y5N2M0MjVkODYxNWUxYWU", "commit": {"author": {"name": "Andy Wang", "email": "cbeuw.andy@gmail.com", "date": "2022-05-25T20:54:30Z"}, "committer": {"name": "Andy Wang", "email": "cbeuw.andy@gmail.com", "date": "2022-06-06T18:15:59Z"}, "message": "Update experimental threading warning", "tree": {"sha": "e8ae0c73062855a03243de1b463eb1cc6b5308cc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e8ae0c73062855a03243de1b463eb1cc6b5308cc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6a73dedb36516c89914bbdf7f97c425d8615e1ae", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE7dcbcBMl24/h63ldGBtJ+fOPM3QFAmKeRF8ACgkQGBtJ+fOP\nM3RGbgv8CuPh7EA7xvin3RLZyOOt5hKsiob12BTMAIEM5KiYRTp0G55R8ZLLaamK\naWa1SyhQfgjI6c2/ahI0hOaXUkBl6oAJZyQyQW6hYmtEpJHtDtTr8uAMG0mu2+kK\nAtxj+80zIsaiPwzYNCkoQbjLTZeICr8z5ZTgLkakKwEbNv0H1bcWCEh99ws0IAcR\ngVK41OsjLsJXYNKgDZcWabLMIUzghghl76eWEH3265jaj3WhcI8UztDrfm6RFAFr\nydG1SiHhgd5tnwMnJms/jP/V8SB4/7etBNyeaUfFfcKrTbVawhpWoo+yxEW6sQoA\no31q1DCfzJCxLVjvbuBgpfgReL3ip4qgC/ByOFFxcbKwnXkoqeIZFiPPHzB3yWFu\nnWGJ06f3VO7accCGElPB3IoDKqG29RU/9dOxKh8x/KnhBeO0YXyne/QAdmFEHYzr\nV8Adgn4+W2B2l+UkrVERGXNKwvDIIWHeOGJ4gvxIOSTd7THoR8r+aoD4SWDSJ6Dv\nSOYCAU78\n=H7lA\n-----END PGP SIGNATURE-----", "payload": "tree e8ae0c73062855a03243de1b463eb1cc6b5308cc\nparent bfa56454e9544278be9f5de7abad54bcee9af51c\nauthor Andy Wang <cbeuw.andy@gmail.com> 1653512070 +0100\ncommitter Andy Wang <cbeuw.andy@gmail.com> 1654539359 +0100\n\nUpdate experimental threading warning\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6a73dedb36516c89914bbdf7f97c425d8615e1ae", "html_url": "https://github.com/rust-lang/rust/commit/6a73dedb36516c89914bbdf7f97c425d8615e1ae", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6a73dedb36516c89914bbdf7f97c425d8615e1ae/comments", "author": {"login": "cbeuw", "id": 7034308, "node_id": "MDQ6VXNlcjcwMzQzMDg=", "avatar_url": "https://avatars.githubusercontent.com/u/7034308?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cbeuw", "html_url": "https://github.com/cbeuw", "followers_url": "https://api.github.com/users/cbeuw/followers", "following_url": "https://api.github.com/users/cbeuw/following{/other_user}", "gists_url": "https://api.github.com/users/cbeuw/gists{/gist_id}", "starred_url": "https://api.github.com/users/cbeuw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cbeuw/subscriptions", "organizations_url": "https://api.github.com/users/cbeuw/orgs", "repos_url": "https://api.github.com/users/cbeuw/repos", "events_url": "https://api.github.com/users/cbeuw/events{/privacy}", "received_events_url": "https://api.github.com/users/cbeuw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cbeuw", "id": 7034308, "node_id": "MDQ6VXNlcjcwMzQzMDg=", "avatar_url": "https://avatars.githubusercontent.com/u/7034308?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cbeuw", "html_url": "https://github.com/cbeuw", "followers_url": "https://api.github.com/users/cbeuw/followers", "following_url": "https://api.github.com/users/cbeuw/following{/other_user}", "gists_url": "https://api.github.com/users/cbeuw/gists{/gist_id}", "starred_url": "https://api.github.com/users/cbeuw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cbeuw/subscriptions", "organizations_url": "https://api.github.com/users/cbeuw/orgs", "repos_url": "https://api.github.com/users/cbeuw/repos", "events_url": "https://api.github.com/users/cbeuw/events{/privacy}", "received_events_url": "https://api.github.com/users/cbeuw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bfa56454e9544278be9f5de7abad54bcee9af51c", "url": "https://api.github.com/repos/rust-lang/rust/commits/bfa56454e9544278be9f5de7abad54bcee9af51c", "html_url": "https://github.com/rust-lang/rust/commit/bfa56454e9544278be9f5de7abad54bcee9af51c"}], "stats": {"total": 226, "additions": 165, "deletions": 61}, "files": [{"sha": "4dc40cf2fe3dc9e40707c12af1a03b947bc2eb2c", "filename": "src/shims/unix/thread.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6a73dedb36516c89914bbdf7f97c425d8615e1ae/src%2Fshims%2Funix%2Fthread.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a73dedb36516c89914bbdf7f97c425d8615e1ae/src%2Fshims%2Funix%2Fthread.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Funix%2Fthread.rs?ref=6a73dedb36516c89914bbdf7f97c425d8615e1ae", "patch": "@@ -14,7 +14,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n         let this = self.eval_context_mut();\n \n         this.tcx.sess.warn(\n-            \"thread support is experimental: weak memory effects are not fully compatible with the Rust atomics memory model.\",\n+            \"thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\\n(see https://github.com/rust-lang/miri/issues/1388)\",\n         );\n \n         // Create the new thread"}, {"sha": "f4f467120e8a43ca857411324e1113b2c1dcb2d6", "filename": "tests/compile-fail/weak_memory/cpp20_rwc_syncs.stderr", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Fcompile-fail%2Fweak_memory%2Fcpp20_rwc_syncs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Fcompile-fail%2Fweak_memory%2Fcpp20_rwc_syncs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fweak_memory%2Fcpp20_rwc_syncs.stderr?ref=6a73dedb36516c89914bbdf7f97c425d8615e1ae", "patch": "@@ -0,0 +1,23 @@\n+warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n+         (see https://github.com/rust-lang/miri/issues/1388)\n+\n+error: Undefined Behavior: type validation failed at .value: encountered uninitialized raw pointer\n+  --> $DIR/cpp20_rwc_syncs.rs:LL:CC\n+   |\n+LL |         let _ = unsafe { std::mem::MaybeUninit::<*const u32>::uninit().assume_init() };\n+   |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type validation failed at .value: encountered uninitialized raw pointer\n+   |\n+   = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n+   = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n+           \n+   = note: inside `test_cpp20_rwc_syncs` at $DIR/cpp20_rwc_syncs.rs:LL:CC\n+note: inside `main` at $DIR/cpp20_rwc_syncs.rs:LL:CC\n+  --> $DIR/cpp20_rwc_syncs.rs:LL:CC\n+   |\n+LL |         test_cpp20_rwc_syncs();\n+   |         ^^^^^^^^^^^^^^^^^^^^^^\n+\n+note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n+\n+error: aborting due to previous error; 1 warning emitted\n+"}, {"sha": "513d97edb51cf48a900bdcccafb5478378b06e49", "filename": "tests/compile-fail/weak_memory/racing_mixed_size.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Fcompile-fail%2Fweak_memory%2Fracing_mixed_size.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Fcompile-fail%2Fweak_memory%2Fracing_mixed_size.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fweak_memory%2Fracing_mixed_size.rs?ref=6a73dedb36516c89914bbdf7f97c425d8615e1ae", "patch": "@@ -1,3 +1,4 @@\n+// ignore-windows: Concurrency on Windows is not supported yet.\n // compile-flags: -Zmiri-ignore-leaks\n \n #![feature(core_intrinsics)]"}, {"sha": "b3074d93c9cb0793e7f01357950e315b8ae66965", "filename": "tests/compile-fail/weak_memory/racing_mixed_size.stderr", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Fcompile-fail%2Fweak_memory%2Fracing_mixed_size.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Fcompile-fail%2Fweak_memory%2Fracing_mixed_size.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fweak_memory%2Fracing_mixed_size.stderr?ref=6a73dedb36516c89914bbdf7f97c425d8615e1ae", "patch": "@@ -0,0 +1,18 @@\n+warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n+         (see https://github.com/rust-lang/miri/issues/1388)\n+\n+error: Undefined Behavior: racy imperfectly overlapping atomic access\n+  --> $DIR/racing_mixed_size.rs:LL:CC\n+   |\n+LL |             std::intrinsics::atomic_load_relaxed(hi);\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ racy imperfectly overlapping atomic access\n+   |\n+   = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n+   = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n+           \n+   = note: inside closure at $DIR/racing_mixed_size.rs:LL:CC\n+\n+note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n+\n+error: aborting due to previous error; 1 warning emitted\n+"}, {"sha": "2ce73fdaaec101ab0108c858311a57c652345f5f", "filename": "tests/fail/concurrency/libc_pthread_create_main_terminate.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Ffail%2Fconcurrency%2Flibc_pthread_create_main_terminate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Ffail%2Fconcurrency%2Flibc_pthread_create_main_terminate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fconcurrency%2Flibc_pthread_create_main_terminate.stderr?ref=6a73dedb36516c89914bbdf7f97c425d8615e1ae", "patch": "@@ -1,4 +1,5 @@\n-warning: thread support is experimental and incomplete: weak memory effects are not emulated.\n+warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n+         (see https://github.com/rust-lang/miri/issues/1388)\n \n error: the main thread terminated without waiting for all remaining threads\n "}, {"sha": "b106cc4c9541852d53aed8f1aef913162a8a200e", "filename": "tests/fail/concurrency/libc_pthread_join_detached.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Ffail%2Fconcurrency%2Flibc_pthread_join_detached.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Ffail%2Fconcurrency%2Flibc_pthread_join_detached.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fconcurrency%2Flibc_pthread_join_detached.stderr?ref=6a73dedb36516c89914bbdf7f97c425d8615e1ae", "patch": "@@ -1,4 +1,5 @@\n-warning: thread support is experimental and incomplete: weak memory effects are not emulated.\n+warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n+         (see https://github.com/rust-lang/miri/issues/1388)\n \n error: Undefined Behavior: trying to join a detached or already joined thread\n   --> $DIR/libc_pthread_join_detached.rs:LL:CC"}, {"sha": "438998208d11b6e62f47b5ba09d1a6e9f597416b", "filename": "tests/fail/concurrency/libc_pthread_join_joined.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Ffail%2Fconcurrency%2Flibc_pthread_join_joined.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Ffail%2Fconcurrency%2Flibc_pthread_join_joined.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fconcurrency%2Flibc_pthread_join_joined.stderr?ref=6a73dedb36516c89914bbdf7f97c425d8615e1ae", "patch": "@@ -1,4 +1,5 @@\n-warning: thread support is experimental and incomplete: weak memory effects are not emulated.\n+warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n+         (see https://github.com/rust-lang/miri/issues/1388)\n \n error: Undefined Behavior: trying to join a detached or already joined thread\n   --> $DIR/libc_pthread_join_joined.rs:LL:CC"}, {"sha": "04f2ab07406c0b0534cce64b64f9bbdd35756b9d", "filename": "tests/fail/concurrency/libc_pthread_join_main.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Ffail%2Fconcurrency%2Flibc_pthread_join_main.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Ffail%2Fconcurrency%2Flibc_pthread_join_main.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fconcurrency%2Flibc_pthread_join_main.stderr?ref=6a73dedb36516c89914bbdf7f97c425d8615e1ae", "patch": "@@ -1,4 +1,5 @@\n-warning: thread support is experimental and incomplete: weak memory effects are not emulated.\n+warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n+         (see https://github.com/rust-lang/miri/issues/1388)\n \n error: Undefined Behavior: trying to join a detached or already joined thread\n   --> $DIR/libc_pthread_join_main.rs:LL:CC"}, {"sha": "daf18c50e034ff21223b07bbbd543dd78adcc783", "filename": "tests/fail/concurrency/libc_pthread_join_multiple.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Ffail%2Fconcurrency%2Flibc_pthread_join_multiple.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Ffail%2Fconcurrency%2Flibc_pthread_join_multiple.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fconcurrency%2Flibc_pthread_join_multiple.stderr?ref=6a73dedb36516c89914bbdf7f97c425d8615e1ae", "patch": "@@ -1,4 +1,5 @@\n-warning: thread support is experimental and incomplete: weak memory effects are not emulated.\n+warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n+         (see https://github.com/rust-lang/miri/issues/1388)\n \n error: Undefined Behavior: trying to join a detached or already joined thread\n   --> $DIR/libc_pthread_join_multiple.rs:LL:CC"}, {"sha": "b2e0779f5fbbd68b0e8b73b1effa1f464ab6e864", "filename": "tests/fail/concurrency/libc_pthread_join_self.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Ffail%2Fconcurrency%2Flibc_pthread_join_self.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Ffail%2Fconcurrency%2Flibc_pthread_join_self.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fconcurrency%2Flibc_pthread_join_self.stderr?ref=6a73dedb36516c89914bbdf7f97c425d8615e1ae", "patch": "@@ -1,4 +1,5 @@\n-warning: thread support is experimental and incomplete: weak memory effects are not emulated.\n+warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n+         (see https://github.com/rust-lang/miri/issues/1388)\n \n error: Undefined Behavior: trying to join itself\n   --> $DIR/libc_pthread_join_self.rs:LL:CC"}, {"sha": "ad5528dc555ab897757a1a32a51fd4902c80517f", "filename": "tests/fail/concurrency/thread_local_static_dealloc.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Ffail%2Fconcurrency%2Fthread_local_static_dealloc.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Ffail%2Fconcurrency%2Fthread_local_static_dealloc.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fconcurrency%2Fthread_local_static_dealloc.stderr?ref=6a73dedb36516c89914bbdf7f97c425d8615e1ae", "patch": "@@ -1,4 +1,5 @@\n-warning: thread support is experimental and incomplete: weak memory effects are not emulated.\n+warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n+         (see https://github.com/rust-lang/miri/issues/1388)\n \n error: Undefined Behavior: pointer to ALLOC was dereferenced after this allocation got freed\n   --> $DIR/thread_local_static_dealloc.rs:LL:CC"}, {"sha": "1ed8c5a510f4f854203375ce052e85bbdd1a39df", "filename": "tests/fail/concurrency/too_few_args.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Ffail%2Fconcurrency%2Ftoo_few_args.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Ffail%2Fconcurrency%2Ftoo_few_args.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fconcurrency%2Ftoo_few_args.stderr?ref=6a73dedb36516c89914bbdf7f97c425d8615e1ae", "patch": "@@ -1,4 +1,5 @@\n-warning: thread support is experimental and incomplete: weak memory effects are not emulated.\n+warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n+         (see https://github.com/rust-lang/miri/issues/1388)\n \n error: Undefined Behavior: callee has fewer arguments than expected\n   --> $DIR/too_few_args.rs:LL:CC"}, {"sha": "5602dab993b0842ee0d0efa02d2eb61368e6d5a1", "filename": "tests/fail/concurrency/too_many_args.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Ffail%2Fconcurrency%2Ftoo_many_args.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Ffail%2Fconcurrency%2Ftoo_many_args.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fconcurrency%2Ftoo_many_args.stderr?ref=6a73dedb36516c89914bbdf7f97c425d8615e1ae", "patch": "@@ -1,4 +1,5 @@\n-warning: thread support is experimental and incomplete: weak memory effects are not emulated.\n+warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n+         (see https://github.com/rust-lang/miri/issues/1388)\n \n error: Undefined Behavior: callee has more arguments than expected\n   --> $DIR/too_many_args.rs:LL:CC"}, {"sha": "26a196a5590f18a9798ee51e965e9ca00abd7f1e", "filename": "tests/fail/concurrency/unwind_top_of_stack.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Ffail%2Fconcurrency%2Funwind_top_of_stack.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Ffail%2Fconcurrency%2Funwind_top_of_stack.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fconcurrency%2Funwind_top_of_stack.stderr?ref=6a73dedb36516c89914bbdf7f97c425d8615e1ae", "patch": "@@ -1,4 +1,5 @@\n-warning: thread support is experimental and incomplete: weak memory effects are not emulated.\n+warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n+         (see https://github.com/rust-lang/miri/issues/1388)\n \n thread '<unnamed>' panicked at 'explicit panic', $DIR/unwind_top_of_stack.rs:LL:CC\n note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace"}, {"sha": "0b247fb19bc9ca89613adbc064612583c1cf7347", "filename": "tests/fail/data_race/alloc_read_race.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Ffail%2Fdata_race%2Falloc_read_race.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Ffail%2Fdata_race%2Falloc_read_race.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fdata_race%2Falloc_read_race.stderr?ref=6a73dedb36516c89914bbdf7f97c425d8615e1ae", "patch": "@@ -1,4 +1,5 @@\n-warning: thread support is experimental and incomplete: weak memory effects are not emulated.\n+warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n+         (see https://github.com/rust-lang/miri/issues/1388)\n \n error: Undefined Behavior: Data race detected between Read on Thread(id = 2) and Allocate on Thread(id = 1) at ALLOC (current vector clock = VClock, conflicting timestamp = VClock)\n   --> $DIR/alloc_read_race.rs:LL:CC"}, {"sha": "3594980ef9b02074403b9b1b6a2d71869079b3d3", "filename": "tests/fail/data_race/alloc_write_race.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Ffail%2Fdata_race%2Falloc_write_race.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Ffail%2Fdata_race%2Falloc_write_race.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fdata_race%2Falloc_write_race.stderr?ref=6a73dedb36516c89914bbdf7f97c425d8615e1ae", "patch": "@@ -1,4 +1,5 @@\n-warning: thread support is experimental and incomplete: weak memory effects are not emulated.\n+warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n+         (see https://github.com/rust-lang/miri/issues/1388)\n \n error: Undefined Behavior: Data race detected between Write on Thread(id = 2) and Allocate on Thread(id = 1) at ALLOC (current vector clock = VClock, conflicting timestamp = VClock)\n   --> $DIR/alloc_write_race.rs:LL:CC"}, {"sha": "0c9aaf5a0019a313c07c5b02bd406eea8699798b", "filename": "tests/fail/data_race/atomic_read_na_write_race1.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Ffail%2Fdata_race%2Fatomic_read_na_write_race1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Ffail%2Fdata_race%2Fatomic_read_na_write_race1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fdata_race%2Fatomic_read_na_write_race1.stderr?ref=6a73dedb36516c89914bbdf7f97c425d8615e1ae", "patch": "@@ -1,4 +1,5 @@\n-warning: thread support is experimental and incomplete: weak memory effects are not emulated.\n+warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n+         (see https://github.com/rust-lang/miri/issues/1388)\n \n error: Undefined Behavior: Data race detected between Atomic Load on Thread(id = 2) and Write on Thread(id = 1) at ALLOC (current vector clock = VClock, conflicting timestamp = VClock)\n   --> $DIR/atomic_read_na_write_race1.rs:LL:CC"}, {"sha": "6e3a1330f9dd6e60d8118b7122bb320280f1fa18", "filename": "tests/fail/data_race/atomic_read_na_write_race2.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Ffail%2Fdata_race%2Fatomic_read_na_write_race2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Ffail%2Fdata_race%2Fatomic_read_na_write_race2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fdata_race%2Fatomic_read_na_write_race2.stderr?ref=6a73dedb36516c89914bbdf7f97c425d8615e1ae", "patch": "@@ -1,4 +1,5 @@\n-warning: thread support is experimental and incomplete: weak memory effects are not emulated.\n+warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n+         (see https://github.com/rust-lang/miri/issues/1388)\n \n error: Undefined Behavior: Data race detected between Write on Thread(id = 2) and Atomic Load on Thread(id = 1) at ALLOC (current vector clock = VClock, conflicting timestamp = VClock)\n   --> $DIR/atomic_read_na_write_race2.rs:LL:CC"}, {"sha": "4dc4ac1e6768e794ae4963549b392deb79d21b2f", "filename": "tests/fail/data_race/atomic_write_na_read_race1.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Ffail%2Fdata_race%2Fatomic_write_na_read_race1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Ffail%2Fdata_race%2Fatomic_write_na_read_race1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fdata_race%2Fatomic_write_na_read_race1.stderr?ref=6a73dedb36516c89914bbdf7f97c425d8615e1ae", "patch": "@@ -1,4 +1,5 @@\n-warning: thread support is experimental and incomplete: weak memory effects are not emulated.\n+warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n+         (see https://github.com/rust-lang/miri/issues/1388)\n \n error: Undefined Behavior: Data race detected between Read on Thread(id = 2) and Atomic Store on Thread(id = 1) at ALLOC (current vector clock = VClock, conflicting timestamp = VClock)\n   --> $DIR/atomic_write_na_read_race1.rs:LL:CC"}, {"sha": "e665073c539e287b3f5c11869099d9c8cc4894f9", "filename": "tests/fail/data_race/atomic_write_na_read_race2.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Ffail%2Fdata_race%2Fatomic_write_na_read_race2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Ffail%2Fdata_race%2Fatomic_write_na_read_race2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fdata_race%2Fatomic_write_na_read_race2.stderr?ref=6a73dedb36516c89914bbdf7f97c425d8615e1ae", "patch": "@@ -1,4 +1,5 @@\n-warning: thread support is experimental and incomplete: weak memory effects are not emulated.\n+warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n+         (see https://github.com/rust-lang/miri/issues/1388)\n \n error: Undefined Behavior: Data race detected between Atomic Store on Thread(id = 2) and Read on Thread(id = 1) at ALLOC (current vector clock = VClock, conflicting timestamp = VClock)\n   --> $DIR/atomic_write_na_read_race2.rs:LL:CC"}, {"sha": "a70c3b52de50343595f91246fc8c403a1a7698f9", "filename": "tests/fail/data_race/atomic_write_na_write_race1.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Ffail%2Fdata_race%2Fatomic_write_na_write_race1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Ffail%2Fdata_race%2Fatomic_write_na_write_race1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fdata_race%2Fatomic_write_na_write_race1.stderr?ref=6a73dedb36516c89914bbdf7f97c425d8615e1ae", "patch": "@@ -1,4 +1,5 @@\n-warning: thread support is experimental and incomplete: weak memory effects are not emulated.\n+warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n+         (see https://github.com/rust-lang/miri/issues/1388)\n \n error: Undefined Behavior: Data race detected between Atomic Store on Thread(id = 2) and Write on Thread(id = 1) at ALLOC (current vector clock = VClock, conflicting timestamp = VClock)\n   --> $DIR/atomic_write_na_write_race1.rs:LL:CC"}, {"sha": "79730d507934c55210f42924c96b31b4ecfc80e5", "filename": "tests/fail/data_race/atomic_write_na_write_race2.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Ffail%2Fdata_race%2Fatomic_write_na_write_race2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Ffail%2Fdata_race%2Fatomic_write_na_write_race2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fdata_race%2Fatomic_write_na_write_race2.stderr?ref=6a73dedb36516c89914bbdf7f97c425d8615e1ae", "patch": "@@ -1,4 +1,5 @@\n-warning: thread support is experimental and incomplete: weak memory effects are not emulated.\n+warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n+         (see https://github.com/rust-lang/miri/issues/1388)\n \n error: Undefined Behavior: Data race detected between Write on Thread(id = 2) and Atomic Store on Thread(id = 1) at ALLOC (current vector clock = VClock, conflicting timestamp = VClock)\n   --> $DIR/atomic_write_na_write_race2.rs:LL:CC"}, {"sha": "21b3eefc5e4180e59f65ea265a0b3353d807090e", "filename": "tests/fail/data_race/dangling_thread_async_race.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Ffail%2Fdata_race%2Fdangling_thread_async_race.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Ffail%2Fdata_race%2Fdangling_thread_async_race.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fdata_race%2Fdangling_thread_async_race.stderr?ref=6a73dedb36516c89914bbdf7f97c425d8615e1ae", "patch": "@@ -1,4 +1,5 @@\n-warning: thread support is experimental and incomplete: weak memory effects are not emulated.\n+warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n+         (see https://github.com/rust-lang/miri/issues/1388)\n \n error: Undefined Behavior: Data race detected between Write on Thread(id = 3) and Write on Thread(id = 1) at ALLOC (current vector clock = VClock, conflicting timestamp = VClock)\n   --> $DIR/dangling_thread_async_race.rs:LL:CC"}, {"sha": "3ca8862a5819a85214df24435a259539858df966", "filename": "tests/fail/data_race/dangling_thread_race.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Ffail%2Fdata_race%2Fdangling_thread_race.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Ffail%2Fdata_race%2Fdangling_thread_race.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fdata_race%2Fdangling_thread_race.stderr?ref=6a73dedb36516c89914bbdf7f97c425d8615e1ae", "patch": "@@ -1,4 +1,5 @@\n-warning: thread support is experimental and incomplete: weak memory effects are not emulated.\n+warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n+         (see https://github.com/rust-lang/miri/issues/1388)\n \n error: Undefined Behavior: Data race detected between Write on Thread(id = 0, name = \"main\") and Write on Thread(id = 1) at ALLOC (current vector clock = VClock, conflicting timestamp = VClock)\n   --> $DIR/dangling_thread_race.rs:LL:CC"}, {"sha": "10b32003ff4004c0ef3a8201372eb370a9c4d281", "filename": "tests/fail/data_race/dealloc_read_race1.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Ffail%2Fdata_race%2Fdealloc_read_race1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Ffail%2Fdata_race%2Fdealloc_read_race1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fdata_race%2Fdealloc_read_race1.stderr?ref=6a73dedb36516c89914bbdf7f97c425d8615e1ae", "patch": "@@ -1,4 +1,5 @@\n-warning: thread support is experimental and incomplete: weak memory effects are not emulated.\n+warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n+         (see https://github.com/rust-lang/miri/issues/1388)\n \n error: Undefined Behavior: Data race detected between Deallocate on Thread(id = 2) and Read on Thread(id = 1) at ALLOC (current vector clock = VClock, conflicting timestamp = VClock)\n   --> $DIR/dealloc_read_race1.rs:LL:CC"}, {"sha": "a21de1d9f7a9f71334d682e586aa74302387debf", "filename": "tests/fail/data_race/dealloc_read_race2.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Ffail%2Fdata_race%2Fdealloc_read_race2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Ffail%2Fdata_race%2Fdealloc_read_race2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fdata_race%2Fdealloc_read_race2.stderr?ref=6a73dedb36516c89914bbdf7f97c425d8615e1ae", "patch": "@@ -1,4 +1,5 @@\n-warning: thread support is experimental and incomplete: weak memory effects are not emulated.\n+warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n+         (see https://github.com/rust-lang/miri/issues/1388)\n \n error: Undefined Behavior: pointer to ALLOC was dereferenced after this allocation got freed\n   --> $DIR/dealloc_read_race2.rs:LL:CC"}, {"sha": "0f7213eb8d52144073523e5aa88283bd285ef662", "filename": "tests/fail/data_race/dealloc_read_race_stack.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Ffail%2Fdata_race%2Fdealloc_read_race_stack.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Ffail%2Fdata_race%2Fdealloc_read_race_stack.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fdata_race%2Fdealloc_read_race_stack.stderr?ref=6a73dedb36516c89914bbdf7f97c425d8615e1ae", "patch": "@@ -1,4 +1,5 @@\n-warning: thread support is experimental and incomplete: weak memory effects are not emulated.\n+warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n+         (see https://github.com/rust-lang/miri/issues/1388)\n \n error: Undefined Behavior: Data race detected between Deallocate on Thread(id = 1) and Read on Thread(id = 2) at ALLOC (current vector clock = VClock, conflicting timestamp = VClock)\n   --> $DIR/dealloc_read_race_stack.rs:LL:CC"}, {"sha": "76258e9d8fc0b810d8ef80e2d6c97d62c3692d58", "filename": "tests/fail/data_race/dealloc_write_race1.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Ffail%2Fdata_race%2Fdealloc_write_race1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Ffail%2Fdata_race%2Fdealloc_write_race1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fdata_race%2Fdealloc_write_race1.stderr?ref=6a73dedb36516c89914bbdf7f97c425d8615e1ae", "patch": "@@ -1,4 +1,5 @@\n-warning: thread support is experimental and incomplete: weak memory effects are not emulated.\n+warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n+         (see https://github.com/rust-lang/miri/issues/1388)\n \n error: Undefined Behavior: Data race detected between Deallocate on Thread(id = 2) and Write on Thread(id = 1) at ALLOC (current vector clock = VClock, conflicting timestamp = VClock)\n   --> $DIR/dealloc_write_race1.rs:LL:CC"}, {"sha": "d9aef72118d8906f42b784dfbf57a09a122c6caf", "filename": "tests/fail/data_race/dealloc_write_race2.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Ffail%2Fdata_race%2Fdealloc_write_race2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Ffail%2Fdata_race%2Fdealloc_write_race2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fdata_race%2Fdealloc_write_race2.stderr?ref=6a73dedb36516c89914bbdf7f97c425d8615e1ae", "patch": "@@ -1,4 +1,5 @@\n-warning: thread support is experimental and incomplete: weak memory effects are not emulated.\n+warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n+         (see https://github.com/rust-lang/miri/issues/1388)\n \n error: Undefined Behavior: pointer to ALLOC was dereferenced after this allocation got freed\n   --> $DIR/dealloc_write_race2.rs:LL:CC"}, {"sha": "70533f654b777ee02ec8c2b899c313c697abcb1f", "filename": "tests/fail/data_race/dealloc_write_race_stack.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Ffail%2Fdata_race%2Fdealloc_write_race_stack.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Ffail%2Fdata_race%2Fdealloc_write_race_stack.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fdata_race%2Fdealloc_write_race_stack.stderr?ref=6a73dedb36516c89914bbdf7f97c425d8615e1ae", "patch": "@@ -1,4 +1,5 @@\n-warning: thread support is experimental and incomplete: weak memory effects are not emulated.\n+warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n+         (see https://github.com/rust-lang/miri/issues/1388)\n \n error: Undefined Behavior: Data race detected between Deallocate on Thread(id = 1) and Write on Thread(id = 2) at ALLOC (current vector clock = VClock, conflicting timestamp = VClock)\n   --> $DIR/dealloc_write_race_stack.rs:LL:CC"}, {"sha": "58d33ffa8cf3c8afc945bc640d11996570bfaffc", "filename": "tests/fail/data_race/enable_after_join_to_main.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Ffail%2Fdata_race%2Fenable_after_join_to_main.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Ffail%2Fdata_race%2Fenable_after_join_to_main.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fdata_race%2Fenable_after_join_to_main.stderr?ref=6a73dedb36516c89914bbdf7f97c425d8615e1ae", "patch": "@@ -1,4 +1,5 @@\n-warning: thread support is experimental and incomplete: weak memory effects are not emulated.\n+warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n+         (see https://github.com/rust-lang/miri/issues/1388)\n \n error: Undefined Behavior: Data race detected between Write on Thread(id = 6) and Write on Thread(id = 5) at ALLOC (current vector clock = VClock, conflicting timestamp = VClock)\n   --> $DIR/enable_after_join_to_main.rs:LL:CC"}, {"sha": "1e3186b08fa115d09868678db6a0863d6806b2b2", "filename": "tests/fail/data_race/fence_after_load.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Ffail%2Fdata_race%2Ffence_after_load.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Ffail%2Fdata_race%2Ffence_after_load.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fdata_race%2Ffence_after_load.stderr?ref=6a73dedb36516c89914bbdf7f97c425d8615e1ae", "patch": "@@ -1,4 +1,5 @@\n-warning: thread support is experimental and incomplete: weak memory effects are not emulated.\n+warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n+         (see https://github.com/rust-lang/miri/issues/1388)\n \n error: Undefined Behavior: Data race detected between Write on Thread(id = 0, name = \"main\") and Write on Thread(id = 1) at ALLOC (current vector clock = VClock, conflicting timestamp = VClock)\n   --> $DIR/fence_after_load.rs:LL:CC"}, {"sha": "5078e662546a8de0377eea7bd74838d46d726e1f", "filename": "tests/fail/data_race/read_write_race.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Ffail%2Fdata_race%2Fread_write_race.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Ffail%2Fdata_race%2Fread_write_race.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fdata_race%2Fread_write_race.stderr?ref=6a73dedb36516c89914bbdf7f97c425d8615e1ae", "patch": "@@ -1,4 +1,5 @@\n-warning: thread support is experimental and incomplete: weak memory effects are not emulated.\n+warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n+         (see https://github.com/rust-lang/miri/issues/1388)\n \n error: Undefined Behavior: Data race detected between Write on Thread(id = 2) and Read on Thread(id = 1) at ALLOC (current vector clock = VClock, conflicting timestamp = VClock)\n   --> $DIR/read_write_race.rs:LL:CC"}, {"sha": "843bea753b651a5659d7d3738b07c5e9ed048118", "filename": "tests/fail/data_race/read_write_race_stack.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Ffail%2Fdata_race%2Fread_write_race_stack.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Ffail%2Fdata_race%2Fread_write_race_stack.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fdata_race%2Fread_write_race_stack.stderr?ref=6a73dedb36516c89914bbdf7f97c425d8615e1ae", "patch": "@@ -1,4 +1,5 @@\n-warning: thread support is experimental and incomplete: weak memory effects are not emulated.\n+warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n+         (see https://github.com/rust-lang/miri/issues/1388)\n \n error: Undefined Behavior: Data race detected between Read on Thread(id = 1) and Write on Thread(id = 2) at ALLOC (current vector clock = VClock, conflicting timestamp = VClock)\n   --> $DIR/read_write_race_stack.rs:LL:CC"}, {"sha": "d2423ff9163169d628588af706c18cf85f3cf054", "filename": "tests/fail/data_race/relax_acquire_race.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Ffail%2Fdata_race%2Frelax_acquire_race.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Ffail%2Fdata_race%2Frelax_acquire_race.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fdata_race%2Frelax_acquire_race.stderr?ref=6a73dedb36516c89914bbdf7f97c425d8615e1ae", "patch": "@@ -1,4 +1,5 @@\n-warning: thread support is experimental and incomplete: weak memory effects are not emulated.\n+warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n+         (see https://github.com/rust-lang/miri/issues/1388)\n \n error: Undefined Behavior: Data race detected between Read on Thread(id = 3) and Write on Thread(id = 1) at ALLOC (current vector clock = VClock, conflicting timestamp = VClock)\n   --> $DIR/relax_acquire_race.rs:LL:CC"}, {"sha": "ffbf50c09172d48b0ddf11aabeba3d91bd063bc5", "filename": "tests/fail/data_race/release_seq_race.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Ffail%2Fdata_race%2Frelease_seq_race.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Ffail%2Fdata_race%2Frelease_seq_race.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fdata_race%2Frelease_seq_race.stderr?ref=6a73dedb36516c89914bbdf7f97c425d8615e1ae", "patch": "@@ -1,4 +1,5 @@\n-warning: thread support is experimental and incomplete: weak memory effects are not emulated.\n+warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n+         (see https://github.com/rust-lang/miri/issues/1388)\n \n error: Undefined Behavior: Data race detected between Read on Thread(id = 3) and Write on Thread(id = 1) at ALLOC (current vector clock = VClock, conflicting timestamp = VClock)\n   --> $DIR/release_seq_race.rs:LL:CC"}, {"sha": "b7602151461136287fcd0cb03ba705035903db59", "filename": "tests/fail/data_race/release_seq_race_same_thread.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Ffail%2Fdata_race%2Frelease_seq_race_same_thread.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Ffail%2Fdata_race%2Frelease_seq_race_same_thread.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fdata_race%2Frelease_seq_race_same_thread.stderr?ref=6a73dedb36516c89914bbdf7f97c425d8615e1ae", "patch": "@@ -1,4 +1,5 @@\n-warning: thread support is experimental and incomplete: weak memory effects are not emulated.\n+warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n+         (see https://github.com/rust-lang/miri/issues/1388)\n \n error: Undefined Behavior: Data race detected between Read on Thread(id = 2) and Write on Thread(id = 1) at ALLOC (current vector clock = VClock, conflicting timestamp = VClock)\n   --> $DIR/release_seq_race_same_thread.rs:LL:CC"}, {"sha": "c6b09ba5f00bcae7051469257ce4d51ac2a384ad", "filename": "tests/fail/data_race/rmw_race.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Ffail%2Fdata_race%2Frmw_race.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Ffail%2Fdata_race%2Frmw_race.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fdata_race%2Frmw_race.stderr?ref=6a73dedb36516c89914bbdf7f97c425d8615e1ae", "patch": "@@ -1,4 +1,5 @@\n-warning: thread support is experimental and incomplete: weak memory effects are not emulated.\n+warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n+         (see https://github.com/rust-lang/miri/issues/1388)\n \n error: Undefined Behavior: Data race detected between Read on Thread(id = 3) and Write on Thread(id = 1) at ALLOC (current vector clock = VClock, conflicting timestamp = VClock)\n   --> $DIR/rmw_race.rs:LL:CC"}, {"sha": "5acba97486eab98ce4db3a434805f05c220ec082", "filename": "tests/fail/data_race/write_write_race.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Ffail%2Fdata_race%2Fwrite_write_race.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Ffail%2Fdata_race%2Fwrite_write_race.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fdata_race%2Fwrite_write_race.stderr?ref=6a73dedb36516c89914bbdf7f97c425d8615e1ae", "patch": "@@ -1,4 +1,5 @@\n-warning: thread support is experimental and incomplete: weak memory effects are not emulated.\n+warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n+         (see https://github.com/rust-lang/miri/issues/1388)\n \n error: Undefined Behavior: Data race detected between Write on Thread(id = 2) and Write on Thread(id = 1) at ALLOC (current vector clock = VClock, conflicting timestamp = VClock)\n   --> $DIR/write_write_race.rs:LL:CC"}, {"sha": "d052206f4cc72e9f36562e139c661ffaab10ce4a", "filename": "tests/fail/data_race/write_write_race_stack.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Ffail%2Fdata_race%2Fwrite_write_race_stack.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Ffail%2Fdata_race%2Fwrite_write_race_stack.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fdata_race%2Fwrite_write_race_stack.stderr?ref=6a73dedb36516c89914bbdf7f97c425d8615e1ae", "patch": "@@ -1,4 +1,5 @@\n-warning: thread support is experimental and incomplete: weak memory effects are not emulated.\n+warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n+         (see https://github.com/rust-lang/miri/issues/1388)\n \n error: Undefined Behavior: Data race detected between Write on Thread(id = 1) and Write on Thread(id = 2) at ALLOC (current vector clock = VClock, conflicting timestamp = VClock)\n   --> $DIR/write_write_race_stack.rs:LL:CC"}, {"sha": "d1f9ee6cdd5f146bfe2a49dfb62e267a8e251e06", "filename": "tests/fail/sync/libc_pthread_mutex_deadlock.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Ffail%2Fsync%2Flibc_pthread_mutex_deadlock.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Ffail%2Fsync%2Flibc_pthread_mutex_deadlock.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fsync%2Flibc_pthread_mutex_deadlock.stderr?ref=6a73dedb36516c89914bbdf7f97c425d8615e1ae", "patch": "@@ -1,4 +1,5 @@\n-warning: thread support is experimental and incomplete: weak memory effects are not emulated.\n+warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n+         (see https://github.com/rust-lang/miri/issues/1388)\n \n error: deadlock: the evaluated program deadlocked\n   --> $DIR/libc_pthread_mutex_deadlock.rs:LL:CC"}, {"sha": "e9f0e2d4c1573c3b031eae2bcc8dc03a165db5ff", "filename": "tests/fail/sync/libc_pthread_mutex_wrong_owner.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Ffail%2Fsync%2Flibc_pthread_mutex_wrong_owner.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Ffail%2Fsync%2Flibc_pthread_mutex_wrong_owner.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fsync%2Flibc_pthread_mutex_wrong_owner.stderr?ref=6a73dedb36516c89914bbdf7f97c425d8615e1ae", "patch": "@@ -1,4 +1,5 @@\n-warning: thread support is experimental and incomplete: weak memory effects are not emulated.\n+warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n+         (see https://github.com/rust-lang/miri/issues/1388)\n \n error: Undefined Behavior: unlocked a default mutex that was not locked by the current thread\n   --> $DIR/libc_pthread_mutex_wrong_owner.rs:LL:CC"}, {"sha": "c25ab25a3da5be14ed4fa2247eaae324e43c7b3a", "filename": "tests/fail/sync/libc_pthread_rwlock_read_wrong_owner.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Ffail%2Fsync%2Flibc_pthread_rwlock_read_wrong_owner.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Ffail%2Fsync%2Flibc_pthread_rwlock_read_wrong_owner.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fsync%2Flibc_pthread_rwlock_read_wrong_owner.stderr?ref=6a73dedb36516c89914bbdf7f97c425d8615e1ae", "patch": "@@ -1,4 +1,5 @@\n-warning: thread support is experimental and incomplete: weak memory effects are not emulated.\n+warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n+         (see https://github.com/rust-lang/miri/issues/1388)\n \n error: Undefined Behavior: unlocked an rwlock that was not locked by the active thread\n   --> $DIR/libc_pthread_rwlock_read_wrong_owner.rs:LL:CC"}, {"sha": "8fc2ae4c82e561405b63bbb054726a9a44c59c3f", "filename": "tests/fail/sync/libc_pthread_rwlock_write_read_deadlock.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Ffail%2Fsync%2Flibc_pthread_rwlock_write_read_deadlock.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Ffail%2Fsync%2Flibc_pthread_rwlock_write_read_deadlock.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fsync%2Flibc_pthread_rwlock_write_read_deadlock.stderr?ref=6a73dedb36516c89914bbdf7f97c425d8615e1ae", "patch": "@@ -1,4 +1,5 @@\n-warning: thread support is experimental and incomplete: weak memory effects are not emulated.\n+warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n+         (see https://github.com/rust-lang/miri/issues/1388)\n \n error: deadlock: the evaluated program deadlocked\n   --> $DIR/libc_pthread_rwlock_write_read_deadlock.rs:LL:CC"}, {"sha": "86c67925fb93525fd79146f4ed543f0aef1a72bc", "filename": "tests/fail/sync/libc_pthread_rwlock_write_write_deadlock.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Ffail%2Fsync%2Flibc_pthread_rwlock_write_write_deadlock.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Ffail%2Fsync%2Flibc_pthread_rwlock_write_write_deadlock.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fsync%2Flibc_pthread_rwlock_write_write_deadlock.stderr?ref=6a73dedb36516c89914bbdf7f97c425d8615e1ae", "patch": "@@ -1,4 +1,5 @@\n-warning: thread support is experimental and incomplete: weak memory effects are not emulated.\n+warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n+         (see https://github.com/rust-lang/miri/issues/1388)\n \n error: deadlock: the evaluated program deadlocked\n   --> $DIR/libc_pthread_rwlock_write_write_deadlock.rs:LL:CC"}, {"sha": "8965d55a489d1da164d4c13a3a62082a9d04324d", "filename": "tests/fail/sync/libc_pthread_rwlock_write_wrong_owner.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Ffail%2Fsync%2Flibc_pthread_rwlock_write_wrong_owner.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Ffail%2Fsync%2Flibc_pthread_rwlock_write_wrong_owner.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fsync%2Flibc_pthread_rwlock_write_wrong_owner.stderr?ref=6a73dedb36516c89914bbdf7f97c425d8615e1ae", "patch": "@@ -1,4 +1,5 @@\n-warning: thread support is experimental and incomplete: weak memory effects are not emulated.\n+warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n+         (see https://github.com/rust-lang/miri/issues/1388)\n \n error: Undefined Behavior: unlocked an rwlock that was not locked by the active thread\n   --> $DIR/libc_pthread_rwlock_write_wrong_owner.rs:LL:CC"}, {"sha": "9fe6daa778c1fc66489c84ab4c37b05f227b1e52", "filename": "tests/pass/concurrency/channels.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Fpass%2Fconcurrency%2Fchannels.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Fpass%2Fconcurrency%2Fchannels.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fpass%2Fconcurrency%2Fchannels.stderr?ref=6a73dedb36516c89914bbdf7f97c425d8615e1ae", "patch": "@@ -1,2 +1,3 @@\n-warning: thread support is experimental: weak memory effects are not fully compatible with the Rust atomics memory model.\n+warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n+         (see https://github.com/rust-lang/miri/issues/1388)\n "}, {"sha": "9fe6daa778c1fc66489c84ab4c37b05f227b1e52", "filename": "tests/pass/concurrency/concurrent_caller_location.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Fpass%2Fconcurrency%2Fconcurrent_caller_location.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Fpass%2Fconcurrency%2Fconcurrent_caller_location.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fpass%2Fconcurrency%2Fconcurrent_caller_location.stderr?ref=6a73dedb36516c89914bbdf7f97c425d8615e1ae", "patch": "@@ -1,2 +1,3 @@\n-warning: thread support is experimental: weak memory effects are not fully compatible with the Rust atomics memory model.\n+warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n+         (see https://github.com/rust-lang/miri/issues/1388)\n "}, {"sha": "9fe6daa778c1fc66489c84ab4c37b05f227b1e52", "filename": "tests/pass/concurrency/data_race.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Fpass%2Fconcurrency%2Fdata_race.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Fpass%2Fconcurrency%2Fdata_race.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fpass%2Fconcurrency%2Fdata_race.stderr?ref=6a73dedb36516c89914bbdf7f97c425d8615e1ae", "patch": "@@ -1,2 +1,3 @@\n-warning: thread support is experimental: weak memory effects are not fully compatible with the Rust atomics memory model.\n+warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n+         (see https://github.com/rust-lang/miri/issues/1388)\n "}, {"sha": "9fe6daa778c1fc66489c84ab4c37b05f227b1e52", "filename": "tests/pass/concurrency/disable_data_race_detector.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Fpass%2Fconcurrency%2Fdisable_data_race_detector.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Fpass%2Fconcurrency%2Fdisable_data_race_detector.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fpass%2Fconcurrency%2Fdisable_data_race_detector.stderr?ref=6a73dedb36516c89914bbdf7f97c425d8615e1ae", "patch": "@@ -1,2 +1,3 @@\n-warning: thread support is experimental: weak memory effects are not fully compatible with the Rust atomics memory model.\n+warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n+         (see https://github.com/rust-lang/miri/issues/1388)\n "}, {"sha": "9fe6daa778c1fc66489c84ab4c37b05f227b1e52", "filename": "tests/pass/concurrency/issue1643.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Fpass%2Fconcurrency%2Fissue1643.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Fpass%2Fconcurrency%2Fissue1643.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fpass%2Fconcurrency%2Fissue1643.stderr?ref=6a73dedb36516c89914bbdf7f97c425d8615e1ae", "patch": "@@ -1,2 +1,3 @@\n-warning: thread support is experimental: weak memory effects are not fully compatible with the Rust atomics memory model.\n+warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n+         (see https://github.com/rust-lang/miri/issues/1388)\n "}, {"sha": "9fe6daa778c1fc66489c84ab4c37b05f227b1e52", "filename": "tests/pass/concurrency/linux-futex.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Fpass%2Fconcurrency%2Flinux-futex.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Fpass%2Fconcurrency%2Flinux-futex.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fpass%2Fconcurrency%2Flinux-futex.stderr?ref=6a73dedb36516c89914bbdf7f97c425d8615e1ae", "patch": "@@ -1,2 +1,3 @@\n-warning: thread support is experimental: weak memory effects are not fully compatible with the Rust atomics memory model.\n+warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n+         (see https://github.com/rust-lang/miri/issues/1388)\n "}, {"sha": "0ba9e8645b28a08b617129443d695bab856642f6", "filename": "tests/pass/concurrency/simple.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Fpass%2Fconcurrency%2Fsimple.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Fpass%2Fconcurrency%2Fsimple.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fpass%2Fconcurrency%2Fsimple.stderr?ref=6a73dedb36516c89914bbdf7f97c425d8615e1ae", "patch": "@@ -1,4 +1,5 @@\n-warning: thread support is experimental: weak memory effects are not fully compatible with the Rust atomics memory model.\n+warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n+         (see https://github.com/rust-lang/miri/issues/1388)\n \n thread '<unnamed>' panicked at 'Hello!', $DIR/simple.rs:LL:CC\n note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace"}, {"sha": "9fe6daa778c1fc66489c84ab4c37b05f227b1e52", "filename": "tests/pass/concurrency/spin_loops.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Fpass%2Fconcurrency%2Fspin_loops.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Fpass%2Fconcurrency%2Fspin_loops.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fpass%2Fconcurrency%2Fspin_loops.stderr?ref=6a73dedb36516c89914bbdf7f97c425d8615e1ae", "patch": "@@ -1,2 +1,3 @@\n-warning: thread support is experimental and incomplete: weak memory effects are not emulated.\n+warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n+         (see https://github.com/rust-lang/miri/issues/1388)\n "}, {"sha": "9fe6daa778c1fc66489c84ab4c37b05f227b1e52", "filename": "tests/pass/concurrency/sync.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Fpass%2Fconcurrency%2Fsync.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Fpass%2Fconcurrency%2Fsync.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fpass%2Fconcurrency%2Fsync.stderr?ref=6a73dedb36516c89914bbdf7f97c425d8615e1ae", "patch": "@@ -1,2 +1,3 @@\n-warning: thread support is experimental: weak memory effects are not fully compatible with the Rust atomics memory model.\n+warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n+         (see https://github.com/rust-lang/miri/issues/1388)\n "}, {"sha": "9fe6daa778c1fc66489c84ab4c37b05f227b1e52", "filename": "tests/pass/concurrency/thread_locals.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Fpass%2Fconcurrency%2Fthread_locals.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Fpass%2Fconcurrency%2Fthread_locals.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fpass%2Fconcurrency%2Fthread_locals.stderr?ref=6a73dedb36516c89914bbdf7f97c425d8615e1ae", "patch": "@@ -1,2 +1,3 @@\n-warning: thread support is experimental: weak memory effects are not fully compatible with the Rust atomics memory model.\n+warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n+         (see https://github.com/rust-lang/miri/issues/1388)\n "}, {"sha": "9fe6daa778c1fc66489c84ab4c37b05f227b1e52", "filename": "tests/pass/concurrency/tls_lib_drop.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Fpass%2Fconcurrency%2Ftls_lib_drop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Fpass%2Fconcurrency%2Ftls_lib_drop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fpass%2Fconcurrency%2Ftls_lib_drop.stderr?ref=6a73dedb36516c89914bbdf7f97c425d8615e1ae", "patch": "@@ -1,2 +1,3 @@\n-warning: thread support is experimental: weak memory effects are not fully compatible with the Rust atomics memory model.\n+warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n+         (see https://github.com/rust-lang/miri/issues/1388)\n "}, {"sha": "9fe6daa778c1fc66489c84ab4c37b05f227b1e52", "filename": "tests/pass/libc.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Fpass%2Flibc.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Fpass%2Flibc.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fpass%2Flibc.stderr?ref=6a73dedb36516c89914bbdf7f97c425d8615e1ae", "patch": "@@ -1,2 +1,3 @@\n-warning: thread support is experimental: weak memory effects are not fully compatible with the Rust atomics memory model.\n+warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n+         (see https://github.com/rust-lang/miri/issues/1388)\n "}, {"sha": "b90cc01bb857ea18211338406a196dbed879a6c2", "filename": "tests/pass/panic/concurrent-panic.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Fpass%2Fpanic%2Fconcurrent-panic.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Fpass%2Fpanic%2Fconcurrent-panic.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fpass%2Fpanic%2Fconcurrent-panic.stderr?ref=6a73dedb36516c89914bbdf7f97c425d8615e1ae", "patch": "@@ -1,4 +1,5 @@\n-warning: thread support is experimental: weak memory effects are not fully compatible with the Rust atomics memory model.\n+warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n+         (see https://github.com/rust-lang/miri/issues/1388)\n \n Thread 1 starting, will block on mutex\n Thread 1 reported it has started"}, {"sha": "af327a3012c3707514e9ee7908531e5425114523", "filename": "tests/pass/threadleak_ignored.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Fpass%2Fthreadleak_ignored.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Fpass%2Fthreadleak_ignored.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fpass%2Fthreadleak_ignored.stderr?ref=6a73dedb36516c89914bbdf7f97c425d8615e1ae", "patch": "@@ -1,3 +1,4 @@\n-warning: thread support is experimental: weak memory effects are not fully compatible with the Rust atomics memory model.\n+warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n+         (see https://github.com/rust-lang/miri/issues/1388)\n \n Dropping 0"}, {"sha": "9fe6daa778c1fc66489c84ab4c37b05f227b1e52", "filename": "tests/run-pass/weak_memory/consistency.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Frun-pass%2Fweak_memory%2Fconsistency.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Frun-pass%2Fweak_memory%2Fconsistency.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fweak_memory%2Fconsistency.stderr?ref=6a73dedb36516c89914bbdf7f97c425d8615e1ae", "patch": "@@ -1,2 +1,3 @@\n-warning: thread support is experimental: weak memory effects are not fully compatible with the Rust atomics memory model.\n+warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n+         (see https://github.com/rust-lang/miri/issues/1388)\n "}, {"sha": "750c628458b8a3a416789420397ee65bc8e44d63", "filename": "tests/run-pass/weak_memory/extra_cpp.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Frun-pass%2Fweak_memory%2Fextra_cpp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Frun-pass%2Fweak_memory%2Fextra_cpp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fweak_memory%2Fextra_cpp.rs?ref=6a73dedb36516c89914bbdf7f97c425d8615e1ae", "patch": "@@ -1,3 +1,4 @@\n+// ignore-windows: Concurrency on Windows is not supported yet.\n // compile-flags: -Zmiri-ignore-leaks\n \n // Tests operations not perfomable through C++'s atomic API"}, {"sha": "9fe6daa778c1fc66489c84ab4c37b05f227b1e52", "filename": "tests/run-pass/weak_memory/extra_cpp.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Frun-pass%2Fweak_memory%2Fextra_cpp.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Frun-pass%2Fweak_memory%2Fextra_cpp.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fweak_memory%2Fextra_cpp.stderr?ref=6a73dedb36516c89914bbdf7f97c425d8615e1ae", "patch": "@@ -1,2 +1,3 @@\n-warning: thread support is experimental: weak memory effects are not fully compatible with the Rust atomics memory model.\n+warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n+         (see https://github.com/rust-lang/miri/issues/1388)\n "}, {"sha": "7c375d7345f3a0ccb9924634a376635a64376238", "filename": "tests/run-pass/weak_memory/extra_cpp_unsafe.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Frun-pass%2Fweak_memory%2Fextra_cpp_unsafe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Frun-pass%2Fweak_memory%2Fextra_cpp_unsafe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fweak_memory%2Fextra_cpp_unsafe.rs?ref=6a73dedb36516c89914bbdf7f97c425d8615e1ae", "patch": "@@ -1,3 +1,4 @@\n+// ignore-windows: Concurrency on Windows is not supported yet.\n // compile-flags: -Zmiri-ignore-leaks\n \n // Tests operations not perfomable through C++'s atomic API"}, {"sha": "9fe6daa778c1fc66489c84ab4c37b05f227b1e52", "filename": "tests/run-pass/weak_memory/extra_cpp_unsafe.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Frun-pass%2Fweak_memory%2Fextra_cpp_unsafe.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Frun-pass%2Fweak_memory%2Fextra_cpp_unsafe.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fweak_memory%2Fextra_cpp_unsafe.stderr?ref=6a73dedb36516c89914bbdf7f97c425d8615e1ae", "patch": "@@ -1,2 +1,3 @@\n-warning: thread support is experimental: weak memory effects are not fully compatible with the Rust atomics memory model.\n+warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n+         (see https://github.com/rust-lang/miri/issues/1388)\n "}, {"sha": "9fe6daa778c1fc66489c84ab4c37b05f227b1e52", "filename": "tests/run-pass/weak_memory/weak.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Frun-pass%2Fweak_memory%2Fweak.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6a73dedb36516c89914bbdf7f97c425d8615e1ae/tests%2Frun-pass%2Fweak_memory%2Fweak.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fweak_memory%2Fweak.stderr?ref=6a73dedb36516c89914bbdf7f97c425d8615e1ae", "patch": "@@ -1,2 +1,3 @@\n-warning: thread support is experimental: weak memory effects are not fully compatible with the Rust atomics memory model.\n+warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n+         (see https://github.com/rust-lang/miri/issues/1388)\n "}]}