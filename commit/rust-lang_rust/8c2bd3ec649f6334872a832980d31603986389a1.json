{"sha": "8c2bd3ec649f6334872a832980d31603986389a1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhjMmJkM2VjNjQ5ZjYzMzQ4NzJhODMyOTgwZDMxNjAzOTg2Mzg5YTE=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-04-24T14:35:00Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-04-24T14:35:00Z"}, "message": "Rustup to rustc 1.36.0-nightly (e938c2b9a 2019-04-23)", "tree": {"sha": "e4e3dcf99abfb44ebff31f275cee4240d3fca1a5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e4e3dcf99abfb44ebff31f275cee4240d3fca1a5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8c2bd3ec649f6334872a832980d31603986389a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8c2bd3ec649f6334872a832980d31603986389a1", "html_url": "https://github.com/rust-lang/rust/commit/8c2bd3ec649f6334872a832980d31603986389a1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8c2bd3ec649f6334872a832980d31603986389a1/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "004dc33031f40e5d50c155e16e053553ac02cf49", "url": "https://api.github.com/repos/rust-lang/rust/commits/004dc33031f40e5d50c155e16e053553ac02cf49", "html_url": "https://github.com/rust-lang/rust/commit/004dc33031f40e5d50c155e16e053553ac02cf49"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "87056f679a6204531d54237db88267cea1367195", "filename": "src/constant.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8c2bd3ec649f6334872a832980d31603986389a1/src%2Fconstant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c2bd3ec649f6334872a832980d31603986389a1/src%2Fconstant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconstant.rs?ref=8c2bd3ec649f6334872a832980d31603986389a1", "patch": "@@ -190,7 +190,7 @@ fn data_id_for_static<'a, 'tcx: 'a, B: Backend>(\n     linkage: Linkage,\n ) -> DataId {\n     let symbol_name = tcx.symbol_name(Instance::mono(tcx, def_id)).as_str();\n-    let is_mutable = if let ::rustc::hir::Mutability::MutMutable = tcx.is_static(def_id).unwrap() {\n+    let is_mutable = if tcx.is_mutable_static(def_id) {\n         true\n     } else {\n         !tcx.type_of(def_id)"}]}