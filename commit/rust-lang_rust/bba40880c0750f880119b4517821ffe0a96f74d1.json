{"sha": "bba40880c0750f880119b4517821ffe0a96f74d1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJiYTQwODgwYzA3NTBmODgwMTE5YjQ1MTc4MjFmZmUwYTk2Zjc0ZDE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-03-25T10:29:58Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-03-25T10:29:58Z"}, "message": "Auto merge of #82565 - m-ou-se:ununstabilize-bits, r=kennytm\n\nRevert reverting of stabilizing integer::BITS.\n\nNow that `lexical-core` has an updated version that won't break with this stabilization, let's try to stabilize this again.\n\nSee https://github.com/rust-lang/rust/issues/81654#issuecomment-778564715\n\nTracking issue with FCP: https://github.com/rust-lang/rust/issues/76904", "tree": {"sha": "e047e237c9535766891e507996da7880fa97b51f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e047e237c9535766891e507996da7880fa97b51f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bba40880c0750f880119b4517821ffe0a96f74d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bba40880c0750f880119b4517821ffe0a96f74d1", "html_url": "https://github.com/rust-lang/rust/commit/bba40880c0750f880119b4517821ffe0a96f74d1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bba40880c0750f880119b4517821ffe0a96f74d1/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "372afcf93bf60e1a9334b107cc3d72f1b0a4b1f4", "url": "https://api.github.com/repos/rust-lang/rust/commits/372afcf93bf60e1a9334b107cc3d72f1b0a4b1f4", "html_url": "https://github.com/rust-lang/rust/commit/372afcf93bf60e1a9334b107cc3d72f1b0a4b1f4"}, {"sha": "bacd5226b786531cc8ee5c8eec8f55aa7696d4f8", "url": "https://api.github.com/repos/rust-lang/rust/commits/bacd5226b786531cc8ee5c8eec8f55aa7696d4f8", "html_url": "https://github.com/rust-lang/rust/commit/bacd5226b786531cc8ee5c8eec8f55aa7696d4f8"}], "stats": {"total": 13, "additions": 2, "deletions": 11}, "files": [{"sha": "123618a440de282c0b413b695f1019754c6364e9", "filename": "compiler/rustc_data_structures/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bba40880c0750f880119b4517821ffe0a96f74d1/compiler%2Frustc_data_structures%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bba40880c0750f880119b4517821ffe0a96f74d1/compiler%2Frustc_data_structures%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_data_structures%2Fsrc%2Flib.rs?ref=bba40880c0750f880119b4517821ffe0a96f74d1", "patch": "@@ -13,7 +13,6 @@\n #![feature(unboxed_closures)]\n #![feature(generator_trait)]\n #![feature(fn_traits)]\n-#![feature(int_bits_const)]\n #![feature(min_specialization)]\n #![feature(auto_traits)]\n #![feature(nll)]"}, {"sha": "cf5a9118275d9ed407a8fd2a5c2b88f1e01a938c", "filename": "compiler/rustc_serialize/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bba40880c0750f880119b4517821ffe0a96f74d1/compiler%2Frustc_serialize%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bba40880c0750f880119b4517821ffe0a96f74d1/compiler%2Frustc_serialize%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_serialize%2Fsrc%2Flib.rs?ref=bba40880c0750f880119b4517821ffe0a96f74d1", "patch": "@@ -16,7 +16,6 @@ Core encoding and decoding interfaces.\n #![feature(min_specialization)]\n #![feature(vec_spare_capacity)]\n #![feature(core_intrinsics)]\n-#![feature(int_bits_const)]\n #![feature(maybe_uninit_array_assume_init)]\n #![feature(maybe_uninit_uninit_array)]\n #![feature(maybe_uninit_slice)]"}, {"sha": "3e2aab5125ab7b5fd98e5daf67f399639aa3414e", "filename": "compiler/rustc_serialize/tests/leb128.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bba40880c0750f880119b4517821ffe0a96f74d1/compiler%2Frustc_serialize%2Ftests%2Fleb128.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bba40880c0750f880119b4517821ffe0a96f74d1/compiler%2Frustc_serialize%2Ftests%2Fleb128.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_serialize%2Ftests%2Fleb128.rs?ref=bba40880c0750f880119b4517821ffe0a96f74d1", "patch": "@@ -1,4 +1,3 @@\n-#![feature(int_bits_const)]\n #![feature(maybe_uninit_slice)]\n #![feature(maybe_uninit_uninit_array)]\n "}, {"sha": "40f2de8f70dd3585c10173809cce48afcd783dcd", "filename": "library/alloc/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bba40880c0750f880119b4517821ffe0a96f74d1/library%2Falloc%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bba40880c0750f880119b4517821ffe0a96f74d1/library%2Falloc%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Flib.rs?ref=bba40880c0750f880119b4517821ffe0a96f74d1", "patch": "@@ -103,7 +103,6 @@\n #![feature(fn_traits)]\n #![feature(fundamental)]\n #![feature(inplace_iteration)]\n-#![feature(int_bits_const)]\n // Technically, this is a bug in rustdoc: rustdoc sees the documentation on `#[lang = slice_alloc]`\n // blocks is for `&[T]`, which also has documentation using this feature in `core`, and gets mad\n // that the feature-gate isn't enabled. Ideally, it wouldn't check for the feature gate for docs"}, {"sha": "c75a6c1f61990bc9a78a3480577237b23d00fbe9", "filename": "library/alloc/tests/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bba40880c0750f880119b4517821ffe0a96f74d1/library%2Falloc%2Ftests%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bba40880c0750f880119b4517821ffe0a96f74d1/library%2Falloc%2Ftests%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Ftests%2Flib.rs?ref=bba40880c0750f880119b4517821ffe0a96f74d1", "patch": "@@ -16,7 +16,6 @@\n #![feature(binary_heap_retain)]\n #![feature(inplace_iteration)]\n #![feature(iter_map_while)]\n-#![feature(int_bits_const)]\n #![feature(vecdeque_binary_search)]\n #![feature(slice_group_by)]\n #![feature(slice_partition_dedup)]"}, {"sha": "9632e64f180b0743b3f6e93325ea8dd913e62a4f", "filename": "library/core/src/num/int_macros.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/bba40880c0750f880119b4517821ffe0a96f74d1/library%2Fcore%2Fsrc%2Fnum%2Fint_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bba40880c0750f880119b4517821ffe0a96f74d1/library%2Fcore%2Fsrc%2Fnum%2Fint_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Fint_macros.rs?ref=bba40880c0750f880119b4517821ffe0a96f74d1", "patch": "@@ -32,10 +32,9 @@ macro_rules! int_impl {\n         /// # Examples\n         ///\n         /// ```\n-        /// #![feature(int_bits_const)]\n         #[doc = concat!(\"assert_eq!(\", stringify!($SelfT), \"::BITS, \", stringify!($BITS), \");\")]\n         /// ```\n-        #[unstable(feature = \"int_bits_const\", issue = \"76904\")]\n+        #[stable(feature = \"int_bits_const\", since = \"1.53.0\")]\n         pub const BITS: u32 = $BITS;\n \n         /// Converts a string slice in a given base to an integer."}, {"sha": "62d539b96c301ef90c937b198dc1bedf4130e0c1", "filename": "library/core/src/num/uint_macros.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/bba40880c0750f880119b4517821ffe0a96f74d1/library%2Fcore%2Fsrc%2Fnum%2Fuint_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bba40880c0750f880119b4517821ffe0a96f74d1/library%2Fcore%2Fsrc%2Fnum%2Fuint_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Fuint_macros.rs?ref=bba40880c0750f880119b4517821ffe0a96f74d1", "patch": "@@ -32,10 +32,9 @@ macro_rules! uint_impl {\n         /// # Examples\n         ///\n         /// ```\n-        /// #![feature(int_bits_const)]\n         #[doc = concat!(\"assert_eq!(\", stringify!($SelfT), \"::BITS, \", stringify!($BITS), \");\")]\n         /// ```\n-        #[unstable(feature = \"int_bits_const\", issue = \"76904\")]\n+        #[stable(feature = \"int_bits_const\", since = \"1.53.0\")]\n         pub const BITS: u32 = $BITS;\n \n         /// Converts a string slice in a given base to an integer."}, {"sha": "997e618cc511f188f700f118fb5a20e88b7f2749", "filename": "library/core/tests/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bba40880c0750f880119b4517821ffe0a96f74d1/library%2Fcore%2Ftests%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bba40880c0750f880119b4517821ffe0a96f74d1/library%2Fcore%2Ftests%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Flib.rs?ref=bba40880c0750f880119b4517821ffe0a96f74d1", "patch": "@@ -71,7 +71,6 @@\n #![cfg_attr(not(bootstrap), feature(ptr_metadata))]\n #![feature(once_cell)]\n #![feature(unsized_tuple_coercion)]\n-#![feature(int_bits_const)]\n #![feature(nonzero_leading_trailing_zeros)]\n #![feature(const_option)]\n #![feature(integer_atomics)]"}, {"sha": "99a0c67fc11b90625918ef1d0a3dd5a32d493424", "filename": "library/panic_unwind/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bba40880c0750f880119b4517821ffe0a96f74d1/library%2Fpanic_unwind%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bba40880c0750f880119b4517821ffe0a96f74d1/library%2Fpanic_unwind%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fpanic_unwind%2Fsrc%2Flib.rs?ref=bba40880c0750f880119b4517821ffe0a96f74d1", "patch": "@@ -18,7 +18,6 @@\n     issue_tracker_base_url = \"https://github.com/rust-lang/rust/issues/\"\n )]\n #![feature(core_intrinsics)]\n-#![feature(int_bits_const)]\n #![feature(lang_items)]\n #![feature(nll)]\n #![feature(panic_unwind)]"}]}