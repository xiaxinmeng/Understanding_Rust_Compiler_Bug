{"sha": "1e759bef919e3600481839324ba02c637ec13ee1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFlNzU5YmVmOTE5ZTM2MDA0ODE4MzkzMjRiYTAyYzYzN2VjMTNlZTE=", "commit": {"author": {"name": "Michael Hall", "email": "michael@mbh.sh", "date": "2021-06-24T04:26:10Z"}, "committer": {"name": "Michael Hall", "email": "michael@mbh.sh", "date": "2021-06-24T04:26:10Z"}, "message": "make docs clearer about how hidden files are dealt with", "tree": {"sha": "7965ad719a09a9c9599f438ed64a5c73e813155a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7965ad719a09a9c9599f438ed64a5c73e813155a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1e759bef919e3600481839324ba02c637ec13ee1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1e759bef919e3600481839324ba02c637ec13ee1", "html_url": "https://github.com/rust-lang/rust/commit/1e759bef919e3600481839324ba02c637ec13ee1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1e759bef919e3600481839324ba02c637ec13ee1/comments", "author": {"login": "mbhall88", "id": 20403931, "node_id": "MDQ6VXNlcjIwNDAzOTMx", "avatar_url": "https://avatars.githubusercontent.com/u/20403931?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbhall88", "html_url": "https://github.com/mbhall88", "followers_url": "https://api.github.com/users/mbhall88/followers", "following_url": "https://api.github.com/users/mbhall88/following{/other_user}", "gists_url": "https://api.github.com/users/mbhall88/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbhall88/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbhall88/subscriptions", "organizations_url": "https://api.github.com/users/mbhall88/orgs", "repos_url": "https://api.github.com/users/mbhall88/repos", "events_url": "https://api.github.com/users/mbhall88/events{/privacy}", "received_events_url": "https://api.github.com/users/mbhall88/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mbhall88", "id": 20403931, "node_id": "MDQ6VXNlcjIwNDAzOTMx", "avatar_url": "https://avatars.githubusercontent.com/u/20403931?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbhall88", "html_url": "https://github.com/mbhall88", "followers_url": "https://api.github.com/users/mbhall88/followers", "following_url": "https://api.github.com/users/mbhall88/following{/other_user}", "gists_url": "https://api.github.com/users/mbhall88/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbhall88/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbhall88/subscriptions", "organizations_url": "https://api.github.com/users/mbhall88/orgs", "repos_url": "https://api.github.com/users/mbhall88/repos", "events_url": "https://api.github.com/users/mbhall88/events{/privacy}", "received_events_url": "https://api.github.com/users/mbhall88/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fcb1ebf1945c616365c74e95666dcdcfdc8bbd70", "url": "https://api.github.com/repos/rust-lang/rust/commits/fcb1ebf1945c616365c74e95666dcdcfdc8bbd70", "html_url": "https://github.com/rust-lang/rust/commit/fcb1ebf1945c616365c74e95666dcdcfdc8bbd70"}], "stats": {"total": 24, "additions": 19, "deletions": 5}, "files": [{"sha": "9ab2f045d697ee8fcd94566da2fd7084107b9dc4", "filename": "library/std/src/path.rs", "status": "modified", "additions": 19, "deletions": 5, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/1e759bef919e3600481839324ba02c637ec13ee1/library%2Fstd%2Fsrc%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e759bef919e3600481839324ba02c637ec13ee1/library%2Fstd%2Fsrc%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fpath.rs?ref=1e759bef919e3600481839324ba02c637ec13ee1", "patch": "@@ -2175,22 +2175,29 @@ impl Path {\n     /// assert_eq!(\"foo\", Path::new(\"foo.rs\").file_stem().unwrap());\n     /// assert_eq!(\"foo.tar\", Path::new(\"foo.tar.gz\").file_stem().unwrap());\n     /// ```\n+    ///\n+    /// # See Also\n+    /// This method is similar to [`Path::file_prefix`], which extracts the portion of the file name\n+    /// before the *first* `.`\n+    ///\n+    /// [`Path::file_prefix`]: Path::file_prefix\n+    ///\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn file_stem(&self) -> Option<&OsStr> {\n         self.file_name().map(rsplit_file_at_dot).and_then(|(before, after)| before.or(after))\n     }\n \n-    /// Extracts the prefix (non-extension(s)) portion of [`self.file_name`]. This is a \"left\"\n-    /// variant of `file_stem` - meaning it takes the portion of the file name before the *first* `.`\n-    ///\n-    /// [`self.file_name`]: Path::file_name\n+    /// Extracts the prefix of [`self.file_name`].\n     ///\n     /// The prefix is:\n     ///\n     /// * [`None`], if there is no file name;\n     /// * The entire file name if there is no embedded `.`;\n+    /// * The portion of the file name before the first non-beginning `.`;\n     /// * The entire file name if the file name begins with `.` and has no other `.`s within;\n-    /// * Otherwise, the portion of the file name before the first `.`\n+    /// * The portion of the file name before the second `.` if the file name begins with `.`\n+    ///\n+    /// [`self.file_name`]: Path::file_name\n     ///\n     /// # Examples\n     ///\n@@ -2201,6 +2208,13 @@ impl Path {\n     /// assert_eq!(\"foo\", Path::new(\"foo.rs\").file_prefix().unwrap());\n     /// assert_eq!(\"foo\", Path::new(\"foo.tar.gz\").file_prefix().unwrap());\n     /// ```\n+    ///\n+    /// # See Also\n+    /// This method is similar to [`Path::file_stem`], which extracts the portion of the file name\n+    /// before the *last* `.`\n+    ///\n+    /// [`Path::file_stem`]: Path::file_stem\n+    ///\n     #[unstable(feature = \"path_file_prefix\", issue = \"86319\")]\n     pub fn file_prefix(&self) -> Option<&OsStr> {\n         self.file_name()"}]}