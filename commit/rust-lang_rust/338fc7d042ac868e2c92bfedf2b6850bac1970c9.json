{"sha": "338fc7d042ac868e2c92bfedf2b6850bac1970c9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMzOGZjN2QwNDJhYzg2OGUyYzkyYmZlZGYyYjY4NTBiYWMxOTcwYzk=", "commit": {"author": {"name": "newpavlov", "email": "newpavlov@gmail.com", "date": "2019-08-19T12:32:37Z"}, "committer": {"name": "newpavlov", "email": "newpavlov@gmail.com", "date": "2019-08-19T12:32:37Z"}, "message": "use non-zero clock id", "tree": {"sha": "f1566e803cb1638d891c833416974dad7e574b61", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f1566e803cb1638d891c833416974dad7e574b61"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/338fc7d042ac868e2c92bfedf2b6850bac1970c9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/338fc7d042ac868e2c92bfedf2b6850bac1970c9", "html_url": "https://github.com/rust-lang/rust/commit/338fc7d042ac868e2c92bfedf2b6850bac1970c9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/338fc7d042ac868e2c92bfedf2b6850bac1970c9/comments", "author": {"login": "newpavlov", "id": 329626, "node_id": "MDQ6VXNlcjMyOTYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/329626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/newpavlov", "html_url": "https://github.com/newpavlov", "followers_url": "https://api.github.com/users/newpavlov/followers", "following_url": "https://api.github.com/users/newpavlov/following{/other_user}", "gists_url": "https://api.github.com/users/newpavlov/gists{/gist_id}", "starred_url": "https://api.github.com/users/newpavlov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/newpavlov/subscriptions", "organizations_url": "https://api.github.com/users/newpavlov/orgs", "repos_url": "https://api.github.com/users/newpavlov/repos", "events_url": "https://api.github.com/users/newpavlov/events{/privacy}", "received_events_url": "https://api.github.com/users/newpavlov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "newpavlov", "id": 329626, "node_id": "MDQ6VXNlcjMyOTYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/329626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/newpavlov", "html_url": "https://github.com/newpavlov", "followers_url": "https://api.github.com/users/newpavlov/followers", "following_url": "https://api.github.com/users/newpavlov/following{/other_user}", "gists_url": "https://api.github.com/users/newpavlov/gists{/gist_id}", "starred_url": "https://api.github.com/users/newpavlov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/newpavlov/subscriptions", "organizations_url": "https://api.github.com/users/newpavlov/orgs", "repos_url": "https://api.github.com/users/newpavlov/repos", "events_url": "https://api.github.com/users/newpavlov/events{/privacy}", "received_events_url": "https://api.github.com/users/newpavlov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8394dbba7a46cd480b0934331b2654663d487e7b", "url": "https://api.github.com/repos/rust-lang/rust/commits/8394dbba7a46cd480b0934331b2654663d487e7b", "html_url": "https://github.com/rust-lang/rust/commit/8394dbba7a46cd480b0934331b2654663d487e7b"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "7a2246de86c4f01900101367af227f4e523d995d", "filename": "src/libstd/sys/wasi/thread.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/338fc7d042ac868e2c92bfedf2b6850bac1970c9/src%2Flibstd%2Fsys%2Fwasi%2Fthread.rs", "raw_url": "https://github.com/rust-lang/rust/raw/338fc7d042ac868e2c92bfedf2b6850bac1970c9/src%2Flibstd%2Fsys%2Fwasi%2Fthread.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwasi%2Fthread.rs?ref=338fc7d042ac868e2c92bfedf2b6850bac1970c9", "patch": "@@ -31,7 +31,7 @@ impl Thread {\n         assert!(nanos <= u64::max_value() as u128);\n \n         let clock = wasi::raw::__wasi_subscription_u_clock_t {\n-            identifier: 0,\n+            identifier: 0x0123_45678,\n             clock_id: wasi::CLOCK_MONOTONIC,\n             timeout: nanos as u64,\n             precision: 0,\n@@ -47,7 +47,7 @@ impl Thread {\n         let n = wasi::poll_oneoff(&in_, &mut out).unwrap();\n         let wasi::Event { userdata, error, type_, .. } = out[0];\n         match (n, userdata, error) {\n-            (1, 0, 0) if type_ == wasi::EVENTTYPE_CLOCK => {}\n+            (1, 0x0123_45678, 0) if type_ == wasi::EVENTTYPE_CLOCK => {}\n             _ => panic!(\"thread::sleep(): unexpected result of poll_oneof\"),\n         }\n     }"}]}