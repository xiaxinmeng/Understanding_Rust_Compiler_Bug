{"sha": "24d410abd6924c175ee776ed84be851b615a555b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI0ZDQxMGFiZDY5MjRjMTc1ZWU3NzZlZDg0YmU4NTFiNjE1YTU1NWI=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2018-04-05T01:16:44Z"}, "committer": {"name": "James Sanderson", "email": "zofrex@gmail.com", "date": "2018-04-17T09:39:04Z"}, "message": "Don't run unused variable pass for stuff generated by #[derive()]", "tree": {"sha": "2927a9a8b042bf6c3b395d62488a3fb51598a251", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2927a9a8b042bf6c3b395d62488a3fb51598a251"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/24d410abd6924c175ee776ed84be851b615a555b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/24d410abd6924c175ee776ed84be851b615a555b", "html_url": "https://github.com/rust-lang/rust/commit/24d410abd6924c175ee776ed84be851b615a555b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/24d410abd6924c175ee776ed84be851b615a555b/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "zofrex", "id": 22220, "node_id": "MDQ6VXNlcjIyMjIw", "avatar_url": "https://avatars.githubusercontent.com/u/22220?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zofrex", "html_url": "https://github.com/zofrex", "followers_url": "https://api.github.com/users/zofrex/followers", "following_url": "https://api.github.com/users/zofrex/following{/other_user}", "gists_url": "https://api.github.com/users/zofrex/gists{/gist_id}", "starred_url": "https://api.github.com/users/zofrex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zofrex/subscriptions", "organizations_url": "https://api.github.com/users/zofrex/orgs", "repos_url": "https://api.github.com/users/zofrex/repos", "events_url": "https://api.github.com/users/zofrex/events{/privacy}", "received_events_url": "https://api.github.com/users/zofrex/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4ae9488ce8fc89d1ddaa70ac148b8d66c311e517", "url": "https://api.github.com/repos/rust-lang/rust/commits/4ae9488ce8fc89d1ddaa70ac148b8d66c311e517", "html_url": "https://github.com/rust-lang/rust/commit/4ae9488ce8fc89d1ddaa70ac148b8d66c311e517"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "17c114bc3b3c0f3beff9483681aa136d30f6b221", "filename": "src/librustc/middle/liveness.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/24d410abd6924c175ee776ed84be851b615a555b/src%2Flibrustc%2Fmiddle%2Fliveness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24d410abd6924c175ee776ed84be851b615a555b/src%2Flibrustc%2Fmiddle%2Fliveness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fliveness.rs?ref=24d410abd6924c175ee776ed84be851b615a555b", "patch": "@@ -184,6 +184,7 @@ impl<'a, 'tcx> Visitor<'tcx> for IrMaps<'a, 'tcx> {\n                 b: hir::BodyId, s: Span, id: NodeId) {\n         visit_fn(self, fk, fd, b, s, id);\n     }\n+\n     fn visit_local(&mut self, l: &'tcx hir::Local) { visit_local(self, l); }\n     fn visit_expr(&mut self, ex: &'tcx Expr) { visit_expr(self, ex); }\n     fn visit_arm(&mut self, a: &'tcx hir::Arm) { visit_arm(self, a); }\n@@ -361,6 +362,16 @@ fn visit_fn<'a, 'tcx: 'a>(ir: &mut IrMaps<'a, 'tcx>,\n     // swap in a new set of IR maps for this function body:\n     let mut fn_maps = IrMaps::new(ir.tcx);\n \n+    // Don't run unused pass for #[derive()]\n+    if let FnKind::Method(..) = fk {\n+        let parent = ir.tcx.hir.get_parent(id);\n+        if let Some(hir::map::Node::NodeItem(i)) = ir.tcx.hir.find(parent) {\n+            if i.attrs.iter().any(|a| a.check_name(\"automatically_derived\")) {\n+                return;\n+            }\n+        }\n+    }\n+\n     debug!(\"creating fn_maps: {:?}\", &fn_maps as *const IrMaps);\n \n     let body = ir.tcx.hir.body(body_id);"}]}