{"sha": "a818173e6339a394bcac8236a66cee49a876bb4b", "node_id": "C_kwDOAAsO6NoAKGE4MTgxNzNlNjMzOWEzOTRiY2FjODIzNmE2NmNlZTQ5YTg3NmJiNGI", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2022-04-26T11:22:29Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-04-26T11:22:29Z"}, "message": "Rollup merge of #96386 - SparrowLii:des_field, r=jackh726\n\nsimplify `describe_field` func in borrowck's diagnostics part\n\nThis PR simplify the `describe_field` func in borrowck's diagnostics part, besides fix the FIXME in it.", "tree": {"sha": "5cdd7dbeace9dbcd1f741d991f8608ed79a2dde1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5cdd7dbeace9dbcd1f741d991f8608ed79a2dde1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a818173e6339a394bcac8236a66cee49a876bb4b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiZ9X2CRBK7hj4Ov3rIwAA3fQIADYG94r7j37OjVzdQ9BzJl4F\nit6ecpk7wKB4FZ4+oHB00dqM859GgD+ZGSvDvPZIYxX4r87+hnqp71f+rdTxJ0Wc\nxJLnScqpQLPE72R78z5Cu03CObC5lCOSp9pPsvN0W+3UYVCEnVue4HxJE1/EA5KL\nyN3+hK75rUgTKc49ZVhsZE6oFsy5g9M8NJ+UQ9dsaPd8qVrzeKE/Gil2fn6P5uMb\nj0Jjh/Ru9Aw3lOO5U73GFKKZmHaq9PSRddkkPViHXHGBMXUtpQXa3bAuB1Mwy6+Q\nQWY06zuLnTlnVhuYXMoXa4VRoYuM9nY7vKEMI8s+zfqax/j7/ELeD6t2K/WKL4U=\n=KovE\n-----END PGP SIGNATURE-----\n", "payload": "tree 5cdd7dbeace9dbcd1f741d991f8608ed79a2dde1\nparent bb6265a73912db95a71b024820ddb93e34382115\nparent 74853eedfe811c5942a4744974e3738bc8fd87f5\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1650972149 +0200\ncommitter GitHub <noreply@github.com> 1650972149 +0200\n\nRollup merge of #96386 - SparrowLii:des_field, r=jackh726\n\nsimplify `describe_field` func in borrowck's diagnostics part\n\nThis PR simplify the `describe_field` func in borrowck's diagnostics part, besides fix the FIXME in it.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a818173e6339a394bcac8236a66cee49a876bb4b", "html_url": "https://github.com/rust-lang/rust/commit/a818173e6339a394bcac8236a66cee49a876bb4b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a818173e6339a394bcac8236a66cee49a876bb4b/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bb6265a73912db95a71b024820ddb93e34382115", "url": "https://api.github.com/repos/rust-lang/rust/commits/bb6265a73912db95a71b024820ddb93e34382115", "html_url": "https://github.com/rust-lang/rust/commit/bb6265a73912db95a71b024820ddb93e34382115"}, {"sha": "74853eedfe811c5942a4744974e3738bc8fd87f5", "url": "https://api.github.com/repos/rust-lang/rust/commits/74853eedfe811c5942a4744974e3738bc8fd87f5", "html_url": "https://github.com/rust-lang/rust/commit/74853eedfe811c5942a4744974e3738bc8fd87f5"}], "stats": {"total": 29, "additions": 10, "deletions": 19}, "files": [{"sha": "b81360fd6aab401b8bc2c0c597b5235bb9c451ad", "filename": "compiler/rustc_borrowck/src/diagnostics/mod.rs", "status": "modified", "additions": 10, "deletions": 19, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/a818173e6339a394bcac8236a66cee49a876bb4b/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a818173e6339a394bcac8236a66cee49a876bb4b/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fmod.rs?ref=a818173e6339a394bcac8236a66cee49a876bb4b", "patch": "@@ -40,6 +40,7 @@ crate use outlives_suggestion::OutlivesSuggestionBuilder;\n crate use region_errors::{ErrorConstraintInfo, RegionErrorKind, RegionErrors};\n crate use region_name::{RegionName, RegionNameSource};\n crate use rustc_const_eval::util::CallKind;\n+use rustc_middle::mir::tcx::PlaceTy;\n \n pub(super) struct IncludingDowncast(pub(super) bool);\n \n@@ -329,30 +330,20 @@ impl<'cx, 'tcx> MirBorrowckCtxt<'cx, 'tcx> {\n \n     /// End-user visible description of the `field`nth field of `base`\n     fn describe_field(&self, place: PlaceRef<'tcx>, field: Field) -> String {\n-        // FIXME Place2 Make this work iteratively\n-        match place {\n-            PlaceRef { local, projection: [] } => {\n-                let local = &self.body.local_decls[local];\n-                self.describe_field_from_ty(local.ty, field, None)\n-            }\n+        let place_ty = match place {\n+            PlaceRef { local, projection: [] } => PlaceTy::from_ty(self.body.local_decls[local].ty),\n             PlaceRef { local, projection: [proj_base @ .., elem] } => match elem {\n-                ProjectionElem::Deref => {\n-                    self.describe_field(PlaceRef { local, projection: proj_base }, field)\n-                }\n-                ProjectionElem::Downcast(_, variant_index) => {\n-                    let base_ty = place.ty(self.body, self.infcx.tcx).ty;\n-                    self.describe_field_from_ty(base_ty, field, Some(*variant_index))\n-                }\n-                ProjectionElem::Field(_, field_type) => {\n-                    self.describe_field_from_ty(*field_type, field, None)\n-                }\n-                ProjectionElem::Index(..)\n+                ProjectionElem::Deref\n+                | ProjectionElem::Index(..)\n                 | ProjectionElem::ConstantIndex { .. }\n                 | ProjectionElem::Subslice { .. } => {\n-                    self.describe_field(PlaceRef { local, projection: proj_base }, field)\n+                    PlaceRef { local, projection: proj_base }.ty(self.body, self.infcx.tcx)\n                 }\n+                ProjectionElem::Downcast(..) => place.ty(self.body, self.infcx.tcx),\n+                ProjectionElem::Field(_, field_type) => PlaceTy::from_ty(*field_type),\n             },\n-        }\n+        };\n+        self.describe_field_from_ty(place_ty.ty, field, place_ty.variant_index)\n     }\n \n     /// End-user visible description of the `field_index`nth field of `ty`"}]}