{"sha": "58d676b0cc73217703210913fdb266faa39687a0", "node_id": "C_kwDOAAsO6NoAKDU4ZDY3NmIwY2M3MzIxNzcwMzIxMDkxM2ZkYjI2NmZhYTM5Njg3YTA", "commit": {"author": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2022-01-23T22:05:48Z"}, "committer": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2022-01-23T22:05:48Z"}, "message": "Remove deduplication of early lints\n\nWe already have a general mechanism for deduplicating reported\nlints, so there's no need to have an additional one for early lints\nspecifically. This allows us to remove some `PartialEq` impls.", "tree": {"sha": "285f7119f8c297cdf9213a2ac6515495c2906d6a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/285f7119f8c297cdf9213a2ac6515495c2906d6a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/58d676b0cc73217703210913fdb266faa39687a0", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7J9Gc3TfBwj2K399tAh+UQ6YsWQFAmHt0WEACgkQtAh+UQ6Y\nsWTXKg/+P1tJHhk3PQRRK1/oQ4PtyTkO/n9g55rOznU7AO9DT7xJ8ZXU5f+31XZZ\nDF8GElkHH57DnmCtDtUkTdC3m50ClsMJRhowi+YIUChjRu3yyZv1MJqdCB+YJmLX\nGGuwDO+Ms4EqKVZOnV4DL+o4Ly0HdzEg0EnLCfneNxzYLQ8MGvmISfVz6HGT+/FT\nXo44zxEToCFS0wSQGlGnena3epBbRagen5LXzLG06VsevH55Xc60aLC3v4uqGpOK\nIJSEIsjvr9ARgBQxhVZPIJY/fuxxikbnIq/VhFpN+ONCVUEY+McfupRvVfRuty5n\nmtO5uLuJGh0OeYLcykzZjIN1k/QKL52QMKkMpSF1tAGyFdy6GC9TWdgKWNw3Id2b\nt2Dz6n2sZkkJwlplSUUybjT79WcVdA8Xi1aafD+w6xP/PpCTf9o4OR7yka7vFdlN\n5MF+tfdb+0TnT+TFH2w457aP58TRg+ITIcEXIQFILGTquwy+ZezPi0/5rztdgdlM\nrXzojZQpYZ74UmgEnqpNIlTukY2CDB8seFLc7KT6jIq8BmZglwvDFtn9I4LCAWqE\ni8tx+48fzkqPjf0GvmYxlnEhuN5+aoBQRw6an/QSRM8xudzR6sgtUWdL2AYuImm2\nncXuJAo3rUmzBvKsWm5JzRzaZ36VDbeMuzdcs5o6C/Kc6E2iMGs=\n=v5yT\n-----END PGP SIGNATURE-----", "payload": "tree 285f7119f8c297cdf9213a2ac6515495c2906d6a\nparent bfe15646761a75f0259e204cab071565eed2b1e5\nauthor Aaron Hill <aa1ronham@gmail.com> 1642975548 -0500\ncommitter Aaron Hill <aa1ronham@gmail.com> 1642975548 -0500\n\nRemove deduplication of early lints\n\nWe already have a general mechanism for deduplicating reported\nlints, so there's no need to have an additional one for early lints\nspecifically. This allows us to remove some `PartialEq` impls.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/58d676b0cc73217703210913fdb266faa39687a0", "html_url": "https://github.com/rust-lang/rust/commit/58d676b0cc73217703210913fdb266faa39687a0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/58d676b0cc73217703210913fdb266faa39687a0/comments", "author": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bfe15646761a75f0259e204cab071565eed2b1e5", "url": "https://api.github.com/repos/rust-lang/rust/commits/bfe15646761a75f0259e204cab071565eed2b1e5", "html_url": "https://github.com/rust-lang/rust/commit/bfe15646761a75f0259e204cab071565eed2b1e5"}], "stats": {"total": 408, "additions": 382, "deletions": 26}, "files": [{"sha": "3b5d636124d4cfe102834020388f0e3dacf55706", "filename": "compiler/rustc_lint_defs/src/lib.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/58d676b0cc73217703210913fdb266faa39687a0/compiler%2Frustc_lint_defs%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58d676b0cc73217703210913fdb266faa39687a0/compiler%2Frustc_lint_defs%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint_defs%2Fsrc%2Flib.rs?ref=58d676b0cc73217703210913fdb266faa39687a0", "patch": "@@ -282,7 +282,7 @@ pub enum ExternDepSpec {\n \n // This could be a closure, but then implementing derive trait\n // becomes hacky (and it gets allocated).\n-#[derive(PartialEq, Debug)]\n+#[derive(Debug)]\n pub enum BuiltinLintDiagnostics {\n     Normal,\n     AbsPathWithModule(Span),\n@@ -309,7 +309,6 @@ pub enum BuiltinLintDiagnostics {\n \n /// Lints that are buffered up early on in the `Session` before the\n /// `LintLevels` is calculated.\n-#[derive(PartialEq)]\n pub struct BufferedEarlyLint {\n     /// The span of code that we are linting on.\n     pub span: MultiSpan,\n@@ -336,9 +335,7 @@ pub struct LintBuffer {\n impl LintBuffer {\n     pub fn add_early_lint(&mut self, early_lint: BufferedEarlyLint) {\n         let arr = self.map.entry(early_lint.node_id).or_default();\n-        if !arr.contains(&early_lint) {\n-            arr.push(early_lint);\n-        }\n+        arr.push(early_lint);\n     }\n \n     pub fn add_lint("}, {"sha": "6cb2ff9d8136be4834fad727fb8323b85a962fd0", "filename": "src/test/ui/cfg/future-compat-crate-attributes-using-cfg_attr.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/58d676b0cc73217703210913fdb266faa39687a0/src%2Ftest%2Fui%2Fcfg%2Ffuture-compat-crate-attributes-using-cfg_attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58d676b0cc73217703210913fdb266faa39687a0/src%2Ftest%2Fui%2Fcfg%2Ffuture-compat-crate-attributes-using-cfg_attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcfg%2Ffuture-compat-crate-attributes-using-cfg_attr.rs?ref=58d676b0cc73217703210913fdb266faa39687a0", "patch": "@@ -5,8 +5,12 @@\n #![cfg_attr(foo, crate_type=\"bin\")]\n //~^ERROR `crate_type` within\n //~| WARN this was previously accepted\n+//~|ERROR `crate_type` within\n+//~| WARN this was previously accepted\n #![cfg_attr(foo, crate_name=\"bar\")]\n //~^ERROR `crate_name` within\n //~| WARN this was previously accepted\n+//~|ERROR `crate_name` within\n+//~| WARN this was previously accepted\n \n fn main() {}"}, {"sha": "5609f8e9d9f3610d26499267a4db99e87571205c", "filename": "src/test/ui/cfg/future-compat-crate-attributes-using-cfg_attr.stderr", "status": "modified", "additions": 20, "deletions": 2, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/58d676b0cc73217703210913fdb266faa39687a0/src%2Ftest%2Fui%2Fcfg%2Ffuture-compat-crate-attributes-using-cfg_attr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/58d676b0cc73217703210913fdb266faa39687a0/src%2Ftest%2Fui%2Fcfg%2Ffuture-compat-crate-attributes-using-cfg_attr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcfg%2Ffuture-compat-crate-attributes-using-cfg_attr.stderr?ref=58d676b0cc73217703210913fdb266faa39687a0", "patch": "@@ -14,13 +14,31 @@ LL | #![deny(warnings)]\n    = note: for more information, see issue #91632 <https://github.com/rust-lang/rust/issues/91632>\n \n error: `crate_name` within an `#![cfg_attr] attribute is deprecated`\n-  --> $DIR/future-compat-crate-attributes-using-cfg_attr.rs:8:18\n+  --> $DIR/future-compat-crate-attributes-using-cfg_attr.rs:10:18\n    |\n LL | #![cfg_attr(foo, crate_name=\"bar\")]\n    |                  ^^^^^^^^^^^^^^^^\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n    = note: for more information, see issue #91632 <https://github.com/rust-lang/rust/issues/91632>\n \n-error: aborting due to 2 previous errors\n+error: `crate_type` within an `#![cfg_attr] attribute is deprecated`\n+  --> $DIR/future-compat-crate-attributes-using-cfg_attr.rs:5:18\n+   |\n+LL | #![cfg_attr(foo, crate_type=\"bin\")]\n+   |                  ^^^^^^^^^^^^^^^^\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #91632 <https://github.com/rust-lang/rust/issues/91632>\n+\n+error: `crate_name` within an `#![cfg_attr] attribute is deprecated`\n+  --> $DIR/future-compat-crate-attributes-using-cfg_attr.rs:10:18\n+   |\n+LL | #![cfg_attr(foo, crate_name=\"bar\")]\n+   |                  ^^^^^^^^^^^^^^^^\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #91632 <https://github.com/rust-lang/rust/issues/91632>\n+\n+error: aborting due to 4 previous errors\n "}, {"sha": "0c1c51c01a8847ddb05150051ce405afccd2e8a1", "filename": "src/test/ui/proc-macro/issue-73933-procedural-masquerade.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/58d676b0cc73217703210913fdb266faa39687a0/src%2Ftest%2Fui%2Fproc-macro%2Fissue-73933-procedural-masquerade.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58d676b0cc73217703210913fdb266faa39687a0/src%2Ftest%2Fui%2Fproc-macro%2Fissue-73933-procedural-masquerade.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fissue-73933-procedural-masquerade.rs?ref=58d676b0cc73217703210913fdb266faa39687a0", "patch": "@@ -4,7 +4,14 @@\n extern crate test_macros;\n \n #[derive(Print)]\n-enum ProceduralMasqueradeDummyType { //~ ERROR using\n+enum ProceduralMasqueradeDummyType {\n+//~^ ERROR using\n+//~| WARN this was previously\n+//~| ERROR using\n+//~| WARN this was previously\n+//~| ERROR using\n+//~| WARN this was previously\n+//~| ERROR using\n //~| WARN this was previously\n     Input\n }"}, {"sha": "554613be65a082b09e77f877dd1e24371418244f", "filename": "src/test/ui/proc-macro/issue-73933-procedural-masquerade.stderr", "status": "modified", "additions": 64, "deletions": 1, "changes": 65, "blob_url": "https://github.com/rust-lang/rust/blob/58d676b0cc73217703210913fdb266faa39687a0/src%2Ftest%2Fui%2Fproc-macro%2Fissue-73933-procedural-masquerade.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/58d676b0cc73217703210913fdb266faa39687a0/src%2Ftest%2Fui%2Fproc-macro%2Fissue-73933-procedural-masquerade.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fissue-73933-procedural-masquerade.stderr?ref=58d676b0cc73217703210913fdb266faa39687a0", "patch": "@@ -9,7 +9,37 @@ LL | enum ProceduralMasqueradeDummyType {\n    = note: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\n    = note: The `procedural-masquerade` crate has been unnecessary since Rust 1.30.0. Versions of this crate below 0.1.7 will eventually stop compiling.\n \n-error: aborting due to previous error\n+error: using `procedural-masquerade` crate\n+  --> $DIR/issue-73933-procedural-masquerade.rs:7:6\n+   |\n+LL | enum ProceduralMasqueradeDummyType {\n+   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\n+   = note: The `procedural-masquerade` crate has been unnecessary since Rust 1.30.0. Versions of this crate below 0.1.7 will eventually stop compiling.\n+\n+error: using `procedural-masquerade` crate\n+  --> $DIR/issue-73933-procedural-masquerade.rs:7:6\n+   |\n+LL | enum ProceduralMasqueradeDummyType {\n+   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\n+   = note: The `procedural-masquerade` crate has been unnecessary since Rust 1.30.0. Versions of this crate below 0.1.7 will eventually stop compiling.\n+\n+error: using `procedural-masquerade` crate\n+  --> $DIR/issue-73933-procedural-masquerade.rs:7:6\n+   |\n+LL | enum ProceduralMasqueradeDummyType {\n+   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\n+   = note: The `procedural-masquerade` crate has been unnecessary since Rust 1.30.0. Versions of this crate below 0.1.7 will eventually stop compiling.\n+\n+error: aborting due to 4 previous errors\n \n Future incompatibility report: Future breakage diagnostic:\n error: using `procedural-masquerade` crate\n@@ -23,3 +53,36 @@ LL | enum ProceduralMasqueradeDummyType {\n    = note: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\n    = note: The `procedural-masquerade` crate has been unnecessary since Rust 1.30.0. Versions of this crate below 0.1.7 will eventually stop compiling.\n \n+Future breakage diagnostic:\n+error: using `procedural-masquerade` crate\n+  --> $DIR/issue-73933-procedural-masquerade.rs:7:6\n+   |\n+LL | enum ProceduralMasqueradeDummyType {\n+   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\n+   = note: The `procedural-masquerade` crate has been unnecessary since Rust 1.30.0. Versions of this crate below 0.1.7 will eventually stop compiling.\n+\n+Future breakage diagnostic:\n+error: using `procedural-masquerade` crate\n+  --> $DIR/issue-73933-procedural-masquerade.rs:7:6\n+   |\n+LL | enum ProceduralMasqueradeDummyType {\n+   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\n+   = note: The `procedural-masquerade` crate has been unnecessary since Rust 1.30.0. Versions of this crate below 0.1.7 will eventually stop compiling.\n+\n+Future breakage diagnostic:\n+error: using `procedural-masquerade` crate\n+  --> $DIR/issue-73933-procedural-masquerade.rs:7:6\n+   |\n+LL | enum ProceduralMasqueradeDummyType {\n+   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\n+   = note: The `procedural-masquerade` crate has been unnecessary since Rust 1.30.0. Versions of this crate below 0.1.7 will eventually stop compiling.\n+"}, {"sha": "50334589d0bba16b7e76b7ad7cbeec24e7befb92", "filename": "src/test/ui/proc-macro/issue-73933-procedural-masquerade.stdout", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/58d676b0cc73217703210913fdb266faa39687a0/src%2Ftest%2Fui%2Fproc-macro%2Fissue-73933-procedural-masquerade.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/58d676b0cc73217703210913fdb266faa39687a0/src%2Ftest%2Fui%2Fproc-macro%2Fissue-73933-procedural-masquerade.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fissue-73933-procedural-masquerade.stdout?ref=58d676b0cc73217703210913fdb266faa39687a0", "patch": "@@ -14,9 +14,9 @@ PRINT-DERIVE INPUT (DEBUG): TokenStream [\n         stream: TokenStream [\n             Ident {\n                 ident: \"Input\",\n-                span: #0 bytes(173..178),\n+                span: #0 bytes(315..320),\n             },\n         ],\n-        span: #0 bytes(121..180),\n+        span: #0 bytes(121..322),\n     },\n ]"}, {"sha": "69d72b55cdf01a03217db9179a18c7f7a89da3b5", "filename": "src/test/ui/proc-macro/issue-75930-derive-cfg.stderr", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/58d676b0cc73217703210913fdb266faa39687a0/src%2Ftest%2Fui%2Fproc-macro%2Fissue-75930-derive-cfg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/58d676b0cc73217703210913fdb266faa39687a0/src%2Ftest%2Fui%2Fproc-macro%2Fissue-75930-derive-cfg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fissue-75930-derive-cfg.stderr?ref=58d676b0cc73217703210913fdb266faa39687a0", "patch": "@@ -11,5 +11,17 @@ LL | #[derive(Print)]\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n    = note: for more information, see issue #79202 <https://github.com/rust-lang/rust/issues/79202>\n \n-warning: 1 warning emitted\n+warning: derive helper attribute is used before it is introduced\n+  --> $DIR/issue-75930-derive-cfg.rs:19:3\n+   |\n+LL | #[print_helper(a)]\n+   |   ^^^^^^^^^^^^\n+...\n+LL | #[derive(Print)]\n+   |          ----- the attribute is introduced here\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #79202 <https://github.com/rust-lang/rust/issues/79202>\n+\n+warning: 2 warnings emitted\n "}, {"sha": "acb0aa420abcec559a167ec56dd5318119cdd09d", "filename": "src/test/ui/rust-2018/edition-lint-nested-empty-paths.fixed", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/58d676b0cc73217703210913fdb266faa39687a0/src%2Ftest%2Fui%2Frust-2018%2Fedition-lint-nested-empty-paths.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/58d676b0cc73217703210913fdb266faa39687a0/src%2Ftest%2Fui%2Frust-2018%2Fedition-lint-nested-empty-paths.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Fedition-lint-nested-empty-paths.fixed?ref=58d676b0cc73217703210913fdb266faa39687a0", "patch": "@@ -17,14 +17,28 @@ crate mod foo {\n use crate::foo::{bar::{baz::{}}};\n //~^ ERROR absolute paths must start with\n //~| WARN this is accepted in the current edition\n+//~| ERROR absolute paths must start with\n+//~| WARN this is accepted in the current edition\n \n use crate::foo::{bar::{XX, baz::{}}};\n //~^ ERROR absolute paths must start with\n //~| WARN this is accepted in the current edition\n+//~| ERROR absolute paths must start with\n+//~| WARN this is accepted in the current edition\n+//~| ERROR absolute paths must start with\n+//~| WARN this is accepted in the current edition\n+//~| ERROR absolute paths must start with\n+//~| WARN this is accepted in the current edition\n \n use crate::foo::{bar::{baz::{}, baz1::{}}};\n //~^ ERROR absolute paths must start with\n //~| WARN this is accepted in the current edition\n+//~| ERROR absolute paths must start with\n+//~| WARN this is accepted in the current edition\n+//~| ERROR absolute paths must start with\n+//~| WARN this is accepted in the current edition\n+//~| ERROR absolute paths must start with\n+//~| WARN this is accepted in the current edition\n \n fn main() {\n }"}, {"sha": "4825528e97fa3279d5e396ed446c47ee7058146c", "filename": "src/test/ui/rust-2018/edition-lint-nested-empty-paths.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/58d676b0cc73217703210913fdb266faa39687a0/src%2Ftest%2Fui%2Frust-2018%2Fedition-lint-nested-empty-paths.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58d676b0cc73217703210913fdb266faa39687a0/src%2Ftest%2Fui%2Frust-2018%2Fedition-lint-nested-empty-paths.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Fedition-lint-nested-empty-paths.rs?ref=58d676b0cc73217703210913fdb266faa39687a0", "patch": "@@ -17,14 +17,28 @@ crate mod foo {\n use foo::{bar::{baz::{}}};\n //~^ ERROR absolute paths must start with\n //~| WARN this is accepted in the current edition\n+//~| ERROR absolute paths must start with\n+//~| WARN this is accepted in the current edition\n \n use foo::{bar::{XX, baz::{}}};\n //~^ ERROR absolute paths must start with\n //~| WARN this is accepted in the current edition\n+//~| ERROR absolute paths must start with\n+//~| WARN this is accepted in the current edition\n+//~| ERROR absolute paths must start with\n+//~| WARN this is accepted in the current edition\n+//~| ERROR absolute paths must start with\n+//~| WARN this is accepted in the current edition\n \n use foo::{bar::{baz::{}, baz1::{}}};\n //~^ ERROR absolute paths must start with\n //~| WARN this is accepted in the current edition\n+//~| ERROR absolute paths must start with\n+//~| WARN this is accepted in the current edition\n+//~| ERROR absolute paths must start with\n+//~| WARN this is accepted in the current edition\n+//~| ERROR absolute paths must start with\n+//~| WARN this is accepted in the current edition\n \n fn main() {\n }"}, {"sha": "8a3113729b4692562d423947d0e66a49b85d9189", "filename": "src/test/ui/rust-2018/edition-lint-nested-empty-paths.stderr", "status": "modified", "additions": 66, "deletions": 3, "changes": 69, "blob_url": "https://github.com/rust-lang/rust/blob/58d676b0cc73217703210913fdb266faa39687a0/src%2Ftest%2Fui%2Frust-2018%2Fedition-lint-nested-empty-paths.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/58d676b0cc73217703210913fdb266faa39687a0/src%2Ftest%2Fui%2Frust-2018%2Fedition-lint-nested-empty-paths.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Fedition-lint-nested-empty-paths.stderr?ref=58d676b0cc73217703210913fdb266faa39687a0", "patch": "@@ -13,7 +13,16 @@ LL | #![deny(absolute_paths_not_starting_with_crate)]\n    = note: for more information, see issue #53130 <https://github.com/rust-lang/rust/issues/53130>\n \n error: absolute paths must start with `self`, `super`, `crate`, or an external crate name in the 2018 edition\n-  --> $DIR/edition-lint-nested-empty-paths.rs:21:5\n+  --> $DIR/edition-lint-nested-empty-paths.rs:17:5\n+   |\n+LL | use foo::{bar::{baz::{}}};\n+   |     ^^^^^^^^^^^^^^^^^^^^^ help: use `crate`: `crate::foo::{bar::{baz::{}}}`\n+   |\n+   = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2018!\n+   = note: for more information, see issue #53130 <https://github.com/rust-lang/rust/issues/53130>\n+\n+error: absolute paths must start with `self`, `super`, `crate`, or an external crate name in the 2018 edition\n+  --> $DIR/edition-lint-nested-empty-paths.rs:23:5\n    |\n LL | use foo::{bar::{XX, baz::{}}};\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `crate`: `crate::foo::{bar::{XX, baz::{}}}`\n@@ -22,13 +31,67 @@ LL | use foo::{bar::{XX, baz::{}}};\n    = note: for more information, see issue #53130 <https://github.com/rust-lang/rust/issues/53130>\n \n error: absolute paths must start with `self`, `super`, `crate`, or an external crate name in the 2018 edition\n-  --> $DIR/edition-lint-nested-empty-paths.rs:25:5\n+  --> $DIR/edition-lint-nested-empty-paths.rs:23:5\n+   |\n+LL | use foo::{bar::{XX, baz::{}}};\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `crate`: `crate::foo::{bar::{XX, baz::{}}}`\n+   |\n+   = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2018!\n+   = note: for more information, see issue #53130 <https://github.com/rust-lang/rust/issues/53130>\n+\n+error: absolute paths must start with `self`, `super`, `crate`, or an external crate name in the 2018 edition\n+  --> $DIR/edition-lint-nested-empty-paths.rs:23:5\n+   |\n+LL | use foo::{bar::{XX, baz::{}}};\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `crate`: `crate::foo::{bar::{XX, baz::{}}}`\n+   |\n+   = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2018!\n+   = note: for more information, see issue #53130 <https://github.com/rust-lang/rust/issues/53130>\n+\n+error: absolute paths must start with `self`, `super`, `crate`, or an external crate name in the 2018 edition\n+  --> $DIR/edition-lint-nested-empty-paths.rs:23:5\n+   |\n+LL | use foo::{bar::{XX, baz::{}}};\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `crate`: `crate::foo::{bar::{XX, baz::{}}}`\n+   |\n+   = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2018!\n+   = note: for more information, see issue #53130 <https://github.com/rust-lang/rust/issues/53130>\n+\n+error: absolute paths must start with `self`, `super`, `crate`, or an external crate name in the 2018 edition\n+  --> $DIR/edition-lint-nested-empty-paths.rs:33:5\n+   |\n+LL | use foo::{bar::{baz::{}, baz1::{}}};\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `crate`: `crate::foo::{bar::{baz::{}, baz1::{}}}`\n+   |\n+   = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2018!\n+   = note: for more information, see issue #53130 <https://github.com/rust-lang/rust/issues/53130>\n+\n+error: absolute paths must start with `self`, `super`, `crate`, or an external crate name in the 2018 edition\n+  --> $DIR/edition-lint-nested-empty-paths.rs:33:5\n+   |\n+LL | use foo::{bar::{baz::{}, baz1::{}}};\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `crate`: `crate::foo::{bar::{baz::{}, baz1::{}}}`\n+   |\n+   = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2018!\n+   = note: for more information, see issue #53130 <https://github.com/rust-lang/rust/issues/53130>\n+\n+error: absolute paths must start with `self`, `super`, `crate`, or an external crate name in the 2018 edition\n+  --> $DIR/edition-lint-nested-empty-paths.rs:33:5\n+   |\n+LL | use foo::{bar::{baz::{}, baz1::{}}};\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `crate`: `crate::foo::{bar::{baz::{}, baz1::{}}}`\n+   |\n+   = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2018!\n+   = note: for more information, see issue #53130 <https://github.com/rust-lang/rust/issues/53130>\n+\n+error: absolute paths must start with `self`, `super`, `crate`, or an external crate name in the 2018 edition\n+  --> $DIR/edition-lint-nested-empty-paths.rs:33:5\n    |\n LL | use foo::{bar::{baz::{}, baz1::{}}};\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `crate`: `crate::foo::{bar::{baz::{}, baz1::{}}}`\n    |\n    = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2018!\n    = note: for more information, see issue #53130 <https://github.com/rust-lang/rust/issues/53130>\n \n-error: aborting due to 3 previous errors\n+error: aborting due to 10 previous errors\n "}, {"sha": "4eb1184cb6dff1b9e3ebb7ad23249441991adfca", "filename": "src/test/ui/rust-2018/edition-lint-nested-paths.fixed", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/58d676b0cc73217703210913fdb266faa39687a0/src%2Ftest%2Fui%2Frust-2018%2Fedition-lint-nested-paths.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/58d676b0cc73217703210913fdb266faa39687a0/src%2Ftest%2Fui%2Frust-2018%2Fedition-lint-nested-paths.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Fedition-lint-nested-paths.fixed?ref=58d676b0cc73217703210913fdb266faa39687a0", "patch": "@@ -6,6 +6,12 @@\n use crate::foo::{a, b};\n //~^ ERROR absolute paths must start with\n //~| this is accepted in the current edition\n+//~| ERROR absolute paths must start with\n+//~| this is accepted in the current edition\n+//~| ERROR absolute paths must start with\n+//~| this is accepted in the current edition\n+//~| ERROR absolute paths must start with\n+//~| this is accepted in the current edition\n \n mod foo {\n     crate fn a() {}\n@@ -21,6 +27,10 @@ fn main() {\n         use crate::foo::{self as x, c};\n         //~^ ERROR absolute paths must start with\n         //~| this is accepted in the current edition\n+        //~| ERROR absolute paths must start with\n+        //~| this is accepted in the current edition\n+        //~| ERROR absolute paths must start with\n+        //~| this is accepted in the current edition\n         x::a();\n         c();\n     }"}, {"sha": "2a358224d9bf9edb8bb7054051ae564a33834922", "filename": "src/test/ui/rust-2018/edition-lint-nested-paths.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/58d676b0cc73217703210913fdb266faa39687a0/src%2Ftest%2Fui%2Frust-2018%2Fedition-lint-nested-paths.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58d676b0cc73217703210913fdb266faa39687a0/src%2Ftest%2Fui%2Frust-2018%2Fedition-lint-nested-paths.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Fedition-lint-nested-paths.rs?ref=58d676b0cc73217703210913fdb266faa39687a0", "patch": "@@ -6,6 +6,12 @@\n use foo::{a, b};\n //~^ ERROR absolute paths must start with\n //~| this is accepted in the current edition\n+//~| ERROR absolute paths must start with\n+//~| this is accepted in the current edition\n+//~| ERROR absolute paths must start with\n+//~| this is accepted in the current edition\n+//~| ERROR absolute paths must start with\n+//~| this is accepted in the current edition\n \n mod foo {\n     crate fn a() {}\n@@ -21,6 +27,10 @@ fn main() {\n         use foo::{self as x, c};\n         //~^ ERROR absolute paths must start with\n         //~| this is accepted in the current edition\n+        //~| ERROR absolute paths must start with\n+        //~| this is accepted in the current edition\n+        //~| ERROR absolute paths must start with\n+        //~| this is accepted in the current edition\n         x::a();\n         c();\n     }"}, {"sha": "3d596022b0af568a33149279e39c11f0073e47e4", "filename": "src/test/ui/rust-2018/edition-lint-nested-paths.stderr", "status": "modified", "additions": 47, "deletions": 2, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/58d676b0cc73217703210913fdb266faa39687a0/src%2Ftest%2Fui%2Frust-2018%2Fedition-lint-nested-paths.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/58d676b0cc73217703210913fdb266faa39687a0/src%2Ftest%2Fui%2Frust-2018%2Fedition-lint-nested-paths.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Fedition-lint-nested-paths.stderr?ref=58d676b0cc73217703210913fdb266faa39687a0", "patch": "@@ -13,13 +13,58 @@ LL | #![deny(absolute_paths_not_starting_with_crate)]\n    = note: for more information, see issue #53130 <https://github.com/rust-lang/rust/issues/53130>\n \n error: absolute paths must start with `self`, `super`, `crate`, or an external crate name in the 2018 edition\n-  --> $DIR/edition-lint-nested-paths.rs:21:13\n+  --> $DIR/edition-lint-nested-paths.rs:6:5\n+   |\n+LL | use foo::{a, b};\n+   |     ^^^^^^^^^^^ help: use `crate`: `crate::foo::{a, b}`\n+   |\n+   = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2018!\n+   = note: for more information, see issue #53130 <https://github.com/rust-lang/rust/issues/53130>\n+\n+error: absolute paths must start with `self`, `super`, `crate`, or an external crate name in the 2018 edition\n+  --> $DIR/edition-lint-nested-paths.rs:6:5\n+   |\n+LL | use foo::{a, b};\n+   |     ^^^^^^^^^^^ help: use `crate`: `crate::foo::{a, b}`\n+   |\n+   = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2018!\n+   = note: for more information, see issue #53130 <https://github.com/rust-lang/rust/issues/53130>\n+\n+error: absolute paths must start with `self`, `super`, `crate`, or an external crate name in the 2018 edition\n+  --> $DIR/edition-lint-nested-paths.rs:6:5\n+   |\n+LL | use foo::{a, b};\n+   |     ^^^^^^^^^^^ help: use `crate`: `crate::foo::{a, b}`\n+   |\n+   = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2018!\n+   = note: for more information, see issue #53130 <https://github.com/rust-lang/rust/issues/53130>\n+\n+error: absolute paths must start with `self`, `super`, `crate`, or an external crate name in the 2018 edition\n+  --> $DIR/edition-lint-nested-paths.rs:27:13\n+   |\n+LL |         use foo::{self as x, c};\n+   |             ^^^^^^^^^^^^^^^^^^^ help: use `crate`: `crate::foo::{self as x, c}`\n+   |\n+   = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2018!\n+   = note: for more information, see issue #53130 <https://github.com/rust-lang/rust/issues/53130>\n+\n+error: absolute paths must start with `self`, `super`, `crate`, or an external crate name in the 2018 edition\n+  --> $DIR/edition-lint-nested-paths.rs:27:13\n+   |\n+LL |         use foo::{self as x, c};\n+   |             ^^^^^^^^^^^^^^^^^^^ help: use `crate`: `crate::foo::{self as x, c}`\n+   |\n+   = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2018!\n+   = note: for more information, see issue #53130 <https://github.com/rust-lang/rust/issues/53130>\n+\n+error: absolute paths must start with `self`, `super`, `crate`, or an external crate name in the 2018 edition\n+  --> $DIR/edition-lint-nested-paths.rs:27:13\n    |\n LL |         use foo::{self as x, c};\n    |             ^^^^^^^^^^^^^^^^^^^ help: use `crate`: `crate::foo::{self as x, c}`\n    |\n    = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2018!\n    = note: for more information, see issue #53130 <https://github.com/rust-lang/rust/issues/53130>\n \n-error: aborting due to 2 previous errors\n+error: aborting due to 7 previous errors\n "}, {"sha": "46adf02a391977158765201f83731e021bcb601b", "filename": "src/test/ui/rust-2018/edition-lint-paths.fixed", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/58d676b0cc73217703210913fdb266faa39687a0/src%2Ftest%2Fui%2Frust-2018%2Fedition-lint-paths.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/58d676b0cc73217703210913fdb266faa39687a0/src%2Ftest%2Fui%2Frust-2018%2Fedition-lint-paths.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Fedition-lint-paths.fixed?ref=58d676b0cc73217703210913fdb266faa39687a0", "patch": "@@ -12,17 +12,25 @@ pub mod foo {\n     use crate::bar::Bar;\n     //~^ ERROR absolute\n     //~| WARN this is accepted in the current edition\n+    //~| ERROR absolute\n+    //~| WARN this is accepted in the current edition\n+\n     use super::bar::Bar2;\n     use crate::bar::Bar3;\n \n     use crate::bar;\n     //~^ ERROR absolute\n     //~| WARN this is accepted in the current edition\n+\n     use crate::bar as something_else;\n \n     use crate::{main, Bar as SomethingElse};\n     //~^ ERROR absolute\n     //~| WARN this is accepted in the current edition\n+    //~| ERROR absolute\n+    //~| WARN this is accepted in the current edition\n+    //~| ERROR absolute\n+    //~| WARN this is accepted in the current edition\n \n     use crate::{main as another_main, Bar as SomethingElse2};\n \n@@ -34,6 +42,8 @@ pub mod foo {\n use crate::bar::Bar;\n //~^ ERROR absolute\n //~| WARN this is accepted in the current edition\n+//~| ERROR absolute\n+//~| WARN this is accepted in the current edition\n \n pub mod bar {\n     use edition_lint_paths as foo;\n@@ -51,11 +61,14 @@ mod baz {\n impl crate::foo::SomeTrait for u32 {}\n //~^ ERROR absolute\n //~| WARN this is accepted in the current edition\n+//~| ERROR absolute\n+//~| WARN this is accepted in the current edition\n \n fn main() {\n     let x = crate::bar::Bar;\n     //~^ ERROR absolute\n     //~| WARN this is accepted in the current edition\n+\n     let x = bar::Bar;\n     let x = crate::bar::Bar;\n     let x = self::bar::Bar;"}, {"sha": "f70bf90d6816a2cebd4d23bbb7e7cc224c23e990", "filename": "src/test/ui/rust-2018/edition-lint-paths.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/58d676b0cc73217703210913fdb266faa39687a0/src%2Ftest%2Fui%2Frust-2018%2Fedition-lint-paths.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58d676b0cc73217703210913fdb266faa39687a0/src%2Ftest%2Fui%2Frust-2018%2Fedition-lint-paths.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Fedition-lint-paths.rs?ref=58d676b0cc73217703210913fdb266faa39687a0", "patch": "@@ -12,17 +12,25 @@ pub mod foo {\n     use bar::Bar;\n     //~^ ERROR absolute\n     //~| WARN this is accepted in the current edition\n+    //~| ERROR absolute\n+    //~| WARN this is accepted in the current edition\n+\n     use super::bar::Bar2;\n     use crate::bar::Bar3;\n \n     use bar;\n     //~^ ERROR absolute\n     //~| WARN this is accepted in the current edition\n+\n     use crate::bar as something_else;\n \n     use {main, Bar as SomethingElse};\n     //~^ ERROR absolute\n     //~| WARN this is accepted in the current edition\n+    //~| ERROR absolute\n+    //~| WARN this is accepted in the current edition\n+    //~| ERROR absolute\n+    //~| WARN this is accepted in the current edition\n \n     use crate::{main as another_main, Bar as SomethingElse2};\n \n@@ -34,6 +42,8 @@ pub mod foo {\n use bar::Bar;\n //~^ ERROR absolute\n //~| WARN this is accepted in the current edition\n+//~| ERROR absolute\n+//~| WARN this is accepted in the current edition\n \n pub mod bar {\n     use edition_lint_paths as foo;\n@@ -51,11 +61,14 @@ mod baz {\n impl ::foo::SomeTrait for u32 {}\n //~^ ERROR absolute\n //~| WARN this is accepted in the current edition\n+//~| ERROR absolute\n+//~| WARN this is accepted in the current edition\n \n fn main() {\n     let x = ::bar::Bar;\n     //~^ ERROR absolute\n     //~| WARN this is accepted in the current edition\n+\n     let x = bar::Bar;\n     let x = crate::bar::Bar;\n     let x = self::bar::Bar;"}, {"sha": "481c68e10336309081a4b62d427fc1e2a96d0b6b", "filename": "src/test/ui/rust-2018/edition-lint-paths.stderr", "status": "modified", "additions": 52, "deletions": 7, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/58d676b0cc73217703210913fdb266faa39687a0/src%2Ftest%2Fui%2Frust-2018%2Fedition-lint-paths.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/58d676b0cc73217703210913fdb266faa39687a0/src%2Ftest%2Fui%2Frust-2018%2Fedition-lint-paths.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Fedition-lint-paths.stderr?ref=58d676b0cc73217703210913fdb266faa39687a0", "patch": "@@ -13,7 +13,16 @@ LL | #![deny(absolute_paths_not_starting_with_crate)]\n    = note: for more information, see issue #53130 <https://github.com/rust-lang/rust/issues/53130>\n \n error: absolute paths must start with `self`, `super`, `crate`, or an external crate name in the 2018 edition\n-  --> $DIR/edition-lint-paths.rs:18:9\n+  --> $DIR/edition-lint-paths.rs:12:9\n+   |\n+LL |     use bar::Bar;\n+   |         ^^^^^^^^ help: use `crate`: `crate::bar::Bar`\n+   |\n+   = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2018!\n+   = note: for more information, see issue #53130 <https://github.com/rust-lang/rust/issues/53130>\n+\n+error: absolute paths must start with `self`, `super`, `crate`, or an external crate name in the 2018 edition\n+  --> $DIR/edition-lint-paths.rs:21:9\n    |\n LL |     use bar;\n    |         ^^^ help: use `crate`: `crate::bar`\n@@ -22,7 +31,7 @@ LL |     use bar;\n    = note: for more information, see issue #53130 <https://github.com/rust-lang/rust/issues/53130>\n \n error: absolute paths must start with `self`, `super`, `crate`, or an external crate name in the 2018 edition\n-  --> $DIR/edition-lint-paths.rs:23:9\n+  --> $DIR/edition-lint-paths.rs:27:9\n    |\n LL |     use {main, Bar as SomethingElse};\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `crate`: `crate::{main, Bar as SomethingElse}`\n@@ -31,7 +40,34 @@ LL |     use {main, Bar as SomethingElse};\n    = note: for more information, see issue #53130 <https://github.com/rust-lang/rust/issues/53130>\n \n error: absolute paths must start with `self`, `super`, `crate`, or an external crate name in the 2018 edition\n-  --> $DIR/edition-lint-paths.rs:34:5\n+  --> $DIR/edition-lint-paths.rs:27:9\n+   |\n+LL |     use {main, Bar as SomethingElse};\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `crate`: `crate::{main, Bar as SomethingElse}`\n+   |\n+   = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2018!\n+   = note: for more information, see issue #53130 <https://github.com/rust-lang/rust/issues/53130>\n+\n+error: absolute paths must start with `self`, `super`, `crate`, or an external crate name in the 2018 edition\n+  --> $DIR/edition-lint-paths.rs:27:9\n+   |\n+LL |     use {main, Bar as SomethingElse};\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `crate`: `crate::{main, Bar as SomethingElse}`\n+   |\n+   = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2018!\n+   = note: for more information, see issue #53130 <https://github.com/rust-lang/rust/issues/53130>\n+\n+error: absolute paths must start with `self`, `super`, `crate`, or an external crate name in the 2018 edition\n+  --> $DIR/edition-lint-paths.rs:42:5\n+   |\n+LL | use bar::Bar;\n+   |     ^^^^^^^^ help: use `crate`: `crate::bar::Bar`\n+   |\n+   = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2018!\n+   = note: for more information, see issue #53130 <https://github.com/rust-lang/rust/issues/53130>\n+\n+error: absolute paths must start with `self`, `super`, `crate`, or an external crate name in the 2018 edition\n+  --> $DIR/edition-lint-paths.rs:42:5\n    |\n LL | use bar::Bar;\n    |     ^^^^^^^^ help: use `crate`: `crate::bar::Bar`\n@@ -40,7 +76,7 @@ LL | use bar::Bar;\n    = note: for more information, see issue #53130 <https://github.com/rust-lang/rust/issues/53130>\n \n error: absolute paths must start with `self`, `super`, `crate`, or an external crate name in the 2018 edition\n-  --> $DIR/edition-lint-paths.rs:46:9\n+  --> $DIR/edition-lint-paths.rs:56:9\n    |\n LL |     use *;\n    |         ^ help: use `crate`: `crate::*`\n@@ -49,7 +85,16 @@ LL |     use *;\n    = note: for more information, see issue #53130 <https://github.com/rust-lang/rust/issues/53130>\n \n error: absolute paths must start with `self`, `super`, `crate`, or an external crate name in the 2018 edition\n-  --> $DIR/edition-lint-paths.rs:51:6\n+  --> $DIR/edition-lint-paths.rs:61:6\n+   |\n+LL | impl ::foo::SomeTrait for u32 {}\n+   |      ^^^^^^^^^^^^^^^^ help: use `crate`: `crate::foo::SomeTrait`\n+   |\n+   = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2018!\n+   = note: for more information, see issue #53130 <https://github.com/rust-lang/rust/issues/53130>\n+\n+error: absolute paths must start with `self`, `super`, `crate`, or an external crate name in the 2018 edition\n+  --> $DIR/edition-lint-paths.rs:61:6\n    |\n LL | impl ::foo::SomeTrait for u32 {}\n    |      ^^^^^^^^^^^^^^^^ help: use `crate`: `crate::foo::SomeTrait`\n@@ -58,13 +103,13 @@ LL | impl ::foo::SomeTrait for u32 {}\n    = note: for more information, see issue #53130 <https://github.com/rust-lang/rust/issues/53130>\n \n error: absolute paths must start with `self`, `super`, `crate`, or an external crate name in the 2018 edition\n-  --> $DIR/edition-lint-paths.rs:56:13\n+  --> $DIR/edition-lint-paths.rs:68:13\n    |\n LL |     let x = ::bar::Bar;\n    |             ^^^^^^^^^^ help: use `crate`: `crate::bar::Bar`\n    |\n    = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2018!\n    = note: for more information, see issue #53130 <https://github.com/rust-lang/rust/issues/53130>\n \n-error: aborting due to 7 previous errors\n+error: aborting due to 12 previous errors\n "}, {"sha": "05b881a9b08cfd3c942501831ad0a444973dfebf", "filename": "src/test/ui/rust-2018/extern-crate-rename.fixed", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/58d676b0cc73217703210913fdb266faa39687a0/src%2Ftest%2Fui%2Frust-2018%2Fextern-crate-rename.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/58d676b0cc73217703210913fdb266faa39687a0/src%2Ftest%2Fui%2Frust-2018%2Fextern-crate-rename.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Fextern-crate-rename.fixed?ref=58d676b0cc73217703210913fdb266faa39687a0", "patch": "@@ -12,6 +12,8 @@ extern crate edition_lint_paths as my_crate;\n use crate::my_crate::foo;\n //~^ ERROR absolute paths must start\n //~| WARNING this is accepted in the current edition\n+//~| ERROR absolute paths must start\n+//~| WARNING this is accepted in the current edition\n \n fn main() {\n     foo();"}, {"sha": "6e327be193bf12e7c31f63502a1fba5172669f5c", "filename": "src/test/ui/rust-2018/extern-crate-rename.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/58d676b0cc73217703210913fdb266faa39687a0/src%2Ftest%2Fui%2Frust-2018%2Fextern-crate-rename.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58d676b0cc73217703210913fdb266faa39687a0/src%2Ftest%2Fui%2Frust-2018%2Fextern-crate-rename.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Fextern-crate-rename.rs?ref=58d676b0cc73217703210913fdb266faa39687a0", "patch": "@@ -12,6 +12,8 @@ extern crate edition_lint_paths as my_crate;\n use my_crate::foo;\n //~^ ERROR absolute paths must start\n //~| WARNING this is accepted in the current edition\n+//~| ERROR absolute paths must start\n+//~| WARNING this is accepted in the current edition\n \n fn main() {\n     foo();"}, {"sha": "f2f379ca396b58a5805c7e26cb971147560d33f5", "filename": "src/test/ui/rust-2018/extern-crate-rename.stderr", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/58d676b0cc73217703210913fdb266faa39687a0/src%2Ftest%2Fui%2Frust-2018%2Fextern-crate-rename.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/58d676b0cc73217703210913fdb266faa39687a0/src%2Ftest%2Fui%2Frust-2018%2Fextern-crate-rename.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Fextern-crate-rename.stderr?ref=58d676b0cc73217703210913fdb266faa39687a0", "patch": "@@ -12,5 +12,14 @@ LL | #![deny(absolute_paths_not_starting_with_crate)]\n    = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2018!\n    = note: for more information, see issue #53130 <https://github.com/rust-lang/rust/issues/53130>\n \n-error: aborting due to previous error\n+error: absolute paths must start with `self`, `super`, `crate`, or an external crate name in the 2018 edition\n+  --> $DIR/extern-crate-rename.rs:12:5\n+   |\n+LL | use my_crate::foo;\n+   |     ^^^^^^^^^^^^^ help: use `crate`: `crate::my_crate::foo`\n+   |\n+   = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2018!\n+   = note: for more information, see issue #53130 <https://github.com/rust-lang/rust/issues/53130>\n+\n+error: aborting due to 2 previous errors\n "}, {"sha": "fdbd893abed82a2ffbe8e046d0ccf2cd479287fe", "filename": "src/test/ui/rust-2018/extern-crate-submod.fixed", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/58d676b0cc73217703210913fdb266faa39687a0/src%2Ftest%2Fui%2Frust-2018%2Fextern-crate-submod.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/58d676b0cc73217703210913fdb266faa39687a0/src%2Ftest%2Fui%2Frust-2018%2Fextern-crate-submod.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Fextern-crate-submod.fixed?ref=58d676b0cc73217703210913fdb266faa39687a0", "patch": "@@ -19,6 +19,9 @@ mod m {\n use crate::m::edition_lint_paths::foo;\n //~^ ERROR absolute paths must start\n //~| WARNING this is accepted in the current edition\n+//~| ERROR absolute paths must start\n+//~| WARNING this is accepted in the current edition\n+\n \n fn main() {\n     foo();"}, {"sha": "c2b915849f02235b1274ce8e685c03c820952a6a", "filename": "src/test/ui/rust-2018/extern-crate-submod.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/58d676b0cc73217703210913fdb266faa39687a0/src%2Ftest%2Fui%2Frust-2018%2Fextern-crate-submod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58d676b0cc73217703210913fdb266faa39687a0/src%2Ftest%2Fui%2Frust-2018%2Fextern-crate-submod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Fextern-crate-submod.rs?ref=58d676b0cc73217703210913fdb266faa39687a0", "patch": "@@ -19,6 +19,9 @@ mod m {\n use m::edition_lint_paths::foo;\n //~^ ERROR absolute paths must start\n //~| WARNING this is accepted in the current edition\n+//~| ERROR absolute paths must start\n+//~| WARNING this is accepted in the current edition\n+\n \n fn main() {\n     foo();"}, {"sha": "c4c3168bc97df0ba733d74e61a6408ad702c023b", "filename": "src/test/ui/rust-2018/extern-crate-submod.stderr", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/58d676b0cc73217703210913fdb266faa39687a0/src%2Ftest%2Fui%2Frust-2018%2Fextern-crate-submod.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/58d676b0cc73217703210913fdb266faa39687a0/src%2Ftest%2Fui%2Frust-2018%2Fextern-crate-submod.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Fextern-crate-submod.stderr?ref=58d676b0cc73217703210913fdb266faa39687a0", "patch": "@@ -12,5 +12,14 @@ LL | #![deny(absolute_paths_not_starting_with_crate)]\n    = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2018!\n    = note: for more information, see issue #53130 <https://github.com/rust-lang/rust/issues/53130>\n \n-error: aborting due to previous error\n+error: absolute paths must start with `self`, `super`, `crate`, or an external crate name in the 2018 edition\n+  --> $DIR/extern-crate-submod.rs:19:5\n+   |\n+LL | use m::edition_lint_paths::foo;\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `crate`: `crate::m::edition_lint_paths::foo`\n+   |\n+   = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2018!\n+   = note: for more information, see issue #53130 <https://github.com/rust-lang/rust/issues/53130>\n+\n+error: aborting due to 2 previous errors\n "}]}