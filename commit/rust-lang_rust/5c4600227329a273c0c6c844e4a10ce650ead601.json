{"sha": "5c4600227329a273c0c6c844e4a10ce650ead601", "node_id": "C_kwDOAAsO6NoAKDVjNDYwMDIyNzMyOWEyNzNjMGM2Yzg0NGU0YTEwY2U2NTBlYWQ2MDE", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2021-12-16T15:26:01Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2021-12-16T15:26:01Z"}, "message": "Eagerly instantiate opaque types", "tree": {"sha": "0079f0e8e94d1fed0b90f9b587634b752547cc3b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0079f0e8e94d1fed0b90f9b587634b752547cc3b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5c4600227329a273c0c6c844e4a10ce650ead601", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5c4600227329a273c0c6c844e4a10ce650ead601", "html_url": "https://github.com/rust-lang/rust/commit/5c4600227329a273c0c6c844e4a10ce650ead601", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5c4600227329a273c0c6c844e4a10ce650ead601/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "689a868a1f6f20b49ea904ca7cda14636b7768b3", "url": "https://api.github.com/repos/rust-lang/rust/commits/689a868a1f6f20b49ea904ca7cda14636b7768b3", "html_url": "https://github.com/rust-lang/rust/commit/689a868a1f6f20b49ea904ca7cda14636b7768b3"}], "stats": {"total": 10, "additions": 4, "deletions": 6}, "files": [{"sha": "d5e65705b2885a9f2226ec032ae21bab8fd98dbf", "filename": "compiler/rustc_infer/src/infer/opaque_types.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5c4600227329a273c0c6c844e4a10ce650ead601/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fopaque_types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c4600227329a273c0c6c844e4a10ce650ead601/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fopaque_types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fopaque_types.rs?ref=5c4600227329a273c0c6c844e4a10ce650ead601", "patch": "@@ -551,14 +551,16 @@ impl<'a, 'tcx> Instantiator<'a, 'tcx> {\n             let predicate = predicate.subst(tcx, substs);\n             debug!(?predicate);\n \n-            // Replace all other mentions of the same opaque type with the hidden type,\n-            // as the bounds must hold on the hidden type after all.\n             let predicate = predicate.fold_with(&mut BottomUpFolder {\n                 tcx,\n                 ty_op: |ty| match *ty.kind() {\n+                    // Replace all other mentions of the same opaque type with the hidden type,\n+                    // as the bounds must hold on the hidden type after all.\n                     ty::Opaque(def_id2, substs2) if def_id == def_id2 && substs == substs2 => {\n                         ty_var\n                     }\n+                    // Instantiate nested instances of `impl Trait`.\n+                    ty::Opaque(..) => self.instantiate_opaque_types_in_map(ty),\n                     _ => ty,\n                 },\n                 lt_op: |lt| lt,\n@@ -589,10 +591,6 @@ impl<'a, 'tcx> Instantiator<'a, 'tcx> {\n                     return tcx.ty_error();\n                 }\n             }\n-            // Change the predicate to refer to the type variable,\n-            // which will be the concrete type instead of the opaque type.\n-            // This also instantiates nested instances of `impl Trait`.\n-            let predicate = self.instantiate_opaque_types_in_map(predicate);\n \n             let cause =\n                 traits::ObligationCause::new(self.value_span, self.body_id, traits::OpaqueType);"}]}