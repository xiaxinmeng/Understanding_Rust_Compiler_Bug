{"sha": "00bdae02fdbb2e27e4d27a54683537faa33b3f17", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAwYmRhZTAyZmRiYjJlMjdlNGQyN2E1NDY4MzUzN2ZhYTMzYjNmMTc=", "commit": {"author": {"name": "Jon Gjengset", "email": "jon@thesquareplanet.com", "date": "2017-09-05T17:37:36Z"}, "committer": {"name": "Jon Gjengset", "email": "jon@thesquareplanet.com", "date": "2017-09-05T17:37:36Z"}, "message": "Avoid weird or_insert_with example", "tree": {"sha": "1166791c5cdd6cf9abbe9a624d96f926eced84dc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1166791c5cdd6cf9abbe9a624d96f926eced84dc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/00bdae02fdbb2e27e4d27a54683537faa33b3f17", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEDrgUCxKUwmVd3b8M1krJ1nF23HEFAlmu4OAACgkQ1krJ1nF2\n3HESjBAAltCBMPKALM5hHoHo7VS0Abkk5JXvNJh59eQPJQqDZ+O7ka48Os+YENcy\nc4GonA9cqCwWZkZuZnXFmvBS2tOXUIAxBKf59PglRiEuLRoFPOjeLBY5yYb1obxi\n06icGDfOwihrYZogjNCGDgv/KubIBk2XwDOTSFWuETXTcj2nWM51UltES8I+Exr6\nWx0D5Dg4ZBtIEvZPiOYylrKAmS0XiqjcYNdhXxe9bnwxJQ9LettYjQaQz0rBVtii\nWldq3w9AdLxj5friR7nTxgTXbOWAUBqlzSJl6O++nYsMu/bK8z/3q6HTYdDlWEKp\n6o6bDp7FuV3uzxaYDBppjhFfIzuI15gxkb7dL21biN2e0Juu8JBMP4Vevf3Mu3Pk\nXzu/U7G5y8lR+PNCNUO8jZrDXYTisgvDR83Sd/KbrK6gConVY659/k81SjJqxRvA\n+TXGCvmIvLY2zUIGb9AIjGEt3U5CH6R0shtHxus+msSDmRURqbH/L+1fJQkt0gGf\nq2umpnlYI169cTrEeTIxu2mtFNkaW2Dy5LjbHn06EUXpRFon6uc0LCvp1/E0SVdX\nchqhj2QThj0yLuUVI93H3J/ETVKzrmZ4f++hUWuVStWt2mEDXiY0j9nYnCu7C+mi\nRYNn/368nA2/lprSMjh9ol8Du1V0aO+KH9LmC8SRDRSr+l8AkE4=\n=K+X3\n-----END PGP SIGNATURE-----", "payload": "tree 1166791c5cdd6cf9abbe9a624d96f926eced84dc\nparent 35c7943fd2d2a65b63712d95d62c8837633218b4\nauthor Jon Gjengset <jon@thesquareplanet.com> 1504633056 -0400\ncommitter Jon Gjengset <jon@thesquareplanet.com> 1504633056 -0400\n\nAvoid weird or_insert_with example\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/00bdae02fdbb2e27e4d27a54683537faa33b3f17", "html_url": "https://github.com/rust-lang/rust/commit/00bdae02fdbb2e27e4d27a54683537faa33b3f17", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/00bdae02fdbb2e27e4d27a54683537faa33b3f17/comments", "author": {"login": "jonhoo", "id": 176295, "node_id": "MDQ6VXNlcjE3NjI5NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/176295?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonhoo", "html_url": "https://github.com/jonhoo", "followers_url": "https://api.github.com/users/jonhoo/followers", "following_url": "https://api.github.com/users/jonhoo/following{/other_user}", "gists_url": "https://api.github.com/users/jonhoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonhoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonhoo/subscriptions", "organizations_url": "https://api.github.com/users/jonhoo/orgs", "repos_url": "https://api.github.com/users/jonhoo/repos", "events_url": "https://api.github.com/users/jonhoo/events{/privacy}", "received_events_url": "https://api.github.com/users/jonhoo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonhoo", "id": 176295, "node_id": "MDQ6VXNlcjE3NjI5NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/176295?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonhoo", "html_url": "https://github.com/jonhoo", "followers_url": "https://api.github.com/users/jonhoo/followers", "following_url": "https://api.github.com/users/jonhoo/following{/other_user}", "gists_url": "https://api.github.com/users/jonhoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonhoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonhoo/subscriptions", "organizations_url": "https://api.github.com/users/jonhoo/orgs", "repos_url": "https://api.github.com/users/jonhoo/repos", "events_url": "https://api.github.com/users/jonhoo/events{/privacy}", "received_events_url": "https://api.github.com/users/jonhoo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "35c7943fd2d2a65b63712d95d62c8837633218b4", "url": "https://api.github.com/repos/rust-lang/rust/commits/35c7943fd2d2a65b63712d95d62c8837633218b4", "html_url": "https://github.com/rust-lang/rust/commit/35c7943fd2d2a65b63712d95d62c8837633218b4"}], "stats": {"total": 8, "additions": 2, "deletions": 6}, "files": [{"sha": "4c93fead172372fa20201861e0f47096e18e5f2f", "filename": "src/liballoc/btree/map.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/00bdae02fdbb2e27e4d27a54683537faa33b3f17/src%2Fliballoc%2Fbtree%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00bdae02fdbb2e27e4d27a54683537faa33b3f17/src%2Fliballoc%2Fbtree%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fbtree%2Fmap.rs?ref=00bdae02fdbb2e27e4d27a54683537faa33b3f17", "patch": "@@ -2116,9 +2116,7 @@ impl<'a, K: Ord, V: Default> Entry<'a, K, V> {\n     /// # fn main() {\n     /// use std::collections::BTreeMap;\n     ///\n-    /// let mut map: BTreeMap<&str, String> = BTreeMap::new();\n-    /// let s = \"hoho\".to_string();\n-    ///\n+    /// let mut map: BTreeMap<&str, Option<usize>> = BTreeMap::new();\n     /// map.entry(\"poneyland\").or_default();\n     ///\n     /// assert_eq!(map[\"poneyland\"], None);"}, {"sha": "fbb69ca974930ae3e442882485a57fda24bc856e", "filename": "src/libstd/collections/hash/map.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/00bdae02fdbb2e27e4d27a54683537faa33b3f17/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00bdae02fdbb2e27e4d27a54683537faa33b3f17/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs?ref=00bdae02fdbb2e27e4d27a54683537faa33b3f17", "patch": "@@ -2013,9 +2013,7 @@ impl<'a, K, V: Default> Entry<'a, K, V> {\n     /// # fn main() {\n     /// use std::collections::HashMap;\n     ///\n-    /// let mut map: HashMap<&str, Option<usize>> = HashMap::new();\n-    /// let s = \"hoho\".to_string();\n-    ///\n+    /// let mut map: HashMap<&str, Option<u32>> = HashMap::new();\n     /// map.entry(\"poneyland\").or_default();\n     ///\n     /// assert_eq!(map[\"poneyland\"], None);"}]}