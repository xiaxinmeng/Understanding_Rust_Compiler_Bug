{"sha": "eb8e8bd8bfe492f154ab0438b0067b7a302d2fc1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmViOGU4YmQ4YmZlNDkyZjE1NGFiMDQzOGIwMDY3YjdhMzAyZDJmYzE=", "commit": {"author": {"name": "kadmin", "email": "julianknodt@gmail.com", "date": "2020-10-26T23:25:12Z"}, "committer": {"name": "kadmin", "email": "julianknodt@gmail.com", "date": "2020-10-27T22:54:41Z"}, "message": "Add UI test for invalid values for bool & char", "tree": {"sha": "0cd2fcb261b08c29fb7e789bc2670caa11bd7bab", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0cd2fcb261b08c29fb7e789bc2670caa11bd7bab"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eb8e8bd8bfe492f154ab0438b0067b7a302d2fc1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eb8e8bd8bfe492f154ab0438b0067b7a302d2fc1", "html_url": "https://github.com/rust-lang/rust/commit/eb8e8bd8bfe492f154ab0438b0067b7a302d2fc1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eb8e8bd8bfe492f154ab0438b0067b7a302d2fc1/comments", "author": {"login": "JulianKnodt", "id": 7675847, "node_id": "MDQ6VXNlcjc2NzU4NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/7675847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JulianKnodt", "html_url": "https://github.com/JulianKnodt", "followers_url": "https://api.github.com/users/JulianKnodt/followers", "following_url": "https://api.github.com/users/JulianKnodt/following{/other_user}", "gists_url": "https://api.github.com/users/JulianKnodt/gists{/gist_id}", "starred_url": "https://api.github.com/users/JulianKnodt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JulianKnodt/subscriptions", "organizations_url": "https://api.github.com/users/JulianKnodt/orgs", "repos_url": "https://api.github.com/users/JulianKnodt/repos", "events_url": "https://api.github.com/users/JulianKnodt/events{/privacy}", "received_events_url": "https://api.github.com/users/JulianKnodt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JulianKnodt", "id": 7675847, "node_id": "MDQ6VXNlcjc2NzU4NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/7675847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JulianKnodt", "html_url": "https://github.com/JulianKnodt", "followers_url": "https://api.github.com/users/JulianKnodt/followers", "following_url": "https://api.github.com/users/JulianKnodt/following{/other_user}", "gists_url": "https://api.github.com/users/JulianKnodt/gists{/gist_id}", "starred_url": "https://api.github.com/users/JulianKnodt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JulianKnodt/subscriptions", "organizations_url": "https://api.github.com/users/JulianKnodt/orgs", "repos_url": "https://api.github.com/users/JulianKnodt/repos", "events_url": "https://api.github.com/users/JulianKnodt/events{/privacy}", "received_events_url": "https://api.github.com/users/JulianKnodt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "35debd4c111610317346f46d791f32551d449bd8", "url": "https://api.github.com/repos/rust-lang/rust/commits/35debd4c111610317346f46d791f32551d449bd8", "html_url": "https://github.com/rust-lang/rust/commit/35debd4c111610317346f46d791f32551d449bd8"}], "stats": {"total": 105, "additions": 105, "deletions": 0}, "files": [{"sha": "e59b97922bea131e931791cbff303f0bdd21c185", "filename": "src/test/ui/const-generics/min_const_generics/invalid-patterns.rs", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/eb8e8bd8bfe492f154ab0438b0067b7a302d2fc1/src%2Ftest%2Fui%2Fconst-generics%2Fmin_const_generics%2Finvalid-patterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb8e8bd8bfe492f154ab0438b0067b7a302d2fc1/src%2Ftest%2Fui%2Fconst-generics%2Fmin_const_generics%2Finvalid-patterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fmin_const_generics%2Finvalid-patterns.rs?ref=eb8e8bd8bfe492f154ab0438b0067b7a302d2fc1", "patch": "@@ -0,0 +1,45 @@\n+#![feature(min_const_generics)]\n+use std::mem::transmute;\n+\n+fn get_flag<const FlagSet: bool, const ShortName: char>() -> Option<char> {\n+  if FlagSet {\n+    Some(ShortName)\n+  } else {\n+    None\n+  }\n+}\n+\n+union CharRaw {\n+  byte: u8,\n+  character: char,\n+}\n+\n+union BoolRaw {\n+  byte: u8,\n+  boolean: bool,\n+}\n+\n+const char_raw: CharRaw = CharRaw { byte: 0xFF };\n+const bool_raw: BoolRaw = BoolRaw { byte: 0x42 };\n+\n+fn main() {\n+  // Test that basic cases don't work\n+  assert!(get_flag::<true, 'c'>().is_some());\n+  assert!(get_flag::<false, 'x'>().is_none());\n+  get_flag::<false, 0xFF>();\n+  //~^ ERROR mismatched types\n+  get_flag::<7, 'c'>();\n+  //~^ ERROR mismatched types\n+  get_flag::<42, 0x5ad>();\n+  //~^ ERROR mismatched types\n+  //~| ERROR mismatched types\n+\n+\n+  get_flag::<false, { unsafe { char_raw.character } }>();\n+  //~^ ERROR it is undefined behavior\n+  get_flag::<{ unsafe { bool_raw.boolean } }, 'z'>();\n+  //~^ ERROR it is undefined behavior\n+  get_flag::<{ unsafe { bool_raw.boolean } }, { unsafe { char_raw.character } }>();\n+  //~^ ERROR it is undefined behavior\n+  //~| ERROR it is undefined behavior\n+}"}, {"sha": "a3157c6b5644d12f747d55bea5923fcccb66d2cf", "filename": "src/test/ui/const-generics/min_const_generics/invalid-patterns.stderr", "status": "added", "additions": 60, "deletions": 0, "changes": 60, "blob_url": "https://github.com/rust-lang/rust/blob/eb8e8bd8bfe492f154ab0438b0067b7a302d2fc1/src%2Ftest%2Fui%2Fconst-generics%2Fmin_const_generics%2Finvalid-patterns.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eb8e8bd8bfe492f154ab0438b0067b7a302d2fc1/src%2Ftest%2Fui%2Fconst-generics%2Fmin_const_generics%2Finvalid-patterns.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fmin_const_generics%2Finvalid-patterns.stderr?ref=eb8e8bd8bfe492f154ab0438b0067b7a302d2fc1", "patch": "@@ -0,0 +1,60 @@\n+error[E0308]: mismatched types\n+  --> $DIR/invalid-patterns.rs:29:21\n+   |\n+LL |   get_flag::<false, 0xFF>();\n+   |                     ^^^^ expected `char`, found `u8`\n+\n+error[E0308]: mismatched types\n+  --> $DIR/invalid-patterns.rs:31:14\n+   |\n+LL |   get_flag::<7, 'c'>();\n+   |              ^ expected `bool`, found integer\n+\n+error[E0308]: mismatched types\n+  --> $DIR/invalid-patterns.rs:33:14\n+   |\n+LL |   get_flag::<42, 0x5ad>();\n+   |              ^^ expected `bool`, found integer\n+\n+error[E0308]: mismatched types\n+  --> $DIR/invalid-patterns.rs:33:18\n+   |\n+LL |   get_flag::<42, 0x5ad>();\n+   |                  ^^^^^ expected `char`, found `u8`\n+\n+error[E0080]: it is undefined behavior to use this value\n+  --> $DIR/invalid-patterns.rs:38:21\n+   |\n+LL |   get_flag::<false, { unsafe { char_raw.character } }>();\n+   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type validation failed: encountered uninitialized bytes, but expected a valid unicode scalar value (in `0..=0x10FFFF` but not in `0xD800..=0xDFFF`)\n+   |\n+   = note: The rules on what exactly is undefined behavior aren't clear, so this check might be overzealous. Please open an issue on the rustc repository if you believe it should not be considered undefined behavior.\n+\n+error[E0080]: it is undefined behavior to use this value\n+  --> $DIR/invalid-patterns.rs:40:14\n+   |\n+LL |   get_flag::<{ unsafe { bool_raw.boolean } }, 'z'>();\n+   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type validation failed: encountered 0x42, but expected a boolean\n+   |\n+   = note: The rules on what exactly is undefined behavior aren't clear, so this check might be overzealous. Please open an issue on the rustc repository if you believe it should not be considered undefined behavior.\n+\n+error[E0080]: it is undefined behavior to use this value\n+  --> $DIR/invalid-patterns.rs:42:14\n+   |\n+LL |   get_flag::<{ unsafe { bool_raw.boolean } }, { unsafe { char_raw.character } }>();\n+   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type validation failed: encountered 0x42, but expected a boolean\n+   |\n+   = note: The rules on what exactly is undefined behavior aren't clear, so this check might be overzealous. Please open an issue on the rustc repository if you believe it should not be considered undefined behavior.\n+\n+error[E0080]: it is undefined behavior to use this value\n+  --> $DIR/invalid-patterns.rs:42:47\n+   |\n+LL |   get_flag::<{ unsafe { bool_raw.boolean } }, { unsafe { char_raw.character } }>();\n+   |                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type validation failed: encountered uninitialized bytes, but expected a valid unicode scalar value (in `0..=0x10FFFF` but not in `0xD800..=0xDFFF`)\n+   |\n+   = note: The rules on what exactly is undefined behavior aren't clear, so this check might be overzealous. Please open an issue on the rustc repository if you believe it should not be considered undefined behavior.\n+\n+error: aborting due to 8 previous errors\n+\n+Some errors have detailed explanations: E0080, E0308.\n+For more information about an error, try `rustc --explain E0080`."}]}