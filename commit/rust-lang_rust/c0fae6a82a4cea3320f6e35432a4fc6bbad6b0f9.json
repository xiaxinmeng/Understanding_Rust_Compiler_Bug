{"sha": "c0fae6a82a4cea3320f6e35432a4fc6bbad6b0f9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMwZmFlNmE4MmE0Y2VhMzMyMGY2ZTM1NDMyYTRmYzZiYmFkNmIwZjk=", "commit": {"author": {"name": "Seiichi Uchida", "email": "uchida@os.ecc.u-tokyo.ac.jp", "date": "2017-05-18T08:53:23Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-05-18T08:53:23Z"}, "message": "Merge pull request #1562 from flier/reorder_imports_in_group\n\nreorder imports in group", "tree": {"sha": "c444c7da7359d91631046438260317241288a715", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c444c7da7359d91631046438260317241288a715"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c0fae6a82a4cea3320f6e35432a4fc6bbad6b0f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c0fae6a82a4cea3320f6e35432a4fc6bbad6b0f9", "html_url": "https://github.com/rust-lang/rust/commit/c0fae6a82a4cea3320f6e35432a4fc6bbad6b0f9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c0fae6a82a4cea3320f6e35432a4fc6bbad6b0f9/comments", "author": null, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "330605db8cb04fc7f6204b3614c8c717aa58f381", "url": "https://api.github.com/repos/rust-lang/rust/commits/330605db8cb04fc7f6204b3614c8c717aa58f381", "html_url": "https://github.com/rust-lang/rust/commit/330605db8cb04fc7f6204b3614c8c717aa58f381"}, {"sha": "1077a100a16e1ce6e33db6ca42c3f93b2ab9620f", "url": "https://api.github.com/repos/rust-lang/rust/commits/1077a100a16e1ce6e33db6ca42c3f93b2ab9620f", "html_url": "https://github.com/rust-lang/rust/commit/1077a100a16e1ce6e33db6ca42c3f93b2ab9620f"}], "stats": {"total": 118, "additions": 116, "deletions": 2}, "files": [{"sha": "1811c3aa5c6e34fd092cb731c5f1f5ef7e3b6c0b", "filename": "Configurations.md", "status": "modified", "additions": 36, "deletions": 1, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/c0fae6a82a4cea3320f6e35432a4fc6bbad6b0f9/Configurations.md", "raw_url": "https://github.com/rust-lang/rust/raw/c0fae6a82a4cea3320f6e35432a4fc6bbad6b0f9/Configurations.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Configurations.md?ref=c0fae6a82a4cea3320f6e35432a4fc6bbad6b0f9", "patch": "@@ -1007,7 +1007,42 @@ use lorem;\n use sit;\n ```\n \n-See also [`reorder_imported_names`](#reorder_imported_names).\n+See also [`reorder_imported_names`](#reorder_imported_names), [`reorder_imports_in_group`](#reorder_imports_in_group).\n+\n+## `reorder_imports_in_group`\n+\n+Reorder import statements in group\n+\n+- **Default value**: `false`\n+- **Possible values**: `true`, `false`\n+\n+**Note:** This option takes effect only when [`reorder_imports`](#reorder_imports) is set to `true`.\n+\n+#### `false`:\n+\n+```rust\n+use std::mem;\n+use std::io;\n+\n+use lorem;\n+use ipsum;\n+use dolor;\n+use sit;\n+```\n+\n+#### `true`:\n+\n+```rust\n+use std::io;\n+use std::mem;\n+\n+use dolor;\n+use ipsum;\n+use lorem;\n+use sit;\n+```\n+\n+See also [`reorder_imports`](#reorder_imports).\n \n ## `single_line_if_else_max_width`\n "}, {"sha": "e8ecfa0f8e5938484dbe7281ec8921e412c2e326", "filename": "src/config.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c0fae6a82a4cea3320f6e35432a4fc6bbad6b0f9/src%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0fae6a82a4cea3320f6e35432a4fc6bbad6b0f9/src%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconfig.rs?ref=c0fae6a82a4cea3320f6e35432a4fc6bbad6b0f9", "patch": "@@ -387,6 +387,7 @@ create_config! {\n     chain_indent: IndentStyle, IndentStyle::Block, \"Indentation of chain\";\n     chain_one_line_max: usize, 60, \"Maximum length of a chain to fit on a single line\";\n     reorder_imports: bool, false, \"Reorder import statements alphabetically\";\n+    reorder_imports_in_group: bool, false, \"Reorder import statements in group\";\n     reorder_imported_names: bool, false,\n         \"Reorder lists of names in import statements alphabetically\";\n     single_line_if_else_max_width: usize, 50, \"Maximum line length for single line if-else \\"}, {"sha": "2321eee272a6df465b25a4a706a2bfd8b7386607", "filename": "src/visitor.rs", "status": "modified", "additions": 27, "deletions": 1, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/c0fae6a82a4cea3320f6e35432a4fc6bbad6b0f9/src%2Fvisitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0fae6a82a4cea3320f6e35432a4fc6bbad6b0f9/src%2Fvisitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvisitor.rs?ref=c0fae6a82a4cea3320f6e35432a4fc6bbad6b0f9", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use std::cmp;\n+\n use syntax::{ast, ptr, visit};\n use syntax::codemap::{self, CodeMap, Span, BytePos};\n use syntax::parse::ParseSess;\n@@ -31,6 +33,19 @@ fn is_use_item(item: &ast::Item) -> bool {\n     }\n }\n \n+fn item_bound(item: &ast::Item) -> Span {\n+    item.attrs\n+        .iter()\n+        .map(|attr| attr.span)\n+        .fold(item.span, |bound, span| {\n+            Span {\n+                lo: cmp::min(bound.lo, span.lo),\n+                hi: cmp::max(bound.hi, span.hi),\n+                expn_id: span.expn_id,\n+            }\n+        })\n+}\n+\n pub struct FmtVisitor<'a> {\n     pub parse_session: &'a ParseSess,\n     pub codemap: &'a CodeMap,\n@@ -510,9 +525,20 @@ impl<'a> FmtVisitor<'a> {\n             // to be potentially reordered within `format_imports`. Otherwise, just format the\n             // next item for output.\n             if self.config.reorder_imports && is_use_item(&*items_left[0]) {\n+                let reorder_imports_in_group = self.config.reorder_imports_in_group;\n+                let mut last = self.codemap.lookup_line_range(item_bound(&items_left[0]));\n                 let use_item_length = items_left\n                     .iter()\n-                    .take_while(|ppi| is_use_item(&***ppi))\n+                    .take_while(|ppi| {\n+                        is_use_item(&***ppi) &&\n+                        (!reorder_imports_in_group ||\n+                         {\n+                             let current = self.codemap.lookup_line_range(item_bound(&ppi));\n+                             let in_same_group = current.lo < last.hi + 2;\n+                             last = current;\n+                             in_same_group\n+                         })\n+                    })\n                     .count();\n                 let (use_items, rest) = items_left.split_at(use_item_length);\n                 self.format_imports(use_items);"}, {"sha": "87711bb142b4c418b3a491d2ed4c9d0c15cfd103", "filename": "tests/source/configs-reorder_imports_in_group-false.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/c0fae6a82a4cea3320f6e35432a4fc6bbad6b0f9/tests%2Fsource%2Fconfigs-reorder_imports_in_group-false.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0fae6a82a4cea3320f6e35432a4fc6bbad6b0f9/tests%2Fsource%2Fconfigs-reorder_imports_in_group-false.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs-reorder_imports_in_group-false.rs?ref=c0fae6a82a4cea3320f6e35432a4fc6bbad6b0f9", "patch": "@@ -0,0 +1,13 @@\n+// rustfmt-reorder_imports: true\n+// rustfmt-reorder_imports_in_group: false\n+// Reorder imports in group\n+\n+/// This comment should stay with `use std::mem;`\n+use std::mem;\n+use std::io;\n+\n+use lorem;\n+/// This comment should stay with `use ipsum;`\n+use ipsum;\n+use dolor;\n+use sit;"}, {"sha": "b5690b89cc0ef2075ef9e899b0ae644a558d5a2a", "filename": "tests/source/configs-reorder_imports_in_group-true.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/c0fae6a82a4cea3320f6e35432a4fc6bbad6b0f9/tests%2Fsource%2Fconfigs-reorder_imports_in_group-true.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0fae6a82a4cea3320f6e35432a4fc6bbad6b0f9/tests%2Fsource%2Fconfigs-reorder_imports_in_group-true.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs-reorder_imports_in_group-true.rs?ref=c0fae6a82a4cea3320f6e35432a4fc6bbad6b0f9", "patch": "@@ -0,0 +1,13 @@\n+// rustfmt-reorder_imports: true\n+// rustfmt-reorder_imports_in_group: true\n+// Reorder imports in group\n+\n+/// This comment should stay with `use std::mem;`\n+use std::mem;\n+use std::io;\n+\n+use lorem;\n+/// This comment should stay with `use ipsum;`\n+use ipsum;\n+use dolor;\n+use sit;"}, {"sha": "42778d91dd864903080f7e350ae72275c5505a9e", "filename": "tests/target/configs-reorder_imports_in_group-false.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/c0fae6a82a4cea3320f6e35432a4fc6bbad6b0f9/tests%2Ftarget%2Fconfigs-reorder_imports_in_group-false.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0fae6a82a4cea3320f6e35432a4fc6bbad6b0f9/tests%2Ftarget%2Fconfigs-reorder_imports_in_group-false.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-reorder_imports_in_group-false.rs?ref=c0fae6a82a4cea3320f6e35432a4fc6bbad6b0f9", "patch": "@@ -0,0 +1,13 @@\n+// rustfmt-reorder_imports: true\n+// rustfmt-reorder_imports_in_group: false\n+// Reorder imports in group\n+\n+use dolor;\n+/// This comment should stay with `use ipsum;`\n+use ipsum;\n+\n+use lorem;\n+use sit;\n+use std::io;\n+/// This comment should stay with `use std::mem;`\n+use std::mem;"}, {"sha": "c5e353662b50190aae13d08efc1be89966f73c18", "filename": "tests/target/configs-reorder_imports_in_group-true.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/c0fae6a82a4cea3320f6e35432a4fc6bbad6b0f9/tests%2Ftarget%2Fconfigs-reorder_imports_in_group-true.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0fae6a82a4cea3320f6e35432a4fc6bbad6b0f9/tests%2Ftarget%2Fconfigs-reorder_imports_in_group-true.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-reorder_imports_in_group-true.rs?ref=c0fae6a82a4cea3320f6e35432a4fc6bbad6b0f9", "patch": "@@ -0,0 +1,13 @@\n+// rustfmt-reorder_imports: true\n+// rustfmt-reorder_imports_in_group: true\n+// Reorder imports in group\n+\n+use std::io;\n+/// This comment should stay with `use std::mem;`\n+use std::mem;\n+\n+use dolor;\n+/// This comment should stay with `use ipsum;`\n+use ipsum;\n+use lorem;\n+use sit;"}]}