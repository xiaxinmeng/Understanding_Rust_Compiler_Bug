{"sha": "5db7c8642beb1cd4c09359c3f3266d67557a30f9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVkYjdjODY0MmJlYjFjZDRjMDkzNTljM2YzMjY2ZDY3NTU3YTMwZjk=", "commit": {"author": {"name": "Emil Lauridsen", "email": "mine809@gmail.com", "date": "2020-02-07T11:30:29Z"}, "committer": {"name": "Emil Lauridsen", "email": "mine809@gmail.com", "date": "2020-02-07T11:30:29Z"}, "message": "Don't crash when recieving unkown file for cargo diagnostic.", "tree": {"sha": "cbb5b49a71415dc4326fcfae43c57266881d1120", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cbb5b49a71415dc4326fcfae43c57266881d1120"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5db7c8642beb1cd4c09359c3f3266d67557a30f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5db7c8642beb1cd4c09359c3f3266d67557a30f9", "html_url": "https://github.com/rust-lang/rust/commit/5db7c8642beb1cd4c09359c3f3266d67557a30f9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5db7c8642beb1cd4c09359c3f3266d67557a30f9/comments", "author": {"login": "kiljacken", "id": 209321, "node_id": "MDQ6VXNlcjIwOTMyMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/209321?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kiljacken", "html_url": "https://github.com/kiljacken", "followers_url": "https://api.github.com/users/kiljacken/followers", "following_url": "https://api.github.com/users/kiljacken/following{/other_user}", "gists_url": "https://api.github.com/users/kiljacken/gists{/gist_id}", "starred_url": "https://api.github.com/users/kiljacken/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kiljacken/subscriptions", "organizations_url": "https://api.github.com/users/kiljacken/orgs", "repos_url": "https://api.github.com/users/kiljacken/repos", "events_url": "https://api.github.com/users/kiljacken/events{/privacy}", "received_events_url": "https://api.github.com/users/kiljacken/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kiljacken", "id": 209321, "node_id": "MDQ6VXNlcjIwOTMyMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/209321?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kiljacken", "html_url": "https://github.com/kiljacken", "followers_url": "https://api.github.com/users/kiljacken/followers", "following_url": "https://api.github.com/users/kiljacken/following{/other_user}", "gists_url": "https://api.github.com/users/kiljacken/gists{/gist_id}", "starred_url": "https://api.github.com/users/kiljacken/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kiljacken/subscriptions", "organizations_url": "https://api.github.com/users/kiljacken/orgs", "repos_url": "https://api.github.com/users/kiljacken/repos", "events_url": "https://api.github.com/users/kiljacken/events{/privacy}", "received_events_url": "https://api.github.com/users/kiljacken/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5aba5a756a19a54d5c4edd51d8055db36182688b", "url": "https://api.github.com/repos/rust-lang/rust/commits/5aba5a756a19a54d5c4edd51d8055db36182688b", "html_url": "https://github.com/rust-lang/rust/commit/5aba5a756a19a54d5c4edd51d8055db36182688b"}], "stats": {"total": 16, "additions": 10, "deletions": 6}, "files": [{"sha": "fcae37bb7d65906fcdacd220e7b62aeff5933dae", "filename": "crates/ra_lsp_server/src/main_loop.rs", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/5db7c8642beb1cd4c09359c3f3266d67557a30f9/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5db7c8642beb1cd4c09359c3f3266d67557a30f9/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs?ref=5db7c8642beb1cd4c09359c3f3266d67557a30f9", "patch": "@@ -635,12 +635,16 @@ fn on_check_task(\n \n         CheckTask::AddDiagnostic { url, diagnostic, fixes } => {\n             let path = url.to_file_path().map_err(|()| format!(\"invalid uri: {}\", url))?;\n-            let file_id = world_state\n-                .vfs\n-                .read()\n-                .path2file(&path)\n-                .map(|it| FileId(it.0))\n-                .ok_or_else(|| format!(\"unknown file: {}\", path.to_string_lossy()))?;\n+            let file_id = match world_state.vfs.read().path2file(&path) {\n+                Some(file) => FileId(file.0),\n+                None => {\n+                    log::error!(\n+                        \"File with cargo diagnostic not found in VFS: {}\",\n+                        path.to_string_lossy()\n+                    );\n+                    return Ok(());\n+                }\n+            };\n \n             task_sender\n                 .send(Task::Diagnostic(DiagnosticTask::AddCheck(file_id, diagnostic, fixes)))?;"}]}