{"sha": "25f8f4cf953975dba37051ac1565e4999418c996", "node_id": "C_kwDOAAsO6NoAKDI1ZjhmNGNmOTUzOTc1ZGJhMzcwNTFhYzE1NjVlNDk5OTQxOGM5OTY", "commit": {"author": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2023-05-29T15:49:19Z"}, "committer": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2023-05-29T16:37:53Z"}, "message": "add FIXME", "tree": {"sha": "24b6ec4521dc35dc0605fc9915da0e7fef27113f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/24b6ec4521dc35dc0605fc9915da0e7fef27113f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/25f8f4cf953975dba37051ac1565e4999418c996", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/25f8f4cf953975dba37051ac1565e4999418c996", "html_url": "https://github.com/rust-lang/rust/commit/25f8f4cf953975dba37051ac1565e4999418c996", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/25f8f4cf953975dba37051ac1565e4999418c996/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b5732508dd4b2a855a61cab77d75c1fa612324eb", "url": "https://api.github.com/repos/rust-lang/rust/commits/b5732508dd4b2a855a61cab77d75c1fa612324eb", "html_url": "https://github.com/rust-lang/rust/commit/b5732508dd4b2a855a61cab77d75c1fa612324eb"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "3e474c1d377e64001146ecd617624b1b672b2347", "filename": "compiler/rustc_middle/src/mir/syntax.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/25f8f4cf953975dba37051ac1565e4999418c996/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fsyntax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25f8f4cf953975dba37051ac1565e4999418c996/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fsyntax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fsyntax.rs?ref=25f8f4cf953975dba37051ac1565e4999418c996", "patch": "@@ -220,6 +220,11 @@ pub enum BorrowKind {\n     /// immutable, but not aliasable. This solves the problem. For\n     /// simplicity, we don't give users the way to express this\n     /// borrow, it's just used when translating closures.\n+    ///\n+    // FIXME(#112072): This is wrong. Unique borrows are mutable borrows except\n+    // that they do not require their pointee to be marked as a mutable.\n+    // They should still be treated as mutable borrows in every other way,\n+    // e.g. for variance or overlap checking.\n     Unique,\n \n     /// Data is mutable and not aliasable."}]}