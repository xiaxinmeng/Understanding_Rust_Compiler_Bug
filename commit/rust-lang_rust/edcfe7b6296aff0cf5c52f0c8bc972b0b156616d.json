{"sha": "edcfe7b6296aff0cf5c52f0c8bc972b0b156616d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVkY2ZlN2I2Mjk2YWZmMGNmNWM1MmYwYzhiYzk3MmIwYjE1NjYxNmQ=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2021-01-11T22:59:06Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-01-11T22:59:06Z"}, "message": "Rollup merge of #79998 - devsnek:wasm32-bindgen-compat, r=alexcrichton\n\nUse correct ABI for wasm32 by default\n\nIntroduces `wasm32-unknown-bindgen` for those wishing to use the bindgen compat abi. `wasm32-*` now uses the correct abi by default.\n\nFixes https://github.com/rustwasm/team/issues/291", "tree": {"sha": "db329f49c71a8dd69a5b6b126c26437050063089", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/db329f49c71a8dd69a5b6b126c26437050063089"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/edcfe7b6296aff0cf5c52f0c8bc972b0b156616d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJf/Ng6CRBK7hj4Ov3rIwAAdHIIABU1hUPsxbhrD5G1Eb1jkZQT\nSW1OzRSGoS1Q5Hwy+9siuALx8EMHwGZdJLSZi3tooZFqk6UBNyeeodL3YPBdhJZt\nfC38jRaefzEtUQO67U2kI72TUYiiBbBXrQ1wimxhqYisqhuYloznT8rtoczlz7eK\nCezlUQ/q2SmYFnoY99n7vbWsl2imO29aMntyZlXFl9x3mNoraYo0KonIg5gQokGR\n5IkZgrtjXUAxWGhJSusWSEiQ8aiFRI6n2p1F0Er7xeGIM6kW6hKqJx7km1nqvfiH\nipBoaTaSYybLD7eYXR2izD+eQusGyzkE3H5+xKMljzeu7Hf0HfUDL7PumqJVg2U=\n=DQQR\n-----END PGP SIGNATURE-----\n", "payload": "tree db329f49c71a8dd69a5b6b126c26437050063089\nparent 1d83f9828f9dfb5d752c8f0e3e71a9029a917de7\nparent 5ba3be1d60618fcd7fb819fdee4590ec048f190f\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1610405946 +0900\ncommitter GitHub <noreply@github.com> 1610405946 +0900\n\nRollup merge of #79998 - devsnek:wasm32-bindgen-compat, r=alexcrichton\n\nUse correct ABI for wasm32 by default\n\nIntroduces `wasm32-unknown-bindgen` for those wishing to use the bindgen compat abi. `wasm32-*` now uses the correct abi by default.\n\nFixes https://github.com/rustwasm/team/issues/291\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/edcfe7b6296aff0cf5c52f0c8bc972b0b156616d", "html_url": "https://github.com/rust-lang/rust/commit/edcfe7b6296aff0cf5c52f0c8bc972b0b156616d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/edcfe7b6296aff0cf5c52f0c8bc972b0b156616d/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1d83f9828f9dfb5d752c8f0e3e71a9029a917de7", "url": "https://api.github.com/repos/rust-lang/rust/commits/1d83f9828f9dfb5d752c8f0e3e71a9029a917de7", "html_url": "https://github.com/rust-lang/rust/commit/1d83f9828f9dfb5d752c8f0e3e71a9029a917de7"}, {"sha": "5ba3be1d60618fcd7fb819fdee4590ec048f190f", "url": "https://api.github.com/repos/rust-lang/rust/commits/5ba3be1d60618fcd7fb819fdee4590ec048f190f", "html_url": "https://github.com/rust-lang/rust/commit/5ba3be1d60618fcd7fb819fdee4590ec048f190f"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "a9e595d11e75976aec0b2e8bc039b4c187e858b6", "filename": "compiler/rustc_target/src/abi/call/mod.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/edcfe7b6296aff0cf5c52f0c8bc972b0b156616d/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/edcfe7b6296aff0cf5c52f0c8bc972b0b156616d/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Fmod.rs?ref=edcfe7b6296aff0cf5c52f0c8bc972b0b156616d", "patch": "@@ -605,10 +605,11 @@ impl<'a, Ty> FnAbi<'a, Ty> {\n             \"nvptx64\" => nvptx64::compute_abi_info(self),\n             \"hexagon\" => hexagon::compute_abi_info(self),\n             \"riscv32\" | \"riscv64\" => riscv::compute_abi_info(cx, self),\n-            \"wasm32\" if cx.target_spec().os != \"emscripten\" => {\n-                wasm32_bindgen_compat::compute_abi_info(self)\n-            }\n-            \"wasm32\" | \"asmjs\" => wasm32::compute_abi_info(cx, self),\n+            \"wasm32\" => match cx.target_spec().os.as_str() {\n+                \"emscripten\" | \"wasi\" => wasm32::compute_abi_info(cx, self),\n+                _ => wasm32_bindgen_compat::compute_abi_info(self),\n+            },\n+            \"asmjs\" => wasm32::compute_abi_info(cx, self),\n             a => return Err(format!(\"unrecognized arch \\\"{}\\\" in target specification\", a)),\n         }\n "}]}