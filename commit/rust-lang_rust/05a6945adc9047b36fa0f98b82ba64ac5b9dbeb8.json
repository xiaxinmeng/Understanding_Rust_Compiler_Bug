{"sha": "05a6945adc9047b36fa0f98b82ba64ac5b9dbeb8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA1YTY5NDVhZGM5MDQ3YjM2ZmEwZjk4YjgyYmE2NGFjNWI5ZGJlYjg=", "commit": {"author": {"name": "Bood Qian", "email": "bood@glowing.com", "date": "2017-02-17T00:39:58Z"}, "committer": {"name": "Bood Qian", "email": "bood@glowing.com", "date": "2017-02-17T00:39:58Z"}, "message": "Rust fmt", "tree": {"sha": "3c85a0030fc26a804f569273bdc16771ee0e39ec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3c85a0030fc26a804f569273bdc16771ee0e39ec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/05a6945adc9047b36fa0f98b82ba64ac5b9dbeb8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/05a6945adc9047b36fa0f98b82ba64ac5b9dbeb8", "html_url": "https://github.com/rust-lang/rust/commit/05a6945adc9047b36fa0f98b82ba64ac5b9dbeb8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/05a6945adc9047b36fa0f98b82ba64ac5b9dbeb8/comments", "author": null, "committer": null, "parents": [{"sha": "2f00ea3a0727a33b39ee0246accb6a941f0f804d", "url": "https://api.github.com/repos/rust-lang/rust/commits/2f00ea3a0727a33b39ee0246accb6a941f0f804d", "html_url": "https://github.com/rust-lang/rust/commit/2f00ea3a0727a33b39ee0246accb6a941f0f804d"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "ce5afb7eac8440e00c032d68e3a8a01d1bcb4793", "filename": "clippy_lints/src/types.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/05a6945adc9047b36fa0f98b82ba64ac5b9dbeb8/clippy_lints%2Fsrc%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/05a6945adc9047b36fa0f98b82ba64ac5b9dbeb8/clippy_lints%2Fsrc%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftypes.rs?ref=05a6945adc9047b36fa0f98b82ba64ac5b9dbeb8", "patch": "@@ -538,9 +538,10 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for CastPass {\n                             span_lint(cx,\n                                       UNNECESSARY_CAST,\n                                       expr.span,\n-                                      &format!(\"casting to the same type is unnecessary (`{}` -> `{}`)\", cast_from, cast_to));\n+                                      &format!(\"casting to the same type is unnecessary (`{}` -> `{}`)\",\n+                                               cast_from, cast_to));\n                         }\n-                    }\n+                    },\n                 }\n             }\n             if cast_from.is_numeric() && cast_to.is_numeric() && !in_external_macro(cx, expr.span) {"}]}