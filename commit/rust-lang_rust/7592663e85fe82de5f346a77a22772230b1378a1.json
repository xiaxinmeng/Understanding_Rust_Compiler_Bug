{"sha": "7592663e85fe82de5f346a77a22772230b1378a1", "node_id": "C_kwDOAAsO6NoAKDc1OTI2NjNlODVmZTgyZGU1ZjM0NmE3N2EyMjc3MjIzMGIxMzc4YTE", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "eddyb@lyken.rs", "date": "2022-01-23T23:11:37Z"}, "committer": {"name": "Eduard-Mihai Burtescu", "email": "eddyb@lyken.rs", "date": "2022-02-23T03:46:51Z"}, "message": "rustc_errors: add `downgrade_to_delayed_bug` to `Diagnostic` itself.", "tree": {"sha": "c5c43a6921f313a9147ecc36bca724b16540c287", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c5c43a6921f313a9147ecc36bca724b16540c287"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7592663e85fe82de5f346a77a22772230b1378a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7592663e85fe82de5f346a77a22772230b1378a1", "html_url": "https://github.com/rust-lang/rust/commit/7592663e85fe82de5f346a77a22772230b1378a1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7592663e85fe82de5f346a77a22772230b1378a1/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3572c542c29facef5073ba801213fb160c376b4a", "url": "https://api.github.com/repos/rust-lang/rust/commits/3572c542c29facef5073ba801213fb160c376b4a", "html_url": "https://github.com/rust-lang/rust/commit/3572c542c29facef5073ba801213fb160c376b4a"}], "stats": {"total": 18, "additions": 7, "deletions": 11}, "files": [{"sha": "d26bb8c20255b073b5ebd65b37ee8a6dcd51c137", "filename": "src/parse/session.rs", "status": "modified", "additions": 7, "deletions": 11, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/7592663e85fe82de5f346a77a22772230b1378a1/src%2Fparse%2Fsession.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7592663e85fe82de5f346a77a22772230b1378a1/src%2Fparse%2Fsession.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fparse%2Fsession.rs?ref=7592663e85fe82de5f346a77a22772230b1378a1", "patch": "@@ -60,7 +60,7 @@ impl Emitter for SilentOnIgnoredFilesEmitter {\n         None\n     }\n     fn emit_diagnostic(&mut self, db: &Diagnostic) {\n-        if db.level == DiagnosticLevel::Fatal {\n+        if db.level() == DiagnosticLevel::Fatal {\n             return self.handle_non_ignoreable_error(db);\n         }\n         if let Some(primary_span) = &db.span.primary_span() {\n@@ -292,7 +292,7 @@ mod tests {\n         use super::*;\n         use crate::config::IgnoreList;\n         use crate::utils::mk_sp;\n-        use rustc_span::{FileName as SourceMapFileName, MultiSpan, RealFileName, DUMMY_SP};\n+        use rustc_span::{FileName as SourceMapFileName, MultiSpan, RealFileName};\n         use std::path::PathBuf;\n         use std::sync::atomic::AtomicU32;\n \n@@ -310,16 +310,12 @@ mod tests {\n         }\n \n         fn build_diagnostic(level: DiagnosticLevel, span: Option<MultiSpan>) -> Diagnostic {\n-            Diagnostic {\n-                level,\n-                code: None,\n-                message: vec![],\n-                children: vec![],\n-                suggestions: Ok(vec![]),\n-                span: span.unwrap_or_else(MultiSpan::new),\n-                sort_span: DUMMY_SP,\n-                is_lint: false,\n+            let mut diag = Diagnostic::new(level, \"\");\n+            diag.message.clear();\n+            if let Some(span) = span {\n+                diag.span = span;\n             }\n+            diag\n         }\n \n         fn build_emitter("}]}