{"sha": "ec51d8fd037cbdfcee7fcf5dbada906451cd1633", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVjNTFkOGZkMDM3Y2JkZmNlZTdmY2Y1ZGJhZGE5MDY0NTFjZDE2MzM=", "commit": {"author": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2012-02-21T17:22:50Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-02-29T02:00:50Z"}, "message": "std: Add helpers to simplify making str io::writers", "tree": {"sha": "0d686a69fd8a30132789bf7c5d08ef12a71e5e51", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0d686a69fd8a30132789bf7c5d08ef12a71e5e51"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ec51d8fd037cbdfcee7fcf5dbada906451cd1633", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ec51d8fd037cbdfcee7fcf5dbada906451cd1633", "html_url": "https://github.com/rust-lang/rust/commit/ec51d8fd037cbdfcee7fcf5dbada906451cd1633", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ec51d8fd037cbdfcee7fcf5dbada906451cd1633/comments", "author": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b9948baf787e346e1684f530031adabb0c2a8532", "url": "https://api.github.com/repos/rust-lang/rust/commits/b9948baf787e346e1684f530031adabb0c2a8532", "html_url": "https://github.com/rust-lang/rust/commit/b9948baf787e346e1684f530031adabb0c2a8532"}], "stats": {"total": 13, "additions": 13, "deletions": 0}, "files": [{"sha": "253853c676292254579132e25a5b09d2ee9c3989", "filename": "src/libstd/io.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/ec51d8fd037cbdfcee7fcf5dbada906451cd1633/src%2Flibstd%2Fio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec51d8fd037cbdfcee7fcf5dbada906451cd1633/src%2Flibstd%2Fio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio.rs?ref=ec51d8fd037cbdfcee7fcf5dbada906451cd1633", "patch": "@@ -508,6 +508,19 @@ fn mem_buffer_buf(b: mem_buffer) -> [u8] { vec::from_mut(b.buf) }\n fn mem_buffer_str(b: mem_buffer) -> str {\n    let b_ = vec::from_mut(b.buf);\n    str::from_bytes(b_)\n+\n+fn with_str_writer(f: fn(writer)) -> str {\n+    let buf = mk_mem_buffer();\n+    let wr = mem_buffer_writer(buf);\n+    f(wr);\n+    io::mem_buffer_str(buf)\n+}\n+\n+fn with_buf_writer(f: fn(writer)) -> [u8] {\n+    let buf = mk_mem_buffer();\n+    let wr = mem_buffer_writer(buf);\n+    f(wr);\n+    io::mem_buffer_buf(buf)\n }\n \n // Utility functions"}]}