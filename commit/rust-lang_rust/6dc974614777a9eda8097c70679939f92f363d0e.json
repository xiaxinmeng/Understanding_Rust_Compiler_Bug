{"sha": "6dc974614777a9eda8097c70679939f92f363d0e", "node_id": "C_kwDOAAsO6NoAKDZkYzk3NDYxNDc3N2E5ZWRhODA5N2M3MDY3OTkzOWY5MmYzNjNkMGU", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-07-14T13:42:09Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-07-14T13:42:09Z"}, "message": "Auto merge of #95956 - yaahc:stable-in-unstable, r=cjgillot\n\nSupport unstable moves via stable in unstable items\n\npart of https://rust-lang.zulipchat.com/#narrow/stream/131828-t-compiler/topic/moving.20items.20to.20core.20unstably and a blocker of https://github.com/rust-lang/rust/pull/90328.\n\nThe libs-api team needs the ability to move an already stable item to a new location unstably, in this case for Error in core. Otherwise these changes are insta-stable making them much harder to merge.\n\nThis PR attempts to solve the problem by checking the stability of path segments as well as the last item in the path itself, which is currently the only thing checked.", "tree": {"sha": "f4dbd65962db9a52d6a374aac2274b2c00d02916", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f4dbd65962db9a52d6a374aac2274b2c00d02916"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6dc974614777a9eda8097c70679939f92f363d0e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6dc974614777a9eda8097c70679939f92f363d0e", "html_url": "https://github.com/rust-lang/rust/commit/6dc974614777a9eda8097c70679939f92f363d0e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6dc974614777a9eda8097c70679939f92f363d0e/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c9a78ee274fe80df4c9d53f69c5bf63d64f6356a", "url": "https://api.github.com/repos/rust-lang/rust/commits/c9a78ee274fe80df4c9d53f69c5bf63d64f6356a", "html_url": "https://github.com/rust-lang/rust/commit/c9a78ee274fe80df4c9d53f69c5bf63d64f6356a"}, {"sha": "d053a3dae0dd7cf1cd22b7ff6d2b0c0200036766", "url": "https://api.github.com/repos/rust-lang/rust/commits/d053a3dae0dd7cf1cd22b7ff6d2b0c0200036766", "html_url": "https://github.com/rust-lang/rust/commit/d053a3dae0dd7cf1cd22b7ff6d2b0c0200036766"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "3bf75bcbee83e85d779b96ba2478d91b76d96450", "filename": "clippy_utils/src/qualify_min_const_fn.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6dc974614777a9eda8097c70679939f92f363d0e/clippy_utils%2Fsrc%2Fqualify_min_const_fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6dc974614777a9eda8097c70679939f92f363d0e/clippy_utils%2Fsrc%2Fqualify_min_const_fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Fqualify_min_const_fn.rs?ref=6dc974614777a9eda8097c70679939f92f363d0e", "patch": "@@ -354,7 +354,7 @@ fn check_terminator<'a, 'tcx>(\n fn is_const_fn(tcx: TyCtxt<'_>, def_id: DefId, msrv: Option<RustcVersion>) -> bool {\n     tcx.is_const_fn(def_id)\n         && tcx.lookup_const_stability(def_id).map_or(true, |const_stab| {\n-            if let rustc_attr::StabilityLevel::Stable { since } = const_stab.level {\n+            if let rustc_attr::StabilityLevel::Stable { since, .. } = const_stab.level {\n                 // Checking MSRV is manually necessary because `rustc` has no such concept. This entire\n                 // function could be removed if `rustc` provided a MSRV-aware version of `is_const_fn`.\n                 // as a part of an unimplemented MSRV check https://github.com/rust-lang/rust/issues/65262."}]}