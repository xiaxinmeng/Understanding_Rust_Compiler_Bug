{"sha": "435aca1c8f06c184099d71841e85462603aecb56", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQzNWFjYTFjOGYwNmMxODQwOTlkNzE4NDFlODU0NjI2MDNhZWNiNTY=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-11-06T07:21:06Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-11-06T09:08:21Z"}, "message": "Rollup merge of #55664 - varkor:all-possible-cases-message, r=zackmdavis\n\nMake \"all possible cases\" help message uniform with existing help messages\n\nSpecifically no capitalisation or trailing full stops.", "tree": {"sha": "fedf65dd622d9dca9239e092d910bccf1f9551af", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fedf65dd622d9dca9239e092d910bccf1f9551af"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/435aca1c8f06c184099d71841e85462603aecb56", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZ1R8CLMp8f2GxWoQ/vbIBR0OATwFAlvhWgYACgkQ/vbIBR0O\nATyDuw/+L27dPovefXvQ6dR+9FBsRMZJVotXd/zhOc/kfuQq12k9JMZ7EJmCpkQA\nwGqQ9x4n29lI0a8tmQxcUKwz5XRImXKyCn/p8I3ErEPmILfPteiHEsZh0zl30O43\nnkEvBu28rFfIAFa1tqBq81cyxXLS1UKcivJVsgCizoMpqcPK1DNdrMook4Gs5yPh\nlQvg7C5TXpb3SZaT/U7rlx3sKapRIku9UZFfEqyeMUCaCkZ/6cUL2hnQZLzPaj8n\nOlIzE1BPE5SAwuyEkhzHs3a5uuhzpYW4RuXxbv3pjjZ0bEMM4z/tnB53OorU0tJU\nJJJnvrdyxc/ClRj4Z4SmvamSld/B8+BZxZDxYaMqcWbFIcR5imrASlR+lzyP3RjO\n7BK1786kPOI39+LwnBUtbmQ0j3nJ87xd7qgmcxhZIefdo6WkxRHJFFm0ihglbcE8\nwoDf0gFsIlxH/HNaPU1ge0C+z0pEQRjqPrVHMpDOJyXy5mOUVKtfCDL5WJdIVDyL\nkZaYkb1fNWvzIu9AIi7fsBji+q9INADSwQqYfOOspD+m9y0/crj+UElkDcg0TVOK\n11CjgO7CpJcM3GMK9g+dPDMX7ci9X2P/E21luxtne6kjmi2Gngt1xJaGfSuHm7U4\nxuCYSCr/MAlMkV2OBuC7fAIg6z5mhBjw/eL16DrwLulNYJK0FN8=\n=GOR6\n-----END PGP SIGNATURE-----", "payload": "tree fedf65dd622d9dca9239e092d910bccf1f9551af\nparent 225df14095902cde27679685fee3978fa374e1d4\nparent 8277ba2d30996067c39ee3405bd141b11ffdb855\nauthor kennytm <kennytm@gmail.com> 1541488866 +0800\ncommitter kennytm <kennytm@gmail.com> 1541495301 +0800\n\nRollup merge of #55664 - varkor:all-possible-cases-message, r=zackmdavis\n\nMake \"all possible cases\" help message uniform with existing help messages\n\nSpecifically no capitalisation or trailing full stops.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/435aca1c8f06c184099d71841e85462603aecb56", "html_url": "https://github.com/rust-lang/rust/commit/435aca1c8f06c184099d71841e85462603aecb56", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/435aca1c8f06c184099d71841e85462603aecb56/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "225df14095902cde27679685fee3978fa374e1d4", "url": "https://api.github.com/repos/rust-lang/rust/commits/225df14095902cde27679685fee3978fa374e1d4", "html_url": "https://github.com/rust-lang/rust/commit/225df14095902cde27679685fee3978fa374e1d4"}, {"sha": "8277ba2d30996067c39ee3405bd141b11ffdb855", "url": "https://api.github.com/repos/rust-lang/rust/commits/8277ba2d30996067c39ee3405bd141b11ffdb855", "html_url": "https://github.com/rust-lang/rust/commit/8277ba2d30996067c39ee3405bd141b11ffdb855"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "735ceef229a22f36ba4986e5d28931a98e6da968", "filename": "src/librustc_mir/hair/pattern/check_match.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/435aca1c8f06c184099d71841e85462603aecb56/src%2Flibrustc_mir%2Fhair%2Fpattern%2Fcheck_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/435aca1c8f06c184099d71841e85462603aecb56/src%2Flibrustc_mir%2Fhair%2Fpattern%2Fcheck_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fhair%2Fpattern%2Fcheck_match.rs?ref=435aca1c8f06c184099d71841e85462603aecb56", "patch": "@@ -238,8 +238,8 @@ impl<'a, 'tcx> MatchVisitor<'a, 'tcx> {\n                                                         is non-empty\",\n                                                        pat_ty));\n                     span_help!(&mut err, scrut.span,\n-                               \"Please ensure that all possible cases are being handled; \\\n-                                possibly adding wildcards or more match arms.\");\n+                               \"ensure that all possible cases are being handled, \\\n+                                possibly by adding wildcards or more match arms\");\n                     err.emit();\n                 }\n                 // If the type *is* uninhabited, it's vacuously exhaustive"}, {"sha": "900812787bcf7debe389d41ab08db9cb9f33d8d0", "filename": "src/test/ui/error-codes/E0004-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/435aca1c8f06c184099d71841e85462603aecb56/src%2Ftest%2Fui%2Ferror-codes%2FE0004-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/435aca1c8f06c184099d71841e85462603aecb56/src%2Ftest%2Fui%2Ferror-codes%2FE0004-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0004-2.stderr?ref=435aca1c8f06c184099d71841e85462603aecb56", "patch": "@@ -4,7 +4,7 @@ error[E0004]: non-exhaustive patterns: type std::option::Option<i32> is non-empt\n LL |     match x { } //~ ERROR E0004\n    |           ^\n    |\n-help: Please ensure that all possible cases are being handled; possibly adding wildcards or more match arms.\n+help: ensure that all possible cases are being handled, possibly by adding wildcards or more match arms\n   --> $DIR/E0004-2.rs:14:11\n    |\n LL |     match x { } //~ ERROR E0004"}, {"sha": "b2bfe6b5e8c0778b854feb39d74e5b40cdd0b190", "filename": "src/test/ui/issues/issue-3096-1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/435aca1c8f06c184099d71841e85462603aecb56/src%2Ftest%2Fui%2Fissues%2Fissue-3096-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/435aca1c8f06c184099d71841e85462603aecb56/src%2Ftest%2Fui%2Fissues%2Fissue-3096-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-3096-1.stderr?ref=435aca1c8f06c184099d71841e85462603aecb56", "patch": "@@ -4,7 +4,7 @@ error[E0004]: non-exhaustive patterns: type () is non-empty\n LL |     match () { } //~ ERROR non-exhaustive\n    |           ^^\n    |\n-help: Please ensure that all possible cases are being handled; possibly adding wildcards or more match arms.\n+help: ensure that all possible cases are being handled, possibly by adding wildcards or more match arms\n   --> $DIR/issue-3096-1.rs:12:11\n    |\n LL |     match () { } //~ ERROR non-exhaustive"}, {"sha": "bb9dfabe7be0338189591ce1461364200135c1c2", "filename": "src/test/ui/issues/issue-3096-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/435aca1c8f06c184099d71841e85462603aecb56/src%2Ftest%2Fui%2Fissues%2Fissue-3096-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/435aca1c8f06c184099d71841e85462603aecb56/src%2Ftest%2Fui%2Fissues%2Fissue-3096-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-3096-2.stderr?ref=435aca1c8f06c184099d71841e85462603aecb56", "patch": "@@ -4,7 +4,7 @@ error[E0004]: non-exhaustive patterns: type *const bottom is non-empty\n LL |     match x { } //~ ERROR non-exhaustive patterns\n    |           ^\n    |\n-help: Please ensure that all possible cases are being handled; possibly adding wildcards or more match arms.\n+help: ensure that all possible cases are being handled, possibly by adding wildcards or more match arms\n   --> $DIR/issue-3096-2.rs:15:11\n    |\n LL |     match x { } //~ ERROR non-exhaustive patterns"}, {"sha": "83fd736a997a98ff686b277e885c5afd6f7b9974", "filename": "src/test/ui/uninhabited/uninhabited-matches-feature-gated.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/435aca1c8f06c184099d71841e85462603aecb56/src%2Ftest%2Fui%2Funinhabited%2Funinhabited-matches-feature-gated.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/435aca1c8f06c184099d71841e85462603aecb56/src%2Ftest%2Fui%2Funinhabited%2Funinhabited-matches-feature-gated.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funinhabited%2Funinhabited-matches-feature-gated.stderr?ref=435aca1c8f06c184099d71841e85462603aecb56", "patch": "@@ -10,7 +10,7 @@ error[E0004]: non-exhaustive patterns: type &Void is non-empty\n LL |     let _ = match x {}; //~ ERROR non-exhaustive\n    |                   ^\n    |\n-help: Please ensure that all possible cases are being handled; possibly adding wildcards or more match arms.\n+help: ensure that all possible cases are being handled, possibly by adding wildcards or more match arms\n   --> $DIR/uninhabited-matches-feature-gated.rs:20:19\n    |\n LL |     let _ = match x {}; //~ ERROR non-exhaustive\n@@ -22,7 +22,7 @@ error[E0004]: non-exhaustive patterns: type (Void,) is non-empty\n LL |     let _ = match x {}; //~ ERROR non-exhaustive\n    |                   ^\n    |\n-help: Please ensure that all possible cases are being handled; possibly adding wildcards or more match arms.\n+help: ensure that all possible cases are being handled, possibly by adding wildcards or more match arms\n   --> $DIR/uninhabited-matches-feature-gated.rs:23:19\n    |\n LL |     let _ = match x {}; //~ ERROR non-exhaustive\n@@ -34,7 +34,7 @@ error[E0004]: non-exhaustive patterns: type [Void; 1] is non-empty\n LL |     let _ = match x {}; //~ ERROR non-exhaustive\n    |                   ^\n    |\n-help: Please ensure that all possible cases are being handled; possibly adding wildcards or more match arms.\n+help: ensure that all possible cases are being handled, possibly by adding wildcards or more match arms\n   --> $DIR/uninhabited-matches-feature-gated.rs:26:19\n    |\n LL |     let _ = match x {}; //~ ERROR non-exhaustive"}]}