{"sha": "830c98d7fa4da9381d3ee9c8b918bc5dff11c378", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgzMGM5OGQ3ZmE0ZGE5MzgxZDNlZTljOGI5MThiYzVkZmYxMWMzNzg=", "commit": {"author": {"name": "gnzlbg", "email": "gonzalobg88@gmail.com", "date": "2019-03-16T17:07:58Z"}, "committer": {"name": "gnzlbg", "email": "gonzalobg88@gmail.com", "date": "2019-03-21T13:23:29Z"}, "message": "Fix undefined behavior in hint::spin_loop for x86 targets without SSE2\n\nThe pause instruction requires SSE2 but was being unconditionally used\non targets without it, resulting in undefined behavior.\n\nThis PR fixes that by only using the pause intrinsic if SSE2 is available.\n\nIt also removes the inline assembly which was not required since these\ninstructions are available in core::arch, and extends support of\nthe spin_loop hint to arm targets with the v6 feature which also\nsupport the yield instruction.\n\nCloses #59237 .", "tree": {"sha": "eaa621dc760f9c9b704330912775c4b22835a960", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eaa621dc760f9c9b704330912775c4b22835a960"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/830c98d7fa4da9381d3ee9c8b918bc5dff11c378", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/830c98d7fa4da9381d3ee9c8b918bc5dff11c378", "html_url": "https://github.com/rust-lang/rust/commit/830c98d7fa4da9381d3ee9c8b918bc5dff11c378", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/830c98d7fa4da9381d3ee9c8b918bc5dff11c378/comments", "author": {"login": "gnzlbg", "id": 904614, "node_id": "MDQ6VXNlcjkwNDYxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/904614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnzlbg", "html_url": "https://github.com/gnzlbg", "followers_url": "https://api.github.com/users/gnzlbg/followers", "following_url": "https://api.github.com/users/gnzlbg/following{/other_user}", "gists_url": "https://api.github.com/users/gnzlbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnzlbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnzlbg/subscriptions", "organizations_url": "https://api.github.com/users/gnzlbg/orgs", "repos_url": "https://api.github.com/users/gnzlbg/repos", "events_url": "https://api.github.com/users/gnzlbg/events{/privacy}", "received_events_url": "https://api.github.com/users/gnzlbg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "gnzlbg", "id": 904614, "node_id": "MDQ6VXNlcjkwNDYxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/904614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnzlbg", "html_url": "https://github.com/gnzlbg", "followers_url": "https://api.github.com/users/gnzlbg/followers", "following_url": "https://api.github.com/users/gnzlbg/following{/other_user}", "gists_url": "https://api.github.com/users/gnzlbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnzlbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnzlbg/subscriptions", "organizations_url": "https://api.github.com/users/gnzlbg/orgs", "repos_url": "https://api.github.com/users/gnzlbg/repos", "events_url": "https://api.github.com/users/gnzlbg/events{/privacy}", "received_events_url": "https://api.github.com/users/gnzlbg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "52e885628e4317aa3f158622435927eb29b812e9", "url": "https://api.github.com/repos/rust-lang/rust/commits/52e885628e4317aa3f158622435927eb29b812e9", "html_url": "https://github.com/rust-lang/rust/commit/52e885628e4317aa3f158622435927eb29b812e9"}], "stats": {"total": 31, "additions": 25, "deletions": 6}, "files": [{"sha": "b2f82ef0d175ccf3124b89728a1e292aeb0895b4", "filename": "src/libcore/hint.rs", "status": "modified", "additions": 25, "deletions": 6, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/830c98d7fa4da9381d3ee9c8b918bc5dff11c378/src%2Flibcore%2Fhint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/830c98d7fa4da9381d3ee9c8b918bc5dff11c378/src%2Flibcore%2Fhint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fhint.rs?ref=830c98d7fa4da9381d3ee9c8b918bc5dff11c378", "patch": "@@ -62,13 +62,32 @@ pub unsafe fn unreachable_unchecked() -> ! {\n #[inline]\n #[unstable(feature = \"renamed_spin_loop\", issue = \"55002\")]\n pub fn spin_loop() {\n-    #[cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))]\n-    unsafe {\n-        asm!(\"pause\" ::: \"memory\" : \"volatile\");\n+    #[cfg(\n+        all(\n+            any(target_arch = \"x86\", target_arch = \"x86_64\"),\n+            target_feature = \"sse2\"\n+        )\n+    )] {\n+        #[cfg(target_arch = \"x86\")] {\n+            unsafe { crate::arch::x86::_mm_pause() };\n+        }\n+\n+        #[cfg(target_arch = \"x86_64\")] {\n+            unsafe { crate::arch::x86_64::_mm_pause() };\n+        }\n     }\n \n-    #[cfg(target_arch = \"aarch64\")]\n-    unsafe {\n-        asm!(\"yield\" ::: \"memory\" : \"volatile\");\n+    #[cfg(\n+        any(\n+            target_arch = \"aarch64\",\n+            all(target_arch = \"arm\", target_feature = \"v6\")\n+        )\n+    )] {\n+        #[cfg(target_arch = \"aarch64\")] {\n+            unsafe { crate::arch::aarch64::__yield() };\n+        }\n+        #[cfg(target_arch = \"arm\")] {\n+            unsafe { crate::arch::arm::__yield() };\n+        }\n     }\n }"}]}