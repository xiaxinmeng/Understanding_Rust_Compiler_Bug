{"sha": "d2f93fd290f6ab7cd1b0b0af78487c25aec0db89", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQyZjkzZmQyOTBmNmFiN2NkMWIwYjBhZjc4NDg3YzI1YWVjMGRiODk=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-11-13T19:16:19Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-11-13T19:16:19Z"}, "message": "whitespace police", "tree": {"sha": "5a9afe9943c00f5d8fe464fee339ffa99ed2c4c2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5a9afe9943c00f5d8fe464fee339ffa99ed2c4c2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d2f93fd290f6ab7cd1b0b0af78487c25aec0db89", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d2f93fd290f6ab7cd1b0b0af78487c25aec0db89", "html_url": "https://github.com/rust-lang/rust/commit/d2f93fd290f6ab7cd1b0b0af78487c25aec0db89", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d2f93fd290f6ab7cd1b0b0af78487c25aec0db89/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ac0fd0ddc9bc795b30dc4ecaaf1c01b5eebdfd4b", "url": "https://api.github.com/repos/rust-lang/rust/commits/ac0fd0ddc9bc795b30dc4ecaaf1c01b5eebdfd4b", "html_url": "https://github.com/rust-lang/rust/commit/ac0fd0ddc9bc795b30dc4ecaaf1c01b5eebdfd4b"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "6aacab13ed464215c2d7296a418649808363558d", "filename": "src/librustc/middle/trans/deriving.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d2f93fd290f6ab7cd1b0b0af78487c25aec0db89/src%2Flibrustc%2Fmiddle%2Ftrans%2Fderiving.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2f93fd290f6ab7cd1b0b0af78487c25aec0db89/src%2Flibrustc%2Fmiddle%2Ftrans%2Fderiving.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fderiving.rs?ref=d2f93fd290f6ab7cd1b0b0af78487c25aec0db89", "patch": "@@ -23,8 +23,8 @@ use syntax::ast_util::local_def;\n \n /// The kind of deriving method this is.\n enum DerivingKind {\n-\tBoolKind,\t// fn f(&self, other: &other) -> bool\n-\tUnitKind,\t// fn f(&self) -> ()\n+    BoolKind,\t// fn f(&self, other: &other) -> bool\n+    UnitKind,\t// fn f(&self) -> ()\n }\n \n impl DerivingKind {"}]}