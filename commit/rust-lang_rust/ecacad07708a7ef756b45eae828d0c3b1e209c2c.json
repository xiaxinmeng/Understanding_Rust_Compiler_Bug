{"sha": "ecacad07708a7ef756b45eae828d0c3b1e209c2c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVjYWNhZDA3NzA4YTdlZjc1NmI0NWVhZTgyOGQwYzNiMWUyMDljMmM=", "commit": {"author": {"name": "Alexander Regueiro", "email": "alexreg@me.com", "date": "2018-12-03T00:56:08Z"}, "committer": {"name": "Alexander Regueiro", "email": "alexreg@me.com", "date": "2018-12-26T21:27:08Z"}, "message": "Added tests for feature.", "tree": {"sha": "d761fec7f43d469b652d8c0e5782cfe7e0ed8485", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d761fec7f43d469b652d8c0e5782cfe7e0ed8485"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ecacad07708a7ef756b45eae828d0c3b1e209c2c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ecacad07708a7ef756b45eae828d0c3b1e209c2c", "html_url": "https://github.com/rust-lang/rust/commit/ecacad07708a7ef756b45eae828d0c3b1e209c2c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ecacad07708a7ef756b45eae828d0c3b1e209c2c/comments", "author": {"login": "alexreg", "id": 67036, "node_id": "MDQ6VXNlcjY3MDM2", "avatar_url": "https://avatars.githubusercontent.com/u/67036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexreg", "html_url": "https://github.com/alexreg", "followers_url": "https://api.github.com/users/alexreg/followers", "following_url": "https://api.github.com/users/alexreg/following{/other_user}", "gists_url": "https://api.github.com/users/alexreg/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexreg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexreg/subscriptions", "organizations_url": "https://api.github.com/users/alexreg/orgs", "repos_url": "https://api.github.com/users/alexreg/repos", "events_url": "https://api.github.com/users/alexreg/events{/privacy}", "received_events_url": "https://api.github.com/users/alexreg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexreg", "id": 67036, "node_id": "MDQ6VXNlcjY3MDM2", "avatar_url": "https://avatars.githubusercontent.com/u/67036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexreg", "html_url": "https://github.com/alexreg", "followers_url": "https://api.github.com/users/alexreg/followers", "following_url": "https://api.github.com/users/alexreg/following{/other_user}", "gists_url": "https://api.github.com/users/alexreg/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexreg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexreg/subscriptions", "organizations_url": "https://api.github.com/users/alexreg/orgs", "repos_url": "https://api.github.com/users/alexreg/repos", "events_url": "https://api.github.com/users/alexreg/events{/privacy}", "received_events_url": "https://api.github.com/users/alexreg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c77fdbf2ebfa6a2f17017c38eebf18b4a802336a", "url": "https://api.github.com/repos/rust-lang/rust/commits/c77fdbf2ebfa6a2f17017c38eebf18b4a802336a", "html_url": "https://github.com/rust-lang/rust/commit/c77fdbf2ebfa6a2f17017c38eebf18b4a802336a"}], "stats": {"total": 146, "additions": 146, "deletions": 0}, "files": [{"sha": "0cf413babcbf658f38ba1975fa0093d3eedafcac", "filename": "src/test/run-pass/type-alias-enum-variants.rs", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/ecacad07708a7ef756b45eae828d0c3b1e209c2c/src%2Ftest%2Frun-pass%2Ftype-alias-enum-variants.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ecacad07708a7ef756b45eae828d0c3b1e209c2c/src%2Ftest%2Frun-pass%2Ftype-alias-enum-variants.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftype-alias-enum-variants.rs?ref=ecacad07708a7ef756b45eae828d0c3b1e209c2c", "patch": "@@ -0,0 +1,30 @@\n+#![feature(type_alias_enum_variants)]\n+\n+#[derive(Debug, PartialEq, Eq)]\n+enum Foo {\n+    Bar(i32),\n+    Baz { i: i32 },\n+}\n+\n+type FooAlias = Foo;\n+type OptionAlias = Option<i32>;\n+\n+impl Foo {\n+    fn foo() -> Self {\n+        Self::Bar(3)\n+    }\n+}\n+\n+fn main() {\n+    let t = FooAlias::Bar(1);\n+    assert_eq!(t, Foo::Bar(1));\n+    let t = FooAlias::Baz { i: 2 };\n+    assert_eq!(t, Foo::Baz { i: 2 });\n+    match t {\n+        FooAlias::Bar(_i) => {}\n+        FooAlias::Baz { i } => { assert_eq!(i, 2); }\n+    }\n+    assert_eq!(Foo::foo(), Foo::Bar(3));\n+\n+    assert_eq!(OptionAlias::Some(4), Option::Some(4));\n+}"}, {"sha": "39472af43fdb24979b9e8bc41a2b2d719edc91b5", "filename": "src/test/ui/feature-gates/feature-gate-type_alias_enum_variants.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/ecacad07708a7ef756b45eae828d0c3b1e209c2c/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-type_alias_enum_variants.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ecacad07708a7ef756b45eae828d0c3b1e209c2c/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-type_alias_enum_variants.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-type_alias_enum_variants.rs?ref=ecacad07708a7ef756b45eae828d0c3b1e209c2c", "patch": "@@ -0,0 +1,25 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+enum Foo {\n+    Bar(i32),\n+    Baz { i: i32 },\n+}\n+\n+type Alias = Foo;\n+\n+fn main() {\n+    let t = Alias::Bar(0);\n+    let t = Alias::Baz { i: 0 };\n+    match t {\n+        Alias::Bar(_i) => {}\n+        Alias::Baz { i: _i } => {}\n+    }\n+}"}, {"sha": "7dce09e483f9d07e03705123fc9c24a93b646128", "filename": "src/test/ui/feature-gates/feature-gate-type_alias_enum_variants.stderr", "status": "added", "additions": 72, "deletions": 0, "changes": 72, "blob_url": "https://github.com/rust-lang/rust/blob/ecacad07708a7ef756b45eae828d0c3b1e209c2c/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-type_alias_enum_variants.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ecacad07708a7ef756b45eae828d0c3b1e209c2c/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-type_alias_enum_variants.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-type_alias_enum_variants.stderr?ref=ecacad07708a7ef756b45eae828d0c3b1e209c2c", "patch": "@@ -0,0 +1,72 @@\n+error: type alias enum variants are not yet allowed\n+  --> $DIR/feature-gate-type_alias_enum_variants.rs:19:13\n+   |\n+LL |     let t = Alias::Bar(0);\n+   |             ^^^^^^^^^^\n+   |\n+   = help: add `#![feature(type_alias_enum_variants)]` to the crate attributes to enable\n+\n+error[E0599]: no variant named `Bar` found for type `Foo` in the current scope\n+  --> $DIR/feature-gate-type_alias_enum_variants.rs:19:20\n+   |\n+LL | enum Foo {\n+   | -------- variant `Bar` not found here\n+...\n+LL |     let t = Alias::Bar(0);\n+   |             -------^^^\n+   |             |\n+   |             variant not found in `Foo`\n+   |\n+   = help: did you mean `Bar`?\n+\n+error: type alias enum variants are not yet allowed\n+  --> $DIR/feature-gate-type_alias_enum_variants.rs:20:13\n+   |\n+LL |     let t = Alias::Baz { i: 0 };\n+   |             ^^^^^^^^^^\n+   |\n+   = help: add `#![feature(type_alias_enum_variants)]` to the crate attributes to enable\n+\n+error[E0223]: ambiguous associated type\n+  --> $DIR/feature-gate-type_alias_enum_variants.rs:20:13\n+   |\n+LL |     let t = Alias::Baz { i: 0 };\n+   |             ^^^^^^^^^^ help: use fully-qualified syntax: `<Foo as Trait>::Baz`\n+\n+error: type alias enum variants are not yet allowed\n+  --> $DIR/feature-gate-type_alias_enum_variants.rs:22:9\n+   |\n+LL |         Alias::Bar(_i) => {}\n+   |         ^^^^^^^^^^^^^^\n+   |\n+   = help: add `#![feature(type_alias_enum_variants)]` to the crate attributes to enable\n+\n+error[E0599]: no variant named `Bar` found for type `Foo` in the current scope\n+  --> $DIR/feature-gate-type_alias_enum_variants.rs:22:16\n+   |\n+LL | enum Foo {\n+   | -------- variant `Bar` not found here\n+...\n+LL |         Alias::Bar(_i) => {}\n+   |         -------^^^---- variant not found in `Foo`\n+   |\n+   = help: did you mean `Bar`?\n+\n+error: type alias enum variants are not yet allowed\n+  --> $DIR/feature-gate-type_alias_enum_variants.rs:23:9\n+   |\n+LL |         Alias::Baz { i: _i } => {}\n+   |         ^^^^^^^^^^\n+   |\n+   = help: add `#![feature(type_alias_enum_variants)]` to the crate attributes to enable\n+\n+error[E0223]: ambiguous associated type\n+  --> $DIR/feature-gate-type_alias_enum_variants.rs:23:9\n+   |\n+LL |         Alias::Baz { i: _i } => {}\n+   |         ^^^^^^^^^^ help: use fully-qualified syntax: `<Foo as Trait>::Baz`\n+\n+error: aborting due to 8 previous errors\n+\n+Some errors occurred: E0223, E0599.\n+For more information about an error, try `rustc --explain E0223`."}, {"sha": "8e5aaae0a9323e7d7cf26cddbda36e8578df3353", "filename": "src/test/ui/type-alias-enum-variants.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ecacad07708a7ef756b45eae828d0c3b1e209c2c/src%2Ftest%2Fui%2Ftype-alias-enum-variants.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ecacad07708a7ef756b45eae828d0c3b1e209c2c/src%2Ftest%2Fui%2Ftype-alias-enum-variants.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-enum-variants.rs?ref=ecacad07708a7ef756b45eae828d0c3b1e209c2c", "patch": "@@ -0,0 +1,10 @@\n+#![feature(type_alias_enum_variants)]\n+\n+type Alias<T> = Option<T>;\n+\n+fn main() {\n+    let _ = Option::<u8>::None; // OK\n+    let _ = Option::None::<u8>; // OK (Lint in future!)\n+    let _ = Alias::<u8>::None; // OK\n+    let _ = Alias::None::<u8>; // Error\n+}"}, {"sha": "e7003217c8d7cb33322c62a5b7c958764f2156a3", "filename": "src/test/ui/type-alias-enum-variants.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ecacad07708a7ef756b45eae828d0c3b1e209c2c/src%2Ftest%2Fui%2Ftype-alias-enum-variants.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ecacad07708a7ef756b45eae828d0c3b1e209c2c/src%2Ftest%2Fui%2Ftype-alias-enum-variants.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-enum-variants.stderr?ref=ecacad07708a7ef756b45eae828d0c3b1e209c2c", "patch": "@@ -0,0 +1,9 @@\n+error[E0109]: type parameters are not allowed on this type\n+  --> $DIR/type-alias-enum-variants.rs:9:27\n+   |\n+LL |     let _ = Alias::None::<u8>; // Error\n+   |                           ^^ type parameter not allowed\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0109`."}]}