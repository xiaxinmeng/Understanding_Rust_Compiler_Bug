{"sha": "e56a86162ceeb285c48132a103a6559f4d406ba7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU1NmE4NjE2MmNlZWIyODVjNDgxMzJhMTAzYTY1NTlmNGQ0MDZiYTc=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-12-22T20:42:50Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-12-23T13:54:37Z"}, "message": "Show `const_err` lints", "tree": {"sha": "adcb848a02c16dd3b14ff19ba1af1b7e4377fc48", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/adcb848a02c16dd3b14ff19ba1af1b7e4377fc48"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e56a86162ceeb285c48132a103a6559f4d406ba7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e56a86162ceeb285c48132a103a6559f4d406ba7", "html_url": "https://github.com/rust-lang/rust/commit/e56a86162ceeb285c48132a103a6559f4d406ba7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e56a86162ceeb285c48132a103a6559f4d406ba7/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2022fac4df5830a1a346f0174f189cc2894f7229", "url": "https://api.github.com/repos/rust-lang/rust/commits/2022fac4df5830a1a346f0174f189cc2894f7229", "html_url": "https://github.com/rust-lang/rust/commit/2022fac4df5830a1a346f0174f189cc2894f7229"}], "stats": {"total": 53, "additions": 45, "deletions": 8}, "files": [{"sha": "55f3f1c8488557b932272f265178905f012ab786", "filename": "src/test/ui/consts/miri_unleashed/const_refers_to_static.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e56a86162ceeb285c48132a103a6559f4d406ba7/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fconst_refers_to_static.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e56a86162ceeb285c48132a103a6559f4d406ba7/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fconst_refers_to_static.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fconst_refers_to_static.rs?ref=e56a86162ceeb285c48132a103a6559f4d406ba7", "patch": "@@ -1,5 +1,5 @@\n // compile-flags: -Zunleash-the-miri-inside-of-you\n-#![allow(const_err)]\n+#![warn(const_err)]\n \n #![feature(const_raw_ptr_deref)]\n \n@@ -14,19 +14,19 @@ const BOO: &usize = { //~ ERROR undefined behavior to use this value\n \n const FOO: usize = {\n     static FOO: AtomicUsize = AtomicUsize::new(0);\n-    FOO.fetch_add(1, Ordering::Relaxed) // FIXME: this should error\n+    FOO.fetch_add(1, Ordering::Relaxed) //~ WARN any use of this value will cause an error\n     //~^ WARN skipping const checks\n     //~| WARN skipping const checks\n };\n \n const BAR: usize = {\n     static FOO: AtomicUsize = AtomicUsize::new(0);\n-    unsafe { *(&FOO as *const _ as *const usize) } // FIXME: this should error\n+    unsafe { *(&FOO as *const _ as *const usize) } //~ WARN any use of this value will cause an err\n     //~^ WARN skipping const checks\n };\n \n static mut MUTABLE: u32 = 0;\n-const BAD: u32 = unsafe { MUTABLE }; // FIXME: this should error\n+const BAD: u32 = unsafe { MUTABLE }; //~ WARN any use of this value will cause an error\n //~^ WARN skipping const checks\n \n // ok some day perhaps"}, {"sha": "6ae88558d700399b8bd1fb7f016b9552c27b789a", "filename": "src/test/ui/consts/miri_unleashed/const_refers_to_static.stderr", "status": "modified", "additions": 41, "deletions": 4, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/e56a86162ceeb285c48132a103a6559f4d406ba7/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fconst_refers_to_static.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e56a86162ceeb285c48132a103a6559f4d406ba7/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fconst_refers_to_static.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fconst_refers_to_static.stderr?ref=e56a86162ceeb285c48132a103a6559f4d406ba7", "patch": "@@ -7,25 +7,25 @@ LL |     unsafe { &*(&FOO as *const _ as *const usize) }\n warning: skipping const checks\n   --> $DIR/const_refers_to_static.rs:17:5\n    |\n-LL |     FOO.fetch_add(1, Ordering::Relaxed) // FIXME: this should error\n+LL |     FOO.fetch_add(1, Ordering::Relaxed)\n    |     ^^^\n \n warning: skipping const checks\n   --> $DIR/const_refers_to_static.rs:17:5\n    |\n-LL |     FOO.fetch_add(1, Ordering::Relaxed) // FIXME: this should error\n+LL |     FOO.fetch_add(1, Ordering::Relaxed)\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: skipping const checks\n   --> $DIR/const_refers_to_static.rs:24:17\n    |\n-LL |     unsafe { *(&FOO as *const _ as *const usize) } // FIXME: this should error\n+LL |     unsafe { *(&FOO as *const _ as *const usize) }\n    |                 ^^^\n \n warning: skipping const checks\n   --> $DIR/const_refers_to_static.rs:29:27\n    |\n-LL | const BAD: u32 = unsafe { MUTABLE }; // FIXME: this should error\n+LL | const BAD: u32 = unsafe { MUTABLE };\n    |                           ^^^^^^^\n \n warning: skipping const checks\n@@ -46,6 +46,43 @@ LL | | };\n    |\n    = note: The rules on what exactly is undefined behavior aren't clear, so this check might be overzealous. Please open an issue on the rustc repository if you believe it should not be considered undefined behavior.\n \n+warning: any use of this value will cause an error\n+  --> $DIR/const_refers_to_static.rs:17:5\n+   |\n+LL | / const FOO: usize = {\n+LL | |     static FOO: AtomicUsize = AtomicUsize::new(0);\n+LL | |     FOO.fetch_add(1, Ordering::Relaxed)\n+   | |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ calling non-const function `std::sync::atomic::AtomicUsize::fetch_add`\n+LL | |\n+LL | |\n+LL | | };\n+   | |__-\n+   |\n+note: lint level defined here\n+  --> $DIR/const_refers_to_static.rs:2:9\n+   |\n+LL | #![warn(const_err)]\n+   |         ^^^^^^^^^\n+\n+warning: any use of this value will cause an error\n+  --> $DIR/const_refers_to_static.rs:24:14\n+   |\n+LL | / const BAR: usize = {\n+LL | |     static FOO: AtomicUsize = AtomicUsize::new(0);\n+LL | |     unsafe { *(&FOO as *const _ as *const usize) }\n+   | |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ constant accesses static\n+LL | |\n+LL | | };\n+   | |__-\n+\n+warning: any use of this value will cause an error\n+  --> $DIR/const_refers_to_static.rs:29:27\n+   |\n+LL | const BAD: u32 = unsafe { MUTABLE };\n+   | --------------------------^^^^^^^---\n+   |                           |\n+   |                           constant accesses static\n+\n error[E0080]: it is undefined behavior to use this value\n   --> $DIR/const_refers_to_static.rs:33:1\n    |"}]}