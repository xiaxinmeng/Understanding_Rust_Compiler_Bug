{"sha": "3ee5ef12fb71be95d6e7f679900a497a2580d25e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNlZTVlZjEyZmI3MWJlOTVkNmU3ZjY3OTkwMGE0OTdhMjU4MGQyNWU=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2013-10-24T18:30:35Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2013-10-24T22:17:27Z"}, "message": "Remove the 'callback_ms' function from EventLoop\n\nThis is a peculiar function to require event loops to implement, and it's only\nused in one spot during tests right now. Instead, a possibly more robust apis\nfor timers should be used rather than requiring all event loops to implement a\ncurious-looking function.", "tree": {"sha": "33f8f79dc33dcc7404ed9c893529e0f82d009458", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/33f8f79dc33dcc7404ed9c893529e0f82d009458"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3ee5ef12fb71be95d6e7f679900a497a2580d25e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3ee5ef12fb71be95d6e7f679900a497a2580d25e", "html_url": "https://github.com/rust-lang/rust/commit/3ee5ef12fb71be95d6e7f679900a497a2580d25e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3ee5ef12fb71be95d6e7f679900a497a2580d25e/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3b30377e14f60e6381dc1536bd53b5f9c7a3d7c7", "url": "https://api.github.com/repos/rust-lang/rust/commits/3b30377e14f60e6381dc1536bd53b5f9c7a3d7c7", "html_url": "https://github.com/rust-lang/rust/commit/3b30377e14f60e6381dc1536bd53b5f9c7a3d7c7"}], "stats": {"total": 23, "additions": 3, "deletions": 20}, "files": [{"sha": "29f728a5e0cb8051553cdebff094f79675c0ce37", "filename": "src/libstd/rt/rtio.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3ee5ef12fb71be95d6e7f679900a497a2580d25e/src%2Flibstd%2Frt%2Frtio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ee5ef12fb71be95d6e7f679900a497a2580d25e/src%2Flibstd%2Frt%2Frtio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Frtio.rs?ref=3ee5ef12fb71be95d6e7f679900a497a2580d25e", "patch": "@@ -28,7 +28,6 @@ pub trait EventLoop {\n     fn run(&mut self);\n     fn callback(&mut self, ~fn());\n     fn pausible_idle_callback(&mut self) -> ~PausibleIdleCallback;\n-    fn callback_ms(&mut self, ms: u64, ~fn());\n     fn remote_callback(&mut self, ~fn()) -> ~RemoteCallback;\n \n     /// The asynchronous I/O services. Not all event loops may provide one"}, {"sha": "0e993a3564f80bb5837703e2c68b371b7f8d7f63", "filename": "src/libstd/rt/sched.rs", "status": "modified", "additions": 3, "deletions": 10, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/3ee5ef12fb71be95d6e7f679900a497a2580d25e/src%2Flibstd%2Frt%2Fsched.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ee5ef12fb71be95d6e7f679900a497a2580d25e/src%2Flibstd%2Frt%2Fsched.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fsched.rs?ref=3ee5ef12fb71be95d6e7f679900a497a2580d25e", "patch": "@@ -1147,22 +1147,15 @@ mod test {\n \n     #[test]\n     fn test_io_callback() {\n+        use rt::io::timer;\n+\n         // This is a regression test that when there are no schedulable tasks\n         // in the work queue, but we are performing I/O, that once we do put\n         // something in the work queue again the scheduler picks it up and doesn't\n         // exit before emptying the work queue\n         do run_in_newsched_task {\n             do spawntask {\n-                let sched: ~Scheduler = Local::take();\n-                do sched.deschedule_running_task_and_then |sched, task| {\n-                    let task = Cell::new(task);\n-                    do sched.event_loop.callback_ms(10) {\n-                        rtdebug!(\"in callback\");\n-                        let mut sched: ~Scheduler = Local::take();\n-                        sched.enqueue_blocked_task(task.take());\n-                        Local::put(sched);\n-                    }\n-                }\n+                timer::sleep(10);\n             }\n         }\n     }"}, {"sha": "eee89365fb5b101ead05c80f4d0987628edb9a1a", "filename": "src/libstd/rt/uv/uvio.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/3ee5ef12fb71be95d6e7f679900a497a2580d25e/src%2Flibstd%2Frt%2Fuv%2Fuvio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ee5ef12fb71be95d6e7f679900a497a2580d25e/src%2Flibstd%2Frt%2Fuv%2Fuvio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fuv%2Fuvio.rs?ref=3ee5ef12fb71be95d6e7f679900a497a2580d25e", "patch": "@@ -222,15 +222,6 @@ impl EventLoop for UvEventLoop {\n         } as ~PausibleIdleCallback\n     }\n \n-    fn callback_ms(&mut self, ms: u64, f: ~fn()) {\n-        let mut timer =  TimerWatcher::new(self.uvio.uv_loop());\n-        do timer.start(ms, 0) |timer, status| {\n-            assert!(status.is_none());\n-            timer.close(||());\n-            f();\n-        }\n-    }\n-\n     fn remote_callback(&mut self, f: ~fn()) -> ~RemoteCallback {\n         ~UvRemoteCallback::new(self.uvio.uv_loop(), f) as ~RemoteCallback\n     }"}]}