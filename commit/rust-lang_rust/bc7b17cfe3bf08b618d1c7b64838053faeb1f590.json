{"sha": "bc7b17cfe3bf08b618d1c7b64838053faeb1f590", "node_id": "C_kwDOAAsO6NoAKGJjN2IxN2NmZTNiZjA4YjYxOGQxYzdiNjQ4MzgwNTNmYWViMWY1OTA", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-09-18T00:46:14Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-09-18T00:46:14Z"}, "message": "Auto merge of #101862 - cjgillot:lint-regression, r=oli-obk\n\nDo not fetch HIR node when iterating to find lint.\n\nAddresses the regression in https://github.com/rust-lang/rust/pull/101620", "tree": {"sha": "2e843ccff581c0eaaf21b293912eeaca4c8a4775", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2e843ccff581c0eaaf21b293912eeaca4c8a4775"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bc7b17cfe3bf08b618d1c7b64838053faeb1f590", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bc7b17cfe3bf08b618d1c7b64838053faeb1f590", "html_url": "https://github.com/rust-lang/rust/commit/bc7b17cfe3bf08b618d1c7b64838053faeb1f590", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bc7b17cfe3bf08b618d1c7b64838053faeb1f590/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5253b0a0a1f366fad0ebed57597fcf2703b9e893", "url": "https://api.github.com/repos/rust-lang/rust/commits/5253b0a0a1f366fad0ebed57597fcf2703b9e893", "html_url": "https://github.com/rust-lang/rust/commit/5253b0a0a1f366fad0ebed57597fcf2703b9e893"}, {"sha": "c9c6c507b785ea74a69fc716ac1512283bdb76e3", "url": "https://api.github.com/repos/rust-lang/rust/commits/c9c6c507b785ea74a69fc716ac1512283bdb76e3", "html_url": "https://github.com/rust-lang/rust/commit/c9c6c507b785ea74a69fc716ac1512283bdb76e3"}], "stats": {"total": 22, "additions": 13, "deletions": 9}, "files": [{"sha": "ca5598f5ff10fe90e23d28d8e2a81d2aa6d224d9", "filename": "compiler/rustc_middle/src/hir/map/mod.rs", "status": "modified", "additions": 12, "deletions": 8, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/bc7b17cfe3bf08b618d1c7b64838053faeb1f590/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fmap%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc7b17cfe3bf08b618d1c7b64838053faeb1f590/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fmap%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fmap%2Fmod.rs?ref=bc7b17cfe3bf08b618d1c7b64838053faeb1f590", "patch": "@@ -61,7 +61,7 @@ pub struct ParentHirIterator<'hir> {\n }\n \n impl<'hir> Iterator for ParentHirIterator<'hir> {\n-    type Item = (HirId, Node<'hir>);\n+    type Item = HirId;\n \n     fn next(&mut self) -> Option<Self::Item> {\n         if self.current_id == CRATE_HIR_ID {\n@@ -77,10 +77,7 @@ impl<'hir> Iterator for ParentHirIterator<'hir> {\n             }\n \n             self.current_id = parent_id;\n-            if let Some(node) = self.map.find(parent_id) {\n-                return Some((parent_id, node));\n-            }\n-            // If this `HirId` doesn't have an entry, skip it and look for its `parent_id`.\n+            return Some(parent_id);\n         }\n     }\n }\n@@ -393,8 +390,8 @@ impl<'hir> Map<'hir> {\n     }\n \n     pub fn enclosing_body_owner(self, hir_id: HirId) -> LocalDefId {\n-        for (parent, _) in self.parent_iter(hir_id) {\n-            if let Some(body) = self.find(parent).map(associated_body).flatten() {\n+        for (_, node) in self.parent_iter(hir_id) {\n+            if let Some(body) = associated_body(node) {\n                 return self.body_owner_def_id(body);\n             }\n         }\n@@ -635,10 +632,17 @@ impl<'hir> Map<'hir> {\n     /// Returns an iterator for the nodes in the ancestor tree of the `current_id`\n     /// until the crate root is reached. Prefer this over your own loop using `get_parent_node`.\n     #[inline]\n-    pub fn parent_iter(self, current_id: HirId) -> ParentHirIterator<'hir> {\n+    pub fn parent_id_iter(self, current_id: HirId) -> impl Iterator<Item = HirId> + 'hir {\n         ParentHirIterator { current_id, map: self }\n     }\n \n+    /// Returns an iterator for the nodes in the ancestor tree of the `current_id`\n+    /// until the crate root is reached. Prefer this over your own loop using `get_parent_node`.\n+    #[inline]\n+    pub fn parent_iter(self, current_id: HirId) -> impl Iterator<Item = (HirId, Node<'hir>)> {\n+        self.parent_id_iter(current_id).filter_map(move |id| Some((id, self.find(id)?)))\n+    }\n+\n     /// Returns an iterator for the nodes in the ancestor tree of the `current_id`\n     /// until the crate root is reached. Prefer this over your own loop using `get_parent_node`.\n     #[inline]"}, {"sha": "bb9e1edf86cfe5a30bca046481368a0d4ebf45ed", "filename": "compiler/rustc_middle/src/lint.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bc7b17cfe3bf08b618d1c7b64838053faeb1f590/compiler%2Frustc_middle%2Fsrc%2Flint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc7b17cfe3bf08b618d1c7b64838053faeb1f590/compiler%2Frustc_middle%2Fsrc%2Flint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Flint.rs?ref=bc7b17cfe3bf08b618d1c7b64838053faeb1f590", "patch": "@@ -126,7 +126,7 @@ impl ShallowLintLevelMap {\n             return (Some(level), src);\n         }\n \n-        for (parent, _) in tcx.hir().parent_iter(start) {\n+        for parent in tcx.hir().parent_id_iter(start) {\n             let specs = tcx.shallow_lint_levels_on(parent);\n             if let Some(&(level, src)) = specs.specs.get(&id) {\n                 return (Some(level), src);"}]}