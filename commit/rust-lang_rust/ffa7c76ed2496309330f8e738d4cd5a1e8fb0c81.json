{"sha": "ffa7c76ed2496309330f8e738d4cd5a1e8fb0c81", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZmYTdjNzZlZDI0OTYzMDkzMzBmOGU3MzhkNGNkNWExZThmYjBjODE=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-06-16T23:38:23Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-06-17T00:23:20Z"}, "message": "rustc: Change print_file to print_crate\n\nThe pretty-printer needs access to the crate attributes in order to reproduce\ninner crate attributes in standalone .rs files\n\nIssue #487", "tree": {"sha": "5c096f7b09a0559b2a2c96e0bd3189974e9a387d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5c096f7b09a0559b2a2c96e0bd3189974e9a387d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ffa7c76ed2496309330f8e738d4cd5a1e8fb0c81", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ffa7c76ed2496309330f8e738d4cd5a1e8fb0c81", "html_url": "https://github.com/rust-lang/rust/commit/ffa7c76ed2496309330f8e738d4cd5a1e8fb0c81", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ffa7c76ed2496309330f8e738d4cd5a1e8fb0c81/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e83a115d7987aead4d4ea33b0ca4dda6cd9aa0f0", "url": "https://api.github.com/repos/rust-lang/rust/commits/e83a115d7987aead4d4ea33b0ca4dda6cd9aa0f0", "html_url": "https://github.com/rust-lang/rust/commit/e83a115d7987aead4d4ea33b0ca4dda6cd9aa0f0"}], "stats": {"total": 27, "additions": 16, "deletions": 11}, "files": [{"sha": "8dfa6cb7b46f1e96734923381adf2b6b15435a64", "filename": "src/comp/driver/rustc.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ffa7c76ed2496309330f8e738d4cd5a1e8fb0c81/src%2Fcomp%2Fdriver%2Frustc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ffa7c76ed2496309330f8e738d4cd5a1e8fb0c81/src%2Fcomp%2Fdriver%2Frustc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fdriver%2Frustc.rs?ref=ffa7c76ed2496309330f8e738d4cd5a1e8fb0c81", "patch": "@@ -117,8 +117,8 @@ fn pretty_print_input(session::session sess, eval::env env, str input,\n         case (ppm_normal) { mode = ppaux::mo_untyped; }\n         case (ppm_identified) { mode = ppaux::mo_identified; }\n     }\n-    pprust::print_file(sess, crate.node.module, input, std::io::stdout(),\n-                       mode);\n+    pprust::print_crate(sess, crate, input, std::io::stdout(),\n+                        mode);\n }\n \n fn version(str argv0) {"}, {"sha": "86971de7cf157b3be651b37c565c8b1e23691506", "filename": "src/comp/front/ast.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ffa7c76ed2496309330f8e738d4cd5a1e8fb0c81/src%2Fcomp%2Ffront%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ffa7c76ed2496309330f8e738d4cd5a1e8fb0c81/src%2Fcomp%2Ffront%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Ffront%2Fast.rs?ref=ffa7c76ed2496309330f8e738d4cd5a1e8fb0c81", "patch": "@@ -76,7 +76,9 @@ fn def_id_of_def(def d) -> def_id {\n \n type crate = spanned[crate_];\n \n-type crate_ = rec(vec[@crate_directive] directives, _mod module);\n+type crate_ = rec(vec[@crate_directive] directives,\n+                  _mod module,\n+                  vec[attribute] attrs);\n \n tag meta_visibility { export_meta; local_meta; }\n "}, {"sha": "364cd3b846e9fc583fc6ab5e854775e97864b26d", "filename": "src/comp/front/parser.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/ffa7c76ed2496309330f8e738d4cd5a1e8fb0c81/src%2Fcomp%2Ffront%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ffa7c76ed2496309330f8e738d4cd5a1e8fb0c81/src%2Fcomp%2Ffront%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Ffront%2Fparser.rs?ref=ffa7c76ed2496309330f8e738d4cd5a1e8fb0c81", "patch": "@@ -2285,13 +2285,14 @@ fn parse_native_view(&parser p) -> vec[@ast::view_item] {\n \n fn parse_crate_from_source_file(&parser p) -> @ast::crate {\n     auto lo = p.get_lo_pos();\n-    // FIXME (issue #487): Do something with these attrs\n     auto crate_attrs = parse_inner_attrs_and_next(p);\n     auto first_item_outer_attrs = crate_attrs._1;\n     auto m = parse_mod_items(p, token::EOF,\n                              first_item_outer_attrs);\n     let vec[@ast::crate_directive] cdirs = [];\n-    ret @spanned(lo, p.get_lo_pos(), rec(directives=cdirs, module=m));\n+    ret @spanned(lo, p.get_lo_pos(), rec(directives=cdirs,\n+                                         module=m,\n+                                         attrs=crate_attrs._0));\n }\n \n \n@@ -2381,8 +2382,7 @@ fn parse_crate_directives(&parser p, token::token term) ->\n fn parse_crate_from_crate_file(&parser p) -> @ast::crate {\n     auto lo = p.get_lo_pos();\n     auto prefix = std::fs::dirname(p.get_filemap().name);\n-    // FIXME (issue #487): Do something with these attrs\n-    auto attrs = parse_inner_attrs(p);\n+    auto crate_attrs = parse_inner_attrs(p);\n     auto cdirs = parse_crate_directives(p, token::EOF);\n     let vec[str] deps = [];\n     auto cx =\n@@ -2396,7 +2396,9 @@ fn parse_crate_from_crate_file(&parser p) -> @ast::crate {\n         eval::eval_crate_directives_to_mod(cx, p.get_env(), cdirs, prefix);\n     auto hi = p.get_hi_pos();\n     expect(p, token::EOF);\n-    ret @spanned(lo, hi, rec(directives=cdirs, module=m));\n+    ret @spanned(lo, hi, rec(directives=cdirs,\n+                             module=m,\n+                             attrs=crate_attrs));\n }\n //\n // Local Variables:"}, {"sha": "53f96e12d74e9302eb3587f21f9f426c5a1034d6", "filename": "src/comp/pretty/pprust.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ffa7c76ed2496309330f8e738d4cd5a1e8fb0c81/src%2Fcomp%2Fpretty%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ffa7c76ed2496309330f8e738d4cd5a1e8fb0c81/src%2Fcomp%2Fpretty%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fpretty%2Fpprust.rs?ref=ffa7c76ed2496309330f8e738d4cd5a1e8fb0c81", "patch": "@@ -27,8 +27,8 @@ import pp::inconsistent;\n import pp::eof;\n import ppaux::*;\n \n-fn print_file(session sess, ast::_mod _mod, str filename, io::writer out,\n-              mode mode) {\n+fn print_crate(session sess, @ast::crate crate, str filename,\n+               io::writer out, mode mode) {\n     let vec[pp::breaks] boxes = [];\n     auto r = lexer::gather_comments_and_literals(sess, filename);\n     auto s =\n@@ -40,7 +40,8 @@ fn print_file(session sess, ast::_mod _mod, str filename, io::writer out,\n              mutable cur_lit=0u,\n              mutable boxes=boxes,\n              mode=mode);\n-    print_mod(s, _mod);\n+    print_inner_attributes(s, crate.node.attrs);\n+    print_mod(s, crate.node.module);\n     eof(s.s);\n }\n "}]}