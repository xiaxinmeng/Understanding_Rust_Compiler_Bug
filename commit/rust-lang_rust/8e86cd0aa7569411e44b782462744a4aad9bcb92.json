{"sha": "8e86cd0aa7569411e44b782462744a4aad9bcb92", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhlODZjZDBhYTc1Njk0MTFlNDRiNzgyNDYyNzQ0YTRhYWQ5YmNiOTI=", "commit": {"author": {"name": "Jeff Olson", "email": "olson.jeffery@gmail.com", "date": "2012-09-07T22:59:14Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-09-08T21:22:16Z"}, "message": "test: bunch of test cleanup from sendable_futures change", "tree": {"sha": "d387c1ab7344705db91b3bd2a9d2c286dd4e69ad", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d387c1ab7344705db91b3bd2a9d2c286dd4e69ad"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8e86cd0aa7569411e44b782462744a4aad9bcb92", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8e86cd0aa7569411e44b782462744a4aad9bcb92", "html_url": "https://github.com/rust-lang/rust/commit/8e86cd0aa7569411e44b782462744a4aad9bcb92", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8e86cd0aa7569411e44b782462744a4aad9bcb92/comments", "author": {"login": "olsonjeffery", "id": 10408, "node_id": "MDQ6VXNlcjEwNDA4", "avatar_url": "https://avatars.githubusercontent.com/u/10408?v=4", "gravatar_id": "", "url": "https://api.github.com/users/olsonjeffery", "html_url": "https://github.com/olsonjeffery", "followers_url": "https://api.github.com/users/olsonjeffery/followers", "following_url": "https://api.github.com/users/olsonjeffery/following{/other_user}", "gists_url": "https://api.github.com/users/olsonjeffery/gists{/gist_id}", "starred_url": "https://api.github.com/users/olsonjeffery/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/olsonjeffery/subscriptions", "organizations_url": "https://api.github.com/users/olsonjeffery/orgs", "repos_url": "https://api.github.com/users/olsonjeffery/repos", "events_url": "https://api.github.com/users/olsonjeffery/events{/privacy}", "received_events_url": "https://api.github.com/users/olsonjeffery/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "12439b0b2480bc4186a972d8a9e7b5b4c1ece42f", "url": "https://api.github.com/repos/rust-lang/rust/commits/12439b0b2480bc4186a972d8a9e7b5b4c1ece42f", "html_url": "https://github.com/rust-lang/rust/commit/12439b0b2480bc4186a972d8a9e7b5b4c1ece42f"}], "stats": {"total": 31, "additions": 19, "deletions": 12}, "files": [{"sha": "6cc9be29a22faa42609e120eccb7c8792c0ebe21", "filename": "src/test/bench/msgsend-ring-mutex-arcs.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/8e86cd0aa7569411e44b782462744a4aad9bcb92/src%2Ftest%2Fbench%2Fmsgsend-ring-mutex-arcs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e86cd0aa7569411e44b782462744a4aad9bcb92/src%2Ftest%2Fbench%2Fmsgsend-ring-mutex-arcs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fmsgsend-ring-mutex-arcs.rs?ref=8e86cd0aa7569411e44b782462744a4aad9bcb92", "patch": "@@ -82,15 +82,16 @@ fn main(args: ~[~str]) {\n         let num_chan2 = ~mut None;\n         *num_chan2 <-> num_chan;\n         let num_port = ~mut Some(num_port);\n-        futures += ~[future::spawn(|move num_chan2, move num_port| {\n+        let new_future = future::spawn(|move num_chan2, move num_port| {\n             let mut num_chan = None;\n             num_chan <-> *num_chan2;\n             let mut num_port1 = None;\n             num_port1 <-> *num_port;\n             thread_ring(i, msg_per_task,\n                         option::unwrap(num_chan),\n                         option::unwrap(num_port1))\n-        })];\n+        });\n+        vec::push(futures, new_future);\n         num_chan = Some(new_chan);\n     };\n "}, {"sha": "8c21db3d2f5051e5bdb9bcbdc3f53685cb2fe127", "filename": "src/test/bench/msgsend-ring-pipes.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8e86cd0aa7569411e44b782462744a4aad9bcb92/src%2Ftest%2Fbench%2Fmsgsend-ring-pipes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e86cd0aa7569411e44b782462744a4aad9bcb92/src%2Ftest%2Fbench%2Fmsgsend-ring-pipes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fmsgsend-ring-pipes.rs?ref=8e86cd0aa7569411e44b782462744a4aad9bcb92", "patch": "@@ -78,15 +78,17 @@ fn main(args: ~[~str]) {\n         let num_chan2 = ~mut None;\n         *num_chan2 <-> num_chan;\n         let num_port = ~mut Some(num_port);\n-        futures += ~[future::spawn(|move num_chan2, move num_port| {\n+        let new_future = do future::spawn\n+            |move num_chan2, move num_port| {\n             let mut num_chan = None;\n             num_chan <-> *num_chan2;\n             let mut num_port1 = None;\n             num_port1 <-> *num_port;\n             thread_ring(i, msg_per_task,\n                         option::unwrap(num_chan),\n                         option::unwrap(num_port1))\n-        })];\n+        };\n+        vec::push(futures, new_future);\n         num_chan = Some(new_chan);\n     };\n "}, {"sha": "82621c2f7e912d37a6e40cad726d5c817499fbde", "filename": "src/test/bench/msgsend-ring-rw-arcs.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8e86cd0aa7569411e44b782462744a4aad9bcb92/src%2Ftest%2Fbench%2Fmsgsend-ring-rw-arcs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e86cd0aa7569411e44b782462744a4aad9bcb92/src%2Ftest%2Fbench%2Fmsgsend-ring-rw-arcs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fmsgsend-ring-rw-arcs.rs?ref=8e86cd0aa7569411e44b782462744a4aad9bcb92", "patch": "@@ -82,15 +82,17 @@ fn main(args: ~[~str]) {\n         let num_chan2 = ~mut None;\n         *num_chan2 <-> num_chan;\n         let num_port = ~mut Some(num_port);\n-        futures += ~[future::spawn(|move num_chan2, move num_port| {\n+        let new_future = do future::spawn\n+            |move num_chan2, move num_port| {\n             let mut num_chan = None;\n             num_chan <-> *num_chan2;\n             let mut num_port1 = None;\n             num_port1 <-> *num_port;\n             thread_ring(i, msg_per_task,\n                         option::unwrap(num_chan),\n                         option::unwrap(num_port1))\n-        })];\n+        };\n+        vec::push(futures, new_future);\n         num_chan = Some(new_chan);\n     };\n "}, {"sha": "15a18725abf65649bc91ff6e7699fb11ba61909a", "filename": "src/test/bench/msgsend-ring.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8e86cd0aa7569411e44b782462744a4aad9bcb92/src%2Ftest%2Fbench%2Fmsgsend-ring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e86cd0aa7569411e44b782462744a4aad9bcb92/src%2Ftest%2Fbench%2Fmsgsend-ring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fmsgsend-ring.rs?ref=8e86cd0aa7569411e44b782462744a4aad9bcb92", "patch": "@@ -45,11 +45,13 @@ fn main(args: ~[~str]) {\n         let get_chan = Port();\n         let get_chan_chan = Chan(get_chan);\n \n-        futures += ~[do future::spawn |copy num_chan, move get_chan_chan| {\n+        let new_future = do future::spawn\n+            |copy num_chan, move get_chan_chan| {\n             let p = Port();\n             get_chan_chan.send(Chan(p));\n             thread_ring(i, msg_per_task, num_chan,  p)\n-        }];\n+        };\n+        vec::push(futures, new_future);\n         \n         num_chan = get_chan.recv();\n     };"}, {"sha": "17ecf3fb332ee7133a54383e9c397b706cc82dbb", "filename": "src/test/bench/shootout-pfib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8e86cd0aa7569411e44b782462744a4aad9bcb92/src%2Ftest%2Fbench%2Fshootout-pfib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e86cd0aa7569411e44b782462744a4aad9bcb92/src%2Ftest%2Fbench%2Fshootout-pfib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-pfib.rs?ref=8e86cd0aa7569411e44b782462744a4aad9bcb92", "patch": "@@ -71,7 +71,7 @@ fn stress(num_tasks: int) {\n     let mut results = ~[];\n     for range(0, num_tasks) |i| {\n         do task::task().future_result(|+r| {\n-            results += ~[r];\n+            vec::push(results, r);\n         }).spawn {\n             stress_task(i);\n         }"}, {"sha": "e47daceb6e6f46d54904f47ae315ff477efab66c", "filename": "src/test/run-pass/task-comm-3.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8e86cd0aa7569411e44b782462744a4aad9bcb92/src%2Ftest%2Frun-pass%2Ftask-comm-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e86cd0aa7569411e44b782462744a4aad9bcb92/src%2Ftest%2Frun-pass%2Ftask-comm-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-3.rs?ref=8e86cd0aa7569411e44b782462744a4aad9bcb92", "patch": "@@ -31,7 +31,7 @@ fn test00() {\n     while i < number_of_tasks {\n         let ch = po.chan();        \n         do task::task().future_result(|+r| {\n-            results += ~[r];\n+            vec::push(results, r);\n         }).spawn |copy i| {\n             test00_start(ch, i, number_of_messages)\n         }"}, {"sha": "ca34d42423fa6aa2729fb5528230eebb1b6e00b0", "filename": "src/test/run-pass/task-comm.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8e86cd0aa7569411e44b782462744a4aad9bcb92/src%2Ftest%2Frun-pass%2Ftask-comm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e86cd0aa7569411e44b782462744a4aad9bcb92/src%2Ftest%2Frun-pass%2Ftask-comm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm.rs?ref=8e86cd0aa7569411e44b782462744a4aad9bcb92", "patch": "@@ -40,7 +40,7 @@ fn test00() {\n     while i < number_of_tasks {\n         i = i + 1;\n         do task::task().future_result(|+r| {\n-            results += ~[r];\n+            vec::push(results, r);\n         }).spawn |copy i| {\n             test00_start(ch, i, number_of_messages);\n         }\n@@ -127,7 +127,7 @@ fn test06() {\n     while i < number_of_tasks {\n         i = i + 1;\n         do task::task().future_result(|+r| {\n-            results += ~[r];\n+            vec::push(results, r);\n         }).spawn |copy i| {\n             test06_start(i);\n         };"}]}