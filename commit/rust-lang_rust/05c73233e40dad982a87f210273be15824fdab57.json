{"sha": "05c73233e40dad982a87f210273be15824fdab57", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA1YzczMjMzZTQwZGFkOTgyYTg3ZjIxMDI3M2JlMTU4MjRmZGFiNTc=", "commit": {"author": {"name": "Steven Fackler", "email": "sfackler@gmail.com", "date": "2014-03-16T05:49:41Z"}, "committer": {"name": "Steven Fackler", "email": "sfackler@gmail.com", "date": "2014-03-16T05:49:41Z"}, "message": "Tag derived impls with #[automatically_derived]\n\nThis will enable rustdoc to treat them specially.", "tree": {"sha": "0929bea77dd4269effef08625b49b4b0cf2e8344", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0929bea77dd4269effef08625b49b4b0cf2e8344"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/05c73233e40dad982a87f210273be15824fdab57", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/05c73233e40dad982a87f210273be15824fdab57", "html_url": "https://github.com/rust-lang/rust/commit/05c73233e40dad982a87f210273be15824fdab57", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/05c73233e40dad982a87f210273be15824fdab57/comments", "author": {"login": "sfackler", "id": 1455697, "node_id": "MDQ6VXNlcjE0NTU2OTc=", "avatar_url": "https://avatars.githubusercontent.com/u/1455697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfackler", "html_url": "https://github.com/sfackler", "followers_url": "https://api.github.com/users/sfackler/followers", "following_url": "https://api.github.com/users/sfackler/following{/other_user}", "gists_url": "https://api.github.com/users/sfackler/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfackler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfackler/subscriptions", "organizations_url": "https://api.github.com/users/sfackler/orgs", "repos_url": "https://api.github.com/users/sfackler/repos", "events_url": "https://api.github.com/users/sfackler/events{/privacy}", "received_events_url": "https://api.github.com/users/sfackler/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sfackler", "id": 1455697, "node_id": "MDQ6VXNlcjE0NTU2OTc=", "avatar_url": "https://avatars.githubusercontent.com/u/1455697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfackler", "html_url": "https://github.com/sfackler", "followers_url": "https://api.github.com/users/sfackler/followers", "following_url": "https://api.github.com/users/sfackler/following{/other_user}", "gists_url": "https://api.github.com/users/sfackler/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfackler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfackler/subscriptions", "organizations_url": "https://api.github.com/users/sfackler/orgs", "repos_url": "https://api.github.com/users/sfackler/repos", "events_url": "https://api.github.com/users/sfackler/events{/privacy}", "received_events_url": "https://api.github.com/users/sfackler/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2c372201d447cbf4d3e1e2d675d1776e765f3b65", "url": "https://api.github.com/repos/rust-lang/rust/commits/2c372201d447cbf4d3e1e2d675d1776e765f3b65", "html_url": "https://github.com/rust-lang/rust/commit/2c372201d447cbf4d3e1e2d675d1776e765f3b65"}], "stats": {"total": 14, "additions": 5, "deletions": 9}, "files": [{"sha": "9a6ea297af096210d81930226b2cfa6bb8256464", "filename": "src/librustc/middle/lint.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/05c73233e40dad982a87f210273be15824fdab57/src%2Flibrustc%2Fmiddle%2Flint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/05c73233e40dad982a87f210273be15824fdab57/src%2Flibrustc%2Fmiddle%2Flint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Flint.rs?ref=05c73233e40dad982a87f210273be15824fdab57", "patch": "@@ -985,7 +985,7 @@ static other_attrs: &'static [&'static str] = &[\n     \"crate_map\", \"cfg\", \"doc\", \"export_name\", \"link_section\",\n     \"no_mangle\", \"static_assert\", \"unsafe_no_drop_flag\", \"packed\",\n     \"simd\", \"repr\", \"deriving\", \"unsafe_destructor\", \"link\", \"phase\",\n-    \"macro_export\", \"must_use\",\n+    \"macro_export\", \"must_use\", \"automatically_derived\",\n \n     //mod-level\n     \"path\", \"link_name\", \"link_args\", \"macro_escape\", \"no_implicit_prelude\","}, {"sha": "2a828cd58003c0cf4fe2f4fd4c2d149323738caa", "filename": "src/libsyntax/ext/deriving/generic.rs", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/05c73233e40dad982a87f210273be15824fdab57/src%2Flibsyntax%2Fext%2Fderiving%2Fgeneric.rs", "raw_url": "https://github.com/rust-lang/rust/raw/05c73233e40dad982a87f210273be15824fdab57/src%2Flibsyntax%2Fext%2Fderiving%2Fgeneric.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fgeneric.rs?ref=05c73233e40dad982a87f210273be15824fdab57", "patch": "@@ -186,7 +186,6 @@ use codemap;\n use codemap::Span;\n use opt_vec;\n use parse::token::InternedString;\n-use parse::token;\n \n use std::vec_ng::Vec;\n use std::vec_ng;\n@@ -399,19 +398,16 @@ impl<'a> TraitDef<'a> {\n             cx.path_all(self.span, false, vec!( type_ident ), self_lifetimes,\n                         opt_vec::take_vec(self_ty_params)), None);\n \n-        let doc_attr = cx.attribute(\n+        let attr = cx.attribute(\n             self.span,\n-            cx.meta_name_value(self.span,\n-                               InternedString::new(\"doc\"),\n-                               ast::LitStr(token::intern_and_get_ident(\n-                                               \"Automatically derived.\"),\n-                                           ast::CookedStr)));\n+            cx.meta_word(self.span,\n+                         InternedString::new(\"automatically_derived\")));\n         let opt_trait_ref = Some(trait_ref);\n         let ident = ast_util::impl_pretty_name(&opt_trait_ref, self_type);\n         cx.item(\n             self.span,\n             ident,\n-            vec_ng::append(vec!(doc_attr), self.attributes.as_slice()),\n+            vec_ng::append(vec!(attr), self.attributes.as_slice()),\n             ast::ItemImpl(trait_generics, opt_trait_ref,\n                           self_type, methods.map(|x| *x)))\n     }"}]}