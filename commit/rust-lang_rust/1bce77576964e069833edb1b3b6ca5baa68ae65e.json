{"sha": "1bce77576964e069833edb1b3b6ca5baa68ae65e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFiY2U3NzU3Njk2NGUwNjk4MzNlZGIxYjNiNmNhNWJhYTY4YWU2NWU=", "commit": {"author": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2021-01-13T00:47:04Z"}, "committer": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2021-01-13T03:25:51Z"}, "message": "Add a test case with lots of whitespace", "tree": {"sha": "872b0d8f18f4a49a36d04a8039e39285455ffaee", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/872b0d8f18f4a49a36d04a8039e39285455ffaee"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1bce77576964e069833edb1b3b6ca5baa68ae65e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1bce77576964e069833edb1b3b6ca5baa68ae65e", "html_url": "https://github.com/rust-lang/rust/commit/1bce77576964e069833edb1b3b6ca5baa68ae65e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1bce77576964e069833edb1b3b6ca5baa68ae65e/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9959d6deedbf39d58fac06949596073d9c0dbb23", "url": "https://api.github.com/repos/rust-lang/rust/commits/9959d6deedbf39d58fac06949596073d9c0dbb23", "html_url": "https://github.com/rust-lang/rust/commit/9959d6deedbf39d58fac06949596073d9c0dbb23"}], "stats": {"total": 42, "additions": 34, "deletions": 8}, "files": [{"sha": "50f8a855d3639321961ea86c2909396dfced3b84", "filename": "src/test/ui/pattern/pat-tuple-underfield.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1bce77576964e069833edb1b3b6ca5baa68ae65e/src%2Ftest%2Fui%2Fpattern%2Fpat-tuple-underfield.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1bce77576964e069833edb1b3b6ca5baa68ae65e/src%2Ftest%2Fui%2Fpattern%2Fpat-tuple-underfield.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fpat-tuple-underfield.rs?ref=1bce77576964e069833edb1b3b6ca5baa68ae65e", "patch": "@@ -2,6 +2,7 @@ struct S(i32, f32);\n enum E {\n     S(i32, f32),\n }\n+struct Point4(i32, i32, i32, i32);\n \n fn main() {\n     match S(0, 1.0) {\n@@ -42,4 +43,11 @@ fn main() {\n         //~^ ERROR expected unit struct, unit variant or constant, found tuple variant `E::S`\n         //~| HELP use the tuple variant pattern syntax instead\n     }\n+\n+    match Point4(0, 1, 2, 3) {\n+        Point4(   a   ,     _    ) => {}\n+        //~^ ERROR this pattern has 2 fields, but the corresponding tuple struct has 4 fields\n+        //~| HELP use `_` to explicitly ignore each field\n+        //~| HELP use `..` to ignore the rest of the fields\n+    }\n }"}, {"sha": "df6b216272e30e014748d8e8729d570b2f02a101", "filename": "src/test/ui/pattern/pat-tuple-underfield.stderr", "status": "modified", "additions": 26, "deletions": 8, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/1bce77576964e069833edb1b3b6ca5baa68ae65e/src%2Ftest%2Fui%2Fpattern%2Fpat-tuple-underfield.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1bce77576964e069833edb1b3b6ca5baa68ae65e/src%2Ftest%2Fui%2Fpattern%2Fpat-tuple-underfield.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fpat-tuple-underfield.stderr?ref=1bce77576964e069833edb1b3b6ca5baa68ae65e", "patch": "@@ -1,5 +1,5 @@\n error[E0532]: expected unit struct, unit variant or constant, found tuple variant `E::S`\n-  --> $DIR/pat-tuple-underfield.rs:41:9\n+  --> $DIR/pat-tuple-underfield.rs:42:9\n    |\n LL |     S(i32, f32),\n    |     ----------- `E::S` defined here\n@@ -8,7 +8,7 @@ LL |         E::S => {}\n    |         ^^^^ help: use the tuple variant pattern syntax instead: `E::S(_, _)`\n \n error[E0023]: this pattern has 1 field, but the corresponding tuple struct has 2 fields\n-  --> $DIR/pat-tuple-underfield.rs:8:9\n+  --> $DIR/pat-tuple-underfield.rs:9:9\n    |\n LL | struct S(i32, f32);\n    | ------------------- tuple struct defined here\n@@ -20,7 +20,7 @@ LL |         S(x) => {}\n    |         expected 2 fields, found 1\n \n error[E0023]: this pattern has 1 field, but the corresponding tuple struct has 2 fields\n-  --> $DIR/pat-tuple-underfield.rs:13:9\n+  --> $DIR/pat-tuple-underfield.rs:14:9\n    |\n LL | struct S(i32, f32);\n    | ------------------- tuple struct defined here\n@@ -32,7 +32,7 @@ LL |         S(_) => {}\n    |         expected 2 fields, found 1\n \n error[E0023]: this pattern has 0 fields, but the corresponding tuple struct has 2 fields\n-  --> $DIR/pat-tuple-underfield.rs:18:9\n+  --> $DIR/pat-tuple-underfield.rs:19:9\n    |\n LL | struct S(i32, f32);\n    | ------------------- tuple struct defined here\n@@ -50,7 +50,7 @@ LL |         S(..) => {}\n    |           ^^\n \n error[E0023]: this pattern has 1 field, but the corresponding tuple variant has 2 fields\n-  --> $DIR/pat-tuple-underfield.rs:25:9\n+  --> $DIR/pat-tuple-underfield.rs:26:9\n    |\n LL |     S(i32, f32),\n    |     ----------- tuple variant defined here\n@@ -62,7 +62,7 @@ LL |         E::S(x) => {}\n    |         expected 2 fields, found 1\n \n error[E0023]: this pattern has 1 field, but the corresponding tuple variant has 2 fields\n-  --> $DIR/pat-tuple-underfield.rs:30:9\n+  --> $DIR/pat-tuple-underfield.rs:31:9\n    |\n LL |     S(i32, f32),\n    |     ----------- tuple variant defined here\n@@ -74,7 +74,7 @@ LL |         E::S(_) => {}\n    |         expected 2 fields, found 1\n \n error[E0023]: this pattern has 0 fields, but the corresponding tuple variant has 2 fields\n-  --> $DIR/pat-tuple-underfield.rs:35:9\n+  --> $DIR/pat-tuple-underfield.rs:36:9\n    |\n LL |     S(i32, f32),\n    |     ----------- tuple variant defined here\n@@ -91,7 +91,25 @@ help: use `..` to ignore all fields\n LL |         E::S(..) => {}\n    |              ^^\n \n-error: aborting due to 7 previous errors\n+error[E0023]: this pattern has 2 fields, but the corresponding tuple struct has 4 fields\n+  --> $DIR/pat-tuple-underfield.rs:48:9\n+   |\n+LL | struct Point4(i32, i32, i32, i32);\n+   | ---------------------------------- tuple struct defined here\n+...\n+LL |         Point4(   a   ,     _    ) => {}\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^ expected 4 fields, found 2\n+   |\n+help: use `_` to explicitly ignore each field\n+   |\n+LL |         Point4(   a   ,     _    , _, _) => {}\n+   |                                  ^^^^^^\n+help: use `..` to ignore the rest of the fields\n+   |\n+LL |         Point4(   a   ,     _    , ..) => {}\n+   |                                  ^^^^\n+\n+error: aborting due to 8 previous errors\n \n Some errors have detailed explanations: E0023, E0532.\n For more information about an error, try `rustc --explain E0023`."}]}