{"sha": "d80033f048d88bce20d4785ea7afdd88b4295f35", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ4MDAzM2YwNDhkODhiY2UyMGQ0Nzg1ZWE3YWZkZDg4YjQyOTVmMzU=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2021-02-27T01:34:28Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-02-27T01:34:28Z"}, "message": "Rollup merge of #82421 - sunfishcode:wasi-metadata-size, r=alexcrichton\n\nAdd a `size()` function to WASI's `MetadataExt`.\n\nWASI's `filestat` type includes a size field, so expose it in\n`MetadataExt` via a `size()` function, similar to the corresponding Unix\nfunction.\n\nr? ``````@alexcrichton``````", "tree": {"sha": "aa0b33e0dde7b6f1050a4c32385b75ff9e878bb4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aa0b33e0dde7b6f1050a4c32385b75ff9e878bb4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d80033f048d88bce20d4785ea7afdd88b4295f35", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgOaGlCRBK7hj4Ov3rIwAAdHIIALB5PHpHXAn959N2/k1qP8dY\nZifHRdAanCOusSMYSWEeP0fwR8/sFoXoO7zsaoYsFEqi7ieckzF4gsoRI8n3nDNs\n7agIQnFBERC22LpRMiGJimgldy4mDce1+rqLg+bMxB7wttLwoqSRI7DJc/NuKv4V\nmRklq5dkW9cQIL696IPssxRj1aOU7qhfCTPIU8ePNTJE00zuULmN/H8YYmWbm/F9\nmBIJc0SJ2Jjv6tRaSOw/cPEg5bmdTFUA+uDnck+bLgBSotjF8g8aCHmlr+MVdo5K\nbjxsE8sAJKoWK2NK2IGL9HR1aiaqFtMjwdaPHP+uaNvjGj9YhiijW8fxJ/EbcIg=\n=DFu7\n-----END PGP SIGNATURE-----\n", "payload": "tree aa0b33e0dde7b6f1050a4c32385b75ff9e878bb4\nparent f5b68a4444a96f8a2915dfa8b7fc9b641f56bdf2\nparent e8dcc02dc5bb8ee26c22d67efa4ede281927e5cb\nauthor Dylan DPC <dylan.dpc@gmail.com> 1614389668 +0100\ncommitter GitHub <noreply@github.com> 1614389668 +0100\n\nRollup merge of #82421 - sunfishcode:wasi-metadata-size, r=alexcrichton\n\nAdd a `size()` function to WASI's `MetadataExt`.\n\nWASI's `filestat` type includes a size field, so expose it in\n`MetadataExt` via a `size()` function, similar to the corresponding Unix\nfunction.\n\nr? ``````@alexcrichton``````\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d80033f048d88bce20d4785ea7afdd88b4295f35", "html_url": "https://github.com/rust-lang/rust/commit/d80033f048d88bce20d4785ea7afdd88b4295f35", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d80033f048d88bce20d4785ea7afdd88b4295f35/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f5b68a4444a96f8a2915dfa8b7fc9b641f56bdf2", "url": "https://api.github.com/repos/rust-lang/rust/commits/f5b68a4444a96f8a2915dfa8b7fc9b641f56bdf2", "html_url": "https://github.com/rust-lang/rust/commit/f5b68a4444a96f8a2915dfa8b7fc9b641f56bdf2"}, {"sha": "e8dcc02dc5bb8ee26c22d67efa4ede281927e5cb", "url": "https://api.github.com/repos/rust-lang/rust/commits/e8dcc02dc5bb8ee26c22d67efa4ede281927e5cb", "html_url": "https://github.com/rust-lang/rust/commit/e8dcc02dc5bb8ee26c22d67efa4ede281927e5cb"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "6472642f034990e4d0058830ff27bc8a1b403fa2", "filename": "library/std/src/sys/wasi/ext/fs.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/d80033f048d88bce20d4785ea7afdd88b4295f35/library%2Fstd%2Fsrc%2Fsys%2Fwasi%2Fext%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d80033f048d88bce20d4785ea7afdd88b4295f35/library%2Fstd%2Fsrc%2Fsys%2Fwasi%2Fext%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwasi%2Fext%2Ffs.rs?ref=d80033f048d88bce20d4785ea7afdd88b4295f35", "patch": "@@ -400,6 +400,8 @@ pub trait MetadataExt {\n     fn ino(&self) -> u64;\n     /// Returns the `st_nlink` field of the internal `filestat_t`\n     fn nlink(&self) -> u64;\n+    /// Returns the `st_size` field of the internal `filestat_t`\n+    fn size(&self) -> u64;\n     /// Returns the `st_atim` field of the internal `filestat_t`\n     fn atim(&self) -> u64;\n     /// Returns the `st_mtim` field of the internal `filestat_t`\n@@ -418,6 +420,9 @@ impl MetadataExt for fs::Metadata {\n     fn nlink(&self) -> u64 {\n         self.as_inner().as_wasi().nlink\n     }\n+    fn size(&self) -> u64 {\n+        self.as_inner().as_wasi().size\n+    }\n     fn atim(&self) -> u64 {\n         self.as_inner().as_wasi().atim\n     }"}]}