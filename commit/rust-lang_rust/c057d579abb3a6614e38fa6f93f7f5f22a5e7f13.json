{"sha": "c057d579abb3a6614e38fa6f93f7f5f22a5e7f13", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMwNTdkNTc5YWJiM2E2NjE0ZTM4ZmE2ZjkzZjdmNWYyMmE1ZTdmMTM=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2018-08-29T00:23:28Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2018-09-08T11:15:11Z"}, "message": "resolve: Relax shadowing restriction on macro-expanded macros\n\n... for both legacy and modern macros.\nFix previously introduced regressions, add tests.", "tree": {"sha": "533d78bc75fec79e00d31b7ed8b08658e0b6dce6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/533d78bc75fec79e00d31b7ed8b08658e0b6dce6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c057d579abb3a6614e38fa6f93f7f5f22a5e7f13", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c057d579abb3a6614e38fa6f93f7f5f22a5e7f13", "html_url": "https://github.com/rust-lang/rust/commit/c057d579abb3a6614e38fa6f93f7f5f22a5e7f13", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c057d579abb3a6614e38fa6f93f7f5f22a5e7f13/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "27235698f5c73b12539e4765e8dccfec8e27c533", "url": "https://api.github.com/repos/rust-lang/rust/commits/27235698f5c73b12539e4765e8dccfec8e27c533", "html_url": "https://github.com/rust-lang/rust/commit/27235698f5c73b12539e4765e8dccfec8e27c533"}], "stats": {"total": 89, "additions": 57, "deletions": 32}, "files": [{"sha": "b690f305f169aaa45f7c5f6d667ada8b591fa61f", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/c057d579abb3a6614e38fa6f93f7f5f22a5e7f13/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c057d579abb3a6614e38fa6f93f7f5f22a5e7f13/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=c057d579abb3a6614e38fa6f93f7f5f22a5e7f13", "patch": "@@ -1274,9 +1274,18 @@ impl<'a> NameBinding<'a> {\n     // expansion round `max(invoc_id, binding)` when they both emerged from macros.\n     // Then this function returns `true` if `self` may emerge from a macro *after* that\n     // in some later round and screw up our previously found resolution.\n-    fn may_appear_after(&self, _invoc_id: Mark, _binding: &NameBinding) -> bool {\n-        // FIXME: This is a very conservative estimation.\n-        self.expansion != Mark::root()\n+    fn may_appear_after(&self, invoc_id: Mark, binding: &NameBinding) -> bool {\n+        // self > max(invoc_id, binding) => !(self <= invoc_id || self <= binding)\n+        // Expansions are partially ordered, so \"may appear after\" is an inversion of\n+        // \"certainly appears before or simultaneously\" and includes unordered cases.\n+        let self_parent_expansion = self.expansion;\n+        let other_parent_expansion = binding.expansion;\n+        let invoc_parent_expansion = invoc_id.parent();\n+        let certainly_before_other_or_simultaneously =\n+            other_parent_expansion.is_descendant_of(self_parent_expansion);\n+        let certainly_before_invoc_or_simultaneously =\n+            invoc_parent_expansion.is_descendant_of(self_parent_expansion);\n+        !(certainly_before_other_or_simultaneously || certainly_before_invoc_or_simultaneously)\n     }\n }\n "}, {"sha": "43c3e1e7666239568d219c4dd2299e8ae8521132", "filename": "src/libunwind/libunwind.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c057d579abb3a6614e38fa6f93f7f5f22a5e7f13/src%2Flibunwind%2Flibunwind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c057d579abb3a6614e38fa6f93f7f5f22a5e7f13/src%2Flibunwind%2Flibunwind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibunwind%2Flibunwind.rs?ref=c057d579abb3a6614e38fa6f93f7f5f22a5e7f13", "patch": "@@ -10,7 +10,7 @@\n \n #![allow(nonstandard_style)]\n \n-macro_rules! cfg_if2 {\n+macro_rules! cfg_if {\n     ( $( if #[cfg( $meta:meta )] { $($it1:item)* } else { $($it2:item)* } )* ) =>\n         ( $( $( #[cfg($meta)] $it1)* $( #[cfg(not($meta))] $it2)* )* )\n }\n@@ -92,7 +92,7 @@ extern \"C\" {\n     pub fn _Unwind_GetDataRelBase(ctx: *mut _Unwind_Context) -> _Unwind_Ptr;\n }\n \n-cfg_if2! {\n+cfg_if! {\n if #[cfg(all(any(target_os = \"ios\", target_os = \"netbsd\", not(target_arch = \"arm\"))))] {\n     // Not ARM EHABI\n     #[repr(C)]\n@@ -238,4 +238,4 @@ if #[cfg(not(all(target_os = \"ios\", target_arch = \"arm\")))] {\n         _Unwind_SjLj_RaiseException(exc)\n     }\n }\n-} // cfg_if2!\n+} // cfg_if!"}, {"sha": "7f716c5012efda47aaeb73041dd7307005139a6e", "filename": "src/test/ui/macros/auxiliary/macro-in-other-crate.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/c057d579abb3a6614e38fa6f93f7f5f22a5e7f13/src%2Ftest%2Fui%2Fmacros%2Fauxiliary%2Fmacro-in-other-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c057d579abb3a6614e38fa6f93f7f5f22a5e7f13/src%2Ftest%2Fui%2Fmacros%2Fauxiliary%2Fmacro-in-other-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fauxiliary%2Fmacro-in-other-crate.rs?ref=c057d579abb3a6614e38fa6f93f7f5f22a5e7f13", "patch": "@@ -17,3 +17,8 @@ macro_rules! mac {\n macro_rules! inline {\n     () => ()\n }\n+\n+#[macro_export]\n+macro_rules! from_prelude {\n+    () => ()\n+}"}, {"sha": "8d5b03b098f2934a9ebecd9bb29b7f5c2a6360eb", "filename": "src/test/ui/macros/macro-shadowing-relaxed.rs", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/c057d579abb3a6614e38fa6f93f7f5f22a5e7f13/src%2Ftest%2Fui%2Fmacros%2Fmacro-shadowing-relaxed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c057d579abb3a6614e38fa6f93f7f5f22a5e7f13/src%2Ftest%2Fui%2Fmacros%2Fmacro-shadowing-relaxed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-shadowing-relaxed.rs?ref=c057d579abb3a6614e38fa6f93f7f5f22a5e7f13", "patch": "@@ -0,0 +1,35 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// compile-pass\n+// aux-build:macro-in-other-crate.rs\n+\n+#![feature(decl_macro)]\n+\n+macro_rules! my_include {() => {\n+    // Outer\n+    macro m() {}\n+    #[macro_use(from_prelude)] extern crate macro_in_other_crate;\n+\n+    fn inner() {\n+        // Inner\n+        macro m() {}\n+        macro_rules! from_prelude { () => {} }\n+\n+        // OK, both `m` and `from_prelude` are macro-expanded,\n+        // but no more macro-expanded than their counterpart from outer scope.\n+        m!();\n+        from_prelude!();\n+    }\n+}}\n+\n+my_include!();\n+\n+fn main() {}"}, {"sha": "bf0a7fa21d37acb3126d0292f8efa1e1b1b74ef2", "filename": "src/test/ui/macros/macro-shadowing.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c057d579abb3a6614e38fa6f93f7f5f22a5e7f13/src%2Ftest%2Fui%2Fmacros%2Fmacro-shadowing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c057d579abb3a6614e38fa6f93f7f5f22a5e7f13/src%2Ftest%2Fui%2Fmacros%2Fmacro-shadowing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-shadowing.rs?ref=c057d579abb3a6614e38fa6f93f7f5f22a5e7f13", "patch": "@@ -28,7 +28,7 @@ foo!(); //~ ERROR `foo` is ambiguous\n \n macro_rules! m2 { () => {\n     macro_rules! foo { () => {} }\n-    foo!(); //~ ERROR `foo` is ambiguous\n+    foo!();\n }}\n m2!();\n //^ Since `foo` is not used outside this expansion, it is not a shadowing error."}, {"sha": "04f4abc401337c2c06ce99a2162d62fd44529c66", "filename": "src/test/ui/macros/macro-shadowing.stderr", "status": "modified", "additions": 1, "deletions": 25, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/c057d579abb3a6614e38fa6f93f7f5f22a5e7f13/src%2Ftest%2Fui%2Fmacros%2Fmacro-shadowing.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c057d579abb3a6614e38fa6f93f7f5f22a5e7f13/src%2Ftest%2Fui%2Fmacros%2Fmacro-shadowing.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-shadowing.stderr?ref=c057d579abb3a6614e38fa6f93f7f5f22a5e7f13", "patch": "@@ -30,30 +30,6 @@ LL | macro_rules! foo { () => {} }\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    = note: macro-expanded macros do not shadow\n \n-error[E0659]: `foo` is ambiguous\n-  --> $DIR/macro-shadowing.rs:31:5\n-   |\n-LL |     foo!(); //~ ERROR `foo` is ambiguous\n-   |     ^^^\n-   |\n-note: `foo` could refer to the name defined here\n-  --> $DIR/macro-shadowing.rs:30:5\n-   |\n-LL |     macro_rules! foo { () => {} }\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-...\n-LL | m2!();\n-   | ------ in this macro invocation\n-note: `foo` could also refer to the name defined here\n-  --> $DIR/macro-shadowing.rs:20:5\n-   |\n-LL |     macro_rules! foo { () => {} }\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-...\n-LL | m1!();\n-   | ------ in this macro invocation\n-   = note: macro-expanded macros do not shadow\n-\n-error: aborting due to 3 previous errors\n+error: aborting due to 2 previous errors\n \n For more information about this error, try `rustc --explain E0659`."}]}