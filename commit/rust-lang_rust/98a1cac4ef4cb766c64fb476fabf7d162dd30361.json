{"sha": "98a1cac4ef4cb766c64fb476fabf7d162dd30361", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk4YTFjYWM0ZWY0Y2I3NjZjNjRmYjQ3NmZhYmY3ZDE2MmRkMzAzNjE=", "commit": {"author": {"name": "David Cook", "email": "divergentdave@gmail.com", "date": "2020-02-06T23:50:33Z"}, "committer": {"name": "David Cook", "email": "divergentdave@gmail.com", "date": "2020-02-06T23:50:33Z"}, "message": "Add tests to cover SEEK_CUR and SEEK_END", "tree": {"sha": "f49da224311f47f524f925073dfed6db7a05a606", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f49da224311f47f524f925073dfed6db7a05a606"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/98a1cac4ef4cb766c64fb476fabf7d162dd30361", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/98a1cac4ef4cb766c64fb476fabf7d162dd30361", "html_url": "https://github.com/rust-lang/rust/commit/98a1cac4ef4cb766c64fb476fabf7d162dd30361", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/98a1cac4ef4cb766c64fb476fabf7d162dd30361/comments", "author": {"login": "divergentdave", "id": 181772, "node_id": "MDQ6VXNlcjE4MTc3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/181772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/divergentdave", "html_url": "https://github.com/divergentdave", "followers_url": "https://api.github.com/users/divergentdave/followers", "following_url": "https://api.github.com/users/divergentdave/following{/other_user}", "gists_url": "https://api.github.com/users/divergentdave/gists{/gist_id}", "starred_url": "https://api.github.com/users/divergentdave/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/divergentdave/subscriptions", "organizations_url": "https://api.github.com/users/divergentdave/orgs", "repos_url": "https://api.github.com/users/divergentdave/repos", "events_url": "https://api.github.com/users/divergentdave/events{/privacy}", "received_events_url": "https://api.github.com/users/divergentdave/received_events", "type": "User", "site_admin": false}, "committer": {"login": "divergentdave", "id": 181772, "node_id": "MDQ6VXNlcjE4MTc3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/181772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/divergentdave", "html_url": "https://github.com/divergentdave", "followers_url": "https://api.github.com/users/divergentdave/followers", "following_url": "https://api.github.com/users/divergentdave/following{/other_user}", "gists_url": "https://api.github.com/users/divergentdave/gists{/gist_id}", "starred_url": "https://api.github.com/users/divergentdave/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/divergentdave/subscriptions", "organizations_url": "https://api.github.com/users/divergentdave/orgs", "repos_url": "https://api.github.com/users/divergentdave/repos", "events_url": "https://api.github.com/users/divergentdave/events{/privacy}", "received_events_url": "https://api.github.com/users/divergentdave/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2f25e4cd17e0f97d4da9547c9b2201b5918c34b5", "url": "https://api.github.com/repos/rust-lang/rust/commits/2f25e4cd17e0f97d4da9547c9b2201b5918c34b5", "html_url": "https://github.com/rust-lang/rust/commit/2f25e4cd17e0f97d4da9547c9b2201b5918c34b5"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "73e6f37453fa5c73a2148f1dced97ab5b95e393a", "filename": "tests/run-pass/fs.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/98a1cac4ef4cb766c64fb476fabf7d162dd30361/tests%2Frun-pass%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98a1cac4ef4cb766c64fb476fabf7d162dd30361/tests%2Frun-pass%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Ffs.rs?ref=98a1cac4ef4cb766c64fb476fabf7d162dd30361", "patch": "@@ -45,6 +45,17 @@ fn main() {\n     let mut contents = Vec::new();\n     file.read_to_end(&mut contents).unwrap();\n     assert_eq!(bytes, contents.as_slice());\n+    // Test seeking relative to the end of the file.\n+    file.seek(SeekFrom::End(-1)).unwrap();\n+    let mut contents = Vec::new();\n+    file.read_to_end(&mut contents).unwrap();\n+    assert_eq!(&bytes[bytes.len() - 1..], contents.as_slice());\n+    // Test seeking relative to the current position.\n+    file.seek(SeekFrom::Start(5)).unwrap();\n+    file.seek(SeekFrom::Current(-3)).unwrap();\n+    let mut contents = Vec::new();\n+    file.read_to_end(&mut contents).unwrap();\n+    assert_eq!(&bytes[2..], contents.as_slice());\n \n     // Test that metadata of an absolute path is correct.\n     test_metadata(bytes, &path).unwrap();"}]}