{"sha": "eaeabbb815b30b9169f06eaf30d8225055662196", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVhZWFiYmI4MTViMzBiOTE2OWYwNmVhZjMwZDgyMjUwNTU2NjIxOTY=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-12-17T13:29:29Z"}, "committer": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-12-17T13:29:29Z"}, "message": "Add `AttrDefId::krate`\n\nAccess to the containing crate will be needed to handle `cfg_attr`", "tree": {"sha": "bad018709227372d66c7caec82f6bef5f5b1c893", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bad018709227372d66c7caec82f6bef5f5b1c893"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eaeabbb815b30b9169f06eaf30d8225055662196", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eaeabbb815b30b9169f06eaf30d8225055662196", "html_url": "https://github.com/rust-lang/rust/commit/eaeabbb815b30b9169f06eaf30d8225055662196", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eaeabbb815b30b9169f06eaf30d8225055662196/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ce8ec2863887618dc40c47c075a83d7704452b0b", "url": "https://api.github.com/repos/rust-lang/rust/commits/ce8ec2863887618dc40c47c075a83d7704452b0b", "html_url": "https://github.com/rust-lang/rust/commit/ce8ec2863887618dc40c47c075a83d7704452b0b"}], "stats": {"total": 30, "additions": 30, "deletions": 0}, "files": [{"sha": "ba09a9126bffb461b29ec443ddd7bd1a8161d9aa", "filename": "crates/hir_def/src/lib.rs", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/eaeabbb815b30b9169f06eaf30d8225055662196/crates%2Fhir_def%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eaeabbb815b30b9169f06eaf30d8225055662196/crates%2Fhir_def%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Flib.rs?ref=eaeabbb815b30b9169f06eaf30d8225055662196", "patch": "@@ -425,6 +425,16 @@ impl HasModule for AdtId {\n     }\n }\n \n+impl HasModule for VariantId {\n+    fn module(&self, db: &dyn db::DefDatabase) -> ModuleId {\n+        match self {\n+            VariantId::EnumVariantId(it) => it.parent.lookup(db).container.module(db),\n+            VariantId::StructId(it) => it.lookup(db).container.module(db),\n+            VariantId::UnionId(it) => it.lookup(db).container.module(db),\n+        }\n+    }\n+}\n+\n impl HasModule for DefWithBodyId {\n     fn module(&self, db: &dyn db::DefDatabase) -> ModuleId {\n         match self {\n@@ -465,6 +475,26 @@ impl HasModule for StaticLoc {\n     }\n }\n \n+impl AttrDefId {\n+    pub fn krate(&self, db: &dyn db::DefDatabase) -> CrateId {\n+        match self {\n+            AttrDefId::ModuleId(it) => it.krate,\n+            AttrDefId::FieldId(it) => it.parent.module(db).krate,\n+            AttrDefId::AdtId(it) => it.module(db).krate,\n+            AttrDefId::FunctionId(it) => it.lookup(db).module(db).krate,\n+            AttrDefId::EnumVariantId(it) => it.parent.lookup(db).container.module(db).krate,\n+            AttrDefId::StaticId(it) => it.lookup(db).module(db).krate,\n+            AttrDefId::ConstId(it) => it.lookup(db).module(db).krate,\n+            AttrDefId::TraitId(it) => it.lookup(db).container.module(db).krate,\n+            AttrDefId::TypeAliasId(it) => it.lookup(db).module(db).krate,\n+            AttrDefId::ImplId(it) => it.lookup(db).container.module(db).krate,\n+            // FIXME: `MacroDefId` should store the defining module, then this can implement\n+            // `HasModule`\n+            AttrDefId::MacroDefId(it) => it.krate,\n+        }\n+    }\n+}\n+\n /// A helper trait for converting to MacroCallId\n pub trait AsMacroCall {\n     fn as_call_id("}]}