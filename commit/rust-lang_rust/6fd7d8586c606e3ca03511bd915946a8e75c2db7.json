{"sha": "6fd7d8586c606e3ca03511bd915946a8e75c2db7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZmZDdkODU4NmM2MDZlM2NhMDM1MTFiZDkxNTk0NmE4ZTc1YzJkYjc=", "commit": {"author": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2017-08-11T10:35:54Z"}, "committer": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2017-08-14T09:21:34Z"}, "message": "Fix some merge fallout.", "tree": {"sha": "a574a837f0e0116de958a763408d109c201227eb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a574a837f0e0116de958a763408d109c201227eb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6fd7d8586c606e3ca03511bd915946a8e75c2db7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6fd7d8586c606e3ca03511bd915946a8e75c2db7", "html_url": "https://github.com/rust-lang/rust/commit/6fd7d8586c606e3ca03511bd915946a8e75c2db7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6fd7d8586c606e3ca03511bd915946a8e75c2db7/comments", "author": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a69eaf62c5e325c96c9924102829a42cbfd37424", "url": "https://api.github.com/repos/rust-lang/rust/commits/a69eaf62c5e325c96c9924102829a42cbfd37424", "html_url": "https://github.com/rust-lang/rust/commit/a69eaf62c5e325c96c9924102829a42cbfd37424"}], "stats": {"total": 19, "additions": 4, "deletions": 15}, "files": [{"sha": "7f76e1bf770bf26c5549a66aec2a51dc998869f6", "filename": "src/librustc/hir/def_id.rs", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/6fd7d8586c606e3ca03511bd915946a8e75c2db7/src%2Flibrustc%2Fhir%2Fdef_id.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6fd7d8586c606e3ca03511bd915946a8e75c2db7/src%2Flibrustc%2Fhir%2Fdef_id.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fdef_id.rs?ref=6fd7d8586c606e3ca03511bd915946a8e75c2db7", "patch": "@@ -201,11 +201,4 @@ impl DefId {\n     pub fn is_local(&self) -> bool {\n         self.krate == LOCAL_CRATE\n     }\n-\n-    pub fn invalid() -> DefId {\n-        DefId {\n-            krate: INVALID_CRATE,\n-            index: CRATE_DEF_INDEX,\n-        }\n-    }\n }"}, {"sha": "8a2b115e58d3d083b1abf9532f13120a803e20c2", "filename": "src/librustc/middle/dead.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6fd7d8586c606e3ca03511bd915946a8e75c2db7/src%2Flibrustc%2Fmiddle%2Fdead.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6fd7d8586c606e3ca03511bd915946a8e75c2db7/src%2Flibrustc%2Fmiddle%2Fdead.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fdead.rs?ref=6fd7d8586c606e3ca03511bd915946a8e75c2db7", "patch": "@@ -119,8 +119,6 @@ impl<'a, 'tcx> MarkSymbolVisitor<'a, 'tcx> {\n \n     fn handle_field_pattern_match(&mut self, lhs: &hir::Pat, def: Def,\n                                   pats: &[codemap::Spanned<hir::FieldPat>]) {\n-\n-\n         let variant = match self.tables.node_id_to_type(lhs.hir_id).sty {\n             ty::TyAdt(adt, _) => adt.variant_of_def(def),\n             _ => span_bug!(lhs.span, \"non-ADT in struct pattern\")"}, {"sha": "2ef65a26b4ba16eabab089e9c3cfacb6993ab25e", "filename": "src/librustc/ty/context.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6fd7d8586c606e3ca03511bd915946a8e75c2db7/src%2Flibrustc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6fd7d8586c606e3ca03511bd915946a8e75c2db7/src%2Flibrustc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fcontext.rs?ref=6fd7d8586c606e3ca03511bd915946a8e75c2db7", "patch": "@@ -285,7 +285,6 @@ pub struct LocalTableInContextMut<'a, V: 'a> {\n }\n \n impl<'a, V> LocalTableInContextMut<'a, V> {\n-\n     pub fn get_mut(&mut self, id: hir::HirId) -> Option<&mut V> {\n         validate_hir_id_for_typeck_tables(self.local_id_root, id, true);\n         self.data.get_mut(&id.local_id)"}, {"sha": "35af83c8ae23a2e46bae33a8e090692aca7a5344", "filename": "src/librustc_borrowck/borrowck/gather_loans/mod.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6fd7d8586c606e3ca03511bd915946a8e75c2db7/src%2Flibrustc_borrowck%2Fborrowck%2Fgather_loans%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6fd7d8586c606e3ca03511bd915946a8e75c2db7/src%2Flibrustc_borrowck%2Fborrowck%2Fgather_loans%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fborrowck%2Fgather_loans%2Fmod.rs?ref=6fd7d8586c606e3ca03511bd915946a8e75c2db7", "patch": "@@ -449,7 +449,8 @@ impl<'a, 'tcx> GatherLoanCtxt<'a, 'tcx> {\n                     }\n                     None\n                 }\n-                LpUpvar(ty::UpvarId{ var_id: local_id, closure_expr_id: _ }) => {\n+                LpUpvar(ty::UpvarId{ var_id, closure_expr_id: _ }) => {\n+                    let local_id = self.tcx().hir.def_index_to_node_id(var_id);\n                     self.tcx().used_mut_nodes.borrow_mut().insert(local_id);\n                     None\n                 }"}, {"sha": "9b90360109ee2b5389873a45cf973894e4805e29", "filename": "src/librustc_lint/unused.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6fd7d8586c606e3ca03511bd915946a8e75c2db7/src%2Flibrustc_lint%2Funused.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6fd7d8586c606e3ca03511bd915946a8e75c2db7/src%2Flibrustc_lint%2Funused.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Funused.rs?ref=6fd7d8586c606e3ca03511bd915946a8e75c2db7", "patch": "@@ -155,12 +155,12 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for UnusedResults {\n         let maybe_def = match expr.node {\n             hir::ExprCall(ref callee, _) => {\n                 match callee.node {\n-                    hir::ExprPath(ref qpath) => Some(cx.tables.qpath_def(qpath, callee.id)),\n+                    hir::ExprPath(ref qpath) => Some(cx.tables.qpath_def(qpath, callee.hir_id)),\n                     _ => None\n                 }\n             },\n             hir::ExprMethodCall(..) => {\n-                cx.tables.type_dependent_defs.get(&expr.id).cloned()\n+                cx.tables.type_dependent_defs().get(expr.hir_id).cloned()\n             },\n             _ => { None }\n         };"}, {"sha": "76a8850291f8d2aec85ea2c07b2f92cb4916b4ad", "filename": "src/librustc_privacy/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6fd7d8586c606e3ca03511bd915946a8e75c2db7/src%2Flibrustc_privacy%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6fd7d8586c606e3ca03511bd915946a8e75c2db7/src%2Flibrustc_privacy%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_privacy%2Flib.rs?ref=6fd7d8586c606e3ca03511bd915946a8e75c2db7", "patch": "@@ -1655,10 +1655,8 @@ fn privacy_access_levels<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n     assert_eq!(krate, LOCAL_CRATE);\n \n     let krate = tcx.hir.krate();\n-\n     let empty_tables = ty::TypeckTables::empty(None);\n \n-\n     // Check privacy of names not checked in previous compilation stages.\n     let mut visitor = NamePrivacyVisitor {\n         tcx: tcx,"}]}