{"sha": "aa2abc9d1236b3a74f49f932c02ac9b30f7f36c9", "node_id": "C_kwDOAAsO6NoAKGFhMmFiYzlkMTIzNmIzYTc0ZjQ5ZjkzMmMwMmFjOWIzMGY3ZjM2Yzk", "commit": {"author": {"name": "David Wood", "email": "david.wood@huawei.com", "date": "2022-04-26T05:41:31Z"}, "committer": {"name": "David Wood", "email": "david.wood@huawei.com", "date": "2022-04-29T01:05:20Z"}, "message": "tests: move diagnostic derive test to directory\n\nMove existing test for session diagnostic derive to a subdirectory.\n\nSigned-off-by: David Wood <david.wood@huawei.com>", "tree": {"sha": "21b2da26c196da7cd735ef4f4b83ab45ad4ef13d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/21b2da26c196da7cd735ef4f4b83ab45ad4ef13d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aa2abc9d1236b3a74f49f932c02ac9b30f7f36c9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aa2abc9d1236b3a74f49f932c02ac9b30f7f36c9", "html_url": "https://github.com/rust-lang/rust/commit/aa2abc9d1236b3a74f49f932c02ac9b30f7f36c9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aa2abc9d1236b3a74f49f932c02ac9b30f7f36c9/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "73fa217bc11fbac76f730223f6766c8e03513b5e", "url": "https://api.github.com/repos/rust-lang/rust/commits/73fa217bc11fbac76f730223f6766c8e03513b5e", "html_url": "https://github.com/rust-lang/rust/commit/73fa217bc11fbac76f730223f6766c8e03513b5e"}], "stats": {"total": 82, "additions": 41, "deletions": 41}, "files": [{"sha": "adec548b39053d340b02d04f4dc108a4a5d0df24", "filename": "src/test/ui-fulldeps/session-diagnostic/diagnostic-derive.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/aa2abc9d1236b3a74f49f932c02ac9b30f7f36c9/src%2Ftest%2Fui-fulldeps%2Fsession-diagnostic%2Fdiagnostic-derive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa2abc9d1236b3a74f49f932c02ac9b30f7f36c9/src%2Ftest%2Fui-fulldeps%2Fsession-diagnostic%2Fdiagnostic-derive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fsession-diagnostic%2Fdiagnostic-derive.rs?ref=aa2abc9d1236b3a74f49f932c02ac9b30f7f36c9", "previous_filename": "src/test/ui-fulldeps/session-derive-errors.rs"}, {"sha": "902d8251576d080e2fe608f19e0d61334da0872a", "filename": "src/test/ui-fulldeps/session-diagnostic/diagnostic-derive.stderr", "status": "renamed", "additions": 41, "deletions": 41, "changes": 82, "blob_url": "https://github.com/rust-lang/rust/blob/aa2abc9d1236b3a74f49f932c02ac9b30f7f36c9/src%2Ftest%2Fui-fulldeps%2Fsession-diagnostic%2Fdiagnostic-derive.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aa2abc9d1236b3a74f49f932c02ac9b30f7f36c9/src%2Ftest%2Fui-fulldeps%2Fsession-diagnostic%2Fdiagnostic-derive.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fsession-diagnostic%2Fdiagnostic-derive.stderr?ref=aa2abc9d1236b3a74f49f932c02ac9b30f7f36c9", "patch": "@@ -1,5 +1,5 @@\n error: `#[derive(SessionDiagnostic)]` can only be used on structs\n-  --> $DIR/session-derive-errors.rs:37:1\n+  --> $DIR/diagnostic-derive.rs:37:1\n    |\n LL | / #[error(code = \"E0123\", slug = \"foo\")]\n LL | |\n@@ -10,19 +10,19 @@ LL | | }\n    | |_^\n \n error: `#[error = ...]` is not a valid `SessionDiagnostic` struct attribute\n-  --> $DIR/session-derive-errors.rs:46:1\n+  --> $DIR/diagnostic-derive.rs:46:1\n    |\n LL | #[error = \"E0123\"]\n    | ^^^^^^^^^^^^^^^^^^\n \n error: `#[nonsense(...)]` is not a valid `SessionDiagnostic` struct attribute\n-  --> $DIR/session-derive-errors.rs:51:1\n+  --> $DIR/diagnostic-derive.rs:51:1\n    |\n LL | #[nonsense(code = \"E0123\", slug = \"foo\")]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: diagnostic kind not specified\n-  --> $DIR/session-derive-errors.rs:51:1\n+  --> $DIR/diagnostic-derive.rs:51:1\n    |\n LL | / #[nonsense(code = \"E0123\", slug = \"foo\")]\n LL | |\n@@ -34,13 +34,13 @@ LL | | struct InvalidStructAttr {}\n    = help: use the `#[error(...)]` attribute to create an error\n \n error: `#[error(\"...\")]` is not a valid `SessionDiagnostic` struct attribute\n-  --> $DIR/session-derive-errors.rs:58:9\n+  --> $DIR/diagnostic-derive.rs:58:9\n    |\n LL | #[error(\"E0123\")]\n    |         ^^^^^^^\n \n error: `slug` not specified\n-  --> $DIR/session-derive-errors.rs:58:1\n+  --> $DIR/diagnostic-derive.rs:58:1\n    |\n LL | / #[error(\"E0123\")]\n LL | |\n@@ -51,95 +51,95 @@ LL | | struct InvalidLitNestedAttr {}\n    = help: use the `#[error(slug = \"...\")]` attribute to set this diagnostic's slug\n \n error: `#[error(nonsense)]` is not a valid `SessionDiagnostic` struct attribute\n-  --> $DIR/session-derive-errors.rs:64:9\n+  --> $DIR/diagnostic-derive.rs:64:9\n    |\n LL | #[error(nonsense, code = \"E0123\", slug = \"foo\")]\n    |         ^^^^^^^^\n \n error: `#[error(nonsense(...))]` is not a valid `SessionDiagnostic` struct attribute\n-  --> $DIR/session-derive-errors.rs:69:9\n+  --> $DIR/diagnostic-derive.rs:69:9\n    |\n LL | #[error(nonsense(\"foo\"), code = \"E0123\", slug = \"foo\")]\n    |         ^^^^^^^^^^^^^^^\n \n error: `#[error(nonsense = ...)]` is not a valid `SessionDiagnostic` struct attribute\n-  --> $DIR/session-derive-errors.rs:74:9\n+  --> $DIR/diagnostic-derive.rs:74:9\n    |\n LL | #[error(nonsense = \"...\", code = \"E0123\", slug = \"foo\")]\n    |         ^^^^^^^^^^^^^^^^\n \n error: `#[error(nonsense = ...)]` is not a valid `SessionDiagnostic` struct attribute\n-  --> $DIR/session-derive-errors.rs:79:9\n+  --> $DIR/diagnostic-derive.rs:79:9\n    |\n LL | #[error(nonsense = 4, code = \"E0123\", slug = \"foo\")]\n    |         ^^^^^^^^^^^^\n    |\n    = help: value must be a string\n \n error: `#[suggestion = ...]` is not a valid `SessionDiagnostic` field attribute\n-  --> $DIR/session-derive-errors.rs:86:5\n+  --> $DIR/diagnostic-derive.rs:86:5\n    |\n LL |     #[suggestion = \"bar\"]\n    |     ^^^^^^^^^^^^^^^^^^^^^\n \n error: `error` specified multiple times\n-  --> $DIR/session-derive-errors.rs:93:1\n+  --> $DIR/diagnostic-derive.rs:93:1\n    |\n LL | #[error(code = \"E0456\", slug = \"bar\")]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n note: previously specified here\n-  --> $DIR/session-derive-errors.rs:92:1\n+  --> $DIR/diagnostic-derive.rs:92:1\n    |\n LL | #[error(code = \"E0123\", slug = \"foo\")]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: `warning` specified when `error` was already specified\n-  --> $DIR/session-derive-errors.rs:98:1\n+  --> $DIR/diagnostic-derive.rs:98:1\n    |\n LL | #[warning(code = \"E0293\", slug = \"bar\")]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n note: previously specified here\n-  --> $DIR/session-derive-errors.rs:97:1\n+  --> $DIR/diagnostic-derive.rs:97:1\n    |\n LL | #[error(code = \"E0123\", slug = \"foo\")]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: `code` specified multiple times\n-  --> $DIR/session-derive-errors.rs:103:32\n+  --> $DIR/diagnostic-derive.rs:103:32\n    |\n LL | #[error(code = \"E0456\", code = \"E0457\", slug = \"bar\")]\n    |                                ^^^^^^^\n    |\n note: previously specified here\n-  --> $DIR/session-derive-errors.rs:103:16\n+  --> $DIR/diagnostic-derive.rs:103:16\n    |\n LL | #[error(code = \"E0456\", code = \"E0457\", slug = \"bar\")]\n    |                ^^^^^^^\n \n error: `slug` specified multiple times\n-  --> $DIR/session-derive-errors.rs:107:46\n+  --> $DIR/diagnostic-derive.rs:107:46\n    |\n LL | #[error(code = \"E0456\", slug = \"foo\", slug = \"bar\")]\n    |                                              ^^^^^\n    |\n note: previously specified here\n-  --> $DIR/session-derive-errors.rs:107:32\n+  --> $DIR/diagnostic-derive.rs:107:32\n    |\n LL | #[error(code = \"E0456\", slug = \"foo\", slug = \"bar\")]\n    |                                ^^^^^\n \n error: diagnostic kind not specified\n-  --> $DIR/session-derive-errors.rs:111:1\n+  --> $DIR/diagnostic-derive.rs:111:1\n    |\n LL | struct KindNotProvided {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: use the `#[error(...)]` attribute to create an error\n \n error: `slug` not specified\n-  --> $DIR/session-derive-errors.rs:114:1\n+  --> $DIR/diagnostic-derive.rs:114:1\n    |\n LL | / #[error(code = \"E0456\")]\n LL | | struct SlugNotProvided {}\n@@ -148,31 +148,31 @@ LL | | struct SlugNotProvided {}\n    = help: use the `#[error(slug = \"...\")]` attribute to set this diagnostic's slug\n \n error: the `#[primary_span]` attribute can only be applied to fields of type `Span`\n-  --> $DIR/session-derive-errors.rs:124:5\n+  --> $DIR/diagnostic-derive.rs:124:5\n    |\n LL |     #[primary_span]\n    |     ^^^^^^^^^^^^^^^\n \n error: `#[nonsense]` is not a valid `SessionDiagnostic` field attribute\n-  --> $DIR/session-derive-errors.rs:132:5\n+  --> $DIR/diagnostic-derive.rs:132:5\n    |\n LL |     #[nonsense]\n    |     ^^^^^^^^^^^\n \n error: the `#[label = ...]` attribute can only be applied to fields of type `Span`\n-  --> $DIR/session-derive-errors.rs:149:5\n+  --> $DIR/diagnostic-derive.rs:149:5\n    |\n LL |     #[label = \"bar\"]\n    |     ^^^^^^^^^^^^^^^^\n \n error: `name` doesn't refer to a field on this type\n-  --> $DIR/session-derive-errors.rs:157:42\n+  --> $DIR/diagnostic-derive.rs:157:42\n    |\n LL |     #[suggestion(message = \"bar\", code = \"{name}\")]\n    |                                          ^^^^^^^^\n \n error: invalid format string: expected `'}'` but string was terminated\n-  --> $DIR/session-derive-errors.rs:162:16\n+  --> $DIR/diagnostic-derive.rs:162:16\n    |\n LL | #[derive(SessionDiagnostic)]\n    |           -    ^ expected `'}'` in format string\n@@ -183,7 +183,7 @@ LL | #[derive(SessionDiagnostic)]\n    = note: this error originates in the derive macro `SessionDiagnostic` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: invalid format string: unmatched `}` found\n-  --> $DIR/session-derive-errors.rs:172:15\n+  --> $DIR/diagnostic-derive.rs:172:15\n    |\n LL | #[derive(SessionDiagnostic)]\n    |               ^ unmatched `}` in format string\n@@ -192,25 +192,25 @@ LL | #[derive(SessionDiagnostic)]\n    = note: this error originates in the derive macro `SessionDiagnostic` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: the `#[label = ...]` attribute can only be applied to fields of type `Span`\n-  --> $DIR/session-derive-errors.rs:192:5\n+  --> $DIR/diagnostic-derive.rs:192:5\n    |\n LL |     #[label = \"bar\"]\n    |     ^^^^^^^^^^^^^^^^\n \n error: `#[suggestion(nonsense = ...)]` is not a valid `SessionDiagnostic` field attribute\n-  --> $DIR/session-derive-errors.rs:217:18\n+  --> $DIR/diagnostic-derive.rs:217:18\n    |\n LL |     #[suggestion(nonsense = \"bar\")]\n    |                  ^^^^^^^^^^^^^^^^\n \n error: `#[suggestion(msg = ...)]` is not a valid `SessionDiagnostic` field attribute\n-  --> $DIR/session-derive-errors.rs:225:18\n+  --> $DIR/diagnostic-derive.rs:225:18\n    |\n LL |     #[suggestion(msg = \"bar\")]\n    |                  ^^^^^^^^^^^\n \n error: wrong field type for suggestion\n-  --> $DIR/session-derive-errors.rs:247:5\n+  --> $DIR/diagnostic-derive.rs:247:5\n    |\n LL | /     #[suggestion(message = \"bar\", code = \"This is suggested code\")]\n LL | |\n@@ -220,65 +220,65 @@ LL | |     suggestion: Applicability,\n    = help: `#[suggestion(...)]` should be applied to fields of type `Span` or `(Span, Applicability)`\n \n error: type of field annotated with `#[suggestion(...)]` contains more than one `Span`\n-  --> $DIR/session-derive-errors.rs:262:5\n+  --> $DIR/diagnostic-derive.rs:262:5\n    |\n LL | /     #[suggestion(message = \"bar\", code = \"This is suggested code\")]\n LL | |\n LL | |     suggestion: (Span, Span, Applicability),\n    | |___________________________________________^\n \n error: type of field annotated with `#[suggestion(...)]` contains more than one Applicability\n-  --> $DIR/session-derive-errors.rs:270:5\n+  --> $DIR/diagnostic-derive.rs:270:5\n    |\n LL | /     #[suggestion(message = \"bar\", code = \"This is suggested code\")]\n LL | |\n LL | |     suggestion: (Applicability, Applicability, Span),\n    | |____________________________________________________^\n \n error: `#[label(...)]` is not a valid `SessionDiagnostic` field attribute\n-  --> $DIR/session-derive-errors.rs:278:5\n+  --> $DIR/diagnostic-derive.rs:278:5\n    |\n LL |     #[label(\"bar\")]\n    |     ^^^^^^^^^^^^^^^\n \n error: `#[help]` must come after `#[error(..)]` or `#[warn(..)]`\n-  --> $DIR/session-derive-errors.rs:399:1\n+  --> $DIR/diagnostic-derive.rs:399:1\n    |\n LL | #[help]\n    | ^^^^^^^\n \n error: `#[help = ...]` must come after `#[error(..)]` or `#[warn(..)]`\n-  --> $DIR/session-derive-errors.rs:407:1\n+  --> $DIR/diagnostic-derive.rs:407:1\n    |\n LL | #[help = \"bar\"]\n    | ^^^^^^^^^^^^^^^\n \n error: `#[note]` must come after `#[error(..)]` or `#[warn(..)]`\n-  --> $DIR/session-derive-errors.rs:415:1\n+  --> $DIR/diagnostic-derive.rs:415:1\n    |\n LL | #[note]\n    | ^^^^^^^\n \n error: `#[note = ...]` must come after `#[error(..)]` or `#[warn(..)]`\n-  --> $DIR/session-derive-errors.rs:423:1\n+  --> $DIR/diagnostic-derive.rs:423:1\n    |\n LL | #[note = \"bar\"]\n    | ^^^^^^^^^^^^^^^\n \n error: cannot find attribute `nonsense` in this scope\n-  --> $DIR/session-derive-errors.rs:51:3\n+  --> $DIR/diagnostic-derive.rs:51:3\n    |\n LL | #[nonsense(code = \"E0123\", slug = \"foo\")]\n    |   ^^^^^^^^\n \n error: cannot find attribute `nonsense` in this scope\n-  --> $DIR/session-derive-errors.rs:132:7\n+  --> $DIR/diagnostic-derive.rs:132:7\n    |\n LL |     #[nonsense]\n    |       ^^^^^^^^\n \n error[E0599]: no method named `into_diagnostic_arg` found for struct `Hello` in the current scope\n-  --> $DIR/session-derive-errors.rs:322:10\n+  --> $DIR/diagnostic-derive.rs:322:10\n    |\n LL | struct Hello {}\n    | ------------ method `into_diagnostic_arg` not found for this", "previous_filename": "src/test/ui-fulldeps/session-derive-errors.stderr"}]}