{"sha": "7d1a9447ea15e7b7ce845876c8850f0feed54185", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdkMWE5NDQ3ZWExNWU3YjdjZTg0NTg3NmM4ODUwZjBmZWVkNTQxODU=", "commit": {"author": {"name": "Thiago Arrais", "email": "thiago.arrais@gmail.com", "date": "2019-07-08T16:12:51Z"}, "committer": {"name": "Thiago Arrais", "email": "thiago.arrais@gmail.com", "date": "2019-07-08T20:51:13Z"}, "message": "Extract semantic constant", "tree": {"sha": "14661d24ca0877856ee11b733537a587e893ebdd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/14661d24ca0877856ee11b733537a587e893ebdd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7d1a9447ea15e7b7ce845876c8850f0feed54185", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7d1a9447ea15e7b7ce845876c8850f0feed54185", "html_url": "https://github.com/rust-lang/rust/commit/7d1a9447ea15e7b7ce845876c8850f0feed54185", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7d1a9447ea15e7b7ce845876c8850f0feed54185/comments", "author": {"login": "thiagoarrais", "id": 3014, "node_id": "MDQ6VXNlcjMwMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3014?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thiagoarrais", "html_url": "https://github.com/thiagoarrais", "followers_url": "https://api.github.com/users/thiagoarrais/followers", "following_url": "https://api.github.com/users/thiagoarrais/following{/other_user}", "gists_url": "https://api.github.com/users/thiagoarrais/gists{/gist_id}", "starred_url": "https://api.github.com/users/thiagoarrais/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thiagoarrais/subscriptions", "organizations_url": "https://api.github.com/users/thiagoarrais/orgs", "repos_url": "https://api.github.com/users/thiagoarrais/repos", "events_url": "https://api.github.com/users/thiagoarrais/events{/privacy}", "received_events_url": "https://api.github.com/users/thiagoarrais/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thiagoarrais", "id": 3014, "node_id": "MDQ6VXNlcjMwMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3014?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thiagoarrais", "html_url": "https://github.com/thiagoarrais", "followers_url": "https://api.github.com/users/thiagoarrais/followers", "following_url": "https://api.github.com/users/thiagoarrais/following{/other_user}", "gists_url": "https://api.github.com/users/thiagoarrais/gists{/gist_id}", "starred_url": "https://api.github.com/users/thiagoarrais/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thiagoarrais/subscriptions", "organizations_url": "https://api.github.com/users/thiagoarrais/orgs", "repos_url": "https://api.github.com/users/thiagoarrais/repos", "events_url": "https://api.github.com/users/thiagoarrais/events{/privacy}", "received_events_url": "https://api.github.com/users/thiagoarrais/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6d1aaac6c373e4781f779bddf992242abb53c7c3", "url": "https://api.github.com/repos/rust-lang/rust/commits/6d1aaac6c373e4781f779bddf992242abb53c7c3", "html_url": "https://github.com/rust-lang/rust/commit/6d1aaac6c373e4781f779bddf992242abb53c7c3"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "57f63a600a7c7dbea170cc3da2a423c6022a37bf", "filename": "clippy_lints/src/strings.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/7d1a9447ea15e7b7ce845876c8850f0feed54185/clippy_lints%2Fsrc%2Fstrings.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d1a9447ea15e7b7ce845876c8850f0feed54185/clippy_lints%2Fsrc%2Fstrings.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fstrings.rs?ref=7d1a9447ea15e7b7ce845876c8850f0feed54185", "patch": "@@ -138,6 +138,9 @@ fn is_add(cx: &LateContext<'_, '_>, src: &Expr, target: &Expr) -> bool {\n     }\n }\n \n+// Max length a b\"foo\" string can take\n+const MAX_LENGTH_BYTE_STRING_LIT: usize = 32;\n+\n declare_lint_pass!(StringLitAsBytes => [STRING_LIT_AS_BYTES]);\n \n impl<'a, 'tcx> LateLintPass<'a, 'tcx> for StringLitAsBytes {\n@@ -173,7 +176,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for StringLitAsBytes {\n                             );\n                         } else if callsite == expanded\n                             && lit_content.as_str().chars().all(|c| c.is_ascii())\n-                            && lit_content.as_str().len() <= 32\n+                            && lit_content.as_str().len() <= MAX_LENGTH_BYTE_STRING_LIT\n                             && !in_macro_or_desugar(args[0].span)\n                         {\n                             span_lint_and_sugg("}]}