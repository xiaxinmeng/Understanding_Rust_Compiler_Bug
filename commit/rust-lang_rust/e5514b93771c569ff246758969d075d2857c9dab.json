{"sha": "e5514b93771c569ff246758969d075d2857c9dab", "node_id": "C_kwDOAAsO6NoAKGU1NTE0YjkzNzcxYzU2OWZmMjQ2NzU4OTY5ZDA3NWQyODU3YzlkYWI", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-10-20T05:58:56Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-10-20T05:58:56Z"}, "message": "Rollup merge of #103251 - GuillaumeGomez:item-decl-highlighting, r=notriddle\n\nFix item declaration highlighting\n\nFixes https://github.com/rust-lang/rust/issues/103050.\n\nAs mentioned in the issue, https://github.com/rust-lang/rust/pull/102924 introduced this regression. This PR partially reverts it and adds a regression test.\n\nr? `@notriddle`", "tree": {"sha": "97464df778d870ee87d21391c55c8e271c915120", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/97464df778d870ee87d21391c55c8e271c915120"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e5514b93771c569ff246758969d075d2857c9dab", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjUOOgCRBK7hj4Ov3rIwAANmEIAADxW3NAccMTSrTcSOccWGrt\nGcRfLebpwhbKXIYa86N+4QDqO2qJcf+SvrIWtjZS5Whp6/mtkXfqsp6FVG7w90M1\n9Qh8e0D8LKSCPNMOs15IK8GpLUS4IcghtRMss5EDkDuGFJO7oyKrtJzIPI2b04VV\nHQAOBgr90seAlGcyAK6VhXBGvuOwtmLesyvhZ8P143KM/M6xhu3ew50XsBDVgR6N\nfavjYNsiQaQutTn49IaXW74FnbGXjvBmHdKwzKpgubIFv6gCj6zbVHuy52tdyx9a\nCzvs3NEt2R/u/s+asy+/sdSz2lJu4WXqvHAcvmx2WhwWODxtGt8JolrEthcvgpg=\n=gdH4\n-----END PGP SIGNATURE-----\n", "payload": "tree 97464df778d870ee87d21391c55c8e271c915120\nparent 62bb0c6fdd593d963a7b036ece4b28d3ee8fbb49\nparent b4e06a74cacf79e43eed03df621a5d58d1d7ee9a\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1666245536 +0200\ncommitter GitHub <noreply@github.com> 1666245536 +0200\n\nRollup merge of #103251 - GuillaumeGomez:item-decl-highlighting, r=notriddle\n\nFix item declaration highlighting\n\nFixes https://github.com/rust-lang/rust/issues/103050.\n\nAs mentioned in the issue, https://github.com/rust-lang/rust/pull/102924 introduced this regression. This PR partially reverts it and adds a regression test.\n\nr? `@notriddle`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e5514b93771c569ff246758969d075d2857c9dab", "html_url": "https://github.com/rust-lang/rust/commit/e5514b93771c569ff246758969d075d2857c9dab", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e5514b93771c569ff246758969d075d2857c9dab/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "62bb0c6fdd593d963a7b036ece4b28d3ee8fbb49", "url": "https://api.github.com/repos/rust-lang/rust/commits/62bb0c6fdd593d963a7b036ece4b28d3ee8fbb49", "html_url": "https://github.com/rust-lang/rust/commit/62bb0c6fdd593d963a7b036ece4b28d3ee8fbb49"}, {"sha": "b4e06a74cacf79e43eed03df621a5d58d1d7ee9a", "url": "https://api.github.com/repos/rust-lang/rust/commits/b4e06a74cacf79e43eed03df621a5d58d1d7ee9a", "html_url": "https://github.com/rust-lang/rust/commit/b4e06a74cacf79e43eed03df621a5d58d1d7ee9a"}], "stats": {"total": 143, "additions": 118, "deletions": 25}, "files": [{"sha": "1f4bb98f21bd2715e2589e12b63198472b65f099", "filename": "src/librustdoc/html/static/css/rustdoc.css", "status": "modified", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/e5514b93771c569ff246758969d075d2857c9dab/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css", "raw_url": "https://github.com/rust-lang/rust/raw/e5514b93771c569ff246758969d075d2857c9dab/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css?ref=e5514b93771c569ff246758969d075d2857c9dab", "patch": "@@ -229,44 +229,44 @@ h1 a,\n \tcolor: var(--main-color);\n }\n \n-span.enum, a.enum,\n-span.struct, a.struct,\n-span.union, a.union,\n-span.primitive, a.primitive,\n-span.type, a.type,\n-span.foreigntype, a.foreigntype {\n+.content span.enum, .content a.enum,\n+.content span.struct, .content a.struct,\n+.content span.union, .content a.union,\n+.content span.primitive, .content a.primitive,\n+.content span.type, .content a.type,\n+.content span.foreigntype, .content a.foreigntype {\n \tcolor: var(--type-link-color);\n }\n \n-span.trait, a.trait,\n-span.traitalias, a.traitalias {\n+.content span.trait, .content a.trait,\n+.content span.traitalias, .content a.traitalias {\n \tcolor: var(--trait-link-color);\n }\n \n-span.associatedtype, a.associatedtype,\n-span.constant, a.constant,\n-span.static, a.static {\n+.content span.associatedtype, .content a.associatedtype,\n+.content span.constant, .content a.constant,\n+.content span.static, .content a.static {\n \tcolor: var(--assoc-item-link-color);\n }\n \n-span.fn, a.fn,\n-.fnname,\n-span.method, a.method,\n-span.tymethod, a.tymethod {\n+.content span.fn, .content a.fn,\n+.content .fnname,\n+.content span.method, .content a.method,\n+.content span.tymethod, .content a.tymethod {\n \tcolor: var(--function-link-color);\n }\n \n-span.attr, a.attr,\n-span.derive, a.derive,\n-span.macro, a.macro {\n+.content span.attr, .content a.attr,\n+.content span.derive, .content a.derive,\n+.content span.macro, .content a.macro {\n \tcolor: var(--macro-link-color);\n }\n \n-span.mod, a.mod {\n+.content span.mod, .content a.mod {\n \tcolor: var(--mod-link-color);\n }\n \n-span.keyword, a.keyword {\n+.content span.keyword, .content a.keyword {\n \tcolor: var(--keyword-link-color);\n }\n "}, {"sha": "ce688287a743363dab3548a68e061ddfe9c0ba50", "filename": "src/test/rustdoc-gui/item-decl-colors.goml", "status": "added", "additions": 74, "deletions": 0, "changes": 74, "blob_url": "https://github.com/rust-lang/rust/blob/e5514b93771c569ff246758969d075d2857c9dab/src%2Ftest%2Frustdoc-gui%2Fitem-decl-colors.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e5514b93771c569ff246758969d075d2857c9dab/src%2Ftest%2Frustdoc-gui%2Fitem-decl-colors.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fitem-decl-colors.goml?ref=e5514b93771c569ff246758969d075d2857c9dab", "patch": "@@ -0,0 +1,74 @@\n+// This test ensures that the color of the items in the type decl are working as expected.\n+define-function: (\n+    \"check-colors\",\n+    (\n+        theme,\n+        attr_color,\n+        trait_color,\n+        struct_color,\n+        enum_color,\n+        primitive_color,\n+        constant_color,\n+        fn_color,\n+        assoc_type_color,\n+    ),\n+    [\n+        (\"goto\", \"file://\" + |DOC_PATH| + \"/test_docs/struct.WithGenerics.html\"),\n+        (\"show-text\", true),\n+        (\"local-storage\", {\"rustdoc-theme\": |theme|, \"rustdoc-use-system-theme\": \"false\"}),\n+        (\"reload\"),\n+        (\"assert-css\", (\".item-decl .code-attribute\", {\"color\": |attr_color|}, ALL)),\n+        (\"assert-css\", (\".item-decl .trait\", {\"color\": |trait_color|}, ALL)),\n+        // We need to add `code` here because otherwise it would select the parent too.\n+        (\"assert-css\", (\".item-decl code .struct\", {\"color\": |struct_color|}, ALL)),\n+        (\"assert-css\", (\".item-decl .enum\", {\"color\": |enum_color|}, ALL)),\n+        (\"assert-css\", (\".item-decl .primitive\", {\"color\": |primitive_color|}, ALL)),\n+        (\"goto\", \"file://\" + |DOC_PATH| + \"/test_docs/trait.TraitWithoutGenerics.html\"),\n+        (\"assert-css\", (\".item-decl .constant\", {\"color\": |constant_color|}, ALL)),\n+        (\"assert-css\", (\".item-decl .fnname\", {\"color\": |fn_color|}, ALL)),\n+        (\"assert-css\", (\".item-decl .associatedtype\", {\"color\": |assoc_type_color|}, ALL)),\n+    ],\n+)\n+\n+call-function: (\n+    \"check-colors\",\n+    {\n+        \"theme\": \"ayu\",\n+        \"attr_color\": \"rgb(153, 153, 153)\",\n+        \"trait_color\": \"rgb(57, 175, 215)\",\n+        \"struct_color\": \"rgb(255, 160, 165)\",\n+        \"enum_color\": \"rgb(255, 160, 165)\",\n+        \"primitive_color\": \"rgb(255, 160, 165)\",\n+        \"constant_color\": \"rgb(57, 175, 215)\",\n+        \"fn_color\": \"rgb(253, 214, 135)\",\n+        \"assoc_type_color\": \"rgb(57, 175, 215)\",\n+    },\n+)\n+call-function: (\n+    \"check-colors\",\n+    {\n+        \"theme\": \"dark\",\n+        \"attr_color\": \"rgb(153, 153, 153)\",\n+        \"trait_color\": \"rgb(183, 140, 242)\",\n+        \"struct_color\": \"rgb(45, 191, 184)\",\n+        \"enum_color\": \"rgb(45, 191, 184)\",\n+        \"primitive_color\": \"rgb(45, 191, 184)\",\n+        \"constant_color\": \"rgb(210, 153, 29)\",\n+        \"fn_color\": \"rgb(43, 171, 99)\",\n+        \"assoc_type_color\": \"rgb(210, 153, 29)\",\n+    },\n+)\n+call-function: (\n+    \"check-colors\",\n+    {\n+        \"theme\": \"light\",\n+        \"attr_color\": \"rgb(153, 153, 153)\",\n+        \"trait_color\": \"rgb(110, 79, 201)\",\n+        \"struct_color\": \"rgb(173, 55, 138)\",\n+        \"enum_color\": \"rgb(173, 55, 138)\",\n+        \"primitive_color\": \"rgb(173, 55, 138)\",\n+        \"constant_color\": \"rgb(56, 115, 173)\",\n+        \"fn_color\": \"rgb(173, 124, 55)\",\n+        \"assoc_type_color\": \"rgb(56, 115, 173)\",\n+    },\n+)"}, {"sha": "5058630f469f8711f30c9ab8014a37dcbd5c759d", "filename": "src/test/rustdoc-gui/sidebar.goml", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/e5514b93771c569ff246758969d075d2857c9dab/src%2Ftest%2Frustdoc-gui%2Fsidebar.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e5514b93771c569ff246758969d075d2857c9dab/src%2Ftest%2Frustdoc-gui%2Fsidebar.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fsidebar.goml?ref=e5514b93771c569ff246758969d075d2857c9dab", "patch": "@@ -20,11 +20,12 @@ assert-text: (\".sidebar-elems section ul > li:nth-child(2)\", \"Modules\")\n assert-text: (\".sidebar-elems section ul > li:nth-child(3)\", \"Macros\")\n assert-text: (\".sidebar-elems section ul > li:nth-child(4)\", \"Structs\")\n assert-text: (\".sidebar-elems section ul > li:nth-child(5)\", \"Enums\")\n-assert-text: (\".sidebar-elems section ul > li:nth-child(6)\", \"Traits\")\n-assert-text: (\".sidebar-elems section ul > li:nth-child(7)\", \"Functions\")\n-assert-text: (\".sidebar-elems section ul > li:nth-child(8)\", \"Type Definitions\")\n-assert-text: (\".sidebar-elems section ul > li:nth-child(9)\", \"Unions\")\n-assert-text: (\".sidebar-elems section ul > li:nth-child(10)\", \"Keywords\")\n+assert-text: (\".sidebar-elems section ul > li:nth-child(6)\", \"Constants\")\n+assert-text: (\".sidebar-elems section ul > li:nth-child(7)\", \"Traits\")\n+assert-text: (\".sidebar-elems section ul > li:nth-child(8)\", \"Functions\")\n+assert-text: (\".sidebar-elems section ul > li:nth-child(9)\", \"Type Definitions\")\n+assert-text: (\".sidebar-elems section ul > li:nth-child(10)\", \"Unions\")\n+assert-text: (\".sidebar-elems section ul > li:nth-child(11)\", \"Keywords\")\n assert-text: (\"#structs + .item-table .item-left > a\", \"Foo\")\n click: \"#structs + .item-table .item-left > a\"\n "}, {"sha": "77617e10beb7082333bd1674c2146c517eda67d7", "filename": "src/test/rustdoc-gui/src/test_docs/lib.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/e5514b93771c569ff246758969d075d2857c9dab/src%2Ftest%2Frustdoc-gui%2Fsrc%2Ftest_docs%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5514b93771c569ff246758969d075d2857c9dab/src%2Ftest%2Frustdoc-gui%2Fsrc%2Ftest_docs%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fsrc%2Ftest_docs%2Flib.rs?ref=e5514b93771c569ff246758969d075d2857c9dab", "patch": "@@ -5,6 +5,7 @@\n #![crate_name = \"test_docs\"]\n #![feature(rustdoc_internals)]\n #![feature(doc_cfg)]\n+#![feature(associated_type_defaults)]\n \n /*!\n Enable the feature <span class=\"stab portability\"><code>some-feature</code></span> to enjoy\n@@ -386,3 +387,20 @@ impl TypeWithNoDocblocks {\n pub unsafe fn unsafe_fn() {}\n \n pub fn safe_fn() {}\n+\n+#[repr(C)]\n+pub struct WithGenerics<T: TraitWithNoDocblocks, S = String, E = WhoLetTheDogOut, P = i8> {\n+    s: S,\n+    t: T,\n+    e: E,\n+    p: P,\n+}\n+\n+pub const CONST: u8 = 0;\n+\n+pub trait TraitWithoutGenerics {\n+    const C: u8 = CONST;\n+    type T = SomeType;\n+\n+    fn foo();\n+}"}]}