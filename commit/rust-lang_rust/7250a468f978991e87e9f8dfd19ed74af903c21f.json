{"sha": "7250a468f978991e87e9f8dfd19ed74af903c21f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcyNTBhNDY4Zjk3ODk5MWU4N2U5ZjhkZmQxOWVkNzRhZjkwM2MyMWY=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-06-05T06:32:21Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-06-05T06:32:21Z"}, "message": "Format source codes", "tree": {"sha": "293603f3b95215ead543563f3ee48d65245ac27c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/293603f3b95215ead543563f3ee48d65245ac27c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7250a468f978991e87e9f8dfd19ed74af903c21f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7250a468f978991e87e9f8dfd19ed74af903c21f", "html_url": "https://github.com/rust-lang/rust/commit/7250a468f978991e87e9f8dfd19ed74af903c21f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7250a468f978991e87e9f8dfd19ed74af903c21f/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "41b7cc6a730f9c0b68a06df21a59467e6c7d0a4c", "url": "https://api.github.com/repos/rust-lang/rust/commits/41b7cc6a730f9c0b68a06df21a59467e6c7d0a4c", "html_url": "https://github.com/rust-lang/rust/commit/41b7cc6a730f9c0b68a06df21a59467e6c7d0a4c"}], "stats": {"total": 12, "additions": 5, "deletions": 7}, "files": [{"sha": "204f0b804232c3ec436b62e578ff55f886b601a1", "filename": "src/chains.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7250a468f978991e87e9f8dfd19ed74af903c21f/src%2Fchains.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7250a468f978991e87e9f8dfd19ed74af903c21f/src%2Fchains.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fchains.rs?ref=7250a468f978991e87e9f8dfd19ed74af903c21f", "patch": "@@ -164,9 +164,9 @@ pub fn rewrite_chain(expr: &ast::Expr, context: &RewriteContext, shape: Shape) -\n             .into_iter()\n             .chain(::std::iter::repeat(other_child_shape).take(subexpr_list.len() - 1));\n     let iter = subexpr_list.iter().rev().zip(child_shape_iter);\n-    let mut rewrites =\n-        try_opt!(iter.map(|(e, shape)| rewrite_chain_subexpr(e, total_span, context, shape))\n-                     .collect::<Option<Vec<_>>>());\n+    let mut rewrites = try_opt!(iter.map(|(e, shape)| {\n+                                             rewrite_chain_subexpr(e, total_span, context, shape)\n+                                         }).collect::<Option<Vec<_>>>());\n \n     // Total of all items excluding the last.\n     let last_non_try_index = rewrites.len() - (1 + trailing_try_num);"}, {"sha": "17e9a467d1bb0355f960c07eb7475a203f17d4b7", "filename": "src/types.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7250a468f978991e87e9f8dfd19ed74af903c21f/src%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7250a468f978991e87e9f8dfd19ed74af903c21f/src%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftypes.rs?ref=7250a468f978991e87e9f8dfd19ed74af903c21f", "patch": "@@ -384,8 +384,7 @@ impl Rewrite for ast::WherePredicate {\n                                                  Shape::legacy(budget, shape.indent + used_width))\n                             })\n                             .collect::<Option<Vec<_>>>()\n-                    )\n-                        .join(joiner);\n+                    ).join(joiner);\n \n                     if context.config.spaces_within_angle_brackets() && lifetime_str.len() > 0 {\n                         format!(\"for< {} > {}{}{}\",\n@@ -411,8 +410,7 @@ impl Rewrite for ast::WherePredicate {\n                                                  Shape::legacy(budget, shape.indent + used_width))\n                             })\n                             .collect::<Option<Vec<_>>>()\n-                    )\n-                        .join(joiner);\n+                    ).join(joiner);\n \n                     format!(\"{}{}{}\", type_str, colon, bounds_str)\n                 }"}]}