{"sha": "9a24e4f78045bc32a9eec7c7486a9e0dc7b2b78f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlhMjRlNGY3ODA0NWJjMzJhOWVlYzdjNzQ4NmE5ZTBkYzdiMmI3OGY=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2011-05-28T00:01:37Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2011-05-28T03:43:51Z"}, "message": "Fix two typestate bugs\n\n* Non-returning calls should set all predicates to be true, not\n  just the \"this function returns\" predicate\n\n* Fixed a bug in the expr_alt case in tstate.states that wasn't updating\n  the changed flag properly, then fixed *another* bug that was updating\n  it too enthusiastically, but was masked by the first bug.", "tree": {"sha": "ae3bc8662e3c75ef90aa298fbce98fac28f7f355", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ae3bc8662e3c75ef90aa298fbce98fac28f7f355"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9a24e4f78045bc32a9eec7c7486a9e0dc7b2b78f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9a24e4f78045bc32a9eec7c7486a9e0dc7b2b78f", "html_url": "https://github.com/rust-lang/rust/commit/9a24e4f78045bc32a9eec7c7486a9e0dc7b2b78f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9a24e4f78045bc32a9eec7c7486a9e0dc7b2b78f/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dc9d5e168977b9f3e2595b2c33aaf4c90f09ae81", "url": "https://api.github.com/repos/rust-lang/rust/commits/dc9d5e168977b9f3e2595b2c33aaf4c90f09ae81", "html_url": "https://github.com/rust-lang/rust/commit/dc9d5e168977b9f3e2595b2c33aaf4c90f09ae81"}], "stats": {"total": 19, "additions": 11, "deletions": 8}, "files": [{"sha": "8c317490f37fc35f8a26af2613d087282da2783c", "filename": "src/comp/middle/tstate/states.rs", "status": "modified", "additions": 11, "deletions": 8, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/9a24e4f78045bc32a9eec7c7486a9e0dc7b2b78f/src%2Fcomp%2Fmiddle%2Ftstate%2Fstates.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a24e4f78045bc32a9eec7c7486a9e0dc7b2b78f/src%2Fcomp%2Fmiddle%2Ftstate%2Fstates.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftstate%2Fstates.rs?ref=9a24e4f78045bc32a9eec7c7486a9e0dc7b2b78f", "patch": "@@ -215,10 +215,10 @@ fn find_pre_post_state_expr(&fn_ctxt fcx, &prestate pres, @expr e) -> bool {\n   auto changed = false;\n   auto num_local_vars = num_locals(fcx.enclosing);\n \n-  /*\n+  /*  \n   log_err(\"states:\");\n   log_expr_err(*e);\n-  log_err(middle::ty::expr_ann(e).id);\n+  aux::log_bitv_err(fcx, expr_poststate(fcx.ccx, e));\n   */\n \n   /* FIXME could get rid of some of the copy/paste */\n@@ -236,10 +236,12 @@ fn find_pre_post_state_expr(&fn_ctxt fcx, &prestate pres, @expr e) -> bool {\n       /* rands go left-to-right */\n       changed = find_pre_post_state_exprs(fcx,\n                   expr_poststate(fcx.ccx, operator), a, operands) || changed;\n-      /* if this is a failing call, it sets the return value */\n+      /* if this is a failing call, it sets everything as initialized */\n        alt (controlflow_expr(fcx.ccx, operator)) {\n           case (noreturn) {\n-            changed = gen_poststate(fcx, a, fcx.id) || changed;\n+              changed = set_poststate_ann(fcx.ccx, a,\n+                                          false_postcond(num_local_vars))\n+                  || changed;\n           }\n           case (_) { }\n       }\n@@ -525,16 +527,17 @@ fn find_pre_post_state_expr(&fn_ctxt fcx, &prestate pres, @expr e) -> bool {\n             for (arm an_alt in alts) {\n                 changed = find_pre_post_state_block(fcx, e_post,\n                                                     an_alt.block) || changed;\n-                changed = intersect(a_post,\n-                            block_poststate(fcx.ccx,\n-                                            an_alt.block)) || changed; \n+                intersect(a_post, block_poststate(fcx.ccx, an_alt.block));\n+                // We deliberately do *not* update changed here, because we'd\n+                // go into an infinite loop that way, and the change gets made\n+                // after the if expression.\n             }\n         }\n         else {\n             // No alts; poststate is the poststate of the test\n             a_post = e_post;\n         }\n-        changed = extend_poststate_ann(fcx.ccx, a, a_post);\n+        changed = extend_poststate_ann(fcx.ccx, a, a_post) || changed;\n         ret changed;\n     }\n     case (expr_field(?e, _, ?a)) {"}]}