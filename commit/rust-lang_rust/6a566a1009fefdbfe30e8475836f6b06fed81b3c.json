{"sha": "6a566a1009fefdbfe30e8475836f6b06fed81b3c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZhNTY2YTEwMDlmZWZkYmZlMzBlODQ3NTgzNmY2YjA2ZmVkODFiM2M=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-03-14T16:13:10Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-03-18T13:06:39Z"}, "message": "use snippet_opt and span_suggestion", "tree": {"sha": "d1b079fca87493eb24099df7366318cba0e8ab86", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d1b079fca87493eb24099df7366318cba0e8ab86"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6a566a1009fefdbfe30e8475836f6b06fed81b3c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6a566a1009fefdbfe30e8475836f6b06fed81b3c", "html_url": "https://github.com/rust-lang/rust/commit/6a566a1009fefdbfe30e8475836f6b06fed81b3c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6a566a1009fefdbfe30e8475836f6b06fed81b3c/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9dc282e31db5c70ca9583152557ebbf87df8ee95", "url": "https://api.github.com/repos/rust-lang/rust/commits/9dc282e31db5c70ca9583152557ebbf87df8ee95", "html_url": "https://github.com/rust-lang/rust/commit/9dc282e31db5c70ca9583152557ebbf87df8ee95"}], "stats": {"total": 40, "additions": 26, "deletions": 14}, "files": [{"sha": "43e7cfddadd071709ab84b2b54332ae1982bc946", "filename": "src/needless_bool.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/6a566a1009fefdbfe30e8475836f6b06fed81b3c/src%2Fneedless_bool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a566a1009fefdbfe30e8475836f6b06fed81b3c/src%2Fneedless_bool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fneedless_bool.rs?ref=6a566a1009fefdbfe30e8475836f6b06fed81b3c", "patch": "@@ -6,7 +6,7 @@ use rustc::lint::*;\n use rustc_front::hir::*;\n use syntax::ast::LitKind;\n use syntax::codemap::Spanned;\n-use utils::{span_lint, span_lint_and_then, snippet};\n+use utils::{span_lint, span_lint_and_then, snippet, snippet_opt};\n \n /// **What it does:** This lint checks for expressions of the form `if c { true } else { false }` (or vice versa) and suggest using the condition directly.\n ///\n@@ -50,16 +50,16 @@ impl LateLintPass for NeedlessBool {\n         use self::Expression::*;\n         if let ExprIf(ref pred, ref then_block, Some(ref else_expr)) = e.node {\n             let reduce = |hint: &str, not| {\n-                let pred_snip = snippet(cx, pred.span, \"..\");\n-                let hint = if pred_snip == \"..\" {\n-                    hint.into()\n-                } else {\n-                    format!(\"`{}{}`\", not, pred_snip)\n+                let hint = match snippet_opt(cx, pred.span) {\n+                    Some(pred_snip) => format!(\"`{}{}`\", not, pred_snip),\n+                    None => hint.into(),\n                 };\n-                span_lint(cx,\n-                          NEEDLESS_BOOL,\n-                          e.span,\n-                          &format!(\"you can reduce this if-then-else expression to just {}\", hint));\n+                span_lint_and_then(cx,\n+                                   NEEDLESS_BOOL,\n+                                   e.span,\n+                                   \"this if-then-else expression returns a bool literal\", |db| {\n+                    db.span_suggestion(e.span, \"you can reduce it to\", hint);\n+                });\n             };\n             match (fetch_bool_block(then_block), fetch_bool_expr(else_expr)) {\n                 (RetBool(true), RetBool(true)) |"}, {"sha": "7f2d7754bda09b928c1d1a9a03ba0b88ac13dbce", "filename": "tests/compile-fail/needless_bool.rs", "status": "modified", "additions": 16, "deletions": 4, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/6a566a1009fefdbfe30e8475836f6b06fed81b3c/tests%2Fcompile-fail%2Fneedless_bool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a566a1009fefdbfe30e8475836f6b06fed81b3c/tests%2Fcompile-fail%2Fneedless_bool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fneedless_bool.rs?ref=6a566a1009fefdbfe30e8475836f6b06fed81b3c", "patch": "@@ -7,8 +7,14 @@ fn main() {\n     let x = true;\n     if x { true } else { true }; //~ERROR this if-then-else expression will always return true\n     if x { false } else { false }; //~ERROR this if-then-else expression will always return false\n-    if x { true } else { false }; //~ERROR you can reduce this if-then-else expression to just `x`\n-    if x { false } else { true }; //~ERROR you can reduce this if-then-else expression to just `!x`\n+    if x { true } else { false };\n+    //~^ ERROR this if-then-else expression returns a bool literal\n+    //~| HELP you can reduce it to\n+    //~| SUGGESTION `x`\n+    if x { false } else { true };\n+    //~^ ERROR this if-then-else expression returns a bool literal\n+    //~| HELP you can reduce it to\n+    //~| SUGGESTION `!x`\n     if x { x } else { false }; // would also be questionable, but we don't catch this yet\n     bool_ret(x);\n     bool_ret2(x);\n@@ -30,10 +36,16 @@ fn bool_ret2(x: bool) -> bool {\n \n #[deny(needless_bool)]\n fn bool_ret3(x: bool) -> bool {\n-    if x { return true } else { return false }; //~ERROR you can reduce this if-then-else expression to just `return x`\n+    if x { return true } else { return false };\n+    //~^ ERROR this if-then-else expression returns a bool literal\n+    //~| HELP you can reduce it to\n+    //~| SUGGESTION `return x`\n }\n \n #[deny(needless_bool)]\n fn bool_ret4(x: bool) -> bool {\n-    if x { return false } else { return true }; //~ERROR you can reduce this if-then-else expression to just `return !x`\n+    if x { return false } else { return true };\n+    //~^ ERROR this if-then-else expression returns a bool literal\n+    //~| HELP you can reduce it to\n+    //~| SUGGESTION `return !x`\n }"}]}