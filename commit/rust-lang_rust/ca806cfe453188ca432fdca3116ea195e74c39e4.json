{"sha": "ca806cfe453188ca432fdca3116ea195e74c39e4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNhODA2Y2ZlNDUzMTg4Y2E0MzJmZGNhMzExNmVhMTk1ZTc0YzM5ZTQ=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-01-13T07:44:18Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-01-13T07:44:18Z"}, "message": "Rollup merge of #68135 - calebcartwright:rustc-parse-visibilities, r=Centril\n\nrestore some rustc_parse visibilities for rustfmt\n\nIn https://github.com/rust-lang/rust/pull/65495/commits/c189565edc5c9fc516170885b3a3061b936205fb some visibilities were reduced on the parse mod (which now resides in the rustc_parse crate) as part of some refactoring and splitting up of libsyntax. However, rustfmt needs access to a few of those items that are no longer visible.\n\nThis restores the visibility on those items rustfmt depends on.\n\nhttps://github.com/rust-lang/rustfmt/issues/3903#issuecomment-563596269\nhttps://github.com/rust-lang/rustfmt/issues/4009\n\ncc @topecongiro", "tree": {"sha": "9f9b0589393c66b3f71f67692a07c59c1f5899d3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9f9b0589393c66b3f71f67692a07c59c1f5899d3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ca806cfe453188ca432fdca3116ea195e74c39e4", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeHB/SCRBK7hj4Ov3rIwAAdHIIAAuEFF3H9L/af5GTrG0KULqD\nTxdmlUBP65Vj0Mf6JxbHUWzKWZt2u8rlfbKx+HWCUp+Q7e3wJELTHHlsduvZ2046\nTgqgBGXpGh1nUXGzQFEOtqeneX1gq9lP3pwig+WU18hRkqx3FimoqiAjGpCYaqOM\nEMWu2yEb5viwwSXczxDHP5vY0P5w91PkuuKdAh2hsb6dIGQJbOWn9ZxpQj0H6vZL\nPItnQqGYsg3h8BPZGISwtZyuSx8eZ4GGU3FiO/yt+U3hY1nH+K/BCMxJeTfdleay\nrk4TrdIQpd97fJNiVW14kNqyFrPpvKRS+Xe5WiU2gm+H++1xVLMVVnEnqfFxzLo=\n=YCis\n-----END PGP SIGNATURE-----\n", "payload": "tree 9f9b0589393c66b3f71f67692a07c59c1f5899d3\nparent 7d3fa2963321dcc9f6402f325e5daf92fbb9d5a8\nparent ed039e8f8443a84dddfda8be7379ca7b4aaeccd9\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1578901458 +0900\ncommitter GitHub <noreply@github.com> 1578901458 +0900\n\nRollup merge of #68135 - calebcartwright:rustc-parse-visibilities, r=Centril\n\nrestore some rustc_parse visibilities for rustfmt\n\nIn https://github.com/rust-lang/rust/pull/65495/commits/c189565edc5c9fc516170885b3a3061b936205fb some visibilities were reduced on the parse mod (which now resides in the rustc_parse crate) as part of some refactoring and splitting up of libsyntax. However, rustfmt needs access to a few of those items that are no longer visible.\n\nThis restores the visibility on those items rustfmt depends on.\n\nhttps://github.com/rust-lang/rustfmt/issues/3903#issuecomment-563596269\nhttps://github.com/rust-lang/rustfmt/issues/4009\n\ncc @topecongiro\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ca806cfe453188ca432fdca3116ea195e74c39e4", "html_url": "https://github.com/rust-lang/rust/commit/ca806cfe453188ca432fdca3116ea195e74c39e4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ca806cfe453188ca432fdca3116ea195e74c39e4/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7d3fa2963321dcc9f6402f325e5daf92fbb9d5a8", "url": "https://api.github.com/repos/rust-lang/rust/commits/7d3fa2963321dcc9f6402f325e5daf92fbb9d5a8", "html_url": "https://github.com/rust-lang/rust/commit/7d3fa2963321dcc9f6402f325e5daf92fbb9d5a8"}, {"sha": "ed039e8f8443a84dddfda8be7379ca7b4aaeccd9", "url": "https://api.github.com/repos/rust-lang/rust/commits/ed039e8f8443a84dddfda8be7379ca7b4aaeccd9", "html_url": "https://github.com/rust-lang/rust/commit/ed039e8f8443a84dddfda8be7379ca7b4aaeccd9"}], "stats": {"total": 25, "additions": 17, "deletions": 8}, "files": [{"sha": "1368230168e07ef5a8f0faabdf7ca7f85e95c0ed", "filename": "src/librustc_parse/parser/mod.rs", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/ca806cfe453188ca432fdca3116ea195e74c39e4/src%2Flibrustc_parse%2Fparser%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca806cfe453188ca432fdca3116ea195e74c39e4/src%2Flibrustc_parse%2Fparser%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fmod.rs?ref=ca806cfe453188ca432fdca3116ea195e74c39e4", "patch": "@@ -2,6 +2,7 @@ pub mod attr;\n mod expr;\n mod item;\n mod module;\n+pub use module::{ModulePath, ModulePathSuccess};\n mod pat;\n mod path;\n mod ty;\n@@ -117,7 +118,8 @@ pub struct Parser<'a> {\n     /// Used to determine the path to externally loaded source files.\n     pub(super) directory: Directory<'a>,\n     /// `true` to parse sub-modules in other files.\n-    pub(super) recurse_into_file_modules: bool,\n+    // Public for rustfmt usage.\n+    pub recurse_into_file_modules: bool,\n     /// Name of the root module this parser originated from. If `None`, then the\n     /// name is not known. This does not change while the parser is descending\n     /// into modules, and sub-parsers have new values for this name.\n@@ -126,7 +128,8 @@ pub struct Parser<'a> {\n     token_cursor: TokenCursor,\n     desugar_doc_comments: bool,\n     /// `true` we should configure out of line modules as we parse.\n-    cfg_mods: bool,\n+    // Public for rustfmt usage.\n+    pub cfg_mods: bool,\n     /// This field is used to keep track of how many left angle brackets we have seen. This is\n     /// required in order to detect extra leading left angle brackets (`<` characters) and error\n     /// appropriately.\n@@ -483,7 +486,8 @@ impl<'a> Parser<'a> {\n         }\n     }\n \n-    fn parse_ident(&mut self) -> PResult<'a, ast::Ident> {\n+    // Public for rustfmt usage.\n+    pub fn parse_ident(&mut self) -> PResult<'a, ast::Ident> {\n         self.parse_ident_common(true)\n     }\n \n@@ -540,7 +544,8 @@ impl<'a> Parser<'a> {\n \n     /// If the next token is the given keyword, eats it and returns `true`.\n     /// Otherwise, returns `false`. An expectation is also added for diagnostics purposes.\n-    fn eat_keyword(&mut self, kw: Symbol) -> bool {\n+    // Public for rustfmt usage.\n+    pub fn eat_keyword(&mut self, kw: Symbol) -> bool {\n         if self.check_keyword(kw) {\n             self.bump();\n             true"}, {"sha": "6ce94d3c6793ce2fc04989e05e94038d58961d50", "filename": "src/librustc_parse/parser/module.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/ca806cfe453188ca432fdca3116ea195e74c39e4/src%2Flibrustc_parse%2Fparser%2Fmodule.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca806cfe453188ca432fdca3116ea195e74c39e4/src%2Flibrustc_parse%2Fparser%2Fmodule.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fmodule.rs?ref=ca806cfe453188ca432fdca3116ea195e74c39e4", "patch": "@@ -14,13 +14,15 @@ use syntax::token::{self, TokenKind};\n use std::path::{self, Path, PathBuf};\n \n /// Information about the path to a module.\n-pub(super) struct ModulePath {\n+// Public for rustfmt usage.\n+pub struct ModulePath {\n     name: String,\n     path_exists: bool,\n     pub result: Result<ModulePathSuccess, Error>,\n }\n \n-pub(super) struct ModulePathSuccess {\n+// Public for rustfmt usage.\n+pub struct ModulePathSuccess {\n     pub path: PathBuf,\n     pub directory_ownership: DirectoryOwnership,\n }\n@@ -177,7 +179,8 @@ impl<'a> Parser<'a> {\n         }\n     }\n \n-    pub(super) fn submod_path_from_attr(attrs: &[Attribute], dir_path: &Path) -> Option<PathBuf> {\n+    // Public for rustfmt usage.\n+    pub fn submod_path_from_attr(attrs: &[Attribute], dir_path: &Path) -> Option<PathBuf> {\n         if let Some(s) = attr::first_attr_value_str_by_name(attrs, sym::path) {\n             let s = s.as_str();\n \n@@ -194,7 +197,8 @@ impl<'a> Parser<'a> {\n     }\n \n     /// Returns a path to a module.\n-    pub(super) fn default_submod_path(\n+    // Public for rustfmt usage.\n+    pub fn default_submod_path(\n         id: ast::Ident,\n         relative: Option<ast::Ident>,\n         dir_path: &Path,"}]}