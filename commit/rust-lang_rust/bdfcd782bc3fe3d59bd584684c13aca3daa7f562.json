{"sha": "bdfcd782bc3fe3d59bd584684c13aca3daa7f562", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJkZmNkNzgyYmMzZmUzZDU5YmQ1ODQ2ODRjMTNhY2EzZGFhN2Y1NjI=", "commit": {"author": {"name": "Andrea Corradi", "email": "andreac@unstable.it", "date": "2016-08-28T15:55:07Z"}, "committer": {"name": "Andrea Corradi", "email": "andreac@unstable.it", "date": "2016-08-30T19:24:21Z"}, "message": "Update E0318 to new format", "tree": {"sha": "069b1267b5091e9705d6157443ea5673f2afe1ab", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/069b1267b5091e9705d6157443ea5673f2afe1ab"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bdfcd782bc3fe3d59bd584684c13aca3daa7f562", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bdfcd782bc3fe3d59bd584684c13aca3daa7f562", "html_url": "https://github.com/rust-lang/rust/commit/bdfcd782bc3fe3d59bd584684c13aca3daa7f562", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bdfcd782bc3fe3d59bd584684c13aca3daa7f562/comments", "author": {"login": "acrrd", "id": 1222231, "node_id": "MDQ6VXNlcjEyMjIyMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1222231?v=4", "gravatar_id": "", "url": "https://api.github.com/users/acrrd", "html_url": "https://github.com/acrrd", "followers_url": "https://api.github.com/users/acrrd/followers", "following_url": "https://api.github.com/users/acrrd/following{/other_user}", "gists_url": "https://api.github.com/users/acrrd/gists{/gist_id}", "starred_url": "https://api.github.com/users/acrrd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/acrrd/subscriptions", "organizations_url": "https://api.github.com/users/acrrd/orgs", "repos_url": "https://api.github.com/users/acrrd/repos", "events_url": "https://api.github.com/users/acrrd/events{/privacy}", "received_events_url": "https://api.github.com/users/acrrd/received_events", "type": "User", "site_admin": false}, "committer": {"login": "acrrd", "id": 1222231, "node_id": "MDQ6VXNlcjEyMjIyMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1222231?v=4", "gravatar_id": "", "url": "https://api.github.com/users/acrrd", "html_url": "https://github.com/acrrd", "followers_url": "https://api.github.com/users/acrrd/followers", "following_url": "https://api.github.com/users/acrrd/following{/other_user}", "gists_url": "https://api.github.com/users/acrrd/gists{/gist_id}", "starred_url": "https://api.github.com/users/acrrd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/acrrd/subscriptions", "organizations_url": "https://api.github.com/users/acrrd/orgs", "repos_url": "https://api.github.com/users/acrrd/repos", "events_url": "https://api.github.com/users/acrrd/events{/privacy}", "received_events_url": "https://api.github.com/users/acrrd/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "71ee82a8aa0c02fc2c73e84f40bdb55512d10938", "url": "https://api.github.com/repos/rust-lang/rust/commits/71ee82a8aa0c02fc2c73e84f40bdb55512d10938", "html_url": "https://github.com/rust-lang/rust/commit/71ee82a8aa0c02fc2c73e84f40bdb55512d10938"}], "stats": {"total": 15, "additions": 9, "deletions": 6}, "files": [{"sha": "bcce64cb110c671df7ad9180babcdc047c561b3c", "filename": "src/librustc_typeck/coherence/orphan.rs", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/bdfcd782bc3fe3d59bd584684c13aca3daa7f562/src%2Flibrustc_typeck%2Fcoherence%2Forphan.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bdfcd782bc3fe3d59bd584684c13aca3daa7f562/src%2Flibrustc_typeck%2Fcoherence%2Forphan.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcoherence%2Forphan.rs?ref=bdfcd782bc3fe3d59bd584684c13aca3daa7f562", "patch": "@@ -347,15 +347,19 @@ impl<'cx, 'tcx> OrphanChecker<'cx, 'tcx> {\n                     return;\n                 }\n             }\n-            hir::ItemDefaultImpl(..) => {\n+            hir::ItemDefaultImpl(_, ref item_trait_ref) => {\n                 // \"Trait\" impl\n                 debug!(\"coherence2::orphan check: default trait impl {}\",\n                        self.tcx.map.node_to_string(item.id));\n                 let trait_ref = self.tcx.impl_trait_ref(def_id).unwrap();\n                 if trait_ref.def_id.krate != LOCAL_CRATE {\n-                    span_err!(self.tcx.sess, item.span, E0318,\n+                    struct_span_err!(self.tcx.sess, item_trait_ref.path.span, E0318,\n                               \"cannot create default implementations for traits outside the \\\n-                               crate they're defined in; define a new trait instead\");\n+                               crate they're defined in; define a new trait instead\")\n+                        .span_label(item_trait_ref.path.span,\n+                                    &format!(\"`{}` trait not defined in this crate\",\n+                                             item_trait_ref.path))\n+                        .emit();\n                     return;\n                 }\n             }"}, {"sha": "4d71517e06058fde9f39628a694afe1cd5dc99d7", "filename": "src/test/compile-fail/typeck-default-trait-impl-outside-crate.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/bdfcd782bc3fe3d59bd584684c13aca3daa7f562/src%2Ftest%2Fcompile-fail%2Ftypeck-default-trait-impl-outside-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bdfcd782bc3fe3d59bd584684c13aca3daa7f562/src%2Ftest%2Fcompile-fail%2Ftypeck-default-trait-impl-outside-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftypeck-default-trait-impl-outside-crate.rs?ref=bdfcd782bc3fe3d59bd584684c13aca3daa7f562", "patch": "@@ -10,7 +10,6 @@\n \n #![feature(optin_builtin_traits)]\n \n-impl Copy for .. {}\n-//~^ ERROR E0318\n-\n+impl Copy for .. {} //~ ERROR E0318\n+     //~^ NOTE `Copy` trait not defined in this crate\n fn main() {}"}]}