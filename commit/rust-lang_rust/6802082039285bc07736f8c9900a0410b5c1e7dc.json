{"sha": "6802082039285bc07736f8c9900a0410b5c1e7dc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY4MDIwODIwMzkyODViYzA3NzM2ZjhjOTkwMGEwNDEwYjVjMWU3ZGM=", "commit": {"author": {"name": "Jesper Steen M\u00f8ller", "email": "jesper@selskabet.org", "date": "2019-05-02T13:08:03Z"}, "committer": {"name": "Jesper Steen M\u00f8ller", "email": "jesper@selskabet.org", "date": "2019-05-04T18:29:35Z"}, "message": "Hash all of the import_ids for the TraitCandidate.", "tree": {"sha": "69e14b8a504df4482de1f78eb9fd99192b2c3fbc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/69e14b8a504df4482de1f78eb9fd99192b2c3fbc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6802082039285bc07736f8c9900a0410b5c1e7dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6802082039285bc07736f8c9900a0410b5c1e7dc", "html_url": "https://github.com/rust-lang/rust/commit/6802082039285bc07736f8c9900a0410b5c1e7dc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6802082039285bc07736f8c9900a0410b5c1e7dc/comments", "author": {"login": "jespersm", "id": 664940, "node_id": "MDQ6VXNlcjY2NDk0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/664940?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jespersm", "html_url": "https://github.com/jespersm", "followers_url": "https://api.github.com/users/jespersm/followers", "following_url": "https://api.github.com/users/jespersm/following{/other_user}", "gists_url": "https://api.github.com/users/jespersm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jespersm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jespersm/subscriptions", "organizations_url": "https://api.github.com/users/jespersm/orgs", "repos_url": "https://api.github.com/users/jespersm/repos", "events_url": "https://api.github.com/users/jespersm/events{/privacy}", "received_events_url": "https://api.github.com/users/jespersm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jespersm", "id": 664940, "node_id": "MDQ6VXNlcjY2NDk0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/664940?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jespersm", "html_url": "https://github.com/jespersm", "followers_url": "https://api.github.com/users/jespersm/followers", "following_url": "https://api.github.com/users/jespersm/following{/other_user}", "gists_url": "https://api.github.com/users/jespersm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jespersm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jespersm/subscriptions", "organizations_url": "https://api.github.com/users/jespersm/orgs", "repos_url": "https://api.github.com/users/jespersm/repos", "events_url": "https://api.github.com/users/jespersm/events{/privacy}", "received_events_url": "https://api.github.com/users/jespersm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fc34d5f608e3476bc7c5c4127d4e1ad1ab4fd01a", "url": "https://api.github.com/repos/rust-lang/rust/commits/fc34d5f608e3476bc7c5c4127d4e1ad1ab4fd01a", "html_url": "https://github.com/rust-lang/rust/commit/fc34d5f608e3476bc7c5c4127d4e1ad1ab4fd01a"}], "stats": {"total": 24, "additions": 18, "deletions": 6}, "files": [{"sha": "5b2a1e783c03983dbdcf9bbc9d4e847cfb60d36a", "filename": "src/librustc/ich/impls_hir.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/6802082039285bc07736f8c9900a0410b5c1e7dc/src%2Flibrustc%2Fich%2Fimpls_hir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6802082039285bc07736f8c9900a0410b5c1e7dc/src%2Flibrustc%2Fich%2Fimpls_hir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fich%2Fimpls_hir.rs?ref=6802082039285bc07736f8c9900a0410b5c1e7dc", "patch": "@@ -7,6 +7,7 @@ use crate::hir::def_id::{DefId, LocalDefId, CrateNum, CRATE_DEF_INDEX};\n use crate::ich::{StableHashingContext, NodeIdHashingMode, Fingerprint};\n use rustc_data_structures::stable_hasher::{HashStable, ToStableHashKey,\n                                            StableHasher, StableHasherResult};\n+use smallvec::SmallVec;\n use std::mem;\n use syntax::ast;\n use syntax::attr;\n@@ -397,14 +398,13 @@ impl<'a> HashStable<StableHashingContext<'a>> for hir::TraitCandidate {\n             } = self;\n \n             def_id.hash_stable(hcx, hasher);\n-            // We only use the outermost import NodeId as key\n-            import_ids.first().hash_stable(hcx, hasher);\n+            import_ids.hash_stable(hcx, hasher);\n         });\n     }\n }\n \n impl<'a> ToStableHashKey<StableHashingContext<'a>> for hir::TraitCandidate {\n-    type KeyType = (DefPathHash, Option<(DefPathHash, hir::ItemLocalId)>);\n+    type KeyType = (DefPathHash, SmallVec<[(DefPathHash, hir::ItemLocalId); 1]>);\n \n     fn to_stable_hash_key(&self,\n                           hcx: &StableHashingContext<'a>)\n@@ -414,10 +414,10 @@ impl<'a> ToStableHashKey<StableHashingContext<'a>> for hir::TraitCandidate {\n             import_ids,\n         } = self;\n \n-        let first_import_id = import_ids.first().map(|node_id| hcx.node_to_hir_id(*node_id))\n+        let import_keys = import_ids.iter().map(|node_id| hcx.node_to_hir_id(*node_id))\n                                            .map(|hir_id| (hcx.local_def_path_hash(hir_id.owner),\n-                                                          hir_id.local_id));\n-        (hcx.def_path_hash(*def_id), first_import_id)\n+                                                          hir_id.local_id)).collect();\n+        (hcx.def_path_hash(*def_id), import_keys)\n     }\n }\n "}, {"sha": "c777f1fa8294998f48cd23b16f77dcd248528884", "filename": "src/librustc_data_structures/stable_hasher.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/6802082039285bc07736f8c9900a0410b5c1e7dc/src%2Flibrustc_data_structures%2Fstable_hasher.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6802082039285bc07736f8c9900a0410b5c1e7dc/src%2Flibrustc_data_structures%2Fstable_hasher.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Fstable_hasher.rs?ref=6802082039285bc07736f8c9900a0410b5c1e7dc", "patch": "@@ -1,6 +1,7 @@\n use std::hash::{Hash, Hasher, BuildHasher};\n use std::marker::PhantomData;\n use std::mem;\n+use smallvec::SmallVec;\n use crate::sip128::SipHasher128;\n use crate::indexed_vec;\n use crate::bit_set;\n@@ -318,6 +319,17 @@ impl<T: HashStable<CTX>, CTX> HashStable<CTX> for Vec<T> {\n     }\n }\n \n+impl<A, CTX> HashStable<CTX> for SmallVec<[A; 1]> where A: HashStable<CTX> {\n+    #[inline]\n+    fn hash_stable<W: StableHasherResult>(&self,\n+                                          ctx: &mut CTX,\n+                                          hasher: &mut StableHasher<W>) {\n+        for item in self {\n+            item.hash_stable(ctx, hasher);\n+        }\n+    }\n+}\n+\n impl<T: ?Sized + HashStable<CTX>, CTX> HashStable<CTX> for Box<T> {\n     #[inline]\n     fn hash_stable<W: StableHasherResult>(&self,"}]}