{"sha": "7734d29ff82d3c838eef8f6db9bffe9ca89a8bb8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc3MzRkMjlmZjgyZDNjODM4ZWVmOGY2ZGI5YmZmZTljYTg5YThiYjg=", "commit": {"author": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2018-04-29T23:51:03Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-04-29T23:51:03Z"}, "message": "Merge pull request #2662 from csmoe/imports_indent\n\nChange the default value of imports_indent to IndentStyle::Block", "tree": {"sha": "b13b91b3be6060ce65629d401cba919c34d332bc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b13b91b3be6060ce65629d401cba919c34d332bc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7734d29ff82d3c838eef8f6db9bffe9ca89a8bb8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJa5lpoCRBK7hj4Ov3rIwAAdHIIAIbtv4q/lD+i3smTYXdaUZhy\nc+Vu2VIizXy40G+XUMyid5gg/ZzKCbfGEr3ebZUQ71X9oeJ5N3WvXXnIlBDKpgY+\nxtAhOcrHlMqvJRfAz2oHf94+TmvbdfKZcKZo8GHqC3zKPZ2Fu3HgsfvAmntnj3v4\nhCsYY4WR7AvHjVH3ECI/gRD4KNxwAGxg3aBnagZsVibQ56pKoWxpj0/np7PhAJlY\nvDqpS5SKeUangxh9uhZuxim14dvrR9BrqoCW/Fk5PX9MUrlPijCLqBreON3Lvf/v\nZz262pI7h+LCw1ePCf0PdhGHFF15938EkyPB2Axy70mCCdu1kgGhZs218GCsT3s=\n=yEtr\n-----END PGP SIGNATURE-----\n", "payload": "tree b13b91b3be6060ce65629d401cba919c34d332bc\nparent 1b7195695a3cef7bbe6ee2630e963dc24e36f17a\nparent e554d8617d947905cc9c0e054849fbb5e7e87705\nauthor Nick Cameron <nrc@ncameron.org> 1525045863 +1200\ncommitter GitHub <noreply@github.com> 1525045863 +1200\n\nMerge pull request #2662 from csmoe/imports_indent\n\nChange the default value of imports_indent to IndentStyle::Block"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7734d29ff82d3c838eef8f6db9bffe9ca89a8bb8", "html_url": "https://github.com/rust-lang/rust/commit/7734d29ff82d3c838eef8f6db9bffe9ca89a8bb8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7734d29ff82d3c838eef8f6db9bffe9ca89a8bb8/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1b7195695a3cef7bbe6ee2630e963dc24e36f17a", "url": "https://api.github.com/repos/rust-lang/rust/commits/1b7195695a3cef7bbe6ee2630e963dc24e36f17a", "html_url": "https://github.com/rust-lang/rust/commit/1b7195695a3cef7bbe6ee2630e963dc24e36f17a"}, {"sha": "e554d8617d947905cc9c0e054849fbb5e7e87705", "url": "https://api.github.com/repos/rust-lang/rust/commits/e554d8617d947905cc9c0e054849fbb5e7e87705", "html_url": "https://github.com/rust-lang/rust/commit/e554d8617d947905cc9c0e054849fbb5e7e87705"}], "stats": {"total": 290, "additions": 176, "deletions": 114}, "files": [{"sha": "110925f8e02165477493f893f82db79bfa7e9c5a", "filename": "Configurations.md", "status": "modified", "additions": 26, "deletions": 18, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/7734d29ff82d3c838eef8f6db9bffe9ca89a8bb8/Configurations.md", "raw_url": "https://github.com/rust-lang/rust/raw/7734d29ff82d3c838eef8f6db9bffe9ca89a8bb8/Configurations.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Configurations.md?ref=7734d29ff82d3c838eef8f6db9bffe9ca89a8bb8", "patch": "@@ -1042,8 +1042,10 @@ Item layout inside a imports block\n ```rust\n use foo::{xxxxxxxxxxxxxxxxxx, yyyyyyyyyyyyyyyyyy, zzzzzzzzzzzzzzzzzz};\n \n-use foo::{aaaaaaaaaaaaaaaaaa, bbbbbbbbbbbbbbbbbb, cccccccccccccccccc, dddddddddddddddddd,\n-          eeeeeeeeeeeeeeeeee, ffffffffffffffffff};\n+use foo::{\n+    aaaaaaaaaaaaaaaaaa, bbbbbbbbbbbbbbbbbb, cccccccccccccccccc, dddddddddddddddddd,\n+    eeeeeeeeeeeeeeeeee, ffffffffffffffffff,\n+};\n ```\n \n #### `\"Horizontal\"`:\n@@ -1061,27 +1063,33 @@ use foo::{aaa, bbb, ccc, ddd, eee, fff};\n ```rust\n use foo::{xxxxxxxxxxxxxxxxxx, yyyyyyyyyyyyyyyyyy, zzzzzzzzzzzzzzzzzz};\n \n-use foo::{aaaaaaaaaaaaaaaaaa,\n-          bbbbbbbbbbbbbbbbbb,\n-          cccccccccccccccccc,\n-          dddddddddddddddddd,\n-          eeeeeeeeeeeeeeeeee,\n-          ffffffffffffffffff};\n+use foo::{\n+    aaaaaaaaaaaaaaaaaa,\n+    bbbbbbbbbbbbbbbbbb,\n+    cccccccccccccccccc,\n+    dddddddddddddddddd,\n+    eeeeeeeeeeeeeeeeee,\n+    ffffffffffffffffff,\n+};\n ```\n \n #### `\"Vertical\"`:\n \n ```rust\n-use foo::{xxx,\n-          yyy,\n-          zzz};\n+use foo::{\n+    xxx,\n+    yyy,\n+    zzz,\n+};\n \n-use foo::{aaa,\n-          bbb,\n-          ccc,\n-          ddd,\n-          eee,\n-          fff};\n+use foo::{\n+    aaa,\n+    bbb,\n+    ccc,\n+    ddd,\n+    eee,\n+    fff,\n+};\n ```\n \n ## `merge_imports`\n@@ -2036,7 +2044,7 @@ fn foo() {\n \n ## `required_version`\n \n-Require a specific version of rustfmt. If you want to make sure that the \n+Require a specific version of rustfmt. If you want to make sure that the\n specific version of rustfmt is used in your CI, use this option.\n \n - **Default value**: `CARGO_PKG_VERSION`"}, {"sha": "962b315de051ab76f2d2bbd73fcc0d81c1b450e0", "filename": "src/bin/main.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7734d29ff82d3c838eef8f6db9bffe9ca89a8bb8/src%2Fbin%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7734d29ff82d3c838eef8f6db9bffe9ca89a8bb8/src%2Fbin%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fmain.rs?ref=7734d29ff82d3c838eef8f6db9bffe9ca89a8bb8", "patch": "@@ -24,8 +24,10 @@ use failure::err_msg;\n \n use getopts::{Matches, Options};\n \n-use rustfmt::{emit_post_matter, emit_pre_matter, load_config, CliOptions, Config, FmtResult,\n-              WriteMode, WRITE_MODE_LIST};\n+use rustfmt::{\n+    emit_post_matter, emit_pre_matter, load_config, CliOptions, Config, FmtResult, WriteMode,\n+    WRITE_MODE_LIST,\n+};\n use rustfmt::{format_and_emit_report, FileName, Input, Summary};\n \n fn main() {"}, {"sha": "2f05f4a2c4674bef38b29fcd802555815eb26e0e", "filename": "src/chains.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7734d29ff82d3c838eef8f6db9bffe9ca89a8bb8/src%2Fchains.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7734d29ff82d3c838eef8f6db9bffe9ca89a8bb8/src%2Fchains.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fchains.rs?ref=7734d29ff82d3c838eef8f6db9bffe9ca89a8bb8", "patch": "@@ -70,8 +70,10 @@ use expr::rewrite_call;\n use macros::convert_try_mac;\n use rewrite::{Rewrite, RewriteContext};\n use shape::Shape;\n-use utils::{first_line_width, last_line_extendable, last_line_width, mk_sp,\n-            trimmed_last_line_width, wrap_str};\n+use utils::{\n+    first_line_width, last_line_extendable, last_line_width, mk_sp, trimmed_last_line_width,\n+    wrap_str,\n+};\n \n use std::borrow::Cow;\n use std::cmp::min;"}, {"sha": "a4c0e1630a835e0af73588e94c42d92f00066789", "filename": "src/config/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7734d29ff82d3c838eef8f6db9bffe9ca89a8bb8/src%2Fconfig%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7734d29ff82d3c838eef8f6db9bffe9ca89a8bb8/src%2Fconfig%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconfig%2Fmod.rs?ref=7734d29ff82d3c838eef8f6db9bffe9ca89a8bb8", "patch": "@@ -62,7 +62,7 @@ create_config! {\n     where_single_line: bool, false, false, \"Force where clauses to be on a single line\";\n \n     // Imports\n-    imports_indent: IndentStyle, IndentStyle::Visual, false, \"Indent of imports\";\n+    imports_indent: IndentStyle, IndentStyle::Block, false, \"Indent of imports\";\n     imports_layout: ListTactic, ListTactic::Mixed, false, \"Item layout inside a import block\";\n     merge_imports: bool, false, false, \"Merge imports\";\n "}, {"sha": "55fe2aa571b60ed2d2560d8488583f4e80664d5f", "filename": "src/expr.rs", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/7734d29ff82d3c838eef8f6db9bffe9ca89a8bb8/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7734d29ff82d3c838eef8f6db9bffe9ca89a8bb8/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=7734d29ff82d3c838eef8f6db9bffe9ca89a8bb8", "patch": "@@ -19,11 +19,15 @@ use syntax::{ast, ptr};\n use chains::rewrite_chain;\n use closures;\n use codemap::{LineRangeUtils, SpanUtils};\n-use comment::{combine_strs_with_missing_comments, contains_comment, recover_comment_removed,\n-              rewrite_comment, rewrite_missing_comment, CharClasses, FindUncommented};\n+use comment::{\n+    combine_strs_with_missing_comments, contains_comment, recover_comment_removed, rewrite_comment,\n+    rewrite_missing_comment, CharClasses, FindUncommented,\n+};\n use config::{Config, ControlBraceStyle, IndentStyle};\n-use lists::{definitive_tactic, itemize_list, shape_for_tactic, struct_lit_formatting,\n-            struct_lit_shape, struct_lit_tactic, write_list, ListFormatting, ListItem, Separator};\n+use lists::{\n+    definitive_tactic, itemize_list, shape_for_tactic, struct_lit_formatting, struct_lit_shape,\n+    struct_lit_tactic, write_list, ListFormatting, ListItem, Separator,\n+};\n use macros::{rewrite_macro, MacroArg, MacroPosition};\n use matches::rewrite_match;\n use overflow;\n@@ -33,9 +37,11 @@ use shape::{Indent, Shape};\n use spanned::Spanned;\n use string::{rewrite_string, StringFormat};\n use types::{can_be_overflowed_type, rewrite_path, PathContext};\n-use utils::{colon_spaces, contains_skip, count_newlines, first_line_width, inner_attributes,\n-            last_line_extendable, last_line_width, mk_sp, outer_attributes, paren_overhead,\n-            ptr_vec_to_ref_vec, semicolon_for_stmt, wrap_str};\n+use utils::{\n+    colon_spaces, contains_skip, count_newlines, first_line_width, inner_attributes,\n+    last_line_extendable, last_line_width, mk_sp, outer_attributes, paren_overhead,\n+    ptr_vec_to_ref_vec, semicolon_for_stmt, wrap_str,\n+};\n use vertical::rewrite_with_alignment;\n use visitor::FmtVisitor;\n "}, {"sha": "0e6d17119bc805c6b4f3358812f6e6413e97f54b", "filename": "src/items.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/7734d29ff82d3c838eef8f6db9bffe9ca89a8bb8/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7734d29ff82d3c838eef8f6db9bffe9ca89a8bb8/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=7734d29ff82d3c838eef8f6db9bffe9ca89a8bb8", "patch": "@@ -21,11 +21,15 @@ use syntax::visit;\n use syntax::{ast, ptr, symbol};\n \n use codemap::{LineRangeUtils, SpanUtils};\n-use comment::{combine_strs_with_missing_comments, contains_comment, recover_comment_removed,\n-              recover_missing_comment_in_span, rewrite_missing_comment, FindUncommented};\n+use comment::{\n+    combine_strs_with_missing_comments, contains_comment, recover_comment_removed,\n+    recover_missing_comment_in_span, rewrite_missing_comment, FindUncommented,\n+};\n use config::{BraceStyle, Config, Density, IndentStyle};\n-use expr::{format_expr, is_empty_block, is_simple_block_stmt, rewrite_assign_rhs,\n-           rewrite_assign_rhs_with, ExprType, RhsTactics};\n+use expr::{\n+    format_expr, is_empty_block, is_simple_block_stmt, rewrite_assign_rhs, rewrite_assign_rhs_with,\n+    ExprType, RhsTactics,\n+};\n use lists::{definitive_tactic, itemize_list, write_list, ListFormatting, ListItem, Separator};\n use macros::{rewrite_macro, MacroPosition};\n use overflow;"}, {"sha": "1fc150e1256b5b5b80363f07a4521f41ccc52406", "filename": "src/macros.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7734d29ff82d3c838eef8f6db9bffe9ca89a8bb8/src%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7734d29ff82d3c838eef8f6db9bffe9ca89a8bb8/src%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmacros.rs?ref=7734d29ff82d3c838eef8f6db9bffe9ca89a8bb8", "patch": "@@ -33,8 +33,10 @@ use syntax::util::ThinVec;\n use syntax::{ast, ptr};\n \n use codemap::SpanUtils;\n-use comment::{contains_comment, remove_trailing_white_spaces, CharClasses, FindUncommented,\n-              FullCodeCharKind, LineClasses};\n+use comment::{\n+    contains_comment, remove_trailing_white_spaces, CharClasses, FindUncommented, FullCodeCharKind,\n+    LineClasses,\n+};\n use expr::rewrite_array;\n use lists::{itemize_list, write_list, ListFormatting};\n use overflow;"}, {"sha": "bc092b1a718a8b8537b918a537657e9c32a59f9d", "filename": "src/matches.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/7734d29ff82d3c838eef8f6db9bffe9ca89a8bb8/src%2Fmatches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7734d29ff82d3c838eef8f6db9bffe9ca89a8bb8/src%2Fmatches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmatches.rs?ref=7734d29ff82d3c838eef8f6db9bffe9ca89a8bb8", "patch": "@@ -19,14 +19,18 @@ use syntax::{ast, ptr};\n use codemap::SpanUtils;\n use comment::combine_strs_with_missing_comments;\n use config::{Config, ControlBraceStyle, IndentStyle};\n-use expr::{format_expr, is_empty_block, is_simple_block, is_unsafe_block, prefer_next_line,\n-           rewrite_multiple_patterns, ExprType, RhsTactics, ToExpr};\n+use expr::{\n+    format_expr, is_empty_block, is_simple_block, is_unsafe_block, prefer_next_line,\n+    rewrite_multiple_patterns, ExprType, RhsTactics, ToExpr,\n+};\n use lists::{itemize_list, write_list, ListFormatting};\n use rewrite::{Rewrite, RewriteContext};\n use shape::Shape;\n use spanned::Spanned;\n-use utils::{contains_skip, extra_offset, first_line_width, inner_attributes, last_line_extendable,\n-            mk_sp, ptr_vec_to_ref_vec, trimmed_last_line_width};\n+use utils::{\n+    contains_skip, extra_offset, first_line_width, inner_attributes, last_line_extendable, mk_sp,\n+    ptr_vec_to_ref_vec, trimmed_last_line_width,\n+};\n \n /// A simple wrapper type against `ast::Arm`. Used inside `write_list()`.\n struct ArmWrapper<'a> {"}, {"sha": "b42c6be90cafad392fc7058e505a28c8ab899548", "filename": "src/overflow.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7734d29ff82d3c838eef8f6db9bffe9ca89a8bb8/src%2Foverflow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7734d29ff82d3c838eef8f6db9bffe9ca89a8bb8/src%2Foverflow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Foverflow.rs?ref=7734d29ff82d3c838eef8f6db9bffe9ca89a8bb8", "patch": "@@ -23,7 +23,9 @@ use lists::{definitive_tactic, itemize_list, write_list, ListFormatting, ListIte\n use rewrite::{Rewrite, RewriteContext};\n use shape::Shape;\n use spanned::Spanned;\n-use utils::{count_newlines, extra_offset, first_line_width, last_line_width, mk_sp, paren_overhead};\n+use utils::{\n+    count_newlines, extra_offset, first_line_width, last_line_width, mk_sp, paren_overhead,\n+};\n \n use std::cmp::min;\n "}, {"sha": "b4865ad329e585b98f68e2d4dc2c4d2188bc12c1", "filename": "src/patterns.rs", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/7734d29ff82d3c838eef8f6db9bffe9ca89a8bb8/src%2Fpatterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7734d29ff82d3c838eef8f6db9bffe9ca89a8bb8/src%2Fpatterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fpatterns.rs?ref=7734d29ff82d3c838eef8f6db9bffe9ca89a8bb8", "patch": "@@ -15,10 +15,13 @@ use syntax::ptr;\n \n use codemap::SpanUtils;\n use comment::FindUncommented;\n-use expr::{can_be_overflowed_expr, rewrite_pair, rewrite_unary_prefix, wrap_struct_field,\n-           PairParts};\n-use lists::{itemize_list, shape_for_tactic, struct_lit_formatting, struct_lit_shape,\n-            struct_lit_tactic, write_list};\n+use expr::{\n+    can_be_overflowed_expr, rewrite_pair, rewrite_unary_prefix, wrap_struct_field, PairParts,\n+};\n+use lists::{\n+    itemize_list, shape_for_tactic, struct_lit_formatting, struct_lit_shape, struct_lit_tactic,\n+    write_list,\n+};\n use macros::{rewrite_macro, MacroPosition};\n use overflow;\n use rewrite::{Rewrite, RewriteContext};"}, {"sha": "149769c5df778ab1ada60b6327436f7320bfad41", "filename": "src/types.rs", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/7734d29ff82d3c838eef8f6db9bffe9ca89a8bb8/src%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7734d29ff82d3c838eef8f6db9bffe9ca89a8bb8/src%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftypes.rs?ref=7734d29ff82d3c838eef8f6db9bffe9ca89a8bb8", "patch": "@@ -18,16 +18,19 @@ use syntax::symbol::keywords;\n \n use codemap::SpanUtils;\n use config::{IndentStyle, TypeDensity};\n-use expr::{rewrite_assign_rhs, rewrite_pair, rewrite_tuple, rewrite_unary_prefix, PairParts,\n-           ToExpr};\n+use expr::{\n+    rewrite_assign_rhs, rewrite_pair, rewrite_tuple, rewrite_unary_prefix, PairParts, ToExpr,\n+};\n use lists::{definitive_tactic, itemize_list, write_list, ListFormatting, Separator};\n use macros::{rewrite_macro, MacroPosition};\n use overflow;\n use rewrite::{Rewrite, RewriteContext};\n use shape::Shape;\n use spanned::Spanned;\n-use utils::{colon_spaces, extra_offset, first_line_width, format_abi, format_mutability,\n-            last_line_width, mk_sp};\n+use utils::{\n+    colon_spaces, extra_offset, first_line_width, format_abi, format_mutability, last_line_width,\n+    mk_sp,\n+};\n \n #[derive(Copy, Clone, Debug, Eq, PartialEq)]\n pub enum PathContext {"}, {"sha": "c1d614e885a6f230d438d96ea7850680d190cfeb", "filename": "src/utils.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7734d29ff82d3c838eef8f6db9bffe9ca89a8bb8/src%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7734d29ff82d3c838eef8f6db9bffe9ca89a8bb8/src%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Futils.rs?ref=7734d29ff82d3c838eef8f6db9bffe9ca89a8bb8", "patch": "@@ -11,8 +11,10 @@\n use std::borrow::Cow;\n \n use rustc_target::spec::abi;\n-use syntax::ast::{self, Attribute, CrateSugar, MetaItem, MetaItemKind, NestedMetaItem,\n-                  NestedMetaItemKind, Path, Visibility, VisibilityKind};\n+use syntax::ast::{\n+    self, Attribute, CrateSugar, MetaItem, MetaItemKind, NestedMetaItem, NestedMetaItemKind, Path,\n+    Visibility, VisibilityKind,\n+};\n use syntax::codemap::{BytePos, Span, NO_EXPANSION};\n use syntax::ptr;\n "}, {"sha": "05f2e7e5cc1b18c6094f8827af06f4015ad65c58", "filename": "src/visitor.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7734d29ff82d3c838eef8f6db9bffe9ca89a8bb8/src%2Fvisitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7734d29ff82d3c838eef8f6db9bffe9ca89a8bb8/src%2Fvisitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvisitor.rs?ref=7734d29ff82d3c838eef8f6db9bffe9ca89a8bb8", "patch": "@@ -17,9 +17,11 @@ use attr::*;\n use codemap::{LineRangeUtils, SpanUtils};\n use comment::{CodeCharKind, CommentCodeSlices, FindUncommented};\n use config::{BraceStyle, Config};\n-use items::{format_impl, format_trait, format_trait_alias, is_mod_decl, is_use_item,\n-            rewrite_associated_impl_type, rewrite_associated_type, rewrite_extern_crate,\n-            rewrite_type_alias, FnSig, StaticParts, StructParts};\n+use items::{\n+    format_impl, format_trait, format_trait_alias, is_mod_decl, is_use_item,\n+    rewrite_associated_impl_type, rewrite_associated_type, rewrite_extern_crate,\n+    rewrite_type_alias, FnSig, StaticParts, StructParts,\n+};\n use macros::{rewrite_macro, rewrite_macro_def, MacroPosition};\n use rewrite::{Rewrite, RewriteContext};\n use shape::{Indent, Shape};"}, {"sha": "fd09d50d72d9a525365050f3c08a1105db79b83d", "filename": "tests/target/import-fencepost-length.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/7734d29ff82d3c838eef8f6db9bffe9ca89a8bb8/tests%2Ftarget%2Fimport-fencepost-length.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7734d29ff82d3c838eef8f6db9bffe9ca89a8bb8/tests%2Ftarget%2Fimport-fencepost-length.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fimport-fencepost-length.rs?ref=7734d29ff82d3c838eef8f6db9bffe9ca89a8bb8", "patch": "@@ -1,4 +1,7 @@\n use aaaaaaaaaaaaaaa::bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb;\n-use aaaaaaaaaaaaaaa::{bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb, ccccccccccccccccccccccccccccccc, dddddddd};\n-use aaaaaaaaaaaaaaa::{bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb, ccccccccccccccccccccccccccccccc,\n-                      ddddddddd};\n+use aaaaaaaaaaaaaaa::{\n+    bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb, ccccccccccccccccccccccccccccccc, dddddddd,\n+};\n+use aaaaaaaaaaaaaaa::{\n+    bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb, ccccccccccccccccccccccccccccccc, ddddddddd,\n+};"}, {"sha": "68d9bb5519eaf5d4fae39bbf42b736cbfe619ab8", "filename": "tests/target/imports.rs", "status": "modified", "additions": 46, "deletions": 31, "changes": 77, "blob_url": "https://github.com/rust-lang/rust/blob/7734d29ff82d3c838eef8f6db9bffe9ca89a8bb8/tests%2Ftarget%2Fimports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7734d29ff82d3c838eef8f6db9bffe9ca89a8bb8/tests%2Ftarget%2Fimports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fimports.rs?ref=7734d29ff82d3c838eef8f6db9bffe9ca89a8bb8", "patch": "@@ -4,18 +4,22 @@\n // Imports.\n \n // Long import.\n-use exceedingly::loooooooooooooooooooooooooooooooooooooooooooooooooooooooong::import::path::{ItemA,\n-                                                                                             ItemB};\n-use exceedingly::looooooooooooooooooooooooooooooooooooooooooooooooooooooooooong::import::path::{ItemA,\n-                                                                                                ItemB};\n+use exceedingly::loooooooooooooooooooooooooooooooooooooooooooooooooooooooong::import::path::{\n+    ItemA, ItemB,\n+};\n+use exceedingly::looooooooooooooooooooooooooooooooooooooooooooooooooooooooooong::import::path::{\n+    ItemA, ItemB,\n+};\n use syntax::ast::{ItemDefaultImpl, ItemForeignMod, ItemImpl, ItemMac, ItemMod, ItemStatic};\n \n-use list::{// Another item\n-           AnotherItem, // Another Comment\n-           // Last Item\n-           LastItem,\n-           // Some item\n-           SomeItem /* Comment */};\n+use list::{\n+    // Another item\n+    AnotherItem, // Another Comment\n+    // Last Item\n+    LastItem,\n+    // Some item\n+    SomeItem, /* Comment */\n+};\n \n use test::{/* A */ self /* B */, Other /* C */};\n \n@@ -28,11 +32,14 @@ use std::io;\n use std::io;\n \n mod Foo {\n-    pub use syntax::ast::{ItemDefaultImpl, ItemForeignMod, ItemImpl, ItemMac, ItemMod, ItemStatic};\n+    pub use syntax::ast::{\n+        ItemDefaultImpl, ItemForeignMod, ItemImpl, ItemMac, ItemMod, ItemStatic,\n+    };\n \n     mod Foo2 {\n-        pub use syntax::ast::{self, ItemDefaultImpl, ItemForeignMod, ItemImpl, ItemMac, ItemMod,\n-                              ItemStatic};\n+        pub use syntax::ast::{\n+            self, ItemDefaultImpl, ItemForeignMod, ItemImpl, ItemMac, ItemMod, ItemStatic,\n+        };\n     }\n }\n \n@@ -72,24 +79,32 @@ use foo::issue_1356::*;\n use self::unix::{};\n \n // nested imports\n-use foo::{a,\n-          b,\n-          bar::{baz,\n-                foo::{a, b, cxxxxxxxxxxxxx, yyyyyyyyyyyyyy, zzzzzzzzzzzzzzzz},\n-                qux,\n-                xxxxxxxxxxx,\n-                yyyyyyyyyyyyy,\n-                zzzzzzzzzzzzzzzz},\n-          boo,\n-          c};\n-\n-use fooo::{baar::foobar::{xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy,\n-                          zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz},\n-           bar,\n-           bar::*,\n-           x,\n-           y,\n-           z};\n+use foo::{\n+    a,\n+    b,\n+    bar::{\n+        baz,\n+        foo::{a, b, cxxxxxxxxxxxxx, yyyyyyyyyyyyyy, zzzzzzzzzzzzzzzz},\n+        qux,\n+        xxxxxxxxxxx,\n+        yyyyyyyyyyyyy,\n+        zzzzzzzzzzzzzzzz,\n+    },\n+    boo,\n+    c,\n+};\n+\n+use fooo::{\n+    baar::foobar::{\n+        xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy,\n+        zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz,\n+    },\n+    bar,\n+    bar::*,\n+    x,\n+    y,\n+    z,\n+};\n \n // nested imports with a single sub-tree.\n use a::b::c::d;"}, {"sha": "b82e41621a8c3e87f52270d15fd45e2d1cd843c0", "filename": "tests/target/issue-2111.rs", "status": "modified", "additions": 25, "deletions": 23, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/7734d29ff82d3c838eef8f6db9bffe9ca89a8bb8/tests%2Ftarget%2Fissue-2111.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7734d29ff82d3c838eef8f6db9bffe9ca89a8bb8/tests%2Ftarget%2Fissue-2111.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fissue-2111.rs?ref=7734d29ff82d3c838eef8f6db9bffe9ca89a8bb8", "patch": "@@ -1,26 +1,28 @@\n // rustfmt-normalize_comments: false\n \n // An import with single line comments.\n-use super::{DelayChoice,\n-            Destinations,\n-            Holding,\n-            LodaModel,\n-            MethodDescription,\n-            ModelBehaviour,\n-            ModelEdges,\n-            ModelProperties,\n-            ModelRequestGraph,\n-            ModelSelector,\n-            RequestDescription,\n-            StringMap,\n-            Switch,\n-            //    ModelMetaData,\n-            //    Generated,\n-            //    SecondsString,\n-            //    DateString,\n-            //    ModelConfiguration,\n-            //    ModelRequests,\n-            //    RestResponse,\n-            //    RestResponseCode,\n-            //    UniformHolding\n-            SCHEMA_VERSIONS};\n+use super::{\n+    DelayChoice,\n+    Destinations,\n+    Holding,\n+    LodaModel,\n+    MethodDescription,\n+    ModelBehaviour,\n+    ModelEdges,\n+    ModelProperties,\n+    ModelRequestGraph,\n+    ModelSelector,\n+    RequestDescription,\n+    StringMap,\n+    Switch,\n+    //    ModelMetaData,\n+    //    Generated,\n+    //    SecondsString,\n+    //    DateString,\n+    //    ModelConfiguration,\n+    //    ModelRequests,\n+    //    RestResponse,\n+    //    RestResponseCode,\n+    //    UniformHolding\n+    SCHEMA_VERSIONS,\n+};"}, {"sha": "446b4357de3b1ed067caee8b81db66a81c58725b", "filename": "tests/target/multiple.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7734d29ff82d3c838eef8f6db9bffe9ca89a8bb8/tests%2Ftarget%2Fmultiple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7734d29ff82d3c838eef8f6db9bffe9ca89a8bb8/tests%2Ftarget%2Fmultiple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fmultiple.rs?ref=7734d29ff82d3c838eef8f6db9bffe9ca89a8bb8", "patch": "@@ -16,9 +16,11 @@ extern crate foo;\n extern crate foo;\n \n use std::cell::*;\n-use std::{self, any, ascii, borrow, borrow, borrow, borrow, borrow, borrow, borrow, borrow,\n-          borrow, borrow, borrow, boxed, boxed, boxed, boxed, boxed, boxed, boxed, boxed, boxed,\n-          boxed, char, char, char, char, char, char, char, char, char, char};\n+use std::{\n+    self, any, ascii, borrow, borrow, borrow, borrow, borrow, borrow, borrow, borrow, borrow,\n+    borrow, borrow, boxed, boxed, boxed, boxed, boxed, boxed, boxed, boxed, boxed, boxed, char,\n+    char, char, char, char, char, char, char, char, char,\n+};\n \n mod doc;\n mod other;"}]}