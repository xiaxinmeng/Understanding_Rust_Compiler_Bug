{"sha": "c3988713417ecde47e176920924517ae21b3fb3b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMzOTg4NzEzNDE3ZWNkZTQ3ZTE3NjkyMDkyNDUxN2FlMjFiM2ZiM2I=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2021-03-04T11:01:09Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-03-04T11:01:09Z"}, "message": "Rollup merge of #82717 - estebank:issue-70152, r=lcnr\n\nAccount for macros when suggesting adding lifetime\n\nFix #70152.", "tree": {"sha": "071eef6d4c684a93a8454a1b8bcea7b433c392a1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/071eef6d4c684a93a8454a1b8bcea7b433c392a1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c3988713417ecde47e176920924517ae21b3fb3b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgQL31CRBK7hj4Ov3rIwAAdHIIABC4ILGXOMG6fM9aim0Fqv1G\nTjPHTEwIHYPwSs5zIwQUWaG6IahoIiXZz4J2MCdAIHu8wDW6zmSbATaJPWNf6AkI\nA9CzksaPZzk52XDgbSi1sAL8dQ0p19oA1OqyapFmUJyiZ7IZpSpBRyba2izmfzdH\nv+xURWmLlfh0SOTd+vI2F2VMHs6206/nD39+nqt6TKJMlCGLteEeUucyK+fulBEw\nx23RIXlciuQUB5AVNl3fwUKYl4ElgpqP87WBF+V/mG/lMXl5HxPB5QJm0cs7olPY\nDQ7L29WsJJfopcmHQs1uJ8wcFXnIeTWETclVIfuiJSXtQu7VtwSg2zkQGL1x1NA=\n=cG/4\n-----END PGP SIGNATURE-----\n", "payload": "tree 071eef6d4c684a93a8454a1b8bcea7b433c392a1\nparent 761ceab467a0a8c42bfeed03842a352f3b039026\nparent 5d0697b1be074a0774f521baf97492260e2a0737\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1614855669 +0900\ncommitter GitHub <noreply@github.com> 1614855669 +0900\n\nRollup merge of #82717 - estebank:issue-70152, r=lcnr\n\nAccount for macros when suggesting adding lifetime\n\nFix #70152.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c3988713417ecde47e176920924517ae21b3fb3b", "html_url": "https://github.com/rust-lang/rust/commit/c3988713417ecde47e176920924517ae21b3fb3b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c3988713417ecde47e176920924517ae21b3fb3b/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "761ceab467a0a8c42bfeed03842a352f3b039026", "url": "https://api.github.com/repos/rust-lang/rust/commits/761ceab467a0a8c42bfeed03842a352f3b039026", "html_url": "https://github.com/rust-lang/rust/commit/761ceab467a0a8c42bfeed03842a352f3b039026"}, {"sha": "5d0697b1be074a0774f521baf97492260e2a0737", "url": "https://api.github.com/repos/rust-lang/rust/commits/5d0697b1be074a0774f521baf97492260e2a0737", "html_url": "https://github.com/rust-lang/rust/commit/5d0697b1be074a0774f521baf97492260e2a0737"}], "stats": {"total": 85, "additions": 77, "deletions": 8}, "files": [{"sha": "87bf79d722bde4cb83f6e41e79b00b1e56a1f65a", "filename": "compiler/rustc_resolve/src/late/diagnostics.rs", "status": "modified", "additions": 21, "deletions": 8, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/c3988713417ecde47e176920924517ae21b3fb3b/compiler%2Frustc_resolve%2Fsrc%2Flate%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3988713417ecde47e176920924517ae21b3fb3b/compiler%2Frustc_resolve%2Fsrc%2Flate%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flate%2Fdiagnostics.rs?ref=c3988713417ecde47e176920924517ae21b3fb3b", "patch": "@@ -1645,6 +1645,7 @@ impl<'tcx> LifetimeContext<'_, 'tcx> {\n         );\n         err.span_label(lifetime_ref.span, \"undeclared lifetime\");\n         let mut suggests_in_band = false;\n+        let mut suggest_note = true;\n         for missing in &self.missing_named_lifetime_spots {\n             match missing {\n                 MissingLifetimeSpot::Generics(generics) => {\n@@ -1664,12 +1665,24 @@ impl<'tcx> LifetimeContext<'_, 'tcx> {\n                         suggests_in_band = true;\n                         (generics.span, format!(\"<{}>\", lifetime_ref))\n                     };\n-                    err.span_suggestion(\n-                        span,\n-                        &format!(\"consider introducing lifetime `{}` here\", lifetime_ref),\n-                        sugg,\n-                        Applicability::MaybeIncorrect,\n-                    );\n+                    if !span.from_expansion() {\n+                        err.span_suggestion(\n+                            span,\n+                            &format!(\"consider introducing lifetime `{}` here\", lifetime_ref),\n+                            sugg,\n+                            Applicability::MaybeIncorrect,\n+                        );\n+                    } else if suggest_note {\n+                        suggest_note = false; // Avoid displaying the same help multiple times.\n+                        err.span_label(\n+                            span,\n+                            &format!(\n+                                \"lifetime `{}` is missing in item created through this procedural \\\n+                                 macro\",\n+                                lifetime_ref,\n+                            ),\n+                        );\n+                    }\n                 }\n                 MissingLifetimeSpot::HigherRanked { span, span_type } => {\n                     err.span_suggestion(\n@@ -1684,7 +1697,7 @@ impl<'tcx> LifetimeContext<'_, 'tcx> {\n                     );\n                     err.note(\n                         \"for more information on higher-ranked polymorphism, visit \\\n-                            https://doc.rust-lang.org/nomicon/hrtb.html\",\n+                         https://doc.rust-lang.org/nomicon/hrtb.html\",\n                     );\n                 }\n                 _ => {}\n@@ -1696,7 +1709,7 @@ impl<'tcx> LifetimeContext<'_, 'tcx> {\n         {\n             err.help(\n                 \"if you want to experiment with in-band lifetime bindings, \\\n-                    add `#![feature(in_band_lifetimes)]` to the crate attributes\",\n+                 add `#![feature(in_band_lifetimes)]` to the crate attributes\",\n             );\n         }\n         err.emit();"}, {"sha": "cc29f9de7fb4a45216be336069ce7ed1b2b26caa", "filename": "src/test/ui/lifetimes/undeclared-lifetime-used-in-debug-macro-issue-70152.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/c3988713417ecde47e176920924517ae21b3fb3b/src%2Ftest%2Fui%2Flifetimes%2Fundeclared-lifetime-used-in-debug-macro-issue-70152.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3988713417ecde47e176920924517ae21b3fb3b/src%2Ftest%2Fui%2Flifetimes%2Fundeclared-lifetime-used-in-debug-macro-issue-70152.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetimes%2Fundeclared-lifetime-used-in-debug-macro-issue-70152.rs?ref=c3988713417ecde47e176920924517ae21b3fb3b", "patch": "@@ -0,0 +1,16 @@\n+#[derive(Eq, PartialEq)]\n+struct Test {\n+    a: &'b str,\n+    //~^ ERROR use of undeclared lifetime name `'b`\n+    //~| ERROR use of undeclared lifetime name `'b`\n+}\n+\n+trait T {\n+    fn foo(&'static self) {}\n+}\n+\n+impl T for Test {\n+    fn foo(&'b self) {} //~ ERROR use of undeclared lifetime name `'b`\n+}\n+\n+fn main() {}"}, {"sha": "30142e24cd5f11a3fcd644c07ad2aea73a3e9805", "filename": "src/test/ui/lifetimes/undeclared-lifetime-used-in-debug-macro-issue-70152.stderr", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/c3988713417ecde47e176920924517ae21b3fb3b/src%2Ftest%2Fui%2Flifetimes%2Fundeclared-lifetime-used-in-debug-macro-issue-70152.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c3988713417ecde47e176920924517ae21b3fb3b/src%2Ftest%2Fui%2Flifetimes%2Fundeclared-lifetime-used-in-debug-macro-issue-70152.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetimes%2Fundeclared-lifetime-used-in-debug-macro-issue-70152.stderr?ref=c3988713417ecde47e176920924517ae21b3fb3b", "patch": "@@ -0,0 +1,40 @@\n+error[E0261]: use of undeclared lifetime name `'b`\n+  --> $DIR/undeclared-lifetime-used-in-debug-macro-issue-70152.rs:13:13\n+   |\n+LL |     fn foo(&'b self) {}\n+   |             ^^ undeclared lifetime\n+   |\n+   = help: if you want to experiment with in-band lifetime bindings, add `#![feature(in_band_lifetimes)]` to the crate attributes\n+help: consider introducing lifetime `'b` here\n+   |\n+LL | impl<'b> T for Test {\n+   |     ^^^^\n+help: consider introducing lifetime `'b` here\n+   |\n+LL |     fn foo<'b>(&'b self) {}\n+   |           ^^^^\n+\n+error[E0261]: use of undeclared lifetime name `'b`\n+  --> $DIR/undeclared-lifetime-used-in-debug-macro-issue-70152.rs:3:9\n+   |\n+LL | struct Test {\n+   |            - help: consider introducing lifetime `'b` here: `<'b>`\n+LL |     a: &'b str,\n+   |         ^^ undeclared lifetime\n+   |\n+   = help: if you want to experiment with in-band lifetime bindings, add `#![feature(in_band_lifetimes)]` to the crate attributes\n+\n+error[E0261]: use of undeclared lifetime name `'b`\n+  --> $DIR/undeclared-lifetime-used-in-debug-macro-issue-70152.rs:3:9\n+   |\n+LL | #[derive(Eq, PartialEq)]\n+   |          -- lifetime `'b` is missing in item created through this procedural macro\n+LL | struct Test {\n+LL |     a: &'b str,\n+   |         ^^ undeclared lifetime\n+   |\n+   = help: if you want to experiment with in-band lifetime bindings, add `#![feature(in_band_lifetimes)]` to the crate attributes\n+\n+error: aborting due to 3 previous errors\n+\n+For more information about this error, try `rustc --explain E0261`."}]}