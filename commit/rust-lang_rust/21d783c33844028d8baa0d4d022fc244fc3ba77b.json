{"sha": "21d783c33844028d8baa0d4d022fc244fc3ba77b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIxZDc4M2MzMzg0NDAyOGQ4YmFhMGQ0ZDAyMmZjMjQ0ZmMzYmE3N2I=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-02-04T02:42:12Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-02-04T07:48:12Z"}, "message": "rt: Make isaac_init not a template", "tree": {"sha": "0670af131df31fba91e16feb9c3f90f083692b3f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0670af131df31fba91e16feb9c3f90f083692b3f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/21d783c33844028d8baa0d4d022fc244fc3ba77b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/21d783c33844028d8baa0d4d022fc244fc3ba77b", "html_url": "https://github.com/rust-lang/rust/commit/21d783c33844028d8baa0d4d022fc244fc3ba77b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/21d783c33844028d8baa0d4d022fc244fc3ba77b/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f7a727e8613ac453db4e4aa2c4c00140c8a5ee3f", "url": "https://api.github.com/repos/rust-lang/rust/commits/f7a727e8613ac453db4e4aa2c4c00140c8a5ee3f", "html_url": "https://github.com/rust-lang/rust/commit/f7a727e8613ac453db4e4aa2c4c00140c8a5ee3f"}], "stats": {"total": 31, "additions": 12, "deletions": 19}, "files": [{"sha": "c5725f0e392fe81184261bad9c95f9bcd4351225", "filename": "src/rt/rust_builtin.cpp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/21d783c33844028d8baa0d4d022fc244fc3ba77b/src%2Frt%2Frust_builtin.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/21d783c33844028d8baa0d4d022fc244fc3ba77b/src%2Frt%2Frust_builtin.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_builtin.cpp?ref=21d783c33844028d8baa0d4d022fc244fc3ba77b", "patch": "@@ -139,7 +139,7 @@ rand_new() {\n         task->fail();\n         return NULL;\n     }\n-    isaac_init(thread, rctx);\n+    isaac_init(thread->kernel, rctx);\n     return rctx;\n }\n "}, {"sha": "3e306cc418d4f48ba8b811ce6062213ab09d831f", "filename": "src/rt/rust_scheduler.cpp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/21d783c33844028d8baa0d4d022fc244fc3ba77b/src%2Frt%2Frust_scheduler.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/21d783c33844028d8baa0d4d022fc244fc3ba77b/src%2Frt%2Frust_scheduler.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_scheduler.cpp?ref=21d783c33844028d8baa0d4d022fc244fc3ba77b", "patch": "@@ -9,7 +9,7 @@ rust_scheduler::rust_scheduler(rust_kernel *kernel,\n     env(srv->env),\n     num_threads(num_threads)\n {\n-    isaac_init(this, &rctx);\n+    isaac_init(kernel, &rctx);\n     create_task_threads();\n }\n "}, {"sha": "a3bf729ad2f6d7a974788900a81daedef19facd3", "filename": "src/rt/rust_task_thread.cpp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/21d783c33844028d8baa0d4d022fc244fc3ba77b/src%2Frt%2Frust_task_thread.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/21d783c33844028d8baa0d4d022fc244fc3ba77b/src%2Frt%2Frust_task_thread.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_task_thread.cpp?ref=21d783c33844028d8baa0d4d022fc244fc3ba77b", "patch": "@@ -37,7 +37,7 @@ rust_task_thread::rust_task_thread(rust_scheduler *sched,\n     should_exit(false)\n {\n     LOGPTR(this, \"new dom\", (uintptr_t)this);\n-    isaac_init(this, &rctx);\n+    isaac_init(kernel, &rctx);\n #ifndef __WIN32__\n     pthread_attr_init(&attr);\n     pthread_attr_setstacksize(&attr, 1024 * 1024);"}, {"sha": "e8fb70fee9343440dbf941d8a5513eae2c0e3669", "filename": "src/rt/rust_task_thread.h", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/21d783c33844028d8baa0d4d022fc244fc3ba77b/src%2Frt%2Frust_task_thread.h", "raw_url": "https://github.com/rust-lang/rust/raw/21d783c33844028d8baa0d4d022fc244fc3ba77b/src%2Frt%2Frust_task_thread.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_task_thread.h?ref=21d783c33844028d8baa0d4d022fc244fc3ba77b", "patch": "@@ -117,12 +117,6 @@ struct rust_task_thread : public kernel_owned<rust_task_thread>,\n \n     virtual void run();\n \n-#ifdef __WIN32__\n-    inline void win32_require(LPCTSTR fn, BOOL ok) {\n-        kernel->win32_require(fn, ok);\n-    }\n-#endif\n-\n     void init_tls();\n     void place_task_in_tls(rust_task *task);\n "}, {"sha": "23c67422c3958628112ad81f82130f48dcd02f30", "filename": "src/rt/rust_util.h", "status": "modified", "additions": 9, "deletions": 10, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/21d783c33844028d8baa0d4d022fc244fc3ba77b/src%2Frt%2Frust_util.h", "raw_url": "https://github.com/rust-lang/rust/raw/21d783c33844028d8baa0d4d022fc244fc3ba77b/src%2Frt%2Frust_util.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_util.h?ref=21d783c33844028d8baa0d4d022fc244fc3ba77b", "patch": "@@ -124,13 +124,12 @@ align_to(T size, size_t alignment) {\n \n // Initialization helper for ISAAC RNG\n \n-template <typename thread_or_kernel>\n-static inline void\n-isaac_init(thread_or_kernel *thread, randctx *rctx)\n+inline void\n+isaac_init(rust_kernel *kernel, randctx *rctx)\n {\n         memset(rctx, 0, sizeof(randctx));\n \n-        char *rust_seed = thread->env->rust_seed;\n+        char *rust_seed = kernel->env->rust_seed;\n         if (rust_seed != NULL) {\n             ub4 seed = (ub4) atoi(rust_seed);\n             for (size_t i = 0; i < RANDSIZ; i ++) {\n@@ -140,24 +139,24 @@ isaac_init(thread_or_kernel *thread, randctx *rctx)\n         } else {\n #ifdef __WIN32__\n             HCRYPTPROV hProv;\n-            thread->win32_require\n+            kernel->win32_require\n                 (_T(\"CryptAcquireContext\"),\n                  CryptAcquireContext(&hProv, NULL, NULL, PROV_RSA_FULL,\n                                      CRYPT_VERIFYCONTEXT|CRYPT_SILENT));\n-            thread->win32_require\n+            kernel->win32_require\n                 (_T(\"CryptGenRandom\"),\n                  CryptGenRandom(hProv, sizeof(rctx->randrsl),\n                                 (BYTE*)(&rctx->randrsl)));\n-            thread->win32_require\n+            kernel->win32_require\n                 (_T(\"CryptReleaseContext\"),\n                  CryptReleaseContext(hProv, 0));\n #else\n             int fd = open(\"/dev/urandom\", O_RDONLY);\n-            I(thread, fd > 0);\n-            I(thread,\n+            I(kernel, fd > 0);\n+            I(kernel,\n               read(fd, (void*) &rctx->randrsl, sizeof(rctx->randrsl))\n               == sizeof(rctx->randrsl));\n-            I(thread, close(fd) == 0);\n+            I(kernel, close(fd) == 0);\n #endif\n         }\n "}]}