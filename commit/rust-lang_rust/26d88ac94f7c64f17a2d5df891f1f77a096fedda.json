{"sha": "26d88ac94f7c64f17a2d5df891f1f77a096fedda", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI2ZDg4YWM5NGY3YzY0ZjE3YTJkNWRmODkxZjFmNzdhMDk2ZmVkZGE=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-05-31T13:20:52Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-05-31T13:20:52Z"}, "message": "Merge #4671\n\n4671: docs r=matklad a=matklad\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "7e45b866b89e4dde5848d4f89fb88193e56ad1a6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7e45b866b89e4dde5848d4f89fb88193e56ad1a6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/26d88ac94f7c64f17a2d5df891f1f77a096fedda", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe0680CRBK7hj4Ov3rIwAAdHIIABCGGD0gqeFRPNzBDBB2EkKG\nWU1RsjwofOHvosQIXezL+RKD+6qIrGmy2GEQj4xZ82Dhm5nZ0WY8dc2LFG3jTPqi\nN0wVYDcuI8jo+Mbdrr/yd3+wiecjVxM5UzSKKZaIJtKT2c25bCQJeY1AOPgod10W\nFQvpYrdyJZ0Ei7SJUi4Zysmz3FnJ3dcOSbIRadnAlX5N5pTNgvJ71Cu6D/APRxsY\n7TPbHk+5x6H7dQsY9TiIDMrmfaV7ru888BcrEuIU5bnKnMzfSkEmqj6uQdIjvqCg\nbvcoRNzbtFA8zRNQCxmaVgrEFNLbAjpLA5PxtUIAV2NpBuUuG1nvfsTGgJKZKcg=\n=2u7i\n-----END PGP SIGNATURE-----\n", "payload": "tree 7e45b866b89e4dde5848d4f89fb88193e56ad1a6\nparent d96f3368d649b487c7d1fb479d5fd7c52e56c8fc\nparent f20775d7ebe7d3a3c70a433dc0db62e588a387f0\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1590931252 +0000\ncommitter GitHub <noreply@github.com> 1590931252 +0000\n\nMerge #4671\n\n4671: docs r=matklad a=matklad\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/26d88ac94f7c64f17a2d5df891f1f77a096fedda", "html_url": "https://github.com/rust-lang/rust/commit/26d88ac94f7c64f17a2d5df891f1f77a096fedda", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/26d88ac94f7c64f17a2d5df891f1f77a096fedda/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d96f3368d649b487c7d1fb479d5fd7c52e56c8fc", "url": "https://api.github.com/repos/rust-lang/rust/commits/d96f3368d649b487c7d1fb479d5fd7c52e56c8fc", "html_url": "https://github.com/rust-lang/rust/commit/d96f3368d649b487c7d1fb479d5fd7c52e56c8fc"}, {"sha": "f20775d7ebe7d3a3c70a433dc0db62e588a387f0", "url": "https://api.github.com/repos/rust-lang/rust/commits/f20775d7ebe7d3a3c70a433dc0db62e588a387f0", "html_url": "https://github.com/rust-lang/rust/commit/f20775d7ebe7d3a3c70a433dc0db62e588a387f0"}], "stats": {"total": 35, "additions": 17, "deletions": 18}, "files": [{"sha": "202783fd9538359a00559cc1c0e169491f593dad", "filename": "docs/user/manual.adoc", "status": "modified", "additions": 17, "deletions": 18, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/26d88ac94f7c64f17a2d5df891f1f77a096fedda/docs%2Fuser%2Fmanual.adoc", "raw_url": "https://github.com/rust-lang/rust/raw/26d88ac94f7c64f17a2d5df891f1f77a096fedda/docs%2Fuser%2Fmanual.adoc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fuser%2Fmanual.adoc?ref=26d88ac94f7c64f17a2d5df891f1f77a096fedda", "patch": "@@ -2,12 +2,7 @@\n :toc: preamble\n :sectanchors:\n :page-layout: post\n-// https://gist.github.com/dcode/0cfbf2699a1fe9b46ff04c41721dda74#admonitions\n-:tip-caption: :bulb:\n-:note-caption: :information_source:\n-:important-caption: :heavy_exclamation_mark:\n-:caution-caption: :fire:\n-:warning-caption: :warning:\n+:icons: font\n :source-highlighter: rouge\n :experimental:\n \n@@ -67,16 +62,6 @@ The server binary is stored in:\n \n Note that we only support two most recent versions of VS Code.\n \n-==== Special `when` clause context for keybindings.\n-You may use `inRustProject` context to configure keybindings for rust projects only. For example:\n-[source,json]\n-----\n-{ \"key\": \"ctrl+shift+f5\", \"command\": \"workbench.action.debug.restart\", \"when\": \"inDebugMode && !inRustProject\"},\n-{ \"key\": \"ctrl+shift+f5\", \"command\": \"rust-analyzer.debug\", \"when\": \"inRustProject\"},\n-{ \"key\": \"ctrl+i\", \"command\": \"rust-analyzer.toggleInlayHints\", \"when\": \"inRustProject\" }\n-----\n-More about `when` clause contexts https://code.visualstudio.com/docs/getstarted/keybindings#_when-clause-contexts[here].\n-\n ==== Updates\n \n The extension will be updated automatically as new versions become available. It will ask your permission to download the matching language server version binary if needed.\n@@ -124,10 +109,23 @@ Here are some useful self-diagnostic commands:\n * To log all LSP requests, add `\"rust-analyzer.trace.server\": \"verbose\"` to the settings and look for `Server Trace` in the panel.\n * To enable client-side logging, add `\"rust-analyzer.trace.extension\": true` to the settings and open the `Console` tab of VS Code developer tools.\n \n+==== Special `when` clause context for keybindings.\n+You may use `inRustProject` context to configure keybindings for rust projects only. For example:\n+[source,json]\n+----\n+{\n+  \"key\": \"ctrl+i\",\n+  \"command\": \"rust-analyzer.toggleInlayHints\",\n+  \"when\": \"inRustProject\"\n+}\n+----\n+More about `when` clause contexts https://code.visualstudio.com/docs/getstarted/keybindings#_when-clause-contexts[here].\n+\n === rust-analyzer Language Server Binary\n \n Other editors generally require the `rust-analyzer` binary to be in `$PATH`.\n-You can download the pre-built binary from the https://github.com/rust-analyzer/rust-analyzer/releases[releases] page. Typically, you then need to rename the binary for your platform, e.g. `rust-analyzer-mac` if you're on Mac OS, to `rust-analyzer` and make it executable in addition to moving it into a directory in your `$PATH`.\n+You can download the pre-built binary from the https://github.com/rust-analyzer/rust-analyzer/releases[releases] page.\n+Typically, you then need to rename the binary for your platform, e.g. `rust-analyzer-mac` if you're on Mac OS, to `rust-analyzer` and make it executable in addition to moving it into a directory in your `$PATH`.\n \n On Linux to install the `rust-analyzer` binary into `~/.local/bin`, this commands could be used\n \n@@ -147,7 +145,8 @@ $ git clone https://github.com/rust-analyzer/rust-analyzer.git && cd rust-analyz\n $ cargo xtask install --server\n ----\n \n-If your editor can't find the binary even though the binary is on your `$PATH`, the likely explanation is that it doesn't see the same `$PATH` as the shell, see https://github.com/rust-analyzer/rust-analyzer/issues/1811[this issue]. On Unix, running the editor from a shell or changing the `.desktop` file to set the environment should help.\n+If your editor can't find the binary even though the binary is on your `$PATH`, the likely explanation is that it doesn't see the same `$PATH` as the shell, see https://github.com/rust-analyzer/rust-analyzer/issues/1811[this issue].\n+On Unix, running the editor from a shell or changing the `.desktop` file to set the environment should help.\n \n ==== Arch Linux\n "}]}