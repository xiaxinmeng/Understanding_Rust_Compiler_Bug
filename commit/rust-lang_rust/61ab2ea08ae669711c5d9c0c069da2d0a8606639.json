{"sha": "61ab2ea08ae669711c5d9c0c069da2d0a8606639", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYxYWIyZWEwOGFlNjY5NzExYzVkOWMwYzA2OWRhMmQwYTg2MDY2Mzk=", "commit": {"author": {"name": "Ariel Ben-Yehuda", "email": "ariel.byd@gmail.com", "date": "2014-10-15T17:03:44Z"}, "committer": {"name": "Ariel Ben-Yehuda", "email": "ariel.byd@gmail.com", "date": "2014-10-15T17:09:09Z"}, "message": "response for review comments", "tree": {"sha": "2d64a04def48dcfc320d42db5e03ad186aa94821", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2d64a04def48dcfc320d42db5e03ad186aa94821"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/61ab2ea08ae669711c5d9c0c069da2d0a8606639", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/61ab2ea08ae669711c5d9c0c069da2d0a8606639", "html_url": "https://github.com/rust-lang/rust/commit/61ab2ea08ae669711c5d9c0c069da2d0a8606639", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/61ab2ea08ae669711c5d9c0c069da2d0a8606639/comments", "author": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "committer": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1ee345a87b05a4972e100f148819d2020c55381f", "url": "https://api.github.com/repos/rust-lang/rust/commits/1ee345a87b05a4972e100f148819d2020c55381f", "html_url": "https://github.com/rust-lang/rust/commit/1ee345a87b05a4972e100f148819d2020c55381f"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "9c37bd4ec14fe103943df7069568cd1a9c39464a", "filename": "src/librustc/middle/trans/context.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/61ab2ea08ae669711c5d9c0c069da2d0a8606639/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/61ab2ea08ae669711c5d9c0c069da2d0a8606639/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcontext.rs?ref=61ab2ea08ae669711c5d9c0c069da2d0a8606639", "patch": "@@ -720,12 +720,12 @@ impl<'b, 'tcx> CrateContext<'b, 'tcx> {\n     }\n \n     pub fn max_obj_size(&self) -> u64 {\n-        1<<31 /* FIXME: select based on architecture */\n+        1<<31 /* FIXME #18069: select based on architecture */\n     }\n \n     pub fn report_overbig_object(&self, obj: ty::t) -> ! {\n         self.sess().fatal(\n-            format!(\"Objects of type `{}` are too big for the current ABI\",\n+            format!(\"the type `{}` is too big for the current architecture\",\n                     obj.repr(self.tcx())).as_slice())\n     }\n }"}, {"sha": "bbd4233625ff60d8b4710d26a3beb4ab296ad5b4", "filename": "src/librustc/middle/trans/controlflow.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/61ab2ea08ae669711c5d9c0c069da2d0a8606639/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcontrolflow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/61ab2ea08ae669711c5d9c0c069da2d0a8606639/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcontrolflow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcontrolflow.rs?ref=61ab2ea08ae669711c5d9c0c069da2d0a8606639", "patch": "@@ -499,7 +499,7 @@ pub fn trans_fail<'blk, 'tcx>(bcx: Block<'blk, 'tcx>,\n     let loc = bcx.sess().codemap().lookup_char_pos(sp.lo);\n     let filename = token::intern_and_get_ident(loc.file.name.as_slice());\n     let filename = C_str_slice(ccx, filename);\n-    let line = C_int(ccx, loc.line as i64);\n+    let line = C_uint(ccx, loc.line);\n     let expr_file_line_const = C_struct(ccx, &[v_str, filename, line], false);\n     let expr_file_line = consts::const_addr_of(ccx, expr_file_line_const, ast::MutImmutable);\n     let args = vec!(expr_file_line);\n@@ -526,7 +526,7 @@ pub fn trans_fail_bounds_check<'blk, 'tcx>(bcx: Block<'blk, 'tcx>,\n \n     // Invoke the lang item\n     let filename = C_str_slice(ccx,  filename);\n-    let line = C_int(ccx, loc.line as i64);\n+    let line = C_uint(ccx, loc.line);\n     let file_line_const = C_struct(ccx, &[filename, line], false);\n     let file_line = consts::const_addr_of(ccx, file_line_const, ast::MutImmutable);\n     let args = vec!(file_line, index, len);"}, {"sha": "29bf3d3dc3de2a40dd036b955e94bc9c83c7f292", "filename": "src/librustc/middle/trans/type_of.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/61ab2ea08ae669711c5d9c0c069da2d0a8606639/src%2Flibrustc%2Fmiddle%2Ftrans%2Ftype_of.rs", "raw_url": "https://github.com/rust-lang/rust/raw/61ab2ea08ae669711c5d9c0c069da2d0a8606639/src%2Flibrustc%2Fmiddle%2Ftrans%2Ftype_of.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Ftype_of.rs?ref=61ab2ea08ae669711c5d9c0c069da2d0a8606639", "patch": "@@ -28,9 +28,9 @@ use std::num::CheckedMul;\n \n // LLVM doesn't like objects that are too big. Issue #17913\n fn ensure_array_fits_in_address_space(ccx: &CrateContext,\n-                                       llet: Type,\n-                                       size: machine::llsize,\n-                                       scapegoat: ty::t) {\n+                                      llet: Type,\n+                                      size: machine::llsize,\n+                                      scapegoat: ty::t) {\n     let esz = machine::llsize_of_alloc(ccx, llet);\n     match esz.checked_mul(&size) {\n         Some(n) if n < ccx.max_obj_size() => {}"}, {"sha": "badaa4b922fce4a055be81c34378b44229cfadac", "filename": "src/test/compile-fail/huge-array-simple.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/61ab2ea08ae669711c5d9c0c069da2d0a8606639/src%2Ftest%2Fcompile-fail%2Fhuge-array-simple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/61ab2ea08ae669711c5d9c0c069da2d0a8606639/src%2Ftest%2Fcompile-fail%2Fhuge-array-simple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fhuge-array-simple.rs?ref=61ab2ea08ae669711c5d9c0c069da2d0a8606639", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// error-pattern: too big for the current ABI\n+// error-pattern: too big for the current\n \n fn main() {\n    let fat : [u8, ..1<<61] = [0, ..1<<61];", "previous_filename": "src/test/compile-fail/simple-oversized-array.rs"}, {"sha": "37a5bca424da142ed390887d872ff1493324f75f", "filename": "src/test/compile-fail/huge-array.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/61ab2ea08ae669711c5d9c0c069da2d0a8606639/src%2Ftest%2Fcompile-fail%2Fhuge-array.rs", "raw_url": "https://github.com/rust-lang/rust/raw/61ab2ea08ae669711c5d9c0c069da2d0a8606639/src%2Ftest%2Fcompile-fail%2Fhuge-array.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fhuge-array.rs?ref=61ab2ea08ae669711c5d9c0c069da2d0a8606639", "previous_filename": "src/test/compile-fail/oversized-array.rs"}, {"sha": "92f9c41e7ea30643435440d097d0cb0a0f8cee44", "filename": "src/test/compile-fail/huge-enum.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/61ab2ea08ae669711c5d9c0c069da2d0a8606639/src%2Ftest%2Fcompile-fail%2Fhuge-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/61ab2ea08ae669711c5d9c0c069da2d0a8606639/src%2Ftest%2Fcompile-fail%2Fhuge-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fhuge-enum.rs?ref=61ab2ea08ae669711c5d9c0c069da2d0a8606639", "previous_filename": "src/test/compile-fail/oversized-discriminant.rs"}, {"sha": "a10c61d6606d04895e98444e871dd05d29f7b3db", "filename": "src/test/compile-fail/huge-struct.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/61ab2ea08ae669711c5d9c0c069da2d0a8606639/src%2Ftest%2Fcompile-fail%2Fhuge-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/61ab2ea08ae669711c5d9c0c069da2d0a8606639/src%2Ftest%2Fcompile-fail%2Fhuge-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fhuge-struct.rs?ref=61ab2ea08ae669711c5d9c0c069da2d0a8606639", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// error-pattern: are too big for the current ABI\n+// error-pattern: too big for the current\n \n struct S32<T> {\n     v0: T,", "previous_filename": "src/test/compile-fail/oversized-struct.rs"}]}