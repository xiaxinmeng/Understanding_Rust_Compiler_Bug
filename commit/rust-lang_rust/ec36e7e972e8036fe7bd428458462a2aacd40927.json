{"sha": "ec36e7e972e8036fe7bd428458462a2aacd40927", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVjMzZlN2U5NzJlODAzNmZlN2JkNDI4NDU4NDYyYTJhYWNkNDA5Mjc=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-02-14T15:18:18Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-02-14T16:04:18Z"}, "message": "Partially revert #47333.\n\nRemoved the `assume()` which we assumed is the cause of misoptimization in\nissue #48116.", "tree": {"sha": "109c76360757678ea286052290b03c29e0bdedf7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/109c76360757678ea286052290b03c29e0bdedf7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ec36e7e972e8036fe7bd428458462a2aacd40927", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZ1R8CLMp8f2GxWoQ/vbIBR0OATwFAlqEXgIACgkQ/vbIBR0O\nATz9+g/9G/XZ299O72hOY6BTRXVG/vlxwy1MsAjVuW3lt284ep/ySMSDO3Yp+Ueb\nwzxvIdK0WEh5uB3RqeDL7yv92GxT2QznddwmzAj3FVqn2AB7Cumq3muizXQPpQWn\n8uDstDh24MxO/TrlRIcHEm+XhuBgToTVB7zIA9emmpLFqaP8mBgGHh+/nSg8sryf\nZc8FvSRdjedMnfwFc+p1jr3XmQzJ6QarMF6LgpfBsnVk87I+weQM5S5bv+Gyyf9m\nsV+MNJuEEy+VAdg04SSMEDU9NNQPx+u9YG2QS/jn5pMPJPJ7e+IBlHAcB33zcGnf\ncnXbbSm+10HhOUdt3OIPhTa6em4RGaGONn83SEi3oI1JmQIgNB0lxEBYqVf/acZN\nAfZe/8WqJOiFGa2OZLs1CIv1yAI5hZn547kW3lQPZI5ZVrBK4fx1fF0JyvOgiVjl\nzJCaSGOSwzslpGJ6uNTYFuMiCdlqX11bYbblELNXn/ZVf9oRbkzo2h/p1MvfZl5l\n1mtLMhyh9mPZuW50ydnXrVc3FsALrYMUmQFCYq8uLd9jzXH7hhFesGUMZmbQ70Z/\nKZ5W+JvYfkodzo/oksM/TzU+AxOCVwuKs2kBSsuWHWAUQvIRR8/EuJycHZaPGLJT\npAPCrz63YGCDRg8Z1JJGJVYztJnV16j0kSprriLddX4zLv0OumM=\n=CoT6\n-----END PGP SIGNATURE-----", "payload": "tree 109c76360757678ea286052290b03c29e0bdedf7\nparent 7984c895b6995703254035e81d0a85ae1fa9fe2b\nauthor kennytm <kennytm@gmail.com> 1518621498 +0800\ncommitter kennytm <kennytm@gmail.com> 1518624258 +0800\n\nPartially revert #47333.\n\nRemoved the `assume()` which we assumed is the cause of misoptimization in\nissue #48116.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ec36e7e972e8036fe7bd428458462a2aacd40927", "html_url": "https://github.com/rust-lang/rust/commit/ec36e7e972e8036fe7bd428458462a2aacd40927", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ec36e7e972e8036fe7bd428458462a2aacd40927/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7984c895b6995703254035e81d0a85ae1fa9fe2b", "url": "https://api.github.com/repos/rust-lang/rust/commits/7984c895b6995703254035e81d0a85ae1fa9fe2b", "html_url": "https://github.com/rust-lang/rust/commit/7984c895b6995703254035e81d0a85ae1fa9fe2b"}], "stats": {"total": 24, "additions": 15, "deletions": 9}, "files": [{"sha": "ac390313a6797a8e9470efe0d9de8ff7e372134f", "filename": "src/libcore/slice/mod.rs", "status": "modified", "additions": 15, "deletions": 9, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/ec36e7e972e8036fe7bd428458462a2aacd40927/src%2Flibcore%2Fslice%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec36e7e972e8036fe7bd428458462a2aacd40927/src%2Flibcore%2Fslice%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fslice%2Fmod.rs?ref=ec36e7e972e8036fe7bd428458462a2aacd40927", "patch": "@@ -1246,15 +1246,18 @@ macro_rules! iterator {\n             {\n                 // The addition might panic on overflow\n                 // Use the len of the slice to hint optimizer to remove result index bounds check.\n-                let n = make_slice!(self.ptr, self.end).len();\n+                let _n = make_slice!(self.ptr, self.end).len();\n                 self.try_fold(0, move |i, x| {\n                     if predicate(x) { Err(i) }\n                     else { Ok(i + 1) }\n                 }).err()\n-                    .map(|i| {\n-                        unsafe { assume(i < n) };\n-                        i\n-                    })\n+                    // // FIXME(#48116/#45964):\n+                    // // This assume() causes misoptimization on LLVM 6.\n+                    // // Commented out until it is fixed again.\n+                    // .map(|i| {\n+                    //     unsafe { assume(i < n) };\n+                    //     i\n+                    // })\n             }\n \n             #[inline]\n@@ -1271,10 +1274,13 @@ macro_rules! iterator {\n                     if predicate(x) { Err(i) }\n                     else { Ok(i) }\n                 }).err()\n-                    .map(|i| {\n-                        unsafe { assume(i < n) };\n-                        i\n-                    })\n+                    // // FIXME(#48116/#45964):\n+                    // // This assume() causes misoptimization on LLVM 6.\n+                    // // Commented out until it is fixed again.\n+                    // .map(|i| {\n+                    //     unsafe { assume(i < n) };\n+                    //     i\n+                    // })\n             }\n         }\n "}]}