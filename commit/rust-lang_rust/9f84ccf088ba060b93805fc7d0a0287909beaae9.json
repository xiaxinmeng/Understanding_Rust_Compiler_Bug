{"sha": "9f84ccf088ba060b93805fc7d0a0287909beaae9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlmODRjY2YwODhiYTA2MGI5MzgwNWZjN2QwYTAyODc5MDliZWFhZTk=", "commit": {"author": {"name": "Douglas Campos", "email": "qmx@qmx.me", "date": "2018-08-17T00:11:45Z"}, "committer": {"name": "Douglas Campos", "email": "qmx@qmx.me", "date": "2018-08-17T00:11:45Z"}, "message": "special-case std", "tree": {"sha": "e52a8695f63c6045db1b76c71ef830c572dc2b29", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e52a8695f63c6045db1b76c71ef830c572dc2b29"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9f84ccf088ba060b93805fc7d0a0287909beaae9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9f84ccf088ba060b93805fc7d0a0287909beaae9", "html_url": "https://github.com/rust-lang/rust/commit/9f84ccf088ba060b93805fc7d0a0287909beaae9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9f84ccf088ba060b93805fc7d0a0287909beaae9/comments", "author": {"login": "qmx", "id": 66734, "node_id": "MDQ6VXNlcjY2NzM0", "avatar_url": "https://avatars.githubusercontent.com/u/66734?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qmx", "html_url": "https://github.com/qmx", "followers_url": "https://api.github.com/users/qmx/followers", "following_url": "https://api.github.com/users/qmx/following{/other_user}", "gists_url": "https://api.github.com/users/qmx/gists{/gist_id}", "starred_url": "https://api.github.com/users/qmx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qmx/subscriptions", "organizations_url": "https://api.github.com/users/qmx/orgs", "repos_url": "https://api.github.com/users/qmx/repos", "events_url": "https://api.github.com/users/qmx/events{/privacy}", "received_events_url": "https://api.github.com/users/qmx/received_events", "type": "User", "site_admin": false}, "committer": {"login": "qmx", "id": 66734, "node_id": "MDQ6VXNlcjY2NzM0", "avatar_url": "https://avatars.githubusercontent.com/u/66734?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qmx", "html_url": "https://github.com/qmx", "followers_url": "https://api.github.com/users/qmx/followers", "following_url": "https://api.github.com/users/qmx/following{/other_user}", "gists_url": "https://api.github.com/users/qmx/gists{/gist_id}", "starred_url": "https://api.github.com/users/qmx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qmx/subscriptions", "organizations_url": "https://api.github.com/users/qmx/orgs", "repos_url": "https://api.github.com/users/qmx/repos", "events_url": "https://api.github.com/users/qmx/events{/privacy}", "received_events_url": "https://api.github.com/users/qmx/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "231bf229325c0b1382419383489f1cc0f2f08b0d", "url": "https://api.github.com/repos/rust-lang/rust/commits/231bf229325c0b1382419383489f1cc0f2f08b0d", "html_url": "https://github.com/rust-lang/rust/commit/231bf229325c0b1382419383489f1cc0f2f08b0d"}], "stats": {"total": 12, "additions": 7, "deletions": 5}, "files": [{"sha": "8c0e591414b3e47d85d4997c3d42197df2a7ac68", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/9f84ccf088ba060b93805fc7d0a0287909beaae9/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f84ccf088ba060b93805fc7d0a0287909beaae9/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=9f84ccf088ba060b93805fc7d0a0287909beaae9", "patch": "@@ -4250,7 +4250,7 @@ impl<'a, 'crateloader: 'a> Resolver<'a, 'crateloader> {\n         let mut worklist = Vec::new();\n         let mut seen_modules = FxHashSet();\n         let not_local_module = crate_name != keywords::Crate.ident();\n-        worklist.push((start_module, Vec::new(), not_local_module));\n+        worklist.push((start_module, Vec::<ast::PathSegment>::new(), not_local_module));\n \n         while let Some((in_module,\n                         path_segments,\n@@ -4273,10 +4273,12 @@ impl<'a, 'crateloader: 'a> Resolver<'a, 'crateloader> {\n                         if self.session.rust_2018() {\n                             // crate-local absolute paths start with `crate::` in edition 2018\n                             // FIXME: may also be stabilized for Rust 2015 (Issues #45477, #44660)\n-\n-                            segms.insert(\n-                                0, ast::PathSegment::from_ident(crate_name)\n-                            );\n+                            let first_segment_ident = segms[0].ident;\n+                            if first_segment_ident.name != \"std\" {\n+                                segms.insert(\n+                                    0, ast::PathSegment::from_ident(crate_name)\n+                                );\n+                            }\n                         }\n \n                         segms.push(ast::PathSegment::from_ident(ident));"}]}