{"sha": "d5a94c4a88ab1d9696ec17964bc989bd6fa4e260", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ1YTk0YzRhODhhYjFkOTY5NmVjMTc5NjRiYzk4OWJkNmZhNGUyNjA=", "commit": {"author": {"name": "Stuart Pernsteiner", "email": "spernsteiner@mozilla.com", "date": "2014-08-11T23:54:16Z"}, "committer": {"name": "Stuart Pernsteiner", "email": "spernsteiner@mozilla.com", "date": "2014-08-12T23:13:11Z"}, "message": "Revert \"don't translate items when monomorphizing foreign-ABI functions\"\n\nThis reverts commit 0c158b4fbfcec7d6f18859661047dff2109fdfe4.", "tree": {"sha": "bbfa0a77bc055becc0458199d50e299a8b44c6e7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bbfa0a77bc055becc0458199d50e299a8b44c6e7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d5a94c4a88ab1d9696ec17964bc989bd6fa4e260", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d5a94c4a88ab1d9696ec17964bc989bd6fa4e260", "html_url": "https://github.com/rust-lang/rust/commit/d5a94c4a88ab1d9696ec17964bc989bd6fa4e260", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d5a94c4a88ab1d9696ec17964bc989bd6fa4e260/comments", "author": {"login": "spernsteiner", "id": 3031136, "node_id": "MDQ6VXNlcjMwMzExMzY=", "avatar_url": "https://avatars.githubusercontent.com/u/3031136?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spernsteiner", "html_url": "https://github.com/spernsteiner", "followers_url": "https://api.github.com/users/spernsteiner/followers", "following_url": "https://api.github.com/users/spernsteiner/following{/other_user}", "gists_url": "https://api.github.com/users/spernsteiner/gists{/gist_id}", "starred_url": "https://api.github.com/users/spernsteiner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spernsteiner/subscriptions", "organizations_url": "https://api.github.com/users/spernsteiner/orgs", "repos_url": "https://api.github.com/users/spernsteiner/repos", "events_url": "https://api.github.com/users/spernsteiner/events{/privacy}", "received_events_url": "https://api.github.com/users/spernsteiner/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spernsteiner", "id": 3031136, "node_id": "MDQ6VXNlcjMwMzExMzY=", "avatar_url": "https://avatars.githubusercontent.com/u/3031136?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spernsteiner", "html_url": "https://github.com/spernsteiner", "followers_url": "https://api.github.com/users/spernsteiner/followers", "following_url": "https://api.github.com/users/spernsteiner/following{/other_user}", "gists_url": "https://api.github.com/users/spernsteiner/gists{/gist_id}", "starred_url": "https://api.github.com/users/spernsteiner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spernsteiner/subscriptions", "organizations_url": "https://api.github.com/users/spernsteiner/orgs", "repos_url": "https://api.github.com/users/spernsteiner/repos", "events_url": "https://api.github.com/users/spernsteiner/events{/privacy}", "received_events_url": "https://api.github.com/users/spernsteiner/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4bb4a43917bf702fb2c6a614786aa1abe6c1014c", "url": "https://api.github.com/repos/rust-lang/rust/commits/4bb4a43917bf702fb2c6a614786aa1abe6c1014c", "html_url": "https://github.com/rust-lang/rust/commit/4bb4a43917bf702fb2c6a614786aa1abe6c1014c"}], "stats": {"total": 31, "additions": 9, "deletions": 22}, "files": [{"sha": "abf2fc28f2243df2b3e8675b3633ff67101657bb", "filename": "src/librustc/middle/trans/base.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d5a94c4a88ab1d9696ec17964bc989bd6fa4e260/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d5a94c4a88ab1d9696ec17964bc989bd6fa4e260/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs?ref=d5a94c4a88ab1d9696ec17964bc989bd6fa4e260", "patch": "@@ -2066,8 +2066,7 @@ pub fn trans_item(ccx: &CrateContext, item: &ast::Item) {\n                                                         llfn,\n                                                         &param_substs::empty(),\n                                                         item.id,\n-                                                        None,\n-                                                        TranslateItems);\n+                                                        None);\n             } else {\n                 trans_fn(ccx,\n                          &**decl,"}, {"sha": "93e357205484882469235feb5616aa8391fb20e5", "filename": "src/librustc/middle/trans/foreign.rs", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/d5a94c4a88ab1d9696ec17964bc989bd6fa4e260/src%2Flibrustc%2Fmiddle%2Ftrans%2Fforeign.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d5a94c4a88ab1d9696ec17964bc989bd6fa4e260/src%2Flibrustc%2Fmiddle%2Ftrans%2Fforeign.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fforeign.rs?ref=d5a94c4a88ab1d9696ec17964bc989bd6fa4e260", "patch": "@@ -577,8 +577,7 @@ pub fn trans_rust_fn_with_foreign_abi(ccx: &CrateContext,\n                                       llwrapfn: ValueRef,\n                                       param_substs: &param_substs,\n                                       id: ast::NodeId,\n-                                      hash: Option<&str>,\n-                                      handle_items: HandleItemsFlag) {\n+                                      hash: Option<&str>) {\n     let _icx = push_ctxt(\"foreign::build_foreign_fn\");\n \n     let fnty = ty::node_id_to_type(ccx.tcx(), id);\n@@ -587,8 +586,7 @@ pub fn trans_rust_fn_with_foreign_abi(ccx: &CrateContext,\n \n     unsafe { // unsafe because we call LLVM operations\n         // Build up the Rust function (`foo0` above).\n-        let llrustfn = build_rust_fn(ccx, decl, body, param_substs, attrs, id,\n-                                     hash, handle_items);\n+        let llrustfn = build_rust_fn(ccx, decl, body, param_substs, attrs, id, hash);\n \n         // Build up the foreign wrapper (`foo` above).\n         return build_wrap_fn(ccx, llrustfn, llwrapfn, &tys, mty);\n@@ -600,8 +598,7 @@ pub fn trans_rust_fn_with_foreign_abi(ccx: &CrateContext,\n                      param_substs: &param_substs,\n                      attrs: &[ast::Attribute],\n                      id: ast::NodeId,\n-                     hash: Option<&str>,\n-                     handle_items: HandleItemsFlag)\n+                     hash: Option<&str>)\n                      -> ValueRef {\n         let _icx = push_ctxt(\"foreign::foreign::build_rust_fn\");\n         let tcx = ccx.tcx();\n@@ -633,7 +630,7 @@ pub fn trans_rust_fn_with_foreign_abi(ccx: &CrateContext,\n \n         let llfn = base::decl_internal_rust_fn(ccx, t, ps.as_slice());\n         base::set_llvm_fn_attrs(attrs, llfn);\n-        base::trans_fn(ccx, decl, body, llfn, param_substs, id, [], handle_items);\n+        base::trans_fn(ccx, decl, body, llfn, param_substs, id, [], TranslateItems);\n         llfn\n     }\n "}, {"sha": "97f0f1beeace6d2b0076ad10e08bf8af32a08211", "filename": "src/librustc/middle/trans/monomorphize.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d5a94c4a88ab1d9696ec17964bc989bd6fa4e260/src%2Flibrustc%2Fmiddle%2Ftrans%2Fmonomorphize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d5a94c4a88ab1d9696ec17964bc989bd6fa4e260/src%2Flibrustc%2Fmiddle%2Ftrans%2Fmonomorphize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fmonomorphize.rs?ref=d5a94c4a88ab1d9696ec17964bc989bd6fa4e260", "patch": "@@ -164,7 +164,7 @@ pub fn monomorphic_fn(ccx: &CrateContext,\n                   if abi != abi::Rust {\n                       foreign::trans_rust_fn_with_foreign_abi(\n                           ccx, &**decl, &**body, [], d, &psubsts, fn_id.node,\n-                          Some(hash.as_slice()), IgnoreItems);\n+                          Some(hash.as_slice()));\n                   } else {\n                       trans_fn(ccx, &**decl, &**body, d, &psubsts, fn_id.node, [],\n                                IgnoreItems);"}, {"sha": "18ba80a712d11c4ebfe488165142feabbef0bd47", "filename": "src/test/run-make/issue-7349/Makefile", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d5a94c4a88ab1d9696ec17964bc989bd6fa4e260/src%2Ftest%2Frun-make%2Fissue-7349%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/d5a94c4a88ab1d9696ec17964bc989bd6fa4e260/src%2Ftest%2Frun-make%2Fissue-7349%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fissue-7349%2FMakefile?ref=d5a94c4a88ab1d9696ec17964bc989bd6fa4e260", "patch": "@@ -2,10 +2,10 @@\n \n # Test to make sure that inner functions within a polymorphic outer function\n # don't get re-translated when the outer function is monomorphized.  The test\n-# code monomorphizes the outer functions several times, but the magic constants\n-# used in the inner functions should each appear only once in the generated IR.\n+# code monomorphizes the outer function several times, but the magic constant\n+# `8675309` used in the inner function should appear only once in the generated\n+# IR.\n \n all:\n \t$(RUSTC) foo.rs --emit=ir\n \t[ \"$$(grep -c 8675309 \"$(TMPDIR)/foo.ll\")\" -eq \"1\" ]\n-\t[ \"$$(grep -c 11235813 \"$(TMPDIR)/foo.ll\")\" -eq \"1\" ]"}, {"sha": "775b7314841cc288a0928048d5efd134b48019c1", "filename": "src/test/run-make/issue-7349/foo.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/d5a94c4a88ab1d9696ec17964bc989bd6fa4e260/src%2Ftest%2Frun-make%2Fissue-7349%2Ffoo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d5a94c4a88ab1d9696ec17964bc989bd6fa4e260/src%2Ftest%2Frun-make%2Fissue-7349%2Ffoo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fissue-7349%2Ffoo.rs?ref=d5a94c4a88ab1d9696ec17964bc989bd6fa4e260", "patch": "@@ -15,16 +15,7 @@ fn outer<T>() {\n     }\n }\n \n-extern \"C\" fn outer_foreign<T>() {\n-    #[allow(dead_code)]\n-    fn inner() -> uint {\n-        11235813\n-    }\n-}\n-\n fn main() {\n     outer::<int>();\n     outer::<uint>();\n-    outer_foreign::<int>();\n-    outer_foreign::<uint>();\n }"}]}