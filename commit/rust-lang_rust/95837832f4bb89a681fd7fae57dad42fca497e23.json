{"sha": "95837832f4bb89a681fd7fae57dad42fca497e23", "node_id": "C_kwDOAAsO6NoAKDk1ODM3ODMyZjRiYjg5YTY4MWZkN2ZhZTU3ZGFkNDJmY2E0OTdlMjM", "commit": {"author": {"name": "David Lattimore", "email": "dvdlttmr@gmail.com", "date": "2022-04-30T05:12:06Z"}, "committer": {"name": "Caleb Cartwright", "email": "calebcartwright@users.noreply.github.com", "date": "2022-05-19T02:08:30Z"}, "message": "import_granularity: Don't normalize imports with comments", "tree": {"sha": "d60c8466e552310d5b4033cf18bcd1c1fe783bc3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d60c8466e552310d5b4033cf18bcd1c1fe783bc3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/95837832f4bb89a681fd7fae57dad42fca497e23", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/95837832f4bb89a681fd7fae57dad42fca497e23", "html_url": "https://github.com/rust-lang/rust/commit/95837832f4bb89a681fd7fae57dad42fca497e23", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/95837832f4bb89a681fd7fae57dad42fca497e23/comments", "author": {"login": "davidlattimore", "id": 8983542, "node_id": "MDQ6VXNlcjg5ODM1NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/8983542?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidlattimore", "html_url": "https://github.com/davidlattimore", "followers_url": "https://api.github.com/users/davidlattimore/followers", "following_url": "https://api.github.com/users/davidlattimore/following{/other_user}", "gists_url": "https://api.github.com/users/davidlattimore/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidlattimore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidlattimore/subscriptions", "organizations_url": "https://api.github.com/users/davidlattimore/orgs", "repos_url": "https://api.github.com/users/davidlattimore/repos", "events_url": "https://api.github.com/users/davidlattimore/events{/privacy}", "received_events_url": "https://api.github.com/users/davidlattimore/received_events", "type": "User", "site_admin": false}, "committer": {"login": "calebcartwright", "id": 13042488, "node_id": "MDQ6VXNlcjEzMDQyNDg4", "avatar_url": "https://avatars.githubusercontent.com/u/13042488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebcartwright", "html_url": "https://github.com/calebcartwright", "followers_url": "https://api.github.com/users/calebcartwright/followers", "following_url": "https://api.github.com/users/calebcartwright/following{/other_user}", "gists_url": "https://api.github.com/users/calebcartwright/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebcartwright/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebcartwright/subscriptions", "organizations_url": "https://api.github.com/users/calebcartwright/orgs", "repos_url": "https://api.github.com/users/calebcartwright/repos", "events_url": "https://api.github.com/users/calebcartwright/events{/privacy}", "received_events_url": "https://api.github.com/users/calebcartwright/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b08b2daeb6da2f77be50a53cdca2098fb3bb11b2", "url": "https://api.github.com/repos/rust-lang/rust/commits/b08b2daeb6da2f77be50a53cdca2098fb3bb11b2", "html_url": "https://github.com/rust-lang/rust/commit/b08b2daeb6da2f77be50a53cdca2098fb3bb11b2"}], "stats": {"total": 277, "additions": 264, "deletions": 13}, "files": [{"sha": "962f2126c66c3883581777a256cefcc0b8efd54a", "filename": "src/imports.rs", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/95837832f4bb89a681fd7fae57dad42fca497e23/src%2Fimports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95837832f4bb89a681fd7fae57dad42fca497e23/src%2Fimports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fimports.rs?ref=95837832f4bb89a681fd7fae57dad42fca497e23", "patch": "@@ -181,6 +181,14 @@ impl UseSegment {\n             }\n         })\n     }\n+\n+    fn contains_comment(&self) -> bool {\n+        if let UseSegment::List(list) = self {\n+            list.iter().any(|subtree| subtree.contains_comment())\n+        } else {\n+            false\n+        }\n+    }\n }\n \n pub(crate) fn normalize_use_trees_with_granularity(\n@@ -197,7 +205,7 @@ pub(crate) fn normalize_use_trees_with_granularity(\n \n     let mut result = Vec::with_capacity(use_trees.len());\n     for use_tree in use_trees {\n-        if use_tree.has_comment() || use_tree.attrs.is_some() {\n+        if use_tree.contains_comment() || use_tree.attrs.is_some() {\n             result.push(use_tree);\n             continue;\n         }\n@@ -556,6 +564,10 @@ impl UseTree {\n         self.list_item.as_ref().map_or(false, ListItem::has_comment)\n     }\n \n+    fn contains_comment(&self) -> bool {\n+        self.has_comment() || self.path.iter().any(|path| path.contains_comment())\n+    }\n+\n     fn same_visibility(&self, other: &UseTree) -> bool {\n         match (&self.visibility, &other.visibility) {\n             (\n@@ -582,6 +594,7 @@ impl UseTree {\n         if self.path.is_empty()\n             || other.path.is_empty()\n             || self.attrs.is_some()\n+            || self.contains_comment()\n             || !self.same_visibility(other)\n         {\n             false\n@@ -597,7 +610,7 @@ impl UseTree {\n     }\n \n     fn flatten(self, import_granularity: ImportGranularity) -> Vec<UseTree> {\n-        if self.path.is_empty() {\n+        if self.path.is_empty() || self.contains_comment() {\n             return vec![self];\n         }\n         match self.path.clone().last().unwrap() {"}, {"sha": "f6f7761e82ee79dcb55b2a23aa89253e6a468885", "filename": "tests/source/imports_granularity_crate.rs", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/95837832f4bb89a681fd7fae57dad42fca497e23/tests%2Fsource%2Fimports_granularity_crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95837832f4bb89a681fd7fae57dad42fca497e23/tests%2Fsource%2Fimports_granularity_crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fimports_granularity_crate.rs?ref=95837832f4bb89a681fd7fae57dad42fca497e23", "patch": "@@ -35,3 +35,31 @@ use j::{a::{self}};\n \n use {k::{a, b}, l::{a, b}};\n use {k::{c, d}, l::{c, d}};\n+\n+use b::{f::g, h::{i, j} /* After b::h group */};\n+use b::e;\n+use b::{/* Before b::l group */ l::{self, m, n::o, p::*}, q};\n+use b::d;\n+use b::r; // After b::r\n+use b::q::{self /* After b::q::self */};\n+use b::u::{\n+    a,\n+    b,\n+};\n+use b::t::{\n+    // Before b::t::a\n+    a,\n+    b,\n+};\n+use b::s::{\n+    a,\n+    b, // After b::s::b\n+};\n+use b::v::{\n+    // Before b::v::a\n+    a,\n+    // Before b::v::b\n+    b,\n+};\n+use b::t::{/* Before b::t::self */ self};\n+use b::c;"}, {"sha": "b82c0d33cafded60dc04b1458cff622fe3797970", "filename": "tests/source/imports_granularity_item.rs", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/95837832f4bb89a681fd7fae57dad42fca497e23/tests%2Fsource%2Fimports_granularity_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95837832f4bb89a681fd7fae57dad42fca497e23/tests%2Fsource%2Fimports_granularity_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fimports_granularity_item.rs?ref=95837832f4bb89a681fd7fae57dad42fca497e23", "patch": "@@ -4,3 +4,31 @@ use a::{b, c, d};\n use a::{f::g, h::{i, j}};\n use a::{l::{self, m, n::o, p::*}};\n use a::q::{self};\n+\n+use b::{f::g, h::{i, j} /* After b::h group */};\n+use b::e;\n+use b::{/* Before b::l group */ l::{self, m, n::o, p::*}, q};\n+use b::d;\n+use b::r; // After b::r\n+use b::q::{self /* After b::q::self */};\n+use b::u::{\n+    a,\n+    b,\n+};\n+use b::t::{\n+    // Before b::t::a\n+    a,\n+    b,\n+};\n+use b::s::{\n+    a,\n+    b, // After b::s::b\n+};\n+use b::v::{\n+    // Before b::v::a\n+    a,\n+    // Before b::v::b\n+    b,\n+};\n+use b::t::{/* Before b::t::self */ self};\n+use b::c;"}, {"sha": "c7f68cea6d47af472caacf61f70f648b0f47edc8", "filename": "tests/source/imports_granularity_module.rs", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/95837832f4bb89a681fd7fae57dad42fca497e23/tests%2Fsource%2Fimports_granularity_module.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95837832f4bb89a681fd7fae57dad42fca497e23/tests%2Fsource%2Fimports_granularity_module.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fimports_granularity_module.rs?ref=95837832f4bb89a681fd7fae57dad42fca497e23", "patch": "@@ -17,3 +17,31 @@ use bar::{\n     c::d,\n     e::f,\n };\n+\n+use b::{f::g, h::{i, j} /* After b::h group */};\n+use b::e;\n+use b::{/* Before b::l group */ l::{self, m, n::o, p::*}, q};\n+use b::d;\n+use b::r; // After b::r\n+use b::q::{self /* After b::q::self */};\n+use b::u::{\n+    a,\n+    b,\n+};\n+use b::t::{\n+    // Before b::t::a\n+    a,\n+    b,\n+};\n+use b::s::{\n+    a,\n+    b, // After b::s::b\n+};\n+use b::v::{\n+    // Before b::v::a\n+    a,\n+    // Before b::v::b\n+    b,\n+};\n+use b::t::{/* Before b::t::self */ self};\n+use b::c;"}, {"sha": "4d5a47956413229bb42ccd4eac5e2ee5a9413610", "filename": "tests/source/imports_granularity_one.rs", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/95837832f4bb89a681fd7fae57dad42fca497e23/tests%2Fsource%2Fimports_granularity_one.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95837832f4bb89a681fd7fae57dad42fca497e23/tests%2Fsource%2Fimports_granularity_one.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fimports_granularity_one.rs?ref=95837832f4bb89a681fd7fae57dad42fca497e23", "patch": "@@ -58,3 +58,31 @@ use a::{\n };\n use b as x;\n use a::ad::ada;\n+\n+use b::{f::g, h::{i, j} /* After b::h group */};\n+use b::e;\n+use b::{/* Before b::l group */ l::{self, m, n::o, p::*}, q};\n+use b::d;\n+use b::r; // After b::r\n+use b::q::{self /* After b::q::self */};\n+use b::u::{\n+    a,\n+    b,\n+};\n+use b::t::{\n+    // Before b::t::a\n+    a,\n+    b,\n+};\n+use b::s::{\n+    a,\n+    b, // After b::s::b\n+};\n+use b::v::{\n+    // Before b::v::a\n+    a,\n+    // Before b::v::b\n+    b,\n+};\n+use b::t::{/* Before b::t::self */ self};\n+use b::c;"}, {"sha": "36e01558ff041f693defdf638800a887951b344a", "filename": "tests/target/imports_granularity_crate.rs", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/95837832f4bb89a681fd7fae57dad42fca497e23/tests%2Ftarget%2Fimports_granularity_crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95837832f4bb89a681fd7fae57dad42fca497e23/tests%2Ftarget%2Fimports_granularity_crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fimports_granularity_crate.rs?ref=95837832f4bb89a681fd7fae57dad42fca497e23", "patch": "@@ -26,3 +26,34 @@ use j::a::{self};\n \n use k::{a, b, c, d};\n use l::{a, b, c, d};\n+\n+use b::q::{self /* After b::q::self */};\n+use b::r; // After b::r\n+use b::s::{\n+    a,\n+    b, // After b::s::b\n+};\n+use b::t::{/* Before b::t::self */ self};\n+use b::t::{\n+    // Before b::t::a\n+    a,\n+    b,\n+};\n+use b::v::{\n+    // Before b::v::a\n+    a,\n+    // Before b::v::b\n+    b,\n+};\n+use b::{\n+    c, d, e,\n+    u::{a, b},\n+};\n+use b::{\n+    f::g,\n+    h::{i, j}, /* After b::h group */\n+};\n+use b::{\n+    /* Before b::l group */ l::{self, m, n::o, p::*},\n+    q,\n+};"}, {"sha": "d2f5496fdacadc1a1c2d3b42e1a11e85356313be", "filename": "tests/target/imports_granularity_item.rs", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/95837832f4bb89a681fd7fae57dad42fca497e23/tests%2Ftarget%2Fimports_granularity_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95837832f4bb89a681fd7fae57dad42fca497e23/tests%2Ftarget%2Fimports_granularity_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fimports_granularity_item.rs?ref=95837832f4bb89a681fd7fae57dad42fca497e23", "patch": "@@ -11,3 +11,35 @@ use a::l::n::o;\n use a::l::p::*;\n use a::l::{self};\n use a::q::{self};\n+\n+use b::c;\n+use b::d;\n+use b::e;\n+use b::q::{self /* After b::q::self */};\n+use b::r; // After b::r\n+use b::s::{\n+    a,\n+    b, // After b::s::b\n+};\n+use b::t::{/* Before b::t::self */ self};\n+use b::t::{\n+    // Before b::t::a\n+    a,\n+    b,\n+};\n+use b::u::a;\n+use b::u::b;\n+use b::v::{\n+    // Before b::v::a\n+    a,\n+    // Before b::v::b\n+    b,\n+};\n+use b::{\n+    f::g,\n+    h::{i, j}, /* After b::h group */\n+};\n+use b::{\n+    /* Before b::l group */ l::{self, m, n::o, p::*},\n+    q,\n+};"}, {"sha": "14f341016ff9172af2d8200ac3f868dd64f83039", "filename": "tests/target/imports_granularity_module.rs", "status": "modified", "additions": 36, "deletions": 3, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/95837832f4bb89a681fd7fae57dad42fca497e23/tests%2Ftarget%2Fimports_granularity_module.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95837832f4bb89a681fd7fae57dad42fca497e23/tests%2Ftarget%2Fimports_granularity_module.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fimports_granularity_module.rs?ref=95837832f4bb89a681fd7fae57dad42fca497e23", "patch": "@@ -17,6 +17,39 @@ use foo::e;\n #[cfg(test)]\n use foo::{a::b, c::d};\n \n-use bar::a::b;\n-use bar::c::d;\n-use bar::e::f;\n+use bar::{\n+    // comment\n+    a::b,\n+    // more comment\n+    c::d,\n+    e::f,\n+};\n+\n+use b::q::{self /* After b::q::self */};\n+use b::r; // After b::r\n+use b::s::{\n+    a,\n+    b, // After b::s::b\n+};\n+use b::t::{/* Before b::t::self */ self};\n+use b::t::{\n+    // Before b::t::a\n+    a,\n+    b,\n+};\n+use b::u::{a, b};\n+use b::v::{\n+    // Before b::v::a\n+    a,\n+    // Before b::v::b\n+    b,\n+};\n+use b::{c, d, e};\n+use b::{\n+    f::g,\n+    h::{i, j}, /* After b::h group */\n+};\n+use b::{\n+    /* Before b::l group */ l::{self, m, n::o, p::*},\n+    q,\n+};"}, {"sha": "da4c6678db149bf6c2f3c5ba82c3161aaec43764", "filename": "tests/target/imports_granularity_one.rs", "status": "modified", "additions": 38, "deletions": 8, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/95837832f4bb89a681fd7fae57dad42fca497e23/tests%2Ftarget%2Fimports_granularity_one.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95837832f4bb89a681fd7fae57dad42fca497e23/tests%2Ftarget%2Fimports_granularity_one.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fimports_granularity_one.rs?ref=95837832f4bb89a681fd7fae57dad42fca497e23", "patch": "@@ -68,12 +68,42 @@ use {\n     c::{self, ca},\n };\n \n-use {\n-    a::{\n-        aa::{aaa, aab},\n-        ab,\n-        ac::aca,\n-        ad::ada,\n-    },\n-    b as x,\n+use a::{\n+    // some comment\n+    aa::{aaa, aab},\n+    ab,\n+    // another comment\n+    ac::aca,\n+};\n+use {a::ad::ada, b as x};\n+\n+use b::q::{self /* After b::q::self */};\n+use b::r; // After b::r\n+use b::s::{\n+    a,\n+    b, // After b::s::b\n+};\n+use b::t::{/* Before b::t::self */ self};\n+use b::t::{\n+    // Before b::t::a\n+    a,\n+    b,\n+};\n+use b::v::{\n+    // Before b::v::a\n+    a,\n+    // Before b::v::b\n+    b,\n+};\n+use b::{\n+    c, d, e,\n+    u::{a, b},\n+};\n+use b::{\n+    f::g,\n+    h::{i, j}, /* After b::h group */\n+};\n+use b::{\n+    /* Before b::l group */ l::{self, m, n::o, p::*},\n+    q,\n };"}]}