{"sha": "24066910ca31d5ccab6586f7d68a789103dd8ae0", "node_id": "C_kwDOAAsO6NoAKDI0MDY2OTEwY2EzMWQ1Y2NhYjY1ODZmN2Q2OGE3ODkxMDNkZDhhZTA", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2023-01-25T11:31:43Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-01-25T11:31:43Z"}, "message": "Rollup merge of #107223 - ChayimFriedman2:patch-5, r=WaffleLapkin\n\n`sub_ptr()` is equivalent to `usize::try_from().unwrap_unchecked()`, not `usize::from().unwrap_unchecked()`\n\n`usize::from()` gives a `usize`, not `Result<usize>`, and `usize: From<isize>` is not implemented.", "tree": {"sha": "332b06604e656743e0ac95117feb82aa7141d740", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/332b06604e656743e0ac95117feb82aa7141d740"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/24066910ca31d5ccab6586f7d68a789103dd8ae0", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJj0RMfCRBK7hj4Ov3rIwAA4RgIAJEX5PwY2mhZr1yZxW2uxpjV\nM+2XPB7Opg/Bf7B5ZkYr8v4Rn/24Qj3Is389fvMkTTHJg9LDCtvYlj2sDN/hrnWn\nZk6wEIbsJ6w7Pu9BbbCAOOV58mO8U6u4ErlphyX5LH/keRm6DUdGpUs+TT+CZpds\nYtoS/l7mZRF7lOojxXVIcwXSWwn1rBepF1HGc5P68vD1r6miK1G2ojwT2vXYBsxF\nioykibEvojTphxhuLW83ES3yzcj+dCal5F4rr4h+XvKvkJGeRVtbvC66zHvx+FHe\n5kKHOklW8YHyo1jHN9PUNTl06ZxwLHYjLzQBiW9SL5TuZl+90raHdWivJhGKM0I=\n=1gT/\n-----END PGP SIGNATURE-----\n", "payload": "tree 332b06604e656743e0ac95117feb82aa7141d740\nparent 4e2b5d1f549208d1fc791b816078429cff64b1b1\nparent 236f8231a64241d3fb3b9d81a8cd3175367e691d\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1674646303 +0530\ncommitter GitHub <noreply@github.com> 1674646303 +0530\n\nRollup merge of #107223 - ChayimFriedman2:patch-5, r=WaffleLapkin\n\n`sub_ptr()` is equivalent to `usize::try_from().unwrap_unchecked()`, not `usize::from().unwrap_unchecked()`\n\n`usize::from()` gives a `usize`, not `Result<usize>`, and `usize: From<isize>` is not implemented.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/24066910ca31d5ccab6586f7d68a789103dd8ae0", "html_url": "https://github.com/rust-lang/rust/commit/24066910ca31d5ccab6586f7d68a789103dd8ae0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/24066910ca31d5ccab6586f7d68a789103dd8ae0/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4e2b5d1f549208d1fc791b816078429cff64b1b1", "url": "https://api.github.com/repos/rust-lang/rust/commits/4e2b5d1f549208d1fc791b816078429cff64b1b1", "html_url": "https://github.com/rust-lang/rust/commit/4e2b5d1f549208d1fc791b816078429cff64b1b1"}, {"sha": "236f8231a64241d3fb3b9d81a8cd3175367e691d", "url": "https://api.github.com/repos/rust-lang/rust/commits/236f8231a64241d3fb3b9d81a8cd3175367e691d", "html_url": "https://github.com/rust-lang/rust/commit/236f8231a64241d3fb3b9d81a8cd3175367e691d"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "16eb726f6f61476294d3271abdbd21d4c3b00602", "filename": "library/core/src/ptr/const_ptr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24066910ca31d5ccab6586f7d68a789103dd8ae0/library%2Fcore%2Fsrc%2Fptr%2Fconst_ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24066910ca31d5ccab6586f7d68a789103dd8ae0/library%2Fcore%2Fsrc%2Fptr%2Fconst_ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fptr%2Fconst_ptr.rs?ref=24066910ca31d5ccab6586f7d68a789103dd8ae0", "patch": "@@ -731,7 +731,7 @@ impl<T: ?Sized> *const T {\n     /// This computes the same value that [`offset_from`](#method.offset_from)\n     /// would compute, but with the added precondition that the offset is\n     /// guaranteed to be non-negative.  This method is equivalent to\n-    /// `usize::from(self.offset_from(origin)).unwrap_unchecked()`,\n+    /// `usize::try_from(self.offset_from(origin)).unwrap_unchecked()`,\n     /// but it provides slightly more information to the optimizer, which can\n     /// sometimes allow it to optimize slightly better with some backends.\n     ///"}, {"sha": "0a2f63e3ec6a5fb1ecce6845f442790d1cfa7c4d", "filename": "library/core/src/ptr/mut_ptr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24066910ca31d5ccab6586f7d68a789103dd8ae0/library%2Fcore%2Fsrc%2Fptr%2Fmut_ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24066910ca31d5ccab6586f7d68a789103dd8ae0/library%2Fcore%2Fsrc%2Fptr%2Fmut_ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fptr%2Fmut_ptr.rs?ref=24066910ca31d5ccab6586f7d68a789103dd8ae0", "patch": "@@ -904,7 +904,7 @@ impl<T: ?Sized> *mut T {\n     /// This computes the same value that [`offset_from`](#method.offset_from)\n     /// would compute, but with the added precondition that the offset is\n     /// guaranteed to be non-negative.  This method is equivalent to\n-    /// `usize::from(self.offset_from(origin)).unwrap_unchecked()`,\n+    /// `usize::try_from(self.offset_from(origin)).unwrap_unchecked()`,\n     /// but it provides slightly more information to the optimizer, which can\n     /// sometimes allow it to optimize slightly better with some backends.\n     ///"}]}