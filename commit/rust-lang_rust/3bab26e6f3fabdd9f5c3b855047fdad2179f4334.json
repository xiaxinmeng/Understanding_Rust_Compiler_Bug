{"sha": "3bab26e6f3fabdd9f5c3b855047fdad2179f4334", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNiYWIyNmU2ZjNmYWJkZDlmNWMzYjg1NTA0N2ZkYWQyMTc5ZjQzMzQ=", "commit": {"author": {"name": "Jonathan Turner", "email": "jonathandturner@users.noreply.github.com", "date": "2016-08-27T19:43:31Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-08-27T19:43:31Z"}, "message": "Rollup merge of #36003 - GuillaumeGomez:err_codes, r=jonathandturner\n\nErr codes\n\nr? @jonathandturner", "tree": {"sha": "9672536f124bc50e4a1b58083f981d6012973ff2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9672536f124bc50e4a1b58083f981d6012973ff2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3bab26e6f3fabdd9f5c3b855047fdad2179f4334", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3bab26e6f3fabdd9f5c3b855047fdad2179f4334", "html_url": "https://github.com/rust-lang/rust/commit/3bab26e6f3fabdd9f5c3b855047fdad2179f4334", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3bab26e6f3fabdd9f5c3b855047fdad2179f4334/comments", "author": {"login": "jonathandturner", "id": 111457284, "node_id": "O_kgDOBqS0BA", "avatar_url": "https://avatars.githubusercontent.com/u/111457284?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonathandturner", "html_url": "https://github.com/jonathandturner", "followers_url": "https://api.github.com/users/jonathandturner/followers", "following_url": "https://api.github.com/users/jonathandturner/following{/other_user}", "gists_url": "https://api.github.com/users/jonathandturner/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonathandturner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonathandturner/subscriptions", "organizations_url": "https://api.github.com/users/jonathandturner/orgs", "repos_url": "https://api.github.com/users/jonathandturner/repos", "events_url": "https://api.github.com/users/jonathandturner/events{/privacy}", "received_events_url": "https://api.github.com/users/jonathandturner/received_events", "type": "Organization", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1dbd49fc2a36aa03aec3ea013eee04593d30f98c", "url": "https://api.github.com/repos/rust-lang/rust/commits/1dbd49fc2a36aa03aec3ea013eee04593d30f98c", "html_url": "https://github.com/rust-lang/rust/commit/1dbd49fc2a36aa03aec3ea013eee04593d30f98c"}, {"sha": "3e1b33dbdde108cadf10a35d36d14911cc3e5aea", "url": "https://api.github.com/repos/rust-lang/rust/commits/3e1b33dbdde108cadf10a35d36d14911cc3e5aea", "html_url": "https://github.com/rust-lang/rust/commit/3e1b33dbdde108cadf10a35d36d14911cc3e5aea"}], "stats": {"total": 376, "additions": 372, "deletions": 4}, "files": [{"sha": "38c60a0b7c7c1e1a38b6ba0ae9a5d1854dbd53b0", "filename": "src/librustc/diagnostics.rs", "status": "modified", "additions": 44, "deletions": 1, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/3bab26e6f3fabdd9f5c3b855047fdad2179f4334/src%2Flibrustc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bab26e6f3fabdd9f5c3b855047fdad2179f4334/src%2Flibrustc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdiagnostics.rs?ref=3bab26e6f3fabdd9f5c3b855047fdad2179f4334", "patch": "@@ -1721,6 +1721,50 @@ fn cookie() -> ! { // error: definition of an unknown language item: `cookie`\n ```\n \"##,\n \n+E0525: r##\"\n+A closure was attempted to get used whereas it doesn't implement the expected\n+trait.\n+\n+Erroneous code example:\n+\n+```compile_fail,E0525\n+struct X;\n+\n+fn foo<T>(_: T) {}\n+fn bar<T: Fn(u32)>(_: T) {}\n+\n+fn main() {\n+    let x = X;\n+    let closure = |_| foo(x); // error: expected a closure that implements\n+                              //        the `Fn` trait, but this closure only\n+                              //        implements `FnOnce`\n+    bar(closure);\n+}\n+```\n+\n+In the example above, `closure` is an `FnOnce` closure whereas the `bar`\n+function expected an `Fn` closure. In this case, it's simple to fix the issue,\n+you just have to implement `Copy` and `Clone` traits on `struct X` and it'll\n+be ok:\n+\n+```\n+#[derive(Clone, Copy)] // We implement `Clone` and `Copy` traits.\n+struct X;\n+\n+fn foo<T>(_: T) {}\n+fn bar<T: Fn(u32)>(_: T) {}\n+\n+fn main() {\n+    let x = X;\n+    let closure = |_| foo(x);\n+    bar(closure); // ok!\n+}\n+```\n+\n+To understand better how closures work in Rust, read:\n+https://doc.rust-lang.org/book/closures.html\n+\"##,\n+\n }\n \n \n@@ -1760,5 +1804,4 @@ register_diagnostics! {\n     E0490, // a value of type `..` is borrowed for too long\n     E0491, // in type `..`, reference has a longer lifetime than the data it...\n     E0495, // cannot infer an appropriate lifetime due to conflicting requirements\n-    E0525  // expected a closure that implements `..` but this closure only implements `..`\n }"}, {"sha": "b0b5947145dbf0b9deded2704c271b99b3b8c0f7", "filename": "src/librustc_lint/types.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3bab26e6f3fabdd9f5c3b855047fdad2179f4334/src%2Flibrustc_lint%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bab26e6f3fabdd9f5c3b855047fdad2179f4334/src%2Flibrustc_lint%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Ftypes.rs?ref=3bab26e6f3fabdd9f5c3b855047fdad2179f4334", "patch": "@@ -56,7 +56,6 @@ let Wrapping(x) = x;\n let y: usize = 1.wrapping_neg();\n assert_eq!(x, y);\n ```\n-\n \"##\n }\n "}, {"sha": "18d31448b1a24129920f24b1a2944efcebcf9fe3", "filename": "src/librustc_trans/diagnostics.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3bab26e6f3fabdd9f5c3b855047fdad2179f4334/src%2Flibrustc_trans%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bab26e6f3fabdd9f5c3b855047fdad2179f4334/src%2Flibrustc_trans%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fdiagnostics.rs?ref=3bab26e6f3fabdd9f5c3b855047fdad2179f4334", "patch": "@@ -23,8 +23,10 @@ extern \"platform-intrinsic\" {\n     fn simd_add<T>(a: T, b: T) -> T;\n }\n \n-unsafe { simd_add(0, 1); }\n-// error: invalid monomorphization of `simd_add` intrinsic\n+fn main() {\n+    unsafe { simd_add(0, 1); }\n+    // error: invalid monomorphization of `simd_add` intrinsic\n+}\n ```\n \n The generic type has to be a SIMD type. Example:"}, {"sha": "fce8513ca64f9a0d3836ed0bc9c699ba2490f18c", "filename": "src/test/compile-fail/E0502.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/3bab26e6f3fabdd9f5c3b855047fdad2179f4334/src%2Ftest%2Fcompile-fail%2FE0502.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bab26e6f3fabdd9f5c3b855047fdad2179f4334/src%2Ftest%2Fcompile-fail%2FE0502.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0502.rs?ref=3bab26e6f3fabdd9f5c3b855047fdad2179f4334", "patch": "@@ -0,0 +1,18 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn bar(x: &mut i32) {}\n+fn foo(a: &mut i32) {\n+    let ref y = a;\n+    bar(a); //~ ERROR E0502\n+}\n+\n+fn main() {\n+}"}, {"sha": "810eb8d9b075cf729074f75a87c7b3eb57a2268b", "filename": "src/test/compile-fail/E0503.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/3bab26e6f3fabdd9f5c3b855047fdad2179f4334/src%2Ftest%2Fcompile-fail%2FE0503.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bab26e6f3fabdd9f5c3b855047fdad2179f4334/src%2Ftest%2Fcompile-fail%2FE0503.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0503.rs?ref=3bab26e6f3fabdd9f5c3b855047fdad2179f4334", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn main() {\n+    let mut value = 3;\n+    let _borrow = &mut value;\n+    let _sum = value + 1; //~ ERROR E0503\n+}"}, {"sha": "c594f2415209d973a446ade9720453f767b647d8", "filename": "src/test/compile-fail/E0504.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/3bab26e6f3fabdd9f5c3b855047fdad2179f4334/src%2Ftest%2Fcompile-fail%2FE0504.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bab26e6f3fabdd9f5c3b855047fdad2179f4334/src%2Ftest%2Fcompile-fail%2FE0504.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0504.rs?ref=3bab26e6f3fabdd9f5c3b855047fdad2179f4334", "patch": "@@ -0,0 +1,25 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+struct FancyNum {\n+    num: u8,\n+}\n+\n+fn main() {\n+    let fancy_num = FancyNum { num: 5 };\n+    let fancy_ref = &fancy_num;\n+\n+    let x = move || {\n+        println!(\"child function: {}\", fancy_num.num); //~ ERROR E0504\n+    };\n+\n+    x();\n+    println!(\"main function: {}\", fancy_ref.num);\n+}"}, {"sha": "2d534b8a44a062e1704ed91e7565ab0bf3490f11", "filename": "src/test/compile-fail/E0505.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/3bab26e6f3fabdd9f5c3b855047fdad2179f4334/src%2Ftest%2Fcompile-fail%2FE0505.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bab26e6f3fabdd9f5c3b855047fdad2179f4334/src%2Ftest%2Fcompile-fail%2FE0505.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0505.rs?ref=3bab26e6f3fabdd9f5c3b855047fdad2179f4334", "patch": "@@ -0,0 +1,21 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+struct Value {}\n+\n+fn eat(val: Value) {}\n+\n+fn main() {\n+    let x = Value{};\n+    {\n+        let _ref_to_val: &Value = &x;\n+        eat(x); //~ ERROR E0505\n+    }\n+}"}, {"sha": "ddaffd4a2736d5b78fb77236a932f028edefd7d1", "filename": "src/test/compile-fail/E0506.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/3bab26e6f3fabdd9f5c3b855047fdad2179f4334/src%2Ftest%2Fcompile-fail%2FE0506.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bab26e6f3fabdd9f5c3b855047fdad2179f4334/src%2Ftest%2Fcompile-fail%2FE0506.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0506.rs?ref=3bab26e6f3fabdd9f5c3b855047fdad2179f4334", "patch": "@@ -0,0 +1,21 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+struct FancyNum {\n+    num: u8,\n+}\n+\n+fn main() {\n+    let mut fancy_num = FancyNum { num: 5 };\n+    let fancy_ref = &fancy_num;\n+    fancy_num = FancyNum { num: 6 }; //~ ERROR E0506\n+\n+    println!(\"Num: {}, Ref: {}\", fancy_num.num, fancy_ref.num);\n+}"}, {"sha": "87b1bf51bdbbf6a8fd0b343eb6cb96e6b8b0ba3e", "filename": "src/test/compile-fail/E0507.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/3bab26e6f3fabdd9f5c3b855047fdad2179f4334/src%2Ftest%2Fcompile-fail%2FE0507.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bab26e6f3fabdd9f5c3b855047fdad2179f4334/src%2Ftest%2Fcompile-fail%2FE0507.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0507.rs?ref=3bab26e6f3fabdd9f5c3b855047fdad2179f4334", "patch": "@@ -0,0 +1,23 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use std::cell::RefCell;\n+\n+struct TheDarkKnight;\n+\n+impl TheDarkKnight {\n+    fn nothing_is_true(self) {}\n+}\n+\n+fn main() {\n+    let x = RefCell::new(TheDarkKnight);\n+\n+    x.borrow().nothing_is_true(); //~ ERROR E0507\n+}"}, {"sha": "a72c29cc3a59e55f7f14058b630b206bf78b31bf", "filename": "src/test/compile-fail/E0508.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/3bab26e6f3fabdd9f5c3b855047fdad2179f4334/src%2Ftest%2Fcompile-fail%2FE0508.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bab26e6f3fabdd9f5c3b855047fdad2179f4334/src%2Ftest%2Fcompile-fail%2FE0508.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0508.rs?ref=3bab26e6f3fabdd9f5c3b855047fdad2179f4334", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+struct NonCopy;\n+\n+fn main() {\n+    let array = [NonCopy; 1];\n+    let _value = array[0]; //~ ERROR E0508\n+}"}, {"sha": "b92024cd6e20beab3978933bcc8a358647954711", "filename": "src/test/compile-fail/E0509.rs", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/3bab26e6f3fabdd9f5c3b855047fdad2179f4334/src%2Ftest%2Fcompile-fail%2FE0509.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bab26e6f3fabdd9f5c3b855047fdad2179f4334/src%2Ftest%2Fcompile-fail%2FE0509.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0509.rs?ref=3bab26e6f3fabdd9f5c3b855047fdad2179f4334", "patch": "@@ -0,0 +1,28 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+struct FancyNum {\n+    num: usize\n+}\n+\n+struct DropStruct {\n+    fancy: FancyNum\n+}\n+\n+impl Drop for DropStruct {\n+    fn drop(&mut self) {\n+    }\n+}\n+\n+fn main() {\n+    let drop_struct = DropStruct{fancy: FancyNum{num: 5}};\n+    let fancy_field = drop_struct.fancy; //~ ERROR E0509\n+    println!(\"Fancy: {}\", fancy_field.num);\n+}"}, {"sha": "c5c03f818253e7244dd85f57d0b868d6c2b22d7c", "filename": "src/test/compile-fail/E0511.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/3bab26e6f3fabdd9f5c3b855047fdad2179f4334/src%2Ftest%2Fcompile-fail%2FE0511.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bab26e6f3fabdd9f5c3b855047fdad2179f4334/src%2Ftest%2Fcompile-fail%2FE0511.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0511.rs?ref=3bab26e6f3fabdd9f5c3b855047fdad2179f4334", "patch": "@@ -0,0 +1,19 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(platform_intrinsics)]\n+\n+extern \"platform-intrinsic\" {\n+    fn simd_add<T>(a: T, b: T) -> T;\n+}\n+\n+fn main() {\n+    unsafe { simd_add(0, 1); } //~ ERROR E0511\n+}"}, {"sha": "25f962716413119eed2f6df8851b13a72c2fafb6", "filename": "src/test/compile-fail/E0512.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/3bab26e6f3fabdd9f5c3b855047fdad2179f4334/src%2Ftest%2Fcompile-fail%2FE0512.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bab26e6f3fabdd9f5c3b855047fdad2179f4334/src%2Ftest%2Fcompile-fail%2FE0512.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0512.rs?ref=3bab26e6f3fabdd9f5c3b855047fdad2179f4334", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn takes_u8(_: u8) {}\n+\n+fn main() {\n+    unsafe { takes_u8(::std::mem::transmute(0u16)); } //~ ERROR E0512\n+}"}, {"sha": "a5f609de8497e9d387a8745fb5dd57e5adf64f45", "filename": "src/test/compile-fail/E0516.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/3bab26e6f3fabdd9f5c3b855047fdad2179f4334/src%2Ftest%2Fcompile-fail%2FE0516.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bab26e6f3fabdd9f5c3b855047fdad2179f4334/src%2Ftest%2Fcompile-fail%2FE0516.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0516.rs?ref=3bab26e6f3fabdd9f5c3b855047fdad2179f4334", "patch": "@@ -0,0 +1,13 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn main() {\n+    let x: typeof(92) = 92; //~ ERROR E0516\n+}"}, {"sha": "be06e809915b59d48c5af7fd6fa3f13ea8c70db9", "filename": "src/test/compile-fail/E0517.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/3bab26e6f3fabdd9f5c3b855047fdad2179f4334/src%2Ftest%2Fcompile-fail%2FE0517.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bab26e6f3fabdd9f5c3b855047fdad2179f4334/src%2Ftest%2Fcompile-fail%2FE0517.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0517.rs?ref=3bab26e6f3fabdd9f5c3b855047fdad2179f4334", "patch": "@@ -0,0 +1,25 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#[repr(C)] //~ ERROR E0517\n+type Foo = u8;\n+\n+#[repr(packed)] //~ ERROR E0517\n+enum Foo2 {Bar, Baz}\n+\n+#[repr(u8)] //~ ERROR E0517\n+struct Foo3 {bar: bool, baz: bool}\n+\n+#[repr(C)] //~ ERROR E0517\n+impl Foo3 {\n+}\n+\n+fn main() {\n+}"}, {"sha": "8518bb4a6be3f7950b58a3e5f3f57e0ada51e1b3", "filename": "src/test/compile-fail/E0518.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/3bab26e6f3fabdd9f5c3b855047fdad2179f4334/src%2Ftest%2Fcompile-fail%2FE0518.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bab26e6f3fabdd9f5c3b855047fdad2179f4334/src%2Ftest%2Fcompile-fail%2FE0518.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0518.rs?ref=3bab26e6f3fabdd9f5c3b855047fdad2179f4334", "patch": "@@ -0,0 +1,19 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#[inline(always)] //~ ERROR E0518\n+struct Foo;\n+\n+#[inline(never)] //~ ERROR E0518\n+impl Foo {\n+}\n+\n+fn main() {\n+}"}, {"sha": "bb52843ee78351e8db9045af4b77515d3cd157b7", "filename": "src/test/compile-fail/E0520.rs", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/3bab26e6f3fabdd9f5c3b855047fdad2179f4334/src%2Ftest%2Fcompile-fail%2FE0520.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bab26e6f3fabdd9f5c3b855047fdad2179f4334/src%2Ftest%2Fcompile-fail%2FE0520.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0520.rs?ref=3bab26e6f3fabdd9f5c3b855047fdad2179f4334", "patch": "@@ -0,0 +1,30 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(specialization)]\n+\n+trait SpaceLlama {\n+    fn fly(&self);\n+}\n+\n+impl<T> SpaceLlama for T {\n+    default fn fly(&self) {}\n+}\n+\n+impl<T: Clone> SpaceLlama for T {\n+    fn fly(&self) {}\n+}\n+\n+impl SpaceLlama for i32 {\n+    default fn fly(&self) {} //~ ERROR E0520\n+}\n+\n+fn main() {\n+}"}, {"sha": "5103c83cafce3e29336229dcc7a22ebff0d35586", "filename": "src/test/compile-fail/E0522.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/3bab26e6f3fabdd9f5c3b855047fdad2179f4334/src%2Ftest%2Fcompile-fail%2FE0522.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bab26e6f3fabdd9f5c3b855047fdad2179f4334/src%2Ftest%2Fcompile-fail%2FE0522.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0522.rs?ref=3bab26e6f3fabdd9f5c3b855047fdad2179f4334", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(lang_items)]\n+\n+#[lang = \"cookie\"]\n+fn cookie() -> ! { //~ E0522\n+    loop {}\n+}"}, {"sha": "f03f35a57104f51488a7ebbfc9728898d4ccc3af", "filename": "src/test/compile-fail/E0527.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/3bab26e6f3fabdd9f5c3b855047fdad2179f4334/src%2Ftest%2Fcompile-fail%2FE0527.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bab26e6f3fabdd9f5c3b855047fdad2179f4334/src%2Ftest%2Fcompile-fail%2FE0527.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0527.rs?ref=3bab26e6f3fabdd9f5c3b855047fdad2179f4334", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(slice_patterns)]\n+\n+fn main() {\n+    let r = &[1, 2, 3, 4];\n+    match r {\n+        &[a, b] => { //~ ERROR E0527\n+            println!(\"a={}, b={}\", a, b);\n+        }\n+    }\n+}"}]}