{"sha": "9f6a58e86b00a8ff22f852c1162e3d3107d0755b", "node_id": "C_kwDOAAsO6NoAKDlmNmE1OGU4NmIwMGE4ZmYyMmY4NTJjMTE2MmUzZDMxMDdkMDc1NWI", "commit": {"author": {"name": "Cameron Steffen", "email": "cam.steffen94@gmail.com", "date": "2021-11-01T19:12:17Z"}, "committer": {"name": "Cameron Steffen", "email": "cam.steffen94@gmail.com", "date": "2021-11-06T19:28:08Z"}, "message": "Factor out some Vecs", "tree": {"sha": "2ce328dd5e4bd2d43560aa7ab90a8df84b3efa10", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2ce328dd5e4bd2d43560aa7ab90a8df84b3efa10"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9f6a58e86b00a8ff22f852c1162e3d3107d0755b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9f6a58e86b00a8ff22f852c1162e3d3107d0755b", "html_url": "https://github.com/rust-lang/rust/commit/9f6a58e86b00a8ff22f852c1162e3d3107d0755b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9f6a58e86b00a8ff22f852c1162e3d3107d0755b/comments", "author": {"login": "camsteffen", "id": 5565418, "node_id": "MDQ6VXNlcjU1NjU0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5565418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camsteffen", "html_url": "https://github.com/camsteffen", "followers_url": "https://api.github.com/users/camsteffen/followers", "following_url": "https://api.github.com/users/camsteffen/following{/other_user}", "gists_url": "https://api.github.com/users/camsteffen/gists{/gist_id}", "starred_url": "https://api.github.com/users/camsteffen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camsteffen/subscriptions", "organizations_url": "https://api.github.com/users/camsteffen/orgs", "repos_url": "https://api.github.com/users/camsteffen/repos", "events_url": "https://api.github.com/users/camsteffen/events{/privacy}", "received_events_url": "https://api.github.com/users/camsteffen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camsteffen", "id": 5565418, "node_id": "MDQ6VXNlcjU1NjU0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5565418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camsteffen", "html_url": "https://github.com/camsteffen", "followers_url": "https://api.github.com/users/camsteffen/followers", "following_url": "https://api.github.com/users/camsteffen/following{/other_user}", "gists_url": "https://api.github.com/users/camsteffen/gists{/gist_id}", "starred_url": "https://api.github.com/users/camsteffen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camsteffen/subscriptions", "organizations_url": "https://api.github.com/users/camsteffen/orgs", "repos_url": "https://api.github.com/users/camsteffen/repos", "events_url": "https://api.github.com/users/camsteffen/events{/privacy}", "received_events_url": "https://api.github.com/users/camsteffen/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a9a24d510698c3aafd6f7e1b974b70ac94e0a18b", "url": "https://api.github.com/repos/rust-lang/rust/commits/a9a24d510698c3aafd6f7e1b974b70ac94e0a18b", "html_url": "https://github.com/rust-lang/rust/commit/a9a24d510698c3aafd6f7e1b974b70ac94e0a18b"}], "stats": {"total": 15, "additions": 6, "deletions": 9}, "files": [{"sha": "52b00a2bc74746d9d0fddbe3ff592ebd4f690774", "filename": "compiler/rustc_builtin_macros/src/format.rs", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/9f6a58e86b00a8ff22f852c1162e3d3107d0755b/compiler%2Frustc_builtin_macros%2Fsrc%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f6a58e86b00a8ff22f852c1162e3d3107d0755b/compiler%2Frustc_builtin_macros%2Fsrc%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_builtin_macros%2Fsrc%2Fformat.rs?ref=9f6a58e86b00a8ff22f852c1162e3d3107d0755b", "patch": "@@ -760,9 +760,9 @@ impl<'a, 'b> Context<'a, 'b> {\n     /// Actually builds the expression which the format_args! block will be\n     /// expanded to.\n     fn into_expr(self) -> P<ast::Expr> {\n-        let mut locals =\n-            Vec::with_capacity((0..self.args.len()).map(|i| self.arg_unique_types[i].len()).sum());\n-        let mut counts = Vec::with_capacity(self.count_args.len());\n+        let mut args = Vec::with_capacity(\n+            self.arg_unique_types.iter().map(|v| v.len()).sum::<usize>() + self.count_args.len(),\n+        );\n         let mut heads = Vec::with_capacity(self.args.len());\n \n         // First, build up the static array which will become our precompiled\n@@ -783,7 +783,7 @@ impl<'a, 'b> Context<'a, 'b> {\n         // passed to this function.\n         for (i, e) in self.args.into_iter().enumerate() {\n             for arg_ty in self.arg_unique_types[i].iter() {\n-                locals.push(Context::format_arg(self.ecx, self.macsp, e.span, arg_ty, i));\n+                args.push(Context::format_arg(self.ecx, self.macsp, e.span, arg_ty, i));\n             }\n             heads.push(self.ecx.expr_addr_of(e.span, e));\n         }\n@@ -793,13 +793,10 @@ impl<'a, 'b> Context<'a, 'b> {\n                 _ => panic!(\"should never happen\"),\n             };\n             let span = spans_pos[index];\n-            counts.push(Context::format_arg(self.ecx, self.macsp, span, &Count, index));\n+            args.push(Context::format_arg(self.ecx, self.macsp, span, &Count, index));\n         }\n \n-        // Now create a vector containing all the arguments\n-        let args = locals.into_iter().chain(counts.into_iter());\n-\n-        let args_array = self.ecx.expr_vec(self.macsp, args.collect());\n+        let args_array = self.ecx.expr_vec(self.macsp, args);\n \n         // Constructs an AST equivalent to:\n         //"}]}