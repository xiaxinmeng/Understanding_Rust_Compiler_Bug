{"sha": "b4182d240a7a6414ffeeb255471c4698ac317013", "node_id": "C_kwDOAAsO6NoAKGI0MTgyZDI0MGE3YTY0MTRmZmVlYjI1NTQ3MWM0Njk4YWMzMTcwMTM", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2023-02-14T14:06:08Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2023-02-17T16:16:01Z"}, "message": "Don't allow evaluating queries that were fed in a previous compiler run", "tree": {"sha": "86ec68fa94ca0641727b3fc799f8f134fd8e814b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/86ec68fa94ca0641727b3fc799f8f134fd8e814b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b4182d240a7a6414ffeeb255471c4698ac317013", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b4182d240a7a6414ffeeb255471c4698ac317013", "html_url": "https://github.com/rust-lang/rust/commit/b4182d240a7a6414ffeeb255471c4698ac317013", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b4182d240a7a6414ffeeb255471c4698ac317013/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f4f5fc3e5cc70b7a43bf7b518c455f3d9bada9e3", "url": "https://api.github.com/repos/rust-lang/rust/commits/f4f5fc3e5cc70b7a43bf7b518c455f3d9bada9e3", "html_url": "https://github.com/rust-lang/rust/commit/f4f5fc3e5cc70b7a43bf7b518c455f3d9bada9e3"}], "stats": {"total": 25, "additions": 6, "deletions": 19}, "files": [{"sha": "53e04bcc132a07214f2d5403a5199598c476571a", "filename": "compiler/rustc_query_system/src/query/plumbing.rs", "status": "modified", "additions": 6, "deletions": 19, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/b4182d240a7a6414ffeeb255471c4698ac317013/compiler%2Frustc_query_system%2Fsrc%2Fquery%2Fplumbing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b4182d240a7a6414ffeeb255471c4698ac317013/compiler%2Frustc_query_system%2Fsrc%2Fquery%2Fplumbing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_query_system%2Fsrc%2Fquery%2Fplumbing.rs?ref=b4182d240a7a6414ffeeb255471c4698ac317013", "patch": "@@ -19,7 +19,6 @@ use rustc_data_structures::sync::Lock;\n use rustc_errors::{DiagnosticBuilder, ErrorGuaranteed, FatalError};\n use rustc_session::Session;\n use rustc_span::{Span, DUMMY_SP};\n-use std::borrow::Borrow;\n use std::cell::Cell;\n use std::collections::hash_map::Entry;\n use std::fmt::Debug;\n@@ -364,25 +363,13 @@ where\n             let (result, dep_node_index) =\n                 execute_job::<Q, Qcx>(qcx, key.clone(), dep_node, job.id);\n             if Q::FEEDABLE {\n-                // We may have put a value inside the cache from inside the execution.\n-                // Verify that it has the same hash as what we have now, to ensure consistency.\n+                // We should not compute queries that also got a value via feeding.\n+                // This can't happen, as query feeding adds the very dependencies to the fed query\n+                // as its feeding query had. So if the fed query is red, so is its feeder, which will\n+                // get evaluated first, and re-feed the query.\n                 if let Some((cached_result, _)) = cache.lookup(&key) {\n-                    let hasher = Q::HASH_RESULT.expect(\"feedable forbids no_hash\");\n-\n-                    let old_hash = qcx.dep_context().with_stable_hashing_context(|mut hcx| {\n-                        hasher(&mut hcx, cached_result.borrow())\n-                    });\n-                    let new_hash = qcx\n-                        .dep_context()\n-                        .with_stable_hashing_context(|mut hcx| hasher(&mut hcx, &result));\n-                    debug_assert_eq!(\n-                        old_hash,\n-                        new_hash,\n-                        \"Computed query value for {:?}({:?}) is inconsistent with fed value,\\ncomputed={:#?}\\nfed={:#?}\",\n-                        Q::DEP_KIND,\n-                        key,\n-                        result,\n-                        cached_result,\n+                    panic!(\n+                        \"fed query later has its value computed. The already cached value: {cached_result:?}\"\n                     );\n                 }\n             }"}]}