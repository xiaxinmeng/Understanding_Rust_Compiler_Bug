{"sha": "2563fbeab31def56b66cbdebd7bb0b7e5efbecb8", "node_id": "C_kwDOAAsO6NoAKDI1NjNmYmVhYjMxZGVmNTZiNjZjYmRlYmQ3YmIwYjdlNWVmYmVjYjg", "commit": {"author": {"name": "Giacomo Stevanato", "email": "giaco.stevanato@gmail.com", "date": "2023-04-07T12:54:50Z"}, "committer": {"name": "Giacomo Stevanato", "email": "giaco.stevanato@gmail.com", "date": "2023-04-07T12:57:50Z"}, "message": "Don't claim LocalKey::with prevents a reference to be sent across threads", "tree": {"sha": "f5ae897668bfa794e8a079981d55fbf5ed4eea1a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f5ae897668bfa794e8a079981d55fbf5ed4eea1a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2563fbeab31def56b66cbdebd7bb0b7e5efbecb8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2563fbeab31def56b66cbdebd7bb0b7e5efbecb8", "html_url": "https://github.com/rust-lang/rust/commit/2563fbeab31def56b66cbdebd7bb0b7e5efbecb8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2563fbeab31def56b66cbdebd7bb0b7e5efbecb8/comments", "author": {"login": "SkiFire13", "id": 9020423, "node_id": "MDQ6VXNlcjkwMjA0MjM=", "avatar_url": "https://avatars.githubusercontent.com/u/9020423?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SkiFire13", "html_url": "https://github.com/SkiFire13", "followers_url": "https://api.github.com/users/SkiFire13/followers", "following_url": "https://api.github.com/users/SkiFire13/following{/other_user}", "gists_url": "https://api.github.com/users/SkiFire13/gists{/gist_id}", "starred_url": "https://api.github.com/users/SkiFire13/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SkiFire13/subscriptions", "organizations_url": "https://api.github.com/users/SkiFire13/orgs", "repos_url": "https://api.github.com/users/SkiFire13/repos", "events_url": "https://api.github.com/users/SkiFire13/events{/privacy}", "received_events_url": "https://api.github.com/users/SkiFire13/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SkiFire13", "id": 9020423, "node_id": "MDQ6VXNlcjkwMjA0MjM=", "avatar_url": "https://avatars.githubusercontent.com/u/9020423?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SkiFire13", "html_url": "https://github.com/SkiFire13", "followers_url": "https://api.github.com/users/SkiFire13/followers", "following_url": "https://api.github.com/users/SkiFire13/following{/other_user}", "gists_url": "https://api.github.com/users/SkiFire13/gists{/gist_id}", "starred_url": "https://api.github.com/users/SkiFire13/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SkiFire13/subscriptions", "organizations_url": "https://api.github.com/users/SkiFire13/orgs", "repos_url": "https://api.github.com/users/SkiFire13/repos", "events_url": "https://api.github.com/users/SkiFire13/events{/privacy}", "received_events_url": "https://api.github.com/users/SkiFire13/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "da140814682407ee326d36f5256bc883899a7388", "url": "https://api.github.com/repos/rust-lang/rust/commits/da140814682407ee326d36f5256bc883899a7388", "html_url": "https://github.com/rust-lang/rust/commit/da140814682407ee326d36f5256bc883899a7388"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "f07d6406d4d49c8c0aee196d54f44a13c2a199b8", "filename": "library/std/src/thread/local.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2563fbeab31def56b66cbdebd7bb0b7e5efbecb8/library%2Fstd%2Fsrc%2Fthread%2Flocal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2563fbeab31def56b66cbdebd7bb0b7e5efbecb8/library%2Fstd%2Fsrc%2Fthread%2Flocal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fthread%2Flocal.rs?ref=2563fbeab31def56b66cbdebd7bb0b7e5efbecb8", "patch": "@@ -18,8 +18,8 @@ use crate::fmt;\n /// target platform. It is instantiated with the [`thread_local!`] macro and the\n /// primary method is the [`with`] method.\n ///\n-/// The [`with`] method yields a reference to the contained value which cannot be\n-/// sent across threads or escape the given closure.\n+/// The [`with`] method yields a reference to the contained value which cannot\n+/// outlive the current thread or escape the given closure.\n ///\n /// [`thread_local!`]: crate::thread_local\n ///"}]}