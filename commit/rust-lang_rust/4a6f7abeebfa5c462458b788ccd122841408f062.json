{"sha": "4a6f7abeebfa5c462458b788ccd122841408f062", "node_id": "C_kwDOAAsO6NoAKDRhNmY3YWJlZWJmYTVjNDYyNDU4Yjc4OGNjZDEyMjg0MTQwOGYwNjI", "commit": {"author": {"name": "S. van Dijk", "email": "pyhrr0@protonmail.com", "date": "2022-09-12T08:44:44Z"}, "committer": {"name": "S. van Dijk", "email": "pyhrr0@protonmail.com", "date": "2022-09-12T08:46:29Z"}, "message": "Add test.", "tree": {"sha": "99ab0c0af6bab1220d828ccdba91b749b87773d6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/99ab0c0af6bab1220d828ccdba91b749b87773d6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4a6f7abeebfa5c462458b788ccd122841408f062", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE75GMu19wBuIauncrFah8lYkbMwEFAmMe8ekACgkQFah8lYkb\nMwHWSw//ahFDBxKxVkV2OPOYSdPg578Xh06PyURpz9nyiQJOBarQ7Ecj5MEl+Zh0\nJsal+1kYoOvTx+GZeQlGfQ2u1ePlT1urNhUDk3cs7eoZISh38h6YdgLaY8vI+eN4\ngnFmyB3As7tUrsCDfE3fI/ai/lxOeYQUdD90tST/LuRvtsCiay48GR6coaO2/GNZ\nrl/s8qr9ACINbYzhVJfJ0X5y730khl1O/tjch5pDPQCoSVusi1hKXbYxDaw/8DBo\nrF6il0VCJerhc99IkBXu+1pMSod9ltQe6RWZ6I2J+P6terAFrXYIkVRx85hhX3f9\nbf5SzQloewml94YTMZq1qEiAltz0JMjskdORZ4qpzlxSCxXKJcKxu5J3dcGydK+a\n+V3Tl1AMKO5nfSNSWXooXEBxKccJpvPewM7BiTvvBFOp33m/wEPVA1QTLXe8Qo1L\nP52asiL5DJ8rHAVyvZBgNplzUjO9rRxLm7i3NyPZ2quESPinABgdJBClfMDDXC5c\nCjIYRIU+wh7BGFA9P3Jwn1+RUE2cr0QHKp8TEYRkBTrRwyqHDwUt6/hSLDqIuMMT\nVRNh3KtzxRoQd8wnoiUIjGeUua6rLOUOmsTF/nktHuNFyWCc3sM3dt4tyQ9deRaG\n3u9IeL9cQwU8nAXrQxnci/DI06OWQ8mauGa9zdqkhD3INPqMC1I=\n=jA+r\n-----END PGP SIGNATURE-----", "payload": "tree 99ab0c0af6bab1220d828ccdba91b749b87773d6\nparent 178f5029705b7713829b3435c0d933cfb6c303ed\nauthor S. van Dijk <pyhrr0@protonmail.com> 1662972284 +0200\ncommitter S. van Dijk <pyhrr0@protonmail.com> 1662972389 +0200\n\nAdd test.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4a6f7abeebfa5c462458b788ccd122841408f062", "html_url": "https://github.com/rust-lang/rust/commit/4a6f7abeebfa5c462458b788ccd122841408f062", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4a6f7abeebfa5c462458b788ccd122841408f062/comments", "author": {"login": "pyhrr0", "id": 5622198, "node_id": "MDQ6VXNlcjU2MjIxOTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5622198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pyhrr0", "html_url": "https://github.com/pyhrr0", "followers_url": "https://api.github.com/users/pyhrr0/followers", "following_url": "https://api.github.com/users/pyhrr0/following{/other_user}", "gists_url": "https://api.github.com/users/pyhrr0/gists{/gist_id}", "starred_url": "https://api.github.com/users/pyhrr0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pyhrr0/subscriptions", "organizations_url": "https://api.github.com/users/pyhrr0/orgs", "repos_url": "https://api.github.com/users/pyhrr0/repos", "events_url": "https://api.github.com/users/pyhrr0/events{/privacy}", "received_events_url": "https://api.github.com/users/pyhrr0/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pyhrr0", "id": 5622198, "node_id": "MDQ6VXNlcjU2MjIxOTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5622198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pyhrr0", "html_url": "https://github.com/pyhrr0", "followers_url": "https://api.github.com/users/pyhrr0/followers", "following_url": "https://api.github.com/users/pyhrr0/following{/other_user}", "gists_url": "https://api.github.com/users/pyhrr0/gists{/gist_id}", "starred_url": "https://api.github.com/users/pyhrr0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pyhrr0/subscriptions", "organizations_url": "https://api.github.com/users/pyhrr0/orgs", "repos_url": "https://api.github.com/users/pyhrr0/repos", "events_url": "https://api.github.com/users/pyhrr0/events{/privacy}", "received_events_url": "https://api.github.com/users/pyhrr0/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "178f5029705b7713829b3435c0d933cfb6c303ed", "url": "https://api.github.com/repos/rust-lang/rust/commits/178f5029705b7713829b3435c0d933cfb6c303ed", "html_url": "https://github.com/rust-lang/rust/commit/178f5029705b7713829b3435c0d933cfb6c303ed"}], "stats": {"total": 38, "additions": 26, "deletions": 12}, "files": [{"sha": "0e3f644ca451e923fd2171a78e6f484feccf1fb6", "filename": "tests/ui/almost_complete_letter_range.fixed", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/4a6f7abeebfa5c462458b788ccd122841408f062/tests%2Fui%2Falmost_complete_letter_range.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4a6f7abeebfa5c462458b788ccd122841408f062/tests%2Fui%2Falmost_complete_letter_range.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Falmost_complete_letter_range.fixed?ref=4a6f7abeebfa5c462458b788ccd122841408f062", "patch": "@@ -14,6 +14,12 @@ macro_rules! a {\n     };\n }\n \n+macro_rules! b {\n+    () => {\n+        let _ = 'a'..'z';\n+    };\n+}\n+\n fn main() {\n     #[rustfmt::skip]\n     {\n@@ -31,6 +37,7 @@ fn main() {\n     let _ = b'B'..b'Z';\n \n     let _ = a!()..='z';\n+    b!();\n \n     let _ = match 0u8 {\n         b'a'..=b'z' if true => 1,"}, {"sha": "60402bf39ed619787237c6747fdb12238b76d773", "filename": "tests/ui/almost_complete_letter_range.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/4a6f7abeebfa5c462458b788ccd122841408f062/tests%2Fui%2Falmost_complete_letter_range.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4a6f7abeebfa5c462458b788ccd122841408f062/tests%2Fui%2Falmost_complete_letter_range.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Falmost_complete_letter_range.rs?ref=4a6f7abeebfa5c462458b788ccd122841408f062", "patch": "@@ -14,6 +14,12 @@ macro_rules! a {\n     };\n }\n \n+macro_rules! b {\n+    () => {\n+        let _ = 'a'..'z';\n+    };\n+}\n+\n fn main() {\n     #[rustfmt::skip]\n     {\n@@ -31,6 +37,7 @@ fn main() {\n     let _ = b'B'..b'Z';\n \n     let _ = a!()..'z';\n+    b!();\n \n     let _ = match 0u8 {\n         b'a'..b'z' if true => 1,"}, {"sha": "71acae690d34f0ea029ba6f976ee3eda5a0f14f8", "filename": "tests/ui/almost_complete_letter_range.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/4a6f7abeebfa5c462458b788ccd122841408f062/tests%2Fui%2Falmost_complete_letter_range.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4a6f7abeebfa5c462458b788ccd122841408f062/tests%2Fui%2Falmost_complete_letter_range.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Falmost_complete_letter_range.stderr?ref=4a6f7abeebfa5c462458b788ccd122841408f062", "patch": "@@ -1,5 +1,5 @@\n error: almost complete ascii letter range\n-  --> $DIR/almost_complete_letter_range.rs:20:17\n+  --> $DIR/almost_complete_letter_range.rs:26:17\n    |\n LL |         let _ = ('a') ..'z';\n    |                 ^^^^^^--^^^\n@@ -9,87 +9,87 @@ LL |         let _ = ('a') ..'z';\n    = note: `-D clippy::almost-complete-letter-range` implied by `-D warnings`\n \n error: almost complete ascii letter range\n-  --> $DIR/almost_complete_letter_range.rs:21:17\n+  --> $DIR/almost_complete_letter_range.rs:27:17\n    |\n LL |         let _ = 'A' .. ('Z');\n    |                 ^^^^--^^^^^^\n    |                     |\n    |                     help: use an inclusive range: `..=`\n \n error: almost complete ascii letter range\n-  --> $DIR/almost_complete_letter_range.rs:27:13\n+  --> $DIR/almost_complete_letter_range.rs:33:13\n    |\n LL |     let _ = (b'a')..(b'z');\n    |             ^^^^^^--^^^^^^\n    |                   |\n    |                   help: use an inclusive range: `..=`\n \n error: almost complete ascii letter range\n-  --> $DIR/almost_complete_letter_range.rs:28:13\n+  --> $DIR/almost_complete_letter_range.rs:34:13\n    |\n LL |     let _ = b'A'..b'Z';\n    |             ^^^^--^^^^\n    |                 |\n    |                 help: use an inclusive range: `..=`\n \n error: almost complete ascii letter range\n-  --> $DIR/almost_complete_letter_range.rs:33:13\n+  --> $DIR/almost_complete_letter_range.rs:39:13\n    |\n LL |     let _ = a!()..'z';\n    |             ^^^^--^^^\n    |                 |\n    |                 help: use an inclusive range: `..=`\n \n error: almost complete ascii letter range\n-  --> $DIR/almost_complete_letter_range.rs:36:9\n+  --> $DIR/almost_complete_letter_range.rs:43:9\n    |\n LL |         b'a'..b'z' if true => 1,\n    |         ^^^^--^^^^\n    |             |\n    |             help: use an inclusive range: `..=`\n \n error: almost complete ascii letter range\n-  --> $DIR/almost_complete_letter_range.rs:37:9\n+  --> $DIR/almost_complete_letter_range.rs:44:9\n    |\n LL |         b'A'..b'Z' if true => 2,\n    |         ^^^^--^^^^\n    |             |\n    |             help: use an inclusive range: `..=`\n \n error: almost complete ascii letter range\n-  --> $DIR/almost_complete_letter_range.rs:44:9\n+  --> $DIR/almost_complete_letter_range.rs:51:9\n    |\n LL |         'a'..'z' if true => 1,\n    |         ^^^--^^^\n    |            |\n    |            help: use an inclusive range: `..=`\n \n error: almost complete ascii letter range\n-  --> $DIR/almost_complete_letter_range.rs:45:9\n+  --> $DIR/almost_complete_letter_range.rs:52:9\n    |\n LL |         'A'..'Z' if true => 2,\n    |         ^^^--^^^\n    |            |\n    |            help: use an inclusive range: `..=`\n \n error: almost complete ascii letter range\n-  --> $DIR/almost_complete_letter_range.rs:55:9\n+  --> $DIR/almost_complete_letter_range.rs:62:9\n    |\n LL |         'a'..'z' => 1,\n    |         ^^^--^^^\n    |            |\n    |            help: use an inclusive range: `...`\n \n error: almost complete ascii letter range\n-  --> $DIR/almost_complete_letter_range.rs:62:13\n+  --> $DIR/almost_complete_letter_range.rs:69:13\n    |\n LL |     let _ = 'a'..'z';\n    |             ^^^--^^^\n    |                |\n    |                help: use an inclusive range: `..=`\n \n error: almost complete ascii letter range\n-  --> $DIR/almost_complete_letter_range.rs:64:9\n+  --> $DIR/almost_complete_letter_range.rs:71:9\n    |\n LL |         'a'..'z' => 1,\n    |         ^^^--^^^"}]}