{"sha": "f7bdf500d93895b6c02f8ae6a73002207f85e523", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY3YmRmNTAwZDkzODk1YjZjMDJmOGFlNmE3MzAwMjIwN2Y4NWU1MjM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-12-28T17:11:47Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-12-28T17:11:47Z"}, "message": "Auto merge of #3587 - flip1995:ui-testing, r=phansch\n\nUse the -Zui-testing flag for compile-test tests\n\nLike `@petrochenkov` suggested in https://github.com/rust-lang/rust-clippy/pull/3581#discussion_r243925691", "tree": {"sha": "4eef9dcebce65fd62ea92249a1fb8ae4405f21db", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4eef9dcebce65fd62ea92249a1fb8ae4405f21db"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f7bdf500d93895b6c02f8ae6a73002207f85e523", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f7bdf500d93895b6c02f8ae6a73002207f85e523", "html_url": "https://github.com/rust-lang/rust/commit/f7bdf500d93895b6c02f8ae6a73002207f85e523", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f7bdf500d93895b6c02f8ae6a73002207f85e523/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "32b3bc231b4d650e138702ecae6432d23945536d", "url": "https://api.github.com/repos/rust-lang/rust/commits/32b3bc231b4d650e138702ecae6432d23945536d", "html_url": "https://github.com/rust-lang/rust/commit/32b3bc231b4d650e138702ecae6432d23945536d"}, {"sha": "d2dbd0b8a56e46baf2a33b6c30b1ca31e02e963f", "url": "https://api.github.com/repos/rust-lang/rust/commits/d2dbd0b8a56e46baf2a33b6c30b1ca31e02e963f", "html_url": "https://github.com/rust-lang/rust/commit/d2dbd0b8a56e46baf2a33b6c30b1ca31e02e963f"}], "stats": {"total": 9409, "additions": 4706, "deletions": 4703}, "files": [{"sha": "8b8ffe86f1985b3fb8bbe5ec6da2ada6edff0548", "filename": "tests/compile-test.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fcompile-test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fcompile-test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-test.rs?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -55,7 +55,10 @@ fn config(mode: &str, dir: PathBuf) -> compiletest::Config {\n         config.run_lib_path = rustc_lib_path();\n         config.compile_lib_path = rustc_lib_path();\n     }\n-    config.target_rustcflags = Some(format!(\"-L {0} -L {0}/deps -Dwarnings\", host_libs().display()));\n+    config.target_rustcflags = Some(format!(\n+        \"-L {0} -L {0}/deps -Dwarnings -Zui-testing\",\n+        host_libs().display()\n+    ));\n \n     config.mode = cfg_mode;\n     config.build_base = if rustc_test_suite().is_some() {"}, {"sha": "9f35b1751ac5a9a66dd513eb2a12645c7824b71c", "filename": "tests/ui-toml/toml_blacklist/conf_french_blacklisted_name.stderr", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui-toml%2Ftoml_blacklist%2Fconf_french_blacklisted_name.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui-toml%2Ftoml_blacklist%2Fconf_french_blacklisted_name.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-toml%2Ftoml_blacklist%2Fconf_french_blacklisted_name.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,45 +1,45 @@\n error: use of a blacklisted/placeholder name `toto`\n   --> $DIR/conf_french_blacklisted_name.rs:15:9\n    |\n-15 | fn test(toto: ()) {}\n+LL | fn test(toto: ()) {}\n    |         ^^^^\n    |\n    = note: `-D clippy::blacklisted-name` implied by `-D warnings`\n \n error: use of a blacklisted/placeholder name `toto`\n   --> $DIR/conf_french_blacklisted_name.rs:18:9\n    |\n-18 |     let toto = 42;\n+LL |     let toto = 42;\n    |         ^^^^\n \n error: use of a blacklisted/placeholder name `tata`\n   --> $DIR/conf_french_blacklisted_name.rs:19:9\n    |\n-19 |     let tata = 42;\n+LL |     let tata = 42;\n    |         ^^^^\n \n error: use of a blacklisted/placeholder name `titi`\n   --> $DIR/conf_french_blacklisted_name.rs:20:9\n    |\n-20 |     let titi = 42;\n+LL |     let titi = 42;\n    |         ^^^^\n \n error: use of a blacklisted/placeholder name `toto`\n   --> $DIR/conf_french_blacklisted_name.rs:26:10\n    |\n-26 |         (toto, Some(tata), titi @ Some(_)) => (),\n+LL |         (toto, Some(tata), titi @ Some(_)) => (),\n    |          ^^^^\n \n error: use of a blacklisted/placeholder name `tata`\n   --> $DIR/conf_french_blacklisted_name.rs:26:21\n    |\n-26 |         (toto, Some(tata), titi @ Some(_)) => (),\n+LL |         (toto, Some(tata), titi @ Some(_)) => (),\n    |                     ^^^^\n \n error: use of a blacklisted/placeholder name `titi`\n   --> $DIR/conf_french_blacklisted_name.rs:26:28\n    |\n-26 |         (toto, Some(tata), titi @ Some(_)) => (),\n+LL |         (toto, Some(tata), titi @ Some(_)) => (),\n    |                            ^^^^\n \n error: aborting due to 7 previous errors"}, {"sha": "49cbc0691bcf4beb81b095e837d1ba07063eef4f", "filename": "tests/ui-toml/toml_trivially_copy/test.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui-toml%2Ftoml_trivially_copy%2Ftest.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui-toml%2Ftoml_trivially_copy%2Ftest.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-toml%2Ftoml_trivially_copy%2Ftest.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,15 +1,15 @@\n error: this argument is passed by reference, but would be more efficient if passed by value\n   --> $DIR/test.rs:20:11\n    |\n-20 | fn bad(x: &u16, y: &Foo) {}\n+LL | fn bad(x: &u16, y: &Foo) {}\n    |           ^^^^ help: consider passing by value instead: `u16`\n    |\n    = note: `-D clippy::trivially-copy-pass-by-ref` implied by `-D warnings`\n \n error: this argument is passed by reference, but would be more efficient if passed by value\n   --> $DIR/test.rs:20:20\n    |\n-20 | fn bad(x: &u16, y: &Foo) {}\n+LL | fn bad(x: &u16, y: &Foo) {}\n    |                    ^^^^ help: consider passing by value instead: `Foo`\n \n error: aborting due to 2 previous errors"}, {"sha": "5c8d537b21c1ea66ebaa861e07a59309bd7fb37e", "filename": "tests/ui/absurd-extreme-comparisons.stderr", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fabsurd-extreme-comparisons.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fabsurd-extreme-comparisons.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fabsurd-extreme-comparisons.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,7 +1,7 @@\n error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false\n   --> $DIR/absurd-extreme-comparisons.rs:23:5\n    |\n-23 |     u <= 0;\n+LL |     u <= 0;\n    |     ^^^^^^\n    |\n    = note: `-D clippy::absurd-extreme-comparisons` implied by `-D warnings`\n@@ -10,135 +10,135 @@ error: this comparison involving the minimum or maximum element for this type co\n error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false\n   --> $DIR/absurd-extreme-comparisons.rs:24:5\n    |\n-24 |     u <= Z;\n+LL |     u <= Z;\n    |     ^^^^^^\n    |\n    = help: because Z is the minimum value for this type, the case where the two sides are not equal never occurs, consider using u == Z instead\n \n error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false\n   --> $DIR/absurd-extreme-comparisons.rs:25:5\n    |\n-25 |     u < Z;\n+LL |     u < Z;\n    |     ^^^^^\n    |\n    = help: because Z is the minimum value for this type, this comparison is always false\n \n error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false\n   --> $DIR/absurd-extreme-comparisons.rs:26:5\n    |\n-26 |     Z >= u;\n+LL |     Z >= u;\n    |     ^^^^^^\n    |\n    = help: because Z is the minimum value for this type, the case where the two sides are not equal never occurs, consider using Z == u instead\n \n error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false\n   --> $DIR/absurd-extreme-comparisons.rs:27:5\n    |\n-27 |     Z > u;\n+LL |     Z > u;\n    |     ^^^^^\n    |\n    = help: because Z is the minimum value for this type, this comparison is always false\n \n error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false\n   --> $DIR/absurd-extreme-comparisons.rs:28:5\n    |\n-28 |     u > std::u32::MAX;\n+LL |     u > std::u32::MAX;\n    |     ^^^^^^^^^^^^^^^^^\n    |\n    = help: because std::u32::MAX is the maximum value for this type, this comparison is always false\n \n error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false\n   --> $DIR/absurd-extreme-comparisons.rs:29:5\n    |\n-29 |     u >= std::u32::MAX;\n+LL |     u >= std::u32::MAX;\n    |     ^^^^^^^^^^^^^^^^^^\n    |\n    = help: because std::u32::MAX is the maximum value for this type, the case where the two sides are not equal never occurs, consider using u == std::u32::MAX instead\n \n error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false\n   --> $DIR/absurd-extreme-comparisons.rs:30:5\n    |\n-30 |     std::u32::MAX < u;\n+LL |     std::u32::MAX < u;\n    |     ^^^^^^^^^^^^^^^^^\n    |\n    = help: because std::u32::MAX is the maximum value for this type, this comparison is always false\n \n error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false\n   --> $DIR/absurd-extreme-comparisons.rs:31:5\n    |\n-31 |     std::u32::MAX <= u;\n+LL |     std::u32::MAX <= u;\n    |     ^^^^^^^^^^^^^^^^^^\n    |\n    = help: because std::u32::MAX is the maximum value for this type, the case where the two sides are not equal never occurs, consider using std::u32::MAX == u instead\n \n error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false\n   --> $DIR/absurd-extreme-comparisons.rs:32:5\n    |\n-32 |     1-1 > u;\n+LL |     1-1 > u;\n    |     ^^^^^^^\n    |\n    = help: because 1-1 is the minimum value for this type, this comparison is always false\n \n error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false\n   --> $DIR/absurd-extreme-comparisons.rs:33:5\n    |\n-33 |     u >= !0;\n+LL |     u >= !0;\n    |     ^^^^^^^\n    |\n    = help: because !0 is the maximum value for this type, the case where the two sides are not equal never occurs, consider using u == !0 instead\n \n error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false\n   --> $DIR/absurd-extreme-comparisons.rs:34:5\n    |\n-34 |     u <= 12 - 2*6;\n+LL |     u <= 12 - 2*6;\n    |     ^^^^^^^^^^^^^\n    |\n    = help: because 12 - 2*6 is the minimum value for this type, the case where the two sides are not equal never occurs, consider using u == 12 - 2*6 instead\n \n error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false\n   --> $DIR/absurd-extreme-comparisons.rs:36:5\n    |\n-36 |     i < -127 - 1;\n+LL |     i < -127 - 1;\n    |     ^^^^^^^^^^^^\n    |\n    = help: because -127 - 1 is the minimum value for this type, this comparison is always false\n \n error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false\n   --> $DIR/absurd-extreme-comparisons.rs:37:5\n    |\n-37 |     std::i8::MAX >= i;\n+LL |     std::i8::MAX >= i;\n    |     ^^^^^^^^^^^^^^^^^\n    |\n    = help: because std::i8::MAX is the maximum value for this type, this comparison is always true\n \n error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false\n   --> $DIR/absurd-extreme-comparisons.rs:38:5\n    |\n-38 |     3-7 < std::i32::MIN;\n+LL |     3-7 < std::i32::MIN;\n    |     ^^^^^^^^^^^^^^^^^^^\n    |\n    = help: because std::i32::MIN is the minimum value for this type, this comparison is always false\n \n error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false\n   --> $DIR/absurd-extreme-comparisons.rs:40:5\n    |\n-40 |     b >= true;\n+LL |     b >= true;\n    |     ^^^^^^^^^\n    |\n    = help: because true is the maximum value for this type, the case where the two sides are not equal never occurs, consider using b == true instead\n \n error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false\n   --> $DIR/absurd-extreme-comparisons.rs:41:5\n    |\n-41 |     false > b;\n+LL |     false > b;\n    |     ^^^^^^^^^\n    |\n    = help: because false is the minimum value for this type, this comparison is always false\n \n error: <-comparison of unit values detected. This will always be false\n   --> $DIR/absurd-extreme-comparisons.rs:44:5\n    |\n-44 |     () < {};\n+LL |     () < {};\n    |     ^^^^^^^\n    |\n    = note: #[deny(clippy::unit_cmp)] on by default"}, {"sha": "c29ea3d467af47a41949dce685810c452c9eddaf", "filename": "tests/ui/approx_const.stderr", "status": "modified", "additions": 19, "deletions": 19, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fapprox_const.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fapprox_const.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fapprox_const.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,117 +1,117 @@\n error: approximate value of `f{32, 64}::consts::E` found. Consider using it directly\n   --> $DIR/approx_const.rs:13:16\n    |\n-13 |     let my_e = 2.7182;\n+LL |     let my_e = 2.7182;\n    |                ^^^^^^\n    |\n    = note: `-D clippy::approx-constant` implied by `-D warnings`\n \n error: approximate value of `f{32, 64}::consts::E` found. Consider using it directly\n   --> $DIR/approx_const.rs:14:20\n    |\n-14 |     let almost_e = 2.718;\n+LL |     let almost_e = 2.718;\n    |                    ^^^^^\n \n error: approximate value of `f{32, 64}::consts::FRAC_1_PI` found. Consider using it directly\n   --> $DIR/approx_const.rs:17:24\n    |\n-17 |     let my_1_frac_pi = 0.3183;\n+LL |     let my_1_frac_pi = 0.3183;\n    |                        ^^^^^^\n \n error: approximate value of `f{32, 64}::consts::FRAC_1_SQRT_2` found. Consider using it directly\n   --> $DIR/approx_const.rs:20:28\n    |\n-20 |     let my_frac_1_sqrt_2 = 0.70710678;\n+LL |     let my_frac_1_sqrt_2 = 0.70710678;\n    |                            ^^^^^^^^^^\n \n error: approximate value of `f{32, 64}::consts::FRAC_1_SQRT_2` found. Consider using it directly\n   --> $DIR/approx_const.rs:21:32\n    |\n-21 |     let almost_frac_1_sqrt_2 = 0.70711;\n+LL |     let almost_frac_1_sqrt_2 = 0.70711;\n    |                                ^^^^^^^\n \n error: approximate value of `f{32, 64}::consts::FRAC_2_PI` found. Consider using it directly\n   --> $DIR/approx_const.rs:24:24\n    |\n-24 |     let my_frac_2_pi = 0.63661977;\n+LL |     let my_frac_2_pi = 0.63661977;\n    |                        ^^^^^^^^^^\n \n error: approximate value of `f{32, 64}::consts::FRAC_2_SQRT_PI` found. Consider using it directly\n   --> $DIR/approx_const.rs:27:27\n    |\n-27 |     let my_frac_2_sq_pi = 1.128379;\n+LL |     let my_frac_2_sq_pi = 1.128379;\n    |                           ^^^^^^^^\n \n error: approximate value of `f{32, 64}::consts::FRAC_PI_2` found. Consider using it directly\n   --> $DIR/approx_const.rs:30:24\n    |\n-30 |     let my_frac_pi_2 = 1.57079632679;\n+LL |     let my_frac_pi_2 = 1.57079632679;\n    |                        ^^^^^^^^^^^^^\n \n error: approximate value of `f{32, 64}::consts::FRAC_PI_3` found. Consider using it directly\n   --> $DIR/approx_const.rs:33:24\n    |\n-33 |     let my_frac_pi_3 = 1.04719755119;\n+LL |     let my_frac_pi_3 = 1.04719755119;\n    |                        ^^^^^^^^^^^^^\n \n error: approximate value of `f{32, 64}::consts::FRAC_PI_4` found. Consider using it directly\n   --> $DIR/approx_const.rs:36:24\n    |\n-36 |     let my_frac_pi_4 = 0.785398163397;\n+LL |     let my_frac_pi_4 = 0.785398163397;\n    |                        ^^^^^^^^^^^^^^\n \n error: approximate value of `f{32, 64}::consts::FRAC_PI_6` found. Consider using it directly\n   --> $DIR/approx_const.rs:39:24\n    |\n-39 |     let my_frac_pi_6 = 0.523598775598;\n+LL |     let my_frac_pi_6 = 0.523598775598;\n    |                        ^^^^^^^^^^^^^^\n \n error: approximate value of `f{32, 64}::consts::FRAC_PI_8` found. Consider using it directly\n   --> $DIR/approx_const.rs:42:24\n    |\n-42 |     let my_frac_pi_8 = 0.3926990816987;\n+LL |     let my_frac_pi_8 = 0.3926990816987;\n    |                        ^^^^^^^^^^^^^^^\n \n error: approximate value of `f{32, 64}::consts::LN_10` found. Consider using it directly\n   --> $DIR/approx_const.rs:45:20\n    |\n-45 |     let my_ln_10 = 2.302585092994046;\n+LL |     let my_ln_10 = 2.302585092994046;\n    |                    ^^^^^^^^^^^^^^^^^\n \n error: approximate value of `f{32, 64}::consts::LN_2` found. Consider using it directly\n   --> $DIR/approx_const.rs:48:19\n    |\n-48 |     let my_ln_2 = 0.6931471805599453;\n+LL |     let my_ln_2 = 0.6931471805599453;\n    |                   ^^^^^^^^^^^^^^^^^^\n \n error: approximate value of `f{32, 64}::consts::LOG10_E` found. Consider using it directly\n   --> $DIR/approx_const.rs:51:22\n    |\n-51 |     let my_log10_e = 0.4342944819032518;\n+LL |     let my_log10_e = 0.4342944819032518;\n    |                      ^^^^^^^^^^^^^^^^^^\n \n error: approximate value of `f{32, 64}::consts::LOG2_E` found. Consider using it directly\n   --> $DIR/approx_const.rs:54:21\n    |\n-54 |     let my_log2_e = 1.4426950408889634;\n+LL |     let my_log2_e = 1.4426950408889634;\n    |                     ^^^^^^^^^^^^^^^^^^\n \n error: approximate value of `f{32, 64}::consts::PI` found. Consider using it directly\n   --> $DIR/approx_const.rs:57:17\n    |\n-57 |     let my_pi = 3.1415;\n+LL |     let my_pi = 3.1415;\n    |                 ^^^^^^\n \n error: approximate value of `f{32, 64}::consts::PI` found. Consider using it directly\n   --> $DIR/approx_const.rs:58:21\n    |\n-58 |     let almost_pi = 3.14;\n+LL |     let almost_pi = 3.14;\n    |                     ^^^^\n \n error: approximate value of `f{32, 64}::consts::SQRT_2` found. Consider using it directly\n   --> $DIR/approx_const.rs:61:18\n    |\n-61 |     let my_sq2 = 1.4142;\n+LL |     let my_sq2 = 1.4142;\n    |                  ^^^^^^\n \n error: aborting due to 19 previous errors"}, {"sha": "cea9676c2b888893128220ec38bcaadb9286bd23", "filename": "tests/ui/arithmetic.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Farithmetic.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Farithmetic.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Farithmetic.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,72 +1,72 @@\n error: integer arithmetic detected\n   --> $DIR/arithmetic.rs:22:5\n    |\n-22 |     1 + i;\n+LL |     1 + i;\n    |     ^^^^^\n    |\n    = note: `-D clippy::integer-arithmetic` implied by `-D warnings`\n \n error: integer arithmetic detected\n   --> $DIR/arithmetic.rs:23:5\n    |\n-23 |     i * 2;\n+LL |     i * 2;\n    |     ^^^^^\n \n error: integer arithmetic detected\n   --> $DIR/arithmetic.rs:24:5\n    |\n-24 | /     1 %\n-25 | |     i / 2; // no error, this is part of the expression in the preceding line\n+LL | /     1 %\n+LL | |     i / 2; // no error, this is part of the expression in the preceding line\n    | |_________^\n \n error: integer arithmetic detected\n   --> $DIR/arithmetic.rs:26:5\n    |\n-26 |     i - 2 + 2 - i;\n+LL |     i - 2 + 2 - i;\n    |     ^^^^^^^^^^^^^\n \n error: integer arithmetic detected\n   --> $DIR/arithmetic.rs:27:5\n    |\n-27 |     -i;\n+LL |     -i;\n    |     ^^\n \n error: floating-point arithmetic detected\n   --> $DIR/arithmetic.rs:37:5\n    |\n-37 |     f * 2.0;\n+LL |     f * 2.0;\n    |     ^^^^^^^\n    |\n    = note: `-D clippy::float-arithmetic` implied by `-D warnings`\n \n error: floating-point arithmetic detected\n   --> $DIR/arithmetic.rs:39:5\n    |\n-39 |     1.0 + f;\n+LL |     1.0 + f;\n    |     ^^^^^^^\n \n error: floating-point arithmetic detected\n   --> $DIR/arithmetic.rs:40:5\n    |\n-40 |     f * 2.0;\n+LL |     f * 2.0;\n    |     ^^^^^^^\n \n error: floating-point arithmetic detected\n   --> $DIR/arithmetic.rs:41:5\n    |\n-41 |     f / 2.0;\n+LL |     f / 2.0;\n    |     ^^^^^^^\n \n error: floating-point arithmetic detected\n   --> $DIR/arithmetic.rs:42:5\n    |\n-42 |     f - 2.0 * 4.2;\n+LL |     f - 2.0 * 4.2;\n    |     ^^^^^^^^^^^^^\n \n error: floating-point arithmetic detected\n   --> $DIR/arithmetic.rs:43:5\n    |\n-43 |     -f;\n+LL |     -f;\n    |     ^^\n \n error: aborting due to 11 previous errors"}, {"sha": "194033981e18fb0467045e6bb19573b716a130d7", "filename": "tests/ui/assign_ops.stderr", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fassign_ops.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fassign_ops.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fassign_ops.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,57 +1,57 @@\n error: manual implementation of an assign operation\n   --> $DIR/assign_ops.rs:14:5\n    |\n-14 |     a = a + 1;\n+LL |     a = a + 1;\n    |     ^^^^^^^^^ help: replace it with: `a += 1`\n    |\n    = note: `-D clippy::assign-op-pattern` implied by `-D warnings`\n \n error: manual implementation of an assign operation\n   --> $DIR/assign_ops.rs:15:5\n    |\n-15 |     a = 1 + a;\n+LL |     a = 1 + a;\n    |     ^^^^^^^^^ help: replace it with: `a += 1`\n \n error: manual implementation of an assign operation\n   --> $DIR/assign_ops.rs:16:5\n    |\n-16 |     a = a - 1;\n+LL |     a = a - 1;\n    |     ^^^^^^^^^ help: replace it with: `a -= 1`\n \n error: manual implementation of an assign operation\n   --> $DIR/assign_ops.rs:17:5\n    |\n-17 |     a = a * 99;\n+LL |     a = a * 99;\n    |     ^^^^^^^^^^ help: replace it with: `a *= 99`\n \n error: manual implementation of an assign operation\n   --> $DIR/assign_ops.rs:18:5\n    |\n-18 |     a = 42 * a;\n+LL |     a = 42 * a;\n    |     ^^^^^^^^^^ help: replace it with: `a *= 42`\n \n error: manual implementation of an assign operation\n   --> $DIR/assign_ops.rs:19:5\n    |\n-19 |     a = a / 2;\n+LL |     a = a / 2;\n    |     ^^^^^^^^^ help: replace it with: `a /= 2`\n \n error: manual implementation of an assign operation\n   --> $DIR/assign_ops.rs:20:5\n    |\n-20 |     a = a % 5;\n+LL |     a = a % 5;\n    |     ^^^^^^^^^ help: replace it with: `a %= 5`\n \n error: manual implementation of an assign operation\n   --> $DIR/assign_ops.rs:21:5\n    |\n-21 |     a = a & 1;\n+LL |     a = a & 1;\n    |     ^^^^^^^^^ help: replace it with: `a &= 1`\n \n error: manual implementation of an assign operation\n   --> $DIR/assign_ops.rs:27:5\n    |\n-27 |     s = s + \"bla\";\n+LL |     s = s + \"bla\";\n    |     ^^^^^^^^^^^^^ help: replace it with: `s += \"bla\"`\n \n error: aborting due to 9 previous errors"}, {"sha": "99983c0d054e4fbf8a35f44928d5a1cab47f14d3", "filename": "tests/ui/assign_ops2.stderr", "status": "modified", "additions": 28, "deletions": 28, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fassign_ops2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fassign_ops2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fassign_ops2.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,135 +1,135 @@\n error: variable appears on both sides of an assignment operation\n   --> $DIR/assign_ops2.rs:14:5\n    |\n-14 |     a += a + 1;\n+LL |     a += a + 1;\n    |     ^^^^^^^^^^\n    |\n    = note: `-D clippy::misrefactored-assign-op` implied by `-D warnings`\n help: Did you mean a = a + 1 or a = a + a + 1? Consider replacing it with\n    |\n-14 |     a += 1;\n+LL |     a += 1;\n    |     ^^^^^^\n help: or\n    |\n-14 |     a = a + a + 1;\n+LL |     a = a + a + 1;\n    |     ^^^^^^^^^^^^^\n \n error: variable appears on both sides of an assignment operation\n   --> $DIR/assign_ops2.rs:15:5\n    |\n-15 |     a += 1 + a;\n+LL |     a += 1 + a;\n    |     ^^^^^^^^^^\n help: Did you mean a = a + 1 or a = a + 1 + a? Consider replacing it with\n    |\n-15 |     a += 1;\n+LL |     a += 1;\n    |     ^^^^^^\n help: or\n    |\n-15 |     a = a + 1 + a;\n+LL |     a = a + 1 + a;\n    |     ^^^^^^^^^^^^^\n \n error: variable appears on both sides of an assignment operation\n   --> $DIR/assign_ops2.rs:16:5\n    |\n-16 |     a -= a - 1;\n+LL |     a -= a - 1;\n    |     ^^^^^^^^^^\n help: Did you mean a = a - 1 or a = a - (a - 1)? Consider replacing it with\n    |\n-16 |     a -= 1;\n+LL |     a -= 1;\n    |     ^^^^^^\n help: or\n    |\n-16 |     a = a - (a - 1);\n+LL |     a = a - (a - 1);\n    |     ^^^^^^^^^^^^^^^\n \n error: variable appears on both sides of an assignment operation\n   --> $DIR/assign_ops2.rs:17:5\n    |\n-17 |     a *= a * 99;\n+LL |     a *= a * 99;\n    |     ^^^^^^^^^^^\n help: Did you mean a = a * 99 or a = a * a * 99? Consider replacing it with\n    |\n-17 |     a *= 99;\n+LL |     a *= 99;\n    |     ^^^^^^^\n help: or\n    |\n-17 |     a = a * a * 99;\n+LL |     a = a * a * 99;\n    |     ^^^^^^^^^^^^^^\n \n error: variable appears on both sides of an assignment operation\n   --> $DIR/assign_ops2.rs:18:5\n    |\n-18 |     a *= 42 * a;\n+LL |     a *= 42 * a;\n    |     ^^^^^^^^^^^\n help: Did you mean a = a * 42 or a = a * 42 * a? Consider replacing it with\n    |\n-18 |     a *= 42;\n+LL |     a *= 42;\n    |     ^^^^^^^\n help: or\n    |\n-18 |     a = a * 42 * a;\n+LL |     a = a * 42 * a;\n    |     ^^^^^^^^^^^^^^\n \n error: variable appears on both sides of an assignment operation\n   --> $DIR/assign_ops2.rs:19:5\n    |\n-19 |     a /= a / 2;\n+LL |     a /= a / 2;\n    |     ^^^^^^^^^^\n help: Did you mean a = a / 2 or a = a / (a / 2)? Consider replacing it with\n    |\n-19 |     a /= 2;\n+LL |     a /= 2;\n    |     ^^^^^^\n help: or\n    |\n-19 |     a = a / (a / 2);\n+LL |     a = a / (a / 2);\n    |     ^^^^^^^^^^^^^^^\n \n error: variable appears on both sides of an assignment operation\n   --> $DIR/assign_ops2.rs:20:5\n    |\n-20 |     a %= a % 5;\n+LL |     a %= a % 5;\n    |     ^^^^^^^^^^\n help: Did you mean a = a % 5 or a = a % (a % 5)? Consider replacing it with\n    |\n-20 |     a %= 5;\n+LL |     a %= 5;\n    |     ^^^^^^\n help: or\n    |\n-20 |     a = a % (a % 5);\n+LL |     a = a % (a % 5);\n    |     ^^^^^^^^^^^^^^^\n \n error: variable appears on both sides of an assignment operation\n   --> $DIR/assign_ops2.rs:21:5\n    |\n-21 |     a &= a & 1;\n+LL |     a &= a & 1;\n    |     ^^^^^^^^^^\n help: Did you mean a = a & 1 or a = a & a & 1? Consider replacing it with\n    |\n-21 |     a &= 1;\n+LL |     a &= 1;\n    |     ^^^^^^\n help: or\n    |\n-21 |     a = a & a & 1;\n+LL |     a = a & a & 1;\n    |     ^^^^^^^^^^^^^\n \n error: variable appears on both sides of an assignment operation\n   --> $DIR/assign_ops2.rs:22:5\n    |\n-22 |     a *= a * a;\n+LL |     a *= a * a;\n    |     ^^^^^^^^^^\n help: Did you mean a = a * a or a = a * a * a? Consider replacing it with\n    |\n-22 |     a *= a;\n+LL |     a *= a;\n    |     ^^^^^^\n help: or\n    |\n-22 |     a = a * a * a;\n+LL |     a = a * a * a;\n    |     ^^^^^^^^^^^^^\n \n error: manual implementation of an assign operation\n   --> $DIR/assign_ops2.rs:59:5\n    |\n-59 |     buf = buf + cows.clone();\n+LL |     buf = buf + cows.clone();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `buf += cows.clone()`\n    |\n    = note: `-D clippy::assign-op-pattern` implied by `-D warnings`"}, {"sha": "bc40cb8c86d22ccb44a45cb977213dfe455487fd", "filename": "tests/ui/attrs.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fattrs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fattrs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fattrs.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,23 +1,23 @@\n error: you have declared `#[inline(always)]` on `test_attr_lint`. This is usually a bad idea\n   --> $DIR/attrs.rs:12:1\n    |\n-12 | #[inline(always)]\n+LL | #[inline(always)]\n    | ^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::inline-always` implied by `-D warnings`\n \n error: the since field must contain a semver-compliant version\n   --> $DIR/attrs.rs:32:14\n    |\n-32 | #[deprecated(since = \"forever\")]\n+LL | #[deprecated(since = \"forever\")]\n    |              ^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::deprecated-semver` implied by `-D warnings`\n \n error: the since field must contain a semver-compliant version\n   --> $DIR/attrs.rs:35:14\n    |\n-35 | #[deprecated(since = \"1\")]\n+LL | #[deprecated(since = \"1\")]\n    |              ^^^^^^^^^^^\n \n error: aborting due to 3 previous errors"}, {"sha": "5fb2a01f1b2b9524296b3f5ab0e692d6108ee912", "filename": "tests/ui/author/matches.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fauthor%2Fmatches.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fauthor%2Fmatches.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fauthor%2Fmatches.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,14 +1,14 @@\n error: returning the result of a let binding from a block. Consider returning the expression directly.\n   --> $DIR/matches.rs:18:13\n    |\n-18 |             x\n+LL |             x\n    |             ^\n    |\n    = note: `-D clippy::let-and-return` implied by `-D warnings`\n note: this expression can be directly returned\n   --> $DIR/matches.rs:17:21\n    |\n-17 |             let x = 3;\n+LL |             let x = 3;\n    |                     ^\n \n error: aborting due to previous error"}, {"sha": "da883dcbfc4f1d8986dbcea78d246326e70aae8b", "filename": "tests/ui/bit_masks.stderr", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fbit_masks.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fbit_masks.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbit_masks.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,109 +1,109 @@\n error: &-masking with zero\n   --> $DIR/bit_masks.rs:23:5\n    |\n-23 |     x & 0 == 0;\n+LL |     x & 0 == 0;\n    |     ^^^^^^^^^^\n    |\n    = note: `-D clippy::bad-bit-mask` implied by `-D warnings`\n \n error: this operation will always return zero. This is likely not the intended outcome\n   --> $DIR/bit_masks.rs:23:5\n    |\n-23 |     x & 0 == 0;\n+LL |     x & 0 == 0;\n    |     ^^^^^\n    |\n    = note: #[deny(clippy::erasing_op)] on by default\n \n error: incompatible bit mask: `_ & 2` can never be equal to `1`\n   --> $DIR/bit_masks.rs:26:5\n    |\n-26 |     x & 2 == 1;\n+LL |     x & 2 == 1;\n    |     ^^^^^^^^^^\n \n error: incompatible bit mask: `_ | 3` can never be equal to `2`\n   --> $DIR/bit_masks.rs:30:5\n    |\n-30 |     x | 3 == 2;\n+LL |     x | 3 == 2;\n    |     ^^^^^^^^^^\n \n error: incompatible bit mask: `_ & 1` will never be higher than `1`\n   --> $DIR/bit_masks.rs:32:5\n    |\n-32 |     x & 1 > 1;\n+LL |     x & 1 > 1;\n    |     ^^^^^^^^^\n \n error: incompatible bit mask: `_ | 2` will always be higher than `1`\n   --> $DIR/bit_masks.rs:36:5\n    |\n-36 |     x | 2 > 1;\n+LL |     x | 2 > 1;\n    |     ^^^^^^^^^\n \n error: incompatible bit mask: `_ & 7` can never be equal to `8`\n   --> $DIR/bit_masks.rs:43:5\n    |\n-43 |     x & THREE_BITS == 8;\n+LL |     x & THREE_BITS == 8;\n    |     ^^^^^^^^^^^^^^^^^^^\n \n error: incompatible bit mask: `_ | 7` will never be lower than `7`\n   --> $DIR/bit_masks.rs:44:5\n    |\n-44 |     x | EVEN_MORE_REDIRECTION < 7;\n+LL |     x | EVEN_MORE_REDIRECTION < 7;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: &-masking with zero\n   --> $DIR/bit_masks.rs:46:5\n    |\n-46 |     0 & x == 0;\n+LL |     0 & x == 0;\n    |     ^^^^^^^^^^\n \n error: this operation will always return zero. This is likely not the intended outcome\n   --> $DIR/bit_masks.rs:46:5\n    |\n-46 |     0 & x == 0;\n+LL |     0 & x == 0;\n    |     ^^^^^\n \n error: incompatible bit mask: `_ | 2` will always be higher than `1`\n   --> $DIR/bit_masks.rs:50:5\n    |\n-50 |     1 < 2 | x;\n+LL |     1 < 2 | x;\n    |     ^^^^^^^^^\n \n error: incompatible bit mask: `_ | 3` can never be equal to `2`\n   --> $DIR/bit_masks.rs:51:5\n    |\n-51 |     2 == 3 | x;\n+LL |     2 == 3 | x;\n    |     ^^^^^^^^^^\n \n error: incompatible bit mask: `_ & 2` can never be equal to `1`\n   --> $DIR/bit_masks.rs:52:5\n    |\n-52 |     1 == x & 2;\n+LL |     1 == x & 2;\n    |     ^^^^^^^^^^\n \n error: ineffective bit mask: `x | 1` compared to `3`, is the same as x compared directly\n   --> $DIR/bit_masks.rs:63:5\n    |\n-63 |     x | 1 > 3;\n+LL |     x | 1 > 3;\n    |     ^^^^^^^^^\n    |\n    = note: `-D clippy::ineffective-bit-mask` implied by `-D warnings`\n \n error: ineffective bit mask: `x | 1` compared to `4`, is the same as x compared directly\n   --> $DIR/bit_masks.rs:64:5\n    |\n-64 |     x | 1 < 4;\n+LL |     x | 1 < 4;\n    |     ^^^^^^^^^\n \n error: ineffective bit mask: `x | 1` compared to `3`, is the same as x compared directly\n   --> $DIR/bit_masks.rs:65:5\n    |\n-65 |     x | 1 <= 3;\n+LL |     x | 1 <= 3;\n    |     ^^^^^^^^^^\n \n error: ineffective bit mask: `x | 1` compared to `8`, is the same as x compared directly\n   --> $DIR/bit_masks.rs:66:5\n    |\n-66 |     x | 1 >= 8;\n+LL |     x | 1 >= 8;\n    |     ^^^^^^^^^^\n \n error: aborting due to 17 previous errors"}, {"sha": "5b65d4ed13f779b6cb3bd9de9017513a6d288aac", "filename": "tests/ui/blacklisted_name.stderr", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fblacklisted_name.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fblacklisted_name.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fblacklisted_name.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,87 +1,87 @@\n error: use of a blacklisted/placeholder name `foo`\n   --> $DIR/blacklisted_name.rs:20:9\n    |\n-20 | fn test(foo: ()) {}\n+LL | fn test(foo: ()) {}\n    |         ^^^\n    |\n    = note: `-D clippy::blacklisted-name` implied by `-D warnings`\n \n error: use of a blacklisted/placeholder name `foo`\n   --> $DIR/blacklisted_name.rs:23:9\n    |\n-23 |     let foo = 42;\n+LL |     let foo = 42;\n    |         ^^^\n \n error: use of a blacklisted/placeholder name `bar`\n   --> $DIR/blacklisted_name.rs:24:9\n    |\n-24 |     let bar = 42;\n+LL |     let bar = 42;\n    |         ^^^\n \n error: use of a blacklisted/placeholder name `baz`\n   --> $DIR/blacklisted_name.rs:25:9\n    |\n-25 |     let baz = 42;\n+LL |     let baz = 42;\n    |         ^^^\n \n error: use of a blacklisted/placeholder name `foo`\n   --> $DIR/blacklisted_name.rs:31:10\n    |\n-31 |         (foo, Some(bar), baz @ Some(_)) => (),\n+LL |         (foo, Some(bar), baz @ Some(_)) => (),\n    |          ^^^\n \n error: use of a blacklisted/placeholder name `bar`\n   --> $DIR/blacklisted_name.rs:31:20\n    |\n-31 |         (foo, Some(bar), baz @ Some(_)) => (),\n+LL |         (foo, Some(bar), baz @ Some(_)) => (),\n    |                    ^^^\n \n error: use of a blacklisted/placeholder name `baz`\n   --> $DIR/blacklisted_name.rs:31:26\n    |\n-31 |         (foo, Some(bar), baz @ Some(_)) => (),\n+LL |         (foo, Some(bar), baz @ Some(_)) => (),\n    |                          ^^^\n \n error: use of a blacklisted/placeholder name `foo`\n   --> $DIR/blacklisted_name.rs:36:19\n    |\n-36 | fn issue_1647(mut foo: u8) {\n+LL | fn issue_1647(mut foo: u8) {\n    |                   ^^^\n \n error: use of a blacklisted/placeholder name `bar`\n   --> $DIR/blacklisted_name.rs:37:13\n    |\n-37 |     let mut bar = 0;\n+LL |     let mut bar = 0;\n    |             ^^^\n \n error: use of a blacklisted/placeholder name `baz`\n   --> $DIR/blacklisted_name.rs:38:21\n    |\n-38 |     if let Some(mut baz) = Some(42) {}\n+LL |     if let Some(mut baz) = Some(42) {}\n    |                     ^^^\n \n error: use of a blacklisted/placeholder name `bar`\n   --> $DIR/blacklisted_name.rs:42:13\n    |\n-42 |     let ref bar = 0;\n+LL |     let ref bar = 0;\n    |             ^^^\n \n error: use of a blacklisted/placeholder name `baz`\n   --> $DIR/blacklisted_name.rs:43:21\n    |\n-43 |     if let Some(ref baz) = Some(42) {}\n+LL |     if let Some(ref baz) = Some(42) {}\n    |                     ^^^\n \n error: use of a blacklisted/placeholder name `bar`\n   --> $DIR/blacklisted_name.rs:47:17\n    |\n-47 |     let ref mut bar = 0;\n+LL |     let ref mut bar = 0;\n    |                 ^^^\n \n error: use of a blacklisted/placeholder name `baz`\n   --> $DIR/blacklisted_name.rs:48:25\n    |\n-48 |     if let Some(ref mut baz) = Some(42) {}\n+LL |     if let Some(ref mut baz) = Some(42) {}\n    |                         ^^^\n \n error: aborting due to 14 previous errors"}, {"sha": "522c7dc779e4e2ba0b1f4192b76428156a122f0b", "filename": "tests/ui/block_in_if_condition.stderr", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fblock_in_if_condition.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fblock_in_if_condition.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fblock_in_if_condition.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,11 +1,11 @@\n error: in an 'if' condition, avoid complex blocks or closures with blocks; instead, move the block or closure higher and bind it with a 'let'\n   --> $DIR/block_in_if_condition.rs:35:8\n    |\n-35 |       if {\n+LL |       if {\n    |  ________^\n-36 | |         let x = 3;\n-37 | |         x == 3\n-38 | |     } {\n+LL | |         let x = 3;\n+LL | |         x == 3\n+LL | |     } {\n    | |_____^\n    |\n    = note: `-D clippy::block-in-if-condition-stmt` implied by `-D warnings`\n@@ -21,7 +21,7 @@ error: in an 'if' condition, avoid complex blocks or closures with blocks; inste\n error: omit braces around single expression condition\n   --> $DIR/block_in_if_condition.rs:46:8\n    |\n-46 |     if { true } {\n+LL |     if { true } {\n    |        ^^^^^^^^\n    |\n    = note: `-D clippy::block-in-if-condition-expr` implied by `-D warnings`\n@@ -33,27 +33,27 @@ error: omit braces around single expression condition\n error: in an 'if' condition, avoid complex blocks or closures with blocks; instead, move the block or closure higher and bind it with a 'let'\n   --> $DIR/block_in_if_condition.rs:66:17\n    |\n-66 |               |x| {\n+LL |               |x| {\n    |  _________________^\n-67 | |                 let target = 3;\n-68 | |                 x == target\n-69 | |             },\n+LL | |                 let target = 3;\n+LL | |                 x == target\n+LL | |             },\n    | |_____________^\n \n error: in an 'if' condition, avoid complex blocks or closures with blocks; instead, move the block or closure higher and bind it with a 'let'\n   --> $DIR/block_in_if_condition.rs:75:13\n    |\n-75 |           |x| {\n+LL |           |x| {\n    |  _____________^\n-76 | |             let target = 3;\n-77 | |             x == target\n-78 | |         },\n+LL | |             let target = 3;\n+LL | |             x == target\n+LL | |         },\n    | |_________^\n \n error: this boolean expression can be simplified\n   --> $DIR/block_in_if_condition.rs:85:8\n    |\n-85 |     if true && x == 3 {\n+LL |     if true && x == 3 {\n    |        ^^^^^^^^^^^^^^ help: try: `x == 3`\n    |\n    = note: `-D clippy::nonminimal-bool` implied by `-D warnings`"}, {"sha": "7bd48f2e3dccf07f77da26f27b3d399d8be3808e", "filename": "tests/ui/bool_comparison.stderr", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fbool_comparison.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fbool_comparison.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbool_comparison.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,87 +1,87 @@\n error: equality checks against true are unnecessary\n   --> $DIR/bool_comparison.rs:13:8\n    |\n-13 |     if x == true {\n+LL |     if x == true {\n    |        ^^^^^^^^^ help: try simplifying it as shown: `x`\n    |\n    = note: `-D clippy::bool-comparison` implied by `-D warnings`\n \n error: equality checks against false can be replaced by a negation\n   --> $DIR/bool_comparison.rs:18:8\n    |\n-18 |     if x == false {\n+LL |     if x == false {\n    |        ^^^^^^^^^^ help: try simplifying it as shown: `!x`\n \n error: equality checks against true are unnecessary\n   --> $DIR/bool_comparison.rs:23:8\n    |\n-23 |     if true == x {\n+LL |     if true == x {\n    |        ^^^^^^^^^ help: try simplifying it as shown: `x`\n \n error: equality checks against false can be replaced by a negation\n   --> $DIR/bool_comparison.rs:28:8\n    |\n-28 |     if false == x {\n+LL |     if false == x {\n    |        ^^^^^^^^^^ help: try simplifying it as shown: `!x`\n \n error: inequality checks against true can be replaced by a negation\n   --> $DIR/bool_comparison.rs:33:8\n    |\n-33 |     if x != true {\n+LL |     if x != true {\n    |        ^^^^^^^^^ help: try simplifying it as shown: `!x`\n \n error: inequality checks against false are unnecessary\n   --> $DIR/bool_comparison.rs:38:8\n    |\n-38 |     if x != false {\n+LL |     if x != false {\n    |        ^^^^^^^^^^ help: try simplifying it as shown: `x`\n \n error: inequality checks against true can be replaced by a negation\n   --> $DIR/bool_comparison.rs:43:8\n    |\n-43 |     if true != x {\n+LL |     if true != x {\n    |        ^^^^^^^^^ help: try simplifying it as shown: `!x`\n \n error: inequality checks against false are unnecessary\n   --> $DIR/bool_comparison.rs:48:8\n    |\n-48 |     if false != x {\n+LL |     if false != x {\n    |        ^^^^^^^^^^ help: try simplifying it as shown: `x`\n \n error: less than comparison against true can be replaced by a negation\n   --> $DIR/bool_comparison.rs:53:8\n    |\n-53 |     if x < true {\n+LL |     if x < true {\n    |        ^^^^^^^^ help: try simplifying it as shown: `!x`\n \n error: greater than checks against false are unnecessary\n   --> $DIR/bool_comparison.rs:58:8\n    |\n-58 |     if false < x {\n+LL |     if false < x {\n    |        ^^^^^^^^^ help: try simplifying it as shown: `x`\n \n error: greater than checks against false are unnecessary\n   --> $DIR/bool_comparison.rs:63:8\n    |\n-63 |     if x > false {\n+LL |     if x > false {\n    |        ^^^^^^^^^ help: try simplifying it as shown: `x`\n \n error: less than comparison against true can be replaced by a negation\n   --> $DIR/bool_comparison.rs:68:8\n    |\n-68 |     if true > x {\n+LL |     if true > x {\n    |        ^^^^^^^^ help: try simplifying it as shown: `!x`\n \n error: order comparisons between booleans can be simplified\n   --> $DIR/bool_comparison.rs:74:8\n    |\n-74 |     if x < y {\n+LL |     if x < y {\n    |        ^^^^^ help: try simplifying it as shown: `!x & y`\n \n error: order comparisons between booleans can be simplified\n   --> $DIR/bool_comparison.rs:79:8\n    |\n-79 |     if x > y {\n+LL |     if x > y {\n    |        ^^^^^ help: try simplifying it as shown: `x & !y`\n \n error: aborting due to 14 previous errors"}, {"sha": "c9446f5e4bcf80a26ee116a5d8d65a07bdc71da1", "filename": "tests/ui/booleans.stderr", "status": "modified", "additions": 48, "deletions": 48, "changes": 96, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fbooleans.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fbooleans.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbooleans.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,203 +1,203 @@\n error: this boolean expression contains a logic bug\n   --> $DIR/booleans.rs:19:13\n    |\n-19 |     let _ = a && b || a;\n+LL |     let _ = a && b || a;\n    |             ^^^^^^^^^^^ help: it would look like the following: `a`\n    |\n    = note: `-D clippy::logic-bug` implied by `-D warnings`\n help: this expression can be optimized out by applying boolean operations to the outer expression\n   --> $DIR/booleans.rs:19:18\n    |\n-19 |     let _ = a && b || a;\n+LL |     let _ = a && b || a;\n    |                  ^\n \n error: this boolean expression can be simplified\n   --> $DIR/booleans.rs:21:13\n    |\n-21 |     let _ = !true;\n+LL |     let _ = !true;\n    |             ^^^^^ help: try: `false`\n    |\n    = note: `-D clippy::nonminimal-bool` implied by `-D warnings`\n \n error: this boolean expression can be simplified\n   --> $DIR/booleans.rs:22:13\n    |\n-22 |     let _ = !false;\n+LL |     let _ = !false;\n    |             ^^^^^^ help: try: `true`\n \n error: this boolean expression can be simplified\n   --> $DIR/booleans.rs:23:13\n    |\n-23 |     let _ = !!a;\n+LL |     let _ = !!a;\n    |             ^^^ help: try: `a`\n \n error: this boolean expression contains a logic bug\n   --> $DIR/booleans.rs:24:13\n    |\n-24 |     let _ = false && a;\n+LL |     let _ = false && a;\n    |             ^^^^^^^^^^ help: it would look like the following: `false`\n    |\n help: this expression can be optimized out by applying boolean operations to the outer expression\n   --> $DIR/booleans.rs:24:22\n    |\n-24 |     let _ = false && a;\n+LL |     let _ = false && a;\n    |                      ^\n \n error: this boolean expression can be simplified\n   --> $DIR/booleans.rs:25:13\n    |\n-25 |     let _ = false || a;\n+LL |     let _ = false || a;\n    |             ^^^^^^^^^^ help: try: `a`\n \n error: this boolean expression can be simplified\n   --> $DIR/booleans.rs:30:13\n    |\n-30 |     let _ = !(!a && b);\n+LL |     let _ = !(!a && b);\n    |             ^^^^^^^^^^ help: try: `!b || a`\n \n error: this boolean expression contains a logic bug\n   --> $DIR/booleans.rs:40:13\n    |\n-40 |     let _ = a == b && a != b;\n+LL |     let _ = a == b && a != b;\n    |             ^^^^^^^^^^^^^^^^ help: it would look like the following: `false`\n    |\n help: this expression can be optimized out by applying boolean operations to the outer expression\n   --> $DIR/booleans.rs:40:13\n    |\n-40 |     let _ = a == b && a != b;\n+LL |     let _ = a == b && a != b;\n    |             ^^^^^^\n \n error: this boolean expression can be simplified\n   --> $DIR/booleans.rs:41:13\n    |\n-41 |     let _ = a == b && c == 5 && a == b;\n+LL |     let _ = a == b && c == 5 && a == b;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^\n help: try\n    |\n-41 |     let _ = a == b && c == 5;\n+LL |     let _ = a == b && c == 5;\n    |             ^^^^^^^^^^^^^^^^\n-41 |     let _ = !(c != 5 || a != b);\n+LL |     let _ = !(c != 5 || a != b);\n    |             ^^^^^^^^^^^^^^^^^^^\n \n error: this boolean expression can be simplified\n   --> $DIR/booleans.rs:42:13\n    |\n-42 |     let _ = a == b && c == 5 && b == a;\n+LL |     let _ = a == b && c == 5 && b == a;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^\n help: try\n    |\n-42 |     let _ = a == b && c == 5;\n+LL |     let _ = a == b && c == 5;\n    |             ^^^^^^^^^^^^^^^^\n-42 |     let _ = !(c != 5 || a != b);\n+LL |     let _ = !(c != 5 || a != b);\n    |             ^^^^^^^^^^^^^^^^^^^\n \n error: this boolean expression contains a logic bug\n   --> $DIR/booleans.rs:43:13\n    |\n-43 |     let _ = a < b && a >= b;\n+LL |     let _ = a < b && a >= b;\n    |             ^^^^^^^^^^^^^^^ help: it would look like the following: `false`\n    |\n help: this expression can be optimized out by applying boolean operations to the outer expression\n   --> $DIR/booleans.rs:43:13\n    |\n-43 |     let _ = a < b && a >= b;\n+LL |     let _ = a < b && a >= b;\n    |             ^^^^^\n \n error: this boolean expression contains a logic bug\n   --> $DIR/booleans.rs:44:13\n    |\n-44 |     let _ = a > b && a <= b;\n+LL |     let _ = a > b && a <= b;\n    |             ^^^^^^^^^^^^^^^ help: it would look like the following: `false`\n    |\n help: this expression can be optimized out by applying boolean operations to the outer expression\n   --> $DIR/booleans.rs:44:13\n    |\n-44 |     let _ = a > b && a <= b;\n+LL |     let _ = a > b && a <= b;\n    |             ^^^^^\n \n error: this boolean expression can be simplified\n   --> $DIR/booleans.rs:46:13\n    |\n-46 |     let _ = a != b || !(a != b || c == d);\n+LL |     let _ = a != b || !(a != b || c == d);\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n help: try\n    |\n-46 |     let _ = c != d || a != b;\n+LL |     let _ = c != d || a != b;\n    |             ^^^^^^^^^^^^^^^^\n-46 |     let _ = !(a == b && c == d);\n+LL |     let _ = !(a == b && c == d);\n    |             ^^^^^^^^^^^^^^^^^^^\n \n error: this boolean expression can be simplified\n   --> $DIR/booleans.rs:54:13\n    |\n-54 |     let _ = !a.is_some();\n+LL |     let _ = !a.is_some();\n    |             ^^^^^^^^^^^^ help: try: `a.is_none()`\n \n error: this boolean expression can be simplified\n   --> $DIR/booleans.rs:56:13\n    |\n-56 |     let _ = !a.is_none();\n+LL |     let _ = !a.is_none();\n    |             ^^^^^^^^^^^^ help: try: `a.is_some()`\n \n error: this boolean expression can be simplified\n   --> $DIR/booleans.rs:58:13\n    |\n-58 |     let _ = !b.is_err();\n+LL |     let _ = !b.is_err();\n    |             ^^^^^^^^^^^ help: try: `b.is_ok()`\n \n error: this boolean expression can be simplified\n   --> $DIR/booleans.rs:60:13\n    |\n-60 |     let _ = !b.is_ok();\n+LL |     let _ = !b.is_ok();\n    |             ^^^^^^^^^^ help: try: `b.is_err()`\n \n error: this boolean expression can be simplified\n   --> $DIR/booleans.rs:62:13\n    |\n-62 |     let _ = !(a.is_some() && !c);\n+LL |     let _ = !(a.is_some() && !c);\n    |             ^^^^^^^^^^^^^^^^^^^^ help: try: `c || a.is_none()`\n \n error: this boolean expression can be simplified\n   --> $DIR/booleans.rs:63:13\n    |\n-63 |     let _ = !(!c ^ c) || !a.is_some();\n+LL |     let _ = !(!c ^ c) || !a.is_some();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `!(!c ^ c) || a.is_none()`\n \n error: this boolean expression can be simplified\n   --> $DIR/booleans.rs:64:13\n    |\n-64 |     let _ = (!c ^ c) || !a.is_some();\n+LL |     let _ = (!c ^ c) || !a.is_some();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `(!c ^ c) || a.is_none()`\n \n error: this boolean expression can be simplified\n   --> $DIR/booleans.rs:65:13\n    |\n-65 |     let _ = !c ^ c || !a.is_some();\n+LL |     let _ = !c ^ c || !a.is_some();\n    |             ^^^^^^^^^^^^^^^^^^^^^^ help: try: `!c ^ c || a.is_none()`\n \n error: this boolean expression can be simplified\n-   --> $DIR/booleans.rs:137:8\n-    |\n-137 |     if !res.is_ok() {}\n-    |        ^^^^^^^^^^^^ help: try: `res.is_err()`\n+  --> $DIR/booleans.rs:137:8\n+   |\n+LL |     if !res.is_ok() {}\n+   |        ^^^^^^^^^^^^ help: try: `res.is_err()`\n \n error: this boolean expression can be simplified\n-   --> $DIR/booleans.rs:138:8\n-    |\n-138 |     if !res.is_err() {}\n-    |        ^^^^^^^^^^^^^ help: try: `res.is_ok()`\n+  --> $DIR/booleans.rs:138:8\n+   |\n+LL |     if !res.is_err() {}\n+   |        ^^^^^^^^^^^^^ help: try: `res.is_ok()`\n \n error: this boolean expression can be simplified\n-   --> $DIR/booleans.rs:141:8\n-    |\n-141 |     if !res.is_some() {}\n-    |        ^^^^^^^^^^^^^^ help: try: `res.is_none()`\n+  --> $DIR/booleans.rs:141:8\n+   |\n+LL |     if !res.is_some() {}\n+   |        ^^^^^^^^^^^^^^ help: try: `res.is_none()`\n \n error: this boolean expression can be simplified\n-   --> $DIR/booleans.rs:142:8\n-    |\n-142 |     if !res.is_none() {}\n-    |        ^^^^^^^^^^^^^^ help: try: `res.is_some()`\n+  --> $DIR/booleans.rs:142:8\n+   |\n+LL |     if !res.is_none() {}\n+   |        ^^^^^^^^^^^^^^ help: try: `res.is_some()`\n \n error: aborting due to 25 previous errors\n "}, {"sha": "33bd50286a5f242e7553073482e90a58e2d66091", "filename": "tests/ui/borrow_box.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fborrow_box.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fborrow_box.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fborrow_box.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,31 +1,31 @@\n error: you seem to be trying to use `&Box<T>`. Consider using just `&T`\n   --> $DIR/borrow_box.rs:15:19\n    |\n-15 | pub fn test1(foo: &mut Box<bool>) {\n+LL | pub fn test1(foo: &mut Box<bool>) {\n    |                   ^^^^^^^^^^^^^^ help: try: `&mut bool`\n    |\n note: lint level defined here\n   --> $DIR/borrow_box.rs:10:9\n    |\n-10 | #![deny(clippy::borrowed_box)]\n+LL | #![deny(clippy::borrowed_box)]\n    |         ^^^^^^^^^^^^^^^^^^^^\n \n error: you seem to be trying to use `&Box<T>`. Consider using just `&T`\n   --> $DIR/borrow_box.rs:20:14\n    |\n-20 |     let foo: &Box<bool>;\n+LL |     let foo: &Box<bool>;\n    |              ^^^^^^^^^^ help: try: `&bool`\n \n error: you seem to be trying to use `&Box<T>`. Consider using just `&T`\n   --> $DIR/borrow_box.rs:24:10\n    |\n-24 |     foo: &'a Box<bool>,\n+LL |     foo: &'a Box<bool>,\n    |          ^^^^^^^^^^^^^ help: try: `&'a bool`\n \n error: you seem to be trying to use `&Box<T>`. Consider using just `&T`\n   --> $DIR/borrow_box.rs:28:17\n    |\n-28 |     fn test4(a: &Box<bool>);\n+LL |     fn test4(a: &Box<bool>);\n    |                 ^^^^^^^^^^ help: try: `&bool`\n \n error: aborting due to 4 previous errors"}, {"sha": "8b5fc24a371be4418f3f3672232c8a51bc2abe29", "filename": "tests/ui/box_vec.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fbox_vec.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fbox_vec.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbox_vec.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,7 +1,7 @@\n error: you seem to be trying to use `Box<Vec<T>>`. Consider using just `Vec<T>`\n   --> $DIR/box_vec.rs:23:18\n    |\n-23 | pub fn test(foo: Box<Vec<bool>>) {\n+LL | pub fn test(foo: Box<Vec<bool>>) {\n    |                  ^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::box-vec` implied by `-D warnings`"}, {"sha": "9bfed9dbba87465c8f05385e5ed22008a66651d1", "filename": "tests/ui/builtin-type-shadow.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fbuiltin-type-shadow.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fbuiltin-type-shadow.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbuiltin-type-shadow.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,17 +1,17 @@\n error: This generic shadows the built-in type `u32`\n   --> $DIR/builtin-type-shadow.rs:13:8\n    |\n-13 | fn foo<u32>(a: u32) -> u32 {\n+LL | fn foo<u32>(a: u32) -> u32 {\n    |        ^^^\n    |\n    = note: `-D clippy::builtin-type-shadow` implied by `-D warnings`\n \n error[E0308]: mismatched types\n   --> $DIR/builtin-type-shadow.rs:14:5\n    |\n-13 | fn foo<u32>(a: u32) -> u32 {\n+LL | fn foo<u32>(a: u32) -> u32 {\n    |                        --- expected `u32` because of return type\n-14 |     42\n+LL |     42\n    |     ^^ expected type parameter, found integral variable\n    |\n    = note: expected type `u32`"}, {"sha": "a2890fe5a6d2cb4fe96b4b75bbd825145dfa254b", "filename": "tests/ui/bytecount.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fbytecount.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fbytecount.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbytecount.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,25 +1,25 @@\n error: You appear to be counting bytes the naive way\n   --> $DIR/bytecount.rs:14:13\n    |\n-14 |     let _ = x.iter().filter(|&&a| a == 0).count(); // naive byte count\n+LL |     let _ = x.iter().filter(|&&a| a == 0).count(); // naive byte count\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: Consider using the bytecount crate: `bytecount::count(x, 0)`\n    |\n note: lint level defined here\n   --> $DIR/bytecount.rs:10:8\n    |\n-10 | #[deny(clippy::naive_bytecount)]\n+LL | #[deny(clippy::naive_bytecount)]\n    |        ^^^^^^^^^^^^^^^^^^^^^^^\n \n error: You appear to be counting bytes the naive way\n   --> $DIR/bytecount.rs:16:13\n    |\n-16 |     let _ = (&x[..]).iter().filter(|&a| *a == 0).count(); // naive byte count\n+LL |     let _ = (&x[..]).iter().filter(|&a| *a == 0).count(); // naive byte count\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: Consider using the bytecount crate: `bytecount::count((&x[..]), 0)`\n \n error: You appear to be counting bytes the naive way\n   --> $DIR/bytecount.rs:28:13\n    |\n-28 |     let _ = x.iter().filter(|a| b + 1 == **a).count(); // naive byte count\n+LL |     let _ = x.iter().filter(|a| b + 1 == **a).count(); // naive byte count\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: Consider using the bytecount crate: `bytecount::count(x, b + 1)`\n \n error: aborting due to 3 previous errors"}, {"sha": "78631ffa8c8bf6043a4de6e1553c882e14fdcd28", "filename": "tests/ui/cast.stderr", "status": "modified", "additions": 28, "deletions": 28, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fcast.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fcast.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcast.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,181 +1,181 @@\n error: casting i32 to f32 causes a loss of precision (i32 is 32 bits wide, but f32's mantissa is only 23 bits wide)\n   --> $DIR/cast.rs:20:5\n    |\n-20 |     1i32 as f32;\n+LL |     1i32 as f32;\n    |     ^^^^^^^^^^^\n    |\n    = note: `-D clippy::cast-precision-loss` implied by `-D warnings`\n \n error: casting i64 to f32 causes a loss of precision (i64 is 64 bits wide, but f32's mantissa is only 23 bits wide)\n   --> $DIR/cast.rs:21:5\n    |\n-21 |     1i64 as f32;\n+LL |     1i64 as f32;\n    |     ^^^^^^^^^^^\n \n error: casting i64 to f64 causes a loss of precision (i64 is 64 bits wide, but f64's mantissa is only 52 bits wide)\n   --> $DIR/cast.rs:22:5\n    |\n-22 |     1i64 as f64;\n+LL |     1i64 as f64;\n    |     ^^^^^^^^^^^\n \n error: casting u32 to f32 causes a loss of precision (u32 is 32 bits wide, but f32's mantissa is only 23 bits wide)\n   --> $DIR/cast.rs:23:5\n    |\n-23 |     1u32 as f32;\n+LL |     1u32 as f32;\n    |     ^^^^^^^^^^^\n \n error: casting u64 to f32 causes a loss of precision (u64 is 64 bits wide, but f32's mantissa is only 23 bits wide)\n   --> $DIR/cast.rs:24:5\n    |\n-24 |     1u64 as f32;\n+LL |     1u64 as f32;\n    |     ^^^^^^^^^^^\n \n error: casting u64 to f64 causes a loss of precision (u64 is 64 bits wide, but f64's mantissa is only 52 bits wide)\n   --> $DIR/cast.rs:25:5\n    |\n-25 |     1u64 as f64;\n+LL |     1u64 as f64;\n    |     ^^^^^^^^^^^\n \n error: casting f32 to i32 may truncate the value\n   --> $DIR/cast.rs:27:5\n    |\n-27 |     1f32 as i32;\n+LL |     1f32 as i32;\n    |     ^^^^^^^^^^^\n    |\n    = note: `-D clippy::cast-possible-truncation` implied by `-D warnings`\n \n error: casting f32 to u32 may truncate the value\n   --> $DIR/cast.rs:28:5\n    |\n-28 |     1f32 as u32;\n+LL |     1f32 as u32;\n    |     ^^^^^^^^^^^\n \n error: casting f32 to u32 may lose the sign of the value\n   --> $DIR/cast.rs:28:5\n    |\n-28 |     1f32 as u32;\n+LL |     1f32 as u32;\n    |     ^^^^^^^^^^^\n    |\n    = note: `-D clippy::cast-sign-loss` implied by `-D warnings`\n \n error: casting f64 to f32 may truncate the value\n   --> $DIR/cast.rs:29:5\n    |\n-29 |     1f64 as f32;\n+LL |     1f64 as f32;\n    |     ^^^^^^^^^^^\n \n error: casting i32 to i8 may truncate the value\n   --> $DIR/cast.rs:30:5\n    |\n-30 |     1i32 as i8;\n+LL |     1i32 as i8;\n    |     ^^^^^^^^^^\n \n error: casting i32 to u8 may lose the sign of the value\n   --> $DIR/cast.rs:31:5\n    |\n-31 |     1i32 as u8;\n+LL |     1i32 as u8;\n    |     ^^^^^^^^^^\n \n error: casting i32 to u8 may truncate the value\n   --> $DIR/cast.rs:31:5\n    |\n-31 |     1i32 as u8;\n+LL |     1i32 as u8;\n    |     ^^^^^^^^^^\n \n error: casting f64 to isize may truncate the value\n   --> $DIR/cast.rs:32:5\n    |\n-32 |     1f64 as isize;\n+LL |     1f64 as isize;\n    |     ^^^^^^^^^^^^^\n \n error: casting f64 to usize may truncate the value\n   --> $DIR/cast.rs:33:5\n    |\n-33 |     1f64 as usize;\n+LL |     1f64 as usize;\n    |     ^^^^^^^^^^^^^\n \n error: casting f64 to usize may lose the sign of the value\n   --> $DIR/cast.rs:33:5\n    |\n-33 |     1f64 as usize;\n+LL |     1f64 as usize;\n    |     ^^^^^^^^^^^^^\n \n error: casting u8 to i8 may wrap around the value\n   --> $DIR/cast.rs:35:5\n    |\n-35 |     1u8 as i8;\n+LL |     1u8 as i8;\n    |     ^^^^^^^^^\n    |\n    = note: `-D clippy::cast-possible-wrap` implied by `-D warnings`\n \n error: casting u16 to i16 may wrap around the value\n   --> $DIR/cast.rs:36:5\n    |\n-36 |     1u16 as i16;\n+LL |     1u16 as i16;\n    |     ^^^^^^^^^^^\n \n error: casting u32 to i32 may wrap around the value\n   --> $DIR/cast.rs:37:5\n    |\n-37 |     1u32 as i32;\n+LL |     1u32 as i32;\n    |     ^^^^^^^^^^^\n \n error: casting u64 to i64 may wrap around the value\n   --> $DIR/cast.rs:38:5\n    |\n-38 |     1u64 as i64;\n+LL |     1u64 as i64;\n    |     ^^^^^^^^^^^\n \n error: casting usize to isize may wrap around the value\n   --> $DIR/cast.rs:39:5\n    |\n-39 |     1usize as isize;\n+LL |     1usize as isize;\n    |     ^^^^^^^^^^^^^^^\n \n error: casting f32 to f64 may become silently lossy if types change\n   --> $DIR/cast.rs:41:5\n    |\n-41 |     1.0f32 as f64;\n+LL |     1.0f32 as f64;\n    |     ^^^^^^^^^^^^^ help: try: `f64::from(1.0f32)`\n    |\n    = note: `-D clippy::cast-lossless` implied by `-D warnings`\n \n error: casting u8 to u16 may become silently lossy if types change\n   --> $DIR/cast.rs:43:5\n    |\n-43 |     (1u8 + 1u8) as u16;\n+LL |     (1u8 + 1u8) as u16;\n    |     ^^^^^^^^^^^^^^^^^^ help: try: `u16::from(1u8 + 1u8)`\n \n error: casting i32 to u32 may lose the sign of the value\n   --> $DIR/cast.rs:45:5\n    |\n-45 |     1i32 as u32;\n+LL |     1i32 as u32;\n    |     ^^^^^^^^^^^\n \n error: casting isize to usize may lose the sign of the value\n   --> $DIR/cast.rs:46:5\n    |\n-46 |     1isize as usize;\n+LL |     1isize as usize;\n    |     ^^^^^^^^^^^^^^^\n \n error: casting to the same type is unnecessary (`i32` -> `i32`)\n   --> $DIR/cast.rs:49:5\n    |\n-49 |     1i32 as i32;\n+LL |     1i32 as i32;\n    |     ^^^^^^^^^^^\n    |\n    = note: `-D clippy::unnecessary-cast` implied by `-D warnings`\n \n error: casting to the same type is unnecessary (`f32` -> `f32`)\n   --> $DIR/cast.rs:50:5\n    |\n-50 |     1f32 as f32;\n+LL |     1f32 as f32;\n    |     ^^^^^^^^^^^\n \n error: casting to the same type is unnecessary (`bool` -> `bool`)\n   --> $DIR/cast.rs:51:5\n    |\n-51 |     false as bool;\n+LL |     false as bool;\n    |     ^^^^^^^^^^^^^\n \n error: aborting due to 28 previous errors"}, {"sha": "261bce613bf5295fe857e90a10e1dc43a2729256", "filename": "tests/ui/cast_alignment.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fcast_alignment.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fcast_alignment.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcast_alignment.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,15 +1,15 @@\n error: casting from `*const u8` to a more-strictly-aligned pointer (`*const u16`)\n   --> $DIR/cast_alignment.rs:21:5\n    |\n-21 |     (&1u8 as *const u8) as *const u16;\n+LL |     (&1u8 as *const u8) as *const u16;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::cast-ptr-alignment` implied by `-D warnings`\n \n error: casting from `*mut u8` to a more-strictly-aligned pointer (`*mut u16`)\n   --> $DIR/cast_alignment.rs:22:5\n    |\n-22 |     (&mut 1u8 as *mut u8) as *mut u16;\n+LL |     (&mut 1u8 as *mut u8) as *mut u16;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 2 previous errors"}, {"sha": "2164315c35e9e7170d6877214051680bec2bb8a5", "filename": "tests/ui/cast_lossless_float.stderr", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fcast_lossless_float.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fcast_lossless_float.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcast_lossless_float.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,63 +1,63 @@\n error: casting i8 to f32 may become silently lossy if types change\n   --> $DIR/cast_lossless_float.rs:14:5\n    |\n-14 |     1i8 as f32;\n+LL |     1i8 as f32;\n    |     ^^^^^^^^^^ help: try: `f32::from(1i8)`\n    |\n    = note: `-D clippy::cast-lossless` implied by `-D warnings`\n \n error: casting i8 to f64 may become silently lossy if types change\n   --> $DIR/cast_lossless_float.rs:15:5\n    |\n-15 |     1i8 as f64;\n+LL |     1i8 as f64;\n    |     ^^^^^^^^^^ help: try: `f64::from(1i8)`\n \n error: casting u8 to f32 may become silently lossy if types change\n   --> $DIR/cast_lossless_float.rs:16:5\n    |\n-16 |     1u8 as f32;\n+LL |     1u8 as f32;\n    |     ^^^^^^^^^^ help: try: `f32::from(1u8)`\n \n error: casting u8 to f64 may become silently lossy if types change\n   --> $DIR/cast_lossless_float.rs:17:5\n    |\n-17 |     1u8 as f64;\n+LL |     1u8 as f64;\n    |     ^^^^^^^^^^ help: try: `f64::from(1u8)`\n \n error: casting i16 to f32 may become silently lossy if types change\n   --> $DIR/cast_lossless_float.rs:18:5\n    |\n-18 |     1i16 as f32;\n+LL |     1i16 as f32;\n    |     ^^^^^^^^^^^ help: try: `f32::from(1i16)`\n \n error: casting i16 to f64 may become silently lossy if types change\n   --> $DIR/cast_lossless_float.rs:19:5\n    |\n-19 |     1i16 as f64;\n+LL |     1i16 as f64;\n    |     ^^^^^^^^^^^ help: try: `f64::from(1i16)`\n \n error: casting u16 to f32 may become silently lossy if types change\n   --> $DIR/cast_lossless_float.rs:20:5\n    |\n-20 |     1u16 as f32;\n+LL |     1u16 as f32;\n    |     ^^^^^^^^^^^ help: try: `f32::from(1u16)`\n \n error: casting u16 to f64 may become silently lossy if types change\n   --> $DIR/cast_lossless_float.rs:21:5\n    |\n-21 |     1u16 as f64;\n+LL |     1u16 as f64;\n    |     ^^^^^^^^^^^ help: try: `f64::from(1u16)`\n \n error: casting i32 to f64 may become silently lossy if types change\n   --> $DIR/cast_lossless_float.rs:22:5\n    |\n-22 |     1i32 as f64;\n+LL |     1i32 as f64;\n    |     ^^^^^^^^^^^ help: try: `f64::from(1i32)`\n \n error: casting u32 to f64 may become silently lossy if types change\n   --> $DIR/cast_lossless_float.rs:23:5\n    |\n-23 |     1u32 as f64;\n+LL |     1u32 as f64;\n    |     ^^^^^^^^^^^ help: try: `f64::from(1u32)`\n \n error: aborting due to 10 previous errors"}, {"sha": "d9eb1be57f7c8f9147a6621d5009a7b0cb5220f9", "filename": "tests/ui/cast_lossless_integer.stderr", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fcast_lossless_integer.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fcast_lossless_integer.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcast_lossless_integer.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,111 +1,111 @@\n error: casting i8 to i16 may become silently lossy if types change\n   --> $DIR/cast_lossless_integer.rs:14:5\n    |\n-14 |     1i8 as i16;\n+LL |     1i8 as i16;\n    |     ^^^^^^^^^^ help: try: `i16::from(1i8)`\n    |\n    = note: `-D clippy::cast-lossless` implied by `-D warnings`\n \n error: casting i8 to i32 may become silently lossy if types change\n   --> $DIR/cast_lossless_integer.rs:15:5\n    |\n-15 |     1i8 as i32;\n+LL |     1i8 as i32;\n    |     ^^^^^^^^^^ help: try: `i32::from(1i8)`\n \n error: casting i8 to i64 may become silently lossy if types change\n   --> $DIR/cast_lossless_integer.rs:16:5\n    |\n-16 |     1i8 as i64;\n+LL |     1i8 as i64;\n    |     ^^^^^^^^^^ help: try: `i64::from(1i8)`\n \n error: casting u8 to i16 may become silently lossy if types change\n   --> $DIR/cast_lossless_integer.rs:17:5\n    |\n-17 |     1u8 as i16;\n+LL |     1u8 as i16;\n    |     ^^^^^^^^^^ help: try: `i16::from(1u8)`\n \n error: casting u8 to i32 may become silently lossy if types change\n   --> $DIR/cast_lossless_integer.rs:18:5\n    |\n-18 |     1u8 as i32;\n+LL |     1u8 as i32;\n    |     ^^^^^^^^^^ help: try: `i32::from(1u8)`\n \n error: casting u8 to i64 may become silently lossy if types change\n   --> $DIR/cast_lossless_integer.rs:19:5\n    |\n-19 |     1u8 as i64;\n+LL |     1u8 as i64;\n    |     ^^^^^^^^^^ help: try: `i64::from(1u8)`\n \n error: casting u8 to u16 may become silently lossy if types change\n   --> $DIR/cast_lossless_integer.rs:20:5\n    |\n-20 |     1u8 as u16;\n+LL |     1u8 as u16;\n    |     ^^^^^^^^^^ help: try: `u16::from(1u8)`\n \n error: casting u8 to u32 may become silently lossy if types change\n   --> $DIR/cast_lossless_integer.rs:21:5\n    |\n-21 |     1u8 as u32;\n+LL |     1u8 as u32;\n    |     ^^^^^^^^^^ help: try: `u32::from(1u8)`\n \n error: casting u8 to u64 may become silently lossy if types change\n   --> $DIR/cast_lossless_integer.rs:22:5\n    |\n-22 |     1u8 as u64;\n+LL |     1u8 as u64;\n    |     ^^^^^^^^^^ help: try: `u64::from(1u8)`\n \n error: casting i16 to i32 may become silently lossy if types change\n   --> $DIR/cast_lossless_integer.rs:23:5\n    |\n-23 |     1i16 as i32;\n+LL |     1i16 as i32;\n    |     ^^^^^^^^^^^ help: try: `i32::from(1i16)`\n \n error: casting i16 to i64 may become silently lossy if types change\n   --> $DIR/cast_lossless_integer.rs:24:5\n    |\n-24 |     1i16 as i64;\n+LL |     1i16 as i64;\n    |     ^^^^^^^^^^^ help: try: `i64::from(1i16)`\n \n error: casting u16 to i32 may become silently lossy if types change\n   --> $DIR/cast_lossless_integer.rs:25:5\n    |\n-25 |     1u16 as i32;\n+LL |     1u16 as i32;\n    |     ^^^^^^^^^^^ help: try: `i32::from(1u16)`\n \n error: casting u16 to i64 may become silently lossy if types change\n   --> $DIR/cast_lossless_integer.rs:26:5\n    |\n-26 |     1u16 as i64;\n+LL |     1u16 as i64;\n    |     ^^^^^^^^^^^ help: try: `i64::from(1u16)`\n \n error: casting u16 to u32 may become silently lossy if types change\n   --> $DIR/cast_lossless_integer.rs:27:5\n    |\n-27 |     1u16 as u32;\n+LL |     1u16 as u32;\n    |     ^^^^^^^^^^^ help: try: `u32::from(1u16)`\n \n error: casting u16 to u64 may become silently lossy if types change\n   --> $DIR/cast_lossless_integer.rs:28:5\n    |\n-28 |     1u16 as u64;\n+LL |     1u16 as u64;\n    |     ^^^^^^^^^^^ help: try: `u64::from(1u16)`\n \n error: casting i32 to i64 may become silently lossy if types change\n   --> $DIR/cast_lossless_integer.rs:29:5\n    |\n-29 |     1i32 as i64;\n+LL |     1i32 as i64;\n    |     ^^^^^^^^^^^ help: try: `i64::from(1i32)`\n \n error: casting u32 to i64 may become silently lossy if types change\n   --> $DIR/cast_lossless_integer.rs:30:5\n    |\n-30 |     1u32 as i64;\n+LL |     1u32 as i64;\n    |     ^^^^^^^^^^^ help: try: `i64::from(1u32)`\n \n error: casting u32 to u64 may become silently lossy if types change\n   --> $DIR/cast_lossless_integer.rs:31:5\n    |\n-31 |     1u32 as u64;\n+LL |     1u32 as u64;\n    |     ^^^^^^^^^^^ help: try: `u64::from(1u32)`\n \n error: aborting due to 18 previous errors"}, {"sha": "eab1014128abfb06447a60499314b68a73eda8b8", "filename": "tests/ui/cast_size.stderr", "status": "modified", "additions": 19, "deletions": 19, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fcast_size.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fcast_size.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcast_size.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,123 +1,123 @@\n error: casting isize to i8 may truncate the value\n   --> $DIR/cast_size.rs:20:5\n    |\n-20 |     1isize as i8;\n+LL |     1isize as i8;\n    |     ^^^^^^^^^^^^\n    |\n    = note: `-D clippy::cast-possible-truncation` implied by `-D warnings`\n \n error: casting isize to f64 causes a loss of precision on targets with 64-bit wide pointers (isize is 64 bits wide, but f64's mantissa is only 52 bits wide)\n   --> $DIR/cast_size.rs:21:5\n    |\n-21 |     1isize as f64;\n+LL |     1isize as f64;\n    |     ^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::cast-precision-loss` implied by `-D warnings`\n \n error: casting usize to f64 causes a loss of precision on targets with 64-bit wide pointers (usize is 64 bits wide, but f64's mantissa is only 52 bits wide)\n   --> $DIR/cast_size.rs:22:5\n    |\n-22 |     1usize as f64;\n+LL |     1usize as f64;\n    |     ^^^^^^^^^^^^^\n \n error: casting isize to f32 causes a loss of precision (isize is 32 or 64 bits wide, but f32's mantissa is only 23 bits wide)\n   --> $DIR/cast_size.rs:23:5\n    |\n-23 |     1isize as f32;\n+LL |     1isize as f32;\n    |     ^^^^^^^^^^^^^\n \n error: casting usize to f32 causes a loss of precision (usize is 32 or 64 bits wide, but f32's mantissa is only 23 bits wide)\n   --> $DIR/cast_size.rs:24:5\n    |\n-24 |     1usize as f32;\n+LL |     1usize as f32;\n    |     ^^^^^^^^^^^^^\n \n error: casting isize to i32 may truncate the value on targets with 64-bit wide pointers\n   --> $DIR/cast_size.rs:25:5\n    |\n-25 |     1isize as i32;\n+LL |     1isize as i32;\n    |     ^^^^^^^^^^^^^\n \n error: casting isize to u32 may lose the sign of the value\n   --> $DIR/cast_size.rs:26:5\n    |\n-26 |     1isize as u32;\n+LL |     1isize as u32;\n    |     ^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::cast-sign-loss` implied by `-D warnings`\n \n error: casting isize to u32 may truncate the value on targets with 64-bit wide pointers\n   --> $DIR/cast_size.rs:26:5\n    |\n-26 |     1isize as u32;\n+LL |     1isize as u32;\n    |     ^^^^^^^^^^^^^\n \n error: casting usize to u32 may truncate the value on targets with 64-bit wide pointers\n   --> $DIR/cast_size.rs:27:5\n    |\n-27 |     1usize as u32;\n+LL |     1usize as u32;\n    |     ^^^^^^^^^^^^^\n \n error: casting usize to i32 may truncate the value on targets with 64-bit wide pointers\n   --> $DIR/cast_size.rs:28:5\n    |\n-28 |     1usize as i32;\n+LL |     1usize as i32;\n    |     ^^^^^^^^^^^^^\n \n error: casting usize to i32 may wrap around the value on targets with 32-bit wide pointers\n   --> $DIR/cast_size.rs:28:5\n    |\n-28 |     1usize as i32;\n+LL |     1usize as i32;\n    |     ^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::cast-possible-wrap` implied by `-D warnings`\n \n error: casting i64 to isize may truncate the value on targets with 32-bit wide pointers\n   --> $DIR/cast_size.rs:30:5\n    |\n-30 |     1i64 as isize;\n+LL |     1i64 as isize;\n    |     ^^^^^^^^^^^^^\n \n error: casting i64 to usize may lose the sign of the value\n   --> $DIR/cast_size.rs:31:5\n    |\n-31 |     1i64 as usize;\n+LL |     1i64 as usize;\n    |     ^^^^^^^^^^^^^\n \n error: casting i64 to usize may truncate the value on targets with 32-bit wide pointers\n   --> $DIR/cast_size.rs:31:5\n    |\n-31 |     1i64 as usize;\n+LL |     1i64 as usize;\n    |     ^^^^^^^^^^^^^\n \n error: casting u64 to isize may truncate the value on targets with 32-bit wide pointers\n   --> $DIR/cast_size.rs:32:5\n    |\n-32 |     1u64 as isize;\n+LL |     1u64 as isize;\n    |     ^^^^^^^^^^^^^\n \n error: casting u64 to isize may wrap around the value on targets with 64-bit wide pointers\n   --> $DIR/cast_size.rs:32:5\n    |\n-32 |     1u64 as isize;\n+LL |     1u64 as isize;\n    |     ^^^^^^^^^^^^^\n \n error: casting u64 to usize may truncate the value on targets with 32-bit wide pointers\n   --> $DIR/cast_size.rs:33:5\n    |\n-33 |     1u64 as usize;\n+LL |     1u64 as usize;\n    |     ^^^^^^^^^^^^^\n \n error: casting u32 to isize may wrap around the value on targets with 32-bit wide pointers\n   --> $DIR/cast_size.rs:34:5\n    |\n-34 |     1u32 as isize;\n+LL |     1u32 as isize;\n    |     ^^^^^^^^^^^^^\n \n error: casting i32 to usize may lose the sign of the value\n   --> $DIR/cast_size.rs:37:5\n    |\n-37 |     1i32 as usize;\n+LL |     1i32 as usize;\n    |     ^^^^^^^^^^^^^\n \n error: aborting due to 19 previous errors"}, {"sha": "233aafc3c7938f6c673452c401536b74ffd16a42", "filename": "tests/ui/cfg_attr_rustfmt.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fcfg_attr_rustfmt.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fcfg_attr_rustfmt.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcfg_attr_rustfmt.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,21 +1,21 @@\n error: `cfg_attr` is deprecated for rustfmt and got replaced by tool_attributes\n   --> $DIR/cfg_attr_rustfmt.rs:25:5\n    |\n-25 |     #[cfg_attr(rustfmt, rustfmt::skip)]\n+LL |     #[cfg_attr(rustfmt, rustfmt::skip)]\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `#[rustfmt::skip]`\n    |\n    = note: `-D clippy::deprecated-cfg-attr` implied by `-D warnings`\n \n error: `cfg_attr` is deprecated for rustfmt and got replaced by tool_attributes\n   --> $DIR/cfg_attr_rustfmt.rs:29:1\n    |\n-29 | #[cfg_attr(rustfmt, rustfmt_skip)]\n+LL | #[cfg_attr(rustfmt, rustfmt_skip)]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `#[rustfmt::skip]`\n \n error: `cfg_attr` is deprecated for rustfmt and got replaced by tool_attributes\n   --> $DIR/cfg_attr_rustfmt.rs:35:5\n    |\n-35 |     #![cfg_attr(rustfmt, rustfmt_skip)]\n+LL |     #![cfg_attr(rustfmt, rustfmt_skip)]\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `#![rustfmt::skip]`\n \n error: aborting due to 3 previous errors"}, {"sha": "a577c55d2613980bfe8c66b3dca76f604671abfa", "filename": "tests/ui/char_lit_as_u8.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fchar_lit_as_u8.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fchar_lit_as_u8.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fchar_lit_as_u8.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,7 +1,7 @@\n error: casting character literal to u8. `char`s are 4 bytes wide in rust, so casting to u8 truncates them\n   --> $DIR/char_lit_as_u8.rs:13:13\n    |\n-13 |     let c = 'a' as u8;\n+LL |     let c = 'a' as u8;\n    |             ^^^^^^^^^\n    |\n    = note: `-D clippy::char-lit-as-u8` implied by `-D warnings`"}, {"sha": "7e6a487ad1e6c97003b31b6c97556749f97ec1f3", "filename": "tests/ui/checked_unwrap.stderr", "status": "modified", "additions": 82, "deletions": 82, "changes": 164, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fchecked_unwrap.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fchecked_unwrap.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fchecked_unwrap.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,313 +1,313 @@\n error: You checked before that `unwrap()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n   --> $DIR/checked_unwrap.rs:16:9\n    |\n-15 |     if x.is_some() {\n+LL |     if x.is_some() {\n    |        ----------- the check is happening here\n-16 |         x.unwrap(); // unnecessary\n+LL |         x.unwrap(); // unnecessary\n    |         ^^^^^^^^^^\n    |\n note: lint level defined here\n   --> $DIR/checked_unwrap.rs:10:35\n    |\n-10 | #![deny(clippy::panicking_unwrap, clippy::unnecessary_unwrap)]\n+LL | #![deny(clippy::panicking_unwrap, clippy::unnecessary_unwrap)]\n    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: This call to `unwrap()` will always panic.\n   --> $DIR/checked_unwrap.rs:18:9\n    |\n-15 |     if x.is_some() {\n+LL |     if x.is_some() {\n    |        ----------- because of this check\n ...\n-18 |         x.unwrap(); // will panic\n+LL |         x.unwrap(); // will panic\n    |         ^^^^^^^^^^\n    |\n note: lint level defined here\n   --> $DIR/checked_unwrap.rs:10:9\n    |\n-10 | #![deny(clippy::panicking_unwrap, clippy::unnecessary_unwrap)]\n+LL | #![deny(clippy::panicking_unwrap, clippy::unnecessary_unwrap)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: This call to `unwrap()` will always panic.\n   --> $DIR/checked_unwrap.rs:21:9\n    |\n-20 |     if x.is_none() {\n+LL |     if x.is_none() {\n    |        ----------- because of this check\n-21 |         x.unwrap(); // will panic\n+LL |         x.unwrap(); // will panic\n    |         ^^^^^^^^^^\n \n error: You checked before that `unwrap()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n   --> $DIR/checked_unwrap.rs:23:9\n    |\n-20 |     if x.is_none() {\n+LL |     if x.is_none() {\n    |        ----------- the check is happening here\n ...\n-23 |         x.unwrap(); // unnecessary\n+LL |         x.unwrap(); // unnecessary\n    |         ^^^^^^^^^^\n \n error: You checked before that `unwrap()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n   --> $DIR/checked_unwrap.rs:27:9\n    |\n-26 |     if x.is_ok() {\n+LL |     if x.is_ok() {\n    |        --------- the check is happening here\n-27 |         x.unwrap(); // unnecessary\n+LL |         x.unwrap(); // unnecessary\n    |         ^^^^^^^^^^\n \n error: This call to `unwrap_err()` will always panic.\n   --> $DIR/checked_unwrap.rs:28:9\n    |\n-26 |     if x.is_ok() {\n+LL |     if x.is_ok() {\n    |        --------- because of this check\n-27 |         x.unwrap(); // unnecessary\n-28 |         x.unwrap_err(); // will panic\n+LL |         x.unwrap(); // unnecessary\n+LL |         x.unwrap_err(); // will panic\n    |         ^^^^^^^^^^^^^^\n \n error: This call to `unwrap()` will always panic.\n   --> $DIR/checked_unwrap.rs:30:9\n    |\n-26 |     if x.is_ok() {\n+LL |     if x.is_ok() {\n    |        --------- because of this check\n ...\n-30 |         x.unwrap(); // will panic\n+LL |         x.unwrap(); // will panic\n    |         ^^^^^^^^^^\n \n error: You checked before that `unwrap_err()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n   --> $DIR/checked_unwrap.rs:31:9\n    |\n-26 |     if x.is_ok() {\n+LL |     if x.is_ok() {\n    |        --------- the check is happening here\n ...\n-31 |         x.unwrap_err(); // unnecessary\n+LL |         x.unwrap_err(); // unnecessary\n    |         ^^^^^^^^^^^^^^\n \n error: This call to `unwrap()` will always panic.\n   --> $DIR/checked_unwrap.rs:34:9\n    |\n-33 |     if x.is_err() {\n+LL |     if x.is_err() {\n    |        ---------- because of this check\n-34 |         x.unwrap(); // will panic\n+LL |         x.unwrap(); // will panic\n    |         ^^^^^^^^^^\n \n error: You checked before that `unwrap_err()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n   --> $DIR/checked_unwrap.rs:35:9\n    |\n-33 |     if x.is_err() {\n+LL |     if x.is_err() {\n    |        ---------- the check is happening here\n-34 |         x.unwrap(); // will panic\n-35 |         x.unwrap_err(); // unnecessary\n+LL |         x.unwrap(); // will panic\n+LL |         x.unwrap_err(); // unnecessary\n    |         ^^^^^^^^^^^^^^\n \n error: You checked before that `unwrap()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n   --> $DIR/checked_unwrap.rs:37:9\n    |\n-33 |     if x.is_err() {\n+LL |     if x.is_err() {\n    |        ---------- the check is happening here\n ...\n-37 |         x.unwrap(); // unnecessary\n+LL |         x.unwrap(); // unnecessary\n    |         ^^^^^^^^^^\n \n error: This call to `unwrap_err()` will always panic.\n   --> $DIR/checked_unwrap.rs:38:9\n    |\n-33 |     if x.is_err() {\n+LL |     if x.is_err() {\n    |        ---------- because of this check\n ...\n-38 |         x.unwrap_err(); // will panic\n+LL |         x.unwrap_err(); // will panic\n    |         ^^^^^^^^^^^^^^\n \n error: You checked before that `unwrap()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n   --> $DIR/checked_unwrap.rs:55:9\n    |\n-54 |     if x.is_ok() && y.is_err() {\n+LL |     if x.is_ok() && y.is_err() {\n    |        --------- the check is happening here\n-55 |         x.unwrap(); // unnecessary\n+LL |         x.unwrap(); // unnecessary\n    |         ^^^^^^^^^^\n \n error: This call to `unwrap_err()` will always panic.\n   --> $DIR/checked_unwrap.rs:56:9\n    |\n-54 |     if x.is_ok() && y.is_err() {\n+LL |     if x.is_ok() && y.is_err() {\n    |        --------- because of this check\n-55 |         x.unwrap(); // unnecessary\n-56 |         x.unwrap_err(); // will panic\n+LL |         x.unwrap(); // unnecessary\n+LL |         x.unwrap_err(); // will panic\n    |         ^^^^^^^^^^^^^^\n \n error: This call to `unwrap()` will always panic.\n   --> $DIR/checked_unwrap.rs:57:9\n    |\n-54 |     if x.is_ok() && y.is_err() {\n+LL |     if x.is_ok() && y.is_err() {\n    |                     ---------- because of this check\n ...\n-57 |         y.unwrap(); // will panic\n+LL |         y.unwrap(); // will panic\n    |         ^^^^^^^^^^\n \n error: You checked before that `unwrap_err()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n   --> $DIR/checked_unwrap.rs:58:9\n    |\n-54 |     if x.is_ok() && y.is_err() {\n+LL |     if x.is_ok() && y.is_err() {\n    |                     ---------- the check is happening here\n ...\n-58 |         y.unwrap_err(); // unnecessary\n+LL |         y.unwrap_err(); // unnecessary\n    |         ^^^^^^^^^^^^^^\n \n error: This call to `unwrap()` will always panic.\n   --> $DIR/checked_unwrap.rs:72:9\n    |\n-67 |     if x.is_ok() || y.is_ok() {\n+LL |     if x.is_ok() || y.is_ok() {\n    |        --------- because of this check\n ...\n-72 |         x.unwrap(); // will panic\n+LL |         x.unwrap(); // will panic\n    |         ^^^^^^^^^^\n \n error: You checked before that `unwrap_err()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n   --> $DIR/checked_unwrap.rs:73:9\n    |\n-67 |     if x.is_ok() || y.is_ok() {\n+LL |     if x.is_ok() || y.is_ok() {\n    |        --------- the check is happening here\n ...\n-73 |         x.unwrap_err(); // unnecessary\n+LL |         x.unwrap_err(); // unnecessary\n    |         ^^^^^^^^^^^^^^\n \n error: This call to `unwrap()` will always panic.\n   --> $DIR/checked_unwrap.rs:74:9\n    |\n-67 |     if x.is_ok() || y.is_ok() {\n+LL |     if x.is_ok() || y.is_ok() {\n    |                     --------- because of this check\n ...\n-74 |         y.unwrap(); // will panic\n+LL |         y.unwrap(); // will panic\n    |         ^^^^^^^^^^\n \n error: You checked before that `unwrap_err()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n   --> $DIR/checked_unwrap.rs:75:9\n    |\n-67 |     if x.is_ok() || y.is_ok() {\n+LL |     if x.is_ok() || y.is_ok() {\n    |                     --------- the check is happening here\n ...\n-75 |         y.unwrap_err(); // unnecessary\n+LL |         y.unwrap_err(); // unnecessary\n    |         ^^^^^^^^^^^^^^\n \n error: You checked before that `unwrap()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n   --> $DIR/checked_unwrap.rs:79:9\n    |\n-78 |     if x.is_ok() && !(y.is_ok() || z.is_err()) {\n+LL |     if x.is_ok() && !(y.is_ok() || z.is_err()) {\n    |        --------- the check is happening here\n-79 |         x.unwrap(); // unnecessary\n+LL |         x.unwrap(); // unnecessary\n    |         ^^^^^^^^^^\n \n error: This call to `unwrap_err()` will always panic.\n   --> $DIR/checked_unwrap.rs:80:9\n    |\n-78 |     if x.is_ok() && !(y.is_ok() || z.is_err()) {\n+LL |     if x.is_ok() && !(y.is_ok() || z.is_err()) {\n    |        --------- because of this check\n-79 |         x.unwrap(); // unnecessary\n-80 |         x.unwrap_err(); // will panic\n+LL |         x.unwrap(); // unnecessary\n+LL |         x.unwrap_err(); // will panic\n    |         ^^^^^^^^^^^^^^\n \n error: This call to `unwrap()` will always panic.\n   --> $DIR/checked_unwrap.rs:81:9\n    |\n-78 |     if x.is_ok() && !(y.is_ok() || z.is_err()) {\n+LL |     if x.is_ok() && !(y.is_ok() || z.is_err()) {\n    |                       --------- because of this check\n ...\n-81 |         y.unwrap(); // will panic\n+LL |         y.unwrap(); // will panic\n    |         ^^^^^^^^^^\n \n error: You checked before that `unwrap_err()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n   --> $DIR/checked_unwrap.rs:82:9\n    |\n-78 |     if x.is_ok() && !(y.is_ok() || z.is_err()) {\n+LL |     if x.is_ok() && !(y.is_ok() || z.is_err()) {\n    |                       --------- the check is happening here\n ...\n-82 |         y.unwrap_err(); // unnecessary\n+LL |         y.unwrap_err(); // unnecessary\n    |         ^^^^^^^^^^^^^^\n \n error: You checked before that `unwrap()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n   --> $DIR/checked_unwrap.rs:83:9\n    |\n-78 |     if x.is_ok() && !(y.is_ok() || z.is_err()) {\n+LL |     if x.is_ok() && !(y.is_ok() || z.is_err()) {\n    |                                    ---------- the check is happening here\n ...\n-83 |         z.unwrap(); // unnecessary\n+LL |         z.unwrap(); // unnecessary\n    |         ^^^^^^^^^^\n \n error: This call to `unwrap_err()` will always panic.\n   --> $DIR/checked_unwrap.rs:84:9\n    |\n-78 |     if x.is_ok() && !(y.is_ok() || z.is_err()) {\n+LL |     if x.is_ok() && !(y.is_ok() || z.is_err()) {\n    |                                    ---------- because of this check\n ...\n-84 |         z.unwrap_err(); // will panic\n+LL |         z.unwrap_err(); // will panic\n    |         ^^^^^^^^^^^^^^\n \n error: This call to `unwrap()` will always panic.\n   --> $DIR/checked_unwrap.rs:92:9\n    |\n-86 |     if x.is_ok() || !(y.is_ok() && z.is_err()) {\n+LL |     if x.is_ok() || !(y.is_ok() && z.is_err()) {\n    |        --------- because of this check\n ...\n-92 |         x.unwrap(); // will panic\n+LL |         x.unwrap(); // will panic\n    |         ^^^^^^^^^^\n \n error: You checked before that `unwrap_err()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n   --> $DIR/checked_unwrap.rs:93:9\n    |\n-86 |     if x.is_ok() || !(y.is_ok() && z.is_err()) {\n+LL |     if x.is_ok() || !(y.is_ok() && z.is_err()) {\n    |        --------- the check is happening here\n ...\n-93 |         x.unwrap_err(); // unnecessary\n+LL |         x.unwrap_err(); // unnecessary\n    |         ^^^^^^^^^^^^^^\n \n error: You checked before that `unwrap()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n   --> $DIR/checked_unwrap.rs:94:9\n    |\n-86 |     if x.is_ok() || !(y.is_ok() && z.is_err()) {\n+LL |     if x.is_ok() || !(y.is_ok() && z.is_err()) {\n    |                       --------- the check is happening here\n ...\n-94 |         y.unwrap(); // unnecessary\n+LL |         y.unwrap(); // unnecessary\n    |         ^^^^^^^^^^\n \n error: This call to `unwrap_err()` will always panic.\n   --> $DIR/checked_unwrap.rs:95:9\n    |\n-86 |     if x.is_ok() || !(y.is_ok() && z.is_err()) {\n+LL |     if x.is_ok() || !(y.is_ok() && z.is_err()) {\n    |                       --------- because of this check\n ...\n-95 |         y.unwrap_err(); // will panic\n+LL |         y.unwrap_err(); // will panic\n    |         ^^^^^^^^^^^^^^\n \n error: This call to `unwrap()` will always panic.\n   --> $DIR/checked_unwrap.rs:96:9\n    |\n-86 |     if x.is_ok() || !(y.is_ok() && z.is_err()) {\n+LL |     if x.is_ok() || !(y.is_ok() && z.is_err()) {\n    |                                    ---------- because of this check\n ...\n-96 |         z.unwrap(); // will panic\n+LL |         z.unwrap(); // will panic\n    |         ^^^^^^^^^^\n \n error: You checked before that `unwrap_err()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n   --> $DIR/checked_unwrap.rs:97:9\n    |\n-86 |     if x.is_ok() || !(y.is_ok() && z.is_err()) {\n+LL |     if x.is_ok() || !(y.is_ok() && z.is_err()) {\n    |                                    ---------- the check is happening here\n ...\n-97 |         z.unwrap_err(); // unnecessary\n+LL |         z.unwrap_err(); // unnecessary\n    |         ^^^^^^^^^^^^^^\n \n error: You checked before that `unwrap()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n-   --> $DIR/checked_unwrap.rs:105:13\n-    |\n-104 |         if x.is_some() {\n-    |            ----------- the check is happening here\n-105 |             x.unwrap(); // unnecessary\n-    |             ^^^^^^^^^^\n+  --> $DIR/checked_unwrap.rs:105:13\n+   |\n+LL |         if x.is_some() {\n+   |            ----------- the check is happening here\n+LL |             x.unwrap(); // unnecessary\n+   |             ^^^^^^^^^^\n \n error: This call to `unwrap()` will always panic.\n-   --> $DIR/checked_unwrap.rs:107:13\n-    |\n-104 |         if x.is_some() {\n-    |            ----------- because of this check\n+  --> $DIR/checked_unwrap.rs:107:13\n+   |\n+LL |         if x.is_some() {\n+   |            ----------- because of this check\n ...\n-107 |             x.unwrap(); // will panic\n-    |             ^^^^^^^^^^\n+LL |             x.unwrap(); // will panic\n+   |             ^^^^^^^^^^\n \n error: aborting due to 34 previous errors\n "}, {"sha": "2a7772308b80c96a5dff651e7b577c0774bee7dc", "filename": "tests/ui/cmp_nan.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fcmp_nan.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fcmp_nan.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcmp_nan.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,75 +1,75 @@\n error: doomed comparison with NAN, use `std::{f32,f64}::is_nan()` instead\n   --> $DIR/cmp_nan.rs:14:5\n    |\n-14 |     x == std::f32::NAN;\n+LL |     x == std::f32::NAN;\n    |     ^^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::cmp-nan` implied by `-D warnings`\n \n error: doomed comparison with NAN, use `std::{f32,f64}::is_nan()` instead\n   --> $DIR/cmp_nan.rs:15:5\n    |\n-15 |     x != std::f32::NAN;\n+LL |     x != std::f32::NAN;\n    |     ^^^^^^^^^^^^^^^^^^\n \n error: doomed comparison with NAN, use `std::{f32,f64}::is_nan()` instead\n   --> $DIR/cmp_nan.rs:16:5\n    |\n-16 |     x < std::f32::NAN;\n+LL |     x < std::f32::NAN;\n    |     ^^^^^^^^^^^^^^^^^\n \n error: doomed comparison with NAN, use `std::{f32,f64}::is_nan()` instead\n   --> $DIR/cmp_nan.rs:17:5\n    |\n-17 |     x > std::f32::NAN;\n+LL |     x > std::f32::NAN;\n    |     ^^^^^^^^^^^^^^^^^\n \n error: doomed comparison with NAN, use `std::{f32,f64}::is_nan()` instead\n   --> $DIR/cmp_nan.rs:18:5\n    |\n-18 |     x <= std::f32::NAN;\n+LL |     x <= std::f32::NAN;\n    |     ^^^^^^^^^^^^^^^^^^\n \n error: doomed comparison with NAN, use `std::{f32,f64}::is_nan()` instead\n   --> $DIR/cmp_nan.rs:19:5\n    |\n-19 |     x >= std::f32::NAN;\n+LL |     x >= std::f32::NAN;\n    |     ^^^^^^^^^^^^^^^^^^\n \n error: doomed comparison with NAN, use `std::{f32,f64}::is_nan()` instead\n   --> $DIR/cmp_nan.rs:22:5\n    |\n-22 |     y == std::f64::NAN;\n+LL |     y == std::f64::NAN;\n    |     ^^^^^^^^^^^^^^^^^^\n \n error: doomed comparison with NAN, use `std::{f32,f64}::is_nan()` instead\n   --> $DIR/cmp_nan.rs:23:5\n    |\n-23 |     y != std::f64::NAN;\n+LL |     y != std::f64::NAN;\n    |     ^^^^^^^^^^^^^^^^^^\n \n error: doomed comparison with NAN, use `std::{f32,f64}::is_nan()` instead\n   --> $DIR/cmp_nan.rs:24:5\n    |\n-24 |     y < std::f64::NAN;\n+LL |     y < std::f64::NAN;\n    |     ^^^^^^^^^^^^^^^^^\n \n error: doomed comparison with NAN, use `std::{f32,f64}::is_nan()` instead\n   --> $DIR/cmp_nan.rs:25:5\n    |\n-25 |     y > std::f64::NAN;\n+LL |     y > std::f64::NAN;\n    |     ^^^^^^^^^^^^^^^^^\n \n error: doomed comparison with NAN, use `std::{f32,f64}::is_nan()` instead\n   --> $DIR/cmp_nan.rs:26:5\n    |\n-26 |     y <= std::f64::NAN;\n+LL |     y <= std::f64::NAN;\n    |     ^^^^^^^^^^^^^^^^^^\n \n error: doomed comparison with NAN, use `std::{f32,f64}::is_nan()` instead\n   --> $DIR/cmp_nan.rs:27:5\n    |\n-27 |     y >= std::f64::NAN;\n+LL |     y >= std::f64::NAN;\n    |     ^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 12 previous errors"}, {"sha": "68789b5b6358c3041532694a19c5c3cea1a34716", "filename": "tests/ui/cmp_null.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fcmp_null.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fcmp_null.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcmp_null.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,15 +1,15 @@\n error: Comparing with null is better expressed by the .is_null() method\n   --> $DIR/cmp_null.rs:18:8\n    |\n-18 |     if p == ptr::null() {\n+LL |     if p == ptr::null() {\n    |        ^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::cmp-null` implied by `-D warnings`\n \n error: Comparing with null is better expressed by the .is_null() method\n   --> $DIR/cmp_null.rs:23:8\n    |\n-23 |     if m == ptr::null_mut() {\n+LL |     if m == ptr::null_mut() {\n    |        ^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 2 previous errors"}, {"sha": "9177c6bd73ed6d189ebcfd8001e88654848b0bc4", "filename": "tests/ui/cmp_owned.stderr", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fcmp_owned.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fcmp_owned.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcmp_owned.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,57 +1,57 @@\n error: this creates an owned instance just for comparison\n   --> $DIR/cmp_owned.rs:14:14\n    |\n-14 |         x != \"foo\".to_string();\n+LL |         x != \"foo\".to_string();\n    |              ^^^^^^^^^^^^^^^^^ help: try: `\"foo\"`\n    |\n    = note: `-D clippy::cmp-owned` implied by `-D warnings`\n \n error: this creates an owned instance just for comparison\n   --> $DIR/cmp_owned.rs:16:9\n    |\n-16 |         \"foo\".to_string() != x;\n+LL |         \"foo\".to_string() != x;\n    |         ^^^^^^^^^^^^^^^^^ help: try: `\"foo\"`\n \n error: this creates an owned instance just for comparison\n   --> $DIR/cmp_owned.rs:23:10\n    |\n-23 |     x != \"foo\".to_owned();\n+LL |     x != \"foo\".to_owned();\n    |          ^^^^^^^^^^^^^^^^ help: try: `\"foo\"`\n \n error: this creates an owned instance just for comparison\n   --> $DIR/cmp_owned.rs:25:10\n    |\n-25 |     x != String::from(\"foo\");\n+LL |     x != String::from(\"foo\");\n    |          ^^^^^^^^^^^^^^^^^^^ help: try: `\"foo\"`\n \n error: this creates an owned instance just for comparison\n   --> $DIR/cmp_owned.rs:29:5\n    |\n-29 |     Foo.to_owned() == Foo;\n+LL |     Foo.to_owned() == Foo;\n    |     ^^^^^^^^^^^^^^ help: try: `Foo`\n \n error: this creates an owned instance just for comparison\n   --> $DIR/cmp_owned.rs:31:30\n    |\n-31 |     \"abc\".chars().filter(|c| c.to_owned() != 'X');\n+LL |     \"abc\".chars().filter(|c| c.to_owned() != 'X');\n    |                              ^^^^^^^^^^^^ help: try: `*c`\n \n error: this creates an owned instance just for comparison\n   --> $DIR/cmp_owned.rs:38:5\n    |\n-38 |     y.to_owned() == *x;\n+LL |     y.to_owned() == *x;\n    |     ^^^^^^^^^^^^^^^^^^ try implementing the comparison without allocating\n \n error: this creates an owned instance just for comparison\n   --> $DIR/cmp_owned.rs:43:5\n    |\n-43 |     y.to_owned() == **x;\n+LL |     y.to_owned() == **x;\n    |     ^^^^^^^^^^^^^^^^^^^ try implementing the comparison without allocating\n \n error: this creates an owned instance just for comparison\n   --> $DIR/cmp_owned.rs:50:9\n    |\n-50 |         self.to_owned() == *other\n+LL |         self.to_owned() == *other\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^ try implementing the comparison without allocating\n \n error: aborting due to 9 previous errors"}, {"sha": "2c60234eb5d5d6fa1966c1c4e1cb51d7c916ac13", "filename": "tests/ui/collapsible_if.stderr", "status": "modified", "additions": 151, "deletions": 151, "changes": 302, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fcollapsible_if.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fcollapsible_if.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcollapsible_if.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,260 +1,260 @@\n error: this if statement can be collapsed\n   --> $DIR/collapsible_if.rs:15:5\n    |\n-15 | /     if x == \"hello\" {\n-16 | |         if y == \"world\" {\n-17 | |             println!(\"Hello world!\");\n-18 | |         }\n-19 | |     }\n+LL | /     if x == \"hello\" {\n+LL | |         if y == \"world\" {\n+LL | |             println!(\"Hello world!\");\n+LL | |         }\n+LL | |     }\n    | |_____^\n    |\n    = note: `-D clippy::collapsible-if` implied by `-D warnings`\n help: try\n    |\n-15 |     if x == \"hello\" && y == \"world\" {\n-16 |     println!(\"Hello world!\");\n-17 | }\n+LL |     if x == \"hello\" && y == \"world\" {\n+LL |     println!(\"Hello world!\");\n+LL | }\n    |\n \n error: this if statement can be collapsed\n   --> $DIR/collapsible_if.rs:21:5\n    |\n-21 | /     if x == \"hello\" || x == \"world\" {\n-22 | |         if y == \"world\" || y == \"hello\" {\n-23 | |             println!(\"Hello world!\");\n-24 | |         }\n-25 | |     }\n+LL | /     if x == \"hello\" || x == \"world\" {\n+LL | |         if y == \"world\" || y == \"hello\" {\n+LL | |             println!(\"Hello world!\");\n+LL | |         }\n+LL | |     }\n    | |_____^\n help: try\n    |\n-21 |     if (x == \"hello\" || x == \"world\") && (y == \"world\" || y == \"hello\") {\n-22 |     println!(\"Hello world!\");\n-23 | }\n+LL |     if (x == \"hello\" || x == \"world\") && (y == \"world\" || y == \"hello\") {\n+LL |     println!(\"Hello world!\");\n+LL | }\n    |\n \n error: this if statement can be collapsed\n   --> $DIR/collapsible_if.rs:27:5\n    |\n-27 | /     if x == \"hello\" && x == \"world\" {\n-28 | |         if y == \"world\" || y == \"hello\" {\n-29 | |             println!(\"Hello world!\");\n-30 | |         }\n-31 | |     }\n+LL | /     if x == \"hello\" && x == \"world\" {\n+LL | |         if y == \"world\" || y == \"hello\" {\n+LL | |             println!(\"Hello world!\");\n+LL | |         }\n+LL | |     }\n    | |_____^\n help: try\n    |\n-27 |     if x == \"hello\" && x == \"world\" && (y == \"world\" || y == \"hello\") {\n-28 |     println!(\"Hello world!\");\n-29 | }\n+LL |     if x == \"hello\" && x == \"world\" && (y == \"world\" || y == \"hello\") {\n+LL |     println!(\"Hello world!\");\n+LL | }\n    |\n \n error: this if statement can be collapsed\n   --> $DIR/collapsible_if.rs:33:5\n    |\n-33 | /     if x == \"hello\" || x == \"world\" {\n-34 | |         if y == \"world\" && y == \"hello\" {\n-35 | |             println!(\"Hello world!\");\n-36 | |         }\n-37 | |     }\n+LL | /     if x == \"hello\" || x == \"world\" {\n+LL | |         if y == \"world\" && y == \"hello\" {\n+LL | |             println!(\"Hello world!\");\n+LL | |         }\n+LL | |     }\n    | |_____^\n help: try\n    |\n-33 |     if (x == \"hello\" || x == \"world\") && y == \"world\" && y == \"hello\" {\n-34 |     println!(\"Hello world!\");\n-35 | }\n+LL |     if (x == \"hello\" || x == \"world\") && y == \"world\" && y == \"hello\" {\n+LL |     println!(\"Hello world!\");\n+LL | }\n    |\n \n error: this if statement can be collapsed\n   --> $DIR/collapsible_if.rs:39:5\n    |\n-39 | /     if x == \"hello\" && x == \"world\" {\n-40 | |         if y == \"world\" && y == \"hello\" {\n-41 | |             println!(\"Hello world!\");\n-42 | |         }\n-43 | |     }\n+LL | /     if x == \"hello\" && x == \"world\" {\n+LL | |         if y == \"world\" && y == \"hello\" {\n+LL | |             println!(\"Hello world!\");\n+LL | |         }\n+LL | |     }\n    | |_____^\n help: try\n    |\n-39 |     if x == \"hello\" && x == \"world\" && y == \"world\" && y == \"hello\" {\n-40 |     println!(\"Hello world!\");\n-41 | }\n+LL |     if x == \"hello\" && x == \"world\" && y == \"world\" && y == \"hello\" {\n+LL |     println!(\"Hello world!\");\n+LL | }\n    |\n \n error: this if statement can be collapsed\n   --> $DIR/collapsible_if.rs:45:5\n    |\n-45 | /     if 42 == 1337 {\n-46 | |         if 'a' != 'A' {\n-47 | |             println!(\"world!\")\n-48 | |         }\n-49 | |     }\n+LL | /     if 42 == 1337 {\n+LL | |         if 'a' != 'A' {\n+LL | |             println!(\"world!\")\n+LL | |         }\n+LL | |     }\n    | |_____^\n help: try\n    |\n-45 |     if 42 == 1337 && 'a' != 'A' {\n-46 |     println!(\"world!\")\n-47 | }\n+LL |     if 42 == 1337 && 'a' != 'A' {\n+LL |     println!(\"world!\")\n+LL | }\n    |\n \n error: this `else { if .. }` block can be collapsed\n   --> $DIR/collapsible_if.rs:54:12\n    |\n-54 |       } else {\n+LL |       } else {\n    |  ____________^\n-55 | |         if y == \"world\" {\n-56 | |             println!(\"world!\")\n-57 | |         }\n-58 | |     }\n+LL | |         if y == \"world\" {\n+LL | |             println!(\"world!\")\n+LL | |         }\n+LL | |     }\n    | |_____^\n help: try\n    |\n-54 |     } else if y == \"world\" {\n-55 |     println!(\"world!\")\n-56 | }\n+LL |     } else if y == \"world\" {\n+LL |     println!(\"world!\")\n+LL | }\n    |\n \n error: this `else { if .. }` block can be collapsed\n   --> $DIR/collapsible_if.rs:62:12\n    |\n-62 |       } else {\n+LL |       } else {\n    |  ____________^\n-63 | |         if let Some(42) = Some(42) {\n-64 | |             println!(\"world!\")\n-65 | |         }\n-66 | |     }\n+LL | |         if let Some(42) = Some(42) {\n+LL | |             println!(\"world!\")\n+LL | |         }\n+LL | |     }\n    | |_____^\n help: try\n    |\n-62 |     } else if let Some(42) = Some(42) {\n-63 |     println!(\"world!\")\n-64 | }\n+LL |     } else if let Some(42) = Some(42) {\n+LL |     println!(\"world!\")\n+LL | }\n    |\n \n error: this `else { if .. }` block can be collapsed\n   --> $DIR/collapsible_if.rs:70:12\n    |\n-70 |       } else {\n+LL |       } else {\n    |  ____________^\n-71 | |         if y == \"world\" {\n-72 | |             println!(\"world\")\n-73 | |         }\n+LL | |         if y == \"world\" {\n+LL | |             println!(\"world\")\n+LL | |         }\n ...  |\n-76 | |         }\n-77 | |     }\n+LL | |         }\n+LL | |     }\n    | |_____^\n help: try\n    |\n-70 |     } else if y == \"world\" {\n-71 |     println!(\"world\")\n-72 | }\n-73 | else {\n-74 |     println!(\"!\")\n-75 | }\n+LL |     } else if y == \"world\" {\n+LL |     println!(\"world\")\n+LL | }\n+LL | else {\n+LL |     println!(\"!\")\n+LL | }\n    |\n \n error: this `else { if .. }` block can be collapsed\n   --> $DIR/collapsible_if.rs:81:12\n    |\n-81 |       } else {\n+LL |       } else {\n    |  ____________^\n-82 | |         if let Some(42) = Some(42) {\n-83 | |             println!(\"world\")\n-84 | |         }\n+LL | |         if let Some(42) = Some(42) {\n+LL | |             println!(\"world\")\n+LL | |         }\n ...  |\n-87 | |         }\n-88 | |     }\n+LL | |         }\n+LL | |     }\n    | |_____^\n help: try\n    |\n-81 |     } else if let Some(42) = Some(42) {\n-82 |     println!(\"world\")\n-83 | }\n-84 | else {\n-85 |     println!(\"!\")\n-86 | }\n+LL |     } else if let Some(42) = Some(42) {\n+LL |     println!(\"world\")\n+LL | }\n+LL | else {\n+LL |     println!(\"!\")\n+LL | }\n    |\n \n error: this `else { if .. }` block can be collapsed\n   --> $DIR/collapsible_if.rs:92:12\n    |\n-92 |       } else {\n+LL |       } else {\n    |  ____________^\n-93 | |         if let Some(42) = Some(42) {\n-94 | |             println!(\"world\")\n-95 | |         }\n+LL | |         if let Some(42) = Some(42) {\n+LL | |             println!(\"world\")\n+LL | |         }\n ...  |\n-98 | |         }\n-99 | |     }\n+LL | |         }\n+LL | |     }\n    | |_____^\n help: try\n    |\n-92 |     } else if let Some(42) = Some(42) {\n-93 |     println!(\"world\")\n-94 | }\n-95 | else {\n-96 |     println!(\"!\")\n-97 | }\n+LL |     } else if let Some(42) = Some(42) {\n+LL |     println!(\"world\")\n+LL | }\n+LL | else {\n+LL |     println!(\"!\")\n+LL | }\n    |\n \n error: this `else { if .. }` block can be collapsed\n-   --> $DIR/collapsible_if.rs:103:12\n-    |\n-103 |       } else {\n-    |  ____________^\n-104 | |         if x == \"hello\" {\n-105 | |             println!(\"world\")\n-106 | |         }\n-...   |\n-109 | |         }\n-110 | |     }\n-    | |_____^\n+  --> $DIR/collapsible_if.rs:103:12\n+   |\n+LL |       } else {\n+   |  ____________^\n+LL | |         if x == \"hello\" {\n+LL | |             println!(\"world\")\n+LL | |         }\n+...  |\n+LL | |         }\n+LL | |     }\n+   | |_____^\n help: try\n-    |\n-103 |     } else if x == \"hello\" {\n-104 |     println!(\"world\")\n-105 | }\n-106 | else {\n-107 |     println!(\"!\")\n-108 | }\n-    |\n+   |\n+LL |     } else if x == \"hello\" {\n+LL |     println!(\"world\")\n+LL | }\n+LL | else {\n+LL |     println!(\"!\")\n+LL | }\n+   |\n \n error: this `else { if .. }` block can be collapsed\n-   --> $DIR/collapsible_if.rs:114:12\n-    |\n-114 |       } else {\n-    |  ____________^\n-115 | |         if let Some(42) = Some(42) {\n-116 | |             println!(\"world\")\n-117 | |         }\n-...   |\n-120 | |         }\n-121 | |     }\n-    | |_____^\n+  --> $DIR/collapsible_if.rs:114:12\n+   |\n+LL |       } else {\n+   |  ____________^\n+LL | |         if let Some(42) = Some(42) {\n+LL | |             println!(\"world\")\n+LL | |         }\n+...  |\n+LL | |         }\n+LL | |     }\n+   | |_____^\n help: try\n-    |\n-114 |     } else if let Some(42) = Some(42) {\n-115 |     println!(\"world\")\n-116 | }\n-117 | else {\n-118 |     println!(\"!\")\n-119 | }\n-    |\n+   |\n+LL |     } else if let Some(42) = Some(42) {\n+LL |     println!(\"world\")\n+LL | }\n+LL | else {\n+LL |     println!(\"!\")\n+LL | }\n+   |\n \n error: this if statement can be collapsed\n-   --> $DIR/collapsible_if.rs:173:5\n-    |\n-173 | /     if x == \"hello\" {\n-174 | |         if y == \"world\" { // Collapsible\n-175 | |             println!(\"Hello world!\");\n-176 | |         }\n-177 | |     }\n-    | |_____^\n+  --> $DIR/collapsible_if.rs:173:5\n+   |\n+LL | /     if x == \"hello\" {\n+LL | |         if y == \"world\" { // Collapsible\n+LL | |             println!(\"Hello world!\");\n+LL | |         }\n+LL | |     }\n+   | |_____^\n help: try\n-    |\n-173 |     if x == \"hello\" && y == \"world\" { // Collapsible\n-174 |     println!(\"Hello world!\");\n-175 | }\n-    |\n+   |\n+LL |     if x == \"hello\" && y == \"world\" { // Collapsible\n+LL |     println!(\"Hello world!\");\n+LL | }\n+   |\n \n error: aborting due to 14 previous errors\n "}, {"sha": "8f46d38921d9fdc64f525062563dfdf7c37e4c1e", "filename": "tests/ui/complex_types.stderr", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fcomplex_types.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fcomplex_types.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcomplex_types.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,93 +1,93 @@\n error: very complex type used. Consider factoring parts into `type` definitions\n   --> $DIR/complex_types.rs:16:12\n    |\n-16 | const CST: (u32, (u32, (u32, (u32, u32)))) = (0, (0, (0, (0, 0))));\n+LL | const CST: (u32, (u32, (u32, (u32, u32)))) = (0, (0, (0, (0, 0))));\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::type-complexity` implied by `-D warnings`\n \n error: very complex type used. Consider factoring parts into `type` definitions\n   --> $DIR/complex_types.rs:17:12\n    |\n-17 | static ST: (u32, (u32, (u32, (u32, u32)))) = (0, (0, (0, (0, 0))));\n+LL | static ST: (u32, (u32, (u32, (u32, u32)))) = (0, (0, (0, (0, 0))));\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: very complex type used. Consider factoring parts into `type` definitions\n   --> $DIR/complex_types.rs:20:8\n    |\n-20 |     f: Vec<Vec<Box<(u32, u32, u32, u32)>>>,\n+LL |     f: Vec<Vec<Box<(u32, u32, u32, u32)>>>,\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: very complex type used. Consider factoring parts into `type` definitions\n   --> $DIR/complex_types.rs:23:11\n    |\n-23 | struct TS(Vec<Vec<Box<(u32, u32, u32, u32)>>>);\n+LL | struct TS(Vec<Vec<Box<(u32, u32, u32, u32)>>>);\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: very complex type used. Consider factoring parts into `type` definitions\n   --> $DIR/complex_types.rs:26:11\n    |\n-26 |     Tuple(Vec<Vec<Box<(u32, u32, u32, u32)>>>),\n+LL |     Tuple(Vec<Vec<Box<(u32, u32, u32, u32)>>>),\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: very complex type used. Consider factoring parts into `type` definitions\n   --> $DIR/complex_types.rs:27:17\n    |\n-27 |     Struct { f: Vec<Vec<Box<(u32, u32, u32, u32)>>> },\n+LL |     Struct { f: Vec<Vec<Box<(u32, u32, u32, u32)>>> },\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: very complex type used. Consider factoring parts into `type` definitions\n   --> $DIR/complex_types.rs:31:14\n    |\n-31 |     const A: (u32, (u32, (u32, (u32, u32)))) = (0, (0, (0, (0, 0))));\n+LL |     const A: (u32, (u32, (u32, (u32, u32)))) = (0, (0, (0, (0, 0))));\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: very complex type used. Consider factoring parts into `type` definitions\n   --> $DIR/complex_types.rs:32:30\n    |\n-32 |     fn impl_method(&self, p: Vec<Vec<Box<(u32, u32, u32, u32)>>>) {}\n+LL |     fn impl_method(&self, p: Vec<Vec<Box<(u32, u32, u32, u32)>>>) {}\n    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: very complex type used. Consider factoring parts into `type` definitions\n   --> $DIR/complex_types.rs:36:14\n    |\n-36 |     const A: Vec<Vec<Box<(u32, u32, u32, u32)>>>;\n+LL |     const A: Vec<Vec<Box<(u32, u32, u32, u32)>>>;\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: very complex type used. Consider factoring parts into `type` definitions\n   --> $DIR/complex_types.rs:37:14\n    |\n-37 |     type B = Vec<Vec<Box<(u32, u32, u32, u32)>>>;\n+LL |     type B = Vec<Vec<Box<(u32, u32, u32, u32)>>>;\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: very complex type used. Consider factoring parts into `type` definitions\n   --> $DIR/complex_types.rs:38:25\n    |\n-38 |     fn method(&self, p: Vec<Vec<Box<(u32, u32, u32, u32)>>>);\n+LL |     fn method(&self, p: Vec<Vec<Box<(u32, u32, u32, u32)>>>);\n    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: very complex type used. Consider factoring parts into `type` definitions\n   --> $DIR/complex_types.rs:39:29\n    |\n-39 |     fn def_method(&self, p: Vec<Vec<Box<(u32, u32, u32, u32)>>>) {}\n+LL |     fn def_method(&self, p: Vec<Vec<Box<(u32, u32, u32, u32)>>>) {}\n    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: very complex type used. Consider factoring parts into `type` definitions\n   --> $DIR/complex_types.rs:42:15\n    |\n-42 | fn test1() -> Vec<Vec<Box<(u32, u32, u32, u32)>>> {\n+LL | fn test1() -> Vec<Vec<Box<(u32, u32, u32, u32)>>> {\n    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: very complex type used. Consider factoring parts into `type` definitions\n   --> $DIR/complex_types.rs:46:14\n    |\n-46 | fn test2(_x: Vec<Vec<Box<(u32, u32, u32, u32)>>>) {}\n+LL | fn test2(_x: Vec<Vec<Box<(u32, u32, u32, u32)>>>) {}\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: very complex type used. Consider factoring parts into `type` definitions\n   --> $DIR/complex_types.rs:49:13\n    |\n-49 |     let _y: Vec<Vec<Box<(u32, u32, u32, u32)>>> = vec![];\n+LL |     let _y: Vec<Vec<Box<(u32, u32, u32, u32)>>> = vec![];\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 15 previous errors"}, {"sha": "b3fabb3522f2e5c78cf4861ccd0e0268b4b0c600", "filename": "tests/ui/const_static_lifetime.stderr", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fconst_static_lifetime.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fconst_static_lifetime.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconst_static_lifetime.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,81 +1,81 @@\n error: Constants have by default a `'static` lifetime\n   --> $DIR/const_static_lifetime.rs:13:17\n    |\n-13 | const VAR_ONE: &'static str = \"Test constant #1\"; // ERROR Consider removing 'static.\n+LL | const VAR_ONE: &'static str = \"Test constant #1\"; // ERROR Consider removing 'static.\n    |                -^^^^^^^---- help: consider removing `'static`: `&str`\n    |\n    = note: `-D clippy::const-static-lifetime` implied by `-D warnings`\n \n error: Constants have by default a `'static` lifetime\n   --> $DIR/const_static_lifetime.rs:17:21\n    |\n-17 | const VAR_THREE: &[&'static str] = &[\"one\", \"two\"]; // ERROR Consider removing 'static\n+LL | const VAR_THREE: &[&'static str] = &[\"one\", \"two\"]; // ERROR Consider removing 'static\n    |                    -^^^^^^^---- help: consider removing `'static`: `&str`\n \n error: Constants have by default a `'static` lifetime\n   --> $DIR/const_static_lifetime.rs:19:32\n    |\n-19 | const VAR_FOUR: (&str, (&str, &'static str), &'static str) = (\"on\", (\"th\", \"th\"), \"on\"); // ERROR Consider removing 'static\n+LL | const VAR_FOUR: (&str, (&str, &'static str), &'static str) = (\"on\", (\"th\", \"th\"), \"on\"); // ERROR Consider removing 'static\n    |                               -^^^^^^^---- help: consider removing `'static`: `&str`\n \n error: Constants have by default a `'static` lifetime\n   --> $DIR/const_static_lifetime.rs:19:47\n    |\n-19 | const VAR_FOUR: (&str, (&str, &'static str), &'static str) = (\"on\", (\"th\", \"th\"), \"on\"); // ERROR Consider removing 'static\n+LL | const VAR_FOUR: (&str, (&str, &'static str), &'static str) = (\"on\", (\"th\", \"th\"), \"on\"); // ERROR Consider removing 'static\n    |                                              -^^^^^^^---- help: consider removing `'static`: `&str`\n \n error: Constants have by default a `'static` lifetime\n   --> $DIR/const_static_lifetime.rs:21:18\n    |\n-21 | const VAR_FIVE: &'static [&[&'static str]] = &[&[\"test\"], &[\"other one\"]]; // ERROR Consider removing 'static\n+LL | const VAR_FIVE: &'static [&[&'static str]] = &[&[\"test\"], &[\"other one\"]]; // ERROR Consider removing 'static\n    |                 -^^^^^^^------------------ help: consider removing `'static`: `&[&[&'static str]]`\n \n error: Constants have by default a `'static` lifetime\n   --> $DIR/const_static_lifetime.rs:21:30\n    |\n-21 | const VAR_FIVE: &'static [&[&'static str]] = &[&[\"test\"], &[\"other one\"]]; // ERROR Consider removing 'static\n+LL | const VAR_FIVE: &'static [&[&'static str]] = &[&[\"test\"], &[\"other one\"]]; // ERROR Consider removing 'static\n    |                             -^^^^^^^---- help: consider removing `'static`: `&str`\n \n error: Constants have by default a `'static` lifetime\n   --> $DIR/const_static_lifetime.rs:23:17\n    |\n-23 | const VAR_SIX: &'static u8 = &5;\n+LL | const VAR_SIX: &'static u8 = &5;\n    |                -^^^^^^^--- help: consider removing `'static`: `&u8`\n \n error: Constants have by default a `'static` lifetime\n   --> $DIR/const_static_lifetime.rs:25:29\n    |\n-25 | const VAR_SEVEN: &[&(&str, &'static [&'static str])] = &[&(\"one\", &[\"other one\"])];\n+LL | const VAR_SEVEN: &[&(&str, &'static [&'static str])] = &[&(\"one\", &[\"other one\"])];\n    |                            -^^^^^^^--------------- help: consider removing `'static`: `&[&'static str]`\n \n error: Constants have by default a `'static` lifetime\n   --> $DIR/const_static_lifetime.rs:25:39\n    |\n-25 | const VAR_SEVEN: &[&(&str, &'static [&'static str])] = &[&(\"one\", &[\"other one\"])];\n+LL | const VAR_SEVEN: &[&(&str, &'static [&'static str])] = &[&(\"one\", &[\"other one\"])];\n    |                                      -^^^^^^^---- help: consider removing `'static`: `&str`\n \n error: Constants have by default a `'static` lifetime\n   --> $DIR/const_static_lifetime.rs:27:20\n    |\n-27 | const VAR_HEIGHT: &'static Foo = &Foo {};\n+LL | const VAR_HEIGHT: &'static Foo = &Foo {};\n    |                   -^^^^^^^---- help: consider removing `'static`: `&Foo`\n \n error: Constants have by default a `'static` lifetime\n   --> $DIR/const_static_lifetime.rs:29:19\n    |\n-29 | const VAR_SLICE: &'static [u8] = b\"Test constant #1\"; // ERROR Consider removing 'static.\n+LL | const VAR_SLICE: &'static [u8] = b\"Test constant #1\"; // ERROR Consider removing 'static.\n    |                  -^^^^^^^----- help: consider removing `'static`: `&[u8]`\n \n error: Constants have by default a `'static` lifetime\n   --> $DIR/const_static_lifetime.rs:31:19\n    |\n-31 | const VAR_TUPLE: &'static (u8, u8) = &(1, 2); // ERROR Consider removing 'static.\n+LL | const VAR_TUPLE: &'static (u8, u8) = &(1, 2); // ERROR Consider removing 'static.\n    |                  -^^^^^^^--------- help: consider removing `'static`: `&(u8, u8)`\n \n error: Constants have by default a `'static` lifetime\n   --> $DIR/const_static_lifetime.rs:33:19\n    |\n-33 | const VAR_ARRAY: &'static [u8; 1] = b\"T\"; // ERROR Consider removing 'static.\n+LL | const VAR_ARRAY: &'static [u8; 1] = b\"T\"; // ERROR Consider removing 'static.\n    |                  -^^^^^^^-------- help: consider removing `'static`: `&[u8; 1]`\n \n error: aborting due to 13 previous errors"}, {"sha": "659abf6fa7e7243aaa46e888c89ad988beee0344", "filename": "tests/ui/copies.stderr", "status": "modified", "additions": 311, "deletions": 311, "changes": 622, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fcopies.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fcopies.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcopies.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,392 +1,392 @@\n error: this `if` has identical blocks\n   --> $DIR/copies.rs:50:12\n    |\n-50 |       } else {\n+LL |       } else {\n    |  ____________^\n-51 | |         //~ ERROR same body as `if` block\n-52 | |         Foo { bar: 42 };\n-53 | |         0..10;\n+LL | |         //~ ERROR same body as `if` block\n+LL | |         Foo { bar: 42 };\n+LL | |         0..10;\n ...  |\n-58 | |         foo();\n-59 | |     }\n+LL | |         foo();\n+LL | |     }\n    | |_____^\n    |\n    = note: `-D clippy::if-same-then-else` implied by `-D warnings`\n note: same as this\n   --> $DIR/copies.rs:42:13\n    |\n-42 |       if true {\n+LL |       if true {\n    |  _____________^\n-43 | |         Foo { bar: 42 };\n-44 | |         0..10;\n-45 | |         ..;\n+LL | |         Foo { bar: 42 };\n+LL | |         0..10;\n+LL | |         ..;\n ...  |\n-49 | |         foo();\n-50 | |     } else {\n+LL | |         foo();\n+LL | |     } else {\n    | |_____^\n \n error: this `match` has identical arm bodies\n-   --> $DIR/copies.rs:96:14\n-    |\n-96  |           _ => {\n-    |  ______________^\n-97  | |             //~ ERROR match arms have same body\n-98  | |             foo();\n-99  | |             let mut a = 42 + [23].len() as i32;\n-...   |\n-104 | |             a\n-105 | |         },\n-    | |_________^\n-    |\n-    = note: `-D clippy::match-same-arms` implied by `-D warnings`\n+  --> $DIR/copies.rs:96:14\n+   |\n+LL |           _ => {\n+   |  ______________^\n+LL | |             //~ ERROR match arms have same body\n+LL | |             foo();\n+LL | |             let mut a = 42 + [23].len() as i32;\n+...  |\n+LL | |             a\n+LL | |         },\n+   | |_________^\n+   |\n+   = note: `-D clippy::match-same-arms` implied by `-D warnings`\n note: same as this\n-   --> $DIR/copies.rs:87:15\n-    |\n-87  |           42 => {\n-    |  _______________^\n-88  | |             foo();\n-89  | |             let mut a = 42 + [23].len() as i32;\n-90  | |             if true {\n-...   |\n-94  | |             a\n-95  | |         },\n-    | |_________^\n+  --> $DIR/copies.rs:87:15\n+   |\n+LL |           42 => {\n+   |  _______________^\n+LL | |             foo();\n+LL | |             let mut a = 42 + [23].len() as i32;\n+LL | |             if true {\n+...  |\n+LL | |             a\n+LL | |         },\n+   | |_________^\n note: `42` has the same arm body as the `_` wildcard, consider removing it`\n-   --> $DIR/copies.rs:87:15\n-    |\n-87  |           42 => {\n-    |  _______________^\n-88  | |             foo();\n-89  | |             let mut a = 42 + [23].len() as i32;\n-90  | |             if true {\n-...   |\n-94  | |             a\n-95  | |         },\n-    | |_________^\n+  --> $DIR/copies.rs:87:15\n+   |\n+LL |           42 => {\n+   |  _______________^\n+LL | |             foo();\n+LL | |             let mut a = 42 + [23].len() as i32;\n+LL | |             if true {\n+...  |\n+LL | |             a\n+LL | |         },\n+   | |_________^\n \n error: this `match` has identical arm bodies\n-   --> $DIR/copies.rs:111:14\n-    |\n-111 |         _ => 0, //~ ERROR match arms have same body\n-    |              ^\n-    |\n+  --> $DIR/copies.rs:111:14\n+   |\n+LL |         _ => 0, //~ ERROR match arms have same body\n+   |              ^\n+   |\n note: same as this\n-   --> $DIR/copies.rs:109:19\n-    |\n-109 |         Abc::A => 0,\n-    |                   ^\n+  --> $DIR/copies.rs:109:19\n+   |\n+LL |         Abc::A => 0,\n+   |                   ^\n note: `Abc::A` has the same arm body as the `_` wildcard, consider removing it`\n-   --> $DIR/copies.rs:109:19\n-    |\n-109 |         Abc::A => 0,\n-    |                   ^\n+  --> $DIR/copies.rs:109:19\n+   |\n+LL |         Abc::A => 0,\n+   |                   ^\n \n error: this `if` has identical blocks\n-   --> $DIR/copies.rs:120:12\n-    |\n-120 |       } else {\n-    |  ____________^\n-121 | |         //~ ERROR same body as `if` block\n-122 | |         42\n-123 | |     };\n-    | |_____^\n-    |\n+  --> $DIR/copies.rs:120:12\n+   |\n+LL |       } else {\n+   |  ____________^\n+LL | |         //~ ERROR same body as `if` block\n+LL | |         42\n+LL | |     };\n+   | |_____^\n+   |\n note: same as this\n-   --> $DIR/copies.rs:118:21\n-    |\n-118 |       let _ = if true {\n-    |  _____________________^\n-119 | |         42\n-120 | |     } else {\n-    | |_____^\n+  --> $DIR/copies.rs:118:21\n+   |\n+LL |       let _ = if true {\n+   |  _____________________^\n+LL | |         42\n+LL | |     } else {\n+   | |_____^\n \n error: this `if` has identical blocks\n-   --> $DIR/copies.rs:134:12\n-    |\n-134 |       } else {\n-    |  ____________^\n-135 | |         //~ ERROR same body as `if` block\n-136 | |         for _ in &[42] {\n-137 | |             let foo: &Option<_> = &Some::<u8>(42);\n-...   |\n-143 | |         }\n-144 | |     }\n-    | |_____^\n-    |\n+  --> $DIR/copies.rs:134:12\n+   |\n+LL |       } else {\n+   |  ____________^\n+LL | |         //~ ERROR same body as `if` block\n+LL | |         for _ in &[42] {\n+LL | |             let foo: &Option<_> = &Some::<u8>(42);\n+...  |\n+LL | |         }\n+LL | |     }\n+   | |_____^\n+   |\n note: same as this\n-   --> $DIR/copies.rs:125:13\n-    |\n-125 |       if true {\n-    |  _____________^\n-126 | |         for _ in &[42] {\n-127 | |             let foo: &Option<_> = &Some::<u8>(42);\n-128 | |             if true {\n-...   |\n-133 | |         }\n-134 | |     } else {\n-    | |_____^\n+  --> $DIR/copies.rs:125:13\n+   |\n+LL |       if true {\n+   |  _____________^\n+LL | |         for _ in &[42] {\n+LL | |             let foo: &Option<_> = &Some::<u8>(42);\n+LL | |             if true {\n+...  |\n+LL | |         }\n+LL | |     } else {\n+   | |_____^\n \n error: this `if` has identical blocks\n-   --> $DIR/copies.rs:153:12\n-    |\n-153 |       } else {\n-    |  ____________^\n-154 | |         //~ ERROR same body as `if` block\n-155 | |         let bar = if true { 42 } else { 43 };\n-156 | |\n-...   |\n-160 | |         bar + 1;\n-161 | |     }\n-    | |_____^\n-    |\n+  --> $DIR/copies.rs:153:12\n+   |\n+LL |       } else {\n+   |  ____________^\n+LL | |         //~ ERROR same body as `if` block\n+LL | |         let bar = if true { 42 } else { 43 };\n+LL | |\n+...  |\n+LL | |         bar + 1;\n+LL | |     }\n+   | |_____^\n+   |\n note: same as this\n-   --> $DIR/copies.rs:146:13\n-    |\n-146 |       if true {\n-    |  _____________^\n-147 | |         let bar = if true { 42 } else { 43 };\n-148 | |\n-149 | |         while foo() {\n-...   |\n-152 | |         bar + 1;\n-153 | |     } else {\n-    | |_____^\n+  --> $DIR/copies.rs:146:13\n+   |\n+LL |       if true {\n+   |  _____________^\n+LL | |         let bar = if true { 42 } else { 43 };\n+LL | |\n+LL | |         while foo() {\n+...  |\n+LL | |         bar + 1;\n+LL | |     } else {\n+   | |_____^\n \n error: this `if` has identical blocks\n-   --> $DIR/copies.rs:183:12\n-    |\n-183 |       } else {\n-    |  ____________^\n-184 | |         //~ ERROR same body as `if` block\n-185 | |         if let Some(a) = Some(42) {}\n-186 | |     }\n-    | |_____^\n-    |\n+  --> $DIR/copies.rs:183:12\n+   |\n+LL |       } else {\n+   |  ____________^\n+LL | |         //~ ERROR same body as `if` block\n+LL | |         if let Some(a) = Some(42) {}\n+LL | |     }\n+   | |_____^\n+   |\n note: same as this\n-   --> $DIR/copies.rs:181:13\n-    |\n-181 |       if true {\n-    |  _____________^\n-182 | |         if let Some(a) = Some(42) {}\n-183 | |     } else {\n-    | |_____^\n+  --> $DIR/copies.rs:181:13\n+   |\n+LL |       if true {\n+   |  _____________^\n+LL | |         if let Some(a) = Some(42) {}\n+LL | |     } else {\n+   | |_____^\n \n error: this `if` has identical blocks\n-   --> $DIR/copies.rs:190:12\n-    |\n-190 |       } else {\n-    |  ____________^\n-191 | |         //~ ERROR same body as `if` block\n-192 | |         if let (1, .., 3) = (1, 2, 3) {}\n-193 | |     }\n-    | |_____^\n-    |\n+  --> $DIR/copies.rs:190:12\n+   |\n+LL |       } else {\n+   |  ____________^\n+LL | |         //~ ERROR same body as `if` block\n+LL | |         if let (1, .., 3) = (1, 2, 3) {}\n+LL | |     }\n+   | |_____^\n+   |\n note: same as this\n-   --> $DIR/copies.rs:188:13\n-    |\n-188 |       if true {\n-    |  _____________^\n-189 | |         if let (1, .., 3) = (1, 2, 3) {}\n-190 | |     } else {\n-    | |_____^\n+  --> $DIR/copies.rs:188:13\n+   |\n+LL |       if true {\n+   |  _____________^\n+LL | |         if let (1, .., 3) = (1, 2, 3) {}\n+LL | |     } else {\n+   | |_____^\n \n error: this `match` has identical arm bodies\n-   --> $DIR/copies.rs:239:15\n-    |\n-239 |         51 => foo(), //~ ERROR match arms have same body\n-    |               ^^^^^\n-    |\n+  --> $DIR/copies.rs:239:15\n+   |\n+LL |         51 => foo(), //~ ERROR match arms have same body\n+   |               ^^^^^\n+   |\n note: same as this\n-   --> $DIR/copies.rs:238:15\n-    |\n-238 |         42 => foo(),\n-    |               ^^^^^\n+  --> $DIR/copies.rs:238:15\n+   |\n+LL |         42 => foo(),\n+   |               ^^^^^\n note: consider refactoring into `42 | 51`\n-   --> $DIR/copies.rs:238:15\n-    |\n-238 |         42 => foo(),\n-    |               ^^^^^\n+  --> $DIR/copies.rs:238:15\n+   |\n+LL |         42 => foo(),\n+   |               ^^^^^\n \n error: this `match` has identical arm bodies\n-   --> $DIR/copies.rs:245:17\n-    |\n-245 |         None => 24, //~ ERROR match arms have same body\n-    |                 ^^\n-    |\n+  --> $DIR/copies.rs:245:17\n+   |\n+LL |         None => 24, //~ ERROR match arms have same body\n+   |                 ^^\n+   |\n note: same as this\n-   --> $DIR/copies.rs:244:20\n-    |\n-244 |         Some(_) => 24,\n-    |                    ^^\n+  --> $DIR/copies.rs:244:20\n+   |\n+LL |         Some(_) => 24,\n+   |                    ^^\n note: consider refactoring into `Some(_) | None`\n-   --> $DIR/copies.rs:244:20\n-    |\n-244 |         Some(_) => 24,\n-    |                    ^^\n+  --> $DIR/copies.rs:244:20\n+   |\n+LL |         Some(_) => 24,\n+   |                    ^^\n \n error: this `match` has identical arm bodies\n-   --> $DIR/copies.rs:267:28\n-    |\n-267 |         (None, Some(a)) => bar(a), //~ ERROR match arms have same body\n-    |                            ^^^^^^\n-    |\n+  --> $DIR/copies.rs:267:28\n+   |\n+LL |         (None, Some(a)) => bar(a), //~ ERROR match arms have same body\n+   |                            ^^^^^^\n+   |\n note: same as this\n-   --> $DIR/copies.rs:266:28\n-    |\n-266 |         (Some(a), None) => bar(a),\n-    |                            ^^^^^^\n+  --> $DIR/copies.rs:266:28\n+   |\n+LL |         (Some(a), None) => bar(a),\n+   |                            ^^^^^^\n note: consider refactoring into `(Some(a), None) | (None, Some(a))`\n-   --> $DIR/copies.rs:266:28\n-    |\n-266 |         (Some(a), None) => bar(a),\n-    |                            ^^^^^^\n+  --> $DIR/copies.rs:266:28\n+   |\n+LL |         (Some(a), None) => bar(a),\n+   |                            ^^^^^^\n \n error: this `match` has identical arm bodies\n-   --> $DIR/copies.rs:273:26\n-    |\n-273 |         (.., Some(a)) => bar(a), //~ ERROR match arms have same body\n-    |                          ^^^^^^\n-    |\n+  --> $DIR/copies.rs:273:26\n+   |\n+LL |         (.., Some(a)) => bar(a), //~ ERROR match arms have same body\n+   |                          ^^^^^^\n+   |\n note: same as this\n-   --> $DIR/copies.rs:272:26\n-    |\n-272 |         (Some(a), ..) => bar(a),\n-    |                          ^^^^^^\n+  --> $DIR/copies.rs:272:26\n+   |\n+LL |         (Some(a), ..) => bar(a),\n+   |                          ^^^^^^\n note: consider refactoring into `(Some(a), ..) | (.., Some(a))`\n-   --> $DIR/copies.rs:272:26\n-    |\n-272 |         (Some(a), ..) => bar(a),\n-    |                          ^^^^^^\n+  --> $DIR/copies.rs:272:26\n+   |\n+LL |         (Some(a), ..) => bar(a),\n+   |                          ^^^^^^\n \n error: this `match` has identical arm bodies\n-   --> $DIR/copies.rs:279:20\n-    |\n-279 |         (.., 3) => 42, //~ ERROR match arms have same body\n-    |                    ^^\n-    |\n+  --> $DIR/copies.rs:279:20\n+   |\n+LL |         (.., 3) => 42, //~ ERROR match arms have same body\n+   |                    ^^\n+   |\n note: same as this\n-   --> $DIR/copies.rs:278:23\n-    |\n-278 |         (1, .., 3) => 42,\n-    |                       ^^\n+  --> $DIR/copies.rs:278:23\n+   |\n+LL |         (1, .., 3) => 42,\n+   |                       ^^\n note: consider refactoring into `(1, .., 3) | (.., 3)`\n-   --> $DIR/copies.rs:278:23\n-    |\n-278 |         (1, .., 3) => 42,\n-    |                       ^^\n+  --> $DIR/copies.rs:278:23\n+   |\n+LL |         (1, .., 3) => 42,\n+   |                       ^^\n \n error: this `if` has identical blocks\n-   --> $DIR/copies.rs:285:12\n-    |\n-285 |       } else {\n-    |  ____________^\n-286 | |         //~ ERROR same body as `if` block\n-287 | |         0.0\n-288 | |     };\n-    | |_____^\n-    |\n+  --> $DIR/copies.rs:285:12\n+   |\n+LL |       } else {\n+   |  ____________^\n+LL | |         //~ ERROR same body as `if` block\n+LL | |         0.0\n+LL | |     };\n+   | |_____^\n+   |\n note: same as this\n-   --> $DIR/copies.rs:283:21\n-    |\n-283 |       let _ = if true {\n-    |  _____________________^\n-284 | |         0.0\n-285 | |     } else {\n-    | |_____^\n+  --> $DIR/copies.rs:283:21\n+   |\n+LL |       let _ = if true {\n+   |  _____________________^\n+LL | |         0.0\n+LL | |     } else {\n+   | |_____^\n \n error: this `if` has identical blocks\n-   --> $DIR/copies.rs:292:12\n-    |\n-292 |       } else {\n-    |  ____________^\n-293 | |         //~ ERROR same body as `if` block\n-294 | |         -0.0\n-295 | |     };\n-    | |_____^\n-    |\n+  --> $DIR/copies.rs:292:12\n+   |\n+LL |       } else {\n+   |  ____________^\n+LL | |         //~ ERROR same body as `if` block\n+LL | |         -0.0\n+LL | |     };\n+   | |_____^\n+   |\n note: same as this\n-   --> $DIR/copies.rs:290:21\n-    |\n-290 |       let _ = if true {\n-    |  _____________________^\n-291 | |         -0.0\n-292 | |     } else {\n-    | |_____^\n+  --> $DIR/copies.rs:290:21\n+   |\n+LL |       let _ = if true {\n+   |  _____________________^\n+LL | |         -0.0\n+LL | |     } else {\n+   | |_____^\n \n error: this `if` has identical blocks\n-   --> $DIR/copies.rs:305:12\n-    |\n-305 |       } else {\n-    |  ____________^\n-306 | |         //~ ERROR same body as `if` block\n-307 | |         std::f32::NAN\n-308 | |     };\n-    | |_____^\n-    |\n+  --> $DIR/copies.rs:305:12\n+   |\n+LL |       } else {\n+   |  ____________^\n+LL | |         //~ ERROR same body as `if` block\n+LL | |         std::f32::NAN\n+LL | |     };\n+   | |_____^\n+   |\n note: same as this\n-   --> $DIR/copies.rs:303:21\n-    |\n-303 |       let _ = if true {\n-    |  _____________________^\n-304 | |         std::f32::NAN\n-305 | |     } else {\n-    | |_____^\n+  --> $DIR/copies.rs:303:21\n+   |\n+LL |       let _ = if true {\n+   |  _____________________^\n+LL | |         std::f32::NAN\n+LL | |     } else {\n+   | |_____^\n \n error: this `if` has identical blocks\n-   --> $DIR/copies.rs:323:12\n-    |\n-323 |       } else {\n-    |  ____________^\n-324 | |         //~ ERROR same body as `if` block\n-325 | |         try!(Ok(\"foo\"));\n-326 | |     }\n-    | |_____^\n-    |\n+  --> $DIR/copies.rs:323:12\n+   |\n+LL |       } else {\n+   |  ____________^\n+LL | |         //~ ERROR same body as `if` block\n+LL | |         try!(Ok(\"foo\"));\n+LL | |     }\n+   | |_____^\n+   |\n note: same as this\n-   --> $DIR/copies.rs:321:13\n-    |\n-321 |       if true {\n-    |  _____________^\n-322 | |         try!(Ok(\"foo\"));\n-323 | |     } else {\n-    | |_____^\n+  --> $DIR/copies.rs:321:13\n+   |\n+LL |       if true {\n+   |  _____________^\n+LL | |         try!(Ok(\"foo\"));\n+LL | |     } else {\n+   | |_____^\n \n error: this `if` has the same condition as a previous if\n-   --> $DIR/copies.rs:347:15\n-    |\n-347 |     } else if b {\n-    |               ^\n-    |\n-    = note: `-D clippy::ifs-same-cond` implied by `-D warnings`\n+  --> $DIR/copies.rs:347:15\n+   |\n+LL |     } else if b {\n+   |               ^\n+   |\n+   = note: `-D clippy::ifs-same-cond` implied by `-D warnings`\n note: same as this\n-   --> $DIR/copies.rs:346:8\n-    |\n-346 |     if b {\n-    |        ^\n+  --> $DIR/copies.rs:346:8\n+   |\n+LL |     if b {\n+   |        ^\n \n error: this `if` has the same condition as a previous if\n-   --> $DIR/copies.rs:352:15\n-    |\n-352 |     } else if a == 1 {\n-    |               ^^^^^^\n-    |\n+  --> $DIR/copies.rs:352:15\n+   |\n+LL |     } else if a == 1 {\n+   |               ^^^^^^\n+   |\n note: same as this\n-   --> $DIR/copies.rs:351:8\n-    |\n-351 |     if a == 1 {\n-    |        ^^^^^^\n+  --> $DIR/copies.rs:351:8\n+   |\n+LL |     if a == 1 {\n+   |        ^^^^^^\n \n error: this `if` has the same condition as a previous if\n-   --> $DIR/copies.rs:358:15\n-    |\n-358 |     } else if 2 * a == 1 {\n-    |               ^^^^^^^^^^\n-    |\n+  --> $DIR/copies.rs:358:15\n+   |\n+LL |     } else if 2 * a == 1 {\n+   |               ^^^^^^^^^^\n+   |\n note: same as this\n-   --> $DIR/copies.rs:356:8\n-    |\n-356 |     if 2 * a == 1 {\n-    |        ^^^^^^^^^^\n+  --> $DIR/copies.rs:356:8\n+   |\n+LL |     if 2 * a == 1 {\n+   |        ^^^^^^^^^^\n \n error: aborting due to 20 previous errors\n "}, {"sha": "34606df8595928a5f283c348e41faa37430d6d52", "filename": "tests/ui/copy_iterator.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fcopy_iterator.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fcopy_iterator.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcopy_iterator.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,13 +1,13 @@\n error: you are implementing `Iterator` on a `Copy` type\n   --> $DIR/copy_iterator.rs:15:1\n    |\n-15 | / impl Iterator for Countdown {\n-16 | |     type Item = u8;\n-17 | |\n-18 | |     fn next(&mut self) -> Option<u8> {\n+LL | / impl Iterator for Countdown {\n+LL | |     type Item = u8;\n+LL | |\n+LL | |     fn next(&mut self) -> Option<u8> {\n ...  |\n-23 | |     }\n-24 | | }\n+LL | |     }\n+LL | | }\n    | |_^\n    |\n    = note: `-D clippy::copy-iterator` implied by `-D warnings`"}, {"sha": "d2968eb9d180e7447bf5efc1fdbc1f9be7eacfef", "filename": "tests/ui/cstring.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fcstring.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fcstring.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcstring.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,15 +1,15 @@\n error: you are getting the inner pointer of a temporary `CString`\n   --> $DIR/cstring.rs:16:5\n    |\n-16 |     CString::new(\"foo\").unwrap().as_ptr();\n+LL |     CString::new(\"foo\").unwrap().as_ptr();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: #[deny(clippy::temporary_cstring_as_ptr)] on by default\n    = note: that pointer will be invalid outside this expression\n help: assign the `CString` to a variable to extend its lifetime\n   --> $DIR/cstring.rs:16:5\n    |\n-16 |     CString::new(\"foo\").unwrap().as_ptr();\n+LL |     CString::new(\"foo\").unwrap().as_ptr();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to previous error"}, {"sha": "f8e3a54debda375e55b5c50a6d90ae804c18ded1", "filename": "tests/ui/cyclomatic_complexity.stderr", "status": "modified", "additions": 223, "deletions": 223, "changes": 446, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fcyclomatic_complexity.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fcyclomatic_complexity.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcyclomatic_complexity.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,272 +1,272 @@\n error: the function has a cyclomatic complexity of 28\n   --> $DIR/cyclomatic_complexity.rs:15:1\n    |\n-15 | / fn main() {\n-16 | |     if true {\n-17 | |         println!(\"a\");\n-18 | |     }\n+LL | / fn main() {\n+LL | |     if true {\n+LL | |         println!(\"a\");\n+LL | |     }\n ...  |\n-96 | |     }\n-97 | | }\n+LL | |     }\n+LL | | }\n    | |_^\n    |\n    = note: `-D clippy::cyclomatic-complexity` implied by `-D warnings`\n    = help: you could split it up into multiple smaller functions\n \n error: the function has a cyclomatic complexity of 7\n-   --> $DIR/cyclomatic_complexity.rs:100:1\n-    |\n-100 | / fn kaboom() {\n-101 | |     let n = 0;\n-102 | |     'a: for i in 0..20 {\n-103 | |         'b: for j in i..20 {\n-...   |\n-118 | |     }\n-119 | | }\n-    | |_^\n-    |\n-    = help: you could split it up into multiple smaller functions\n+  --> $DIR/cyclomatic_complexity.rs:100:1\n+   |\n+LL | / fn kaboom() {\n+LL | |     let n = 0;\n+LL | |     'a: for i in 0..20 {\n+LL | |         'b: for j in i..20 {\n+...  |\n+LL | |     }\n+LL | | }\n+   | |_^\n+   |\n+   = help: you could split it up into multiple smaller functions\n \n error: the function has a cyclomatic complexity of 1\n-   --> $DIR/cyclomatic_complexity.rs:146:1\n-    |\n-146 | / fn lots_of_short_circuits() -> bool {\n-147 | |     true && false && true && false && true && false && true\n-148 | | }\n-    | |_^\n-    |\n-    = help: you could split it up into multiple smaller functions\n+  --> $DIR/cyclomatic_complexity.rs:146:1\n+   |\n+LL | / fn lots_of_short_circuits() -> bool {\n+LL | |     true && false && true && false && true && false && true\n+LL | | }\n+   | |_^\n+   |\n+   = help: you could split it up into multiple smaller functions\n \n error: the function has a cyclomatic complexity of 1\n-   --> $DIR/cyclomatic_complexity.rs:151:1\n-    |\n-151 | / fn lots_of_short_circuits2() -> bool {\n-152 | |     true || false || true || false || true || false || true\n-153 | | }\n-    | |_^\n-    |\n-    = help: you could split it up into multiple smaller functions\n+  --> $DIR/cyclomatic_complexity.rs:151:1\n+   |\n+LL | / fn lots_of_short_circuits2() -> bool {\n+LL | |     true || false || true || false || true || false || true\n+LL | | }\n+   | |_^\n+   |\n+   = help: you could split it up into multiple smaller functions\n \n error: the function has a cyclomatic complexity of 2\n-   --> $DIR/cyclomatic_complexity.rs:156:1\n-    |\n-156 | / fn baa() {\n-157 | |     let x = || match 99 {\n-158 | |         0 => 0,\n-159 | |         1 => 1,\n-...   |\n-170 | |     }\n-171 | | }\n-    | |_^\n-    |\n-    = help: you could split it up into multiple smaller functions\n+  --> $DIR/cyclomatic_complexity.rs:156:1\n+   |\n+LL | / fn baa() {\n+LL | |     let x = || match 99 {\n+LL | |         0 => 0,\n+LL | |         1 => 1,\n+...  |\n+LL | |     }\n+LL | | }\n+   | |_^\n+   |\n+   = help: you could split it up into multiple smaller functions\n \n error: the function has a cyclomatic complexity of 2\n-   --> $DIR/cyclomatic_complexity.rs:157:13\n-    |\n-157 |       let x = || match 99 {\n-    |  _____________^\n-158 | |         0 => 0,\n-159 | |         1 => 1,\n-160 | |         2 => 2,\n-...   |\n-164 | |         _ => 42,\n-165 | |     };\n-    | |_____^\n-    |\n-    = help: you could split it up into multiple smaller functions\n+  --> $DIR/cyclomatic_complexity.rs:157:13\n+   |\n+LL |       let x = || match 99 {\n+   |  _____________^\n+LL | |         0 => 0,\n+LL | |         1 => 1,\n+LL | |         2 => 2,\n+...  |\n+LL | |         _ => 42,\n+LL | |     };\n+   | |_____^\n+   |\n+   = help: you could split it up into multiple smaller functions\n \n error: the function has a cyclomatic complexity of 2\n-   --> $DIR/cyclomatic_complexity.rs:174:1\n-    |\n-174 | / fn bar() {\n-175 | |     match 99 {\n-176 | |         0 => println!(\"hi\"),\n-177 | |         _ => println!(\"bye\"),\n-178 | |     }\n-179 | | }\n-    | |_^\n-    |\n-    = help: you could split it up into multiple smaller functions\n+  --> $DIR/cyclomatic_complexity.rs:174:1\n+   |\n+LL | / fn bar() {\n+LL | |     match 99 {\n+LL | |         0 => println!(\"hi\"),\n+LL | |         _ => println!(\"bye\"),\n+LL | |     }\n+LL | | }\n+   | |_^\n+   |\n+   = help: you could split it up into multiple smaller functions\n \n error: the function has a cyclomatic complexity of 2\n-   --> $DIR/cyclomatic_complexity.rs:193:1\n-    |\n-193 | / fn barr() {\n-194 | |     match 99 {\n-195 | |         0 => println!(\"hi\"),\n-196 | |         1 => println!(\"bla\"),\n-...   |\n-199 | |     }\n-200 | | }\n-    | |_^\n-    |\n-    = help: you could split it up into multiple smaller functions\n+  --> $DIR/cyclomatic_complexity.rs:193:1\n+   |\n+LL | / fn barr() {\n+LL | |     match 99 {\n+LL | |         0 => println!(\"hi\"),\n+LL | |         1 => println!(\"bla\"),\n+...  |\n+LL | |     }\n+LL | | }\n+   | |_^\n+   |\n+   = help: you could split it up into multiple smaller functions\n \n error: the function has a cyclomatic complexity of 3\n-   --> $DIR/cyclomatic_complexity.rs:203:1\n-    |\n-203 | / fn barr2() {\n-204 | |     match 99 {\n-205 | |         0 => println!(\"hi\"),\n-206 | |         1 => println!(\"bla\"),\n-...   |\n-215 | |     }\n-216 | | }\n-    | |_^\n-    |\n-    = help: you could split it up into multiple smaller functions\n+  --> $DIR/cyclomatic_complexity.rs:203:1\n+   |\n+LL | / fn barr2() {\n+LL | |     match 99 {\n+LL | |         0 => println!(\"hi\"),\n+LL | |         1 => println!(\"bla\"),\n+...  |\n+LL | |     }\n+LL | | }\n+   | |_^\n+   |\n+   = help: you could split it up into multiple smaller functions\n \n error: the function has a cyclomatic complexity of 2\n-   --> $DIR/cyclomatic_complexity.rs:219:1\n-    |\n-219 | / fn barrr() {\n-220 | |     match 99 {\n-221 | |         0 => println!(\"hi\"),\n-222 | |         1 => panic!(\"bla\"),\n-...   |\n-225 | |     }\n-226 | | }\n-    | |_^\n-    |\n-    = help: you could split it up into multiple smaller functions\n+  --> $DIR/cyclomatic_complexity.rs:219:1\n+   |\n+LL | / fn barrr() {\n+LL | |     match 99 {\n+LL | |         0 => println!(\"hi\"),\n+LL | |         1 => panic!(\"bla\"),\n+...  |\n+LL | |     }\n+LL | | }\n+   | |_^\n+   |\n+   = help: you could split it up into multiple smaller functions\n \n error: the function has a cyclomatic complexity of 3\n-   --> $DIR/cyclomatic_complexity.rs:229:1\n-    |\n-229 | / fn barrr2() {\n-230 | |     match 99 {\n-231 | |         0 => println!(\"hi\"),\n-232 | |         1 => panic!(\"bla\"),\n-...   |\n-241 | |     }\n-242 | | }\n-    | |_^\n-    |\n-    = help: you could split it up into multiple smaller functions\n+  --> $DIR/cyclomatic_complexity.rs:229:1\n+   |\n+LL | / fn barrr2() {\n+LL | |     match 99 {\n+LL | |         0 => println!(\"hi\"),\n+LL | |         1 => panic!(\"bla\"),\n+...  |\n+LL | |     }\n+LL | | }\n+   | |_^\n+   |\n+   = help: you could split it up into multiple smaller functions\n \n error: the function has a cyclomatic complexity of 2\n-   --> $DIR/cyclomatic_complexity.rs:245:1\n-    |\n-245 | / fn barrrr() {\n-246 | |     match 99 {\n-247 | |         0 => println!(\"hi\"),\n-248 | |         1 => println!(\"bla\"),\n-...   |\n-251 | |     }\n-252 | | }\n-    | |_^\n-    |\n-    = help: you could split it up into multiple smaller functions\n+  --> $DIR/cyclomatic_complexity.rs:245:1\n+   |\n+LL | / fn barrrr() {\n+LL | |     match 99 {\n+LL | |         0 => println!(\"hi\"),\n+LL | |         1 => println!(\"bla\"),\n+...  |\n+LL | |     }\n+LL | | }\n+   | |_^\n+   |\n+   = help: you could split it up into multiple smaller functions\n \n error: the function has a cyclomatic complexity of 3\n-   --> $DIR/cyclomatic_complexity.rs:255:1\n-    |\n-255 | / fn barrrr2() {\n-256 | |     match 99 {\n-257 | |         0 => println!(\"hi\"),\n-258 | |         1 => println!(\"bla\"),\n-...   |\n-267 | |     }\n-268 | | }\n-    | |_^\n-    |\n-    = help: you could split it up into multiple smaller functions\n+  --> $DIR/cyclomatic_complexity.rs:255:1\n+   |\n+LL | / fn barrrr2() {\n+LL | |     match 99 {\n+LL | |         0 => println!(\"hi\"),\n+LL | |         1 => println!(\"bla\"),\n+...  |\n+LL | |     }\n+LL | | }\n+   | |_^\n+   |\n+   = help: you could split it up into multiple smaller functions\n \n error: the function has a cyclomatic complexity of 2\n-   --> $DIR/cyclomatic_complexity.rs:271:1\n-    |\n-271 | / fn cake() {\n-272 | |     if 4 == 5 {\n-273 | |         println!(\"yea\");\n-274 | |     } else {\n-...   |\n-277 | |     println!(\"whee\");\n-278 | | }\n-    | |_^\n-    |\n-    = help: you could split it up into multiple smaller functions\n+  --> $DIR/cyclomatic_complexity.rs:271:1\n+   |\n+LL | / fn cake() {\n+LL | |     if 4 == 5 {\n+LL | |         println!(\"yea\");\n+LL | |     } else {\n+...  |\n+LL | |     println!(\"whee\");\n+LL | | }\n+   | |_^\n+   |\n+   = help: you could split it up into multiple smaller functions\n \n error: the function has a cyclomatic complexity of 4\n-   --> $DIR/cyclomatic_complexity.rs:281:1\n-    |\n-281 | / pub fn read_file(input_path: &str) -> String {\n-282 | |     use std::fs::File;\n-283 | |     use std::io::{Read, Write};\n-284 | |     use std::path::Path;\n-...   |\n-306 | |     }\n-307 | | }\n-    | |_^\n-    |\n-    = help: you could split it up into multiple smaller functions\n+  --> $DIR/cyclomatic_complexity.rs:281:1\n+   |\n+LL | / pub fn read_file(input_path: &str) -> String {\n+LL | |     use std::fs::File;\n+LL | |     use std::io::{Read, Write};\n+LL | |     use std::path::Path;\n+...  |\n+LL | |     }\n+LL | | }\n+   | |_^\n+   |\n+   = help: you could split it up into multiple smaller functions\n \n error: the function has a cyclomatic complexity of 1\n-   --> $DIR/cyclomatic_complexity.rs:312:1\n-    |\n-312 | / fn void(void: Void) {\n-313 | |     if true {\n-314 | |         match void {}\n-315 | |     }\n-316 | | }\n-    | |_^\n-    |\n-    = help: you could split it up into multiple smaller functions\n+  --> $DIR/cyclomatic_complexity.rs:312:1\n+   |\n+LL | / fn void(void: Void) {\n+LL | |     if true {\n+LL | |         match void {}\n+LL | |     }\n+LL | | }\n+   | |_^\n+   |\n+   = help: you could split it up into multiple smaller functions\n \n error: the function has a cyclomatic complexity of 1\n-   --> $DIR/cyclomatic_complexity.rs:325:1\n-    |\n-325 | / fn try() -> Result<i32, &'static str> {\n-326 | |     match 5 {\n-327 | |         5 => Ok(5),\n-328 | |         _ => return Err(\"bla\"),\n-329 | |     }\n-330 | | }\n-    | |_^\n-    |\n-    = help: you could split it up into multiple smaller functions\n+  --> $DIR/cyclomatic_complexity.rs:325:1\n+   |\n+LL | / fn try() -> Result<i32, &'static str> {\n+LL | |     match 5 {\n+LL | |         5 => Ok(5),\n+LL | |         _ => return Err(\"bla\"),\n+LL | |     }\n+LL | | }\n+   | |_^\n+   |\n+   = help: you could split it up into multiple smaller functions\n \n error: the function has a cyclomatic complexity of 1\n-   --> $DIR/cyclomatic_complexity.rs:333:1\n-    |\n-333 | / fn try_again() -> Result<i32, &'static str> {\n-334 | |     let _ = try!(Ok(42));\n-335 | |     let _ = try!(Ok(43));\n-336 | |     let _ = try!(Ok(44));\n-...   |\n-345 | |     }\n-346 | | }\n-    | |_^\n-    |\n-    = help: you could split it up into multiple smaller functions\n+  --> $DIR/cyclomatic_complexity.rs:333:1\n+   |\n+LL | / fn try_again() -> Result<i32, &'static str> {\n+LL | |     let _ = try!(Ok(42));\n+LL | |     let _ = try!(Ok(43));\n+LL | |     let _ = try!(Ok(44));\n+...  |\n+LL | |     }\n+LL | | }\n+   | |_^\n+   |\n+   = help: you could split it up into multiple smaller functions\n \n error: the function has a cyclomatic complexity of 1\n-   --> $DIR/cyclomatic_complexity.rs:349:1\n-    |\n-349 | / fn early() -> Result<i32, &'static str> {\n-350 | |     return Ok(5);\n-351 | |     return Ok(5);\n-352 | |     return Ok(5);\n-...   |\n-358 | |     return Ok(5);\n-359 | | }\n-    | |_^\n-    |\n-    = help: you could split it up into multiple smaller functions\n+  --> $DIR/cyclomatic_complexity.rs:349:1\n+   |\n+LL | / fn early() -> Result<i32, &'static str> {\n+LL | |     return Ok(5);\n+LL | |     return Ok(5);\n+LL | |     return Ok(5);\n+...  |\n+LL | |     return Ok(5);\n+LL | | }\n+   | |_^\n+   |\n+   = help: you could split it up into multiple smaller functions\n \n error: the function has a cyclomatic complexity of 8\n-   --> $DIR/cyclomatic_complexity.rs:363:1\n-    |\n-363 | / fn early_ret() -> i32 {\n-364 | |     let a = if true { 42 } else { return 0; };\n-365 | |     let a = if a < 99 { 42 } else { return 0; };\n-366 | |     let a = if a < 99 { 42 } else { return 0; };\n-...   |\n-379 | |     }\n-380 | | }\n-    | |_^\n-    |\n-    = help: you could split it up into multiple smaller functions\n+  --> $DIR/cyclomatic_complexity.rs:363:1\n+   |\n+LL | / fn early_ret() -> i32 {\n+LL | |     let a = if true { 42 } else { return 0; };\n+LL | |     let a = if a < 99 { 42 } else { return 0; };\n+LL | |     let a = if a < 99 { 42 } else { return 0; };\n+...  |\n+LL | |     }\n+LL | | }\n+   | |_^\n+   |\n+   = help: you could split it up into multiple smaller functions\n \n error: aborting due to 20 previous errors\n "}, {"sha": "dde803880cabb77a25a81340d4ee5d44a9b08534", "filename": "tests/ui/cyclomatic_complexity_attr_used.stderr", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fcyclomatic_complexity_attr_used.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fcyclomatic_complexity_attr_used.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcyclomatic_complexity_attr_used.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,13 +1,13 @@\n error: the function has a cyclomatic complexity of 3\n   --> $DIR/cyclomatic_complexity_attr_used.rs:18:1\n    |\n-18 | / fn kaboom() {\n-19 | |     if 42 == 43 {\n-20 | |         panic!();\n-21 | |     } else if \"cake\" == \"lie\" {\n-22 | |         println!(\"what?\");\n-23 | |     }\n-24 | | }\n+LL | / fn kaboom() {\n+LL | |     if 42 == 43 {\n+LL | |         panic!();\n+LL | |     } else if \"cake\" == \"lie\" {\n+LL | |         println!(\"what?\");\n+LL | |     }\n+LL | | }\n    | |_^\n    |\n    = note: `-D clippy::cyclomatic-complexity` implied by `-D warnings`"}, {"sha": "cc908ca11f35830dd1b2774725cceace676ff25b", "filename": "tests/ui/decimal_literal_representation.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fdecimal_literal_representation.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fdecimal_literal_representation.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdecimal_literal_representation.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,33 +1,33 @@\n error: integer literal has a better hexadecimal representation\n   --> $DIR/decimal_literal_representation.rs:25:9\n    |\n-25 |         32_773,        // 0x8005\n+LL |         32_773,        // 0x8005\n    |         ^^^^^^ help: consider: `0x8005`\n    |\n    = note: `-D clippy::decimal-literal-representation` implied by `-D warnings`\n \n error: integer literal has a better hexadecimal representation\n   --> $DIR/decimal_literal_representation.rs:26:9\n    |\n-26 |         65_280,        // 0xFF00\n+LL |         65_280,        // 0xFF00\n    |         ^^^^^^ help: consider: `0xFF00`\n \n error: integer literal has a better hexadecimal representation\n   --> $DIR/decimal_literal_representation.rs:27:9\n    |\n-27 |         2_131_750_927, // 0x7F0F_F00F\n+LL |         2_131_750_927, // 0x7F0F_F00F\n    |         ^^^^^^^^^^^^^ help: consider: `0x7F0F_F00F`\n \n error: integer literal has a better hexadecimal representation\n   --> $DIR/decimal_literal_representation.rs:28:9\n    |\n-28 |         2_147_483_647, // 0x7FFF_FFFF\n+LL |         2_147_483_647, // 0x7FFF_FFFF\n    |         ^^^^^^^^^^^^^ help: consider: `0x7FFF_FFFF`\n \n error: integer literal has a better hexadecimal representation\n   --> $DIR/decimal_literal_representation.rs:29:9\n    |\n-29 |         4_042_322_160, // 0xF0F0_F0F0\n+LL |         4_042_322_160, // 0xF0F0_F0F0\n    |         ^^^^^^^^^^^^^ help: consider: `0xF0F0_F0F0`\n \n error: aborting due to 5 previous errors"}, {"sha": "9fcf359b72fc3200e955fa4712e172793afba1c8", "filename": "tests/ui/default_trait_access.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fdefault_trait_access.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fdefault_trait_access.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdefault_trait_access.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,51 +1,51 @@\n error: Calling std::string::String::default() is more clear than this expression\n   --> $DIR/default_trait_access.rs:17:22\n    |\n-17 |     let s1: String = Default::default();\n+LL |     let s1: String = Default::default();\n    |                      ^^^^^^^^^^^^^^^^^^ help: try: `std::string::String::default()`\n    |\n    = note: `-D clippy::default-trait-access` implied by `-D warnings`\n \n error: Calling std::string::String::default() is more clear than this expression\n   --> $DIR/default_trait_access.rs:21:22\n    |\n-21 |     let s3: String = D2::default();\n+LL |     let s3: String = D2::default();\n    |                      ^^^^^^^^^^^^^ help: try: `std::string::String::default()`\n \n error: Calling std::string::String::default() is more clear than this expression\n   --> $DIR/default_trait_access.rs:23:22\n    |\n-23 |     let s4: String = std::default::Default::default();\n+LL |     let s4: String = std::default::Default::default();\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::string::String::default()`\n \n error: Calling std::string::String::default() is more clear than this expression\n   --> $DIR/default_trait_access.rs:27:22\n    |\n-27 |     let s6: String = default::Default::default();\n+LL |     let s6: String = default::Default::default();\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::string::String::default()`\n \n error: Calling GenericDerivedDefault<std::string::String>::default() is more clear than this expression\n   --> $DIR/default_trait_access.rs:37:46\n    |\n-37 |     let s11: GenericDerivedDefault<String> = Default::default();\n+LL |     let s11: GenericDerivedDefault<String> = Default::default();\n    |                                              ^^^^^^^^^^^^^^^^^^ help: try: `GenericDerivedDefault<std::string::String>::default()`\n \n error: Calling TupleDerivedDefault::default() is more clear than this expression\n   --> $DIR/default_trait_access.rs:43:36\n    |\n-43 |     let s14: TupleDerivedDefault = Default::default();\n+LL |     let s14: TupleDerivedDefault = Default::default();\n    |                                    ^^^^^^^^^^^^^^^^^^ help: try: `TupleDerivedDefault::default()`\n \n error: Calling ArrayDerivedDefault::default() is more clear than this expression\n   --> $DIR/default_trait_access.rs:45:36\n    |\n-45 |     let s15: ArrayDerivedDefault = Default::default();\n+LL |     let s15: ArrayDerivedDefault = Default::default();\n    |                                    ^^^^^^^^^^^^^^^^^^ help: try: `ArrayDerivedDefault::default()`\n \n error: Calling TupleStructDerivedDefault::default() is more clear than this expression\n   --> $DIR/default_trait_access.rs:49:42\n    |\n-49 |     let s17: TupleStructDerivedDefault = Default::default();\n+LL |     let s17: TupleStructDerivedDefault = Default::default();\n    |                                          ^^^^^^^^^^^^^^^^^^ help: try: `TupleStructDerivedDefault::default()`\n \n error: aborting due to 8 previous errors"}, {"sha": "3d1f016b9b952b148a473ceec3dca7627410cd35", "filename": "tests/ui/deprecated.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fdeprecated.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fdeprecated.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdeprecated.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,33 +1,33 @@\n error: lint `str_to_string` has been removed: `using `str::to_string` is common even today and specialization will likely happen soon`\n   --> $DIR/deprecated.rs:10:8\n    |\n-10 | #[warn(str_to_string)]\n+LL | #[warn(str_to_string)]\n    |        ^^^^^^^^^^^^^\n    |\n    = note: `-D renamed-and-removed-lints` implied by `-D warnings`\n \n error: lint `string_to_string` has been removed: `using `string::to_string` is common even today and specialization will likely happen soon`\n   --> $DIR/deprecated.rs:11:8\n    |\n-11 | #[warn(string_to_string)]\n+LL | #[warn(string_to_string)]\n    |        ^^^^^^^^^^^^^^^^\n \n error: lint `unstable_as_slice` has been removed: ``Vec::as_slice` has been stabilized in 1.7`\n   --> $DIR/deprecated.rs:12:8\n    |\n-12 | #[warn(unstable_as_slice)]\n+LL | #[warn(unstable_as_slice)]\n    |        ^^^^^^^^^^^^^^^^^\n \n error: lint `unstable_as_mut_slice` has been removed: ``Vec::as_mut_slice` has been stabilized in 1.7`\n   --> $DIR/deprecated.rs:13:8\n    |\n-13 | #[warn(unstable_as_mut_slice)]\n+LL | #[warn(unstable_as_mut_slice)]\n    |        ^^^^^^^^^^^^^^^^^^^^^\n \n error: lint `misaligned_transmute` has been removed: `this lint has been split into cast_ptr_alignment and transmute_ptr_to_ptr`\n   --> $DIR/deprecated.rs:14:8\n    |\n-14 | #[warn(misaligned_transmute)]\n+LL | #[warn(misaligned_transmute)]\n    |        ^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 5 previous errors"}, {"sha": "b9629005597f65a91d5394bb5b37807ab3678e96", "filename": "tests/ui/derive.stderr", "status": "modified", "additions": 63, "deletions": 63, "changes": 126, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fderive.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fderive.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fderive.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,130 +1,130 @@\n error: you are deriving `Hash` but have implemented `PartialEq` explicitly\n   --> $DIR/derive.rs:25:10\n    |\n-25 | #[derive(Hash)]\n+LL | #[derive(Hash)]\n    |          ^^^^\n    |\n    = note: #[deny(clippy::derive_hash_xor_eq)] on by default\n note: `PartialEq` implemented here\n   --> $DIR/derive.rs:28:1\n    |\n-28 | / impl PartialEq for Bar {\n-29 | |     fn eq(&self, _: &Bar) -> bool {\n-30 | |         true\n-31 | |     }\n-32 | | }\n+LL | / impl PartialEq for Bar {\n+LL | |     fn eq(&self, _: &Bar) -> bool {\n+LL | |         true\n+LL | |     }\n+LL | | }\n    | |_^\n \n error: you are deriving `Hash` but have implemented `PartialEq` explicitly\n   --> $DIR/derive.rs:34:10\n    |\n-34 | #[derive(Hash)]\n+LL | #[derive(Hash)]\n    |          ^^^^\n    |\n note: `PartialEq` implemented here\n   --> $DIR/derive.rs:37:1\n    |\n-37 | / impl PartialEq<Baz> for Baz {\n-38 | |     fn eq(&self, _: &Baz) -> bool {\n-39 | |         true\n-40 | |     }\n-41 | | }\n+LL | / impl PartialEq<Baz> for Baz {\n+LL | |     fn eq(&self, _: &Baz) -> bool {\n+LL | |         true\n+LL | |     }\n+LL | | }\n    | |_^\n \n error: you are implementing `Hash` explicitly but have derived `PartialEq`\n   --> $DIR/derive.rs:46:1\n    |\n-46 | / impl Hash for Bah {\n-47 | |     fn hash<H: Hasher>(&self, _: &mut H) {}\n-48 | | }\n+LL | / impl Hash for Bah {\n+LL | |     fn hash<H: Hasher>(&self, _: &mut H) {}\n+LL | | }\n    | |_^\n    |\n note: `PartialEq` implemented here\n   --> $DIR/derive.rs:43:10\n    |\n-43 | #[derive(PartialEq)]\n+LL | #[derive(PartialEq)]\n    |          ^^^^^^^^^\n \n error: you are implementing `Clone` explicitly on a `Copy` type\n   --> $DIR/derive.rs:53:1\n    |\n-53 | / impl Clone for Qux {\n-54 | |     fn clone(&self) -> Self {\n-55 | |         Qux\n-56 | |     }\n-57 | | }\n+LL | / impl Clone for Qux {\n+LL | |     fn clone(&self) -> Self {\n+LL | |         Qux\n+LL | |     }\n+LL | | }\n    | |_^\n    |\n    = note: `-D clippy::expl-impl-clone-on-copy` implied by `-D warnings`\n note: consider deriving `Clone` or removing `Copy`\n   --> $DIR/derive.rs:53:1\n    |\n-53 | / impl Clone for Qux {\n-54 | |     fn clone(&self) -> Self {\n-55 | |         Qux\n-56 | |     }\n-57 | | }\n+LL | / impl Clone for Qux {\n+LL | |     fn clone(&self) -> Self {\n+LL | |         Qux\n+LL | |     }\n+LL | | }\n    | |_^\n \n error: you are implementing `Clone` explicitly on a `Copy` type\n   --> $DIR/derive.rs:77:1\n    |\n-77 | / impl<'a> Clone for Lt<'a> {\n-78 | |     fn clone(&self) -> Self {\n-79 | |         unimplemented!()\n-80 | |     }\n-81 | | }\n+LL | / impl<'a> Clone for Lt<'a> {\n+LL | |     fn clone(&self) -> Self {\n+LL | |         unimplemented!()\n+LL | |     }\n+LL | | }\n    | |_^\n    |\n note: consider deriving `Clone` or removing `Copy`\n   --> $DIR/derive.rs:77:1\n    |\n-77 | / impl<'a> Clone for Lt<'a> {\n-78 | |     fn clone(&self) -> Self {\n-79 | |         unimplemented!()\n-80 | |     }\n-81 | | }\n+LL | / impl<'a> Clone for Lt<'a> {\n+LL | |     fn clone(&self) -> Self {\n+LL | |         unimplemented!()\n+LL | |     }\n+LL | | }\n    | |_^\n \n error: you are implementing `Clone` explicitly on a `Copy` type\n   --> $DIR/derive.rs:89:1\n    |\n-89 | / impl Clone for BigArray {\n-90 | |     fn clone(&self) -> Self {\n-91 | |         unimplemented!()\n-92 | |     }\n-93 | | }\n+LL | / impl Clone for BigArray {\n+LL | |     fn clone(&self) -> Self {\n+LL | |         unimplemented!()\n+LL | |     }\n+LL | | }\n    | |_^\n    |\n note: consider deriving `Clone` or removing `Copy`\n   --> $DIR/derive.rs:89:1\n    |\n-89 | / impl Clone for BigArray {\n-90 | |     fn clone(&self) -> Self {\n-91 | |         unimplemented!()\n-92 | |     }\n-93 | | }\n+LL | / impl Clone for BigArray {\n+LL | |     fn clone(&self) -> Self {\n+LL | |         unimplemented!()\n+LL | |     }\n+LL | | }\n    | |_^\n \n error: you are implementing `Clone` explicitly on a `Copy` type\n-   --> $DIR/derive.rs:101:1\n-    |\n-101 | / impl Clone for FnPtr {\n-102 | |     fn clone(&self) -> Self {\n-103 | |         unimplemented!()\n-104 | |     }\n-105 | | }\n-    | |_^\n-    |\n+  --> $DIR/derive.rs:101:1\n+   |\n+LL | / impl Clone for FnPtr {\n+LL | |     fn clone(&self) -> Self {\n+LL | |         unimplemented!()\n+LL | |     }\n+LL | | }\n+   | |_^\n+   |\n note: consider deriving `Clone` or removing `Copy`\n-   --> $DIR/derive.rs:101:1\n-    |\n-101 | / impl Clone for FnPtr {\n-102 | |     fn clone(&self) -> Self {\n-103 | |         unimplemented!()\n-104 | |     }\n-105 | | }\n-    | |_^\n+  --> $DIR/derive.rs:101:1\n+   |\n+LL | / impl Clone for FnPtr {\n+LL | |     fn clone(&self) -> Self {\n+LL | |         unimplemented!()\n+LL | |     }\n+LL | | }\n+   | |_^\n \n error: aborting due to 7 previous errors\n "}, {"sha": "1cfec07c5603e5b1eb47ecd8bd44b1ebf25b2f93", "filename": "tests/ui/diverging_sub_expression.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fdiverging_sub_expression.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fdiverging_sub_expression.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdiverging_sub_expression.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,39 +1,39 @@\n error: sub-expression diverges\n   --> $DIR/diverging_sub_expression.rs:30:10\n    |\n-30 |     b || diverge();\n+LL |     b || diverge();\n    |          ^^^^^^^^^\n    |\n    = note: `-D clippy::diverging-sub-expression` implied by `-D warnings`\n \n error: sub-expression diverges\n   --> $DIR/diverging_sub_expression.rs:31:10\n    |\n-31 |     b || A.foo();\n+LL |     b || A.foo();\n    |          ^^^^^^^\n \n error: sub-expression diverges\n   --> $DIR/diverging_sub_expression.rs:40:26\n    |\n-40 |             6 => true || return,\n+LL |             6 => true || return,\n    |                          ^^^^^^\n \n error: sub-expression diverges\n   --> $DIR/diverging_sub_expression.rs:41:26\n    |\n-41 |             7 => true || continue,\n+LL |             7 => true || continue,\n    |                          ^^^^^^^^\n \n error: sub-expression diverges\n   --> $DIR/diverging_sub_expression.rs:44:26\n    |\n-44 |             3 => true || diverge(),\n+LL |             3 => true || diverge(),\n    |                          ^^^^^^^^^\n \n error: sub-expression diverges\n   --> $DIR/diverging_sub_expression.rs:49:26\n    |\n-49 |             _ => true || break,\n+LL |             _ => true || break,\n    |                          ^^^^^\n \n error: aborting due to 6 previous errors"}, {"sha": "6b0413fdf23905e1560cfa95a2e2881e03274d89", "filename": "tests/ui/dlist.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fdlist.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fdlist.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdlist.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,7 +1,7 @@\n error: I see you're using a LinkedList! Perhaps you meant some other data structure?\n   --> $DIR/dlist.rs:19:16\n    |\n-19 |     type Baz = LinkedList<u8>;\n+LL |     type Baz = LinkedList<u8>;\n    |                ^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::linkedlist` implied by `-D warnings`\n@@ -10,39 +10,39 @@ error: I see you're using a LinkedList! Perhaps you meant some other data struct\n error: I see you're using a LinkedList! Perhaps you meant some other data structure?\n   --> $DIR/dlist.rs:20:12\n    |\n-20 |     fn foo(LinkedList<u8>);\n+LL |     fn foo(LinkedList<u8>);\n    |            ^^^^^^^^^^^^^^\n    |\n    = help: a VecDeque might work\n \n error: I see you're using a LinkedList! Perhaps you meant some other data structure?\n   --> $DIR/dlist.rs:21:23\n    |\n-21 |     const BAR: Option<LinkedList<u8>>;\n+LL |     const BAR: Option<LinkedList<u8>>;\n    |                       ^^^^^^^^^^^^^^\n    |\n    = help: a VecDeque might work\n \n error: I see you're using a LinkedList! Perhaps you meant some other data structure?\n   --> $DIR/dlist.rs:32:15\n    |\n-32 |     fn foo(_: LinkedList<u8>) {}\n+LL |     fn foo(_: LinkedList<u8>) {}\n    |               ^^^^^^^^^^^^^^\n    |\n    = help: a VecDeque might work\n \n error: I see you're using a LinkedList! Perhaps you meant some other data structure?\n   --> $DIR/dlist.rs:35:39\n    |\n-35 | pub fn test(my_favourite_linked_list: LinkedList<u8>) {\n+LL | pub fn test(my_favourite_linked_list: LinkedList<u8>) {\n    |                                       ^^^^^^^^^^^^^^\n    |\n    = help: a VecDeque might work\n \n error: I see you're using a LinkedList! Perhaps you meant some other data structure?\n   --> $DIR/dlist.rs:39:29\n    |\n-39 | pub fn test_ret() -> Option<LinkedList<u8>> {\n+LL | pub fn test_ret() -> Option<LinkedList<u8>> {\n    |                             ^^^^^^^^^^^^^^\n    |\n    = help: a VecDeque might work"}, {"sha": "964e351348a45021c7bcda2e3b001c2c2421d39d", "filename": "tests/ui/doc.stderr", "status": "modified", "additions": 70, "deletions": 70, "changes": 140, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fdoc.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fdoc.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdoc.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,190 +1,190 @@\n error: you should put `DOC_MARKDOWN` between ticks in the documentation\n   --> $DIR/doc.rs:10:29\n    |\n-10 | //! This file tests for the DOC_MARKDOWN lint\n+LL | //! This file tests for the DOC_MARKDOWN lint\n    |                             ^^^^^^^^^^^^\n    |\n    = note: `-D clippy::doc-markdown` implied by `-D warnings`\n \n error: you should put `foo_bar` between ticks in the documentation\n   --> $DIR/doc.rs:15:9\n    |\n-15 | /// The foo_bar function does _nothing_. See also foo::bar. (note the dot there)\n+LL | /// The foo_bar function does _nothing_. See also foo::bar. (note the dot there)\n    |         ^^^^^^^\n \n error: you should put `foo::bar` between ticks in the documentation\n   --> $DIR/doc.rs:15:51\n    |\n-15 | /// The foo_bar function does _nothing_. See also foo::bar. (note the dot there)\n+LL | /// The foo_bar function does _nothing_. See also foo::bar. (note the dot there)\n    |                                                   ^^^^^^^^\n \n error: you should put `Foo::some_fun` between ticks in the documentation\n   --> $DIR/doc.rs:16:84\n    |\n-16 | /// Markdown is _weird_. I mean _really weird_.  This /_ is ok. So is `_`. But not Foo::some_fun\n+LL | /// Markdown is _weird_. I mean _really weird_.  This /_ is ok. So is `_`. But not Foo::some_fun\n    |                                                                                    ^^^^^^^^^^^^^\n \n error: you should put `a::global:path` between ticks in the documentation\n   --> $DIR/doc.rs:18:15\n    |\n-18 | /// Here be ::a::global:path.\n+LL | /// Here be ::a::global:path.\n    |               ^^^^^^^^^^^^^^\n \n error: you should put `NotInCodeBlock` between ticks in the documentation\n   --> $DIR/doc.rs:19:22\n    |\n-19 | /// That's not code ~NotInCodeBlock~.\n+LL | /// That's not code ~NotInCodeBlock~.\n    |                      ^^^^^^^^^^^^^^\n \n error: you should put `be_sure_we_got_to_the_end_of_it` between ticks in the documentation\n   --> $DIR/doc.rs:20:5\n    |\n-20 | /// be_sure_we_got_to_the_end_of_it\n+LL | /// be_sure_we_got_to_the_end_of_it\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: you should put `be_sure_we_got_to_the_end_of_it` between ticks in the documentation\n   --> $DIR/doc.rs:34:5\n    |\n-34 | /// be_sure_we_got_to_the_end_of_it\n+LL | /// be_sure_we_got_to_the_end_of_it\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: you should put `be_sure_we_got_to_the_end_of_it` between ticks in the documentation\n   --> $DIR/doc.rs:41:5\n    |\n-41 | /// be_sure_we_got_to_the_end_of_it\n+LL | /// be_sure_we_got_to_the_end_of_it\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: you should put `be_sure_we_got_to_the_end_of_it` between ticks in the documentation\n   --> $DIR/doc.rs:55:5\n    |\n-55 | /// be_sure_we_got_to_the_end_of_it\n+LL | /// be_sure_we_got_to_the_end_of_it\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: you should put `link_with_underscores` between ticks in the documentation\n   --> $DIR/doc.rs:59:22\n    |\n-59 | /// This test has [a link_with_underscores][chunked-example] inside it. See #823.\n+LL | /// This test has [a link_with_underscores][chunked-example] inside it. See #823.\n    |                      ^^^^^^^^^^^^^^^^^^^^^\n \n error: you should put `inline_link2` between ticks in the documentation\n   --> $DIR/doc.rs:62:21\n    |\n-62 | /// It can also be [inline_link2].\n+LL | /// It can also be [inline_link2].\n    |                     ^^^^^^^^^^^^\n \n error: you should put `be_sure_we_got_to_the_end_of_it` between ticks in the documentation\n   --> $DIR/doc.rs:72:5\n    |\n-72 | /// be_sure_we_got_to_the_end_of_it\n+LL | /// be_sure_we_got_to_the_end_of_it\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: you should put `CamelCaseThing` between ticks in the documentation\n   --> $DIR/doc.rs:80:8\n    |\n-80 | /// ## CamelCaseThing\n+LL | /// ## CamelCaseThing\n    |        ^^^^^^^^^^^^^^\n \n error: you should put `CamelCaseThing` between ticks in the documentation\n   --> $DIR/doc.rs:83:7\n    |\n-83 | /// # CamelCaseThing\n+LL | /// # CamelCaseThing\n    |       ^^^^^^^^^^^^^^\n \n error: you should put `CamelCaseThing` between ticks in the documentation\n   --> $DIR/doc.rs:85:22\n    |\n-85 | /// Not a title #897 CamelCaseThing\n+LL | /// Not a title #897 CamelCaseThing\n    |                      ^^^^^^^^^^^^^^\n \n error: you should put `be_sure_we_got_to_the_end_of_it` between ticks in the documentation\n   --> $DIR/doc.rs:86:5\n    |\n-86 | /// be_sure_we_got_to_the_end_of_it\n+LL | /// be_sure_we_got_to_the_end_of_it\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: you should put `be_sure_we_got_to_the_end_of_it` between ticks in the documentation\n   --> $DIR/doc.rs:93:5\n    |\n-93 | /// be_sure_we_got_to_the_end_of_it\n+LL | /// be_sure_we_got_to_the_end_of_it\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: you should put `be_sure_we_got_to_the_end_of_it` between ticks in the documentation\n-   --> $DIR/doc.rs:106:5\n-    |\n-106 | /// be_sure_we_got_to_the_end_of_it\n-    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+  --> $DIR/doc.rs:106:5\n+   |\n+LL | /// be_sure_we_got_to_the_end_of_it\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: you should put `FooBar` between ticks in the documentation\n-   --> $DIR/doc.rs:117:42\n-    |\n-117 | /** E.g. serialization of an empty list: FooBar\n-    |                                          ^^^^^^\n+  --> $DIR/doc.rs:117:42\n+   |\n+LL | /** E.g. serialization of an empty list: FooBar\n+   |                                          ^^^^^^\n \n error: you should put `BarQuz` between ticks in the documentation\n-   --> $DIR/doc.rs:122:5\n-    |\n-122 | And BarQuz too.\n-    |     ^^^^^^\n+  --> $DIR/doc.rs:122:5\n+   |\n+LL | And BarQuz too.\n+   |     ^^^^^^\n \n error: you should put `be_sure_we_got_to_the_end_of_it` between ticks in the documentation\n-   --> $DIR/doc.rs:123:1\n-    |\n-123 | be_sure_we_got_to_the_end_of_it\n-    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+  --> $DIR/doc.rs:123:1\n+   |\n+LL | be_sure_we_got_to_the_end_of_it\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: you should put `FooBar` between ticks in the documentation\n-   --> $DIR/doc.rs:128:42\n-    |\n-128 | /** E.g. serialization of an empty list: FooBar\n-    |                                          ^^^^^^\n+  --> $DIR/doc.rs:128:42\n+   |\n+LL | /** E.g. serialization of an empty list: FooBar\n+   |                                          ^^^^^^\n \n error: you should put `BarQuz` between ticks in the documentation\n-   --> $DIR/doc.rs:133:5\n-    |\n-133 | And BarQuz too.\n-    |     ^^^^^^\n+  --> $DIR/doc.rs:133:5\n+   |\n+LL | And BarQuz too.\n+   |     ^^^^^^\n \n error: you should put `be_sure_we_got_to_the_end_of_it` between ticks in the documentation\n-   --> $DIR/doc.rs:134:1\n-    |\n-134 | be_sure_we_got_to_the_end_of_it\n-    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+  --> $DIR/doc.rs:134:1\n+   |\n+LL | be_sure_we_got_to_the_end_of_it\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: you should put `be_sure_we_got_to_the_end_of_it` between ticks in the documentation\n-   --> $DIR/doc.rs:145:5\n-    |\n-145 | /// be_sure_we_got_to_the_end_of_it\n-    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+  --> $DIR/doc.rs:145:5\n+   |\n+LL | /// be_sure_we_got_to_the_end_of_it\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: you should put bare URLs between `<`/`>` or make a proper Markdown link\n-   --> $DIR/doc.rs:172:13\n-    |\n-172 | /// Not ok: http://www.unicode.org\n-    |             ^^^^^^^^^^^^^^^^^^^^^^\n+  --> $DIR/doc.rs:172:13\n+   |\n+LL | /// Not ok: http://www.unicode.org\n+   |             ^^^^^^^^^^^^^^^^^^^^^^\n \n error: you should put bare URLs between `<`/`>` or make a proper Markdown link\n-   --> $DIR/doc.rs:173:13\n-    |\n-173 | /// Not ok: https://www.unicode.org\n-    |             ^^^^^^^^^^^^^^^^^^^^^^^\n+  --> $DIR/doc.rs:173:13\n+   |\n+LL | /// Not ok: https://www.unicode.org\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^\n \n error: you should put bare URLs between `<`/`>` or make a proper Markdown link\n-   --> $DIR/doc.rs:174:13\n-    |\n-174 | /// Not ok: http://www.unicode.org/\n-    |             ^^^^^^^^^^^^^^^^^^^^^^\n+  --> $DIR/doc.rs:174:13\n+   |\n+LL | /// Not ok: http://www.unicode.org/\n+   |             ^^^^^^^^^^^^^^^^^^^^^^\n \n error: you should put bare URLs between `<`/`>` or make a proper Markdown link\n-   --> $DIR/doc.rs:175:13\n-    |\n-175 | /// Not ok: http://www.unicode.org/reports/tr9/#Reordering_Resolved_Levels\n-    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+  --> $DIR/doc.rs:175:13\n+   |\n+LL | /// Not ok: http://www.unicode.org/reports/tr9/#Reordering_Resolved_Levels\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: you should put `mycrate::Collection` between ticks in the documentation\n-   --> $DIR/doc.rs:181:22\n-    |\n-181 | /// An iterator over mycrate::Collection's values.\n-    |                      ^^^^^^^^^^^^^^^^^^^\n+  --> $DIR/doc.rs:181:22\n+   |\n+LL | /// An iterator over mycrate::Collection's values.\n+   |                      ^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 31 previous errors\n "}, {"sha": "f4ec229fbfdc3c677a7e7a601c50554aae6f855d", "filename": "tests/ui/double_comparison.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fdouble_comparison.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fdouble_comparison.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdouble_comparison.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,51 +1,51 @@\n error: This binary expression can be simplified\n   --> $DIR/double_comparison.rs:13:8\n    |\n-13 |     if x == y || x < y {\n+LL |     if x == y || x < y {\n    |        ^^^^^^^^^^^^^^^ help: try: `x <= y`\n    |\n    = note: `-D clippy::double-comparisons` implied by `-D warnings`\n \n error: This binary expression can be simplified\n   --> $DIR/double_comparison.rs:16:8\n    |\n-16 |     if x < y || x == y {\n+LL |     if x < y || x == y {\n    |        ^^^^^^^^^^^^^^^ help: try: `x <= y`\n \n error: This binary expression can be simplified\n   --> $DIR/double_comparison.rs:19:8\n    |\n-19 |     if x == y || x > y {\n+LL |     if x == y || x > y {\n    |        ^^^^^^^^^^^^^^^ help: try: `x >= y`\n \n error: This binary expression can be simplified\n   --> $DIR/double_comparison.rs:22:8\n    |\n-22 |     if x > y || x == y {\n+LL |     if x > y || x == y {\n    |        ^^^^^^^^^^^^^^^ help: try: `x >= y`\n \n error: This binary expression can be simplified\n   --> $DIR/double_comparison.rs:25:8\n    |\n-25 |     if x < y || x > y {\n+LL |     if x < y || x > y {\n    |        ^^^^^^^^^^^^^^ help: try: `x != y`\n \n error: This binary expression can be simplified\n   --> $DIR/double_comparison.rs:28:8\n    |\n-28 |     if x > y || x < y {\n+LL |     if x > y || x < y {\n    |        ^^^^^^^^^^^^^^ help: try: `x != y`\n \n error: This binary expression can be simplified\n   --> $DIR/double_comparison.rs:31:8\n    |\n-31 |     if x <= y && x >= y {\n+LL |     if x <= y && x >= y {\n    |        ^^^^^^^^^^^^^^^^ help: try: `x == y`\n \n error: This binary expression can be simplified\n   --> $DIR/double_comparison.rs:34:8\n    |\n-34 |     if x >= y && x <= y {\n+LL |     if x >= y && x <= y {\n    |        ^^^^^^^^^^^^^^^^ help: try: `x == y`\n \n error: aborting due to 8 previous errors"}, {"sha": "6ff18e5504d25b6d48fa3ceafc23c061075d7435", "filename": "tests/ui/double_neg.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fdouble_neg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fdouble_neg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdouble_neg.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,7 +1,7 @@\n error: `--x` could be misinterpreted as pre-decrement by C programmers, is usually a no-op\n   --> $DIR/double_neg.rs:15:5\n    |\n-15 |     --x;\n+LL |     --x;\n    |     ^^^\n    |\n    = note: `-D clippy::double-neg` implied by `-D warnings`"}, {"sha": "0e7f62ca3e3e8b4debdd40dc3507c1a26bd566ad", "filename": "tests/ui/double_parens.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fdouble_parens.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fdouble_parens.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdouble_parens.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,39 +1,39 @@\n error: Consider removing unnecessary double parentheses\n   --> $DIR/double_parens.rs:21:5\n    |\n-21 |     ((0))\n+LL |     ((0))\n    |     ^^^^^\n    |\n    = note: `-D clippy::double-parens` implied by `-D warnings`\n \n error: Consider removing unnecessary double parentheses\n   --> $DIR/double_parens.rs:25:14\n    |\n-25 |     dummy_fn((0));\n+LL |     dummy_fn((0));\n    |              ^^^\n \n error: Consider removing unnecessary double parentheses\n   --> $DIR/double_parens.rs:29:20\n    |\n-29 |     x.dummy_method((0));\n+LL |     x.dummy_method((0));\n    |                    ^^^\n \n error: Consider removing unnecessary double parentheses\n   --> $DIR/double_parens.rs:33:5\n    |\n-33 |     ((1, 2))\n+LL |     ((1, 2))\n    |     ^^^^^^^^\n \n error: Consider removing unnecessary double parentheses\n   --> $DIR/double_parens.rs:37:5\n    |\n-37 |     (())\n+LL |     (())\n    |     ^^^^\n \n error: Consider removing unnecessary double parentheses\n   --> $DIR/double_parens.rs:59:16\n    |\n-59 |     assert_eq!(((1, 2)), (1, 2), \"Error\");\n+LL |     assert_eq!(((1, 2)), (1, 2), \"Error\");\n    |                ^^^^^^^^\n \n error: aborting due to 6 previous errors"}, {"sha": "6fc69c4bcda6565c8b900771f2f3bd4014dff406", "filename": "tests/ui/drop_forget_copy.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fdrop_forget_copy.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fdrop_forget_copy.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdrop_forget_copy.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,75 +1,75 @@\n error: calls to `std::mem::drop` with a value that implements Copy. Dropping a copy leaves the original intact.\n   --> $DIR/drop_forget_copy.rs:42:5\n    |\n-42 |     drop(s1);\n+LL |     drop(s1);\n    |     ^^^^^^^^\n    |\n    = note: `-D clippy::drop-copy` implied by `-D warnings`\n note: argument has type SomeStruct\n   --> $DIR/drop_forget_copy.rs:42:10\n    |\n-42 |     drop(s1);\n+LL |     drop(s1);\n    |          ^^\n \n error: calls to `std::mem::drop` with a value that implements Copy. Dropping a copy leaves the original intact.\n   --> $DIR/drop_forget_copy.rs:43:5\n    |\n-43 |     drop(s2);\n+LL |     drop(s2);\n    |     ^^^^^^^^\n    |\n note: argument has type SomeStruct\n   --> $DIR/drop_forget_copy.rs:43:10\n    |\n-43 |     drop(s2);\n+LL |     drop(s2);\n    |          ^^\n \n error: calls to `std::mem::drop` with a value that implements Copy. Dropping a copy leaves the original intact.\n   --> $DIR/drop_forget_copy.rs:45:5\n    |\n-45 |     drop(s4);\n+LL |     drop(s4);\n    |     ^^^^^^^^\n    |\n note: argument has type SomeStruct\n   --> $DIR/drop_forget_copy.rs:45:10\n    |\n-45 |     drop(s4);\n+LL |     drop(s4);\n    |          ^^\n \n error: calls to `std::mem::forget` with a value that implements Copy. Forgetting a copy leaves the original intact.\n   --> $DIR/drop_forget_copy.rs:48:5\n    |\n-48 |     forget(s1);\n+LL |     forget(s1);\n    |     ^^^^^^^^^^\n    |\n    = note: `-D clippy::forget-copy` implied by `-D warnings`\n note: argument has type SomeStruct\n   --> $DIR/drop_forget_copy.rs:48:12\n    |\n-48 |     forget(s1);\n+LL |     forget(s1);\n    |            ^^\n \n error: calls to `std::mem::forget` with a value that implements Copy. Forgetting a copy leaves the original intact.\n   --> $DIR/drop_forget_copy.rs:49:5\n    |\n-49 |     forget(s2);\n+LL |     forget(s2);\n    |     ^^^^^^^^^^\n    |\n note: argument has type SomeStruct\n   --> $DIR/drop_forget_copy.rs:49:12\n    |\n-49 |     forget(s2);\n+LL |     forget(s2);\n    |            ^^\n \n error: calls to `std::mem::forget` with a value that implements Copy. Forgetting a copy leaves the original intact.\n   --> $DIR/drop_forget_copy.rs:51:5\n    |\n-51 |     forget(s4);\n+LL |     forget(s4);\n    |     ^^^^^^^^^^\n    |\n note: argument has type SomeStruct\n   --> $DIR/drop_forget_copy.rs:51:12\n    |\n-51 |     forget(s4);\n+LL |     forget(s4);\n    |            ^^\n \n error: aborting due to 6 previous errors"}, {"sha": "005adceca5039972e0c6d23dcbf15c88b7efa9c2", "filename": "tests/ui/drop_forget_ref.stderr", "status": "modified", "additions": 36, "deletions": 36, "changes": 72, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fdrop_forget_ref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fdrop_forget_ref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdrop_forget_ref.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,219 +1,219 @@\n error: calls to `std::mem::drop` with a reference instead of an owned value. Dropping a reference does nothing.\n   --> $DIR/drop_forget_ref.rs:18:5\n    |\n-18 |     drop(&SomeStruct);\n+LL |     drop(&SomeStruct);\n    |     ^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::drop-ref` implied by `-D warnings`\n note: argument has type &SomeStruct\n   --> $DIR/drop_forget_ref.rs:18:10\n    |\n-18 |     drop(&SomeStruct);\n+LL |     drop(&SomeStruct);\n    |          ^^^^^^^^^^^\n \n error: calls to `std::mem::forget` with a reference instead of an owned value. Forgetting a reference does nothing.\n   --> $DIR/drop_forget_ref.rs:19:5\n    |\n-19 |     forget(&SomeStruct);\n+LL |     forget(&SomeStruct);\n    |     ^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::forget-ref` implied by `-D warnings`\n note: argument has type &SomeStruct\n   --> $DIR/drop_forget_ref.rs:19:12\n    |\n-19 |     forget(&SomeStruct);\n+LL |     forget(&SomeStruct);\n    |            ^^^^^^^^^^^\n \n error: calls to `std::mem::drop` with a reference instead of an owned value. Dropping a reference does nothing.\n   --> $DIR/drop_forget_ref.rs:22:5\n    |\n-22 |     drop(&owned1);\n+LL |     drop(&owned1);\n    |     ^^^^^^^^^^^^^\n    |\n note: argument has type &SomeStruct\n   --> $DIR/drop_forget_ref.rs:22:10\n    |\n-22 |     drop(&owned1);\n+LL |     drop(&owned1);\n    |          ^^^^^^^\n \n error: calls to `std::mem::drop` with a reference instead of an owned value. Dropping a reference does nothing.\n   --> $DIR/drop_forget_ref.rs:23:5\n    |\n-23 |     drop(&&owned1);\n+LL |     drop(&&owned1);\n    |     ^^^^^^^^^^^^^^\n    |\n note: argument has type &&SomeStruct\n   --> $DIR/drop_forget_ref.rs:23:10\n    |\n-23 |     drop(&&owned1);\n+LL |     drop(&&owned1);\n    |          ^^^^^^^^\n \n error: calls to `std::mem::drop` with a reference instead of an owned value. Dropping a reference does nothing.\n   --> $DIR/drop_forget_ref.rs:24:5\n    |\n-24 |     drop(&mut owned1);\n+LL |     drop(&mut owned1);\n    |     ^^^^^^^^^^^^^^^^^\n    |\n note: argument has type &mut SomeStruct\n   --> $DIR/drop_forget_ref.rs:24:10\n    |\n-24 |     drop(&mut owned1);\n+LL |     drop(&mut owned1);\n    |          ^^^^^^^^^^^\n \n error: calls to `std::mem::forget` with a reference instead of an owned value. Forgetting a reference does nothing.\n   --> $DIR/drop_forget_ref.rs:27:5\n    |\n-27 |     forget(&owned2);\n+LL |     forget(&owned2);\n    |     ^^^^^^^^^^^^^^^\n    |\n note: argument has type &SomeStruct\n   --> $DIR/drop_forget_ref.rs:27:12\n    |\n-27 |     forget(&owned2);\n+LL |     forget(&owned2);\n    |            ^^^^^^^\n \n error: calls to `std::mem::forget` with a reference instead of an owned value. Forgetting a reference does nothing.\n   --> $DIR/drop_forget_ref.rs:28:5\n    |\n-28 |     forget(&&owned2);\n+LL |     forget(&&owned2);\n    |     ^^^^^^^^^^^^^^^^\n    |\n note: argument has type &&SomeStruct\n   --> $DIR/drop_forget_ref.rs:28:12\n    |\n-28 |     forget(&&owned2);\n+LL |     forget(&&owned2);\n    |            ^^^^^^^^\n \n error: calls to `std::mem::forget` with a reference instead of an owned value. Forgetting a reference does nothing.\n   --> $DIR/drop_forget_ref.rs:29:5\n    |\n-29 |     forget(&mut owned2);\n+LL |     forget(&mut owned2);\n    |     ^^^^^^^^^^^^^^^^^^^\n    |\n note: argument has type &mut SomeStruct\n   --> $DIR/drop_forget_ref.rs:29:12\n    |\n-29 |     forget(&mut owned2);\n+LL |     forget(&mut owned2);\n    |            ^^^^^^^^^^^\n \n error: calls to `std::mem::drop` with a reference instead of an owned value. Dropping a reference does nothing.\n   --> $DIR/drop_forget_ref.rs:33:5\n    |\n-33 |     drop(reference1);\n+LL |     drop(reference1);\n    |     ^^^^^^^^^^^^^^^^\n    |\n note: argument has type &SomeStruct\n   --> $DIR/drop_forget_ref.rs:33:10\n    |\n-33 |     drop(reference1);\n+LL |     drop(reference1);\n    |          ^^^^^^^^^^\n \n error: calls to `std::mem::forget` with a reference instead of an owned value. Forgetting a reference does nothing.\n   --> $DIR/drop_forget_ref.rs:34:5\n    |\n-34 |     forget(&*reference1);\n+LL |     forget(&*reference1);\n    |     ^^^^^^^^^^^^^^^^^^^^\n    |\n note: argument has type &SomeStruct\n   --> $DIR/drop_forget_ref.rs:34:12\n    |\n-34 |     forget(&*reference1);\n+LL |     forget(&*reference1);\n    |            ^^^^^^^^^^^^\n \n error: calls to `std::mem::drop` with a reference instead of an owned value. Dropping a reference does nothing.\n   --> $DIR/drop_forget_ref.rs:37:5\n    |\n-37 |     drop(reference2);\n+LL |     drop(reference2);\n    |     ^^^^^^^^^^^^^^^^\n    |\n note: argument has type &mut SomeStruct\n   --> $DIR/drop_forget_ref.rs:37:10\n    |\n-37 |     drop(reference2);\n+LL |     drop(reference2);\n    |          ^^^^^^^^^^\n \n error: calls to `std::mem::forget` with a reference instead of an owned value. Forgetting a reference does nothing.\n   --> $DIR/drop_forget_ref.rs:39:5\n    |\n-39 |     forget(reference3);\n+LL |     forget(reference3);\n    |     ^^^^^^^^^^^^^^^^^^\n    |\n note: argument has type &mut SomeStruct\n   --> $DIR/drop_forget_ref.rs:39:12\n    |\n-39 |     forget(reference3);\n+LL |     forget(reference3);\n    |            ^^^^^^^^^^\n \n error: calls to `std::mem::drop` with a reference instead of an owned value. Dropping a reference does nothing.\n   --> $DIR/drop_forget_ref.rs:42:5\n    |\n-42 |     drop(reference4);\n+LL |     drop(reference4);\n    |     ^^^^^^^^^^^^^^^^\n    |\n note: argument has type &SomeStruct\n   --> $DIR/drop_forget_ref.rs:42:10\n    |\n-42 |     drop(reference4);\n+LL |     drop(reference4);\n    |          ^^^^^^^^^^\n \n error: calls to `std::mem::forget` with a reference instead of an owned value. Forgetting a reference does nothing.\n   --> $DIR/drop_forget_ref.rs:43:5\n    |\n-43 |     forget(reference4);\n+LL |     forget(reference4);\n    |     ^^^^^^^^^^^^^^^^^^\n    |\n note: argument has type &SomeStruct\n   --> $DIR/drop_forget_ref.rs:43:12\n    |\n-43 |     forget(reference4);\n+LL |     forget(reference4);\n    |            ^^^^^^^^^^\n \n error: calls to `std::mem::drop` with a reference instead of an owned value. Dropping a reference does nothing.\n   --> $DIR/drop_forget_ref.rs:48:5\n    |\n-48 |     drop(&val);\n+LL |     drop(&val);\n    |     ^^^^^^^^^^\n    |\n note: argument has type &T\n   --> $DIR/drop_forget_ref.rs:48:10\n    |\n-48 |     drop(&val);\n+LL |     drop(&val);\n    |          ^^^^\n \n error: calls to `std::mem::forget` with a reference instead of an owned value. Forgetting a reference does nothing.\n   --> $DIR/drop_forget_ref.rs:54:5\n    |\n-54 |     forget(&val);\n+LL |     forget(&val);\n    |     ^^^^^^^^^^^^\n    |\n note: argument has type &T\n   --> $DIR/drop_forget_ref.rs:54:12\n    |\n-54 |     forget(&val);\n+LL |     forget(&val);\n    |            ^^^^\n \n error: calls to `std::mem::drop` with a reference instead of an owned value. Dropping a reference does nothing.\n   --> $DIR/drop_forget_ref.rs:62:5\n    |\n-62 |     std::mem::drop(&SomeStruct);\n+LL |     std::mem::drop(&SomeStruct);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n note: argument has type &SomeStruct\n   --> $DIR/drop_forget_ref.rs:62:20\n    |\n-62 |     std::mem::drop(&SomeStruct);\n+LL |     std::mem::drop(&SomeStruct);\n    |                    ^^^^^^^^^^^\n \n error: calls to `std::mem::forget` with a reference instead of an owned value. Forgetting a reference does nothing.\n   --> $DIR/drop_forget_ref.rs:65:5\n    |\n-65 |     std::mem::forget(&SomeStruct);\n+LL |     std::mem::forget(&SomeStruct);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n note: argument has type &SomeStruct\n   --> $DIR/drop_forget_ref.rs:65:22\n    |\n-65 |     std::mem::forget(&SomeStruct);\n+LL |     std::mem::forget(&SomeStruct);\n    |                      ^^^^^^^^^^^\n \n error: aborting due to 18 previous errors"}, {"sha": "e4bdd3f96b2d41a3bb745a99fe0b709968572739", "filename": "tests/ui/duplicate_underscore_argument.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fduplicate_underscore_argument.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fduplicate_underscore_argument.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fduplicate_underscore_argument.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,7 +1,7 @@\n error: `darth` already exists, having another argument having almost the same name makes code comprehension and documentation more difficult\n   --> $DIR/duplicate_underscore_argument.rs:13:23\n    |\n-13 | fn join_the_dark_side(darth: i32, _darth: i32) {}\n+LL | fn join_the_dark_side(darth: i32, _darth: i32) {}\n    |                       ^^^^^\n    |\n    = note: `-D clippy::duplicate-underscore-argument` implied by `-D warnings`"}, {"sha": "e87c9839b33739c058693fb742a42d65f9759814", "filename": "tests/ui/duration_subsec.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fduration_subsec.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fduration_subsec.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fduration_subsec.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,33 +1,33 @@\n error: Calling `subsec_millis()` is more concise than this calculation\n   --> $DIR/duration_subsec.rs:17:24\n    |\n-17 |     let bad_millis_1 = dur.subsec_micros() / 1_000;\n+LL |     let bad_millis_1 = dur.subsec_micros() / 1_000;\n    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `dur.subsec_millis()`\n    |\n    = note: `-D clippy::duration-subsec` implied by `-D warnings`\n \n error: Calling `subsec_millis()` is more concise than this calculation\n   --> $DIR/duration_subsec.rs:18:24\n    |\n-18 |     let bad_millis_2 = dur.subsec_nanos() / 1_000_000;\n+LL |     let bad_millis_2 = dur.subsec_nanos() / 1_000_000;\n    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `dur.subsec_millis()`\n \n error: Calling `subsec_micros()` is more concise than this calculation\n   --> $DIR/duration_subsec.rs:23:22\n    |\n-23 |     let bad_micros = dur.subsec_nanos() / 1_000;\n+LL |     let bad_micros = dur.subsec_nanos() / 1_000;\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `dur.subsec_micros()`\n \n error: Calling `subsec_micros()` is more concise than this calculation\n   --> $DIR/duration_subsec.rs:28:13\n    |\n-28 |     let _ = (&dur).subsec_nanos() / 1_000;\n+LL |     let _ = (&dur).subsec_nanos() / 1_000;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `(&dur).subsec_micros()`\n \n error: Calling `subsec_micros()` is more concise than this calculation\n   --> $DIR/duration_subsec.rs:32:13\n    |\n-32 |     let _ = dur.subsec_nanos() / NANOS_IN_MICRO;\n+LL |     let _ = dur.subsec_nanos() / NANOS_IN_MICRO;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `dur.subsec_micros()`\n \n error: aborting due to 5 previous errors"}, {"sha": "2c1ecbfdb8631c01c2a15a913000018f6fa15edf", "filename": "tests/ui/else_if_without_else.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Felse_if_without_else.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Felse_if_without_else.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Felse_if_without_else.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,11 +1,11 @@\n error: if expression with an `else if`, but without a final `else`\n   --> $DIR/else_if_without_else.rs:54:12\n    |\n-54 |       } else if bla2() {\n+LL |       } else if bla2() {\n    |  ____________^\n-55 | |         //~ ERROR else if without else\n-56 | |         println!(\"else if\");\n-57 | |     }\n+LL | |         //~ ERROR else if without else\n+LL | |         println!(\"else if\");\n+LL | |     }\n    | |_____^\n    |\n    = note: `-D clippy::else-if-without-else` implied by `-D warnings`\n@@ -14,11 +14,11 @@ error: if expression with an `else if`, but without a final `else`\n error: if expression with an `else if`, but without a final `else`\n   --> $DIR/else_if_without_else.rs:63:12\n    |\n-63 |       } else if bla3() {\n+LL |       } else if bla3() {\n    |  ____________^\n-64 | |         //~ ERROR else if without else\n-65 | |         println!(\"else if 2\");\n-66 | |     }\n+LL | |         //~ ERROR else if without else\n+LL | |         println!(\"else if 2\");\n+LL | |     }\n    | |_____^\n    |\n    = help: add an `else` block here"}, {"sha": "d2e3688eb4d38315f900673177098a54a3a563b2", "filename": "tests/ui/empty_enum.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fempty_enum.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fempty_enum.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fempty_enum.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,14 +1,14 @@\n error: enum with no variants\n   --> $DIR/empty_enum.rs:13:1\n    |\n-13 | enum Empty {}\n+LL | enum Empty {}\n    | ^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::empty-enum` implied by `-D warnings`\n help: consider using the uninhabited type `!` or a wrapper around it\n   --> $DIR/empty_enum.rs:13:1\n    |\n-13 | enum Empty {}\n+LL | enum Empty {}\n    | ^^^^^^^^^^^^^\n \n error: aborting due to previous error"}, {"sha": "59939ea2858f4f6df9766df8c9c23603a1033299", "filename": "tests/ui/empty_line_after_outer_attribute.stderr", "status": "modified", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fempty_line_after_outer_attribute.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fempty_line_after_outer_attribute.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fempty_line_after_outer_attribute.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,53 +1,53 @@\n error: Found an empty line after an outer attribute. Perhaps you forgot to add a '!' to make it an inner attribute?\n   --> $DIR/empty_line_after_outer_attribute.rs:13:1\n    |\n-13 | / #[crate_type = \"lib\"]\n-14 | |\n-15 | | /// some comment\n-16 | | fn with_one_newline_and_comment() { assert!(true) }\n+LL | / #[crate_type = \"lib\"]\n+LL | |\n+LL | | /// some comment\n+LL | | fn with_one_newline_and_comment() { assert!(true) }\n    | |_\n    |\n    = note: `-D clippy::empty-line-after-outer-attr` implied by `-D warnings`\n \n error: Found an empty line after an outer attribute. Perhaps you forgot to add a '!' to make it an inner attribute?\n   --> $DIR/empty_line_after_outer_attribute.rs:25:1\n    |\n-25 | / #[crate_type = \"lib\"]\n-26 | |\n-27 | | fn with_one_newline() { assert!(true) }\n+LL | / #[crate_type = \"lib\"]\n+LL | |\n+LL | | fn with_one_newline() { assert!(true) }\n    | |_\n \n error: Found an empty line after an outer attribute. Perhaps you forgot to add a '!' to make it an inner attribute?\n   --> $DIR/empty_line_after_outer_attribute.rs:30:1\n    |\n-30 | / #[crate_type = \"lib\"]\n-31 | |\n-32 | |\n-33 | | fn with_two_newlines() { assert!(true) }\n+LL | / #[crate_type = \"lib\"]\n+LL | |\n+LL | |\n+LL | | fn with_two_newlines() { assert!(true) }\n    | |_\n \n error: Found an empty line after an outer attribute. Perhaps you forgot to add a '!' to make it an inner attribute?\n   --> $DIR/empty_line_after_outer_attribute.rs:37:1\n    |\n-37 | / #[crate_type = \"lib\"]\n-38 | |\n-39 | | enum Baz {\n+LL | / #[crate_type = \"lib\"]\n+LL | |\n+LL | | enum Baz {\n    | |_\n \n error: Found an empty line after an outer attribute. Perhaps you forgot to add a '!' to make it an inner attribute?\n   --> $DIR/empty_line_after_outer_attribute.rs:45:1\n    |\n-45 | / #[crate_type = \"lib\"]\n-46 | |\n-47 | | struct Foo {\n+LL | / #[crate_type = \"lib\"]\n+LL | |\n+LL | | struct Foo {\n    | |_\n \n error: Found an empty line after an outer attribute. Perhaps you forgot to add a '!' to make it an inner attribute?\n   --> $DIR/empty_line_after_outer_attribute.rs:53:1\n    |\n-53 | / #[crate_type = \"lib\"]\n-54 | |\n-55 | | mod foo {\n+LL | / #[crate_type = \"lib\"]\n+LL | |\n+LL | | mod foo {\n    | |_\n \n error: aborting due to 6 previous errors"}, {"sha": "78a179d07ef2adbab87d60c500878097b35dc460", "filename": "tests/ui/entry.stderr", "status": "modified", "additions": 35, "deletions": 35, "changes": 70, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fentry.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fentry.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fentry.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,73 +1,73 @@\n error: usage of `contains_key` followed by `insert` on a `HashMap`\n   --> $DIR/entry.rs:19:5\n    |\n-19 | /     if !m.contains_key(&k) {\n-20 | |         m.insert(k, v);\n-21 | |     }\n+LL | /     if !m.contains_key(&k) {\n+LL | |         m.insert(k, v);\n+LL | |     }\n    | |_____^ help: consider using: `m.entry(k).or_insert(v)`\n    |\n    = note: `-D clippy::map-entry` implied by `-D warnings`\n \n error: usage of `contains_key` followed by `insert` on a `HashMap`\n   --> $DIR/entry.rs:25:5\n    |\n-25 | /     if !m.contains_key(&k) {\n-26 | |         foo();\n-27 | |         m.insert(k, v);\n-28 | |     }\n+LL | /     if !m.contains_key(&k) {\n+LL | |         foo();\n+LL | |         m.insert(k, v);\n+LL | |     }\n    | |_____^ help: consider using: `m.entry(k)`\n \n error: usage of `contains_key` followed by `insert` on a `HashMap`\n   --> $DIR/entry.rs:32:5\n    |\n-32 | /     if !m.contains_key(&k) {\n-33 | |         m.insert(k, v)\n-34 | |     } else {\n-35 | |         None\n-36 | |     };\n+LL | /     if !m.contains_key(&k) {\n+LL | |         m.insert(k, v)\n+LL | |     } else {\n+LL | |         None\n+LL | |     };\n    | |_____^ help: consider using: `m.entry(k)`\n \n error: usage of `contains_key` followed by `insert` on a `HashMap`\n   --> $DIR/entry.rs:40:5\n    |\n-40 | /     if m.contains_key(&k) {\n-41 | |         None\n-42 | |     } else {\n-43 | |         m.insert(k, v)\n-44 | |     };\n+LL | /     if m.contains_key(&k) {\n+LL | |         None\n+LL | |     } else {\n+LL | |         m.insert(k, v)\n+LL | |     };\n    | |_____^ help: consider using: `m.entry(k)`\n \n error: usage of `contains_key` followed by `insert` on a `HashMap`\n   --> $DIR/entry.rs:48:5\n    |\n-48 | /     if !m.contains_key(&k) {\n-49 | |         foo();\n-50 | |         m.insert(k, v)\n-51 | |     } else {\n-52 | |         None\n-53 | |     };\n+LL | /     if !m.contains_key(&k) {\n+LL | |         foo();\n+LL | |         m.insert(k, v)\n+LL | |     } else {\n+LL | |         None\n+LL | |     };\n    | |_____^ help: consider using: `m.entry(k)`\n \n error: usage of `contains_key` followed by `insert` on a `HashMap`\n   --> $DIR/entry.rs:57:5\n    |\n-57 | /     if m.contains_key(&k) {\n-58 | |         None\n-59 | |     } else {\n-60 | |         foo();\n-61 | |         m.insert(k, v)\n-62 | |     };\n+LL | /     if m.contains_key(&k) {\n+LL | |         None\n+LL | |     } else {\n+LL | |         foo();\n+LL | |         m.insert(k, v)\n+LL | |     };\n    | |_____^ help: consider using: `m.entry(k)`\n \n error: usage of `contains_key` followed by `insert` on a `BTreeMap`\n   --> $DIR/entry.rs:66:5\n    |\n-66 | /     if !m.contains_key(&k) {\n-67 | |         foo();\n-68 | |         m.insert(k, v)\n-69 | |     } else {\n-70 | |         None\n-71 | |     };\n+LL | /     if !m.contains_key(&k) {\n+LL | |         foo();\n+LL | |         m.insert(k, v)\n+LL | |     } else {\n+LL | |         None\n+LL | |     };\n    | |_____^ help: consider using: `m.entry(k)`\n \n error: aborting due to 7 previous errors"}, {"sha": "8b89856d4a49bc0f1e24245a802027a0517a28b3", "filename": "tests/ui/enum_glob_use.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fenum_glob_use.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fenum_glob_use.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fenum_glob_use.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,15 +1,15 @@\n error: don't use glob imports for enum variants\n   --> $DIR/enum_glob_use.rs:13:1\n    |\n-13 | use std::cmp::Ordering::*;\n+LL | use std::cmp::Ordering::*;\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::enum-glob-use` implied by `-D warnings`\n \n error: don't use glob imports for enum variants\n   --> $DIR/enum_glob_use.rs:19:1\n    |\n-19 | use self::Enum::*;\n+LL | use self::Enum::*;\n    | ^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 2 previous errors"}, {"sha": "4555e1d0649d6b458aa95ffbe1d8745ebcd1cb86", "filename": "tests/ui/enum_variants.stderr", "status": "modified", "additions": 45, "deletions": 45, "changes": 90, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fenum_variants.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fenum_variants.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fenum_variants.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,101 +1,101 @@\n error: Variant name ends with the enum's name\n   --> $DIR/enum_variants.rs:25:5\n    |\n-25 |     cFoo,\n+LL |     cFoo,\n    |     ^^^^\n    |\n    = note: `-D clippy::enum-variant-names` implied by `-D warnings`\n \n error: Variant name starts with the enum's name\n   --> $DIR/enum_variants.rs:36:5\n    |\n-36 |     FoodGood,\n+LL |     FoodGood,\n    |     ^^^^^^^^\n \n error: Variant name starts with the enum's name\n   --> $DIR/enum_variants.rs:37:5\n    |\n-37 |     FoodMiddle,\n+LL |     FoodMiddle,\n    |     ^^^^^^^^^^\n \n error: Variant name starts with the enum's name\n   --> $DIR/enum_variants.rs:38:5\n    |\n-38 |     FoodBad,\n+LL |     FoodBad,\n    |     ^^^^^^^\n \n error: All variants have the same prefix: `Food`\n   --> $DIR/enum_variants.rs:35:1\n    |\n-35 | / enum Food {\n-36 | |     FoodGood,\n-37 | |     FoodMiddle,\n-38 | |     FoodBad,\n-39 | | }\n+LL | / enum Food {\n+LL | |     FoodGood,\n+LL | |     FoodMiddle,\n+LL | |     FoodBad,\n+LL | | }\n    | |_^\n    |\n    = help: remove the prefixes and use full paths to the variants instead of glob imports\n \n error: All variants have the same prefix: `CallType`\n   --> $DIR/enum_variants.rs:45:1\n    |\n-45 | / enum BadCallType {\n-46 | |     CallTypeCall,\n-47 | |     CallTypeCreate,\n-48 | |     CallTypeDestroy,\n-49 | | }\n+LL | / enum BadCallType {\n+LL | |     CallTypeCall,\n+LL | |     CallTypeCreate,\n+LL | |     CallTypeDestroy,\n+LL | | }\n    | |_^\n    |\n    = help: remove the prefixes and use full paths to the variants instead of glob imports\n \n error: All variants have the same prefix: `Constant`\n   --> $DIR/enum_variants.rs:57:1\n    |\n-57 | / enum Consts {\n-58 | |     ConstantInt,\n-59 | |     ConstantCake,\n-60 | |     ConstantLie,\n-61 | | }\n+LL | / enum Consts {\n+LL | |     ConstantInt,\n+LL | |     ConstantCake,\n+LL | |     ConstantLie,\n+LL | | }\n    | |_^\n    |\n    = help: remove the prefixes and use full paths to the variants instead of glob imports\n \n error: All variants have the same prefix: `With`\n   --> $DIR/enum_variants.rs:91:1\n    |\n-91 | / enum Seallll {\n-92 | |     WithOutCake,\n-93 | |     WithOutTea,\n-94 | |     WithOut,\n-95 | | }\n+LL | / enum Seallll {\n+LL | |     WithOutCake,\n+LL | |     WithOutTea,\n+LL | |     WithOut,\n+LL | | }\n    | |_^\n    |\n    = help: remove the prefixes and use full paths to the variants instead of glob imports\n \n error: All variants have the same prefix: `Prefix`\n-   --> $DIR/enum_variants.rs:97:1\n-    |\n-97  | / enum NonCaps {\n-98  | |     Prefix\u7684,\n-99  | |     PrefixTea,\n-100 | |     PrefixCake,\n-101 | | }\n-    | |_^\n-    |\n-    = help: remove the prefixes and use full paths to the variants instead of glob imports\n+  --> $DIR/enum_variants.rs:97:1\n+   |\n+LL | / enum NonCaps {\n+LL | |     Prefix\u7684,\n+LL | |     PrefixTea,\n+LL | |     PrefixCake,\n+LL | | }\n+   | |_^\n+   |\n+   = help: remove the prefixes and use full paths to the variants instead of glob imports\n \n error: All variants have the same prefix: `With`\n-   --> $DIR/enum_variants.rs:103:1\n-    |\n-103 | / pub enum PubSeall {\n-104 | |     WithOutCake,\n-105 | |     WithOutTea,\n-106 | |     WithOut,\n-107 | | }\n-    | |_^\n-    |\n-    = note: `-D clippy::pub-enum-variant-names` implied by `-D warnings`\n-    = help: remove the prefixes and use full paths to the variants instead of glob imports\n+  --> $DIR/enum_variants.rs:103:1\n+   |\n+LL | / pub enum PubSeall {\n+LL | |     WithOutCake,\n+LL | |     WithOutTea,\n+LL | |     WithOut,\n+LL | | }\n+   | |_^\n+   |\n+   = note: `-D clippy::pub-enum-variant-names` implied by `-D warnings`\n+   = help: remove the prefixes and use full paths to the variants instead of glob imports\n \n error: aborting due to 10 previous errors\n "}, {"sha": "f883529b996e4fafcf333356c18f5c81494b32fd", "filename": "tests/ui/enums_clike.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fenums_clike.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fenums_clike.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fenums_clike.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,51 +1,51 @@\n error: Clike enum variant discriminant is not portable to 32-bit targets\n   --> $DIR/enums_clike.rs:17:5\n    |\n-17 |     X = 0x1_0000_0000,\n+LL |     X = 0x1_0000_0000,\n    |     ^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::enum-clike-unportable-variant` implied by `-D warnings`\n \n error: Clike enum variant discriminant is not portable to 32-bit targets\n   --> $DIR/enums_clike.rs:24:5\n    |\n-24 |     X = 0x1_0000_0000,\n+LL |     X = 0x1_0000_0000,\n    |     ^^^^^^^^^^^^^^^^^\n \n error: Clike enum variant discriminant is not portable to 32-bit targets\n   --> $DIR/enums_clike.rs:27:5\n    |\n-27 |     A = 0xFFFF_FFFF,\n+LL |     A = 0xFFFF_FFFF,\n    |     ^^^^^^^^^^^^^^^\n \n error: Clike enum variant discriminant is not portable to 32-bit targets\n   --> $DIR/enums_clike.rs:34:5\n    |\n-34 |     Z = 0xFFFF_FFFF,\n+LL |     Z = 0xFFFF_FFFF,\n    |     ^^^^^^^^^^^^^^^\n \n error: Clike enum variant discriminant is not portable to 32-bit targets\n   --> $DIR/enums_clike.rs:35:5\n    |\n-35 |     A = 0x1_0000_0000,\n+LL |     A = 0x1_0000_0000,\n    |     ^^^^^^^^^^^^^^^^^\n \n error: Clike enum variant discriminant is not portable to 32-bit targets\n   --> $DIR/enums_clike.rs:37:5\n    |\n-37 |     C = (std::i32::MIN as isize) - 1,\n+LL |     C = (std::i32::MIN as isize) - 1,\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: Clike enum variant discriminant is not portable to 32-bit targets\n   --> $DIR/enums_clike.rs:43:5\n    |\n-43 |     Z = 0xFFFF_FFFF,\n+LL |     Z = 0xFFFF_FFFF,\n    |     ^^^^^^^^^^^^^^^\n \n error: Clike enum variant discriminant is not portable to 32-bit targets\n   --> $DIR/enums_clike.rs:44:5\n    |\n-44 |     A = 0x1_0000_0000,\n+LL |     A = 0x1_0000_0000,\n    |     ^^^^^^^^^^^^^^^^^\n \n error: aborting due to 8 previous errors"}, {"sha": "a1a257095c26afc6c31df4f76a1720c492dc6e81", "filename": "tests/ui/eq_op.stderr", "status": "modified", "additions": 37, "deletions": 37, "changes": 74, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Feq_op.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Feq_op.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Feq_op.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,214 +1,214 @@\n error: this boolean expression can be simplified\n   --> $DIR/eq_op.rs:44:5\n    |\n-44 |     true && true;\n+LL |     true && true;\n    |     ^^^^^^^^^^^^ help: try: `true`\n    |\n    = note: `-D clippy::nonminimal-bool` implied by `-D warnings`\n \n error: this boolean expression can be simplified\n   --> $DIR/eq_op.rs:46:5\n    |\n-46 |     true || true;\n+LL |     true || true;\n    |     ^^^^^^^^^^^^ help: try: `true`\n \n error: this boolean expression can be simplified\n   --> $DIR/eq_op.rs:52:5\n    |\n-52 |     a == b && b == a;\n+LL |     a == b && b == a;\n    |     ^^^^^^^^^^^^^^^^ help: try: `a == b`\n \n error: this boolean expression can be simplified\n   --> $DIR/eq_op.rs:53:5\n    |\n-53 |     a != b && b != a;\n+LL |     a != b && b != a;\n    |     ^^^^^^^^^^^^^^^^ help: try: `a != b`\n \n error: this boolean expression can be simplified\n   --> $DIR/eq_op.rs:54:5\n    |\n-54 |     a < b && b > a;\n+LL |     a < b && b > a;\n    |     ^^^^^^^^^^^^^^ help: try: `a < b`\n \n error: this boolean expression can be simplified\n   --> $DIR/eq_op.rs:55:5\n    |\n-55 |     a <= b && b >= a;\n+LL |     a <= b && b >= a;\n    |     ^^^^^^^^^^^^^^^^ help: try: `a <= b`\n \n error: equal expressions as operands to `==`\n   --> $DIR/eq_op.rs:17:5\n    |\n-17 |     1 == 1;\n+LL |     1 == 1;\n    |     ^^^^^^\n    |\n    = note: `-D clippy::eq-op` implied by `-D warnings`\n \n error: equal expressions as operands to `==`\n   --> $DIR/eq_op.rs:18:5\n    |\n-18 |     \"no\" == \"no\";\n+LL |     \"no\" == \"no\";\n    |     ^^^^^^^^^^^^\n \n error: equal expressions as operands to `!=`\n   --> $DIR/eq_op.rs:20:5\n    |\n-20 |     false != false;\n+LL |     false != false;\n    |     ^^^^^^^^^^^^^^\n \n error: equal expressions as operands to `<`\n   --> $DIR/eq_op.rs:21:5\n    |\n-21 |     1.5 < 1.5;\n+LL |     1.5 < 1.5;\n    |     ^^^^^^^^^\n \n error: equal expressions as operands to `>=`\n   --> $DIR/eq_op.rs:22:5\n    |\n-22 |     1u64 >= 1u64;\n+LL |     1u64 >= 1u64;\n    |     ^^^^^^^^^^^^\n \n error: equal expressions as operands to `&`\n   --> $DIR/eq_op.rs:25:5\n    |\n-25 |     (1 as u64) & (1 as u64);\n+LL |     (1 as u64) & (1 as u64);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^\n \n error: equal expressions as operands to `^`\n   --> $DIR/eq_op.rs:26:5\n    |\n-26 |     1 ^ ((((((1))))));\n+LL |     1 ^ ((((((1))))));\n    |     ^^^^^^^^^^^^^^^^^\n \n error: equal expressions as operands to `<`\n   --> $DIR/eq_op.rs:29:5\n    |\n-29 |     (-(2) < -(2));\n+LL |     (-(2) < -(2));\n    |     ^^^^^^^^^^^^^\n \n error: equal expressions as operands to `==`\n   --> $DIR/eq_op.rs:30:5\n    |\n-30 |     ((1 + 1) & (1 + 1) == (1 + 1) & (1 + 1));\n+LL |     ((1 + 1) & (1 + 1) == (1 + 1) & (1 + 1));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: equal expressions as operands to `&`\n   --> $DIR/eq_op.rs:30:6\n    |\n-30 |     ((1 + 1) & (1 + 1) == (1 + 1) & (1 + 1));\n+LL |     ((1 + 1) & (1 + 1) == (1 + 1) & (1 + 1));\n    |      ^^^^^^^^^^^^^^^^^\n \n error: equal expressions as operands to `&`\n   --> $DIR/eq_op.rs:30:27\n    |\n-30 |     ((1 + 1) & (1 + 1) == (1 + 1) & (1 + 1));\n+LL |     ((1 + 1) & (1 + 1) == (1 + 1) & (1 + 1));\n    |                           ^^^^^^^^^^^^^^^^^\n \n error: equal expressions as operands to `==`\n   --> $DIR/eq_op.rs:31:5\n    |\n-31 |     (1 * 2) + (3 * 4) == 1 * 2 + 3 * 4;\n+LL |     (1 * 2) + (3 * 4) == 1 * 2 + 3 * 4;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: equal expressions as operands to `!=`\n   --> $DIR/eq_op.rs:34:5\n    |\n-34 |     ([1] != [1]);\n+LL |     ([1] != [1]);\n    |     ^^^^^^^^^^^^\n \n error: equal expressions as operands to `!=`\n   --> $DIR/eq_op.rs:35:5\n    |\n-35 |     ((1, 2) != (1, 2));\n+LL |     ((1, 2) != (1, 2));\n    |     ^^^^^^^^^^^^^^^^^^\n \n error: equal expressions as operands to `==`\n   --> $DIR/eq_op.rs:39:5\n    |\n-39 |     1 + 1 == 2;\n+LL |     1 + 1 == 2;\n    |     ^^^^^^^^^^\n \n error: equal expressions as operands to `==`\n   --> $DIR/eq_op.rs:40:5\n    |\n-40 |     1 - 1 == 0;\n+LL |     1 - 1 == 0;\n    |     ^^^^^^^^^^\n \n error: equal expressions as operands to `-`\n   --> $DIR/eq_op.rs:40:5\n    |\n-40 |     1 - 1 == 0;\n+LL |     1 - 1 == 0;\n    |     ^^^^^\n \n error: equal expressions as operands to `-`\n   --> $DIR/eq_op.rs:42:5\n    |\n-42 |     1 - 1;\n+LL |     1 - 1;\n    |     ^^^^^\n \n error: equal expressions as operands to `/`\n   --> $DIR/eq_op.rs:43:5\n    |\n-43 |     1 / 1;\n+LL |     1 / 1;\n    |     ^^^^^\n \n error: equal expressions as operands to `&&`\n   --> $DIR/eq_op.rs:44:5\n    |\n-44 |     true && true;\n+LL |     true && true;\n    |     ^^^^^^^^^^^^\n \n error: equal expressions as operands to `||`\n   --> $DIR/eq_op.rs:46:5\n    |\n-46 |     true || true;\n+LL |     true || true;\n    |     ^^^^^^^^^^^^\n \n error: equal expressions as operands to `&&`\n   --> $DIR/eq_op.rs:52:5\n    |\n-52 |     a == b && b == a;\n+LL |     a == b && b == a;\n    |     ^^^^^^^^^^^^^^^^\n \n error: equal expressions as operands to `&&`\n   --> $DIR/eq_op.rs:53:5\n    |\n-53 |     a != b && b != a;\n+LL |     a != b && b != a;\n    |     ^^^^^^^^^^^^^^^^\n \n error: equal expressions as operands to `&&`\n   --> $DIR/eq_op.rs:54:5\n    |\n-54 |     a < b && b > a;\n+LL |     a < b && b > a;\n    |     ^^^^^^^^^^^^^^\n \n error: equal expressions as operands to `&&`\n   --> $DIR/eq_op.rs:55:5\n    |\n-55 |     a <= b && b >= a;\n+LL |     a <= b && b >= a;\n    |     ^^^^^^^^^^^^^^^^\n \n error: equal expressions as operands to `==`\n   --> $DIR/eq_op.rs:58:5\n    |\n-58 |     a == a;\n+LL |     a == a;\n    |     ^^^^^^\n \n error: taken reference of right operand\n   --> $DIR/eq_op.rs:96:13\n    |\n-96 |     let z = x & &y;\n+LL |     let z = x & &y;\n    |             ^^^^--\n    |                 |\n    |                 help: use the right value directly: `y`\n    |\n    = note: `-D clippy::op-ref` implied by `-D warnings`\n \n error: equal expressions as operands to `/`\n-   --> $DIR/eq_op.rs:104:20\n-    |\n-104 |     const D: u32 = A / A;\n-    |                    ^^^^^\n+  --> $DIR/eq_op.rs:104:20\n+   |\n+LL |     const D: u32 = A / A;\n+   |                    ^^^^^\n \n error: aborting due to 34 previous errors\n "}, {"sha": "85548eefba736a03cb7ee18a8bdff7180508bfd2", "filename": "tests/ui/erasing_op.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Ferasing_op.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Ferasing_op.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ferasing_op.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,21 +1,21 @@\n error: this operation will always return zero. This is likely not the intended outcome\n   --> $DIR/erasing_op.rs:15:5\n    |\n-15 |     x * 0;\n+LL |     x * 0;\n    |     ^^^^^\n    |\n    = note: `-D clippy::erasing-op` implied by `-D warnings`\n \n error: this operation will always return zero. This is likely not the intended outcome\n   --> $DIR/erasing_op.rs:16:5\n    |\n-16 |     0 & x;\n+LL |     0 & x;\n    |     ^^^^^\n \n error: this operation will always return zero. This is likely not the intended outcome\n   --> $DIR/erasing_op.rs:17:5\n    |\n-17 |     0 / x;\n+LL |     0 / x;\n    |     ^^^^^\n \n error: aborting due to 3 previous errors"}, {"sha": "ed7819ed429ac114522e6f15c23b2e84bb87c857", "filename": "tests/ui/escape_analysis.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fescape_analysis.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fescape_analysis.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fescape_analysis.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,16 +1,16 @@\n error: local variable doesn't need to be boxed here\n   --> $DIR/escape_analysis.rs:43:13\n    |\n-43 | fn warn_arg(x: Box<A>) {\n+LL | fn warn_arg(x: Box<A>) {\n    |             ^\n    |\n    = note: `-D clippy::boxed-local` implied by `-D warnings`\n \n error: local variable doesn't need to be boxed here\n-   --> $DIR/escape_analysis.rs:134:12\n-    |\n-134 | pub fn new(_needs_name: Box<PeekableSeekable<&()>>) -> () {}\n-    |            ^^^^^^^^^^^\n+  --> $DIR/escape_analysis.rs:134:12\n+   |\n+LL | pub fn new(_needs_name: Box<PeekableSeekable<&()>>) -> () {}\n+   |            ^^^^^^^^^^^\n \n error: aborting due to 2 previous errors\n "}, {"sha": "fb7daba15782b8d16a92974bc41143643c446e4f", "filename": "tests/ui/eta.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Feta.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Feta.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Feta.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,35 +1,35 @@\n error: redundant closure found\n   --> $DIR/eta.rs:22:27\n    |\n-22 |     let a = Some(1u8).map(|a| foo(a));\n+LL |     let a = Some(1u8).map(|a| foo(a));\n    |                           ^^^^^^^^^^ help: remove closure as shown: `foo`\n    |\n    = note: `-D clippy::redundant-closure` implied by `-D warnings`\n \n error: redundant closure found\n   --> $DIR/eta.rs:23:10\n    |\n-23 |     meta(|a| foo(a));\n+LL |     meta(|a| foo(a));\n    |          ^^^^^^^^^^ help: remove closure as shown: `foo`\n \n error: redundant closure found\n   --> $DIR/eta.rs:24:27\n    |\n-24 |     let c = Some(1u8).map(|a| {1+2; foo}(a));\n+LL |     let c = Some(1u8).map(|a| {1+2; foo}(a));\n    |                           ^^^^^^^^^^^^^^^^^ help: remove closure as shown: `{1+2; foo}`\n \n error: this expression borrows a reference that is immediately dereferenced by the compiler\n   --> $DIR/eta.rs:26:21\n    |\n-26 |     all(&[1, 2, 3], &&2, |x, y| below(x, y)); //is adjusted\n+LL |     all(&[1, 2, 3], &&2, |x, y| below(x, y)); //is adjusted\n    |                     ^^^ help: change this to: `&2`\n    |\n    = note: `-D clippy::needless-borrow` implied by `-D warnings`\n \n error: redundant closure found\n   --> $DIR/eta.rs:33:27\n    |\n-33 |     let e = Some(1u8).map(|a| generic(a));\n+LL |     let e = Some(1u8).map(|a| generic(a));\n    |                           ^^^^^^^^^^^^^^ help: remove closure as shown: `generic`\n \n error: aborting due to 5 previous errors"}, {"sha": "929650a7da838f4c9ee37a7a219f1114b9e8b43c", "filename": "tests/ui/eval_order_dependence.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Feval_order_dependence.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Feval_order_dependence.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Feval_order_dependence.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,50 +1,50 @@\n error: unsequenced read of a variable\n   --> $DIR/eval_order_dependence.rs:24:9\n    |\n-24 |     } + x;\n+LL |     } + x;\n    |         ^\n    |\n    = note: `-D clippy::eval-order-dependence` implied by `-D warnings`\n note: whether read occurs before this write depends on evaluation order\n   --> $DIR/eval_order_dependence.rs:22:9\n    |\n-22 |         x = 1;\n+LL |         x = 1;\n    |         ^^^^^\n \n error: unsequenced read of a variable\n   --> $DIR/eval_order_dependence.rs:27:5\n    |\n-27 |     x += {\n+LL |     x += {\n    |     ^\n    |\n note: whether read occurs before this write depends on evaluation order\n   --> $DIR/eval_order_dependence.rs:28:9\n    |\n-28 |         x = 20;\n+LL |         x = 20;\n    |         ^^^^^^\n \n error: unsequenced read of a variable\n   --> $DIR/eval_order_dependence.rs:40:12\n    |\n-40 |         a: x,\n+LL |         a: x,\n    |            ^\n    |\n note: whether read occurs before this write depends on evaluation order\n   --> $DIR/eval_order_dependence.rs:42:13\n    |\n-42 |             x = 6;\n+LL |             x = 6;\n    |             ^^^^^\n \n error: unsequenced read of a variable\n   --> $DIR/eval_order_dependence.rs:49:9\n    |\n-49 |         x += {\n+LL |         x += {\n    |         ^\n    |\n note: whether read occurs before this write depends on evaluation order\n   --> $DIR/eval_order_dependence.rs:50:13\n    |\n-50 |             x = 20;\n+LL |             x = 20;\n    |             ^^^^^^\n \n error: aborting due to 4 previous errors"}, {"sha": "57c33c4719b165d25c7d9136eb7642b7a9b98dcc", "filename": "tests/ui/excessive_precision.stderr", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fexcessive_precision.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fexcessive_precision.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fexcessive_precision.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,111 +1,111 @@\n error: float has excessive precision\n   --> $DIR/excessive_precision.rs:23:26\n    |\n-23 |     const BAD32_1: f32 = 0.123_456_789_f32;\n+LL |     const BAD32_1: f32 = 0.123_456_789_f32;\n    |                          ^^^^^^^^^^^^^^^^^ help: consider changing the type or truncating it to: `0.123_456_79`\n    |\n    = note: `-D clippy::excessive-precision` implied by `-D warnings`\n \n error: float has excessive precision\n   --> $DIR/excessive_precision.rs:24:26\n    |\n-24 |     const BAD32_2: f32 = 0.123_456_789;\n+LL |     const BAD32_2: f32 = 0.123_456_789;\n    |                          ^^^^^^^^^^^^^ help: consider changing the type or truncating it to: `0.123_456_79`\n \n error: float has excessive precision\n   --> $DIR/excessive_precision.rs:25:26\n    |\n-25 |     const BAD32_3: f32 = 0.100_000_000_000_1;\n+LL |     const BAD32_3: f32 = 0.100_000_000_000_1;\n    |                          ^^^^^^^^^^^^^^^^^^^ help: consider changing the type or truncating it to: `0.1`\n \n error: float has excessive precision\n   --> $DIR/excessive_precision.rs:26:29\n    |\n-26 |     const BAD32_EDGE: f32 = 1.000_000_9;\n+LL |     const BAD32_EDGE: f32 = 1.000_000_9;\n    |                             ^^^^^^^^^^^ help: consider changing the type or truncating it to: `1.000_001`\n \n error: float has excessive precision\n   --> $DIR/excessive_precision.rs:28:26\n    |\n-28 |     const BAD64_1: f64 = 0.123_456_789_012_345_67f64;\n+LL |     const BAD64_1: f64 = 0.123_456_789_012_345_67f64;\n    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider changing the type or truncating it to: `0.123_456_789_012_345_66`\n \n error: float has excessive precision\n   --> $DIR/excessive_precision.rs:29:26\n    |\n-29 |     const BAD64_2: f64 = 0.123_456_789_012_345_67;\n+LL |     const BAD64_2: f64 = 0.123_456_789_012_345_67;\n    |                          ^^^^^^^^^^^^^^^^^^^^^^^^ help: consider changing the type or truncating it to: `0.123_456_789_012_345_66`\n \n error: float has excessive precision\n   --> $DIR/excessive_precision.rs:30:26\n    |\n-30 |     const BAD64_3: f64 = 0.100_000_000_000_000_000_1;\n+LL |     const BAD64_3: f64 = 0.100_000_000_000_000_000_1;\n    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider changing the type or truncating it to: `0.1`\n \n error: float has excessive precision\n   --> $DIR/excessive_precision.rs:33:22\n    |\n-33 |     println!(\"{:?}\", 8.888_888_888_888_888_888_888);\n+LL |     println!(\"{:?}\", 8.888_888_888_888_888_888_888);\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider changing the type or truncating it to: `8.888_888_888_888_89`\n \n error: float has excessive precision\n   --> $DIR/excessive_precision.rs:44:22\n    |\n-44 |     let bad32: f32 = 1.123_456_789;\n+LL |     let bad32: f32 = 1.123_456_789;\n    |                      ^^^^^^^^^^^^^ help: consider changing the type or truncating it to: `1.123_456_8`\n \n error: float has excessive precision\n   --> $DIR/excessive_precision.rs:45:26\n    |\n-45 |     let bad32_suf: f32 = 1.123_456_789_f32;\n+LL |     let bad32_suf: f32 = 1.123_456_789_f32;\n    |                          ^^^^^^^^^^^^^^^^^ help: consider changing the type or truncating it to: `1.123_456_8`\n \n error: float has excessive precision\n   --> $DIR/excessive_precision.rs:46:21\n    |\n-46 |     let bad32_inf = 1.123_456_789_f32;\n+LL |     let bad32_inf = 1.123_456_789_f32;\n    |                     ^^^^^^^^^^^^^^^^^ help: consider changing the type or truncating it to: `1.123_456_8`\n \n error: float has excessive precision\n   --> $DIR/excessive_precision.rs:48:22\n    |\n-48 |     let bad64: f64 = 0.123_456_789_012_345_67;\n+LL |     let bad64: f64 = 0.123_456_789_012_345_67;\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^ help: consider changing the type or truncating it to: `0.123_456_789_012_345_66`\n \n error: float has excessive precision\n   --> $DIR/excessive_precision.rs:49:26\n    |\n-49 |     let bad64_suf: f64 = 0.123_456_789_012_345_67f64;\n+LL |     let bad64_suf: f64 = 0.123_456_789_012_345_67f64;\n    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider changing the type or truncating it to: `0.123_456_789_012_345_66`\n \n error: float has excessive precision\n   --> $DIR/excessive_precision.rs:50:21\n    |\n-50 |     let bad64_inf = 0.123_456_789_012_345_67;\n+LL |     let bad64_inf = 0.123_456_789_012_345_67;\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^ help: consider changing the type or truncating it to: `0.123_456_789_012_345_66`\n \n error: float has excessive precision\n   --> $DIR/excessive_precision.rs:56:36\n    |\n-56 |     let bad_vec32: Vec<f32> = vec![0.123_456_789];\n+LL |     let bad_vec32: Vec<f32> = vec![0.123_456_789];\n    |                                    ^^^^^^^^^^^^^ help: consider changing the type or truncating it to: `0.123_456_79`\n \n error: float has excessive precision\n   --> $DIR/excessive_precision.rs:57:36\n    |\n-57 |     let bad_vec64: Vec<f64> = vec![0.123_456_789_123_456_789];\n+LL |     let bad_vec64: Vec<f64> = vec![0.123_456_789_123_456_789];\n    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider changing the type or truncating it to: `0.123_456_789_123_456_78`\n \n error: float has excessive precision\n   --> $DIR/excessive_precision.rs:61:24\n    |\n-61 |     let bad_e32: f32 = 1.123_456_788_888e-10;\n+LL |     let bad_e32: f32 = 1.123_456_788_888e-10;\n    |                        ^^^^^^^^^^^^^^^^^^^^^ help: consider changing the type or truncating it to: `1.123_456_8e-10`\n \n error: float has excessive precision\n   --> $DIR/excessive_precision.rs:64:27\n    |\n-64 |     let bad_bige32: f32 = 1.123_456_788_888E-10;\n+LL |     let bad_bige32: f32 = 1.123_456_788_888E-10;\n    |                           ^^^^^^^^^^^^^^^^^^^^^ help: consider changing the type or truncating it to: `1.123_456_8E-10`\n \n error: aborting due to 18 previous errors"}, {"sha": "72a6995c1ceffcf83fde5804f60261bc21d31785", "filename": "tests/ui/expect_fun_call.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fexpect_fun_call.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fexpect_fun_call.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fexpect_fun_call.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,39 +1,39 @@\n error: use of `expect` followed by a function call\n   --> $DIR/expect_fun_call.rs:36:26\n    |\n-36 |     with_none_and_format.expect(&format!(\"Error {}: fake error\", error_code));\n+LL |     with_none_and_format.expect(&format!(\"Error {}: fake error\", error_code));\n    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `unwrap_or_else(|| panic!(\"Error {}: fake error\", error_code))`\n    |\n    = note: `-D clippy::expect-fun-call` implied by `-D warnings`\n \n error: use of `expect` followed by a function call\n   --> $DIR/expect_fun_call.rs:39:26\n    |\n-39 |     with_none_and_as_str.expect(format!(\"Error {}: fake error\", error_code).as_str());\n+LL |     with_none_and_as_str.expect(format!(\"Error {}: fake error\", error_code).as_str());\n    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `unwrap_or_else(|| panic!(\"Error {}: fake error\", error_code))`\n \n error: use of `expect` followed by a function call\n   --> $DIR/expect_fun_call.rs:49:25\n    |\n-49 |     with_err_and_format.expect(&format!(\"Error {}: fake error\", error_code));\n+LL |     with_err_and_format.expect(&format!(\"Error {}: fake error\", error_code));\n    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `unwrap_or_else(|_| panic!(\"Error {}: fake error\", error_code))`\n \n error: use of `expect` followed by a function call\n   --> $DIR/expect_fun_call.rs:52:25\n    |\n-52 |     with_err_and_as_str.expect(format!(\"Error {}: fake error\", error_code).as_str());\n+LL |     with_err_and_as_str.expect(format!(\"Error {}: fake error\", error_code).as_str());\n    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `unwrap_or_else(|_| panic!(\"Error {}: fake error\", error_code))`\n \n error: use of `expect` followed by a function call\n   --> $DIR/expect_fun_call.rs:67:17\n    |\n-67 |     Some(\"foo\").expect({ &format!(\"error\") });\n+LL |     Some(\"foo\").expect({ &format!(\"error\") });\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `unwrap_or_else(|| { let msg = { &format!(\"error\") }; panic!(msg) }))`\n \n error: use of `expect` followed by a function call\n   --> $DIR/expect_fun_call.rs:68:17\n    |\n-68 |     Some(\"foo\").expect(format!(\"error\").as_ref());\n+LL |     Some(\"foo\").expect(format!(\"error\").as_ref());\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `unwrap_or_else(|| panic!(\"error\"))`\n \n error: aborting due to 6 previous errors"}, {"sha": "caccaee84b9b8d0519ce54a3edeb0ccb0aaceb67", "filename": "tests/ui/explicit_counter_loop.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fexplicit_counter_loop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fexplicit_counter_loop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fexplicit_counter_loop.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,27 +1,27 @@\n error: the variable `_index` is used as a loop counter. Consider using `for (_index, item) in &vec.enumerate()` or similar iterators\n   --> $DIR/explicit_counter_loop.rs:15:15\n    |\n-15 |     for _v in &vec {\n+LL |     for _v in &vec {\n    |               ^^^^\n    |\n    = note: `-D clippy::explicit-counter-loop` implied by `-D warnings`\n \n error: the variable `_index` is used as a loop counter. Consider using `for (_index, item) in &vec.enumerate()` or similar iterators\n   --> $DIR/explicit_counter_loop.rs:21:15\n    |\n-21 |     for _v in &vec {\n+LL |     for _v in &vec {\n    |               ^^^^\n \n error: the variable `count` is used as a loop counter. Consider using `for (count, item) in text.chars().enumerate()` or similar iterators\n   --> $DIR/explicit_counter_loop.rs:60:19\n    |\n-60 |         for ch in text.chars() {\n+LL |         for ch in text.chars() {\n    |                   ^^^^^^^^^^^^\n \n error: the variable `count` is used as a loop counter. Consider using `for (count, item) in text.chars().enumerate()` or similar iterators\n   --> $DIR/explicit_counter_loop.rs:71:19\n    |\n-71 |         for ch in text.chars() {\n+LL |         for ch in text.chars() {\n    |                   ^^^^^^^^^^^^\n \n error: aborting due to 4 previous errors"}, {"sha": "1072d9bd0d262160c1764182aef4d1ad95491551", "filename": "tests/ui/explicit_write.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fexplicit_write.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fexplicit_write.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fexplicit_write.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,51 +1,51 @@\n error: use of `write!(stdout(), ...).unwrap()`\n   --> $DIR/explicit_write.rs:24:9\n    |\n-24 |         write!(std::io::stdout(), \"test\").unwrap();\n+LL |         write!(std::io::stdout(), \"test\").unwrap();\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `print!(\"test\")`\n    |\n    = note: `-D clippy::explicit-write` implied by `-D warnings`\n \n error: use of `write!(stderr(), ...).unwrap()`\n   --> $DIR/explicit_write.rs:25:9\n    |\n-25 |         write!(std::io::stderr(), \"test\").unwrap();\n+LL |         write!(std::io::stderr(), \"test\").unwrap();\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `eprint!(\"test\")`\n \n error: use of `writeln!(stdout(), ...).unwrap()`\n   --> $DIR/explicit_write.rs:26:9\n    |\n-26 |         writeln!(std::io::stdout(), \"test\").unwrap();\n+LL |         writeln!(std::io::stdout(), \"test\").unwrap();\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `println!(\"test\")`\n \n error: use of `writeln!(stderr(), ...).unwrap()`\n   --> $DIR/explicit_write.rs:27:9\n    |\n-27 |         writeln!(std::io::stderr(), \"test\").unwrap();\n+LL |         writeln!(std::io::stderr(), \"test\").unwrap();\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `eprintln!(\"test\")`\n \n error: use of `stdout().write_fmt(...).unwrap()`\n   --> $DIR/explicit_write.rs:28:9\n    |\n-28 |         std::io::stdout().write_fmt(format_args!(\"test\")).unwrap();\n+LL |         std::io::stdout().write_fmt(format_args!(\"test\")).unwrap();\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `print!(\"test\")`\n \n error: use of `stderr().write_fmt(...).unwrap()`\n   --> $DIR/explicit_write.rs:29:9\n    |\n-29 |         std::io::stderr().write_fmt(format_args!(\"test\")).unwrap();\n+LL |         std::io::stderr().write_fmt(format_args!(\"test\")).unwrap();\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `eprint!(\"test\")`\n \n error: use of `writeln!(stdout(), ...).unwrap()`\n   --> $DIR/explicit_write.rs:32:9\n    |\n-32 |         writeln!(std::io::stdout(), \"test/ntest\").unwrap();\n+LL |         writeln!(std::io::stdout(), \"test/ntest\").unwrap();\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `println!(\"test/ntest\")`\n \n error: use of `writeln!(stderr(), ...).unwrap()`\n   --> $DIR/explicit_write.rs:33:9\n    |\n-33 |         writeln!(std::io::stderr(), \"test/ntest\").unwrap();\n+LL |         writeln!(std::io::stderr(), \"test/ntest\").unwrap();\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `eprintln!(\"test/ntest\")`\n \n error: aborting due to 8 previous errors"}, {"sha": "55efac7951a6522db901b3a8a171b8b734a1b4dc", "filename": "tests/ui/fallible_impl_from.stderr", "status": "modified", "additions": 33, "deletions": 33, "changes": 66, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Ffallible_impl_from.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Ffallible_impl_from.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffallible_impl_from.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,91 +1,91 @@\n error: consider implementing `TryFrom` instead\n   --> $DIR/fallible_impl_from.rs:14:1\n    |\n-14 | / impl From<String> for Foo {\n-15 | |     fn from(s: String) -> Self {\n-16 | |         Foo(s.parse().unwrap())\n-17 | |     }\n-18 | | }\n+LL | / impl From<String> for Foo {\n+LL | |     fn from(s: String) -> Self {\n+LL | |         Foo(s.parse().unwrap())\n+LL | |     }\n+LL | | }\n    | |_^\n    |\n note: lint level defined here\n   --> $DIR/fallible_impl_from.rs:10:9\n    |\n-10 | #![deny(clippy::fallible_impl_from)]\n+LL | #![deny(clippy::fallible_impl_from)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^\n    = help: `From` is intended for infallible conversions only. Use `TryFrom` if there's a possibility for the conversion to fail.\n note: potential failure(s)\n   --> $DIR/fallible_impl_from.rs:16:13\n    |\n-16 |         Foo(s.parse().unwrap())\n+LL |         Foo(s.parse().unwrap())\n    |             ^^^^^^^^^^^^^^^^^^\n \n error: consider implementing `TryFrom` instead\n   --> $DIR/fallible_impl_from.rs:35:1\n    |\n-35 | / impl From<usize> for Invalid {\n-36 | |     fn from(i: usize) -> Invalid {\n-37 | |         if i != 42 {\n-38 | |             panic!();\n+LL | / impl From<usize> for Invalid {\n+LL | |     fn from(i: usize) -> Invalid {\n+LL | |         if i != 42 {\n+LL | |             panic!();\n ...  |\n-41 | |     }\n-42 | | }\n+LL | |     }\n+LL | | }\n    | |_^\n    |\n    = help: `From` is intended for infallible conversions only. Use `TryFrom` if there's a possibility for the conversion to fail.\n note: potential failure(s)\n   --> $DIR/fallible_impl_from.rs:38:13\n    |\n-38 |             panic!();\n+LL |             panic!();\n    |             ^^^^^^^^^\n    = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n \n error: consider implementing `TryFrom` instead\n   --> $DIR/fallible_impl_from.rs:44:1\n    |\n-44 | / impl From<Option<String>> for Invalid {\n-45 | |     fn from(s: Option<String>) -> Invalid {\n-46 | |         let s = s.unwrap();\n-47 | |         if !s.is_empty() {\n+LL | / impl From<Option<String>> for Invalid {\n+LL | |     fn from(s: Option<String>) -> Invalid {\n+LL | |         let s = s.unwrap();\n+LL | |         if !s.is_empty() {\n ...  |\n-53 | |     }\n-54 | | }\n+LL | |     }\n+LL | | }\n    | |_^\n    |\n    = help: `From` is intended for infallible conversions only. Use `TryFrom` if there's a possibility for the conversion to fail.\n note: potential failure(s)\n   --> $DIR/fallible_impl_from.rs:46:17\n    |\n-46 |         let s = s.unwrap();\n+LL |         let s = s.unwrap();\n    |                 ^^^^^^^^^^\n-47 |         if !s.is_empty() {\n-48 |             panic!(42);\n+LL |         if !s.is_empty() {\n+LL |             panic!(42);\n    |             ^^^^^^^^^^^\n-49 |         } else if s.parse::<u32>().unwrap() != 42 {\n+LL |         } else if s.parse::<u32>().unwrap() != 42 {\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^\n-50 |             panic!(\"{:?}\", s);\n+LL |             panic!(\"{:?}\", s);\n    |             ^^^^^^^^^^^^^^^^^^\n    = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n \n error: consider implementing `TryFrom` instead\n   --> $DIR/fallible_impl_from.rs:62:1\n    |\n-62 | / impl<'a> From<&'a mut <Box<u32> as ProjStrTrait>::ProjString> for Invalid {\n-63 | |     fn from(s: &'a mut <Box<u32> as ProjStrTrait>::ProjString) -> Invalid {\n-64 | |         if s.parse::<u32>().ok().unwrap() != 42 {\n-65 | |             panic!(\"{:?}\", s);\n+LL | / impl<'a> From<&'a mut <Box<u32> as ProjStrTrait>::ProjString> for Invalid {\n+LL | |     fn from(s: &'a mut <Box<u32> as ProjStrTrait>::ProjString) -> Invalid {\n+LL | |         if s.parse::<u32>().ok().unwrap() != 42 {\n+LL | |             panic!(\"{:?}\", s);\n ...  |\n-68 | |     }\n-69 | | }\n+LL | |     }\n+LL | | }\n    | |_^\n    |\n    = help: `From` is intended for infallible conversions only. Use `TryFrom` if there's a possibility for the conversion to fail.\n note: potential failure(s)\n   --> $DIR/fallible_impl_from.rs:64:12\n    |\n-64 |         if s.parse::<u32>().ok().unwrap() != 42 {\n+LL |         if s.parse::<u32>().ok().unwrap() != 42 {\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-65 |             panic!(\"{:?}\", s);\n+LL |             panic!(\"{:?}\", s);\n    |             ^^^^^^^^^^^^^^^^^^\n    = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n "}, {"sha": "c10d673148a91b8ec8724395d98be3a510ea8aac", "filename": "tests/ui/filter_methods.stderr", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Ffilter_methods.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Ffilter_methods.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffilter_methods.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,39 +1,39 @@\n error: called `filter(p).map(q)` on an `Iterator`. This is more succinctly expressed by calling `.filter_map(..)` instead.\n   --> $DIR/filter_methods.rs:14:21\n    |\n-14 |     let _: Vec<_> = vec![5; 6].into_iter().filter(|&x| x == 0).map(|x| x * 2).collect();\n+LL |     let _: Vec<_> = vec![5; 6].into_iter().filter(|&x| x == 0).map(|x| x * 2).collect();\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::filter-map` implied by `-D warnings`\n \n error: called `filter(p).flat_map(q)` on an `Iterator`. This is more succinctly expressed by calling `.flat_map(..)` and filtering by returning an empty Iterator.\n   --> $DIR/filter_methods.rs:16:21\n    |\n-16 |       let _: Vec<_> = vec![5_i8; 6]\n+LL |       let _: Vec<_> = vec![5_i8; 6]\n    |  _____________________^\n-17 | |         .into_iter()\n-18 | |         .filter(|&x| x == 0)\n-19 | |         .flat_map(|x| x.checked_mul(2))\n+LL | |         .into_iter()\n+LL | |         .filter(|&x| x == 0)\n+LL | |         .flat_map(|x| x.checked_mul(2))\n    | |_______________________________________^\n \n error: called `filter_map(p).flat_map(q)` on an `Iterator`. This is more succinctly expressed by calling `.flat_map(..)` and filtering by returning an empty Iterator.\n   --> $DIR/filter_methods.rs:22:21\n    |\n-22 |       let _: Vec<_> = vec![5_i8; 6]\n+LL |       let _: Vec<_> = vec![5_i8; 6]\n    |  _____________________^\n-23 | |         .into_iter()\n-24 | |         .filter_map(|x| x.checked_mul(2))\n-25 | |         .flat_map(|x| x.checked_mul(2))\n+LL | |         .into_iter()\n+LL | |         .filter_map(|x| x.checked_mul(2))\n+LL | |         .flat_map(|x| x.checked_mul(2))\n    | |_______________________________________^\n \n error: called `filter_map(p).map(q)` on an `Iterator`. This is more succinctly expressed by only calling `.filter_map(..)` instead.\n   --> $DIR/filter_methods.rs:28:21\n    |\n-28 |       let _: Vec<_> = vec![5_i8; 6]\n+LL |       let _: Vec<_> = vec![5_i8; 6]\n    |  _____________________^\n-29 | |         .into_iter()\n-30 | |         .filter_map(|x| x.checked_mul(2))\n-31 | |         .map(|x| x.checked_mul(2))\n+LL | |         .into_iter()\n+LL | |         .filter_map(|x| x.checked_mul(2))\n+LL | |         .map(|x| x.checked_mul(2))\n    | |__________________________________^\n \n error: aborting due to 4 previous errors"}, {"sha": "bdbbccee71494db8261abdf1b1b33e8cdc2d4051", "filename": "tests/ui/float_cmp.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Ffloat_cmp.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Ffloat_cmp.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffloat_cmp.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,38 +1,38 @@\n error: strict comparison of f32 or f64\n   --> $DIR/float_cmp.rs:69:5\n    |\n-69 |     ONE as f64 != 2.0;\n+LL |     ONE as f64 != 2.0;\n    |     ^^^^^^^^^^^^^^^^^ help: consider comparing them within some error: `(ONE as f64 - 2.0).abs() < error`\n    |\n    = note: `-D clippy::float-cmp` implied by `-D warnings`\n note: std::f32::EPSILON and std::f64::EPSILON are available.\n   --> $DIR/float_cmp.rs:69:5\n    |\n-69 |     ONE as f64 != 2.0;\n+LL |     ONE as f64 != 2.0;\n    |     ^^^^^^^^^^^^^^^^^\n \n error: strict comparison of f32 or f64\n   --> $DIR/float_cmp.rs:74:5\n    |\n-74 |     x == 1.0;\n+LL |     x == 1.0;\n    |     ^^^^^^^^ help: consider comparing them within some error: `(x - 1.0).abs() < error`\n    |\n note: std::f32::EPSILON and std::f64::EPSILON are available.\n   --> $DIR/float_cmp.rs:74:5\n    |\n-74 |     x == 1.0;\n+LL |     x == 1.0;\n    |     ^^^^^^^^\n \n error: strict comparison of f32 or f64\n   --> $DIR/float_cmp.rs:77:5\n    |\n-77 |     twice(x) != twice(ONE as f64);\n+LL |     twice(x) != twice(ONE as f64);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider comparing them within some error: `(twice(x) - twice(ONE as f64)).abs() < error`\n    |\n note: std::f32::EPSILON and std::f64::EPSILON are available.\n   --> $DIR/float_cmp.rs:77:5\n    |\n-77 |     twice(x) != twice(ONE as f64);\n+LL |     twice(x) != twice(ONE as f64);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 3 previous errors"}, {"sha": "2b434f3181458dd1ec66bee8005ce7aaad25aefb", "filename": "tests/ui/float_cmp_const.stderr", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Ffloat_cmp_const.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Ffloat_cmp_const.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffloat_cmp_const.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,86 +1,86 @@\n error: strict comparison of f32 or f64 constant\n   --> $DIR/float_cmp_const.rs:27:5\n    |\n-27 |     1f32 == ONE;\n+LL |     1f32 == ONE;\n    |     ^^^^^^^^^^^ help: consider comparing them within some error: `(1f32 - ONE).abs() < error`\n    |\n    = note: `-D clippy::float-cmp-const` implied by `-D warnings`\n note: std::f32::EPSILON and std::f64::EPSILON are available.\n   --> $DIR/float_cmp_const.rs:27:5\n    |\n-27 |     1f32 == ONE;\n+LL |     1f32 == ONE;\n    |     ^^^^^^^^^^^\n \n error: strict comparison of f32 or f64 constant\n   --> $DIR/float_cmp_const.rs:28:5\n    |\n-28 |     TWO == ONE;\n+LL |     TWO == ONE;\n    |     ^^^^^^^^^^ help: consider comparing them within some error: `(TWO - ONE).abs() < error`\n    |\n note: std::f32::EPSILON and std::f64::EPSILON are available.\n   --> $DIR/float_cmp_const.rs:28:5\n    |\n-28 |     TWO == ONE;\n+LL |     TWO == ONE;\n    |     ^^^^^^^^^^\n \n error: strict comparison of f32 or f64 constant\n   --> $DIR/float_cmp_const.rs:29:5\n    |\n-29 |     TWO != ONE;\n+LL |     TWO != ONE;\n    |     ^^^^^^^^^^ help: consider comparing them within some error: `(TWO - ONE).abs() < error`\n    |\n note: std::f32::EPSILON and std::f64::EPSILON are available.\n   --> $DIR/float_cmp_const.rs:29:5\n    |\n-29 |     TWO != ONE;\n+LL |     TWO != ONE;\n    |     ^^^^^^^^^^\n \n error: strict comparison of f32 or f64 constant\n   --> $DIR/float_cmp_const.rs:30:5\n    |\n-30 |     ONE + ONE == TWO;\n+LL |     ONE + ONE == TWO;\n    |     ^^^^^^^^^^^^^^^^ help: consider comparing them within some error: `(ONE + ONE - TWO).abs() < error`\n    |\n note: std::f32::EPSILON and std::f64::EPSILON are available.\n   --> $DIR/float_cmp_const.rs:30:5\n    |\n-30 |     ONE + ONE == TWO;\n+LL |     ONE + ONE == TWO;\n    |     ^^^^^^^^^^^^^^^^\n \n error: strict comparison of f32 or f64 constant\n   --> $DIR/float_cmp_const.rs:31:5\n    |\n-31 |     1 as f32 == ONE;\n+LL |     1 as f32 == ONE;\n    |     ^^^^^^^^^^^^^^^ help: consider comparing them within some error: `(1 as f32 - ONE).abs() < error`\n    |\n note: std::f32::EPSILON and std::f64::EPSILON are available.\n   --> $DIR/float_cmp_const.rs:31:5\n    |\n-31 |     1 as f32 == ONE;\n+LL |     1 as f32 == ONE;\n    |     ^^^^^^^^^^^^^^^\n \n error: strict comparison of f32 or f64 constant\n   --> $DIR/float_cmp_const.rs:34:5\n    |\n-34 |     v == ONE;\n+LL |     v == ONE;\n    |     ^^^^^^^^ help: consider comparing them within some error: `(v - ONE).abs() < error`\n    |\n note: std::f32::EPSILON and std::f64::EPSILON are available.\n   --> $DIR/float_cmp_const.rs:34:5\n    |\n-34 |     v == ONE;\n+LL |     v == ONE;\n    |     ^^^^^^^^\n \n error: strict comparison of f32 or f64 constant\n   --> $DIR/float_cmp_const.rs:35:5\n    |\n-35 |     v != ONE;\n+LL |     v != ONE;\n    |     ^^^^^^^^ help: consider comparing them within some error: `(v - ONE).abs() < error`\n    |\n note: std::f32::EPSILON and std::f64::EPSILON are available.\n   --> $DIR/float_cmp_const.rs:35:5\n    |\n-35 |     v != ONE;\n+LL |     v != ONE;\n    |     ^^^^^^^^\n \n error: aborting due to 7 previous errors"}, {"sha": "16605fd344a831cad5ef389244f050ba3514fee7", "filename": "tests/ui/fn_to_numeric_cast.stderr", "status": "modified", "additions": 23, "deletions": 23, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Ffn_to_numeric_cast.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Ffn_to_numeric_cast.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffn_to_numeric_cast.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,143 +1,143 @@\n error: casting function pointer `foo` to `i8`, which truncates the value\n   --> $DIR/fn_to_numeric_cast.rs:19:13\n    |\n-19 |     let _ = foo as i8;\n+LL |     let _ = foo as i8;\n    |             ^^^^^^^^^ help: try: `foo as usize`\n    |\n    = note: `-D clippy::fn-to-numeric-cast-with-truncation` implied by `-D warnings`\n \n error: casting function pointer `foo` to `i16`, which truncates the value\n   --> $DIR/fn_to_numeric_cast.rs:20:13\n    |\n-20 |     let _ = foo as i16;\n+LL |     let _ = foo as i16;\n    |             ^^^^^^^^^^ help: try: `foo as usize`\n \n error: casting function pointer `foo` to `i32`, which truncates the value\n   --> $DIR/fn_to_numeric_cast.rs:21:13\n    |\n-21 |     let _ = foo as i32;\n+LL |     let _ = foo as i32;\n    |             ^^^^^^^^^^ help: try: `foo as usize`\n \n error: casting function pointer `foo` to `i64`\n   --> $DIR/fn_to_numeric_cast.rs:22:13\n    |\n-22 |     let _ = foo as i64;\n+LL |     let _ = foo as i64;\n    |             ^^^^^^^^^^ help: try: `foo as usize`\n    |\n    = note: `-D clippy::fn-to-numeric-cast` implied by `-D warnings`\n \n error: casting function pointer `foo` to `i128`\n   --> $DIR/fn_to_numeric_cast.rs:23:13\n    |\n-23 |     let _ = foo as i128;\n+LL |     let _ = foo as i128;\n    |             ^^^^^^^^^^^ help: try: `foo as usize`\n \n error: casting function pointer `foo` to `isize`\n   --> $DIR/fn_to_numeric_cast.rs:24:13\n    |\n-24 |     let _ = foo as isize;\n+LL |     let _ = foo as isize;\n    |             ^^^^^^^^^^^^ help: try: `foo as usize`\n \n error: casting function pointer `foo` to `u8`, which truncates the value\n   --> $DIR/fn_to_numeric_cast.rs:26:13\n    |\n-26 |     let _ = foo as u8;\n+LL |     let _ = foo as u8;\n    |             ^^^^^^^^^ help: try: `foo as usize`\n \n error: casting function pointer `foo` to `u16`, which truncates the value\n   --> $DIR/fn_to_numeric_cast.rs:27:13\n    |\n-27 |     let _ = foo as u16;\n+LL |     let _ = foo as u16;\n    |             ^^^^^^^^^^ help: try: `foo as usize`\n \n error: casting function pointer `foo` to `u32`, which truncates the value\n   --> $DIR/fn_to_numeric_cast.rs:28:13\n    |\n-28 |     let _ = foo as u32;\n+LL |     let _ = foo as u32;\n    |             ^^^^^^^^^^ help: try: `foo as usize`\n \n error: casting function pointer `foo` to `u64`\n   --> $DIR/fn_to_numeric_cast.rs:29:13\n    |\n-29 |     let _ = foo as u64;\n+LL |     let _ = foo as u64;\n    |             ^^^^^^^^^^ help: try: `foo as usize`\n \n error: casting function pointer `foo` to `u128`\n   --> $DIR/fn_to_numeric_cast.rs:30:13\n    |\n-30 |     let _ = foo as u128;\n+LL |     let _ = foo as u128;\n    |             ^^^^^^^^^^^ help: try: `foo as usize`\n \n error: casting function pointer `abc` to `i8`, which truncates the value\n   --> $DIR/fn_to_numeric_cast.rs:43:13\n    |\n-43 |     let _ = abc as i8;\n+LL |     let _ = abc as i8;\n    |             ^^^^^^^^^ help: try: `abc as usize`\n \n error: casting function pointer `abc` to `i16`, which truncates the value\n   --> $DIR/fn_to_numeric_cast.rs:44:13\n    |\n-44 |     let _ = abc as i16;\n+LL |     let _ = abc as i16;\n    |             ^^^^^^^^^^ help: try: `abc as usize`\n \n error: casting function pointer `abc` to `i32`, which truncates the value\n   --> $DIR/fn_to_numeric_cast.rs:45:13\n    |\n-45 |     let _ = abc as i32;\n+LL |     let _ = abc as i32;\n    |             ^^^^^^^^^^ help: try: `abc as usize`\n \n error: casting function pointer `abc` to `i64`\n   --> $DIR/fn_to_numeric_cast.rs:46:13\n    |\n-46 |     let _ = abc as i64;\n+LL |     let _ = abc as i64;\n    |             ^^^^^^^^^^ help: try: `abc as usize`\n \n error: casting function pointer `abc` to `i128`\n   --> $DIR/fn_to_numeric_cast.rs:47:13\n    |\n-47 |     let _ = abc as i128;\n+LL |     let _ = abc as i128;\n    |             ^^^^^^^^^^^ help: try: `abc as usize`\n \n error: casting function pointer `abc` to `isize`\n   --> $DIR/fn_to_numeric_cast.rs:48:13\n    |\n-48 |     let _ = abc as isize;\n+LL |     let _ = abc as isize;\n    |             ^^^^^^^^^^^^ help: try: `abc as usize`\n \n error: casting function pointer `abc` to `u8`, which truncates the value\n   --> $DIR/fn_to_numeric_cast.rs:50:13\n    |\n-50 |     let _ = abc as u8;\n+LL |     let _ = abc as u8;\n    |             ^^^^^^^^^ help: try: `abc as usize`\n \n error: casting function pointer `abc` to `u16`, which truncates the value\n   --> $DIR/fn_to_numeric_cast.rs:51:13\n    |\n-51 |     let _ = abc as u16;\n+LL |     let _ = abc as u16;\n    |             ^^^^^^^^^^ help: try: `abc as usize`\n \n error: casting function pointer `abc` to `u32`, which truncates the value\n   --> $DIR/fn_to_numeric_cast.rs:52:13\n    |\n-52 |     let _ = abc as u32;\n+LL |     let _ = abc as u32;\n    |             ^^^^^^^^^^ help: try: `abc as usize`\n \n error: casting function pointer `abc` to `u64`\n   --> $DIR/fn_to_numeric_cast.rs:53:13\n    |\n-53 |     let _ = abc as u64;\n+LL |     let _ = abc as u64;\n    |             ^^^^^^^^^^ help: try: `abc as usize`\n \n error: casting function pointer `abc` to `u128`\n   --> $DIR/fn_to_numeric_cast.rs:54:13\n    |\n-54 |     let _ = abc as u128;\n+LL |     let _ = abc as u128;\n    |             ^^^^^^^^^^^ help: try: `abc as usize`\n \n error: casting function pointer `f` to `i32`, which truncates the value\n   --> $DIR/fn_to_numeric_cast.rs:61:5\n    |\n-61 |     f as i32\n+LL |     f as i32\n    |     ^^^^^^^^ help: try: `f as usize`\n \n error: aborting due to 23 previous errors"}, {"sha": "937bef9f8a6f165e8fb85298561be1a10202f42f", "filename": "tests/ui/for_loop.stderr", "status": "modified", "additions": 241, "deletions": 241, "changes": 482, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Ffor_loop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Ffor_loop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffor_loop.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,421 +1,421 @@\n error: the loop variable `i` is only used to index `vec`.\n   --> $DIR/for_loop.rs:50:14\n    |\n-50 |     for i in 0..vec.len() {\n+LL |     for i in 0..vec.len() {\n    |              ^^^^^^^^^^^^\n    |\n    = note: `-D clippy::needless-range-loop` implied by `-D warnings`\n help: consider using an iterator\n    |\n-50 |     for <item> in &vec {\n+LL |     for <item> in &vec {\n    |         ^^^^^^    ^^^^\n \n error: the loop variable `i` is only used to index `vec`.\n   --> $DIR/for_loop.rs:59:14\n    |\n-59 |     for i in 0..vec.len() {\n+LL |     for i in 0..vec.len() {\n    |              ^^^^^^^^^^^^\n help: consider using an iterator\n    |\n-59 |     for <item> in &vec {\n+LL |     for <item> in &vec {\n    |         ^^^^^^    ^^^^\n \n error: the loop variable `j` is only used to index `STATIC`.\n   --> $DIR/for_loop.rs:64:14\n    |\n-64 |     for j in 0..4 {\n+LL |     for j in 0..4 {\n    |              ^^^^\n help: consider using an iterator\n    |\n-64 |     for <item> in &STATIC {\n+LL |     for <item> in &STATIC {\n    |         ^^^^^^    ^^^^^^^\n \n error: the loop variable `j` is only used to index `CONST`.\n   --> $DIR/for_loop.rs:68:14\n    |\n-68 |     for j in 0..4 {\n+LL |     for j in 0..4 {\n    |              ^^^^\n help: consider using an iterator\n    |\n-68 |     for <item> in &CONST {\n+LL |     for <item> in &CONST {\n    |         ^^^^^^    ^^^^^^\n \n error: the loop variable `i` is used to index `vec`\n   --> $DIR/for_loop.rs:72:14\n    |\n-72 |     for i in 0..vec.len() {\n+LL |     for i in 0..vec.len() {\n    |              ^^^^^^^^^^^^\n help: consider using an iterator\n    |\n-72 |     for (i, <item>) in vec.iter().enumerate() {\n+LL |     for (i, <item>) in vec.iter().enumerate() {\n    |         ^^^^^^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^\n \n error: the loop variable `i` is only used to index `vec2`.\n   --> $DIR/for_loop.rs:80:14\n    |\n-80 |     for i in 0..vec.len() {\n+LL |     for i in 0..vec.len() {\n    |              ^^^^^^^^^^^^\n help: consider using an iterator\n    |\n-80 |     for <item> in vec2.iter().take(vec.len()) {\n+LL |     for <item> in vec2.iter().take(vec.len()) {\n    |         ^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: the loop variable `i` is only used to index `vec`.\n   --> $DIR/for_loop.rs:84:14\n    |\n-84 |     for i in 5..vec.len() {\n+LL |     for i in 5..vec.len() {\n    |              ^^^^^^^^^^^^\n help: consider using an iterator\n    |\n-84 |     for <item> in vec.iter().skip(5) {\n+LL |     for <item> in vec.iter().skip(5) {\n    |         ^^^^^^    ^^^^^^^^^^^^^^^^^^\n \n error: the loop variable `i` is only used to index `vec`.\n   --> $DIR/for_loop.rs:88:14\n    |\n-88 |     for i in 0..MAX_LEN {\n+LL |     for i in 0..MAX_LEN {\n    |              ^^^^^^^^^^\n help: consider using an iterator\n    |\n-88 |     for <item> in vec.iter().take(MAX_LEN) {\n+LL |     for <item> in vec.iter().take(MAX_LEN) {\n    |         ^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: the loop variable `i` is only used to index `vec`.\n   --> $DIR/for_loop.rs:92:14\n    |\n-92 |     for i in 0..=MAX_LEN {\n+LL |     for i in 0..=MAX_LEN {\n    |              ^^^^^^^^^^^\n help: consider using an iterator\n    |\n-92 |     for <item> in vec.iter().take(MAX_LEN + 1) {\n+LL |     for <item> in vec.iter().take(MAX_LEN + 1) {\n    |         ^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: the loop variable `i` is only used to index `vec`.\n   --> $DIR/for_loop.rs:96:14\n    |\n-96 |     for i in 5..10 {\n+LL |     for i in 5..10 {\n    |              ^^^^^\n help: consider using an iterator\n    |\n-96 |     for <item> in vec.iter().take(10).skip(5) {\n+LL |     for <item> in vec.iter().take(10).skip(5) {\n    |         ^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: the loop variable `i` is only used to index `vec`.\n-   --> $DIR/for_loop.rs:100:14\n-    |\n-100 |     for i in 5..=10 {\n-    |              ^^^^^^\n+  --> $DIR/for_loop.rs:100:14\n+   |\n+LL |     for i in 5..=10 {\n+   |              ^^^^^^\n help: consider using an iterator\n-    |\n-100 |     for <item> in vec.iter().take(10 + 1).skip(5) {\n-    |         ^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+LL |     for <item> in vec.iter().take(10 + 1).skip(5) {\n+   |         ^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: the loop variable `i` is used to index `vec`\n-   --> $DIR/for_loop.rs:104:14\n-    |\n-104 |     for i in 5..vec.len() {\n-    |              ^^^^^^^^^^^^\n+  --> $DIR/for_loop.rs:104:14\n+   |\n+LL |     for i in 5..vec.len() {\n+   |              ^^^^^^^^^^^^\n help: consider using an iterator\n-    |\n-104 |     for (i, <item>) in vec.iter().enumerate().skip(5) {\n-    |         ^^^^^^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+LL |     for (i, <item>) in vec.iter().enumerate().skip(5) {\n+   |         ^^^^^^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: the loop variable `i` is used to index `vec`\n-   --> $DIR/for_loop.rs:108:14\n-    |\n-108 |     for i in 5..10 {\n-    |              ^^^^^\n+  --> $DIR/for_loop.rs:108:14\n+   |\n+LL |     for i in 5..10 {\n+   |              ^^^^^\n help: consider using an iterator\n-    |\n-108 |     for (i, <item>) in vec.iter().enumerate().take(10).skip(5) {\n-    |         ^^^^^^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+LL |     for (i, <item>) in vec.iter().enumerate().take(10).skip(5) {\n+   |         ^^^^^^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: this range is empty so this for loop will never run\n-   --> $DIR/for_loop.rs:112:14\n-    |\n-112 |     for i in 10..0 {\n-    |              ^^^^^\n-    |\n-    = note: `-D clippy::reverse-range-loop` implied by `-D warnings`\n+  --> $DIR/for_loop.rs:112:14\n+   |\n+LL |     for i in 10..0 {\n+   |              ^^^^^\n+   |\n+   = note: `-D clippy::reverse-range-loop` implied by `-D warnings`\n help: consider using the following if you are attempting to iterate over this range in reverse\n-    |\n-112 |     for i in (0..10).rev() {\n-    |              ^^^^^^^^^^^^^\n+   |\n+LL |     for i in (0..10).rev() {\n+   |              ^^^^^^^^^^^^^\n \n error: this range is empty so this for loop will never run\n-   --> $DIR/for_loop.rs:116:14\n-    |\n-116 |     for i in 10..=0 {\n-    |              ^^^^^^\n+  --> $DIR/for_loop.rs:116:14\n+   |\n+LL |     for i in 10..=0 {\n+   |              ^^^^^^\n help: consider using the following if you are attempting to iterate over this range in reverse\n-    |\n-116 |     for i in (0...10).rev() {\n-    |              ^^^^^^^^^^^^^^\n+   |\n+LL |     for i in (0...10).rev() {\n+   |              ^^^^^^^^^^^^^^\n \n error: this range is empty so this for loop will never run\n-   --> $DIR/for_loop.rs:120:14\n-    |\n-120 |     for i in MAX_LEN..0 {\n-    |              ^^^^^^^^^^\n+  --> $DIR/for_loop.rs:120:14\n+   |\n+LL |     for i in MAX_LEN..0 {\n+   |              ^^^^^^^^^^\n help: consider using the following if you are attempting to iterate over this range in reverse\n-    |\n-120 |     for i in (0..MAX_LEN).rev() {\n-    |              ^^^^^^^^^^^^^^^^^^\n+   |\n+LL |     for i in (0..MAX_LEN).rev() {\n+   |              ^^^^^^^^^^^^^^^^^^\n \n error: this range is empty so this for loop will never run\n-   --> $DIR/for_loop.rs:124:14\n-    |\n-124 |     for i in 5..5 {\n-    |              ^^^^\n+  --> $DIR/for_loop.rs:124:14\n+   |\n+LL |     for i in 5..5 {\n+   |              ^^^^\n \n error: this range is empty so this for loop will never run\n-   --> $DIR/for_loop.rs:149:14\n-    |\n-149 |     for i in 10..5 + 4 {\n-    |              ^^^^^^^^^\n+  --> $DIR/for_loop.rs:149:14\n+   |\n+LL |     for i in 10..5 + 4 {\n+   |              ^^^^^^^^^\n help: consider using the following if you are attempting to iterate over this range in reverse\n-    |\n-149 |     for i in (5 + 4..10).rev() {\n-    |              ^^^^^^^^^^^^^^^^^\n+   |\n+LL |     for i in (5 + 4..10).rev() {\n+   |              ^^^^^^^^^^^^^^^^^\n \n error: this range is empty so this for loop will never run\n-   --> $DIR/for_loop.rs:153:14\n-    |\n-153 |     for i in (5 + 2)..(3 - 1) {\n-    |              ^^^^^^^^^^^^^^^^\n+  --> $DIR/for_loop.rs:153:14\n+   |\n+LL |     for i in (5 + 2)..(3 - 1) {\n+   |              ^^^^^^^^^^^^^^^^\n help: consider using the following if you are attempting to iterate over this range in reverse\n-    |\n-153 |     for i in ((3 - 1)..(5 + 2)).rev() {\n-    |              ^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+LL |     for i in ((3 - 1)..(5 + 2)).rev() {\n+   |              ^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: this range is empty so this for loop will never run\n-   --> $DIR/for_loop.rs:157:14\n-    |\n-157 |     for i in (5 + 2)..(8 - 1) {\n-    |              ^^^^^^^^^^^^^^^^\n+  --> $DIR/for_loop.rs:157:14\n+   |\n+LL |     for i in (5 + 2)..(8 - 1) {\n+   |              ^^^^^^^^^^^^^^^^\n \n error: it is more concise to loop over references to containers instead of using explicit iteration methods\n-   --> $DIR/for_loop.rs:179:15\n-    |\n-179 |     for _v in vec.iter() {}\n-    |               ^^^^^^^^^^ help: to write this more concisely, try: `&vec`\n-    |\n-    = note: `-D clippy::explicit-iter-loop` implied by `-D warnings`\n+  --> $DIR/for_loop.rs:179:15\n+   |\n+LL |     for _v in vec.iter() {}\n+   |               ^^^^^^^^^^ help: to write this more concisely, try: `&vec`\n+   |\n+   = note: `-D clippy::explicit-iter-loop` implied by `-D warnings`\n \n error: it is more concise to loop over references to containers instead of using explicit iteration methods\n-   --> $DIR/for_loop.rs:181:15\n-    |\n-181 |     for _v in vec.iter_mut() {}\n-    |               ^^^^^^^^^^^^^^ help: to write this more concisely, try: `&mut vec`\n+  --> $DIR/for_loop.rs:181:15\n+   |\n+LL |     for _v in vec.iter_mut() {}\n+   |               ^^^^^^^^^^^^^^ help: to write this more concisely, try: `&mut vec`\n \n error: it is more concise to loop over containers instead of using explicit iteration methods`\n-   --> $DIR/for_loop.rs:184:15\n-    |\n-184 |     for _v in out_vec.into_iter() {}\n-    |               ^^^^^^^^^^^^^^^^^^^ help: to write this more concisely, try: `out_vec`\n-    |\n-    = note: `-D clippy::explicit-into-iter-loop` implied by `-D warnings`\n+  --> $DIR/for_loop.rs:184:15\n+   |\n+LL |     for _v in out_vec.into_iter() {}\n+   |               ^^^^^^^^^^^^^^^^^^^ help: to write this more concisely, try: `out_vec`\n+   |\n+   = note: `-D clippy::explicit-into-iter-loop` implied by `-D warnings`\n \n error: it is more concise to loop over references to containers instead of using explicit iteration methods\n-   --> $DIR/for_loop.rs:187:15\n-    |\n-187 |     for _v in array.into_iter() {}\n-    |               ^^^^^^^^^^^^^^^^^ help: to write this more concisely, try: `&array`\n+  --> $DIR/for_loop.rs:187:15\n+   |\n+LL |     for _v in array.into_iter() {}\n+   |               ^^^^^^^^^^^^^^^^^ help: to write this more concisely, try: `&array`\n \n error: it is more concise to loop over references to containers instead of using explicit iteration methods\n-   --> $DIR/for_loop.rs:192:15\n-    |\n-192 |     for _v in [1, 2, 3].iter() {}\n-    |               ^^^^^^^^^^^^^^^^ help: to write this more concisely, try: `&[1, 2, 3]`\n+  --> $DIR/for_loop.rs:192:15\n+   |\n+LL |     for _v in [1, 2, 3].iter() {}\n+   |               ^^^^^^^^^^^^^^^^ help: to write this more concisely, try: `&[1, 2, 3]`\n \n error: it is more concise to loop over references to containers instead of using explicit iteration methods\n-   --> $DIR/for_loop.rs:196:15\n-    |\n-196 |     for _v in [0; 32].iter() {}\n-    |               ^^^^^^^^^^^^^^ help: to write this more concisely, try: `&[0; 32]`\n+  --> $DIR/for_loop.rs:196:15\n+   |\n+LL |     for _v in [0; 32].iter() {}\n+   |               ^^^^^^^^^^^^^^ help: to write this more concisely, try: `&[0; 32]`\n \n error: it is more concise to loop over references to containers instead of using explicit iteration methods\n-   --> $DIR/for_loop.rs:201:15\n-    |\n-201 |     for _v in ll.iter() {}\n-    |               ^^^^^^^^^ help: to write this more concisely, try: `&ll`\n+  --> $DIR/for_loop.rs:201:15\n+   |\n+LL |     for _v in ll.iter() {}\n+   |               ^^^^^^^^^ help: to write this more concisely, try: `&ll`\n \n error: it is more concise to loop over references to containers instead of using explicit iteration methods\n-   --> $DIR/for_loop.rs:204:15\n-    |\n-204 |     for _v in vd.iter() {}\n-    |               ^^^^^^^^^ help: to write this more concisely, try: `&vd`\n+  --> $DIR/for_loop.rs:204:15\n+   |\n+LL |     for _v in vd.iter() {}\n+   |               ^^^^^^^^^ help: to write this more concisely, try: `&vd`\n \n error: it is more concise to loop over references to containers instead of using explicit iteration methods\n-   --> $DIR/for_loop.rs:207:15\n-    |\n-207 |     for _v in bh.iter() {}\n-    |               ^^^^^^^^^ help: to write this more concisely, try: `&bh`\n+  --> $DIR/for_loop.rs:207:15\n+   |\n+LL |     for _v in bh.iter() {}\n+   |               ^^^^^^^^^ help: to write this more concisely, try: `&bh`\n \n error: it is more concise to loop over references to containers instead of using explicit iteration methods\n-   --> $DIR/for_loop.rs:210:15\n-    |\n-210 |     for _v in hm.iter() {}\n-    |               ^^^^^^^^^ help: to write this more concisely, try: `&hm`\n+  --> $DIR/for_loop.rs:210:15\n+   |\n+LL |     for _v in hm.iter() {}\n+   |               ^^^^^^^^^ help: to write this more concisely, try: `&hm`\n \n error: it is more concise to loop over references to containers instead of using explicit iteration methods\n-   --> $DIR/for_loop.rs:213:15\n-    |\n-213 |     for _v in bt.iter() {}\n-    |               ^^^^^^^^^ help: to write this more concisely, try: `&bt`\n+  --> $DIR/for_loop.rs:213:15\n+   |\n+LL |     for _v in bt.iter() {}\n+   |               ^^^^^^^^^ help: to write this more concisely, try: `&bt`\n \n error: it is more concise to loop over references to containers instead of using explicit iteration methods\n-   --> $DIR/for_loop.rs:216:15\n-    |\n-216 |     for _v in hs.iter() {}\n-    |               ^^^^^^^^^ help: to write this more concisely, try: `&hs`\n+  --> $DIR/for_loop.rs:216:15\n+   |\n+LL |     for _v in hs.iter() {}\n+   |               ^^^^^^^^^ help: to write this more concisely, try: `&hs`\n \n error: it is more concise to loop over references to containers instead of using explicit iteration methods\n-   --> $DIR/for_loop.rs:219:15\n-    |\n-219 |     for _v in bs.iter() {}\n-    |               ^^^^^^^^^ help: to write this more concisely, try: `&bs`\n+  --> $DIR/for_loop.rs:219:15\n+   |\n+LL |     for _v in bs.iter() {}\n+   |               ^^^^^^^^^ help: to write this more concisely, try: `&bs`\n \n error: you are iterating over `Iterator::next()` which is an Option; this will compile but is probably not what you want\n-   --> $DIR/for_loop.rs:221:15\n-    |\n-221 |     for _v in vec.iter().next() {}\n-    |               ^^^^^^^^^^^^^^^^^\n-    |\n-    = note: `-D clippy::iter-next-loop` implied by `-D warnings`\n+  --> $DIR/for_loop.rs:221:15\n+   |\n+LL |     for _v in vec.iter().next() {}\n+   |               ^^^^^^^^^^^^^^^^^\n+   |\n+   = note: `-D clippy::iter-next-loop` implied by `-D warnings`\n \n error: you are collect()ing an iterator and throwing away the result. Consider using an explicit for loop to exhaust the iterator\n-   --> $DIR/for_loop.rs:228:5\n-    |\n-228 |     vec.iter().cloned().map(|x| out.push(x)).collect::<Vec<_>>();\n-    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-    |\n-    = note: `-D clippy::unused-collect` implied by `-D warnings`\n+  --> $DIR/for_loop.rs:228:5\n+   |\n+LL |     vec.iter().cloned().map(|x| out.push(x)).collect::<Vec<_>>();\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: `-D clippy::unused-collect` implied by `-D warnings`\n \n error: you seem to want to iterate on a map's values\n-   --> $DIR/for_loop.rs:337:19\n-    |\n-337 |     for (_, v) in &m {\n-    |                   ^^\n-    |\n-    = note: `-D clippy::for-kv-map` implied by `-D warnings`\n+  --> $DIR/for_loop.rs:337:19\n+   |\n+LL |     for (_, v) in &m {\n+   |                   ^^\n+   |\n+   = note: `-D clippy::for-kv-map` implied by `-D warnings`\n help: use the corresponding method\n-    |\n-337 |     for v in m.values() {\n-    |         ^    ^^^^^^^^^^\n+   |\n+LL |     for v in m.values() {\n+   |         ^    ^^^^^^^^^^\n \n error: you seem to want to iterate on a map's values\n-   --> $DIR/for_loop.rs:342:19\n-    |\n-342 |     for (_, v) in &*m {\n-    |                   ^^^\n+  --> $DIR/for_loop.rs:342:19\n+   |\n+LL |     for (_, v) in &*m {\n+   |                   ^^^\n help: use the corresponding method\n-    |\n-342 |     for v in (*m).values() {\n-    |         ^    ^^^^^^^^^^^^^\n+   |\n+LL |     for v in (*m).values() {\n+   |         ^    ^^^^^^^^^^^^^\n \n error: you seem to want to iterate on a map's values\n-   --> $DIR/for_loop.rs:350:19\n-    |\n-350 |     for (_, v) in &mut m {\n-    |                   ^^^^^^\n+  --> $DIR/for_loop.rs:350:19\n+   |\n+LL |     for (_, v) in &mut m {\n+   |                   ^^^^^^\n help: use the corresponding method\n-    |\n-350 |     for v in m.values_mut() {\n-    |         ^    ^^^^^^^^^^^^^^\n+   |\n+LL |     for v in m.values_mut() {\n+   |         ^    ^^^^^^^^^^^^^^\n \n error: you seem to want to iterate on a map's values\n-   --> $DIR/for_loop.rs:355:19\n-    |\n-355 |     for (_, v) in &mut *m {\n-    |                   ^^^^^^^\n+  --> $DIR/for_loop.rs:355:19\n+   |\n+LL |     for (_, v) in &mut *m {\n+   |                   ^^^^^^^\n help: use the corresponding method\n-    |\n-355 |     for v in (*m).values_mut() {\n-    |         ^    ^^^^^^^^^^^^^^^^^\n+   |\n+LL |     for v in (*m).values_mut() {\n+   |         ^    ^^^^^^^^^^^^^^^^^\n \n error: you seem to want to iterate on a map's keys\n-   --> $DIR/for_loop.rs:361:24\n-    |\n-361 |     for (k, _value) in rm {\n-    |                        ^^\n+  --> $DIR/for_loop.rs:361:24\n+   |\n+LL |     for (k, _value) in rm {\n+   |                        ^^\n help: use the corresponding method\n-    |\n-361 |     for k in rm.keys() {\n-    |         ^    ^^^^^^^^^\n+   |\n+LL |     for k in rm.keys() {\n+   |         ^    ^^^^^^^^^\n \n error: it looks like you're manually copying between slices\n-   --> $DIR/for_loop.rs:414:14\n-    |\n-414 |     for i in 0..src.len() {\n-    |              ^^^^^^^^^^^^ help: try replacing the loop by: `dst[..src.len()].clone_from_slice(&src[..])`\n-    |\n-    = note: `-D clippy::manual-memcpy` implied by `-D warnings`\n+  --> $DIR/for_loop.rs:414:14\n+   |\n+LL |     for i in 0..src.len() {\n+   |              ^^^^^^^^^^^^ help: try replacing the loop by: `dst[..src.len()].clone_from_slice(&src[..])`\n+   |\n+   = note: `-D clippy::manual-memcpy` implied by `-D warnings`\n \n error: it looks like you're manually copying between slices\n-   --> $DIR/for_loop.rs:419:14\n-    |\n-419 |     for i in 0..src.len() {\n-    |              ^^^^^^^^^^^^ help: try replacing the loop by: `dst[10..(src.len() + 10)].clone_from_slice(&src[..])`\n+  --> $DIR/for_loop.rs:419:14\n+   |\n+LL |     for i in 0..src.len() {\n+   |              ^^^^^^^^^^^^ help: try replacing the loop by: `dst[10..(src.len() + 10)].clone_from_slice(&src[..])`\n \n error: it looks like you're manually copying between slices\n-   --> $DIR/for_loop.rs:424:14\n-    |\n-424 |     for i in 0..src.len() {\n-    |              ^^^^^^^^^^^^ help: try replacing the loop by: `dst[..src.len()].clone_from_slice(&src[10..])`\n+  --> $DIR/for_loop.rs:424:14\n+   |\n+LL |     for i in 0..src.len() {\n+   |              ^^^^^^^^^^^^ help: try replacing the loop by: `dst[..src.len()].clone_from_slice(&src[10..])`\n \n error: it looks like you're manually copying between slices\n-   --> $DIR/for_loop.rs:429:14\n-    |\n-429 |     for i in 11..src.len() {\n-    |              ^^^^^^^^^^^^^ help: try replacing the loop by: `dst[11..src.len()].clone_from_slice(&src[(11 - 10)..(src.len() - 10)])`\n+  --> $DIR/for_loop.rs:429:14\n+   |\n+LL |     for i in 11..src.len() {\n+   |              ^^^^^^^^^^^^^ help: try replacing the loop by: `dst[11..src.len()].clone_from_slice(&src[(11 - 10)..(src.len() - 10)])`\n \n error: it looks like you're manually copying between slices\n-   --> $DIR/for_loop.rs:434:14\n-    |\n-434 |     for i in 0..dst.len() {\n-    |              ^^^^^^^^^^^^ help: try replacing the loop by: `dst.clone_from_slice(&src[..dst.len()])`\n+  --> $DIR/for_loop.rs:434:14\n+   |\n+LL |     for i in 0..dst.len() {\n+   |              ^^^^^^^^^^^^ help: try replacing the loop by: `dst.clone_from_slice(&src[..dst.len()])`\n \n error: it looks like you're manually copying between slices\n-   --> $DIR/for_loop.rs:447:14\n-    |\n-447 |     for i in 10..256 {\n-    |              ^^^^^^^\n+  --> $DIR/for_loop.rs:447:14\n+   |\n+LL |     for i in 10..256 {\n+   |              ^^^^^^^\n help: try replacing the loop by\n-    |\n-447 |     for i in dst[10..256].clone_from_slice(&src[(10 - 5)..(256 - 5)])\n-448 |     dst2[(10 + 500)..(256 + 500)].clone_from_slice(&src[10..256]) {\n-    |\n+   |\n+LL |     for i in dst[10..256].clone_from_slice(&src[(10 - 5)..(256 - 5)])\n+LL |     dst2[(10 + 500)..(256 + 500)].clone_from_slice(&src[10..256]) {\n+   |\n \n error: it looks like you're manually copying between slices\n-   --> $DIR/for_loop.rs:459:14\n-    |\n-459 |     for i in 10..LOOP_OFFSET {\n-    |              ^^^^^^^^^^^^^^^ help: try replacing the loop by: `dst[(10 + LOOP_OFFSET)..(LOOP_OFFSET + LOOP_OFFSET)].clone_from_slice(&src[(10 - some_var)..(LOOP_OFFSET - some_var)])`\n+  --> $DIR/for_loop.rs:459:14\n+   |\n+LL |     for i in 10..LOOP_OFFSET {\n+   |              ^^^^^^^^^^^^^^^ help: try replacing the loop by: `dst[(10 + LOOP_OFFSET)..(LOOP_OFFSET + LOOP_OFFSET)].clone_from_slice(&src[(10 - some_var)..(LOOP_OFFSET - some_var)])`\n \n error: it looks like you're manually copying between slices\n-   --> $DIR/for_loop.rs:472:14\n-    |\n-472 |     for i in 0..src_vec.len() {\n-    |              ^^^^^^^^^^^^^^^^ help: try replacing the loop by: `dst_vec[..src_vec.len()].clone_from_slice(&src_vec[..])`\n+  --> $DIR/for_loop.rs:472:14\n+   |\n+LL |     for i in 0..src_vec.len() {\n+   |              ^^^^^^^^^^^^^^^^ help: try replacing the loop by: `dst_vec[..src_vec.len()].clone_from_slice(&src_vec[..])`\n \n error: it looks like you're manually copying between slices\n-   --> $DIR/for_loop.rs:501:14\n-    |\n-501 |     for i in from..from + src.len() {\n-    |              ^^^^^^^^^^^^^^^^^^^^^^ help: try replacing the loop by: `dst[from..from + src.len()].clone_from_slice(&src[0..(from + src.len() - from)])`\n+  --> $DIR/for_loop.rs:501:14\n+   |\n+LL |     for i in from..from + src.len() {\n+   |              ^^^^^^^^^^^^^^^^^^^^^^ help: try replacing the loop by: `dst[from..from + src.len()].clone_from_slice(&src[0..(from + src.len() - from)])`\n \n error: it looks like you're manually copying between slices\n-   --> $DIR/for_loop.rs:505:14\n-    |\n-505 |     for i in from..from + 3 {\n-    |              ^^^^^^^^^^^^^^ help: try replacing the loop by: `dst[from..from + 3].clone_from_slice(&src[0..(from + 3 - from)])`\n+  --> $DIR/for_loop.rs:505:14\n+   |\n+LL |     for i in from..from + 3 {\n+   |              ^^^^^^^^^^^^^^ help: try replacing the loop by: `dst[from..from + 3].clone_from_slice(&src[0..(from + 3 - from)])`\n \n error: it looks like you're manually copying between slices\n-   --> $DIR/for_loop.rs:512:14\n-    |\n-512 |     for i in 0..src.len() {\n-    |              ^^^^^^^^^^^^ help: try replacing the loop by: `dst[..src.len()].clone_from_slice(&src[..])`\n+  --> $DIR/for_loop.rs:512:14\n+   |\n+LL |     for i in 0..src.len() {\n+   |              ^^^^^^^^^^^^ help: try replacing the loop by: `dst[..src.len()].clone_from_slice(&src[..])`\n \n error: aborting due to 51 previous errors\n "}, {"sha": "f8a4212b2532d90e2ca7f06840126989674df5b0", "filename": "tests/ui/for_loop_over_option_result.stderr", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Ffor_loop_over_option_result.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Ffor_loop_over_option_result.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffor_loop_over_option_result.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,7 +1,7 @@\n error: for loop over `option`, which is an `Option`. This is more readably written as an `if let` statement.\n   --> $DIR/for_loop_over_option_result.rs:20:14\n    |\n-20 |     for x in option {\n+LL |     for x in option {\n    |              ^^^^^^\n    |\n    = note: `-D clippy::for-loop-over-option` implied by `-D warnings`\n@@ -10,7 +10,7 @@ error: for loop over `option`, which is an `Option`. This is more readably writt\n error: for loop over `result`, which is a `Result`. This is more readably written as an `if let` statement.\n   --> $DIR/for_loop_over_option_result.rs:25:14\n    |\n-25 |     for x in result {\n+LL |     for x in result {\n    |              ^^^^^^\n    |\n    = note: `-D clippy::for-loop-over-result` implied by `-D warnings`\n@@ -19,53 +19,53 @@ error: for loop over `result`, which is a `Result`. This is more readably writte\n error: for loop over `option.ok_or(\"x not found\")`, which is a `Result`. This is more readably written as an `if let` statement.\n   --> $DIR/for_loop_over_option_result.rs:29:14\n    |\n-29 |     for x in option.ok_or(\"x not found\") {\n+LL |     for x in option.ok_or(\"x not found\") {\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: consider replacing `for x in option.ok_or(\"x not found\")` with `if let Ok(x) = option.ok_or(\"x not found\")`\n \n error: you are iterating over `Iterator::next()` which is an Option; this will compile but is probably not what you want\n   --> $DIR/for_loop_over_option_result.rs:35:14\n    |\n-35 |     for x in v.iter().next() {\n+LL |     for x in v.iter().next() {\n    |              ^^^^^^^^^^^^^^^\n    |\n    = note: #[deny(clippy::iter_next_loop)] on by default\n \n error: for loop over `v.iter().next().and(Some(0))`, which is an `Option`. This is more readably written as an `if let` statement.\n   --> $DIR/for_loop_over_option_result.rs:40:14\n    |\n-40 |     for x in v.iter().next().and(Some(0)) {\n+LL |     for x in v.iter().next().and(Some(0)) {\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: consider replacing `for x in v.iter().next().and(Some(0))` with `if let Some(x) = v.iter().next().and(Some(0))`\n \n error: for loop over `v.iter().next().ok_or(\"x not found\")`, which is a `Result`. This is more readably written as an `if let` statement.\n   --> $DIR/for_loop_over_option_result.rs:44:14\n    |\n-44 |     for x in v.iter().next().ok_or(\"x not found\") {\n+LL |     for x in v.iter().next().ok_or(\"x not found\") {\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: consider replacing `for x in v.iter().next().ok_or(\"x not found\")` with `if let Ok(x) = v.iter().next().ok_or(\"x not found\")`\n \n error: this loop never actually loops\n   --> $DIR/for_loop_over_option_result.rs:56:5\n    |\n-56 | /     while let Some(x) = option {\n-57 | |         println!(\"{}\", x);\n-58 | |         break;\n-59 | |     }\n+LL | /     while let Some(x) = option {\n+LL | |         println!(\"{}\", x);\n+LL | |         break;\n+LL | |     }\n    | |_____^\n    |\n    = note: #[deny(clippy::never_loop)] on by default\n \n error: this loop never actually loops\n   --> $DIR/for_loop_over_option_result.rs:62:5\n    |\n-62 | /     while let Ok(x) = result {\n-63 | |         println!(\"{}\", x);\n-64 | |         break;\n-65 | |     }\n+LL | /     while let Ok(x) = result {\n+LL | |         println!(\"{}\", x);\n+LL | |         break;\n+LL | |     }\n    | |_____^\n \n error: aborting due to 8 previous errors"}, {"sha": "871fc8fba3ed478ccedc355fc80ddb4131933420", "filename": "tests/ui/format.stderr", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fformat.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fformat.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fformat.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,71 +1,71 @@\n error: useless use of `format!`\n   --> $DIR/format.rs:21:5\n    |\n-21 |     format!(\"foo\");\n+LL |     format!(\"foo\");\n    |     ^^^^^^^^^^^^^^^ help: consider using .to_string(): `\"foo\".to_string()`\n    |\n    = note: `-D clippy::useless-format` implied by `-D warnings`\n \n error: useless use of `format!`\n   --> $DIR/format.rs:23:5\n    |\n-23 |     format!(\"{}\", \"foo\");\n+LL |     format!(\"{}\", \"foo\");\n    |     ^^^^^^^^^^^^^^^^^^^^^ help: consider using .to_string(): `\"foo\".to_string()`\n    |\n    = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n \n error: useless use of `format!`\n   --> $DIR/format.rs:27:5\n    |\n-27 |     format!(\"{:+}\", \"foo\"); // warn when the format makes no difference\n+LL |     format!(\"{:+}\", \"foo\"); // warn when the format makes no difference\n    |     ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using .to_string(): `\"foo\".to_string()`\n    |\n    = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n \n error: useless use of `format!`\n   --> $DIR/format.rs:28:5\n    |\n-28 |     format!(\"{:<}\", \"foo\"); // warn when the format makes no difference\n+LL |     format!(\"{:<}\", \"foo\"); // warn when the format makes no difference\n    |     ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using .to_string(): `\"foo\".to_string()`\n    |\n    = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n \n error: useless use of `format!`\n   --> $DIR/format.rs:33:5\n    |\n-33 |     format!(\"{}\", arg);\n+LL |     format!(\"{}\", arg);\n    |     ^^^^^^^^^^^^^^^^^^^ help: consider using .to_string(): `arg.to_string()`\n    |\n    = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n \n error: useless use of `format!`\n   --> $DIR/format.rs:37:5\n    |\n-37 |     format!(\"{:+}\", arg); // warn when the format makes no difference\n+LL |     format!(\"{:+}\", arg); // warn when the format makes no difference\n    |     ^^^^^^^^^^^^^^^^^^^^^ help: consider using .to_string(): `arg.to_string()`\n    |\n    = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n \n error: useless use of `format!`\n   --> $DIR/format.rs:38:5\n    |\n-38 |     format!(\"{:<}\", arg); // warn when the format makes no difference\n+LL |     format!(\"{:<}\", arg); // warn when the format makes no difference\n    |     ^^^^^^^^^^^^^^^^^^^^^ help: consider using .to_string(): `arg.to_string()`\n    |\n    = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n \n error: useless use of `format!`\n   --> $DIR/format.rs:65:5\n    |\n-65 |     format!(\"{}\", 42.to_string());\n+LL |     format!(\"{}\", 42.to_string());\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: `to_string()` is enough: `42.to_string()`\n    |\n    = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n \n error: useless use of `format!`\n   --> $DIR/format.rs:67:5\n    |\n-67 |     format!(\"{}\", x.display().to_string());\n+LL |     format!(\"{}\", x.display().to_string());\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: `to_string()` is enough: `x.display().to_string()`\n    |\n    = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)"}, {"sha": "061540b9aa5f56c4373b4afd817d2d6cd07d47b0", "filename": "tests/ui/formatting.stderr", "status": "modified", "additions": 46, "deletions": 46, "changes": 92, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fformatting.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fformatting.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fformatting.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,7 +1,7 @@\n error: this looks like an `else {..}` but the `else` is missing\n   --> $DIR/formatting.rs:21:6\n    |\n-21 |     } {\n+LL |     } {\n    |      ^\n    |\n    = note: `-D clippy::suspicious-else-formatting` implied by `-D warnings`\n@@ -10,110 +10,110 @@ error: this looks like an `else {..}` but the `else` is missing\n error: this looks like an `else if` but the `else` is missing\n   --> $DIR/formatting.rs:25:6\n    |\n-25 |     } if foo() {\n+LL |     } if foo() {\n    |      ^\n    |\n    = note: to remove this lint, add the missing `else` or add a new line before the second `if`\n \n error: this looks like an `else if` but the `else` is missing\n   --> $DIR/formatting.rs:32:10\n    |\n-32 |         } if foo() {\n+LL |         } if foo() {\n    |          ^\n    |\n    = note: to remove this lint, add the missing `else` or add a new line before the second `if`\n \n error: this looks like an `else if` but the `else` is missing\n   --> $DIR/formatting.rs:40:10\n    |\n-40 |         } if foo() {\n+LL |         } if foo() {\n    |          ^\n    |\n    = note: to remove this lint, add the missing `else` or add a new line before the second `if`\n \n error: this is an `else {..}` but the formatting might hide it\n   --> $DIR/formatting.rs:49:6\n    |\n-49 |       } else\n+LL |       } else\n    |  ______^\n-50 | |     {\n+LL | |     {\n    | |____^\n    |\n    = note: to remove this lint, remove the `else` or remove the new line between `else` and `{..}`\n \n error: this is an `else {..}` but the formatting might hide it\n   --> $DIR/formatting.rs:54:6\n    |\n-54 |       }\n+LL |       }\n    |  ______^\n-55 | |     else\n-56 | |     {\n+LL | |     else\n+LL | |     {\n    | |____^\n    |\n    = note: to remove this lint, remove the `else` or remove the new line between `else` and `{..}`\n \n error: this is an `else if` but the formatting might hide it\n   --> $DIR/formatting.rs:60:6\n    |\n-60 |       } else\n+LL |       } else\n    |  ______^\n-61 | |     if foo() { // the span of the above error should continue here\n+LL | |     if foo() { // the span of the above error should continue here\n    | |____^\n    |\n    = note: to remove this lint, remove the `else` or remove the new line between `else` and `if`\n \n error: this is an `else if` but the formatting might hide it\n   --> $DIR/formatting.rs:65:6\n    |\n-65 |       }\n+LL |       }\n    |  ______^\n-66 | |     else\n-67 | |     if foo() { // the span of the above error should continue here\n+LL | |     else\n+LL | |     if foo() { // the span of the above error should continue here\n    | |____^\n    |\n    = note: to remove this lint, remove the `else` or remove the new line between `else` and `if`\n \n error: this looks like you are trying to use `.. -= ..`, but you really are doing `.. = (- ..)`\n-   --> $DIR/formatting.rs:106:6\n-    |\n-106 |     a =- 35;\n-    |      ^^^^\n-    |\n-    = note: `-D clippy::suspicious-assignment-formatting` implied by `-D warnings`\n-    = note: to remove this lint, use either `-=` or `= -`\n+  --> $DIR/formatting.rs:106:6\n+   |\n+LL |     a =- 35;\n+   |      ^^^^\n+   |\n+   = note: `-D clippy::suspicious-assignment-formatting` implied by `-D warnings`\n+   = note: to remove this lint, use either `-=` or `= -`\n \n error: this looks like you are trying to use `.. *= ..`, but you really are doing `.. = (* ..)`\n-   --> $DIR/formatting.rs:107:6\n-    |\n-107 |     a =* &191;\n-    |      ^^^^\n-    |\n-    = note: to remove this lint, use either `*=` or `= *`\n+  --> $DIR/formatting.rs:107:6\n+   |\n+LL |     a =* &191;\n+   |      ^^^^\n+   |\n+   = note: to remove this lint, use either `*=` or `= *`\n \n error: this looks like you are trying to use `.. != ..`, but you really are doing `.. = (! ..)`\n-   --> $DIR/formatting.rs:110:6\n-    |\n-110 |     b =! false;\n-    |      ^^^^\n-    |\n-    = note: to remove this lint, use either `!=` or `= !`\n+  --> $DIR/formatting.rs:110:6\n+   |\n+LL |     b =! false;\n+   |      ^^^^\n+   |\n+   = note: to remove this lint, use either `!=` or `= !`\n \n error: possibly missing a comma here\n-   --> $DIR/formatting.rs:119:19\n-    |\n-119 |         -1, -2, -3 // <= no comma here\n-    |                   ^\n-    |\n-    = note: `-D clippy::possible-missing-comma` implied by `-D warnings`\n-    = note: to remove this lint, add a comma or write the expr in a single line\n+  --> $DIR/formatting.rs:119:19\n+   |\n+LL |         -1, -2, -3 // <= no comma here\n+   |                   ^\n+   |\n+   = note: `-D clippy::possible-missing-comma` implied by `-D warnings`\n+   = note: to remove this lint, add a comma or write the expr in a single line\n \n error: possibly missing a comma here\n-   --> $DIR/formatting.rs:123:19\n-    |\n-123 |         -1, -2, -3 // <= no comma here\n-    |                   ^\n-    |\n-    = note: to remove this lint, add a comma or write the expr in a single line\n+  --> $DIR/formatting.rs:123:19\n+   |\n+LL |         -1, -2, -3 // <= no comma here\n+   |                   ^\n+   |\n+   = note: to remove this lint, add a comma or write the expr in a single line\n \n error: aborting due to 13 previous errors\n "}, {"sha": "b23d09309bb1f64e8017f879f441fe17064ae15e", "filename": "tests/ui/functions.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Ffunctions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Ffunctions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffunctions.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,77 +1,77 @@\n error: this function has too many arguments (8/7)\n   --> $DIR/functions.rs:17:1\n    |\n-17 | fn bad(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool, _eight: ()) {}\n+LL | fn bad(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool, _eight: ()) {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::too-many-arguments` implied by `-D warnings`\n \n error: this function has too many arguments (8/7)\n   --> $DIR/functions.rs:34:5\n    |\n-34 |     fn bad(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool, _eight: ());\n+LL |     fn bad(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool, _eight: ());\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: this function has too many arguments (8/7)\n   --> $DIR/functions.rs:43:5\n    |\n-43 |     fn bad_method(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool, _eight: ()) {}\n+LL |     fn bad_method(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool, _eight: ()) {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: this public function dereferences a raw pointer but is not marked `unsafe`\n   --> $DIR/functions.rs:52:34\n    |\n-52 |         println!(\"{}\", unsafe { *p });\n+LL |         println!(\"{}\", unsafe { *p });\n    |                                  ^\n    |\n    = note: `-D clippy::not-unsafe-ptr-arg-deref` implied by `-D warnings`\n \n error: this public function dereferences a raw pointer but is not marked `unsafe`\n   --> $DIR/functions.rs:53:35\n    |\n-53 |         println!(\"{:?}\", unsafe { p.as_ref() });\n+LL |         println!(\"{:?}\", unsafe { p.as_ref() });\n    |                                   ^\n \n error: this public function dereferences a raw pointer but is not marked `unsafe`\n   --> $DIR/functions.rs:54:33\n    |\n-54 |         unsafe { std::ptr::read(p) };\n+LL |         unsafe { std::ptr::read(p) };\n    |                                 ^\n \n error: this public function dereferences a raw pointer but is not marked `unsafe`\n   --> $DIR/functions.rs:65:30\n    |\n-65 |     println!(\"{}\", unsafe { *p });\n+LL |     println!(\"{}\", unsafe { *p });\n    |                              ^\n \n error: this public function dereferences a raw pointer but is not marked `unsafe`\n   --> $DIR/functions.rs:66:31\n    |\n-66 |     println!(\"{:?}\", unsafe { p.as_ref() });\n+LL |     println!(\"{:?}\", unsafe { p.as_ref() });\n    |                               ^\n \n error: this public function dereferences a raw pointer but is not marked `unsafe`\n   --> $DIR/functions.rs:67:29\n    |\n-67 |     unsafe { std::ptr::read(p) };\n+LL |     unsafe { std::ptr::read(p) };\n    |                             ^\n \n error: this public function dereferences a raw pointer but is not marked `unsafe`\n   --> $DIR/functions.rs:76:34\n    |\n-76 |         println!(\"{}\", unsafe { *p });\n+LL |         println!(\"{}\", unsafe { *p });\n    |                                  ^\n \n error: this public function dereferences a raw pointer but is not marked `unsafe`\n   --> $DIR/functions.rs:77:35\n    |\n-77 |         println!(\"{:?}\", unsafe { p.as_ref() });\n+LL |         println!(\"{:?}\", unsafe { p.as_ref() });\n    |                                   ^\n \n error: this public function dereferences a raw pointer but is not marked `unsafe`\n   --> $DIR/functions.rs:78:33\n    |\n-78 |         unsafe { std::ptr::read(p) };\n+LL |         unsafe { std::ptr::read(p) };\n    |                                 ^\n \n error: aborting due to 12 previous errors"}, {"sha": "14fc4a8090b97f39999798c9340c3ee85ad6de71", "filename": "tests/ui/fxhash.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Ffxhash.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Ffxhash.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffxhash.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,39 +1,39 @@\n error: Prefer FxHashMap over HashMap, it has better performance and we don't need any collision prevention in clippy\n   --> $DIR/fxhash.rs:16:24\n    |\n-16 | use std::collections::{HashMap, HashSet};\n+LL | use std::collections::{HashMap, HashSet};\n    |                        ^^^^^^^ help: use: `FxHashMap`\n    |\n    = note: `-D clippy::default-hash-types` implied by `-D warnings`\n \n error: Prefer FxHashSet over HashSet, it has better performance and we don't need any collision prevention in clippy\n   --> $DIR/fxhash.rs:16:33\n    |\n-16 | use std::collections::{HashMap, HashSet};\n+LL | use std::collections::{HashMap, HashSet};\n    |                                 ^^^^^^^ help: use: `FxHashSet`\n \n error: Prefer FxHashMap over HashMap, it has better performance and we don't need any collision prevention in clippy\n   --> $DIR/fxhash.rs:19:15\n    |\n-19 |     let _map: HashMap<String, String> = HashMap::default();\n+LL |     let _map: HashMap<String, String> = HashMap::default();\n    |               ^^^^^^^ help: use: `FxHashMap`\n \n error: Prefer FxHashMap over HashMap, it has better performance and we don't need any collision prevention in clippy\n   --> $DIR/fxhash.rs:19:41\n    |\n-19 |     let _map: HashMap<String, String> = HashMap::default();\n+LL |     let _map: HashMap<String, String> = HashMap::default();\n    |                                         ^^^^^^^ help: use: `FxHashMap`\n \n error: Prefer FxHashSet over HashSet, it has better performance and we don't need any collision prevention in clippy\n   --> $DIR/fxhash.rs:20:15\n    |\n-20 |     let _set: HashSet<String> = HashSet::default();\n+LL |     let _set: HashSet<String> = HashSet::default();\n    |               ^^^^^^^ help: use: `FxHashSet`\n \n error: Prefer FxHashSet over HashSet, it has better performance and we don't need any collision prevention in clippy\n   --> $DIR/fxhash.rs:20:33\n    |\n-20 |     let _set: HashSet<String> = HashSet::default();\n+LL |     let _set: HashSet<String> = HashSet::default();\n    |                                 ^^^^^^^ help: use: `FxHashSet`\n \n error: aborting due to 6 previous errors"}, {"sha": "1f45c26048a2a4a2c930cd75c01324d8505c138a", "filename": "tests/ui/get_unwrap.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fget_unwrap.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fget_unwrap.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fget_unwrap.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,75 +1,75 @@\n error: called `.get().unwrap()` on a slice. Using `[]` is more clear and more concise\n   --> $DIR/get_unwrap.rs:41:17\n    |\n-41 |         let _ = boxed_slice.get(1).unwrap();\n+LL |         let _ = boxed_slice.get(1).unwrap();\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `&boxed_slice[1]`\n    |\n    = note: `-D clippy::get-unwrap` implied by `-D warnings`\n \n error: called `.get().unwrap()` on a slice. Using `[]` is more clear and more concise\n   --> $DIR/get_unwrap.rs:42:17\n    |\n-42 |         let _ = some_slice.get(0).unwrap();\n+LL |         let _ = some_slice.get(0).unwrap();\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `&some_slice[0]`\n \n error: called `.get().unwrap()` on a Vec. Using `[]` is more clear and more concise\n   --> $DIR/get_unwrap.rs:43:17\n    |\n-43 |         let _ = some_vec.get(0).unwrap();\n+LL |         let _ = some_vec.get(0).unwrap();\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `&some_vec[0]`\n \n error: called `.get().unwrap()` on a VecDeque. Using `[]` is more clear and more concise\n   --> $DIR/get_unwrap.rs:44:17\n    |\n-44 |         let _ = some_vecdeque.get(0).unwrap();\n+LL |         let _ = some_vecdeque.get(0).unwrap();\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `&some_vecdeque[0]`\n \n error: called `.get().unwrap()` on a HashMap. Using `[]` is more clear and more concise\n   --> $DIR/get_unwrap.rs:45:17\n    |\n-45 |         let _ = some_hashmap.get(&1).unwrap();\n+LL |         let _ = some_hashmap.get(&1).unwrap();\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `&some_hashmap[&1]`\n \n error: called `.get().unwrap()` on a BTreeMap. Using `[]` is more clear and more concise\n   --> $DIR/get_unwrap.rs:46:17\n    |\n-46 |         let _ = some_btreemap.get(&1).unwrap();\n+LL |         let _ = some_btreemap.get(&1).unwrap();\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `&some_btreemap[&1]`\n \n error: called `.get_mut().unwrap()` on a slice. Using `[]` is more clear and more concise\n   --> $DIR/get_unwrap.rs:52:10\n    |\n-52 |         *boxed_slice.get_mut(0).unwrap() = 1;\n+LL |         *boxed_slice.get_mut(0).unwrap() = 1;\n    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `&mut boxed_slice[0]`\n \n error: called `.get_mut().unwrap()` on a slice. Using `[]` is more clear and more concise\n   --> $DIR/get_unwrap.rs:53:10\n    |\n-53 |         *some_slice.get_mut(0).unwrap() = 1;\n+LL |         *some_slice.get_mut(0).unwrap() = 1;\n    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `&mut some_slice[0]`\n \n error: called `.get_mut().unwrap()` on a Vec. Using `[]` is more clear and more concise\n   --> $DIR/get_unwrap.rs:54:10\n    |\n-54 |         *some_vec.get_mut(0).unwrap() = 1;\n+LL |         *some_vec.get_mut(0).unwrap() = 1;\n    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `&mut some_vec[0]`\n \n error: called `.get_mut().unwrap()` on a VecDeque. Using `[]` is more clear and more concise\n   --> $DIR/get_unwrap.rs:55:10\n    |\n-55 |         *some_vecdeque.get_mut(0).unwrap() = 1;\n+LL |         *some_vecdeque.get_mut(0).unwrap() = 1;\n    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `&mut some_vecdeque[0]`\n \n error: called `.get().unwrap()` on a Vec. Using `[]` is more clear and more concise\n   --> $DIR/get_unwrap.rs:64:17\n    |\n-64 |         let _ = some_vec.get(0..1).unwrap().to_vec();\n+LL |         let _ = some_vec.get(0..1).unwrap().to_vec();\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `some_vec[0..1]`\n \n error: called `.get_mut().unwrap()` on a Vec. Using `[]` is more clear and more concise\n   --> $DIR/get_unwrap.rs:65:17\n    |\n-65 |         let _ = some_vec.get_mut(0..1).unwrap().to_vec();\n+LL |         let _ = some_vec.get_mut(0..1).unwrap().to_vec();\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `some_vec[0..1]`\n \n error: aborting due to 12 previous errors"}, {"sha": "a6b150f9b903e41dd06aa37ddb03990268ba7d6e", "filename": "tests/ui/ice-2636.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fice-2636.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fice-2636.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fice-2636.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,13 +1,13 @@\n error: you don't need to add `&` to both the expression and the patterns\n   --> $DIR/ice-2636.rs:21:9\n    |\n-21 | /         match $foo {\n-22 | |             $ ( & $t => $ord,\n-23 | |             )*\n-24 | |         };\n+LL | /         match $foo {\n+LL | |             $ ( & $t => $ord,\n+LL | |             )*\n+LL | |         };\n    | |_________^\n ...\n-30 |       test_hash!(&a, A => 0, B => 1, C => 2);\n+LL |       test_hash!(&a, A => 0, B => 1, C => 2);\n    |       --------------------------------------- in this macro invocation\n    |\n    = note: `-D clippy::match-ref-pats` implied by `-D warnings`"}, {"sha": "4b0b958e2853f09c4193c36d5a2c0bf1851a3552", "filename": "tests/ui/identity_conversion.stderr", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fidentity_conversion.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fidentity_conversion.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fidentity_conversion.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,67 +1,67 @@\n error: identical conversion\n   --> $DIR/identity_conversion.rs:13:13\n    |\n-13 |     let _ = T::from(val);\n+LL |     let _ = T::from(val);\n    |             ^^^^^^^^^^^^ help: consider removing `T::from()`: `val`\n    |\n note: lint level defined here\n   --> $DIR/identity_conversion.rs:10:9\n    |\n-10 | #![deny(clippy::identity_conversion)]\n+LL | #![deny(clippy::identity_conversion)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: identical conversion\n   --> $DIR/identity_conversion.rs:14:5\n    |\n-14 |     val.into()\n+LL |     val.into()\n    |     ^^^^^^^^^^ help: consider removing `.into()`: `val`\n \n error: identical conversion\n   --> $DIR/identity_conversion.rs:26:22\n    |\n-26 |         let _: i32 = 0i32.into();\n+LL |         let _: i32 = 0i32.into();\n    |                      ^^^^^^^^^^^ help: consider removing `.into()`: `0i32`\n \n error: identical conversion\n   --> $DIR/identity_conversion.rs:47:21\n    |\n-47 |     let _: String = \"foo\".to_string().into();\n+LL |     let _: String = \"foo\".to_string().into();\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^ help: consider removing `.into()`: `\"foo\".to_string()`\n \n error: identical conversion\n   --> $DIR/identity_conversion.rs:48:21\n    |\n-48 |     let _: String = From::from(\"foo\".to_string());\n+LL |     let _: String = From::from(\"foo\".to_string());\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider removing `From::from()`: `\"foo\".to_string()`\n \n error: identical conversion\n   --> $DIR/identity_conversion.rs:49:13\n    |\n-49 |     let _ = String::from(\"foo\".to_string());\n+LL |     let _ = String::from(\"foo\".to_string());\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider removing `String::from()`: `\"foo\".to_string()`\n \n error: identical conversion\n   --> $DIR/identity_conversion.rs:50:13\n    |\n-50 |     let _ = String::from(format!(\"A: {:04}\", 123));\n+LL |     let _ = String::from(format!(\"A: {:04}\", 123));\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider removing `String::from()`: `format!(\"A: {:04}\", 123)`\n \n error: identical conversion\n   --> $DIR/identity_conversion.rs:51:13\n    |\n-51 |     let _ = \"\".lines().into_iter();\n+LL |     let _ = \"\".lines().into_iter();\n    |             ^^^^^^^^^^^^^^^^^^^^^^ help: consider removing `.into_iter()`: `\"\".lines()`\n \n error: identical conversion\n   --> $DIR/identity_conversion.rs:52:13\n    |\n-52 |     let _ = vec![1, 2, 3].into_iter().into_iter();\n+LL |     let _ = vec![1, 2, 3].into_iter().into_iter();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider removing `.into_iter()`: `vec![1, 2, 3].into_iter()`\n \n error: identical conversion\n   --> $DIR/identity_conversion.rs:53:21\n    |\n-53 |     let _: String = format!(\"Hello {}\", \"world\").into();\n+LL |     let _: String = format!(\"Hello {}\", \"world\").into();\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider removing `.into()`: `format!(\"Hello {}\", \"world\")`\n \n error: aborting due to 10 previous errors"}, {"sha": "8b42cfbf1ce1fb4c127903bcbf76039a470a8ee7", "filename": "tests/ui/identity_op.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fidentity_op.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fidentity_op.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fidentity_op.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,51 +1,51 @@\n error: the operation is ineffective. Consider reducing it to `x`\n   --> $DIR/identity_op.rs:25:5\n    |\n-25 |     x + 0;\n+LL |     x + 0;\n    |     ^^^^^\n    |\n    = note: `-D clippy::identity-op` implied by `-D warnings`\n \n error: the operation is ineffective. Consider reducing it to `x`\n   --> $DIR/identity_op.rs:26:5\n    |\n-26 |     x + (1 - 1);\n+LL |     x + (1 - 1);\n    |     ^^^^^^^^^^^\n \n error: the operation is ineffective. Consider reducing it to `x`\n   --> $DIR/identity_op.rs:28:5\n    |\n-28 |     0 + x;\n+LL |     0 + x;\n    |     ^^^^^\n \n error: the operation is ineffective. Consider reducing it to `x`\n   --> $DIR/identity_op.rs:31:5\n    |\n-31 |     x | (0);\n+LL |     x | (0);\n    |     ^^^^^^^\n \n error: the operation is ineffective. Consider reducing it to `x`\n   --> $DIR/identity_op.rs:34:5\n    |\n-34 |     x * 1;\n+LL |     x * 1;\n    |     ^^^^^\n \n error: the operation is ineffective. Consider reducing it to `x`\n   --> $DIR/identity_op.rs:35:5\n    |\n-35 |     1 * x;\n+LL |     1 * x;\n    |     ^^^^^\n \n error: the operation is ineffective. Consider reducing it to `x`\n   --> $DIR/identity_op.rs:41:5\n    |\n-41 |     -1 & x;\n+LL |     -1 & x;\n    |     ^^^^^^\n \n error: the operation is ineffective. Consider reducing it to `u`\n   --> $DIR/identity_op.rs:44:5\n    |\n-44 |     u & 255;\n+LL |     u & 255;\n    |     ^^^^^^^\n \n error: aborting due to 8 previous errors"}, {"sha": "acdf543cc756409530d91c1f6cdf955400661189", "filename": "tests/ui/if_not_else.stderr", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fif_not_else.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fif_not_else.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fif_not_else.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,11 +1,11 @@\n error: Unnecessary boolean `not` operation\n   --> $DIR/if_not_else.rs:18:5\n    |\n-18 | /     if !bla() {\n-19 | |         println!(\"Bugs\");\n-20 | |     } else {\n-21 | |         println!(\"Bunny\");\n-22 | |     }\n+LL | /     if !bla() {\n+LL | |         println!(\"Bugs\");\n+LL | |     } else {\n+LL | |         println!(\"Bunny\");\n+LL | |     }\n    | |_____^\n    |\n    = note: `-D clippy::if-not-else` implied by `-D warnings`\n@@ -14,11 +14,11 @@ error: Unnecessary boolean `not` operation\n error: Unnecessary `!=` operation\n   --> $DIR/if_not_else.rs:23:5\n    |\n-23 | /     if 4 != 5 {\n-24 | |         println!(\"Bugs\");\n-25 | |     } else {\n-26 | |         println!(\"Bunny\");\n-27 | |     }\n+LL | /     if 4 != 5 {\n+LL | |         println!(\"Bugs\");\n+LL | |     } else {\n+LL | |         println!(\"Bunny\");\n+LL | |     }\n    | |_____^\n    |\n    = help: change to `==` and swap the blocks of the if/else"}, {"sha": "8bddd400f705468d33aeb92ae9111f9c1f202528", "filename": "tests/ui/impl.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fimpl.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fimpl.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimpl.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,34 +1,34 @@\n error: Multiple implementations of this structure\n   --> $DIR/impl.rs:19:1\n    |\n-19 | / impl MyStruct {\n-20 | |     fn second() {}\n-21 | | }\n+LL | / impl MyStruct {\n+LL | |     fn second() {}\n+LL | | }\n    | |_^\n    |\n    = note: `-D clippy::multiple-inherent-impl` implied by `-D warnings`\n note: First implementation here\n   --> $DIR/impl.rs:15:1\n    |\n-15 | / impl MyStruct {\n-16 | |     fn first() {}\n-17 | | }\n+LL | / impl MyStruct {\n+LL | |     fn first() {}\n+LL | | }\n    | |_^\n \n error: Multiple implementations of this structure\n   --> $DIR/impl.rs:33:5\n    |\n-33 | /     impl super::MyStruct {\n-34 | |         fn third() {}\n-35 | |     }\n+LL | /     impl super::MyStruct {\n+LL | |         fn third() {}\n+LL | |     }\n    | |_____^\n    |\n note: First implementation here\n   --> $DIR/impl.rs:15:1\n    |\n-15 | / impl MyStruct {\n-16 | |     fn first() {}\n-17 | | }\n+LL | / impl MyStruct {\n+LL | |     fn first() {}\n+LL | | }\n    | |_^\n \n error: aborting due to 2 previous errors"}, {"sha": "0c61dbc4c645b1843a7544dc25e58c4b14c4fc4f", "filename": "tests/ui/implicit_hasher.stderr", "status": "modified", "additions": 29, "deletions": 29, "changes": 58, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fimplicit_hasher.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fimplicit_hasher.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimplicit_hasher.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,136 +1,136 @@\n error: impl for `HashMap` should be generalized over different hashers\n   --> $DIR/implicit_hasher.rs:20:35\n    |\n-20 | impl<K: Hash + Eq, V> Foo<i8> for HashMap<K, V> {\n+LL | impl<K: Hash + Eq, V> Foo<i8> for HashMap<K, V> {\n    |                                   ^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::implicit-hasher` implied by `-D warnings`\n help: consider adding a type parameter\n    |\n-20 | impl<K: Hash + Eq, V, S: ::std::hash::BuildHasher + Default> Foo<i8> for HashMap<K, V, S> {\n+LL | impl<K: Hash + Eq, V, S: ::std::hash::BuildHasher + Default> Foo<i8> for HashMap<K, V, S> {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^             ^^^^^^^^^^^^^^^^\n help: ...and use generic constructor\n    |\n-26 |         (HashMap::default(), HashMap::with_capacity_and_hasher(10, Default::default()))\n+LL |         (HashMap::default(), HashMap::with_capacity_and_hasher(10, Default::default()))\n    |          ^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: impl for `HashMap` should be generalized over different hashers\n   --> $DIR/implicit_hasher.rs:29:36\n    |\n-29 | impl<K: Hash + Eq, V> Foo<i8> for (HashMap<K, V>,) {\n+LL | impl<K: Hash + Eq, V> Foo<i8> for (HashMap<K, V>,) {\n    |                                    ^^^^^^^^^^^^^\n help: consider adding a type parameter\n    |\n-29 | impl<K: Hash + Eq, V, S: ::std::hash::BuildHasher + Default> Foo<i8> for (HashMap<K, V, S>,) {\n+LL | impl<K: Hash + Eq, V, S: ::std::hash::BuildHasher + Default> Foo<i8> for (HashMap<K, V, S>,) {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^              ^^^^^^^^^^^^^^^^\n help: ...and use generic constructor\n    |\n-31 |         ((HashMap::default(),), (HashMap::with_capacity_and_hasher(10, Default::default()),))\n+LL |         ((HashMap::default(),), (HashMap::with_capacity_and_hasher(10, Default::default()),))\n    |           ^^^^^^^^^^^^^^^^^^     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: impl for `HashMap` should be generalized over different hashers\n   --> $DIR/implicit_hasher.rs:34:19\n    |\n-34 | impl Foo<i16> for HashMap<String, String> {\n+LL | impl Foo<i16> for HashMap<String, String> {\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^\n help: consider adding a type parameter\n    |\n-34 | impl<S: ::std::hash::BuildHasher + Default> Foo<i16> for HashMap<String, String, S> {\n+LL | impl<S: ::std::hash::BuildHasher + Default> Foo<i16> for HashMap<String, String, S> {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^              ^^^^^^^^^^^^^^^^^^^^^^^^^^\n help: ...and use generic constructor\n    |\n-36 |         (HashMap::default(), HashMap::with_capacity_and_hasher(10, Default::default()))\n+LL |         (HashMap::default(), HashMap::with_capacity_and_hasher(10, Default::default()))\n    |          ^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: impl for `HashSet` should be generalized over different hashers\n   --> $DIR/implicit_hasher.rs:51:32\n    |\n-51 | impl<T: Hash + Eq> Foo<i8> for HashSet<T> {\n+LL | impl<T: Hash + Eq> Foo<i8> for HashSet<T> {\n    |                                ^^^^^^^^^^\n help: consider adding a type parameter\n    |\n-51 | impl<T: Hash + Eq, S: ::std::hash::BuildHasher + Default> Foo<i8> for HashSet<T, S> {\n+LL | impl<T: Hash + Eq, S: ::std::hash::BuildHasher + Default> Foo<i8> for HashSet<T, S> {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^             ^^^^^^^^^^^^^\n help: ...and use generic constructor\n    |\n-53 |         (HashSet::default(), HashSet::with_capacity_and_hasher(10, Default::default()))\n+LL |         (HashSet::default(), HashSet::with_capacity_and_hasher(10, Default::default()))\n    |          ^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: impl for `HashSet` should be generalized over different hashers\n   --> $DIR/implicit_hasher.rs:56:19\n    |\n-56 | impl Foo<i16> for HashSet<String> {\n+LL | impl Foo<i16> for HashSet<String> {\n    |                   ^^^^^^^^^^^^^^^\n help: consider adding a type parameter\n    |\n-56 | impl<S: ::std::hash::BuildHasher + Default> Foo<i16> for HashSet<String, S> {\n+LL | impl<S: ::std::hash::BuildHasher + Default> Foo<i16> for HashSet<String, S> {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^              ^^^^^^^^^^^^^^^^^^\n help: ...and use generic constructor\n    |\n-58 |         (HashSet::default(), HashSet::with_capacity_and_hasher(10, Default::default()))\n+LL |         (HashSet::default(), HashSet::with_capacity_and_hasher(10, Default::default()))\n    |          ^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: parameter of type `HashMap` should be generalized over different hashers\n   --> $DIR/implicit_hasher.rs:73:23\n    |\n-73 | pub fn foo(_map: &mut HashMap<i32, i32>, _set: &mut HashSet<i32>) {}\n+LL | pub fn foo(_map: &mut HashMap<i32, i32>, _set: &mut HashSet<i32>) {}\n    |                       ^^^^^^^^^^^^^^^^^\n help: consider adding a type parameter\n    |\n-73 | pub fn foo<S: ::std::hash::BuildHasher>(_map: &mut HashMap<i32, i32, S>, _set: &mut HashSet<i32>) {}\n+LL | pub fn foo<S: ::std::hash::BuildHasher>(_map: &mut HashMap<i32, i32, S>, _set: &mut HashSet<i32>) {}\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^            ^^^^^^^^^^^^^^^^^^^^\n \n error: parameter of type `HashSet` should be generalized over different hashers\n   --> $DIR/implicit_hasher.rs:73:53\n    |\n-73 | pub fn foo(_map: &mut HashMap<i32, i32>, _set: &mut HashSet<i32>) {}\n+LL | pub fn foo(_map: &mut HashMap<i32, i32>, _set: &mut HashSet<i32>) {}\n    |                                                     ^^^^^^^^^^^^\n help: consider adding a type parameter\n    |\n-73 | pub fn foo<S: ::std::hash::BuildHasher>(_map: &mut HashMap<i32, i32>, _set: &mut HashSet<i32, S>) {}\n+LL | pub fn foo<S: ::std::hash::BuildHasher>(_map: &mut HashMap<i32, i32>, _set: &mut HashSet<i32, S>) {}\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                                          ^^^^^^^^^^^^^^^\n \n error: impl for `HashMap` should be generalized over different hashers\n   --> $DIR/implicit_hasher.rs:77:43\n    |\n-77 |         impl<K: Hash + Eq, V> Foo<u8> for HashMap<K, V> {\n+LL |         impl<K: Hash + Eq, V> Foo<u8> for HashMap<K, V> {\n    |                                           ^^^^^^^^^^^^^\n ...\n-89 | gen!(impl);\n+LL | gen!(impl);\n    | ----------- in this macro invocation\n help: consider adding a type parameter\n    |\n-77 |         impl<K: Hash + Eq, V, S: ::std::hash::BuildHasher + Default> Foo<u8> for HashMap<K, V, S> {\n+LL |         impl<K: Hash + Eq, V, S: ::std::hash::BuildHasher + Default> Foo<u8> for HashMap<K, V, S> {\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^             ^^^^^^^^^^^^^^^^\n help: ...and use generic constructor\n    |\n-79 |                 (HashMap::default(), HashMap::with_capacity_and_hasher(10, Default::default()))\n+LL |                 (HashMap::default(), HashMap::with_capacity_and_hasher(10, Default::default()))\n    |                  ^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: parameter of type `HashMap` should be generalized over different hashers\n   --> $DIR/implicit_hasher.rs:85:33\n    |\n-85 |         pub fn $name(_map: &mut HashMap<i32, i32>, _set: &mut HashSet<i32>) {}\n+LL |         pub fn $name(_map: &mut HashMap<i32, i32>, _set: &mut HashSet<i32>) {}\n    |                                 ^^^^^^^^^^^^^^^^^\n ...\n-90 | gen!(fn bar);\n+LL | gen!(fn bar);\n    | ------------- in this macro invocation\n help: consider adding a type parameter\n    |\n-85 |         pub fn $name<S: ::std::hash::BuildHasher>(_map: &mut HashMap<i32, i32, S>, _set: &mut HashSet<i32>) {}\n+LL |         pub fn $name<S: ::std::hash::BuildHasher>(_map: &mut HashMap<i32, i32, S>, _set: &mut HashSet<i32>) {}\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^            ^^^^^^^^^^^^^^^^^^^^\n \n error: parameter of type `HashSet` should be generalized over different hashers\n   --> $DIR/implicit_hasher.rs:85:63\n    |\n-85 |         pub fn $name(_map: &mut HashMap<i32, i32>, _set: &mut HashSet<i32>) {}\n+LL |         pub fn $name(_map: &mut HashMap<i32, i32>, _set: &mut HashSet<i32>) {}\n    |                                                               ^^^^^^^^^^^^\n ...\n-90 | gen!(fn bar);\n+LL | gen!(fn bar);\n    | ------------- in this macro invocation\n help: consider adding a type parameter\n    |\n-85 |         pub fn $name<S: ::std::hash::BuildHasher>(_map: &mut HashMap<i32, i32>, _set: &mut HashSet<i32, S>) {}\n+LL |         pub fn $name<S: ::std::hash::BuildHasher>(_map: &mut HashMap<i32, i32>, _set: &mut HashSet<i32, S>) {}\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                                          ^^^^^^^^^^^^^^^\n \n error: aborting due to 10 previous errors"}, {"sha": "4c62a7d65c6dea924f8ed2a6238a0ad1a670aaa4", "filename": "tests/ui/implicit_return.stderr", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fimplicit_return.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fimplicit_return.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimplicit_return.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,63 +1,63 @@\n error: missing return statement\n   --> $DIR/implicit_return.rs:17:5\n    |\n-17 |     true\n+LL |     true\n    |     ^^^^ help: add `return` as shown: `return true`\n    |\n    = note: `-D clippy::implicit-return` implied by `-D warnings`\n \n error: missing return statement\n   --> $DIR/implicit_return.rs:23:9\n    |\n-23 |         true\n+LL |         true\n    |         ^^^^ help: add `return` as shown: `return true`\n \n error: missing return statement\n   --> $DIR/implicit_return.rs:25:9\n    |\n-25 |         false\n+LL |         false\n    |         ^^^^^ help: add `return` as shown: `return false`\n \n error: missing return statement\n   --> $DIR/implicit_return.rs:33:17\n    |\n-33 |         true => false,\n+LL |         true => false,\n    |                 ^^^^^ help: add `return` as shown: `return false`\n \n error: missing return statement\n   --> $DIR/implicit_return.rs:34:20\n    |\n-34 |         false => { true },\n+LL |         false => { true },\n    |                    ^^^^ help: add `return` as shown: `return true`\n \n error: missing return statement\n   --> $DIR/implicit_return.rs:41:9\n    |\n-41 |         break true;\n+LL |         break true;\n    |         ^^^^^^^^^^ help: change `break` to `return` as shown: `return true`\n \n error: missing return statement\n   --> $DIR/implicit_return.rs:49:13\n    |\n-49 |             break true;\n+LL |             break true;\n    |             ^^^^^^^^^^ help: change `break` to `return` as shown: `return true`\n \n error: missing return statement\n   --> $DIR/implicit_return.rs:58:13\n    |\n-58 |             break true;\n+LL |             break true;\n    |             ^^^^^^^^^^ help: change `break` to `return` as shown: `return true`\n \n error: missing return statement\n   --> $DIR/implicit_return.rs:67:18\n    |\n-67 |     let _ = || { true };\n+LL |     let _ = || { true };\n    |                  ^^^^ help: add `return` as shown: `return true`\n \n error: missing return statement\n   --> $DIR/implicit_return.rs:68:16\n    |\n-68 |     let _ = || true;\n+LL |     let _ = || true;\n    |                ^^^^ help: add `return` as shown: `return true`\n \n error: aborting due to 10 previous errors"}, {"sha": "ba909b944800d023bae52a4d443b5d5ef5f2e11d", "filename": "tests/ui/inconsistent_digit_grouping.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Finconsistent_digit_grouping.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Finconsistent_digit_grouping.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finconsistent_digit_grouping.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,33 +1,33 @@\n error: digits grouped inconsistently by underscores\n   --> $DIR/inconsistent_digit_grouping.rs:22:16\n    |\n-22 |     let bad = (1_23_456, 1_234_5678, 1234_567, 1_234.5678_f32, 1.234_5678_f32);\n+LL |     let bad = (1_23_456, 1_234_5678, 1234_567, 1_234.5678_f32, 1.234_5678_f32);\n    |                ^^^^^^^^ help: consider: `123_456`\n    |\n    = note: `-D clippy::inconsistent-digit-grouping` implied by `-D warnings`\n \n error: digits grouped inconsistently by underscores\n   --> $DIR/inconsistent_digit_grouping.rs:22:26\n    |\n-22 |     let bad = (1_23_456, 1_234_5678, 1234_567, 1_234.5678_f32, 1.234_5678_f32);\n+LL |     let bad = (1_23_456, 1_234_5678, 1234_567, 1_234.5678_f32, 1.234_5678_f32);\n    |                          ^^^^^^^^^^ help: consider: `12_345_678`\n \n error: digits grouped inconsistently by underscores\n   --> $DIR/inconsistent_digit_grouping.rs:22:38\n    |\n-22 |     let bad = (1_23_456, 1_234_5678, 1234_567, 1_234.5678_f32, 1.234_5678_f32);\n+LL |     let bad = (1_23_456, 1_234_5678, 1234_567, 1_234.5678_f32, 1.234_5678_f32);\n    |                                      ^^^^^^^^ help: consider: `1_234_567`\n \n error: digits grouped inconsistently by underscores\n   --> $DIR/inconsistent_digit_grouping.rs:22:48\n    |\n-22 |     let bad = (1_23_456, 1_234_5678, 1234_567, 1_234.5678_f32, 1.234_5678_f32);\n+LL |     let bad = (1_23_456, 1_234_5678, 1234_567, 1_234.5678_f32, 1.234_5678_f32);\n    |                                                ^^^^^^^^^^^^^^ help: consider: `1_234.567_8_f32`\n \n error: digits grouped inconsistently by underscores\n   --> $DIR/inconsistent_digit_grouping.rs:22:64\n    |\n-22 |     let bad = (1_23_456, 1_234_5678, 1234_567, 1_234.5678_f32, 1.234_5678_f32);\n+LL |     let bad = (1_23_456, 1_234_5678, 1234_567, 1_234.5678_f32, 1.234_5678_f32);\n    |                                                                ^^^^^^^^^^^^^^ help: consider: `1.234_567_8_f32`\n \n error: aborting due to 5 previous errors"}, {"sha": "2e7bff3e0d5818b045376505409a26b57cd70453", "filename": "tests/ui/indexing_slicing.stderr", "status": "modified", "additions": 43, "deletions": 43, "changes": 86, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Findexing_slicing.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Findexing_slicing.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Findexing_slicing.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,33 +1,33 @@\n error: index out of bounds: the len is 4 but the index is 4\n   --> $DIR/indexing_slicing.rs:25:5\n    |\n-25 |     x[4]; // Ok, let rustc's `const_err` lint handle `usize` indexing on arrays.\n+LL |     x[4]; // Ok, let rustc's `const_err` lint handle `usize` indexing on arrays.\n    |     ^^^^\n    |\n    = note: #[deny(const_err)] on by default\n \n error: index out of bounds: the len is 4 but the index is 8\n   --> $DIR/indexing_slicing.rs:26:5\n    |\n-26 |     x[1 << 3]; // Ok, let rustc's `const_err` lint handle `usize` indexing on arrays.\n+LL |     x[1 << 3]; // Ok, let rustc's `const_err` lint handle `usize` indexing on arrays.\n    |     ^^^^^^^^^\n \n error: index out of bounds: the len is 0 but the index is 0\n   --> $DIR/indexing_slicing.rs:56:5\n    |\n-56 |     empty[0]; // Ok, let rustc's `const_err` lint handle `usize` indexing on arrays.\n+LL |     empty[0]; // Ok, let rustc's `const_err` lint handle `usize` indexing on arrays.\n    |     ^^^^^^^^\n \n error: index out of bounds: the len is 4 but the index is 15\n   --> $DIR/indexing_slicing.rs:87:5\n    |\n-87 |     x[N]; // Ok, let rustc's `const_err` lint handle `usize` indexing on arrays.\n+LL |     x[N]; // Ok, let rustc's `const_err` lint handle `usize` indexing on arrays.\n    |     ^^^^\n \n error: indexing may panic.\n   --> $DIR/indexing_slicing.rs:20:5\n    |\n-20 |     x[index];\n+LL |     x[index];\n    |     ^^^^^^^^\n    |\n    = note: `-D clippy::indexing-slicing` implied by `-D warnings`\n@@ -36,273 +36,273 @@ error: indexing may panic.\n error: slicing may panic.\n   --> $DIR/indexing_slicing.rs:21:6\n    |\n-21 |     &x[index..];\n+LL |     &x[index..];\n    |      ^^^^^^^^^^\n    |\n    = help: Consider using `.get(n..)` or .get_mut(n..)` instead\n \n error: slicing may panic.\n   --> $DIR/indexing_slicing.rs:22:6\n    |\n-22 |     &x[..index];\n+LL |     &x[..index];\n    |      ^^^^^^^^^^\n    |\n    = help: Consider using `.get(..n)`or `.get_mut(..n)` instead\n \n error: slicing may panic.\n   --> $DIR/indexing_slicing.rs:23:6\n    |\n-23 |     &x[index_from..index_to];\n+LL |     &x[index_from..index_to];\n    |      ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: Consider using `.get(n..m)` or `.get_mut(n..m)` instead\n \n error: slicing may panic.\n   --> $DIR/indexing_slicing.rs:24:6\n    |\n-24 |     &x[index_from..][..index_to]; // Two lint reports, one for [index_from..] and another for [..index_to].\n+LL |     &x[index_from..][..index_to]; // Two lint reports, one for [index_from..] and another for [..index_to].\n    |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: Consider using `.get(..n)`or `.get_mut(..n)` instead\n \n error: slicing may panic.\n   --> $DIR/indexing_slicing.rs:24:6\n    |\n-24 |     &x[index_from..][..index_to]; // Two lint reports, one for [index_from..] and another for [..index_to].\n+LL |     &x[index_from..][..index_to]; // Two lint reports, one for [index_from..] and another for [..index_to].\n    |      ^^^^^^^^^^^^^^^\n    |\n    = help: Consider using `.get(n..)` or .get_mut(n..)` instead\n \n error: range is out of bounds\n   --> $DIR/indexing_slicing.rs:27:11\n    |\n-27 |     &x[..=4];\n+LL |     &x[..=4];\n    |           ^\n    |\n    = note: `-D clippy::out-of-bounds-indexing` implied by `-D warnings`\n \n error: range is out of bounds\n   --> $DIR/indexing_slicing.rs:28:11\n    |\n-28 |     &x[1..5];\n+LL |     &x[1..5];\n    |           ^\n \n error: slicing may panic.\n   --> $DIR/indexing_slicing.rs:29:6\n    |\n-29 |     &x[5..][..10]; // Two lint reports, one for [5..] and another for [..10].\n+LL |     &x[5..][..10]; // Two lint reports, one for [5..] and another for [..10].\n    |      ^^^^^^^^^^^^\n    |\n    = help: Consider using `.get(..n)`or `.get_mut(..n)` instead\n \n error: range is out of bounds\n   --> $DIR/indexing_slicing.rs:29:8\n    |\n-29 |     &x[5..][..10]; // Two lint reports, one for [5..] and another for [..10].\n+LL |     &x[5..][..10]; // Two lint reports, one for [5..] and another for [..10].\n    |        ^\n \n error: range is out of bounds\n   --> $DIR/indexing_slicing.rs:30:8\n    |\n-30 |     &x[5..];\n+LL |     &x[5..];\n    |        ^\n \n error: range is out of bounds\n   --> $DIR/indexing_slicing.rs:31:10\n    |\n-31 |     &x[..5];\n+LL |     &x[..5];\n    |          ^\n \n error: range is out of bounds\n   --> $DIR/indexing_slicing.rs:32:8\n    |\n-32 |     &x[5..].iter().map(|x| 2 * x).collect::<Vec<i32>>();\n+LL |     &x[5..].iter().map(|x| 2 * x).collect::<Vec<i32>>();\n    |        ^\n \n error: range is out of bounds\n   --> $DIR/indexing_slicing.rs:33:12\n    |\n-33 |     &x[0..=4];\n+LL |     &x[0..=4];\n    |            ^\n \n error: slicing may panic.\n   --> $DIR/indexing_slicing.rs:34:6\n    |\n-34 |     &x[0..][..3];\n+LL |     &x[0..][..3];\n    |      ^^^^^^^^^^^\n    |\n    = help: Consider using `.get(..n)`or `.get_mut(..n)` instead\n \n error: slicing may panic.\n   --> $DIR/indexing_slicing.rs:35:6\n    |\n-35 |     &x[1..][..5];\n+LL |     &x[1..][..5];\n    |      ^^^^^^^^^^^\n    |\n    = help: Consider using `.get(..n)`or `.get_mut(..n)` instead\n \n error: indexing may panic.\n   --> $DIR/indexing_slicing.rs:48:5\n    |\n-48 |     y[0];\n+LL |     y[0];\n    |     ^^^^\n    |\n    = help: Consider using `.get(n)` or `.get_mut(n)` instead\n \n error: slicing may panic.\n   --> $DIR/indexing_slicing.rs:49:6\n    |\n-49 |     &y[1..2];\n+LL |     &y[1..2];\n    |      ^^^^^^^\n    |\n    = help: Consider using `.get(n..m)` or `.get_mut(n..m)` instead\n \n error: slicing may panic.\n   --> $DIR/indexing_slicing.rs:50:6\n    |\n-50 |     &y[0..=4];\n+LL |     &y[0..=4];\n    |      ^^^^^^^^\n    |\n    = help: Consider using `.get(n..m)` or `.get_mut(n..m)` instead\n \n error: slicing may panic.\n   --> $DIR/indexing_slicing.rs:51:6\n    |\n-51 |     &y[..=4];\n+LL |     &y[..=4];\n    |      ^^^^^^^\n    |\n    = help: Consider using `.get(..n)`or `.get_mut(..n)` instead\n \n error: range is out of bounds\n   --> $DIR/indexing_slicing.rs:57:12\n    |\n-57 |     &empty[1..5];\n+LL |     &empty[1..5];\n    |            ^\n \n error: range is out of bounds\n   --> $DIR/indexing_slicing.rs:58:16\n    |\n-58 |     &empty[0..=4];\n+LL |     &empty[0..=4];\n    |                ^\n \n error: range is out of bounds\n   --> $DIR/indexing_slicing.rs:59:15\n    |\n-59 |     &empty[..=4];\n+LL |     &empty[..=4];\n    |               ^\n \n error: range is out of bounds\n   --> $DIR/indexing_slicing.rs:60:12\n    |\n-60 |     &empty[1..];\n+LL |     &empty[1..];\n    |            ^\n \n error: range is out of bounds\n   --> $DIR/indexing_slicing.rs:61:14\n    |\n-61 |     &empty[..4];\n+LL |     &empty[..4];\n    |              ^\n \n error: range is out of bounds\n   --> $DIR/indexing_slicing.rs:62:16\n    |\n-62 |     &empty[0..=0];\n+LL |     &empty[0..=0];\n    |                ^\n \n error: range is out of bounds\n   --> $DIR/indexing_slicing.rs:63:15\n    |\n-63 |     &empty[..=0];\n+LL |     &empty[..=0];\n    |               ^\n \n error: indexing may panic.\n   --> $DIR/indexing_slicing.rs:71:5\n    |\n-71 |     v[0];\n+LL |     v[0];\n    |     ^^^^\n    |\n    = help: Consider using `.get(n)` or `.get_mut(n)` instead\n \n error: indexing may panic.\n   --> $DIR/indexing_slicing.rs:72:5\n    |\n-72 |     v[10];\n+LL |     v[10];\n    |     ^^^^^\n    |\n    = help: Consider using `.get(n)` or `.get_mut(n)` instead\n \n error: indexing may panic.\n   --> $DIR/indexing_slicing.rs:73:5\n    |\n-73 |     v[1 << 3];\n+LL |     v[1 << 3];\n    |     ^^^^^^^^^\n    |\n    = help: Consider using `.get(n)` or `.get_mut(n)` instead\n \n error: slicing may panic.\n   --> $DIR/indexing_slicing.rs:74:6\n    |\n-74 |     &v[10..100];\n+LL |     &v[10..100];\n    |      ^^^^^^^^^^\n    |\n    = help: Consider using `.get(n..m)` or `.get_mut(n..m)` instead\n \n error: slicing may panic.\n   --> $DIR/indexing_slicing.rs:75:6\n    |\n-75 |     &x[10..][..100]; // Two lint reports, one for [10..] and another for [..100].\n+LL |     &x[10..][..100]; // Two lint reports, one for [10..] and another for [..100].\n    |      ^^^^^^^^^^^^^^\n    |\n    = help: Consider using `.get(..n)`or `.get_mut(..n)` instead\n \n error: range is out of bounds\n   --> $DIR/indexing_slicing.rs:75:8\n    |\n-75 |     &x[10..][..100]; // Two lint reports, one for [10..] and another for [..100].\n+LL |     &x[10..][..100]; // Two lint reports, one for [10..] and another for [..100].\n    |        ^^\n \n error: slicing may panic.\n   --> $DIR/indexing_slicing.rs:76:6\n    |\n-76 |     &v[10..];\n+LL |     &v[10..];\n    |      ^^^^^^^\n    |\n    = help: Consider using `.get(n..)` or .get_mut(n..)` instead\n \n error: slicing may panic.\n   --> $DIR/indexing_slicing.rs:77:6\n    |\n-77 |     &v[..100];\n+LL |     &v[..100];\n    |      ^^^^^^^^\n    |\n    = help: Consider using `.get(..n)`or `.get_mut(..n)` instead\n \n error: indexing may panic.\n   --> $DIR/indexing_slicing.rs:89:5\n    |\n-89 |     v[N];\n+LL |     v[N];\n    |     ^^^^\n    |\n    = help: Consider using `.get(n)` or `.get_mut(n)` instead\n \n error: indexing may panic.\n   --> $DIR/indexing_slicing.rs:90:5\n    |\n-90 |     v[M];\n+LL |     v[M];\n    |     ^^^^\n    |\n    = help: Consider using `.get(n)` or `.get_mut(n)` instead\n \n error: range is out of bounds\n   --> $DIR/indexing_slicing.rs:94:13\n    |\n-94 |     &x[num..10]; // should trigger out of bounds error\n+LL |     &x[num..10]; // should trigger out of bounds error\n    |             ^^\n \n error: range is out of bounds\n   --> $DIR/indexing_slicing.rs:95:8\n    |\n-95 |     &x[10..num]; // should trigger out of bounds error\n+LL |     &x[10..num]; // should trigger out of bounds error\n    |        ^^\n \n error: aborting due to 43 previous errors"}, {"sha": "976957d35d7b5c4803146bdddc0fdfb90db019ce", "filename": "tests/ui/infallible_destructuring_match.stderr", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Finfallible_destructuring_match.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Finfallible_destructuring_match.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finfallible_destructuring_match.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,27 +1,27 @@\n error: you seem to be trying to use match to destructure a single infallible pattern. Consider using `let`\n   --> $DIR/infallible_destructuring_match.rs:25:5\n    |\n-25 | /     let data = match wrapper {\n-26 | |         SingleVariantEnum::Variant(i) => i,\n-27 | |     };\n+LL | /     let data = match wrapper {\n+LL | |         SingleVariantEnum::Variant(i) => i,\n+LL | |     };\n    | |______^ help: try this: `let SingleVariantEnum::Variant(data) = wrapper;`\n    |\n    = note: `-D clippy::infallible-destructuring-match` implied by `-D warnings`\n \n error: you seem to be trying to use match to destructure a single infallible pattern. Consider using `let`\n   --> $DIR/infallible_destructuring_match.rs:46:5\n    |\n-46 | /     let data = match wrapper {\n-47 | |         TupleStruct(i) => i,\n-48 | |     };\n+LL | /     let data = match wrapper {\n+LL | |         TupleStruct(i) => i,\n+LL | |     };\n    | |______^ help: try this: `let TupleStruct(data) = wrapper;`\n \n error: you seem to be trying to use match to destructure a single infallible pattern. Consider using `let`\n   --> $DIR/infallible_destructuring_match.rs:67:5\n    |\n-67 | /     let data = match wrapper {\n-68 | |         Ok(i) => i,\n-69 | |     };\n+LL | /     let data = match wrapper {\n+LL | |         Ok(i) => i,\n+LL | |     };\n    | |______^ help: try this: `let Ok(data) = wrapper;`\n \n error: aborting due to 3 previous errors"}, {"sha": "c64b3918db467577cc655c70cb3bee700e058e27", "filename": "tests/ui/infinite_iter.stderr", "status": "modified", "additions": 25, "deletions": 25, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Finfinite_iter.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Finfinite_iter.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finfinite_iter.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,108 +1,108 @@\n error: you are collect()ing an iterator and throwing away the result. Consider using an explicit for loop to exhaust the iterator\n   --> $DIR/infinite_iter.rs:19:5\n    |\n-19 |     repeat(0_u8).collect::<Vec<_>>(); // infinite iter\n+LL |     repeat(0_u8).collect::<Vec<_>>(); // infinite iter\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::unused-collect` implied by `-D warnings`\n \n error: infinite iteration detected\n   --> $DIR/infinite_iter.rs:19:5\n    |\n-19 |     repeat(0_u8).collect::<Vec<_>>(); // infinite iter\n+LL |     repeat(0_u8).collect::<Vec<_>>(); // infinite iter\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n note: lint level defined here\n   --> $DIR/infinite_iter.rs:17:8\n    |\n-17 | #[deny(clippy::infinite_iter)]\n+LL | #[deny(clippy::infinite_iter)]\n    |        ^^^^^^^^^^^^^^^^^^^^^\n \n error: infinite iteration detected\n   --> $DIR/infinite_iter.rs:20:5\n    |\n-20 |     (0..8_u32).take_while(square_is_lower_64).cycle().count(); // infinite iter\n+LL |     (0..8_u32).take_while(square_is_lower_64).cycle().count(); // infinite iter\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: infinite iteration detected\n   --> $DIR/infinite_iter.rs:21:5\n    |\n-21 |     (0..8_u64).chain(0..).max(); // infinite iter\n+LL |     (0..8_u64).chain(0..).max(); // infinite iter\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: infinite iteration detected\n   --> $DIR/infinite_iter.rs:26:5\n    |\n-26 | /     (0..8_u32)\n-27 | |         .rev()\n-28 | |         .cycle()\n-29 | |         .map(|x| x + 1_u32)\n-30 | |         .for_each(|x| println!(\"{}\", x)); // infinite iter\n+LL | /     (0..8_u32)\n+LL | |         .rev()\n+LL | |         .cycle()\n+LL | |         .map(|x| x + 1_u32)\n+LL | |         .for_each(|x| println!(\"{}\", x)); // infinite iter\n    | |________________________________________^\n \n error: infinite iteration detected\n   --> $DIR/infinite_iter.rs:32:5\n    |\n-32 |     (0_usize..).flat_map(|x| 0..x).product::<usize>(); // infinite iter\n+LL |     (0_usize..).flat_map(|x| 0..x).product::<usize>(); // infinite iter\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: infinite iteration detected\n   --> $DIR/infinite_iter.rs:33:5\n    |\n-33 |     (0_u64..).filter(|x| x % 2 == 0).last(); // infinite iter\n+LL |     (0_u64..).filter(|x| x % 2 == 0).last(); // infinite iter\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: possible infinite iteration detected\n   --> $DIR/infinite_iter.rs:40:5\n    |\n-40 |     (0..).zip((0..).take_while(square_is_lower_64)).count(); // maybe infinite iter\n+LL |     (0..).zip((0..).take_while(square_is_lower_64)).count(); // maybe infinite iter\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n note: lint level defined here\n   --> $DIR/infinite_iter.rs:38:8\n    |\n-38 | #[deny(clippy::maybe_infinite_iter)]\n+LL | #[deny(clippy::maybe_infinite_iter)]\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: possible infinite iteration detected\n   --> $DIR/infinite_iter.rs:41:5\n    |\n-41 |     repeat(42).take_while(|x| *x == 42).chain(0..42).max(); // maybe infinite iter\n+LL |     repeat(42).take_while(|x| *x == 42).chain(0..42).max(); // maybe infinite iter\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: possible infinite iteration detected\n   --> $DIR/infinite_iter.rs:42:5\n    |\n-42 | /     (1..)\n-43 | |         .scan(0, |state, x| {\n-44 | |             *state += x;\n-45 | |             Some(*state)\n-46 | |         })\n-47 | |         .min(); // maybe infinite iter\n+LL | /     (1..)\n+LL | |         .scan(0, |state, x| {\n+LL | |             *state += x;\n+LL | |             Some(*state)\n+LL | |         })\n+LL | |         .min(); // maybe infinite iter\n    | |______________^\n \n error: possible infinite iteration detected\n   --> $DIR/infinite_iter.rs:48:5\n    |\n-48 |     (0..).find(|x| *x == 24); // maybe infinite iter\n+LL |     (0..).find(|x| *x == 24); // maybe infinite iter\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: possible infinite iteration detected\n   --> $DIR/infinite_iter.rs:49:5\n    |\n-49 |     (0..).position(|x| x == 24); // maybe infinite iter\n+LL |     (0..).position(|x| x == 24); // maybe infinite iter\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: possible infinite iteration detected\n   --> $DIR/infinite_iter.rs:50:5\n    |\n-50 |     (0..).any(|x| x == 24); // maybe infinite iter\n+LL |     (0..).any(|x| x == 24); // maybe infinite iter\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n error: possible infinite iteration detected\n   --> $DIR/infinite_iter.rs:51:5\n    |\n-51 |     (0..).all(|x| x == 24); // maybe infinite iter\n+LL |     (0..).all(|x| x == 24); // maybe infinite iter\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 14 previous errors"}, {"sha": "79efb18a83eae3625ce2e6b84dd684947a99f81c", "filename": "tests/ui/infinite_loop.stderr", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Finfinite_loop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Finfinite_loop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finfinite_loop.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,58 +1,58 @@\n error: Variable in the condition are not mutated in the loop body. This either leads to an infinite or to a never running loop.\n   --> $DIR/infinite_loop.rs:32:11\n    |\n-32 |     while y < 10 {\n+LL |     while y < 10 {\n    |           ^^^^^^\n    |\n    = note: #[deny(clippy::while_immutable_condition)] on by default\n \n error: Variable in the condition are not mutated in the loop body. This either leads to an infinite or to a never running loop.\n   --> $DIR/infinite_loop.rs:37:11\n    |\n-37 |     while y < 10 && x < 3 {\n+LL |     while y < 10 && x < 3 {\n    |           ^^^^^^^^^^^^^^^\n \n error: Variable in the condition are not mutated in the loop body. This either leads to an infinite or to a never running loop.\n   --> $DIR/infinite_loop.rs:44:11\n    |\n-44 |     while !cond {\n+LL |     while !cond {\n    |           ^^^^^\n \n error: Variable in the condition are not mutated in the loop body. This either leads to an infinite or to a never running loop.\n   --> $DIR/infinite_loop.rs:88:11\n    |\n-88 |     while i < 3 {\n+LL |     while i < 3 {\n    |           ^^^^^\n \n error: Variable in the condition are not mutated in the loop body. This either leads to an infinite or to a never running loop.\n   --> $DIR/infinite_loop.rs:93:11\n    |\n-93 |     while i < 3 && j > 0 {\n+LL |     while i < 3 && j > 0 {\n    |           ^^^^^^^^^^^^^^\n \n error: Variable in the condition are not mutated in the loop body. This either leads to an infinite or to a never running loop.\n   --> $DIR/infinite_loop.rs:97:11\n    |\n-97 |     while i < 3 {\n+LL |     while i < 3 {\n    |           ^^^^^\n \n error: Variable in the condition are not mutated in the loop body. This either leads to an infinite or to a never running loop.\n-   --> $DIR/infinite_loop.rs:112:11\n-    |\n-112 |     while i < 3 {\n-    |           ^^^^^\n+  --> $DIR/infinite_loop.rs:112:11\n+   |\n+LL |     while i < 3 {\n+   |           ^^^^^\n \n error: Variable in the condition are not mutated in the loop body. This either leads to an infinite or to a never running loop.\n-   --> $DIR/infinite_loop.rs:117:11\n-    |\n-117 |     while i < 3 {\n-    |           ^^^^^\n+  --> $DIR/infinite_loop.rs:117:11\n+   |\n+LL |     while i < 3 {\n+   |           ^^^^^\n \n error: Variable in the condition are not mutated in the loop body. This either leads to an infinite or to a never running loop.\n-   --> $DIR/infinite_loop.rs:183:15\n-    |\n-183 |         while self.count < n {\n-    |               ^^^^^^^^^^^^^^\n+  --> $DIR/infinite_loop.rs:183:15\n+   |\n+LL |         while self.count < n {\n+   |               ^^^^^^^^^^^^^^\n \n error: aborting due to 9 previous errors\n "}, {"sha": "3c2b086968e92cbdb98043f77f847c2a8af3bd10", "filename": "tests/ui/inline_fn_without_body.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Finline_fn_without_body.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Finline_fn_without_body.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finline_fn_without_body.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,27 +1,27 @@\n error: use of `#[inline]` on trait method `default_inline` which has no body\n   --> $DIR/inline_fn_without_body.rs:14:5\n    |\n-14 |       #[inline]\n+LL |       #[inline]\n    |  _____-^^^^^^^^\n-15 | |     fn default_inline();\n+LL | |     fn default_inline();\n    | |____- help: remove\n    |\n    = note: `-D clippy::inline-fn-without-body` implied by `-D warnings`\n \n error: use of `#[inline]` on trait method `always_inline` which has no body\n   --> $DIR/inline_fn_without_body.rs:17:5\n    |\n-17 |       #[inline(always)]\n+LL |       #[inline(always)]\n    |  _____-^^^^^^^^^^^^^^^^\n-18 | |     fn always_inline();\n+LL | |     fn always_inline();\n    | |____- help: remove\n \n error: use of `#[inline]` on trait method `never_inline` which has no body\n   --> $DIR/inline_fn_without_body.rs:20:5\n    |\n-20 |       #[inline(never)]\n+LL |       #[inline(never)]\n    |  _____-^^^^^^^^^^^^^^^\n-21 | |     fn never_inline();\n+LL | |     fn never_inline();\n    | |____- help: remove\n \n error: aborting due to 3 previous errors"}, {"sha": "30bc2966619a7b91c7ef6d79c19a5b74e5b442ec", "filename": "tests/ui/int_plus_one.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fint_plus_one.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fint_plus_one.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fint_plus_one.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,43 +1,43 @@\n error: Unnecessary `>= y + 1` or `x - 1 >=`\n   --> $DIR/int_plus_one.rs:16:5\n    |\n-16 |     x >= y + 1;\n+LL |     x >= y + 1;\n    |     ^^^^^^^^^^\n    |\n    = note: `-D clippy::int-plus-one` implied by `-D warnings`\n help: change `>= y + 1` to `> y` as shown\n    |\n-16 |     x > y;\n+LL |     x > y;\n    |     ^^^^^\n \n error: Unnecessary `>= y + 1` or `x - 1 >=`\n   --> $DIR/int_plus_one.rs:17:5\n    |\n-17 |     y + 1 <= x;\n+LL |     y + 1 <= x;\n    |     ^^^^^^^^^^\n help: change `>= y + 1` to `> y` as shown\n    |\n-17 |     y < x;\n+LL |     y < x;\n    |     ^^^^^\n \n error: Unnecessary `>= y + 1` or `x - 1 >=`\n   --> $DIR/int_plus_one.rs:19:5\n    |\n-19 |     x - 1 >= y;\n+LL |     x - 1 >= y;\n    |     ^^^^^^^^^^\n help: change `>= y + 1` to `> y` as shown\n    |\n-19 |     x > y;\n+LL |     x > y;\n    |     ^^^^^\n \n error: Unnecessary `>= y + 1` or `x - 1 >=`\n   --> $DIR/int_plus_one.rs:20:5\n    |\n-20 |     y <= x - 1;\n+LL |     y <= x - 1;\n    |     ^^^^^^^^^^\n help: change `>= y + 1` to `> y` as shown\n    |\n-20 |     y < x;\n+LL |     y < x;\n    |     ^^^^^\n \n error: aborting due to 4 previous errors"}, {"sha": "e7f2a21d7a44a531afbbcdda0aa74a07b7e7d84b", "filename": "tests/ui/into_iter_on_ref.stderr", "status": "modified", "additions": 29, "deletions": 29, "changes": 58, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Finto_iter_on_ref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Finto_iter_on_ref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finto_iter_on_ref.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,177 +1,177 @@\n error: this .into_iter() call is equivalent to .iter() and will not move the array\n   --> $DIR/into_iter_on_ref.rs:11:24\n    |\n-11 |     for _ in [1, 2, 3].into_iter() {} //~ ERROR equivalent to .iter()\n+LL |     for _ in [1, 2, 3].into_iter() {} //~ ERROR equivalent to .iter()\n    |                        ^^^^^^^^^ help: call directly: `iter`\n    |\n note: lint level defined here\n   --> $DIR/into_iter_on_ref.rs:2:9\n    |\n-2  | #![deny(clippy::into_iter_on_array)]\n+LL | #![deny(clippy::into_iter_on_array)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: this .into_iter() call is equivalent to .iter() and will not move the array\n   --> $DIR/into_iter_on_ref.rs:13:23\n    |\n-13 |     let _ = [1, 2, 3].into_iter(); //~ ERROR equivalent to .iter()\n+LL |     let _ = [1, 2, 3].into_iter(); //~ ERROR equivalent to .iter()\n    |                       ^^^^^^^^^ help: call directly: `iter`\n \n error: this .into_iter() call is equivalent to .iter() and will not move the Vec\n   --> $DIR/into_iter_on_ref.rs:15:30\n    |\n-15 |     let _ = (&vec![1, 2, 3]).into_iter(); //~ WARN equivalent to .iter()\n+LL |     let _ = (&vec![1, 2, 3]).into_iter(); //~ WARN equivalent to .iter()\n    |                              ^^^^^^^^^ help: call directly: `iter`\n    |\n    = note: `-D clippy::into-iter-on-ref` implied by `-D warnings`\n \n error: this .into_iter() call is equivalent to .iter() and will not move the slice\n   --> $DIR/into_iter_on_ref.rs:16:46\n    |\n-16 |     let _ = vec![1, 2, 3].into_boxed_slice().into_iter(); //~ WARN equivalent to .iter()\n+LL |     let _ = vec![1, 2, 3].into_boxed_slice().into_iter(); //~ WARN equivalent to .iter()\n    |                                              ^^^^^^^^^ help: call directly: `iter`\n \n error: this .into_iter() call is equivalent to .iter() and will not move the slice\n   --> $DIR/into_iter_on_ref.rs:17:41\n    |\n-17 |     let _ = std::rc::Rc::from(&[X][..]).into_iter(); //~ WARN equivalent to .iter()\n+LL |     let _ = std::rc::Rc::from(&[X][..]).into_iter(); //~ WARN equivalent to .iter()\n    |                                         ^^^^^^^^^ help: call directly: `iter`\n \n error: this .into_iter() call is equivalent to .iter() and will not move the slice\n   --> $DIR/into_iter_on_ref.rs:18:44\n    |\n-18 |     let _ = std::sync::Arc::from(&[X][..]).into_iter(); //~ WARN equivalent to .iter()\n+LL |     let _ = std::sync::Arc::from(&[X][..]).into_iter(); //~ WARN equivalent to .iter()\n    |                                            ^^^^^^^^^ help: call directly: `iter`\n \n error: this .into_iter() call is equivalent to .iter() and will not move the array\n   --> $DIR/into_iter_on_ref.rs:20:32\n    |\n-20 |     let _ = (&&&&&&&[1, 2, 3]).into_iter(); //~ ERROR equivalent to .iter()\n+LL |     let _ = (&&&&&&&[1, 2, 3]).into_iter(); //~ ERROR equivalent to .iter()\n    |                                ^^^^^^^^^ help: call directly: `iter`\n \n error: this .into_iter() call is equivalent to .iter() and will not move the array\n   --> $DIR/into_iter_on_ref.rs:21:36\n    |\n-21 |     let _ = (&&&&mut &&&[1, 2, 3]).into_iter(); //~ ERROR equivalent to .iter()\n+LL |     let _ = (&&&&mut &&&[1, 2, 3]).into_iter(); //~ ERROR equivalent to .iter()\n    |                                    ^^^^^^^^^ help: call directly: `iter`\n \n error: this .into_iter() call is equivalent to .iter_mut() and will not move the array\n   --> $DIR/into_iter_on_ref.rs:22:40\n    |\n-22 |     let _ = (&mut &mut &mut [1, 2, 3]).into_iter(); //~ ERROR equivalent to .iter_mut()\n+LL |     let _ = (&mut &mut &mut [1, 2, 3]).into_iter(); //~ ERROR equivalent to .iter_mut()\n    |                                        ^^^^^^^^^ help: call directly: `iter_mut`\n \n error: this .into_iter() call is equivalent to .iter() and will not move the Option\n   --> $DIR/into_iter_on_ref.rs:24:24\n    |\n-24 |     let _ = (&Some(4)).into_iter(); //~ WARN equivalent to .iter()\n+LL |     let _ = (&Some(4)).into_iter(); //~ WARN equivalent to .iter()\n    |                        ^^^^^^^^^ help: call directly: `iter`\n \n error: this .into_iter() call is equivalent to .iter_mut() and will not move the Option\n   --> $DIR/into_iter_on_ref.rs:25:28\n    |\n-25 |     let _ = (&mut Some(5)).into_iter(); //~ WARN equivalent to .iter_mut()\n+LL |     let _ = (&mut Some(5)).into_iter(); //~ WARN equivalent to .iter_mut()\n    |                            ^^^^^^^^^ help: call directly: `iter_mut`\n \n error: this .into_iter() call is equivalent to .iter() and will not move the Result\n   --> $DIR/into_iter_on_ref.rs:26:32\n    |\n-26 |     let _ = (&Ok::<_, i32>(6)).into_iter(); //~ WARN equivalent to .iter()\n+LL |     let _ = (&Ok::<_, i32>(6)).into_iter(); //~ WARN equivalent to .iter()\n    |                                ^^^^^^^^^ help: call directly: `iter`\n \n error: this .into_iter() call is equivalent to .iter_mut() and will not move the Result\n   --> $DIR/into_iter_on_ref.rs:27:37\n    |\n-27 |     let _ = (&mut Err::<i32, _>(7)).into_iter(); //~ WARN equivalent to .iter_mut()\n+LL |     let _ = (&mut Err::<i32, _>(7)).into_iter(); //~ WARN equivalent to .iter_mut()\n    |                                     ^^^^^^^^^ help: call directly: `iter_mut`\n \n error: this .into_iter() call is equivalent to .iter() and will not move the Vec\n   --> $DIR/into_iter_on_ref.rs:28:34\n    |\n-28 |     let _ = (&Vec::<i32>::new()).into_iter(); //~ WARN equivalent to .iter()\n+LL |     let _ = (&Vec::<i32>::new()).into_iter(); //~ WARN equivalent to .iter()\n    |                                  ^^^^^^^^^ help: call directly: `iter`\n \n error: this .into_iter() call is equivalent to .iter_mut() and will not move the Vec\n   --> $DIR/into_iter_on_ref.rs:29:38\n    |\n-29 |     let _ = (&mut Vec::<i32>::new()).into_iter(); //~ WARN equivalent to .iter_mut()\n+LL |     let _ = (&mut Vec::<i32>::new()).into_iter(); //~ WARN equivalent to .iter_mut()\n    |                                      ^^^^^^^^^ help: call directly: `iter_mut`\n \n error: this .into_iter() call is equivalent to .iter() and will not move the BTreeMap\n   --> $DIR/into_iter_on_ref.rs:30:44\n    |\n-30 |     let _ = (&BTreeMap::<i32, u64>::new()).into_iter(); //~ WARN equivalent to .iter()\n+LL |     let _ = (&BTreeMap::<i32, u64>::new()).into_iter(); //~ WARN equivalent to .iter()\n    |                                            ^^^^^^^^^ help: call directly: `iter`\n \n error: this .into_iter() call is equivalent to .iter_mut() and will not move the BTreeMap\n   --> $DIR/into_iter_on_ref.rs:31:48\n    |\n-31 |     let _ = (&mut BTreeMap::<i32, u64>::new()).into_iter(); //~ WARN equivalent to .iter_mut()\n+LL |     let _ = (&mut BTreeMap::<i32, u64>::new()).into_iter(); //~ WARN equivalent to .iter_mut()\n    |                                                ^^^^^^^^^ help: call directly: `iter_mut`\n \n error: this .into_iter() call is equivalent to .iter() and will not move the VecDeque\n   --> $DIR/into_iter_on_ref.rs:32:39\n    |\n-32 |     let _ = (&VecDeque::<i32>::new()).into_iter(); //~ WARN equivalent to .iter()\n+LL |     let _ = (&VecDeque::<i32>::new()).into_iter(); //~ WARN equivalent to .iter()\n    |                                       ^^^^^^^^^ help: call directly: `iter`\n \n error: this .into_iter() call is equivalent to .iter_mut() and will not move the VecDeque\n   --> $DIR/into_iter_on_ref.rs:33:43\n    |\n-33 |     let _ = (&mut VecDeque::<i32>::new()).into_iter(); //~ WARN equivalent to .iter_mut()\n+LL |     let _ = (&mut VecDeque::<i32>::new()).into_iter(); //~ WARN equivalent to .iter_mut()\n    |                                           ^^^^^^^^^ help: call directly: `iter_mut`\n \n error: this .into_iter() call is equivalent to .iter() and will not move the LinkedList\n   --> $DIR/into_iter_on_ref.rs:34:41\n    |\n-34 |     let _ = (&LinkedList::<i32>::new()).into_iter(); //~ WARN equivalent to .iter()\n+LL |     let _ = (&LinkedList::<i32>::new()).into_iter(); //~ WARN equivalent to .iter()\n    |                                         ^^^^^^^^^ help: call directly: `iter`\n \n error: this .into_iter() call is equivalent to .iter_mut() and will not move the LinkedList\n   --> $DIR/into_iter_on_ref.rs:35:45\n    |\n-35 |     let _ = (&mut LinkedList::<i32>::new()).into_iter(); //~ WARN equivalent to .iter_mut()\n+LL |     let _ = (&mut LinkedList::<i32>::new()).into_iter(); //~ WARN equivalent to .iter_mut()\n    |                                             ^^^^^^^^^ help: call directly: `iter_mut`\n \n error: this .into_iter() call is equivalent to .iter() and will not move the HashMap\n   --> $DIR/into_iter_on_ref.rs:36:43\n    |\n-36 |     let _ = (&HashMap::<i32, u64>::new()).into_iter(); //~ WARN equivalent to .iter()\n+LL |     let _ = (&HashMap::<i32, u64>::new()).into_iter(); //~ WARN equivalent to .iter()\n    |                                           ^^^^^^^^^ help: call directly: `iter`\n \n error: this .into_iter() call is equivalent to .iter_mut() and will not move the HashMap\n   --> $DIR/into_iter_on_ref.rs:37:47\n    |\n-37 |     let _ = (&mut HashMap::<i32, u64>::new()).into_iter(); //~ WARN equivalent to .iter_mut()\n+LL |     let _ = (&mut HashMap::<i32, u64>::new()).into_iter(); //~ WARN equivalent to .iter_mut()\n    |                                               ^^^^^^^^^ help: call directly: `iter_mut`\n \n error: this .into_iter() call is equivalent to .iter() and will not move the BTreeSet\n   --> $DIR/into_iter_on_ref.rs:39:39\n    |\n-39 |     let _ = (&BTreeSet::<i32>::new()).into_iter(); //~ WARN equivalent to .iter()\n+LL |     let _ = (&BTreeSet::<i32>::new()).into_iter(); //~ WARN equivalent to .iter()\n    |                                       ^^^^^^^^^ help: call directly: `iter`\n \n error: this .into_iter() call is equivalent to .iter() and will not move the BinaryHeap\n   --> $DIR/into_iter_on_ref.rs:40:41\n    |\n-40 |     let _ = (&BinaryHeap::<i32>::new()).into_iter(); //~ WARN equivalent to .iter()\n+LL |     let _ = (&BinaryHeap::<i32>::new()).into_iter(); //~ WARN equivalent to .iter()\n    |                                         ^^^^^^^^^ help: call directly: `iter`\n \n error: this .into_iter() call is equivalent to .iter() and will not move the HashSet\n   --> $DIR/into_iter_on_ref.rs:41:38\n    |\n-41 |     let _ = (&HashSet::<i32>::new()).into_iter(); //~ WARN equivalent to .iter()\n+LL |     let _ = (&HashSet::<i32>::new()).into_iter(); //~ WARN equivalent to .iter()\n    |                                      ^^^^^^^^^ help: call directly: `iter`\n \n error: this .into_iter() call is equivalent to .iter() and will not move the Path\n   --> $DIR/into_iter_on_ref.rs:42:43\n    |\n-42 |     let _ = std::path::Path::new(\"12/34\").into_iter(); //~ WARN equivalent to .iter()\n+LL |     let _ = std::path::Path::new(\"12/34\").into_iter(); //~ WARN equivalent to .iter()\n    |                                           ^^^^^^^^^ help: call directly: `iter`\n \n error: this .into_iter() call is equivalent to .iter() and will not move the PathBuf\n   --> $DIR/into_iter_on_ref.rs:43:47\n    |\n-43 |     let _ = std::path::PathBuf::from(\"12/34\").into_iter(); //~ ERROR equivalent to .iter()\n+LL |     let _ = std::path::PathBuf::from(\"12/34\").into_iter(); //~ ERROR equivalent to .iter()\n    |                                               ^^^^^^^^^ help: call directly: `iter`\n \n error: aborting due to 28 previous errors"}, {"sha": "f43863620997ed71ae4a055887201b3b17a97f95", "filename": "tests/ui/invalid_ref.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Finvalid_ref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Finvalid_ref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finvalid_ref.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,7 +1,7 @@\n error: reference to zeroed memory\n   --> $DIR/invalid_ref.rs:33:24\n    |\n-33 |     let ref_zero: &T = std::mem::zeroed(); // warning\n+LL |     let ref_zero: &T = std::mem::zeroed(); // warning\n    |                        ^^^^^^^^^^^^^^^^^^\n    |\n    = note: #[deny(clippy::invalid_ref)] on by default\n@@ -10,39 +10,39 @@ error: reference to zeroed memory\n error: reference to zeroed memory\n   --> $DIR/invalid_ref.rs:37:24\n    |\n-37 |     let ref_zero: &T = core::mem::zeroed(); // warning\n+LL |     let ref_zero: &T = core::mem::zeroed(); // warning\n    |                        ^^^^^^^^^^^^^^^^^^^\n    |\n    = help: Creation of a null reference is undefined behavior; see https://doc.rust-lang.org/reference/behavior-considered-undefined.html\n \n error: reference to zeroed memory\n   --> $DIR/invalid_ref.rs:41:24\n    |\n-41 |     let ref_zero: &T = std::intrinsics::init(); // warning\n+LL |     let ref_zero: &T = std::intrinsics::init(); // warning\n    |                        ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: Creation of a null reference is undefined behavior; see https://doc.rust-lang.org/reference/behavior-considered-undefined.html\n \n error: reference to uninitialized memory\n   --> $DIR/invalid_ref.rs:45:26\n    |\n-45 |     let ref_uninit: &T = std::mem::uninitialized(); // warning\n+LL |     let ref_uninit: &T = std::mem::uninitialized(); // warning\n    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: Creation of a null reference is undefined behavior; see https://doc.rust-lang.org/reference/behavior-considered-undefined.html\n \n error: reference to uninitialized memory\n   --> $DIR/invalid_ref.rs:49:26\n    |\n-49 |     let ref_uninit: &T = core::mem::uninitialized(); // warning\n+LL |     let ref_uninit: &T = core::mem::uninitialized(); // warning\n    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: Creation of a null reference is undefined behavior; see https://doc.rust-lang.org/reference/behavior-considered-undefined.html\n \n error: reference to uninitialized memory\n   --> $DIR/invalid_ref.rs:53:26\n    |\n-53 |     let ref_uninit: &T = std::intrinsics::uninit(); // warning\n+LL |     let ref_uninit: &T = std::intrinsics::uninit(); // warning\n    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: Creation of a null reference is undefined behavior; see https://doc.rust-lang.org/reference/behavior-considered-undefined.html"}, {"sha": "4bf9208833740403a9c180bafbde5379eb0ea8b9", "filename": "tests/ui/invalid_upcast_comparisons.stderr", "status": "modified", "additions": 27, "deletions": 27, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Finvalid_upcast_comparisons.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Finvalid_upcast_comparisons.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finvalid_upcast_comparisons.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,165 +1,165 @@\n error: because of the numeric bounds on `u8` prior to casting, this expression is always false\n   --> $DIR/invalid_upcast_comparisons.rs:30:5\n    |\n-30 |     (u8 as u32) > 300;\n+LL |     (u8 as u32) > 300;\n    |     ^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::invalid-upcast-comparisons` implied by `-D warnings`\n \n error: because of the numeric bounds on `u8` prior to casting, this expression is always false\n   --> $DIR/invalid_upcast_comparisons.rs:31:5\n    |\n-31 |     (u8 as i32) > 300;\n+LL |     (u8 as i32) > 300;\n    |     ^^^^^^^^^^^^^^^^^\n \n error: because of the numeric bounds on `u8` prior to casting, this expression is always false\n   --> $DIR/invalid_upcast_comparisons.rs:32:5\n    |\n-32 |     (u8 as u32) == 300;\n+LL |     (u8 as u32) == 300;\n    |     ^^^^^^^^^^^^^^^^^^\n \n error: because of the numeric bounds on `u8` prior to casting, this expression is always false\n   --> $DIR/invalid_upcast_comparisons.rs:33:5\n    |\n-33 |     (u8 as i32) == 300;\n+LL |     (u8 as i32) == 300;\n    |     ^^^^^^^^^^^^^^^^^^\n \n error: because of the numeric bounds on `u8` prior to casting, this expression is always false\n   --> $DIR/invalid_upcast_comparisons.rs:34:5\n    |\n-34 |     300 < (u8 as u32);\n+LL |     300 < (u8 as u32);\n    |     ^^^^^^^^^^^^^^^^^\n \n error: because of the numeric bounds on `u8` prior to casting, this expression is always false\n   --> $DIR/invalid_upcast_comparisons.rs:35:5\n    |\n-35 |     300 < (u8 as i32);\n+LL |     300 < (u8 as i32);\n    |     ^^^^^^^^^^^^^^^^^\n \n error: because of the numeric bounds on `u8` prior to casting, this expression is always false\n   --> $DIR/invalid_upcast_comparisons.rs:36:5\n    |\n-36 |     300 == (u8 as u32);\n+LL |     300 == (u8 as u32);\n    |     ^^^^^^^^^^^^^^^^^^\n \n error: because of the numeric bounds on `u8` prior to casting, this expression is always false\n   --> $DIR/invalid_upcast_comparisons.rs:37:5\n    |\n-37 |     300 == (u8 as i32);\n+LL |     300 == (u8 as i32);\n    |     ^^^^^^^^^^^^^^^^^^\n \n error: because of the numeric bounds on `u8` prior to casting, this expression is always true\n   --> $DIR/invalid_upcast_comparisons.rs:39:5\n    |\n-39 |     (u8 as u32) <= 300;\n+LL |     (u8 as u32) <= 300;\n    |     ^^^^^^^^^^^^^^^^^^\n \n error: because of the numeric bounds on `u8` prior to casting, this expression is always true\n   --> $DIR/invalid_upcast_comparisons.rs:40:5\n    |\n-40 |     (u8 as i32) <= 300;\n+LL |     (u8 as i32) <= 300;\n    |     ^^^^^^^^^^^^^^^^^^\n \n error: because of the numeric bounds on `u8` prior to casting, this expression is always true\n   --> $DIR/invalid_upcast_comparisons.rs:41:5\n    |\n-41 |     (u8 as u32) != 300;\n+LL |     (u8 as u32) != 300;\n    |     ^^^^^^^^^^^^^^^^^^\n \n error: because of the numeric bounds on `u8` prior to casting, this expression is always true\n   --> $DIR/invalid_upcast_comparisons.rs:42:5\n    |\n-42 |     (u8 as i32) != 300;\n+LL |     (u8 as i32) != 300;\n    |     ^^^^^^^^^^^^^^^^^^\n \n error: because of the numeric bounds on `u8` prior to casting, this expression is always true\n   --> $DIR/invalid_upcast_comparisons.rs:43:5\n    |\n-43 |     300 >= (u8 as u32);\n+LL |     300 >= (u8 as u32);\n    |     ^^^^^^^^^^^^^^^^^^\n \n error: because of the numeric bounds on `u8` prior to casting, this expression is always true\n   --> $DIR/invalid_upcast_comparisons.rs:44:5\n    |\n-44 |     300 >= (u8 as i32);\n+LL |     300 >= (u8 as i32);\n    |     ^^^^^^^^^^^^^^^^^^\n \n error: because of the numeric bounds on `u8` prior to casting, this expression is always true\n   --> $DIR/invalid_upcast_comparisons.rs:45:5\n    |\n-45 |     300 != (u8 as u32);\n+LL |     300 != (u8 as u32);\n    |     ^^^^^^^^^^^^^^^^^^\n \n error: because of the numeric bounds on `u8` prior to casting, this expression is always true\n   --> $DIR/invalid_upcast_comparisons.rs:46:5\n    |\n-46 |     300 != (u8 as i32);\n+LL |     300 != (u8 as i32);\n    |     ^^^^^^^^^^^^^^^^^^\n \n error: because of the numeric bounds on `u8` prior to casting, this expression is always false\n   --> $DIR/invalid_upcast_comparisons.rs:49:5\n    |\n-49 |     (u8 as i32) < 0;\n+LL |     (u8 as i32) < 0;\n    |     ^^^^^^^^^^^^^^^\n \n error: because of the numeric bounds on `u8` prior to casting, this expression is always true\n   --> $DIR/invalid_upcast_comparisons.rs:50:5\n    |\n-50 |     -5 != (u8 as i32);\n+LL |     -5 != (u8 as i32);\n    |     ^^^^^^^^^^^^^^^^^\n \n error: because of the numeric bounds on `u8` prior to casting, this expression is always true\n   --> $DIR/invalid_upcast_comparisons.rs:52:5\n    |\n-52 |     (u8 as i32) >= 0;\n+LL |     (u8 as i32) >= 0;\n    |     ^^^^^^^^^^^^^^^^\n \n error: because of the numeric bounds on `u8` prior to casting, this expression is always false\n   --> $DIR/invalid_upcast_comparisons.rs:53:5\n    |\n-53 |     -5 == (u8 as i32);\n+LL |     -5 == (u8 as i32);\n    |     ^^^^^^^^^^^^^^^^^\n \n error: because of the numeric bounds on `u8` prior to casting, this expression is always false\n   --> $DIR/invalid_upcast_comparisons.rs:56:5\n    |\n-56 |     1337 == (u8 as i32);\n+LL |     1337 == (u8 as i32);\n    |     ^^^^^^^^^^^^^^^^^^^\n \n error: because of the numeric bounds on `u8` prior to casting, this expression is always false\n   --> $DIR/invalid_upcast_comparisons.rs:57:5\n    |\n-57 |     1337 == (u8 as u32);\n+LL |     1337 == (u8 as u32);\n    |     ^^^^^^^^^^^^^^^^^^^\n \n error: because of the numeric bounds on `u8` prior to casting, this expression is always true\n   --> $DIR/invalid_upcast_comparisons.rs:59:5\n    |\n-59 |     1337 != (u8 as i32);\n+LL |     1337 != (u8 as i32);\n    |     ^^^^^^^^^^^^^^^^^^^\n \n error: because of the numeric bounds on `u8` prior to casting, this expression is always true\n   --> $DIR/invalid_upcast_comparisons.rs:60:5\n    |\n-60 |     1337 != (u8 as u32);\n+LL |     1337 != (u8 as u32);\n    |     ^^^^^^^^^^^^^^^^^^^\n \n error: because of the numeric bounds on `u8` prior to casting, this expression is always true\n   --> $DIR/invalid_upcast_comparisons.rs:74:5\n    |\n-74 |     (u8 as i32) > -1;\n+LL |     (u8 as i32) > -1;\n    |     ^^^^^^^^^^^^^^^^\n \n error: because of the numeric bounds on `u8` prior to casting, this expression is always false\n   --> $DIR/invalid_upcast_comparisons.rs:75:5\n    |\n-75 |     (u8 as i32) < -1;\n+LL |     (u8 as i32) < -1;\n    |     ^^^^^^^^^^^^^^^^\n \n error: because of the numeric bounds on `u8` prior to casting, this expression is always false\n   --> $DIR/invalid_upcast_comparisons.rs:91:5\n    |\n-91 |     -5 >= (u8 as i32);\n+LL |     -5 >= (u8 as i32);\n    |     ^^^^^^^^^^^^^^^^^\n \n error: aborting due to 27 previous errors"}, {"sha": "c7a995c61d673a152d5a7c6cddea2e52990cd27b", "filename": "tests/ui/issue-3145.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fissue-3145.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fissue-3145.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fissue-3145.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,7 +1,7 @@\n error: expected token: `,`\n   --> $DIR/issue-3145.rs:11:19\n    |\n-11 |     println!(\"{}\" a); //~ERROR expected token: `,`\n+LL |     println!(\"{}\" a); //~ERROR expected token: `,`\n    |                   ^\n \n error: aborting due to previous error"}, {"sha": "3759990031248f7f6d2577702fc2851de4a53e2a", "filename": "tests/ui/issue_2356.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fissue_2356.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fissue_2356.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fissue_2356.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,13 +1,13 @@\n error: this loop could be written as a `for` loop\n   --> $DIR/issue_2356.rs:24:29\n    |\n-24 |         while let Some(e) = it.next() {\n+LL |         while let Some(e) = it.next() {\n    |                             ^^^^^^^^^ help: try: `for e in it { .. }`\n    |\n note: lint level defined here\n   --> $DIR/issue_2356.rs:10:9\n    |\n-10 | #![deny(clippy::while_let_on_iterator)]\n+LL | #![deny(clippy::while_let_on_iterator)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to previous error"}, {"sha": "3024431244cc50aeb6f2f102fc83fb95b2c7b678", "filename": "tests/ui/item_after_statement.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fitem_after_statement.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fitem_after_statement.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fitem_after_statement.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,19 +1,19 @@\n error: adding items after statements is confusing, since items exist from the start of the scope\n   --> $DIR/item_after_statement.rs:21:5\n    |\n-21 | /     fn foo() {\n-22 | |         println!(\"foo\");\n-23 | |     }\n+LL | /     fn foo() {\n+LL | |         println!(\"foo\");\n+LL | |     }\n    | |_____^\n    |\n    = note: `-D clippy::items-after-statements` implied by `-D warnings`\n \n error: adding items after statements is confusing, since items exist from the start of the scope\n   --> $DIR/item_after_statement.rs:28:5\n    |\n-28 | /     fn foo() {\n-29 | |         println!(\"foo\");\n-30 | |     }\n+LL | /     fn foo() {\n+LL | |         println!(\"foo\");\n+LL | |     }\n    | |_____^\n \n error: aborting due to 2 previous errors"}, {"sha": "3f88aefda336b1898392525fbcb136805278d1d0", "filename": "tests/ui/large_digit_groups.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Flarge_digit_groups.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Flarge_digit_groups.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flarge_digit_groups.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,39 +1,39 @@\n error: digit groups should be smaller\n   --> $DIR/large_digit_groups.rs:24:9\n    |\n-24 |         0b1_10110_i64,\n+LL |         0b1_10110_i64,\n    |         ^^^^^^^^^^^^^ help: consider: `0b11_0110_i64`\n    |\n    = note: `-D clippy::large-digit-groups` implied by `-D warnings`\n \n error: digit groups should be smaller\n   --> $DIR/large_digit_groups.rs:25:9\n    |\n-25 |         0x1_23456_78901_usize,\n+LL |         0x1_23456_78901_usize,\n    |         ^^^^^^^^^^^^^^^^^^^^^ help: consider: `0x0123_4567_8901_usize`\n \n error: digit groups should be smaller\n   --> $DIR/large_digit_groups.rs:26:9\n    |\n-26 |         1_23456_f32,\n+LL |         1_23456_f32,\n    |         ^^^^^^^^^^^ help: consider: `123_456_f32`\n \n error: digit groups should be smaller\n   --> $DIR/large_digit_groups.rs:27:9\n    |\n-27 |         1_23456.12_f32,\n+LL |         1_23456.12_f32,\n    |         ^^^^^^^^^^^^^^ help: consider: `123_456.12_f32`\n \n error: digit groups should be smaller\n   --> $DIR/large_digit_groups.rs:28:9\n    |\n-28 |         1_23456.12345_f32,\n+LL |         1_23456.12345_f32,\n    |         ^^^^^^^^^^^^^^^^^ help: consider: `123_456.123_45_f32`\n \n error: digit groups should be smaller\n   --> $DIR/large_digit_groups.rs:29:9\n    |\n-29 |         1_23456.12345_6_f32,\n+LL |         1_23456.12345_6_f32,\n    |         ^^^^^^^^^^^^^^^^^^^ help: consider: `123_456.123_456_f32`\n \n error: aborting due to 6 previous errors"}, {"sha": "839d16bd9a2b4b742d4dd1785f05b6589e07c817", "filename": "tests/ui/large_enum_variant.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Flarge_enum_variant.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Flarge_enum_variant.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flarge_enum_variant.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,69 +1,69 @@\n error: large size difference between variants\n   --> $DIR/large_enum_variant.rs:16:5\n    |\n-16 |     B([i32; 8000]),\n+LL |     B([i32; 8000]),\n    |     ^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::large-enum-variant` implied by `-D warnings`\n help: consider boxing the large fields to reduce the total size of the enum\n    |\n-16 |     B(Box<[i32; 8000]>),\n+LL |     B(Box<[i32; 8000]>),\n    |       ^^^^^^^^^^^^^^^^\n \n error: large size difference between variants\n   --> $DIR/large_enum_variant.rs:27:5\n    |\n-27 |     C(T, [i32; 8000]),\n+LL |     C(T, [i32; 8000]),\n    |     ^^^^^^^^^^^^^^^^^\n    |\n help: consider boxing the large fields to reduce the total size of the enum\n   --> $DIR/large_enum_variant.rs:27:5\n    |\n-27 |     C(T, [i32; 8000]),\n+LL |     C(T, [i32; 8000]),\n    |     ^^^^^^^^^^^^^^^^^\n \n error: large size difference between variants\n   --> $DIR/large_enum_variant.rs:40:5\n    |\n-40 |     ContainingLargeEnum(LargeEnum),\n+LL |     ContainingLargeEnum(LargeEnum),\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n help: consider boxing the large fields to reduce the total size of the enum\n    |\n-40 |     ContainingLargeEnum(Box<LargeEnum>),\n+LL |     ContainingLargeEnum(Box<LargeEnum>),\n    |                         ^^^^^^^^^^^^^^\n \n error: large size difference between variants\n   --> $DIR/large_enum_variant.rs:43:5\n    |\n-43 |     ContainingMoreThanOneField(i32, [i32; 8000], [i32; 9500]),\n+LL |     ContainingMoreThanOneField(i32, [i32; 8000], [i32; 9500]),\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n help: consider boxing the large fields to reduce the total size of the enum\n   --> $DIR/large_enum_variant.rs:43:5\n    |\n-43 |     ContainingMoreThanOneField(i32, [i32; 8000], [i32; 9500]),\n+LL |     ContainingMoreThanOneField(i32, [i32; 8000], [i32; 9500]),\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: large size difference between variants\n   --> $DIR/large_enum_variant.rs:50:5\n    |\n-50 |     StructLikeLarge { x: [i32; 8000], y: i32 },\n+LL |     StructLikeLarge { x: [i32; 8000], y: i32 },\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n help: consider boxing the large fields to reduce the total size of the enum\n   --> $DIR/large_enum_variant.rs:50:5\n    |\n-50 |     StructLikeLarge { x: [i32; 8000], y: i32 },\n+LL |     StructLikeLarge { x: [i32; 8000], y: i32 },\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: large size difference between variants\n   --> $DIR/large_enum_variant.rs:55:5\n    |\n-55 |     StructLikeLarge2 { x: [i32; 8000] },\n+LL |     StructLikeLarge2 { x: [i32; 8000] },\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n help: consider boxing the large fields to reduce the total size of the enum\n    |\n-55 |     StructLikeLarge2 { x: Box<[i32; 8000]> },\n+LL |     StructLikeLarge2 { x: Box<[i32; 8000]> },\n    |                           ^^^^^^^^^^^^^^^^\n \n error: aborting due to 6 previous errors"}, {"sha": "f5f19e128b79b911c297932aaf2af67778748e98", "filename": "tests/ui/len_zero.stderr", "status": "modified", "additions": 92, "deletions": 92, "changes": 184, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Flen_zero.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Flen_zero.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flen_zero.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,140 +1,140 @@\n error: item `PubOne` has a public `len` method but no corresponding `is_empty` method\n   --> $DIR/len_zero.rs:15:1\n    |\n-15 | / impl PubOne {\n-16 | |     pub fn len(self: &Self) -> isize {\n-17 | |         1\n-18 | |     }\n-19 | | }\n+LL | / impl PubOne {\n+LL | |     pub fn len(self: &Self) -> isize {\n+LL | |         1\n+LL | |     }\n+LL | | }\n    | |_^\n    |\n    = note: `-D clippy::len-without-is-empty` implied by `-D warnings`\n \n error: trait `PubTraitsToo` has a `len` method but no (possibly inherited) `is_empty` method\n   --> $DIR/len_zero.rs:64:1\n    |\n-64 | / pub trait PubTraitsToo {\n-65 | |     fn len(self: &Self) -> isize;\n-66 | | }\n+LL | / pub trait PubTraitsToo {\n+LL | |     fn len(self: &Self) -> isize;\n+LL | | }\n    | |_^\n \n error: item `HasIsEmpty` has a public `len` method but a private `is_empty` method\n-   --> $DIR/len_zero.rs:98:1\n-    |\n-98  | / impl HasIsEmpty {\n-99  | |     pub fn len(self: &Self) -> isize {\n-100 | |         1\n-101 | |     }\n-...   |\n-105 | |     }\n-106 | | }\n-    | |_^\n+  --> $DIR/len_zero.rs:98:1\n+   |\n+LL | / impl HasIsEmpty {\n+LL | |     pub fn len(self: &Self) -> isize {\n+LL | |         1\n+LL | |     }\n+...  |\n+LL | |     }\n+LL | | }\n+   | |_^\n \n error: item `HasWrongIsEmpty` has a public `len` method but no corresponding `is_empty` method\n-   --> $DIR/len_zero.rs:127:1\n-    |\n-127 | / impl HasWrongIsEmpty {\n-128 | |     pub fn len(self: &Self) -> isize {\n-129 | |         1\n-130 | |     }\n-...   |\n-134 | |     }\n-135 | | }\n-    | |_^\n+  --> $DIR/len_zero.rs:127:1\n+   |\n+LL | / impl HasWrongIsEmpty {\n+LL | |     pub fn len(self: &Self) -> isize {\n+LL | |         1\n+LL | |     }\n+...  |\n+LL | |     }\n+LL | | }\n+   | |_^\n \n error: length comparison to zero\n-   --> $DIR/len_zero.rs:148:8\n-    |\n-148 |     if x.len() == 0 {\n-    |        ^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `x.is_empty()`\n-    |\n-    = note: `-D clippy::len-zero` implied by `-D warnings`\n+  --> $DIR/len_zero.rs:148:8\n+   |\n+LL |     if x.len() == 0 {\n+   |        ^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `x.is_empty()`\n+   |\n+   = note: `-D clippy::len-zero` implied by `-D warnings`\n \n error: length comparison to zero\n-   --> $DIR/len_zero.rs:152:8\n-    |\n-152 |     if \"\".len() == 0 {}\n-    |        ^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `\"\".is_empty()`\n+  --> $DIR/len_zero.rs:152:8\n+   |\n+LL |     if \"\".len() == 0 {}\n+   |        ^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `\"\".is_empty()`\n \n error: length comparison to zero\n-   --> $DIR/len_zero.rs:167:8\n-    |\n-167 |     if has_is_empty.len() == 0 {\n-    |        ^^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `has_is_empty.is_empty()`\n+  --> $DIR/len_zero.rs:167:8\n+   |\n+LL |     if has_is_empty.len() == 0 {\n+   |        ^^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `has_is_empty.is_empty()`\n \n error: length comparison to zero\n-   --> $DIR/len_zero.rs:170:8\n-    |\n-170 |     if has_is_empty.len() != 0 {\n-    |        ^^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `!has_is_empty.is_empty()`\n+  --> $DIR/len_zero.rs:170:8\n+   |\n+LL |     if has_is_empty.len() != 0 {\n+   |        ^^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `!has_is_empty.is_empty()`\n \n error: length comparison to zero\n-   --> $DIR/len_zero.rs:173:8\n-    |\n-173 |     if has_is_empty.len() > 0 {\n-    |        ^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `!has_is_empty.is_empty()`\n+  --> $DIR/len_zero.rs:173:8\n+   |\n+LL |     if has_is_empty.len() > 0 {\n+   |        ^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `!has_is_empty.is_empty()`\n \n error: length comparison to one\n-   --> $DIR/len_zero.rs:176:8\n-    |\n-176 |     if has_is_empty.len() < 1 {\n-    |        ^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `has_is_empty.is_empty()`\n+  --> $DIR/len_zero.rs:176:8\n+   |\n+LL |     if has_is_empty.len() < 1 {\n+   |        ^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `has_is_empty.is_empty()`\n \n error: length comparison to one\n-   --> $DIR/len_zero.rs:179:8\n-    |\n-179 |     if has_is_empty.len() >= 1 {\n-    |        ^^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `!has_is_empty.is_empty()`\n+  --> $DIR/len_zero.rs:179:8\n+   |\n+LL |     if has_is_empty.len() >= 1 {\n+   |        ^^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `!has_is_empty.is_empty()`\n \n error: length comparison to zero\n-   --> $DIR/len_zero.rs:190:8\n-    |\n-190 |     if 0 == has_is_empty.len() {\n-    |        ^^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `has_is_empty.is_empty()`\n+  --> $DIR/len_zero.rs:190:8\n+   |\n+LL |     if 0 == has_is_empty.len() {\n+   |        ^^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `has_is_empty.is_empty()`\n \n error: length comparison to zero\n-   --> $DIR/len_zero.rs:193:8\n-    |\n-193 |     if 0 != has_is_empty.len() {\n-    |        ^^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `!has_is_empty.is_empty()`\n+  --> $DIR/len_zero.rs:193:8\n+   |\n+LL |     if 0 != has_is_empty.len() {\n+   |        ^^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `!has_is_empty.is_empty()`\n \n error: length comparison to zero\n-   --> $DIR/len_zero.rs:196:8\n-    |\n-196 |     if 0 < has_is_empty.len() {\n-    |        ^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `!has_is_empty.is_empty()`\n+  --> $DIR/len_zero.rs:196:8\n+   |\n+LL |     if 0 < has_is_empty.len() {\n+   |        ^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `!has_is_empty.is_empty()`\n \n error: length comparison to one\n-   --> $DIR/len_zero.rs:199:8\n-    |\n-199 |     if 1 <= has_is_empty.len() {\n-    |        ^^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `!has_is_empty.is_empty()`\n+  --> $DIR/len_zero.rs:199:8\n+   |\n+LL |     if 1 <= has_is_empty.len() {\n+   |        ^^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `!has_is_empty.is_empty()`\n \n error: length comparison to one\n-   --> $DIR/len_zero.rs:202:8\n-    |\n-202 |     if 1 > has_is_empty.len() {\n-    |        ^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `has_is_empty.is_empty()`\n+  --> $DIR/len_zero.rs:202:8\n+   |\n+LL |     if 1 > has_is_empty.len() {\n+   |        ^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `has_is_empty.is_empty()`\n \n error: length comparison to zero\n-   --> $DIR/len_zero.rs:216:8\n-    |\n-216 |     if with_is_empty.len() == 0 {\n-    |        ^^^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `with_is_empty.is_empty()`\n+  --> $DIR/len_zero.rs:216:8\n+   |\n+LL |     if with_is_empty.len() == 0 {\n+   |        ^^^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `with_is_empty.is_empty()`\n \n error: length comparison to zero\n-   --> $DIR/len_zero.rs:229:8\n-    |\n-229 |     if b.len() != 0 {}\n-    |        ^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `!b.is_empty()`\n+  --> $DIR/len_zero.rs:229:8\n+   |\n+LL |     if b.len() != 0 {}\n+   |        ^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `!b.is_empty()`\n \n error: trait `DependsOnFoo` has a `len` method but no (possibly inherited) `is_empty` method\n-   --> $DIR/len_zero.rs:235:1\n-    |\n-235 | / pub trait DependsOnFoo: Foo {\n-236 | |     fn len(&mut self) -> usize;\n-237 | | }\n-    | |_^\n+  --> $DIR/len_zero.rs:235:1\n+   |\n+LL | / pub trait DependsOnFoo: Foo {\n+LL | |     fn len(&mut self) -> usize;\n+LL | | }\n+   | |_^\n \n error: aborting due to 19 previous errors\n "}, {"sha": "7883a713c05d2bef799ffa6eb1ed82699429e25c", "filename": "tests/ui/let_if_seq.stderr", "status": "modified", "additions": 26, "deletions": 26, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Flet_if_seq.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Flet_if_seq.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flet_if_seq.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,10 +1,10 @@\n error: `if _ { .. } else { .. }` is an expression\n   --> $DIR/let_if_seq.rs:72:5\n    |\n-72 | /     let mut foo = 0;\n-73 | |     if f() {\n-74 | |         foo = 42;\n-75 | |     }\n+LL | /     let mut foo = 0;\n+LL | |     if f() {\n+LL | |         foo = 42;\n+LL | |     }\n    | |_____^ help: it is more idiomatic to write: `let <mut> foo = if f() { 42 } else { 0 };`\n    |\n    = note: `-D clippy::useless-let-if-seq` implied by `-D warnings`\n@@ -13,38 +13,38 @@ error: `if _ { .. } else { .. }` is an expression\n error: `if _ { .. } else { .. }` is an expression\n   --> $DIR/let_if_seq.rs:77:5\n    |\n-77 | /     let mut bar = 0;\n-78 | |     if f() {\n-79 | |         f();\n-80 | |         bar = 42;\n-81 | |     } else {\n-82 | |         f();\n-83 | |     }\n+LL | /     let mut bar = 0;\n+LL | |     if f() {\n+LL | |         f();\n+LL | |         bar = 42;\n+LL | |     } else {\n+LL | |         f();\n+LL | |     }\n    | |_____^ help: it is more idiomatic to write: `let <mut> bar = if f() { ..; 42 } else { ..; 0 };`\n    |\n    = note: you might not need `mut` at all\n \n error: `if _ { .. } else { .. }` is an expression\n   --> $DIR/let_if_seq.rs:85:5\n    |\n-85 | /     let quz;\n-86 | |     if f() {\n-87 | |         quz = 42;\n-88 | |     } else {\n-89 | |         quz = 0;\n-90 | |     }\n+LL | /     let quz;\n+LL | |     if f() {\n+LL | |         quz = 42;\n+LL | |     } else {\n+LL | |         quz = 0;\n+LL | |     }\n    | |_____^ help: it is more idiomatic to write: `let quz = if f() { 42 } else { 0 };`\n \n error: `if _ { .. } else { .. }` is an expression\n-   --> $DIR/let_if_seq.rs:114:5\n-    |\n-114 | /     let mut baz = 0;\n-115 | |     if f() {\n-116 | |         baz = 42;\n-117 | |     }\n-    | |_____^ help: it is more idiomatic to write: `let <mut> baz = if f() { 42 } else { 0 };`\n-    |\n-    = note: you might not need `mut` at all\n+  --> $DIR/let_if_seq.rs:114:5\n+   |\n+LL | /     let mut baz = 0;\n+LL | |     if f() {\n+LL | |         baz = 42;\n+LL | |     }\n+   | |_____^ help: it is more idiomatic to write: `let <mut> baz = if f() { 42 } else { 0 };`\n+   |\n+   = note: you might not need `mut` at all\n \n error: aborting due to 4 previous errors\n "}, {"sha": "c53d5cfb886709b4aa8e6cac8f3cfe2d0cee5f80", "filename": "tests/ui/let_return.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Flet_return.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Flet_return.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flet_return.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,26 +1,26 @@\n error: returning the result of a let binding from a block. Consider returning the expression directly.\n   --> $DIR/let_return.rs:16:5\n    |\n-16 |     x\n+LL |     x\n    |     ^\n    |\n    = note: `-D clippy::let-and-return` implied by `-D warnings`\n note: this expression can be directly returned\n   --> $DIR/let_return.rs:15:13\n    |\n-15 |     let x = 5;\n+LL |     let x = 5;\n    |             ^\n \n error: returning the result of a let binding from a block. Consider returning the expression directly.\n   --> $DIR/let_return.rs:22:9\n    |\n-22 |         x\n+LL |         x\n    |         ^\n    |\n note: this expression can be directly returned\n   --> $DIR/let_return.rs:21:17\n    |\n-21 |         let x = 5;\n+LL |         let x = 5;\n    |                 ^\n \n error: aborting due to 2 previous errors"}, {"sha": "8929844180a954ea2d91a60c82863816521052b0", "filename": "tests/ui/let_unit.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Flet_unit.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Flet_unit.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flet_unit.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,15 +1,15 @@\n error: this let-binding has unit value. Consider omitting `let _x =`\n   --> $DIR/let_unit.rs:20:5\n    |\n-20 |     let _x = println!(\"x\");\n+LL |     let _x = println!(\"x\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::let-unit-value` implied by `-D warnings`\n \n error: this let-binding has unit value. Consider omitting `let _a =`\n   --> $DIR/let_unit.rs:24:9\n    |\n-24 |         let _a = ();\n+LL |         let _a = ();\n    |         ^^^^^^^^^^^^\n \n error: aborting due to 2 previous errors"}, {"sha": "abd11907b6d1aece6549157c175b5920717f3990", "filename": "tests/ui/lifetimes.stderr", "status": "modified", "additions": 67, "deletions": 67, "changes": 134, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Flifetimes.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Flifetimes.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flifetimes.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,122 +1,122 @@\n error: explicit lifetimes given in parameter types where they could be elided (or replaced with `'_` if needed by type declaration)\n   --> $DIR/lifetimes.rs:13:1\n    |\n-13 | fn distinct_lifetimes<'a, 'b>(_x: &'a u8, _y: &'b u8, _z: u8) {}\n+LL | fn distinct_lifetimes<'a, 'b>(_x: &'a u8, _y: &'b u8, _z: u8) {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::needless-lifetimes` implied by `-D warnings`\n \n error: explicit lifetimes given in parameter types where they could be elided (or replaced with `'_` if needed by type declaration)\n   --> $DIR/lifetimes.rs:15:1\n    |\n-15 | fn distinct_and_static<'a, 'b>(_x: &'a u8, _y: &'b u8, _z: &'static u8) {}\n+LL | fn distinct_and_static<'a, 'b>(_x: &'a u8, _y: &'b u8, _z: &'static u8) {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: explicit lifetimes given in parameter types where they could be elided (or replaced with `'_` if needed by type declaration)\n   --> $DIR/lifetimes.rs:23:1\n    |\n-23 | / fn in_and_out<'a>(x: &'a u8, _y: u8) -> &'a u8 {\n-24 | |     x\n-25 | | }\n+LL | / fn in_and_out<'a>(x: &'a u8, _y: u8) -> &'a u8 {\n+LL | |     x\n+LL | | }\n    | |_^\n \n error: explicit lifetimes given in parameter types where they could be elided (or replaced with `'_` if needed by type declaration)\n   --> $DIR/lifetimes.rs:47:1\n    |\n-47 | / fn deep_reference_3<'a>(x: &'a u8, _y: u8) -> Result<&'a u8, ()> {\n-48 | |     Ok(x)\n-49 | | }\n+LL | / fn deep_reference_3<'a>(x: &'a u8, _y: u8) -> Result<&'a u8, ()> {\n+LL | |     Ok(x)\n+LL | | }\n    | |_^\n \n error: explicit lifetimes given in parameter types where they could be elided (or replaced with `'_` if needed by type declaration)\n   --> $DIR/lifetimes.rs:52:1\n    |\n-52 | / fn where_clause_without_lt<'a, T>(x: &'a u8, _y: u8) -> Result<&'a u8, ()>\n-53 | | where\n-54 | |     T: Copy,\n-55 | | {\n-56 | |     Ok(x)\n-57 | | }\n+LL | / fn where_clause_without_lt<'a, T>(x: &'a u8, _y: u8) -> Result<&'a u8, ()>\n+LL | | where\n+LL | |     T: Copy,\n+LL | | {\n+LL | |     Ok(x)\n+LL | | }\n    | |_^\n \n error: explicit lifetimes given in parameter types where they could be elided (or replaced with `'_` if needed by type declaration)\n   --> $DIR/lifetimes.rs:63:1\n    |\n-63 | fn lifetime_param_2<'a, 'b>(_x: Ref<'a>, _y: &'b u8) {}\n+LL | fn lifetime_param_2<'a, 'b>(_x: Ref<'a>, _y: &'b u8) {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: explicit lifetimes given in parameter types where they could be elided (or replaced with `'_` if needed by type declaration)\n   --> $DIR/lifetimes.rs:84:1\n    |\n-84 | / fn fn_bound_2<'a, F, I>(_m: Lt<'a, I>, _f: F) -> Lt<'a, I>\n-85 | | where\n-86 | |     for<'x> F: Fn(Lt<'x, I>) -> Lt<'x, I>,\n-87 | | {\n-88 | |     unreachable!()\n-89 | | }\n+LL | / fn fn_bound_2<'a, F, I>(_m: Lt<'a, I>, _f: F) -> Lt<'a, I>\n+LL | | where\n+LL | |     for<'x> F: Fn(Lt<'x, I>) -> Lt<'x, I>,\n+LL | | {\n+LL | |     unreachable!()\n+LL | | }\n    | |_^\n \n error: explicit lifetimes given in parameter types where they could be elided (or replaced with `'_` if needed by type declaration)\n-   --> $DIR/lifetimes.rs:117:5\n-    |\n-117 | /     fn self_and_out<'s>(&'s self) -> &'s u8 {\n-118 | |         &self.x\n-119 | |     }\n-    | |_____^\n+  --> $DIR/lifetimes.rs:117:5\n+   |\n+LL | /     fn self_and_out<'s>(&'s self) -> &'s u8 {\n+LL | |         &self.x\n+LL | |     }\n+   | |_____^\n \n error: explicit lifetimes given in parameter types where they could be elided (or replaced with `'_` if needed by type declaration)\n-   --> $DIR/lifetimes.rs:125:5\n-    |\n-125 |     fn distinct_self_and_in<'s, 't>(&'s self, _x: &'t u8) {}\n-    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+  --> $DIR/lifetimes.rs:125:5\n+   |\n+LL |     fn distinct_self_and_in<'s, 't>(&'s self, _x: &'t u8) {}\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: explicit lifetimes given in parameter types where they could be elided (or replaced with `'_` if needed by type declaration)\n-   --> $DIR/lifetimes.rs:141:1\n-    |\n-141 | / fn struct_with_lt<'a>(_foo: Foo<'a>) -> &'a str {\n-142 | |     unimplemented!()\n-143 | | }\n-    | |_^\n+  --> $DIR/lifetimes.rs:141:1\n+   |\n+LL | / fn struct_with_lt<'a>(_foo: Foo<'a>) -> &'a str {\n+LL | |     unimplemented!()\n+LL | | }\n+   | |_^\n \n error: explicit lifetimes given in parameter types where they could be elided (or replaced with `'_` if needed by type declaration)\n-   --> $DIR/lifetimes.rs:171:1\n-    |\n-171 | / fn trait_obj_elided2<'a>(_arg: &'a Drop) -> &'a str {\n-172 | |     unimplemented!()\n-173 | | }\n-    | |_^\n+  --> $DIR/lifetimes.rs:171:1\n+   |\n+LL | / fn trait_obj_elided2<'a>(_arg: &'a Drop) -> &'a str {\n+LL | |     unimplemented!()\n+LL | | }\n+   | |_^\n \n error: explicit lifetimes given in parameter types where they could be elided (or replaced with `'_` if needed by type declaration)\n-   --> $DIR/lifetimes.rs:177:1\n-    |\n-177 | / fn alias_with_lt<'a>(_foo: FooAlias<'a>) -> &'a str {\n-178 | |     unimplemented!()\n-179 | | }\n-    | |_^\n+  --> $DIR/lifetimes.rs:177:1\n+   |\n+LL | / fn alias_with_lt<'a>(_foo: FooAlias<'a>) -> &'a str {\n+LL | |     unimplemented!()\n+LL | | }\n+   | |_^\n \n error: explicit lifetimes given in parameter types where they could be elided (or replaced with `'_` if needed by type declaration)\n-   --> $DIR/lifetimes.rs:196:1\n-    |\n-196 | / fn named_input_elided_output<'a>(_arg: &'a str) -> &str {\n-197 | |     unimplemented!()\n-198 | | }\n-    | |_^\n+  --> $DIR/lifetimes.rs:196:1\n+   |\n+LL | / fn named_input_elided_output<'a>(_arg: &'a str) -> &str {\n+LL | |     unimplemented!()\n+LL | | }\n+   | |_^\n \n error: explicit lifetimes given in parameter types where they could be elided (or replaced with `'_` if needed by type declaration)\n-   --> $DIR/lifetimes.rs:204:1\n-    |\n-204 | / fn trait_bound_ok<'a, T: WithLifetime<'static>>(_: &'a u8, _: T) {\n-205 | |     unimplemented!()\n-206 | | }\n-    | |_^\n+  --> $DIR/lifetimes.rs:204:1\n+   |\n+LL | / fn trait_bound_ok<'a, T: WithLifetime<'static>>(_: &'a u8, _: T) {\n+LL | |     unimplemented!()\n+LL | | }\n+   | |_^\n \n error: explicit lifetimes given in parameter types where they could be elided (or replaced with `'_` if needed by type declaration)\n-   --> $DIR/lifetimes.rs:241:1\n-    |\n-241 | / fn out_return_type_lts<'a>(e: &'a str) -> Cow<'a> {\n-242 | |     unimplemented!()\n-243 | | }\n-    | |_^\n+  --> $DIR/lifetimes.rs:241:1\n+   |\n+LL | / fn out_return_type_lts<'a>(e: &'a str) -> Cow<'a> {\n+LL | |     unimplemented!()\n+LL | | }\n+   | |_^\n \n error: aborting due to 15 previous errors\n "}, {"sha": "9d0b0d62789874b0a5175e89949c7675a3816508", "filename": "tests/ui/lint_without_lint_pass.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Flint_without_lint_pass.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Flint_without_lint_pass.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flint_without_lint_pass.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,17 +1,17 @@\n error: the lint `TEST_LINT` is not added to any `LintPass`\n   --> $DIR/lint_without_lint_pass.rs:11:1\n    |\n-11 | / declare_clippy_lint! {\n-12 | |     pub TEST_LINT,\n-13 | |     correctness,\n-14 | |     \"\"\n-15 | | }\n+LL | / declare_clippy_lint! {\n+LL | |     pub TEST_LINT,\n+LL | |     correctness,\n+LL | |     \"\"\n+LL | | }\n    | |_^\n    |\n note: lint level defined here\n   --> $DIR/lint_without_lint_pass.rs:1:9\n    |\n-1  | #![deny(clippy::internal)]\n+LL | #![deny(clippy::internal)]\n    |         ^^^^^^^^^^^^^^^^\n    = note: #[deny(clippy::lint_without_lint_pass)] implied by #[deny(clippy::internal)]\n    = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)"}, {"sha": "6ceb25fd61216ff7c632428d1cf6386405acd57b", "filename": "tests/ui/literals.stderr", "status": "modified", "additions": 35, "deletions": 35, "changes": 70, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fliterals.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fliterals.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fliterals.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,217 +1,217 @@\n error: inconsistent casing in hexadecimal literal\n   --> $DIR/literals.rs:22:17\n    |\n-22 |     let fail1 = 0xabCD;\n+LL |     let fail1 = 0xabCD;\n    |                 ^^^^^^\n    |\n    = note: `-D clippy::mixed-case-hex-literals` implied by `-D warnings`\n \n error: inconsistent casing in hexadecimal literal\n   --> $DIR/literals.rs:23:17\n    |\n-23 |     let fail2 = 0xabCD_u32;\n+LL |     let fail2 = 0xabCD_u32;\n    |                 ^^^^^^^^^^\n \n error: inconsistent casing in hexadecimal literal\n   --> $DIR/literals.rs:24:17\n    |\n-24 |     let fail2 = 0xabCD_isize;\n+LL |     let fail2 = 0xabCD_isize;\n    |                 ^^^^^^^^^^^^\n \n error: integer type suffix should be separated by an underscore\n   --> $DIR/literals.rs:25:27\n    |\n-25 |     let fail_multi_zero = 000_123usize;\n+LL |     let fail_multi_zero = 000_123usize;\n    |                           ^^^^^^^^^^^^\n    |\n    = note: `-D clippy::unseparated-literal-suffix` implied by `-D warnings`\n \n error: this is a decimal constant\n   --> $DIR/literals.rs:25:27\n    |\n-25 |     let fail_multi_zero = 000_123usize;\n+LL |     let fail_multi_zero = 000_123usize;\n    |                           ^^^^^^^^^^^^\n    |\n    = note: `-D clippy::zero-prefixed-literal` implied by `-D warnings`\n help: if you mean to use a decimal constant, remove the `0` to remove confusion\n    |\n-25 |     let fail_multi_zero = 123usize;\n+LL |     let fail_multi_zero = 123usize;\n    |                           ^^^^^^^^\n help: if you mean to use an octal constant, use `0o`\n    |\n-25 |     let fail_multi_zero = 0o123usize;\n+LL |     let fail_multi_zero = 0o123usize;\n    |                           ^^^^^^^^^^\n \n error: integer type suffix should be separated by an underscore\n   --> $DIR/literals.rs:30:17\n    |\n-30 |     let fail3 = 1234i32;\n+LL |     let fail3 = 1234i32;\n    |                 ^^^^^^^\n \n error: integer type suffix should be separated by an underscore\n   --> $DIR/literals.rs:31:17\n    |\n-31 |     let fail4 = 1234u32;\n+LL |     let fail4 = 1234u32;\n    |                 ^^^^^^^\n \n error: integer type suffix should be separated by an underscore\n   --> $DIR/literals.rs:32:17\n    |\n-32 |     let fail5 = 1234isize;\n+LL |     let fail5 = 1234isize;\n    |                 ^^^^^^^^^\n \n error: integer type suffix should be separated by an underscore\n   --> $DIR/literals.rs:33:17\n    |\n-33 |     let fail6 = 1234usize;\n+LL |     let fail6 = 1234usize;\n    |                 ^^^^^^^^^\n \n error: float type suffix should be separated by an underscore\n   --> $DIR/literals.rs:34:17\n    |\n-34 |     let fail7 = 1.5f32;\n+LL |     let fail7 = 1.5f32;\n    |                 ^^^^^^\n \n error: this is a decimal constant\n   --> $DIR/literals.rs:38:17\n    |\n-38 |     let fail8 = 0123;\n+LL |     let fail8 = 0123;\n    |                 ^^^^\n help: if you mean to use a decimal constant, remove the `0` to remove confusion\n    |\n-38 |     let fail8 = 123;\n+LL |     let fail8 = 123;\n    |                 ^^^\n help: if you mean to use an octal constant, use `0o`\n    |\n-38 |     let fail8 = 0o123;\n+LL |     let fail8 = 0o123;\n    |                 ^^^^^\n \n error: long literal lacking separators\n   --> $DIR/literals.rs:49:17\n    |\n-49 |     let fail9 = 0xabcdef;\n+LL |     let fail9 = 0xabcdef;\n    |                 ^^^^^^^^ help: consider: `0x00ab_cdef`\n    |\n    = note: `-D clippy::unreadable-literal` implied by `-D warnings`\n \n error: long literal lacking separators\n   --> $DIR/literals.rs:50:18\n    |\n-50 |     let fail10 = 0xBAFEBAFE;\n+LL |     let fail10 = 0xBAFEBAFE;\n    |                  ^^^^^^^^^^ help: consider: `0xBAFE_BAFE`\n \n error: long literal lacking separators\n   --> $DIR/literals.rs:51:18\n    |\n-51 |     let fail11 = 0xabcdeff;\n+LL |     let fail11 = 0xabcdeff;\n    |                  ^^^^^^^^^ help: consider: `0x0abc_deff`\n \n error: long literal lacking separators\n   --> $DIR/literals.rs:52:18\n    |\n-52 |     let fail12 = 0xabcabcabcabcabcabc;\n+LL |     let fail12 = 0xabcabcabcabcabcabc;\n    |                  ^^^^^^^^^^^^^^^^^^^^ help: consider: `0x00ab_cabc_abca_bcab_cabc`\n \n error: digit groups should be smaller\n   --> $DIR/literals.rs:53:18\n    |\n-53 |     let fail13 = 0x1_23456_78901_usize;\n+LL |     let fail13 = 0x1_23456_78901_usize;\n    |                  ^^^^^^^^^^^^^^^^^^^^^ help: consider: `0x0123_4567_8901_usize`\n    |\n    = note: `-D clippy::large-digit-groups` implied by `-D warnings`\n \n error: mistyped literal suffix\n   --> $DIR/literals.rs:55:18\n    |\n-55 |     let fail14 = 2_32;\n+LL |     let fail14 = 2_32;\n    |                  ^^^^ help: did you mean to write: `2_i32`\n    |\n    = note: #[deny(clippy::mistyped_literal_suffixes)] on by default\n \n error: mistyped literal suffix\n   --> $DIR/literals.rs:56:18\n    |\n-56 |     let fail15 = 4_64;\n+LL |     let fail15 = 4_64;\n    |                  ^^^^ help: did you mean to write: `4_i64`\n \n error: mistyped literal suffix\n   --> $DIR/literals.rs:57:18\n    |\n-57 |     let fail16 = 7_8;\n+LL |     let fail16 = 7_8;\n    |                  ^^^ help: did you mean to write: `7_i8`\n \n error: mistyped literal suffix\n   --> $DIR/literals.rs:58:18\n    |\n-58 |     let fail17 = 23_16;\n+LL |     let fail17 = 23_16;\n    |                  ^^^^^ help: did you mean to write: `23_i16`\n \n error: digits grouped inconsistently by underscores\n   --> $DIR/literals.rs:60:18\n    |\n-60 |     let fail19 = 12_3456_21;\n+LL |     let fail19 = 12_3456_21;\n    |                  ^^^^^^^^^^ help: consider: `12_345_621`\n    |\n    = note: `-D clippy::inconsistent-digit-grouping` implied by `-D warnings`\n \n error: mistyped literal suffix\n   --> $DIR/literals.rs:61:18\n    |\n-61 |     let fail20 = 2__8;\n+LL |     let fail20 = 2__8;\n    |                  ^^^^ help: did you mean to write: `2_i8`\n \n error: mistyped literal suffix\n   --> $DIR/literals.rs:62:18\n    |\n-62 |     let fail21 = 4___16;\n+LL |     let fail21 = 4___16;\n    |                  ^^^^^^ help: did you mean to write: `4_i16`\n \n error: digits grouped inconsistently by underscores\n   --> $DIR/literals.rs:63:18\n    |\n-63 |     let fail22 = 3__4___23;\n+LL |     let fail22 = 3__4___23;\n    |                  ^^^^^^^^^ help: consider: `3_423`\n \n error: digits grouped inconsistently by underscores\n   --> $DIR/literals.rs:64:18\n    |\n-64 |     let fail23 = 3__16___23;\n+LL |     let fail23 = 3__16___23;\n    |                  ^^^^^^^^^^ help: consider: `31_623`\n \n error: mistyped literal suffix\n   --> $DIR/literals.rs:66:18\n    |\n-66 |     let fail24 = 12.34_64;\n+LL |     let fail24 = 12.34_64;\n    |                  ^^^^^^^^ help: did you mean to write: `12.34_f64`\n \n error: mistyped literal suffix\n   --> $DIR/literals.rs:67:18\n    |\n-67 |     let fail25 = 1E2_32;\n+LL |     let fail25 = 1E2_32;\n    |                  ^^^^^^ help: did you mean to write: `1E2_f32`\n \n error: mistyped literal suffix\n   --> $DIR/literals.rs:68:18\n    |\n-68 |     let fail26 = 43E7_64;\n+LL |     let fail26 = 43E7_64;\n    |                  ^^^^^^^ help: did you mean to write: `43E7_f64`\n \n error: mistyped literal suffix\n   --> $DIR/literals.rs:69:18\n    |\n-69 |     let fail27 = 243E17_32;\n+LL |     let fail27 = 243E17_32;\n    |                  ^^^^^^^^^ help: did you mean to write: `243E17_f32`\n \n error: mistyped literal suffix\n   --> $DIR/literals.rs:70:18\n    |\n-70 |     let fail28 = 241251235E723_64;\n+LL |     let fail28 = 241251235E723_64;\n    |                  ^^^^^^^^^^^^^^^^ help: did you mean to write: `241_251_235E723_f64`\n \n error: mistyped literal suffix\n   --> $DIR/literals.rs:71:18\n    |\n-71 |     let fail29 = 42279.911_32;\n+LL |     let fail29 = 42279.911_32;\n    |                  ^^^^^^^^^^^^ help: did you mean to write: `42_279.911_f32`\n \n error: aborting due to 31 previous errors"}, {"sha": "6253ae2150c63d069258fc27fe26607d251c0f94", "filename": "tests/ui/map_clone.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fmap_clone.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fmap_clone.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmap_clone.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,21 +1,21 @@\n error: You are using an explicit closure for cloning elements\n   --> $DIR/map_clone.rs:14:22\n    |\n-14 |     let _: Vec<i8> = vec![5_i8; 6].iter().map(|x| *x).collect();\n+LL |     let _: Vec<i8> = vec![5_i8; 6].iter().map(|x| *x).collect();\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: Consider calling the dedicated `cloned` method: `vec![5_i8; 6].iter().cloned()`\n    |\n    = note: `-D clippy::map-clone` implied by `-D warnings`\n \n error: You are using an explicit closure for cloning elements\n   --> $DIR/map_clone.rs:15:26\n    |\n-15 |     let _: Vec<String> = vec![String::new()].iter().map(|x| x.clone()).collect();\n+LL |     let _: Vec<String> = vec![String::new()].iter().map(|x| x.clone()).collect();\n    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: Consider calling the dedicated `cloned` method: `vec![String::new()].iter().cloned()`\n \n error: You are using an explicit closure for cloning elements\n   --> $DIR/map_clone.rs:16:23\n    |\n-16 |     let _: Vec<u32> = vec![42, 43].iter().map(|&x| x).collect();\n+LL |     let _: Vec<u32> = vec![42, 43].iter().map(|&x| x).collect();\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: Consider calling the dedicated `cloned` method: `vec![42, 43].iter().cloned()`\n \n error: aborting due to 3 previous errors"}, {"sha": "931ef9b6248841aaf2d1e42671119b714e213b9b", "filename": "tests/ui/map_flatten.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fmap_flatten.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fmap_flatten.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmap_flatten.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,7 +1,7 @@\n error: called `map(..).flatten()` on an `Iterator`. This is more succinctly expressed by calling `.flat_map(..)`\n   --> $DIR/map_flatten.rs:14:21\n    |\n-14 |     let _: Vec<_> = vec![5_i8; 6].into_iter().map(|x| 0..x).flatten().collect();\n+LL |     let _: Vec<_> = vec![5_i8; 6].into_iter().map(|x| 0..x).flatten().collect();\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try using flat_map instead: `vec![5_i8; 6].into_iter().flat_map(|x| 0..x)`\n    |\n    = note: `-D clippy::map-flatten` implied by `-D warnings`"}, {"sha": "78711c4ba4b5baeb4dbd27ca38ae8bd9dd889748", "filename": "tests/ui/match_bool.stderr", "status": "modified", "additions": 48, "deletions": 48, "changes": 96, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fmatch_bool.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fmatch_bool.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmatch_bool.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,108 +1,108 @@\n error: this boolean expression can be simplified\n   --> $DIR/match_bool.rs:38:11\n    |\n-38 |     match test && test {\n+LL |     match test && test {\n    |           ^^^^^^^^^^^^ help: try: `test`\n    |\n    = note: `-D clippy::nonminimal-bool` implied by `-D warnings`\n \n error: you seem to be trying to match on a boolean expression\n   --> $DIR/match_bool.rs:13:5\n    |\n-13 | /     match test {\n-14 | |         true => 0,\n-15 | |         false => 42,\n-16 | |     };\n+LL | /     match test {\n+LL | |         true => 0,\n+LL | |         false => 42,\n+LL | |     };\n    | |_____^ help: consider using an if/else expression: `if test { 0 } else { 42 }`\n    |\n    = note: `-D clippy::match-bool` implied by `-D warnings`\n \n error: you seem to be trying to match on a boolean expression\n   --> $DIR/match_bool.rs:19:5\n    |\n-19 | /     match option == 1 {\n-20 | |         true => 1,\n-21 | |         false => 0,\n-22 | |     };\n+LL | /     match option == 1 {\n+LL | |         true => 1,\n+LL | |         false => 0,\n+LL | |     };\n    | |_____^ help: consider using an if/else expression: `if option == 1 { 1 } else { 0 }`\n \n error: you seem to be trying to match on a boolean expression\n   --> $DIR/match_bool.rs:24:5\n    |\n-24 | /     match test {\n-25 | |         true => (),\n-26 | |         false => {\n-27 | |             println!(\"Noooo!\");\n-28 | |         },\n-29 | |     };\n+LL | /     match test {\n+LL | |         true => (),\n+LL | |         false => {\n+LL | |             println!(\"Noooo!\");\n+LL | |         },\n+LL | |     };\n    | |_____^\n help: consider using an if/else expression\n    |\n-24 |     if !test {\n-25 |     println!(\"Noooo!\");\n-26 | };\n+LL |     if !test {\n+LL |     println!(\"Noooo!\");\n+LL | };\n    |\n \n error: you seem to be trying to match on a boolean expression\n   --> $DIR/match_bool.rs:31:5\n    |\n-31 | /     match test {\n-32 | |         false => {\n-33 | |             println!(\"Noooo!\");\n-34 | |         },\n-35 | |         _ => (),\n-36 | |     };\n+LL | /     match test {\n+LL | |         false => {\n+LL | |             println!(\"Noooo!\");\n+LL | |         },\n+LL | |         _ => (),\n+LL | |     };\n    | |_____^\n help: consider using an if/else expression\n    |\n-31 |     if !test {\n-32 |     println!(\"Noooo!\");\n-33 | };\n+LL |     if !test {\n+LL |     println!(\"Noooo!\");\n+LL | };\n    |\n \n error: you seem to be trying to match on a boolean expression\n   --> $DIR/match_bool.rs:38:5\n    |\n-38 | /     match test && test {\n-39 | |         false => {\n-40 | |             println!(\"Noooo!\");\n-41 | |         },\n-42 | |         _ => (),\n-43 | |     };\n+LL | /     match test && test {\n+LL | |         false => {\n+LL | |             println!(\"Noooo!\");\n+LL | |         },\n+LL | |         _ => (),\n+LL | |     };\n    | |_____^\n help: consider using an if/else expression\n    |\n-38 |     if !(test && test) {\n-39 |     println!(\"Noooo!\");\n-40 | };\n+LL |     if !(test && test) {\n+LL |     println!(\"Noooo!\");\n+LL | };\n    |\n \n error: equal expressions as operands to `&&`\n   --> $DIR/match_bool.rs:38:11\n    |\n-38 |     match test && test {\n+LL |     match test && test {\n    |           ^^^^^^^^^^^^\n    |\n    = note: #[deny(clippy::eq_op)] on by default\n \n error: you seem to be trying to match on a boolean expression\n   --> $DIR/match_bool.rs:45:5\n    |\n-45 | /     match test {\n-46 | |         false => {\n-47 | |             println!(\"Noooo!\");\n-48 | |         },\n+LL | /     match test {\n+LL | |         false => {\n+LL | |             println!(\"Noooo!\");\n+LL | |         },\n ...  |\n-51 | |         },\n-52 | |     };\n+LL | |         },\n+LL | |     };\n    | |_____^\n help: consider using an if/else expression\n    |\n-45 |     if test {\n-46 |     println!(\"Yes!\");\n-47 | } else {\n-48 |     println!(\"Noooo!\");\n-49 | };\n+LL |     if test {\n+LL |     println!(\"Yes!\");\n+LL | } else {\n+LL |     println!(\"Noooo!\");\n+LL | };\n    |\n \n error: aborting due to 8 previous errors"}, {"sha": "3e978df842ef98e82b563414cdb8ab39b4513748", "filename": "tests/ui/match_overlapping_arm.stderr", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fmatch_overlapping_arm.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fmatch_overlapping_arm.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmatch_overlapping_arm.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,62 +1,62 @@\n error: some ranges overlap\n   --> $DIR/match_overlapping_arm.rs:20:9\n    |\n-20 |         0...10 => println!(\"0 ... 10\"),\n+LL |         0...10 => println!(\"0 ... 10\"),\n    |         ^^^^^^\n    |\n    = note: `-D clippy::match-overlapping-arm` implied by `-D warnings`\n note: overlaps with this\n   --> $DIR/match_overlapping_arm.rs:21:9\n    |\n-21 |         0...11 => println!(\"0 ... 11\"),\n+LL |         0...11 => println!(\"0 ... 11\"),\n    |         ^^^^^^\n \n error: some ranges overlap\n   --> $DIR/match_overlapping_arm.rs:26:9\n    |\n-26 |         0...5 => println!(\"0 ... 5\"),\n+LL |         0...5 => println!(\"0 ... 5\"),\n    |         ^^^^^\n    |\n note: overlaps with this\n   --> $DIR/match_overlapping_arm.rs:28:9\n    |\n-28 |         FOO...11 => println!(\"0 ... 11\"),\n+LL |         FOO...11 => println!(\"0 ... 11\"),\n    |         ^^^^^^^^\n \n error: some ranges overlap\n   --> $DIR/match_overlapping_arm.rs:34:9\n    |\n-34 |         0...5 => println!(\"0 ... 5\"),\n+LL |         0...5 => println!(\"0 ... 5\"),\n    |         ^^^^^\n    |\n note: overlaps with this\n   --> $DIR/match_overlapping_arm.rs:33:9\n    |\n-33 |         2 => println!(\"2\"),\n+LL |         2 => println!(\"2\"),\n    |         ^\n \n error: some ranges overlap\n   --> $DIR/match_overlapping_arm.rs:40:9\n    |\n-40 |         0...2 => println!(\"0 ... 2\"),\n+LL |         0...2 => println!(\"0 ... 2\"),\n    |         ^^^^^\n    |\n note: overlaps with this\n   --> $DIR/match_overlapping_arm.rs:39:9\n    |\n-39 |         2 => println!(\"2\"),\n+LL |         2 => println!(\"2\"),\n    |         ^\n \n error: some ranges overlap\n   --> $DIR/match_overlapping_arm.rs:63:9\n    |\n-63 |         0..11 => println!(\"0 .. 11\"),\n+LL |         0..11 => println!(\"0 .. 11\"),\n    |         ^^^^^\n    |\n note: overlaps with this\n   --> $DIR/match_overlapping_arm.rs:64:9\n    |\n-64 |         0...11 => println!(\"0 ... 11\"),\n+LL |         0...11 => println!(\"0 ... 11\"),\n    |         ^^^^^^\n \n error: aborting due to 5 previous errors"}, {"sha": "06ba6224855a514f860a3278c6d3b0ad1bfd50d3", "filename": "tests/ui/matches.stderr", "status": "modified", "additions": 109, "deletions": 109, "changes": 218, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fmatches.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fmatches.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmatches.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,77 +1,77 @@\n error: you don't need to add `&` to all patterns\n   --> $DIR/matches.rs:20:9\n    |\n-20 | /         match v {\n-21 | |             &Some(v) => println!(\"{:?}\", v),\n-22 | |             &None => println!(\"none\"),\n-23 | |         }\n+LL | /         match v {\n+LL | |             &Some(v) => println!(\"{:?}\", v),\n+LL | |             &None => println!(\"none\"),\n+LL | |         }\n    | |_________^\n    |\n    = note: `-D clippy::match-ref-pats` implied by `-D warnings`\n help: instead of prefixing all patterns with `&`, you can dereference the expression\n    |\n-20 |         match *v {\n-21 |             Some(v) => println!(\"{:?}\", v),\n-22 |             None => println!(\"none\"),\n+LL |         match *v {\n+LL |             Some(v) => println!(\"{:?}\", v),\n+LL |             None => println!(\"none\"),\n    |\n \n error: you don't need to add `&` to all patterns\n   --> $DIR/matches.rs:31:5\n    |\n-31 | /     match tup {\n-32 | |         &(v, 1) => println!(\"{}\", v),\n-33 | |         _ => println!(\"none\"),\n-34 | |     }\n+LL | /     match tup {\n+LL | |         &(v, 1) => println!(\"{}\", v),\n+LL | |         _ => println!(\"none\"),\n+LL | |     }\n    | |_____^\n help: instead of prefixing all patterns with `&`, you can dereference the expression\n    |\n-31 |     match *tup {\n-32 |         (v, 1) => println!(\"{}\", v),\n+LL |     match *tup {\n+LL |         (v, 1) => println!(\"{}\", v),\n    |\n \n error: you don't need to add `&` to both the expression and the patterns\n   --> $DIR/matches.rs:37:5\n    |\n-37 | /     match &w {\n-38 | |         &Some(v) => println!(\"{:?}\", v),\n-39 | |         &None => println!(\"none\"),\n-40 | |     }\n+LL | /     match &w {\n+LL | |         &Some(v) => println!(\"{:?}\", v),\n+LL | |         &None => println!(\"none\"),\n+LL | |     }\n    | |_____^\n help: try\n    |\n-37 |     match w {\n-38 |         Some(v) => println!(\"{:?}\", v),\n-39 |         None => println!(\"none\"),\n+LL |     match w {\n+LL |         Some(v) => println!(\"{:?}\", v),\n+LL |         None => println!(\"none\"),\n    |\n \n error: you don't need to add `&` to all patterns\n   --> $DIR/matches.rs:48:5\n    |\n-48 | /     if let &None = a {\n-49 | |         println!(\"none\");\n-50 | |     }\n+LL | /     if let &None = a {\n+LL | |         println!(\"none\");\n+LL | |     }\n    | |_____^\n help: instead of prefixing all patterns with `&`, you can dereference the expression\n    |\n-48 |     if let None = *a {\n+LL |     if let None = *a {\n    |            ^^^^   ^^\n \n error: you don't need to add `&` to both the expression and the patterns\n   --> $DIR/matches.rs:53:5\n    |\n-53 | /     if let &None = &b {\n-54 | |         println!(\"none\");\n-55 | |     }\n+LL | /     if let &None = &b {\n+LL | |         println!(\"none\");\n+LL | |     }\n    | |_____^\n help: try\n    |\n-53 |     if let None = b {\n+LL |     if let None = b {\n    |            ^^^^   ^\n \n error: Err(_) will match all errors, maybe not a good idea\n   --> $DIR/matches.rs:64:9\n    |\n-64 |         Err(_) => panic!(\"err\"),\n+LL |         Err(_) => panic!(\"err\"),\n    |         ^^^^^^\n    |\n    = note: `-D clippy::match-wild-err-arm` implied by `-D warnings`\n@@ -80,203 +80,203 @@ error: Err(_) will match all errors, maybe not a good idea\n error: this `match` has identical arm bodies\n   --> $DIR/matches.rs:63:18\n    |\n-63 |         Ok(_) => println!(\"ok\"),\n+LL |         Ok(_) => println!(\"ok\"),\n    |                  ^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::match-same-arms` implied by `-D warnings`\n note: same as this\n   --> $DIR/matches.rs:62:18\n    |\n-62 |         Ok(3) => println!(\"ok\"),\n+LL |         Ok(3) => println!(\"ok\"),\n    |                  ^^^^^^^^^^^^^^\n note: consider refactoring into `Ok(3) | Ok(_)`\n   --> $DIR/matches.rs:62:18\n    |\n-62 |         Ok(3) => println!(\"ok\"),\n+LL |         Ok(3) => println!(\"ok\"),\n    |                  ^^^^^^^^^^^^^^\n    = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n \n error: Err(_) will match all errors, maybe not a good idea\n   --> $DIR/matches.rs:70:9\n    |\n-70 |         Err(_) => panic!(),\n+LL |         Err(_) => panic!(),\n    |         ^^^^^^\n    |\n    = note: to remove this warning, match each error separately or use unreachable macro\n \n error: this `match` has identical arm bodies\n   --> $DIR/matches.rs:69:18\n    |\n-69 |         Ok(_) => println!(\"ok\"),\n+LL |         Ok(_) => println!(\"ok\"),\n    |                  ^^^^^^^^^^^^^^\n    |\n note: same as this\n   --> $DIR/matches.rs:68:18\n    |\n-68 |         Ok(3) => println!(\"ok\"),\n+LL |         Ok(3) => println!(\"ok\"),\n    |                  ^^^^^^^^^^^^^^\n note: consider refactoring into `Ok(3) | Ok(_)`\n   --> $DIR/matches.rs:68:18\n    |\n-68 |         Ok(3) => println!(\"ok\"),\n+LL |         Ok(3) => println!(\"ok\"),\n    |                  ^^^^^^^^^^^^^^\n    = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n \n error: Err(_) will match all errors, maybe not a good idea\n   --> $DIR/matches.rs:76:9\n    |\n-76 |         Err(_) => {\n+LL |         Err(_) => {\n    |         ^^^^^^\n    |\n    = note: to remove this warning, match each error separately or use unreachable macro\n \n error: this `match` has identical arm bodies\n   --> $DIR/matches.rs:75:18\n    |\n-75 |         Ok(_) => println!(\"ok\"),\n+LL |         Ok(_) => println!(\"ok\"),\n    |                  ^^^^^^^^^^^^^^\n    |\n note: same as this\n   --> $DIR/matches.rs:74:18\n    |\n-74 |         Ok(3) => println!(\"ok\"),\n+LL |         Ok(3) => println!(\"ok\"),\n    |                  ^^^^^^^^^^^^^^\n note: consider refactoring into `Ok(3) | Ok(_)`\n   --> $DIR/matches.rs:74:18\n    |\n-74 |         Ok(3) => println!(\"ok\"),\n+LL |         Ok(3) => println!(\"ok\"),\n    |                  ^^^^^^^^^^^^^^\n    = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n \n error: this `match` has identical arm bodies\n   --> $DIR/matches.rs:84:18\n    |\n-84 |         Ok(_) => println!(\"ok\"),\n+LL |         Ok(_) => println!(\"ok\"),\n    |                  ^^^^^^^^^^^^^^\n    |\n note: same as this\n   --> $DIR/matches.rs:83:18\n    |\n-83 |         Ok(3) => println!(\"ok\"),\n+LL |         Ok(3) => println!(\"ok\"),\n    |                  ^^^^^^^^^^^^^^\n note: consider refactoring into `Ok(3) | Ok(_)`\n   --> $DIR/matches.rs:83:18\n    |\n-83 |         Ok(3) => println!(\"ok\"),\n+LL |         Ok(3) => println!(\"ok\"),\n    |                  ^^^^^^^^^^^^^^\n    = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n \n error: this `match` has identical arm bodies\n   --> $DIR/matches.rs:91:18\n    |\n-91 |         Ok(_) => println!(\"ok\"),\n+LL |         Ok(_) => println!(\"ok\"),\n    |                  ^^^^^^^^^^^^^^\n    |\n note: same as this\n   --> $DIR/matches.rs:90:18\n    |\n-90 |         Ok(3) => println!(\"ok\"),\n+LL |         Ok(3) => println!(\"ok\"),\n    |                  ^^^^^^^^^^^^^^\n note: consider refactoring into `Ok(3) | Ok(_)`\n   --> $DIR/matches.rs:90:18\n    |\n-90 |         Ok(3) => println!(\"ok\"),\n+LL |         Ok(3) => println!(\"ok\"),\n    |                  ^^^^^^^^^^^^^^\n    = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n \n error: this `match` has identical arm bodies\n   --> $DIR/matches.rs:97:18\n    |\n-97 |         Ok(_) => println!(\"ok\"),\n+LL |         Ok(_) => println!(\"ok\"),\n    |                  ^^^^^^^^^^^^^^\n    |\n note: same as this\n   --> $DIR/matches.rs:96:18\n    |\n-96 |         Ok(3) => println!(\"ok\"),\n+LL |         Ok(3) => println!(\"ok\"),\n    |                  ^^^^^^^^^^^^^^\n note: consider refactoring into `Ok(3) | Ok(_)`\n   --> $DIR/matches.rs:96:18\n    |\n-96 |         Ok(3) => println!(\"ok\"),\n+LL |         Ok(3) => println!(\"ok\"),\n    |                  ^^^^^^^^^^^^^^\n    = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n \n error: this `match` has identical arm bodies\n-   --> $DIR/matches.rs:103:18\n-    |\n-103 |         Ok(_) => println!(\"ok\"),\n-    |                  ^^^^^^^^^^^^^^\n-    |\n+  --> $DIR/matches.rs:103:18\n+   |\n+LL |         Ok(_) => println!(\"ok\"),\n+   |                  ^^^^^^^^^^^^^^\n+   |\n note: same as this\n-   --> $DIR/matches.rs:102:18\n-    |\n-102 |         Ok(3) => println!(\"ok\"),\n-    |                  ^^^^^^^^^^^^^^\n+  --> $DIR/matches.rs:102:18\n+   |\n+LL |         Ok(3) => println!(\"ok\"),\n+   |                  ^^^^^^^^^^^^^^\n note: consider refactoring into `Ok(3) | Ok(_)`\n-   --> $DIR/matches.rs:102:18\n-    |\n-102 |         Ok(3) => println!(\"ok\"),\n-    |                  ^^^^^^^^^^^^^^\n-    = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n+  --> $DIR/matches.rs:102:18\n+   |\n+LL |         Ok(3) => println!(\"ok\"),\n+   |                  ^^^^^^^^^^^^^^\n+   = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n \n error: this `match` has identical arm bodies\n-   --> $DIR/matches.rs:126:29\n-    |\n-126 |         (Ok(_), Some(x)) => println!(\"ok {}\", x),\n-    |                             ^^^^^^^^^^^^^^^^^^^^\n-    |\n+  --> $DIR/matches.rs:126:29\n+   |\n+LL |         (Ok(_), Some(x)) => println!(\"ok {}\", x),\n+   |                             ^^^^^^^^^^^^^^^^^^^^\n+   |\n note: same as this\n-   --> $DIR/matches.rs:125:29\n-    |\n-125 |         (Ok(x), Some(_)) => println!(\"ok {}\", x),\n-    |                             ^^^^^^^^^^^^^^^^^^^^\n+  --> $DIR/matches.rs:125:29\n+   |\n+LL |         (Ok(x), Some(_)) => println!(\"ok {}\", x),\n+   |                             ^^^^^^^^^^^^^^^^^^^^\n note: consider refactoring into `(Ok(x), Some(_)) | (Ok(_), Some(x))`\n-   --> $DIR/matches.rs:125:29\n-    |\n-125 |         (Ok(x), Some(_)) => println!(\"ok {}\", x),\n-    |                             ^^^^^^^^^^^^^^^^^^^^\n-    = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n+  --> $DIR/matches.rs:125:29\n+   |\n+LL |         (Ok(x), Some(_)) => println!(\"ok {}\", x),\n+   |                             ^^^^^^^^^^^^^^^^^^^^\n+   = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n \n error: this `match` has identical arm bodies\n-   --> $DIR/matches.rs:141:18\n-    |\n-141 |         Ok(_) => println!(\"ok\"),\n-    |                  ^^^^^^^^^^^^^^\n-    |\n+  --> $DIR/matches.rs:141:18\n+   |\n+LL |         Ok(_) => println!(\"ok\"),\n+   |                  ^^^^^^^^^^^^^^\n+   |\n note: same as this\n-   --> $DIR/matches.rs:140:18\n-    |\n-140 |         Ok(3) => println!(\"ok\"),\n-    |                  ^^^^^^^^^^^^^^\n+  --> $DIR/matches.rs:140:18\n+   |\n+LL |         Ok(3) => println!(\"ok\"),\n+   |                  ^^^^^^^^^^^^^^\n note: consider refactoring into `Ok(3) | Ok(_)`\n-   --> $DIR/matches.rs:140:18\n-    |\n-140 |         Ok(3) => println!(\"ok\"),\n-    |                  ^^^^^^^^^^^^^^\n-    = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n+  --> $DIR/matches.rs:140:18\n+   |\n+LL |         Ok(3) => println!(\"ok\"),\n+   |                  ^^^^^^^^^^^^^^\n+   = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n \n error: use as_ref() instead\n-   --> $DIR/matches.rs:150:33\n-    |\n-150 |       let borrowed: Option<&()> = match owned {\n-    |  _________________________________^\n-151 | |         None => None,\n-152 | |         Some(ref v) => Some(v),\n-153 | |     };\n-    | |_____^ help: try this: `owned.as_ref()`\n-    |\n-    = note: `-D clippy::match-as-ref` implied by `-D warnings`\n+  --> $DIR/matches.rs:150:33\n+   |\n+LL |       let borrowed: Option<&()> = match owned {\n+   |  _________________________________^\n+LL | |         None => None,\n+LL | |         Some(ref v) => Some(v),\n+LL | |     };\n+   | |_____^ help: try this: `owned.as_ref()`\n+   |\n+   = note: `-D clippy::match-as-ref` implied by `-D warnings`\n \n error: use as_mut() instead\n-   --> $DIR/matches.rs:156:39\n-    |\n-156 |       let borrow_mut: Option<&mut ()> = match mut_owned {\n-    |  _______________________________________^\n-157 | |         None => None,\n-158 | |         Some(ref mut v) => Some(v),\n-159 | |     };\n-    | |_____^ help: try this: `mut_owned.as_mut()`\n+  --> $DIR/matches.rs:156:39\n+   |\n+LL |       let borrow_mut: Option<&mut ()> = match mut_owned {\n+   |  _______________________________________^\n+LL | |         None => None,\n+LL | |         Some(ref mut v) => Some(v),\n+LL | |     };\n+   | |_____^ help: try this: `mut_owned.as_mut()`\n \n error: aborting due to 19 previous errors\n "}, {"sha": "c445b96a90f6a3913b21230a8e8eb4ff3f5789ff", "filename": "tests/ui/mem_discriminant.stderr", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fmem_discriminant.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fmem_discriminant.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmem_discriminant.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,84 +1,84 @@\n error: calling `mem::discriminant` on non-enum type `&str`\n   --> $DIR/mem_discriminant.rs:23:5\n    |\n-23 |     mem::discriminant(&\"hello\");\n+LL |     mem::discriminant(&\"hello\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n note: lint level defined here\n   --> $DIR/mem_discriminant.rs:10:9\n    |\n-10 | #![deny(clippy::mem_discriminant_non_enum)]\n+LL | #![deny(clippy::mem_discriminant_non_enum)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: calling `mem::discriminant` on non-enum type `&std::option::Option<i32>`\n   --> $DIR/mem_discriminant.rs:24:5\n    |\n-24 |     mem::discriminant(&&Some(2));\n+LL |     mem::discriminant(&&Some(2));\n    |     ^^^^^^^^^^^^^^^^^^---------^\n    |                       |\n    |                       help: try dereferencing: `&Some(2)`\n \n error: calling `mem::discriminant` on non-enum type `&std::option::Option<u8>`\n   --> $DIR/mem_discriminant.rs:25:5\n    |\n-25 |     mem::discriminant(&&None::<u8>);\n+LL |     mem::discriminant(&&None::<u8>);\n    |     ^^^^^^^^^^^^^^^^^^------------^\n    |                       |\n    |                       help: try dereferencing: `&None::<u8>`\n \n error: calling `mem::discriminant` on non-enum type `&Foo`\n   --> $DIR/mem_discriminant.rs:26:5\n    |\n-26 |     mem::discriminant(&&Foo::One(5));\n+LL |     mem::discriminant(&&Foo::One(5));\n    |     ^^^^^^^^^^^^^^^^^^-------------^\n    |                       |\n    |                       help: try dereferencing: `&Foo::One(5)`\n \n error: calling `mem::discriminant` on non-enum type `&Foo`\n   --> $DIR/mem_discriminant.rs:27:5\n    |\n-27 |     mem::discriminant(&&Foo::Two(5));\n+LL |     mem::discriminant(&&Foo::Two(5));\n    |     ^^^^^^^^^^^^^^^^^^-------------^\n    |                       |\n    |                       help: try dereferencing: `&Foo::Two(5)`\n \n error: calling `mem::discriminant` on non-enum type `A`\n   --> $DIR/mem_discriminant.rs:28:5\n    |\n-28 |     mem::discriminant(&A(Foo::One(0)));\n+LL |     mem::discriminant(&A(Foo::One(0)));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: calling `mem::discriminant` on non-enum type `&std::option::Option<i32>`\n   --> $DIR/mem_discriminant.rs:32:5\n    |\n-32 |     mem::discriminant(&ro);\n+LL |     mem::discriminant(&ro);\n    |     ^^^^^^^^^^^^^^^^^^---^\n    |                       |\n    |                       help: try dereferencing: `ro`\n \n error: calling `mem::discriminant` on non-enum type `&std::option::Option<i32>`\n   --> $DIR/mem_discriminant.rs:33:5\n    |\n-33 |     mem::discriminant(rro);\n+LL |     mem::discriminant(rro);\n    |     ^^^^^^^^^^^^^^^^^^---^\n    |                       |\n    |                       help: try dereferencing: `*rro`\n \n error: calling `mem::discriminant` on non-enum type `&&std::option::Option<i32>`\n   --> $DIR/mem_discriminant.rs:34:5\n    |\n-34 |     mem::discriminant(&rro);\n+LL |     mem::discriminant(&rro);\n    |     ^^^^^^^^^^^^^^^^^^----^\n    |                       |\n    |                       help: try dereferencing: `*rro`\n \n error: calling `mem::discriminant` on non-enum type `&&std::option::Option<i32>`\n   --> $DIR/mem_discriminant.rs:38:13\n    |\n-38 |             mem::discriminant($param)\n+LL |             mem::discriminant($param)\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^\n ...\n-42 |     mem_discriminant_but_in_a_macro!(&rro);\n+LL |     mem_discriminant_but_in_a_macro!(&rro);\n    |     ---------------------------------------\n    |     |                                |\n    |     |                                help: try dereferencing: `*rro`\n@@ -87,15 +87,15 @@ error: calling `mem::discriminant` on non-enum type `&&std::option::Option<i32>`\n error: calling `mem::discriminant` on non-enum type `&&&&&std::option::Option<i32>`\n   --> $DIR/mem_discriminant.rs:45:5\n    |\n-45 |     mem::discriminant(&rrrrro);\n+LL |     mem::discriminant(&rrrrro);\n    |     ^^^^^^^^^^^^^^^^^^-------^\n    |                       |\n    |                       help: try dereferencing: `****rrrrro`\n \n error: calling `mem::discriminant` on non-enum type `&&&std::option::Option<i32>`\n   --> $DIR/mem_discriminant.rs:46:5\n    |\n-46 |     mem::discriminant(*rrrrro);\n+LL |     mem::discriminant(*rrrrro);\n    |     ^^^^^^^^^^^^^^^^^^-------^\n    |                       |\n    |                       help: try dereferencing: `****rrrrro`"}, {"sha": "292437d0019b7b1b7afa78a1e8d2bda8404861ab", "filename": "tests/ui/mem_forget.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fmem_forget.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fmem_forget.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmem_forget.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,21 +1,21 @@\n error: usage of mem::forget on Drop type\n   --> $DIR/mem_forget.rs:23:5\n    |\n-23 |     memstuff::forget(six);\n+LL |     memstuff::forget(six);\n    |     ^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::mem-forget` implied by `-D warnings`\n \n error: usage of mem::forget on Drop type\n   --> $DIR/mem_forget.rs:26:5\n    |\n-26 |     std::mem::forget(seven);\n+LL |     std::mem::forget(seven);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^\n \n error: usage of mem::forget on Drop type\n   --> $DIR/mem_forget.rs:29:5\n    |\n-29 |     forgetSomething(eight);\n+LL |     forgetSomething(eight);\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 3 previous errors"}, {"sha": "9092fa2ea1453d6cff099a3b40bc0b7554a89aaf", "filename": "tests/ui/mem_replace.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fmem_replace.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fmem_replace.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmem_replace.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,15 +1,15 @@\n error: replacing an `Option` with `None`\n   --> $DIR/mem_replace.rs:16:13\n    |\n-16 |     let _ = mem::replace(&mut an_option, None);\n+LL |     let _ = mem::replace(&mut an_option, None);\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider `Option::take()` instead: `an_option.take()`\n    |\n    = note: `-D clippy::mem-replace-option-with-none` implied by `-D warnings`\n \n error: replacing an `Option` with `None`\n   --> $DIR/mem_replace.rs:18:13\n    |\n-18 |     let _ = mem::replace(an_option, None);\n+LL |     let _ = mem::replace(an_option, None);\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider `Option::take()` instead: `an_option.take()`\n \n error: aborting due to 2 previous errors"}, {"sha": "4f445c924d246c988e6adac16ce92ca7b42d6083", "filename": "tests/ui/methods.stderr", "status": "modified", "additions": 286, "deletions": 286, "changes": 572, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fmethods.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fmethods.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmethods.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,405 +1,405 @@\n error: defining a method called `add` on this type; consider implementing the `std::ops::Add` trait or choosing a less ambiguous name\n   --> $DIR/methods.rs:38:5\n    |\n-38 |     pub fn add(self, other: T) -> T { self }\n+LL |     pub fn add(self, other: T) -> T { self }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::should-implement-trait` implied by `-D warnings`\n \n error: methods called `into_*` usually take self by value; consider choosing a less ambiguous name\n   --> $DIR/methods.rs:49:17\n    |\n-49 |     fn into_u16(&self) -> u16 { 0 }\n+LL |     fn into_u16(&self) -> u16 { 0 }\n    |                 ^^^^^\n    |\n    = note: `-D clippy::wrong-self-convention` implied by `-D warnings`\n \n error: methods called `to_*` usually take self by reference; consider choosing a less ambiguous name\n   --> $DIR/methods.rs:51:21\n    |\n-51 |     fn to_something(self) -> u32 { 0 }\n+LL |     fn to_something(self) -> u32 { 0 }\n    |                     ^^^^\n \n error: methods called `new` usually take no self; consider choosing a less ambiguous name\n   --> $DIR/methods.rs:53:12\n    |\n-53 |     fn new(self) -> Self { unimplemented!(); }\n+LL |     fn new(self) -> Self { unimplemented!(); }\n    |            ^^^^\n \n error: called `map(f).unwrap_or(a)` on an Option value. This can be done more directly by calling `map_or(a, f)` instead\n-   --> $DIR/methods.rs:121:13\n-    |\n-121 |       let _ = opt.map(|x| x + 1)\n-    |  _____________^\n-122 | |\n-123 | |                .unwrap_or(0); // should lint even though this call is on a separate line\n-    | |____________________________^\n-    |\n-    = note: `-D clippy::option-map-unwrap-or` implied by `-D warnings`\n-    = note: replace `map(|x| x + 1).unwrap_or(0)` with `map_or(0, |x| x + 1)`\n+  --> $DIR/methods.rs:121:13\n+   |\n+LL |       let _ = opt.map(|x| x + 1)\n+   |  _____________^\n+LL | |\n+LL | |                .unwrap_or(0); // should lint even though this call is on a separate line\n+   | |____________________________^\n+   |\n+   = note: `-D clippy::option-map-unwrap-or` implied by `-D warnings`\n+   = note: replace `map(|x| x + 1).unwrap_or(0)` with `map_or(0, |x| x + 1)`\n \n error: called `map(f).unwrap_or(a)` on an Option value. This can be done more directly by calling `map_or(a, f)` instead\n-   --> $DIR/methods.rs:125:13\n-    |\n-125 |       let _ = opt.map(|x| {\n-    |  _____________^\n-126 | |                         x + 1\n-127 | |                     }\n-128 | |               ).unwrap_or(0);\n-    | |____________________________^\n+  --> $DIR/methods.rs:125:13\n+   |\n+LL |       let _ = opt.map(|x| {\n+   |  _____________^\n+LL | |                         x + 1\n+LL | |                     }\n+LL | |               ).unwrap_or(0);\n+   | |____________________________^\n \n error: called `map(f).unwrap_or(a)` on an Option value. This can be done more directly by calling `map_or(a, f)` instead\n-   --> $DIR/methods.rs:129:13\n-    |\n-129 |       let _ = opt.map(|x| x + 1)\n-    |  _____________^\n-130 | |                .unwrap_or({\n-131 | |                     0\n-132 | |                 });\n-    | |__________________^\n+  --> $DIR/methods.rs:129:13\n+   |\n+LL |       let _ = opt.map(|x| x + 1)\n+   |  _____________^\n+LL | |                .unwrap_or({\n+LL | |                     0\n+LL | |                 });\n+   | |__________________^\n \n error: called `map(f).unwrap_or(None)` on an Option value. This can be done more directly by calling `and_then(f)` instead\n-   --> $DIR/methods.rs:134:13\n-    |\n-134 |     let _ = opt.map(|x| Some(x + 1)).unwrap_or(None);\n-    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-    |\n-    = note: replace `map(|x| Some(x + 1)).unwrap_or(None)` with `and_then(|x| Some(x + 1))`\n+  --> $DIR/methods.rs:134:13\n+   |\n+LL |     let _ = opt.map(|x| Some(x + 1)).unwrap_or(None);\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: replace `map(|x| Some(x + 1)).unwrap_or(None)` with `and_then(|x| Some(x + 1))`\n \n error: called `map(f).unwrap_or(None)` on an Option value. This can be done more directly by calling `and_then(f)` instead\n-   --> $DIR/methods.rs:136:13\n-    |\n-136 |       let _ = opt.map(|x| {\n-    |  _____________^\n-137 | |         Some(x + 1)\n-138 | |     }\n-139 | |     ).unwrap_or(None);\n-    | |_____________________^\n+  --> $DIR/methods.rs:136:13\n+   |\n+LL |       let _ = opt.map(|x| {\n+   |  _____________^\n+LL | |         Some(x + 1)\n+LL | |     }\n+LL | |     ).unwrap_or(None);\n+   | |_____________________^\n \n error: called `map(f).unwrap_or(None)` on an Option value. This can be done more directly by calling `and_then(f)` instead\n-   --> $DIR/methods.rs:140:13\n-    |\n-140 |       let _ = opt\n-    |  _____________^\n-141 | |         .map(|x| Some(x + 1))\n-142 | |         .unwrap_or(None);\n-    | |________________________^\n-    |\n-    = note: replace `map(|x| Some(x + 1)).unwrap_or(None)` with `and_then(|x| Some(x + 1))`\n+  --> $DIR/methods.rs:140:13\n+   |\n+LL |       let _ = opt\n+   |  _____________^\n+LL | |         .map(|x| Some(x + 1))\n+LL | |         .unwrap_or(None);\n+   | |________________________^\n+   |\n+   = note: replace `map(|x| Some(x + 1)).unwrap_or(None)` with `and_then(|x| Some(x + 1))`\n \n error: called `map(f).unwrap_or_else(g)` on an Option value. This can be done more directly by calling `map_or_else(g, f)` instead\n-   --> $DIR/methods.rs:148:13\n-    |\n-148 |       let _ = opt.map(|x| x + 1)\n-    |  _____________^\n-149 | |\n-150 | |                .unwrap_or_else(|| 0); // should lint even though this call is on a separate line\n-    | |____________________________________^\n-    |\n-    = note: `-D clippy::option-map-unwrap-or-else` implied by `-D warnings`\n-    = note: replace `map(|x| x + 1).unwrap_or_else(|| 0)` with `map_or_else(|| 0, |x| x + 1)`\n+  --> $DIR/methods.rs:148:13\n+   |\n+LL |       let _ = opt.map(|x| x + 1)\n+   |  _____________^\n+LL | |\n+LL | |                .unwrap_or_else(|| 0); // should lint even though this call is on a separate line\n+   | |____________________________________^\n+   |\n+   = note: `-D clippy::option-map-unwrap-or-else` implied by `-D warnings`\n+   = note: replace `map(|x| x + 1).unwrap_or_else(|| 0)` with `map_or_else(|| 0, |x| x + 1)`\n \n error: called `map(f).unwrap_or_else(g)` on an Option value. This can be done more directly by calling `map_or_else(g, f)` instead\n-   --> $DIR/methods.rs:152:13\n-    |\n-152 |       let _ = opt.map(|x| {\n-    |  _____________^\n-153 | |                         x + 1\n-154 | |                     }\n-155 | |               ).unwrap_or_else(|| 0);\n-    | |____________________________________^\n+  --> $DIR/methods.rs:152:13\n+   |\n+LL |       let _ = opt.map(|x| {\n+   |  _____________^\n+LL | |                         x + 1\n+LL | |                     }\n+LL | |               ).unwrap_or_else(|| 0);\n+   | |____________________________________^\n \n error: called `map(f).unwrap_or_else(g)` on an Option value. This can be done more directly by calling `map_or_else(g, f)` instead\n-   --> $DIR/methods.rs:156:13\n-    |\n-156 |       let _ = opt.map(|x| x + 1)\n-    |  _____________^\n-157 | |                .unwrap_or_else(||\n-158 | |                     0\n-159 | |                 );\n-    | |_________________^\n+  --> $DIR/methods.rs:156:13\n+   |\n+LL |       let _ = opt.map(|x| x + 1)\n+   |  _____________^\n+LL | |                .unwrap_or_else(||\n+LL | |                     0\n+LL | |                 );\n+   | |_________________^\n \n error: called `map_or(None, f)` on an Option value. This can be done more directly by calling `and_then(f)` instead\n-   --> $DIR/methods.rs:165:13\n-    |\n-165 |     let _ = opt.map_or(None, |x| Some(x + 1));\n-    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try using and_then instead: `opt.and_then(|x| Some(x + 1))`\n-    |\n-    = note: `-D clippy::option-map-or-none` implied by `-D warnings`\n+  --> $DIR/methods.rs:165:13\n+   |\n+LL |     let _ = opt.map_or(None, |x| Some(x + 1));\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try using and_then instead: `opt.and_then(|x| Some(x + 1))`\n+   |\n+   = note: `-D clippy::option-map-or-none` implied by `-D warnings`\n \n error: called `map_or(None, f)` on an Option value. This can be done more directly by calling `and_then(f)` instead\n-   --> $DIR/methods.rs:167:13\n-    |\n-167 |       let _ = opt.map_or(None, |x| {\n-    |  _____________^\n-168 | |                         Some(x + 1)\n-169 | |                        }\n-170 | |                 );\n-    | |_________________^\n+  --> $DIR/methods.rs:167:13\n+   |\n+LL |       let _ = opt.map_or(None, |x| {\n+   |  _____________^\n+LL | |                         Some(x + 1)\n+LL | |                        }\n+LL | |                 );\n+   | |_________________^\n help: try using and_then instead\n-    |\n-167 |     let _ = opt.and_then(|x| {\n-168 |                         Some(x + 1)\n-169 |                        });\n-    |\n+   |\n+LL |     let _ = opt.and_then(|x| {\n+LL |                         Some(x + 1)\n+LL |                        });\n+   |\n \n error: called `map(f).unwrap_or_else(g)` on a Result value. This can be done more directly by calling `ok().map_or_else(g, f)` instead\n-   --> $DIR/methods.rs:180:13\n-    |\n-180 |       let _ = res.map(|x| x + 1)\n-    |  _____________^\n-181 | |\n-182 | |                .unwrap_or_else(|e| 0); // should lint even though this call is on a separate line\n-    | |_____________________________________^\n-    |\n-    = note: `-D clippy::result-map-unwrap-or-else` implied by `-D warnings`\n-    = note: replace `map(|x| x + 1).unwrap_or_else(|e| 0)` with `ok().map_or_else(|e| 0, |x| x + 1)`\n+  --> $DIR/methods.rs:180:13\n+   |\n+LL |       let _ = res.map(|x| x + 1)\n+   |  _____________^\n+LL | |\n+LL | |                .unwrap_or_else(|e| 0); // should lint even though this call is on a separate line\n+   | |_____________________________________^\n+   |\n+   = note: `-D clippy::result-map-unwrap-or-else` implied by `-D warnings`\n+   = note: replace `map(|x| x + 1).unwrap_or_else(|e| 0)` with `ok().map_or_else(|e| 0, |x| x + 1)`\n \n error: called `map(f).unwrap_or_else(g)` on a Result value. This can be done more directly by calling `ok().map_or_else(g, f)` instead\n-   --> $DIR/methods.rs:184:13\n-    |\n-184 |       let _ = res.map(|x| {\n-    |  _____________^\n-185 | |                         x + 1\n-186 | |                     }\n-187 | |               ).unwrap_or_else(|e| 0);\n-    | |_____________________________________^\n+  --> $DIR/methods.rs:184:13\n+   |\n+LL |       let _ = res.map(|x| {\n+   |  _____________^\n+LL | |                         x + 1\n+LL | |                     }\n+LL | |               ).unwrap_or_else(|e| 0);\n+   | |_____________________________________^\n \n error: called `map(f).unwrap_or_else(g)` on a Result value. This can be done more directly by calling `ok().map_or_else(g, f)` instead\n-   --> $DIR/methods.rs:188:13\n-    |\n-188 |       let _ = res.map(|x| x + 1)\n-    |  _____________^\n-189 | |                .unwrap_or_else(|e|\n-190 | |                     0\n-191 | |                 );\n-    | |_________________^\n+  --> $DIR/methods.rs:188:13\n+   |\n+LL |       let _ = res.map(|x| x + 1)\n+   |  _____________^\n+LL | |                .unwrap_or_else(|e|\n+LL | |                     0\n+LL | |                 );\n+   | |_________________^\n \n error: called `filter(p).next()` on an `Iterator`. This is more succinctly expressed by calling `.find(p)` instead.\n-   --> $DIR/methods.rs:251:13\n-    |\n-251 |     let _ = v.iter().filter(|&x| *x < 0).next();\n-    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-    |\n-    = note: `-D clippy::filter-next` implied by `-D warnings`\n-    = note: replace `filter(|&x| *x < 0).next()` with `find(|&x| *x < 0)`\n+  --> $DIR/methods.rs:251:13\n+   |\n+LL |     let _ = v.iter().filter(|&x| *x < 0).next();\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: `-D clippy::filter-next` implied by `-D warnings`\n+   = note: replace `filter(|&x| *x < 0).next()` with `find(|&x| *x < 0)`\n \n error: called `filter(p).next()` on an `Iterator`. This is more succinctly expressed by calling `.find(p)` instead.\n-   --> $DIR/methods.rs:254:13\n-    |\n-254 |       let _ = v.iter().filter(|&x| {\n-    |  _____________^\n-255 | |                                 *x < 0\n-256 | |                             }\n-257 | |                    ).next();\n-    | |___________________________^\n+  --> $DIR/methods.rs:254:13\n+   |\n+LL |       let _ = v.iter().filter(|&x| {\n+   |  _____________^\n+LL | |                                 *x < 0\n+LL | |                             }\n+LL | |                    ).next();\n+   | |___________________________^\n \n error: called `is_some()` after searching an `Iterator` with find. This is more succinctly expressed by calling `any()`.\n-   --> $DIR/methods.rs:269:13\n-    |\n-269 |     let _ = v.iter().find(|&x| *x < 0).is_some();\n-    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-    |\n-    = note: `-D clippy::search-is-some` implied by `-D warnings`\n-    = note: replace `find(|&x| *x < 0).is_some()` with `any(|&x| *x < 0)`\n+  --> $DIR/methods.rs:269:13\n+   |\n+LL |     let _ = v.iter().find(|&x| *x < 0).is_some();\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: `-D clippy::search-is-some` implied by `-D warnings`\n+   = note: replace `find(|&x| *x < 0).is_some()` with `any(|&x| *x < 0)`\n \n error: called `is_some()` after searching an `Iterator` with find. This is more succinctly expressed by calling `any()`.\n-   --> $DIR/methods.rs:272:13\n-    |\n-272 |       let _ = v.iter().find(|&x| {\n-    |  _____________^\n-273 | |                               *x < 0\n-274 | |                           }\n-275 | |                    ).is_some();\n-    | |______________________________^\n+  --> $DIR/methods.rs:272:13\n+   |\n+LL |       let _ = v.iter().find(|&x| {\n+   |  _____________^\n+LL | |                               *x < 0\n+LL | |                           }\n+LL | |                    ).is_some();\n+   | |______________________________^\n \n error: called `is_some()` after searching an `Iterator` with position. This is more succinctly expressed by calling `any()`.\n-   --> $DIR/methods.rs:278:13\n-    |\n-278 |     let _ = v.iter().position(|&x| x < 0).is_some();\n-    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-    |\n-    = note: replace `position(|&x| x < 0).is_some()` with `any(|&x| x < 0)`\n+  --> $DIR/methods.rs:278:13\n+   |\n+LL |     let _ = v.iter().position(|&x| x < 0).is_some();\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: replace `position(|&x| x < 0).is_some()` with `any(|&x| x < 0)`\n \n error: called `is_some()` after searching an `Iterator` with position. This is more succinctly expressed by calling `any()`.\n-   --> $DIR/methods.rs:281:13\n-    |\n-281 |       let _ = v.iter().position(|&x| {\n-    |  _____________^\n-282 | |                                   x < 0\n-283 | |                               }\n-284 | |                    ).is_some();\n-    | |______________________________^\n+  --> $DIR/methods.rs:281:13\n+   |\n+LL |       let _ = v.iter().position(|&x| {\n+   |  _____________^\n+LL | |                                   x < 0\n+LL | |                               }\n+LL | |                    ).is_some();\n+   | |______________________________^\n \n error: called `is_some()` after searching an `Iterator` with rposition. This is more succinctly expressed by calling `any()`.\n-   --> $DIR/methods.rs:287:13\n-    |\n-287 |     let _ = v.iter().rposition(|&x| x < 0).is_some();\n-    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-    |\n-    = note: replace `rposition(|&x| x < 0).is_some()` with `any(|&x| x < 0)`\n+  --> $DIR/methods.rs:287:13\n+   |\n+LL |     let _ = v.iter().rposition(|&x| x < 0).is_some();\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: replace `rposition(|&x| x < 0).is_some()` with `any(|&x| x < 0)`\n \n error: called `is_some()` after searching an `Iterator` with rposition. This is more succinctly expressed by calling `any()`.\n-   --> $DIR/methods.rs:290:13\n-    |\n-290 |       let _ = v.iter().rposition(|&x| {\n-    |  _____________^\n-291 | |                                    x < 0\n-292 | |                                }\n-293 | |                    ).is_some();\n-    | |______________________________^\n+  --> $DIR/methods.rs:290:13\n+   |\n+LL |       let _ = v.iter().rposition(|&x| {\n+   |  _____________^\n+LL | |                                    x < 0\n+LL | |                                }\n+LL | |                    ).is_some();\n+   | |______________________________^\n \n error: use of `unwrap_or` followed by a function call\n-   --> $DIR/methods.rs:325:22\n-    |\n-325 |     with_constructor.unwrap_or(make());\n-    |                      ^^^^^^^^^^^^^^^^^ help: try this: `unwrap_or_else(make)`\n-    |\n-    = note: `-D clippy::or-fun-call` implied by `-D warnings`\n+  --> $DIR/methods.rs:325:22\n+   |\n+LL |     with_constructor.unwrap_or(make());\n+   |                      ^^^^^^^^^^^^^^^^^ help: try this: `unwrap_or_else(make)`\n+   |\n+   = note: `-D clippy::or-fun-call` implied by `-D warnings`\n \n error: use of `unwrap_or` followed by a call to `new`\n-   --> $DIR/methods.rs:328:5\n-    |\n-328 |     with_new.unwrap_or(Vec::new());\n-    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `with_new.unwrap_or_default()`\n+  --> $DIR/methods.rs:328:5\n+   |\n+LL |     with_new.unwrap_or(Vec::new());\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `with_new.unwrap_or_default()`\n \n error: use of `unwrap_or` followed by a function call\n-   --> $DIR/methods.rs:331:21\n-    |\n-331 |     with_const_args.unwrap_or(Vec::with_capacity(12));\n-    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `unwrap_or_else(|| Vec::with_capacity(12))`\n+  --> $DIR/methods.rs:331:21\n+   |\n+LL |     with_const_args.unwrap_or(Vec::with_capacity(12));\n+   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `unwrap_or_else(|| Vec::with_capacity(12))`\n \n error: use of `unwrap_or` followed by a function call\n-   --> $DIR/methods.rs:334:14\n-    |\n-334 |     with_err.unwrap_or(make());\n-    |              ^^^^^^^^^^^^^^^^^ help: try this: `unwrap_or_else(|_| make())`\n+  --> $DIR/methods.rs:334:14\n+   |\n+LL |     with_err.unwrap_or(make());\n+   |              ^^^^^^^^^^^^^^^^^ help: try this: `unwrap_or_else(|_| make())`\n \n error: use of `unwrap_or` followed by a function call\n-   --> $DIR/methods.rs:337:19\n-    |\n-337 |     with_err_args.unwrap_or(Vec::with_capacity(12));\n-    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `unwrap_or_else(|_| Vec::with_capacity(12))`\n+  --> $DIR/methods.rs:337:19\n+   |\n+LL |     with_err_args.unwrap_or(Vec::with_capacity(12));\n+   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `unwrap_or_else(|_| Vec::with_capacity(12))`\n \n error: use of `unwrap_or` followed by a call to `default`\n-   --> $DIR/methods.rs:340:5\n-    |\n-340 |     with_default_trait.unwrap_or(Default::default());\n-    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `with_default_trait.unwrap_or_default()`\n+  --> $DIR/methods.rs:340:5\n+   |\n+LL |     with_default_trait.unwrap_or(Default::default());\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `with_default_trait.unwrap_or_default()`\n \n error: use of `unwrap_or` followed by a call to `default`\n-   --> $DIR/methods.rs:343:5\n-    |\n-343 |     with_default_type.unwrap_or(u64::default());\n-    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `with_default_type.unwrap_or_default()`\n+  --> $DIR/methods.rs:343:5\n+   |\n+LL |     with_default_type.unwrap_or(u64::default());\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `with_default_type.unwrap_or_default()`\n \n error: use of `unwrap_or` followed by a function call\n-   --> $DIR/methods.rs:346:14\n-    |\n-346 |     with_vec.unwrap_or(vec![]);\n-    |              ^^^^^^^^^^^^^^^^^ help: try this: `unwrap_or_else(|| vec![])`\n+  --> $DIR/methods.rs:346:14\n+   |\n+LL |     with_vec.unwrap_or(vec![]);\n+   |              ^^^^^^^^^^^^^^^^^ help: try this: `unwrap_or_else(|| vec![])`\n \n error: use of `unwrap_or` followed by a function call\n-   --> $DIR/methods.rs:351:21\n-    |\n-351 |     without_default.unwrap_or(Foo::new());\n-    |                     ^^^^^^^^^^^^^^^^^^^^^ help: try this: `unwrap_or_else(Foo::new)`\n+  --> $DIR/methods.rs:351:21\n+   |\n+LL |     without_default.unwrap_or(Foo::new());\n+   |                     ^^^^^^^^^^^^^^^^^^^^^ help: try this: `unwrap_or_else(Foo::new)`\n \n error: use of `or_insert` followed by a function call\n-   --> $DIR/methods.rs:354:19\n-    |\n-354 |     map.entry(42).or_insert(String::new());\n-    |                   ^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `or_insert_with(String::new)`\n+  --> $DIR/methods.rs:354:19\n+   |\n+LL |     map.entry(42).or_insert(String::new());\n+   |                   ^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `or_insert_with(String::new)`\n \n error: use of `or_insert` followed by a function call\n-   --> $DIR/methods.rs:357:21\n-    |\n-357 |     btree.entry(42).or_insert(String::new());\n-    |                     ^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `or_insert_with(String::new)`\n+  --> $DIR/methods.rs:357:21\n+   |\n+LL |     btree.entry(42).or_insert(String::new());\n+   |                     ^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `or_insert_with(String::new)`\n \n error: use of `unwrap_or` followed by a function call\n-   --> $DIR/methods.rs:360:21\n-    |\n-360 |     let _ = stringy.unwrap_or(\"\".to_owned());\n-    |                     ^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `unwrap_or_else(|| \"\".to_owned())`\n+  --> $DIR/methods.rs:360:21\n+   |\n+LL |     let _ = stringy.unwrap_or(\"\".to_owned());\n+   |                     ^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `unwrap_or_else(|| \"\".to_owned())`\n \n error: called `.iter().nth()` on a Vec. Calling `.get()` is both faster and more readable\n-   --> $DIR/methods.rs:371:23\n-    |\n-371 |         let bad_vec = some_vec.iter().nth(3);\n-    |                       ^^^^^^^^^^^^^^^^^^^^^^\n-    |\n-    = note: `-D clippy::iter-nth` implied by `-D warnings`\n+  --> $DIR/methods.rs:371:23\n+   |\n+LL |         let bad_vec = some_vec.iter().nth(3);\n+   |                       ^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: `-D clippy::iter-nth` implied by `-D warnings`\n \n error: called `.iter().nth()` on a slice. Calling `.get()` is both faster and more readable\n-   --> $DIR/methods.rs:372:26\n-    |\n-372 |         let bad_slice = &some_vec[..].iter().nth(3);\n-    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^\n+  --> $DIR/methods.rs:372:26\n+   |\n+LL |         let bad_slice = &some_vec[..].iter().nth(3);\n+   |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: called `.iter().nth()` on a slice. Calling `.get()` is both faster and more readable\n-   --> $DIR/methods.rs:373:31\n-    |\n-373 |         let bad_boxed_slice = boxed_slice.iter().nth(3);\n-    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^\n+  --> $DIR/methods.rs:373:31\n+   |\n+LL |         let bad_boxed_slice = boxed_slice.iter().nth(3);\n+   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: called `.iter().nth()` on a VecDeque. Calling `.get()` is both faster and more readable\n-   --> $DIR/methods.rs:374:29\n-    |\n-374 |         let bad_vec_deque = some_vec_deque.iter().nth(3);\n-    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+  --> $DIR/methods.rs:374:29\n+   |\n+LL |         let bad_vec_deque = some_vec_deque.iter().nth(3);\n+   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: called `.iter_mut().nth()` on a Vec. Calling `.get_mut()` is both faster and more readable\n-   --> $DIR/methods.rs:379:23\n-    |\n-379 |         let bad_vec = some_vec.iter_mut().nth(3);\n-    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^\n+  --> $DIR/methods.rs:379:23\n+   |\n+LL |         let bad_vec = some_vec.iter_mut().nth(3);\n+   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: called `.iter_mut().nth()` on a slice. Calling `.get_mut()` is both faster and more readable\n-   --> $DIR/methods.rs:382:26\n-    |\n-382 |         let bad_slice = &some_vec[..].iter_mut().nth(3);\n-    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+  --> $DIR/methods.rs:382:26\n+   |\n+LL |         let bad_slice = &some_vec[..].iter_mut().nth(3);\n+   |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: called `.iter_mut().nth()` on a VecDeque. Calling `.get_mut()` is both faster and more readable\n-   --> $DIR/methods.rs:385:29\n-    |\n-385 |         let bad_vec_deque = some_vec_deque.iter_mut().nth(3);\n-    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+  --> $DIR/methods.rs:385:29\n+   |\n+LL |         let bad_vec_deque = some_vec_deque.iter_mut().nth(3);\n+   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: called `skip(x).next()` on an iterator. This is more succinctly expressed by calling `nth(x)`\n-   --> $DIR/methods.rs:397:13\n-    |\n-397 |     let _ = some_vec.iter().skip(42).next();\n-    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-    |\n-    = note: `-D clippy::iter-skip-next` implied by `-D warnings`\n+  --> $DIR/methods.rs:397:13\n+   |\n+LL |     let _ = some_vec.iter().skip(42).next();\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: `-D clippy::iter-skip-next` implied by `-D warnings`\n \n error: called `skip(x).next()` on an iterator. This is more succinctly expressed by calling `nth(x)`\n-   --> $DIR/methods.rs:398:13\n-    |\n-398 |     let _ = some_vec.iter().cycle().skip(42).next();\n-    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+  --> $DIR/methods.rs:398:13\n+   |\n+LL |     let _ = some_vec.iter().cycle().skip(42).next();\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: called `skip(x).next()` on an iterator. This is more succinctly expressed by calling `nth(x)`\n-   --> $DIR/methods.rs:399:13\n-    |\n-399 |     let _ = (1..10).skip(10).next();\n-    |             ^^^^^^^^^^^^^^^^^^^^^^^\n+  --> $DIR/methods.rs:399:13\n+   |\n+LL |     let _ = (1..10).skip(10).next();\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^\n \n error: called `skip(x).next()` on an iterator. This is more succinctly expressed by calling `nth(x)`\n-   --> $DIR/methods.rs:400:14\n-    |\n-400 |     let _ = &some_vec[..].iter().skip(3).next();\n-    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+  --> $DIR/methods.rs:400:14\n+   |\n+LL |     let _ = &some_vec[..].iter().skip(3).next();\n+   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: used unwrap() on an Option value. If you don't want to handle the None case gracefully, consider using expect() to provide a better panic message\n-   --> $DIR/methods.rs:409:13\n-    |\n-409 |     let _ = opt.unwrap();\n-    |             ^^^^^^^^^^^^\n-    |\n-    = note: `-D clippy::option-unwrap-used` implied by `-D warnings`\n+  --> $DIR/methods.rs:409:13\n+   |\n+LL |     let _ = opt.unwrap();\n+   |             ^^^^^^^^^^^^\n+   |\n+   = note: `-D clippy::option-unwrap-used` implied by `-D warnings`\n \n error: aborting due to 50 previous errors\n "}, {"sha": "a6ad34f02b8d6839bf08751d332514bec40ef0d4", "filename": "tests/ui/min_max.stderr", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fmin_max.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fmin_max.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmin_max.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,45 +1,45 @@\n error: this min/max combination leads to constant result\n   --> $DIR/min_max.rs:21:5\n    |\n-21 |     min(1, max(3, x));\n+LL |     min(1, max(3, x));\n    |     ^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::min-max` implied by `-D warnings`\n \n error: this min/max combination leads to constant result\n   --> $DIR/min_max.rs:22:5\n    |\n-22 |     min(max(3, x), 1);\n+LL |     min(max(3, x), 1);\n    |     ^^^^^^^^^^^^^^^^^\n \n error: this min/max combination leads to constant result\n   --> $DIR/min_max.rs:23:5\n    |\n-23 |     max(min(x, 1), 3);\n+LL |     max(min(x, 1), 3);\n    |     ^^^^^^^^^^^^^^^^^\n \n error: this min/max combination leads to constant result\n   --> $DIR/min_max.rs:24:5\n    |\n-24 |     max(3, min(x, 1));\n+LL |     max(3, min(x, 1));\n    |     ^^^^^^^^^^^^^^^^^\n \n error: this min/max combination leads to constant result\n   --> $DIR/min_max.rs:26:5\n    |\n-26 |     my_max(3, my_min(x, 1));\n+LL |     my_max(3, my_min(x, 1));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^\n \n error: this min/max combination leads to constant result\n   --> $DIR/min_max.rs:38:5\n    |\n-38 |     min(\"Apple\", max(\"Zoo\", s));\n+LL |     min(\"Apple\", max(\"Zoo\", s));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: this min/max combination leads to constant result\n   --> $DIR/min_max.rs:39:5\n    |\n-39 |     max(min(s, \"Apple\"), \"Zoo\");\n+LL |     max(min(s, \"Apple\"), \"Zoo\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 7 previous errors"}, {"sha": "35c127862847a05d74b1788444e3c3b3712b09cf", "filename": "tests/ui/missing-doc.stderr", "status": "modified", "additions": 122, "deletions": 122, "changes": 244, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fmissing-doc.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fmissing-doc.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmissing-doc.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,258 +1,258 @@\n error: missing documentation for a type alias\n   --> $DIR/missing-doc.rs:32:1\n    |\n-32 | type Typedef = String;\n+LL | type Typedef = String;\n    | ^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::missing-docs-in-private-items` implied by `-D warnings`\n \n error: missing documentation for a type alias\n   --> $DIR/missing-doc.rs:33:1\n    |\n-33 | pub type PubTypedef = String;\n+LL | pub type PubTypedef = String;\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a struct\n   --> $DIR/missing-doc.rs:35:1\n    |\n-35 | / struct Foo {\n-36 | |     a: isize,\n-37 | |     b: isize,\n-38 | | }\n+LL | / struct Foo {\n+LL | |     a: isize,\n+LL | |     b: isize,\n+LL | | }\n    | |_^\n \n error: missing documentation for a struct field\n   --> $DIR/missing-doc.rs:36:5\n    |\n-36 |     a: isize,\n+LL |     a: isize,\n    |     ^^^^^^^^\n \n error: missing documentation for a struct field\n   --> $DIR/missing-doc.rs:37:5\n    |\n-37 |     b: isize,\n+LL |     b: isize,\n    |     ^^^^^^^^\n \n error: missing documentation for a struct\n   --> $DIR/missing-doc.rs:40:1\n    |\n-40 | / pub struct PubFoo {\n-41 | |     pub a: isize,\n-42 | |     b: isize,\n-43 | | }\n+LL | / pub struct PubFoo {\n+LL | |     pub a: isize,\n+LL | |     b: isize,\n+LL | | }\n    | |_^\n \n error: missing documentation for a struct field\n   --> $DIR/missing-doc.rs:41:5\n    |\n-41 |     pub a: isize,\n+LL |     pub a: isize,\n    |     ^^^^^^^^^^^^\n \n error: missing documentation for a struct field\n   --> $DIR/missing-doc.rs:42:5\n    |\n-42 |     b: isize,\n+LL |     b: isize,\n    |     ^^^^^^^^\n \n error: missing documentation for a module\n   --> $DIR/missing-doc.rs:51:1\n    |\n-51 | mod module_no_dox {}\n+LL | mod module_no_dox {}\n    | ^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a module\n   --> $DIR/missing-doc.rs:52:1\n    |\n-52 | pub mod pub_module_no_dox {}\n+LL | pub mod pub_module_no_dox {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a function\n   --> $DIR/missing-doc.rs:56:1\n    |\n-56 | pub fn foo2() {}\n+LL | pub fn foo2() {}\n    | ^^^^^^^^^^^^^^^^\n \n error: missing documentation for a function\n   --> $DIR/missing-doc.rs:57:1\n    |\n-57 | fn foo3() {}\n+LL | fn foo3() {}\n    | ^^^^^^^^^^^^\n \n error: missing documentation for a trait\n   --> $DIR/missing-doc.rs:75:1\n    |\n-75 | / pub trait C {\n-76 | |     fn foo(&self);\n-77 | |     fn foo_with_impl(&self) {}\n-78 | | }\n+LL | / pub trait C {\n+LL | |     fn foo(&self);\n+LL | |     fn foo_with_impl(&self) {}\n+LL | | }\n    | |_^\n \n error: missing documentation for a trait method\n   --> $DIR/missing-doc.rs:76:5\n    |\n-76 |     fn foo(&self);\n+LL |     fn foo(&self);\n    |     ^^^^^^^^^^^^^^\n \n error: missing documentation for a trait method\n   --> $DIR/missing-doc.rs:77:5\n    |\n-77 |     fn foo_with_impl(&self) {}\n+LL |     fn foo_with_impl(&self) {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for an associated type\n   --> $DIR/missing-doc.rs:87:5\n    |\n-87 |     type AssociatedType;\n+LL |     type AssociatedType;\n    |     ^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for an associated type\n   --> $DIR/missing-doc.rs:88:5\n    |\n-88 |     type AssociatedTypeDef = Self;\n+LL |     type AssociatedTypeDef = Self;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a method\n   --> $DIR/missing-doc.rs:99:5\n    |\n-99 |     pub fn foo() {}\n+LL |     pub fn foo() {}\n    |     ^^^^^^^^^^^^^^^\n \n error: missing documentation for a method\n-   --> $DIR/missing-doc.rs:100:5\n-    |\n-100 |     fn bar() {}\n-    |     ^^^^^^^^^^^\n+  --> $DIR/missing-doc.rs:100:5\n+   |\n+LL |     fn bar() {}\n+   |     ^^^^^^^^^^^\n \n error: missing documentation for a method\n-   --> $DIR/missing-doc.rs:104:5\n-    |\n-104 |     pub fn foo() {}\n-    |     ^^^^^^^^^^^^^^^\n+  --> $DIR/missing-doc.rs:104:5\n+   |\n+LL |     pub fn foo() {}\n+   |     ^^^^^^^^^^^^^^^\n \n error: missing documentation for a method\n-   --> $DIR/missing-doc.rs:107:5\n-    |\n-107 |     fn foo2() {}\n-    |     ^^^^^^^^^^^^\n+  --> $DIR/missing-doc.rs:107:5\n+   |\n+LL |     fn foo2() {}\n+   |     ^^^^^^^^^^^^\n \n error: missing documentation for an enum\n-   --> $DIR/missing-doc.rs:134:1\n-    |\n-134 | / enum Baz {\n-135 | |     BazA { a: isize, b: isize },\n-136 | |     BarB,\n-137 | | }\n-    | |_^\n+  --> $DIR/missing-doc.rs:134:1\n+   |\n+LL | / enum Baz {\n+LL | |     BazA { a: isize, b: isize },\n+LL | |     BarB,\n+LL | | }\n+   | |_^\n \n error: missing documentation for a variant\n-   --> $DIR/missing-doc.rs:135:5\n-    |\n-135 |     BazA { a: isize, b: isize },\n-    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+  --> $DIR/missing-doc.rs:135:5\n+   |\n+LL |     BazA { a: isize, b: isize },\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a struct field\n-   --> $DIR/missing-doc.rs:135:12\n-    |\n-135 |     BazA { a: isize, b: isize },\n-    |            ^^^^^^^^\n+  --> $DIR/missing-doc.rs:135:12\n+   |\n+LL |     BazA { a: isize, b: isize },\n+   |            ^^^^^^^^\n \n error: missing documentation for a struct field\n-   --> $DIR/missing-doc.rs:135:22\n-    |\n-135 |     BazA { a: isize, b: isize },\n-    |                      ^^^^^^^^\n+  --> $DIR/missing-doc.rs:135:22\n+   |\n+LL |     BazA { a: isize, b: isize },\n+   |                      ^^^^^^^^\n \n error: missing documentation for a variant\n-   --> $DIR/missing-doc.rs:136:5\n-    |\n-136 |     BarB,\n-    |     ^^^^\n+  --> $DIR/missing-doc.rs:136:5\n+   |\n+LL |     BarB,\n+   |     ^^^^\n \n error: missing documentation for an enum\n-   --> $DIR/missing-doc.rs:139:1\n-    |\n-139 | / pub enum PubBaz {\n-140 | |     PubBazA { a: isize },\n-141 | | }\n-    | |_^\n+  --> $DIR/missing-doc.rs:139:1\n+   |\n+LL | / pub enum PubBaz {\n+LL | |     PubBazA { a: isize },\n+LL | | }\n+   | |_^\n \n error: missing documentation for a variant\n-   --> $DIR/missing-doc.rs:140:5\n-    |\n-140 |     PubBazA { a: isize },\n-    |     ^^^^^^^^^^^^^^^^^^^^\n+  --> $DIR/missing-doc.rs:140:5\n+   |\n+LL |     PubBazA { a: isize },\n+   |     ^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a struct field\n-   --> $DIR/missing-doc.rs:140:15\n-    |\n-140 |     PubBazA { a: isize },\n-    |               ^^^^^^^^\n+  --> $DIR/missing-doc.rs:140:15\n+   |\n+LL |     PubBazA { a: isize },\n+   |               ^^^^^^^^\n \n error: missing documentation for a constant\n-   --> $DIR/missing-doc.rs:160:1\n-    |\n-160 | const FOO: u32 = 0;\n-    | ^^^^^^^^^^^^^^^^^^^\n+  --> $DIR/missing-doc.rs:160:1\n+   |\n+LL | const FOO: u32 = 0;\n+   | ^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a constant\n-   --> $DIR/missing-doc.rs:167:1\n-    |\n-167 | pub const FOO4: u32 = 0;\n-    | ^^^^^^^^^^^^^^^^^^^^^^^^\n+  --> $DIR/missing-doc.rs:167:1\n+   |\n+LL | pub const FOO4: u32 = 0;\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a static\n-   --> $DIR/missing-doc.rs:169:1\n-    |\n-169 | static BAR: u32 = 0;\n-    | ^^^^^^^^^^^^^^^^^^^^\n+  --> $DIR/missing-doc.rs:169:1\n+   |\n+LL | static BAR: u32 = 0;\n+   | ^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a static\n-   --> $DIR/missing-doc.rs:176:1\n-    |\n-176 | pub static BAR4: u32 = 0;\n-    | ^^^^^^^^^^^^^^^^^^^^^^^^^\n+  --> $DIR/missing-doc.rs:176:1\n+   |\n+LL | pub static BAR4: u32 = 0;\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a module\n-   --> $DIR/missing-doc.rs:178:1\n-    |\n-178 | / mod internal_impl {\n-179 | |     /// dox\n-180 | |     pub fn documented() {}\n-181 | |     pub fn undocumented1() {}\n-...   |\n-190 | |     }\n-191 | | }\n-    | |_^\n+  --> $DIR/missing-doc.rs:178:1\n+   |\n+LL | / mod internal_impl {\n+LL | |     /// dox\n+LL | |     pub fn documented() {}\n+LL | |     pub fn undocumented1() {}\n+...  |\n+LL | |     }\n+LL | | }\n+   | |_^\n \n error: missing documentation for a function\n-   --> $DIR/missing-doc.rs:181:5\n-    |\n-181 |     pub fn undocumented1() {}\n-    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n+  --> $DIR/missing-doc.rs:181:5\n+   |\n+LL |     pub fn undocumented1() {}\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a function\n-   --> $DIR/missing-doc.rs:182:5\n-    |\n-182 |     pub fn undocumented2() {}\n-    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n+  --> $DIR/missing-doc.rs:182:5\n+   |\n+LL |     pub fn undocumented2() {}\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a function\n-   --> $DIR/missing-doc.rs:183:5\n-    |\n-183 |     fn undocumented3() {}\n-    |     ^^^^^^^^^^^^^^^^^^^^^\n+  --> $DIR/missing-doc.rs:183:5\n+   |\n+LL |     fn undocumented3() {}\n+   |     ^^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a function\n-   --> $DIR/missing-doc.rs:188:9\n-    |\n-188 |         pub fn also_undocumented1() {}\n-    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+  --> $DIR/missing-doc.rs:188:9\n+   |\n+LL |         pub fn also_undocumented1() {}\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a function\n-   --> $DIR/missing-doc.rs:189:9\n-    |\n-189 |         fn also_undocumented2() {}\n-    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^\n+  --> $DIR/missing-doc.rs:189:9\n+   |\n+LL |         fn also_undocumented2() {}\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 39 previous errors\n "}, {"sha": "efe9a3b1399dab9884994c76c1c095bb3b250e23", "filename": "tests/ui/missing_inline.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fmissing_inline.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fmissing_inline.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmissing_inline.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,39 +1,39 @@\n error: missing `#[inline]` for a function\n   --> $DIR/missing_inline.rs:40:1\n    |\n-40 | pub fn pub_foo() {} // missing #[inline]\n+LL | pub fn pub_foo() {} // missing #[inline]\n    | ^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::missing-inline-in-public-items` implied by `-D warnings`\n \n error: missing `#[inline]` for a default trait method\n   --> $DIR/missing_inline.rs:56:5\n    |\n-56 |     fn PubBar_b() {} // missing #[inline]\n+LL |     fn PubBar_b() {} // missing #[inline]\n    |     ^^^^^^^^^^^^^^^^\n \n error: missing `#[inline]` for a method\n   --> $DIR/missing_inline.rs:70:5\n    |\n-70 |     fn PubBar_a() {} // missing #[inline]\n+LL |     fn PubBar_a() {} // missing #[inline]\n    |     ^^^^^^^^^^^^^^^^\n \n error: missing `#[inline]` for a method\n   --> $DIR/missing_inline.rs:71:5\n    |\n-71 |     fn PubBar_b() {} // missing #[inline]\n+LL |     fn PubBar_b() {} // missing #[inline]\n    |     ^^^^^^^^^^^^^^^^\n \n error: missing `#[inline]` for a method\n   --> $DIR/missing_inline.rs:72:5\n    |\n-72 |     fn PubBar_c() {} // missing #[inline]\n+LL |     fn PubBar_c() {} // missing #[inline]\n    |     ^^^^^^^^^^^^^^^^\n \n error: missing `#[inline]` for a method\n   --> $DIR/missing_inline.rs:82:5\n    |\n-82 |     pub fn PubFooImpl() {} // missing #[inline]\n+LL |     pub fn PubFooImpl() {} // missing #[inline]\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 6 previous errors"}, {"sha": "f4d4692e259e05f3f960936452f4ab999ea12027", "filename": "tests/ui/module_inception.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fmodule_inception.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fmodule_inception.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmodule_inception.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,19 +1,19 @@\n error: module has the same name as its containing module\n   --> $DIR/module_inception.rs:14:9\n    |\n-14 | /         mod bar {\n-15 | |             mod foo {}\n-16 | |         }\n+LL | /         mod bar {\n+LL | |             mod foo {}\n+LL | |         }\n    | |_________^\n    |\n    = note: `-D clippy::module-inception` implied by `-D warnings`\n \n error: module has the same name as its containing module\n   --> $DIR/module_inception.rs:19:5\n    |\n-19 | /     mod foo {\n-20 | |         mod bar {}\n-21 | |     }\n+LL | /     mod foo {\n+LL | |         mod bar {}\n+LL | |     }\n    | |_____^\n \n error: aborting due to 2 previous errors"}, {"sha": "866156e3b747a406116006ebb8c0751e4b587bd7", "filename": "tests/ui/module_name_repetitions.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fmodule_name_repetitions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fmodule_name_repetitions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmodule_name_repetitions.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,33 +1,33 @@\n error: item name starts with its containing module's name\n   --> $DIR/module_name_repetitions.rs:15:5\n    |\n-15 |     pub fn foo_bar() {}\n+LL |     pub fn foo_bar() {}\n    |     ^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::module-name-repetitions` implied by `-D warnings`\n \n error: item name ends with its containing module's name\n   --> $DIR/module_name_repetitions.rs:16:5\n    |\n-16 |     pub fn bar_foo() {}\n+LL |     pub fn bar_foo() {}\n    |     ^^^^^^^^^^^^^^^^^^^\n \n error: item name starts with its containing module's name\n   --> $DIR/module_name_repetitions.rs:17:5\n    |\n-17 |     pub struct FooCake {}\n+LL |     pub struct FooCake {}\n    |     ^^^^^^^^^^^^^^^^^^^^^\n \n error: item name ends with its containing module's name\n   --> $DIR/module_name_repetitions.rs:18:5\n    |\n-18 |     pub enum CakeFoo {}\n+LL |     pub enum CakeFoo {}\n    |     ^^^^^^^^^^^^^^^^^^^\n \n error: item name starts with its containing module's name\n   --> $DIR/module_name_repetitions.rs:19:5\n    |\n-19 |     pub struct Foo7Bar;\n+LL |     pub struct Foo7Bar;\n    |     ^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 5 previous errors"}, {"sha": "36f06c74077469daa7e02368978e754ac763823b", "filename": "tests/ui/modulo_one.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fmodulo_one.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fmodulo_one.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmodulo_one.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,7 +1,7 @@\n error: any number modulo 1 will be 0\n   --> $DIR/modulo_one.rs:14:5\n    |\n-14 |     10 % 1;\n+LL |     10 % 1;\n    |     ^^^^^^\n    |\n    = note: `-D clippy::modulo-one` implied by `-D warnings`"}, {"sha": "544d1aa5f14b6347d8b2e3535a564a075c6e2e34", "filename": "tests/ui/mut_from_ref.stderr", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fmut_from_ref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fmut_from_ref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmut_from_ref.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,62 +1,62 @@\n error: mutable borrow from immutable input(s)\n   --> $DIR/mut_from_ref.rs:16:39\n    |\n-16 |     fn this_wont_hurt_a_bit(&self) -> &mut Foo {\n+LL |     fn this_wont_hurt_a_bit(&self) -> &mut Foo {\n    |                                       ^^^^^^^^\n    |\n    = note: `-D clippy::mut-from-ref` implied by `-D warnings`\n note: immutable borrow here\n   --> $DIR/mut_from_ref.rs:16:29\n    |\n-16 |     fn this_wont_hurt_a_bit(&self) -> &mut Foo {\n+LL |     fn this_wont_hurt_a_bit(&self) -> &mut Foo {\n    |                             ^^^^^\n \n error: mutable borrow from immutable input(s)\n   --> $DIR/mut_from_ref.rs:22:25\n    |\n-22 |     fn ouch(x: &Foo) -> &mut Foo;\n+LL |     fn ouch(x: &Foo) -> &mut Foo;\n    |                         ^^^^^^^^\n    |\n note: immutable borrow here\n   --> $DIR/mut_from_ref.rs:22:16\n    |\n-22 |     fn ouch(x: &Foo) -> &mut Foo;\n+LL |     fn ouch(x: &Foo) -> &mut Foo;\n    |                ^^^^\n \n error: mutable borrow from immutable input(s)\n   --> $DIR/mut_from_ref.rs:31:21\n    |\n-31 | fn fail(x: &u32) -> &mut u16 {\n+LL | fn fail(x: &u32) -> &mut u16 {\n    |                     ^^^^^^^^\n    |\n note: immutable borrow here\n   --> $DIR/mut_from_ref.rs:31:12\n    |\n-31 | fn fail(x: &u32) -> &mut u16 {\n+LL | fn fail(x: &u32) -> &mut u16 {\n    |            ^^^^\n \n error: mutable borrow from immutable input(s)\n   --> $DIR/mut_from_ref.rs:35:50\n    |\n-35 | fn fail_lifetime<'a>(x: &'a u32, y: &mut u32) -> &'a mut u32 {\n+LL | fn fail_lifetime<'a>(x: &'a u32, y: &mut u32) -> &'a mut u32 {\n    |                                                  ^^^^^^^^^^^\n    |\n note: immutable borrow here\n   --> $DIR/mut_from_ref.rs:35:25\n    |\n-35 | fn fail_lifetime<'a>(x: &'a u32, y: &mut u32) -> &'a mut u32 {\n+LL | fn fail_lifetime<'a>(x: &'a u32, y: &mut u32) -> &'a mut u32 {\n    |                         ^^^^^^^\n \n error: mutable borrow from immutable input(s)\n   --> $DIR/mut_from_ref.rs:39:67\n    |\n-39 | fn fail_double<'a, 'b>(x: &'a u32, y: &'a u32, z: &'b mut u32) -> &'a mut u32 {\n+LL | fn fail_double<'a, 'b>(x: &'a u32, y: &'a u32, z: &'b mut u32) -> &'a mut u32 {\n    |                                                                   ^^^^^^^^^^^\n    |\n note: immutable borrow here\n   --> $DIR/mut_from_ref.rs:39:27\n    |\n-39 | fn fail_double<'a, 'b>(x: &'a u32, y: &'a u32, z: &'b mut u32) -> &'a mut u32 {\n+LL | fn fail_double<'a, 'b>(x: &'a u32, y: &'a u32, z: &'b mut u32) -> &'a mut u32 {\n    |                           ^^^^^^^     ^^^^^^^\n \n error: aborting due to 5 previous errors"}, {"sha": "ed92663756306c7580fb06ea62526404ad957be9", "filename": "tests/ui/mut_mut.stderr", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fmut_mut.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fmut_mut.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmut_mut.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,60 +1,60 @@\n error: generally you want to avoid `&mut &mut _` if possible\n   --> $DIR/mut_mut.rs:13:11\n    |\n-13 | fn fun(x: &mut &mut u32) -> bool {\n+LL | fn fun(x: &mut &mut u32) -> bool {\n    |           ^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::mut-mut` implied by `-D warnings`\n \n error: generally you want to avoid `&mut &mut _` if possible\n   --> $DIR/mut_mut.rs:29:17\n    |\n-29 |     let mut x = &mut &mut 1u32;\n+LL |     let mut x = &mut &mut 1u32;\n    |                 ^^^^^^^^^^^^^^\n \n error: generally you want to avoid `&mut &mut _` if possible\n   --> $DIR/mut_mut.rs:23:9\n    |\n-23 |         &mut $p\n+LL |         &mut $p\n    |         ^^^^^^^\n ...\n-44 |     let mut z = mut_ptr!(&mut 3u32);\n+LL |     let mut z = mut_ptr!(&mut 3u32);\n    |                 ------------------- in this macro invocation\n \n error: this expression mutably borrows a mutable reference. Consider reborrowing\n   --> $DIR/mut_mut.rs:31:21\n    |\n-31 |         let mut y = &mut x;\n+LL |         let mut y = &mut x;\n    |                     ^^^^^^\n \n error: generally you want to avoid `&mut &mut _` if possible\n   --> $DIR/mut_mut.rs:35:32\n    |\n-35 |         let y: &mut &mut u32 = &mut &mut 2;\n+LL |         let y: &mut &mut u32 = &mut &mut 2;\n    |                                ^^^^^^^^^^^\n \n error: generally you want to avoid `&mut &mut _` if possible\n   --> $DIR/mut_mut.rs:35:16\n    |\n-35 |         let y: &mut &mut u32 = &mut &mut 2;\n+LL |         let y: &mut &mut u32 = &mut &mut 2;\n    |                ^^^^^^^^^^^^^\n \n error: generally you want to avoid `&mut &mut _` if possible\n   --> $DIR/mut_mut.rs:40:37\n    |\n-40 |         let y: &mut &mut &mut u32 = &mut &mut &mut 2;\n+LL |         let y: &mut &mut &mut u32 = &mut &mut &mut 2;\n    |                                     ^^^^^^^^^^^^^^^^\n \n error: generally you want to avoid `&mut &mut _` if possible\n   --> $DIR/mut_mut.rs:40:16\n    |\n-40 |         let y: &mut &mut &mut u32 = &mut &mut &mut 2;\n+LL |         let y: &mut &mut &mut u32 = &mut &mut &mut 2;\n    |                ^^^^^^^^^^^^^^^^^^\n \n error: generally you want to avoid `&mut &mut _` if possible\n   --> $DIR/mut_mut.rs:40:21\n    |\n-40 |         let y: &mut &mut &mut u32 = &mut &mut &mut 2;\n+LL |         let y: &mut &mut &mut u32 = &mut &mut &mut 2;\n    |                     ^^^^^^^^^^^^^\n \n error: aborting due to 9 previous errors"}, {"sha": "ce3ae6cb2a591bbc780b122b32eecf31deb73ec1", "filename": "tests/ui/mut_range_bound.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fmut_range_bound.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fmut_range_bound.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmut_range_bound.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,33 +1,33 @@\n error: attempt to mutate range bound within loop; note that the range of the loop is unchanged\n   --> $DIR/mut_range_bound.rs:25:9\n    |\n-25 |         m = 5;\n+LL |         m = 5;\n    |         ^^^^^\n    |\n    = note: `-D clippy::mut-range-bound` implied by `-D warnings`\n \n error: attempt to mutate range bound within loop; note that the range of the loop is unchanged\n   --> $DIR/mut_range_bound.rs:32:9\n    |\n-32 |         m *= 2;\n+LL |         m *= 2;\n    |         ^^^^^^\n \n error: attempt to mutate range bound within loop; note that the range of the loop is unchanged\n   --> $DIR/mut_range_bound.rs:40:9\n    |\n-40 |         m = 5;\n+LL |         m = 5;\n    |         ^^^^^\n \n error: attempt to mutate range bound within loop; note that the range of the loop is unchanged\n   --> $DIR/mut_range_bound.rs:41:9\n    |\n-41 |         n = 7;\n+LL |         n = 7;\n    |         ^^^^^\n \n error: attempt to mutate range bound within loop; note that the range of the loop is unchanged\n   --> $DIR/mut_range_bound.rs:55:22\n    |\n-55 |         let n = &mut m; // warning\n+LL |         let n = &mut m; // warning\n    |                      ^\n \n error: aborting due to 5 previous errors"}, {"sha": "1fe31e26f6ead858c7c58652c20c01dc0da534df", "filename": "tests/ui/mut_reference.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fmut_reference.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fmut_reference.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmut_reference.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,21 +1,21 @@\n error: The function/method `takes_an_immutable_reference` doesn't need a mutable reference\n   --> $DIR/mut_reference.rs:26:34\n    |\n-26 |     takes_an_immutable_reference(&mut 42);\n+LL |     takes_an_immutable_reference(&mut 42);\n    |                                  ^^^^^^^\n    |\n    = note: `-D clippy::unnecessary-mut-passed` implied by `-D warnings`\n \n error: The function/method `as_ptr` doesn't need a mutable reference\n   --> $DIR/mut_reference.rs:28:12\n    |\n-28 |     as_ptr(&mut 42);\n+LL |     as_ptr(&mut 42);\n    |            ^^^^^^^\n \n error: The function/method `takes_an_immutable_reference` doesn't need a mutable reference\n   --> $DIR/mut_reference.rs:32:44\n    |\n-32 |     my_struct.takes_an_immutable_reference(&mut 42);\n+LL |     my_struct.takes_an_immutable_reference(&mut 42);\n    |                                            ^^^^^^^\n \n error: aborting due to 3 previous errors"}, {"sha": "77a05ca13f400a354649dcc669d162b139ffd5a4", "filename": "tests/ui/mutex_atomic.stderr", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fmutex_atomic.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fmutex_atomic.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmutex_atomic.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,47 +1,47 @@\n error: Consider using an AtomicBool instead of a Mutex here. If you just want the locking behaviour and not the internal type, consider using Mutex<()>.\n   --> $DIR/mutex_atomic.rs:15:5\n    |\n-15 |     Mutex::new(true);\n+LL |     Mutex::new(true);\n    |     ^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::mutex-atomic` implied by `-D warnings`\n \n error: Consider using an AtomicUsize instead of a Mutex here. If you just want the locking behaviour and not the internal type, consider using Mutex<()>.\n   --> $DIR/mutex_atomic.rs:16:5\n    |\n-16 |     Mutex::new(5usize);\n+LL |     Mutex::new(5usize);\n    |     ^^^^^^^^^^^^^^^^^^\n \n error: Consider using an AtomicIsize instead of a Mutex here. If you just want the locking behaviour and not the internal type, consider using Mutex<()>.\n   --> $DIR/mutex_atomic.rs:17:5\n    |\n-17 |     Mutex::new(9isize);\n+LL |     Mutex::new(9isize);\n    |     ^^^^^^^^^^^^^^^^^^\n \n error: Consider using an AtomicPtr instead of a Mutex here. If you just want the locking behaviour and not the internal type, consider using Mutex<()>.\n   --> $DIR/mutex_atomic.rs:19:5\n    |\n-19 |     Mutex::new(&x as *const u32);\n+LL |     Mutex::new(&x as *const u32);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: Consider using an AtomicPtr instead of a Mutex here. If you just want the locking behaviour and not the internal type, consider using Mutex<()>.\n   --> $DIR/mutex_atomic.rs:20:5\n    |\n-20 |     Mutex::new(&mut x as *mut u32);\n+LL |     Mutex::new(&mut x as *mut u32);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: Consider using an AtomicUsize instead of a Mutex here. If you just want the locking behaviour and not the internal type, consider using Mutex<()>.\n   --> $DIR/mutex_atomic.rs:21:5\n    |\n-21 |     Mutex::new(0u32);\n+LL |     Mutex::new(0u32);\n    |     ^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::mutex-integer` implied by `-D warnings`\n \n error: Consider using an AtomicIsize instead of a Mutex here. If you just want the locking behaviour and not the internal type, consider using Mutex<()>.\n   --> $DIR/mutex_atomic.rs:22:5\n    |\n-22 |     Mutex::new(0i32);\n+LL |     Mutex::new(0i32);\n    |     ^^^^^^^^^^^^^^^^\n \n error: aborting due to 7 previous errors"}, {"sha": "a0c4ae9561d4e691cc0c94f2639701c715072e1a", "filename": "tests/ui/needless_bool.stderr", "status": "modified", "additions": 85, "deletions": 85, "changes": 170, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fneedless_bool.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fneedless_bool.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_bool.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,140 +1,140 @@\n error: this if-then-else expression will always return true\n   --> $DIR/needless_bool.rs:40:5\n    |\n-40 | /     if x {\n-41 | |         true\n-42 | |     } else {\n-43 | |         true\n-44 | |     };\n+LL | /     if x {\n+LL | |         true\n+LL | |     } else {\n+LL | |         true\n+LL | |     };\n    | |_____^\n    |\n    = note: `-D clippy::needless-bool` implied by `-D warnings`\n \n error: this if-then-else expression will always return false\n   --> $DIR/needless_bool.rs:45:5\n    |\n-45 | /     if x {\n-46 | |         false\n-47 | |     } else {\n-48 | |         false\n-49 | |     };\n+LL | /     if x {\n+LL | |         false\n+LL | |     } else {\n+LL | |         false\n+LL | |     };\n    | |_____^\n \n error: this if-then-else expression returns a bool literal\n   --> $DIR/needless_bool.rs:50:5\n    |\n-50 | /     if x {\n-51 | |         true\n-52 | |     } else {\n-53 | |         false\n-54 | |     };\n+LL | /     if x {\n+LL | |         true\n+LL | |     } else {\n+LL | |         false\n+LL | |     };\n    | |_____^ help: you can reduce it to: `x`\n \n error: this if-then-else expression returns a bool literal\n   --> $DIR/needless_bool.rs:55:5\n    |\n-55 | /     if x {\n-56 | |         false\n-57 | |     } else {\n-58 | |         true\n-59 | |     };\n+LL | /     if x {\n+LL | |         false\n+LL | |     } else {\n+LL | |         true\n+LL | |     };\n    | |_____^ help: you can reduce it to: `!x`\n \n error: this if-then-else expression returns a bool literal\n   --> $DIR/needless_bool.rs:60:5\n    |\n-60 | /     if x && y {\n-61 | |         false\n-62 | |     } else {\n-63 | |         true\n-64 | |     };\n+LL | /     if x && y {\n+LL | |         false\n+LL | |     } else {\n+LL | |         true\n+LL | |     };\n    | |_____^ help: you can reduce it to: `!(x && y)`\n \n error: this if-then-else expression will always return true\n   --> $DIR/needless_bool.rs:83:5\n    |\n-83 | /     if x {\n-84 | |         return true;\n-85 | |     } else {\n-86 | |         return true;\n-87 | |     };\n+LL | /     if x {\n+LL | |         return true;\n+LL | |     } else {\n+LL | |         return true;\n+LL | |     };\n    | |_____^\n \n error: this if-then-else expression will always return false\n   --> $DIR/needless_bool.rs:92:5\n    |\n-92 | /     if x {\n-93 | |         return false;\n-94 | |     } else {\n-95 | |         return false;\n-96 | |     };\n+LL | /     if x {\n+LL | |         return false;\n+LL | |     } else {\n+LL | |         return false;\n+LL | |     };\n    | |_____^\n \n error: this if-then-else expression returns a bool literal\n-   --> $DIR/needless_bool.rs:101:5\n-    |\n-101 | /     if x {\n-102 | |         return true;\n-103 | |     } else {\n-104 | |         return false;\n-105 | |     };\n-    | |_____^ help: you can reduce it to: `return x`\n+  --> $DIR/needless_bool.rs:101:5\n+   |\n+LL | /     if x {\n+LL | |         return true;\n+LL | |     } else {\n+LL | |         return false;\n+LL | |     };\n+   | |_____^ help: you can reduce it to: `return x`\n \n error: this if-then-else expression returns a bool literal\n-   --> $DIR/needless_bool.rs:110:5\n-    |\n-110 | /     if x && y {\n-111 | |         return true;\n-112 | |     } else {\n-113 | |         return false;\n-114 | |     };\n-    | |_____^ help: you can reduce it to: `return x && y`\n+  --> $DIR/needless_bool.rs:110:5\n+   |\n+LL | /     if x && y {\n+LL | |         return true;\n+LL | |     } else {\n+LL | |         return false;\n+LL | |     };\n+   | |_____^ help: you can reduce it to: `return x && y`\n \n error: this if-then-else expression returns a bool literal\n-   --> $DIR/needless_bool.rs:119:5\n-    |\n-119 | /     if x {\n-120 | |         return false;\n-121 | |     } else {\n-122 | |         return true;\n-123 | |     };\n-    | |_____^ help: you can reduce it to: `return !x`\n+  --> $DIR/needless_bool.rs:119:5\n+   |\n+LL | /     if x {\n+LL | |         return false;\n+LL | |     } else {\n+LL | |         return true;\n+LL | |     };\n+   | |_____^ help: you can reduce it to: `return !x`\n \n error: this if-then-else expression returns a bool literal\n-   --> $DIR/needless_bool.rs:128:5\n-    |\n-128 | /     if x && y {\n-129 | |         return false;\n-130 | |     } else {\n-131 | |         return true;\n-132 | |     };\n-    | |_____^ help: you can reduce it to: `return !(x && y)`\n+  --> $DIR/needless_bool.rs:128:5\n+   |\n+LL | /     if x && y {\n+LL | |         return false;\n+LL | |     } else {\n+LL | |         return true;\n+LL | |     };\n+   | |_____^ help: you can reduce it to: `return !(x && y)`\n \n error: equality checks against true are unnecessary\n-   --> $DIR/needless_bool.rs:136:8\n-    |\n-136 |     if x == true {};\n-    |        ^^^^^^^^^ help: try simplifying it as shown: `x`\n-    |\n-    = note: `-D clippy::bool-comparison` implied by `-D warnings`\n+  --> $DIR/needless_bool.rs:136:8\n+   |\n+LL |     if x == true {};\n+   |        ^^^^^^^^^ help: try simplifying it as shown: `x`\n+   |\n+   = note: `-D clippy::bool-comparison` implied by `-D warnings`\n \n error: equality checks against false can be replaced by a negation\n-   --> $DIR/needless_bool.rs:140:8\n-    |\n-140 |     if x == false {};\n-    |        ^^^^^^^^^^ help: try simplifying it as shown: `!x`\n+  --> $DIR/needless_bool.rs:140:8\n+   |\n+LL |     if x == false {};\n+   |        ^^^^^^^^^^ help: try simplifying it as shown: `!x`\n \n error: equality checks against true are unnecessary\n-   --> $DIR/needless_bool.rs:150:8\n-    |\n-150 |     if x == true {};\n-    |        ^^^^^^^^^ help: try simplifying it as shown: `x`\n+  --> $DIR/needless_bool.rs:150:8\n+   |\n+LL |     if x == true {};\n+   |        ^^^^^^^^^ help: try simplifying it as shown: `x`\n \n error: equality checks against false can be replaced by a negation\n-   --> $DIR/needless_bool.rs:151:8\n-    |\n-151 |     if x == false {};\n-    |        ^^^^^^^^^^ help: try simplifying it as shown: `!x`\n+  --> $DIR/needless_bool.rs:151:8\n+   |\n+LL |     if x == false {};\n+   |        ^^^^^^^^^^ help: try simplifying it as shown: `!x`\n \n error: aborting due to 15 previous errors\n "}, {"sha": "ace40665c0c053dfa582ec782e0c202a27b2b20d", "filename": "tests/ui/needless_borrow.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fneedless_borrow.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fneedless_borrow.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_borrow.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,41 +1,41 @@\n error: this expression borrows a reference that is immediately dereferenced by the compiler\n   --> $DIR/needless_borrow.rs:22:15\n    |\n-22 |     let c = x(&&a);\n+LL |     let c = x(&&a);\n    |               ^^^ help: change this to: `&a`\n    |\n    = note: `-D clippy::needless-borrow` implied by `-D warnings`\n \n error: this pattern creates a reference to a reference\n   --> $DIR/needless_borrow.rs:29:17\n    |\n-29 |     if let Some(ref cake) = Some(&5) {}\n+LL |     if let Some(ref cake) = Some(&5) {}\n    |                 ^^^^^^^^ help: change this to: `cake`\n \n error: this expression borrows a reference that is immediately dereferenced by the compiler\n   --> $DIR/needless_borrow.rs:36:15\n    |\n-36 |         46 => &&a,\n+LL |         46 => &&a,\n    |               ^^^ help: change this to: `&a`\n \n error: this pattern takes a reference on something that is being de-referenced\n   --> $DIR/needless_borrow.rs:58:34\n    |\n-58 |     let _ = v.iter_mut().filter(|&ref a| a.is_empty());\n+LL |     let _ = v.iter_mut().filter(|&ref a| a.is_empty());\n    |                                  ^^^^^^ help: try removing the `&ref` part and just keep: `a`\n    |\n    = note: `-D clippy::needless-borrowed-reference` implied by `-D warnings`\n \n error: this pattern takes a reference on something that is being de-referenced\n   --> $DIR/needless_borrow.rs:59:30\n    |\n-59 |     let _ = v.iter().filter(|&ref a| a.is_empty());\n+LL |     let _ = v.iter().filter(|&ref a| a.is_empty());\n    |                              ^^^^^^ help: try removing the `&ref` part and just keep: `a`\n \n error: this pattern creates a reference to a reference\n   --> $DIR/needless_borrow.rs:59:31\n    |\n-59 |     let _ = v.iter().filter(|&ref a| a.is_empty());\n+LL |     let _ = v.iter().filter(|&ref a| a.is_empty());\n    |                               ^^^^^ help: change this to: `a`\n \n error: aborting due to 6 previous errors"}, {"sha": "b7ea9499f38f91ffd178057355ada4d252447d45", "filename": "tests/ui/needless_borrowed_ref.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fneedless_borrowed_ref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fneedless_borrowed_ref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_borrowed_ref.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,27 +1,27 @@\n error: this pattern takes a reference on something that is being de-referenced\n   --> $DIR/needless_borrowed_ref.rs:14:34\n    |\n-14 |     let _ = v.iter_mut().filter(|&ref a| a.is_empty());\n+LL |     let _ = v.iter_mut().filter(|&ref a| a.is_empty());\n    |                                  ^^^^^^ help: try removing the `&ref` part and just keep: `a`\n    |\n    = note: `-D clippy::needless-borrowed-reference` implied by `-D warnings`\n \n error: this pattern takes a reference on something that is being de-referenced\n   --> $DIR/needless_borrowed_ref.rs:19:17\n    |\n-19 |     if let Some(&ref v) = thingy {\n+LL |     if let Some(&ref v) = thingy {\n    |                 ^^^^^^ help: try removing the `&ref` part and just keep: `v`\n \n error: this pattern takes a reference on something that is being de-referenced\n   --> $DIR/needless_borrowed_ref.rs:48:27\n    |\n-48 |         (&Animal::Cat(v), &ref k) | (&ref k, &Animal::Cat(v)) => (), // lifetime mismatch error if there is no '&ref'\n+LL |         (&Animal::Cat(v), &ref k) | (&ref k, &Animal::Cat(v)) => (), // lifetime mismatch error if there is no '&ref'\n    |                           ^^^^^^ help: try removing the `&ref` part and just keep: `k`\n \n error: this pattern takes a reference on something that is being de-referenced\n   --> $DIR/needless_borrowed_ref.rs:48:38\n    |\n-48 |         (&Animal::Cat(v), &ref k) | (&ref k, &Animal::Cat(v)) => (), // lifetime mismatch error if there is no '&ref'\n+LL |         (&Animal::Cat(v), &ref k) | (&ref k, &Animal::Cat(v)) => (), // lifetime mismatch error if there is no '&ref'\n    |                                      ^^^^^^ help: try removing the `&ref` part and just keep: `k`\n \n error: aborting due to 4 previous errors"}, {"sha": "c4cb187c34ecca15a7c1d859238aaf726b8bb140", "filename": "tests/ui/needless_collect.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fneedless_collect.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fneedless_collect.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_collect.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,27 +1,27 @@\n error: avoid using `collect()` when not needed\n   --> $DIR/needless_collect.rs:16:28\n    |\n-16 |     let len = sample.iter().collect::<Vec<_>>().len();\n+LL |     let len = sample.iter().collect::<Vec<_>>().len();\n    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace with: `.count()`\n    |\n    = note: `-D clippy::needless-collect` implied by `-D warnings`\n \n error: avoid using `collect()` when not needed\n   --> $DIR/needless_collect.rs:17:21\n    |\n-17 |     if sample.iter().collect::<Vec<_>>().is_empty() {\n+LL |     if sample.iter().collect::<Vec<_>>().is_empty() {\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace with: `.next().is_none()`\n \n error: avoid using `collect()` when not needed\n   --> $DIR/needless_collect.rs:20:27\n    |\n-20 |     sample.iter().cloned().collect::<Vec<_>>().contains(&1);\n+LL |     sample.iter().cloned().collect::<Vec<_>>().contains(&1);\n    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace with: `.any(|&x| x == 1)`\n \n error: avoid using `collect()` when not needed\n   --> $DIR/needless_collect.rs:21:34\n    |\n-21 |     sample.iter().map(|x| (x, x)).collect::<HashMap<_, _>>().len();\n+LL |     sample.iter().map(|x| (x, x)).collect::<HashMap<_, _>>().len();\n    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace with: `.count()`\n \n error: aborting due to 4 previous errors"}, {"sha": "60c853c18ad3cbcda89fbb7521ea3d68a6455e15", "filename": "tests/ui/needless_continue.stderr", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fneedless_continue.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fneedless_continue.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_continue.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -2,10 +2,10 @@ error: This else block is redundant.\n \n   --> $DIR/needless_continue.rs:36:16\n    |\n-36 |           } else {\n+LL |           } else {\n    |  ________________^\n-37 | |             continue;\n-38 | |         }\n+LL | |             continue;\n+LL | |         }\n    | |_________^\n    |\n    = note: `-D clippy::needless-continue` implied by `-D warnings`\n@@ -39,12 +39,12 @@ error: There is no need for an explicit `else` block for this `if` expression\n \n   --> $DIR/needless_continue.rs:51:9\n    |\n-51 | /         if (zero!(i % 2) || nonzero!(i % 5)) && i % 3 != 0 {\n-52 | |             continue;\n-53 | |         } else {\n-54 | |             println!(\"Blabber\");\n-55 | |             println!(\"Jabber\");\n-56 | |         }\n+LL | /         if (zero!(i % 2) || nonzero!(i % 5)) && i % 3 != 0 {\n+LL | |             continue;\n+LL | |         } else {\n+LL | |             println!(\"Blabber\");\n+LL | |             println!(\"Jabber\");\n+LL | |         }\n    | |_________^\n    |\n    = help: Consider dropping the else clause, and moving out the code in the else block, like so:"}, {"sha": "d9ce5909172727b7956c61972e0d2a448b23f9d6", "filename": "tests/ui/needless_pass_by_value.stderr", "status": "modified", "additions": 94, "deletions": 94, "changes": 188, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fneedless_pass_by_value.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fneedless_pass_by_value.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_pass_by_value.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,200 +1,200 @@\n error: this argument is passed by value, but not consumed in the function body\n   --> $DIR/needless_pass_by_value.rs:24:23\n    |\n-24 | fn foo<T: Default>(v: Vec<T>, w: Vec<T>, mut x: Vec<T>, y: Vec<T>) -> Vec<T> {\n+LL | fn foo<T: Default>(v: Vec<T>, w: Vec<T>, mut x: Vec<T>, y: Vec<T>) -> Vec<T> {\n    |                       ^^^^^^ help: consider changing the type to: `&[T]`\n    |\n    = note: `-D clippy::needless-pass-by-value` implied by `-D warnings`\n \n error: this argument is passed by value, but not consumed in the function body\n   --> $DIR/needless_pass_by_value.rs:38:11\n    |\n-38 | fn bar(x: String, y: Wrapper) {\n+LL | fn bar(x: String, y: Wrapper) {\n    |           ^^^^^^ help: consider changing the type to: `&str`\n \n error: this argument is passed by value, but not consumed in the function body\n   --> $DIR/needless_pass_by_value.rs:38:22\n    |\n-38 | fn bar(x: String, y: Wrapper) {\n+LL | fn bar(x: String, y: Wrapper) {\n    |                      ^^^^^^^ help: consider taking a reference instead: `&Wrapper`\n \n error: this argument is passed by value, but not consumed in the function body\n   --> $DIR/needless_pass_by_value.rs:44:71\n    |\n-44 | fn test_borrow_trait<T: Borrow<str>, U: AsRef<str>, V>(t: T, u: U, v: V) {\n+LL | fn test_borrow_trait<T: Borrow<str>, U: AsRef<str>, V>(t: T, u: U, v: V) {\n    |                                                                       ^ help: consider taking a reference instead: `&V`\n \n error: this argument is passed by value, but not consumed in the function body\n   --> $DIR/needless_pass_by_value.rs:56:18\n    |\n-56 | fn test_match(x: Option<Option<String>>, y: Option<Option<String>>) {\n+LL | fn test_match(x: Option<Option<String>>, y: Option<Option<String>>) {\n    |                  ^^^^^^^^^^^^^^^^^^^^^^\n help: consider taking a reference instead\n    |\n-56 | fn test_match(x: &Option<Option<String>>, y: Option<Option<String>>) {\n-57 |     match *x {\n+LL | fn test_match(x: &Option<Option<String>>, y: Option<Option<String>>) {\n+LL |     match *x {\n    |\n \n error: this argument is passed by value, but not consumed in the function body\n   --> $DIR/needless_pass_by_value.rs:69:24\n    |\n-69 | fn test_destructure(x: Wrapper, y: Wrapper, z: Wrapper) {\n+LL | fn test_destructure(x: Wrapper, y: Wrapper, z: Wrapper) {\n    |                        ^^^^^^^ help: consider taking a reference instead: `&Wrapper`\n \n error: this argument is passed by value, but not consumed in the function body\n   --> $DIR/needless_pass_by_value.rs:69:36\n    |\n-69 | fn test_destructure(x: Wrapper, y: Wrapper, z: Wrapper) {\n+LL | fn test_destructure(x: Wrapper, y: Wrapper, z: Wrapper) {\n    |                                    ^^^^^^^\n help: consider taking a reference instead\n    |\n-69 | fn test_destructure(x: Wrapper, y: &Wrapper, z: Wrapper) {\n-70 |     let Wrapper(s) = z; // moved\n-71 |     let Wrapper(ref t) = *y; // not moved\n-72 |     let Wrapper(_) = *y; // still not moved\n+LL | fn test_destructure(x: Wrapper, y: &Wrapper, z: Wrapper) {\n+LL |     let Wrapper(s) = z; // moved\n+LL |     let Wrapper(ref t) = *y; // not moved\n+LL |     let Wrapper(_) = *y; // still not moved\n    |\n \n error: this argument is passed by value, but not consumed in the function body\n   --> $DIR/needless_pass_by_value.rs:85:49\n    |\n-85 | fn test_blanket_ref<T: Foo, S: Serialize>(_foo: T, _serializable: S) {}\n+LL | fn test_blanket_ref<T: Foo, S: Serialize>(_foo: T, _serializable: S) {}\n    |                                                 ^ help: consider taking a reference instead: `&T`\n \n error: this argument is passed by value, but not consumed in the function body\n   --> $DIR/needless_pass_by_value.rs:87:18\n    |\n-87 | fn issue_2114(s: String, t: String, u: Vec<i32>, v: Vec<i32>) {\n+LL | fn issue_2114(s: String, t: String, u: Vec<i32>, v: Vec<i32>) {\n    |                  ^^^^^^ help: consider taking a reference instead: `&String`\n \n error: this argument is passed by value, but not consumed in the function body\n   --> $DIR/needless_pass_by_value.rs:87:29\n    |\n-87 | fn issue_2114(s: String, t: String, u: Vec<i32>, v: Vec<i32>) {\n+LL | fn issue_2114(s: String, t: String, u: Vec<i32>, v: Vec<i32>) {\n    |                             ^^^^^^\n help: consider changing the type to\n    |\n-87 | fn issue_2114(s: String, t: &str, u: Vec<i32>, v: Vec<i32>) {\n+LL | fn issue_2114(s: String, t: &str, u: Vec<i32>, v: Vec<i32>) {\n    |                             ^^^^\n help: change `t.clone()` to\n    |\n-89 |     let _ = t.to_string();\n+LL |     let _ = t.to_string();\n    |             ^^^^^^^^^^^^^\n \n error: this argument is passed by value, but not consumed in the function body\n   --> $DIR/needless_pass_by_value.rs:87:40\n    |\n-87 | fn issue_2114(s: String, t: String, u: Vec<i32>, v: Vec<i32>) {\n+LL | fn issue_2114(s: String, t: String, u: Vec<i32>, v: Vec<i32>) {\n    |                                        ^^^^^^^^ help: consider taking a reference instead: `&Vec<i32>`\n \n error: this argument is passed by value, but not consumed in the function body\n   --> $DIR/needless_pass_by_value.rs:87:53\n    |\n-87 | fn issue_2114(s: String, t: String, u: Vec<i32>, v: Vec<i32>) {\n+LL | fn issue_2114(s: String, t: String, u: Vec<i32>, v: Vec<i32>) {\n    |                                                     ^^^^^^^^\n help: consider changing the type to\n    |\n-87 | fn issue_2114(s: String, t: String, u: Vec<i32>, v: &[i32]) {\n+LL | fn issue_2114(s: String, t: String, u: Vec<i32>, v: &[i32]) {\n    |                                                     ^^^^^^\n help: change `v.clone()` to\n    |\n-91 |     let _ = v.to_owned();\n+LL |     let _ = v.to_owned();\n    |             ^^^^^^^^^^^^\n \n error: this argument is passed by value, but not consumed in the function body\n-   --> $DIR/needless_pass_by_value.rs:100:12\n-    |\n-100 |         s: String,\n-    |            ^^^^^^ help: consider changing the type to: `&str`\n+  --> $DIR/needless_pass_by_value.rs:100:12\n+   |\n+LL |         s: String,\n+   |            ^^^^^^ help: consider changing the type to: `&str`\n \n error: this argument is passed by value, but not consumed in the function body\n-   --> $DIR/needless_pass_by_value.rs:101:12\n-    |\n-101 |         t: String,\n-    |            ^^^^^^ help: consider taking a reference instead: `&String`\n+  --> $DIR/needless_pass_by_value.rs:101:12\n+   |\n+LL |         t: String,\n+   |            ^^^^^^ help: consider taking a reference instead: `&String`\n \n error: this argument is passed by value, but not consumed in the function body\n-   --> $DIR/needless_pass_by_value.rs:110:23\n-    |\n-110 |     fn baz(&self, _u: U, _s: Self) {}\n-    |                       ^ help: consider taking a reference instead: `&U`\n+  --> $DIR/needless_pass_by_value.rs:110:23\n+   |\n+LL |     fn baz(&self, _u: U, _s: Self) {}\n+   |                       ^ help: consider taking a reference instead: `&U`\n \n error: this argument is passed by value, but not consumed in the function body\n-   --> $DIR/needless_pass_by_value.rs:110:30\n-    |\n-110 |     fn baz(&self, _u: U, _s: Self) {}\n-    |                              ^^^^ help: consider taking a reference instead: `&Self`\n+  --> $DIR/needless_pass_by_value.rs:110:30\n+   |\n+LL |     fn baz(&self, _u: U, _s: Self) {}\n+   |                              ^^^^ help: consider taking a reference instead: `&Self`\n \n error: this argument is passed by value, but not consumed in the function body\n-   --> $DIR/needless_pass_by_value.rs:132:24\n-    |\n-132 | fn bar_copy(x: u32, y: CopyWrapper) {\n-    |                        ^^^^^^^^^^^ help: consider taking a reference instead: `&CopyWrapper`\n-    |\n+  --> $DIR/needless_pass_by_value.rs:132:24\n+   |\n+LL | fn bar_copy(x: u32, y: CopyWrapper) {\n+   |                        ^^^^^^^^^^^ help: consider taking a reference instead: `&CopyWrapper`\n+   |\n help: consider marking this type as Copy\n-   --> $DIR/needless_pass_by_value.rs:130:1\n-    |\n-130 | struct CopyWrapper(u32);\n-    | ^^^^^^^^^^^^^^^^^^^^^^^^\n+  --> $DIR/needless_pass_by_value.rs:130:1\n+   |\n+LL | struct CopyWrapper(u32);\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: this argument is passed by value, but not consumed in the function body\n-   --> $DIR/needless_pass_by_value.rs:138:29\n-    |\n-138 | fn test_destructure_copy(x: CopyWrapper, y: CopyWrapper, z: CopyWrapper) {\n-    |                             ^^^^^^^^^^^ help: consider taking a reference instead: `&CopyWrapper`\n-    |\n+  --> $DIR/needless_pass_by_value.rs:138:29\n+   |\n+LL | fn test_destructure_copy(x: CopyWrapper, y: CopyWrapper, z: CopyWrapper) {\n+   |                             ^^^^^^^^^^^ help: consider taking a reference instead: `&CopyWrapper`\n+   |\n help: consider marking this type as Copy\n-   --> $DIR/needless_pass_by_value.rs:130:1\n-    |\n-130 | struct CopyWrapper(u32);\n-    | ^^^^^^^^^^^^^^^^^^^^^^^^\n+  --> $DIR/needless_pass_by_value.rs:130:1\n+   |\n+LL | struct CopyWrapper(u32);\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: this argument is passed by value, but not consumed in the function body\n-   --> $DIR/needless_pass_by_value.rs:138:45\n-    |\n-138 | fn test_destructure_copy(x: CopyWrapper, y: CopyWrapper, z: CopyWrapper) {\n-    |                                             ^^^^^^^^^^^\n-    |\n+  --> $DIR/needless_pass_by_value.rs:138:45\n+   |\n+LL | fn test_destructure_copy(x: CopyWrapper, y: CopyWrapper, z: CopyWrapper) {\n+   |                                             ^^^^^^^^^^^\n+   |\n help: consider marking this type as Copy\n-   --> $DIR/needless_pass_by_value.rs:130:1\n-    |\n-130 | struct CopyWrapper(u32);\n-    | ^^^^^^^^^^^^^^^^^^^^^^^^\n+  --> $DIR/needless_pass_by_value.rs:130:1\n+   |\n+LL | struct CopyWrapper(u32);\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^\n help: consider taking a reference instead\n-    |\n-138 | fn test_destructure_copy(x: CopyWrapper, y: &CopyWrapper, z: CopyWrapper) {\n-139 |     let CopyWrapper(s) = z; // moved\n-140 |     let CopyWrapper(ref t) = *y; // not moved\n-141 |     let CopyWrapper(_) = *y; // still not moved\n-    |\n-\n-error: this argument is passed by value, but not consumed in the function body\n-   --> $DIR/needless_pass_by_value.rs:138:61\n-    |\n-138 | fn test_destructure_copy(x: CopyWrapper, y: CopyWrapper, z: CopyWrapper) {\n-    |                                                             ^^^^^^^^^^^\n-    |\n+   |\n+LL | fn test_destructure_copy(x: CopyWrapper, y: &CopyWrapper, z: CopyWrapper) {\n+LL |     let CopyWrapper(s) = z; // moved\n+LL |     let CopyWrapper(ref t) = *y; // not moved\n+LL |     let CopyWrapper(_) = *y; // still not moved\n+   |\n+\n+error: this argument is passed by value, but not consumed in the function body\n+  --> $DIR/needless_pass_by_value.rs:138:61\n+   |\n+LL | fn test_destructure_copy(x: CopyWrapper, y: CopyWrapper, z: CopyWrapper) {\n+   |                                                             ^^^^^^^^^^^\n+   |\n help: consider marking this type as Copy\n-   --> $DIR/needless_pass_by_value.rs:130:1\n-    |\n-130 | struct CopyWrapper(u32);\n-    | ^^^^^^^^^^^^^^^^^^^^^^^^\n+  --> $DIR/needless_pass_by_value.rs:130:1\n+   |\n+LL | struct CopyWrapper(u32);\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^\n help: consider taking a reference instead\n-    |\n-138 | fn test_destructure_copy(x: CopyWrapper, y: CopyWrapper, z: &CopyWrapper) {\n-139 |     let CopyWrapper(s) = *z; // moved\n-    |\n+   |\n+LL | fn test_destructure_copy(x: CopyWrapper, y: CopyWrapper, z: &CopyWrapper) {\n+LL |     let CopyWrapper(s) = *z; // moved\n+   |\n \n error: this argument is passed by value, but not consumed in the function body\n-   --> $DIR/needless_pass_by_value.rs:150:40\n-    |\n-150 | fn some_fun<'b, S: Bar<'b, ()>>(_item: S) {}\n-    |                                        ^ help: consider taking a reference instead: `&S`\n+  --> $DIR/needless_pass_by_value.rs:150:40\n+   |\n+LL | fn some_fun<'b, S: Bar<'b, ()>>(_item: S) {}\n+   |                                        ^ help: consider taking a reference instead: `&S`\n \n error: this argument is passed by value, but not consumed in the function body\n-   --> $DIR/needless_pass_by_value.rs:155:20\n-    |\n-155 | fn more_fun(_item: impl Club<'static, i32>) {}\n-    |                    ^^^^^^^^^^^^^^^^^^^^^^^ help: consider taking a reference instead: `&impl Club<'static, i32>`\n+  --> $DIR/needless_pass_by_value.rs:155:20\n+   |\n+LL | fn more_fun(_item: impl Club<'static, i32>) {}\n+   |                    ^^^^^^^^^^^^^^^^^^^^^^^ help: consider taking a reference instead: `&impl Club<'static, i32>`\n \n error: aborting due to 22 previous errors\n "}, {"sha": "73b1d9841eb83eb42f85d4aa0b6ec4145a1516fb", "filename": "tests/ui/needless_range_loop.stderr", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fneedless_range_loop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fneedless_range_loop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_range_loop.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,83 +1,83 @@\n error: the loop variable `i` is only used to index `ns`.\n   --> $DIR/needless_range_loop.rs:17:14\n    |\n-17 |     for i in 3..10 {\n+LL |     for i in 3..10 {\n    |              ^^^^^\n    |\n    = note: `-D clippy::needless-range-loop` implied by `-D warnings`\n help: consider using an iterator\n    |\n-17 |     for <item> in ns.iter().take(10).skip(3) {\n+LL |     for <item> in ns.iter().take(10).skip(3) {\n    |         ^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: the loop variable `i` is only used to index `ms`.\n   --> $DIR/needless_range_loop.rs:38:14\n    |\n-38 |     for i in 0..ms.len() {\n+LL |     for i in 0..ms.len() {\n    |              ^^^^^^^^^^^\n help: consider using an iterator\n    |\n-38 |     for <item> in &mut ms {\n+LL |     for <item> in &mut ms {\n    |         ^^^^^^    ^^^^^^^\n \n error: the loop variable `i` is only used to index `ms`.\n   --> $DIR/needless_range_loop.rs:44:14\n    |\n-44 |     for i in 0..ms.len() {\n+LL |     for i in 0..ms.len() {\n    |              ^^^^^^^^^^^\n help: consider using an iterator\n    |\n-44 |     for <item> in &mut ms {\n+LL |     for <item> in &mut ms {\n    |         ^^^^^^    ^^^^^^^\n \n error: the loop variable `i` is only used to index `vec`.\n   --> $DIR/needless_range_loop.rs:68:14\n    |\n-68 |     for i in x..x + 4 {\n+LL |     for i in x..x + 4 {\n    |              ^^^^^^^^\n help: consider using an iterator\n    |\n-68 |     for <item> in vec.iter_mut().skip(x).take(4) {\n+LL |     for <item> in vec.iter_mut().skip(x).take(4) {\n    |         ^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: the loop variable `i` is only used to index `vec`.\n   --> $DIR/needless_range_loop.rs:75:14\n    |\n-75 |     for i in x..=x + 4 {\n+LL |     for i in x..=x + 4 {\n    |              ^^^^^^^^^\n help: consider using an iterator\n    |\n-75 |     for <item> in vec.iter_mut().skip(x).take(4 + 1) {\n+LL |     for <item> in vec.iter_mut().skip(x).take(4 + 1) {\n    |         ^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: the loop variable `i` is only used to index `arr`.\n   --> $DIR/needless_range_loop.rs:81:14\n    |\n-81 |     for i in 0..3 {\n+LL |     for i in 0..3 {\n    |              ^^^^\n help: consider using an iterator\n    |\n-81 |     for <item> in &arr {\n+LL |     for <item> in &arr {\n    |         ^^^^^^    ^^^^\n \n error: the loop variable `i` is only used to index `arr`.\n   --> $DIR/needless_range_loop.rs:85:14\n    |\n-85 |     for i in 0..2 {\n+LL |     for i in 0..2 {\n    |              ^^^^\n help: consider using an iterator\n    |\n-85 |     for <item> in arr.iter().take(2) {\n+LL |     for <item> in arr.iter().take(2) {\n    |         ^^^^^^    ^^^^^^^^^^^^^^^^^^\n \n error: the loop variable `i` is only used to index `arr`.\n   --> $DIR/needless_range_loop.rs:89:14\n    |\n-89 |     for i in 1..3 {\n+LL |     for i in 1..3 {\n    |              ^^^^\n help: consider using an iterator\n    |\n-89 |     for <item> in arr.iter().skip(1) {\n+LL |     for <item> in arr.iter().skip(1) {\n    |         ^^^^^^    ^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 8 previous errors"}, {"sha": "bf1083862ed0371893481a987e48fb9a381f8eaa", "filename": "tests/ui/needless_return.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fneedless_return.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fneedless_return.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_return.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,51 +1,51 @@\n error: unneeded return statement\n   --> $DIR/needless_return.rs:17:5\n    |\n-17 |     return true;\n+LL |     return true;\n    |     ^^^^^^^^^^^^ help: remove `return` as shown: `true`\n    |\n    = note: `-D clippy::needless-return` implied by `-D warnings`\n \n error: unneeded return statement\n   --> $DIR/needless_return.rs:21:5\n    |\n-21 |     return true;\n+LL |     return true;\n    |     ^^^^^^^^^^^^ help: remove `return` as shown: `true`\n \n error: unneeded return statement\n   --> $DIR/needless_return.rs:26:9\n    |\n-26 |         return true;\n+LL |         return true;\n    |         ^^^^^^^^^^^^ help: remove `return` as shown: `true`\n \n error: unneeded return statement\n   --> $DIR/needless_return.rs:28:9\n    |\n-28 |         return false;\n+LL |         return false;\n    |         ^^^^^^^^^^^^^ help: remove `return` as shown: `false`\n \n error: unneeded return statement\n   --> $DIR/needless_return.rs:34:17\n    |\n-34 |         true => return false,\n+LL |         true => return false,\n    |                 ^^^^^^^^^^^^ help: remove `return` as shown: `false`\n \n error: unneeded return statement\n   --> $DIR/needless_return.rs:36:13\n    |\n-36 |             return true;\n+LL |             return true;\n    |             ^^^^^^^^^^^^ help: remove `return` as shown: `true`\n \n error: unneeded return statement\n   --> $DIR/needless_return.rs:43:9\n    |\n-43 |         return true;\n+LL |         return true;\n    |         ^^^^^^^^^^^^ help: remove `return` as shown: `true`\n \n error: unneeded return statement\n   --> $DIR/needless_return.rs:45:16\n    |\n-45 |     let _ = || return true;\n+LL |     let _ = || return true;\n    |                ^^^^^^^^^^^ help: remove `return` as shown: `true`\n \n error: aborting due to 8 previous errors"}, {"sha": "6c4ea68771b3a24f0ec6d2ae7c0b8c498226dfe7", "filename": "tests/ui/needless_update.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fneedless_update.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fneedless_update.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_update.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,7 +1,7 @@\n error: struct update has no effect, all the fields in the struct have already been specified\n   --> $DIR/needless_update.rs:22:23\n    |\n-22 |     S { a: 1, b: 1, ..base };\n+LL |     S { a: 1, b: 1, ..base };\n    |                       ^^^^\n    |\n    = note: `-D clippy::needless-update` implied by `-D warnings`"}, {"sha": "f1df2b1d98a456e56f15c41f71737e3a58051b8e", "filename": "tests/ui/neg_cmp_op_on_partial_ord.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fneg_cmp_op_on_partial_ord.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fneg_cmp_op_on_partial_ord.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneg_cmp_op_on_partial_ord.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,27 +1,27 @@\n error: The use of negated comparison operators on partially ordered types produces code that is hard to read and refactor. Please consider using the `partial_cmp` method instead, to make it clear that the two values could be incomparable.\n   --> $DIR/neg_cmp_op_on_partial_ord.rs:24:21\n    |\n-24 |     let _not_less = !(a_value < another_value);\n+LL |     let _not_less = !(a_value < another_value);\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::neg-cmp-op-on-partial-ord` implied by `-D warnings`\n \n error: The use of negated comparison operators on partially ordered types produces code that is hard to read and refactor. Please consider using the `partial_cmp` method instead, to make it clear that the two values could be incomparable.\n   --> $DIR/neg_cmp_op_on_partial_ord.rs:27:30\n    |\n-27 |     let _not_less_or_equal = !(a_value <= another_value);\n+LL |     let _not_less_or_equal = !(a_value <= another_value);\n    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: The use of negated comparison operators on partially ordered types produces code that is hard to read and refactor. Please consider using the `partial_cmp` method instead, to make it clear that the two values could be incomparable.\n   --> $DIR/neg_cmp_op_on_partial_ord.rs:30:24\n    |\n-30 |     let _not_greater = !(a_value > another_value);\n+LL |     let _not_greater = !(a_value > another_value);\n    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: The use of negated comparison operators on partially ordered types produces code that is hard to read and refactor. Please consider using the `partial_cmp` method instead, to make it clear that the two values could be incomparable.\n   --> $DIR/neg_cmp_op_on_partial_ord.rs:33:33\n    |\n-33 |     let _not_greater_or_equal = !(a_value >= another_value);\n+LL |     let _not_greater_or_equal = !(a_value >= another_value);\n    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 4 previous errors"}, {"sha": "4c6d8e8d5dda02658f745773d1f844f7d397f4d9", "filename": "tests/ui/neg_multiply.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fneg_multiply.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fneg_multiply.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneg_multiply.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,15 +1,15 @@\n error: Negation by multiplying with -1\n   --> $DIR/neg_multiply.rs:36:5\n    |\n-36 |     x * -1;\n+LL |     x * -1;\n    |     ^^^^^^\n    |\n    = note: `-D clippy::neg-multiply` implied by `-D warnings`\n \n error: Negation by multiplying with -1\n   --> $DIR/neg_multiply.rs:38:5\n    |\n-38 |     -1 * x;\n+LL |     -1 * x;\n    |     ^^^^^^\n \n error: aborting due to 2 previous errors"}, {"sha": "95b1a04e78375e7c5243257df3906ae1cf0b5e05", "filename": "tests/ui/never_loop.stderr", "status": "modified", "additions": 61, "deletions": 61, "changes": 122, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fnever_loop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fnever_loop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fnever_loop.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,100 +1,100 @@\n error: this loop never actually loops\n   --> $DIR/never_loop.rs:19:5\n    |\n-19 | /     loop {\n-20 | |         // clippy::never_loop\n-21 | |         x += 1;\n-22 | |         if x == 1 {\n+LL | /     loop {\n+LL | |         // clippy::never_loop\n+LL | |         x += 1;\n+LL | |         if x == 1 {\n ...  |\n-25 | |         break;\n-26 | |     }\n+LL | |         break;\n+LL | |     }\n    | |_____^\n    |\n    = note: #[deny(clippy::never_loop)] on by default\n \n error: this loop never actually loops\n   --> $DIR/never_loop.rs:41:5\n    |\n-41 | /     loop {\n-42 | |         // never loops\n-43 | |         x += 1;\n-44 | |         break;\n-45 | |     }\n+LL | /     loop {\n+LL | |         // never loops\n+LL | |         x += 1;\n+LL | |         break;\n+LL | |     }\n    | |_____^\n \n error: this loop never actually loops\n   --> $DIR/never_loop.rs:61:5\n    |\n-61 | /     loop {\n-62 | |         // never loops\n-63 | |         while i == 0 {\n-64 | |             // never loops\n+LL | /     loop {\n+LL | |         // never loops\n+LL | |         while i == 0 {\n+LL | |             // never loops\n ...  |\n-67 | |         return;\n-68 | |     }\n+LL | |         return;\n+LL | |     }\n    | |_____^\n \n error: this loop never actually loops\n   --> $DIR/never_loop.rs:63:9\n    |\n-63 | /         while i == 0 {\n-64 | |             // never loops\n-65 | |             break;\n-66 | |         }\n+LL | /         while i == 0 {\n+LL | |             // never loops\n+LL | |             break;\n+LL | |         }\n    | |_________^\n \n error: this loop never actually loops\n   --> $DIR/never_loop.rs:75:9\n    |\n-75 | /         loop {\n-76 | |             // never loops\n-77 | |             if x == 5 {\n-78 | |                 break;\n-79 | |             }\n-80 | |             continue 'outer;\n-81 | |         }\n+LL | /         loop {\n+LL | |             // never loops\n+LL | |             if x == 5 {\n+LL | |                 break;\n+LL | |             }\n+LL | |             continue 'outer;\n+LL | |         }\n    | |_________^\n \n error: this loop never actually loops\n-   --> $DIR/never_loop.rs:111:5\n-    |\n-111 | /     while let Some(y) = x {\n-112 | |         // never loops\n-113 | |         return;\n-114 | |     }\n-    | |_____^\n+  --> $DIR/never_loop.rs:111:5\n+   |\n+LL | /     while let Some(y) = x {\n+LL | |         // never loops\n+LL | |         return;\n+LL | |     }\n+   | |_____^\n \n error: this loop never actually loops\n-   --> $DIR/never_loop.rs:118:5\n-    |\n-118 | /     for x in 0..10 {\n-119 | |         // never loops\n-120 | |         match x {\n-121 | |             1 => break,\n-122 | |             _ => return,\n-123 | |         }\n-124 | |     }\n-    | |_____^\n+  --> $DIR/never_loop.rs:118:5\n+   |\n+LL | /     for x in 0..10 {\n+LL | |         // never loops\n+LL | |         match x {\n+LL | |             1 => break,\n+LL | |             _ => return,\n+LL | |         }\n+LL | |     }\n+   | |_____^\n \n error: this loop never actually loops\n-   --> $DIR/never_loop.rs:166:5\n-    |\n-166 | /     'outer: while a {\n-167 | |         // never loops\n-168 | |         while a {\n-169 | |             if a {\n-...   |\n-174 | |         break 'outer;\n-175 | |     }\n-    | |_____^\n+  --> $DIR/never_loop.rs:166:5\n+   |\n+LL | /     'outer: while a {\n+LL | |         // never loops\n+LL | |         while a {\n+LL | |             if a {\n+...  |\n+LL | |         break 'outer;\n+LL | |     }\n+   | |_____^\n \n error: this loop never actually loops\n-   --> $DIR/never_loop.rs:181:9\n-    |\n-181 | /         while false {\n-182 | |             break 'label;\n-183 | |         }\n-    | |_________^\n+  --> $DIR/never_loop.rs:181:9\n+   |\n+LL | /         while false {\n+LL | |             break 'label;\n+LL | |         }\n+   | |_________^\n \n error: aborting due to 9 previous errors\n "}, {"sha": "dd5a24bcbe7aed4c1ba4b792942ecac8f8cf9ea2", "filename": "tests/ui/new_ret_no_self.stderr", "status": "modified", "additions": 27, "deletions": 27, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fnew_ret_no_self.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fnew_ret_no_self.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fnew_ret_no_self.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,52 +1,52 @@\n error: methods called `new` usually return `Self`\n   --> $DIR/new_ret_no_self.rs:49:5\n    |\n-49 | /     pub fn new(_: String) -> impl R<Item = u32> {\n-50 | |         S3\n-51 | |     }\n+LL | /     pub fn new(_: String) -> impl R<Item = u32> {\n+LL | |         S3\n+LL | |     }\n    | |_____^\n    |\n    = note: `-D clippy::new-ret-no-self` implied by `-D warnings`\n \n error: methods called `new` usually return `Self`\n   --> $DIR/new_ret_no_self.rs:81:5\n    |\n-81 | /     pub fn new() -> u32 {\n-82 | |         unimplemented!();\n-83 | |     }\n+LL | /     pub fn new() -> u32 {\n+LL | |         unimplemented!();\n+LL | |     }\n    | |_____^\n \n error: methods called `new` usually return `Self`\n   --> $DIR/new_ret_no_self.rs:90:5\n    |\n-90 | /     pub fn new(_: String) -> u32 {\n-91 | |         unimplemented!();\n-92 | |     }\n+LL | /     pub fn new(_: String) -> u32 {\n+LL | |         unimplemented!();\n+LL | |     }\n    | |_____^\n \n error: methods called `new` usually return `Self`\n-   --> $DIR/new_ret_no_self.rs:126:5\n-    |\n-126 | /     pub fn new() -> (u32, u32) {\n-127 | |         unimplemented!();\n-128 | |     }\n-    | |_____^\n+  --> $DIR/new_ret_no_self.rs:126:5\n+   |\n+LL | /     pub fn new() -> (u32, u32) {\n+LL | |         unimplemented!();\n+LL | |     }\n+   | |_____^\n \n error: methods called `new` usually return `Self`\n-   --> $DIR/new_ret_no_self.rs:153:5\n-    |\n-153 | /     pub fn new() -> *mut V {\n-154 | |         unimplemented!();\n-155 | |     }\n-    | |_____^\n+  --> $DIR/new_ret_no_self.rs:153:5\n+   |\n+LL | /     pub fn new() -> *mut V {\n+LL | |         unimplemented!();\n+LL | |     }\n+   | |_____^\n \n error: methods called `new` usually return `Self`\n-   --> $DIR/new_ret_no_self.rs:171:5\n-    |\n-171 | /     pub fn new() -> Option<u32> {\n-172 | |         unimplemented!();\n-173 | |     }\n-    | |_____^\n+  --> $DIR/new_ret_no_self.rs:171:5\n+   |\n+LL | /     pub fn new() -> Option<u32> {\n+LL | |         unimplemented!();\n+LL | |     }\n+   | |_____^\n \n error: aborting due to 6 previous errors\n "}, {"sha": "1b35b72a82ec56276dea612d8917f8460b6e92bb", "filename": "tests/ui/new_without_default.stderr", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fnew_without_default.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fnew_without_default.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fnew_without_default.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,45 +1,45 @@\n error: you should consider deriving a `Default` implementation for `Foo`\n   --> $DIR/new_without_default.rs:17:5\n    |\n-17 | /     pub fn new() -> Foo {\n-18 | |         Foo\n-19 | |     }\n+LL | /     pub fn new() -> Foo {\n+LL | |         Foo\n+LL | |     }\n    | |_____^\n    |\n    = note: `-D clippy::new-without-default-derive` implied by `-D warnings`\n help: try this\n    |\n-14 | #[derive(Default)]\n+LL | #[derive(Default)]\n    |\n \n error: you should consider deriving a `Default` implementation for `Bar`\n   --> $DIR/new_without_default.rs:25:5\n    |\n-25 | /     pub fn new() -> Self {\n-26 | |         Bar\n-27 | |     }\n+LL | /     pub fn new() -> Self {\n+LL | |         Bar\n+LL | |     }\n    | |_____^\n help: try this\n    |\n-22 | #[derive(Default)]\n+LL | #[derive(Default)]\n    |\n \n error: you should consider adding a `Default` implementation for `LtKo<'c>`\n   --> $DIR/new_without_default.rs:89:5\n    |\n-89 | /     pub fn new() -> LtKo<'c> {\n-90 | |         unimplemented!()\n-91 | |     }\n+LL | /     pub fn new() -> LtKo<'c> {\n+LL | |         unimplemented!()\n+LL | |     }\n    | |_____^\n    |\n    = note: `-D clippy::new-without-default` implied by `-D warnings`\n help: try this\n    |\n-88 | impl Default for LtKo<'c> {\n-89 |     fn default() -> Self {\n-90 |         Self::new()\n-91 |     }\n-92 | }\n+LL | impl Default for LtKo<'c> {\n+LL |     fn default() -> Self {\n+LL |         Self::new()\n+LL |     }\n+LL | }\n    |\n \n error: aborting due to 3 previous errors"}, {"sha": "cc3b069f0b52ceea0f5089b63a223cd3f37ade1a", "filename": "tests/ui/no_effect.stderr", "status": "modified", "additions": 28, "deletions": 28, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fno_effect.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fno_effect.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fno_effect.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,154 +1,154 @@\n error: statement with no effect\n   --> $DIR/no_effect.rs:74:5\n    |\n-74 |     0;\n+LL |     0;\n    |     ^^\n    |\n    = note: `-D clippy::no-effect` implied by `-D warnings`\n \n error: statement with no effect\n   --> $DIR/no_effect.rs:75:5\n    |\n-75 |     s2;\n+LL |     s2;\n    |     ^^^\n \n error: statement with no effect\n   --> $DIR/no_effect.rs:76:5\n    |\n-76 |     Unit;\n+LL |     Unit;\n    |     ^^^^^\n \n error: statement with no effect\n   --> $DIR/no_effect.rs:77:5\n    |\n-77 |     Tuple(0);\n+LL |     Tuple(0);\n    |     ^^^^^^^^^\n \n error: statement with no effect\n   --> $DIR/no_effect.rs:78:5\n    |\n-78 |     Struct { field: 0 };\n+LL |     Struct { field: 0 };\n    |     ^^^^^^^^^^^^^^^^^^^^\n \n error: statement with no effect\n   --> $DIR/no_effect.rs:79:5\n    |\n-79 |     Struct { ..s };\n+LL |     Struct { ..s };\n    |     ^^^^^^^^^^^^^^^\n \n error: statement with no effect\n   --> $DIR/no_effect.rs:80:5\n    |\n-80 |     Union { a: 0 };\n+LL |     Union { a: 0 };\n    |     ^^^^^^^^^^^^^^^\n \n error: statement with no effect\n   --> $DIR/no_effect.rs:81:5\n    |\n-81 |     Enum::Tuple(0);\n+LL |     Enum::Tuple(0);\n    |     ^^^^^^^^^^^^^^^\n \n error: statement with no effect\n   --> $DIR/no_effect.rs:82:5\n    |\n-82 |     Enum::Struct { field: 0 };\n+LL |     Enum::Struct { field: 0 };\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: statement with no effect\n   --> $DIR/no_effect.rs:83:5\n    |\n-83 |     5 + 6;\n+LL |     5 + 6;\n    |     ^^^^^^\n \n error: statement with no effect\n   --> $DIR/no_effect.rs:84:5\n    |\n-84 |     *&42;\n+LL |     *&42;\n    |     ^^^^^\n \n error: statement with no effect\n   --> $DIR/no_effect.rs:85:5\n    |\n-85 |     &6;\n+LL |     &6;\n    |     ^^^\n \n error: statement with no effect\n   --> $DIR/no_effect.rs:86:5\n    |\n-86 |     (5, 6, 7);\n+LL |     (5, 6, 7);\n    |     ^^^^^^^^^^\n \n error: statement with no effect\n   --> $DIR/no_effect.rs:87:5\n    |\n-87 |     box 42;\n+LL |     box 42;\n    |     ^^^^^^^\n \n error: statement with no effect\n   --> $DIR/no_effect.rs:88:5\n    |\n-88 |     ..;\n+LL |     ..;\n    |     ^^^\n \n error: statement with no effect\n   --> $DIR/no_effect.rs:89:5\n    |\n-89 |     5..;\n+LL |     5..;\n    |     ^^^^\n \n error: statement with no effect\n   --> $DIR/no_effect.rs:90:5\n    |\n-90 |     ..5;\n+LL |     ..5;\n    |     ^^^^\n \n error: statement with no effect\n   --> $DIR/no_effect.rs:91:5\n    |\n-91 |     5..6;\n+LL |     5..6;\n    |     ^^^^^\n \n error: statement with no effect\n   --> $DIR/no_effect.rs:93:5\n    |\n-93 |     [42, 55];\n+LL |     [42, 55];\n    |     ^^^^^^^^^\n \n error: statement with no effect\n   --> $DIR/no_effect.rs:94:5\n    |\n-94 |     [42, 55][1];\n+LL |     [42, 55][1];\n    |     ^^^^^^^^^^^^\n \n error: statement with no effect\n   --> $DIR/no_effect.rs:95:5\n    |\n-95 |     (42, 55).1;\n+LL |     (42, 55).1;\n    |     ^^^^^^^^^^^\n \n error: statement with no effect\n   --> $DIR/no_effect.rs:96:5\n    |\n-96 |     [42; 55];\n+LL |     [42; 55];\n    |     ^^^^^^^^^\n \n error: statement with no effect\n   --> $DIR/no_effect.rs:97:5\n    |\n-97 |     [42; 55][13];\n+LL |     [42; 55][13];\n    |     ^^^^^^^^^^^^^\n \n error: statement with no effect\n   --> $DIR/no_effect.rs:99:5\n    |\n-99 |     || x += 5;\n+LL |     || x += 5;\n    |     ^^^^^^^^^^\n \n error: statement with no effect\n-   --> $DIR/no_effect.rs:101:5\n-    |\n-101 |     FooString { s: s };\n-    |     ^^^^^^^^^^^^^^^^^^^\n+  --> $DIR/no_effect.rs:101:5\n+   |\n+LL |     FooString { s: s };\n+   |     ^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 25 previous errors\n "}, {"sha": "6b592b681c956c7fd5ef53cc92f4ab80cebb72c8", "filename": "tests/ui/non_copy_const.stderr", "status": "modified", "additions": 130, "deletions": 130, "changes": 260, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fnon_copy_const.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fnon_copy_const.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fnon_copy_const.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,7 +1,7 @@\n error: a const item should never be interior mutable\n   --> $DIR/non_copy_const.rs:19:1\n    |\n-19 | const ATOMIC: AtomicUsize = AtomicUsize::new(5); //~ ERROR interior mutable\n+LL | const ATOMIC: AtomicUsize = AtomicUsize::new(5); //~ ERROR interior mutable\n    | -----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    | |\n    | help: make this a static item: `static`\n@@ -11,265 +11,265 @@ error: a const item should never be interior mutable\n error: a const item should never be interior mutable\n   --> $DIR/non_copy_const.rs:20:1\n    |\n-20 | const CELL: Cell<usize> = Cell::new(6); //~ ERROR interior mutable\n+LL | const CELL: Cell<usize> = Cell::new(6); //~ ERROR interior mutable\n    | -----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    | |\n    | help: make this a static item: `static`\n \n error: a const item should never be interior mutable\n   --> $DIR/non_copy_const.rs:21:1\n    |\n-21 | const ATOMIC_TUPLE: ([AtomicUsize; 1], Vec<AtomicUsize>, u8) = ([ATOMIC], Vec::new(), 7);\n+LL | const ATOMIC_TUPLE: ([AtomicUsize; 1], Vec<AtomicUsize>, u8) = ([ATOMIC], Vec::new(), 7);\n    | -----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    | |\n    | help: make this a static item: `static`\n \n error: a const item should never be interior mutable\n   --> $DIR/non_copy_const.rs:26:9\n    |\n-26 |         const $name: $ty = $e;\n+LL |         const $name: $ty = $e;\n    |         ^^^^^^^^^^^^^^^^^^^^^^\n ...\n-29 | declare_const!(_ONCE: Once = Once::new()); //~ ERROR interior mutable\n+LL | declare_const!(_ONCE: Once = Once::new()); //~ ERROR interior mutable\n    | ------------------------------------------ in this macro invocation\n \n error: a const item should never be interior mutable\n   --> $DIR/non_copy_const.rs:50:5\n    |\n-50 |     const ATOMIC: AtomicUsize; //~ ERROR interior mutable\n+LL |     const ATOMIC: AtomicUsize; //~ ERROR interior mutable\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: a const item should never be interior mutable\n   --> $DIR/non_copy_const.rs:54:5\n    |\n-54 |     const INPUT: T;\n+LL |     const INPUT: T;\n    |     ^^^^^^^^^^^^^^^\n    |\n help: consider requiring `T` to be `Copy`\n   --> $DIR/non_copy_const.rs:54:18\n    |\n-54 |     const INPUT: T;\n+LL |     const INPUT: T;\n    |                  ^\n \n error: a const item should never be interior mutable\n   --> $DIR/non_copy_const.rs:57:5\n    |\n-57 |     const ASSOC: Self::NonCopyType;\n+LL |     const ASSOC: Self::NonCopyType;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n help: consider requiring `<Self as Trait<T>>::NonCopyType` to be `Copy`\n   --> $DIR/non_copy_const.rs:57:18\n    |\n-57 |     const ASSOC: Self::NonCopyType;\n+LL |     const ASSOC: Self::NonCopyType;\n    |                  ^^^^^^^^^^^^^^^^^\n \n error: a const item should never be interior mutable\n   --> $DIR/non_copy_const.rs:61:5\n    |\n-61 |     const AN_INPUT: T = Self::INPUT;\n+LL |     const AN_INPUT: T = Self::INPUT;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n help: consider requiring `T` to be `Copy`\n   --> $DIR/non_copy_const.rs:61:21\n    |\n-61 |     const AN_INPUT: T = Self::INPUT;\n+LL |     const AN_INPUT: T = Self::INPUT;\n    |                     ^\n \n error: a const item should never be interior mutable\n   --> $DIR/non_copy_const.rs:26:9\n    |\n-26 |         const $name: $ty = $e;\n+LL |         const $name: $ty = $e;\n    |         ^^^^^^^^^^^^^^^^^^^^^^\n ...\n-64 |     declare_const!(ANOTHER_INPUT: T = Self::INPUT); //~ ERROR interior mutable\n+LL |     declare_const!(ANOTHER_INPUT: T = Self::INPUT); //~ ERROR interior mutable\n    |     ----------------------------------------------- in this macro invocation\n \n error: a const item should never be interior mutable\n   --> $DIR/non_copy_const.rs:70:5\n    |\n-70 |     const SELF_2: Self;\n+LL |     const SELF_2: Self;\n    |     ^^^^^^^^^^^^^^^^^^^\n    |\n help: consider requiring `Self` to be `Copy`\n   --> $DIR/non_copy_const.rs:70:19\n    |\n-70 |     const SELF_2: Self;\n+LL |     const SELF_2: Self;\n    |                   ^^^^\n \n error: a const item should never be interior mutable\n   --> $DIR/non_copy_const.rs:91:5\n    |\n-91 |     const ASSOC_3: AtomicUsize = AtomicUsize::new(14); //~ ERROR interior mutable\n+LL |     const ASSOC_3: AtomicUsize = AtomicUsize::new(14); //~ ERROR interior mutable\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: a const item should never be interior mutable\n   --> $DIR/non_copy_const.rs:94:5\n    |\n-94 |     const U_SELF: U = U::SELF_2;\n+LL |     const U_SELF: U = U::SELF_2;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n help: consider requiring `U` to be `Copy`\n   --> $DIR/non_copy_const.rs:94:19\n    |\n-94 |     const U_SELF: U = U::SELF_2;\n+LL |     const U_SELF: U = U::SELF_2;\n    |                   ^\n \n error: a const item should never be interior mutable\n   --> $DIR/non_copy_const.rs:97:5\n    |\n-97 |     const T_ASSOC: T::NonCopyType = T::ASSOC;\n+LL |     const T_ASSOC: T::NonCopyType = T::ASSOC;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n help: consider requiring `<T as Trait<u32>>::NonCopyType` to be `Copy`\n   --> $DIR/non_copy_const.rs:97:20\n    |\n-97 |     const T_ASSOC: T::NonCopyType = T::ASSOC;\n+LL |     const T_ASSOC: T::NonCopyType = T::ASSOC;\n    |                    ^^^^^^^^^^^^^^\n \n error: a const item with interior mutability should not be borrowed\n-   --> $DIR/non_copy_const.rs:104:5\n-    |\n-104 |     ATOMIC.store(1, Ordering::SeqCst); //~ ERROR interior mutability\n-    |     ^^^^^^\n-    |\n-    = note: #[deny(clippy::borrow_interior_mutable_const)] on by default\n-    = help: assign this const to a local or static variable, and use the variable here\n+  --> $DIR/non_copy_const.rs:104:5\n+   |\n+LL |     ATOMIC.store(1, Ordering::SeqCst); //~ ERROR interior mutability\n+   |     ^^^^^^\n+   |\n+   = note: #[deny(clippy::borrow_interior_mutable_const)] on by default\n+   = help: assign this const to a local or static variable, and use the variable here\n \n error: a const item with interior mutability should not be borrowed\n-   --> $DIR/non_copy_const.rs:105:16\n-    |\n-105 |     assert_eq!(ATOMIC.load(Ordering::SeqCst), 5); //~ ERROR interior mutability\n-    |                ^^^^^^\n-    |\n-    = help: assign this const to a local or static variable, and use the variable here\n+  --> $DIR/non_copy_const.rs:105:16\n+   |\n+LL |     assert_eq!(ATOMIC.load(Ordering::SeqCst), 5); //~ ERROR interior mutability\n+   |                ^^^^^^\n+   |\n+   = help: assign this const to a local or static variable, and use the variable here\n \n error: a const item with interior mutability should not be borrowed\n-   --> $DIR/non_copy_const.rs:107:5\n-    |\n-107 |     ATOMIC_USIZE_INIT.store(2, Ordering::SeqCst); //~ ERROR interior mutability\n-    |     ^^^^^^^^^^^^^^^^^\n-    |\n-    = help: assign this const to a local or static variable, and use the variable here\n+  --> $DIR/non_copy_const.rs:107:5\n+   |\n+LL |     ATOMIC_USIZE_INIT.store(2, Ordering::SeqCst); //~ ERROR interior mutability\n+   |     ^^^^^^^^^^^^^^^^^\n+   |\n+   = help: assign this const to a local or static variable, and use the variable here\n \n error: a const item with interior mutability should not be borrowed\n-   --> $DIR/non_copy_const.rs:108:16\n-    |\n-108 |     assert_eq!(ATOMIC_USIZE_INIT.load(Ordering::SeqCst), 0); //~ ERROR interior mutability\n-    |                ^^^^^^^^^^^^^^^^^\n-    |\n-    = help: assign this const to a local or static variable, and use the variable here\n+  --> $DIR/non_copy_const.rs:108:16\n+   |\n+LL |     assert_eq!(ATOMIC_USIZE_INIT.load(Ordering::SeqCst), 0); //~ ERROR interior mutability\n+   |                ^^^^^^^^^^^^^^^^^\n+   |\n+   = help: assign this const to a local or static variable, and use the variable here\n \n error: a const item with interior mutability should not be borrowed\n-   --> $DIR/non_copy_const.rs:111:22\n-    |\n-111 |     let _once_ref = &ONCE_INIT; //~ ERROR interior mutability\n-    |                      ^^^^^^^^^\n-    |\n-    = help: assign this const to a local or static variable, and use the variable here\n+  --> $DIR/non_copy_const.rs:111:22\n+   |\n+LL |     let _once_ref = &ONCE_INIT; //~ ERROR interior mutability\n+   |                      ^^^^^^^^^\n+   |\n+   = help: assign this const to a local or static variable, and use the variable here\n \n error: a const item with interior mutability should not be borrowed\n-   --> $DIR/non_copy_const.rs:112:25\n-    |\n-112 |     let _once_ref_2 = &&ONCE_INIT; //~ ERROR interior mutability\n-    |                         ^^^^^^^^^\n-    |\n-    = help: assign this const to a local or static variable, and use the variable here\n+  --> $DIR/non_copy_const.rs:112:25\n+   |\n+LL |     let _once_ref_2 = &&ONCE_INIT; //~ ERROR interior mutability\n+   |                         ^^^^^^^^^\n+   |\n+   = help: assign this const to a local or static variable, and use the variable here\n \n error: a const item with interior mutability should not be borrowed\n-   --> $DIR/non_copy_const.rs:113:27\n-    |\n-113 |     let _once_ref_4 = &&&&ONCE_INIT; //~ ERROR interior mutability\n-    |                           ^^^^^^^^^\n-    |\n-    = help: assign this const to a local or static variable, and use the variable here\n+  --> $DIR/non_copy_const.rs:113:27\n+   |\n+LL |     let _once_ref_4 = &&&&ONCE_INIT; //~ ERROR interior mutability\n+   |                           ^^^^^^^^^\n+   |\n+   = help: assign this const to a local or static variable, and use the variable here\n \n error: a const item with interior mutability should not be borrowed\n-   --> $DIR/non_copy_const.rs:114:26\n-    |\n-114 |     let _once_mut = &mut ONCE_INIT; //~ ERROR interior mutability\n-    |                          ^^^^^^^^^\n-    |\n-    = help: assign this const to a local or static variable, and use the variable here\n+  --> $DIR/non_copy_const.rs:114:26\n+   |\n+LL |     let _once_mut = &mut ONCE_INIT; //~ ERROR interior mutability\n+   |                          ^^^^^^^^^\n+   |\n+   = help: assign this const to a local or static variable, and use the variable here\n \n error: a const item with interior mutability should not be borrowed\n-   --> $DIR/non_copy_const.rs:125:14\n-    |\n-125 |     let _ = &ATOMIC_TUPLE; //~ ERROR interior mutability\n-    |              ^^^^^^^^^^^^\n-    |\n-    = help: assign this const to a local or static variable, and use the variable here\n+  --> $DIR/non_copy_const.rs:125:14\n+   |\n+LL |     let _ = &ATOMIC_TUPLE; //~ ERROR interior mutability\n+   |              ^^^^^^^^^^^^\n+   |\n+   = help: assign this const to a local or static variable, and use the variable here\n \n error: a const item with interior mutability should not be borrowed\n-   --> $DIR/non_copy_const.rs:126:14\n-    |\n-126 |     let _ = &ATOMIC_TUPLE.0; //~ ERROR interior mutability\n-    |              ^^^^^^^^^^^^\n-    |\n-    = help: assign this const to a local or static variable, and use the variable here\n+  --> $DIR/non_copy_const.rs:126:14\n+   |\n+LL |     let _ = &ATOMIC_TUPLE.0; //~ ERROR interior mutability\n+   |              ^^^^^^^^^^^^\n+   |\n+   = help: assign this const to a local or static variable, and use the variable here\n \n error: a const item with interior mutability should not be borrowed\n-   --> $DIR/non_copy_const.rs:127:19\n-    |\n-127 |     let _ = &(&&&&ATOMIC_TUPLE).0; //~ ERROR interior mutability\n-    |                   ^^^^^^^^^^^^\n-    |\n-    = help: assign this const to a local or static variable, and use the variable here\n+  --> $DIR/non_copy_const.rs:127:19\n+   |\n+LL |     let _ = &(&&&&ATOMIC_TUPLE).0; //~ ERROR interior mutability\n+   |                   ^^^^^^^^^^^^\n+   |\n+   = help: assign this const to a local or static variable, and use the variable here\n \n error: a const item with interior mutability should not be borrowed\n-   --> $DIR/non_copy_const.rs:128:14\n-    |\n-128 |     let _ = &ATOMIC_TUPLE.0[0]; //~ ERROR interior mutability\n-    |              ^^^^^^^^^^^^\n-    |\n-    = help: assign this const to a local or static variable, and use the variable here\n+  --> $DIR/non_copy_const.rs:128:14\n+   |\n+LL |     let _ = &ATOMIC_TUPLE.0[0]; //~ ERROR interior mutability\n+   |              ^^^^^^^^^^^^\n+   |\n+   = help: assign this const to a local or static variable, and use the variable here\n \n error: a const item with interior mutability should not be borrowed\n-   --> $DIR/non_copy_const.rs:129:13\n-    |\n-129 |     let _ = ATOMIC_TUPLE.0[0].load(Ordering::SeqCst); //~ ERROR interior mutability\n-    |             ^^^^^^^^^^^^\n-    |\n-    = help: assign this const to a local or static variable, and use the variable here\n+  --> $DIR/non_copy_const.rs:129:13\n+   |\n+LL |     let _ = ATOMIC_TUPLE.0[0].load(Ordering::SeqCst); //~ ERROR interior mutability\n+   |             ^^^^^^^^^^^^\n+   |\n+   = help: assign this const to a local or static variable, and use the variable here\n \n error: a const item with interior mutability should not be borrowed\n-   --> $DIR/non_copy_const.rs:135:13\n-    |\n-135 |     let _ = ATOMIC_TUPLE.0[0]; //~ ERROR interior mutability\n-    |             ^^^^^^^^^^^^\n-    |\n-    = help: assign this const to a local or static variable, and use the variable here\n+  --> $DIR/non_copy_const.rs:135:13\n+   |\n+LL |     let _ = ATOMIC_TUPLE.0[0]; //~ ERROR interior mutability\n+   |             ^^^^^^^^^^^^\n+   |\n+   = help: assign this const to a local or static variable, and use the variable here\n \n error: a const item with interior mutability should not be borrowed\n-   --> $DIR/non_copy_const.rs:140:5\n-    |\n-140 |     CELL.set(2); //~ ERROR interior mutability\n-    |     ^^^^\n-    |\n-    = help: assign this const to a local or static variable, and use the variable here\n+  --> $DIR/non_copy_const.rs:140:5\n+   |\n+LL |     CELL.set(2); //~ ERROR interior mutability\n+   |     ^^^^\n+   |\n+   = help: assign this const to a local or static variable, and use the variable here\n \n error: a const item with interior mutability should not be borrowed\n-   --> $DIR/non_copy_const.rs:141:16\n-    |\n-141 |     assert_eq!(CELL.get(), 6); //~ ERROR interior mutability\n-    |                ^^^^\n-    |\n-    = help: assign this const to a local or static variable, and use the variable here\n+  --> $DIR/non_copy_const.rs:141:16\n+   |\n+LL |     assert_eq!(CELL.get(), 6); //~ ERROR interior mutability\n+   |                ^^^^\n+   |\n+   = help: assign this const to a local or static variable, and use the variable here\n \n error: a const item with interior mutability should not be borrowed\n-   --> $DIR/non_copy_const.rs:154:5\n-    |\n-154 |     u64::ATOMIC.store(5, Ordering::SeqCst); //~ ERROR interior mutability\n-    |     ^^^^^^^^^^^\n-    |\n-    = help: assign this const to a local or static variable, and use the variable here\n+  --> $DIR/non_copy_const.rs:154:5\n+   |\n+LL |     u64::ATOMIC.store(5, Ordering::SeqCst); //~ ERROR interior mutability\n+   |     ^^^^^^^^^^^\n+   |\n+   = help: assign this const to a local or static variable, and use the variable here\n \n error: a const item with interior mutability should not be borrowed\n-   --> $DIR/non_copy_const.rs:155:16\n-    |\n-155 |     assert_eq!(u64::ATOMIC.load(Ordering::SeqCst), 9); //~ ERROR interior mutability\n-    |                ^^^^^^^^^^^\n-    |\n-    = help: assign this const to a local or static variable, and use the variable here\n+  --> $DIR/non_copy_const.rs:155:16\n+   |\n+LL |     assert_eq!(u64::ATOMIC.load(Ordering::SeqCst), 9); //~ ERROR interior mutability\n+   |                ^^^^^^^^^^^\n+   |\n+   = help: assign this const to a local or static variable, and use the variable here\n \n error: aborting due to 31 previous errors\n "}, {"sha": "8729db18dffffc405aea0e6d119a8c9229fe109b", "filename": "tests/ui/non_expressive_names.stderr", "status": "modified", "additions": 62, "deletions": 62, "changes": 124, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fnon_expressive_names.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fnon_expressive_names.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fnon_expressive_names.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,171 +1,171 @@\n error: binding's name is too similar to existing binding\n   --> $DIR/non_expressive_names.rs:24:9\n    |\n-24 |     let bpple: i32;\n+LL |     let bpple: i32;\n    |         ^^^^^\n    |\n    = note: `-D clippy::similar-names` implied by `-D warnings`\n note: existing binding defined here\n   --> $DIR/non_expressive_names.rs:22:9\n    |\n-22 |     let apple: i32;\n+LL |     let apple: i32;\n    |         ^^^^^\n help: separate the discriminating character by an underscore like: `b_pple`\n   --> $DIR/non_expressive_names.rs:24:9\n    |\n-24 |     let bpple: i32;\n+LL |     let bpple: i32;\n    |         ^^^^^\n \n error: binding's name is too similar to existing binding\n   --> $DIR/non_expressive_names.rs:26:9\n    |\n-26 |     let cpple: i32;\n+LL |     let cpple: i32;\n    |         ^^^^^\n    |\n note: existing binding defined here\n   --> $DIR/non_expressive_names.rs:22:9\n    |\n-22 |     let apple: i32;\n+LL |     let apple: i32;\n    |         ^^^^^\n help: separate the discriminating character by an underscore like: `c_pple`\n   --> $DIR/non_expressive_names.rs:26:9\n    |\n-26 |     let cpple: i32;\n+LL |     let cpple: i32;\n    |         ^^^^^\n \n error: binding's name is too similar to existing binding\n   --> $DIR/non_expressive_names.rs:50:9\n    |\n-50 |     let bluby: i32;\n+LL |     let bluby: i32;\n    |         ^^^^^\n    |\n note: existing binding defined here\n   --> $DIR/non_expressive_names.rs:49:9\n    |\n-49 |     let blubx: i32;\n+LL |     let blubx: i32;\n    |         ^^^^^\n help: separate the discriminating character by an underscore like: `blub_y`\n   --> $DIR/non_expressive_names.rs:50:9\n    |\n-50 |     let bluby: i32;\n+LL |     let bluby: i32;\n    |         ^^^^^\n \n error: binding's name is too similar to existing binding\n   --> $DIR/non_expressive_names.rs:54:9\n    |\n-54 |     let coke: i32;\n+LL |     let coke: i32;\n    |         ^^^^\n    |\n note: existing binding defined here\n   --> $DIR/non_expressive_names.rs:52:9\n    |\n-52 |     let cake: i32;\n+LL |     let cake: i32;\n    |         ^^^^\n \n error: binding's name is too similar to existing binding\n   --> $DIR/non_expressive_names.rs:72:9\n    |\n-72 |     let xyzeabc: i32;\n+LL |     let xyzeabc: i32;\n    |         ^^^^^^^\n    |\n note: existing binding defined here\n   --> $DIR/non_expressive_names.rs:70:9\n    |\n-70 |     let xyz1abc: i32;\n+LL |     let xyz1abc: i32;\n    |         ^^^^^^^\n \n error: binding's name is too similar to existing binding\n   --> $DIR/non_expressive_names.rs:76:9\n    |\n-76 |     let parsee: i32;\n+LL |     let parsee: i32;\n    |         ^^^^^^\n    |\n note: existing binding defined here\n   --> $DIR/non_expressive_names.rs:74:9\n    |\n-74 |     let parser: i32;\n+LL |     let parser: i32;\n    |         ^^^^^^\n help: separate the discriminating character by an underscore like: `parse_e`\n   --> $DIR/non_expressive_names.rs:76:9\n    |\n-76 |     let parsee: i32;\n+LL |     let parsee: i32;\n    |         ^^^^^^\n \n error: binding's name is too similar to existing binding\n   --> $DIR/non_expressive_names.rs:90:16\n    |\n-90 |         bpple: sprang,\n+LL |         bpple: sprang,\n    |                ^^^^^^\n    |\n note: existing binding defined here\n   --> $DIR/non_expressive_names.rs:89:16\n    |\n-89 |         apple: spring,\n+LL |         apple: spring,\n    |                ^^^^^^\n \n error: 5th binding whose name is just one char\n-   --> $DIR/non_expressive_names.rs:125:17\n-    |\n-125 |             let e: i32;\n-    |                 ^\n-    |\n-    = note: `-D clippy::many-single-char-names` implied by `-D warnings`\n+  --> $DIR/non_expressive_names.rs:125:17\n+   |\n+LL |             let e: i32;\n+   |                 ^\n+   |\n+   = note: `-D clippy::many-single-char-names` implied by `-D warnings`\n \n error: 5th binding whose name is just one char\n-   --> $DIR/non_expressive_names.rs:128:17\n-    |\n-128 |             let e: i32;\n-    |                 ^\n+  --> $DIR/non_expressive_names.rs:128:17\n+   |\n+LL |             let e: i32;\n+   |                 ^\n \n error: 6th binding whose name is just one char\n-   --> $DIR/non_expressive_names.rs:129:17\n-    |\n-129 |             let f: i32;\n-    |                 ^\n+  --> $DIR/non_expressive_names.rs:129:17\n+   |\n+LL |             let f: i32;\n+   |                 ^\n \n error: 5th binding whose name is just one char\n-   --> $DIR/non_expressive_names.rs:133:13\n-    |\n-133 |             e => panic!(),\n-    |             ^\n+  --> $DIR/non_expressive_names.rs:133:13\n+   |\n+LL |             e => panic!(),\n+   |             ^\n \n error: consider choosing a more descriptive name\n-   --> $DIR/non_expressive_names.rs:143:9\n-    |\n-143 |     let _1 = 1; //~ERROR Consider a more descriptive name\n-    |         ^^\n-    |\n-    = note: `-D clippy::just-underscores-and-digits` implied by `-D warnings`\n+  --> $DIR/non_expressive_names.rs:143:9\n+   |\n+LL |     let _1 = 1; //~ERROR Consider a more descriptive name\n+   |         ^^\n+   |\n+   = note: `-D clippy::just-underscores-and-digits` implied by `-D warnings`\n \n error: consider choosing a more descriptive name\n-   --> $DIR/non_expressive_names.rs:144:9\n-    |\n-144 |     let ____1 = 1; //~ERROR Consider a more descriptive name\n-    |         ^^^^^\n+  --> $DIR/non_expressive_names.rs:144:9\n+   |\n+LL |     let ____1 = 1; //~ERROR Consider a more descriptive name\n+   |         ^^^^^\n \n error: consider choosing a more descriptive name\n-   --> $DIR/non_expressive_names.rs:145:9\n-    |\n-145 |     let __1___2 = 12; //~ERROR Consider a more descriptive name\n-    |         ^^^^^^^\n+  --> $DIR/non_expressive_names.rs:145:9\n+   |\n+LL |     let __1___2 = 12; //~ERROR Consider a more descriptive name\n+   |         ^^^^^^^\n \n error: consider choosing a more descriptive name\n-   --> $DIR/non_expressive_names.rs:165:13\n-    |\n-165 |         let _1 = 1;\n-    |             ^^\n+  --> $DIR/non_expressive_names.rs:165:13\n+   |\n+LL |         let _1 = 1;\n+   |             ^^\n \n error: consider choosing a more descriptive name\n-   --> $DIR/non_expressive_names.rs:166:13\n-    |\n-166 |         let ____1 = 1;\n-    |             ^^^^^\n+  --> $DIR/non_expressive_names.rs:166:13\n+   |\n+LL |         let ____1 = 1;\n+   |             ^^^^^\n \n error: consider choosing a more descriptive name\n-   --> $DIR/non_expressive_names.rs:167:13\n-    |\n-167 |         let __1___2 = 12;\n-    |             ^^^^^^^\n+  --> $DIR/non_expressive_names.rs:167:13\n+   |\n+LL |         let __1___2 = 12;\n+   |             ^^^^^^^\n \n error: aborting due to 17 previous errors\n "}, {"sha": "4ccca10a463bea47e26f065d45fab6f95f9afdcd", "filename": "tests/ui/ok_expect.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fok_expect.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fok_expect.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fok_expect.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,33 +1,33 @@\n error: called `ok().expect()` on a Result value. You can call `expect` directly on the `Result`\n   --> $DIR/ok_expect.rs:23:5\n    |\n-23 |     res.ok().expect(\"disaster!\");\n+LL |     res.ok().expect(\"disaster!\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::ok-expect` implied by `-D warnings`\n \n error: called `ok().expect()` on a Result value. You can call `expect` directly on the `Result`\n   --> $DIR/ok_expect.rs:29:5\n    |\n-29 |     res3.ok().expect(\"whoof\");\n+LL |     res3.ok().expect(\"whoof\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: called `ok().expect()` on a Result value. You can call `expect` directly on the `Result`\n   --> $DIR/ok_expect.rs:31:5\n    |\n-31 |     res4.ok().expect(\"argh\");\n+LL |     res4.ok().expect(\"argh\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: called `ok().expect()` on a Result value. You can call `expect` directly on the `Result`\n   --> $DIR/ok_expect.rs:33:5\n    |\n-33 |     res5.ok().expect(\"oops\");\n+LL |     res5.ok().expect(\"oops\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: called `ok().expect()` on a Result value. You can call `expect` directly on the `Result`\n   --> $DIR/ok_expect.rs:35:5\n    |\n-35 |     res6.ok().expect(\"meh\");\n+LL |     res6.ok().expect(\"meh\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 5 previous errors"}, {"sha": "4567493a7c2eb7fcc4cca10c5b48d408e8a4a57a", "filename": "tests/ui/ok_if_let.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fok_if_let.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fok_if_let.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fok_if_let.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,11 +1,11 @@\n error: Matching on `Some` with `ok()` is redundant\n   --> $DIR/ok_if_let.rs:13:5\n    |\n-13 | /     if let Some(y) = x.parse().ok() {\n-14 | |         y\n-15 | |     } else {\n-16 | |         0\n-17 | |     }\n+LL | /     if let Some(y) = x.parse().ok() {\n+LL | |         y\n+LL | |     } else {\n+LL | |         0\n+LL | |     }\n    | |_____^\n    |\n    = note: `-D clippy::if-let-some-result` implied by `-D warnings`"}, {"sha": "956e2ee754c9479daed50a29f684db5951852630", "filename": "tests/ui/op_ref.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fop_ref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fop_ref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fop_ref.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,19 +1,19 @@\n error: needlessly taken reference of both operands\n   --> $DIR/op_ref.rs:19:15\n    |\n-19 |     let foo = &5 - &6;\n+LL |     let foo = &5 - &6;\n    |               ^^^^^^^\n    |\n    = note: `-D clippy::op-ref` implied by `-D warnings`\n help: use the values directly\n    |\n-19 |     let foo = 5 - 6;\n+LL |     let foo = 5 - 6;\n    |               ^   ^\n \n error: taken reference of right operand\n   --> $DIR/op_ref.rs:27:8\n    |\n-27 |     if b < &a {\n+LL |     if b < &a {\n    |        ^^^^--\n    |            |\n    |            help: use the right value directly: `a`"}, {"sha": "55c0429800b2ffc4b673712ae507f4808e4a6594", "filename": "tests/ui/open_options.stderr", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fopen_options.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fopen_options.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fopen_options.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,45 +1,45 @@\n error: file opened with \"truncate\" and \"read\"\n   --> $DIR/open_options.rs:15:5\n    |\n-15 |     OpenOptions::new().read(true).truncate(true).open(\"foo.txt\");\n+LL |     OpenOptions::new().read(true).truncate(true).open(\"foo.txt\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::nonsensical-open-options` implied by `-D warnings`\n \n error: file opened with \"append\" and \"truncate\"\n   --> $DIR/open_options.rs:16:5\n    |\n-16 |     OpenOptions::new().append(true).truncate(true).open(\"foo.txt\");\n+LL |     OpenOptions::new().append(true).truncate(true).open(\"foo.txt\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: the method \"read\" is called more than once\n   --> $DIR/open_options.rs:18:5\n    |\n-18 |     OpenOptions::new().read(true).read(false).open(\"foo.txt\");\n+LL |     OpenOptions::new().read(true).read(false).open(\"foo.txt\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: the method \"create\" is called more than once\n   --> $DIR/open_options.rs:19:5\n    |\n-19 |     OpenOptions::new().create(true).create(false).open(\"foo.txt\");\n+LL |     OpenOptions::new().create(true).create(false).open(\"foo.txt\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: the method \"write\" is called more than once\n   --> $DIR/open_options.rs:20:5\n    |\n-20 |     OpenOptions::new().write(true).write(false).open(\"foo.txt\");\n+LL |     OpenOptions::new().write(true).write(false).open(\"foo.txt\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: the method \"append\" is called more than once\n   --> $DIR/open_options.rs:21:5\n    |\n-21 |     OpenOptions::new().append(true).append(false).open(\"foo.txt\");\n+LL |     OpenOptions::new().append(true).append(false).open(\"foo.txt\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: the method \"truncate\" is called more than once\n   --> $DIR/open_options.rs:22:5\n    |\n-22 |     OpenOptions::new().truncate(true).truncate(false).open(\"foo.txt\");\n+LL |     OpenOptions::new().truncate(true).truncate(false).open(\"foo.txt\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 7 previous errors"}, {"sha": "18ddcec5edd4e7c14736c93c448c0b76611fe7d5", "filename": "tests/ui/option_map_unit_fn.stderr", "status": "modified", "additions": 43, "deletions": 43, "changes": 86, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Foption_map_unit_fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Foption_map_unit_fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Foption_map_unit_fn.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,7 +1,7 @@\n error: called `map(f)` on an Option value where `f` is a unit function\n   --> $DIR/option_map_unit_fn.rs:41:5\n    |\n-41 |     x.field.map(do_nothing);\n+LL |     x.field.map(do_nothing);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(x_field) = x.field { do_nothing(...) }`\n@@ -11,200 +11,200 @@ error: called `map(f)` on an Option value where `f` is a unit function\n error: called `map(f)` on an Option value where `f` is a unit function\n   --> $DIR/option_map_unit_fn.rs:43:5\n    |\n-43 |     x.field.map(do_nothing);\n+LL |     x.field.map(do_nothing);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(x_field) = x.field { do_nothing(...) }`\n \n error: called `map(f)` on an Option value where `f` is a unit function\n   --> $DIR/option_map_unit_fn.rs:45:5\n    |\n-45 |     x.field.map(diverge);\n+LL |     x.field.map(diverge);\n    |     ^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(x_field) = x.field { diverge(...) }`\n \n error: called `map(f)` on an Option value where `f` is a unit closure\n   --> $DIR/option_map_unit_fn.rs:51:5\n    |\n-51 |     x.field.map(|value| x.do_option_nothing(value + captured));\n+LL |     x.field.map(|value| x.do_option_nothing(value + captured));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(value) = x.field { x.do_option_nothing(value + captured) }`\n \n error: called `map(f)` on an Option value where `f` is a unit closure\n   --> $DIR/option_map_unit_fn.rs:53:5\n    |\n-53 |     x.field.map(|value| { x.do_option_plus_one(value + captured); });\n+LL |     x.field.map(|value| { x.do_option_plus_one(value + captured); });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(value) = x.field { x.do_option_plus_one(value + captured); }`\n \n error: called `map(f)` on an Option value where `f` is a unit closure\n   --> $DIR/option_map_unit_fn.rs:56:5\n    |\n-56 |     x.field.map(|value| do_nothing(value + captured));\n+LL |     x.field.map(|value| do_nothing(value + captured));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(value) = x.field { do_nothing(value + captured) }`\n \n error: called `map(f)` on an Option value where `f` is a unit closure\n   --> $DIR/option_map_unit_fn.rs:58:5\n    |\n-58 |     x.field.map(|value| { do_nothing(value + captured) });\n+LL |     x.field.map(|value| { do_nothing(value + captured) });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(value) = x.field { do_nothing(value + captured) }`\n \n error: called `map(f)` on an Option value where `f` is a unit closure\n   --> $DIR/option_map_unit_fn.rs:60:5\n    |\n-60 |     x.field.map(|value| { do_nothing(value + captured); });\n+LL |     x.field.map(|value| { do_nothing(value + captured); });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(value) = x.field { do_nothing(value + captured); }`\n \n error: called `map(f)` on an Option value where `f` is a unit closure\n   --> $DIR/option_map_unit_fn.rs:62:5\n    |\n-62 |     x.field.map(|value| { { do_nothing(value + captured); } });\n+LL |     x.field.map(|value| { { do_nothing(value + captured); } });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(value) = x.field { do_nothing(value + captured); }`\n \n error: called `map(f)` on an Option value where `f` is a unit closure\n   --> $DIR/option_map_unit_fn.rs:65:5\n    |\n-65 |     x.field.map(|value| diverge(value + captured));\n+LL |     x.field.map(|value| diverge(value + captured));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(value) = x.field { diverge(value + captured) }`\n \n error: called `map(f)` on an Option value where `f` is a unit closure\n   --> $DIR/option_map_unit_fn.rs:67:5\n    |\n-67 |     x.field.map(|value| { diverge(value + captured) });\n+LL |     x.field.map(|value| { diverge(value + captured) });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(value) = x.field { diverge(value + captured) }`\n \n error: called `map(f)` on an Option value where `f` is a unit closure\n   --> $DIR/option_map_unit_fn.rs:69:5\n    |\n-69 |     x.field.map(|value| { diverge(value + captured); });\n+LL |     x.field.map(|value| { diverge(value + captured); });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(value) = x.field { diverge(value + captured); }`\n \n error: called `map(f)` on an Option value where `f` is a unit closure\n   --> $DIR/option_map_unit_fn.rs:71:5\n    |\n-71 |     x.field.map(|value| { { diverge(value + captured); } });\n+LL |     x.field.map(|value| { { diverge(value + captured); } });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(value) = x.field { diverge(value + captured); }`\n \n error: called `map(f)` on an Option value where `f` is a unit closure\n   --> $DIR/option_map_unit_fn.rs:76:5\n    |\n-76 |     x.field.map(|value| { let y = plus_one(value + captured); });\n+LL |     x.field.map(|value| { let y = plus_one(value + captured); });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(value) = x.field { let y = plus_one(value + captured); }`\n \n error: called `map(f)` on an Option value where `f` is a unit closure\n   --> $DIR/option_map_unit_fn.rs:78:5\n    |\n-78 |     x.field.map(|value| { plus_one(value + captured); });\n+LL |     x.field.map(|value| { plus_one(value + captured); });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(value) = x.field { plus_one(value + captured); }`\n \n error: called `map(f)` on an Option value where `f` is a unit closure\n   --> $DIR/option_map_unit_fn.rs:80:5\n    |\n-80 |     x.field.map(|value| { { plus_one(value + captured); } });\n+LL |     x.field.map(|value| { { plus_one(value + captured); } });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(value) = x.field { plus_one(value + captured); }`\n \n error: called `map(f)` on an Option value where `f` is a unit closure\n   --> $DIR/option_map_unit_fn.rs:83:5\n    |\n-83 |     x.field.map(|ref value| { do_nothing(value + captured) });\n+LL |     x.field.map(|ref value| { do_nothing(value + captured) });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(ref value) = x.field { do_nothing(value + captured) }`\n \n error: called `map(f)` on an Option value where `f` is a unit closure\n   --> $DIR/option_map_unit_fn.rs:86:5\n    |\n-86 |     x.field.map(|value| { do_nothing(value); do_nothing(value) });\n+LL |     x.field.map(|value| { do_nothing(value); do_nothing(value) });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(value) = x.field { ... }`\n \n error: called `map(f)` on an Option value where `f` is a unit closure\n   --> $DIR/option_map_unit_fn.rs:88:5\n    |\n-88 |     x.field.map(|value| if value > 0 { do_nothing(value); do_nothing(value) });\n+LL |     x.field.map(|value| if value > 0 { do_nothing(value); do_nothing(value) });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(value) = x.field { ... }`\n \n error: called `map(f)` on an Option value where `f` is a unit closure\n   --> $DIR/option_map_unit_fn.rs:92:5\n    |\n-92 |        x.field.map(|value| {\n+LL |        x.field.map(|value| {\n    |   _____^\n    |  |_____|\n    | ||\n-93 | ||         do_nothing(value);\n-94 | ||         do_nothing(value)\n-95 | ||     });\n+LL | ||         do_nothing(value);\n+LL | ||         do_nothing(value)\n+LL | ||     });\n    | ||______^- help: try this: `if let Some(value) = x.field { ... }`\n    | |_______|\n    | \n \n error: called `map(f)` on an Option value where `f` is a unit closure\n   --> $DIR/option_map_unit_fn.rs:96:5\n    |\n-96 |     x.field.map(|value| { do_nothing(value); do_nothing(value); });\n+LL |     x.field.map(|value| { do_nothing(value); do_nothing(value); });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(value) = x.field { ... }`\n \n error: called `map(f)` on an Option value where `f` is a unit function\n   --> $DIR/option_map_unit_fn.rs:99:5\n    |\n-99 |     Some(42).map(diverge);\n+LL |     Some(42).map(diverge);\n    |     ^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(_) = Some(42) { diverge(...) }`\n \n error: called `map(f)` on an Option value where `f` is a unit function\n-   --> $DIR/option_map_unit_fn.rs:100:5\n-    |\n-100 |     \"12\".parse::<i32>().ok().map(diverge);\n-    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n-    |     |\n-    |     help: try this: `if let Some(_) = \"12\".parse::<i32>().ok() { diverge(...) }`\n+  --> $DIR/option_map_unit_fn.rs:100:5\n+   |\n+LL |     \"12\".parse::<i32>().ok().map(diverge);\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n+   |     |\n+   |     help: try this: `if let Some(_) = \"12\".parse::<i32>().ok() { diverge(...) }`\n \n error: called `map(f)` on an Option value where `f` is a unit function\n-   --> $DIR/option_map_unit_fn.rs:101:5\n-    |\n-101 |     Some(plus_one(1)).map(do_nothing);\n-    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n-    |     |\n-    |     help: try this: `if let Some(_) = Some(plus_one(1)) { do_nothing(...) }`\n+  --> $DIR/option_map_unit_fn.rs:101:5\n+   |\n+LL |     Some(plus_one(1)).map(do_nothing);\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n+   |     |\n+   |     help: try this: `if let Some(_) = Some(plus_one(1)) { do_nothing(...) }`\n \n error: called `map(f)` on an Option value where `f` is a unit function\n-   --> $DIR/option_map_unit_fn.rs:105:5\n-    |\n-105 |     y.map(do_nothing);\n-    |     ^^^^^^^^^^^^^^^^^-\n-    |     |\n-    |     help: try this: `if let Some(_y) = y { do_nothing(...) }`\n+  --> $DIR/option_map_unit_fn.rs:105:5\n+   |\n+LL |     y.map(do_nothing);\n+   |     ^^^^^^^^^^^^^^^^^-\n+   |     |\n+   |     help: try this: `if let Some(_y) = y { do_nothing(...) }`\n \n error: aborting due to 25 previous errors\n "}, {"sha": "992f14c825fe0aac0754e303d04ad3c08a476719", "filename": "tests/ui/option_option.stderr", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Foption_option.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Foption_option.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Foption_option.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,57 +1,57 @@\n error: consider using `Option<T>` instead of `Option<Option<T>>` or a custom enum if you need to distinguish all 3 cases\n   --> $DIR/option_option.rs:10:13\n    |\n-10 | fn input(_: Option<Option<u8>>) {}\n+LL | fn input(_: Option<Option<u8>>) {}\n    |             ^^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::option-option` implied by `-D warnings`\n \n error: consider using `Option<T>` instead of `Option<Option<T>>` or a custom enum if you need to distinguish all 3 cases\n   --> $DIR/option_option.rs:12:16\n    |\n-12 | fn output() -> Option<Option<u8>> {\n+LL | fn output() -> Option<Option<u8>> {\n    |                ^^^^^^^^^^^^^^^^^^\n \n error: consider using `Option<T>` instead of `Option<Option<T>>` or a custom enum if you need to distinguish all 3 cases\n   --> $DIR/option_option.rs:16:27\n    |\n-16 | fn output_nested() -> Vec<Option<Option<u8>>> {\n+LL | fn output_nested() -> Vec<Option<Option<u8>>> {\n    |                           ^^^^^^^^^^^^^^^^^^\n \n error: consider using `Option<T>` instead of `Option<Option<T>>` or a custom enum if you need to distinguish all 3 cases\n   --> $DIR/option_option.rs:21:30\n    |\n-21 | fn output_nested_nested() -> Option<Option<Option<u8>>> {\n+LL | fn output_nested_nested() -> Option<Option<Option<u8>>> {\n    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: consider using `Option<T>` instead of `Option<Option<T>>` or a custom enum if you need to distinguish all 3 cases\n   --> $DIR/option_option.rs:26:8\n    |\n-26 |     x: Option<Option<u8>>,\n+LL |     x: Option<Option<u8>>,\n    |        ^^^^^^^^^^^^^^^^^^\n \n error: consider using `Option<T>` instead of `Option<Option<T>>` or a custom enum if you need to distinguish all 3 cases\n   --> $DIR/option_option.rs:30:23\n    |\n-30 |     fn struct_fn() -> Option<Option<u8>> {\n+LL |     fn struct_fn() -> Option<Option<u8>> {\n    |                       ^^^^^^^^^^^^^^^^^^\n \n error: consider using `Option<T>` instead of `Option<Option<T>>` or a custom enum if you need to distinguish all 3 cases\n   --> $DIR/option_option.rs:36:22\n    |\n-36 |     fn trait_fn() -> Option<Option<u8>>;\n+LL |     fn trait_fn() -> Option<Option<u8>>;\n    |                      ^^^^^^^^^^^^^^^^^^\n \n error: consider using `Option<T>` instead of `Option<Option<T>>` or a custom enum if you need to distinguish all 3 cases\n   --> $DIR/option_option.rs:40:11\n    |\n-40 |     Tuple(Option<Option<u8>>),\n+LL |     Tuple(Option<Option<u8>>),\n    |           ^^^^^^^^^^^^^^^^^^\n \n error: consider using `Option<T>` instead of `Option<Option<T>>` or a custom enum if you need to distinguish all 3 cases\n   --> $DIR/option_option.rs:41:17\n    |\n-41 |     Struct { x: Option<Option<u8>> },\n+LL |     Struct { x: Option<Option<u8>> },\n    |                 ^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 9 previous errors"}, {"sha": "078a1a5941c0cd88ab66b830dc948c25bbfba168", "filename": "tests/ui/overflow_check_conditional.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Foverflow_check_conditional.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Foverflow_check_conditional.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Foverflow_check_conditional.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,51 +1,51 @@\n error: You are trying to use classic C overflow conditions that will fail in Rust.\n   --> $DIR/overflow_check_conditional.rs:17:8\n    |\n-17 |     if a + b < a {}\n+LL |     if a + b < a {}\n    |        ^^^^^^^^^\n    |\n    = note: `-D clippy::overflow-check-conditional` implied by `-D warnings`\n \n error: You are trying to use classic C overflow conditions that will fail in Rust.\n   --> $DIR/overflow_check_conditional.rs:18:8\n    |\n-18 |     if a > a + b {}\n+LL |     if a > a + b {}\n    |        ^^^^^^^^^\n \n error: You are trying to use classic C overflow conditions that will fail in Rust.\n   --> $DIR/overflow_check_conditional.rs:19:8\n    |\n-19 |     if a + b < b {}\n+LL |     if a + b < b {}\n    |        ^^^^^^^^^\n \n error: You are trying to use classic C overflow conditions that will fail in Rust.\n   --> $DIR/overflow_check_conditional.rs:20:8\n    |\n-20 |     if b > a + b {}\n+LL |     if b > a + b {}\n    |        ^^^^^^^^^\n \n error: You are trying to use classic C underflow conditions that will fail in Rust.\n   --> $DIR/overflow_check_conditional.rs:21:8\n    |\n-21 |     if a - b > b {}\n+LL |     if a - b > b {}\n    |        ^^^^^^^^^\n \n error: You are trying to use classic C underflow conditions that will fail in Rust.\n   --> $DIR/overflow_check_conditional.rs:22:8\n    |\n-22 |     if b < a - b {}\n+LL |     if b < a - b {}\n    |        ^^^^^^^^^\n \n error: You are trying to use classic C underflow conditions that will fail in Rust.\n   --> $DIR/overflow_check_conditional.rs:23:8\n    |\n-23 |     if a - b > a {}\n+LL |     if a - b > a {}\n    |        ^^^^^^^^^\n \n error: You are trying to use classic C underflow conditions that will fail in Rust.\n   --> $DIR/overflow_check_conditional.rs:24:8\n    |\n-24 |     if a < a - b {}\n+LL |     if a < a - b {}\n    |        ^^^^^^^^^\n \n error: aborting due to 8 previous errors"}, {"sha": "7bc83a287c187e2c97a6a5b42c6d129a5106680f", "filename": "tests/ui/panic_unimplemented.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fpanic_unimplemented.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fpanic_unimplemented.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fpanic_unimplemented.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,33 +1,33 @@\n error: you probably are missing some parameter in your format string\n   --> $DIR/panic_unimplemented.rs:14:16\n    |\n-14 |         panic!(\"{}\");\n+LL |         panic!(\"{}\");\n    |                ^^^^\n    |\n    = note: `-D clippy::panic-params` implied by `-D warnings`\n \n error: you probably are missing some parameter in your format string\n   --> $DIR/panic_unimplemented.rs:16:16\n    |\n-16 |         panic!(\"{:?}\");\n+LL |         panic!(\"{:?}\");\n    |                ^^^^^^\n \n error: you probably are missing some parameter in your format string\n   --> $DIR/panic_unimplemented.rs:18:23\n    |\n-18 |         assert!(true, \"here be missing values: {}\");\n+LL |         assert!(true, \"here be missing values: {}\");\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: you probably are missing some parameter in your format string\n   --> $DIR/panic_unimplemented.rs:21:12\n    |\n-21 |     panic!(\"{{{this}}}\");\n+LL |     panic!(\"{{{this}}}\");\n    |            ^^^^^^^^^^^^\n \n error: `unimplemented` should not be present in production code\n   --> $DIR/panic_unimplemented.rs:64:5\n    |\n-64 |     unimplemented!();\n+LL |     unimplemented!();\n    |     ^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::unimplemented` implied by `-D warnings`"}, {"sha": "ac040acc306e9f685e9f2647152f2ad3526308b0", "filename": "tests/ui/partialeq_ne_impl.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fpartialeq_ne_impl.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fpartialeq_ne_impl.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fpartialeq_ne_impl.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,9 +1,9 @@\n error: re-implementing `PartialEq::ne` is unnecessary\n   --> $DIR/partialeq_ne_impl.rs:18:5\n    |\n-18 | /     fn ne(&self, _: &Foo) -> bool {\n-19 | |         false\n-20 | |     }\n+LL | /     fn ne(&self, _: &Foo) -> bool {\n+LL | |         false\n+LL | |     }\n    | |_____^\n    |\n    = note: `-D clippy::partialeq-ne-impl` implied by `-D warnings`"}, {"sha": "74e8b9ae7761f51f82f619463d831cefc05bec43", "filename": "tests/ui/patterns.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fpatterns.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fpatterns.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fpatterns.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,7 +1,7 @@\n error: the `y @ _` pattern can be written as just `y`\n   --> $DIR/patterns.rs:17:9\n    |\n-17 |         y @ _ => (),\n+LL |         y @ _ => (),\n    |         ^^^^^\n    |\n    = note: `-D clippy::redundant-pattern` implied by `-D warnings`"}, {"sha": "2d917b3cbdb23bf27bb4525ac16c9ca37e393152", "filename": "tests/ui/precedence.stderr", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fprecedence.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fprecedence.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fprecedence.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,57 +1,57 @@\n error: operator precedence can trip the unwary\n   --> $DIR/precedence.rs:24:5\n    |\n-24 |     1 << 2 + 3;\n+LL |     1 << 2 + 3;\n    |     ^^^^^^^^^^ help: consider parenthesizing your expression: `1 << (2 + 3)`\n    |\n    = note: `-D clippy::precedence` implied by `-D warnings`\n \n error: operator precedence can trip the unwary\n   --> $DIR/precedence.rs:25:5\n    |\n-25 |     1 + 2 << 3;\n+LL |     1 + 2 << 3;\n    |     ^^^^^^^^^^ help: consider parenthesizing your expression: `(1 + 2) << 3`\n \n error: operator precedence can trip the unwary\n   --> $DIR/precedence.rs:26:5\n    |\n-26 |     4 >> 1 + 1;\n+LL |     4 >> 1 + 1;\n    |     ^^^^^^^^^^ help: consider parenthesizing your expression: `4 >> (1 + 1)`\n \n error: operator precedence can trip the unwary\n   --> $DIR/precedence.rs:27:5\n    |\n-27 |     1 + 3 >> 2;\n+LL |     1 + 3 >> 2;\n    |     ^^^^^^^^^^ help: consider parenthesizing your expression: `(1 + 3) >> 2`\n \n error: operator precedence can trip the unwary\n   --> $DIR/precedence.rs:28:5\n    |\n-28 |     1 ^ 1 - 1;\n+LL |     1 ^ 1 - 1;\n    |     ^^^^^^^^^ help: consider parenthesizing your expression: `1 ^ (1 - 1)`\n \n error: operator precedence can trip the unwary\n   --> $DIR/precedence.rs:29:5\n    |\n-29 |     3 | 2 - 1;\n+LL |     3 | 2 - 1;\n    |     ^^^^^^^^^ help: consider parenthesizing your expression: `3 | (2 - 1)`\n \n error: operator precedence can trip the unwary\n   --> $DIR/precedence.rs:30:5\n    |\n-30 |     3 & 5 - 2;\n+LL |     3 & 5 - 2;\n    |     ^^^^^^^^^ help: consider parenthesizing your expression: `3 & (5 - 2)`\n \n error: unary minus has lower precedence than method call\n   --> $DIR/precedence.rs:31:5\n    |\n-31 |     -1i32.abs();\n+LL |     -1i32.abs();\n    |     ^^^^^^^^^^^ help: consider adding parentheses to clarify your intent: `-(1i32.abs())`\n \n error: unary minus has lower precedence than method call\n   --> $DIR/precedence.rs:32:5\n    |\n-32 |     -1f32.abs();\n+LL |     -1f32.abs();\n    |     ^^^^^^^^^^^ help: consider adding parentheses to clarify your intent: `-(1f32.abs())`\n \n error: aborting due to 9 previous errors"}, {"sha": "9635011b906b9e24f7b088d4a38c2b1b9894d11f", "filename": "tests/ui/print.stderr", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fprint.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fprint.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fprint.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,59 +1,59 @@\n error: use of `Debug`-based formatting\n   --> $DIR/print.rs:20:19\n    |\n-20 |         write!(f, \"{:?}\", 43.1415)\n+LL |         write!(f, \"{:?}\", 43.1415)\n    |                   ^^^^^^\n    |\n    = note: `-D clippy::use-debug` implied by `-D warnings`\n \n error: use of `Debug`-based formatting\n   --> $DIR/print.rs:27:19\n    |\n-27 |         write!(f, \"{:?}\", 42.718)\n+LL |         write!(f, \"{:?}\", 42.718)\n    |                   ^^^^^^\n \n error: use of `println!`\n   --> $DIR/print.rs:32:5\n    |\n-32 |     println!(\"Hello\");\n+LL |     println!(\"Hello\");\n    |     ^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::print-stdout` implied by `-D warnings`\n \n error: use of `print!`\n   --> $DIR/print.rs:33:5\n    |\n-33 |     print!(\"Hello\");\n+LL |     print!(\"Hello\");\n    |     ^^^^^^^^^^^^^^^\n \n error: use of `print!`\n   --> $DIR/print.rs:35:5\n    |\n-35 |     print!(\"Hello {}\", \"World\");\n+LL |     print!(\"Hello {}\", \"World\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: use of `print!`\n   --> $DIR/print.rs:37:5\n    |\n-37 |     print!(\"Hello {:?}\", \"World\");\n+LL |     print!(\"Hello {:?}\", \"World\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: use of `Debug`-based formatting\n   --> $DIR/print.rs:37:12\n    |\n-37 |     print!(\"Hello {:?}\", \"World\");\n+LL |     print!(\"Hello {:?}\", \"World\");\n    |            ^^^^^^^^^^^^\n \n error: use of `print!`\n   --> $DIR/print.rs:39:5\n    |\n-39 |     print!(\"Hello {:#?}\", \"#orld\");\n+LL |     print!(\"Hello {:#?}\", \"#orld\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: use of `Debug`-based formatting\n   --> $DIR/print.rs:39:12\n    |\n-39 |     print!(\"Hello {:#?}\", \"#orld\");\n+LL |     print!(\"Hello {:#?}\", \"#orld\");\n    |            ^^^^^^^^^^^^^\n \n error: aborting due to 9 previous errors"}, {"sha": "be55795d1aca7e35b7e9e64cf3cc7d3637e907fe", "filename": "tests/ui/print_literal.stderr", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fprint_literal.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fprint_literal.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fprint_literal.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,87 +1,87 @@\n error: literal with an empty format string\n   --> $DIR/print_literal.rs:31:71\n    |\n-31 |     println!(\"{} of {:b} people know binary, the other half doesn't\", 1, 2);\n+LL |     println!(\"{} of {:b} people know binary, the other half doesn't\", 1, 2);\n    |                                                                       ^\n    |\n    = note: `-D clippy::print-literal` implied by `-D warnings`\n \n error: literal with an empty format string\n   --> $DIR/print_literal.rs:32:24\n    |\n-32 |     print!(\"Hello {}\", \"world\");\n+LL |     print!(\"Hello {}\", \"world\");\n    |                        ^^^^^^^\n \n error: literal with an empty format string\n   --> $DIR/print_literal.rs:33:36\n    |\n-33 |     println!(\"Hello {} {}\", world, \"world\");\n+LL |     println!(\"Hello {} {}\", world, \"world\");\n    |                                    ^^^^^^^\n \n error: literal with an empty format string\n   --> $DIR/print_literal.rs:34:26\n    |\n-34 |     println!(\"Hello {}\", \"world\");\n+LL |     println!(\"Hello {}\", \"world\");\n    |                          ^^^^^^^\n \n error: literal with an empty format string\n   --> $DIR/print_literal.rs:35:30\n    |\n-35 |     println!(\"10 / 4 is {}\", 2.5);\n+LL |     println!(\"10 / 4 is {}\", 2.5);\n    |                              ^^^\n \n error: literal with an empty format string\n   --> $DIR/print_literal.rs:36:28\n    |\n-36 |     println!(\"2 + 1 = {}\", 3);\n+LL |     println!(\"2 + 1 = {}\", 3);\n    |                            ^\n \n error: literal with an empty format string\n   --> $DIR/print_literal.rs:41:25\n    |\n-41 |     println!(\"{0} {1}\", \"hello\", \"world\");\n+LL |     println!(\"{0} {1}\", \"hello\", \"world\");\n    |                         ^^^^^^^\n \n error: literal with an empty format string\n   --> $DIR/print_literal.rs:41:34\n    |\n-41 |     println!(\"{0} {1}\", \"hello\", \"world\");\n+LL |     println!(\"{0} {1}\", \"hello\", \"world\");\n    |                                  ^^^^^^^\n \n error: literal with an empty format string\n   --> $DIR/print_literal.rs:42:25\n    |\n-42 |     println!(\"{1} {0}\", \"hello\", \"world\");\n+LL |     println!(\"{1} {0}\", \"hello\", \"world\");\n    |                         ^^^^^^^\n \n error: literal with an empty format string\n   --> $DIR/print_literal.rs:42:34\n    |\n-42 |     println!(\"{1} {0}\", \"hello\", \"world\");\n+LL |     println!(\"{1} {0}\", \"hello\", \"world\");\n    |                                  ^^^^^^^\n \n error: literal with an empty format string\n   --> $DIR/print_literal.rs:45:35\n    |\n-45 |     println!(\"{foo} {bar}\", foo = \"hello\", bar = \"world\");\n+LL |     println!(\"{foo} {bar}\", foo = \"hello\", bar = \"world\");\n    |                                   ^^^^^^^\n \n error: literal with an empty format string\n   --> $DIR/print_literal.rs:45:50\n    |\n-45 |     println!(\"{foo} {bar}\", foo = \"hello\", bar = \"world\");\n+LL |     println!(\"{foo} {bar}\", foo = \"hello\", bar = \"world\");\n    |                                                  ^^^^^^^\n \n error: literal with an empty format string\n   --> $DIR/print_literal.rs:46:35\n    |\n-46 |     println!(\"{bar} {foo}\", foo = \"hello\", bar = \"world\");\n+LL |     println!(\"{bar} {foo}\", foo = \"hello\", bar = \"world\");\n    |                                   ^^^^^^^\n \n error: literal with an empty format string\n   --> $DIR/print_literal.rs:46:50\n    |\n-46 |     println!(\"{bar} {foo}\", foo = \"hello\", bar = \"world\");\n+LL |     println!(\"{bar} {foo}\", foo = \"hello\", bar = \"world\");\n    |                                                  ^^^^^^^\n \n error: aborting due to 14 previous errors"}, {"sha": "2d76e447145b8aba80c794c52cd0fd8f5e80b53c", "filename": "tests/ui/print_with_newline.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fprint_with_newline.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fprint_with_newline.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fprint_with_newline.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,27 +1,27 @@\n error: using `print!()` with a format string that ends in a single newline, consider using `println!()` instead\n   --> $DIR/print_with_newline.rs:14:5\n    |\n-14 |     print!(\"Hello/n\");\n+LL |     print!(\"Hello/n\");\n    |     ^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::print-with-newline` implied by `-D warnings`\n \n error: using `print!()` with a format string that ends in a single newline, consider using `println!()` instead\n   --> $DIR/print_with_newline.rs:15:5\n    |\n-15 |     print!(\"Hello {}/n\", \"world\");\n+LL |     print!(\"Hello {}/n\", \"world\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: using `print!()` with a format string that ends in a single newline, consider using `println!()` instead\n   --> $DIR/print_with_newline.rs:16:5\n    |\n-16 |     print!(\"Hello {} {}/n\", \"world\", \"#2\");\n+LL |     print!(\"Hello {} {}/n\", \"world\", \"#2\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: using `print!()` with a format string that ends in a single newline, consider using `println!()` instead\n   --> $DIR/print_with_newline.rs:17:5\n    |\n-17 |     print!(\"{}/n\", 1265);\n+LL |     print!(\"{}/n\", 1265);\n    |     ^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 4 previous errors"}, {"sha": "89447040a33cd98f7ecea979635aa40611460dfd", "filename": "tests/ui/println_empty_string.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fprintln_empty_string.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fprintln_empty_string.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fprintln_empty_string.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,15 +1,15 @@\n error: using `println!(\"\")`\n   --> $DIR/println_empty_string.rs:12:5\n    |\n-12 |     println!(\"\");\n+LL |     println!(\"\");\n    |     ^^^^^^^^^^^^ help: replace it with: `println!()`\n    |\n    = note: `-D clippy::println-empty-string` implied by `-D warnings`\n \n error: using `println!(\"\")`\n   --> $DIR/println_empty_string.rs:15:14\n    |\n-15 |         _ => println!(\"\"),\n+LL |         _ => println!(\"\"),\n    |              ^^^^^^^^^^^^ help: replace it with: `println!()`\n \n error: aborting due to 2 previous errors"}, {"sha": "af5003c9b95d8cb7d4f6aa802637edc2c3ab04de", "filename": "tests/ui/ptr_arg.stderr", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fptr_arg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fptr_arg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fptr_arg.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,85 +1,85 @@\n error: writing `&Vec<_>` instead of `&[_]` involves one more reference and cannot be used with non-Vec-based slices.\n   --> $DIR/ptr_arg.rs:15:14\n    |\n-15 | fn do_vec(x: &Vec<i64>) {\n+LL | fn do_vec(x: &Vec<i64>) {\n    |              ^^^^^^^^^ help: change this to: `&[i64]`\n    |\n    = note: `-D clippy::ptr-arg` implied by `-D warnings`\n \n error: writing `&String` instead of `&str` involves a new object where a slice will do.\n   --> $DIR/ptr_arg.rs:24:14\n    |\n-24 | fn do_str(x: &String) {\n+LL | fn do_str(x: &String) {\n    |              ^^^^^^^ help: change this to: `&str`\n \n error: writing `&Vec<_>` instead of `&[_]` involves one more reference and cannot be used with non-Vec-based slices.\n   --> $DIR/ptr_arg.rs:37:18\n    |\n-37 |     fn do_vec(x: &Vec<i64>);\n+LL |     fn do_vec(x: &Vec<i64>);\n    |                  ^^^^^^^^^ help: change this to: `&[i64]`\n \n error: writing `&Vec<_>` instead of `&[_]` involves one more reference and cannot be used with non-Vec-based slices.\n   --> $DIR/ptr_arg.rs:50:14\n    |\n-50 | fn cloned(x: &Vec<u8>) -> Vec<u8> {\n+LL | fn cloned(x: &Vec<u8>) -> Vec<u8> {\n    |              ^^^^^^^^\n help: change this to\n    |\n-50 | fn cloned(x: &[u8]) -> Vec<u8> {\n+LL | fn cloned(x: &[u8]) -> Vec<u8> {\n    |              ^^^^^\n help: change `x.clone()` to\n    |\n-51 |     let e = x.to_owned();\n+LL |     let e = x.to_owned();\n    |             ^^^^^^^^^^^^\n help: change `x.clone()` to\n    |\n-56 |     x.to_owned()\n+LL |     x.to_owned()\n    |\n \n error: writing `&String` instead of `&str` involves a new object where a slice will do.\n   --> $DIR/ptr_arg.rs:59:18\n    |\n-59 | fn str_cloned(x: &String) -> String {\n+LL | fn str_cloned(x: &String) -> String {\n    |                  ^^^^^^^\n help: change this to\n    |\n-59 | fn str_cloned(x: &str) -> String {\n+LL | fn str_cloned(x: &str) -> String {\n    |                  ^^^^\n help: change `x.clone()` to\n    |\n-60 |     let a = x.to_string();\n+LL |     let a = x.to_string();\n    |             ^^^^^^^^^^^^^\n help: change `x.clone()` to\n    |\n-61 |     let b = x.to_string();\n+LL |     let b = x.to_string();\n    |             ^^^^^^^^^^^^^\n help: change `x.clone()` to\n    |\n-64 |     x.to_string()\n+LL |     x.to_string()\n    |\n \n error: writing `&String` instead of `&str` involves a new object where a slice will do.\n   --> $DIR/ptr_arg.rs:67:44\n    |\n-67 | fn false_positive_capacity(x: &Vec<u8>, y: &String) {\n+LL | fn false_positive_capacity(x: &Vec<u8>, y: &String) {\n    |                                            ^^^^^^^\n help: change this to\n    |\n-67 | fn false_positive_capacity(x: &Vec<u8>, y: &str) {\n+LL | fn false_positive_capacity(x: &Vec<u8>, y: &str) {\n    |                                            ^^^^\n help: change `y.clone()` to\n    |\n-69 |     let b = y.to_string();\n+LL |     let b = y.to_string();\n    |             ^^^^^^^^^^^^^\n help: change `y.as_str()` to\n    |\n-70 |     let c = y;\n+LL |     let c = y;\n    |             ^\n \n error: using a reference to `Cow` is not recommended.\n   --> $DIR/ptr_arg.rs:81:25\n    |\n-81 | fn test_cow_with_ref(c: &Cow<[i32]>) {}\n+LL | fn test_cow_with_ref(c: &Cow<[i32]>) {}\n    |                         ^^^^^^^^^^^ help: change this to: `&[i32]`\n \n error: aborting due to 7 previous errors"}, {"sha": "d1795f439b295a5af5a6297e9ef83140344171d6", "filename": "tests/ui/ptr_offset_with_cast.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fptr_offset_with_cast.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fptr_offset_with_cast.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fptr_offset_with_cast.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,15 +1,15 @@\n error: use of `offset` with a `usize` casted to an `isize`\n   --> $DIR/ptr_offset_with_cast.rs:19:9\n    |\n-19 |         ptr.offset(offset_usize as isize);\n+LL |         ptr.offset(offset_usize as isize);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `ptr.add(offset_usize)`\n    |\n    = note: `-D clippy::ptr-offset-with-cast` implied by `-D warnings`\n \n error: use of `wrapping_offset` with a `usize` casted to an `isize`\n   --> $DIR/ptr_offset_with_cast.rs:23:9\n    |\n-23 |         ptr.wrapping_offset(offset_usize as isize);\n+LL |         ptr.wrapping_offset(offset_usize as isize);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `ptr.wrapping_add(offset_usize)`\n \n error: aborting due to 2 previous errors"}, {"sha": "341f45eef78c8404d3d756c795cd24a7fa0aa57b", "filename": "tests/ui/question_mark.stderr", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fquestion_mark.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fquestion_mark.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fquestion_mark.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,38 +1,38 @@\n error: this block may be rewritten with the `?` operator\n   --> $DIR/question_mark.rs:11:5\n    |\n-11 | /     if a.is_none() {\n-12 | |         return None;\n-13 | |     }\n+LL | /     if a.is_none() {\n+LL | |         return None;\n+LL | |     }\n    | |_____^ help: replace_it_with: `a?;`\n    |\n    = note: `-D clippy::question-mark` implied by `-D warnings`\n \n error: this block may be rewritten with the `?` operator\n   --> $DIR/question_mark.rs:47:9\n    |\n-47 | /         if (self.opt).is_none() {\n-48 | |             return None;\n-49 | |         }\n+LL | /         if (self.opt).is_none() {\n+LL | |             return None;\n+LL | |         }\n    | |_________^ help: replace_it_with: `(self.opt)?;`\n \n error: this block may be rewritten with the `?` operator\n   --> $DIR/question_mark.rs:51:9\n    |\n-51 | /         if self.opt.is_none() {\n-52 | |             return None\n-53 | |         }\n+LL | /         if self.opt.is_none() {\n+LL | |             return None\n+LL | |         }\n    | |_________^ help: replace_it_with: `self.opt?;`\n \n error: this block may be rewritten with the `?` operator\n   --> $DIR/question_mark.rs:55:17\n    |\n-55 |           let _ = if self.opt.is_none() {\n+LL |           let _ = if self.opt.is_none() {\n    |  _________________^\n-56 | |             return None;\n-57 | |         } else {\n-58 | |             self.opt\n-59 | |         };\n+LL | |             return None;\n+LL | |         } else {\n+LL | |             self.opt\n+LL | |         };\n    | |_________^ help: replace_it_with: `Some(self.opt?)`\n \n error: aborting due to 4 previous errors"}, {"sha": "b9a0a10c207d59d0bc61b802f2250649f4932bef", "filename": "tests/ui/range.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Frange.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Frange.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Frange.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,41 +1,41 @@\n error: Iterator::step_by(0) will panic at runtime\n   --> $DIR/range.rs:17:13\n    |\n-17 |     let _ = (0..1).step_by(0);\n+LL |     let _ = (0..1).step_by(0);\n    |             ^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::iterator-step-by-zero` implied by `-D warnings`\n \n error: Iterator::step_by(0) will panic at runtime\n   --> $DIR/range.rs:21:13\n    |\n-21 |     let _ = (1..).step_by(0);\n+LL |     let _ = (1..).step_by(0);\n    |             ^^^^^^^^^^^^^^^^\n \n error: Iterator::step_by(0) will panic at runtime\n   --> $DIR/range.rs:22:13\n    |\n-22 |     let _ = (1..=2).step_by(0);\n+LL |     let _ = (1..=2).step_by(0);\n    |             ^^^^^^^^^^^^^^^^^^\n \n error: Iterator::step_by(0) will panic at runtime\n   --> $DIR/range.rs:25:13\n    |\n-25 |     let _ = x.step_by(0);\n+LL |     let _ = x.step_by(0);\n    |             ^^^^^^^^^^^^\n \n error: It is more idiomatic to use v1.iter().enumerate()\n   --> $DIR/range.rs:33:14\n    |\n-33 |     let _x = v1.iter().zip(0..v1.len());\n+LL |     let _x = v1.iter().zip(0..v1.len());\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::range-zip-with-len` implied by `-D warnings`\n \n error: Iterator::step_by(0) will panic at runtime\n   --> $DIR/range.rs:37:13\n    |\n-37 |     let _ = v1.iter().step_by(2 / 3);\n+LL |     let _ = v1.iter().step_by(2 / 3);\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 6 previous errors"}, {"sha": "b1c93933ccc78c56a7c44fcf5efdfce6731951e0", "filename": "tests/ui/range_plus_minus_one.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Frange_plus_minus_one.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Frange_plus_minus_one.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Frange_plus_minus_one.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,53 +1,53 @@\n error: an inclusive range would be more readable\n   --> $DIR/range_plus_minus_one.rs:19:14\n    |\n-19 |     for _ in 0..3 + 1 {}\n+LL |     for _ in 0..3 + 1 {}\n    |              ^^^^^^^^ help: use: `0..=3`\n    |\n    = note: `-D clippy::range-plus-one` implied by `-D warnings`\n \n error: an inclusive range would be more readable\n   --> $DIR/range_plus_minus_one.rs:22:14\n    |\n-22 |     for _ in 0..1 + 5 {}\n+LL |     for _ in 0..1 + 5 {}\n    |              ^^^^^^^^ help: use: `0..=5`\n \n error: an inclusive range would be more readable\n   --> $DIR/range_plus_minus_one.rs:25:14\n    |\n-25 |     for _ in 1..1 + 1 {}\n+LL |     for _ in 1..1 + 1 {}\n    |              ^^^^^^^^ help: use: `1..=1`\n \n error: an inclusive range would be more readable\n   --> $DIR/range_plus_minus_one.rs:31:14\n    |\n-31 |     for _ in 0..(1 + f()) {}\n+LL |     for _ in 0..(1 + f()) {}\n    |              ^^^^^^^^^^^^ help: use: `0..=f()`\n \n error: an exclusive range would be more readable\n   --> $DIR/range_plus_minus_one.rs:35:13\n    |\n-35 |     let _ = ..=11 - 1;\n+LL |     let _ = ..=11 - 1;\n    |             ^^^^^^^^^ help: use: `..11`\n    |\n    = note: `-D clippy::range-minus-one` implied by `-D warnings`\n \n error: an exclusive range would be more readable\n   --> $DIR/range_plus_minus_one.rs:36:13\n    |\n-36 |     let _ = ..=(11 - 1);\n+LL |     let _ = ..=(11 - 1);\n    |             ^^^^^^^^^^^ help: use: `..11`\n \n error: an inclusive range would be more readable\n   --> $DIR/range_plus_minus_one.rs:37:13\n    |\n-37 |     let _ = (1..11 + 1);\n+LL |     let _ = (1..11 + 1);\n    |             ^^^^^^^^^^^ help: use: `(1..=11)`\n \n error: an inclusive range would be more readable\n   --> $DIR/range_plus_minus_one.rs:38:13\n    |\n-38 |     let _ = (f() + 1)..(f() + 1);\n+LL |     let _ = (f() + 1)..(f() + 1);\n    |             ^^^^^^^^^^^^^^^^^^^^ help: use: `((f() + 1)..=f())`\n \n error: aborting due to 8 previous errors"}, {"sha": "aef6b9b3d2f29f5d891a680a726317bd83d892ff", "filename": "tests/ui/redundant_clone.stderr", "status": "modified", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fredundant_clone.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fredundant_clone.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_clone.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,122 +1,122 @@\n error: redundant clone\n   --> $DIR/redundant_clone.rs:16:41\n    |\n-16 |     let _ = [\"lorem\", \"ipsum\"].join(\" \").to_string();\n+LL |     let _ = [\"lorem\", \"ipsum\"].join(\" \").to_string();\n    |                                         ^^^^^^^^^^^^ help: remove this\n    |\n    = note: `-D clippy::redundant-clone` implied by `-D warnings`\n note: this value is dropped without further use\n   --> $DIR/redundant_clone.rs:16:13\n    |\n-16 |     let _ = [\"lorem\", \"ipsum\"].join(\" \").to_string();\n+LL |     let _ = [\"lorem\", \"ipsum\"].join(\" \").to_string();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: redundant clone\n   --> $DIR/redundant_clone.rs:19:14\n    |\n-19 |     let _ = s.clone();\n+LL |     let _ = s.clone();\n    |              ^^^^^^^^ help: remove this\n    |\n note: this value is dropped without further use\n   --> $DIR/redundant_clone.rs:19:13\n    |\n-19 |     let _ = s.clone();\n+LL |     let _ = s.clone();\n    |             ^\n \n error: redundant clone\n   --> $DIR/redundant_clone.rs:22:14\n    |\n-22 |     let _ = s.to_string();\n+LL |     let _ = s.to_string();\n    |              ^^^^^^^^^^^^ help: remove this\n    |\n note: this value is dropped without further use\n   --> $DIR/redundant_clone.rs:22:13\n    |\n-22 |     let _ = s.to_string();\n+LL |     let _ = s.to_string();\n    |             ^\n \n error: redundant clone\n   --> $DIR/redundant_clone.rs:25:14\n    |\n-25 |     let _ = s.to_owned();\n+LL |     let _ = s.to_owned();\n    |              ^^^^^^^^^^^ help: remove this\n    |\n note: this value is dropped without further use\n   --> $DIR/redundant_clone.rs:25:13\n    |\n-25 |     let _ = s.to_owned();\n+LL |     let _ = s.to_owned();\n    |             ^\n \n error: redundant clone\n   --> $DIR/redundant_clone.rs:27:41\n    |\n-27 |     let _ = Path::new(\"/a/b/\").join(\"c\").to_owned();\n+LL |     let _ = Path::new(\"/a/b/\").join(\"c\").to_owned();\n    |                                         ^^^^^^^^^^^ help: remove this\n    |\n note: this value is dropped without further use\n   --> $DIR/redundant_clone.rs:27:13\n    |\n-27 |     let _ = Path::new(\"/a/b/\").join(\"c\").to_owned();\n+LL |     let _ = Path::new(\"/a/b/\").join(\"c\").to_owned();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: redundant clone\n   --> $DIR/redundant_clone.rs:29:41\n    |\n-29 |     let _ = Path::new(\"/a/b/\").join(\"c\").to_path_buf();\n+LL |     let _ = Path::new(\"/a/b/\").join(\"c\").to_path_buf();\n    |                                         ^^^^^^^^^^^^^^ help: remove this\n    |\n note: this value is dropped without further use\n   --> $DIR/redundant_clone.rs:29:13\n    |\n-29 |     let _ = Path::new(\"/a/b/\").join(\"c\").to_path_buf();\n+LL |     let _ = Path::new(\"/a/b/\").join(\"c\").to_path_buf();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: redundant clone\n   --> $DIR/redundant_clone.rs:31:28\n    |\n-31 |     let _ = OsString::new().to_owned();\n+LL |     let _ = OsString::new().to_owned();\n    |                            ^^^^^^^^^^^ help: remove this\n    |\n note: this value is dropped without further use\n   --> $DIR/redundant_clone.rs:31:13\n    |\n-31 |     let _ = OsString::new().to_owned();\n+LL |     let _ = OsString::new().to_owned();\n    |             ^^^^^^^^^^^^^^^\n \n error: redundant clone\n   --> $DIR/redundant_clone.rs:33:28\n    |\n-33 |     let _ = OsString::new().to_os_string();\n+LL |     let _ = OsString::new().to_os_string();\n    |                            ^^^^^^^^^^^^^^^ help: remove this\n    |\n note: this value is dropped without further use\n   --> $DIR/redundant_clone.rs:33:13\n    |\n-33 |     let _ = OsString::new().to_os_string();\n+LL |     let _ = OsString::new().to_os_string();\n    |             ^^^^^^^^^^^^^^^\n \n error: redundant clone\n   --> $DIR/redundant_clone.rs:40:18\n    |\n-40 |     let _ = tup.0.clone();\n+LL |     let _ = tup.0.clone();\n    |                  ^^^^^^^^ help: remove this\n    |\n note: this value is dropped without further use\n   --> $DIR/redundant_clone.rs:40:13\n    |\n-40 |     let _ = tup.0.clone();\n+LL |     let _ = tup.0.clone();\n    |             ^^^^^\n \n error: redundant clone\n   --> $DIR/redundant_clone.rs:50:22\n    |\n-50 |         (a.clone(), a.clone())\n+LL |         (a.clone(), a.clone())\n    |                      ^^^^^^^^ help: remove this\n    |\n note: this value is dropped without further use\n   --> $DIR/redundant_clone.rs:50:21\n    |\n-50 |         (a.clone(), a.clone())\n+LL |         (a.clone(), a.clone())\n    |                     ^\n \n error: aborting due to 10 previous errors"}, {"sha": "6a41a07bd95b17d448ce63bb7004c307ffc880c1", "filename": "tests/ui/redundant_closure_call.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fredundant_closure_call.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fredundant_closure_call.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_closure_call.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,33 +1,33 @@\n error: Closure called just once immediately after it was declared\n   --> $DIR/redundant_closure_call.rs:21:5\n    |\n-21 |     i = closure();\n+LL |     i = closure();\n    |     ^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::redundant-closure-call` implied by `-D warnings`\n \n error: Closure called just once immediately after it was declared\n   --> $DIR/redundant_closure_call.rs:24:5\n    |\n-24 |     i = closure(3);\n+LL |     i = closure(3);\n    |     ^^^^^^^^^^^^^^\n \n error: Try not to call a closure in the expression where it is declared.\n   --> $DIR/redundant_closure_call.rs:13:13\n    |\n-13 |     let a = (|| 42)();\n+LL |     let a = (|| 42)();\n    |             ^^^^^^^^^ help: Try doing something like: : `42`\n \n error: Try not to call a closure in the expression where it is declared.\n   --> $DIR/redundant_closure_call.rs:16:17\n    |\n-16 |     let mut k = (|m| m + 1)(i);\n+LL |     let mut k = (|m| m + 1)(i);\n    |                 ^^^^^^^^^^^^^^\n \n error: Try not to call a closure in the expression where it is declared.\n   --> $DIR/redundant_closure_call.rs:18:9\n    |\n-18 |     k = (|a, b| a * b)(1, 5);\n+LL |     k = (|a, b| a * b)(1, 5);\n    |         ^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 5 previous errors"}, {"sha": "5675f8beb7ab1a6283876d1484225987a5973772", "filename": "tests/ui/redundant_field_names.stderr", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fredundant_field_names.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fredundant_field_names.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_field_names.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,45 +1,45 @@\n error: redundant field names in struct initialization\n   --> $DIR/redundant_field_names.rs:43:9\n    |\n-43 |         gender: gender,\n+LL |         gender: gender,\n    |         ^^^^^^^^^^^^^^ help: replace it with: `gender`\n    |\n    = note: `-D clippy::redundant-field-names` implied by `-D warnings`\n \n error: redundant field names in struct initialization\n   --> $DIR/redundant_field_names.rs:44:9\n    |\n-44 |         age: age,\n+LL |         age: age,\n    |         ^^^^^^^^ help: replace it with: `age`\n \n error: redundant field names in struct initialization\n   --> $DIR/redundant_field_names.rs:65:25\n    |\n-65 |     let _ = RangeFrom { start: start };\n+LL |     let _ = RangeFrom { start: start };\n    |                         ^^^^^^^^^^^^ help: replace it with: `start`\n \n error: redundant field names in struct initialization\n   --> $DIR/redundant_field_names.rs:66:23\n    |\n-66 |     let _ = RangeTo { end: end };\n+LL |     let _ = RangeTo { end: end };\n    |                       ^^^^^^^^ help: replace it with: `end`\n \n error: redundant field names in struct initialization\n   --> $DIR/redundant_field_names.rs:67:21\n    |\n-67 |     let _ = Range { start: start, end: end };\n+LL |     let _ = Range { start: start, end: end };\n    |                     ^^^^^^^^^^^^ help: replace it with: `start`\n \n error: redundant field names in struct initialization\n   --> $DIR/redundant_field_names.rs:67:35\n    |\n-67 |     let _ = Range { start: start, end: end };\n+LL |     let _ = Range { start: start, end: end };\n    |                                   ^^^^^^^^ help: replace it with: `end`\n \n error: redundant field names in struct initialization\n   --> $DIR/redundant_field_names.rs:69:32\n    |\n-69 |     let _ = RangeToInclusive { end: end };\n+LL |     let _ = RangeToInclusive { end: end };\n    |                                ^^^^^^^^ help: replace it with: `end`\n \n error: aborting due to 7 previous errors"}, {"sha": "0511fbc7e09c33a0bd757b67b8de48082f5a42a7", "filename": "tests/ui/redundant_pattern_matching.stderr", "status": "modified", "additions": 28, "deletions": 28, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fredundant_pattern_matching.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fredundant_pattern_matching.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_pattern_matching.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,81 +1,81 @@\n error: redundant pattern matching, consider using `is_ok()`\n   --> $DIR/redundant_pattern_matching.rs:14:12\n    |\n-14 |     if let Ok(_) = Ok::<i32, i32>(42) {}\n+LL |     if let Ok(_) = Ok::<i32, i32>(42) {}\n    |     -------^^^^^------------------------ help: try this: `if Ok::<i32, i32>(42).is_ok()`\n    |\n    = note: `-D clippy::redundant-pattern-matching` implied by `-D warnings`\n \n error: redundant pattern matching, consider using `is_err()`\n   --> $DIR/redundant_pattern_matching.rs:16:12\n    |\n-16 |     if let Err(_) = Err::<i32, i32>(42) {}\n+LL |     if let Err(_) = Err::<i32, i32>(42) {}\n    |     -------^^^^^^------------------------- help: try this: `if Err::<i32, i32>(42).is_err()`\n \n error: redundant pattern matching, consider using `is_none()`\n   --> $DIR/redundant_pattern_matching.rs:18:12\n    |\n-18 |     if let None = None::<()> {}\n+LL |     if let None = None::<()> {}\n    |     -------^^^^---------------- help: try this: `if None::<()>.is_none()`\n \n error: redundant pattern matching, consider using `is_some()`\n   --> $DIR/redundant_pattern_matching.rs:20:12\n    |\n-20 |     if let Some(_) = Some(42) {}\n+LL |     if let Some(_) = Some(42) {}\n    |     -------^^^^^^^-------------- help: try this: `if Some(42).is_some()`\n \n error: redundant pattern matching, consider using `is_ok()`\n   --> $DIR/redundant_pattern_matching.rs:34:5\n    |\n-34 | /     match Ok::<i32, i32>(42) {\n-35 | |         Ok(_) => true,\n-36 | |         Err(_) => false,\n-37 | |     };\n+LL | /     match Ok::<i32, i32>(42) {\n+LL | |         Ok(_) => true,\n+LL | |         Err(_) => false,\n+LL | |     };\n    | |_____^ help: try this: `Ok::<i32, i32>(42).is_ok()`\n \n error: redundant pattern matching, consider using `is_err()`\n   --> $DIR/redundant_pattern_matching.rs:39:5\n    |\n-39 | /     match Ok::<i32, i32>(42) {\n-40 | |         Ok(_) => false,\n-41 | |         Err(_) => true,\n-42 | |     };\n+LL | /     match Ok::<i32, i32>(42) {\n+LL | |         Ok(_) => false,\n+LL | |         Err(_) => true,\n+LL | |     };\n    | |_____^ help: try this: `Ok::<i32, i32>(42).is_err()`\n \n error: redundant pattern matching, consider using `is_err()`\n   --> $DIR/redundant_pattern_matching.rs:44:5\n    |\n-44 | /     match Err::<i32, i32>(42) {\n-45 | |         Ok(_) => false,\n-46 | |         Err(_) => true,\n-47 | |     };\n+LL | /     match Err::<i32, i32>(42) {\n+LL | |         Ok(_) => false,\n+LL | |         Err(_) => true,\n+LL | |     };\n    | |_____^ help: try this: `Err::<i32, i32>(42).is_err()`\n \n error: redundant pattern matching, consider using `is_ok()`\n   --> $DIR/redundant_pattern_matching.rs:49:5\n    |\n-49 | /     match Err::<i32, i32>(42) {\n-50 | |         Ok(_) => true,\n-51 | |         Err(_) => false,\n-52 | |     };\n+LL | /     match Err::<i32, i32>(42) {\n+LL | |         Ok(_) => true,\n+LL | |         Err(_) => false,\n+LL | |     };\n    | |_____^ help: try this: `Err::<i32, i32>(42).is_ok()`\n \n error: redundant pattern matching, consider using `is_some()`\n   --> $DIR/redundant_pattern_matching.rs:54:5\n    |\n-54 | /     match Some(42) {\n-55 | |         Some(_) => true,\n-56 | |         None => false,\n-57 | |     };\n+LL | /     match Some(42) {\n+LL | |         Some(_) => true,\n+LL | |         None => false,\n+LL | |     };\n    | |_____^ help: try this: `Some(42).is_some()`\n \n error: redundant pattern matching, consider using `is_none()`\n   --> $DIR/redundant_pattern_matching.rs:59:5\n    |\n-59 | /     match None::<()> {\n-60 | |         Some(_) => false,\n-61 | |         None => true,\n-62 | |     };\n+LL | /     match None::<()> {\n+LL | |         Some(_) => false,\n+LL | |         None => true,\n+LL | |     };\n    | |_____^ help: try this: `None::<()>.is_none()`\n \n error: aborting due to 10 previous errors"}, {"sha": "eaaacc7bcbefeeb363067655a4c88f9412538287", "filename": "tests/ui/reference.stderr", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Freference.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Freference.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Freference.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,69 +1,69 @@\n error: immediately dereferencing a reference\n   --> $DIR/reference.rs:25:13\n    |\n-25 |     let b = *&a;\n+LL |     let b = *&a;\n    |             ^^^ help: try this: `a`\n    |\n    = note: `-D clippy::deref-addrof` implied by `-D warnings`\n \n error: immediately dereferencing a reference\n   --> $DIR/reference.rs:27:13\n    |\n-27 |     let b = *&get_number();\n+LL |     let b = *&get_number();\n    |             ^^^^^^^^^^^^^^ help: try this: `get_number()`\n \n error: immediately dereferencing a reference\n   --> $DIR/reference.rs:32:13\n    |\n-32 |     let b = *&bytes[1..2][0];\n+LL |     let b = *&bytes[1..2][0];\n    |             ^^^^^^^^^^^^^^^^ help: try this: `bytes[1..2][0]`\n \n error: immediately dereferencing a reference\n   --> $DIR/reference.rs:36:13\n    |\n-36 |     let b = *&(a);\n+LL |     let b = *&(a);\n    |             ^^^^^ help: try this: `(a)`\n \n error: immediately dereferencing a reference\n   --> $DIR/reference.rs:38:13\n    |\n-38 |     let b = *(&a);\n+LL |     let b = *(&a);\n    |             ^^^^^ help: try this: `a`\n \n error: immediately dereferencing a reference\n   --> $DIR/reference.rs:41:13\n    |\n-41 |     let b = *((&a));\n+LL |     let b = *((&a));\n    |             ^^^^^^^ help: try this: `a`\n \n error: immediately dereferencing a reference\n   --> $DIR/reference.rs:43:13\n    |\n-43 |     let b = *&&a;\n+LL |     let b = *&&a;\n    |             ^^^^ help: try this: `&a`\n \n error: immediately dereferencing a reference\n   --> $DIR/reference.rs:45:14\n    |\n-45 |     let b = **&aref;\n+LL |     let b = **&aref;\n    |              ^^^^^^ help: try this: `aref`\n \n error: immediately dereferencing a reference\n   --> $DIR/reference.rs:49:14\n    |\n-49 |     let b = **&&a;\n+LL |     let b = **&&a;\n    |              ^^^^ help: try this: `&a`\n \n error: immediately dereferencing a reference\n   --> $DIR/reference.rs:53:17\n    |\n-53 |         let y = *&mut x;\n+LL |         let y = *&mut x;\n    |                 ^^^^^^^ help: try this: `x`\n \n error: immediately dereferencing a reference\n   --> $DIR/reference.rs:60:18\n    |\n-60 |         let y = **&mut &mut x;\n+LL |         let y = **&mut &mut x;\n    |                  ^^^^^^^^^^^^ help: try this: `&mut x`\n \n error: aborting due to 11 previous errors"}, {"sha": "b6a4f6eb2afaa07729f572500e606d9dd76d2287", "filename": "tests/ui/regex.stderr", "status": "modified", "additions": 23, "deletions": 23, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fregex.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fregex.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fregex.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,7 +1,7 @@\n error: trivial regex\n   --> $DIR/regex.rs:22:45\n    |\n-22 |     let pipe_in_wrong_position = Regex::new(\"|\");\n+LL |     let pipe_in_wrong_position = Regex::new(\"|\");\n    |                                             ^^^\n    |\n    = note: `-D clippy::trivial-regex` implied by `-D warnings`\n@@ -10,159 +10,159 @@ error: trivial regex\n error: trivial regex\n   --> $DIR/regex.rs:23:60\n    |\n-23 |     let pipe_in_wrong_position_builder = RegexBuilder::new(\"|\");\n+LL |     let pipe_in_wrong_position_builder = RegexBuilder::new(\"|\");\n    |                                                            ^^^\n    |\n    = help: the regex is unlikely to be useful as it is\n \n error: regex syntax error: invalid character class range, the start must be <= the end\n   --> $DIR/regex.rs:24:42\n    |\n-24 |     let wrong_char_ranice = Regex::new(\"[z-a]\");\n+LL |     let wrong_char_ranice = Regex::new(\"[z-a]\");\n    |                                          ^^^\n    |\n    = note: `-D clippy::invalid-regex` implied by `-D warnings`\n \n error: regex syntax error: invalid character class range, the start must be <= the end\n   --> $DIR/regex.rs:25:37\n    |\n-25 |     let some_unicode = Regex::new(\"[\u00e9-\u00e8]\");\n+LL |     let some_unicode = Regex::new(\"[\u00e9-\u00e8]\");\n    |                                     ^^^\n \n error: regex syntax error on position 0: unclosed group\n   --> $DIR/regex.rs:27:33\n    |\n-27 |     let some_regex = Regex::new(OPENING_PAREN);\n+LL |     let some_regex = Regex::new(OPENING_PAREN);\n    |                                 ^^^^^^^^^^^^^\n \n error: trivial regex\n   --> $DIR/regex.rs:29:53\n    |\n-29 |     let binary_pipe_in_wrong_position = BRegex::new(\"|\");\n+LL |     let binary_pipe_in_wrong_position = BRegex::new(\"|\");\n    |                                                     ^^^\n    |\n    = help: the regex is unlikely to be useful as it is\n \n error: regex syntax error on position 0: unclosed group\n   --> $DIR/regex.rs:30:41\n    |\n-30 |     let some_binary_regex = BRegex::new(OPENING_PAREN);\n+LL |     let some_binary_regex = BRegex::new(OPENING_PAREN);\n    |                                         ^^^^^^^^^^^^^\n \n error: regex syntax error on position 0: unclosed group\n   --> $DIR/regex.rs:31:56\n    |\n-31 |     let some_binary_regex_builder = BRegexBuilder::new(OPENING_PAREN);\n+LL |     let some_binary_regex_builder = BRegexBuilder::new(OPENING_PAREN);\n    |                                                        ^^^^^^^^^^^^^\n \n error: regex syntax error on position 0: unclosed group\n   --> $DIR/regex.rs:43:37\n    |\n-43 |     let set_error = RegexSet::new(&[OPENING_PAREN, r\"[a-z]+/.(com|org|net)\"]);\n+LL |     let set_error = RegexSet::new(&[OPENING_PAREN, r\"[a-z]+/.(com|org|net)\"]);\n    |                                     ^^^^^^^^^^^^^\n \n error: regex syntax error on position 0: unclosed group\n   --> $DIR/regex.rs:44:39\n    |\n-44 |     let bset_error = BRegexSet::new(&[OPENING_PAREN, r\"[a-z]+/.(com|org|net)\"]);\n+LL |     let bset_error = BRegexSet::new(&[OPENING_PAREN, r\"[a-z]+/.(com|org|net)\"]);\n    |                                       ^^^^^^^^^^^^^\n \n error: regex syntax error: unrecognized escape sequence\n   --> $DIR/regex.rs:46:45\n    |\n-46 |     let raw_string_error = Regex::new(r\"[...//...]\");\n+LL |     let raw_string_error = Regex::new(r\"[...//...]\");\n    |                                             ^^\n \n error: regex syntax error: unrecognized escape sequence\n   --> $DIR/regex.rs:47:46\n    |\n-47 |     let raw_string_error = Regex::new(r#\"[...//...]\"#);\n+LL |     let raw_string_error = Regex::new(r#\"[...//...]\"#);\n    |                                              ^^\n \n error: trivial regex\n   --> $DIR/regex.rs:51:33\n    |\n-51 |     let trivial_eq = Regex::new(\"^foobar$\");\n+LL |     let trivial_eq = Regex::new(\"^foobar$\");\n    |                                 ^^^^^^^^^^\n    |\n    = help: consider using `==` on `str`s\n \n error: trivial regex\n   --> $DIR/regex.rs:53:48\n    |\n-53 |     let trivial_eq_builder = RegexBuilder::new(\"^foobar$\");\n+LL |     let trivial_eq_builder = RegexBuilder::new(\"^foobar$\");\n    |                                                ^^^^^^^^^^\n    |\n    = help: consider using `==` on `str`s\n \n error: trivial regex\n   --> $DIR/regex.rs:55:42\n    |\n-55 |     let trivial_starts_with = Regex::new(\"^foobar\");\n+LL |     let trivial_starts_with = Regex::new(\"^foobar\");\n    |                                          ^^^^^^^^^\n    |\n    = help: consider using `str::starts_with`\n \n error: trivial regex\n   --> $DIR/regex.rs:57:40\n    |\n-57 |     let trivial_ends_with = Regex::new(\"foobar$\");\n+LL |     let trivial_ends_with = Regex::new(\"foobar$\");\n    |                                        ^^^^^^^^^\n    |\n    = help: consider using `str::ends_with`\n \n error: trivial regex\n   --> $DIR/regex.rs:59:39\n    |\n-59 |     let trivial_contains = Regex::new(\"foobar\");\n+LL |     let trivial_contains = Regex::new(\"foobar\");\n    |                                       ^^^^^^^^\n    |\n    = help: consider using `str::contains`\n \n error: trivial regex\n   --> $DIR/regex.rs:61:39\n    |\n-61 |     let trivial_contains = Regex::new(NOT_A_REAL_REGEX);\n+LL |     let trivial_contains = Regex::new(NOT_A_REAL_REGEX);\n    |                                       ^^^^^^^^^^^^^^^^\n    |\n    = help: consider using `str::contains`\n \n error: trivial regex\n   --> $DIR/regex.rs:63:40\n    |\n-63 |     let trivial_backslash = Regex::new(\"a/.b\");\n+LL |     let trivial_backslash = Regex::new(\"a/.b\");\n    |                                        ^^^^^^^\n    |\n    = help: consider using `str::contains`\n \n error: trivial regex\n   --> $DIR/regex.rs:66:36\n    |\n-66 |     let trivial_empty = Regex::new(\"\");\n+LL |     let trivial_empty = Regex::new(\"\");\n    |                                    ^^\n    |\n    = help: the regex is unlikely to be useful as it is\n \n error: trivial regex\n   --> $DIR/regex.rs:68:36\n    |\n-68 |     let trivial_empty = Regex::new(\"^\");\n+LL |     let trivial_empty = Regex::new(\"^\");\n    |                                    ^^^\n    |\n    = help: the regex is unlikely to be useful as it is\n \n error: trivial regex\n   --> $DIR/regex.rs:70:36\n    |\n-70 |     let trivial_empty = Regex::new(\"^$\");\n+LL |     let trivial_empty = Regex::new(\"^$\");\n    |                                    ^^^^\n    |\n    = help: consider using `str::is_empty`\n \n error: trivial regex\n   --> $DIR/regex.rs:72:44\n    |\n-72 |     let binary_trivial_empty = BRegex::new(\"^$\");\n+LL |     let binary_trivial_empty = BRegex::new(\"^$\");\n    |                                            ^^^^\n    |\n    = help: consider using `str::is_empty`"}, {"sha": "1efc66d442faa98bb23af23fd90009e70fb17cd7", "filename": "tests/ui/rename.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Frename.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Frename.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Frename.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,15 +1,15 @@\n error: unknown lint: `stutter`\n   --> $DIR/rename.rs:10:10\n    |\n-10 | #![allow(stutter)]\n+LL | #![allow(stutter)]\n    |          ^^^^^^^\n    |\n    = note: `-D unknown-lints` implied by `-D warnings`\n \n error: lint `clippy::stutter` has been renamed to `clippy::module_name_repetitions`\n   --> $DIR/rename.rs:12:8\n    |\n-12 | #[warn(clippy::stutter)]\n+LL | #[warn(clippy::stutter)]\n    |        ^^^^^^^^^^^^^^^ help: use the new name: `clippy::module_name_repetitions`\n    |\n    = note: `-D renamed-and-removed-lints` implied by `-D warnings`"}, {"sha": "e45f490463c33269928a279fde9e93525ef57412", "filename": "tests/ui/replace_consts.stderr", "status": "modified", "additions": 36, "deletions": 36, "changes": 72, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Freplace_consts.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Freplace_consts.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Freplace_consts.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,217 +1,217 @@\n error: using `ATOMIC_BOOL_INIT`\n   --> $DIR/replace_consts.rs:22:17\n    |\n-22 |     { let foo = ATOMIC_BOOL_INIT; };\n+LL |     { let foo = ATOMIC_BOOL_INIT; };\n    |                 ^^^^^^^^^^^^^^^^ help: try this: `AtomicBool::new(false)`\n    |\n note: lint level defined here\n   --> $DIR/replace_consts.rs:12:9\n    |\n-12 | #![deny(clippy::replace_consts)]\n+LL | #![deny(clippy::replace_consts)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^\n \n error: using `ATOMIC_ISIZE_INIT`\n   --> $DIR/replace_consts.rs:23:17\n    |\n-23 |     { let foo = ATOMIC_ISIZE_INIT; };\n+LL |     { let foo = ATOMIC_ISIZE_INIT; };\n    |                 ^^^^^^^^^^^^^^^^^ help: try this: `AtomicIsize::new(0)`\n \n error: using `ATOMIC_I8_INIT`\n   --> $DIR/replace_consts.rs:24:17\n    |\n-24 |     { let foo = ATOMIC_I8_INIT; };\n+LL |     { let foo = ATOMIC_I8_INIT; };\n    |                 ^^^^^^^^^^^^^^ help: try this: `AtomicI8::new(0)`\n \n error: using `ATOMIC_I16_INIT`\n   --> $DIR/replace_consts.rs:25:17\n    |\n-25 |     { let foo = ATOMIC_I16_INIT; };\n+LL |     { let foo = ATOMIC_I16_INIT; };\n    |                 ^^^^^^^^^^^^^^^ help: try this: `AtomicI16::new(0)`\n \n error: using `ATOMIC_I32_INIT`\n   --> $DIR/replace_consts.rs:26:17\n    |\n-26 |     { let foo = ATOMIC_I32_INIT; };\n+LL |     { let foo = ATOMIC_I32_INIT; };\n    |                 ^^^^^^^^^^^^^^^ help: try this: `AtomicI32::new(0)`\n \n error: using `ATOMIC_I64_INIT`\n   --> $DIR/replace_consts.rs:27:17\n    |\n-27 |     { let foo = ATOMIC_I64_INIT; };\n+LL |     { let foo = ATOMIC_I64_INIT; };\n    |                 ^^^^^^^^^^^^^^^ help: try this: `AtomicI64::new(0)`\n \n error: using `ATOMIC_USIZE_INIT`\n   --> $DIR/replace_consts.rs:28:17\n    |\n-28 |     { let foo = ATOMIC_USIZE_INIT; };\n+LL |     { let foo = ATOMIC_USIZE_INIT; };\n    |                 ^^^^^^^^^^^^^^^^^ help: try this: `AtomicUsize::new(0)`\n \n error: using `ATOMIC_U8_INIT`\n   --> $DIR/replace_consts.rs:29:17\n    |\n-29 |     { let foo = ATOMIC_U8_INIT; };\n+LL |     { let foo = ATOMIC_U8_INIT; };\n    |                 ^^^^^^^^^^^^^^ help: try this: `AtomicU8::new(0)`\n \n error: using `ATOMIC_U16_INIT`\n   --> $DIR/replace_consts.rs:30:17\n    |\n-30 |     { let foo = ATOMIC_U16_INIT; };\n+LL |     { let foo = ATOMIC_U16_INIT; };\n    |                 ^^^^^^^^^^^^^^^ help: try this: `AtomicU16::new(0)`\n \n error: using `ATOMIC_U32_INIT`\n   --> $DIR/replace_consts.rs:31:17\n    |\n-31 |     { let foo = ATOMIC_U32_INIT; };\n+LL |     { let foo = ATOMIC_U32_INIT; };\n    |                 ^^^^^^^^^^^^^^^ help: try this: `AtomicU32::new(0)`\n \n error: using `ATOMIC_U64_INIT`\n   --> $DIR/replace_consts.rs:32:17\n    |\n-32 |     { let foo = ATOMIC_U64_INIT; };\n+LL |     { let foo = ATOMIC_U64_INIT; };\n    |                 ^^^^^^^^^^^^^^^ help: try this: `AtomicU64::new(0)`\n \n error: using `MIN`\n   --> $DIR/replace_consts.rs:34:17\n    |\n-34 |     { let foo = std::isize::MIN; };\n+LL |     { let foo = std::isize::MIN; };\n    |                 ^^^^^^^^^^^^^^^ help: try this: `isize::min_value()`\n \n error: using `MIN`\n   --> $DIR/replace_consts.rs:35:17\n    |\n-35 |     { let foo = std::i8::MIN; };\n+LL |     { let foo = std::i8::MIN; };\n    |                 ^^^^^^^^^^^^ help: try this: `i8::min_value()`\n \n error: using `MIN`\n   --> $DIR/replace_consts.rs:36:17\n    |\n-36 |     { let foo = std::i16::MIN; };\n+LL |     { let foo = std::i16::MIN; };\n    |                 ^^^^^^^^^^^^^ help: try this: `i16::min_value()`\n \n error: using `MIN`\n   --> $DIR/replace_consts.rs:37:17\n    |\n-37 |     { let foo = std::i32::MIN; };\n+LL |     { let foo = std::i32::MIN; };\n    |                 ^^^^^^^^^^^^^ help: try this: `i32::min_value()`\n \n error: using `MIN`\n   --> $DIR/replace_consts.rs:38:17\n    |\n-38 |     { let foo = std::i64::MIN; };\n+LL |     { let foo = std::i64::MIN; };\n    |                 ^^^^^^^^^^^^^ help: try this: `i64::min_value()`\n \n error: using `MIN`\n   --> $DIR/replace_consts.rs:39:17\n    |\n-39 |     { let foo = std::i128::MIN; };\n+LL |     { let foo = std::i128::MIN; };\n    |                 ^^^^^^^^^^^^^^ help: try this: `i128::min_value()`\n \n error: using `MIN`\n   --> $DIR/replace_consts.rs:40:17\n    |\n-40 |     { let foo = std::usize::MIN; };\n+LL |     { let foo = std::usize::MIN; };\n    |                 ^^^^^^^^^^^^^^^ help: try this: `usize::min_value()`\n \n error: using `MIN`\n   --> $DIR/replace_consts.rs:41:17\n    |\n-41 |     { let foo = std::u8::MIN; };\n+LL |     { let foo = std::u8::MIN; };\n    |                 ^^^^^^^^^^^^ help: try this: `u8::min_value()`\n \n error: using `MIN`\n   --> $DIR/replace_consts.rs:42:17\n    |\n-42 |     { let foo = std::u16::MIN; };\n+LL |     { let foo = std::u16::MIN; };\n    |                 ^^^^^^^^^^^^^ help: try this: `u16::min_value()`\n \n error: using `MIN`\n   --> $DIR/replace_consts.rs:43:17\n    |\n-43 |     { let foo = std::u32::MIN; };\n+LL |     { let foo = std::u32::MIN; };\n    |                 ^^^^^^^^^^^^^ help: try this: `u32::min_value()`\n \n error: using `MIN`\n   --> $DIR/replace_consts.rs:44:17\n    |\n-44 |     { let foo = std::u64::MIN; };\n+LL |     { let foo = std::u64::MIN; };\n    |                 ^^^^^^^^^^^^^ help: try this: `u64::min_value()`\n \n error: using `MIN`\n   --> $DIR/replace_consts.rs:45:17\n    |\n-45 |     { let foo = std::u128::MIN; };\n+LL |     { let foo = std::u128::MIN; };\n    |                 ^^^^^^^^^^^^^^ help: try this: `u128::min_value()`\n \n error: using `MAX`\n   --> $DIR/replace_consts.rs:47:17\n    |\n-47 |     { let foo = std::isize::MAX; };\n+LL |     { let foo = std::isize::MAX; };\n    |                 ^^^^^^^^^^^^^^^ help: try this: `isize::max_value()`\n \n error: using `MAX`\n   --> $DIR/replace_consts.rs:48:17\n    |\n-48 |     { let foo = std::i8::MAX; };\n+LL |     { let foo = std::i8::MAX; };\n    |                 ^^^^^^^^^^^^ help: try this: `i8::max_value()`\n \n error: using `MAX`\n   --> $DIR/replace_consts.rs:49:17\n    |\n-49 |     { let foo = std::i16::MAX; };\n+LL |     { let foo = std::i16::MAX; };\n    |                 ^^^^^^^^^^^^^ help: try this: `i16::max_value()`\n \n error: using `MAX`\n   --> $DIR/replace_consts.rs:50:17\n    |\n-50 |     { let foo = std::i32::MAX; };\n+LL |     { let foo = std::i32::MAX; };\n    |                 ^^^^^^^^^^^^^ help: try this: `i32::max_value()`\n \n error: using `MAX`\n   --> $DIR/replace_consts.rs:51:17\n    |\n-51 |     { let foo = std::i64::MAX; };\n+LL |     { let foo = std::i64::MAX; };\n    |                 ^^^^^^^^^^^^^ help: try this: `i64::max_value()`\n \n error: using `MAX`\n   --> $DIR/replace_consts.rs:52:17\n    |\n-52 |     { let foo = std::i128::MAX; };\n+LL |     { let foo = std::i128::MAX; };\n    |                 ^^^^^^^^^^^^^^ help: try this: `i128::max_value()`\n \n error: using `MAX`\n   --> $DIR/replace_consts.rs:53:17\n    |\n-53 |     { let foo = std::usize::MAX; };\n+LL |     { let foo = std::usize::MAX; };\n    |                 ^^^^^^^^^^^^^^^ help: try this: `usize::max_value()`\n \n error: using `MAX`\n   --> $DIR/replace_consts.rs:54:17\n    |\n-54 |     { let foo = std::u8::MAX; };\n+LL |     { let foo = std::u8::MAX; };\n    |                 ^^^^^^^^^^^^ help: try this: `u8::max_value()`\n \n error: using `MAX`\n   --> $DIR/replace_consts.rs:55:17\n    |\n-55 |     { let foo = std::u16::MAX; };\n+LL |     { let foo = std::u16::MAX; };\n    |                 ^^^^^^^^^^^^^ help: try this: `u16::max_value()`\n \n error: using `MAX`\n   --> $DIR/replace_consts.rs:56:17\n    |\n-56 |     { let foo = std::u32::MAX; };\n+LL |     { let foo = std::u32::MAX; };\n    |                 ^^^^^^^^^^^^^ help: try this: `u32::max_value()`\n \n error: using `MAX`\n   --> $DIR/replace_consts.rs:57:17\n    |\n-57 |     { let foo = std::u64::MAX; };\n+LL |     { let foo = std::u64::MAX; };\n    |                 ^^^^^^^^^^^^^ help: try this: `u64::max_value()`\n \n error: using `MAX`\n   --> $DIR/replace_consts.rs:58:17\n    |\n-58 |     { let foo = std::u128::MAX; };\n+LL |     { let foo = std::u128::MAX; };\n    |                 ^^^^^^^^^^^^^^ help: try this: `u128::max_value()`\n \n error: aborting due to 35 previous errors"}, {"sha": "e462a07ad51c3ace4ac50e05e2f3dba8dab2bbb0", "filename": "tests/ui/result_map_unit_fn.stderr", "status": "modified", "additions": 36, "deletions": 36, "changes": 72, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fresult_map_unit_fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fresult_map_unit_fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fresult_map_unit_fn.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,7 +1,7 @@\n error: called `map(f)` on an Result value where `f` is a unit function\n   --> $DIR/result_map_unit_fn.rs:43:5\n    |\n-43 |     x.field.map(do_nothing);\n+LL |     x.field.map(do_nothing);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Ok(x_field) = x.field { do_nothing(...) }`\n@@ -11,184 +11,184 @@ error: called `map(f)` on an Result value where `f` is a unit function\n error: called `map(f)` on an Result value where `f` is a unit function\n   --> $DIR/result_map_unit_fn.rs:45:5\n    |\n-45 |     x.field.map(do_nothing);\n+LL |     x.field.map(do_nothing);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Ok(x_field) = x.field { do_nothing(...) }`\n \n error: called `map(f)` on an Result value where `f` is a unit function\n   --> $DIR/result_map_unit_fn.rs:47:5\n    |\n-47 |     x.field.map(diverge);\n+LL |     x.field.map(diverge);\n    |     ^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Ok(x_field) = x.field { diverge(...) }`\n \n error: called `map(f)` on an Result value where `f` is a unit closure\n   --> $DIR/result_map_unit_fn.rs:53:5\n    |\n-53 |     x.field.map(|value| x.do_result_nothing(value + captured));\n+LL |     x.field.map(|value| x.do_result_nothing(value + captured));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Ok(value) = x.field { x.do_result_nothing(value + captured) }`\n \n error: called `map(f)` on an Result value where `f` is a unit closure\n   --> $DIR/result_map_unit_fn.rs:55:5\n    |\n-55 |     x.field.map(|value| { x.do_result_plus_one(value + captured); });\n+LL |     x.field.map(|value| { x.do_result_plus_one(value + captured); });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Ok(value) = x.field { x.do_result_plus_one(value + captured); }`\n \n error: called `map(f)` on an Result value where `f` is a unit closure\n   --> $DIR/result_map_unit_fn.rs:58:5\n    |\n-58 |     x.field.map(|value| do_nothing(value + captured));\n+LL |     x.field.map(|value| do_nothing(value + captured));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Ok(value) = x.field { do_nothing(value + captured) }`\n \n error: called `map(f)` on an Result value where `f` is a unit closure\n   --> $DIR/result_map_unit_fn.rs:60:5\n    |\n-60 |     x.field.map(|value| { do_nothing(value + captured) });\n+LL |     x.field.map(|value| { do_nothing(value + captured) });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Ok(value) = x.field { do_nothing(value + captured) }`\n \n error: called `map(f)` on an Result value where `f` is a unit closure\n   --> $DIR/result_map_unit_fn.rs:62:5\n    |\n-62 |     x.field.map(|value| { do_nothing(value + captured); });\n+LL |     x.field.map(|value| { do_nothing(value + captured); });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Ok(value) = x.field { do_nothing(value + captured); }`\n \n error: called `map(f)` on an Result value where `f` is a unit closure\n   --> $DIR/result_map_unit_fn.rs:64:5\n    |\n-64 |     x.field.map(|value| { { do_nothing(value + captured); } });\n+LL |     x.field.map(|value| { { do_nothing(value + captured); } });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Ok(value) = x.field { do_nothing(value + captured); }`\n \n error: called `map(f)` on an Result value where `f` is a unit closure\n   --> $DIR/result_map_unit_fn.rs:67:5\n    |\n-67 |     x.field.map(|value| diverge(value + captured));\n+LL |     x.field.map(|value| diverge(value + captured));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Ok(value) = x.field { diverge(value + captured) }`\n \n error: called `map(f)` on an Result value where `f` is a unit closure\n   --> $DIR/result_map_unit_fn.rs:69:5\n    |\n-69 |     x.field.map(|value| { diverge(value + captured) });\n+LL |     x.field.map(|value| { diverge(value + captured) });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Ok(value) = x.field { diverge(value + captured) }`\n \n error: called `map(f)` on an Result value where `f` is a unit closure\n   --> $DIR/result_map_unit_fn.rs:71:5\n    |\n-71 |     x.field.map(|value| { diverge(value + captured); });\n+LL |     x.field.map(|value| { diverge(value + captured); });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Ok(value) = x.field { diverge(value + captured); }`\n \n error: called `map(f)` on an Result value where `f` is a unit closure\n   --> $DIR/result_map_unit_fn.rs:73:5\n    |\n-73 |     x.field.map(|value| { { diverge(value + captured); } });\n+LL |     x.field.map(|value| { { diverge(value + captured); } });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Ok(value) = x.field { diverge(value + captured); }`\n \n error: called `map(f)` on an Result value where `f` is a unit closure\n   --> $DIR/result_map_unit_fn.rs:78:5\n    |\n-78 |     x.field.map(|value| { let y = plus_one(value + captured); });\n+LL |     x.field.map(|value| { let y = plus_one(value + captured); });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Ok(value) = x.field { let y = plus_one(value + captured); }`\n \n error: called `map(f)` on an Result value where `f` is a unit closure\n   --> $DIR/result_map_unit_fn.rs:80:5\n    |\n-80 |     x.field.map(|value| { plus_one(value + captured); });\n+LL |     x.field.map(|value| { plus_one(value + captured); });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Ok(value) = x.field { plus_one(value + captured); }`\n \n error: called `map(f)` on an Result value where `f` is a unit closure\n   --> $DIR/result_map_unit_fn.rs:82:5\n    |\n-82 |     x.field.map(|value| { { plus_one(value + captured); } });\n+LL |     x.field.map(|value| { { plus_one(value + captured); } });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Ok(value) = x.field { plus_one(value + captured); }`\n \n error: called `map(f)` on an Result value where `f` is a unit closure\n   --> $DIR/result_map_unit_fn.rs:85:5\n    |\n-85 |     x.field.map(|ref value| { do_nothing(value + captured) });\n+LL |     x.field.map(|ref value| { do_nothing(value + captured) });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Ok(ref value) = x.field { do_nothing(value + captured) }`\n \n error: called `map(f)` on an Result value where `f` is a unit closure\n   --> $DIR/result_map_unit_fn.rs:88:5\n    |\n-88 |     x.field.map(|value| { do_nothing(value); do_nothing(value) });\n+LL |     x.field.map(|value| { do_nothing(value); do_nothing(value) });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Ok(value) = x.field { ... }`\n \n error: called `map(f)` on an Result value where `f` is a unit closure\n   --> $DIR/result_map_unit_fn.rs:90:5\n    |\n-90 |     x.field.map(|value| if value > 0 { do_nothing(value); do_nothing(value) });\n+LL |     x.field.map(|value| if value > 0 { do_nothing(value); do_nothing(value) });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Ok(value) = x.field { ... }`\n \n error: called `map(f)` on an Result value where `f` is a unit closure\n   --> $DIR/result_map_unit_fn.rs:94:5\n    |\n-94 |        x.field.map(|value| {\n+LL |        x.field.map(|value| {\n    |   _____^\n    |  |_____|\n    | ||\n-95 | ||         do_nothing(value);\n-96 | ||         do_nothing(value)\n-97 | ||     });\n+LL | ||         do_nothing(value);\n+LL | ||         do_nothing(value)\n+LL | ||     });\n    | ||______^- help: try this: `if let Ok(value) = x.field { ... }`\n    | |_______|\n    | \n \n error: called `map(f)` on an Result value where `f` is a unit closure\n   --> $DIR/result_map_unit_fn.rs:98:5\n    |\n-98 |     x.field.map(|value| { do_nothing(value); do_nothing(value); });\n+LL |     x.field.map(|value| { do_nothing(value); do_nothing(value); });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Ok(value) = x.field { ... }`\n \n error: called `map(f)` on an Result value where `f` is a unit function\n-   --> $DIR/result_map_unit_fn.rs:102:5\n-    |\n-102 |     \"12\".parse::<i32>().map(diverge);\n-    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n-    |     |\n-    |     help: try this: `if let Ok(_) = \"12\".parse::<i32>() { diverge(...) }`\n+  --> $DIR/result_map_unit_fn.rs:102:5\n+   |\n+LL |     \"12\".parse::<i32>().map(diverge);\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n+   |     |\n+   |     help: try this: `if let Ok(_) = \"12\".parse::<i32>() { diverge(...) }`\n \n error: called `map(f)` on an Result value where `f` is a unit function\n-   --> $DIR/result_map_unit_fn.rs:108:5\n-    |\n-108 |     y.map(do_nothing);\n-    |     ^^^^^^^^^^^^^^^^^-\n-    |     |\n-    |     help: try this: `if let Ok(_y) = y { do_nothing(...) }`\n+  --> $DIR/result_map_unit_fn.rs:108:5\n+   |\n+LL |     y.map(do_nothing);\n+   |     ^^^^^^^^^^^^^^^^^-\n+   |     |\n+   |     help: try this: `if let Ok(_y) = y { do_nothing(...) }`\n \n error: aborting due to 23 previous errors\n "}, {"sha": "61e54d534686fbeced22b3532583bd65ce9685df", "filename": "tests/ui/serde.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fserde.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fserde.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fserde.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,12 +1,12 @@\n error: you should not implement `visit_string` without also implementing `visit_str`\n   --> $DIR/serde.rs:48:5\n    |\n-48 | /     fn visit_string<E>(self, _v: String) -> Result<Self::Value, E>\n-49 | |     where\n-50 | |         E: serde::de::Error,\n-51 | |     {\n-52 | |         unimplemented!()\n-53 | |     }\n+LL | /     fn visit_string<E>(self, _v: String) -> Result<Self::Value, E>\n+LL | |     where\n+LL | |         E: serde::de::Error,\n+LL | |     {\n+LL | |         unimplemented!()\n+LL | |     }\n    | |_____^\n    |\n    = note: `-D clippy::serde-api-misuse` implied by `-D warnings`"}, {"sha": "158933e9672787b3672f7633f60c9299babac96c", "filename": "tests/ui/shadow.stderr", "status": "modified", "additions": 23, "deletions": 23, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fshadow.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fshadow.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fshadow.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,137 +1,137 @@\n error: `x` is shadowed by itself in `&mut x`\n   --> $DIR/shadow.rs:29:5\n    |\n-29 |     let x = &mut x;\n+LL |     let x = &mut x;\n    |     ^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::shadow-same` implied by `-D warnings`\n note: previous binding is here\n   --> $DIR/shadow.rs:28:13\n    |\n-28 |     let mut x = 1;\n+LL |     let mut x = 1;\n    |             ^\n \n error: `x` is shadowed by itself in `{ x }`\n   --> $DIR/shadow.rs:30:5\n    |\n-30 |     let x = { x };\n+LL |     let x = { x };\n    |     ^^^^^^^^^^^^^^\n    |\n note: previous binding is here\n   --> $DIR/shadow.rs:29:9\n    |\n-29 |     let x = &mut x;\n+LL |     let x = &mut x;\n    |         ^\n \n error: `x` is shadowed by itself in `(&*x)`\n   --> $DIR/shadow.rs:31:5\n    |\n-31 |     let x = (&*x);\n+LL |     let x = (&*x);\n    |     ^^^^^^^^^^^^^^\n    |\n note: previous binding is here\n   --> $DIR/shadow.rs:30:9\n    |\n-30 |     let x = { x };\n+LL |     let x = { x };\n    |         ^\n \n error: `x` is shadowed by `{ *x + 1 }` which reuses the original value\n   --> $DIR/shadow.rs:32:9\n    |\n-32 |     let x = { *x + 1 };\n+LL |     let x = { *x + 1 };\n    |         ^\n    |\n    = note: `-D clippy::shadow-reuse` implied by `-D warnings`\n note: initialization happens here\n   --> $DIR/shadow.rs:32:13\n    |\n-32 |     let x = { *x + 1 };\n+LL |     let x = { *x + 1 };\n    |             ^^^^^^^^^^\n note: previous binding is here\n   --> $DIR/shadow.rs:31:9\n    |\n-31 |     let x = (&*x);\n+LL |     let x = (&*x);\n    |         ^\n \n error: `x` is shadowed by `id(x)` which reuses the original value\n   --> $DIR/shadow.rs:33:9\n    |\n-33 |     let x = id(x);\n+LL |     let x = id(x);\n    |         ^\n    |\n note: initialization happens here\n   --> $DIR/shadow.rs:33:13\n    |\n-33 |     let x = id(x);\n+LL |     let x = id(x);\n    |             ^^^^^\n note: previous binding is here\n   --> $DIR/shadow.rs:32:9\n    |\n-32 |     let x = { *x + 1 };\n+LL |     let x = { *x + 1 };\n    |         ^\n \n error: `x` is shadowed by `(1, x)` which reuses the original value\n   --> $DIR/shadow.rs:34:9\n    |\n-34 |     let x = (1, x);\n+LL |     let x = (1, x);\n    |         ^\n    |\n note: initialization happens here\n   --> $DIR/shadow.rs:34:13\n    |\n-34 |     let x = (1, x);\n+LL |     let x = (1, x);\n    |             ^^^^^^\n note: previous binding is here\n   --> $DIR/shadow.rs:33:9\n    |\n-33 |     let x = id(x);\n+LL |     let x = id(x);\n    |         ^\n \n error: `x` is shadowed by `first(x)` which reuses the original value\n   --> $DIR/shadow.rs:35:9\n    |\n-35 |     let x = first(x);\n+LL |     let x = first(x);\n    |         ^\n    |\n note: initialization happens here\n   --> $DIR/shadow.rs:35:13\n    |\n-35 |     let x = first(x);\n+LL |     let x = first(x);\n    |             ^^^^^^^^\n note: previous binding is here\n   --> $DIR/shadow.rs:34:9\n    |\n-34 |     let x = (1, x);\n+LL |     let x = (1, x);\n    |         ^\n \n error: `x` is shadowed by `y`\n   --> $DIR/shadow.rs:37:9\n    |\n-37 |     let x = y;\n+LL |     let x = y;\n    |         ^\n    |\n    = note: `-D clippy::shadow-unrelated` implied by `-D warnings`\n note: initialization happens here\n   --> $DIR/shadow.rs:37:13\n    |\n-37 |     let x = y;\n+LL |     let x = y;\n    |             ^\n note: previous binding is here\n   --> $DIR/shadow.rs:35:9\n    |\n-35 |     let x = first(x);\n+LL |     let x = first(x);\n    |         ^\n \n error: `x` shadows a previous declaration\n   --> $DIR/shadow.rs:39:5\n    |\n-39 |     let x;\n+LL |     let x;\n    |     ^^^^^^\n    |\n note: previous binding is here\n   --> $DIR/shadow.rs:37:9\n    |\n-37 |     let x = y;\n+LL |     let x = y;\n    |         ^\n \n error: aborting due to 9 previous errors"}, {"sha": "4141a003fc4d4c365ae8d03ef30c922868600049", "filename": "tests/ui/short_circuit_statement.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fshort_circuit_statement.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fshort_circuit_statement.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fshort_circuit_statement.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,21 +1,21 @@\n error: boolean short circuit operator in statement may be clearer using an explicit test\n   --> $DIR/short_circuit_statement.rs:13:5\n    |\n-13 |     f() && g();\n+LL |     f() && g();\n    |     ^^^^^^^^^^^ help: replace it with: `if f() { g(); }`\n    |\n    = note: `-D clippy::short-circuit-statement` implied by `-D warnings`\n \n error: boolean short circuit operator in statement may be clearer using an explicit test\n   --> $DIR/short_circuit_statement.rs:14:5\n    |\n-14 |     f() || g();\n+LL |     f() || g();\n    |     ^^^^^^^^^^^ help: replace it with: `if !f() { g(); }`\n \n error: boolean short circuit operator in statement may be clearer using an explicit test\n   --> $DIR/short_circuit_statement.rs:15:5\n    |\n-15 |     1 == 2 || g();\n+LL |     1 == 2 || g();\n    |     ^^^^^^^^^^^^^^ help: replace it with: `if !(1 == 2) { g(); }`\n \n error: aborting due to 3 previous errors"}, {"sha": "7fa3211ab72017ad7da0d5390463c6911690b6c5", "filename": "tests/ui/single_char_pattern.stderr", "status": "modified", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fsingle_char_pattern.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fsingle_char_pattern.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsingle_char_pattern.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,123 +1,123 @@\n error: single-character string constant used as pattern\n   --> $DIR/single_char_pattern.rs:14:13\n    |\n-14 |     x.split(\"x\");\n+LL |     x.split(\"x\");\n    |             ^^^ help: try using a char instead: `'x'`\n    |\n    = note: `-D clippy::single-char-pattern` implied by `-D warnings`\n \n error: single-character string constant used as pattern\n   --> $DIR/single_char_pattern.rs:31:16\n    |\n-31 |     x.contains(\"x\");\n+LL |     x.contains(\"x\");\n    |                ^^^ help: try using a char instead: `'x'`\n \n error: single-character string constant used as pattern\n   --> $DIR/single_char_pattern.rs:32:19\n    |\n-32 |     x.starts_with(\"x\");\n+LL |     x.starts_with(\"x\");\n    |                   ^^^ help: try using a char instead: `'x'`\n \n error: single-character string constant used as pattern\n   --> $DIR/single_char_pattern.rs:33:17\n    |\n-33 |     x.ends_with(\"x\");\n+LL |     x.ends_with(\"x\");\n    |                 ^^^ help: try using a char instead: `'x'`\n \n error: single-character string constant used as pattern\n   --> $DIR/single_char_pattern.rs:34:12\n    |\n-34 |     x.find(\"x\");\n+LL |     x.find(\"x\");\n    |            ^^^ help: try using a char instead: `'x'`\n \n error: single-character string constant used as pattern\n   --> $DIR/single_char_pattern.rs:35:13\n    |\n-35 |     x.rfind(\"x\");\n+LL |     x.rfind(\"x\");\n    |             ^^^ help: try using a char instead: `'x'`\n \n error: single-character string constant used as pattern\n   --> $DIR/single_char_pattern.rs:36:14\n    |\n-36 |     x.rsplit(\"x\");\n+LL |     x.rsplit(\"x\");\n    |              ^^^ help: try using a char instead: `'x'`\n \n error: single-character string constant used as pattern\n   --> $DIR/single_char_pattern.rs:37:24\n    |\n-37 |     x.split_terminator(\"x\");\n+LL |     x.split_terminator(\"x\");\n    |                        ^^^ help: try using a char instead: `'x'`\n \n error: single-character string constant used as pattern\n   --> $DIR/single_char_pattern.rs:38:25\n    |\n-38 |     x.rsplit_terminator(\"x\");\n+LL |     x.rsplit_terminator(\"x\");\n    |                         ^^^ help: try using a char instead: `'x'`\n \n error: single-character string constant used as pattern\n   --> $DIR/single_char_pattern.rs:39:17\n    |\n-39 |     x.splitn(0, \"x\");\n+LL |     x.splitn(0, \"x\");\n    |                 ^^^ help: try using a char instead: `'x'`\n \n error: single-character string constant used as pattern\n   --> $DIR/single_char_pattern.rs:40:18\n    |\n-40 |     x.rsplitn(0, \"x\");\n+LL |     x.rsplitn(0, \"x\");\n    |                  ^^^ help: try using a char instead: `'x'`\n \n error: single-character string constant used as pattern\n   --> $DIR/single_char_pattern.rs:41:15\n    |\n-41 |     x.matches(\"x\");\n+LL |     x.matches(\"x\");\n    |               ^^^ help: try using a char instead: `'x'`\n \n error: single-character string constant used as pattern\n   --> $DIR/single_char_pattern.rs:42:16\n    |\n-42 |     x.rmatches(\"x\");\n+LL |     x.rmatches(\"x\");\n    |                ^^^ help: try using a char instead: `'x'`\n \n error: single-character string constant used as pattern\n   --> $DIR/single_char_pattern.rs:43:21\n    |\n-43 |     x.match_indices(\"x\");\n+LL |     x.match_indices(\"x\");\n    |                     ^^^ help: try using a char instead: `'x'`\n \n error: single-character string constant used as pattern\n   --> $DIR/single_char_pattern.rs:44:22\n    |\n-44 |     x.rmatch_indices(\"x\");\n+LL |     x.rmatch_indices(\"x\");\n    |                      ^^^ help: try using a char instead: `'x'`\n \n error: single-character string constant used as pattern\n   --> $DIR/single_char_pattern.rs:45:26\n    |\n-45 |     x.trim_start_matches(\"x\");\n+LL |     x.trim_start_matches(\"x\");\n    |                          ^^^ help: try using a char instead: `'x'`\n \n error: single-character string constant used as pattern\n   --> $DIR/single_char_pattern.rs:46:24\n    |\n-46 |     x.trim_end_matches(\"x\");\n+LL |     x.trim_end_matches(\"x\");\n    |                        ^^^ help: try using a char instead: `'x'`\n \n error: single-character string constant used as pattern\n   --> $DIR/single_char_pattern.rs:48:13\n    |\n-48 |     x.split(\"/n\");\n+LL |     x.split(\"/n\");\n    |             ^^^^ help: try using a char instead: `'/n'`\n \n error: single-character string constant used as pattern\n   --> $DIR/single_char_pattern.rs:53:31\n    |\n-53 |     x.replace(\";\", \",\").split(\",\"); // issue #2978\n+LL |     x.replace(\";\", \",\").split(\",\"); // issue #2978\n    |                               ^^^ help: try using a char instead: `','`\n \n error: single-character string constant used as pattern\n   --> $DIR/single_char_pattern.rs:54:19\n    |\n-54 |     x.starts_with(\"/x03\"); // issue #2996\n+LL |     x.starts_with(\"/x03\"); // issue #2996\n    |                   ^^^^^^ help: try using a char instead: `'/x03'`\n \n error: aborting due to 20 previous errors"}, {"sha": "41776030800e041d7b9c81ba49325239ca93dfa7", "filename": "tests/ui/single_match.stderr", "status": "modified", "additions": 32, "deletions": 32, "changes": 64, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fsingle_match.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fsingle_match.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsingle_match.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,68 +1,68 @@\n error: you seem to be trying to use match for destructuring a single pattern. Consider using `if let`\n   --> $DIR/single_match.rs:17:5\n    |\n-17 | /     match x {\n-18 | |         Some(y) => {\n-19 | |             println!(\"{:?}\", y);\n-20 | |         },\n-21 | |         _ => (),\n-22 | |     };\n+LL | /     match x {\n+LL | |         Some(y) => {\n+LL | |             println!(\"{:?}\", y);\n+LL | |         },\n+LL | |         _ => (),\n+LL | |     };\n    | |_____^\n    |\n    = note: `-D clippy::single-match` implied by `-D warnings`\n help: try this\n    |\n-17 |     if let Some(y) = x {\n-18 |     println!(\"{:?}\", y);\n-19 | };\n+LL |     if let Some(y) = x {\n+LL |     println!(\"{:?}\", y);\n+LL | };\n    |\n \n error: you seem to be trying to use match for destructuring a single pattern. Consider using `if let`\n   --> $DIR/single_match.rs:25:5\n    |\n-25 | /     match x {\n-26 | |         // Note the missing block braces.\n-27 | |         // We suggest `if let Some(y) = x { .. }` because the macro\n-28 | |         // is expanded before we can do anything.\n-29 | |         Some(y) => println!(\"{:?}\", y),\n-30 | |         _ => (),\n-31 | |     }\n+LL | /     match x {\n+LL | |         // Note the missing block braces.\n+LL | |         // We suggest `if let Some(y) = x { .. }` because the macro\n+LL | |         // is expanded before we can do anything.\n+LL | |         Some(y) => println!(\"{:?}\", y),\n+LL | |         _ => (),\n+LL | |     }\n    | |_____^ help: try this: `if let Some(y) = x { println!(\"{:?}\", y) }`\n \n error: you seem to be trying to use match for destructuring a single pattern. Consider using `if let`\n   --> $DIR/single_match.rs:34:5\n    |\n-34 | /     match z {\n-35 | |         (2...3, 7...9) => dummy(),\n-36 | |         _ => {},\n-37 | |     };\n+LL | /     match z {\n+LL | |         (2...3, 7...9) => dummy(),\n+LL | |         _ => {},\n+LL | |     };\n    | |_____^ help: try this: `if let (2...3, 7...9) = z { dummy() }`\n \n error: you seem to be trying to use match for destructuring a single pattern. Consider using `if let`\n   --> $DIR/single_match.rs:63:5\n    |\n-63 | /     match x {\n-64 | |         Some(y) => dummy(),\n-65 | |         None => (),\n-66 | |     };\n+LL | /     match x {\n+LL | |         Some(y) => dummy(),\n+LL | |         None => (),\n+LL | |     };\n    | |_____^ help: try this: `if let Some(y) = x { dummy() }`\n \n error: you seem to be trying to use match for destructuring a single pattern. Consider using `if let`\n   --> $DIR/single_match.rs:68:5\n    |\n-68 | /     match y {\n-69 | |         Ok(y) => dummy(),\n-70 | |         Err(..) => (),\n-71 | |     };\n+LL | /     match y {\n+LL | |         Ok(y) => dummy(),\n+LL | |         Err(..) => (),\n+LL | |     };\n    | |_____^ help: try this: `if let Ok(y) = y { dummy() }`\n \n error: you seem to be trying to use match for destructuring a single pattern. Consider using `if let`\n   --> $DIR/single_match.rs:75:5\n    |\n-75 | /     match c {\n-76 | |         Cow::Borrowed(..) => dummy(),\n-77 | |         Cow::Owned(..) => (),\n-78 | |     };\n+LL | /     match c {\n+LL | |         Cow::Borrowed(..) => dummy(),\n+LL | |         Cow::Owned(..) => (),\n+LL | |     };\n    | |_____^ help: try this: `if let Cow::Borrowed(..) = c { dummy() }`\n \n error: aborting due to 6 previous errors"}, {"sha": "ff780ad9667d808783738db58838929ef35045ee", "filename": "tests/ui/single_match_else.stderr", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fsingle_match_else.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fsingle_match_else.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsingle_match_else.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,22 +1,22 @@\n error: you seem to be trying to use match for destructuring a single pattern. Consider using `if let`\n   --> $DIR/single_match_else.rs:21:5\n    |\n-21 | /     match ExprNode::Butterflies {\n-22 | |         ExprNode::ExprAddrOf => Some(&NODE),\n-23 | |         _ => {\n-24 | |             let x = 5;\n-25 | |             None\n-26 | |         },\n-27 | |     }\n+LL | /     match ExprNode::Butterflies {\n+LL | |         ExprNode::ExprAddrOf => Some(&NODE),\n+LL | |         _ => {\n+LL | |             let x = 5;\n+LL | |             None\n+LL | |         },\n+LL | |     }\n    | |_____^\n    |\n    = note: `-D clippy::single-match-else` implied by `-D warnings`\n help: try this\n    |\n-21 |     if let ExprNode::ExprAddrOf = ExprNode::Butterflies { Some(&NODE) } else {\n-22 |     let x = 5;\n-23 |     None\n-24 | }\n+LL |     if let ExprNode::ExprAddrOf = ExprNode::Butterflies { Some(&NODE) } else {\n+LL |     let x = 5;\n+LL |     None\n+LL | }\n    |\n \n error: aborting due to previous error"}, {"sha": "319234386acc60376d901ee02be1b07274a08fae", "filename": "tests/ui/slow_vector_initialization.stderr", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fslow_vector_initialization.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fslow_vector_initialization.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fslow_vector_initialization.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,59 +1,59 @@\n error: slow zero-filling initialization\n   --> $DIR/slow_vector_initialization.rs:22:5\n    |\n-21 |     let mut vec1 = Vec::with_capacity(len);\n+LL |     let mut vec1 = Vec::with_capacity(len);\n    |                    ----------------------- help: consider replace allocation with: `vec![0; len]`\n-22 |     vec1.extend(repeat(0).take(len));\n+LL |     vec1.extend(repeat(0).take(len));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::slow-vector-initialization` implied by `-D warnings`\n \n error: slow zero-filling initialization\n   --> $DIR/slow_vector_initialization.rs:26:5\n    |\n-25 |     let mut vec2 = Vec::with_capacity(len - 10);\n+LL |     let mut vec2 = Vec::with_capacity(len - 10);\n    |                    ---------------------------- help: consider replace allocation with: `vec![0; len - 10]`\n-26 |     vec2.extend(repeat(0).take(len - 10));\n+LL |     vec2.extend(repeat(0).take(len - 10));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: slow zero-filling initialization\n   --> $DIR/slow_vector_initialization.rs:40:5\n    |\n-39 |     let mut resized_vec = Vec::with_capacity(30);\n+LL |     let mut resized_vec = Vec::with_capacity(30);\n    |                           ---------------------- help: consider replace allocation with: `vec![0; 30]`\n-40 |     resized_vec.resize(30, 0);\n+LL |     resized_vec.resize(30, 0);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: slow zero-filling initialization\n   --> $DIR/slow_vector_initialization.rs:43:5\n    |\n-42 |     let mut extend_vec = Vec::with_capacity(30);\n+LL |     let mut extend_vec = Vec::with_capacity(30);\n    |                          ---------------------- help: consider replace allocation with: `vec![0; 30]`\n-43 |     extend_vec.extend(repeat(0).take(30));\n+LL |     extend_vec.extend(repeat(0).take(30));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: slow zero-filling initialization\n   --> $DIR/slow_vector_initialization.rs:50:5\n    |\n-49 |     let mut vec1 = Vec::with_capacity(len);\n+LL |     let mut vec1 = Vec::with_capacity(len);\n    |                    ----------------------- help: consider replace allocation with: `vec![0; len]`\n-50 |     vec1.resize(len, 0);\n+LL |     vec1.resize(len, 0);\n    |     ^^^^^^^^^^^^^^^^^^^\n \n error: slow zero-filling initialization\n   --> $DIR/slow_vector_initialization.rs:58:5\n    |\n-57 |     let mut vec3 = Vec::with_capacity(len - 10);\n+LL |     let mut vec3 = Vec::with_capacity(len - 10);\n    |                    ---------------------------- help: consider replace allocation with: `vec![0; len - 10]`\n-58 |     vec3.resize(len - 10, 0);\n+LL |     vec3.resize(len - 10, 0);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: slow zero-filling initialization\n   --> $DIR/slow_vector_initialization.rs:62:5\n    |\n-61 |     vec1 = Vec::with_capacity(10);\n+LL |     vec1 = Vec::with_capacity(10);\n    |            ---------------------- help: consider replace allocation with: `vec![0; 10]`\n-62 |     vec1.resize(10, 0);\n+LL |     vec1.resize(10, 0);\n    |     ^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 7 previous errors"}, {"sha": "ed1ccad9814b400d7fb2f5bbfe792d1919f4781b", "filename": "tests/ui/starts_ends_with.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fstarts_ends_with.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fstarts_ends_with.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fstarts_ends_with.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,77 +1,77 @@\n error: you should use the `starts_with` method\n   --> $DIR/starts_ends_with.rs:16:5\n    |\n-16 |     \"\".chars().next() == Some(' ');\n+LL |     \"\".chars().next() == Some(' ');\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: like this: `\"\".starts_with(' ')`\n    |\n    = note: `-D clippy::chars-next-cmp` implied by `-D warnings`\n \n error: you should use the `starts_with` method\n   --> $DIR/starts_ends_with.rs:17:5\n    |\n-17 |     Some(' ') != \"\".chars().next();\n+LL |     Some(' ') != \"\".chars().next();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: like this: `!\"\".starts_with(' ')`\n \n error: you should use the `starts_with` method\n   --> $DIR/starts_ends_with.rs:22:8\n    |\n-22 |     if s.chars().next().unwrap() == 'f' {\n+LL |     if s.chars().next().unwrap() == 'f' {\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: like this: `s.starts_with('f')`\n \n error: you should use the `ends_with` method\n   --> $DIR/starts_ends_with.rs:26:8\n    |\n-26 |     if s.chars().next_back().unwrap() == 'o' {\n+LL |     if s.chars().next_back().unwrap() == 'o' {\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: like this: `s.ends_with('o')`\n    |\n    = note: `-D clippy::chars-last-cmp` implied by `-D warnings`\n \n error: you should use the `ends_with` method\n   --> $DIR/starts_ends_with.rs:30:8\n    |\n-30 |     if s.chars().last().unwrap() == 'o' {\n+LL |     if s.chars().last().unwrap() == 'o' {\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: like this: `s.ends_with('o')`\n \n error: you should use the `starts_with` method\n   --> $DIR/starts_ends_with.rs:34:8\n    |\n-34 |     if s.chars().next().unwrap() != 'f' {\n+LL |     if s.chars().next().unwrap() != 'f' {\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: like this: `!s.starts_with('f')`\n \n error: you should use the `ends_with` method\n   --> $DIR/starts_ends_with.rs:38:8\n    |\n-38 |     if s.chars().next_back().unwrap() != 'o' {\n+LL |     if s.chars().next_back().unwrap() != 'o' {\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: like this: `!s.ends_with('o')`\n \n error: you should use the `ends_with` method\n   --> $DIR/starts_ends_with.rs:42:8\n    |\n-42 |     if s.chars().last().unwrap() != 'o' {\n+LL |     if s.chars().last().unwrap() != 'o' {\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: like this: `!s.ends_with('o')`\n \n error: you should use the `ends_with` method\n   --> $DIR/starts_ends_with.rs:50:5\n    |\n-50 |     \"\".chars().last() == Some(' ');\n+LL |     \"\".chars().last() == Some(' ');\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: like this: `\"\".ends_with(' ')`\n \n error: you should use the `ends_with` method\n   --> $DIR/starts_ends_with.rs:51:5\n    |\n-51 |     Some(' ') != \"\".chars().last();\n+LL |     Some(' ') != \"\".chars().last();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: like this: `!\"\".ends_with(' ')`\n \n error: you should use the `ends_with` method\n   --> $DIR/starts_ends_with.rs:52:5\n    |\n-52 |     \"\".chars().next_back() == Some(' ');\n+LL |     \"\".chars().next_back() == Some(' ');\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: like this: `\"\".ends_with(' ')`\n \n error: you should use the `ends_with` method\n   --> $DIR/starts_ends_with.rs:53:5\n    |\n-53 |     Some(' ') != \"\".chars().next_back();\n+LL |     Some(' ') != \"\".chars().next_back();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: like this: `!\"\".ends_with(' ')`\n \n error: aborting due to 12 previous errors"}, {"sha": "80a490b7884cd32b47a5b7ccc1ac629ebf918c48", "filename": "tests/ui/string_extend.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fstring_extend.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fstring_extend.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fstring_extend.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,21 +1,21 @@\n error: calling `.extend(_.chars())`\n   --> $DIR/string_extend.rs:25:5\n    |\n-25 |     s.extend(abc.chars());\n+LL |     s.extend(abc.chars());\n    |     ^^^^^^^^^^^^^^^^^^^^^ help: try this: `s.push_str(abc)`\n    |\n    = note: `-D clippy::string-extend-chars` implied by `-D warnings`\n \n error: calling `.extend(_.chars())`\n   --> $DIR/string_extend.rs:28:5\n    |\n-28 |     s.extend(\"abc\".chars());\n+LL |     s.extend(\"abc\".chars());\n    |     ^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `s.push_str(\"abc\")`\n \n error: calling `.extend(_.chars())`\n   --> $DIR/string_extend.rs:31:5\n    |\n-31 |     s.extend(def.chars());\n+LL |     s.extend(def.chars());\n    |     ^^^^^^^^^^^^^^^^^^^^^ help: try this: `s.push_str(&def)`\n \n error: aborting due to 3 previous errors"}, {"sha": "a8c80939b55edb1181c592eed8919b49a7a574ef", "filename": "tests/ui/strings.stderr", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fstrings.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fstrings.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fstrings.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,75 +1,75 @@\n error: manual implementation of an assign operation\n   --> $DIR/strings.rs:17:9\n    |\n-17 |         x = x + \".\";\n+LL |         x = x + \".\";\n    |         ^^^^^^^^^^^ help: replace it with: `x += \".\"`\n    |\n    = note: `-D clippy::assign-op-pattern` implied by `-D warnings`\n \n error: you added something to a string. Consider using `String::push_str()` instead\n   --> $DIR/strings.rs:17:13\n    |\n-17 |         x = x + \".\";\n+LL |         x = x + \".\";\n    |             ^^^^^^^\n    |\n    = note: `-D clippy::string-add` implied by `-D warnings`\n \n error: you added something to a string. Consider using `String::push_str()` instead\n   --> $DIR/strings.rs:21:13\n    |\n-21 |     let z = y + \"...\";\n+LL |     let z = y + \"...\";\n    |             ^^^^^^^^^\n \n error: you assigned the result of adding something to this string. Consider using `String::push_str()` instead\n   --> $DIR/strings.rs:31:9\n    |\n-31 |         x = x + \".\";\n+LL |         x = x + \".\";\n    |         ^^^^^^^^^^^\n    |\n    = note: `-D clippy::string-add-assign` implied by `-D warnings`\n \n error: manual implementation of an assign operation\n   --> $DIR/strings.rs:31:9\n    |\n-31 |         x = x + \".\";\n+LL |         x = x + \".\";\n    |         ^^^^^^^^^^^ help: replace it with: `x += \".\"`\n \n error: you assigned the result of adding something to this string. Consider using `String::push_str()` instead\n   --> $DIR/strings.rs:45:9\n    |\n-45 |         x = x + \".\";\n+LL |         x = x + \".\";\n    |         ^^^^^^^^^^^\n \n error: manual implementation of an assign operation\n   --> $DIR/strings.rs:45:9\n    |\n-45 |         x = x + \".\";\n+LL |         x = x + \".\";\n    |         ^^^^^^^^^^^ help: replace it with: `x += \".\"`\n \n error: you added something to a string. Consider using `String::push_str()` instead\n   --> $DIR/strings.rs:49:13\n    |\n-49 |     let z = y + \"...\";\n+LL |     let z = y + \"...\";\n    |             ^^^^^^^^^\n \n error: calling `as_bytes()` on a string literal\n   --> $DIR/strings.rs:57:14\n    |\n-57 |     let bs = \"hello there\".as_bytes();\n+LL |     let bs = \"hello there\".as_bytes();\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using a byte string literal instead: `b\"hello there\"`\n    |\n    = note: `-D clippy::string-lit-as-bytes` implied by `-D warnings`\n \n error: calling `as_bytes()` on a string literal\n   --> $DIR/strings.rs:59:14\n    |\n-59 |     let bs = r###\"raw string with three ### in it and some \" \"\"###.as_bytes();\n+LL |     let bs = r###\"raw string with three ### in it and some \" \"\"###.as_bytes();\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using a byte string literal instead: `br###\"raw string with three ### in it and some \" \"\"###`\n \n error: calling `as_bytes()` on `include_str!(..)`\n   --> $DIR/strings.rs:66:22\n    |\n-66 |     let includestr = include_str!(\"entry.rs\").as_bytes();\n+LL |     let includestr = include_str!(\"entry.rs\").as_bytes();\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `include_bytes!(..)` instead: `include_bytes!(\"entry.rs\")`\n \n error: aborting due to 11 previous errors"}, {"sha": "71cb08c77d75187e0bebab9ea4d04065585e2d78", "filename": "tests/ui/suspicious_arithmetic_impl.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fsuspicious_arithmetic_impl.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fsuspicious_arithmetic_impl.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsuspicious_arithmetic_impl.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,15 +1,15 @@\n error: Suspicious use of binary operator in `Add` impl\n   --> $DIR/suspicious_arithmetic_impl.rs:20:20\n    |\n-20 |         Foo(self.0 - other.0)\n+LL |         Foo(self.0 - other.0)\n    |                    ^\n    |\n    = note: `-D clippy::suspicious-arithmetic-impl` implied by `-D warnings`\n \n error: Suspicious use of binary operator in `AddAssign` impl\n   --> $DIR/suspicious_arithmetic_impl.rs:26:23\n    |\n-26 |         *self = *self - other;\n+LL |         *self = *self - other;\n    |                       ^\n    |\n    = note: #[deny(clippy::suspicious_op_assign_impl)] on by default"}, {"sha": "25afaccd7546ead70b36a2c3d63b88b2bf923953", "filename": "tests/ui/swap.stderr", "status": "modified", "additions": 19, "deletions": 19, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fswap.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fswap.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fswap.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,56 +1,56 @@\n error: this looks like you are swapping elements of `foo` manually\n   --> $DIR/swap.rs:17:5\n    |\n-17 | /     let temp = foo[0];\n-18 | |     foo[0] = foo[1];\n-19 | |     foo[1] = temp;\n+LL | /     let temp = foo[0];\n+LL | |     foo[0] = foo[1];\n+LL | |     foo[1] = temp;\n    | |_________________^ help: try: `foo.swap(0, 1)`\n    |\n    = note: `-D clippy::manual-swap` implied by `-D warnings`\n \n error: this looks like you are swapping elements of `foo` manually\n   --> $DIR/swap.rs:26:5\n    |\n-26 | /     let temp = foo[0];\n-27 | |     foo[0] = foo[1];\n-28 | |     foo[1] = temp;\n+LL | /     let temp = foo[0];\n+LL | |     foo[0] = foo[1];\n+LL | |     foo[1] = temp;\n    | |_________________^ help: try: `foo.swap(0, 1)`\n \n error: this looks like you are swapping elements of `foo` manually\n   --> $DIR/swap.rs:35:5\n    |\n-35 | /     let temp = foo[0];\n-36 | |     foo[0] = foo[1];\n-37 | |     foo[1] = temp;\n+LL | /     let temp = foo[0];\n+LL | |     foo[0] = foo[1];\n+LL | |     foo[1] = temp;\n    | |_________________^ help: try: `foo.swap(0, 1)`\n \n error: this looks like you are swapping `a` and `b` manually\n   --> $DIR/swap.rs:54:7\n    |\n-54 |       ; let t = a;\n+LL |       ; let t = a;\n    |  _______^\n-55 | |     a = b;\n-56 | |     b = t;\n+LL | |     a = b;\n+LL | |     b = t;\n    | |_________^ help: try: `std::mem::swap(&mut a, &mut b)`\n    |\n    = note: or maybe you should use `std::mem::replace`?\n \n error: this looks like you are swapping `c.0` and `a` manually\n   --> $DIR/swap.rs:63:7\n    |\n-63 |       ; let t = c.0;\n+LL |       ; let t = c.0;\n    |  _______^\n-64 | |     c.0 = a;\n-65 | |     a = t;\n+LL | |     c.0 = a;\n+LL | |     a = t;\n    | |_________^ help: try: `std::mem::swap(&mut c.0, &mut a)`\n    |\n    = note: or maybe you should use `std::mem::replace`?\n \n error: this looks like you are trying to swap `a` and `b`\n   --> $DIR/swap.rs:51:5\n    |\n-51 | /     a = b;\n-52 | |     b = a;\n+LL | /     a = b;\n+LL | |     b = a;\n    | |_________^ help: try: `std::mem::swap(&mut a, &mut b)`\n    |\n    = note: `-D clippy::almost-swapped` implied by `-D warnings`\n@@ -59,8 +59,8 @@ error: this looks like you are trying to swap `a` and `b`\n error: this looks like you are trying to swap `c.0` and `a`\n   --> $DIR/swap.rs:60:5\n    |\n-60 | /     c.0 = a;\n-61 | |     a = c.0;\n+LL | /     c.0 = a;\n+LL | |     a = c.0;\n    | |___________^ help: try: `std::mem::swap(&mut c.0, &mut a)`\n    |\n    = note: or maybe you should use `std::mem::replace`?"}, {"sha": "a973638504837c641a56f7b8ec722fb7ff37753f", "filename": "tests/ui/temporary_assignment.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Ftemporary_assignment.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Ftemporary_assignment.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftemporary_assignment.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,15 +1,15 @@\n error: assignment to temporary\n   --> $DIR/temporary_assignment.rs:39:5\n    |\n-39 |     Struct { field: 0 }.field = 1;\n+LL |     Struct { field: 0 }.field = 1;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::temporary-assignment` implied by `-D warnings`\n \n error: assignment to temporary\n   --> $DIR/temporary_assignment.rs:40:5\n    |\n-40 |     (0, 0).0 = 1;\n+LL |     (0, 0).0 = 1;\n    |     ^^^^^^^^^^^^\n \n error: aborting due to 2 previous errors"}, {"sha": "7b7a46d9f8edcf2f7fdbff23cea759c8b277422c", "filename": "tests/ui/toplevel_ref_arg.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Ftoplevel_ref_arg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Ftoplevel_ref_arg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftoplevel_ref_arg.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,33 +1,33 @@\n error: `ref` directly on a function argument is ignored. Consider using a reference type instead.\n   --> $DIR/toplevel_ref_arg.rs:13:15\n    |\n-13 | fn the_answer(ref mut x: u8) {\n+LL | fn the_answer(ref mut x: u8) {\n    |               ^^^^^^^^^\n    |\n    = note: `-D clippy::toplevel-ref-arg` implied by `-D warnings`\n \n error: `ref` on an entire `let` pattern is discouraged, take a reference with `&` instead\n   --> $DIR/toplevel_ref_arg.rs:24:9\n    |\n-24 |     let ref x = 1;\n+LL |     let ref x = 1;\n    |     ----^^^^^----- help: try: `let x = &1;`\n \n error: `ref` on an entire `let` pattern is discouraged, take a reference with `&` instead\n   --> $DIR/toplevel_ref_arg.rs:26:9\n    |\n-26 |     let ref y: (&_, u8) = (&1, 2);\n+LL |     let ref y: (&_, u8) = (&1, 2);\n    |     ----^^^^^--------------------- help: try: `let y: &(&_, u8) = &(&1, 2);`\n \n error: `ref` on an entire `let` pattern is discouraged, take a reference with `&` instead\n   --> $DIR/toplevel_ref_arg.rs:28:9\n    |\n-28 |     let ref z = 1 + 2;\n+LL |     let ref z = 1 + 2;\n    |     ----^^^^^--------- help: try: `let z = &(1 + 2);`\n \n error: `ref` on an entire `let` pattern is discouraged, take a reference with `&` instead\n   --> $DIR/toplevel_ref_arg.rs:30:9\n    |\n-30 |     let ref mut z = 1 + 2;\n+LL |     let ref mut z = 1 + 2;\n    |     ----^^^^^^^^^--------- help: try: `let z = &mut (1 + 2);`\n \n error: aborting due to 5 previous errors"}, {"sha": "1675eb44efd3223c7a4543a9823677ce53a37626", "filename": "tests/ui/trailing_zeros.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Ftrailing_zeros.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Ftrailing_zeros.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftrailing_zeros.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,15 +1,15 @@\n error: bit mask could be simplified with a call to `trailing_zeros`\n   --> $DIR/trailing_zeros.rs:16:5\n    |\n-16 |     (x & 0b1111 == 0); // suggest trailing_zeros\n+LL |     (x & 0b1111 == 0); // suggest trailing_zeros\n    |     ^^^^^^^^^^^^^^^^^ help: try: `x.trailing_zeros() >= 4`\n    |\n    = note: `-D clippy::verbose-bit-mask` implied by `-D warnings`\n \n error: bit mask could be simplified with a call to `trailing_zeros`\n   --> $DIR/trailing_zeros.rs:17:13\n    |\n-17 |     let _ = x & 0b1_1111 == 0; // suggest trailing_zeros\n+LL |     let _ = x & 0b1_1111 == 0; // suggest trailing_zeros\n    |             ^^^^^^^^^^^^^^^^^ help: try: `x.trailing_zeros() >= 5`\n \n error: aborting due to 2 previous errors"}, {"sha": "a6e87a72104c75f52889b93d5068040360eddb96", "filename": "tests/ui/transmute.stderr", "status": "modified", "additions": 104, "deletions": 104, "changes": 208, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Ftransmute.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Ftransmute.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftransmute.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,246 +1,246 @@\n error: transmute from a type (`&'a T`) to itself\n   --> $DIR/transmute.rs:28:20\n    |\n-28 |     let _: &'a T = core::intrinsics::transmute(t);\n+LL |     let _: &'a T = core::intrinsics::transmute(t);\n    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::useless-transmute` implied by `-D warnings`\n \n error: transmute from a reference to a pointer\n   --> $DIR/transmute.rs:32:23\n    |\n-32 |     let _: *const T = core::intrinsics::transmute(t);\n+LL |     let _: *const T = core::intrinsics::transmute(t);\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `t as *const T`\n \n error: transmute from a reference to a pointer\n   --> $DIR/transmute.rs:34:21\n    |\n-34 |     let _: *mut T = core::intrinsics::transmute(t);\n+LL |     let _: *mut T = core::intrinsics::transmute(t);\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `t as *const T as *mut T`\n \n error: transmute from a reference to a pointer\n   --> $DIR/transmute.rs:36:23\n    |\n-36 |     let _: *const U = core::intrinsics::transmute(t);\n+LL |     let _: *const U = core::intrinsics::transmute(t);\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `t as *const T as *const U`\n \n error: transmute from a pointer type (`*const T`) to a reference type (`&T`)\n   --> $DIR/transmute.rs:41:17\n    |\n-41 |     let _: &T = std::mem::transmute(p);\n+LL |     let _: &T = std::mem::transmute(p);\n    |                 ^^^^^^^^^^^^^^^^^^^^^^ help: try: `&*p`\n    |\n    = note: `-D clippy::transmute-ptr-to-ref` implied by `-D warnings`\n \n error: transmute from a pointer type (`*mut T`) to a reference type (`&mut T`)\n   --> $DIR/transmute.rs:44:21\n    |\n-44 |     let _: &mut T = std::mem::transmute(m);\n+LL |     let _: &mut T = std::mem::transmute(m);\n    |                     ^^^^^^^^^^^^^^^^^^^^^^ help: try: `&mut *m`\n \n error: transmute from a pointer type (`*mut T`) to a reference type (`&T`)\n   --> $DIR/transmute.rs:47:17\n    |\n-47 |     let _: &T = std::mem::transmute(m);\n+LL |     let _: &T = std::mem::transmute(m);\n    |                 ^^^^^^^^^^^^^^^^^^^^^^ help: try: `&*m`\n \n error: transmute from a pointer type (`*mut T`) to a reference type (`&mut T`)\n   --> $DIR/transmute.rs:50:21\n    |\n-50 |     let _: &mut T = std::mem::transmute(p as *mut T);\n+LL |     let _: &mut T = std::mem::transmute(p as *mut T);\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `&mut *(p as *mut T)`\n \n error: transmute from a pointer type (`*const U`) to a reference type (`&T`)\n   --> $DIR/transmute.rs:53:17\n    |\n-53 |     let _: &T = std::mem::transmute(o);\n+LL |     let _: &T = std::mem::transmute(o);\n    |                 ^^^^^^^^^^^^^^^^^^^^^^ help: try: `&*(o as *const T)`\n \n error: transmute from a pointer type (`*mut U`) to a reference type (`&mut T`)\n   --> $DIR/transmute.rs:56:21\n    |\n-56 |     let _: &mut T = std::mem::transmute(om);\n+LL |     let _: &mut T = std::mem::transmute(om);\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `&mut *(om as *mut T)`\n \n error: transmute from a pointer type (`*mut U`) to a reference type (`&T`)\n   --> $DIR/transmute.rs:59:17\n    |\n-59 |     let _: &T = std::mem::transmute(om);\n+LL |     let _: &T = std::mem::transmute(om);\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `&*(om as *const T)`\n \n error: transmute from a pointer type (`*const i32`) to a reference type (`&issue1231::Foo<'_, u8>`)\n   --> $DIR/transmute.rs:70:32\n    |\n-70 |     let _: &Foo<u8> = unsafe { std::mem::transmute::<_, &Foo<_>>(raw) };\n+LL |     let _: &Foo<u8> = unsafe { std::mem::transmute::<_, &Foo<_>>(raw) };\n    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `&*(raw as *const Foo<_>)`\n \n error: transmute from a pointer type (`*const i32`) to a reference type (`&issue1231::Foo<'_, &u8>`)\n   --> $DIR/transmute.rs:72:33\n    |\n-72 |     let _: &Foo<&u8> = unsafe { std::mem::transmute::<_, &Foo<&_>>(raw) };\n+LL |     let _: &Foo<&u8> = unsafe { std::mem::transmute::<_, &Foo<&_>>(raw) };\n    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `&*(raw as *const Foo<&_>)`\n \n error: transmute from a pointer type (`*const i32`) to a reference type (`&u8`)\n   --> $DIR/transmute.rs:76:14\n    |\n-76 |     unsafe { std::mem::transmute::<_, Bar>(raw) };\n+LL |     unsafe { std::mem::transmute::<_, Bar>(raw) };\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `&*(raw as *const u8)`\n \n error: transmute from a type (`std::vec::Vec<i32>`) to itself\n   --> $DIR/transmute.rs:82:27\n    |\n-82 |         let _: Vec<i32> = core::intrinsics::transmute(my_vec());\n+LL |         let _: Vec<i32> = core::intrinsics::transmute(my_vec());\n    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: transmute from a type (`std::vec::Vec<i32>`) to itself\n   --> $DIR/transmute.rs:84:27\n    |\n-84 |         let _: Vec<i32> = core::mem::transmute(my_vec());\n+LL |         let _: Vec<i32> = core::mem::transmute(my_vec());\n    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: transmute from a type (`std::vec::Vec<i32>`) to itself\n   --> $DIR/transmute.rs:86:27\n    |\n-86 |         let _: Vec<i32> = std::intrinsics::transmute(my_vec());\n+LL |         let _: Vec<i32> = std::intrinsics::transmute(my_vec());\n    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: transmute from a type (`std::vec::Vec<i32>`) to itself\n   --> $DIR/transmute.rs:88:27\n    |\n-88 |         let _: Vec<i32> = std::mem::transmute(my_vec());\n+LL |         let _: Vec<i32> = std::mem::transmute(my_vec());\n    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: transmute from a type (`std::vec::Vec<i32>`) to itself\n   --> $DIR/transmute.rs:90:27\n    |\n-90 |         let _: Vec<i32> = my_transmute(my_vec());\n+LL |         let _: Vec<i32> = my_transmute(my_vec());\n    |                           ^^^^^^^^^^^^^^^^^^^^^^\n \n error: transmute from an integer to a pointer\n   --> $DIR/transmute.rs:98:31\n    |\n-98 |         let _: *const usize = std::mem::transmute(5_isize);\n+LL |         let _: *const usize = std::mem::transmute(5_isize);\n    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `5_isize as *const usize`\n \n error: transmute from an integer to a pointer\n-   --> $DIR/transmute.rs:102:31\n-    |\n-102 |         let _: *const usize = std::mem::transmute(1 + 1usize);\n-    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `(1 + 1usize) as *const usize`\n+  --> $DIR/transmute.rs:102:31\n+   |\n+LL |         let _: *const usize = std::mem::transmute(1 + 1usize);\n+   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `(1 + 1usize) as *const usize`\n \n error: transmute from a type (`*const Usize`) to the type that it points to (`Usize`)\n-   --> $DIR/transmute.rs:117:24\n-    |\n-117 |         let _: Usize = core::intrinsics::transmute(int_const_ptr);\n-    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-    |\n-    = note: `-D clippy::crosspointer-transmute` implied by `-D warnings`\n+  --> $DIR/transmute.rs:117:24\n+   |\n+LL |         let _: Usize = core::intrinsics::transmute(int_const_ptr);\n+   |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: `-D clippy::crosspointer-transmute` implied by `-D warnings`\n \n error: transmute from a type (`*mut Usize`) to the type that it points to (`Usize`)\n-   --> $DIR/transmute.rs:119:24\n-    |\n-119 |         let _: Usize = core::intrinsics::transmute(int_mut_ptr);\n-    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+  --> $DIR/transmute.rs:119:24\n+   |\n+LL |         let _: Usize = core::intrinsics::transmute(int_mut_ptr);\n+   |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: transmute from a type (`Usize`) to a pointer to that type (`*const Usize`)\n-   --> $DIR/transmute.rs:121:31\n-    |\n-121 |         let _: *const Usize = core::intrinsics::transmute(my_int());\n-    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+  --> $DIR/transmute.rs:121:31\n+   |\n+LL |         let _: *const Usize = core::intrinsics::transmute(my_int());\n+   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: transmute from a type (`Usize`) to a pointer to that type (`*mut Usize`)\n-   --> $DIR/transmute.rs:123:29\n-    |\n-123 |         let _: *mut Usize = core::intrinsics::transmute(my_int());\n-    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+  --> $DIR/transmute.rs:123:29\n+   |\n+LL |         let _: *mut Usize = core::intrinsics::transmute(my_int());\n+   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: transmute from a `u32` to a `char`\n-   --> $DIR/transmute.rs:129:28\n-    |\n-129 |     let _: char = unsafe { std::mem::transmute(0_u32) };\n-    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using: `std::char::from_u32(0_u32).unwrap()`\n-    |\n-    = note: `-D clippy::transmute-int-to-char` implied by `-D warnings`\n+  --> $DIR/transmute.rs:129:28\n+   |\n+LL |     let _: char = unsafe { std::mem::transmute(0_u32) };\n+   |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using: `std::char::from_u32(0_u32).unwrap()`\n+   |\n+   = note: `-D clippy::transmute-int-to-char` implied by `-D warnings`\n \n error: transmute from a `i32` to a `char`\n-   --> $DIR/transmute.rs:130:28\n-    |\n-130 |     let _: char = unsafe { std::mem::transmute(0_i32) };\n-    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using: `std::char::from_u32(0_i32 as u32).unwrap()`\n+  --> $DIR/transmute.rs:130:28\n+   |\n+LL |     let _: char = unsafe { std::mem::transmute(0_i32) };\n+   |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using: `std::char::from_u32(0_i32 as u32).unwrap()`\n \n error: transmute from a `u8` to a `bool`\n-   --> $DIR/transmute.rs:135:28\n-    |\n-135 |     let _: bool = unsafe { std::mem::transmute(0_u8) };\n-    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using: `0_u8 != 0`\n-    |\n-    = note: `-D clippy::transmute-int-to-bool` implied by `-D warnings`\n+  --> $DIR/transmute.rs:135:28\n+   |\n+LL |     let _: bool = unsafe { std::mem::transmute(0_u8) };\n+   |                            ^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using: `0_u8 != 0`\n+   |\n+   = note: `-D clippy::transmute-int-to-bool` implied by `-D warnings`\n \n error: transmute from a `u32` to a `f32`\n-   --> $DIR/transmute.rs:140:27\n-    |\n-140 |     let _: f32 = unsafe { std::mem::transmute(0_u32) };\n-    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using: `f32::from_bits(0_u32)`\n-    |\n-    = note: `-D clippy::transmute-int-to-float` implied by `-D warnings`\n+  --> $DIR/transmute.rs:140:27\n+   |\n+LL |     let _: f32 = unsafe { std::mem::transmute(0_u32) };\n+   |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using: `f32::from_bits(0_u32)`\n+   |\n+   = note: `-D clippy::transmute-int-to-float` implied by `-D warnings`\n \n error: transmute from a `i32` to a `f32`\n-   --> $DIR/transmute.rs:141:27\n-    |\n-141 |     let _: f32 = unsafe { std::mem::transmute(0_i32) };\n-    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using: `f32::from_bits(0_i32 as u32)`\n+  --> $DIR/transmute.rs:141:27\n+   |\n+LL |     let _: f32 = unsafe { std::mem::transmute(0_i32) };\n+   |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using: `f32::from_bits(0_i32 as u32)`\n \n error: transmute from a `&[u8]` to a `&str`\n-   --> $DIR/transmute.rs:145:28\n-    |\n-145 |     let _: &str = unsafe { std::mem::transmute(b) };\n-    |                            ^^^^^^^^^^^^^^^^^^^^^^ help: consider using: `std::str::from_utf8(b).unwrap()`\n-    |\n-    = note: `-D clippy::transmute-bytes-to-str` implied by `-D warnings`\n+  --> $DIR/transmute.rs:145:28\n+   |\n+LL |     let _: &str = unsafe { std::mem::transmute(b) };\n+   |                            ^^^^^^^^^^^^^^^^^^^^^^ help: consider using: `std::str::from_utf8(b).unwrap()`\n+   |\n+   = note: `-D clippy::transmute-bytes-to-str` implied by `-D warnings`\n \n error: transmute from a `&mut [u8]` to a `&mut str`\n-   --> $DIR/transmute.rs:146:32\n-    |\n-146 |     let _: &mut str = unsafe { std::mem::transmute(mb) };\n-    |                                ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using: `std::str::from_utf8_mut(mb).unwrap()`\n+  --> $DIR/transmute.rs:146:32\n+   |\n+LL |     let _: &mut str = unsafe { std::mem::transmute(mb) };\n+   |                                ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using: `std::str::from_utf8_mut(mb).unwrap()`\n \n error: transmute from a pointer to a pointer\n-   --> $DIR/transmute.rs:178:29\n-    |\n-178 |         let _: *const f32 = std::mem::transmute(ptr);\n-    |                             ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `ptr as *const f32`\n-    |\n-    = note: `-D clippy::transmute-ptr-to-ptr` implied by `-D warnings`\n+  --> $DIR/transmute.rs:178:29\n+   |\n+LL |         let _: *const f32 = std::mem::transmute(ptr);\n+   |                             ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `ptr as *const f32`\n+   |\n+   = note: `-D clippy::transmute-ptr-to-ptr` implied by `-D warnings`\n \n error: transmute from a pointer to a pointer\n-   --> $DIR/transmute.rs:179:27\n-    |\n-179 |         let _: *mut f32 = std::mem::transmute(mut_ptr);\n-    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `mut_ptr as *mut f32`\n+  --> $DIR/transmute.rs:179:27\n+   |\n+LL |         let _: *mut f32 = std::mem::transmute(mut_ptr);\n+   |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `mut_ptr as *mut f32`\n \n error: transmute from a reference to a reference\n-   --> $DIR/transmute.rs:181:23\n-    |\n-181 |         let _: &f32 = std::mem::transmute(&1u32);\n-    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `&*(&1u32 as *const u32 as *const f32)`\n+  --> $DIR/transmute.rs:181:23\n+   |\n+LL |         let _: &f32 = std::mem::transmute(&1u32);\n+   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `&*(&1u32 as *const u32 as *const f32)`\n \n error: transmute from a reference to a reference\n-   --> $DIR/transmute.rs:182:23\n-    |\n-182 |         let _: &f64 = std::mem::transmute(&1f32);\n-    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `&*(&1f32 as *const f32 as *const f64)`\n+  --> $DIR/transmute.rs:182:23\n+   |\n+LL |         let _: &f64 = std::mem::transmute(&1f32);\n+   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `&*(&1f32 as *const f32 as *const f64)`\n \n error: transmute from a reference to a reference\n-   --> $DIR/transmute.rs:185:27\n-    |\n-185 |         let _: &mut f32 = std::mem::transmute(&mut 1u32);\n-    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `&mut *(&mut 1u32 as *mut u32 as *mut f32)`\n+  --> $DIR/transmute.rs:185:27\n+   |\n+LL |         let _: &mut f32 = std::mem::transmute(&mut 1u32);\n+   |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `&mut *(&mut 1u32 as *mut u32 as *mut f32)`\n \n error: transmute from a reference to a reference\n-   --> $DIR/transmute.rs:186:37\n-    |\n-186 |         let _: &GenericParam<f32> = std::mem::transmute(&GenericParam { t: 1u32 });\n-    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `&*(&GenericParam { t: 1u32 } as *const GenericParam<u32> as *const GenericParam<f32>)`\n+  --> $DIR/transmute.rs:186:37\n+   |\n+LL |         let _: &GenericParam<f32> = std::mem::transmute(&GenericParam { t: 1u32 });\n+   |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `&*(&GenericParam { t: 1u32 } as *const GenericParam<u32> as *const GenericParam<f32>)`\n \n error: aborting due to 38 previous errors\n "}, {"sha": "bbca3bc0b36e3b3db89fdb0447a8775f91268b0c", "filename": "tests/ui/transmute_64bit.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Ftransmute_64bit.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Ftransmute_64bit.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftransmute_64bit.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,15 +1,15 @@\n error: transmute from a `f64` to a pointer\n   --> $DIR/transmute_64bit.rs:16:31\n    |\n-16 |         let _: *const usize = std::mem::transmute(6.0f64);\n+LL |         let _: *const usize = std::mem::transmute(6.0f64);\n    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::wrong-transmute` implied by `-D warnings`\n \n error: transmute from a `f64` to a pointer\n   --> $DIR/transmute_64bit.rs:18:29\n    |\n-18 |         let _: *mut usize = std::mem::transmute(6.0f64);\n+LL |         let _: *mut usize = std::mem::transmute(6.0f64);\n    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 2 previous errors"}, {"sha": "6f2967bc392df72036f6dcdfc5e9c70ebe3a9a59", "filename": "tests/ui/trivially_copy_pass_by_ref.stderr", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Ftrivially_copy_pass_by_ref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Ftrivially_copy_pass_by_ref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftrivially_copy_pass_by_ref.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,93 +1,93 @@\n error: this argument is passed by reference, but would be more efficient if passed by value\n   --> $DIR/trivially_copy_pass_by_ref.rs:56:11\n    |\n-56 | fn bad(x: &u32, y: &Foo, z: &Baz) {}\n+LL | fn bad(x: &u32, y: &Foo, z: &Baz) {}\n    |           ^^^^ help: consider passing by value instead: `u32`\n    |\n    = note: `-D clippy::trivially-copy-pass-by-ref` implied by `-D warnings`\n \n error: this argument is passed by reference, but would be more efficient if passed by value\n   --> $DIR/trivially_copy_pass_by_ref.rs:56:20\n    |\n-56 | fn bad(x: &u32, y: &Foo, z: &Baz) {}\n+LL | fn bad(x: &u32, y: &Foo, z: &Baz) {}\n    |                    ^^^^ help: consider passing by value instead: `Foo`\n \n error: this argument is passed by reference, but would be more efficient if passed by value\n   --> $DIR/trivially_copy_pass_by_ref.rs:56:29\n    |\n-56 | fn bad(x: &u32, y: &Foo, z: &Baz) {}\n+LL | fn bad(x: &u32, y: &Foo, z: &Baz) {}\n    |                             ^^^^ help: consider passing by value instead: `Baz`\n \n error: this argument is passed by reference, but would be more efficient if passed by value\n   --> $DIR/trivially_copy_pass_by_ref.rs:63:12\n    |\n-63 |     fn bad(&self, x: &u32, y: &Foo, z: &Baz) {}\n+LL |     fn bad(&self, x: &u32, y: &Foo, z: &Baz) {}\n    |            ^^^^^ help: consider passing by value instead: `self`\n \n error: this argument is passed by reference, but would be more efficient if passed by value\n   --> $DIR/trivially_copy_pass_by_ref.rs:63:22\n    |\n-63 |     fn bad(&self, x: &u32, y: &Foo, z: &Baz) {}\n+LL |     fn bad(&self, x: &u32, y: &Foo, z: &Baz) {}\n    |                      ^^^^ help: consider passing by value instead: `u32`\n \n error: this argument is passed by reference, but would be more efficient if passed by value\n   --> $DIR/trivially_copy_pass_by_ref.rs:63:31\n    |\n-63 |     fn bad(&self, x: &u32, y: &Foo, z: &Baz) {}\n+LL |     fn bad(&self, x: &u32, y: &Foo, z: &Baz) {}\n    |                               ^^^^ help: consider passing by value instead: `Foo`\n \n error: this argument is passed by reference, but would be more efficient if passed by value\n   --> $DIR/trivially_copy_pass_by_ref.rs:63:40\n    |\n-63 |     fn bad(&self, x: &u32, y: &Foo, z: &Baz) {}\n+LL |     fn bad(&self, x: &u32, y: &Foo, z: &Baz) {}\n    |                                        ^^^^ help: consider passing by value instead: `Baz`\n \n error: this argument is passed by reference, but would be more efficient if passed by value\n   --> $DIR/trivially_copy_pass_by_ref.rs:65:16\n    |\n-65 |     fn bad2(x: &u32, y: &Foo, z: &Baz) {}\n+LL |     fn bad2(x: &u32, y: &Foo, z: &Baz) {}\n    |                ^^^^ help: consider passing by value instead: `u32`\n \n error: this argument is passed by reference, but would be more efficient if passed by value\n   --> $DIR/trivially_copy_pass_by_ref.rs:65:25\n    |\n-65 |     fn bad2(x: &u32, y: &Foo, z: &Baz) {}\n+LL |     fn bad2(x: &u32, y: &Foo, z: &Baz) {}\n    |                         ^^^^ help: consider passing by value instead: `Foo`\n \n error: this argument is passed by reference, but would be more efficient if passed by value\n   --> $DIR/trivially_copy_pass_by_ref.rs:65:34\n    |\n-65 |     fn bad2(x: &u32, y: &Foo, z: &Baz) {}\n+LL |     fn bad2(x: &u32, y: &Foo, z: &Baz) {}\n    |                                  ^^^^ help: consider passing by value instead: `Baz`\n \n error: this argument is passed by reference, but would be more efficient if passed by value\n   --> $DIR/trivially_copy_pass_by_ref.rs:77:16\n    |\n-77 |     fn bad2(x: &u32, y: &Foo, z: &Baz) {}\n+LL |     fn bad2(x: &u32, y: &Foo, z: &Baz) {}\n    |                ^^^^ help: consider passing by value instead: `u32`\n \n error: this argument is passed by reference, but would be more efficient if passed by value\n   --> $DIR/trivially_copy_pass_by_ref.rs:77:25\n    |\n-77 |     fn bad2(x: &u32, y: &Foo, z: &Baz) {}\n+LL |     fn bad2(x: &u32, y: &Foo, z: &Baz) {}\n    |                         ^^^^ help: consider passing by value instead: `Foo`\n \n error: this argument is passed by reference, but would be more efficient if passed by value\n   --> $DIR/trivially_copy_pass_by_ref.rs:77:34\n    |\n-77 |     fn bad2(x: &u32, y: &Foo, z: &Baz) {}\n+LL |     fn bad2(x: &u32, y: &Foo, z: &Baz) {}\n    |                                  ^^^^ help: consider passing by value instead: `Baz`\n \n error: this argument is passed by reference, but would be more efficient if passed by value\n   --> $DIR/trivially_copy_pass_by_ref.rs:81:34\n    |\n-81 |     fn trait_method(&self, _foo: &Foo);\n+LL |     fn trait_method(&self, _foo: &Foo);\n    |                                  ^^^^ help: consider passing by value instead: `Foo`\n \n error: this argument is passed by reference, but would be more efficient if passed by value\n   --> $DIR/trivially_copy_pass_by_ref.rs:85:37\n    |\n-85 |     fn trait_method2(&self, _color: &Color);\n+LL |     fn trait_method2(&self, _color: &Color);\n    |                                     ^^^^^^ help: consider passing by value instead: `Color`\n \n error: aborting due to 15 previous errors"}, {"sha": "76dc07aef31e3058a78c09694a66f51e9e1d8853", "filename": "tests/ui/types.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Ftypes.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Ftypes.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftypes.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,7 +1,7 @@\n error: casting i32 to i64 may become silently lossy if types change\n   --> $DIR/types.rs:18:22\n    |\n-18 |     let c_i64: i64 = c as i64;\n+LL |     let c_i64: i64 = c as i64;\n    |                      ^^^^^^^^ help: try: `i64::from(c)`\n    |\n    = note: `-D clippy::cast-lossless` implied by `-D warnings`"}, {"sha": "9b78271e1fad56f2f9212da6cbc7a2ba1d4216ce", "filename": "tests/ui/unicode.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Funicode.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Funicode.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funicode.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,7 +1,7 @@\n error: zero-width space detected\n   --> $DIR/unicode.rs:12:12\n    |\n-12 |     print!(\"Here >\u200b< is a ZWS, and \u200banother\");\n+LL |     print!(\"Here >\u200b< is a ZWS, and \u200banother\");\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::zero-width-space` implied by `-D warnings`\n@@ -11,7 +11,7 @@ error: zero-width space detected\n error: non-nfc unicode sequence detected\n   --> $DIR/unicode.rs:18:12\n    |\n-18 |     print!(\"\u0300a\u0300h?\");\n+LL |     print!(\"\u0300a\u0300h?\");\n    |            ^^^^^\n    |\n    = note: `-D clippy::unicode-not-nfc` implied by `-D warnings`\n@@ -21,7 +21,7 @@ error: non-nfc unicode sequence detected\n error: literal non-ASCII character detected\n   --> $DIR/unicode.rs:24:12\n    |\n-24 |     print!(\"\u00dcben!\");\n+LL |     print!(\"\u00dcben!\");\n    |            ^^^^^^^\n    |\n    = note: `-D clippy::non-ascii-literal` implied by `-D warnings`"}, {"sha": "013016574ffed3f29befa565eac5df4c7fd94c1a", "filename": "tests/ui/unit_arg.stderr", "status": "modified", "additions": 19, "deletions": 19, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Funit_arg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Funit_arg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funit_arg.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,73 +1,73 @@\n error: passing a unit value to a function\n   --> $DIR/unit_arg.rs:32:9\n    |\n-32 |     foo({});\n+LL |     foo({});\n    |         ^^\n    |\n    = note: `-D clippy::unit-arg` implied by `-D warnings`\n help: if you intended to pass a unit value, use a unit literal instead\n    |\n-32 |     foo(());\n+LL |     foo(());\n    |         ^^\n \n error: passing a unit value to a function\n   --> $DIR/unit_arg.rs:33:9\n    |\n-33 |       foo({\n+LL |       foo({\n    |  _________^\n-34 | |         1;\n-35 | |     });\n+LL | |         1;\n+LL | |     });\n    | |_____^\n help: if you intended to pass a unit value, use a unit literal instead\n    |\n-33 |     foo(());\n+LL |     foo(());\n    |         ^^\n \n error: passing a unit value to a function\n   --> $DIR/unit_arg.rs:36:9\n    |\n-36 |     foo(foo(1));\n+LL |     foo(foo(1));\n    |         ^^^^^^\n help: if you intended to pass a unit value, use a unit literal instead\n    |\n-36 |     foo(());\n+LL |     foo(());\n    |         ^^\n \n error: passing a unit value to a function\n   --> $DIR/unit_arg.rs:37:9\n    |\n-37 |       foo({\n+LL |       foo({\n    |  _________^\n-38 | |         foo(1);\n-39 | |         foo(2);\n-40 | |     });\n+LL | |         foo(1);\n+LL | |         foo(2);\n+LL | |     });\n    | |_____^\n help: if you intended to pass a unit value, use a unit literal instead\n    |\n-37 |     foo(());\n+LL |     foo(());\n    |         ^^\n \n error: passing a unit value to a function\n   --> $DIR/unit_arg.rs:41:10\n    |\n-41 |     foo3({}, 2, 2);\n+LL |     foo3({}, 2, 2);\n    |          ^^\n help: if you intended to pass a unit value, use a unit literal instead\n    |\n-41 |     foo3((), 2, 2);\n+LL |     foo3((), 2, 2);\n    |          ^^\n \n error: passing a unit value to a function\n   --> $DIR/unit_arg.rs:43:11\n    |\n-43 |       b.bar({\n+LL |       b.bar({\n    |  ___________^\n-44 | |         1;\n-45 | |     });\n+LL | |         1;\n+LL | |     });\n    | |_____^\n help: if you intended to pass a unit value, use a unit literal instead\n    |\n-43 |     b.bar(());\n+LL |     b.bar(());\n    |           ^^\n \n error: aborting due to 6 previous errors"}, {"sha": "481891b99b0ab15be7d4bf10abce152291df8672", "filename": "tests/ui/unit_cmp.stderr", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Funit_cmp.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Funit_cmp.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funit_cmp.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,25 +1,25 @@\n error: ==-comparison of unit values detected. This will always be true\n   --> $DIR/unit_cmp.rs:21:8\n    |\n-21 |       if {\n+LL |       if {\n    |  ________^\n-22 | |         true;\n-23 | |     } == {\n-24 | |         false;\n-25 | |     } {}\n+LL | |         true;\n+LL | |     } == {\n+LL | |         false;\n+LL | |     } {}\n    | |_____^\n    |\n    = note: `-D clippy::unit-cmp` implied by `-D warnings`\n \n error: >-comparison of unit values detected. This will always be false\n   --> $DIR/unit_cmp.rs:27:8\n    |\n-27 |       if {\n+LL |       if {\n    |  ________^\n-28 | |         true;\n-29 | |     } > {\n-30 | |         false;\n-31 | |     } {}\n+LL | |         true;\n+LL | |     } > {\n+LL | |         false;\n+LL | |     } {}\n    | |_____^\n \n error: aborting due to 2 previous errors"}, {"sha": "f83a51728e74a0cf4f84967ab3ab08ec8c964bc9", "filename": "tests/ui/unknown_clippy_lints.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Funknown_clippy_lints.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Funknown_clippy_lints.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funknown_clippy_lints.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,15 +1,15 @@\n error: unknown clippy lint: clippy::if_not_els\n   --> $DIR/unknown_clippy_lints.rs:13:8\n    |\n-13 | #[warn(clippy::if_not_els)]\n+LL | #[warn(clippy::if_not_els)]\n    |        ^^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::unknown-clippy-lints` implied by `-D warnings`\n \n error: unknown clippy lint: clippy::All\n   --> $DIR/unknown_clippy_lints.rs:10:10\n    |\n-10 | #![allow(clippy::All)]\n+LL | #![allow(clippy::All)]\n    |          ^^^^^^^^^^^ help: lowercase the lint name: `all`\n \n error: aborting due to 2 previous errors"}, {"sha": "604902e5d6da789e042d8df00363c00ff43206b7", "filename": "tests/ui/unnecessary_clone.stderr", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Funnecessary_clone.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Funnecessary_clone.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_clone.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,96 +1,96 @@\n error: using `clone` on a `Copy` type\n   --> $DIR/unnecessary_clone.rs:26:5\n    |\n-26 |     42.clone();\n+LL |     42.clone();\n    |     ^^^^^^^^^^ help: try removing the `clone` call: `42`\n    |\n    = note: `-D clippy::clone-on-copy` implied by `-D warnings`\n \n error: using `clone` on a `Copy` type\n   --> $DIR/unnecessary_clone.rs:30:5\n    |\n-30 |     (&42).clone();\n+LL |     (&42).clone();\n    |     ^^^^^^^^^^^^^ help: try dereferencing it: `*(&42)`\n \n error: using `clone` on a `Copy` type\n   --> $DIR/unnecessary_clone.rs:33:5\n    |\n-33 |     rc.borrow().clone();\n+LL |     rc.borrow().clone();\n    |     ^^^^^^^^^^^^^^^^^^^ help: try dereferencing it: `*rc.borrow()`\n \n error: using '.clone()' on a ref-counted pointer\n   --> $DIR/unnecessary_clone.rs:43:5\n    |\n-43 |     rc.clone();\n+LL |     rc.clone();\n    |     ^^^^^^^^^^ help: try this: `Rc::<bool>::clone(&rc)`\n    |\n    = note: `-D clippy::clone-on-ref-ptr` implied by `-D warnings`\n \n error: using '.clone()' on a ref-counted pointer\n   --> $DIR/unnecessary_clone.rs:46:5\n    |\n-46 |     arc.clone();\n+LL |     arc.clone();\n    |     ^^^^^^^^^^^ help: try this: `Arc::<bool>::clone(&arc)`\n \n error: using '.clone()' on a ref-counted pointer\n   --> $DIR/unnecessary_clone.rs:49:5\n    |\n-49 |     rcweak.clone();\n+LL |     rcweak.clone();\n    |     ^^^^^^^^^^^^^^ help: try this: `Weak::<bool>::clone(&rcweak)`\n \n error: using '.clone()' on a ref-counted pointer\n   --> $DIR/unnecessary_clone.rs:52:5\n    |\n-52 |     arc_weak.clone();\n+LL |     arc_weak.clone();\n    |     ^^^^^^^^^^^^^^^^ help: try this: `Weak::<bool>::clone(&arc_weak)`\n \n error: using '.clone()' on a ref-counted pointer\n   --> $DIR/unnecessary_clone.rs:56:29\n    |\n-56 |     let _: Arc<SomeTrait> = x.clone();\n+LL |     let _: Arc<SomeTrait> = x.clone();\n    |                             ^^^^^^^^^ help: try this: `Arc::<SomeImpl>::clone(&x)`\n \n error: using `clone` on a `Copy` type\n   --> $DIR/unnecessary_clone.rs:60:5\n    |\n-60 |     t.clone();\n+LL |     t.clone();\n    |     ^^^^^^^^^ help: try removing the `clone` call: `t`\n \n error: using `clone` on a `Copy` type\n   --> $DIR/unnecessary_clone.rs:62:5\n    |\n-62 |     Some(t).clone();\n+LL |     Some(t).clone();\n    |     ^^^^^^^^^^^^^^^ help: try removing the `clone` call: `Some(t)`\n \n error: using `clone` on a double-reference; this will copy the reference instead of cloning the inner type\n   --> $DIR/unnecessary_clone.rs:68:22\n    |\n-68 |     let z: &Vec<_> = y.clone();\n+LL |     let z: &Vec<_> = y.clone();\n    |                      ^^^^^^^^^\n    |\n    = note: #[deny(clippy::clone_double_ref)] on by default\n help: try dereferencing it\n    |\n-68 |     let z: &Vec<_> = &(*y).clone();\n+LL |     let z: &Vec<_> = &(*y).clone();\n    |                      ^^^^^^^^^^^^^\n help: or try being explicit about what type to clone\n    |\n-68 |     let z: &Vec<_> = &std::vec::Vec<i32>::clone(y);\n+LL |     let z: &Vec<_> = &std::vec::Vec<i32>::clone(y);\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: called `cloned().collect()` on a slice to create a `Vec`. Calling `to_vec()` is both faster and more readable\n   --> $DIR/unnecessary_clone.rs:75:26\n    |\n-75 |     let v2: Vec<isize> = v.iter().cloned().collect();\n+LL |     let v2: Vec<isize> = v.iter().cloned().collect();\n    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::iter-cloned-collect` implied by `-D warnings`\n \n error: using `clone` on a `Copy` type\n-   --> $DIR/unnecessary_clone.rs:111:20\n-    |\n-111 |         let _: E = a.clone();\n-    |                    ^^^^^^^^^ help: try dereferencing it: `*****a`\n+  --> $DIR/unnecessary_clone.rs:111:20\n+   |\n+LL |         let _: E = a.clone();\n+   |                    ^^^^^^^^^ help: try dereferencing it: `*****a`\n \n error: aborting due to 13 previous errors\n "}, {"sha": "09f8973708f80139343873955c430733bd1dd4b2", "filename": "tests/ui/unnecessary_filter_map.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Funnecessary_filter_map.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Funnecessary_filter_map.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_filter_map.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,37 +1,37 @@\n error: this `.filter_map` can be written more simply using `.filter`\n   --> $DIR/unnecessary_filter_map.rs:11:13\n    |\n-11 |     let _ = (0..4).filter_map(|x| if x > 1 { Some(x) } else { None });\n+LL |     let _ = (0..4).filter_map(|x| if x > 1 { Some(x) } else { None });\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::unnecessary-filter-map` implied by `-D warnings`\n \n error: this `.filter_map` can be written more simply using `.filter`\n   --> $DIR/unnecessary_filter_map.rs:12:13\n    |\n-12 |       let _ = (0..4).filter_map(|x| {\n+LL |       let _ = (0..4).filter_map(|x| {\n    |  _____________^\n-13 | |         if x > 1 {\n-14 | |             return Some(x);\n-15 | |         };\n-16 | |         None\n-17 | |     });\n+LL | |         if x > 1 {\n+LL | |             return Some(x);\n+LL | |         };\n+LL | |         None\n+LL | |     });\n    | |______^\n \n error: this `.filter_map` can be written more simply using `.filter`\n   --> $DIR/unnecessary_filter_map.rs:18:13\n    |\n-18 |       let _ = (0..4).filter_map(|x| match x {\n+LL |       let _ = (0..4).filter_map(|x| match x {\n    |  _____________^\n-19 | |         0 | 1 => None,\n-20 | |         _ => Some(x),\n-21 | |     });\n+LL | |         0 | 1 => None,\n+LL | |         _ => Some(x),\n+LL | |     });\n    | |______^\n \n error: this `.filter_map` can be written more simply using `.map`\n   --> $DIR/unnecessary_filter_map.rs:23:13\n    |\n-23 |     let _ = (0..4).filter_map(|x| Some(x + 1));\n+LL |     let _ = (0..4).filter_map(|x| Some(x + 1));\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 4 previous errors"}, {"sha": "2c2349bd3bc45325b0abf10fc7cc0b63957166ce", "filename": "tests/ui/unnecessary_fold.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Funnecessary_fold.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Funnecessary_fold.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_fold.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,33 +1,33 @@\n error: this `.fold` can be written more succinctly using another method\n   --> $DIR/unnecessary_fold.rs:13:19\n    |\n-13 |     let _ = (0..3).fold(false, |acc, x| acc || x > 2);\n+LL |     let _ = (0..3).fold(false, |acc, x| acc || x > 2);\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `.any(|x| x > 2)`\n    |\n    = note: `-D clippy::unnecessary-fold` implied by `-D warnings`\n \n error: this `.fold` can be written more succinctly using another method\n   --> $DIR/unnecessary_fold.rs:15:19\n    |\n-15 |     let _ = (0..3).fold(true, |acc, x| acc && x > 2);\n+LL |     let _ = (0..3).fold(true, |acc, x| acc && x > 2);\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `.all(|x| x > 2)`\n \n error: this `.fold` can be written more succinctly using another method\n   --> $DIR/unnecessary_fold.rs:17:19\n    |\n-17 |     let _ = (0..3).fold(0, |acc, x| acc + x);\n+LL |     let _ = (0..3).fold(0, |acc, x| acc + x);\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `.sum()`\n \n error: this `.fold` can be written more succinctly using another method\n   --> $DIR/unnecessary_fold.rs:19:19\n    |\n-19 |     let _ = (0..3).fold(1, |acc, x| acc * x);\n+LL |     let _ = (0..3).fold(1, |acc, x| acc * x);\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `.product()`\n \n error: this `.fold` can be written more succinctly using another method\n   --> $DIR/unnecessary_fold.rs:24:34\n    |\n-24 |     let _ = (0..3).map(|x| 2 * x).fold(false, |acc, x| acc || x > 2);\n+LL |     let _ = (0..3).map(|x| 2 * x).fold(false, |acc, x| acc || x > 2);\n    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `.any(|x| x > 2)`\n \n error: aborting due to 5 previous errors"}, {"sha": "e46002dd97b326a5f1de26a05b074f273bae0cd0", "filename": "tests/ui/unnecessary_operation.stderr", "status": "modified", "additions": 24, "deletions": 24, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Funnecessary_operation.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Funnecessary_operation.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_operation.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,127 +1,127 @@\n error: statement can be reduced\n   --> $DIR/unnecessary_operation.rs:54:5\n    |\n-54 |     Tuple(get_number());\n+LL |     Tuple(get_number());\n    |     ^^^^^^^^^^^^^^^^^^^^ help: replace it with: `get_number();`\n    |\n    = note: `-D clippy::unnecessary-operation` implied by `-D warnings`\n \n error: statement can be reduced\n   --> $DIR/unnecessary_operation.rs:55:5\n    |\n-55 |     Struct { field: get_number() };\n+LL |     Struct { field: get_number() };\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `get_number();`\n \n error: statement can be reduced\n   --> $DIR/unnecessary_operation.rs:56:5\n    |\n-56 |     Struct { ..get_struct() };\n+LL |     Struct { ..get_struct() };\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `get_struct();`\n \n error: statement can be reduced\n   --> $DIR/unnecessary_operation.rs:57:5\n    |\n-57 |     Enum::Tuple(get_number());\n+LL |     Enum::Tuple(get_number());\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `get_number();`\n \n error: statement can be reduced\n   --> $DIR/unnecessary_operation.rs:58:5\n    |\n-58 |     Enum::Struct { field: get_number() };\n+LL |     Enum::Struct { field: get_number() };\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `get_number();`\n \n error: statement can be reduced\n   --> $DIR/unnecessary_operation.rs:59:5\n    |\n-59 |     5 + get_number();\n+LL |     5 + get_number();\n    |     ^^^^^^^^^^^^^^^^^ help: replace it with: `5;get_number();`\n \n error: statement can be reduced\n   --> $DIR/unnecessary_operation.rs:60:5\n    |\n-60 |     *&get_number();\n+LL |     *&get_number();\n    |     ^^^^^^^^^^^^^^^ help: replace it with: `get_number();`\n \n error: statement can be reduced\n   --> $DIR/unnecessary_operation.rs:61:5\n    |\n-61 |     &get_number();\n+LL |     &get_number();\n    |     ^^^^^^^^^^^^^^ help: replace it with: `get_number();`\n \n error: statement can be reduced\n   --> $DIR/unnecessary_operation.rs:62:5\n    |\n-62 |     (5, 6, get_number());\n+LL |     (5, 6, get_number());\n    |     ^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `5;6;get_number();`\n \n error: statement can be reduced\n   --> $DIR/unnecessary_operation.rs:63:5\n    |\n-63 |     box get_number();\n+LL |     box get_number();\n    |     ^^^^^^^^^^^^^^^^^ help: replace it with: `get_number();`\n \n error: statement can be reduced\n   --> $DIR/unnecessary_operation.rs:64:5\n    |\n-64 |     get_number()..;\n+LL |     get_number()..;\n    |     ^^^^^^^^^^^^^^^ help: replace it with: `get_number();`\n \n error: statement can be reduced\n   --> $DIR/unnecessary_operation.rs:65:5\n    |\n-65 |     ..get_number();\n+LL |     ..get_number();\n    |     ^^^^^^^^^^^^^^^ help: replace it with: `get_number();`\n \n error: statement can be reduced\n   --> $DIR/unnecessary_operation.rs:66:5\n    |\n-66 |     5..get_number();\n+LL |     5..get_number();\n    |     ^^^^^^^^^^^^^^^^ help: replace it with: `5;get_number();`\n \n error: statement can be reduced\n   --> $DIR/unnecessary_operation.rs:67:5\n    |\n-67 |     [42, get_number()];\n+LL |     [42, get_number()];\n    |     ^^^^^^^^^^^^^^^^^^^ help: replace it with: `42;get_number();`\n \n error: statement can be reduced\n   --> $DIR/unnecessary_operation.rs:68:5\n    |\n-68 |     [42, 55][get_number() as usize];\n+LL |     [42, 55][get_number() as usize];\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `[42, 55];get_number() as usize;`\n \n error: statement can be reduced\n   --> $DIR/unnecessary_operation.rs:69:5\n    |\n-69 |     (42, get_number()).1;\n+LL |     (42, get_number()).1;\n    |     ^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `42;get_number();`\n \n error: statement can be reduced\n   --> $DIR/unnecessary_operation.rs:70:5\n    |\n-70 |     [get_number(); 55];\n+LL |     [get_number(); 55];\n    |     ^^^^^^^^^^^^^^^^^^^ help: replace it with: `get_number();`\n \n error: statement can be reduced\n   --> $DIR/unnecessary_operation.rs:71:5\n    |\n-71 |     [42; 55][get_number() as usize];\n+LL |     [42; 55][get_number() as usize];\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `[42; 55];get_number() as usize;`\n \n error: statement can be reduced\n   --> $DIR/unnecessary_operation.rs:72:5\n    |\n-72 | /     {\n-73 | |         get_number()\n-74 | |     };\n+LL | /     {\n+LL | |         get_number()\n+LL | |     };\n    | |______^ help: replace it with: `get_number();`\n \n error: statement can be reduced\n   --> $DIR/unnecessary_operation.rs:75:5\n    |\n-75 | /     FooString {\n-76 | |         s: String::from(\"blah\"),\n-77 | |     };\n+LL | /     FooString {\n+LL | |         s: String::from(\"blah\"),\n+LL | |     };\n    | |______^ help: replace it with: `String::from(\"blah\");`\n \n error: aborting due to 20 previous errors"}, {"sha": "77503026bde693f9496bc3a738037e56c167e3b5", "filename": "tests/ui/unnecessary_ref.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Funnecessary_ref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Funnecessary_ref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_ref.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,13 +1,13 @@\n error: Creating a reference that is immediately dereferenced.\n   --> $DIR/unnecessary_ref.rs:20:17\n    |\n-20 |     let inner = (&outer).inner;\n+LL |     let inner = (&outer).inner;\n    |                 ^^^^^^^^ help: try this: `outer.inner`\n    |\n note: lint level defined here\n   --> $DIR/unnecessary_ref.rs:17:8\n    |\n-17 | #[deny(clippy::ref_in_deref)]\n+LL | #[deny(clippy::ref_in_deref)]\n    |        ^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to previous error"}, {"sha": "23e35923f83049db44f5c91f8e24fba83af11cbc", "filename": "tests/ui/unneeded_field_pattern.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Funneeded_field_pattern.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Funneeded_field_pattern.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funneeded_field_pattern.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,7 +1,7 @@\n error: You matched a field with a wildcard pattern. Consider using `..` instead\n   --> $DIR/unneeded_field_pattern.rs:23:15\n    |\n-23 |         Foo { a: _, b: 0, .. } => {},\n+LL |         Foo { a: _, b: 0, .. } => {},\n    |               ^^^^\n    |\n    = note: `-D clippy::unneeded-field-pattern` implied by `-D warnings`\n@@ -10,7 +10,7 @@ error: You matched a field with a wildcard pattern. Consider using `..` instead\n error: All the struct fields are matched to a wildcard pattern, consider using `..`.\n   --> $DIR/unneeded_field_pattern.rs:25:9\n    |\n-25 |         Foo { a: _, b: _, c: _ } => {},\n+LL |         Foo { a: _, b: _, c: _ } => {},\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: Try with `Foo { .. }` instead"}, {"sha": "6696f155fb8659586c78d73ee6a9a38d46001f9a", "filename": "tests/ui/unreadable_literal.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Funreadable_literal.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Funreadable_literal.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funreadable_literal.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,33 +1,33 @@\n error: long literal lacking separators\n   --> $DIR/unreadable_literal.rs:24:16\n    |\n-24 |     let bad = (0b110110_i64, 0x12345678901_usize, 123456_f32, 1.234567_f32);\n+LL |     let bad = (0b110110_i64, 0x12345678901_usize, 123456_f32, 1.234567_f32);\n    |                ^^^^^^^^^^^^ help: consider: `0b11_0110_i64`\n    |\n    = note: `-D clippy::unreadable-literal` implied by `-D warnings`\n \n error: long literal lacking separators\n   --> $DIR/unreadable_literal.rs:24:30\n    |\n-24 |     let bad = (0b110110_i64, 0x12345678901_usize, 123456_f32, 1.234567_f32);\n+LL |     let bad = (0b110110_i64, 0x12345678901_usize, 123456_f32, 1.234567_f32);\n    |                              ^^^^^^^^^^^^^^^^^^^ help: consider: `0x0123_4567_8901_usize`\n \n error: long literal lacking separators\n   --> $DIR/unreadable_literal.rs:24:51\n    |\n-24 |     let bad = (0b110110_i64, 0x12345678901_usize, 123456_f32, 1.234567_f32);\n+LL |     let bad = (0b110110_i64, 0x12345678901_usize, 123456_f32, 1.234567_f32);\n    |                                                   ^^^^^^^^^^ help: consider: `123_456_f32`\n \n error: long literal lacking separators\n   --> $DIR/unreadable_literal.rs:24:63\n    |\n-24 |     let bad = (0b110110_i64, 0x12345678901_usize, 123456_f32, 1.234567_f32);\n+LL |     let bad = (0b110110_i64, 0x12345678901_usize, 123456_f32, 1.234567_f32);\n    |                                                               ^^^^^^^^^^^^ help: consider: `1.234_567_f32`\n \n error: long literal lacking separators\n   --> $DIR/unreadable_literal.rs:26:19\n    |\n-26 |     let bad_sci = 1.123456e1;\n+LL |     let bad_sci = 1.123456e1;\n    |                   ^^^^^^^^^^ help: consider: `1.123_456e1`\n \n error: aborting due to 5 previous errors"}, {"sha": "cdc2b907ec5193fcf6a5ebea3b44ebfa70652f4b", "filename": "tests/ui/unsafe_removed_from_name.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Funsafe_removed_from_name.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Funsafe_removed_from_name.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funsafe_removed_from_name.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,21 +1,21 @@\n error: removed \"unsafe\" from the name of `UnsafeCell` in use as `TotallySafeCell`\n   --> $DIR/unsafe_removed_from_name.rs:14:1\n    |\n-14 | use std::cell::UnsafeCell as TotallySafeCell;\n+LL | use std::cell::UnsafeCell as TotallySafeCell;\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::unsafe-removed-from-name` implied by `-D warnings`\n \n error: removed \"unsafe\" from the name of `UnsafeCell` in use as `TotallySafeCellAgain`\n   --> $DIR/unsafe_removed_from_name.rs:16:1\n    |\n-16 | use std::cell::UnsafeCell as TotallySafeCellAgain;\n+LL | use std::cell::UnsafeCell as TotallySafeCellAgain;\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: removed \"unsafe\" from the name of `Unsafe` in use as `LieAboutModSafety`\n   --> $DIR/unsafe_removed_from_name.rs:30:1\n    |\n-30 | use mod_with_some_unsafe_things::Unsafe as LieAboutModSafety;\n+LL | use mod_with_some_unsafe_things::Unsafe as LieAboutModSafety;\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 3 previous errors"}, {"sha": "528d35ebdef411ba0d2f959e258c57e1e4a7d428", "filename": "tests/ui/unused_io_amount.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Funused_io_amount.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Funused_io_amount.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funused_io_amount.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,7 +1,7 @@\n error: handle written amount returned or use `Write::write_all` instead\n   --> $DIR/unused_io_amount.rs:16:5\n    |\n-16 |     try!(s.write(b\"test\"));\n+LL |     try!(s.write(b\"test\"));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::unused-io-amount` implied by `-D warnings`\n@@ -10,33 +10,33 @@ error: handle written amount returned or use `Write::write_all` instead\n error: handle read amount returned or use `Read::read_exact` instead\n   --> $DIR/unused_io_amount.rs:18:5\n    |\n-18 |     try!(s.read(&mut buf));\n+LL |     try!(s.read(&mut buf));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n \n error: handle written amount returned or use `Write::write_all` instead\n   --> $DIR/unused_io_amount.rs:23:5\n    |\n-23 |     s.write(b\"test\")?;\n+LL |     s.write(b\"test\")?;\n    |     ^^^^^^^^^^^^^^^^^\n \n error: handle read amount returned or use `Read::read_exact` instead\n   --> $DIR/unused_io_amount.rs:25:5\n    |\n-25 |     s.read(&mut buf)?;\n+LL |     s.read(&mut buf)?;\n    |     ^^^^^^^^^^^^^^^^^\n \n error: handle written amount returned or use `Write::write_all` instead\n   --> $DIR/unused_io_amount.rs:30:5\n    |\n-30 |     s.write(b\"test\").unwrap();\n+LL |     s.write(b\"test\").unwrap();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: handle read amount returned or use `Read::read_exact` instead\n   --> $DIR/unused_io_amount.rs:32:5\n    |\n-32 |     s.read(&mut buf).unwrap();\n+LL |     s.read(&mut buf).unwrap();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 6 previous errors"}, {"sha": "07ff5083ed27ac538ff68750a98ea78361b2cbeb", "filename": "tests/ui/unused_labels.stderr", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Funused_labels.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Funused_labels.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funused_labels.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,29 +1,29 @@\n error: unused label `'label`\n   --> $DIR/unused_labels.rs:14:5\n    |\n-14 | /     'label: for i in 1..2 {\n-15 | |         if i > 4 {\n-16 | |             continue;\n-17 | |         }\n-18 | |     }\n+LL | /     'label: for i in 1..2 {\n+LL | |         if i > 4 {\n+LL | |             continue;\n+LL | |         }\n+LL | |     }\n    | |_____^\n    |\n    = note: `-D clippy::unused-label` implied by `-D warnings`\n \n error: unused label `'a`\n   --> $DIR/unused_labels.rs:28:5\n    |\n-28 | /     'a: loop {\n-29 | |         break;\n-30 | |     }\n+LL | /     'a: loop {\n+LL | |         break;\n+LL | |     }\n    | |_____^\n \n error: unused label `'same_label_in_two_fns`\n   --> $DIR/unused_labels.rs:41:5\n    |\n-41 | /     'same_label_in_two_fns: loop {\n-42 | |         let _ = 1;\n-43 | |     }\n+LL | /     'same_label_in_two_fns: loop {\n+LL | |         let _ = 1;\n+LL | |     }\n    | |_____^\n \n error: aborting due to 3 previous errors"}, {"sha": "30ce7b68578553c843ef8684c67d4b32025169cb", "filename": "tests/ui/unused_lt.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Funused_lt.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Funused_lt.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funused_lt.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523", "patch": "@@ -1,21 +1,21 @@\n error: this lifetime isn't used in the function definition\n   --> $DIR/unused_lt.rs:23:14\n    |\n-23 | fn unused_lt<'a>(x: u8) {}\n+LL | fn unused_lt<'a>(x: u8) {}\n    |              ^^\n    |\n    = note: `-D clippy::extra-unused-lifetimes` implied by `-D warnings`\n \n error: this lifetime isn't used in the function definition\n   --> $DIR/unused_lt.rs:25:25\n    |\n-25 | fn unused_lt_transitive<'a, 'b: 'a>(x: &'b u8) {\n+LL | fn unused_lt_transitive<'a, 'b: 'a>(x: &'b u8) {\n    |                         ^^\n \n error: this lifetime isn't used in the function definition\n   --> $DIR/unused_lt.rs:50:10\n    |\n-50 |     fn x<'a>(&self) {}\n+LL |     fn x<'a>(&self) {}\n    |          ^^\n \n error: aborting due to 3 previous errors"}, {"sha": "ac76d75b17600014328f17c40b4934885d3f4ce4", "filename": "tests/ui/unused_unit.stderr", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Funused_unit.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Funused_unit.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funused_unit.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523"}, {"sha": "3970b68de7ad40e3f5b1a84d7ffc1f8e333f7138", "filename": "tests/ui/unwrap_or.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Funwrap_or.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Funwrap_or.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funwrap_or.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523"}, {"sha": "82b44d424df5dede7cfe3d03aa571040d94c2bb2", "filename": "tests/ui/use_self.stderr", "status": "modified", "additions": 60, "deletions": 60, "changes": 120, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fuse_self.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fuse_self.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fuse_self.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523"}, {"sha": "798dde2ea0e9d4685c259f92c91507bc32c0bdc4", "filename": "tests/ui/used_underscore_binding.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fused_underscore_binding.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fused_underscore_binding.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fused_underscore_binding.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523"}, {"sha": "2e4a7f80444f7e8fa9d7aaf0a55fcb606b423018", "filename": "tests/ui/useless_asref.stderr", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fuseless_asref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fuseless_asref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fuseless_asref.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523"}, {"sha": "b9340ce8c02327047946cac6ff5dc595d2ba3d4e", "filename": "tests/ui/useless_attribute.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fuseless_attribute.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fuseless_attribute.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fuseless_attribute.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523"}, {"sha": "0afb95629d9c05ab2a6a16b280dfaf742db464ae", "filename": "tests/ui/vec.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fvec.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fvec.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fvec.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523"}, {"sha": "21b515fa48674782416470dc8e6805ea5694b5b6", "filename": "tests/ui/vec_box_sized.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fvec_box_sized.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fvec_box_sized.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fvec_box_sized.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523"}, {"sha": "0e6c97e48d4546167fe15d4848d7e0ec9a28684f", "filename": "tests/ui/while_loop.stderr", "status": "modified", "additions": 58, "deletions": 58, "changes": 116, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fwhile_loop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fwhile_loop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwhile_loop.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523"}, {"sha": "7daf52a4445736fd5d6ac3e38a1dff1c5a5fa1be", "filename": "tests/ui/write_literal.stderr", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fwrite_literal.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fwrite_literal.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwrite_literal.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523"}, {"sha": "c18ec184876b4f5dfa0e1694fadf7abd661a7562", "filename": "tests/ui/write_with_newline.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fwrite_with_newline.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fwrite_with_newline.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwrite_with_newline.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523"}, {"sha": "9b4061f0fe4e805925abad50f179b3898079a59a", "filename": "tests/ui/writeln_empty_string.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fwriteln_empty_string.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fwriteln_empty_string.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwriteln_empty_string.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523"}, {"sha": "f9d20cb3d470024041fa68513425ee1a200247d3", "filename": "tests/ui/wrong_self_convention.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fwrong_self_convention.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fwrong_self_convention.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwrong_self_convention.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523"}, {"sha": "653a76c69787ae6affd986226cce49654a4524e4", "filename": "tests/ui/zero_div_zero.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fzero_div_zero.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fzero_div_zero.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fzero_div_zero.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523"}, {"sha": "5aa5e275ee601f65b256bcb955e5f23d2803a4ca", "filename": "tests/ui/zero_ptr.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fzero_ptr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7bdf500d93895b6c02f8ae6a73002207f85e523/tests%2Fui%2Fzero_ptr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fzero_ptr.stderr?ref=f7bdf500d93895b6c02f8ae6a73002207f85e523"}]}