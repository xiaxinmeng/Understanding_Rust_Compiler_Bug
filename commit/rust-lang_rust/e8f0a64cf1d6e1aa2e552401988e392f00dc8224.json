{"sha": "e8f0a64cf1d6e1aa2e552401988e392f00dc8224", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU4ZjBhNjRjZjFkNmUxYWEyZTU1MjQwMTk4OGUzOTJmMDBkYzgyMjQ=", "commit": {"author": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2020-01-14T01:54:55Z"}, "committer": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2020-03-23T16:57:47Z"}, "message": "Make the `type_of` return a generic type for generators", "tree": {"sha": "44fde46606fd369f00ec4c17f70a268d9b1204dc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/44fde46606fd369f00ec4c17f70a268d9b1204dc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e8f0a64cf1d6e1aa2e552401988e392f00dc8224", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e8f0a64cf1d6e1aa2e552401988e392f00dc8224", "html_url": "https://github.com/rust-lang/rust/commit/e8f0a64cf1d6e1aa2e552401988e392f00dc8224", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e8f0a64cf1d6e1aa2e552401988e392f00dc8224/comments", "author": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8549cfed4bbcdd28ef3a36e5de72c000e32f650e", "url": "https://api.github.com/repos/rust-lang/rust/commits/8549cfed4bbcdd28ef3a36e5de72c000e32f650e", "html_url": "https://github.com/rust-lang/rust/commit/8549cfed4bbcdd28ef3a36e5de72c000e32f650e"}], "stats": {"total": 13, "additions": 7, "deletions": 6}, "files": [{"sha": "a7ec4f501ae7672afc183eabd4af0fd6139f7c0a", "filename": "src/librustc_mir_build/build/mod.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e8f0a64cf1d6e1aa2e552401988e392f00dc8224/src%2Flibrustc_mir_build%2Fbuild%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8f0a64cf1d6e1aa2e552401988e392f00dc8224/src%2Flibrustc_mir_build%2Fbuild%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir_build%2Fbuild%2Fmod.rs?ref=e8f0a64cf1d6e1aa2e552401988e392f00dc8224", "patch": "@@ -139,7 +139,8 @@ fn mir_build(tcx: TyCtxt<'_>, def_id: DefId) -> BodyAndCache<'_> {\n             let arguments = implicit_argument.into_iter().chain(explicit_arguments);\n \n             let (yield_ty, return_ty) = if body.generator_kind.is_some() {\n-                let gen_sig = match ty.kind {\n+                let gen_ty = tcx.body_tables(body_id).node_type(id);\n+                let gen_sig = match gen_ty.kind {\n                     ty::Generator(_, gen_substs, ..) => gen_substs.as_generator().sig(),\n                     _ => span_bug!(tcx.hir().span(id), \"generator w/o generator type: {:?}\", ty),\n                 };"}, {"sha": "675d003bff1f24b8889c3bc57634e4a3599b05c8", "filename": "src/librustc_typeck/collect/type_of.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e8f0a64cf1d6e1aa2e552401988e392f00dc8224/src%2Flibrustc_typeck%2Fcollect%2Ftype_of.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8f0a64cf1d6e1aa2e552401988e392f00dc8224/src%2Flibrustc_typeck%2Fcollect%2Ftype_of.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcollect%2Ftype_of.rs?ref=e8f0a64cf1d6e1aa2e552401988e392f00dc8224", "patch": "@@ -188,12 +188,12 @@ pub(super) fn type_of(tcx: TyCtxt<'_>, def_id: DefId) -> Ty<'_> {\n         Node::Field(field) => icx.to_ty(&field.ty),\n \n         Node::Expr(&Expr { kind: ExprKind::Closure(.., gen), .. }) => {\n-            if gen.is_some() {\n-                return tcx.typeck_tables_of(def_id).node_type(hir_id);\n-            }\n-\n             let substs = InternalSubsts::identity_for_item(tcx, def_id);\n-            tcx.mk_closure(def_id, substs)\n+            if let Some(movability) = gen {\n+                tcx.mk_generator(def_id, substs, movability)\n+            } else {\n+                tcx.mk_closure(def_id, substs)\n+            }\n         }\n \n         Node::AnonConst(_) => {"}]}