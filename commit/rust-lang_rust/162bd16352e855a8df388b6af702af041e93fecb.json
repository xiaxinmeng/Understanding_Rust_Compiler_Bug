{"sha": "162bd16352e855a8df388b6af702af041e93fecb", "node_id": "C_kwDOAAsO6NoAKDE2MmJkMTYzNTJlODU1YThkZjM4OGI2YWY3MDJhZjA0MWU5M2ZlY2I", "commit": {"author": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2022-07-30T00:00:00Z"}, "committer": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2022-08-23T08:08:48Z"}, "message": "Elide storage markers when elaborating deref projections", "tree": {"sha": "0ee37699711c6aa12e5338eeb2edb1b261ef1880", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0ee37699711c6aa12e5338eeb2edb1b261ef1880"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/162bd16352e855a8df388b6af702af041e93fecb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/162bd16352e855a8df388b6af702af041e93fecb", "html_url": "https://github.com/rust-lang/rust/commit/162bd16352e855a8df388b6af702af041e93fecb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/162bd16352e855a8df388b6af702af041e93fecb/comments", "author": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "943a380b37abfaa7c2933f62b5c404ce08af16de", "url": "https://api.github.com/repos/rust-lang/rust/commits/943a380b37abfaa7c2933f62b5c404ce08af16de", "html_url": "https://github.com/rust-lang/rust/commit/943a380b37abfaa7c2933f62b5c404ce08af16de"}], "stats": {"total": 29, "additions": 7, "deletions": 22}, "files": [{"sha": "906ce8d0906868b92f981eda71c33926653cc7e8", "filename": "compiler/rustc_middle/src/mir/patch.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/162bd16352e855a8df388b6af702af041e93fecb/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fpatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/162bd16352e855a8df388b6af702af041e93fecb/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fpatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fpatch.rs?ref=162bd16352e855a8df388b6af702af041e93fecb", "patch": "@@ -68,22 +68,25 @@ impl<'tcx> MirPatch<'tcx> {\n         Location { block: bb, statement_index: offset }\n     }\n \n-    pub fn new_local_with_info(\n+    pub fn new_internal_with_info(\n         &mut self,\n         ty: Ty<'tcx>,\n         span: Span,\n         local_info: Option<Box<LocalInfo<'tcx>>>,\n     ) -> Local {\n         let index = self.next_local;\n         self.next_local += 1;\n-        let mut new_decl = LocalDecl::new(ty, span);\n+        let mut new_decl = LocalDecl::new(ty, span).internal();\n         new_decl.local_info = local_info;\n         self.new_locals.push(new_decl);\n         Local::new(index as usize)\n     }\n \n     pub fn new_temp(&mut self, ty: Ty<'tcx>, span: Span) -> Local {\n-        self.new_local_with_info(ty, span, None)\n+        let index = self.next_local;\n+        self.next_local += 1;\n+        self.new_locals.push(LocalDecl::new(ty, span));\n+        Local::new(index as usize)\n     }\n \n     pub fn new_internal(&mut self, ty: Ty<'tcx>, span: Span) -> Local {"}, {"sha": "8869f3f92af29218eaa081410920fae8a528d439", "filename": "compiler/rustc_mir_transform/src/deref_separator.rs", "status": "modified", "additions": 1, "deletions": 19, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/162bd16352e855a8df388b6af702af041e93fecb/compiler%2Frustc_mir_transform%2Fsrc%2Fderef_separator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/162bd16352e855a8df388b6af702af041e93fecb/compiler%2Frustc_mir_transform%2Fsrc%2Fderef_separator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fderef_separator.rs?ref=162bd16352e855a8df388b6af702af041e93fecb", "patch": "@@ -28,8 +28,6 @@ impl<'tcx> MutVisitor<'tcx> for DerefChecker<'tcx> {\n             let mut last_len = 0;\n             let mut last_deref_idx = 0;\n \n-            let mut prev_temp: Option<Local> = None;\n-\n             for (idx, elem) in place.projection[0..].iter().enumerate() {\n                 if *elem == ProjectionElem::Deref {\n                     last_deref_idx = idx;\n@@ -39,14 +37,12 @@ impl<'tcx> MutVisitor<'tcx> for DerefChecker<'tcx> {\n             for (idx, (p_ref, p_elem)) in place.iter_projections().enumerate() {\n                 if !p_ref.projection.is_empty() && p_elem == ProjectionElem::Deref {\n                     let ty = p_ref.ty(&self.local_decls, self.tcx).ty;\n-                    let temp = self.patcher.new_local_with_info(\n+                    let temp = self.patcher.new_internal_with_info(\n                         ty,\n                         self.local_decls[p_ref.local].source_info.span,\n                         Some(Box::new(LocalInfo::DerefTemp)),\n                     );\n \n-                    self.patcher.add_statement(loc, StatementKind::StorageLive(temp));\n-\n                     // We are adding current p_ref's projections to our\n                     // temp value, excluding projections we already covered.\n                     let deref_place = Place::from(place_local)\n@@ -66,22 +62,8 @@ impl<'tcx> MutVisitor<'tcx> for DerefChecker<'tcx> {\n                             Place::from(temp).project_deeper(&place.projection[idx..], self.tcx);\n                         *place = temp_place;\n                     }\n-\n-                    // We are destroying the previous temp since it's no longer used.\n-                    if let Some(prev_temp) = prev_temp {\n-                        self.patcher.add_statement(loc, StatementKind::StorageDead(prev_temp));\n-                    }\n-\n-                    prev_temp = Some(temp);\n                 }\n             }\n-\n-            // Since we won't be able to reach final temp, we destroy it outside the loop.\n-            if let Some(prev_temp) = prev_temp {\n-                let last_loc =\n-                    Location { block: loc.block, statement_index: loc.statement_index + 1 };\n-                self.patcher.add_statement(last_loc, StatementKind::StorageDead(prev_temp));\n-            }\n         }\n     }\n }"}]}