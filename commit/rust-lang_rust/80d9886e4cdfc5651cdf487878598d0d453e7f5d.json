{"sha": "80d9886e4cdfc5651cdf487878598d0d453e7f5d", "node_id": "C_kwDOAAsO6NoAKDgwZDk4ODZlNGNkZmM1NjUxY2RmNDg3ODc4NTk4ZDBkNDUzZTdmNWQ", "commit": {"author": {"name": "Jubilee", "email": "46493976+workingjubilee@users.noreply.github.com", "date": "2021-09-24T18:40:13Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-09-24T18:40:13Z"}, "message": "Rollup merge of #89104 - Mark-Simulacrum:spawn-unchecked, r=nagisa,bjorn3\n\nSimplify scoped_thread\n\nAvoids a bunch of manual pointer manipulation in favor of using the appropriate std API.", "tree": {"sha": "2dfd1b991a5ff1094790e259dec26af4b947d4bd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2dfd1b991a5ff1094790e259dec26af4b947d4bd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/80d9886e4cdfc5651cdf487878598d0d453e7f5d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhThuNCRBK7hj4Ov3rIwAAvSIIAJz4J560HZU3slbYdRTy0HLb\nQdCl6bZO1PEbGlIDfmEYqZhMCs1Ni5wntr9wlOZ1Qz78X0pHIPHkM194hNfphNdK\nRqMWfWFwMyOD6xYOSl9jYwCO+7Vd+dTg1ldVbOOTkhGpORG40sl6eqGZQss+GkCY\nZZ9T+hJZbMjVMsTBkftrIPqWeg9X3Hni916rmSWv+V7gHZhVbT1Iisxd3yrjvtOn\ntFIKsCow35eH/U0lKJ1jH9euWfrMaZ6eB0uSzfh/YtsT8y+uW8qcIqzfnrgE8Q0P\nPjD7YjbtQ4pFItxC8O6tlDCLq8NY1Qffop+2ycu9lra5gm5f2d6gelhru1Y2D18=\n=Xa4x\n-----END PGP SIGNATURE-----\n", "payload": "tree 2dfd1b991a5ff1094790e259dec26af4b947d4bd\nparent 8a454f810190a2ebf75b09991faa802f7c7465a1\nparent 0222556c077110516356c205948d1dd12edc5588\nauthor Jubilee <46493976+workingjubilee@users.noreply.github.com> 1632508813 -0700\ncommitter GitHub <noreply@github.com> 1632508813 -0700\n\nRollup merge of #89104 - Mark-Simulacrum:spawn-unchecked, r=nagisa,bjorn3\n\nSimplify scoped_thread\n\nAvoids a bunch of manual pointer manipulation in favor of using the appropriate std API.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/80d9886e4cdfc5651cdf487878598d0d453e7f5d", "html_url": "https://github.com/rust-lang/rust/commit/80d9886e4cdfc5651cdf487878598d0d453e7f5d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/80d9886e4cdfc5651cdf487878598d0d453e7f5d/comments", "author": {"login": "workingjubilee", "id": 46493976, "node_id": "MDQ6VXNlcjQ2NDkzOTc2", "avatar_url": "https://avatars.githubusercontent.com/u/46493976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/workingjubilee", "html_url": "https://github.com/workingjubilee", "followers_url": "https://api.github.com/users/workingjubilee/followers", "following_url": "https://api.github.com/users/workingjubilee/following{/other_user}", "gists_url": "https://api.github.com/users/workingjubilee/gists{/gist_id}", "starred_url": "https://api.github.com/users/workingjubilee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/workingjubilee/subscriptions", "organizations_url": "https://api.github.com/users/workingjubilee/orgs", "repos_url": "https://api.github.com/users/workingjubilee/repos", "events_url": "https://api.github.com/users/workingjubilee/events{/privacy}", "received_events_url": "https://api.github.com/users/workingjubilee/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8a454f810190a2ebf75b09991faa802f7c7465a1", "url": "https://api.github.com/repos/rust-lang/rust/commits/8a454f810190a2ebf75b09991faa802f7c7465a1", "html_url": "https://github.com/rust-lang/rust/commit/8a454f810190a2ebf75b09991faa802f7c7465a1"}, {"sha": "0222556c077110516356c205948d1dd12edc5588", "url": "https://api.github.com/repos/rust-lang/rust/commits/0222556c077110516356c205948d1dd12edc5588", "html_url": "https://github.com/rust-lang/rust/commit/0222556c077110516356c205948d1dd12edc5588"}], "stats": {"total": 25, "additions": 6, "deletions": 19}, "files": [{"sha": "2fc3759968fd3531d8c63857a98cbda411de3a00", "filename": "compiler/rustc_interface/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/80d9886e4cdfc5651cdf487878598d0d453e7f5d/compiler%2Frustc_interface%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80d9886e4cdfc5651cdf487878598d0d453e7f5d/compiler%2Frustc_interface%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_interface%2Fsrc%2Flib.rs?ref=80d9886e4cdfc5651cdf487878598d0d453e7f5d", "patch": "@@ -1,6 +1,7 @@\n #![feature(bool_to_option)]\n #![feature(box_patterns)]\n #![feature(internal_output_capture)]\n+#![feature(thread_spawn_unchecked)]\n #![feature(nll)]\n #![feature(once_cell)]\n #![recursion_limit = \"256\"]"}, {"sha": "24975702b875db76ae25c7c1bb6bc3cb365f2fc1", "filename": "compiler/rustc_interface/src/util.rs", "status": "modified", "additions": 5, "deletions": 19, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/80d9886e4cdfc5651cdf487878598d0d453e7f5d/compiler%2Frustc_interface%2Fsrc%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80d9886e4cdfc5651cdf487878598d0d453e7f5d/compiler%2Frustc_interface%2Fsrc%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_interface%2Fsrc%2Futil.rs?ref=80d9886e4cdfc5651cdf487878598d0d453e7f5d", "patch": "@@ -115,25 +115,11 @@ fn get_stack_size() -> Option<usize> {\n /// for `'static` bounds.\n #[cfg(not(parallel_compiler))]\n pub fn scoped_thread<F: FnOnce() -> R + Send, R: Send>(cfg: thread::Builder, f: F) -> R {\n-    struct Ptr(*mut ());\n-    unsafe impl Send for Ptr {}\n-    unsafe impl Sync for Ptr {}\n-\n-    let mut f = Some(f);\n-    let run = Ptr(&mut f as *mut _ as *mut ());\n-    let mut result = None;\n-    let result_ptr = Ptr(&mut result as *mut _ as *mut ());\n-\n-    let thread = cfg.spawn(move || {\n-        let _ = (&run, &result_ptr);\n-        let run = unsafe { (*(run.0 as *mut Option<F>)).take().unwrap() };\n-        let result = unsafe { &mut *(result_ptr.0 as *mut Option<R>) };\n-        *result = Some(run());\n-    });\n-\n-    match thread.unwrap().join() {\n-        Ok(()) => result.unwrap(),\n-        Err(p) => panic::resume_unwind(p),\n+    // SAFETY: join() is called immediately, so any closure captures are still\n+    // alive.\n+    match unsafe { cfg.spawn_unchecked(f) }.unwrap().join() {\n+        Ok(v) => v,\n+        Err(e) => panic::resume_unwind(e),\n     }\n }\n "}]}