{"sha": "41f89beb3f03cb7cdbfbd754ac2eee9e1f153f18", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQxZjg5YmViM2YwM2NiN2NkYmZiZDc1NGFjMmVlZTllMWYxNTNmMTg=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-11-21T15:01:39Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-11-21T15:01:39Z"}, "message": "if let", "tree": {"sha": "f28e1bb911d4feb5180e5a9d6d2fdc1ad416fbf8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f28e1bb911d4feb5180e5a9d6d2fdc1ad416fbf8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/41f89beb3f03cb7cdbfbd754ac2eee9e1f153f18", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/41f89beb3f03cb7cdbfbd754ac2eee9e1f153f18", "html_url": "https://github.com/rust-lang/rust/commit/41f89beb3f03cb7cdbfbd754ac2eee9e1f153f18", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/41f89beb3f03cb7cdbfbd754ac2eee9e1f153f18/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ec8cc029c1904bcbbb6ede8fba0251c2aaaf70f8", "url": "https://api.github.com/repos/rust-lang/rust/commits/ec8cc029c1904bcbbb6ede8fba0251c2aaaf70f8", "html_url": "https://github.com/rust-lang/rust/commit/ec8cc029c1904bcbbb6ede8fba0251c2aaaf70f8"}], "stats": {"total": 8, "additions": 3, "deletions": 5}, "files": [{"sha": "21addbfbf789f1b3426758c3af45937c7f01cbdb", "filename": "src/stacked_borrows.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/41f89beb3f03cb7cdbfbd754ac2eee9e1f153f18/src%2Fstacked_borrows.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41f89beb3f03cb7cdbfbd754ac2eee9e1f153f18/src%2Fstacked_borrows.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fstacked_borrows.rs?ref=41f89beb3f03cb7cdbfbd754ac2eee9e1f153f18", "patch": "@@ -151,11 +151,9 @@ impl<'tcx> Stack {\n     /// Returns the index of the item we matched, `None` if it was the frozen one.\n     /// `kind` indicates which kind of reference is being dereferenced.\n     fn deref(&self, bor: Borrow, kind: RefKind) -> Result<Option<usize>, String> {\n-        // Exclude unique ref and frozen tag.\n-        match (kind, bor) {\n-            (RefKind::Unique, Borrow::Shr(Some(_))) =>\n-                return Err(format!(\"Encountered mutable reference with frozen tag\")),\n-            _ => {}\n+        // Exclude unique ref with frozen tag.\n+        if let (RefKind::Unique, Borrow::Shr(Some(_))) = (kind, bor) {\n+            return Err(format!(\"Encountered mutable reference with frozen tag\"));\n         }\n         // Checks related to freezing\n         match bor {"}]}