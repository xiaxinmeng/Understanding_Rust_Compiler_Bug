{"sha": "52ed89ae8c264d8885bfda4f79033289db459c02", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUyZWQ4OWFlOGMyNjRkODg4NWJmZGE0Zjc5MDMzMjg5ZGI0NTljMDI=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-05-28T08:31:38Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-05-28T12:04:36Z"}, "message": "from_u32_unchecked: check validity when debug assertions are enabled", "tree": {"sha": "55610e81c6a10f37b56c4a18f9f0185ccbdfbe58", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/55610e81c6a10f37b56c4a18f9f0185ccbdfbe58"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/52ed89ae8c264d8885bfda4f79033289db459c02", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/52ed89ae8c264d8885bfda4f79033289db459c02", "html_url": "https://github.com/rust-lang/rust/commit/52ed89ae8c264d8885bfda4f79033289db459c02", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/52ed89ae8c264d8885bfda4f79033289db459c02/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "45127211566c53bac386b66909a830649182ab7a", "url": "https://api.github.com/repos/rust-lang/rust/commits/45127211566c53bac386b66909a830649182ab7a", "html_url": "https://github.com/rust-lang/rust/commit/45127211566c53bac386b66909a830649182ab7a"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "87c56c4b0a1059b50bf5cf22577536196500e4b5", "filename": "src/libcore/char/convert.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/52ed89ae8c264d8885bfda4f79033289db459c02/src%2Flibcore%2Fchar%2Fconvert.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52ed89ae8c264d8885bfda4f79033289db459c02/src%2Flibcore%2Fchar%2Fconvert.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fchar%2Fconvert.rs?ref=52ed89ae8c264d8885bfda4f79033289db459c02", "patch": "@@ -99,7 +99,7 @@ pub fn from_u32(i: u32) -> Option<char> {\n #[inline]\n #[stable(feature = \"char_from_unchecked\", since = \"1.5.0\")]\n pub unsafe fn from_u32_unchecked(i: u32) -> char {\n-    transmute(i)\n+    if cfg!(debug_assertions) { char::from_u32(i).unwrap() } else { transmute(i) }\n }\n \n #[stable(feature = \"char_convert\", since = \"1.13.0\")]\n@@ -218,7 +218,7 @@ impl TryFrom<u32> for char {\n             Err(CharTryFromError(()))\n         } else {\n             // SAFETY: checked that it's a legal unicode value\n-            Ok(unsafe { from_u32_unchecked(i) })\n+            Ok(unsafe { transmute(i) })\n         }\n     }\n }"}]}