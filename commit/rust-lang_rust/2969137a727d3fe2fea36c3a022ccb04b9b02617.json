{"sha": "2969137a727d3fe2fea36c3a022ccb04b9b02617", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI5NjkxMzdhNzI3ZDNmZTJmZWEzNmMzYTAyMmNjYjA0YjliMDI2MTc=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2017-05-27T19:34:59Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2017-05-27T19:34:59Z"}, "message": "Add invalid unary operator usage error code", "tree": {"sha": "94f5a8d9de75c2e0e6e52705f60eca35230f1354", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/94f5a8d9de75c2e0e6e52705f60eca35230f1354"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2969137a727d3fe2fea36c3a022ccb04b9b02617", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2969137a727d3fe2fea36c3a022ccb04b9b02617", "html_url": "https://github.com/rust-lang/rust/commit/2969137a727d3fe2fea36c3a022ccb04b9b02617", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2969137a727d3fe2fea36c3a022ccb04b9b02617/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "998b19740cba3a74f7281bba0f1ed9e1f8438236", "url": "https://api.github.com/repos/rust-lang/rust/commits/998b19740cba3a74f7281bba0f1ed9e1f8438236", "html_url": "https://github.com/rust-lang/rust/commit/998b19740cba3a74f7281bba0f1ed9e1f8438236"}], "stats": {"total": 70, "additions": 64, "deletions": 6}, "files": [{"sha": "3709260acc997a5c09d9c1cdc8def7998c5eab83", "filename": "src/librustc_typeck/check/op.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/2969137a727d3fe2fea36c3a022ccb04b9b02617/src%2Flibrustc_typeck%2Fcheck%2Fop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2969137a727d3fe2fea36c3a022ccb04b9b02617/src%2Flibrustc_typeck%2Fcheck%2Fop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fop.rs?ref=2969137a727d3fe2fea36c3a022ccb04b9b02617", "patch": "@@ -316,10 +316,12 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n         match self.lookup_op_method(ex, operand_ty, vec![], mname, trait_did, operand_expr) {\n             Ok(t) => t,\n             Err(()) => {\n-                self.type_error_message(ex.span, |actual| {\n-                    format!(\"cannot apply unary operator `{}` to type `{}`\",\n-                            op_str, actual)\n-                }, operand_ty);\n+                let actual = self.resolve_type_vars_if_possible(&operand_ty);\n+                if !actual.references_error() {\n+                    struct_span_err!(self.tcx.sess, ex.span, E0600,\n+                                     \"cannot apply unary operator `{}` to type `{}`\",\n+                                     op_str, actual).emit();\n+                }\n                 self.tcx.types.err\n             }\n         }"}, {"sha": "f19eb194276112245b98826ad6f980dd744147e4", "filename": "src/librustc_typeck/diagnostics.rs", "status": "modified", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/2969137a727d3fe2fea36c3a022ccb04b9b02617/src%2Flibrustc_typeck%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2969137a727d3fe2fea36c3a022ccb04b9b02617/src%2Flibrustc_typeck%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fdiagnostics.rs?ref=2969137a727d3fe2fea36c3a022ccb04b9b02617", "patch": "@@ -4052,6 +4052,49 @@ x.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n ```\n \"##,\n \n+E0600: r##\"\n+An unary operator was used on a type which doesn't implement it.\n+\n+Example of erroneous code:\n+\n+```compile_fail,E0600\n+enum Question {\n+    Yes,\n+    No,\n+}\n+\n+!Question::Yes; // error: cannot apply unary operator `!` to type `Question`\n+```\n+\n+In this case, `Question` would need to implement the `std::ops::Not` trait in\n+order to be able to use `!` on it. Let's implement it:\n+\n+```\n+use std::ops::Not;\n+\n+enum Question {\n+    Yes,\n+    No,\n+}\n+\n+// We implement the `Not` trait on the enum.\n+impl Not for Question {\n+    type Output = bool;\n+\n+    fn not(self) -> bool {\n+        match self {\n+            Question::Yes => false, // If the `Answer` is `Yes`, then it\n+                                    // returns false.\n+            Question::No => true, // And here we do the opposite.\n+        }\n+    }\n+}\n+\n+assert_eq!(!Question::Yes, false);\n+assert_eq!(!Question::No, true);\n+```\n+\"##,\n+\n }\n \n register_diagnostics! {"}, {"sha": "5457ff266086f3fdff184b201000e621dcfab18b", "filename": "src/test/compile-fail/E0600.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/2969137a727d3fe2fea36c3a022ccb04b9b02617/src%2Ftest%2Fcompile-fail%2FE0600.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2969137a727d3fe2fea36c3a022ccb04b9b02617/src%2Ftest%2Fcompile-fail%2FE0600.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0600.rs?ref=2969137a727d3fe2fea36c3a022ccb04b9b02617", "patch": "@@ -0,0 +1,13 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn main() {\n+    !\"a\"; //~ ERROR E0600\n+}"}, {"sha": "43743b796d5e45697c5a6b7183284cba86ab11ec", "filename": "src/test/ui/codemap_tests/issue-28308.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2969137a727d3fe2fea36c3a022ccb04b9b02617/src%2Ftest%2Fui%2Fcodemap_tests%2Fissue-28308.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2969137a727d3fe2fea36c3a022ccb04b9b02617/src%2Ftest%2Fui%2Fcodemap_tests%2Fissue-28308.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcodemap_tests%2Fissue-28308.stderr?ref=2969137a727d3fe2fea36c3a022ccb04b9b02617", "patch": "@@ -1,4 +1,4 @@\n-error: cannot apply unary operator `!` to type `&'static str`\n+error[E0600]: cannot apply unary operator `!` to type `&'static str`\n   --> $DIR/issue-28308.rs:12:5\n    |\n 12 |     assert!(\"foo\");"}, {"sha": "f47791455afed5a84beee86f6b612cf37cc71ab2", "filename": "src/test/ui/reachable/expr_unary.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2969137a727d3fe2fea36c3a022ccb04b9b02617/src%2Ftest%2Fui%2Freachable%2Fexpr_unary.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2969137a727d3fe2fea36c3a022ccb04b9b02617/src%2Ftest%2Fui%2Freachable%2Fexpr_unary.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freachable%2Fexpr_unary.stderr?ref=2969137a727d3fe2fea36c3a022ccb04b9b02617", "patch": "@@ -1,4 +1,4 @@\n-error: cannot apply unary operator `!` to type `!`\n+error[E0600]: cannot apply unary operator `!` to type `!`\n   --> $DIR/expr_unary.rs:18:16\n    |\n 18 |     let x: ! = ! { return; 22 };"}]}