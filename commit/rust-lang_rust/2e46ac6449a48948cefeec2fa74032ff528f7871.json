{"sha": "2e46ac6449a48948cefeec2fa74032ff528f7871", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJlNDZhYzY0NDlhNDg5NDhjZWZlZWMyZmE3NDAzMmZmNTI4Zjc4NzE=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-19T00:11:23Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-26T21:01:22Z"}, "message": "librustc: De-`@mut` the short names cache", "tree": {"sha": "0a7924506090eff38ff971daddf8ef675b211088", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0a7924506090eff38ff971daddf8ef675b211088"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2e46ac6449a48948cefeec2fa74032ff528f7871", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2e46ac6449a48948cefeec2fa74032ff528f7871", "html_url": "https://github.com/rust-lang/rust/commit/2e46ac6449a48948cefeec2fa74032ff528f7871", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2e46ac6449a48948cefeec2fa74032ff528f7871/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2612d76d2276d15e30c022426d2ae5222a080b83", "url": "https://api.github.com/repos/rust-lang/rust/commits/2612d76d2276d15e30c022426d2ae5222a080b83", "html_url": "https://github.com/rust-lang/rust/commit/2612d76d2276d15e30c022426d2ae5222a080b83"}], "stats": {"total": 26, "additions": 18, "deletions": 8}, "files": [{"sha": "877ae28a2ce11cdf1605817fb4bf7f201189cfb9", "filename": "src/librustc/metadata/tyencode.rs", "status": "modified", "additions": 16, "deletions": 6, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/2e46ac6449a48948cefeec2fa74032ff528f7871/src%2Flibrustc%2Fmetadata%2Ftyencode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e46ac6449a48948cefeec2fa74032ff528f7871/src%2Flibrustc%2Fmetadata%2Ftyencode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Ftyencode.rs?ref=2e46ac6449a48948cefeec2fa74032ff528f7871", "patch": "@@ -60,17 +60,27 @@ fn mywrite(w: @mut MemWriter, fmt: &fmt::Arguments) {\n pub fn enc_ty(w: @mut MemWriter, cx: @ctxt, t: ty::t) {\n     match cx.abbrevs {\n       ac_no_abbrevs => {\n-        let result_str = match cx.tcx.short_names_cache.find(&t) {\n-            Some(&s) => s,\n+          let result_str_opt;\n+          {\n+              let short_names_cache = cx.tcx.short_names_cache.borrow();\n+              result_str_opt = short_names_cache.get()\n+                                                .find(&t)\n+                                                .map(|result| *result);\n+          }\n+          let result_str = match result_str_opt {\n+            Some(s) => s,\n             None => {\n                 let wr = @mut MemWriter::new();\n                 enc_sty(wr, cx, &ty::get(t).sty);\n                 let s = str::from_utf8(*wr.inner_ref()).to_managed();\n-                cx.tcx.short_names_cache.insert(t, s);\n+                let mut short_names_cache = cx.tcx\n+                                              .short_names_cache\n+                                              .borrow_mut();\n+                short_names_cache.get().insert(t, s);\n                 s\n-          }\n-        };\n-        w.write(result_str.as_bytes());\n+            }\n+          };\n+          w.write(result_str.as_bytes());\n       }\n       ac_use_abbrevs(abbrevs) => {\n           match abbrevs.find(&t) {"}, {"sha": "7f995570eed9d84002ae4d33414c1d2adc674637", "filename": "src/librustc/middle/ty.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2e46ac6449a48948cefeec2fa74032ff528f7871/src%2Flibrustc%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e46ac6449a48948cefeec2fa74032ff528f7871/src%2Flibrustc%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fty.rs?ref=2e46ac6449a48948cefeec2fa74032ff528f7871", "patch": "@@ -307,7 +307,7 @@ struct ctxt_ {\n     freevars: freevars::freevar_map,\n     tcache: type_cache,\n     rcache: creader_cache,\n-    short_names_cache: @mut HashMap<t, @str>,\n+    short_names_cache: RefCell<HashMap<t, @str>>,\n     needs_unwind_cleanup_cache: @mut HashMap<t, bool>,\n     tc_cache: @mut HashMap<uint, TypeContents>,\n     ast_ty_to_ty_cache: @mut HashMap<NodeId, ast_ty_to_ty_cache_entry>,\n@@ -993,7 +993,7 @@ pub fn mk_ctxt(s: session::Session,\n         freevars: freevars,\n         tcache: @mut HashMap::new(),\n         rcache: mk_rcache(),\n-        short_names_cache: new_ty_hash(),\n+        short_names_cache: RefCell::new(HashMap::new()),\n         needs_unwind_cleanup_cache: new_ty_hash(),\n         tc_cache: @mut HashMap::new(),\n         ast_ty_to_ty_cache: @mut HashMap::new(),"}]}