{"sha": "fbcca2aaf0280190111982e931bc113b21f7ec0d", "node_id": "C_kwDOAAsO6NoAKGZiY2NhMmFhZjAyODAxOTAxMTE5ODJlOTMxYmMxMTNiMjFmN2VjMGQ", "commit": {"author": {"name": "Nathan Fenner", "email": "nfenneremail@gmail.com", "date": "2023-02-20T05:27:04Z"}, "committer": {"name": "Nathan Fenner", "email": "nfenneremail@gmail.com", "date": "2023-02-20T05:27:04Z"}, "message": "Refine error span for trait error into borrowed expression", "tree": {"sha": "b3601cc8d0fffc1302b9bc704fe230e4f5204461", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b3601cc8d0fffc1302b9bc704fe230e4f5204461"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fbcca2aaf0280190111982e931bc113b21f7ec0d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fbcca2aaf0280190111982e931bc113b21f7ec0d", "html_url": "https://github.com/rust-lang/rust/commit/fbcca2aaf0280190111982e931bc113b21f7ec0d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fbcca2aaf0280190111982e931bc113b21f7ec0d/comments", "author": {"login": "Nathan-Fenner", "id": 6179181, "node_id": "MDQ6VXNlcjYxNzkxODE=", "avatar_url": "https://avatars.githubusercontent.com/u/6179181?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nathan-Fenner", "html_url": "https://github.com/Nathan-Fenner", "followers_url": "https://api.github.com/users/Nathan-Fenner/followers", "following_url": "https://api.github.com/users/Nathan-Fenner/following{/other_user}", "gists_url": "https://api.github.com/users/Nathan-Fenner/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nathan-Fenner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nathan-Fenner/subscriptions", "organizations_url": "https://api.github.com/users/Nathan-Fenner/orgs", "repos_url": "https://api.github.com/users/Nathan-Fenner/repos", "events_url": "https://api.github.com/users/Nathan-Fenner/events{/privacy}", "received_events_url": "https://api.github.com/users/Nathan-Fenner/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Nathan-Fenner", "id": 6179181, "node_id": "MDQ6VXNlcjYxNzkxODE=", "avatar_url": "https://avatars.githubusercontent.com/u/6179181?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nathan-Fenner", "html_url": "https://github.com/Nathan-Fenner", "followers_url": "https://api.github.com/users/Nathan-Fenner/followers", "following_url": "https://api.github.com/users/Nathan-Fenner/following{/other_user}", "gists_url": "https://api.github.com/users/Nathan-Fenner/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nathan-Fenner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nathan-Fenner/subscriptions", "organizations_url": "https://api.github.com/users/Nathan-Fenner/orgs", "repos_url": "https://api.github.com/users/Nathan-Fenner/repos", "events_url": "https://api.github.com/users/Nathan-Fenner/events{/privacy}", "received_events_url": "https://api.github.com/users/Nathan-Fenner/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7b552967b8ed122aa949cddac8c2270b6490e64e", "url": "https://api.github.com/repos/rust-lang/rust/commits/7b552967b8ed122aa949cddac8c2270b6490e64e", "html_url": "https://github.com/rust-lang/rust/commit/7b552967b8ed122aa949cddac8c2270b6490e64e"}], "stats": {"total": 83, "additions": 67, "deletions": 16}, "files": [{"sha": "39e0ea98f96e3263f9bb01624164ca1b0da92007", "filename": "compiler/rustc_hir_typeck/src/fn_ctxt/adjust_fulfillment_errors.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/fbcca2aaf0280190111982e931bc113b21f7ec0d/compiler%2Frustc_hir_typeck%2Fsrc%2Ffn_ctxt%2Fadjust_fulfillment_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbcca2aaf0280190111982e931bc113b21f7ec0d/compiler%2Frustc_hir_typeck%2Fsrc%2Ffn_ctxt%2Fadjust_fulfillment_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Ffn_ctxt%2Fadjust_fulfillment_errors.rs?ref=fbcca2aaf0280190111982e931bc113b21f7ec0d", "patch": "@@ -549,6 +549,19 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             return Err(expr);\n         };\n \n+        if let (\n+            hir::ExprKind::AddrOf(_borrow_kind, _borrow_mutability, borrowed_expr),\n+            ty::Ref(_ty_region, ty_ref_type, _ty_mutability),\n+        ) = (&expr.kind, in_ty.kind())\n+        {\n+            // We can \"drill into\" the borrowed expression.\n+            return self.blame_specific_part_of_expr_corresponding_to_generic_param(\n+                param,\n+                borrowed_expr,\n+                (*ty_ref_type).into(),\n+            );\n+        }\n+\n         if let (hir::ExprKind::Tup(expr_elements), ty::Tuple(in_ty_elements)) =\n             (&expr.kind, in_ty.kind())\n         {"}, {"sha": "6fea409ed4716244a484c2ba1c86f3ff4c86e76c", "filename": "tests/ui/errors/traits/blame-trait-error-spans-on-exprs.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/fbcca2aaf0280190111982e931bc113b21f7ec0d/tests%2Fui%2Ferrors%2Ftraits%2Fblame-trait-error-spans-on-exprs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbcca2aaf0280190111982e931bc113b21f7ec0d/tests%2Fui%2Ferrors%2Ftraits%2Fblame-trait-error-spans-on-exprs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ferrors%2Ftraits%2Fblame-trait-error-spans-on-exprs.rs?ref=fbcca2aaf0280190111982e931bc113b21f7ec0d", "patch": "@@ -71,6 +71,8 @@ struct DoubleWrapper<T> {\n \n impl<T: T1> T1 for DoubleWrapper<T> {}\n \n+impl<'a, T: T2> T1 for &'a T {}\n+\n fn example<Q>(q: Q) {\n     // In each of the following examples, we expect the error span to point at the 'q' variable,\n     // since the missing constraint is `Q: T3`.\n@@ -126,6 +128,10 @@ fn example<Q>(q: Q) {\n         Two { a: Two { a: (), b: Two { a: Two { a: (), b: q }, b: () } }, b: () },\n         //~^ ERROR the trait bound `Q: T1` is not satisfied [E0277]\n     );\n+\n+    // Verifies for reference:\n+    want(&Burrito { spicy: false, filling: q });\n+    //~^ ERROR the trait bound `Q: T3` is not satisfied [E0277]\n }\n \n fn main() {}"}, {"sha": "6913771f2883e020f23898696f41545245c73246", "filename": "tests/ui/errors/traits/blame-trait-error-spans-on-exprs.stderr", "status": "modified", "additions": 46, "deletions": 14, "changes": 60, "blob_url": "https://github.com/rust-lang/rust/blob/fbcca2aaf0280190111982e931bc113b21f7ec0d/tests%2Fui%2Ferrors%2Ftraits%2Fblame-trait-error-spans-on-exprs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fbcca2aaf0280190111982e931bc113b21f7ec0d/tests%2Fui%2Ferrors%2Ftraits%2Fblame-trait-error-spans-on-exprs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ferrors%2Ftraits%2Fblame-trait-error-spans-on-exprs.stderr?ref=fbcca2aaf0280190111982e931bc113b21f7ec0d", "patch": "@@ -1,5 +1,5 @@\n error[E0277]: the trait bound `Q: T3` is not satisfied\n-  --> $DIR/blame-trait-error-spans-on-exprs.rs:79:60\n+  --> $DIR/blame-trait-error-spans-on-exprs.rs:81:60\n    |\n LL |     want(Wrapper { value: Burrito { spicy: false, filling: q } });\n    |     ---- required by a bound introduced by this call       ^ the trait `T3` is not implemented for `Q`\n@@ -29,7 +29,7 @@ LL | fn example<Q: T3>(q: Q) {\n    |             ++++\n \n error[E0277]: the trait bound `Q: T3` is not satisfied\n-  --> $DIR/blame-trait-error-spans-on-exprs.rs:83:84\n+  --> $DIR/blame-trait-error-spans-on-exprs.rs:85:84\n    |\n LL |     want(Wrapper { value: BurritoKinds::SmallBurrito { spicy: true, small_filling: q } });\n    |     ---- required by a bound introduced by this call                               ^ the trait `T3` is not implemented for `Q`\n@@ -59,7 +59,7 @@ LL | fn example<Q: T3>(q: Q) {\n    |             ++++\n \n error[E0277]: the trait bound `Q: T3` is not satisfied\n-  --> $DIR/blame-trait-error-spans-on-exprs.rs:87:39\n+  --> $DIR/blame-trait-error-spans-on-exprs.rs:89:39\n    |\n LL |     want(Wrapper { value: Taco(false, q) });\n    |     ----                              ^ the trait `T3` is not implemented for `Q`\n@@ -91,7 +91,7 @@ LL | fn example<Q: T3>(q: Q) {\n    |             ++++\n \n error[E0277]: the trait bound `Q: T3` is not satisfied\n-  --> $DIR/blame-trait-error-spans-on-exprs.rs:91:27\n+  --> $DIR/blame-trait-error-spans-on-exprs.rs:93:27\n    |\n LL |     want(Wrapper { value: TacoKinds::OneTaco(false, q) });\n    |     ----                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `T3` is not implemented for `Q`\n@@ -123,7 +123,7 @@ LL | fn example<Q: T3>(q: Q) {\n    |             ++++\n \n error[E0277]: the trait bound `Q: T3` is not satisfied\n-  --> $DIR/blame-trait-error-spans-on-exprs.rs:95:74\n+  --> $DIR/blame-trait-error-spans-on-exprs.rs:97:74\n    |\n LL |     want(Wrapper { value: GenericBurrito { spiciness: NotSpicy, filling: q } });\n    |     ---- required by a bound introduced by this call                     ^ the trait `T3` is not implemented for `Q`\n@@ -153,7 +153,7 @@ LL | fn example<Q: T3>(q: Q) {\n    |             ++++\n \n error[E0277]: the trait bound `Q: T2` is not satisfied\n-  --> $DIR/blame-trait-error-spans-on-exprs.rs:99:14\n+  --> $DIR/blame-trait-error-spans-on-exprs.rs:101:14\n    |\n LL |     want((3, q));\n    |     ----     ^ the trait `T2` is not implemented for `Q`\n@@ -178,7 +178,7 @@ LL | fn example<Q: T2>(q: Q) {\n    |             ++++\n \n error[E0277]: the trait bound `Q: T3` is not satisfied\n-  --> $DIR/blame-trait-error-spans-on-exprs.rs:103:31\n+  --> $DIR/blame-trait-error-spans-on-exprs.rs:105:31\n    |\n LL |     want(Wrapper { value: (3, q) });\n    |     ----                      ^ the trait `T3` is not implemented for `Q`\n@@ -210,7 +210,7 @@ LL | fn example<Q: T3>(q: Q) {\n    |             ++++\n \n error[E0277]: the trait bound `Q: T3` is not satisfied\n-  --> $DIR/blame-trait-error-spans-on-exprs.rs:107:15\n+  --> $DIR/blame-trait-error-spans-on-exprs.rs:109:15\n    |\n LL |     want(((3, q), 5));\n    |     ----      ^ the trait `T3` is not implemented for `Q`\n@@ -242,7 +242,7 @@ LL | fn example<Q: T3>(q: Q) {\n    |             ++++\n \n error[E0277]: the trait bound `Q: T1` is not satisfied\n-  --> $DIR/blame-trait-error-spans-on-exprs.rs:110:49\n+  --> $DIR/blame-trait-error-spans-on-exprs.rs:112:49\n    |\n LL |     want(DoubleWrapper { item: Wrapper { value: q } });\n    |     ----                                        ^ the trait `T1` is not implemented for `Q`\n@@ -267,7 +267,7 @@ LL | fn example<Q: T1>(q: Q) {\n    |             ++++\n \n error[E0277]: the trait bound `Q: T1` is not satisfied\n-  --> $DIR/blame-trait-error-spans-on-exprs.rs:113:88\n+  --> $DIR/blame-trait-error-spans-on-exprs.rs:115:88\n    |\n LL |     want(DoubleWrapper { item: Wrapper { value: DoubleWrapper { item: Wrapper { value: q } } } });\n    |     ---- required by a bound introduced by this call                                   ^ the trait `T1` is not implemented for `Q`\n@@ -292,7 +292,7 @@ LL | fn example<Q: T1>(q: Q) {\n    |             ++++\n \n error[E0277]: the trait bound `Q: T3` is not satisfied\n-  --> $DIR/blame-trait-error-spans-on-exprs.rs:117:27\n+  --> $DIR/blame-trait-error-spans-on-exprs.rs:119:27\n    |\n LL |     want(Wrapper { value: AliasBurrito { spiciness: q, filling: q } });\n    |     ----                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `T3` is not implemented for `Q`\n@@ -324,7 +324,7 @@ LL | fn example<Q: T3>(q: Q) {\n    |             ++++\n \n error[E0277]: the trait bound `Q: T1` is not satisfied\n-  --> $DIR/blame-trait-error-spans-on-exprs.rs:120:35\n+  --> $DIR/blame-trait-error-spans-on-exprs.rs:122:35\n    |\n LL |     want(Two { a: Two { a: (), b: q }, b: () });\n    |     ----                          ^ the trait `T1` is not implemented for `Q`\n@@ -349,7 +349,7 @@ LL | fn example<Q: T1>(q: Q) {\n    |             ++++\n \n error[E0277]: the trait bound `Q: T1` is not satisfied\n-  --> $DIR/blame-trait-error-spans-on-exprs.rs:126:59\n+  --> $DIR/blame-trait-error-spans-on-exprs.rs:128:59\n    |\n LL |     want(\n    |     ---- required by a bound introduced by this call\n@@ -375,6 +375,38 @@ help: consider restricting type parameter `Q`\n LL | fn example<Q: T1>(q: Q) {\n    |             ++++\n \n-error: aborting due to 13 previous errors\n+error[E0277]: the trait bound `Q: T3` is not satisfied\n+  --> $DIR/blame-trait-error-spans-on-exprs.rs:133:44\n+   |\n+LL |     want(&Burrito { spicy: false, filling: q });\n+   |     ----                                   ^ the trait `T3` is not implemented for `Q`\n+   |     |\n+   |     required by a bound introduced by this call\n+   |\n+note: required for `Burrito<Q>` to implement `T2`\n+  --> $DIR/blame-trait-error-spans-on-exprs.rs:22:13\n+   |\n+LL | impl<A: T3> T2 for Burrito<A> {}\n+   |         --  ^^     ^^^^^^^^^^\n+   |         |\n+   |         unsatisfied trait bound introduced here\n+note: required for `&Burrito<Q>` to implement `T1`\n+  --> $DIR/blame-trait-error-spans-on-exprs.rs:74:17\n+   |\n+LL | impl<'a, T: T2> T1 for &'a T {}\n+   |             --  ^^     ^^^^^\n+   |             |\n+   |             unsatisfied trait bound introduced here\n+note: required by a bound in `want`\n+  --> $DIR/blame-trait-error-spans-on-exprs.rs:53:12\n+   |\n+LL | fn want<V: T1>(_x: V) {}\n+   |            ^^ required by this bound in `want`\n+help: consider restricting type parameter `Q`\n+   |\n+LL | fn example<Q: T3>(q: Q) {\n+   |             ++++\n+\n+error: aborting due to 14 previous errors\n \n For more information about this error, try `rustc --explain E0277`."}, {"sha": "49105de3d691dd395b7f7f450c8fba5b862d69a6", "filename": "tests/ui/traits/suggest-deferences/issue-39029.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fbcca2aaf0280190111982e931bc113b21f7ec0d/tests%2Fui%2Ftraits%2Fsuggest-deferences%2Fissue-39029.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fbcca2aaf0280190111982e931bc113b21f7ec0d/tests%2Fui%2Ftraits%2Fsuggest-deferences%2Fissue-39029.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftraits%2Fsuggest-deferences%2Fissue-39029.stderr?ref=fbcca2aaf0280190111982e931bc113b21f7ec0d", "patch": "@@ -1,8 +1,8 @@\n error[E0277]: the trait bound `NoToSocketAddrs: ToSocketAddrs` is not satisfied\n-  --> $DIR/issue-39029.rs:16:37\n+  --> $DIR/issue-39029.rs:16:38\n    |\n LL |     let _errors = TcpListener::bind(&bad);\n-   |                   ----------------- ^^^^ the trait `ToSocketAddrs` is not implemented for `NoToSocketAddrs`\n+   |                   -----------------  ^^^ the trait `ToSocketAddrs` is not implemented for `NoToSocketAddrs`\n    |                   |\n    |                   required by a bound introduced by this call\n    |"}]}