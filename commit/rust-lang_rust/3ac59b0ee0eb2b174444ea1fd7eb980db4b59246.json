{"sha": "3ac59b0ee0eb2b174444ea1fd7eb980db4b59246", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNhYzU5YjBlZTBlYjJiMTc0NDQ0ZWExZmQ3ZWI5ODBkYjRiNTkyNDY=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-09-09T13:49:00Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-09-09T13:53:10Z"}, "message": "Get rid of vp2i in object field access\n\nCloses #557", "tree": {"sha": "81e452ebbba7c564d3202277025b54e58f0ade7a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/81e452ebbba7c564d3202277025b54e58f0ade7a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3ac59b0ee0eb2b174444ea1fd7eb980db4b59246", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3ac59b0ee0eb2b174444ea1fd7eb980db4b59246", "html_url": "https://github.com/rust-lang/rust/commit/3ac59b0ee0eb2b174444ea1fd7eb980db4b59246", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3ac59b0ee0eb2b174444ea1fd7eb980db4b59246/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "985ef59efd971f1d6b9bf4b5e484b75733e00444", "url": "https://api.github.com/repos/rust-lang/rust/commits/985ef59efd971f1d6b9bf4b5e484b75733e00444", "html_url": "https://github.com/rust-lang/rust/commit/985ef59efd971f1d6b9bf4b5e484b75733e00444"}], "stats": {"total": 21, "additions": 3, "deletions": 18}, "files": [{"sha": "e19c028e6dcc2ec168ca8b4986b843485de84e26", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 3, "deletions": 18, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/3ac59b0ee0eb2b174444ea1fd7eb980db4b59246/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ac59b0ee0eb2b174444ea1fd7eb980db4b59246/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=3ac59b0ee0eb2b174444ea1fd7eb980db4b59246", "patch": "@@ -4955,22 +4955,11 @@ fn populate_fn_ctxt_from_llself(fcx: @fn_ctxt, llself: val_self_pair) {\n         GEP(bcx, box_ptr,\n             [C_int(0), C_int(abi::box_rc_field_body),\n              C_int(abi::obj_body_elt_typarams)]);\n+\n     // The object fields immediately follow the type parameters, so we skip\n     // over them to get the pointer.\n-\n-    let et = llvm::LLVMGetElementType(val_ty(obj_typarams));\n-    let obj_fields = Add(bcx, vp2i(bcx, obj_typarams), llsize_of(et));\n-    // If we can (i.e. the type is statically sized), then cast the resulting\n-    // fields pointer to the appropriate LLVM type. If not, just leave it as\n-    // i8 *.\n-\n-    let ccx = fcx.lcx.ccx;\n-    if check type_has_static_size(ccx, fields_tup_ty) {\n-        let sp = fcx.sp;\n-        let llfields_ty = type_of(ccx, sp, fields_tup_ty);\n-        obj_fields = vi2p(bcx, obj_fields, T_ptr(llfields_ty));\n-    }\n-    else { obj_fields = vi2p(bcx, obj_fields, T_ptr(T_i8())); }\n+    let obj_fields = PointerCast(bcx, GEP(bcx, obj_typarams, [C_int(1)]),\n+                                 T_ptr(type_of_or_i8(bcx, fields_tup_ty)));\n \n     let i: int = 0;\n     for p: ast::ty_param in fcx.lcx.obj_typarams {\n@@ -5811,10 +5800,6 @@ fn vp2i(cx: &@block_ctxt, v: ValueRef) -> ValueRef {\n     ret PtrToInt(cx, v, T_int());\n }\n \n-fn vi2p(cx: &@block_ctxt, v: ValueRef, t: TypeRef) -> ValueRef {\n-    ret IntToPtr(cx, v, t);\n-}\n-\n fn p2i(v: ValueRef) -> ValueRef { ret llvm::LLVMConstPtrToInt(v, T_int()); }\n \n fn declare_intrinsics(llmod: ModuleRef) -> hashmap<str, ValueRef> {"}]}