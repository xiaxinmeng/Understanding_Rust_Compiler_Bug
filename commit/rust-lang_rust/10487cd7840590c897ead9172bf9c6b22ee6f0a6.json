{"sha": "10487cd7840590c897ead9172bf9c6b22ee6f0a6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEwNDg3Y2Q3ODQwNTkwYzg5N2VhZDkxNzJiZjljNmIyMmVlNmYwYTY=", "commit": {"author": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2020-12-15T04:05:31Z"}, "committer": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2020-12-16T22:59:12Z"}, "message": "Fix typo in method name\n\nunsuccessfull -> unsuccessful", "tree": {"sha": "d37c57730ae0d371d521eb6eb7bd6ff8ce1a88ea", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d37c57730ae0d371d521eb6eb7bd6ff8ce1a88ea"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/10487cd7840590c897ead9172bf9c6b22ee6f0a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/10487cd7840590c897ead9172bf9c6b22ee6f0a6", "html_url": "https://github.com/rust-lang/rust/commit/10487cd7840590c897ead9172bf9c6b22ee6f0a6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/10487cd7840590c897ead9172bf9c6b22ee6f0a6/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "60b4082d5feed36622340d40eb81d68010ccd1df", "url": "https://api.github.com/repos/rust-lang/rust/commits/60b4082d5feed36622340d40eb81d68010ccd1df", "html_url": "https://github.com/rust-lang/rust/commit/60b4082d5feed36622340d40eb81d68010ccd1df"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "538e1a59ab8d98d4032446f8bebdbde679f21185", "filename": "compiler/rustc_errors/src/diagnostic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/10487cd7840590c897ead9172bf9c6b22ee6f0a6/compiler%2Frustc_errors%2Fsrc%2Fdiagnostic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/10487cd7840590c897ead9172bf9c6b22ee6f0a6/compiler%2Frustc_errors%2Fsrc%2Fdiagnostic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_errors%2Fsrc%2Fdiagnostic.rs?ref=10487cd7840590c897ead9172bf9c6b22ee6f0a6", "patch": "@@ -166,7 +166,7 @@ impl Diagnostic {\n         self.note_expected_found_extra(expected_label, expected, found_label, found, &\"\", &\"\")\n     }\n \n-    pub fn note_unsuccessfull_coercion(\n+    pub fn note_unsuccessful_coercion(\n         &mut self,\n         expected: DiagnosticStyledString,\n         found: DiagnosticStyledString,"}, {"sha": "f165a60336a6a57ad9d553cb4d4ece2c6b27de7c", "filename": "compiler/rustc_errors/src/diagnostic_builder.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/10487cd7840590c897ead9172bf9c6b22ee6f0a6/compiler%2Frustc_errors%2Fsrc%2Fdiagnostic_builder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/10487cd7840590c897ead9172bf9c6b22ee6f0a6/compiler%2Frustc_errors%2Fsrc%2Fdiagnostic_builder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_errors%2Fsrc%2Fdiagnostic_builder.rs?ref=10487cd7840590c897ead9172bf9c6b22ee6f0a6", "patch": "@@ -245,7 +245,7 @@ impl<'a> DiagnosticBuilder<'a> {\n         found_extra: &dyn fmt::Display,\n     ) -> &mut Self);\n \n-    forward!(pub fn note_unsuccessfull_coercion(\n+    forward!(pub fn note_unsuccessful_coercion(\n         &mut self,\n         expected: DiagnosticStyledString,\n         found: DiagnosticStyledString,"}, {"sha": "0100bd99344cbe6fe5f910e0ab9edc78312ea5ce", "filename": "compiler/rustc_infer/src/infer/error_reporting/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/10487cd7840590c897ead9172bf9c6b22ee6f0a6/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/10487cd7840590c897ead9172bf9c6b22ee6f0a6/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs?ref=10487cd7840590c897ead9172bf9c6b22ee6f0a6", "patch": "@@ -1622,7 +1622,7 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n                     }\n                 }\n                 (TypeError::ObjectUnsafeCoercion(_), _) => {\n-                    diag.note_unsuccessfull_coercion(found, expected);\n+                    diag.note_unsuccessful_coercion(found, expected);\n                 }\n                 (_, _) => {\n                     debug!("}]}