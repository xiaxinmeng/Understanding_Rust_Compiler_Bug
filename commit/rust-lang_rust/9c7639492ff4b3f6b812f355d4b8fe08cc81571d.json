{"sha": "9c7639492ff4b3f6b812f355d4b8fe08cc81571d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjljNzYzOTQ5MmZmNGIzZjZiODEyZjM1NWQ0YjhmZTA4Y2M4MTU3MWQ=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-02-15T09:51:51Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-02-15T09:52:49Z"}, "message": "more revisions and use them for another test", "tree": {"sha": "62c539d61fb5fadfbe0eca6eda31330ebad10539", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/62c539d61fb5fadfbe0eca6eda31330ebad10539"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9c7639492ff4b3f6b812f355d4b8fe08cc81571d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9c7639492ff4b3f6b812f355d4b8fe08cc81571d", "html_url": "https://github.com/rust-lang/rust/commit/9c7639492ff4b3f6b812f355d4b8fe08cc81571d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9c7639492ff4b3f6b812f355d4b8fe08cc81571d/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bd485223149e35c1c4e6b3ecf58653e38de4b6c9", "url": "https://api.github.com/repos/rust-lang/rust/commits/bd485223149e35c1c4e6b3ecf58653e38de4b6c9", "html_url": "https://github.com/rust-lang/rust/commit/bd485223149e35c1c4e6b3ecf58653e38de4b6c9"}], "stats": {"total": 295, "additions": 282, "deletions": 13}, "files": [{"sha": "226874c29da20540cf0f79fb78c9fd636f17cd20", "filename": "src/test/ui/consts/const-err2.default.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/9c7639492ff4b3f6b812f355d4b8fe08cc81571d/src%2Ftest%2Fui%2Fconsts%2Fconst-err2.default.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9c7639492ff4b3f6b812f355d4b8fe08cc81571d/src%2Ftest%2Fui%2Fconsts%2Fconst-err2.default.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-err2.default.stderr?ref=9c7639492ff4b3f6b812f355d4b8fe08cc81571d", "previous_filename": "src/test/ui/consts/const-err2.debug.stderr"}, {"sha": "226874c29da20540cf0f79fb78c9fd636f17cd20", "filename": "src/test/ui/consts/const-err2.noopt.stderr", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/9c7639492ff4b3f6b812f355d4b8fe08cc81571d/src%2Ftest%2Fui%2Fconsts%2Fconst-err2.noopt.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9c7639492ff4b3f6b812f355d4b8fe08cc81571d/src%2Ftest%2Fui%2Fconsts%2Fconst-err2.noopt.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-err2.noopt.stderr?ref=9c7639492ff4b3f6b812f355d4b8fe08cc81571d", "patch": "@@ -0,0 +1,48 @@\n+error: this arithmetic operation will overflow\n+  --> $DIR/const-err2.rs:19:13\n+   |\n+LL |     let a = -std::i8::MIN;\n+   |             ^^^^^^^^^^^^^ attempt to negate with overflow\n+   |\n+   = note: `#[deny(overflow)]` on by default\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/const-err2.rs:21:18\n+   |\n+LL |     let a_i128 = -std::i128::MIN;\n+   |                  ^^^^^^^^^^^^^^^ attempt to negate with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/const-err2.rs:23:13\n+   |\n+LL |     let b = 200u8 + 200u8 + 200u8;\n+   |             ^^^^^^^^^^^^^ attempt to add with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/const-err2.rs:25:18\n+   |\n+LL |     let b_i128 = std::i128::MIN - std::i128::MAX;\n+   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attempt to subtract with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/const-err2.rs:27:13\n+   |\n+LL |     let c = 200u8 * 4;\n+   |             ^^^^^^^^^ attempt to multiply with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/const-err2.rs:29:13\n+   |\n+LL |     let d = 42u8 - (42u8 + 1);\n+   |             ^^^^^^^^^^^^^^^^^ attempt to subtract with overflow\n+\n+error: this operation will panic at runtime\n+  --> $DIR/const-err2.rs:31:14\n+   |\n+LL |     let _e = [5u8][1];\n+   |              ^^^^^^^^ index out of bounds: the len is 1 but the index is 1\n+   |\n+   = note: `#[deny(panic)]` on by default\n+\n+error: aborting due to 7 previous errors\n+"}, {"sha": "2c0cae0e4519e04e3e3fb4538ffeef6b929607ec", "filename": "src/test/ui/consts/const-err2.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9c7639492ff4b3f6b812f355d4b8fe08cc81571d/src%2Ftest%2Fui%2Fconsts%2Fconst-err2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c7639492ff4b3f6b812f355d4b8fe08cc81571d/src%2Ftest%2Fui%2Fconsts%2Fconst-err2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-err2.rs?ref=9c7639492ff4b3f6b812f355d4b8fe08cc81571d", "patch": "@@ -2,8 +2,8 @@\n // optimized compilation and unoptimized compilation and thus would\n // lead to different lints being emitted\n \n-// revisions: debug opt opt_with_overflow_checks\n-//[debug]compile-flags: -C opt-level=0\n+// revisions: default noopt opt opt_with_overflow_checks\n+//[noopt]compile-flags: -C opt-level=0\n //[opt]compile-flags: -O\n //[opt_with_overflow_checks]compile-flags: -C overflow-checks=on -O\n "}, {"sha": "8f21ce537155992b4d2bc50663b70448dec71195", "filename": "src/test/ui/consts/const-eval/promoted_errors.default.stderr", "status": "added", "additions": 72, "deletions": 0, "changes": 72, "blob_url": "https://github.com/rust-lang/rust/blob/9c7639492ff4b3f6b812f355d4b8fe08cc81571d/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpromoted_errors.default.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9c7639492ff4b3f6b812f355d4b8fe08cc81571d/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpromoted_errors.default.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpromoted_errors.default.stderr?ref=9c7639492ff4b3f6b812f355d4b8fe08cc81571d", "patch": "@@ -0,0 +1,72 @@\n+warning: this arithmetic operation will overflow\n+  --> $DIR/promoted_errors.rs:14:14\n+   |\n+LL |     let _x = 0u32 - 1;\n+   |              ^^^^^^^^ attempt to subtract with overflow\n+   |\n+note: the lint level is defined here\n+  --> $DIR/promoted_errors.rs:9:20\n+   |\n+LL | #![warn(const_err, overflow, panic)]\n+   |                    ^^^^^^^^\n+\n+warning: this operation will panic at runtime\n+  --> $DIR/promoted_errors.rs:16:20\n+   |\n+LL |     println!(\"{}\", 1 / (1 - 1));\n+   |                    ^^^^^^^^^^^ attempt to divide by zero\n+   |\n+note: the lint level is defined here\n+  --> $DIR/promoted_errors.rs:9:30\n+   |\n+LL | #![warn(const_err, overflow, panic)]\n+   |                              ^^^^^\n+\n+warning: reaching this expression at runtime will panic or abort\n+  --> $DIR/promoted_errors.rs:16:20\n+   |\n+LL |     println!(\"{}\", 1 / (1 - 1));\n+   |                    ^^^^^^^^^^^ dividing by zero\n+   |\n+note: the lint level is defined here\n+  --> $DIR/promoted_errors.rs:9:9\n+   |\n+LL | #![warn(const_err, overflow, panic)]\n+   |         ^^^^^^^^^\n+\n+warning: erroneous constant used\n+  --> $DIR/promoted_errors.rs:16:20\n+   |\n+LL |     println!(\"{}\", 1 / (1 - 1));\n+   |                    ^^^^^^^^^^^ referenced constant has errors\n+\n+warning: this operation will panic at runtime\n+  --> $DIR/promoted_errors.rs:20:14\n+   |\n+LL |     let _x = 1 / (1 - 1);\n+   |              ^^^^^^^^^^^ attempt to divide by zero\n+\n+warning: this operation will panic at runtime\n+  --> $DIR/promoted_errors.rs:22:20\n+   |\n+LL |     println!(\"{}\", 1 / (false as u32));\n+   |                    ^^^^^^^^^^^^^^^^^^ attempt to divide by zero\n+\n+warning: reaching this expression at runtime will panic or abort\n+  --> $DIR/promoted_errors.rs:22:20\n+   |\n+LL |     println!(\"{}\", 1 / (false as u32));\n+   |                    ^^^^^^^^^^^^^^^^^^ dividing by zero\n+\n+warning: erroneous constant used\n+  --> $DIR/promoted_errors.rs:22:20\n+   |\n+LL |     println!(\"{}\", 1 / (false as u32));\n+   |                    ^^^^^^^^^^^^^^^^^^ referenced constant has errors\n+\n+warning: this operation will panic at runtime\n+  --> $DIR/promoted_errors.rs:26:14\n+   |\n+LL |     let _x = 1 / (false as u32);\n+   |              ^^^^^^^^^^^^^^^^^^ attempt to divide by zero\n+"}, {"sha": "1ed60c1f96e43c759adf8ff27ce0de43125f6d92", "filename": "src/test/ui/consts/const-eval/promoted_errors.noopt.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/9c7639492ff4b3f6b812f355d4b8fe08cc81571d/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpromoted_errors.noopt.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9c7639492ff4b3f6b812f355d4b8fe08cc81571d/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpromoted_errors.noopt.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpromoted_errors.noopt.stderr?ref=9c7639492ff4b3f6b812f355d4b8fe08cc81571d", "previous_filename": "src/test/ui/consts/const-eval/promoted_errors.debug.stderr"}, {"sha": "3133e9b380b49bb5a37548a9fbc64e9dbd5bd6a1", "filename": "src/test/ui/consts/const-eval/promoted_errors.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9c7639492ff4b3f6b812f355d4b8fe08cc81571d/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpromoted_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c7639492ff4b3f6b812f355d4b8fe08cc81571d/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpromoted_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpromoted_errors.rs?ref=9c7639492ff4b3f6b812f355d4b8fe08cc81571d", "patch": "@@ -1,5 +1,5 @@\n-// revisions: debug opt opt_with_overflow_checks\n-//[debug]compile-flags: -C opt-level=0\n+// revisions: default noopt opt opt_with_overflow_checks\n+//[noopt]compile-flags: -C opt-level=0\n //[opt]compile-flags: -O\n //[opt_with_overflow_checks]compile-flags: -C overflow-checks=on -O\n \n@@ -10,7 +10,7 @@\n \n fn main() {\n     println!(\"{}\", 0u32 - 1);\n-    //[opt_with_overflow_checks,debug]~^ WARN [overflow]\n+    //[opt_with_overflow_checks,noopt]~^ WARN [overflow]\n     let _x = 0u32 - 1;\n     //~^ WARN [overflow]\n     println!(\"{}\", 1 / (1 - 1));"}, {"sha": "38911c3dcf69298c4dc2c21a2018865d4a0a3e6d", "filename": "src/test/ui/consts/issue-64059-2.rs", "status": "removed", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/bd485223149e35c1c4e6b3ecf58653e38de4b6c9/src%2Ftest%2Fui%2Fconsts%2Fissue-64059-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd485223149e35c1c4e6b3ecf58653e38de4b6c9/src%2Ftest%2Fui%2Fconsts%2Fissue-64059-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fissue-64059-2.rs?ref=bd485223149e35c1c4e6b3ecf58653e38de4b6c9", "patch": "@@ -1,6 +0,0 @@\n-// compile-flags: -C overflow-checks=on -O\n-// run-pass\n-\n-fn main() {\n-    let _ = -(-0.0);\n-}"}, {"sha": "16bfda3b9618ca0118a0b8ebb9932bc425079455", "filename": "src/test/ui/consts/issue-64059.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/9c7639492ff4b3f6b812f355d4b8fe08cc81571d/src%2Ftest%2Fui%2Fconsts%2Fissue-64059.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c7639492ff4b3f6b812f355d4b8fe08cc81571d/src%2Ftest%2Fui%2Fconsts%2Fissue-64059.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fissue-64059.rs?ref=9c7639492ff4b3f6b812f355d4b8fe08cc81571d", "patch": "@@ -1,3 +1,8 @@\n+// revisions: default noopt opt opt_with_overflow_checks\n+//[noopt]compile-flags: -C opt-level=0\n+//[opt]compile-flags: -O\n+//[opt_with_overflow_checks]compile-flags: -C overflow-checks=on -O\n+\n // run-pass\n \n fn main() {"}, {"sha": "33d846e3e910bc7e04ec4e6bba319b99e6dfd403", "filename": "src/test/ui/issues/issue-8460-const.default.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/9c7639492ff4b3f6b812f355d4b8fe08cc81571d/src%2Ftest%2Fui%2Fissues%2Fissue-8460-const.default.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9c7639492ff4b3f6b812f355d4b8fe08cc81571d/src%2Ftest%2Fui%2Fissues%2Fissue-8460-const.default.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-8460-const.default.stderr?ref=9c7639492ff4b3f6b812f355d4b8fe08cc81571d", "previous_filename": "src/test/ui/issues/issue-8460-const.debug.stderr"}, {"sha": "33d846e3e910bc7e04ec4e6bba319b99e6dfd403", "filename": "src/test/ui/issues/issue-8460-const.noopt.stderr", "status": "added", "additions": 150, "deletions": 0, "changes": 150, "blob_url": "https://github.com/rust-lang/rust/blob/9c7639492ff4b3f6b812f355d4b8fe08cc81571d/src%2Ftest%2Fui%2Fissues%2Fissue-8460-const.noopt.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9c7639492ff4b3f6b812f355d4b8fe08cc81571d/src%2Ftest%2Fui%2Fissues%2Fissue-8460-const.noopt.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-8460-const.noopt.stderr?ref=9c7639492ff4b3f6b812f355d4b8fe08cc81571d", "patch": "@@ -0,0 +1,150 @@\n+error: this arithmetic operation will overflow\n+  --> $DIR/issue-8460-const.rs:14:36\n+   |\n+LL |     assert!(thread::spawn(move|| { isize::MIN / -1; }).join().is_err());\n+   |                                    ^^^^^^^^^^^^^^^ attempt to divide with overflow\n+   |\n+   = note: `#[deny(overflow)]` on by default\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/issue-8460-const.rs:16:36\n+   |\n+LL |     assert!(thread::spawn(move|| { i8::MIN / -1; }).join().is_err());\n+   |                                    ^^^^^^^^^^^^ attempt to divide with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/issue-8460-const.rs:18:36\n+   |\n+LL |     assert!(thread::spawn(move|| { i16::MIN / -1; }).join().is_err());\n+   |                                    ^^^^^^^^^^^^^ attempt to divide with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/issue-8460-const.rs:20:36\n+   |\n+LL |     assert!(thread::spawn(move|| { i32::MIN / -1; }).join().is_err());\n+   |                                    ^^^^^^^^^^^^^ attempt to divide with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/issue-8460-const.rs:22:36\n+   |\n+LL |     assert!(thread::spawn(move|| { i64::MIN / -1; }).join().is_err());\n+   |                                    ^^^^^^^^^^^^^ attempt to divide with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/issue-8460-const.rs:24:36\n+   |\n+LL |     assert!(thread::spawn(move|| { i128::MIN / -1; }).join().is_err());\n+   |                                    ^^^^^^^^^^^^^^ attempt to divide with overflow\n+\n+error: this operation will panic at runtime\n+  --> $DIR/issue-8460-const.rs:26:36\n+   |\n+LL |     assert!(thread::spawn(move|| { 1isize / 0; }).join().is_err());\n+   |                                    ^^^^^^^^^^ attempt to divide by zero\n+   |\n+   = note: `#[deny(panic)]` on by default\n+\n+error: this operation will panic at runtime\n+  --> $DIR/issue-8460-const.rs:28:36\n+   |\n+LL |     assert!(thread::spawn(move|| { 1i8 / 0; }).join().is_err());\n+   |                                    ^^^^^^^ attempt to divide by zero\n+\n+error: this operation will panic at runtime\n+  --> $DIR/issue-8460-const.rs:30:36\n+   |\n+LL |     assert!(thread::spawn(move|| { 1i16 / 0; }).join().is_err());\n+   |                                    ^^^^^^^^ attempt to divide by zero\n+\n+error: this operation will panic at runtime\n+  --> $DIR/issue-8460-const.rs:32:36\n+   |\n+LL |     assert!(thread::spawn(move|| { 1i32 / 0; }).join().is_err());\n+   |                                    ^^^^^^^^ attempt to divide by zero\n+\n+error: this operation will panic at runtime\n+  --> $DIR/issue-8460-const.rs:34:36\n+   |\n+LL |     assert!(thread::spawn(move|| { 1i64 / 0; }).join().is_err());\n+   |                                    ^^^^^^^^ attempt to divide by zero\n+\n+error: this operation will panic at runtime\n+  --> $DIR/issue-8460-const.rs:36:36\n+   |\n+LL |     assert!(thread::spawn(move|| { 1i128 / 0; }).join().is_err());\n+   |                                    ^^^^^^^^^ attempt to divide by zero\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/issue-8460-const.rs:38:36\n+   |\n+LL |     assert!(thread::spawn(move|| { isize::MIN % -1; }).join().is_err());\n+   |                                    ^^^^^^^^^^^^^^^ attempt to calculate the remainder with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/issue-8460-const.rs:40:36\n+   |\n+LL |     assert!(thread::spawn(move|| { i8::MIN % -1; }).join().is_err());\n+   |                                    ^^^^^^^^^^^^ attempt to calculate the remainder with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/issue-8460-const.rs:42:36\n+   |\n+LL |     assert!(thread::spawn(move|| { i16::MIN % -1; }).join().is_err());\n+   |                                    ^^^^^^^^^^^^^ attempt to calculate the remainder with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/issue-8460-const.rs:44:36\n+   |\n+LL |     assert!(thread::spawn(move|| { i32::MIN % -1; }).join().is_err());\n+   |                                    ^^^^^^^^^^^^^ attempt to calculate the remainder with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/issue-8460-const.rs:46:36\n+   |\n+LL |     assert!(thread::spawn(move|| { i64::MIN % -1; }).join().is_err());\n+   |                                    ^^^^^^^^^^^^^ attempt to calculate the remainder with overflow\n+\n+error: this arithmetic operation will overflow\n+  --> $DIR/issue-8460-const.rs:48:36\n+   |\n+LL |     assert!(thread::spawn(move|| { i128::MIN % -1; }).join().is_err());\n+   |                                    ^^^^^^^^^^^^^^ attempt to calculate the remainder with overflow\n+\n+error: this operation will panic at runtime\n+  --> $DIR/issue-8460-const.rs:50:36\n+   |\n+LL |     assert!(thread::spawn(move|| { 1isize % 0; }).join().is_err());\n+   |                                    ^^^^^^^^^^ attempt to calculate the remainder with a divisor of zero\n+\n+error: this operation will panic at runtime\n+  --> $DIR/issue-8460-const.rs:52:36\n+   |\n+LL |     assert!(thread::spawn(move|| { 1i8 % 0; }).join().is_err());\n+   |                                    ^^^^^^^ attempt to calculate the remainder with a divisor of zero\n+\n+error: this operation will panic at runtime\n+  --> $DIR/issue-8460-const.rs:54:36\n+   |\n+LL |     assert!(thread::spawn(move|| { 1i16 % 0; }).join().is_err());\n+   |                                    ^^^^^^^^ attempt to calculate the remainder with a divisor of zero\n+\n+error: this operation will panic at runtime\n+  --> $DIR/issue-8460-const.rs:56:36\n+   |\n+LL |     assert!(thread::spawn(move|| { 1i32 % 0; }).join().is_err());\n+   |                                    ^^^^^^^^ attempt to calculate the remainder with a divisor of zero\n+\n+error: this operation will panic at runtime\n+  --> $DIR/issue-8460-const.rs:58:36\n+   |\n+LL |     assert!(thread::spawn(move|| { 1i64 % 0; }).join().is_err());\n+   |                                    ^^^^^^^^ attempt to calculate the remainder with a divisor of zero\n+\n+error: this operation will panic at runtime\n+  --> $DIR/issue-8460-const.rs:60:36\n+   |\n+LL |     assert!(thread::spawn(move|| { 1i128 % 0; }).join().is_err());\n+   |                                    ^^^^^^^^^ attempt to calculate the remainder with a divisor of zero\n+\n+error: aborting due to 24 previous errors\n+"}, {"sha": "d7276af40a7e8eae456c1d9b85c6a4c24e8f1df4", "filename": "src/test/ui/issues/issue-8460-const.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9c7639492ff4b3f6b812f355d4b8fe08cc81571d/src%2Ftest%2Fui%2Fissues%2Fissue-8460-const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c7639492ff4b3f6b812f355d4b8fe08cc81571d/src%2Ftest%2Fui%2Fissues%2Fissue-8460-const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-8460-const.rs?ref=9c7639492ff4b3f6b812f355d4b8fe08cc81571d", "patch": "@@ -1,5 +1,5 @@\n-// revisions: debug opt opt_with_overflow_checks\n-//[debug]compile-flags: -C opt-level=0\n+// revisions: default noopt opt opt_with_overflow_checks\n+//[noopt]compile-flags: -C opt-level=0\n //[opt]compile-flags: -O\n //[opt_with_overflow_checks]compile-flags: -C overflow-checks=on -O\n "}]}