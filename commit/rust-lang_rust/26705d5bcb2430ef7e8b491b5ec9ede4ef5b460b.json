{"sha": "26705d5bcb2430ef7e8b491b5ec9ede4ef5b460b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI2NzA1ZDViY2IyNDMwZWY3ZThiNDkxYjVlYzllZGU0ZWY1YjQ2MGI=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-08-07T00:35:26Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-08-07T00:35:26Z"}, "message": "Rollup merge of #75211 - lzutao:native-endian-notes, r=lcnr\n\nNote about endianness of returned value of {integer}::from_be_bytes and friends\n\n[`u32::from_be`](https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#2883-2892) documents about endianness of returned value.\n\nI was confused by endianness of `from_be_bytes` in #75086 .", "tree": {"sha": "ebbc7bce541fb619699f63f12f3c977f4864e8c6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ebbc7bce541fb619699f63f12f3c977f4864e8c6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/26705d5bcb2430ef7e8b491b5ec9ede4ef5b460b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfLKHOCRBK7hj4Ov3rIwAAdHIIAEio+VCZJ1kLpaFIMj+7cqWQ\nj9/+JJocyhQFLNkcEPqfv2yIQhYdCpSw7thODMRyUv2ZDhS7EqzHtIx7No6UYqyp\nfOrrfTm07pAPGr1u80J0jPMSE3MaaqXy1OQAZdifubqP++vx8RbTe9+MIJLEtxJ7\nNRYVrjIUMZA0fcrZGw08LpfW6dQSiqBpV3TcVOlj6tu/5vGYDCUSTmQw+sQ/+h0V\nJPw1Hc08wrm3FYJ40bEgavyAIIMdwme0wnY6CIph99R5n/gquZTF45od0FWSUlQI\nO92GbO3a2XNtkDDadgGZJRSZfi3qd6jBWATgI8syQ5igE2ntkxHH6OekxQyq8sE=\n=Uya3\n-----END PGP SIGNATURE-----\n", "payload": "tree ebbc7bce541fb619699f63f12f3c977f4864e8c6\nparent 19d4e1dcacd8594b05816f1193ca67686aad7998\nparent eff7d568d820a07d621bac85502d6236103ca908\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1596760526 +0900\ncommitter GitHub <noreply@github.com> 1596760526 +0900\n\nRollup merge of #75211 - lzutao:native-endian-notes, r=lcnr\n\nNote about endianness of returned value of {integer}::from_be_bytes and friends\n\n[`u32::from_be`](https://doc.rust-lang.org/nightly/src/core/num/mod.rs.html#2883-2892) documents about endianness of returned value.\n\nI was confused by endianness of `from_be_bytes` in #75086 .\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/26705d5bcb2430ef7e8b491b5ec9ede4ef5b460b", "html_url": "https://github.com/rust-lang/rust/commit/26705d5bcb2430ef7e8b491b5ec9ede4ef5b460b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/26705d5bcb2430ef7e8b491b5ec9ede4ef5b460b/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "19d4e1dcacd8594b05816f1193ca67686aad7998", "url": "https://api.github.com/repos/rust-lang/rust/commits/19d4e1dcacd8594b05816f1193ca67686aad7998", "html_url": "https://github.com/rust-lang/rust/commit/19d4e1dcacd8594b05816f1193ca67686aad7998"}, {"sha": "eff7d568d820a07d621bac85502d6236103ca908", "url": "https://api.github.com/repos/rust-lang/rust/commits/eff7d568d820a07d621bac85502d6236103ca908", "html_url": "https://github.com/rust-lang/rust/commit/eff7d568d820a07d621bac85502d6236103ca908"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "95eae7e2a73a13202d97980ef3171459b291c663", "filename": "library/core/src/num/mod.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/26705d5bcb2430ef7e8b491b5ec9ede4ef5b460b/library%2Fcore%2Fsrc%2Fnum%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26705d5bcb2430ef7e8b491b5ec9ede4ef5b460b/library%2Fcore%2Fsrc%2Fnum%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Fmod.rs?ref=26705d5bcb2430ef7e8b491b5ec9ede4ef5b460b", "patch": "@@ -4383,8 +4383,8 @@ assert_eq!(\n         }\n \n         doc_comment! {\n-            concat!(\"Create an integer value from its representation as a byte array in\n-big endian.\n+            concat!(\"Create a native endian integer value from its representation\n+as a byte array in big endian.\n \",\n $from_xe_bytes_doc,\n \"\n@@ -4416,8 +4416,8 @@ fn read_be_\", stringify!($SelfT), \"(input: &mut &[u8]) -> \", stringify!($SelfT),\n \n         doc_comment! {\n             concat!(\"\n-Create an integer value from its representation as a byte array in\n-little endian.\n+Create a native endian integer value from its representation\n+as a byte array in little endian.\n \",\n $from_xe_bytes_doc,\n \"\n@@ -4448,8 +4448,8 @@ fn read_le_\", stringify!($SelfT), \"(input: &mut &[u8]) -> \", stringify!($SelfT),\n         }\n \n         doc_comment! {\n-            concat!(\"Create an integer value from its memory representation as a byte\n-array in native endianness.\n+            concat!(\"Create a native endian integer value from its memory representation\n+as a byte array in native endianness.\n \n As the target platform's native endianness is used, portable code\n likely wants to use [`from_be_bytes`] or [`from_le_bytes`], as"}]}