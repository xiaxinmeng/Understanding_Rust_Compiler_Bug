{"sha": "35175f015ff878d49e3b5562fe3a7addcef25cfc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM1MTc1ZjAxNWZmODc4ZDQ5ZTNiNTU2MmZlM2E3YWRkY2VmMjVjZmM=", "commit": {"author": {"name": "John Clements", "email": "clements@racket-lang.org", "date": "2014-07-03T06:17:10Z"}, "committer": {"name": "John Clements", "email": "clements@racket-lang.org", "date": "2014-07-04T20:20:13Z"}, "message": "comments only", "tree": {"sha": "f0b1c0847451826437242fbbba238bfdf1081386", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f0b1c0847451826437242fbbba238bfdf1081386"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/35175f015ff878d49e3b5562fe3a7addcef25cfc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/35175f015ff878d49e3b5562fe3a7addcef25cfc", "html_url": "https://github.com/rust-lang/rust/commit/35175f015ff878d49e3b5562fe3a7addcef25cfc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/35175f015ff878d49e3b5562fe3a7addcef25cfc/comments", "author": {"login": "jbclements", "id": 226617, "node_id": "MDQ6VXNlcjIyNjYxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/226617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbclements", "html_url": "https://github.com/jbclements", "followers_url": "https://api.github.com/users/jbclements/followers", "following_url": "https://api.github.com/users/jbclements/following{/other_user}", "gists_url": "https://api.github.com/users/jbclements/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbclements/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbclements/subscriptions", "organizations_url": "https://api.github.com/users/jbclements/orgs", "repos_url": "https://api.github.com/users/jbclements/repos", "events_url": "https://api.github.com/users/jbclements/events{/privacy}", "received_events_url": "https://api.github.com/users/jbclements/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jbclements", "id": 226617, "node_id": "MDQ6VXNlcjIyNjYxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/226617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbclements", "html_url": "https://github.com/jbclements", "followers_url": "https://api.github.com/users/jbclements/followers", "following_url": "https://api.github.com/users/jbclements/following{/other_user}", "gists_url": "https://api.github.com/users/jbclements/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbclements/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbclements/subscriptions", "organizations_url": "https://api.github.com/users/jbclements/orgs", "repos_url": "https://api.github.com/users/jbclements/repos", "events_url": "https://api.github.com/users/jbclements/events{/privacy}", "received_events_url": "https://api.github.com/users/jbclements/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aa91ef0cf814a35037bc562fa37c51549fcf2984", "url": "https://api.github.com/repos/rust-lang/rust/commits/aa91ef0cf814a35037bc562fa37c51549fcf2984", "html_url": "https://github.com/rust-lang/rust/commit/aa91ef0cf814a35037bc562fa37c51549fcf2984"}], "stats": {"total": 12, "additions": 7, "deletions": 5}, "files": [{"sha": "ce1302c8db8749b31e813d3f8a132fb118d492f7", "filename": "src/libsyntax/ast.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/35175f015ff878d49e3b5562fe3a7addcef25cfc/src%2Flibsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35175f015ff878d49e3b5562fe3a7addcef25cfc/src%2Flibsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast.rs?ref=35175f015ff878d49e3b5562fe3a7addcef25cfc", "patch": "@@ -190,6 +190,8 @@ pub struct TyParam {\n     pub span: Span\n }\n \n+/// Represents lifetimes and type parameters attached to a declaration\n+/// of a function, enum, trait, etc.\n #[deriving(Clone, PartialEq, Eq, Encodable, Decodable, Hash)]\n pub struct Generics {\n     pub lifetimes: Vec<Lifetime>,\n@@ -288,7 +290,7 @@ pub enum Pat_ {\n     PatWild,\n     PatWildMulti,\n     // A PatIdent may either be a new bound variable,\n-    // or a nullary enum (in which case the second field\n+    // or a nullary enum (in which case the third field\n     // is None).\n     // In the nullary enum case, the parser can't determine\n     // which it is. The resolver determines this, and"}, {"sha": "55bc5e3c303657ddac368c374abdd1f90f0e65b1", "filename": "src/libsyntax/ext/expand.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/35175f015ff878d49e3b5562fe3a7addcef25cfc/src%2Flibsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35175f015ff878d49e3b5562fe3a7addcef25cfc/src%2Flibsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fexpand.rs?ref=35175f015ff878d49e3b5562fe3a7addcef25cfc", "patch": "@@ -841,9 +841,9 @@ fn expand_pat(p: Gc<ast::Pat>, fld: &mut MacroExpander) -> Gc<ast::Pat> {\n     }\n }\n \n-// a tree-folder that applies every rename in its (mutable) list\n-// to every identifier, including both bindings and varrefs\n-// (and lots of things that will turn out to be neither)\n+/// A tree-folder that applies every rename in its (mutable) list\n+/// to every identifier, including both bindings and varrefs\n+/// (and lots of things that will turn out to be neither)\n pub struct IdentRenamer<'a> {\n     renames: &'a mtwt::RenameList,\n }"}, {"sha": "04e6612daf1f008a7dcf3a7f4526fb23875dd2f9", "filename": "src/libsyntax/fold.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/35175f015ff878d49e3b5562fe3a7addcef25cfc/src%2Flibsyntax%2Ffold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35175f015ff878d49e3b5562fe3a7addcef25cfc/src%2Flibsyntax%2Ffold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffold.rs?ref=35175f015ff878d49e3b5562fe3a7addcef25cfc", "patch": "@@ -794,7 +794,7 @@ pub fn noop_fold_pat<T: Folder>(p: Gc<Pat>, folder: &mut T) -> Gc<Pat> {\n         PatIdent(binding_mode, ref pth1, ref sub) => {\n             PatIdent(binding_mode,\n                      Spanned{span: folder.new_span(pth1.span),\n-                                       node: folder.fold_ident(pth1.node)},\n+                             node: folder.fold_ident(pth1.node)},\n                      sub.map(|x| folder.fold_pat(x)))\n         }\n         PatLit(e) => PatLit(folder.fold_expr(e)),"}]}