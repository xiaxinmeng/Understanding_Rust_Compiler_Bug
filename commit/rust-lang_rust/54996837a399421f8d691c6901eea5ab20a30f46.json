{"sha": "54996837a399421f8d691c6901eea5ab20a30f46", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU0OTk2ODM3YTM5OTQyMWY4ZDY5MWM2OTAxZWVhNWFiMjBhMzBmNDY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-09-20T02:46:25Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-09-20T02:46:25Z"}, "message": "Auto merge of #44350 - GuillaumeGomez:id-false-positive, r=QuietMisdreavus\n\nImprove how rustdoc warnings are displayed\n\ncc @rust-lang/dev-tools\nr? @nrc", "tree": {"sha": "f407361dd564cbeb65528d4ebcc73667a1816013", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f407361dd564cbeb65528d4ebcc73667a1816013"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/54996837a399421f8d691c6901eea5ab20a30f46", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/54996837a399421f8d691c6901eea5ab20a30f46", "html_url": "https://github.com/rust-lang/rust/commit/54996837a399421f8d691c6901eea5ab20a30f46", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/54996837a399421f8d691c6901eea5ab20a30f46/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f60bc3ac0c20f7b3ab85df1e5e2e3217a7a95630", "url": "https://api.github.com/repos/rust-lang/rust/commits/f60bc3ac0c20f7b3ab85df1e5e2e3217a7a95630", "html_url": "https://github.com/rust-lang/rust/commit/f60bc3ac0c20f7b3ab85df1e5e2e3217a7a95630"}, {"sha": "7aa5367236c31961b47a54588239e009fa16117f", "url": "https://api.github.com/repos/rust-lang/rust/commits/7aa5367236c31961b47a54588239e009fa16117f", "html_url": "https://github.com/rust-lang/rust/commit/7aa5367236c31961b47a54588239e009fa16117f"}], "stats": {"total": 68, "additions": 44, "deletions": 24}, "files": [{"sha": "e1e52b9428add54c4139eaf00734b891f06be564", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 44, "deletions": 24, "changes": 68, "blob_url": "https://github.com/rust-lang/rust/blob/54996837a399421f8d691c6901eea5ab20a30f46/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54996837a399421f8d691c6901eea5ab20a30f46/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=54996837a399421f8d691c6901eea5ab20a30f46", "patch": "@@ -590,14 +590,10 @@ pub fn run(mut krate: clean::Crate,\n \n     let markdown_warnings = scx.markdown_warnings.borrow();\n     if !markdown_warnings.is_empty() {\n-        println!(\"WARNING: documentation for this crate may be rendered \\\n-                  differently using the new Pulldown renderer.\");\n-        println!(\"    See https://github.com/rust-lang/rust/issues/44229 for details.\");\n+        let mut intro_msg = false;\n         for &(ref span, ref text, ref diffs) in &*markdown_warnings {\n-            println!(\"WARNING: rendering difference in `{}`\", concise_str(text));\n-            println!(\"   --> {}:{}:{}\", span.filename, span.loline, span.locol);\n             for d in diffs {\n-                render_difference(d);\n+                render_difference(d, &mut intro_msg, span, text);\n             }\n         }\n     }\n@@ -650,43 +646,67 @@ fn concise_compared_strs(s1: &str, s2: &str) -> (String, String) {\n     (format!(\"...{}\", concise_str(s1)), format!(\"...{}\", concise_str(s2)))\n }\n \n-fn render_difference(diff: &html_diff::Difference) {\n+\n+fn print_message(msg: &str, intro_msg: &mut bool, span: &Span, text: &str) {\n+    if !*intro_msg {\n+        println!(\"WARNING: documentation for this crate may be rendered \\\n+                  differently using the new Pulldown renderer.\");\n+        println!(\"    See https://github.com/rust-lang/rust/issues/44229 for details.\");\n+        *intro_msg = true;\n+    }\n+    println!(\"WARNING: rendering difference in `{}`\", concise_str(text));\n+    println!(\"   --> {}:{}:{}\", span.filename, span.loline, span.locol);\n+    println!(\"{}\", msg);\n+}\n+\n+fn render_difference(diff: &html_diff::Difference, intro_msg: &mut bool, span: &Span, text: &str) {\n     match *diff {\n         html_diff::Difference::NodeType { ref elem, ref opposite_elem } => {\n-            println!(\"    {} Types differ: expected: `{}`, found: `{}`\",\n-                     elem.path, elem.element_name, opposite_elem.element_name);\n+            print_message(&format!(\"    {} Types differ: expected: `{}`, found: `{}`\",\n+                                   elem.path, elem.element_name, opposite_elem.element_name),\n+                          intro_msg, span, text);\n         }\n         html_diff::Difference::NodeName { ref elem, ref opposite_elem } => {\n-            println!(\"    {} Tags differ: expected: `{}`, found: `{}`\",\n-                     elem.path, elem.element_name, opposite_elem.element_name);\n+            print_message(&format!(\"    {} Tags differ: expected: `{}`, found: `{}`\",\n+                                   elem.path, elem.element_name, opposite_elem.element_name),\n+                          intro_msg, span, text);\n         }\n         html_diff::Difference::NodeAttributes { ref elem,\n-                                     ref elem_attributes,\n-                                     ref opposite_elem_attributes,\n-                                     .. } => {\n-            println!(\"    {} Attributes differ in `{}`: expected: `{:?}`, found: `{:?}`\",\n-                     elem.path, elem.element_name, elem_attributes, opposite_elem_attributes);\n+                                                ref elem_attributes,\n+                                                ref opposite_elem_attributes,\n+                                                .. } => {\n+            print_message(&format!(\"    {} Attributes differ in `{}`: expected: `{:?}`, \\\n+                                    found: `{:?}`\",\n+                                   elem.path, elem.element_name, elem_attributes,\n+                                   opposite_elem_attributes),\n+                          intro_msg, span, text);\n         }\n         html_diff::Difference::NodeText { ref elem, ref elem_text, ref opposite_elem_text, .. } => {\n             if elem_text.split(\"\\n\")\n                         .zip(opposite_elem_text.split(\"\\n\"))\n                         .any(|(a, b)| a.trim() != b.trim()) {\n                 let (s1, s2) = concise_compared_strs(elem_text, opposite_elem_text);\n-                println!(\"    {} Text differs:\\n        expected: `{}`\\n        found:    `{}`\",\n-                         elem.path, s1, s2);\n+                print_message(&format!(\"    {} Text differs:\\n        expected: `{}`\\n        \\\n+                                        found:    `{}`\",\n+                                       elem.path, s1, s2),\n+                              intro_msg, span, text);\n             }\n         }\n         html_diff::Difference::NotPresent { ref elem, ref opposite_elem } => {\n             if let Some(ref elem) = *elem {\n-                println!(\"    {} One element is missing: expected: `{}`\",\n-                         elem.path, elem.element_name);\n+                print_message(&format!(\"    {} One element is missing: expected: `{}`\",\n+                                       elem.path, elem.element_name),\n+                              intro_msg, span, text);\n             } else if let Some(ref elem) = *opposite_elem {\n                 if elem.element_name.is_empty() {\n-                    println!(\"    {} Unexpected element: `{}`\",\n-                             elem.path, concise_str(&elem.element_content));\n+                    print_message(&format!(\"    {} One element is missing: expected: `{}`\",\n+                                           elem.path, concise_str(&elem.element_content)),\n+                                  intro_msg, span, text);\n                 } else {\n-                    println!(\"    {} Unexpected element `{}`: found: `{}`\",\n-                             elem.path, elem.element_name, concise_str(&elem.element_content));\n+                    print_message(&format!(\"    {} Unexpected element `{}`: found: `{}`\",\n+                                           elem.path, elem.element_name,\n+                                           concise_str(&elem.element_content)),\n+                                  intro_msg, span, text);\n                 }\n             }\n         }"}]}