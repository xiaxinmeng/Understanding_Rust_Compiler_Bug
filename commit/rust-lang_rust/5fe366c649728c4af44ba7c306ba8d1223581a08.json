{"sha": "5fe366c649728c4af44ba7c306ba8d1223581a08", "node_id": "C_kwDOAAsO6NoAKDVmZTM2NmM2NDk3MjhjNGFmNDRiYTdjMzA2YmE4ZDEyMjM1ODFhMDg", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2022-04-02T12:41:14Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-04-02T12:41:14Z"}, "message": "Merge #11878\n\n11878: fix: Paper over GAT panic r=flodiebold a=flodiebold\n\nTIL that Chalk expects the arguments to a generic associated type to come *before* the ones for the parent trait, not *after* as we have been doing with all other nested generics. Fixing this requires a larger refactoring, so for now this just papers over the problem by completely ignoring parameters of associated types.\r\n\r\nFixes #11769.\n\nCo-authored-by: Florian Diebold <flodiebold@gmail.com>", "tree": {"sha": "9458d3faf72187ab69de3e8c4394fb37168df9cf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9458d3faf72187ab69de3e8c4394fb37168df9cf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5fe366c649728c4af44ba7c306ba8d1223581a08", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiSERqCRBK7hj4Ov3rIwAAeBEIAG6/FUcqjMo0kg3tvCngtbqR\nrXaJ2UMlSF5PeeAVgQ+RmLZrJRdp0PJxPvYndKVVBCKp94x9mUxXhKIjxDgCqMn5\nmrbxRkp+EGfF5iZbnroEmytSUmSXe9Dmmv/yFHddIdbukUZIj0Dxn4Bpmq+SSp2u\nVRu/wEQJeNUPqt9V74c6CZJlHzPCY7cWOVeqPmUXnno/znZLcmoOLod5LGE5WTLw\nfYCM6LKCRXFCHo3sumukX7ppgiSrdhHo63BVeHMLE093CA2OjEbnk1cnkLBHCsBp\nauCkQPdywxceTuk3+7K0ELHWPSQM7lvHfs8x0OopuKk0bVyL3SSl9aAmwcRYPLM=\n=9ZVN\n-----END PGP SIGNATURE-----\n", "payload": "tree 9458d3faf72187ab69de3e8c4394fb37168df9cf\nparent 0fe74175e2844316193afbd99d2e26f3b6376045\nparent 019f48673ac7342b40161cebd9eadeacb4649458\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1648903274 +0000\ncommitter GitHub <noreply@github.com> 1648903274 +0000\n\nMerge #11878\n\n11878: fix: Paper over GAT panic r=flodiebold a=flodiebold\n\nTIL that Chalk expects the arguments to a generic associated type to come *before* the ones for the parent trait, not *after* as we have been doing with all other nested generics. Fixing this requires a larger refactoring, so for now this just papers over the problem by completely ignoring parameters of associated types.\r\n\r\nFixes #11769.\n\nCo-authored-by: Florian Diebold <flodiebold@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5fe366c649728c4af44ba7c306ba8d1223581a08", "html_url": "https://github.com/rust-lang/rust/commit/5fe366c649728c4af44ba7c306ba8d1223581a08", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5fe366c649728c4af44ba7c306ba8d1223581a08/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0fe74175e2844316193afbd99d2e26f3b6376045", "url": "https://api.github.com/repos/rust-lang/rust/commits/0fe74175e2844316193afbd99d2e26f3b6376045", "html_url": "https://github.com/rust-lang/rust/commit/0fe74175e2844316193afbd99d2e26f3b6376045"}, {"sha": "019f48673ac7342b40161cebd9eadeacb4649458", "url": "https://api.github.com/repos/rust-lang/rust/commits/019f48673ac7342b40161cebd9eadeacb4649458", "html_url": "https://github.com/rust-lang/rust/commit/019f48673ac7342b40161cebd9eadeacb4649458"}], "stats": {"total": 28, "additions": 28, "deletions": 0}, "files": [{"sha": "65eb2da5afc51f6155b267fe870ba760b512abb0", "filename": "crates/hir_ty/src/tests/regression.rs", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/5fe366c649728c4af44ba7c306ba8d1223581a08/crates%2Fhir_ty%2Fsrc%2Ftests%2Fregression.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5fe366c649728c4af44ba7c306ba8d1223581a08/crates%2Fhir_ty%2Fsrc%2Ftests%2Fregression.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Ftests%2Fregression.rs?ref=5fe366c649728c4af44ba7c306ba8d1223581a08", "patch": "@@ -1497,3 +1497,22 @@ fn regression_11688_3() {\n         \"#,\n     );\n }\n+\n+#[test]\n+fn gat_crash() {\n+    cov_mark::check!(ignore_gats);\n+    check_no_mismatches(\n+        r#\"\n+trait ATrait {}\n+\n+trait Crash {\n+    type Member<const N: usize>: ATrait;\n+    fn new<const N: usize>() -> Self::Member<N>;\n+}\n+\n+fn test<T: Crash>() {\n+    T::new();\n+}\n+\"#,\n+    );\n+}"}, {"sha": "c4a11c86d4aa9a5d94e4d833fe67bc2c28919a61", "filename": "crates/hir_ty/src/utils.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/5fe366c649728c4af44ba7c306ba8d1223581a08/crates%2Fhir_ty%2Fsrc%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5fe366c649728c4af44ba7c306ba8d1223581a08/crates%2Fhir_ty%2Fsrc%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Futils.rs?ref=5fe366c649728c4af44ba7c306ba8d1223581a08", "patch": "@@ -175,6 +175,15 @@ pub(super) fn associated_type_by_name_including_super_traits(\n \n pub(crate) fn generics(db: &dyn DefDatabase, def: GenericDefId) -> Generics {\n     let parent_generics = parent_generic_def(db, def).map(|def| Box::new(generics(db, def)));\n+    if parent_generics.is_some() && matches!(def, GenericDefId::TypeAliasId(_)) {\n+        // XXX: treat generic associated types as not existing to avoid crashes (#)\n+        //\n+        // Chalk expects the inner associated type's parameters to come\n+        // *before*, not after the trait's generics as we've always done it.\n+        // Adapting to this requires a larger refactoring\n+        cov_mark::hit!(ignore_gats);\n+        return Generics { def, params: Interned::new(Default::default()), parent_generics };\n+    }\n     Generics { def, params: db.generic_params(def), parent_generics }\n }\n "}]}