{"sha": "46a62ca9a4618b9c9c858a246b175639e801a757", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ2YTYyY2E5YTQ2MThiOWM5Yzg1OGEyNDZiMTc1NjM5ZTgwMWE3NTc=", "commit": {"author": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2019-07-12T01:14:37Z"}, "committer": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2019-08-12T22:03:44Z"}, "message": "Reduce genericity in Skip", "tree": {"sha": "f434ce95357cf1785ba0d832da1b0982c4964925", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f434ce95357cf1785ba0d832da1b0982c4964925"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/46a62ca9a4618b9c9c858a246b175639e801a757", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/46a62ca9a4618b9c9c858a246b175639e801a757", "html_url": "https://github.com/rust-lang/rust/commit/46a62ca9a4618b9c9c858a246b175639e801a757", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/46a62ca9a4618b9c9c858a246b175639e801a757/comments", "author": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2d7fc4dd498ed47595709fdb7e5ec6045de44f93", "url": "https://api.github.com/repos/rust-lang/rust/commits/2d7fc4dd498ed47595709fdb7e5ec6045de44f93", "html_url": "https://github.com/rust-lang/rust/commit/2d7fc4dd498ed47595709fdb7e5ec6045de44f93"}], "stats": {"total": 26, "additions": 18, "deletions": 8}, "files": [{"sha": "d8cdcaa1c853a17fd270117ebc1c8cce1c6e6704", "filename": "src/libcore/iter/adapters/mod.rs", "status": "modified", "additions": 18, "deletions": 8, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/46a62ca9a4618b9c9c858a246b175639e801a757/src%2Flibcore%2Fiter%2Fadapters%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46a62ca9a4618b9c9c858a246b175639e801a757/src%2Flibcore%2Fiter%2Fadapters%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Fadapters%2Fmod.rs?ref=46a62ca9a4618b9c9c858a246b175639e801a757", "patch": "@@ -1624,7 +1624,10 @@ impl<I> Iterator for Skip<I> where I: Iterator {\n         let (lower, upper) = self.iter.size_hint();\n \n         let lower = lower.saturating_sub(self.n);\n-        let upper = upper.map(|x| x.saturating_sub(self.n));\n+        let upper = match upper {\n+            Some(x) => Some(x.saturating_sub(self.n)),\n+            None => None,\n+        };\n \n         (lower, upper)\n     }\n@@ -1685,19 +1688,26 @@ impl<I> DoubleEndedIterator for Skip<I> where I: DoubleEndedIterator + ExactSize\n         }\n     }\n \n-    fn try_rfold<Acc, Fold, R>(&mut self, init: Acc, mut fold: Fold) -> R where\n+    fn try_rfold<Acc, Fold, R>(&mut self, init: Acc, fold: Fold) -> R where\n         Self: Sized, Fold: FnMut(Acc, Self::Item) -> R, R: Try<Ok=Acc>\n     {\n-        let mut n = self.len();\n-        if n == 0 {\n-            Try::from_ok(init)\n-        } else {\n-            self.iter.try_rfold(init, move |acc, x| {\n+        fn check<T, Acc, R: Try<Ok = Acc>>(\n+            mut n: usize,\n+            mut fold: impl FnMut(Acc, T) -> R,\n+        ) -> impl FnMut(Acc, T) -> LoopState<Acc, R> {\n+            move |acc, x| {\n                 n -= 1;\n                 let r = fold(acc, x);\n                 if n == 0 { LoopState::Break(r) }\n                 else { LoopState::from_try(r) }\n-            }).into_try()\n+            }\n+        }\n+\n+        let n = self.len();\n+        if n == 0 {\n+            Try::from_ok(init)\n+        } else {\n+            self.iter.try_rfold(init, check(n, fold)).into_try()\n         }\n     }\n }"}]}