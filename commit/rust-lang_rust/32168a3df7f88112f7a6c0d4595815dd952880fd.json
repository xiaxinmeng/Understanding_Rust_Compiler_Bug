{"sha": "32168a3df7f88112f7a6c0d4595815dd952880fd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMyMTY4YTNkZjdmODgxMTJmN2E2YzBkNDU5NTgxNWRkOTUyODgwZmQ=", "commit": {"author": {"name": "Stephen Crane", "email": "sjc@immunant.com", "date": "2019-11-18T23:22:55Z"}, "committer": {"name": "Stephen Crane", "email": "sjc@immunant.com", "date": "2019-11-19T00:27:59Z"}, "message": "Allow different global references to the same name\n\nCombining CGUs can result in code that references a static variable through both\nan Item and a ForeignItem with the same name. We don't care that the global was\nalready created by a ForeignItem reference when we see the Item reference, as\nlong as the LLVM types of the ForeignItem and Item match.\n\nFixes #66464", "tree": {"sha": "a05e4322dce33887013331079bf6ce311808424b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a05e4322dce33887013331079bf6ce311808424b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/32168a3df7f88112f7a6c0d4595815dd952880fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/32168a3df7f88112f7a6c0d4595815dd952880fd", "html_url": "https://github.com/rust-lang/rust/commit/32168a3df7f88112f7a6c0d4595815dd952880fd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/32168a3df7f88112f7a6c0d4595815dd952880fd/comments", "author": {"login": "rinon", "id": 970543, "node_id": "MDQ6VXNlcjk3MDU0Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/970543?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rinon", "html_url": "https://github.com/rinon", "followers_url": "https://api.github.com/users/rinon/followers", "following_url": "https://api.github.com/users/rinon/following{/other_user}", "gists_url": "https://api.github.com/users/rinon/gists{/gist_id}", "starred_url": "https://api.github.com/users/rinon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rinon/subscriptions", "organizations_url": "https://api.github.com/users/rinon/orgs", "repos_url": "https://api.github.com/users/rinon/repos", "events_url": "https://api.github.com/users/rinon/events{/privacy}", "received_events_url": "https://api.github.com/users/rinon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rinon", "id": 970543, "node_id": "MDQ6VXNlcjk3MDU0Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/970543?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rinon", "html_url": "https://github.com/rinon", "followers_url": "https://api.github.com/users/rinon/followers", "following_url": "https://api.github.com/users/rinon/following{/other_user}", "gists_url": "https://api.github.com/users/rinon/gists{/gist_id}", "starred_url": "https://api.github.com/users/rinon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rinon/subscriptions", "organizations_url": "https://api.github.com/users/rinon/orgs", "repos_url": "https://api.github.com/users/rinon/repos", "events_url": "https://api.github.com/users/rinon/events{/privacy}", "received_events_url": "https://api.github.com/users/rinon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a0d40f8bdfcc3c28355467973f97fd4c45ac5876", "url": "https://api.github.com/repos/rust-lang/rust/commits/a0d40f8bdfcc3c28355467973f97fd4c45ac5876", "html_url": "https://github.com/rust-lang/rust/commit/a0d40f8bdfcc3c28355467973f97fd4c45ac5876"}], "stats": {"total": 8, "additions": 5, "deletions": 3}, "files": [{"sha": "541b3d9476b3372657588df035fdf14025e00506", "filename": "src/librustc_codegen_llvm/consts.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/32168a3df7f88112f7a6c0d4595815dd952880fd/src%2Flibrustc_codegen_llvm%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32168a3df7f88112f7a6c0d4595815dd952880fd/src%2Flibrustc_codegen_llvm%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fconsts.rs?ref=32168a3df7f88112f7a6c0d4595815dd952880fd", "patch": "@@ -233,11 +233,13 @@ impl CodegenCx<'ll, 'tcx> {\n                     ref attrs, span, kind: hir::ItemKind::Static(..), ..\n                 }) => {\n                     let sym_str = sym.as_str();\n-                    if self.get_declared_value(&sym_str).is_some() {\n-                        span_bug!(span, \"Conflicting symbol names for static?\");\n+                    if let Some(g) = self.get_declared_value(&sym_str) {\n+                        if self.val_ty(g) != self.type_ptr_to(llty) {\n+                            span_bug!(span, \"Conflicting types for static\");\n+                        }\n                     }\n \n-                    let g = self.define_global(&sym_str, llty).unwrap();\n+                    let g = self.declare_global(&sym_str, llty);\n \n                     if !self.tcx.is_reachable_non_generic(def_id) {\n                         unsafe {"}]}