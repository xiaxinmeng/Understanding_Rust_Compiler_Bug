{"sha": "888ef24c2295fc3a1e96f864376fb22b00cc5583", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg4OGVmMjRjMjI5NWZjM2ExZTk2Zjg2NDM3NmZiMjJiMDBjYzU1ODM=", "commit": {"author": {"name": "oli", "email": "oli@uhura.edef.eu", "date": "2020-10-27T14:16:23Z"}, "committer": {"name": "oli", "email": "oli@uhura.edef.eu", "date": "2020-10-27T14:16:23Z"}, "message": "Address review comment", "tree": {"sha": "2e7d6457a9284b8f56513d9f09e6e3fcc9065ace", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2e7d6457a9284b8f56513d9f09e6e3fcc9065ace"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/888ef24c2295fc3a1e96f864376fb22b00cc5583", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/888ef24c2295fc3a1e96f864376fb22b00cc5583", "html_url": "https://github.com/rust-lang/rust/commit/888ef24c2295fc3a1e96f864376fb22b00cc5583", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/888ef24c2295fc3a1e96f864376fb22b00cc5583/comments", "author": null, "committer": null, "parents": [{"sha": "c8a866ea176f1d7250a714647a6ce7a4636f5705", "url": "https://api.github.com/repos/rust-lang/rust/commits/c8a866ea176f1d7250a714647a6ce7a4636f5705", "html_url": "https://github.com/rust-lang/rust/commit/c8a866ea176f1d7250a714647a6ce7a4636f5705"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "dda1e4c24eda371354ab3a7eba69137ce724da78", "filename": "compiler/rustc_errors/src/emitter.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/888ef24c2295fc3a1e96f864376fb22b00cc5583/compiler%2Frustc_errors%2Fsrc%2Femitter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/888ef24c2295fc3a1e96f864376fb22b00cc5583/compiler%2Frustc_errors%2Fsrc%2Femitter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_errors%2Fsrc%2Femitter.rs?ref=888ef24c2295fc3a1e96f864376fb22b00cc5583", "patch": "@@ -357,7 +357,8 @@ pub trait Emitter {\n                 }\n \n                 if matches!(trace.kind, ExpnKind::Inlined) {\n-                    new_labels.push((trace.call_site, \"in the inlined copy of this\".to_string()));\n+                    new_labels\n+                        .push((trace.call_site, \"in the inlined copy of this code\".to_string()));\n                 } else if always_backtrace {\n                     new_labels.push((\n                         trace.def_site,"}, {"sha": "5a54967e0d05525fa96d54d5f556154672b6862a", "filename": "src/test/ui/const_prop/inline_spans.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/888ef24c2295fc3a1e96f864376fb22b00cc5583/src%2Ftest%2Fui%2Fconst_prop%2Finline_spans.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/888ef24c2295fc3a1e96f864376fb22b00cc5583/src%2Ftest%2Fui%2Fconst_prop%2Finline_spans.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst_prop%2Finline_spans.stderr?ref=888ef24c2295fc3a1e96f864376fb22b00cc5583", "patch": "@@ -5,7 +5,7 @@ LL |     let _ = add(u8::MAX, 1);\n    |             ^^^^^^^^^^^^^^^ attempt to compute `u8::MAX + 1_u8`, which would overflow\n ...\n LL |     x + y\n-   |     ----- in the inlined copy of this\n+   |     ----- in the inlined copy of this code\n    |\n    = note: `#[deny(arithmetic_overflow)]` on by default\n "}]}