{"sha": "452e36efb3840f4b44c70c3939e3a88f27e47710", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ1MmUzNmVmYjM4NDBmNGI0NGM3MGMzOTM5ZTNhODhmMjdlNDc3MTA=", "commit": {"author": {"name": "Vytautas Astrauskas", "email": "astrauv@amazon.com", "date": "2020-04-20T04:21:22Z"}, "committer": {"name": "Vytautas Astrauskas", "email": "astrauv@amazon.com", "date": "2020-04-27T21:26:36Z"}, "message": "Print the thread name in Debug.", "tree": {"sha": "e2ef09f479c8b1905731977e0c5e21b4d59ee164", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e2ef09f479c8b1905731977e0c5e21b4d59ee164"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/452e36efb3840f4b44c70c3939e3a88f27e47710", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/452e36efb3840f4b44c70c3939e3a88f27e47710", "html_url": "https://github.com/rust-lang/rust/commit/452e36efb3840f4b44c70c3939e3a88f27e47710", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/452e36efb3840f4b44c70c3939e3a88f27e47710/comments", "author": null, "committer": null, "parents": [{"sha": "3bb16574486ecabd702587c6811ae5154cb3b12c", "url": "https://api.github.com/repos/rust-lang/rust/commits/3bb16574486ecabd702587c6811ae5154cb3b12c", "html_url": "https://github.com/rust-lang/rust/commit/3bb16574486ecabd702587c6811ae5154cb3b12c"}], "stats": {"total": 11, "additions": 10, "deletions": 1}, "files": [{"sha": "76f1e20cb13a13bdb758f87b78e1eed2dc6ca510", "filename": "src/thread.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/452e36efb3840f4b44c70c3939e3a88f27e47710/src%2Fthread.rs", "raw_url": "https://github.com/rust-lang/rust/raw/452e36efb3840f4b44c70c3939e3a88f27e47710/src%2Fthread.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fthread.rs?ref=452e36efb3840f4b44c70c3939e3a88f27e47710", "patch": "@@ -131,7 +131,16 @@ impl<'mir, 'tcx> Thread<'mir, 'tcx> {\n \n impl<'mir, 'tcx> std::fmt::Debug for Thread<'mir, 'tcx> {\n     fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {\n-        write!(f, \"{:?}\", self.state)\n+        if let Some(ref name) = self.thread_name {\n+            if let Ok(name_str) = std::str::from_utf8(name) {\n+                write!(f, \"{}\", name_str)?;\n+            } else {\n+                write!(f, \"<invalid thread name>\")?;\n+            }\n+        } else {\n+            write!(f, \"unnamed\")?;\n+        }\n+        write!(f, \"({:?}, {:?})\", self.state, self.join_status)\n     }\n }\n "}]}