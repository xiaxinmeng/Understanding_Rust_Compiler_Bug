{"sha": "21c276f9c87daa5fc5ff34e81fd1f1d5112afe00", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIxYzI3NmY5Yzg3ZGFhNWZjNWZmMzRlODFmZDFmMWQ1MTEyYWZlMDA=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-02-05T11:26:03Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-02-05T11:26:03Z"}, "message": "Rollup merge of #81682 - JulianKnodt:bit_set_iter_benchmarks, r=oli-obk\n\nAdd additional bitset benchmarks\n\nAdd additional benchmarks for operations in bitset, I realize that it was a bit lacking when I intended to optimize it earlier, so I was hoping to put some in so I can verify my work later.", "tree": {"sha": "e661def595d52d9e94629cc0cb0954cb18dc0904", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e661def595d52d9e94629cc0cb0954cb18dc0904"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/21c276f9c87daa5fc5ff34e81fd1f1d5112afe00", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgHStMCRBK7hj4Ov3rIwAAdHIIAK9qhipf/V4ln/3NfWqFeyth\nsMcjbswusxO5Cykaf099QILo4L+b4Y5hsQcYBE4j20pU2F0vgZAEO0UXcPQolKC7\nQNOYW2TnjjKqWZYwvF9cH4cAR/yzOa9gKjzJTiJSH+TxauagpuEM6EGRKeFgPRpw\nj64hA00UnBFL+rC7FQH/qemHtmuijh+/9DutClwyfPXxvdNRfpykEJEtjq+843fk\n7dneF3Ru/+FzhVTaVK1LT4+QE8tAtR9qPUa7WNvXiFE8hQa3foHAQ9Ks6FCjyB4p\noiml8VcQf5yagOz4Lfxo7zT47F06Jdds0ax36zHHexXCe4VcKd8cDVRW866UiCY=\n=EjRf\n-----END PGP SIGNATURE-----\n", "payload": "tree e661def595d52d9e94629cc0cb0954cb18dc0904\nparent 29371c25044852300d7d2d87c2c25375fcc37173\nparent 6e6608d8b54319aff0f5e6a3e10bd25aa508c329\nauthor Mara Bos <m-ou.se@m-ou.se> 1612524363 +0100\ncommitter GitHub <noreply@github.com> 1612524363 +0100\n\nRollup merge of #81682 - JulianKnodt:bit_set_iter_benchmarks, r=oli-obk\n\nAdd additional bitset benchmarks\n\nAdd additional benchmarks for operations in bitset, I realize that it was a bit lacking when I intended to optimize it earlier, so I was hoping to put some in so I can verify my work later.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/21c276f9c87daa5fc5ff34e81fd1f1d5112afe00", "html_url": "https://github.com/rust-lang/rust/commit/21c276f9c87daa5fc5ff34e81fd1f1d5112afe00", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/21c276f9c87daa5fc5ff34e81fd1f1d5112afe00/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "29371c25044852300d7d2d87c2c25375fcc37173", "url": "https://api.github.com/repos/rust-lang/rust/commits/29371c25044852300d7d2d87c2c25375fcc37173", "html_url": "https://github.com/rust-lang/rust/commit/29371c25044852300d7d2d87c2c25375fcc37173"}, {"sha": "6e6608d8b54319aff0f5e6a3e10bd25aa508c329", "url": "https://api.github.com/repos/rust-lang/rust/commits/6e6608d8b54319aff0f5e6a3e10bd25aa508c329", "html_url": "https://github.com/rust-lang/rust/commit/6e6608d8b54319aff0f5e6a3e10bd25aa508c329"}], "stats": {"total": 34, "additions": 34, "deletions": 0}, "files": [{"sha": "c11b98e77aa58ac5aac4c548dc58c0214dd3610f", "filename": "compiler/rustc_index/src/bit_set/tests.rs", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/21c276f9c87daa5fc5ff34e81fd1f1d5112afe00/compiler%2Frustc_index%2Fsrc%2Fbit_set%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21c276f9c87daa5fc5ff34e81fd1f1d5112afe00/compiler%2Frustc_index%2Fsrc%2Fbit_set%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_index%2Fsrc%2Fbit_set%2Ftests.rs?ref=21c276f9c87daa5fc5ff34e81fd1f1d5112afe00", "patch": "@@ -1,6 +1,7 @@\n use super::*;\n \n extern crate test;\n+use std::hint::black_box;\n use test::Bencher;\n \n #[test]\n@@ -364,3 +365,36 @@ fn union_hybrid_sparse_full_small_domain(b: &mut Bencher) {\n         sparse.union(&dense);\n     })\n }\n+\n+#[bench]\n+fn bench_insert(b: &mut Bencher) {\n+    let mut bs = BitSet::new_filled(99999usize);\n+    b.iter(|| {\n+        black_box(bs.insert(black_box(100u32)));\n+    });\n+}\n+\n+#[bench]\n+fn bench_remove(b: &mut Bencher) {\n+    let mut bs = BitSet::new_filled(99999usize);\n+    b.iter(|| {\n+        black_box(bs.remove(black_box(100u32)));\n+    });\n+}\n+\n+#[bench]\n+fn bench_iter(b: &mut Bencher) {\n+    let bs = BitSet::new_filled(99999usize);\n+    b.iter(|| {\n+        bs.iter().map(|b: usize| black_box(b)).for_each(drop);\n+    });\n+}\n+\n+#[bench]\n+fn bench_intersect(b: &mut Bencher) {\n+    let mut ba: BitSet<u32> = BitSet::new_filled(99999usize);\n+    let bb = BitSet::new_filled(99999usize);\n+    b.iter(|| {\n+        ba.intersect(black_box(&bb));\n+    });\n+}"}]}