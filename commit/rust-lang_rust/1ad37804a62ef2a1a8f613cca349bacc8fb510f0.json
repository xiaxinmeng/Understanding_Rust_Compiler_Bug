{"sha": "1ad37804a62ef2a1a8f613cca349bacc8fb510f0", "node_id": "C_kwDOAAsO6NoAKDFhZDM3ODA0YTYyZWYyYTFhOGY2MTNjY2EzNDliYWNjOGZiNTEwZjA", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-05-24T18:24:25Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-06-01T21:41:58Z"}, "message": "Remove brittle test.", "tree": {"sha": "2da42f265ca39cbb6a0734ac78cfd2c7ea943cc4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2da42f265ca39cbb6a0734ac78cfd2c7ea943cc4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1ad37804a62ef2a1a8f613cca349bacc8fb510f0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1ad37804a62ef2a1a8f613cca349bacc8fb510f0", "html_url": "https://github.com/rust-lang/rust/commit/1ad37804a62ef2a1a8f613cca349bacc8fb510f0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1ad37804a62ef2a1a8f613cca349bacc8fb510f0/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b90e1657449ca0a0c0907709f67276c7c583f3de", "url": "https://api.github.com/repos/rust-lang/rust/commits/b90e1657449ca0a0c0907709f67276c7c583f3de", "html_url": "https://github.com/rust-lang/rust/commit/b90e1657449ca0a0c0907709f67276c7c583f3de"}], "stats": {"total": 46, "additions": 0, "deletions": 46}, "files": [{"sha": "12be98640a718fb198d361a8c9cfae0890bd81ac", "filename": "tests/mir-opt/pre-codegen/checked_ops.ilog2.PreCodegen.after.mir", "status": "removed", "additions": 0, "deletions": 41, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/b90e1657449ca0a0c0907709f67276c7c583f3de/tests%2Fmir-opt%2Fpre-codegen%2Fchecked_ops.ilog2.PreCodegen.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/b90e1657449ca0a0c0907709f67276c7c583f3de/tests%2Fmir-opt%2Fpre-codegen%2Fchecked_ops.ilog2.PreCodegen.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Fpre-codegen%2Fchecked_ops.ilog2.PreCodegen.after.mir?ref=b90e1657449ca0a0c0907709f67276c7c583f3de", "patch": "@@ -1,41 +0,0 @@\n-// MIR for `ilog2` after PreCodegen\n-\n-fn ilog2(_1: u32) -> u32 {\n-    debug x => _1;                       // in scope 0 at $DIR/checked_ops.rs:+0:14: +0:15\n-    let mut _0: u32;                     // return place in scope 0 at $DIR/checked_ops.rs:+0:25: +0:28\n-    scope 1 (inlined #[track_caller] core::num::<impl u32>::ilog2) { // at $DIR/checked_ops.rs:21:7: 21:14\n-        debug self => _1;                // in scope 1 at $SRC_DIR/core/src/num/uint_macros.rs:LL:COL\n-        let mut _2: std::option::Option<u32>; // in scope 1 at $SRC_DIR/core/src/num/uint_macros.rs:LL:COL\n-        let mut _3: isize;               // in scope 1 at $SRC_DIR/core/src/num/uint_macros.rs:LL:COL\n-        let mut _4: !;                   // in scope 1 at $SRC_DIR/core/src/num/uint_macros.rs:LL:COL\n-        scope 2 {\n-            debug log => _0;             // in scope 2 at $SRC_DIR/core/src/num/uint_macros.rs:LL:COL\n-        }\n-    }\n-\n-    bb0: {\n-        StorageLive(_2);                 // scope 2 at $SRC_DIR/core/src/num/uint_macros.rs:LL:COL\n-        _2 = core::num::<impl u32>::checked_ilog2(_1) -> bb1; // scope 2 at $SRC_DIR/core/src/num/uint_macros.rs:LL:COL\n-                                         // mir::Constant\n-                                         // + span: $SRC_DIR/core/src/num/uint_macros.rs:LL:COL\n-                                         // + literal: Const { ty: fn(u32) -> Option<u32> {core::num::<impl u32>::checked_ilog2}, val: Value(<ZST>) }\n-    }\n-\n-    bb1: {\n-        _3 = discriminant(_2);           // scope 2 at $SRC_DIR/core/src/num/uint_macros.rs:LL:COL\n-        switchInt(move _3) -> [1: bb2, otherwise: bb3]; // scope 2 at $SRC_DIR/core/src/num/uint_macros.rs:LL:COL\n-    }\n-\n-    bb2: {\n-        _0 = ((_2 as Some).0: u32);      // scope 2 at $SRC_DIR/core/src/num/uint_macros.rs:LL:COL\n-        StorageDead(_2);                 // scope 1 at $SRC_DIR/core/src/num/uint_macros.rs:LL:COL\n-        return;                          // scope 0 at $DIR/checked_ops.rs:+2:2: +2:2\n-    }\n-\n-    bb3: {\n-        _4 = core::num::int_log10::panic_for_nonpositive_argument(); // scope 1 at $SRC_DIR/core/src/num/uint_macros.rs:LL:COL\n-                                         // mir::Constant\n-                                         // + span: $SRC_DIR/core/src/num/uint_macros.rs:LL:COL\n-                                         // + literal: Const { ty: fn() -> ! {core::num::int_log10::panic_for_nonpositive_argument}, val: Value(<ZST>) }\n-    }\n-}"}, {"sha": "dee43b0c6f885052a1855f3a3e91d96659af6453", "filename": "tests/mir-opt/pre-codegen/checked_ops.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/1ad37804a62ef2a1a8f613cca349bacc8fb510f0/tests%2Fmir-opt%2Fpre-codegen%2Fchecked_ops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ad37804a62ef2a1a8f613cca349bacc8fb510f0/tests%2Fmir-opt%2Fpre-codegen%2Fchecked_ops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Fpre-codegen%2Fchecked_ops.rs?ref=1ad37804a62ef2a1a8f613cca349bacc8fb510f0", "patch": "@@ -15,8 +15,3 @@ pub fn step_forward(x: u32, n: usize) -> u32 {\n pub fn checked_shl(x: u32, rhs: u32) -> Option<u32> {\n     x.checked_shl(rhs)\n }\n-\n-// EMIT_MIR checked_ops.ilog2.PreCodegen.after.mir\n-pub fn ilog2(x: u32) -> u32 {\n-    x.ilog2()\n-}"}]}