{"sha": "2abd1f73d93e3e57515121cc98cc14fe6ccb17dd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJhYmQxZjczZDkzZTNlNTc1MTUxMjFjYzk4Y2MxNGZlNmNjYjE3ZGQ=", "commit": {"author": {"name": "Jay Hardee", "email": "hardeejj9@gmail.com", "date": "2017-07-19T23:56:32Z"}, "committer": {"name": "Jay Hardee", "email": "hardeejj9@gmail.com", "date": "2017-07-22T21:49:45Z"}, "message": "Add lint for digit grouping.", "tree": {"sha": "f28af88354a09ad9a42894a1c6c2b71f7fcfa841", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f28af88354a09ad9a42894a1c6c2b71f7fcfa841"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2abd1f73d93e3e57515121cc98cc14fe6ccb17dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2abd1f73d93e3e57515121cc98cc14fe6ccb17dd", "html_url": "https://github.com/rust-lang/rust/commit/2abd1f73d93e3e57515121cc98cc14fe6ccb17dd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2abd1f73d93e3e57515121cc98cc14fe6ccb17dd/comments", "author": {"login": "jayhardee9", "id": 6964208, "node_id": "MDQ6VXNlcjY5NjQyMDg=", "avatar_url": "https://avatars.githubusercontent.com/u/6964208?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jayhardee9", "html_url": "https://github.com/jayhardee9", "followers_url": "https://api.github.com/users/jayhardee9/followers", "following_url": "https://api.github.com/users/jayhardee9/following{/other_user}", "gists_url": "https://api.github.com/users/jayhardee9/gists{/gist_id}", "starred_url": "https://api.github.com/users/jayhardee9/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jayhardee9/subscriptions", "organizations_url": "https://api.github.com/users/jayhardee9/orgs", "repos_url": "https://api.github.com/users/jayhardee9/repos", "events_url": "https://api.github.com/users/jayhardee9/events{/privacy}", "received_events_url": "https://api.github.com/users/jayhardee9/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jayhardee9", "id": 6964208, "node_id": "MDQ6VXNlcjY5NjQyMDg=", "avatar_url": "https://avatars.githubusercontent.com/u/6964208?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jayhardee9", "html_url": "https://github.com/jayhardee9", "followers_url": "https://api.github.com/users/jayhardee9/followers", "following_url": "https://api.github.com/users/jayhardee9/following{/other_user}", "gists_url": "https://api.github.com/users/jayhardee9/gists{/gist_id}", "starred_url": "https://api.github.com/users/jayhardee9/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jayhardee9/subscriptions", "organizations_url": "https://api.github.com/users/jayhardee9/orgs", "repos_url": "https://api.github.com/users/jayhardee9/repos", "events_url": "https://api.github.com/users/jayhardee9/events{/privacy}", "received_events_url": "https://api.github.com/users/jayhardee9/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8a1510013de138ab93434e087d795b60c79fb13d", "url": "https://api.github.com/repos/rust-lang/rust/commits/8a1510013de138ab93434e087d795b60c79fb13d", "html_url": "https://github.com/rust-lang/rust/commit/8a1510013de138ab93434e087d795b60c79fb13d"}], "stats": {"total": 951, "additions": 673, "deletions": 278}, "files": [{"sha": "425fb4670b27849607f79f0ebd6b9bad42e2e2f2", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2abd1f73d93e3e57515121cc98cc14fe6ccb17dd/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2abd1f73d93e3e57515121cc98cc14fe6ccb17dd/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=2abd1f73d93e3e57515121cc98cc14fe6ccb17dd", "patch": "@@ -101,6 +101,7 @@ pub mod large_enum_variant;\n pub mod len_zero;\n pub mod let_if_seq;\n pub mod lifetimes;\n+pub mod literal_digit_grouping;\n pub mod loops;\n pub mod map_clone;\n pub mod matches;\n@@ -316,6 +317,7 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry) {\n     reg.register_late_lint_pass(box large_enum_variant::LargeEnumVariant::new(conf.enum_variant_size_threshold));\n     reg.register_late_lint_pass(box should_assert_eq::ShouldAssertEq);\n     reg.register_late_lint_pass(box needless_pass_by_value::NeedlessPassByValue);\n+    reg.register_early_lint_pass(box literal_digit_grouping::LiteralDigitGrouping);\n \n     reg.register_lint_group(\"clippy_restrictions\", vec![\n         arithmetic::FLOAT_ARITHMETIC,\n@@ -418,6 +420,9 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry) {\n         let_if_seq::USELESS_LET_IF_SEQ,\n         lifetimes::NEEDLESS_LIFETIMES,\n         lifetimes::UNUSED_LIFETIMES,\n+        literal_digit_grouping::UNREADABLE_LITERAL,\n+        literal_digit_grouping::INCONSISTENT_DIGIT_GROUPING,\n+        literal_digit_grouping::LARGE_DIGIT_GROUPS,\n         loops::EMPTY_LOOP,\n         loops::EXPLICIT_COUNTER_LOOP,\n         loops::EXPLICIT_INTO_ITER_LOOP,"}, {"sha": "1b38c5265a908a65deb287dd29e43461b7e1a752", "filename": "clippy_lints/src/literal_digit_grouping.rs", "status": "added", "additions": 213, "deletions": 0, "changes": 213, "blob_url": "https://github.com/rust-lang/rust/blob/2abd1f73d93e3e57515121cc98cc14fe6ccb17dd/clippy_lints%2Fsrc%2Fliteral_digit_grouping.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2abd1f73d93e3e57515121cc98cc14fe6ccb17dd/clippy_lints%2Fsrc%2Fliteral_digit_grouping.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fliteral_digit_grouping.rs?ref=2abd1f73d93e3e57515121cc98cc14fe6ccb17dd", "patch": "@@ -0,0 +1,213 @@\n+//! Lints concerned with the grouping of digits with underscores in integral or\n+//! floating-point literal expressions.\n+\n+use rustc::lint::*;\n+use syntax::ast::*;\n+use syntax_pos;\n+use utils::{span_help_and_lint, snippet_opt, in_external_macro};\n+\n+/// **What it does:** Warns if a long integral constant does not contain underscores.\n+///\n+/// **Why is this bad?** Reading long numbers is difficult without separators.\n+///\n+/// **Known problems:** None.\n+///\n+/// **Example:**\n+///\n+/// ```rust\n+/// 61864918973511\n+/// ```\n+declare_lint! {\n+    pub UNREADABLE_LITERAL,\n+    Warn,\n+    \"long integer literal without underscores\"\n+}\n+\n+/// **What it does:** Warns if an integral constant is grouped inconsistently with underscores.\n+///\n+/// **Why is this bad?** Readers may incorrectly interpret inconsistently grouped digits.\n+///\n+/// **Known problems:** None.\n+///\n+/// **Example:**\n+///\n+/// ```rust\n+/// 618_64_9189_73_511\n+/// ```\n+declare_lint! {\n+    pub INCONSISTENT_DIGIT_GROUPING,\n+    Warn,\n+    \"integer literals with digits grouped inconsistently\"\n+}\n+\n+/// **What it does:** Warns if the digits of an integral constant are grouped into groups that\n+/// are too large.\n+///\n+/// **Why is this bad?** Negatively impacts readability.\n+///\n+/// **Known problems:** None.\n+///\n+/// **Example:**\n+///\n+/// ```rust\n+/// 6186491_8973511\n+/// ```\n+declare_lint! {\n+    pub LARGE_DIGIT_GROUPS,\n+    Warn,\n+    \"grouping digits into groups that are too large\"\n+}\n+\n+#[derive(Copy, Clone)]\n+pub struct LiteralDigitGrouping;\n+\n+impl LintPass for LiteralDigitGrouping {\n+    fn get_lints(&self) -> LintArray {\n+        lint_array!(UNREADABLE_LITERAL, INCONSISTENT_DIGIT_GROUPING, LARGE_DIGIT_GROUPS)\n+    }\n+}\n+\n+impl EarlyLintPass for LiteralDigitGrouping {\n+    fn check_expr(&mut self, cx: &EarlyContext, expr: &Expr) {\n+        if in_external_macro(cx, expr.span) {\n+            return;\n+        }\n+\n+        match expr.node {\n+            ExprKind::Lit(ref lit) => self.check_lit(cx, lit),\n+            _ => (),\n+        }\n+    }\n+}\n+\n+impl LiteralDigitGrouping {\n+    fn check_lit(&self, cx: &EarlyContext, lit: &Lit) {\n+        // Lint integral literals.\n+        if_let_chain! {[\n+            let LitKind::Int(..) = lit.node,\n+            let Some(src) = snippet_opt(cx, lit.span),\n+            let Some(firstch) = src.chars().next(),\n+            char::to_digit(firstch, 10).is_some()\n+        ], {\n+            let digits = LiteralDigitGrouping::get_digits(&src, false);\n+\n+            LiteralDigitGrouping::do_lint(digits, cx, &lit.span);\n+        }}\n+\n+        // Lint floating-point literals.\n+        if_let_chain! {[\n+            let LitKind::Float(..) = lit.node,\n+            let Some(src) = snippet_opt(cx, lit.span),\n+            let Some(firstch) = src.chars().next(),\n+            char::to_digit(firstch, 10).is_some()\n+        ], {\n+            let digits: Vec<&str> = LiteralDigitGrouping::get_digits(&src, true)\n+                .split_terminator('.')\n+                .collect();\n+\n+            // Lint integral and fractional parts separately, and then check consistency of digit\n+            // groups if both pass.\n+            if let Some(integral_group_size) = LiteralDigitGrouping::do_lint(digits[0], cx, &lit.span) {\n+                if digits.len() > 1 {\n+                    // Lint the fractional part of literal just like integral part, but reversed.\n+                    let fractional_part = &digits[1].chars().rev().collect::<String>();\n+                    if let Some(fractional_group_size) = LiteralDigitGrouping::do_lint(fractional_part, cx, &lit.span) {\n+                        let consistent = match (integral_group_size, fractional_group_size) {\n+                            // No groups on either side of decimal point - good to go.\n+                            (0, 0) => true,\n+                            // Integral part has grouped digits, fractional part does not.\n+                            (_, 0) => digits[1].len() <= integral_group_size,\n+                            // Fractional part has grouped digits, integral part does not.\n+                            (0, _) => digits[0].len() <= fractional_group_size,\n+                            // Both parts have grouped digits. Groups should be the same size.\n+                            (_, _) => integral_group_size == fractional_group_size,\n+                        };\n+\n+                        if !consistent {\n+                            span_help_and_lint(cx, INCONSISTENT_DIGIT_GROUPING, lit.span,\n+                                           \"digits grouped inconsistently by underscores\",\n+                                           \"consider making each group three or four digits\");\n+                        }\n+                    }\n+                }\n+            }\n+        }}\n+    }\n+\n+    /// Returns the digits of an integral or floating-point literal.\n+    fn get_digits(lit: &str, float: bool) -> &str {\n+        // Determine delimiter for radix prefix, if present.\n+        let mb_r = if lit.starts_with(\"0x\") {\n+            Some('x')\n+        } else if lit.starts_with(\"0b\") {\n+            Some('b')\n+        } else if lit.starts_with(\"0o\") {\n+            Some('o')\n+        } else {\n+            None\n+        };\n+\n+        let has_suffix = !float && (lit.contains('i') || lit.contains('u')) || float && lit.contains('f');\n+\n+        // Grab part of literal between the radix prefix and type suffix.\n+        let mut digits = if let Some(r) = mb_r {\n+            lit.split(|c| c == 'i' || c == 'u' || c == r || (float && c == 'f')).nth(1).unwrap()\n+        } else {\n+            lit.split(|c| c == 'i' || c == 'u' || (float && c == 'f')).next().unwrap()\n+        };\n+\n+        // If there was an underscore before type suffix, drop it.\n+        if has_suffix && digits.chars().last().unwrap() == '_' {\n+            digits = digits.split_at(digits.len() - 1).0;\n+        }\n+\n+        digits\n+    }\n+\n+    /// Performs lint on `digits` (no decimal point) and returns the group size. `None` is\n+    /// returned when emitting a warning.\n+    fn do_lint(digits: &str, cx: &EarlyContext, span: &syntax_pos::Span) -> Option<usize> {\n+        // Grab underscore indices with respect to the units digit.\n+        let underscore_positions: Vec<usize> = digits.chars().rev().enumerate()\n+            .filter_map(|(idx, digit)|\n+                if digit == '_' {\n+                    Some(idx)\n+                } else {\n+                    None\n+                })\n+            .collect();\n+\n+        if underscore_positions.is_empty() {\n+            // Check if literal needs underscores.\n+            if digits.len() > 4 {\n+                span_help_and_lint(cx, UNREADABLE_LITERAL, *span,\n+                                   \"long literal lacking separators\",\n+                                   \"consider using underscores to make literal more readable\");\n+                return None;\n+            } else {\n+                return Some(0);\n+            }\n+        } else {\n+            // Check consistency and the sizes of the groups.\n+            let group_size = underscore_positions[0];\n+            let consistent = underscore_positions\n+                .windows(2)\n+                .all(|ps| ps[1] - ps[0] == group_size + 1)\n+                // number of digits to the left of the last group cannot be bigger than group size.\n+                && (digits.len() - underscore_positions.last().unwrap() <= group_size + 1);\n+\n+            if !consistent {\n+                span_help_and_lint(cx, INCONSISTENT_DIGIT_GROUPING, *span,\n+                                   \"digits grouped inconsistently by underscores\",\n+                                   \"consider making each group three or four digits\");\n+                return None;\n+            } else if group_size > 4 {\n+                span_help_and_lint(cx, LARGE_DIGIT_GROUPS, *span,\n+                                   \"digit groups should be smaller\",\n+                                   \"consider using groups of three or four digits\");\n+                return None;\n+            }\n+            return Some(group_size);\n+        }\n+    }\n+}"}, {"sha": "1c61011755e58ac1ffa818597c98eeb8e6dfd295", "filename": "clippy_lints/src/misc_early.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2abd1f73d93e3e57515121cc98cc14fe6ccb17dd/clippy_lints%2Fsrc%2Fmisc_early.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2abd1f73d93e3e57515121cc98cc14fe6ccb17dd/clippy_lints%2Fsrc%2Fmisc_early.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmisc_early.rs?ref=2abd1f73d93e3e57515121cc98cc14fe6ccb17dd", "patch": "@@ -108,7 +108,7 @@ declare_lint! {\n /// **What it does:** Warns if an integral constant literal starts with `0`.\n ///\n /// **Why is this bad?** In some languages (including the infamous C language and most of its\n-/// familly), this marks an octal constant. In Rust however, this is a decimal constant. This could\n+/// family), this marks an octal constant. In Rust however, this is a decimal constant. This could\n /// be confusing for both the writer and a reader of the constant.\n ///\n /// **Known problems:** None."}, {"sha": "fd88ca612d2bdbc378262f655c8f3a79d4ea90be", "filename": "clippy_tests/examples/assign_ops.stderr", "status": "modified", "additions": 22, "deletions": 22, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/2abd1f73d93e3e57515121cc98cc14fe6ccb17dd/clippy_tests%2Fexamples%2Fassign_ops.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2abd1f73d93e3e57515121cc98cc14fe6ccb17dd/clippy_tests%2Fexamples%2Fassign_ops.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fassign_ops.stderr?ref=2abd1f73d93e3e57515121cc98cc14fe6ccb17dd", "patch": "@@ -2,137 +2,137 @@ error: assign operation detected\n  --> assign_ops.rs:8:5\n   |\n 8 |     i += 2;\n-  |     ^^^^^^ help: replace it with `i = i + 2`\n+  |     ^^^^^^ help: replace it with: `i = i + 2`\n   |\n   = note: `-D assign-ops` implied by `-D warnings`\n \n error: assign operation detected\n  --> assign_ops.rs:9:5\n   |\n 9 |     i += 2 + 17;\n-  |     ^^^^^^^^^^^ help: replace it with `i = i + 2 + 17`\n+  |     ^^^^^^^^^^^ help: replace it with: `i = i + 2 + 17`\n \n error: assign operation detected\n   --> assign_ops.rs:10:5\n    |\n 10 |     i -= 6;\n-   |     ^^^^^^ help: replace it with `i = i - 6`\n+   |     ^^^^^^ help: replace it with: `i = i - 6`\n \n error: assign operation detected\n   --> assign_ops.rs:11:5\n    |\n 11 |     i -= 2 - 1;\n-   |     ^^^^^^^^^^ help: replace it with `i = i - (2 - 1)`\n+   |     ^^^^^^^^^^ help: replace it with: `i = i - (2 - 1)`\n \n error: assign operation detected\n   --> assign_ops.rs:12:5\n    |\n 12 |     i *= 5;\n-   |     ^^^^^^ help: replace it with `i = i * 5`\n+   |     ^^^^^^ help: replace it with: `i = i * 5`\n \n error: assign operation detected\n   --> assign_ops.rs:13:5\n    |\n 13 |     i *= 1+5;\n-   |     ^^^^^^^^ help: replace it with `i = i * (1+5)`\n+   |     ^^^^^^^^ help: replace it with: `i = i * (1+5)`\n \n error: assign operation detected\n   --> assign_ops.rs:14:5\n    |\n 14 |     i /= 32;\n-   |     ^^^^^^^ help: replace it with `i = i / 32`\n+   |     ^^^^^^^ help: replace it with: `i = i / 32`\n \n error: assign operation detected\n   --> assign_ops.rs:15:5\n    |\n 15 |     i /= 32 | 5;\n-   |     ^^^^^^^^^^^ help: replace it with `i = i / (32 | 5)`\n+   |     ^^^^^^^^^^^ help: replace it with: `i = i / (32 | 5)`\n \n error: assign operation detected\n   --> assign_ops.rs:16:5\n    |\n 16 |     i /= 32 / 5;\n-   |     ^^^^^^^^^^^ help: replace it with `i = i / (32 / 5)`\n+   |     ^^^^^^^^^^^ help: replace it with: `i = i / (32 / 5)`\n \n error: assign operation detected\n   --> assign_ops.rs:17:5\n    |\n 17 |     i %= 42;\n-   |     ^^^^^^^ help: replace it with `i = i % 42`\n+   |     ^^^^^^^ help: replace it with: `i = i % 42`\n \n error: assign operation detected\n   --> assign_ops.rs:18:5\n    |\n 18 |     i >>= i;\n-   |     ^^^^^^^ help: replace it with `i = i >> i`\n+   |     ^^^^^^^ help: replace it with: `i = i >> i`\n \n error: assign operation detected\n   --> assign_ops.rs:19:5\n    |\n 19 |     i <<= 9 + 6 - 7;\n-   |     ^^^^^^^^^^^^^^^ help: replace it with `i = i << (9 + 6 - 7)`\n+   |     ^^^^^^^^^^^^^^^ help: replace it with: `i = i << (9 + 6 - 7)`\n \n error: assign operation detected\n   --> assign_ops.rs:20:5\n    |\n 20 |     i += 1 << 5;\n-   |     ^^^^^^^^^^^ help: replace it with `i = i + (1 << 5)`\n+   |     ^^^^^^^^^^^ help: replace it with: `i = i + (1 << 5)`\n \n error: manual implementation of an assign operation\n   --> assign_ops.rs:27:5\n    |\n 27 |     a = a + 1;\n-   |     ^^^^^^^^^ help: replace it with `a += 1`\n+   |     ^^^^^^^^^ help: replace it with: `a += 1`\n    |\n    = note: `-D assign-op-pattern` implied by `-D warnings`\n \n error: manual implementation of an assign operation\n   --> assign_ops.rs:28:5\n    |\n 28 |     a = 1 + a;\n-   |     ^^^^^^^^^ help: replace it with `a += 1`\n+   |     ^^^^^^^^^ help: replace it with: `a += 1`\n \n error: manual implementation of an assign operation\n   --> assign_ops.rs:29:5\n    |\n 29 |     a = a - 1;\n-   |     ^^^^^^^^^ help: replace it with `a -= 1`\n+   |     ^^^^^^^^^ help: replace it with: `a -= 1`\n \n error: manual implementation of an assign operation\n   --> assign_ops.rs:30:5\n    |\n 30 |     a = a * 99;\n-   |     ^^^^^^^^^^ help: replace it with `a *= 99`\n+   |     ^^^^^^^^^^ help: replace it with: `a *= 99`\n \n error: manual implementation of an assign operation\n   --> assign_ops.rs:31:5\n    |\n 31 |     a = 42 * a;\n-   |     ^^^^^^^^^^ help: replace it with `a *= 42`\n+   |     ^^^^^^^^^^ help: replace it with: `a *= 42`\n \n error: manual implementation of an assign operation\n   --> assign_ops.rs:32:5\n    |\n 32 |     a = a / 2;\n-   |     ^^^^^^^^^ help: replace it with `a /= 2`\n+   |     ^^^^^^^^^ help: replace it with: `a /= 2`\n \n error: manual implementation of an assign operation\n   --> assign_ops.rs:33:5\n    |\n 33 |     a = a % 5;\n-   |     ^^^^^^^^^ help: replace it with `a %= 5`\n+   |     ^^^^^^^^^ help: replace it with: `a %= 5`\n \n error: manual implementation of an assign operation\n   --> assign_ops.rs:34:5\n    |\n 34 |     a = a & 1;\n-   |     ^^^^^^^^^ help: replace it with `a &= 1`\n+   |     ^^^^^^^^^ help: replace it with: `a &= 1`\n \n error: manual implementation of an assign operation\n   --> assign_ops.rs:40:5\n    |\n 40 |     s = s + \"bla\";\n-   |     ^^^^^^^^^^^^^ help: replace it with `s += \"bla\"`\n+   |     ^^^^^^^^^^^^^ help: replace it with: `s += \"bla\"`\n \n error: aborting due to 22 previous errors\n "}, {"sha": "2f7642100b276538fdad8e52fa411470f7b26ab4", "filename": "clippy_tests/examples/assign_ops2.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/2abd1f73d93e3e57515121cc98cc14fe6ccb17dd/clippy_tests%2Fexamples%2Fassign_ops2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2abd1f73d93e3e57515121cc98cc14fe6ccb17dd/clippy_tests%2Fexamples%2Fassign_ops2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fassign_ops2.stderr?ref=2abd1f73d93e3e57515121cc98cc14fe6ccb17dd", "patch": "@@ -2,51 +2,51 @@ error: variable appears on both sides of an assignment operation\n  --> assign_ops2.rs:8:5\n   |\n 8 |     a += a + 1;\n-  |     ^^^^^^^^^^ help: replace it with `a += 1`\n+  |     ^^^^^^^^^^ help: replace it with: `a += 1`\n   |\n   = note: `-D misrefactored-assign-op` implied by `-D warnings`\n \n error: variable appears on both sides of an assignment operation\n  --> assign_ops2.rs:9:5\n   |\n 9 |     a += 1 + a;\n-  |     ^^^^^^^^^^ help: replace it with `a += 1`\n+  |     ^^^^^^^^^^ help: replace it with: `a += 1`\n \n error: variable appears on both sides of an assignment operation\n   --> assign_ops2.rs:10:5\n    |\n 10 |     a -= a - 1;\n-   |     ^^^^^^^^^^ help: replace it with `a -= 1`\n+   |     ^^^^^^^^^^ help: replace it with: `a -= 1`\n \n error: variable appears on both sides of an assignment operation\n   --> assign_ops2.rs:11:5\n    |\n 11 |     a *= a * 99;\n-   |     ^^^^^^^^^^^ help: replace it with `a *= 99`\n+   |     ^^^^^^^^^^^ help: replace it with: `a *= 99`\n \n error: variable appears on both sides of an assignment operation\n   --> assign_ops2.rs:12:5\n    |\n 12 |     a *= 42 * a;\n-   |     ^^^^^^^^^^^ help: replace it with `a *= 42`\n+   |     ^^^^^^^^^^^ help: replace it with: `a *= 42`\n \n error: variable appears on both sides of an assignment operation\n   --> assign_ops2.rs:13:5\n    |\n 13 |     a /= a / 2;\n-   |     ^^^^^^^^^^ help: replace it with `a /= 2`\n+   |     ^^^^^^^^^^ help: replace it with: `a /= 2`\n \n error: variable appears on both sides of an assignment operation\n   --> assign_ops2.rs:14:5\n    |\n 14 |     a %= a % 5;\n-   |     ^^^^^^^^^^ help: replace it with `a %= 5`\n+   |     ^^^^^^^^^^ help: replace it with: `a %= 5`\n \n error: variable appears on both sides of an assignment operation\n   --> assign_ops2.rs:15:5\n    |\n 15 |     a &= a & 1;\n-   |     ^^^^^^^^^^ help: replace it with `a &= 1`\n+   |     ^^^^^^^^^^ help: replace it with: `a &= 1`\n \n error: aborting due to 8 previous errors\n "}, {"sha": "c7f403ac59e0141bef173970810736613840e928", "filename": "clippy_tests/examples/block_in_if_condition.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2abd1f73d93e3e57515121cc98cc14fe6ccb17dd/clippy_tests%2Fexamples%2Fblock_in_if_condition.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2abd1f73d93e3e57515121cc98cc14fe6ccb17dd/clippy_tests%2Fexamples%2Fblock_in_if_condition.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fblock_in_if_condition.stderr?ref=2abd1f73d93e3e57515121cc98cc14fe6ccb17dd", "patch": "@@ -46,7 +46,7 @@ error: this boolean expression can be simplified\n   --> block_in_if_condition.rs:67:8\n    |\n 67 |     if true && x == 3 {\n-   |        ^^^^^^^^^^^^^^ help: try `x == 3`\n+   |        ^^^^^^^^^^^^^^ help: try: `x == 3`\n    |\n    = note: `-D nonminimal-bool` implied by `-D warnings`\n "}, {"sha": "b62f2e0c4473f3a258c17daef5d1f75b6cb85c87", "filename": "clippy_tests/examples/bool_comparison.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2abd1f73d93e3e57515121cc98cc14fe6ccb17dd/clippy_tests%2Fexamples%2Fbool_comparison.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2abd1f73d93e3e57515121cc98cc14fe6ccb17dd/clippy_tests%2Fexamples%2Fbool_comparison.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fbool_comparison.stderr?ref=2abd1f73d93e3e57515121cc98cc14fe6ccb17dd", "patch": "@@ -2,27 +2,27 @@ error: equality checks against true are unnecessary\n  --> bool_comparison.rs:7:8\n   |\n 7 |     if x == true { \"yes\" } else { \"no\" };\n-  |        ^^^^^^^^^ help: try simplifying it as shown: `x`\n+  |        ^^^^^^^^^ help: try simplifying it as shown:: `x`\n   |\n   = note: `-D bool-comparison` implied by `-D warnings`\n \n error: equality checks against false can be replaced by a negation\n  --> bool_comparison.rs:8:8\n   |\n 8 |     if x == false { \"yes\" } else { \"no\" };\n-  |        ^^^^^^^^^^ help: try simplifying it as shown: `!x`\n+  |        ^^^^^^^^^^ help: try simplifying it as shown:: `!x`\n \n error: equality checks against true are unnecessary\n  --> bool_comparison.rs:9:8\n   |\n 9 |     if true == x { \"yes\" } else { \"no\" };\n-  |        ^^^^^^^^^ help: try simplifying it as shown: `x`\n+  |        ^^^^^^^^^ help: try simplifying it as shown:: `x`\n \n error: equality checks against false can be replaced by a negation\n   --> bool_comparison.rs:10:8\n    |\n 10 |     if false == x { \"yes\" } else { \"no\" };\n-   |        ^^^^^^^^^^ help: try simplifying it as shown: `!x`\n+   |        ^^^^^^^^^^ help: try simplifying it as shown:: `!x`\n \n error: aborting due to 4 previous errors\n "}, {"sha": "85cc800520582f28091cf7b81a645ae18ead9351", "filename": "clippy_tests/examples/booleans.stderr", "status": "modified", "additions": 23, "deletions": 11, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/2abd1f73d93e3e57515121cc98cc14fe6ccb17dd/clippy_tests%2Fexamples%2Fbooleans.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2abd1f73d93e3e57515121cc98cc14fe6ccb17dd/clippy_tests%2Fexamples%2Fbooleans.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fbooleans.stderr?ref=2abd1f73d93e3e57515121cc98cc14fe6ccb17dd", "patch": "@@ -2,7 +2,7 @@ error: this boolean expression contains a logic bug\n   --> booleans.rs:12:13\n    |\n 12 |     let _ = a && b || a;\n-   |             ^^^^^^^^^^^ help: it would look like the following `a`\n+   |             ^^^^^^^^^^^ help: it would look like the following: `a`\n    |\n    = note: `-D logic-bug` implied by `-D warnings`\n help: this expression can be optimized out by applying boolean operations to the outer expression\n@@ -15,27 +15,27 @@ error: this boolean expression can be simplified\n   --> booleans.rs:14:13\n    |\n 14 |     let _ = !true;\n-   |             ^^^^^ help: try `false`\n+   |             ^^^^^ help: try: `false`\n    |\n    = note: `-D nonminimal-bool` implied by `-D warnings`\n \n error: this boolean expression can be simplified\n   --> booleans.rs:15:13\n    |\n 15 |     let _ = !false;\n-   |             ^^^^^^ help: try `true`\n+   |             ^^^^^^ help: try: `true`\n \n error: this boolean expression can be simplified\n   --> booleans.rs:16:13\n    |\n 16 |     let _ = !!a;\n-   |             ^^^ help: try `a`\n+   |             ^^^ help: try: `a`\n \n error: this boolean expression contains a logic bug\n   --> booleans.rs:17:13\n    |\n 17 |     let _ = false && a;\n-   |             ^^^^^^^^^^ help: it would look like the following `false`\n+   |             ^^^^^^^^^^ help: it would look like the following: `false`\n    |\n help: this expression can be optimized out by applying boolean operations to the outer expression\n   --> booleans.rs:17:22\n@@ -47,19 +47,31 @@ error: this boolean expression can be simplified\n   --> booleans.rs:18:13\n    |\n 18 |     let _ = false || a;\n-   |             ^^^^^^^^^^ help: try `a`\n+   |             ^^^^^^^^^^ help: try: `a`\n+\n+error: this boolean expression contains a logic bug\n+  --> booleans.rs:20:13\n+   |\n+20 |     let _ = cfg!(you_shall_not_not_pass) && a;\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: it would look like the following: `false`\n+   |\n+help: this expression can be optimized out by applying boolean operations to the outer expression\n+  --> booleans.rs:20:45\n+   |\n+20 |     let _ = cfg!(you_shall_not_not_pass) && a;\n+   |                                             ^\n \n error: this boolean expression can be simplified\n   --> booleans.rs:23:13\n    |\n 23 |     let _ = !(!a && b);\n-   |             ^^^^^^^^^^ help: try `!b || a`\n+   |             ^^^^^^^^^^ help: try: `!b || a`\n \n error: this boolean expression contains a logic bug\n   --> booleans.rs:33:13\n    |\n 33 |     let _ = a == b && a != b;\n-   |             ^^^^^^^^^^^^^^^^ help: it would look like the following `false`\n+   |             ^^^^^^^^^^^^^^^^ help: it would look like the following: `false`\n    |\n help: this expression can be optimized out by applying boolean operations to the outer expression\n   --> booleans.rs:33:13\n@@ -97,7 +109,7 @@ error: this boolean expression contains a logic bug\n   --> booleans.rs:36:13\n    |\n 36 |     let _ = a < b && a >= b;\n-   |             ^^^^^^^^^^^^^^^ help: it would look like the following `false`\n+   |             ^^^^^^^^^^^^^^^ help: it would look like the following: `false`\n    |\n help: this expression can be optimized out by applying boolean operations to the outer expression\n   --> booleans.rs:36:13\n@@ -109,7 +121,7 @@ error: this boolean expression contains a logic bug\n   --> booleans.rs:37:13\n    |\n 37 |     let _ = a > b && a <= b;\n-   |             ^^^^^^^^^^^^^^^ help: it would look like the following `false`\n+   |             ^^^^^^^^^^^^^^^ help: it would look like the following: `false`\n    |\n help: this expression can be optimized out by applying boolean operations to the outer expression\n   --> booleans.rs:37:13\n@@ -130,7 +142,7 @@ help: try\n 39 |     let _ = !(a == b && c == d);\n    |             ^^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to 13 previous errors\n+error: aborting due to 14 previous errors\n \n \n To learn more, run the command again with --verbose."}, {"sha": "e494bdd214ee13b5188d14b58bfa0fb4c9c25e07", "filename": "clippy_tests/examples/borrow_box.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2abd1f73d93e3e57515121cc98cc14fe6ccb17dd/clippy_tests%2Fexamples%2Fborrow_box.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2abd1f73d93e3e57515121cc98cc14fe6ccb17dd/clippy_tests%2Fexamples%2Fborrow_box.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fborrow_box.stderr?ref=2abd1f73d93e3e57515121cc98cc14fe6ccb17dd", "patch": "@@ -2,7 +2,7 @@ error: you seem to be trying to use `&Box<T>`. Consider using just `&T`\n  --> borrow_box.rs:9:19\n   |\n 9 | pub fn test1(foo: &mut Box<bool>) {\n-  |                   ^^^^^^^^^^^^^^ help: try `&mut bool`\n+  |                   ^^^^^^^^^^^^^^ help: try: `&mut bool`\n   |\n note: lint level defined here\n  --> borrow_box.rs:4:9\n@@ -14,19 +14,19 @@ error: you seem to be trying to use `&Box<T>`. Consider using just `&T`\n   --> borrow_box.rs:14:14\n    |\n 14 |     let foo: &Box<bool>;\n-   |              ^^^^^^^^^^ help: try `&bool`\n+   |              ^^^^^^^^^^ help: try: `&bool`\n \n error: you seem to be trying to use `&Box<T>`. Consider using just `&T`\n   --> borrow_box.rs:18:10\n    |\n 18 |     foo: &'a Box<bool>\n-   |          ^^^^^^^^^^^^^ help: try `&'a bool`\n+   |          ^^^^^^^^^^^^^ help: try: `&'a bool`\n \n error: you seem to be trying to use `&Box<T>`. Consider using just `&T`\n   --> borrow_box.rs:22:17\n    |\n 22 |     fn test4(a: &Box<bool>);\n-   |                 ^^^^^^^^^^ help: try `&bool`\n+   |                 ^^^^^^^^^^ help: try: `&bool`\n \n error: aborting due to 4 previous errors\n "}, {"sha": "067f1e68c6ebed13d4e660ce7f708f6f0f7fe3c2", "filename": "clippy_tests/examples/cmp_owned.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/2abd1f73d93e3e57515121cc98cc14fe6ccb17dd/clippy_tests%2Fexamples%2Fcmp_owned.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2abd1f73d93e3e57515121cc98cc14fe6ccb17dd/clippy_tests%2Fexamples%2Fcmp_owned.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fcmp_owned.stderr?ref=2abd1f73d93e3e57515121cc98cc14fe6ccb17dd", "patch": "@@ -2,33 +2,33 @@ error: this creates an owned instance just for comparison\n  --> cmp_owned.rs:8:14\n   |\n 8 |         x != \"foo\".to_string();\n-  |              ^^^^^^^^^^^^^^^^^ help: try `\"foo\"`\n+  |              ^^^^^^^^^^^^^^^^^ help: try: `\"foo\"`\n   |\n   = note: `-D cmp-owned` implied by `-D warnings`\n \n error: this creates an owned instance just for comparison\n   --> cmp_owned.rs:10:9\n    |\n 10 |         \"foo\".to_string() != x;\n-   |         ^^^^^^^^^^^^^^^^^ help: try `\"foo\"`\n+   |         ^^^^^^^^^^^^^^^^^ help: try: `\"foo\"`\n \n error: this creates an owned instance just for comparison\n   --> cmp_owned.rs:17:10\n    |\n 17 |     x != \"foo\".to_owned();\n-   |          ^^^^^^^^^^^^^^^^ help: try `\"foo\"`\n+   |          ^^^^^^^^^^^^^^^^ help: try: `\"foo\"`\n \n error: this creates an owned instance just for comparison\n   --> cmp_owned.rs:19:10\n    |\n 19 |     x != String::from(\"foo\");\n-   |          ^^^^^^^^^^^^^^^^^^^ help: try `\"foo\"`\n+   |          ^^^^^^^^^^^^^^^^^^^ help: try: `\"foo\"`\n \n error: this creates an owned instance just for comparison\n   --> cmp_owned.rs:23:5\n    |\n 23 |     Foo.to_owned() == Foo;\n-   |     ^^^^^^^^^^^^^^ help: try `Foo`\n+   |     ^^^^^^^^^^^^^^ help: try: `Foo`\n \n error: this creates an owned instance just for comparison\n   --> cmp_owned.rs:30:9"}, {"sha": "dd29d5e14f25fbfd31c8db2fbddd613dace95a86", "filename": "clippy_tests/examples/entry.stderr", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/2abd1f73d93e3e57515121cc98cc14fe6ccb17dd/clippy_tests%2Fexamples%2Fentry.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2abd1f73d93e3e57515121cc98cc14fe6ccb17dd/clippy_tests%2Fexamples%2Fentry.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fentry.stderr?ref=2abd1f73d93e3e57515121cc98cc14fe6ccb17dd", "patch": "@@ -2,45 +2,45 @@ error: usage of `contains_key` followed by `insert` on a `HashMap`\n   --> entry.rs:13:5\n    |\n 13 |     if !m.contains_key(&k) { m.insert(k, v); }\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `m.entry(k).or_insert(v)`\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using: `m.entry(k).or_insert(v)`\n    |\n    = note: `-D map-entry` implied by `-D warnings`\n \n error: usage of `contains_key` followed by `insert` on a `HashMap`\n   --> entry.rs:17:5\n    |\n 17 |     if !m.contains_key(&k) { foo(); m.insert(k, v); }\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `m.entry(k)`\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using: `m.entry(k)`\n \n error: usage of `contains_key` followed by `insert` on a `HashMap`\n   --> entry.rs:21:5\n    |\n 21 |     if !m.contains_key(&k) { m.insert(k, v) } else { None };\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `m.entry(k)`\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using: `m.entry(k)`\n \n error: usage of `contains_key` followed by `insert` on a `HashMap`\n   --> entry.rs:25:5\n    |\n 25 |     if m.contains_key(&k) { None } else { m.insert(k, v) };\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `m.entry(k)`\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using: `m.entry(k)`\n \n error: usage of `contains_key` followed by `insert` on a `HashMap`\n   --> entry.rs:29:5\n    |\n 29 |     if !m.contains_key(&k) { foo(); m.insert(k, v) } else { None };\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `m.entry(k)`\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using: `m.entry(k)`\n \n error: usage of `contains_key` followed by `insert` on a `HashMap`\n   --> entry.rs:33:5\n    |\n 33 |     if m.contains_key(&k) { None } else { foo(); m.insert(k, v) };\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `m.entry(k)`\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using: `m.entry(k)`\n \n error: usage of `contains_key` followed by `insert` on a `BTreeMap`\n   --> entry.rs:37:5\n    |\n 37 |     if !m.contains_key(&k) { foo(); m.insert(k, v) } else { None };\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `m.entry(k)`\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using: `m.entry(k)`\n \n error: aborting due to 7 previous errors\n "}, {"sha": "87e0e88584ace3d766ee36003ec90d4b556b5988", "filename": "clippy_tests/examples/eq_op.stderr", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/2abd1f73d93e3e57515121cc98cc14fe6ccb17dd/clippy_tests%2Fexamples%2Feq_op.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2abd1f73d93e3e57515121cc98cc14fe6ccb17dd/clippy_tests%2Fexamples%2Feq_op.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Feq_op.stderr?ref=2abd1f73d93e3e57515121cc98cc14fe6ccb17dd", "patch": "@@ -2,39 +2,39 @@ error: this boolean expression can be simplified\n   --> eq_op.rs:37:5\n    |\n 37 |     true && true;\n-   |     ^^^^^^^^^^^^ help: try `true`\n+   |     ^^^^^^^^^^^^ help: try: `true`\n    |\n    = note: `-D nonminimal-bool` implied by `-D warnings`\n \n error: this boolean expression can be simplified\n   --> eq_op.rs:39:5\n    |\n 39 |     true || true;\n-   |     ^^^^^^^^^^^^ help: try `true`\n+   |     ^^^^^^^^^^^^ help: try: `true`\n \n error: this boolean expression can be simplified\n   --> eq_op.rs:45:5\n    |\n 45 |     a == b && b == a;\n-   |     ^^^^^^^^^^^^^^^^ help: try `a == b`\n+   |     ^^^^^^^^^^^^^^^^ help: try: `a == b`\n \n error: this boolean expression can be simplified\n   --> eq_op.rs:46:5\n    |\n 46 |     a != b && b != a;\n-   |     ^^^^^^^^^^^^^^^^ help: try `a != b`\n+   |     ^^^^^^^^^^^^^^^^ help: try: `a != b`\n \n error: this boolean expression can be simplified\n   --> eq_op.rs:47:5\n    |\n 47 |     a < b && b > a;\n-   |     ^^^^^^^^^^^^^^ help: try `a < b`\n+   |     ^^^^^^^^^^^^^^ help: try: `a < b`\n \n error: this boolean expression can be simplified\n   --> eq_op.rs:48:5\n    |\n 48 |     a <= b && b >= a;\n-   |     ^^^^^^^^^^^^^^^^ help: try `a <= b`\n+   |     ^^^^^^^^^^^^^^^^ help: try: `a <= b`\n \n error: equal expressions as operands to `==`\n   --> eq_op.rs:10:5\n@@ -200,7 +200,7 @@ error: taken reference of right operand\n 89 |     let z = x & &y;\n    |             ^^^^--\n    |                 |\n-   |                 help: use the right value directly `y`\n+   |                 help: use the right value directly: `y`\n    |\n    = note: `-D op-ref` implied by `-D warnings`\n "}, {"sha": "f23f98f2bb7c3705fe0344b5df2b14b3569b246c", "filename": "clippy_tests/examples/eta.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2abd1f73d93e3e57515121cc98cc14fe6ccb17dd/clippy_tests%2Fexamples%2Feta.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2abd1f73d93e3e57515121cc98cc14fe6ccb17dd/clippy_tests%2Fexamples%2Feta.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Feta.stderr?ref=2abd1f73d93e3e57515121cc98cc14fe6ccb17dd", "patch": "@@ -2,21 +2,21 @@ error: redundant closure found\n  --> eta.rs:7:27\n   |\n 7 |     let a = Some(1u8).map(|a| foo(a));\n-  |                           ^^^^^^^^^^ help: remove closure as shown: `foo`\n+  |                           ^^^^^^^^^^ help: remove closure as shown:: `foo`\n   |\n   = note: `-D redundant-closure` implied by `-D warnings`\n \n error: redundant closure found\n  --> eta.rs:8:10\n   |\n 8 |     meta(|a| foo(a));\n-  |          ^^^^^^^^^^ help: remove closure as shown: `foo`\n+  |          ^^^^^^^^^^ help: remove closure as shown:: `foo`\n \n error: redundant closure found\n  --> eta.rs:9:27\n   |\n 9 |     let c = Some(1u8).map(|a| {1+2; foo}(a));\n-  |                           ^^^^^^^^^^^^^^^^^ help: remove closure as shown: `{1+2; foo}`\n+  |                           ^^^^^^^^^^^^^^^^^ help: remove closure as shown:: `{1+2; foo}`\n \n error: this expression borrows a reference that is immediately dereferenced by the compiler\n   --> eta.rs:11:21\n@@ -30,7 +30,7 @@ error: redundant closure found\n   --> eta.rs:18:27\n    |\n 18 |     let e = Some(1u8).map(|a| generic(a));\n-   |                           ^^^^^^^^^^^^^^ help: remove closure as shown: `generic`\n+   |                           ^^^^^^^^^^^^^^ help: remove closure as shown:: `generic`\n \n error: aborting due to 5 previous errors\n "}, {"sha": "476c94c8a5ef5d9c42585ce0b7f03ef03475f79f", "filename": "clippy_tests/examples/float_cmp.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/2abd1f73d93e3e57515121cc98cc14fe6ccb17dd/clippy_tests%2Fexamples%2Ffloat_cmp.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2abd1f73d93e3e57515121cc98cc14fe6ccb17dd/clippy_tests%2Fexamples%2Ffloat_cmp.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Ffloat_cmp.stderr?ref=2abd1f73d93e3e57515121cc98cc14fe6ccb17dd", "patch": "@@ -2,7 +2,7 @@ error: strict comparison of f32 or f64\n   --> float_cmp.rs:43:5\n    |\n 43 |     ONE == 1f32;\n-   |     ^^^^^^^^^^^ help: consider comparing them within some error `(ONE - 1f32).abs() < error`\n+   |     ^^^^^^^^^^^ help: consider comparing them within some error: `(ONE - 1f32).abs() < error`\n    |\n    = note: `-D float-cmp` implied by `-D warnings`\n note: std::f32::EPSILON and std::f64::EPSILON are available.\n@@ -15,7 +15,7 @@ error: strict comparison of f32 or f64\n   --> float_cmp.rs:44:5\n    |\n 44 |     ONE == 1.0 + 0.0;\n-   |     ^^^^^^^^^^^^^^^^ help: consider comparing them within some error `(ONE - (1.0 + 0.0)).abs() < error`\n+   |     ^^^^^^^^^^^^^^^^ help: consider comparing them within some error: `(ONE - (1.0 + 0.0)).abs() < error`\n    |\n note: std::f32::EPSILON and std::f64::EPSILON are available.\n   --> float_cmp.rs:44:5\n@@ -27,7 +27,7 @@ error: strict comparison of f32 or f64\n   --> float_cmp.rs:45:5\n    |\n 45 |     ONE + ONE == ZERO + ONE + ONE;\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider comparing them within some error `(ONE + ONE - (ZERO + ONE + ONE)).abs() < error`\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider comparing them within some error: `(ONE + ONE - (ZERO + ONE + ONE)).abs() < error`\n    |\n note: std::f32::EPSILON and std::f64::EPSILON are available.\n   --> float_cmp.rs:45:5\n@@ -39,7 +39,7 @@ error: strict comparison of f32 or f64\n   --> float_cmp.rs:46:5\n    |\n 46 |     ONE != 2.0;\n-   |     ^^^^^^^^^^ help: consider comparing them within some error `(ONE - 2.0).abs() < error`\n+   |     ^^^^^^^^^^ help: consider comparing them within some error: `(ONE - 2.0).abs() < error`\n    |\n note: std::f32::EPSILON and std::f64::EPSILON are available.\n   --> float_cmp.rs:46:5\n@@ -51,7 +51,7 @@ error: strict comparison of f32 or f64\n   --> float_cmp.rs:48:5\n    |\n 48 |     twice(ONE) != ONE;\n-   |     ^^^^^^^^^^^^^^^^^ help: consider comparing them within some error `(twice(ONE) - ONE).abs() < error`\n+   |     ^^^^^^^^^^^^^^^^^ help: consider comparing them within some error: `(twice(ONE) - ONE).abs() < error`\n    |\n note: std::f32::EPSILON and std::f64::EPSILON are available.\n   --> float_cmp.rs:48:5\n@@ -63,7 +63,7 @@ error: strict comparison of f32 or f64\n   --> float_cmp.rs:49:5\n    |\n 49 |     ONE as f64 != 2.0;\n-   |     ^^^^^^^^^^^^^^^^^ help: consider comparing them within some error `(ONE as f64 - 2.0).abs() < error`\n+   |     ^^^^^^^^^^^^^^^^^ help: consider comparing them within some error: `(ONE as f64 - 2.0).abs() < error`\n    |\n note: std::f32::EPSILON and std::f64::EPSILON are available.\n   --> float_cmp.rs:49:5\n@@ -75,7 +75,7 @@ error: strict comparison of f32 or f64\n   --> float_cmp.rs:54:5\n    |\n 54 |     x == 1.0;\n-   |     ^^^^^^^^ help: consider comparing them within some error `(x - 1.0).abs() < error`\n+   |     ^^^^^^^^ help: consider comparing them within some error: `(x - 1.0).abs() < error`\n    |\n note: std::f32::EPSILON and std::f64::EPSILON are available.\n   --> float_cmp.rs:54:5\n@@ -87,7 +87,7 @@ error: strict comparison of f32 or f64\n   --> float_cmp.rs:57:5\n    |\n 57 |     twice(x) != twice(ONE as f64);\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider comparing them within some error `(twice(x) - twice(ONE as f64)).abs() < error`\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider comparing them within some error: `(twice(x) - twice(ONE as f64)).abs() < error`\n    |\n note: std::f32::EPSILON and std::f64::EPSILON are available.\n   --> float_cmp.rs:57:5"}, {"sha": "5cf8e611f4da2a0fb8fb99853926bef5ccf8f44b", "filename": "clippy_tests/examples/for_loop.stderr", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/2abd1f73d93e3e57515121cc98cc14fe6ccb17dd/clippy_tests%2Fexamples%2Ffor_loop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2abd1f73d93e3e57515121cc98cc14fe6ccb17dd/clippy_tests%2Fexamples%2Ffor_loop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Ffor_loop.stderr?ref=2abd1f73d93e3e57515121cc98cc14fe6ccb17dd", "patch": "@@ -332,83 +332,83 @@ error: it is more idiomatic to loop over references to containers instead of usi\n    --> for_loop.rs:203:15\n     |\n 203 |     for _v in vec.iter() { }\n-    |               ^^^^^^^^^^ help: to write this more concisely, try `&vec`\n+    |               ^^^^^^^^^^ help: to write this more concisely, try: `&vec`\n     |\n     = note: `-D explicit-iter-loop` implied by `-D warnings`\n \n error: it is more idiomatic to loop over references to containers instead of using explicit iteration methods\n    --> for_loop.rs:205:15\n     |\n 205 |     for _v in vec.iter_mut() { }\n-    |               ^^^^^^^^^^^^^^ help: to write this more concisely, try `&mut vec`\n+    |               ^^^^^^^^^^^^^^ help: to write this more concisely, try: `&mut vec`\n \n error: it is more idiomatic to loop over containers instead of using explicit iteration methods`\n    --> for_loop.rs:208:15\n     |\n 208 |     for _v in out_vec.into_iter() { }\n-    |               ^^^^^^^^^^^^^^^^^^^ help: to write this more concisely, try `out_vec`\n+    |               ^^^^^^^^^^^^^^^^^^^ help: to write this more concisely, try: `out_vec`\n     |\n     = note: `-D explicit-into-iter-loop` implied by `-D warnings`\n \n error: it is more idiomatic to loop over references to containers instead of using explicit iteration methods\n    --> for_loop.rs:211:15\n     |\n 211 |     for _v in array.into_iter() {}\n-    |               ^^^^^^^^^^^^^^^^^ help: to write this more concisely, try `&array`\n+    |               ^^^^^^^^^^^^^^^^^ help: to write this more concisely, try: `&array`\n \n error: it is more idiomatic to loop over references to containers instead of using explicit iteration methods\n    --> for_loop.rs:216:15\n     |\n 216 |     for _v in [1, 2, 3].iter() { }\n-    |               ^^^^^^^^^^^^^^^^ help: to write this more concisely, try `&[1, 2, 3]`\n+    |               ^^^^^^^^^^^^^^^^ help: to write this more concisely, try: `&[1, 2, 3]`\n \n error: it is more idiomatic to loop over references to containers instead of using explicit iteration methods\n    --> for_loop.rs:220:15\n     |\n 220 |     for _v in [0; 32].iter() {}\n-    |               ^^^^^^^^^^^^^^ help: to write this more concisely, try `&[0; 32]`\n+    |               ^^^^^^^^^^^^^^ help: to write this more concisely, try: `&[0; 32]`\n \n error: it is more idiomatic to loop over references to containers instead of using explicit iteration methods\n    --> for_loop.rs:225:15\n     |\n 225 |     for _v in ll.iter() { }\n-    |               ^^^^^^^^^ help: to write this more concisely, try `&ll`\n+    |               ^^^^^^^^^ help: to write this more concisely, try: `&ll`\n \n error: it is more idiomatic to loop over references to containers instead of using explicit iteration methods\n    --> for_loop.rs:228:15\n     |\n 228 |     for _v in vd.iter() { }\n-    |               ^^^^^^^^^ help: to write this more concisely, try `&vd`\n+    |               ^^^^^^^^^ help: to write this more concisely, try: `&vd`\n \n error: it is more idiomatic to loop over references to containers instead of using explicit iteration methods\n    --> for_loop.rs:231:15\n     |\n 231 |     for _v in bh.iter() { }\n-    |               ^^^^^^^^^ help: to write this more concisely, try `&bh`\n+    |               ^^^^^^^^^ help: to write this more concisely, try: `&bh`\n \n error: it is more idiomatic to loop over references to containers instead of using explicit iteration methods\n    --> for_loop.rs:234:15\n     |\n 234 |     for _v in hm.iter() { }\n-    |               ^^^^^^^^^ help: to write this more concisely, try `&hm`\n+    |               ^^^^^^^^^ help: to write this more concisely, try: `&hm`\n \n error: it is more idiomatic to loop over references to containers instead of using explicit iteration methods\n    --> for_loop.rs:237:15\n     |\n 237 |     for _v in bt.iter() { }\n-    |               ^^^^^^^^^ help: to write this more concisely, try `&bt`\n+    |               ^^^^^^^^^ help: to write this more concisely, try: `&bt`\n \n error: it is more idiomatic to loop over references to containers instead of using explicit iteration methods\n    --> for_loop.rs:240:15\n     |\n 240 |     for _v in hs.iter() { }\n-    |               ^^^^^^^^^ help: to write this more concisely, try `&hs`\n+    |               ^^^^^^^^^ help: to write this more concisely, try: `&hs`\n \n error: it is more idiomatic to loop over references to containers instead of using explicit iteration methods\n    --> for_loop.rs:243:15\n     |\n 243 |     for _v in bs.iter() { }\n-    |               ^^^^^^^^^ help: to write this more concisely, try `&bs`\n+    |               ^^^^^^^^^ help: to write this more concisely, try: `&bs`\n \n error: you are iterating over `Iterator::next()` which is an Option; this will compile but is probably not what you want\n    --> for_loop.rs:245:5"}, {"sha": "aefe624a8d40e73b19c616e4522cbe513efd176c", "filename": "clippy_tests/examples/if_let_redundant_pattern_matching.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2abd1f73d93e3e57515121cc98cc14fe6ccb17dd/clippy_tests%2Fexamples%2Fif_let_redundant_pattern_matching.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2abd1f73d93e3e57515121cc98cc14fe6ccb17dd/clippy_tests%2Fexamples%2Fif_let_redundant_pattern_matching.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fif_let_redundant_pattern_matching.stderr?ref=2abd1f73d93e3e57515121cc98cc14fe6ccb17dd", "patch": "@@ -2,27 +2,27 @@ error: redundant pattern matching, consider using `is_ok()`\n  --> if_let_redundant_pattern_matching.rs:9:12\n   |\n 9 |     if let Ok(_) = Ok::<i32, i32>(42) {}\n-  |     -------^^^^^--------------------- help: try this `if Ok::<i32, i32>(42).is_ok()`\n+  |     -------^^^^^--------------------- help: try this: `if Ok::<i32, i32>(42).is_ok()`\n   |\n   = note: `-D if-let-redundant-pattern-matching` implied by `-D warnings`\n \n error: redundant pattern matching, consider using `is_err()`\n   --> if_let_redundant_pattern_matching.rs:11:12\n    |\n 11 |     if let Err(_) = Err::<i32, i32>(42) {\n-   |     -------^^^^^^---------------------- help: try this `if Err::<i32, i32>(42).is_err()`\n+   |     -------^^^^^^---------------------- help: try this: `if Err::<i32, i32>(42).is_err()`\n \n error: redundant pattern matching, consider using `is_none()`\n   --> if_let_redundant_pattern_matching.rs:14:12\n    |\n 14 |     if let None = None::<()> {\n-   |     -------^^^^------------- help: try this `if None::<()>.is_none()`\n+   |     -------^^^^------------- help: try this: `if None::<()>.is_none()`\n \n error: redundant pattern matching, consider using `is_some()`\n   --> if_let_redundant_pattern_matching.rs:17:12\n    |\n 17 |     if let Some(_) = Some(42) {\n-   |     -------^^^^^^^----------- help: try this `if Some(42).is_some()`\n+   |     -------^^^^^^^----------- help: try this: `if Some(42).is_some()`\n \n error: aborting due to 4 previous errors\n "}, {"sha": "06e8996deb7bbbc7d8b95d4bdbca347a608ede0f", "filename": "clippy_tests/examples/inconsistent_digit_grouping.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2abd1f73d93e3e57515121cc98cc14fe6ccb17dd/clippy_tests%2Fexamples%2Finconsistent_digit_grouping.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2abd1f73d93e3e57515121cc98cc14fe6ccb17dd/clippy_tests%2Fexamples%2Finconsistent_digit_grouping.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Finconsistent_digit_grouping.rs?ref=2abd1f73d93e3e57515121cc98cc14fe6ccb17dd", "patch": "@@ -0,0 +1,8 @@\n+#![feature(plugin)]\n+#![plugin(clippy)]\n+#[warn(inconsistent_digit_grouping)]\n+#[allow(unused_variables)]\n+fn main() {\n+    let good = (123, 1_234, 1_2345_6789, 123_f32, 1_234.12_f32, 1_234.123_4_f32, 1.123_456_7_f32);\n+    let bad = (1_23_456, 1_234_5678, 1234_567, 1_234.5678_f32, 1.234_5678_f32);\n+}"}, {"sha": "f86353eb266fd675506cc98bd72bd219fffc1cf8", "filename": "clippy_tests/examples/inconsistent_digit_grouping.stderr", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/2abd1f73d93e3e57515121cc98cc14fe6ccb17dd/clippy_tests%2Fexamples%2Finconsistent_digit_grouping.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2abd1f73d93e3e57515121cc98cc14fe6ccb17dd/clippy_tests%2Fexamples%2Finconsistent_digit_grouping.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Finconsistent_digit_grouping.stderr?ref=2abd1f73d93e3e57515121cc98cc14fe6ccb17dd", "patch": "@@ -0,0 +1,45 @@\n+error: digits grouped inconsistently by underscores\n+ --> inconsistent_digit_grouping.rs:7:16\n+  |\n+7 |     let bad = (1_23_456, 1_234_5678, 1234_567, 1_234.5678_f32, 1.234_5678_f32);\n+  |                ^^^^^^^^\n+  |\n+  = note: `-D inconsistent-digit-grouping` implied by `-D warnings`\n+  = help: consider making each group three or four digits\n+\n+error: digits grouped inconsistently by underscores\n+ --> inconsistent_digit_grouping.rs:7:26\n+  |\n+7 |     let bad = (1_23_456, 1_234_5678, 1234_567, 1_234.5678_f32, 1.234_5678_f32);\n+  |                          ^^^^^^^^^^\n+  |\n+  = help: consider making each group three or four digits\n+\n+error: digits grouped inconsistently by underscores\n+ --> inconsistent_digit_grouping.rs:7:38\n+  |\n+7 |     let bad = (1_23_456, 1_234_5678, 1234_567, 1_234.5678_f32, 1.234_5678_f32);\n+  |                                      ^^^^^^^^\n+  |\n+  = help: consider making each group three or four digits\n+\n+error: digits grouped inconsistently by underscores\n+ --> inconsistent_digit_grouping.rs:7:48\n+  |\n+7 |     let bad = (1_23_456, 1_234_5678, 1234_567, 1_234.5678_f32, 1.234_5678_f32);\n+  |                                                ^^^^^^^^^^^^^^\n+  |\n+  = help: consider making each group three or four digits\n+\n+error: digits grouped inconsistently by underscores\n+ --> inconsistent_digit_grouping.rs:7:64\n+  |\n+7 |     let bad = (1_23_456, 1_234_5678, 1234_567, 1_234.5678_f32, 1.234_5678_f32);\n+  |                                                                ^^^^^^^^^^^^^^\n+  |\n+  = help: consider making each group three or four digits\n+\n+error: aborting due to 5 previous errors\n+\n+\n+To learn more, run the command again with --verbose."}, {"sha": "65bcdc7435e8a7df3b789a7aed063647a18574a9", "filename": "clippy_tests/examples/large_digit_groups.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2abd1f73d93e3e57515121cc98cc14fe6ccb17dd/clippy_tests%2Fexamples%2Flarge_digit_groups.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2abd1f73d93e3e57515121cc98cc14fe6ccb17dd/clippy_tests%2Fexamples%2Flarge_digit_groups.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Flarge_digit_groups.rs?ref=2abd1f73d93e3e57515121cc98cc14fe6ccb17dd", "patch": "@@ -0,0 +1,8 @@\n+#![feature(plugin)]\n+#![plugin(clippy)]\n+#[warn(large_digit_groups)]\n+#[allow(unused_variables)]\n+fn main() {\n+    let good = (0b1011_i64, 0o1_234_u32, 0x1_234_567, 1_2345_6789, 1234_f32, 1_234.12_f32, 1_234.123_f32, 1.123_4_f32);\n+    let bad = (0b1_10110_i64, 0x1_23456_78901_usize, 1_23456_f32, 1_23456.12_f32, 1_23456.12345_f32, 1_23456.12345_6_f32);\n+}"}, {"sha": "75d6461a5473d896c410366a87f26ec81c8550a4", "filename": "clippy_tests/examples/large_digit_groups.stderr", "status": "added", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/rust-lang/rust/blob/2abd1f73d93e3e57515121cc98cc14fe6ccb17dd/clippy_tests%2Fexamples%2Flarge_digit_groups.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2abd1f73d93e3e57515121cc98cc14fe6ccb17dd/clippy_tests%2Fexamples%2Flarge_digit_groups.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Flarge_digit_groups.stderr?ref=2abd1f73d93e3e57515121cc98cc14fe6ccb17dd", "patch": "@@ -0,0 +1,53 @@\n+error: digit groups should be smaller\n+ --> large_digit_groups.rs:7:16\n+  |\n+7 |     let bad = (0b1_10110_i64, 0x1_23456_78901_usize, 1_23456_f32, 1_23456.12_f32, 1_23456.12345_f32, 1_23456.12345_6_f32);\n+  |                ^^^^^^^^^^^^^\n+  |\n+  = note: `-D large-digit-groups` implied by `-D warnings`\n+  = help: consider using groups of three or four digits\n+\n+error: digit groups should be smaller\n+ --> large_digit_groups.rs:7:31\n+  |\n+7 |     let bad = (0b1_10110_i64, 0x1_23456_78901_usize, 1_23456_f32, 1_23456.12_f32, 1_23456.12345_f32, 1_23456.12345_6_f32);\n+  |                               ^^^^^^^^^^^^^^^^^^^^^\n+  |\n+  = help: consider using groups of three or four digits\n+\n+error: digit groups should be smaller\n+ --> large_digit_groups.rs:7:54\n+  |\n+7 |     let bad = (0b1_10110_i64, 0x1_23456_78901_usize, 1_23456_f32, 1_23456.12_f32, 1_23456.12345_f32, 1_23456.12345_6_f32);\n+  |                                                      ^^^^^^^^^^^\n+  |\n+  = help: consider using groups of three or four digits\n+\n+error: digit groups should be smaller\n+ --> large_digit_groups.rs:7:67\n+  |\n+7 |     let bad = (0b1_10110_i64, 0x1_23456_78901_usize, 1_23456_f32, 1_23456.12_f32, 1_23456.12345_f32, 1_23456.12345_6_f32);\n+  |                                                                   ^^^^^^^^^^^^^^\n+  |\n+  = help: consider using groups of three or four digits\n+\n+error: digit groups should be smaller\n+ --> large_digit_groups.rs:7:83\n+  |\n+7 |     let bad = (0b1_10110_i64, 0x1_23456_78901_usize, 1_23456_f32, 1_23456.12_f32, 1_23456.12345_f32, 1_23456.12345_6_f32);\n+  |                                                                                   ^^^^^^^^^^^^^^^^^\n+  |\n+  = help: consider using groups of three or four digits\n+\n+error: digit groups should be smaller\n+ --> large_digit_groups.rs:7:102\n+  |\n+7 |     let bad = (0b1_10110_i64, 0x1_23456_78901_usize, 1_23456_f32, 1_23456.12_f32, 1_23456.12345_f32, 1_23456.12345_6_f32);\n+  |                                                                                                      ^^^^^^^^^^^^^^^^^^^\n+  |\n+  = help: consider using groups of three or four digits\n+\n+error: aborting due to 6 previous errors\n+\n+\n+To learn more, run the command again with --verbose."}, {"sha": "a11130471069084b0e1d492b75a0cd12e4455e7e", "filename": "clippy_tests/examples/len_zero.stderr", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/2abd1f73d93e3e57515121cc98cc14fe6ccb17dd/clippy_tests%2Fexamples%2Flen_zero.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2abd1f73d93e3e57515121cc98cc14fe6ccb17dd/clippy_tests%2Fexamples%2Flen_zero.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Flen_zero.stderr?ref=2abd1f73d93e3e57515121cc98cc14fe6ccb17dd", "patch": "@@ -46,45 +46,45 @@ error: length comparison to zero\n    --> len_zero.rs:130:8\n     |\n 130 |     if x.len() == 0 {\n-    |        ^^^^^^^^^^^^ help: using `is_empty` is more concise: `x.is_empty()`\n+    |        ^^^^^^^^^^^^ help: using `is_empty` is more concise:: `x.is_empty()`\n     |\n     = note: `-D len-zero` implied by `-D warnings`\n \n error: length comparison to zero\n    --> len_zero.rs:134:8\n     |\n 134 |     if \"\".len() == 0 {\n-    |        ^^^^^^^^^^^^^ help: using `is_empty` is more concise: `\"\".is_empty()`\n+    |        ^^^^^^^^^^^^^ help: using `is_empty` is more concise:: `\"\".is_empty()`\n \n error: length comparison to zero\n    --> len_zero.rs:148:8\n     |\n 148 |     if has_is_empty.len() == 0 {\n-    |        ^^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is more concise: `has_is_empty.is_empty()`\n+    |        ^^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is more concise:: `has_is_empty.is_empty()`\n \n error: length comparison to zero\n    --> len_zero.rs:151:8\n     |\n 151 |     if has_is_empty.len() != 0 {\n-    |        ^^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is more concise: `!has_is_empty.is_empty()`\n+    |        ^^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is more concise:: `!has_is_empty.is_empty()`\n \n error: length comparison to zero\n    --> len_zero.rs:154:8\n     |\n 154 |     if has_is_empty.len() > 0 {\n-    |        ^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is more concise: `!has_is_empty.is_empty()`\n+    |        ^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is more concise:: `!has_is_empty.is_empty()`\n \n error: length comparison to zero\n    --> len_zero.rs:160:8\n     |\n 160 |     if with_is_empty.len() == 0 {\n-    |        ^^^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is more concise: `with_is_empty.is_empty()`\n+    |        ^^^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is more concise:: `with_is_empty.is_empty()`\n \n error: length comparison to zero\n    --> len_zero.rs:172:8\n     |\n 172 |     if b.len() != 0 {\n-    |        ^^^^^^^^^^^^ help: using `is_empty` is more concise: `!b.is_empty()`\n+    |        ^^^^^^^^^^^^ help: using `is_empty` is more concise:: `!b.is_empty()`\n \n error: aborting due to 11 previous errors\n "}, {"sha": "eda6229427acecccb596e6353a34c0763e139f02", "filename": "clippy_tests/examples/let_if_seq.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2abd1f73d93e3e57515121cc98cc14fe6ccb17dd/clippy_tests%2Fexamples%2Flet_if_seq.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2abd1f73d93e3e57515121cc98cc14fe6ccb17dd/clippy_tests%2Fexamples%2Flet_if_seq.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Flet_if_seq.stderr?ref=2abd1f73d93e3e57515121cc98cc14fe6ccb17dd", "patch": "@@ -5,7 +5,7 @@ error: `if _ { .. } else { .. }` is an expression\n 58 | |     if f() {\n 59 | |         foo = 42;\n 60 | |     }\n-   | |_____^ help: it is more idiomatic to write `let <mut> foo = if f() { 42 } else { 0 };`\n+   | |_____^ help: it is more idiomatic to write: `let <mut> foo = if f() { 42 } else { 0 };`\n    |\n    = note: `-D useless-let-if-seq` implied by `-D warnings`\n    = note: you might not need `mut` at all\n@@ -20,7 +20,7 @@ error: `if _ { .. } else { .. }` is an expression\n ...  |\n 68 | |         f();\n 69 | |     }\n-   | |_____^ help: it is more idiomatic to write `let <mut> bar = if f() { ..; 42 } else { ..; 0 };`\n+   | |_____^ help: it is more idiomatic to write: `let <mut> bar = if f() { ..; 42 } else { ..; 0 };`\n    |\n    = note: you might not need `mut` at all\n \n@@ -33,7 +33,7 @@ error: `if _ { .. } else { .. }` is an expression\n 74 | |     } else {\n 75 | |         quz = 0;\n 76 | |     }\n-   | |_____^ help: it is more idiomatic to write `let quz = if f() { 42 } else { 0 };`\n+   | |_____^ help: it is more idiomatic to write: `let quz = if f() { 42 } else { 0 };`\n \n error: `if _ { .. } else { .. }` is an expression\n    --> let_if_seq.rs:100:5\n@@ -42,7 +42,7 @@ error: `if _ { .. } else { .. }` is an expression\n 101 | |     if f() {\n 102 | |         baz = 42;\n 103 | |     }\n-    | |_____^ help: it is more idiomatic to write `let <mut> baz = if f() { 42 } else { 0 };`\n+    | |_____^ help: it is more idiomatic to write: `let <mut> baz = if f() { 42 } else { 0 };`\n     |\n     = note: you might not need `mut` at all\n "}, {"sha": "e8105a74b5cfc7a0126bdafe433a6bca862ffb2c", "filename": "clippy_tests/examples/literals.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2abd1f73d93e3e57515121cc98cc14fe6ccb17dd/clippy_tests%2Fexamples%2Fliterals.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2abd1f73d93e3e57515121cc98cc14fe6ccb17dd/clippy_tests%2Fexamples%2Fliterals.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fliterals.rs?ref=2abd1f73d93e3e57515121cc98cc14fe6ccb17dd", "patch": "@@ -14,7 +14,7 @@ fn main() {\n     let fail1 = 0xabCD;\n     let fail2 = 0xabCD_u32;\n     let fail2 = 0xabCD_isize;\n-    let fail_multi_zero = 000123usize;\n+    let fail_multi_zero = 000_123usize;\n \n     let ok6 = 1234_i32;\n     let ok7 = 1234_f32;\n@@ -30,5 +30,5 @@ fn main() {\n     let fail8 = 0123;\n \n     let ok11 = 0o123;\n-    let ok12 = 0b101010;\n+    let ok12 = 0b10_1010;\n }"}, {"sha": "6f6535b8d970044f8bfd2b63adbfee51cc94cf11", "filename": "clippy_tests/examples/literals.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/2abd1f73d93e3e57515121cc98cc14fe6ccb17dd/clippy_tests%2Fexamples%2Fliterals.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2abd1f73d93e3e57515121cc98cc14fe6ccb17dd/clippy_tests%2Fexamples%2Fliterals.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fliterals.stderr?ref=2abd1f73d93e3e57515121cc98cc14fe6ccb17dd", "patch": "@@ -21,26 +21,26 @@ error: inconsistent casing in hexadecimal literal\n error: integer type suffix should be separated by an underscore\n   --> literals.rs:17:27\n    |\n-17 |     let fail_multi_zero = 000123usize;\n-   |                           ^^^^^^^^^^^\n+17 |     let fail_multi_zero = 000_123usize;\n+   |                           ^^^^^^^^^^^^\n    |\n    = note: `-D unseparated-literal-suffix` implied by `-D warnings`\n \n error: this is a decimal constant\n   --> literals.rs:17:27\n    |\n-17 |     let fail_multi_zero = 000123usize;\n-   |                           ^^^^^^^^^^^\n+17 |     let fail_multi_zero = 000_123usize;\n+   |                           ^^^^^^^^^^^^\n    |\n    = note: `-D zero-prefixed-literal` implied by `-D warnings`\n help: if you mean to use a decimal constant, remove the `0` to remove confusion:\n    |\n-17 |     let fail_multi_zero = 123usize;\n-   |                           ^^^^^^^^\n+17 |     let fail_multi_zero = _123usize;\n+   |                           ^^^^^^^^^\n help: if you mean to use an octal constant, use `0o`:\n    |\n-17 |     let fail_multi_zero = 0o123usize;\n-   |                           ^^^^^^^^^^\n+17 |     let fail_multi_zero = 0o_123usize;\n+   |                           ^^^^^^^^^^^\n \n error: integer type suffix should be separated by an underscore\n   --> literals.rs:22:17"}, {"sha": "4a7491b8de62a859bf7359a274a185655824a1d3", "filename": "clippy_tests/examples/matches.stderr", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/2abd1f73d93e3e57515121cc98cc14fe6ccb17dd/clippy_tests%2Fexamples%2Fmatches.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2abd1f73d93e3e57515121cc98cc14fe6ccb17dd/clippy_tests%2Fexamples%2Fmatches.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fmatches.stderr?ref=2abd1f73d93e3e57515121cc98cc14fe6ccb17dd", "patch": "@@ -5,7 +5,7 @@ error: you seem to be trying to use match for destructuring a single pattern. Co\n 27 | |         ExprNode::ExprAddrOf => Some(&NODE),\n 28 | |         _ => { let x = 5; None },\n 29 | |     }\n-   | |_____^ help: try this `if let ExprNode::ExprAddrOf = ExprNode::Butterflies { Some(&NODE) } else { let x = 5; None }`\n+   | |_____^ help: try this: `if let ExprNode::ExprAddrOf = ExprNode::Butterflies { Some(&NODE) } else { let x = 5; None }`\n    |\n    = note: `-D single-match-else` implied by `-D warnings`\n \n@@ -16,7 +16,7 @@ error: you seem to be trying to use match for destructuring a single pattern. Co\n 36 | |         Some(y) => { println!(\"{:?}\", y); }\n 37 | |         _ => ()\n 38 | |     };\n-   | |_____^ help: try this `if let Some(y) = x { println!(\"{:?}\", y); }`\n+   | |_____^ help: try this: `if let Some(y) = x { println!(\"{:?}\", y); }`\n    |\n    = note: `-D single-match` implied by `-D warnings`\n \n@@ -27,7 +27,7 @@ error: you seem to be trying to use match for destructuring a single pattern. Co\n 42 | |         (2...3, 7...9) => dummy(),\n 43 | |         _ => {}\n 44 | |     };\n-   | |_____^ help: try this `if let (2...3, 7...9) = z { dummy() }`\n+   | |_____^ help: try this: `if let (2...3, 7...9) = z { dummy() }`\n \n error: you seem to be trying to use match for destructuring a single pattern. Consider using `if let`\n   --> matches.rs:63:5\n@@ -36,7 +36,7 @@ error: you seem to be trying to use match for destructuring a single pattern. Co\n 64 | |         Some(y) => dummy(),\n 65 | |         None => ()\n 66 | |     };\n-   | |_____^ help: try this `if let Some(y) = x { dummy() }`\n+   | |_____^ help: try this: `if let Some(y) = x { dummy() }`\n \n error: you seem to be trying to use match for destructuring a single pattern. Consider using `if let`\n   --> matches.rs:68:5\n@@ -45,7 +45,7 @@ error: you seem to be trying to use match for destructuring a single pattern. Co\n 69 | |         Ok(y) => dummy(),\n 70 | |         Err(..) => ()\n 71 | |     };\n-   | |_____^ help: try this `if let Ok(y) = y { dummy() }`\n+   | |_____^ help: try this: `if let Ok(y) = y { dummy() }`\n \n error: you seem to be trying to use match for destructuring a single pattern. Consider using `if let`\n   --> matches.rs:75:5\n@@ -54,7 +54,7 @@ error: you seem to be trying to use match for destructuring a single pattern. Co\n 76 | |         Cow::Borrowed(..) => dummy(),\n 77 | |         Cow::Owned(..) => (),\n 78 | |     };\n-   | |_____^ help: try this `if let Cow::Borrowed(..) = c { dummy() }`\n+   | |_____^ help: try this: `if let Cow::Borrowed(..) = c { dummy() }`\n \n error: you seem to be trying to match on a boolean expression\n   --> matches.rs:96:5\n@@ -63,7 +63,7 @@ error: you seem to be trying to match on a boolean expression\n 97 | |         true => 0,\n 98 | |         false => 42,\n 99 | |     };\n-   | |_____^ help: consider using an if/else expression `if test { 0 } else { 42 }`\n+   | |_____^ help: consider using an if/else expression: `if test { 0 } else { 42 }`\n    |\n    = note: `-D match-bool` implied by `-D warnings`\n \n@@ -74,7 +74,7 @@ error: you seem to be trying to match on a boolean expression\n 103 | |         true => 1,\n 104 | |         false => 0,\n 105 | |     };\n-    | |_____^ help: consider using an if/else expression `if option == 1 { 1 } else { 0 }`\n+    | |_____^ help: consider using an if/else expression: `if option == 1 { 1 } else { 0 }`\n \n error: you seem to be trying to match on a boolean expression\n    --> matches.rs:107:5\n@@ -83,7 +83,7 @@ error: you seem to be trying to match on a boolean expression\n 108 | |         true => (),\n 109 | |         false => { println!(\"Noooo!\"); }\n 110 | |     };\n-    | |_____^ help: consider using an if/else expression `if !test { println!(\"Noooo!\"); }`\n+    | |_____^ help: consider using an if/else expression: `if !test { println!(\"Noooo!\"); }`\n \n error: you seem to be trying to match on a boolean expression\n    --> matches.rs:112:5\n@@ -92,7 +92,7 @@ error: you seem to be trying to match on a boolean expression\n 113 | |         false => { println!(\"Noooo!\"); }\n 114 | |         _ => (),\n 115 | |     };\n-    | |_____^ help: consider using an if/else expression `if !test { println!(\"Noooo!\"); }`\n+    | |_____^ help: consider using an if/else expression: `if !test { println!(\"Noooo!\"); }`\n \n error: you seem to be trying to match on a boolean expression\n    --> matches.rs:117:5\n@@ -101,7 +101,7 @@ error: you seem to be trying to match on a boolean expression\n 118 | |         false => { println!(\"Noooo!\"); }\n 119 | |         _ => (),\n 120 | |     };\n-    | |_____^ help: consider using an if/else expression `if !(test && test) { println!(\"Noooo!\"); }`\n+    | |_____^ help: consider using an if/else expression: `if !(test && test) { println!(\"Noooo!\"); }`\n \n error: equal expressions as operands to `&&`\n    --> matches.rs:117:11\n@@ -118,7 +118,7 @@ error: you seem to be trying to match on a boolean expression\n 123 | |         false => { println!(\"Noooo!\"); }\n 124 | |         true => { println!(\"Yes!\"); }\n 125 | |     };\n-    | |_____^ help: consider using an if/else expression `if test { println!(\"Yes!\"); } else { println!(\"Noooo!\"); }`\n+    | |_____^ help: consider using an if/else expression: `if test { println!(\"Yes!\"); } else { println!(\"Noooo!\"); }`\n \n error: you don't need to add `&` to all patterns\n    --> matches.rs:138:9\n@@ -156,7 +156,7 @@ error: you don't need to add `&` to both the expression and the patterns\n 155 | |         &Some(v) => println!(\"{:?}\", v),\n 156 | |         &None => println!(\"none\"),\n 157 | |     }\n-    | |_____^ help: try `match w { .. }`\n+    | |_____^ help: try: `match w { .. }`\n \n error: you don't need to add `&` to all patterns\n    --> matches.rs:165:5\n@@ -177,7 +177,7 @@ error: you don't need to add `&` to both the expression and the patterns\n 170 | /     if let &None = &b {\n 171 | |         println!(\"none\");\n 172 | |     }\n-    | |_____^ help: try `if let .. = b { .. }`\n+    | |_____^ help: try: `if let .. = b { .. }`\n \n error: some ranges overlap\n    --> matches.rs:179:9"}, {"sha": "c45eab9f4997910a5053f3e427306b37e7677ad0", "filename": "clippy_tests/examples/methods.stderr", "status": "modified", "additions": 49, "deletions": 49, "changes": 98, "blob_url": "https://github.com/rust-lang/rust/blob/2abd1f73d93e3e57515121cc98cc14fe6ccb17dd/clippy_tests%2Fexamples%2Fmethods.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2abd1f73d93e3e57515121cc98cc14fe6ccb17dd/clippy_tests%2Fexamples%2Fmethods.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fmethods.stderr?ref=2abd1f73d93e3e57515121cc98cc14fe6ccb17dd", "patch": "@@ -182,75 +182,75 @@ error: use of `unwrap_or` followed by a function call\n    --> methods.rs:268:5\n     |\n 268 |     with_constructor.unwrap_or(make());\n-    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this `with_constructor.unwrap_or_else(make)`\n+    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `with_constructor.unwrap_or_else(make)`\n     |\n     = note: `-D or-fun-call` implied by `-D warnings`\n \n error: use of `unwrap_or` followed by a call to `new`\n    --> methods.rs:271:5\n     |\n 271 |     with_new.unwrap_or(Vec::new());\n-    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this `with_new.unwrap_or_default()`\n+    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `with_new.unwrap_or_default()`\n \n error: use of `unwrap_or` followed by a function call\n    --> methods.rs:274:5\n     |\n 274 |     with_const_args.unwrap_or(Vec::with_capacity(12));\n-    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this `with_const_args.unwrap_or_else(|| Vec::with_capacity(12))`\n+    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `with_const_args.unwrap_or_else(|| Vec::with_capacity(12))`\n \n error: use of `unwrap_or` followed by a function call\n    --> methods.rs:277:5\n     |\n 277 |     with_err.unwrap_or(make());\n-    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this `with_err.unwrap_or_else(|_| make())`\n+    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `with_err.unwrap_or_else(|_| make())`\n \n error: use of `unwrap_or` followed by a function call\n    --> methods.rs:280:5\n     |\n 280 |     with_err_args.unwrap_or(Vec::with_capacity(12));\n-    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this `with_err_args.unwrap_or_else(|_| Vec::with_capacity(12))`\n+    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `with_err_args.unwrap_or_else(|_| Vec::with_capacity(12))`\n \n error: use of `unwrap_or` followed by a call to `default`\n    --> methods.rs:283:5\n     |\n 283 |     with_default_trait.unwrap_or(Default::default());\n-    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this `with_default_trait.unwrap_or_default()`\n+    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `with_default_trait.unwrap_or_default()`\n \n error: use of `unwrap_or` followed by a call to `default`\n    --> methods.rs:286:5\n     |\n 286 |     with_default_type.unwrap_or(u64::default());\n-    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this `with_default_type.unwrap_or_default()`\n+    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `with_default_type.unwrap_or_default()`\n \n error: use of `unwrap_or` followed by a function call\n    --> methods.rs:289:5\n     |\n 289 |     with_vec.unwrap_or(vec![]);\n-    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this `with_vec.unwrap_or_else(|| < [ _ ] > :: into_vec ( box [ $ ( $ x ) , * ] ))`\n+    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `with_vec.unwrap_or_else(|| < [ _ ] > :: into_vec ( box [ $ ( $ x ) , * ] ))`\n \n error: use of `unwrap_or` followed by a function call\n    --> methods.rs:294:5\n     |\n 294 |     without_default.unwrap_or(Foo::new());\n-    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this `without_default.unwrap_or_else(Foo::new)`\n+    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `without_default.unwrap_or_else(Foo::new)`\n \n error: use of `or_insert` followed by a function call\n    --> methods.rs:297:5\n     |\n 297 |     map.entry(42).or_insert(String::new());\n-    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this `map.entry(42).or_insert_with(String::new)`\n+    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `map.entry(42).or_insert_with(String::new)`\n \n error: use of `or_insert` followed by a function call\n    --> methods.rs:300:5\n     |\n 300 |     btree.entry(42).or_insert(String::new());\n-    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this `btree.entry(42).or_insert_with(String::new)`\n+    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `btree.entry(42).or_insert_with(String::new)`\n \n error: use of `unwrap_or` followed by a function call\n    --> methods.rs:303:13\n     |\n 303 |     let _ = stringy.unwrap_or(\"\".to_owned());\n-    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this `stringy.unwrap_or_else(|| \"\".to_owned())`\n+    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `stringy.unwrap_or_else(|| \"\".to_owned())`\n \n error: called `.iter().nth()` on a Vec. Calling `.get()` is both faster and more readable\n    --> methods.rs:314:23\n@@ -326,63 +326,63 @@ error: called `.get().unwrap()` on a slice. Using `[]` is more clear and more co\n    --> methods.rs:369:17\n     |\n 369 |         let _ = boxed_slice.get(1).unwrap();\n-    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this `&boxed_slice[1]`\n+    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `&boxed_slice[1]`\n     |\n     = note: `-D get-unwrap` implied by `-D warnings`\n \n error: called `.get().unwrap()` on a slice. Using `[]` is more clear and more concise\n    --> methods.rs:370:17\n     |\n 370 |         let _ = some_slice.get(0).unwrap();\n-    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this `&some_slice[0]`\n+    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `&some_slice[0]`\n \n error: called `.get().unwrap()` on a Vec. Using `[]` is more clear and more concise\n    --> methods.rs:371:17\n     |\n 371 |         let _ = some_vec.get(0).unwrap();\n-    |                 ^^^^^^^^^^^^^^^^^^^^^^^^ help: try this `&some_vec[0]`\n+    |                 ^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `&some_vec[0]`\n \n error: called `.get().unwrap()` on a VecDeque. Using `[]` is more clear and more concise\n    --> methods.rs:372:17\n     |\n 372 |         let _ = some_vecdeque.get(0).unwrap();\n-    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this `&some_vecdeque[0]`\n+    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `&some_vecdeque[0]`\n \n error: called `.get().unwrap()` on a HashMap. Using `[]` is more clear and more concise\n    --> methods.rs:373:17\n     |\n 373 |         let _ = some_hashmap.get(&1).unwrap();\n-    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this `&some_hashmap[&1]`\n+    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `&some_hashmap[&1]`\n \n error: called `.get().unwrap()` on a BTreeMap. Using `[]` is more clear and more concise\n    --> methods.rs:374:17\n     |\n 374 |         let _ = some_btreemap.get(&1).unwrap();\n-    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this `&some_btreemap[&1]`\n+    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `&some_btreemap[&1]`\n \n error: called `.get_mut().unwrap()` on a slice. Using `[]` is more clear and more concise\n    --> methods.rs:379:10\n     |\n 379 |         *boxed_slice.get_mut(0).unwrap() = 1;\n-    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this `&mut boxed_slice[0]`\n+    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `&mut boxed_slice[0]`\n \n error: called `.get_mut().unwrap()` on a slice. Using `[]` is more clear and more concise\n    --> methods.rs:380:10\n     |\n 380 |         *some_slice.get_mut(0).unwrap() = 1;\n-    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this `&mut some_slice[0]`\n+    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `&mut some_slice[0]`\n \n error: called `.get_mut().unwrap()` on a Vec. Using `[]` is more clear and more concise\n    --> methods.rs:381:10\n     |\n 381 |         *some_vec.get_mut(0).unwrap() = 1;\n-    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this `&mut some_vec[0]`\n+    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `&mut some_vec[0]`\n \n error: called `.get_mut().unwrap()` on a VecDeque. Using `[]` is more clear and more concise\n    --> methods.rs:382:10\n     |\n 382 |         *some_vecdeque.get_mut(0).unwrap() = 1;\n-    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this `&mut some_vecdeque[0]`\n+    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `&mut some_vecdeque[0]`\n \n error: used unwrap() on an Option value. If you don't want to handle the None case gracefully, consider using expect() to provide a better panic message\n    --> methods.rs:396:13\n@@ -436,173 +436,173 @@ error: you should use the `starts_with` method\n    --> methods.rs:425:5\n     |\n 425 |     \"\".chars().next() == Some(' ');\n-    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: like this `\"\".starts_with(' ')`\n+    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: like this: `\"\".starts_with(' ')`\n     |\n     = note: `-D chars-next-cmp` implied by `-D warnings`\n \n error: you should use the `starts_with` method\n    --> methods.rs:426:5\n     |\n 426 |     Some(' ') != \"\".chars().next();\n-    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: like this `!\"\".starts_with(' ')`\n+    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: like this: `!\"\".starts_with(' ')`\n \n error: calling `.extend(_.chars())`\n    --> methods.rs:435:5\n     |\n 435 |     s.extend(abc.chars());\n-    |     ^^^^^^^^^^^^^^^^^^^^^ help: try this `s.push_str(abc)`\n+    |     ^^^^^^^^^^^^^^^^^^^^^ help: try this: `s.push_str(abc)`\n     |\n     = note: `-D string-extend-chars` implied by `-D warnings`\n \n error: calling `.extend(_.chars())`\n    --> methods.rs:438:5\n     |\n 438 |     s.extend(\"abc\".chars());\n-    |     ^^^^^^^^^^^^^^^^^^^^^^^ help: try this `s.push_str(\"abc\")`\n+    |     ^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `s.push_str(\"abc\")`\n \n error: calling `.extend(_.chars())`\n    --> methods.rs:441:5\n     |\n 441 |     s.extend(def.chars());\n-    |     ^^^^^^^^^^^^^^^^^^^^^ help: try this `s.push_str(&def)`\n+    |     ^^^^^^^^^^^^^^^^^^^^^ help: try this: `s.push_str(&def)`\n \n error: using `clone` on a `Copy` type\n    --> methods.rs:452:5\n     |\n 452 |     42.clone();\n-    |     ^^^^^^^^^^ help: try removing the `clone` call `42`\n+    |     ^^^^^^^^^^ help: try removing the `clone` call: `42`\n     |\n     = note: `-D clone-on-copy` implied by `-D warnings`\n \n error: using `clone` on a `Copy` type\n    --> methods.rs:456:5\n     |\n 456 |     (&42).clone();\n-    |     ^^^^^^^^^^^^^ help: try dereferencing it `*(&42)`\n+    |     ^^^^^^^^^^^^^ help: try dereferencing it: `*(&42)`\n \n error: using `clone` on a `Copy` type\n    --> methods.rs:460:5\n     |\n 460 |     t.clone();\n-    |     ^^^^^^^^^ help: try removing the `clone` call `t`\n+    |     ^^^^^^^^^ help: try removing the `clone` call: `t`\n \n error: using `clone` on a `Copy` type\n    --> methods.rs:462:5\n     |\n 462 |     Some(t).clone();\n-    |     ^^^^^^^^^^^^^^^ help: try removing the `clone` call `Some(t)`\n+    |     ^^^^^^^^^^^^^^^ help: try removing the `clone` call: `Some(t)`\n \n error: using `clone` on a double-reference; this will copy the reference instead of cloning the inner type\n    --> methods.rs:468:22\n     |\n 468 |     let z: &Vec<_> = y.clone();\n-    |                      ^^^^^^^^^ help: try dereferencing it `(*y).clone()`\n+    |                      ^^^^^^^^^ help: try dereferencing it: `(*y).clone()`\n     |\n     = note: `-D clone-double-ref` implied by `-D warnings`\n \n error: single-character string constant used as pattern\n    --> methods.rs:475:13\n     |\n 475 |     x.split(\"x\");\n-    |     --------^^^- help: try using a char instead: `x.split('x')`\n+    |     --------^^^- help: try using a char instead:: `x.split('x')`\n     |\n     = note: `-D single-char-pattern` implied by `-D warnings`\n \n error: single-character string constant used as pattern\n    --> methods.rs:492:16\n     |\n 492 |     x.contains(\"x\");\n-    |     -----------^^^- help: try using a char instead: `x.contains('x')`\n+    |     -----------^^^- help: try using a char instead:: `x.contains('x')`\n \n error: single-character string constant used as pattern\n    --> methods.rs:493:19\n     |\n 493 |     x.starts_with(\"x\");\n-    |     --------------^^^- help: try using a char instead: `x.starts_with('x')`\n+    |     --------------^^^- help: try using a char instead:: `x.starts_with('x')`\n \n error: single-character string constant used as pattern\n    --> methods.rs:494:17\n     |\n 494 |     x.ends_with(\"x\");\n-    |     ------------^^^- help: try using a char instead: `x.ends_with('x')`\n+    |     ------------^^^- help: try using a char instead:: `x.ends_with('x')`\n \n error: single-character string constant used as pattern\n    --> methods.rs:495:12\n     |\n 495 |     x.find(\"x\");\n-    |     -------^^^- help: try using a char instead: `x.find('x')`\n+    |     -------^^^- help: try using a char instead:: `x.find('x')`\n \n error: single-character string constant used as pattern\n    --> methods.rs:496:13\n     |\n 496 |     x.rfind(\"x\");\n-    |     --------^^^- help: try using a char instead: `x.rfind('x')`\n+    |     --------^^^- help: try using a char instead:: `x.rfind('x')`\n \n error: single-character string constant used as pattern\n    --> methods.rs:497:14\n     |\n 497 |     x.rsplit(\"x\");\n-    |     ---------^^^- help: try using a char instead: `x.rsplit('x')`\n+    |     ---------^^^- help: try using a char instead:: `x.rsplit('x')`\n \n error: single-character string constant used as pattern\n    --> methods.rs:498:24\n     |\n 498 |     x.split_terminator(\"x\");\n-    |     -------------------^^^- help: try using a char instead: `x.split_terminator('x')`\n+    |     -------------------^^^- help: try using a char instead:: `x.split_terminator('x')`\n \n error: single-character string constant used as pattern\n    --> methods.rs:499:25\n     |\n 499 |     x.rsplit_terminator(\"x\");\n-    |     --------------------^^^- help: try using a char instead: `x.rsplit_terminator('x')`\n+    |     --------------------^^^- help: try using a char instead:: `x.rsplit_terminator('x')`\n \n error: single-character string constant used as pattern\n    --> methods.rs:500:17\n     |\n 500 |     x.splitn(0, \"x\");\n-    |     ------------^^^- help: try using a char instead: `x.splitn(0, 'x')`\n+    |     ------------^^^- help: try using a char instead:: `x.splitn(0, 'x')`\n \n error: single-character string constant used as pattern\n    --> methods.rs:501:18\n     |\n 501 |     x.rsplitn(0, \"x\");\n-    |     -------------^^^- help: try using a char instead: `x.rsplitn(0, 'x')`\n+    |     -------------^^^- help: try using a char instead:: `x.rsplitn(0, 'x')`\n \n error: single-character string constant used as pattern\n    --> methods.rs:502:15\n     |\n 502 |     x.matches(\"x\");\n-    |     ----------^^^- help: try using a char instead: `x.matches('x')`\n+    |     ----------^^^- help: try using a char instead:: `x.matches('x')`\n \n error: single-character string constant used as pattern\n    --> methods.rs:503:16\n     |\n 503 |     x.rmatches(\"x\");\n-    |     -----------^^^- help: try using a char instead: `x.rmatches('x')`\n+    |     -----------^^^- help: try using a char instead:: `x.rmatches('x')`\n \n error: single-character string constant used as pattern\n    --> methods.rs:504:21\n     |\n 504 |     x.match_indices(\"x\");\n-    |     ----------------^^^- help: try using a char instead: `x.match_indices('x')`\n+    |     ----------------^^^- help: try using a char instead:: `x.match_indices('x')`\n \n error: single-character string constant used as pattern\n    --> methods.rs:505:22\n     |\n 505 |     x.rmatch_indices(\"x\");\n-    |     -----------------^^^- help: try using a char instead: `x.rmatch_indices('x')`\n+    |     -----------------^^^- help: try using a char instead:: `x.rmatch_indices('x')`\n \n error: single-character string constant used as pattern\n    --> methods.rs:506:25\n     |\n 506 |     x.trim_left_matches(\"x\");\n-    |     --------------------^^^- help: try using a char instead: `x.trim_left_matches('x')`\n+    |     --------------------^^^- help: try using a char instead:: `x.trim_left_matches('x')`\n \n error: single-character string constant used as pattern\n    --> methods.rs:507:26\n     |\n 507 |     x.trim_right_matches(\"x\");\n-    |     ---------------------^^^- help: try using a char instead: `x.trim_right_matches('x')`\n+    |     ---------------------^^^- help: try using a char instead:: `x.trim_right_matches('x')`\n \n error: you are getting the inner pointer of a temporary `CString`\n    --> methods.rs:517:5"}, {"sha": "6d129777fa95b5d35056ca00e9d014b254120bb9", "filename": "clippy_tests/examples/needless_bool.stderr", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/2abd1f73d93e3e57515121cc98cc14fe6ccb17dd/clippy_tests%2Fexamples%2Fneedless_bool.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2abd1f73d93e3e57515121cc98cc14fe6ccb17dd/clippy_tests%2Fexamples%2Fneedless_bool.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fneedless_bool.stderr?ref=2abd1f73d93e3e57515121cc98cc14fe6ccb17dd", "patch": "@@ -16,19 +16,19 @@ error: this if-then-else expression returns a bool literal\n   --> needless_bool.rs:11:5\n    |\n 11 |     if x { true } else { false };\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: you can reduce it to `x`\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: you can reduce it to: `x`\n \n error: this if-then-else expression returns a bool literal\n   --> needless_bool.rs:12:5\n    |\n 12 |     if x { false } else { true };\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: you can reduce it to `!x`\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: you can reduce it to: `!x`\n \n error: this if-then-else expression returns a bool literal\n   --> needless_bool.rs:13:5\n    |\n 13 |     if x && y { false } else { true };\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: you can reduce it to `!(x && y)`\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: you can reduce it to: `!(x && y)`\n \n error: this if-then-else expression will always return true\n   --> needless_bool.rs:25:5\n@@ -46,25 +46,25 @@ error: this if-then-else expression returns a bool literal\n   --> needless_bool.rs:35:5\n    |\n 35 |     if x { return true } else { return false };\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: you can reduce it to `return x`\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: you can reduce it to: `return x`\n \n error: this if-then-else expression returns a bool literal\n   --> needless_bool.rs:40:5\n    |\n 40 |     if x && y { return true } else { return false };\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: you can reduce it to `return x && y`\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: you can reduce it to: `return x && y`\n \n error: this if-then-else expression returns a bool literal\n   --> needless_bool.rs:45:5\n    |\n 45 |     if x { return false } else { return true };\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: you can reduce it to `return !x`\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: you can reduce it to: `return !x`\n \n error: this if-then-else expression returns a bool literal\n   --> needless_bool.rs:50:5\n    |\n 50 |     if x && y { return false } else { return true };\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: you can reduce it to `return !(x && y)`\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: you can reduce it to: `return !(x && y)`\n \n error: aborting due to 11 previous errors\n "}, {"sha": "15701d651243e68fc63ef4f623d994d811d17de4", "filename": "clippy_tests/examples/needless_pass_by_value.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/2abd1f73d93e3e57515121cc98cc14fe6ccb17dd/clippy_tests%2Fexamples%2Fneedless_pass_by_value.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2abd1f73d93e3e57515121cc98cc14fe6ccb17dd/clippy_tests%2Fexamples%2Fneedless_pass_by_value.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fneedless_pass_by_value.stderr?ref=2abd1f73d93e3e57515121cc98cc14fe6ccb17dd", "patch": "@@ -2,27 +2,27 @@ error: this argument is passed by value, but not consumed in the function body\n  --> needless_pass_by_value.rs:9:23\n   |\n 9 | fn foo<T: Default>(v: Vec<T>, w: Vec<T>, mut x: Vec<T>, y: Vec<T>) -> Vec<T> {\n-  |                       ^^^^^^ help: consider changing the type to `&[T]`\n+  |                       ^^^^^^ help: consider changing the type to: `&[T]`\n   |\n   = note: `-D needless-pass-by-value` implied by `-D warnings`\n \n error: this argument is passed by value, but not consumed in the function body\n   --> needless_pass_by_value.rs:23:11\n    |\n 23 | fn bar(x: String, y: Wrapper) {\n-   |           ^^^^^^ help: consider changing the type to `&str`\n+   |           ^^^^^^ help: consider changing the type to: `&str`\n \n error: this argument is passed by value, but not consumed in the function body\n   --> needless_pass_by_value.rs:23:22\n    |\n 23 | fn bar(x: String, y: Wrapper) {\n-   |                      ^^^^^^^ help: consider taking a reference instead `&Wrapper`\n+   |                      ^^^^^^^ help: consider taking a reference instead: `&Wrapper`\n \n error: this argument is passed by value, but not consumed in the function body\n   --> needless_pass_by_value.rs:29:63\n    |\n 29 | fn test_borrow_trait<T: std::borrow::Borrow<str>, U>(t: T, u: U) {\n-   |                                                               ^ help: consider taking a reference instead `&U`\n+   |                                                               ^ help: consider taking a reference instead: `&U`\n \n error: this argument is passed by value, but not consumed in the function body\n   --> needless_pass_by_value.rs:40:18\n@@ -40,7 +40,7 @@ error: this argument is passed by value, but not consumed in the function body\n   --> needless_pass_by_value.rs:53:24\n    |\n 53 | fn test_destructure(x: Wrapper, y: Wrapper, z: Wrapper) {\n-   |                        ^^^^^^^ help: consider taking a reference instead `&Wrapper`\n+   |                        ^^^^^^^ help: consider taking a reference instead: `&Wrapper`\n \n error: this argument is passed by value, but not consumed in the function body\n   --> needless_pass_by_value.rs:53:36"}, {"sha": "158f9c432df7f17869888e020e142ed3e7a99881", "filename": "clippy_tests/examples/needless_return.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/2abd1f73d93e3e57515121cc98cc14fe6ccb17dd/clippy_tests%2Fexamples%2Fneedless_return.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2abd1f73d93e3e57515121cc98cc14fe6ccb17dd/clippy_tests%2Fexamples%2Fneedless_return.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fneedless_return.stderr?ref=2abd1f73d93e3e57515121cc98cc14fe6ccb17dd", "patch": "@@ -2,51 +2,51 @@ error: unneeded return statement\n   --> needless_return.rs:11:5\n    |\n 11 |     return true;\n-   |     ^^^^^^^^^^^^ help: remove `return` as shown: `true`\n+   |     ^^^^^^^^^^^^ help: remove `return` as shown:: `true`\n    |\n    = note: `-D needless-return` implied by `-D warnings`\n \n error: unneeded return statement\n   --> needless_return.rs:15:5\n    |\n 15 |     return true\n-   |     ^^^^^^^^^^^ help: remove `return` as shown: `true`\n+   |     ^^^^^^^^^^^ help: remove `return` as shown:: `true`\n \n error: unneeded return statement\n   --> needless_return.rs:20:9\n    |\n 20 |         return true;\n-   |         ^^^^^^^^^^^^ help: remove `return` as shown: `true`\n+   |         ^^^^^^^^^^^^ help: remove `return` as shown:: `true`\n \n error: unneeded return statement\n   --> needless_return.rs:22:9\n    |\n 22 |         return false;\n-   |         ^^^^^^^^^^^^^ help: remove `return` as shown: `false`\n+   |         ^^^^^^^^^^^^^ help: remove `return` as shown:: `false`\n \n error: unneeded return statement\n   --> needless_return.rs:28:17\n    |\n 28 |         true => return false,\n-   |                 ^^^^^^^^^^^^ help: remove `return` as shown: `false`\n+   |                 ^^^^^^^^^^^^ help: remove `return` as shown:: `false`\n \n error: unneeded return statement\n   --> needless_return.rs:30:13\n    |\n 30 |             return true;\n-   |             ^^^^^^^^^^^^ help: remove `return` as shown: `true`\n+   |             ^^^^^^^^^^^^ help: remove `return` as shown:: `true`\n \n error: unneeded return statement\n   --> needless_return.rs:37:9\n    |\n 37 |         return true;\n-   |         ^^^^^^^^^^^^ help: remove `return` as shown: `true`\n+   |         ^^^^^^^^^^^^ help: remove `return` as shown:: `true`\n \n error: unneeded return statement\n   --> needless_return.rs:39:16\n    |\n 39 |     let _ = || return true;\n-   |                ^^^^^^^^^^^ help: remove `return` as shown: `true`\n+   |                ^^^^^^^^^^^ help: remove `return` as shown:: `true`\n \n error: aborting due to 8 previous errors\n "}, {"sha": "4d1c29ed079ee129513e69f6eebf50035a4efc40", "filename": "clippy_tests/examples/no_effect.stderr", "status": "modified", "additions": 19, "deletions": 19, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/2abd1f73d93e3e57515121cc98cc14fe6ccb17dd/clippy_tests%2Fexamples%2Fno_effect.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2abd1f73d93e3e57515121cc98cc14fe6ccb17dd/clippy_tests%2Fexamples%2Fno_effect.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fno_effect.stderr?ref=2abd1f73d93e3e57515121cc98cc14fe6ccb17dd", "patch": "@@ -154,117 +154,117 @@ error: statement can be reduced\n   --> no_effect.rs:65:5\n    |\n 65 |     Tuple(get_number());\n-   |     ^^^^^^^^^^^^^^^^^^^^ help: replace it with `get_number();`\n+   |     ^^^^^^^^^^^^^^^^^^^^ help: replace it with: `get_number();`\n    |\n    = note: `-D unnecessary-operation` implied by `-D warnings`\n \n error: statement can be reduced\n   --> no_effect.rs:66:5\n    |\n 66 |     Struct { field: get_number() };\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with `get_number();`\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `get_number();`\n \n error: statement can be reduced\n   --> no_effect.rs:67:5\n    |\n 67 |     Struct { ..get_struct() };\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with `get_struct();`\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `get_struct();`\n \n error: statement can be reduced\n   --> no_effect.rs:68:5\n    |\n 68 |     Enum::Tuple(get_number());\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with `get_number();`\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `get_number();`\n \n error: statement can be reduced\n   --> no_effect.rs:69:5\n    |\n 69 |     Enum::Struct { field: get_number() };\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with `get_number();`\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `get_number();`\n \n error: statement can be reduced\n   --> no_effect.rs:70:5\n    |\n 70 |     5 + get_number();\n-   |     ^^^^^^^^^^^^^^^^^ help: replace it with `5;get_number();`\n+   |     ^^^^^^^^^^^^^^^^^ help: replace it with: `5;get_number();`\n \n error: statement can be reduced\n   --> no_effect.rs:71:5\n    |\n 71 |     *&get_number();\n-   |     ^^^^^^^^^^^^^^^ help: replace it with `get_number();`\n+   |     ^^^^^^^^^^^^^^^ help: replace it with: `get_number();`\n \n error: statement can be reduced\n   --> no_effect.rs:72:5\n    |\n 72 |     &get_number();\n-   |     ^^^^^^^^^^^^^^ help: replace it with `get_number();`\n+   |     ^^^^^^^^^^^^^^ help: replace it with: `get_number();`\n \n error: statement can be reduced\n   --> no_effect.rs:73:5\n    |\n 73 |     (5, 6, get_number());\n-   |     ^^^^^^^^^^^^^^^^^^^^^ help: replace it with `5;6;get_number();`\n+   |     ^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `5;6;get_number();`\n \n error: statement can be reduced\n   --> no_effect.rs:74:5\n    |\n 74 |     box get_number();\n-   |     ^^^^^^^^^^^^^^^^^ help: replace it with `get_number();`\n+   |     ^^^^^^^^^^^^^^^^^ help: replace it with: `get_number();`\n \n error: statement can be reduced\n   --> no_effect.rs:75:5\n    |\n 75 |     get_number()..;\n-   |     ^^^^^^^^^^^^^^^ help: replace it with `get_number();`\n+   |     ^^^^^^^^^^^^^^^ help: replace it with: `get_number();`\n \n error: statement can be reduced\n   --> no_effect.rs:76:5\n    |\n 76 |     ..get_number();\n-   |     ^^^^^^^^^^^^^^^ help: replace it with `get_number();`\n+   |     ^^^^^^^^^^^^^^^ help: replace it with: `get_number();`\n \n error: statement can be reduced\n   --> no_effect.rs:77:5\n    |\n 77 |     5..get_number();\n-   |     ^^^^^^^^^^^^^^^^ help: replace it with `5;get_number();`\n+   |     ^^^^^^^^^^^^^^^^ help: replace it with: `5;get_number();`\n \n error: statement can be reduced\n   --> no_effect.rs:78:5\n    |\n 78 |     [42, get_number()];\n-   |     ^^^^^^^^^^^^^^^^^^^ help: replace it with `42;get_number();`\n+   |     ^^^^^^^^^^^^^^^^^^^ help: replace it with: `42;get_number();`\n \n error: statement can be reduced\n   --> no_effect.rs:79:5\n    |\n 79 |     [42, 55][get_number() as usize];\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with `[42, 55];get_number() as usize;`\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `[42, 55];get_number() as usize;`\n \n error: statement can be reduced\n   --> no_effect.rs:80:5\n    |\n 80 |     (42, get_number()).1;\n-   |     ^^^^^^^^^^^^^^^^^^^^^ help: replace it with `42;get_number();`\n+   |     ^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `42;get_number();`\n \n error: statement can be reduced\n   --> no_effect.rs:81:5\n    |\n 81 |     [get_number(); 55];\n-   |     ^^^^^^^^^^^^^^^^^^^ help: replace it with `get_number();`\n+   |     ^^^^^^^^^^^^^^^^^^^ help: replace it with: `get_number();`\n \n error: statement can be reduced\n   --> no_effect.rs:82:5\n    |\n 82 |     [42; 55][get_number() as usize];\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with `[42; 55];get_number() as usize;`\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `[42; 55];get_number() as usize;`\n \n error: statement can be reduced\n   --> no_effect.rs:83:5\n    |\n 83 |     {get_number()};\n-   |     ^^^^^^^^^^^^^^^ help: replace it with `get_number();`\n+   |     ^^^^^^^^^^^^^^^ help: replace it with: `get_number();`\n \n error: aborting due to 44 previous errors\n "}, {"sha": "945279092bcc1560c31b779888e4a6b80a7a5c9c", "filename": "clippy_tests/examples/precedence.stderr", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/2abd1f73d93e3e57515121cc98cc14fe6ccb17dd/clippy_tests%2Fexamples%2Fprecedence.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2abd1f73d93e3e57515121cc98cc14fe6ccb17dd/clippy_tests%2Fexamples%2Fprecedence.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fprecedence.stderr?ref=2abd1f73d93e3e57515121cc98cc14fe6ccb17dd", "patch": "@@ -2,57 +2,57 @@ error: operator precedence can trip the unwary\n  --> precedence.rs:8:5\n   |\n 8 |     1 << 2 + 3;\n-  |     ^^^^^^^^^^ help: consider parenthesizing your expression `1 << (2 + 3)`\n+  |     ^^^^^^^^^^ help: consider parenthesizing your expression: `1 << (2 + 3)`\n   |\n   = note: `-D precedence` implied by `-D warnings`\n \n error: operator precedence can trip the unwary\n  --> precedence.rs:9:5\n   |\n 9 |     1 + 2 << 3;\n-  |     ^^^^^^^^^^ help: consider parenthesizing your expression `(1 + 2) << 3`\n+  |     ^^^^^^^^^^ help: consider parenthesizing your expression: `(1 + 2) << 3`\n \n error: operator precedence can trip the unwary\n   --> precedence.rs:10:5\n    |\n 10 |     4 >> 1 + 1;\n-   |     ^^^^^^^^^^ help: consider parenthesizing your expression `4 >> (1 + 1)`\n+   |     ^^^^^^^^^^ help: consider parenthesizing your expression: `4 >> (1 + 1)`\n \n error: operator precedence can trip the unwary\n   --> precedence.rs:11:5\n    |\n 11 |     1 + 3 >> 2;\n-   |     ^^^^^^^^^^ help: consider parenthesizing your expression `(1 + 3) >> 2`\n+   |     ^^^^^^^^^^ help: consider parenthesizing your expression: `(1 + 3) >> 2`\n \n error: operator precedence can trip the unwary\n   --> precedence.rs:12:5\n    |\n 12 |     1 ^ 1 - 1;\n-   |     ^^^^^^^^^ help: consider parenthesizing your expression `1 ^ (1 - 1)`\n+   |     ^^^^^^^^^ help: consider parenthesizing your expression: `1 ^ (1 - 1)`\n \n error: operator precedence can trip the unwary\n   --> precedence.rs:13:5\n    |\n 13 |     3 | 2 - 1;\n-   |     ^^^^^^^^^ help: consider parenthesizing your expression `3 | (2 - 1)`\n+   |     ^^^^^^^^^ help: consider parenthesizing your expression: `3 | (2 - 1)`\n \n error: operator precedence can trip the unwary\n   --> precedence.rs:14:5\n    |\n 14 |     3 & 5 - 2;\n-   |     ^^^^^^^^^ help: consider parenthesizing your expression `3 & (5 - 2)`\n+   |     ^^^^^^^^^ help: consider parenthesizing your expression: `3 & (5 - 2)`\n \n error: unary minus has lower precedence than method call\n   --> precedence.rs:15:5\n    |\n 15 |     -1i32.abs();\n-   |     ^^^^^^^^^^^ help: consider adding parentheses to clarify your intent `-(1i32.abs())`\n+   |     ^^^^^^^^^^^ help: consider adding parentheses to clarify your intent: `-(1i32.abs())`\n \n error: unary minus has lower precedence than method call\n   --> precedence.rs:16:5\n    |\n 16 |     -1f32.abs();\n-   |     ^^^^^^^^^^^ help: consider adding parentheses to clarify your intent `-(1f32.abs())`\n+   |     ^^^^^^^^^^^ help: consider adding parentheses to clarify your intent: `-(1f32.abs())`\n \n error: aborting due to 9 previous errors\n "}, {"sha": "0dc9672b15cc98e23a519ff558d843291b7da0a0", "filename": "clippy_tests/examples/redundant_closure_call.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2abd1f73d93e3e57515121cc98cc14fe6ccb17dd/clippy_tests%2Fexamples%2Fredundant_closure_call.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2abd1f73d93e3e57515121cc98cc14fe6ccb17dd/clippy_tests%2Fexamples%2Fredundant_closure_call.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fredundant_closure_call.stderr?ref=2abd1f73d93e3e57515121cc98cc14fe6ccb17dd", "patch": "@@ -16,7 +16,7 @@ error: Try not to call a closure in the expression where it is declared.\n  --> redundant_closure_call.rs:7:10\n   |\n 7 | \tlet a = (|| 42)();\n-  | \t        ^^^^^^^^^ help: Try doing something like:  `42`\n+  | \t        ^^^^^^^^^ help: Try doing something like: : `42`\n \n error: Try not to call a closure in the expression where it is declared.\n   --> redundant_closure_call.rs:10:14"}, {"sha": "6e8bfedf4335369383b1d838d6af8bbbce5fa404", "filename": "clippy_tests/examples/reference.stderr", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/2abd1f73d93e3e57515121cc98cc14fe6ccb17dd/clippy_tests%2Fexamples%2Freference.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2abd1f73d93e3e57515121cc98cc14fe6ccb17dd/clippy_tests%2Fexamples%2Freference.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Freference.stderr?ref=2abd1f73d93e3e57515121cc98cc14fe6ccb17dd", "patch": "@@ -2,69 +2,69 @@ error: immediately dereferencing a reference\n   --> reference.rs:19:13\n    |\n 19 |     let b = *&a;\n-   |             ^^^ help: try this `a`\n+   |             ^^^ help: try this: `a`\n    |\n    = note: `-D deref-addrof` implied by `-D warnings`\n \n error: immediately dereferencing a reference\n   --> reference.rs:21:13\n    |\n 21 |     let b = *&get_number();\n-   |             ^^^^^^^^^^^^^^ help: try this `get_number()`\n+   |             ^^^^^^^^^^^^^^ help: try this: `get_number()`\n \n error: immediately dereferencing a reference\n   --> reference.rs:26:13\n    |\n 26 |     let b = *&bytes[1..2][0];\n-   |             ^^^^^^^^^^^^^^^^ help: try this `bytes[1..2][0]`\n+   |             ^^^^^^^^^^^^^^^^ help: try this: `bytes[1..2][0]`\n \n error: immediately dereferencing a reference\n   --> reference.rs:30:13\n    |\n 30 |     let b = *&(a);\n-   |             ^^^^^ help: try this `(a)`\n+   |             ^^^^^ help: try this: `(a)`\n \n error: immediately dereferencing a reference\n   --> reference.rs:32:13\n    |\n 32 |     let b = *(&a);\n-   |             ^^^^^ help: try this `a`\n+   |             ^^^^^ help: try this: `a`\n \n error: immediately dereferencing a reference\n   --> reference.rs:34:13\n    |\n 34 |     let b = *((&a));\n-   |             ^^^^^^^ help: try this `a`\n+   |             ^^^^^^^ help: try this: `a`\n \n error: immediately dereferencing a reference\n   --> reference.rs:36:13\n    |\n 36 |     let b = *&&a;\n-   |             ^^^^ help: try this `&a`\n+   |             ^^^^ help: try this: `&a`\n \n error: immediately dereferencing a reference\n   --> reference.rs:38:14\n    |\n 38 |     let b = **&aref;\n-   |              ^^^^^^ help: try this `aref`\n+   |              ^^^^^^ help: try this: `aref`\n \n error: immediately dereferencing a reference\n   --> reference.rs:42:14\n    |\n 42 |     let b = **&&a;\n-   |              ^^^^ help: try this `&a`\n+   |              ^^^^ help: try this: `&a`\n \n error: immediately dereferencing a reference\n   --> reference.rs:46:17\n    |\n 46 |         let y = *&mut x;\n-   |                 ^^^^^^^ help: try this `x`\n+   |                 ^^^^^^^ help: try this: `x`\n \n error: immediately dereferencing a reference\n   --> reference.rs:53:18\n    |\n 53 |         let y = **&mut &mut x;\n-   |                  ^^^^^^^^^^^^ help: try this `&mut x`\n+   |                  ^^^^^^^^^^^^ help: try this: `&mut x`\n \n error: aborting due to 11 previous errors\n "}, {"sha": "74976bfdc27f1ac58f2a6bae3fb6544c3f67b58a", "filename": "clippy_tests/examples/short_circuit_statement.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2abd1f73d93e3e57515121cc98cc14fe6ccb17dd/clippy_tests%2Fexamples%2Fshort_circuit_statement.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2abd1f73d93e3e57515121cc98cc14fe6ccb17dd/clippy_tests%2Fexamples%2Fshort_circuit_statement.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fshort_circuit_statement.stderr?ref=2abd1f73d93e3e57515121cc98cc14fe6ccb17dd", "patch": "@@ -2,21 +2,21 @@ error: boolean short circuit operator in statement may be clearer using an expli\n  --> short_circuit_statement.rs:7:5\n   |\n 7 |     f() && g();\n-  |     ^^^^^^^^^^^ help: replace it with `if f() { g(); }`\n+  |     ^^^^^^^^^^^ help: replace it with: `if f() { g(); }`\n   |\n   = note: `-D short-circuit-statement` implied by `-D warnings`\n \n error: boolean short circuit operator in statement may be clearer using an explicit test\n  --> short_circuit_statement.rs:8:5\n   |\n 8 |     f() || g();\n-  |     ^^^^^^^^^^^ help: replace it with `if !f() { g(); }`\n+  |     ^^^^^^^^^^^ help: replace it with: `if !f() { g(); }`\n \n error: boolean short circuit operator in statement may be clearer using an explicit test\n  --> short_circuit_statement.rs:9:5\n   |\n 9 |     1 == 2 || g();\n-  |     ^^^^^^^^^^^^^^ help: replace it with `if !(1 == 2) { g(); }`\n+  |     ^^^^^^^^^^^^^^ help: replace it with: `if !(1 == 2) { g(); }`\n \n error: aborting due to 3 previous errors\n "}, {"sha": "fd2d749f4ecb12fa9acd6fdd1914192400369e4d", "filename": "clippy_tests/examples/strings.stderr", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/2abd1f73d93e3e57515121cc98cc14fe6ccb17dd/clippy_tests%2Fexamples%2Fstrings.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2abd1f73d93e3e57515121cc98cc14fe6ccb17dd/clippy_tests%2Fexamples%2Fstrings.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fstrings.stderr?ref=2abd1f73d93e3e57515121cc98cc14fe6ccb17dd", "patch": "@@ -2,7 +2,7 @@ error: manual implementation of an assign operation\n   --> strings.rs:10:9\n    |\n 10 |         x = x + \".\";\n-   |         ^^^^^^^^^^^ help: replace it with `x += \".\"`\n+   |         ^^^^^^^^^^^ help: replace it with: `x += \".\"`\n    |\n    = note: `-D assign-op-pattern` implied by `-D warnings`\n \n@@ -32,7 +32,7 @@ error: manual implementation of an assign operation\n   --> strings.rs:24:9\n    |\n 24 |         x = x + \".\";\n-   |         ^^^^^^^^^^^ help: replace it with `x += \".\"`\n+   |         ^^^^^^^^^^^ help: replace it with: `x += \".\"`\n \n error: you assigned the result of adding something to this string. Consider using `String::push_str()` instead\n   --> strings.rs:38:9\n@@ -44,7 +44,7 @@ error: manual implementation of an assign operation\n   --> strings.rs:38:9\n    |\n 38 |         x = x + \".\";\n-   |         ^^^^^^^^^^^ help: replace it with `x += \".\"`\n+   |         ^^^^^^^^^^^ help: replace it with: `x += \".\"`\n \n error: you added something to a string. Consider using `String::push_str()` instead\n   --> strings.rs:42:13\n@@ -56,17 +56,23 @@ error: calling `as_bytes()` on a string literal\n   --> strings.rs:50:14\n    |\n 50 |     let bs = \"hello there\".as_bytes();\n-   |              ^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using a byte string literal instead `b\"hello there\"`\n+   |              ^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using a byte string literal instead: `b\"hello there\"`\n    |\n    = note: `-D string-lit-as-bytes` implied by `-D warnings`\n \n+error: calling `as_bytes()` on a string literal\n+  --> strings.rs:55:18\n+   |\n+55 |     let strify = stringify!(foobar).as_bytes();\n+   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using a byte string literal instead: `bstringify!(foobar)`\n+\n error: manual implementation of an assign operation\n   --> strings.rs:65:7\n    |\n 65 |     ; x = x + 1;\n-   |       ^^^^^^^^^ help: replace it with `x += 1`\n+   |       ^^^^^^^^^ help: replace it with: `x += 1`\n \n-error: aborting due to 10 previous errors\n+error: aborting due to 11 previous errors\n \n \n To learn more, run the command again with --verbose."}, {"sha": "c2e05ddc8df1638503d695c664e012f37c6a5d7e", "filename": "clippy_tests/examples/swap.stderr", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/2abd1f73d93e3e57515121cc98cc14fe6ccb17dd/clippy_tests%2Fexamples%2Fswap.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2abd1f73d93e3e57515121cc98cc14fe6ccb17dd/clippy_tests%2Fexamples%2Fswap.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fswap.stderr?ref=2abd1f73d93e3e57515121cc98cc14fe6ccb17dd", "patch": "@@ -4,7 +4,7 @@ error: this looks like you are swapping elements of `foo` manually\n 11 | /     let temp = foo[0];\n 12 | |     foo[0] = foo[1];\n 13 | |     foo[1] = temp;\n-   | |_________________^ help: try `foo.swap(0, 1)`\n+   | |_________________^ help: try: `foo.swap(0, 1)`\n    |\n    = note: `-D manual-swap` implied by `-D warnings`\n \n@@ -14,15 +14,15 @@ error: this looks like you are swapping elements of `foo` manually\n 20 | /     let temp = foo[0];\n 21 | |     foo[0] = foo[1];\n 22 | |     foo[1] = temp;\n-   | |_________________^ help: try `foo.swap(0, 1)`\n+   | |_________________^ help: try: `foo.swap(0, 1)`\n \n error: this looks like you are swapping elements of `foo` manually\n   --> swap.rs:29:5\n    |\n 29 | /     let temp = foo[0];\n 30 | |     foo[0] = foo[1];\n 31 | |     foo[1] = temp;\n-   | |_________________^ help: try `foo.swap(0, 1)`\n+   | |_________________^ help: try: `foo.swap(0, 1)`\n \n error: this looks like you are swapping `a` and `b` manually\n   --> swap.rs:47:7\n@@ -31,7 +31,7 @@ error: this looks like you are swapping `a` and `b` manually\n    |  _______^\n 48 | |     a = b;\n 49 | |     b = t;\n-   | |_________^ help: try `std::mem::swap(&mut a, &mut b)`\n+   | |_________^ help: try: `std::mem::swap(&mut a, &mut b)`\n    |\n    = note: or maybe you should use `std::mem::replace`?\n \n@@ -42,7 +42,7 @@ error: this looks like you are swapping `c.0` and `a` manually\n    |  _______^\n 57 | |     c.0 = a;\n 58 | |     a = t;\n-   | |_________^ help: try `std::mem::swap(&mut c.0, &mut a)`\n+   | |_________^ help: try: `std::mem::swap(&mut c.0, &mut a)`\n    |\n    = note: or maybe you should use `std::mem::replace`?\n \n@@ -51,7 +51,7 @@ error: this looks like you are trying to swap `a` and `b`\n    |\n 44 | /     a = b;\n 45 | |     b = a;\n-   | |_________^ help: try `std::mem::swap(&mut a, &mut b)`\n+   | |_________^ help: try: `std::mem::swap(&mut a, &mut b)`\n    |\n    = note: `-D almost-swapped` implied by `-D warnings`\n    = note: or maybe you should use `std::mem::replace`?\n@@ -61,7 +61,7 @@ error: this looks like you are trying to swap `c.0` and `a`\n    |\n 53 | /     c.0 = a;\n 54 | |     a = c.0;\n-   | |___________^ help: try `std::mem::swap(&mut c.0, &mut a)`\n+   | |___________^ help: try: `std::mem::swap(&mut c.0, &mut a)`\n    |\n    = note: or maybe you should use `std::mem::replace`?\n "}, {"sha": "59cb6448b4ebea1fbbba33ce39474c45ee249d8b", "filename": "clippy_tests/examples/toplevel_ref_arg.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2abd1f73d93e3e57515121cc98cc14fe6ccb17dd/clippy_tests%2Fexamples%2Ftoplevel_ref_arg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2abd1f73d93e3e57515121cc98cc14fe6ccb17dd/clippy_tests%2Fexamples%2Ftoplevel_ref_arg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Ftoplevel_ref_arg.stderr?ref=2abd1f73d93e3e57515121cc98cc14fe6ccb17dd", "patch": "@@ -10,25 +10,25 @@ error: `ref` on an entire `let` pattern is discouraged, take a reference with `&\n   --> toplevel_ref_arg.rs:18:7\n    |\n 18 |   let ref x = 1;\n-   |   ----^^^^^----- help: try `let x = &1;`\n+   |   ----^^^^^----- help: try: `let x = &1;`\n \n error: `ref` on an entire `let` pattern is discouraged, take a reference with `&` instead\n   --> toplevel_ref_arg.rs:20:7\n    |\n 20 |   let ref y: (&_, u8) = (&1, 2);\n-   |   ----^^^^^--------------------- help: try `let y: &(&_, u8) = &(&1, 2);`\n+   |   ----^^^^^--------------------- help: try: `let y: &(&_, u8) = &(&1, 2);`\n \n error: `ref` on an entire `let` pattern is discouraged, take a reference with `&` instead\n   --> toplevel_ref_arg.rs:22:7\n    |\n 22 |   let ref z = 1 + 2;\n-   |   ----^^^^^--------- help: try `let z = &(1 + 2);`\n+   |   ----^^^^^--------- help: try: `let z = &(1 + 2);`\n \n error: `ref` on an entire `let` pattern is discouraged, take a reference with `&` instead\n   --> toplevel_ref_arg.rs:24:7\n    |\n 24 |   let ref mut z = 1 + 2;\n-   |   ----^^^^^^^^^--------- help: try `let z = &mut (1 + 2);`\n+   |   ----^^^^^^^^^--------- help: try: `let z = &mut (1 + 2);`\n \n error: aborting due to 5 previous errors\n "}, {"sha": "45daf70b171a4be398c77ff4c2b3a19a6b63866e", "filename": "clippy_tests/examples/unreadable_literal.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2abd1f73d93e3e57515121cc98cc14fe6ccb17dd/clippy_tests%2Fexamples%2Funreadable_literal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2abd1f73d93e3e57515121cc98cc14fe6ccb17dd/clippy_tests%2Fexamples%2Funreadable_literal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Funreadable_literal.rs?ref=2abd1f73d93e3e57515121cc98cc14fe6ccb17dd", "patch": "@@ -0,0 +1,8 @@\n+#![feature(plugin)]\n+#![plugin(clippy)]\n+#[warn(unreadable_literal)]\n+#[allow(unused_variables)]\n+fn main() {\n+    let good = (0b1011_i64, 0o1_234_u32, 0x1_234_567, 1_2345_6789, 1234_f32, 1_234.12_f32, 1_234.123_f32, 1.123_4_f32);\n+    let bad = (0b10110_i64, 0x12345678901_usize, 12345_f32, 1.23456_f32);\n+}"}, {"sha": "a7d97ec4b0f786b46c166de68930ab51b3e1bc78", "filename": "clippy_tests/examples/unreadable_literal.stderr", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/2abd1f73d93e3e57515121cc98cc14fe6ccb17dd/clippy_tests%2Fexamples%2Funreadable_literal.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2abd1f73d93e3e57515121cc98cc14fe6ccb17dd/clippy_tests%2Fexamples%2Funreadable_literal.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Funreadable_literal.stderr?ref=2abd1f73d93e3e57515121cc98cc14fe6ccb17dd", "patch": "@@ -0,0 +1,37 @@\n+error: long literal lacking separators\n+ --> unreadable_literal.rs:7:16\n+  |\n+7 |     let bad = (0b10110_i64, 0x12345678901_usize, 12345_f32, 1.23456_f32);\n+  |                ^^^^^^^^^^^\n+  |\n+  = note: `-D unreadable-literal` implied by `-D warnings`\n+  = help: consider using underscores to make literal more readable\n+\n+error: long literal lacking separators\n+ --> unreadable_literal.rs:7:29\n+  |\n+7 |     let bad = (0b10110_i64, 0x12345678901_usize, 12345_f32, 1.23456_f32);\n+  |                             ^^^^^^^^^^^^^^^^^^^\n+  |\n+  = help: consider using underscores to make literal more readable\n+\n+error: long literal lacking separators\n+ --> unreadable_literal.rs:7:50\n+  |\n+7 |     let bad = (0b10110_i64, 0x12345678901_usize, 12345_f32, 1.23456_f32);\n+  |                                                  ^^^^^^^^^\n+  |\n+  = help: consider using underscores to make literal more readable\n+\n+error: long literal lacking separators\n+ --> unreadable_literal.rs:7:61\n+  |\n+7 |     let bad = (0b10110_i64, 0x12345678901_usize, 12345_f32, 1.23456_f32);\n+  |                                                             ^^^^^^^^^^^\n+  |\n+  = help: consider using underscores to make literal more readable\n+\n+error: aborting due to 4 previous errors\n+\n+\n+To learn more, run the command again with --verbose."}, {"sha": "968e2ad8d44716886e115cb9063667a9c5d26eb1", "filename": "clippy_tests/examples/vec.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/2abd1f73d93e3e57515121cc98cc14fe6ccb17dd/clippy_tests%2Fexamples%2Fvec.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2abd1f73d93e3e57515121cc98cc14fe6ccb17dd/clippy_tests%2Fexamples%2Fvec.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fvec.stderr?ref=2abd1f73d93e3e57515121cc98cc14fe6ccb17dd", "patch": "@@ -2,39 +2,39 @@ error: useless use of `vec!`\n   --> vec.rs:24:14\n    |\n 24 |     on_slice(&vec![]);\n-   |              ^^^^^^^ help: you can use a slice directly `&[]`\n+   |              ^^^^^^^ help: you can use a slice directly: `&[]`\n    |\n    = note: `-D useless-vec` implied by `-D warnings`\n \n error: useless use of `vec!`\n   --> vec.rs:27:14\n    |\n 27 |     on_slice(&vec![1, 2]);\n-   |              ^^^^^^^^^^^ help: you can use a slice directly `&[1, 2]`\n+   |              ^^^^^^^^^^^ help: you can use a slice directly: `&[1, 2]`\n \n error: useless use of `vec!`\n   --> vec.rs:30:14\n    |\n 30 |     on_slice(&vec ![1, 2]);\n-   |              ^^^^^^^^^^^^ help: you can use a slice directly `&[1, 2]`\n+   |              ^^^^^^^^^^^^ help: you can use a slice directly: `&[1, 2]`\n \n error: useless use of `vec!`\n   --> vec.rs:33:14\n    |\n 33 |     on_slice(&vec!(1, 2));\n-   |              ^^^^^^^^^^^ help: you can use a slice directly `&[1, 2]`\n+   |              ^^^^^^^^^^^ help: you can use a slice directly: `&[1, 2]`\n \n error: useless use of `vec!`\n   --> vec.rs:36:14\n    |\n 36 |     on_slice(&vec![1; 2]);\n-   |              ^^^^^^^^^^^ help: you can use a slice directly `&[1; 2]`\n+   |              ^^^^^^^^^^^ help: you can use a slice directly: `&[1; 2]`\n \n error: useless use of `vec!`\n   --> vec.rs:49:14\n    |\n 49 |     for a in vec![1, 2, 3] {\n-   |              ^^^^^^^^^^^^^ help: you can use a slice directly `&[1, 2, 3]`\n+   |              ^^^^^^^^^^^^^ help: you can use a slice directly: `&[1, 2, 3]`\n \n error: aborting due to 6 previous errors\n "}, {"sha": "f84b55267290bb9e00394e15cba2b0e2fcf0a8a3", "filename": "clippy_tests/examples/while_loop.stderr", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/2abd1f73d93e3e57515121cc98cc14fe6ccb17dd/clippy_tests%2Fexamples%2Fwhile_loop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2abd1f73d93e3e57515121cc98cc14fe6ccb17dd/clippy_tests%2Fexamples%2Fwhile_loop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fwhile_loop.stderr?ref=2abd1f73d93e3e57515121cc98cc14fe6ccb17dd", "patch": "@@ -8,7 +8,7 @@ error: this loop could be written as a `while let` loop\n 13 | |             break\n 14 | |         }\n 15 | |     }\n-   | |_____^ help: try `while let Some(_x) = y { .. }`\n+   | |_____^ help: try: `while let Some(_x) = y { .. }`\n    |\n    = note: `-D while-let-loop` implied by `-D warnings`\n \n@@ -21,7 +21,7 @@ error: this loop could be written as a `while let` loop\n 25 | |             None => break\n 26 | |         };\n 27 | |     }\n-   | |_____^ help: try `while let Some(_x) = y { .. }`\n+   | |_____^ help: try: `while let Some(_x) = y { .. }`\n \n error: this loop could be written as a `while let` loop\n   --> while_loop.rs:28:5\n@@ -33,7 +33,7 @@ error: this loop could be written as a `while let` loop\n ...  |\n 34 | |         let _str = \"foo\";\n 35 | |     }\n-   | |_____^ help: try `while let Some(x) = y { .. }`\n+   | |_____^ help: try: `while let Some(x) = y { .. }`\n \n error: this loop could be written as a `while let` loop\n   --> while_loop.rs:36:5\n@@ -45,7 +45,7 @@ error: this loop could be written as a `while let` loop\n ...  |\n 42 | |         { let _b = \"foobar\"; }\n 43 | |     }\n-   | |_____^ help: try `while let Some(x) = y { .. }`\n+   | |_____^ help: try: `while let Some(x) = y { .. }`\n \n error: this loop could be written as a `while let` loop\n   --> while_loop.rs:58:5\n@@ -57,15 +57,15 @@ error: this loop could be written as a `while let` loop\n ...  |\n 64 | |         let _ = (e, l);\n 65 | |     }\n-   | |_____^ help: try `while let Some(word) = \"\".split_whitespace().next() { .. }`\n+   | |_____^ help: try: `while let Some(word) = \"\".split_whitespace().next() { .. }`\n \n error: this loop could be written as a `for` loop\n   --> while_loop.rs:68:5\n    |\n 68 | /     while let Option::Some(x) = iter.next() {\n 69 | |         println!(\"{}\", x);\n 70 | |     }\n-   | |_____^ help: try `for x in iter { .. }`\n+   | |_____^ help: try: `for x in iter { .. }`\n    |\n    = note: `-D while-let-on-iterator` implied by `-D warnings`\n \n@@ -75,13 +75,13 @@ error: this loop could be written as a `for` loop\n 73 | /     while let Some(x) = iter.next() {\n 74 | |         println!(\"{}\", x);\n 75 | |     }\n-   | |_____^ help: try `for x in iter { .. }`\n+   | |_____^ help: try: `for x in iter { .. }`\n \n error: this loop could be written as a `for` loop\n   --> while_loop.rs:78:5\n    |\n 78 |     while let Some(_) = iter.next() {}\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `for _ in iter { .. }`\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `for _ in iter { .. }`\n \n error: this loop could be written as a `while let` loop\n    --> while_loop.rs:118:5\n@@ -93,7 +93,7 @@ error: this loop could be written as a `while let` loop\n 122 | |         };\n 123 | |         loop {}\n 124 | |     }\n-    | |_____^ help: try `while let Some(ele) = iter.next() { .. }`\n+    | |_____^ help: try: `while let Some(ele) = iter.next() { .. }`\n \n error: empty `loop {}` detected. You may want to either use `panic!()` or add `std::thread::sleep(..);` to the loop body.\n    --> while_loop.rs:123:9"}]}