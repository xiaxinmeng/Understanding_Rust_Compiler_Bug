{"sha": "384f044d826f68827802ce6f255a09282e437a09", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM4NGYwNDRkODI2ZjY4ODI3ODAyY2U2ZjI1NWEwOTI4MmU0MzdhMDk=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-02-28T17:32:54Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-02-28T17:32:54Z"}, "message": "convert MIR to iterate over the bodies vector", "tree": {"sha": "53c6792f46f6f7cc4a3bbad8ca63dca7b55b910e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/53c6792f46f6f7cc4a3bbad8ca63dca7b55b910e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/384f044d826f68827802ce6f255a09282e437a09", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/384f044d826f68827802ce6f255a09282e437a09", "html_url": "https://github.com/rust-lang/rust/commit/384f044d826f68827802ce6f255a09282e437a09", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/384f044d826f68827802ce6f255a09282e437a09/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a780fa3f67dc6d1f4a450b4f367727a7e87a7867", "url": "https://api.github.com/repos/rust-lang/rust/commits/a780fa3f67dc6d1f4a450b4f367727a7e87a7867", "html_url": "https://github.com/rust-lang/rust/commit/a780fa3f67dc6d1f4a450b4f367727a7e87a7867"}], "stats": {"total": 28, "additions": 7, "deletions": 21}, "files": [{"sha": "2777c4d248710c42c0177608b62e5224ba6db2d3", "filename": "src/librustc/dep_graph/dep_node.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/384f044d826f68827802ce6f255a09282e437a09/src%2Flibrustc%2Fdep_graph%2Fdep_node.rs", "raw_url": "https://github.com/rust-lang/rust/raw/384f044d826f68827802ce6f255a09282e437a09/src%2Flibrustc%2Fdep_graph%2Fdep_node.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdep_graph%2Fdep_node.rs?ref=384f044d826f68827802ce6f255a09282e437a09", "patch": "@@ -89,6 +89,7 @@ pub enum DepNode<D: Clone + Debug> {\n \n     // Represents the MIR for a fn; also used as the task node for\n     // things read/modify that MIR.\n+    MirKrate,\n     Mir(D),\n \n     BorrowCheckKrate,\n@@ -212,6 +213,7 @@ impl<D: Clone + Debug> DepNode<D> {\n         match *self {\n             Krate => Some(Krate),\n             BorrowCheckKrate => Some(BorrowCheckKrate),\n+            MirKrate => Some(MirKrate),\n             TypeckBodiesKrate => Some(TypeckBodiesKrate),\n             CollectLanguageItems => Some(CollectLanguageItems),\n             CheckStaticRecursion => Some(CheckStaticRecursion),"}, {"sha": "a41489ff89ff46a24d804ebb4f1fca59966f5d3d", "filename": "src/librustc_mir/mir_map.rs", "status": "modified", "additions": 5, "deletions": 21, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/384f044d826f68827802ce6f255a09282e437a09/src%2Flibrustc_mir%2Fmir_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/384f044d826f68827802ce6f255a09282e437a09/src%2Flibrustc_mir%2Fmir_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fmir_map.rs?ref=384f044d826f68827802ce6f255a09282e437a09", "patch": "@@ -30,7 +30,6 @@ use rustc::ty::{self, Ty, TyCtxt};\n use rustc::ty::maps::Providers;\n use rustc::ty::subst::Substs;\n use rustc::hir;\n-use rustc::hir::intravisit::{Visitor, NestedVisitorMap};\n use syntax::abi::Abi;\n use syntax::ast;\n use syntax_pos::Span;\n@@ -39,9 +38,11 @@ use std::cell::RefCell;\n use std::mem;\n \n pub fn build_mir_for_crate<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>) {\n-    tcx.visit_all_item_likes_in_krate(DepNode::Mir, &mut BuildMir {\n-        tcx: tcx\n-    }.as_deep_visitor());\n+    tcx.dep_graph.with_task(DepNode::MirKrate, || {\n+        tcx.visit_all_bodies_in_krate(|body_owner_def_id, _body_id| {\n+            tcx.item_mir(body_owner_def_id);\n+        });\n+    });\n }\n \n pub fn provide(providers: &mut Providers) {\n@@ -180,23 +181,6 @@ impl<'a, 'gcx: 'tcx, 'tcx> MutVisitor<'tcx> for GlobalizeMir<'a, 'gcx> {\n ///////////////////////////////////////////////////////////////////////////\n // BuildMir -- walks a crate, looking for fn items and methods to build MIR from\n \n-struct BuildMir<'a, 'tcx: 'a> {\n-    tcx: TyCtxt<'a, 'tcx, 'tcx>\n-}\n-\n-impl<'a, 'tcx> Visitor<'tcx> for BuildMir<'a, 'tcx> {\n-    fn nested_visit_map<'this>(&'this mut self) -> NestedVisitorMap<'this, 'tcx> {\n-        NestedVisitorMap::None\n-    }\n-\n-    fn visit_nested_body(&mut self, body_id: hir::BodyId) {\n-        self.tcx.item_mir(self.tcx.hir.body_owner_def_id(body_id));\n-\n-        let body = self.tcx.hir.body(body_id);\n-        self.visit_body(body);\n-    }\n-}\n-\n fn closure_self_ty<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n                              closure_expr_id: ast::NodeId,\n                              body_id: hir::BodyId)"}]}