{"sha": "9a0b89b5341c93a071e8a5be78b3fb066b12c5ba", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlhMGI4OWI1MzQxYzkzYTA3MWU4YTViZTc4YjNmYjA2NmIxMmM1YmE=", "commit": {"author": {"name": "Elly Jones", "email": "elly@leptoquark.net", "date": "2011-12-17T03:27:04Z"}, "committer": {"name": "Elly Jones", "email": "elly@leptoquark.net", "date": "2011-12-17T03:27:04Z"}, "message": "cargo: fix some warnings", "tree": {"sha": "f359c8456ed2dd6963fa54ca8b983e5ce0b2478c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f359c8456ed2dd6963fa54ca8b983e5ce0b2478c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9a0b89b5341c93a071e8a5be78b3fb066b12c5ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9a0b89b5341c93a071e8a5be78b3fb066b12c5ba", "html_url": "https://github.com/rust-lang/rust/commit/9a0b89b5341c93a071e8a5be78b3fb066b12c5ba", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9a0b89b5341c93a071e8a5be78b3fb066b12c5ba/comments", "author": null, "committer": null, "parents": [{"sha": "327af5b9f3cd9ec6963b3c75fec8510a23916750", "url": "https://api.github.com/repos/rust-lang/rust/commits/327af5b9f3cd9ec6963b3c75fec8510a23916750", "html_url": "https://github.com/rust-lang/rust/commit/327af5b9f3cd9ec6963b3c75fec8510a23916750"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "f7b3cd2116829701fdf1907025ac52cfb5462fc6", "filename": "src/cargo/cargo.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/9a0b89b5341c93a071e8a5be78b3fb066b12c5ba/src%2Fcargo%2Fcargo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a0b89b5341c93a071e8a5be78b3fb066b12c5ba/src%2Fcargo%2Fcargo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcargo%2Fcargo.rs?ref=9a0b89b5341c93a071e8a5be78b3fb066b12c5ba", "patch": "@@ -184,7 +184,7 @@ fn try_parse_sources(filename: str, sources: map::hashmap<str, source>) {\n     }\n }\n \n-fn load_one_source_package(&c: cargo, &src: source, p: map::hashmap<str, json::json>) {\n+fn load_one_source_package(&src: source, p: map::hashmap<str, json::json>) {\n     let name = alt p.find(\"name\") {\n         some(json::string(_n)) { _n }\n         _ {\n@@ -239,7 +239,7 @@ fn load_source_packages(&c: cargo, &src: source) {\n             for _j: json::json in *js {\n                 alt _j {\n                     json::dict(_p) {\n-                        load_one_source_package(c, src, _p);\n+                        load_one_source_package(src, _p);\n                     }\n                     _ {\n                         warn(\"Malformed source json: \" + src.name + \" (non-dict pkg)\");\n@@ -364,6 +364,7 @@ fn install_curl(c: cargo, wd: str, url: str) {\n     }\n     run::run_program(\"tar\", [\"-x\", \"--strip-components=1\",\n                              \"-C\", wd, \"-f\", tarpath]);\n+    install_source(c, wd);\n }\n \n fn install_file(c: cargo, wd: str, path: str) {\n@@ -414,7 +415,7 @@ fn install_uuid(c: cargo, wd: str, uuid: str) {\n         }\n     });\n     if vec::len(ps) == 1u {\n-        let (s, p) = ps[0];\n+        let (_, p) = ps[0];\n         install_package(c, wd, p);\n         ret;\n     } else if vec::len(ps) == 0u {\n@@ -435,7 +436,7 @@ fn install_named(c: cargo, wd: str, name: str) {\n         }\n     });\n     if vec::len(ps) == 1u {\n-        let (s, p) = ps[0];\n+        let (_, p) = ps[0];\n         install_package(c, wd, p);\n         ret;\n     } else if vec::len(ps) == 0u {"}]}