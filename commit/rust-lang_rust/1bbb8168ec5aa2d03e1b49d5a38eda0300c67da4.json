{"sha": "1bbb8168ec5aa2d03e1b49d5a38eda0300c67da4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFiYmI4MTY4ZWM1YWEyZDAzZTFiNDlkNWEzOGVkYTAzMDBjNjdkYTQ=", "commit": {"author": {"name": "Stefan Schindler", "email": "dns2utf8@estada.ch", "date": "2019-11-15T01:30:44Z"}, "committer": {"name": "Stefan Schindler", "email": "dns2utf8@estada.ch", "date": "2019-11-15T01:30:44Z"}, "message": "Prevent jumps when selecting one or many lines", "tree": {"sha": "47e7df338e6fa8715a3b0bd8d632d379f58116af", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/47e7df338e6fa8715a3b0bd8d632d379f58116af"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1bbb8168ec5aa2d03e1b49d5a38eda0300c67da4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1bbb8168ec5aa2d03e1b49d5a38eda0300c67da4", "html_url": "https://github.com/rust-lang/rust/commit/1bbb8168ec5aa2d03e1b49d5a38eda0300c67da4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1bbb8168ec5aa2d03e1b49d5a38eda0300c67da4/comments", "author": {"login": "dns2utf8", "id": 739070, "node_id": "MDQ6VXNlcjczOTA3MA==", "avatar_url": "https://avatars.githubusercontent.com/u/739070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dns2utf8", "html_url": "https://github.com/dns2utf8", "followers_url": "https://api.github.com/users/dns2utf8/followers", "following_url": "https://api.github.com/users/dns2utf8/following{/other_user}", "gists_url": "https://api.github.com/users/dns2utf8/gists{/gist_id}", "starred_url": "https://api.github.com/users/dns2utf8/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dns2utf8/subscriptions", "organizations_url": "https://api.github.com/users/dns2utf8/orgs", "repos_url": "https://api.github.com/users/dns2utf8/repos", "events_url": "https://api.github.com/users/dns2utf8/events{/privacy}", "received_events_url": "https://api.github.com/users/dns2utf8/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dns2utf8", "id": 739070, "node_id": "MDQ6VXNlcjczOTA3MA==", "avatar_url": "https://avatars.githubusercontent.com/u/739070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dns2utf8", "html_url": "https://github.com/dns2utf8", "followers_url": "https://api.github.com/users/dns2utf8/followers", "following_url": "https://api.github.com/users/dns2utf8/following{/other_user}", "gists_url": "https://api.github.com/users/dns2utf8/gists{/gist_id}", "starred_url": "https://api.github.com/users/dns2utf8/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dns2utf8/subscriptions", "organizations_url": "https://api.github.com/users/dns2utf8/orgs", "repos_url": "https://api.github.com/users/dns2utf8/repos", "events_url": "https://api.github.com/users/dns2utf8/events{/privacy}", "received_events_url": "https://api.github.com/users/dns2utf8/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "71cf364c3cf1c6b437be0e9352fa6d3ee8191404", "url": "https://api.github.com/repos/rust-lang/rust/commits/71cf364c3cf1c6b437be0e9352fa6d3ee8191404", "html_url": "https://github.com/rust-lang/rust/commit/71cf364c3cf1c6b437be0e9352fa6d3ee8191404"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "4db02d58c51acbf8973142662a360f5f6cb8ad76", "filename": "src/librustdoc/html/static/main.js", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/1bbb8168ec5aa2d03e1b49d5a38eda0300c67da4/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/1bbb8168ec5aa2d03e1b49d5a38eda0300c67da4/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js?ref=1bbb8168ec5aa2d03e1b49d5a38eda0300c67da4", "patch": "@@ -401,16 +401,21 @@ function getSearchElement() {\n         var prev_line_id = 0;\n \n         var set_fragment = function(name) {\n+            var x = window.scrollX,\n+                y = window.scrollY;\n             if (browserSupportsHistoryApi()) {\n                 history.replaceState(null, null, \"#\" + name);\n                 highlightSourceLines();\n             } else {\n                 location.replace(\"#\" + name);\n             }\n+            // Prevent jumps when selecting one or many lines\n+            window.scrollTo(x, y);\n         };\n \n         return function(ev) {\n             var cur_line_id = parseInt(ev.target.id, 10);\n+            ev.preventDefault();\n \n             if (ev.shiftKey && prev_line_id) {\n                 // Swap selection if needed"}]}