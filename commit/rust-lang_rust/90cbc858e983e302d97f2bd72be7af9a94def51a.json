{"sha": "90cbc858e983e302d97f2bd72be7af9a94def51a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkwY2JjODU4ZTk4M2UzMDJkOTdmMmJkNzJiZTdhZjlhOTRkZWY1MWE=", "commit": {"author": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-01-18T12:09:46Z"}, "committer": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-01-18T12:09:46Z"}, "message": "Fix spelling mistake", "tree": {"sha": "d807131f52f5764999b37ecc317a8e3e999bd918", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d807131f52f5764999b37ecc317a8e3e999bd918"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/90cbc858e983e302d97f2bd72be7af9a94def51a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/90cbc858e983e302d97f2bd72be7af9a94def51a", "html_url": "https://github.com/rust-lang/rust/commit/90cbc858e983e302d97f2bd72be7af9a94def51a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/90cbc858e983e302d97f2bd72be7af9a94def51a/comments", "author": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c6604bb281d6f8ca77c33f15e67a26e0ceeb95a3", "url": "https://api.github.com/repos/rust-lang/rust/commits/c6604bb281d6f8ca77c33f15e67a26e0ceeb95a3", "html_url": "https://github.com/rust-lang/rust/commit/c6604bb281d6f8ca77c33f15e67a26e0ceeb95a3"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "361919934749adaf480bb19273a843db18d980bb", "filename": "src/consts.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90cbc858e983e302d97f2bd72be7af9a94def51a/src%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90cbc858e983e302d97f2bd72be7af9a94def51a/src%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconsts.rs?ref=90cbc858e983e302d97f2bd72be7af9a94def51a", "patch": "@@ -484,7 +484,7 @@ impl<'c, 'cc> ConstEvalLateContext<'c, 'cc> {\n             if let Some(&PathResolution { base_def: DefConst(id), ..}) = lcx.tcx.def_map.borrow().get(&e.id) {\n                 maybe_id = Some(id);\n             }\n-            // separate if lets to avoid doubleborrowing the defmap\n+            // separate if lets to avoid double borrowing the def_map\n             if let Some(id) = maybe_id {\n                 if let Some(const_expr) = lookup_const_by_id(lcx.tcx, id, None) {\n                     let ret = self.expr(const_expr);"}]}