{"sha": "42b1694cca43524ac2cd28ccf0bd1cb465887754", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQyYjE2OTRjY2E0MzUyNGFjMmNkMjhjY2YwYmQxY2I0NjU4ODc3NTQ=", "commit": {"author": {"name": "John Clements", "email": "clements@racket-lang.org", "date": "2013-09-09T23:43:27Z"}, "committer": {"name": "John Clements", "email": "clements@racket-lang.org", "date": "2013-09-10T03:47:39Z"}, "message": "ident->name in middle", "tree": {"sha": "1fad51f7c9bfe6555c31a30241e9a12ee9d9674f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1fad51f7c9bfe6555c31a30241e9a12ee9d9674f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/42b1694cca43524ac2cd28ccf0bd1cb465887754", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/42b1694cca43524ac2cd28ccf0bd1cb465887754", "html_url": "https://github.com/rust-lang/rust/commit/42b1694cca43524ac2cd28ccf0bd1cb465887754", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/42b1694cca43524ac2cd28ccf0bd1cb465887754/comments", "author": {"login": "jbclements", "id": 226617, "node_id": "MDQ6VXNlcjIyNjYxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/226617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbclements", "html_url": "https://github.com/jbclements", "followers_url": "https://api.github.com/users/jbclements/followers", "following_url": "https://api.github.com/users/jbclements/following{/other_user}", "gists_url": "https://api.github.com/users/jbclements/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbclements/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbclements/subscriptions", "organizations_url": "https://api.github.com/users/jbclements/orgs", "repos_url": "https://api.github.com/users/jbclements/repos", "events_url": "https://api.github.com/users/jbclements/events{/privacy}", "received_events_url": "https://api.github.com/users/jbclements/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jbclements", "id": 226617, "node_id": "MDQ6VXNlcjIyNjYxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/226617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbclements", "html_url": "https://github.com/jbclements", "followers_url": "https://api.github.com/users/jbclements/followers", "following_url": "https://api.github.com/users/jbclements/following{/other_user}", "gists_url": "https://api.github.com/users/jbclements/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbclements/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbclements/subscriptions", "organizations_url": "https://api.github.com/users/jbclements/orgs", "repos_url": "https://api.github.com/users/jbclements/repos", "events_url": "https://api.github.com/users/jbclements/events{/privacy}", "received_events_url": "https://api.github.com/users/jbclements/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "af259a651d52e7243c74a833b2b39a61890e89fe", "url": "https://api.github.com/repos/rust-lang/rust/commits/af259a651d52e7243c74a833b2b39a61890e89fe", "html_url": "https://github.com/rust-lang/rust/commit/af259a651d52e7243c74a833b2b39a61890e89fe"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "d54a079a2bfeb2f7a42b71179b4407c408faf2ef", "filename": "src/librustc/middle/trans/_match.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/42b1694cca43524ac2cd28ccf0bd1cb465887754/src%2Flibrustc%2Fmiddle%2Ftrans%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/42b1694cca43524ac2cd28ccf0bd1cb465887754/src%2Flibrustc%2Fmiddle%2Ftrans%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2F_match.rs?ref=42b1694cca43524ac2cd28ccf0bd1cb465887754", "patch": "@@ -671,7 +671,8 @@ fn enter_opt<'r>(bcx: @mut Block,\n                     let mut reordered_patterns = ~[];\n                     let r = ty::lookup_struct_fields(tcx, struct_id);\n                     for field in r.iter() {\n-                            match field_pats.iter().find(|p| p.ident == field.ident) {\n+                            match field_pats.iter().find(|p| p.ident.name\n+                                                         == field.ident.name) {\n                                 None => reordered_patterns.push(dummy),\n                                 Some(fp) => reordered_patterns.push(fp.pat)\n                             }\n@@ -752,7 +753,7 @@ fn enter_rec_or_struct<'r>(bcx: @mut Block,\n             ast::PatStruct(_, ref fpats, _) => {\n                 let mut pats = ~[];\n                 for fname in fields.iter() {\n-                    match fpats.iter().find(|p| p.ident == *fname) {\n+                    match fpats.iter().find(|p| p.ident.name == fname.name) {\n                         None => pats.push(dummy),\n                         Some(pat) => pats.push(pat.pat)\n                     }\n@@ -1102,7 +1103,7 @@ fn collect_record_or_struct_fields(bcx: @mut Block,\n     fn extend(idents: &mut ~[ast::Ident], field_pats: &[ast::FieldPat]) {\n         for field_pat in field_pats.iter() {\n             let field_ident = field_pat.ident;\n-            if !idents.iter().any(|x| *x == field_ident) {\n+            if !idents.iter().any(|x| x.name == field_ident.name) {\n                 idents.push(field_ident);\n             }\n         }"}, {"sha": "300fb64863ca8c0fad6b781b21d1562cc5e83855", "filename": "src/librustc/middle/trans/reflect.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/42b1694cca43524ac2cd28ccf0bd1cb465887754/src%2Flibrustc%2Fmiddle%2Ftrans%2Freflect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/42b1694cca43524ac2cd28ccf0bd1cb465887754/src%2Flibrustc%2Fmiddle%2Ftrans%2Freflect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Freflect.rs?ref=42b1694cca43524ac2cd28ccf0bd1cb465887754", "patch": "@@ -256,7 +256,8 @@ impl Reflector {\n               let fields = ty::struct_fields(tcx, did, substs);\n               let mut named_fields = false;\n               if !fields.is_empty() {\n-                  named_fields = fields[0].ident != special_idents::unnamed_field;\n+                  named_fields =\n+                        fields[0].ident.name != special_idents::unnamed_field.name;\n               }\n \n               let extra = ~[self.c_slice(ty_to_str(tcx, t).to_managed()),"}]}