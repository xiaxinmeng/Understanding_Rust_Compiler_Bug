{"sha": "2cadc32b66e135eeb9ac22d433cd931b021792a5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJjYWRjMzJiNjZlMTM1ZWViOWFjMjJkNDMzY2Q5MzFiMDIxNzkyYTU=", "commit": {"author": {"name": "Nick Whitney", "email": "ubersentinel@gmail.com", "date": "2017-06-06T05:31:46Z"}, "committer": {"name": "Nick Whitney", "email": "ubersentinel@gmail.com", "date": "2017-06-07T02:42:48Z"}, "message": "Add max and min default fns to Ord trait\n\nPursuant to issue #25663, this commit adds the max and min functions to the Ord trait, enabling items that implement Ord to use UFCS (ex. 1.max(2)) instead of the longer std::cmp::max(1,2) format.", "tree": {"sha": "bfccae0612ff6fe569a77fdf6976358d690b3f7d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bfccae0612ff6fe569a77fdf6976358d690b3f7d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2cadc32b66e135eeb9ac22d433cd931b021792a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2cadc32b66e135eeb9ac22d433cd931b021792a5", "html_url": "https://github.com/rust-lang/rust/commit/2cadc32b66e135eeb9ac22d433cd931b021792a5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2cadc32b66e135eeb9ac22d433cd931b021792a5/comments", "author": {"login": "Razaekel", "id": 4242014, "node_id": "MDQ6VXNlcjQyNDIwMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4242014?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Razaekel", "html_url": "https://github.com/Razaekel", "followers_url": "https://api.github.com/users/Razaekel/followers", "following_url": "https://api.github.com/users/Razaekel/following{/other_user}", "gists_url": "https://api.github.com/users/Razaekel/gists{/gist_id}", "starred_url": "https://api.github.com/users/Razaekel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Razaekel/subscriptions", "organizations_url": "https://api.github.com/users/Razaekel/orgs", "repos_url": "https://api.github.com/users/Razaekel/repos", "events_url": "https://api.github.com/users/Razaekel/events{/privacy}", "received_events_url": "https://api.github.com/users/Razaekel/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Razaekel", "id": 4242014, "node_id": "MDQ6VXNlcjQyNDIwMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4242014?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Razaekel", "html_url": "https://github.com/Razaekel", "followers_url": "https://api.github.com/users/Razaekel/followers", "following_url": "https://api.github.com/users/Razaekel/following{/other_user}", "gists_url": "https://api.github.com/users/Razaekel/gists{/gist_id}", "starred_url": "https://api.github.com/users/Razaekel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Razaekel/subscriptions", "organizations_url": "https://api.github.com/users/Razaekel/orgs", "repos_url": "https://api.github.com/users/Razaekel/repos", "events_url": "https://api.github.com/users/Razaekel/events{/privacy}", "received_events_url": "https://api.github.com/users/Razaekel/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "76242aebb9d47558124c991a6faf0eb706d35703", "url": "https://api.github.com/repos/rust-lang/rust/commits/76242aebb9d47558124c991a6faf0eb706d35703", "html_url": "https://github.com/rust-lang/rust/commit/76242aebb9d47558124c991a6faf0eb706d35703"}], "stats": {"total": 55, "additions": 55, "deletions": 0}, "files": [{"sha": "b278b5dbb2ca6dfdd5b5763a18c458ca452c5836", "filename": "src/doc/unstable-book/src/SUMMARY.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2cadc32b66e135eeb9ac22d433cd931b021792a5/src%2Fdoc%2Funstable-book%2Fsrc%2FSUMMARY.md", "raw_url": "https://github.com/rust-lang/rust/raw/2cadc32b66e135eeb9ac22d433cd931b021792a5/src%2Fdoc%2Funstable-book%2Fsrc%2FSUMMARY.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2FSUMMARY.md?ref=2cadc32b66e135eeb9ac22d433cd931b021792a5", "patch": "@@ -165,6 +165,7 @@\n     - [n16](library-features/n16.md)\n     - [never_type_impls](library-features/never-type-impls.md)\n     - [nonzero](library-features/nonzero.md)\n+    - [ord_max_min](library-features/ord-max-min.md)\n     - [offset_to](library-features/offset-to.md)\n     - [once_poison](library-features/once-poison.md)\n     - [oom](library-features/oom.md)"}, {"sha": "564cd1ac30b26514f88772c53915876d0f54397f", "filename": "src/doc/unstable-book/src/library-features/ord-max-min.md", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/2cadc32b66e135eeb9ac22d433cd931b021792a5/src%2Fdoc%2Funstable-book%2Fsrc%2Flibrary-features%2Ford-max-min.md", "raw_url": "https://github.com/rust-lang/rust/raw/2cadc32b66e135eeb9ac22d433cd931b021792a5/src%2Fdoc%2Funstable-book%2Fsrc%2Flibrary-features%2Ford-max-min.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Flibrary-features%2Ford-max-min.md?ref=2cadc32b66e135eeb9ac22d433cd931b021792a5", "patch": "@@ -0,0 +1,7 @@\n+# `ord-max-min`\n+\n+The tracking issue for this feature is: [#25663]\n+\n+[#25663]: https://github.com/rust-lang/rust/issues/25663\n+\n+------------------------"}, {"sha": "4c50b11e70507ba53599b3c720b79dcd66829384", "filename": "src/libcore/cmp.rs", "status": "modified", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/2cadc32b66e135eeb9ac22d433cd931b021792a5/src%2Flibcore%2Fcmp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2cadc32b66e135eeb9ac22d433cd931b021792a5/src%2Flibcore%2Fcmp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fcmp.rs?ref=2cadc32b66e135eeb9ac22d433cd931b021792a5", "patch": "@@ -443,6 +443,42 @@ pub trait Ord: Eq + PartialOrd<Self> {\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     fn cmp(&self, other: &Self) -> Ordering;\n+\n+    /// Compares and returns the maximum of two values.\n+    ///\n+    /// Returns the second argument if the comparison determines them to be equal.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// #![feature(ord_max_min)]\n+    ///\n+    /// assert_eq!(2, 1.max(2));\n+    /// assert_eq!(2, 2.max(2));\n+    /// ```\n+    #[unstable(feature = \"ord_max_min\", issue = \"25663\")]\n+    fn max(self, other: Self) -> Self\n+    where Self: Sized {\n+        if other >= self { other } else { self }\n+    }\n+\n+    /// Compares and returns the minimum of two values.\n+    ///\n+    /// Returns the first argument if the comparison determines them to be equal.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// #![feature(ord_max_min)]\n+    ///\n+    /// assert_eq!(1, 1.min(2));\n+    /// assert_eq!(2, 2.min(2));\n+    /// ```\n+    #[unstable(feature = \"ord_max_min\", issue = \"25663\")]\n+    fn min(self, other: Self) -> Self\n+    where Self: Sized {\n+        if self <= other { self } else { other }\n+    }\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]"}, {"sha": "8c5179f59932bba13ef4636260099ae16aabed1c", "filename": "src/libcore/tests/cmp.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/2cadc32b66e135eeb9ac22d433cd931b021792a5/src%2Flibcore%2Ftests%2Fcmp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2cadc32b66e135eeb9ac22d433cd931b021792a5/src%2Flibcore%2Ftests%2Fcmp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftests%2Fcmp.rs?ref=2cadc32b66e135eeb9ac22d433cd931b021792a5", "patch": "@@ -28,6 +28,16 @@ fn test_mut_int_totalord() {\n     assert_eq!((&mut 12).cmp(&&mut -5), Greater);\n }\n \n+#[test]\n+fn test_ord_max_min() {\n+    assert_eq!(1.max(2), 2);\n+    assert_eq!(2.max(1), 2);\n+    assert_eq!(1.min(2), 1);\n+    assert_eq!(2.min(1), 1);\n+    assert_eq!(1.max(1), 1);\n+    assert_eq!(1.min(1), 1);\n+}\n+\n #[test]\n fn test_ordering_reverse() {\n     assert_eq!(Less.reverse(), Greater);"}, {"sha": "77a9307f43ecf97375ea03c0cf4d1b85ccd8bf19", "filename": "src/libcore/tests/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2cadc32b66e135eeb9ac22d433cd931b021792a5/src%2Flibcore%2Ftests%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2cadc32b66e135eeb9ac22d433cd931b021792a5/src%2Flibcore%2Ftests%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftests%2Flib.rs?ref=2cadc32b66e135eeb9ac22d433cd931b021792a5", "patch": "@@ -26,6 +26,7 @@\n #![feature(iter_rfind)]\n #![feature(libc)]\n #![feature(nonzero)]\n+#![feature(ord_max_min)]\n #![feature(rand)]\n #![feature(raw)]\n #![feature(sip_hash_13)]"}]}