{"sha": "92bd160aacadfc9af2f3c8e8edeba60aed1e1ddc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkyYmQxNjBhYWNhZGZjOWFmMmYzYzhlOGVkZWJhNjBhZWQxZTFkZGM=", "commit": {"author": {"name": "Lzu Tao", "email": "taolzu@gmail.com", "date": "2019-08-23T05:42:45Z"}, "committer": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2019-09-03T10:55:29Z"}, "message": "Update Unicode lint tests", "tree": {"sha": "44aee810242f01e3d0b2063b8f5969412a42bf12", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/44aee810242f01e3d0b2063b8f5969412a42bf12"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/92bd160aacadfc9af2f3c8e8edeba60aed1e1ddc", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZxoS6lESXlRGMHWcaTCGhp1QZjcFAl1uRqEACgkQaTCGhp1Q\nZjdUZw//UNvg4oxqpsM/IgLI2GnXNIPTgwuaF+xOJNsr7gW5KluDT7CahbRDg8Lt\nhkzru2aad33kKmj7NHfdG+tFHzNtW3N25w5pBu1I9Z5OsVGg6QcNXIlGweFr78fu\nnTLp6GYoD1VFc25sBqzRnuQNkfYsfpsZEpDAjKZR8XjlMBoFHNt7TaTAdmv1oHZc\nM5UNFPHkpmiPJKMKVcNG2O7G/fbJknZW6A+UFUVlFPim57fCJ51MjQL1aAtyPV8f\nzJKuaDQTC7ISzhxMWW+bF2O7U3sbznH6XX96uQsoCWFkWAmlOJnowcDXG/S4tGmt\nhC5Pe7rHThoMYGS5qtCe16r8s3P+prLgHsU4LmC1Fk22XgDWyIN7+AFdw/Q0uL3Q\njBTk4cBmNK/433r3ZOxWqxUBuTOFQk+Vnl2GxTmUOAkaYuOZiTqsnJpNpkkNT6Q9\nPw1vUx7QhnFfb6goDEAo8hxb2RHmhclReXT1uRPxYjd7d8+vVyqHVjFhMzHfERfu\nKrmyIBbnbRZj+0Cc+T/HB3FSH4OCOothr+pfyt6vcAZjpQ69H+YJZt4v1p9nr7QT\nyg7q/JMITbKvS0J/uLjXm/ggBbuWSgtLAdJwFOvmzEJrTdxSi4LJHiSXJs5ixqie\n+b7ctMxQYjwXfXEk+nUhYOtPm31SW35t/PwaZUp0vdgpt4OZW3M=\n=Xq7G\n-----END PGP SIGNATURE-----", "payload": "tree 44aee810242f01e3d0b2063b8f5969412a42bf12\nparent 72da1015d6d918fe1b29170acbf486d30e0c2695\nauthor Lzu Tao <taolzu@gmail.com> 1566538965 +0000\ncommitter flip1995 <hello@philkrones.com> 1567508129 +0200\n\nUpdate Unicode lint tests\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/92bd160aacadfc9af2f3c8e8edeba60aed1e1ddc", "html_url": "https://github.com/rust-lang/rust/commit/92bd160aacadfc9af2f3c8e8edeba60aed1e1ddc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/92bd160aacadfc9af2f3c8e8edeba60aed1e1ddc/comments", "author": {"login": "tesuji", "id": 15225902, "node_id": "MDQ6VXNlcjE1MjI1OTAy", "avatar_url": "https://avatars.githubusercontent.com/u/15225902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tesuji", "html_url": "https://github.com/tesuji", "followers_url": "https://api.github.com/users/tesuji/followers", "following_url": "https://api.github.com/users/tesuji/following{/other_user}", "gists_url": "https://api.github.com/users/tesuji/gists{/gist_id}", "starred_url": "https://api.github.com/users/tesuji/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tesuji/subscriptions", "organizations_url": "https://api.github.com/users/tesuji/orgs", "repos_url": "https://api.github.com/users/tesuji/repos", "events_url": "https://api.github.com/users/tesuji/events{/privacy}", "received_events_url": "https://api.github.com/users/tesuji/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "72da1015d6d918fe1b29170acbf486d30e0c2695", "url": "https://api.github.com/repos/rust-lang/rust/commits/72da1015d6d918fe1b29170acbf486d30e0c2695", "html_url": "https://github.com/rust-lang/rust/commit/72da1015d6d918fe1b29170acbf486d30e0c2695"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "f7e1edae5162fc1f5d37baba00dd669dc3d341a8", "filename": "clippy_lints/src/unicode.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/92bd160aacadfc9af2f3c8e8edeba60aed1e1ddc/clippy_lints%2Fsrc%2Funicode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/92bd160aacadfc9af2f3c8e8edeba60aed1e1ddc/clippy_lints%2Fsrc%2Funicode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funicode.rs?ref=92bd160aacadfc9af2f3c8e8edeba60aed1e1ddc", "patch": "@@ -56,17 +56,17 @@ declare_clippy_lint! {\n     ///\n     /// **Known problems** None.\n     ///\n-    /// **Example:** You may not see it, but \u201ca\u0300\u201d and \u201c\u00e0\u201d aren't the same string. The\n+    /// **Example:** You may not see it, but \"a\u0300\"\" and \"\u00e0\"\" aren't the same string. The\n     /// former when escaped is actually `\"a\\u{300}\"` while the latter is `\"\\u{e0}\"`.\n     pub UNICODE_NOT_NFC,\n     pedantic,\n-    \"using a unicode literal not in NFC normal form (see [unicode tr15](http://www.unicode.org/reports/tr15/) for further information)\"\n+    \"using a Unicode literal not in NFC normal form (see [Unicode tr15](http://www.unicode.org/reports/tr15/) for further information)\"\n }\n \n declare_lint_pass!(Unicode => [ZERO_WIDTH_SPACE, NON_ASCII_LITERAL, UNICODE_NOT_NFC]);\n \n-impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Unicode {\n-    fn check_expr(&mut self, cx: &LateContext<'a, 'tcx>, expr: &'tcx Expr) {\n+impl LateLintPass<'_, '_> for Unicode {\n+    fn check_expr(&mut self, cx: &LateContext<'_, '_>, expr: &'_ Expr) {\n         if let ExprKind::Lit(ref lit) = expr.node {\n             if let LitKind::Str(_, _) = lit.node {\n                 check_str(cx, lit.span, expr.hir_id)\n@@ -122,7 +122,7 @@ fn check_str(cx: &LateContext<'_, '_>, span: Span, id: HirId) {\n             cx,\n             UNICODE_NOT_NFC,\n             span,\n-            \"non-nfc unicode sequence detected\",\n+            \"non-NFC Unicode sequence detected\",\n             \"consider replacing the string with\",\n             string.nfc().collect::<String>(),\n             Applicability::MachineApplicable,"}, {"sha": "4575a132e5b2c8de599253e5e944993133443138", "filename": "tests/ui/unicode.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/92bd160aacadfc9af2f3c8e8edeba60aed1e1ddc/tests%2Fui%2Funicode.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/92bd160aacadfc9af2f3c8e8edeba60aed1e1ddc/tests%2Fui%2Funicode.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funicode.stderr?ref=92bd160aacadfc9af2f3c8e8edeba60aed1e1ddc", "patch": "@@ -2,23 +2,23 @@ error: zero-width space detected\n   --> $DIR/unicode.rs:3:12\n    |\n LL |     print!(\"Here >\u200b< is a ZWS, and \u200banother\");\n-   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider replacing the string with: `\"Here >/u{200B}< is a ZWS, and /u{200B}another\"`\n    |\n    = note: `-D clippy::zero-width-space` implied by `-D warnings`\n \n-error: non-nfc unicode sequence detected\n+error: non-NFC Unicode sequence detected\n   --> $DIR/unicode.rs:9:12\n    |\n LL |     print!(\"\u0300a\u0300h?\");\n-   |            ^^^^^\n+   |            ^^^^^ help: consider replacing the string with: `\"\u0300\u00e0h?\"`\n    |\n    = note: `-D clippy::unicode-not-nfc` implied by `-D warnings`\n \n error: literal non-ASCII character detected\n   --> $DIR/unicode.rs:15:12\n    |\n LL |     print!(\"\u00dcben!\");\n-   |            ^^^^^^^\n+   |            ^^^^^^^ help: consider replacing the string with: `\"/u{dc}ben!\"`\n    |\n    = note: `-D clippy::non-ascii-literal` implied by `-D warnings`\n "}]}