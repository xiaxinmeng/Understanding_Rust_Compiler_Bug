{"sha": "02a40e83b217e281e7d2928cf1ce1560f6f7c219", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAyYTQwZTgzYjIxN2UyODFlN2QyOTI4Y2YxY2UxNTYwZjZmN2MyMTk=", "commit": {"author": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2019-04-28T00:33:03Z"}, "committer": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2019-04-28T00:33:03Z"}, "message": "Don't try to render auto-trait bounds with any inference variables\n\nPreviously, we checked if the target of a projection type was itself an\ninference variable. However, for Rustdoc rendering purposes, there's no\ndistinction between an inference variable ('_') and a type containing\none (e.g. (MyStruct<u8, _>)) - we don't want to render either of them.\n\nFixes #60269\n\nDue to the complexity of the original bug, which spans three different\ncrates (hyper, tower-hyper, and tower), I have been unable to create a\nminimized reproduction for the issue.", "tree": {"sha": "35de5d6d6343f4e86cd62114aa13cfe89d407bb1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/35de5d6d6343f4e86cd62114aa13cfe89d407bb1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/02a40e83b217e281e7d2928cf1ce1560f6f7c219", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7J9Gc3TfBwj2K399tAh+UQ6YsWQFAlzE9WcACgkQtAh+UQ6Y\nsWQYqA//SKjwY0wqnNCqSDaQ0OnmhBqqQra2LdvE3nIDqIYmtkCJKKxc1S96108o\nGbUu+sfxjfR6NvawJvcRhPdjzZHjY/JnXax+q+neKDzE1zkWy6435Wzy8zLISOx/\nCsU3mRqpE7S6leZpEtMLFBwEnc0WbC8u8UbdG6T0lrV4XvpvntFm5kTP3p2GJxAW\ndP3EpT1XsniZQgG9sK2snKOWbuoXCwiR4VN/x7ICcaU4NvWHQv9gLHiT6+4zoels\nHjMFdy+lVmUW7T5Ib/AB41siFXcy0CVZG/18Q0vQmppDVz3t6H5F9HIPpW9q7A+c\nlFa+SEHyYI+DgRNd5sl7NT4vpc5M3nnXQRaj1M8aPVw1Y0tDbz0AhQmWksq6vMqx\npdaJfnfXSe2HYle3su4j8cxugfb3i/tz3xVr3sZl28p62LQ/Iy7Bh6cYW8ksMAWx\nk9w5EIYMdL5jbDzRRs60lfahuzFGJ/gJkWAzYFi5mkYJz9GuoDusC2E9Iedf0c7G\n0+T7HZs+pDhLJjpo3L7gChmqrPaorQ5AtfeubNFJ6a9DYJaT+ie9qDgdxGt+lRSJ\nT1TOmtCi246qRv5Z54a0OGpI0p8QZILYTzNrhbOzeMUxfFNX0twY/9VU8MA/JKfT\nNlJEQgERWoedBJ5ocuap/tUo6M43M070E/QDKfNfwWAIJakp9Jk=\n=KUk9\n-----END PGP SIGNATURE-----", "payload": "tree 35de5d6d6343f4e86cd62114aa13cfe89d407bb1\nparent ab9c016395e7a7ce5b2aaf09e1b10c8dd2744eee\nauthor Aaron Hill <aa1ronham@gmail.com> 1556411583 -0400\ncommitter Aaron Hill <aa1ronham@gmail.com> 1556411583 -0400\n\nDon't try to render auto-trait bounds with any inference variables\n\nPreviously, we checked if the target of a projection type was itself an\ninference variable. However, for Rustdoc rendering purposes, there's no\ndistinction between an inference variable ('_') and a type containing\none (e.g. (MyStruct<u8, _>)) - we don't want to render either of them.\n\nFixes #60269\n\nDue to the complexity of the original bug, which spans three different\ncrates (hyper, tower-hyper, and tower), I have been unable to create a\nminimized reproduction for the issue.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/02a40e83b217e281e7d2928cf1ce1560f6f7c219", "html_url": "https://github.com/rust-lang/rust/commit/02a40e83b217e281e7d2928cf1ce1560f6f7c219", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/02a40e83b217e281e7d2928cf1ce1560f6f7c219/comments", "author": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ab9c016395e7a7ce5b2aaf09e1b10c8dd2744eee", "url": "https://api.github.com/repos/rust-lang/rust/commits/ab9c016395e7a7ce5b2aaf09e1b10c8dd2744eee", "html_url": "https://github.com/rust-lang/rust/commit/ab9c016395e7a7ce5b2aaf09e1b10c8dd2744eee"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "03ce06a436415bcd109e303703277f2570bea239", "filename": "src/librustc/traits/auto_trait.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02a40e83b217e281e7d2928cf1ce1560f6f7c219/src%2Flibrustc%2Ftraits%2Fauto_trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02a40e83b217e281e7d2928cf1ce1560f6f7c219/src%2Flibrustc%2Ftraits%2Fauto_trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fauto_trait.rs?ref=02a40e83b217e281e7d2928cf1ce1560f6f7c219", "patch": "@@ -712,7 +712,7 @@ impl<'a, 'tcx> AutoTraitFinder<'a, 'tcx> {\n                     // Additionally, we check if we've seen this predicate before,\n                     // to avoid rendering duplicate bounds to the user.\n                     if self.is_param_no_infer(p.skip_binder().projection_ty.substs)\n-                        && !p.ty().skip_binder().is_ty_infer()\n+                        && !p.ty().skip_binder().has_infer_types()\n                         && is_new_pred {\n                             debug!(\"evaluate_nested_obligations: adding projection predicate\\\n                             to computed_preds: {:?}\", predicate);"}, {"sha": "27aec5197da876bfe2253ed0b42481d6872574b2", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/02a40e83b217e281e7d2928cf1ce1560f6f7c219/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02a40e83b217e281e7d2928cf1ce1560f6f7c219/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=02a40e83b217e281e7d2928cf1ce1560f6f7c219", "patch": "@@ -2945,6 +2945,7 @@ impl Clean<Type> for hir::Ty {\n \n impl<'tcx> Clean<Type> for Ty<'tcx> {\n     fn clean(&self, cx: &DocContext<'_>) -> Type {\n+        debug!(\"cleaning type: {:?}\", self);\n         match self.sty {\n             ty::Never => Never,\n             ty::Bool => Primitive(PrimitiveType::Bool),"}]}