{"sha": "16f49800db7be11e7255036f05ca811c1bf98926", "node_id": "C_kwDOAAsO6NoAKDE2ZjQ5ODAwZGI3YmUxMWU3MjU1MDM2ZjA1Y2E4MTFjMWJmOTg5MjY", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-07-29T06:17:17Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-07-29T06:17:17Z"}, "message": "Document check_region_obligations_and_report_errors, simplify a call to resolve_regions", "tree": {"sha": "44d5cada5ac4bcc77c2fdd38216d04425bc68ed6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/44d5cada5ac4bcc77c2fdd38216d04425bc68ed6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/16f49800db7be11e7255036f05ca811c1bf98926", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/16f49800db7be11e7255036f05ca811c1bf98926", "html_url": "https://github.com/rust-lang/rust/commit/16f49800db7be11e7255036f05ca811c1bf98926", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/16f49800db7be11e7255036f05ca811c1bf98926/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1694ea187392a4832a5d69fa008b1e5ff13fe584", "url": "https://api.github.com/repos/rust-lang/rust/commits/1694ea187392a4832a5d69fa008b1e5ff13fe584", "html_url": "https://github.com/rust-lang/rust/commit/1694ea187392a4832a5d69fa008b1e5ff13fe584"}], "stats": {"total": 18, "additions": 11, "deletions": 7}, "files": [{"sha": "620e3358d2b97522a91d7c1ae02cde4aaa21a073", "filename": "compiler/rustc_infer/src/infer/mod.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/16f49800db7be11e7255036f05ca811c1bf98926/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16f49800db7be11e7255036f05ca811c1bf98926/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fmod.rs?ref=16f49800db7be11e7255036f05ca811c1bf98926", "patch": "@@ -1324,6 +1324,10 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n     /// result. After this, no more unification operations should be\n     /// done -- or the compiler will panic -- but it is legal to use\n     /// `resolve_vars_if_possible` as well as `fully_resolve`.\n+    ///\n+    /// Make sure to call [`InferCtxt::process_registered_region_obligations`]\n+    /// first, or preferrably use [`InferCtxt::check_region_obligations_and_report_errors`]\n+    /// to do both of these operations together.\n     pub fn resolve_regions_and_report_errors(\n         &self,\n         generic_param_scope: LocalDefId,"}, {"sha": "ad052f58ca854b1c29e4369d431df194d80294fb", "filename": "compiler/rustc_infer/src/infer/outlives/obligations.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/16f49800db7be11e7255036f05ca811c1bf98926/compiler%2Frustc_infer%2Fsrc%2Finfer%2Foutlives%2Fobligations.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16f49800db7be11e7255036f05ca811c1bf98926/compiler%2Frustc_infer%2Fsrc%2Finfer%2Foutlives%2Fobligations.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Foutlives%2Fobligations.rs?ref=16f49800db7be11e7255036f05ca811c1bf98926", "patch": "@@ -111,6 +111,9 @@ impl<'cx, 'tcx> InferCtxt<'cx, 'tcx> {\n         std::mem::take(&mut self.inner.borrow_mut().region_obligations)\n     }\n \n+    /// NOTE: Prefer using [`InferCtxt::check_region_obligations_and_report_errors`]\n+    /// instead of calling this directly.\n+    ///\n     /// Process the region obligations that must be proven (during\n     /// `regionck`) for the given `body_id`, given information about\n     /// the region bounds in scope and so forth. This function must be\n@@ -162,6 +165,9 @@ impl<'cx, 'tcx> InferCtxt<'cx, 'tcx> {\n         }\n     }\n \n+    /// Processes registered region obliations and resolves regions, reporting\n+    /// any errors if any were raised. Prefer using this function over manually\n+    /// calling `resolve_regions_and_report_errors`.\n     pub fn check_region_obligations_and_report_errors(\n         &self,\n         generic_param_scope: LocalDefId,"}, {"sha": "f62ccb99df5ebf12118cfff4e460caaed5eec5e5", "filename": "compiler/rustc_trait_selection/src/traits/coherence.rs", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/16f49800db7be11e7255036f05ca811c1bf98926/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fcoherence.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16f49800db7be11e7255036f05ca811c1bf98926/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fcoherence.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fcoherence.rs?ref=16f49800db7be11e7255036f05ca811c1bf98926", "patch": "@@ -398,13 +398,7 @@ fn resolve_negative_obligation<'cx, 'tcx>(\n     let outlives_env = OutlivesEnvironment::new(param_env);\n     infcx.process_registered_region_obligations(outlives_env.region_bound_pairs(), param_env);\n \n-    let errors = infcx.resolve_regions(&outlives_env);\n-\n-    if !errors.is_empty() {\n-        return false;\n-    }\n-\n-    true\n+    infcx.resolve_regions(&outlives_env).is_empty()\n }\n \n pub fn trait_ref_is_knowable<'tcx>("}]}