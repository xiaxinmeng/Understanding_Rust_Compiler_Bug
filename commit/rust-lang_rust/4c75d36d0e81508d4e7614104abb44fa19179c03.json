{"sha": "4c75d36d0e81508d4e7614104abb44fa19179c03", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRjNzVkMzZkMGU4MTUwOGQ0ZTc2MTQxMDRhYmI0NGZhMTkxNzljMDM=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-08-17T03:14:30Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-08-24T04:19:59Z"}, "message": "std: Reduce TLS access", "tree": {"sha": "847657f50fa0d1f7225f0b8cd2dbb2a452ef6875", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/847657f50fa0d1f7225f0b8cd2dbb2a452ef6875"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4c75d36d0e81508d4e7614104abb44fa19179c03", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4c75d36d0e81508d4e7614104abb44fa19179c03", "html_url": "https://github.com/rust-lang/rust/commit/4c75d36d0e81508d4e7614104abb44fa19179c03", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4c75d36d0e81508d4e7614104abb44fa19179c03/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f9979247d1d69c1a8fb7cd1d2829a629baf9d965", "url": "https://api.github.com/repos/rust-lang/rust/commits/f9979247d1d69c1a8fb7cd1d2829a629baf9d965", "html_url": "https://github.com/rust-lang/rust/commit/f9979247d1d69c1a8fb7cd1d2829a629baf9d965"}], "stats": {"total": 33, "additions": 18, "deletions": 15}, "files": [{"sha": "a8f3d01351b28e7bdf1f2b8fed3082a062a732f8", "filename": "src/libstd/rt/sched.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/4c75d36d0e81508d4e7614104abb44fa19179c03/src%2Flibstd%2Frt%2Fsched.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c75d36d0e81508d4e7614104abb44fa19179c03/src%2Flibstd%2Frt%2Fsched.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fsched.rs?ref=4c75d36d0e81508d4e7614104abb44fa19179c03", "patch": "@@ -563,11 +563,10 @@ impl Scheduler {\n         // run the cleanup job, as expected by the previously called\n         // swap_contexts function.\n         unsafe {\n-            let sched = Local::unsafe_borrow::<Scheduler>();\n-            (*sched).run_cleanup_job();\n+            let task = Local::unsafe_borrow::<Task>();\n+            (*task).sched.get_mut_ref().run_cleanup_job();\n \n             // Must happen after running the cleanup job (of course).\n-            let task = Local::unsafe_borrow::<Task>();\n             (*task).death.check_killed((*task).unwinder.unwinding);\n         }\n     }"}, {"sha": "6fa0e0eb8c13207bf47212df45082599ffc16040", "filename": "src/libstd/unstable/sync.rs", "status": "modified", "additions": 16, "deletions": 12, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/4c75d36d0e81508d4e7614104abb44fa19179c03/src%2Flibstd%2Funstable%2Fsync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c75d36d0e81508d4e7614104abb44fa19179c03/src%2Flibstd%2Funstable%2Fsync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Funstable%2Fsync.rs?ref=4c75d36d0e81508d4e7614104abb44fa19179c03", "patch": "@@ -281,20 +281,24 @@ impl<T> Drop for UnsafeAtomicRcBox<T>{\n  */\n // FIXME(#8140) should not be pub\n pub unsafe fn atomically<U>(f: &fn() -> U) -> U {\n-    use rt::task::Task;\n+    use rt::task::{Task, GreenTask, SchedTask};\n     use rt::local::Local;\n-    use rt::in_green_task_context;\n-\n-    if in_green_task_context() {\n-        let t = Local::unsafe_borrow::<Task>();\n-        do (|| {\n-            (*t).death.inhibit_deschedule();\n-            f()\n-        }).finally {\n-            (*t).death.allow_deschedule();\n+\n+    match Local::try_unsafe_borrow::<Task>() {\n+        Some(t) => {\n+            match (*t).task_type {\n+                GreenTask(_) => {\n+                    do (|| {\n+                        (*t).death.inhibit_deschedule();\n+                        f()\n+                    }).finally {\n+                        (*t).death.allow_deschedule();\n+                    }\n+                }\n+                SchedTask => f()\n+            }\n         }\n-    } else {\n-        f()\n+        None => f()\n     }\n }\n "}]}