{"sha": "00c74b5d18c8c1ae5cd736e4e991ded7e2ba3b4e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAwYzc0YjVkMThjOGMxYWU1Y2Q3MzZlNGU5OTFkZWQ3ZTJiYTNiNGU=", "commit": {"author": {"name": "Florian Diebold", "email": "florian.diebold@freiheit.com", "date": "2019-07-25T19:27:00Z"}, "committer": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2019-07-27T09:02:34Z"}, "message": "Implement inlay hints for emacs", "tree": {"sha": "a1707c6c6252181b9ab29bcba0979ff305c3274a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a1707c6c6252181b9ab29bcba0979ff305c3274a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/00c74b5d18c8c1ae5cd736e4e991ded7e2ba3b4e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/00c74b5d18c8c1ae5cd736e4e991ded7e2ba3b4e", "html_url": "https://github.com/rust-lang/rust/commit/00c74b5d18c8c1ae5cd736e4e991ded7e2ba3b4e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/00c74b5d18c8c1ae5cd736e4e991ded7e2ba3b4e/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dc6f0b5a4eaf0e9ac096551a9900a32a7efe742a", "url": "https://api.github.com/repos/rust-lang/rust/commits/dc6f0b5a4eaf0e9ac096551a9900a32a7efe742a", "html_url": "https://github.com/rust-lang/rust/commit/dc6f0b5a4eaf0e9ac096551a9900a32a7efe742a"}], "stats": {"total": 44, "additions": 40, "deletions": 4}, "files": [{"sha": "8a57678492875f031f66e0a97c10e2bb81cf6456", "filename": "docs/user/README.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/00c74b5d18c8c1ae5cd736e4e991ded7e2ba3b4e/docs%2Fuser%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/00c74b5d18c8c1ae5cd736e4e991ded7e2ba3b4e/docs%2Fuser%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fuser%2FREADME.md?ref=00c74b5d18c8c1ae5cd736e4e991ded7e2ba3b4e", "patch": "@@ -86,7 +86,7 @@ Installation:\n [ra-emacs-lsp.el](https://github.com/rust-analyzer/rust-analyzer/blob/69ee5c9c5ef212f7911028c9ddf581559e6565c3/editors/emacs/ra-emacs-lsp.el)\n to load path and require it in `init.el`\n * run `lsp` in a rust buffer\n-* (Optionally) bind commands like `rust-analyzer-join-lines` or `rust-analyzer-extend-selection` to keys\n+* (Optionally) bind commands like `rust-analyzer-join-lines` or `rust-analyzer-extend-selection` to keys, and enable `rust-analyzer-inlay-hints-mode` to get inline type hints\n \n \n ## Vim and NeoVim"}, {"sha": "d7656476ef772e8e6cb84539fabc0dd3ba822759", "filename": "editors/emacs/ra-emacs-lsp.el", "status": "modified", "additions": 39, "deletions": 3, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/00c74b5d18c8c1ae5cd736e4e991ded7e2ba3b4e/editors%2Femacs%2Fra-emacs-lsp.el", "raw_url": "https://github.com/rust-lang/rust/raw/00c74b5d18c8c1ae5cd736e4e991ded7e2ba3b4e/editors%2Femacs%2Fra-emacs-lsp.el", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Femacs%2Fra-emacs-lsp.el?ref=00c74b5d18c8c1ae5cd736e4e991ded7e2ba3b4e", "patch": "@@ -15,14 +15,14 @@\n ;;  - implements source changes (for code actions etc.), except for file system changes\n ;;  - implements joinLines (you need to bind rust-analyzer-join-lines to a key)\n ;;  - implements extendSelection (either bind rust-analyzer-extend-selection to a key, or use expand-region)\n+;;  - provides rust-analyzer-inlay-hints-mode for inline type hints\n \n ;; What's missing:\n ;;  - file system changes in apply-source-change\n ;;  - semantic highlighting\n ;;  - onEnter, parentModule, findMatchingBrace\n ;;  - runnables\n ;;  - the debugging commands (syntaxTree and analyzerStatus)\n-;;  - lsp-ui doesn't interpret the markdown we return currently and instead displays it raw (https://github.com/emacs-lsp/lsp-ui/issues/220 )\n ;;  - more\n \n ;; Also, there's a problem with company-lsp's caching being too eager, sometimes\n@@ -225,10 +225,46 @@\n           (with-current-buffer buf\n             (let ((inhibit-read-only t))\n               (erase-buffer)\n-              (insert parse-result)) \n-            )\n+              (insert parse-result)))\n           (pop-to-buffer buf))))))\n \n+;; inlay hints\n+(defun rust-analyzer--update-inlay-hints ()\n+  (lsp-send-request-async\n+   (lsp-make-request \"rust-analyzer/inlayHints\"\n+                     (list :textDocument (lsp--text-document-identifier)))\n+   (lambda (res)\n+     (remove-overlays (point-min) (point-max) 'rust-analyzer--inlay-hint t)\n+     (dolist (hint res)\n+       (-let* (((&hash \"range\" \"label\" \"kind\") hint)\n+               ((beg . end) (lsp--range-to-region range))\n+               (overlay (make-overlay beg end)))\n+         (overlay-put overlay 'rust-analyzer--inlay-hint t)\n+         (overlay-put overlay 'evaporate t)\n+         (overlay-put overlay 'after-string (propertize (concat \": \" label)\n+                                                        'font-lock-face 'font-lock-comment-face)))))\n+   'tick)\n+  nil)\n+\n+(defvar-local rust-analyzer--inlay-hints-timer nil)\n+\n+(defun rust-analyzer--inlay-hints-change-handler (&rest rest)\n+  (when rust-analyzer--inlay-hints-timer\n+    (cancel-timer rust-analyzer--inlay-hints-timer))\n+  (setq rust-analyzer--inlay-hints-timer\n+        (run-with-idle-timer 0.1 nil #'rust-analyzer--update-inlay-hints)))\n+\n+(define-minor-mode rust-analyzer-inlay-hints-mode\n+  \"Mode for showing inlay hints.\"\n+  nil nil nil\n+  (cond\n+   (rust-analyzer-inlay-hints-mode\n+    (rust-analyzer--update-inlay-hints)\n+    (add-hook 'after-change-functions #'rust-analyzer--inlay-hints-change-handler nil t))\n+   (t\n+    (remove-overlays (point-min) (point-max) 'rust-analyzer--inlay-hint t)\n+    (remove-hook 'after-change-functions #'rust-analyzer--inlay-hints-change-handler t))))\n+\n \n (provide 'ra-emacs-lsp)\n ;;; ra-emacs-lsp.el ends here"}]}