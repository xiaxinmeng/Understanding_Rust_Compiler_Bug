{"sha": "aff160bb0343c9d09b93b2deb045ae51d18ade34", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFmZjE2MGJiMDM0M2M5ZDA5YjkzYjJkZWIwNDVhZTUxZDE4YWRlMzQ=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-03-27T17:07:53Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-03-27T17:07:53Z"}, "message": "rollup merge of #23775: alexcrichton/fix-flaky-test\n\nWindows gets quite unhappy when a thread fails while the main thread is exiting,\nfrequently leading to process deadlock. This has been causing quite a few\ndeadlocks on the windows bots recently. The child threads are presumably failing\nbecause the `println!` is failing due to the main thread being shut down.", "tree": {"sha": "47f3af7e6ee60e7bb0a008320918f1429e16291e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/47f3af7e6ee60e7bb0a008320918f1429e16291e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aff160bb0343c9d09b93b2deb045ae51d18ade34", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aff160bb0343c9d09b93b2deb045ae51d18ade34", "html_url": "https://github.com/rust-lang/rust/commit/aff160bb0343c9d09b93b2deb045ae51d18ade34", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aff160bb0343c9d09b93b2deb045ae51d18ade34/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "45f1324037b098d6e92da7b34cc0aba274fdae97", "url": "https://api.github.com/repos/rust-lang/rust/commits/45f1324037b098d6e92da7b34cc0aba274fdae97", "html_url": "https://github.com/rust-lang/rust/commit/45f1324037b098d6e92da7b34cc0aba274fdae97"}, {"sha": "fa3840305c7aad322ef76453748ad44f7f0eba1b", "url": "https://api.github.com/repos/rust-lang/rust/commits/fa3840305c7aad322ef76453748ad44f7f0eba1b", "html_url": "https://github.com/rust-lang/rust/commit/fa3840305c7aad322ef76453748ad44f7f0eba1b"}], "stats": {"total": 20, "additions": 9, "deletions": 11}, "files": [{"sha": "338d7e336316474e1d59f2cafea68bf989e46f38", "filename": "src/liballoc/arc.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/aff160bb0343c9d09b93b2deb045ae51d18ade34/src%2Fliballoc%2Farc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aff160bb0343c9d09b93b2deb045ae51d18ade34/src%2Fliballoc%2Farc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Farc.rs?ref=aff160bb0343c9d09b93b2deb045ae51d18ade34", "patch": "@@ -33,7 +33,7 @@\n //!\n //! Sharing some immutable data between tasks:\n //!\n-//! ```\n+//! ```no_run\n //! use std::sync::Arc;\n //! use std::thread;\n //!\n@@ -50,7 +50,7 @@\n //!\n //! Sharing mutable data safely between tasks with a `Mutex`:\n //!\n-//! ```\n+//! ```no_run\n //! use std::sync::{Arc, Mutex};\n //! use std::thread;\n //!"}, {"sha": "efddf0455cd5fbe472bb57e6158e1dff84739a08", "filename": "src/test/run-pass/spawn-fn.rs", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/aff160bb0343c9d09b93b2deb045ae51d18ade34/src%2Ftest%2Frun-pass%2Fspawn-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aff160bb0343c9d09b93b2deb045ae51d18ade34/src%2Ftest%2Frun-pass%2Fspawn-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fspawn-fn.rs?ref=aff160bb0343c9d09b93b2deb045ae51d18ade34", "patch": "@@ -8,23 +8,21 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(std_misc)]\n+use std::thread;\n \n-use std::thread::Thread;\n-\n-fn x(s: String, n: int) {\n+fn x(s: String, n: isize) {\n     println!(\"{}\", s);\n     println!(\"{}\", n);\n }\n \n pub fn main() {\n-    let _t = Thread::spawn(|| x(\"hello from first spawned fn\".to_string(), 65) );\n-    let _t = Thread::spawn(|| x(\"hello from second spawned fn\".to_string(), 66) );\n-    let _t = Thread::spawn(|| x(\"hello from third spawned fn\".to_string(), 67) );\n-    let mut i: int = 30;\n+    let _t = thread::scoped(|| x(\"hello from first spawned fn\".to_string(), 65) );\n+    let _t = thread::scoped(|| x(\"hello from second spawned fn\".to_string(), 66) );\n+    let _t = thread::scoped(|| x(\"hello from third spawned fn\".to_string(), 67) );\n+    let mut i = 30;\n     while i > 0 {\n         i = i - 1;\n         println!(\"parent sleeping\");\n-        Thread::yield_now();\n+        thread::yield_now();\n     }\n }"}]}