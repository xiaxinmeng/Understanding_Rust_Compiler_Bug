{"sha": "f9230833084118e31b6dd40cccdd7a8b42c8f236", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY5MjMwODMzMDg0MTE4ZTMxYjZkZDQwY2NjZGQ3YThiNDJjOGYyMzY=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2016-08-23T11:56:34Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2016-08-23T14:33:56Z"}, "message": "cache def-path hashes across all items\n\nThis seems like approx a 2x win on syntex_syntax.", "tree": {"sha": "a4a9c26f86ea9cef0ae068200cc8cb1170617579", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a4a9c26f86ea9cef0ae068200cc8cb1170617579"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f9230833084118e31b6dd40cccdd7a8b42c8f236", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f9230833084118e31b6dd40cccdd7a8b42c8f236", "html_url": "https://github.com/rust-lang/rust/commit/f9230833084118e31b6dd40cccdd7a8b42c8f236", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f9230833084118e31b6dd40cccdd7a8b42c8f236/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "484da378452ed123919ee6d4d5a7e4e98c5d4060", "url": "https://api.github.com/repos/rust-lang/rust/commits/484da378452ed123919ee6d4d5a7e4e98c5d4060", "html_url": "https://github.com/rust-lang/rust/commit/484da378452ed123919ee6d4d5a7e4e98c5d4060"}], "stats": {"total": 27, "additions": 17, "deletions": 10}, "files": [{"sha": "066d6dd05a38ec583e21ff08ccbc7aa17e9a558d", "filename": "src/librustc_incremental/calculate_svh/mod.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f9230833084118e31b6dd40cccdd7a8b42c8f236/src%2Flibrustc_incremental%2Fcalculate_svh%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9230833084118e31b6dd40cccdd7a8b42c8f236/src%2Flibrustc_incremental%2Fcalculate_svh%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fcalculate_svh%2Fmod.rs?ref=f9230833084118e31b6dd40cccdd7a8b42c8f236", "patch": "@@ -35,6 +35,7 @@ use rustc::hir;\n use rustc::hir::def_id::{CRATE_DEF_INDEX, DefId};\n use rustc::hir::intravisit as visit;\n use rustc::ty::TyCtxt;\n+use rustc::util::nodemap::DefIdMap;\n use rustc_data_structures::fnv::FnvHashMap;\n \n use self::svh_visitor::StrictVersionHashVisitor;\n@@ -47,7 +48,9 @@ pub fn compute_incremental_hashes_map<'a, 'tcx: 'a>(tcx: TyCtxt<'a, 'tcx, 'tcx>)\n                                                     -> IncrementalHashesMap {\n     let _ignore = tcx.dep_graph.in_ignore();\n     let krate = tcx.map.krate();\n-    let mut visitor = HashItemsVisitor { tcx: tcx, hashes: FnvHashMap() };\n+    let mut visitor = HashItemsVisitor { tcx: tcx,\n+                                         hashes: FnvHashMap(),\n+                                         def_path_hashes: DefIdMap() };\n     visitor.calculate_def_id(DefId::local(CRATE_DEF_INDEX), |v| visit::walk_crate(v, krate));\n     krate.visit_all_items(&mut visitor);\n     visitor.compute_crate_hash();\n@@ -56,6 +59,7 @@ pub fn compute_incremental_hashes_map<'a, 'tcx: 'a>(tcx: TyCtxt<'a, 'tcx, 'tcx>)\n \n struct HashItemsVisitor<'a, 'tcx: 'a> {\n     tcx: TyCtxt<'a, 'tcx, 'tcx>,\n+    def_path_hashes: DefIdMap<u64>,\n     hashes: IncrementalHashesMap,\n }\n \n@@ -75,7 +79,9 @@ impl<'a, 'tcx> HashItemsVisitor<'a, 'tcx> {\n         // FIXME: this should use SHA1, not SipHash. SipHash is not\n         // built to avoid collisions.\n         let mut state = SipHasher::new();\n-        walk_op(&mut StrictVersionHashVisitor::new(&mut state, self.tcx));\n+        walk_op(&mut StrictVersionHashVisitor::new(&mut state,\n+                                                   self.tcx,\n+                                                   &mut self.def_path_hashes));\n         let item_hash = state.finish();\n         self.hashes.insert(DepNode::Hir(def_id), item_hash);\n         debug!(\"calculate_item_hash: def_id={:?} hash={:?}\", def_id, item_hash);"}, {"sha": "30c7a04fd7fb343d1d1873c2b85158acfa13725b", "filename": "src/librustc_incremental/calculate_svh/svh_visitor.rs", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/f9230833084118e31b6dd40cccdd7a8b42c8f236/src%2Flibrustc_incremental%2Fcalculate_svh%2Fsvh_visitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9230833084118e31b6dd40cccdd7a8b42c8f236/src%2Flibrustc_incremental%2Fcalculate_svh%2Fsvh_visitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fcalculate_svh%2Fsvh_visitor.rs?ref=f9230833084118e31b6dd40cccdd7a8b42c8f236", "patch": "@@ -35,23 +35,24 @@ pub struct StrictVersionHashVisitor<'a, 'tcx: 'a> {\n     pub st: &'a mut SipHasher,\n \n     // collect a deterministic hash of def-ids that we have seen\n-    def_id_hashes: DefIdMap<u64>,\n+    def_path_hashes: &'a mut DefIdMap<u64>,\n }\n \n impl<'a, 'tcx> StrictVersionHashVisitor<'a, 'tcx> {\n     pub fn new(st: &'a mut SipHasher,\n-               tcx: TyCtxt<'a, 'tcx, 'tcx>)\n+               tcx: TyCtxt<'a, 'tcx, 'tcx>,\n+               def_path_hashes: &'a mut DefIdMap<u64>)\n                -> Self {\n-        StrictVersionHashVisitor { st: st, tcx: tcx, def_id_hashes: DefIdMap() }\n+        StrictVersionHashVisitor { st: st, tcx: tcx, def_path_hashes: def_path_hashes }\n     }\n \n     fn compute_def_id_hash(&mut self, def_id: DefId) -> u64 {\n         let tcx = self.tcx;\n-        *self.def_id_hashes.entry(def_id)\n-                           .or_insert_with(|| {\n-                               let def_path = tcx.def_path(def_id);\n-                               def_path.deterministic_hash(tcx)\n-                           })\n+        *self.def_path_hashes.entry(def_id)\n+                             .or_insert_with(|| {\n+                                 let def_path = tcx.def_path(def_id);\n+                                 def_path.deterministic_hash(tcx)\n+                             })\n     }\n }\n "}]}