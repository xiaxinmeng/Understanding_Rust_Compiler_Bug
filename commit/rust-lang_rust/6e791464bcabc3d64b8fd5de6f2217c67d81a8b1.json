{"sha": "6e791464bcabc3d64b8fd5de6f2217c67d81a8b1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZlNzkxNDY0YmNhYmMzZDY0YjhmZDVkZTZmMjIxN2M2N2Q4MWE4YjE=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2020-01-15T12:56:11Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2020-01-15T14:07:35Z"}, "message": "remove unneeded code from cache.rs", "tree": {"sha": "f18868af3f0ba9895f7e7e23d284b49a8f74e4a8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f18868af3f0ba9895f7e7e23d284b49a8f74e4a8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6e791464bcabc3d64b8fd5de6f2217c67d81a8b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6e791464bcabc3d64b8fd5de6f2217c67d81a8b1", "html_url": "https://github.com/rust-lang/rust/commit/6e791464bcabc3d64b8fd5de6f2217c67d81a8b1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6e791464bcabc3d64b8fd5de6f2217c67d81a8b1/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "81a5b94ac60cc1a9c8d365d8c6166c148279276c", "url": "https://api.github.com/repos/rust-lang/rust/commits/81a5b94ac60cc1a9c8d365d8c6166c148279276c", "html_url": "https://github.com/rust-lang/rust/commit/81a5b94ac60cc1a9c8d365d8c6166c148279276c"}], "stats": {"total": 20, "additions": 6, "deletions": 14}, "files": [{"sha": "f1f83acdda59e81cb16f0593ae59ea5b5970a684", "filename": "src/librustdoc/html/render/cache.rs", "status": "modified", "additions": 6, "deletions": 14, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/6e791464bcabc3d64b8fd5de6f2217c67d81a8b1/src%2Flibrustdoc%2Fhtml%2Frender%2Fcache.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e791464bcabc3d64b8fd5de6f2217c67d81a8b1/src%2Flibrustdoc%2Fhtml%2Frender%2Fcache.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fcache.rs?ref=6e791464bcabc3d64b8fd5de6f2217c67d81a8b1", "patch": "@@ -574,10 +574,6 @@ fn build_index(krate: &clean::Crate, cache: &mut Cache) -> String {\n     // has since been learned.\n     for &(did, ref item) in orphan_impl_items {\n         if let Some(&(ref fqp, _)) = paths.get(&did) {\n-            if item.name.is_none() {\n-                // this is most likely from a typedef\n-                continue;\n-            }\n             search_index.push(IndexItem {\n                 ty: item.type_(),\n                 name: item.name.clone().unwrap(),\n@@ -596,23 +592,19 @@ fn build_index(krate: &clean::Crate, cache: &mut Cache) -> String {\n     let mut lastpathid = 0usize;\n \n     for item in search_index {\n-        item.parent_idx = match item.parent {\n-            Some(nodeid) => Some(if nodeid_to_pathid.contains_key(&nodeid) {\n+        item.parent_idx = item.parent.map(|nodeid| {\n+            if nodeid_to_pathid.contains_key(&nodeid) {\n                 *nodeid_to_pathid.get(&nodeid).expect(\"no pathid\")\n             } else {\n                 let pathid = lastpathid;\n                 nodeid_to_pathid.insert(nodeid, pathid);\n                 lastpathid += 1;\n \n-                if let Some(&(ref fqp, short)) = paths.get(&nodeid) {\n-                    crate_paths.push((short, fqp.last().expect(\"no fqp\").clone()));\n-                } else {\n-                    continue;\n-                }\n+                let &(ref fqp, short) = paths.get(&nodeid).unwrap();\n+                crate_paths.push((short, fqp.last().unwrap().clone()));\n                 pathid\n-            }),\n-            None => None,\n-        };\n+            }\n+        });\n \n         // Omit the parent path if it is same to that of the prior item.\n         if lastpath == item.path {"}]}