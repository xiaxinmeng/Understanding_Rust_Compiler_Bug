{"sha": "0718259ae05e661c7f62bac6a02c6cba80d3f1f9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA3MTgyNTlhZTA1ZTY2MWM3ZjYyYmFjNmEwMmM2Y2JhODBkM2YxZjk=", "commit": {"author": {"name": "Kevin Ballard", "email": "kevin@sb.org", "date": "2014-05-21T02:18:20Z"}, "committer": {"name": "Kevin Ballard", "email": "kevin@sb.org", "date": "2014-05-21T02:52:43Z"}, "message": "Fix LLVM error with tuple struct match using (..)\n\nConsider PatEnums constructed with A(..) to be candidates for tuple\nstruct patterns, not just ones constructed with A(a,b,c). If these\npatterns shouldn't be valid tuple struct patterns (as they're equivalent\nto _), this needs to be caught before we get to trans.\n\nFixes #14308.", "tree": {"sha": "0abcd808933067e0cfe4c70aff09a1959578017c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0abcd808933067e0cfe4c70aff09a1959578017c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0718259ae05e661c7f62bac6a02c6cba80d3f1f9", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0718259ae05e661c7f62bac6a02c6cba80d3f1f9", "html_url": "https://github.com/rust-lang/rust/commit/0718259ae05e661c7f62bac6a02c6cba80d3f1f9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0718259ae05e661c7f62bac6a02c6cba80d3f1f9/comments", "author": {"login": "lilyball", "id": 714, "node_id": "MDQ6VXNlcjcxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lilyball", "html_url": "https://github.com/lilyball", "followers_url": "https://api.github.com/users/lilyball/followers", "following_url": "https://api.github.com/users/lilyball/following{/other_user}", "gists_url": "https://api.github.com/users/lilyball/gists{/gist_id}", "starred_url": "https://api.github.com/users/lilyball/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lilyball/subscriptions", "organizations_url": "https://api.github.com/users/lilyball/orgs", "repos_url": "https://api.github.com/users/lilyball/repos", "events_url": "https://api.github.com/users/lilyball/events{/privacy}", "received_events_url": "https://api.github.com/users/lilyball/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lilyball", "id": 714, "node_id": "MDQ6VXNlcjcxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lilyball", "html_url": "https://github.com/lilyball", "followers_url": "https://api.github.com/users/lilyball/followers", "following_url": "https://api.github.com/users/lilyball/following{/other_user}", "gists_url": "https://api.github.com/users/lilyball/gists{/gist_id}", "starred_url": "https://api.github.com/users/lilyball/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lilyball/subscriptions", "organizations_url": "https://api.github.com/users/lilyball/orgs", "repos_url": "https://api.github.com/users/lilyball/repos", "events_url": "https://api.github.com/users/lilyball/events{/privacy}", "received_events_url": "https://api.github.com/users/lilyball/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d5b5aa4d4a11a15bab4dbb31e029a807cb1d4ad3", "url": "https://api.github.com/repos/rust-lang/rust/commits/d5b5aa4d4a11a15bab4dbb31e029a807cb1d4ad3", "html_url": "https://github.com/rust-lang/rust/commit/d5b5aa4d4a11a15bab4dbb31e029a807cb1d4ad3"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "4a96439e0ec572791daa6c509cb35136776fcbd6", "filename": "src/librustc/middle/trans/_match.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0718259ae05e661c7f62bac6a02c6cba80d3f1f9/src%2Flibrustc%2Fmiddle%2Ftrans%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0718259ae05e661c7f62bac6a02c6cba80d3f1f9/src%2Flibrustc%2Fmiddle%2Ftrans%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2F_match.rs?ref=0718259ae05e661c7f62bac6a02c6cba80d3f1f9", "patch": "@@ -1120,7 +1120,7 @@ fn any_tuple_struct_pat(bcx: &Block, m: &[Match], col: uint) -> bool {\n     m.iter().any(|br| {\n         let pat = *br.pats.get(col);\n         match pat.node {\n-            ast::PatEnum(_, Some(_)) => {\n+            ast::PatEnum(_, _) => {\n                 match bcx.tcx().def_map.borrow().find(&pat.id) {\n                     Some(&ast::DefFn(..)) |\n                     Some(&ast::DefStruct(..)) => true,"}]}