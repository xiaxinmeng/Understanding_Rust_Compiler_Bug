{"sha": "23bd427f925e44a9244a40187659ca2a2eb0a6ee", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIzYmQ0MjdmOTI1ZTQ0YTkyNDRhNDAxODc2NTljYTJhMmViMGE2ZWU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-03-10T21:30:44Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-03-10T21:30:44Z"}, "message": "Auto merge of #5298 - rust-lang:needless_doc_main_code, r=flip1995,Manishearth\n\nneedless_doc_main: only check rust code\n\nThis fixes #5280 by checking the language attribute on code blocks.\n\n---\n\nchangelog: none", "tree": {"sha": "441358ac296600c112e764786bf54664f7f917d5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/441358ac296600c112e764786bf54664f7f917d5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/23bd427f925e44a9244a40187659ca2a2eb0a6ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/23bd427f925e44a9244a40187659ca2a2eb0a6ee", "html_url": "https://github.com/rust-lang/rust/commit/23bd427f925e44a9244a40187659ca2a2eb0a6ee", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/23bd427f925e44a9244a40187659ca2a2eb0a6ee/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "16b925b7486d166ceb10d68864b0bd1e1a576296", "url": "https://api.github.com/repos/rust-lang/rust/commits/16b925b7486d166ceb10d68864b0bd1e1a576296", "html_url": "https://github.com/rust-lang/rust/commit/16b925b7486d166ceb10d68864b0bd1e1a576296"}, {"sha": "d5c8b783b8ceb0f739e307670a4f3a92ba8fdfcc", "url": "https://api.github.com/repos/rust-lang/rust/commits/d5c8b783b8ceb0f739e307670a4f3a92ba8fdfcc", "html_url": "https://github.com/rust-lang/rust/commit/d5c8b783b8ceb0f739e307670a4f3a92ba8fdfcc"}], "stats": {"total": 72, "additions": 65, "deletions": 7}, "files": [{"sha": "754d38f4015831320137de0933a1a2e7c1bf7b3f", "filename": "clippy_lints/src/doc.rs", "status": "modified", "additions": 18, "deletions": 4, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/23bd427f925e44a9244a40187659ca2a2eb0a6ee/clippy_lints%2Fsrc%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23bd427f925e44a9244a40187659ca2a2eb0a6ee/clippy_lints%2Fsrc%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdoc.rs?ref=23bd427f925e44a9244a40187659ca2a2eb0a6ee", "patch": "@@ -367,13 +367,16 @@ fn check_attrs<'a>(cx: &LateContext<'_, '_>, valid_idents: &FxHashSet<String>, a\n     check_doc(cx, valid_idents, events, &spans)\n }\n \n+const RUST_CODE: &[&str] = &[\"rust\", \"no_run\", \"should_panic\", \"compile_fail\", \"edition2018\"];\n+\n fn check_doc<'a, Events: Iterator<Item = (pulldown_cmark::Event<'a>, Range<usize>)>>(\n     cx: &LateContext<'_, '_>,\n     valid_idents: &FxHashSet<String>,\n     events: Events,\n     spans: &[(usize, Span)],\n ) -> DocHeaders {\n     // true if a safety header was found\n+    use pulldown_cmark::CodeBlockKind;\n     use pulldown_cmark::Event::{\n         Code, End, FootnoteReference, HardBreak, Html, Rule, SoftBreak, Start, TaskListMarker, Text,\n     };\n@@ -386,11 +389,20 @@ fn check_doc<'a, Events: Iterator<Item = (pulldown_cmark::Event<'a>, Range<usize\n     let mut in_code = false;\n     let mut in_link = None;\n     let mut in_heading = false;\n-\n+    let mut is_rust = false;\n     for (event, range) in events {\n         match event {\n-            Start(CodeBlock(_)) => in_code = true,\n-            End(CodeBlock(_)) => in_code = false,\n+            Start(CodeBlock(ref kind)) => {\n+                in_code = true;\n+                if let CodeBlockKind::Fenced(lang) = kind {\n+                    is_rust =\n+                        lang.is_empty() || !lang.contains(\"ignore\") && lang.split(',').any(|i| RUST_CODE.contains(&i));\n+                }\n+            },\n+            End(CodeBlock(_)) => {\n+                in_code = false;\n+                is_rust = false;\n+            },\n             Start(Link(_, url, _)) => in_link = Some(url),\n             End(Link(..)) => in_link = None,\n             Start(Heading(_)) => in_heading = true,\n@@ -413,7 +425,9 @@ fn check_doc<'a, Events: Iterator<Item = (pulldown_cmark::Event<'a>, Range<usize\n                 };\n                 let (begin, span) = spans[index];\n                 if in_code {\n-                    check_code(cx, &text, span);\n+                    if is_rust {\n+                        check_code(cx, &text, span);\n+                    }\n                 } else {\n                     // Adjust for the beginning of the current `Event`\n                     let span = span.with_lo(span.lo() + BytePos::from_usize(range.start - begin));"}, {"sha": "682d7b3c4ceb4f64b0f559f37138193ce3034da6", "filename": "tests/ui/needless_doc_main.rs", "status": "modified", "additions": 34, "deletions": 2, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/23bd427f925e44a9244a40187659ca2a2eb0a6ee/tests%2Fui%2Fneedless_doc_main.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23bd427f925e44a9244a40187659ca2a2eb0a6ee/tests%2Fui%2Fneedless_doc_main.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_doc_main.rs?ref=23bd427f925e44a9244a40187659ca2a2eb0a6ee", "patch": "@@ -8,7 +8,23 @@\n ///     unimplemented!();\n /// }\n /// ```\n-fn bad_doctest() {}\n+///\n+/// This should, too.\n+///\n+/// ```rust\n+/// fn main() {\n+///     unimplemented!();\n+/// }\n+/// ```\n+///\n+/// This one too.\n+///\n+/// ```no_run\n+/// fn main() {\n+///     unimplemented!();\n+/// }\n+/// ```\n+fn bad_doctests() {}\n \n /// # Examples\n ///\n@@ -34,9 +50,25 @@ fn bad_doctest() {}\n ///     assert_eq(1u8, test::black_box(1));\n /// }\n /// ```\n+///\n+/// We should not lint ignored examples:\n+///\n+/// ```rust,ignore\n+/// fn main() {\n+///     unimplemented!();\n+/// }\n+/// ```\n+///\n+/// Or even non-rust examples:\n+///\n+/// ```text\n+/// fn main() {\n+///     is what starts the program\n+/// }\n+/// ```\n fn no_false_positives() {}\n \n fn main() {\n-    bad_doctest();\n+    bad_doctests();\n     no_false_positives();\n }"}, {"sha": "65d40ee6832f289d0130bf1d992b3f7b9f470d05", "filename": "tests/ui/needless_doc_main.stderr", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/23bd427f925e44a9244a40187659ca2a2eb0a6ee/tests%2Fui%2Fneedless_doc_main.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23bd427f925e44a9244a40187659ca2a2eb0a6ee/tests%2Fui%2Fneedless_doc_main.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_doc_main.stderr?ref=23bd427f925e44a9244a40187659ca2a2eb0a6ee", "patch": "@@ -6,5 +6,17 @@ LL | /// fn main() {\n    |\n    = note: `-D clippy::needless-doctest-main` implied by `-D warnings`\n \n-error: aborting due to previous error\n+error: needless `fn main` in doctest\n+  --> $DIR/needless_doc_main.rs:15:4\n+   |\n+LL | /// fn main() {\n+   |    ^^^^^^^^^^^^\n+\n+error: needless `fn main` in doctest\n+  --> $DIR/needless_doc_main.rs:23:4\n+   |\n+LL | /// fn main() {\n+   |    ^^^^^^^^^^^^\n+\n+error: aborting due to 3 previous errors\n "}]}