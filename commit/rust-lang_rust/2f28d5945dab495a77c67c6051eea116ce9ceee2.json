{"sha": "2f28d5945dab495a77c67c6051eea116ce9ceee2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJmMjhkNTk0NWRhYjQ5NWE3N2M2N2M2MDUxZWVhMTE2Y2U5Y2VlZTI=", "commit": {"author": {"name": "Naz\u0131m Can Alt\u0131nova", "email": "canaltinova@gmail.com", "date": "2020-07-17T19:59:37Z"}, "committer": {"name": "Naz\u0131m Can Alt\u0131nova", "email": "canaltinova@gmail.com", "date": "2020-07-17T20:00:06Z"}, "message": "Add a passing test for const unsafe_unreachable", "tree": {"sha": "178e890143d20755c775b7d4b7b58ee6d8c378f6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/178e890143d20755c775b7d4b7b58ee6d8c378f6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2f28d5945dab495a77c67c6051eea116ce9ceee2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2f28d5945dab495a77c67c6051eea116ce9ceee2", "html_url": "https://github.com/rust-lang/rust/commit/2f28d5945dab495a77c67c6051eea116ce9ceee2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2f28d5945dab495a77c67c6051eea116ce9ceee2/comments", "author": {"login": "canova", "id": 466239, "node_id": "MDQ6VXNlcjQ2NjIzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/466239?v=4", "gravatar_id": "", "url": "https://api.github.com/users/canova", "html_url": "https://github.com/canova", "followers_url": "https://api.github.com/users/canova/followers", "following_url": "https://api.github.com/users/canova/following{/other_user}", "gists_url": "https://api.github.com/users/canova/gists{/gist_id}", "starred_url": "https://api.github.com/users/canova/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/canova/subscriptions", "organizations_url": "https://api.github.com/users/canova/orgs", "repos_url": "https://api.github.com/users/canova/repos", "events_url": "https://api.github.com/users/canova/events{/privacy}", "received_events_url": "https://api.github.com/users/canova/received_events", "type": "User", "site_admin": false}, "committer": {"login": "canova", "id": 466239, "node_id": "MDQ6VXNlcjQ2NjIzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/466239?v=4", "gravatar_id": "", "url": "https://api.github.com/users/canova", "html_url": "https://github.com/canova", "followers_url": "https://api.github.com/users/canova/followers", "following_url": "https://api.github.com/users/canova/following{/other_user}", "gists_url": "https://api.github.com/users/canova/gists{/gist_id}", "starred_url": "https://api.github.com/users/canova/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/canova/subscriptions", "organizations_url": "https://api.github.com/users/canova/orgs", "repos_url": "https://api.github.com/users/canova/repos", "events_url": "https://api.github.com/users/canova/events{/privacy}", "received_events_url": "https://api.github.com/users/canova/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4fefa2c75d43dcf1184c7a7116cbd9595a8e49ab", "url": "https://api.github.com/repos/rust-lang/rust/commits/4fefa2c75d43dcf1184c7a7116cbd9595a8e49ab", "html_url": "https://github.com/rust-lang/rust/commit/4fefa2c75d43dcf1184c7a7116cbd9595a8e49ab"}], "stats": {"total": 17, "additions": 17, "deletions": 0}, "files": [{"sha": "cfed6e5deb99956864ba0a861a01cb0520e0b366", "filename": "src/test/ui/consts/const_unsafe_unreachable.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/2f28d5945dab495a77c67c6051eea116ce9ceee2/src%2Ftest%2Fui%2Fconsts%2Fconst_unsafe_unreachable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f28d5945dab495a77c67c6051eea116ce9ceee2/src%2Ftest%2Fui%2Fconsts%2Fconst_unsafe_unreachable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst_unsafe_unreachable.rs?ref=2f28d5945dab495a77c67c6051eea116ce9ceee2", "patch": "@@ -0,0 +1,17 @@\n+// run-pass\n+\n+#![feature(const_fn)]\n+#![feature(const_unreachable_unchecked)]\n+\n+const unsafe fn foo(x: bool) -> bool {\n+    match x {\n+        true => true,\n+        false => std::hint::unreachable_unchecked(),\n+    }\n+}\n+\n+const BAR: bool = unsafe { foo(true) };\n+\n+fn main() {\n+  assert_eq!(BAR, true);\n+}"}]}