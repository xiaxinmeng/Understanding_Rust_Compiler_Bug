{"sha": "381a841d8d44696358c77645f593997139ca80f3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM4MWE4NDFkOGQ0NDY5NjM1OGM3NzY0NWY1OTM5OTcxMzljYTgwZjM=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-08-18T00:27:39Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-08-18T00:27:39Z"}, "message": "Rollup merge of #75389 - RalfJung:span_label, r=davidtwco\n\nattempt to improve span_label docs\n\nI was still confused by the `span_label` docs, so I did some more digging. However, this needs careful checking as I have no idea if any of this is correct.", "tree": {"sha": "bb59d3e284f7ccc6ef230206dbd1f47fc7c0b705", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bb59d3e284f7ccc6ef230206dbd1f47fc7c0b705"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/381a841d8d44696358c77645f593997139ca80f3", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfOyB8CRBK7hj4Ov3rIwAAdHIIACIXIe/7U0BqR6tIoW9da82y\nHfgS8rMCt7XH+qeLSecAOVIV1vSdPz4BN0bhkcZnN/AiYrFzAU1Ga9A+bf4gO8/b\nsX+Ovxcehygj7ChxT5uL75QtD3WbVrHxSWcM+gU/j7jNFTiZ8/axads8Il3/JvxE\nVpcLd7U3dtDx27ultAhZjkFfQz1je7eaHM5VJJKnnAlQU47ewW7nyd4hAnyo92cz\n5FyoscExH4BdW1Wpo6XS7IZEoUKJ3kBtzecUOX8rApfclLoziFFO5IpoTfHKx4bZ\nPwIi0mGplh/aRjXwxTDhOpQe+ehD5f/r9iGhzNfyBoe7ccaFr4amJ5oTkgepqWY=\n=7Lx7\n-----END PGP SIGNATURE-----\n", "payload": "tree bb59d3e284f7ccc6ef230206dbd1f47fc7c0b705\nparent 792c645ca7d11a8d254df307d019c5bf01445c37\nparent edb39c0d208ef7850116bd3c931df091730c0e7f\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1597710459 +0900\ncommitter GitHub <noreply@github.com> 1597710459 +0900\n\nRollup merge of #75389 - RalfJung:span_label, r=davidtwco\n\nattempt to improve span_label docs\n\nI was still confused by the `span_label` docs, so I did some more digging. However, this needs careful checking as I have no idea if any of this is correct.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/381a841d8d44696358c77645f593997139ca80f3", "html_url": "https://github.com/rust-lang/rust/commit/381a841d8d44696358c77645f593997139ca80f3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/381a841d8d44696358c77645f593997139ca80f3/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "792c645ca7d11a8d254df307d019c5bf01445c37", "url": "https://api.github.com/repos/rust-lang/rust/commits/792c645ca7d11a8d254df307d019c5bf01445c37", "html_url": "https://github.com/rust-lang/rust/commit/792c645ca7d11a8d254df307d019c5bf01445c37"}, {"sha": "edb39c0d208ef7850116bd3c931df091730c0e7f", "url": "https://api.github.com/repos/rust-lang/rust/commits/edb39c0d208ef7850116bd3c931df091730c0e7f", "html_url": "https://github.com/rust-lang/rust/commit/edb39c0d208ef7850116bd3c931df091730c0e7f"}], "stats": {"total": 29, "additions": 17, "deletions": 12}, "files": [{"sha": "870f7b81e21aa734db26b63eaf26c46ad02ef158", "filename": "src/librustc_errors/diagnostic.rs", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/381a841d8d44696358c77645f593997139ca80f3/src%2Flibrustc_errors%2Fdiagnostic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/381a841d8d44696358c77645f593997139ca80f3/src%2Flibrustc_errors%2Fdiagnostic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Fdiagnostic.rs?ref=381a841d8d44696358c77645f593997139ca80f3", "patch": "@@ -127,14 +127,15 @@ impl Diagnostic {\n     }\n \n     /// Adds a span/label to be included in the resulting snippet.\n-    /// This label will be shown together with the original span/label used when creating the\n-    /// diagnostic, *not* a span added by one of the `span_*` methods.\n     ///\n-    /// This is pushed onto the `MultiSpan` that was created when the\n-    /// diagnostic was first built. If you don't call this function at\n-    /// all, and you just supplied a `Span` to create the diagnostic,\n-    /// then the snippet will just include that `Span`, which is\n-    /// called the primary span.\n+    /// This is pushed onto the [`MultiSpan`] that was created when the diagnostic\n+    /// was first built. That means it will be shown together with the original\n+    /// span/label, *not* a span added by one of the `span_{note,warn,help,suggestions}` methods.\n+    ///\n+    /// This span is *not* considered a [\"primary span\"][`MultiSpan`]; only\n+    /// the `Span` supplied when creating the diagnostic is primary.\n+    ///\n+    /// [`MultiSpan`]: ../rustc_span/struct.MultiSpan.html\n     pub fn span_label<T: Into<String>>(&mut self, span: Span, label: T) -> &mut Self {\n         self.span.push_span_label(span, label.into());\n         self"}, {"sha": "d1ff6f721c4151ca8949574bdcbfff59b5eb282e", "filename": "src/librustc_errors/diagnostic_builder.rs", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/381a841d8d44696358c77645f593997139ca80f3/src%2Flibrustc_errors%2Fdiagnostic_builder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/381a841d8d44696358c77645f593997139ca80f3/src%2Flibrustc_errors%2Fdiagnostic_builder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Fdiagnostic_builder.rs?ref=381a841d8d44696358c77645f593997139ca80f3", "patch": "@@ -184,11 +184,15 @@ impl<'a> DiagnosticBuilder<'a> {\n     }\n \n     /// Adds a span/label to be included in the resulting snippet.\n-    /// This is pushed onto the `MultiSpan` that was created when the\n-    /// diagnostic was first built. If you don't call this function at\n-    /// all, and you just supplied a `Span` to create the diagnostic,\n-    /// then the snippet will just include that `Span`, which is\n-    /// called the primary span.\n+    ///\n+    /// This is pushed onto the [`MultiSpan`] that was created when the diagnostic\n+    /// was first built. That means it will be shown together with the original\n+    /// span/label, *not* a span added by one of the `span_{note,warn,help,suggestions}` methods.\n+    ///\n+    /// This span is *not* considered a [\"primary span\"][`MultiSpan`]; only\n+    /// the `Span` supplied when creating the diagnostic is primary.\n+    ///\n+    /// [`MultiSpan`]: ../rustc_span/struct.MultiSpan.html\n     pub fn span_label(&mut self, span: Span, label: impl Into<String>) -> &mut Self {\n         self.0.diagnostic.span_label(span, label);\n         self"}]}