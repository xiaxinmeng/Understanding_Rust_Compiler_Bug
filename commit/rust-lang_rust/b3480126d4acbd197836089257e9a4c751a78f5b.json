{"sha": "b3480126d4acbd197836089257e9a4c751a78f5b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIzNDgwMTI2ZDRhY2JkMTk3ODM2MDg5MjU3ZTlhNGM3NTFhNzhmNWI=", "commit": {"author": {"name": "Jad Ghalayini", "email": "jad.ghalayini@hotmail.com", "date": "2019-05-27T23:37:20Z"}, "committer": {"name": "Jad Ghalayini", "email": "jad.ghalayini@hotmail.com", "date": "2019-05-27T23:37:20Z"}, "message": "Incorporated suggested changes", "tree": {"sha": "c267a69289a47c92460cd7286b5856bd9cd36a7b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c267a69289a47c92460cd7286b5856bd9cd36a7b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b3480126d4acbd197836089257e9a4c751a78f5b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b3480126d4acbd197836089257e9a4c751a78f5b", "html_url": "https://github.com/rust-lang/rust/commit/b3480126d4acbd197836089257e9a4c751a78f5b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b3480126d4acbd197836089257e9a4c751a78f5b/comments", "author": {"login": "imbrem", "id": 44735514, "node_id": "MDQ6VXNlcjQ0NzM1NTE0", "avatar_url": "https://avatars.githubusercontent.com/u/44735514?v=4", "gravatar_id": "", "url": "https://api.github.com/users/imbrem", "html_url": "https://github.com/imbrem", "followers_url": "https://api.github.com/users/imbrem/followers", "following_url": "https://api.github.com/users/imbrem/following{/other_user}", "gists_url": "https://api.github.com/users/imbrem/gists{/gist_id}", "starred_url": "https://api.github.com/users/imbrem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/imbrem/subscriptions", "organizations_url": "https://api.github.com/users/imbrem/orgs", "repos_url": "https://api.github.com/users/imbrem/repos", "events_url": "https://api.github.com/users/imbrem/events{/privacy}", "received_events_url": "https://api.github.com/users/imbrem/received_events", "type": "User", "site_admin": false}, "committer": {"login": "imbrem", "id": 44735514, "node_id": "MDQ6VXNlcjQ0NzM1NTE0", "avatar_url": "https://avatars.githubusercontent.com/u/44735514?v=4", "gravatar_id": "", "url": "https://api.github.com/users/imbrem", "html_url": "https://github.com/imbrem", "followers_url": "https://api.github.com/users/imbrem/followers", "following_url": "https://api.github.com/users/imbrem/following{/other_user}", "gists_url": "https://api.github.com/users/imbrem/gists{/gist_id}", "starred_url": "https://api.github.com/users/imbrem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/imbrem/subscriptions", "organizations_url": "https://api.github.com/users/imbrem/orgs", "repos_url": "https://api.github.com/users/imbrem/repos", "events_url": "https://api.github.com/users/imbrem/events{/privacy}", "received_events_url": "https://api.github.com/users/imbrem/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "03cce1d81ea17639167681c42ae1afa4c67a2fd2", "url": "https://api.github.com/repos/rust-lang/rust/commits/03cce1d81ea17639167681c42ae1afa4c67a2fd2", "html_url": "https://github.com/rust-lang/rust/commit/03cce1d81ea17639167681c42ae1afa4c67a2fd2"}], "stats": {"total": 13, "additions": 8, "deletions": 5}, "files": [{"sha": "6243e911bd5fdf92bc5b834a3ad51e7ccb0f7fd7", "filename": "src/librustc/error_codes.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/b3480126d4acbd197836089257e9a4c751a78f5b/src%2Flibrustc%2Ferror_codes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3480126d4acbd197836089257e9a4c751a78f5b/src%2Flibrustc%2Ferror_codes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ferror_codes.rs?ref=b3480126d4acbd197836089257e9a4c751a78f5b", "patch": "@@ -1217,7 +1217,7 @@ For example:\n ```compile_fail,E0284\n fn foo() -> Result<bool, ()> {\n     let results = [Ok(true), Ok(false), Err(())].iter().cloned();\n-    let v : Vec<bool> = results.collect()?;\n+    let v: Vec<bool> = results.collect()?;\n     // Do things with v...\n     Ok(true)\n }\n@@ -1228,7 +1228,7 @@ Hence, `results.collect()` can return any type implementing\n `FromIterator<Result<bool, ()>>`. On the other hand, the\n `?` operator can accept any type implementing `Try`.\n \n-The user of this code probably wants `collect()` to return a\n+The author of this code probably wants `collect()` to return a\n `Result<Vec<bool>, ()>`, but the compiler can't be sure\n that there isn't another type `T` implementing both `Try` and\n `FromIterator<Result<bool, ()>>` in scope such that\n@@ -1241,16 +1241,15 @@ To resolve this error, use a concrete type for the intermediate expression:\n fn foo() -> Result<bool, ()> {\n     let results = [Ok(true), Ok(false), Err(())].iter().cloned();\n     let v = {\n-        let temp : Result<Vec<bool>, ()> = results.collect();\n+        let temp: Result<Vec<bool>, ()> = results.collect();\n         temp?\n     };\n     // Do things with v...\n     Ok(true)\n }\n ```\n-Note that the type of `v` can now be inferred from the type of `temp`\n-\n \n+Note that the type of `v` can now be inferred from the type of `temp`.\n \"##,\n \n E0308: r##\""}, {"sha": "a26ee23894f6dcd04db477b1901adadf00331715", "filename": "src/test/ui/associated-types/associated-types-overridden-binding.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b3480126d4acbd197836089257e9a4c751a78f5b/src%2Ftest%2Fui%2Fassociated-types%2Fassociated-types-overridden-binding.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b3480126d4acbd197836089257e9a4c751a78f5b/src%2Ftest%2Fui%2Fassociated-types%2Fassociated-types-overridden-binding.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-types%2Fassociated-types-overridden-binding.stderr?ref=b3480126d4acbd197836089257e9a4c751a78f5b", "patch": "@@ -12,3 +12,4 @@ LL | trait Foo: Iterator<Item = i32> {}\n \n error: aborting due to previous error\n \n+For more information about this error, try `rustc --explain E0284`."}, {"sha": "da14a69ae306a67baece987e98b21226ce43256f", "filename": "src/test/ui/associated-types/associated-types-unconstrained.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b3480126d4acbd197836089257e9a4c751a78f5b/src%2Ftest%2Fui%2Fassociated-types%2Fassociated-types-unconstrained.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b3480126d4acbd197836089257e9a4c751a78f5b/src%2Ftest%2Fui%2Fassociated-types%2Fassociated-types-unconstrained.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-types%2Fassociated-types-unconstrained.stderr?ref=b3480126d4acbd197836089257e9a4c751a78f5b", "patch": "@@ -6,3 +6,4 @@ LL |     let x: isize = Foo::bar();\n \n error: aborting due to previous error\n \n+For more information about this error, try `rustc --explain E0284`."}, {"sha": "64694c7a8d0b66dbb9c917c8e667500af41a1d70", "filename": "src/test/ui/issues/issue-12028.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b3480126d4acbd197836089257e9a4c751a78f5b/src%2Ftest%2Fui%2Fissues%2Fissue-12028.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b3480126d4acbd197836089257e9a4c751a78f5b/src%2Ftest%2Fui%2Fissues%2Fissue-12028.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-12028.stderr?ref=b3480126d4acbd197836089257e9a4c751a78f5b", "patch": "@@ -6,3 +6,4 @@ LL |         self.input_stream(&mut stream);\n \n error: aborting due to previous error\n \n+For more information about this error, try `rustc --explain E0284`."}, {"sha": "f62a540572c934661246e79c7050cc3885c76afe", "filename": "src/test/ui/question-mark-type-infer.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b3480126d4acbd197836089257e9a4c751a78f5b/src%2Ftest%2Fui%2Fquestion-mark-type-infer.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b3480126d4acbd197836089257e9a4c751a78f5b/src%2Ftest%2Fui%2Fquestion-mark-type-infer.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fquestion-mark-type-infer.stderr?ref=b3480126d4acbd197836089257e9a4c751a78f5b", "patch": "@@ -6,3 +6,4 @@ LL |     l.iter().map(f).collect()?\n \n error: aborting due to previous error\n \n+For more information about this error, try `rustc --explain E0284`."}]}