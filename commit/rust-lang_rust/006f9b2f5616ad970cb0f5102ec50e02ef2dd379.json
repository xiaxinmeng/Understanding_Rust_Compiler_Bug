{"sha": "006f9b2f5616ad970cb0f5102ec50e02ef2dd379", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAwNmY5YjJmNTYxNmFkOTcwY2IwZjUxMDJlYzUwZTAyZWYyZGQzNzk=", "commit": {"author": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2018-04-01T06:27:46Z"}, "committer": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2018-04-10T12:40:26Z"}, "message": "Make Session.injected_panic_runtime thread-safe", "tree": {"sha": "90965ebb939774a823c1646bb1d3ec9de3e829a7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/90965ebb939774a823c1646bb1d3ec9de3e829a7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/006f9b2f5616ad970cb0f5102ec50e02ef2dd379", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/006f9b2f5616ad970cb0f5102ec50e02ef2dd379", "html_url": "https://github.com/rust-lang/rust/commit/006f9b2f5616ad970cb0f5102ec50e02ef2dd379", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/006f9b2f5616ad970cb0f5102ec50e02ef2dd379/comments", "author": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dacf9ba00fb8d6b7202a1ed5f06febe3fd2cf9b4", "url": "https://api.github.com/repos/rust-lang/rust/commits/dacf9ba00fb8d6b7202a1ed5f06febe3fd2cf9b4", "html_url": "https://github.com/rust-lang/rust/commit/dacf9ba00fb8d6b7202a1ed5f06febe3fd2cf9b4"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "e7fc8d633c82f8f1909c0847cfa2f3e89e8b1f65", "filename": "src/librustc/middle/dependency_format.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/006f9b2f5616ad970cb0f5102ec50e02ef2dd379/src%2Flibrustc%2Fmiddle%2Fdependency_format.rs", "raw_url": "https://github.com/rust-lang/rust/raw/006f9b2f5616ad970cb0f5102ec50e02ef2dd379/src%2Flibrustc%2Fmiddle%2Fdependency_format.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fdependency_format.rs?ref=006f9b2f5616ad970cb0f5102ec50e02ef2dd379", "patch": "@@ -223,7 +223,7 @@ fn calculate_type<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n     //\n     // Things like allocators and panic runtimes may not have been activated\n     // quite yet, so do so here.\n-    activate_injected_dep(sess.injected_panic_runtime.get(), &mut ret,\n+    activate_injected_dep(*sess.injected_panic_runtime.get(), &mut ret,\n                           &|cnum| tcx.is_panic_runtime(cnum));\n     activate_injected_allocator(sess, &mut ret);\n \n@@ -302,7 +302,7 @@ fn attempt_static<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>) -> Option<DependencyLis\n     // Our allocator/panic runtime may not have been linked above if it wasn't\n     // explicitly linked, which is the case for any injected dependency. Handle\n     // that here and activate them.\n-    activate_injected_dep(sess.injected_panic_runtime.get(), &mut ret,\n+    activate_injected_dep(*sess.injected_panic_runtime.get(), &mut ret,\n                           &|cnum| tcx.is_panic_runtime(cnum));\n     activate_injected_allocator(sess, &mut ret);\n "}, {"sha": "8f2043fdfc643bb15220e7f70509f635fee56f10", "filename": "src/librustc/session/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/006f9b2f5616ad970cb0f5102ec50e02ef2dd379/src%2Flibrustc%2Fsession%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/006f9b2f5616ad970cb0f5102ec50e02ef2dd379/src%2Flibrustc%2Fsession%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fmod.rs?ref=006f9b2f5616ad970cb0f5102ec50e02ef2dd379", "patch": "@@ -120,7 +120,7 @@ pub struct Session {\n     /// injected.\n     pub injected_allocator: Once<Option<CrateNum>>,\n     pub allocator_kind: Once<Option<AllocatorKind>>,\n-    pub injected_panic_runtime: Cell<Option<CrateNum>>,\n+    pub injected_panic_runtime: Once<Option<CrateNum>>,\n \n     /// Map from imported macro spans (which consist of\n     /// the localized span for the macro body) to the\n@@ -1107,7 +1107,7 @@ pub fn build_session_(\n         next_node_id: OneThread::new(Cell::new(NodeId::new(1))),\n         injected_allocator: Once::new(),\n         allocator_kind: Once::new(),\n-        injected_panic_runtime: Cell::new(None),\n+        injected_panic_runtime: Once::new(),\n         imported_macro_spans: OneThread::new(RefCell::new(HashMap::new())),\n         incr_comp_session: OneThread::new(RefCell::new(IncrCompSession::NotInitialized)),\n         ignored_attr_names: ich::compute_ignored_attr_names(),"}, {"sha": "34d9f47bac3ddc8d0bbcc6db280d8f1ed459a1b2", "filename": "src/librustc_metadata/creader.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/006f9b2f5616ad970cb0f5102ec50e02ef2dd379/src%2Flibrustc_metadata%2Fcreader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/006f9b2f5616ad970cb0f5102ec50e02ef2dd379/src%2Flibrustc_metadata%2Fcreader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fcreader.rs?ref=006f9b2f5616ad970cb0f5102ec50e02ef2dd379", "patch": "@@ -614,6 +614,7 @@ impl<'a> CrateLoader<'a> {\n         });\n         if !any_non_rlib {\n             info!(\"panic runtime injection skipped, only generating rlib\");\n+            self.sess.injected_panic_runtime.set(None);\n             return\n         }\n \n@@ -646,6 +647,7 @@ impl<'a> CrateLoader<'a> {\n         // we just don't need one at all, then we're done here and there's\n         // nothing else to do.\n         if !needs_panic_runtime || runtime_found {\n+            self.sess.injected_panic_runtime.set(None);\n             return\n         }\n "}]}