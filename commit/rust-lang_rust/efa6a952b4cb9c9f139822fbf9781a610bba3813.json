{"sha": "efa6a952b4cb9c9f139822fbf9781a610bba3813", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVmYTZhOTUyYjRjYjljOWYxMzk4MjJmYmY5NzgxYTYxMGJiYTM4MTM=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-31T07:27:38Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-31T07:27:38Z"}, "message": "cancelation tokens", "tree": {"sha": "d631880d0109a691505f03898959490c8db596de", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d631880d0109a691505f03898959490c8db596de"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/efa6a952b4cb9c9f139822fbf9781a610bba3813", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/efa6a952b4cb9c9f139822fbf9781a610bba3813", "html_url": "https://github.com/rust-lang/rust/commit/efa6a952b4cb9c9f139822fbf9781a610bba3813", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/efa6a952b4cb9c9f139822fbf9781a610bba3813/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "902df0fc054eb962987a850ba1b32bed59b59623", "url": "https://api.github.com/repos/rust-lang/rust/commits/902df0fc054eb962987a850ba1b32bed59b59623", "html_url": "https://github.com/rust-lang/rust/commit/902df0fc054eb962987a850ba1b32bed59b59623"}], "stats": {"total": 54, "additions": 54, "deletions": 0}, "files": [{"sha": "9c7977e9298522286ba60a399271c9b20e27cc1d", "filename": "crates/libanalysis/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/efa6a952b4cb9c9f139822fbf9781a610bba3813/crates%2Flibanalysis%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/efa6a952b4cb9c9f139822fbf9781a610bba3813/crates%2Flibanalysis%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibanalysis%2FCargo.toml?ref=efa6a952b4cb9c9f139822fbf9781a610bba3813", "patch": "@@ -6,6 +6,7 @@ authors = [\"Aleksey Kladov <aleksey.kladov@gmail.com>\"]\n [dependencies]\n relative-path = \"0.3.7\"\n log = \"0.4.2\"\n+crossbeam-channel = \"0.2.4\"\n parking_lot = \"0.6.3\"\n once_cell = \"0.1.4\"\n rayon = \"1.0.2\""}, {"sha": "4d393b915a952ef5c58e498f253a3206dff88b67", "filename": "crates/libanalysis/src/job.rs", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/efa6a952b4cb9c9f139822fbf9781a610bba3813/crates%2Flibanalysis%2Fsrc%2Fjob.rs", "raw_url": "https://github.com/rust-lang/rust/raw/efa6a952b4cb9c9f139822fbf9781a610bba3813/crates%2Flibanalysis%2Fsrc%2Fjob.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibanalysis%2Fsrc%2Fjob.rs?ref=efa6a952b4cb9c9f139822fbf9781a610bba3813", "patch": "@@ -0,0 +1,49 @@\n+use crossbeam_channel::{bounded, Receiver, Sender};\n+\n+pub struct JobHandle {\n+    job_alive: Receiver<Never>,\n+    _job_canceled: Sender<Never>,\n+}\n+\n+pub struct JobToken {\n+    _job_alive: Sender<Never>,\n+    job_canceled: Receiver<Never>,\n+}\n+\n+impl JobHandle {\n+    pub fn new() -> (JobHandle, JobToken) {\n+        let (sender_alive, receiver_alive) = bounded(0);\n+        let (sender_canceled, receiver_canceled) = bounded(0);\n+        let token = JobToken { _job_alive: sender_alive, job_canceled: receiver_canceled };\n+        let handle = JobHandle { job_alive: receiver_alive, _job_canceled: sender_canceled };\n+        (handle, token)\n+    }\n+    pub fn is_alive(&self) -> bool {\n+        !is_closed(&self.job_alive)\n+    }\n+    pub fn cancel(self) {\n+    }\n+}\n+\n+impl JobToken {\n+    pub fn is_canceled(&self) -> bool {\n+        is_closed(&self.job_canceled)\n+    }\n+}\n+\n+\n+// We don't actually send messages through the channels,\n+// and instead just check if the channel is closed,\n+// so we use uninhabited enum as a message type\n+enum Never {}\n+\n+/// Nonblocking\n+fn is_closed(chan: &Receiver<Never>) -> bool {\n+    select! {\n+        recv(chan, msg) => match msg {\n+            None => true,\n+            Some(never) => match never {}\n+        }\n+        default => false,\n+    }\n+}"}, {"sha": "20ddb69d659e6b562f51c37948c7c6acc2a477a9", "filename": "crates/libanalysis/src/lib.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/efa6a952b4cb9c9f139822fbf9781a610bba3813/crates%2Flibanalysis%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/efa6a952b4cb9c9f139822fbf9781a610bba3813/crates%2Flibanalysis%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibanalysis%2Fsrc%2Flib.rs?ref=efa6a952b4cb9c9f139822fbf9781a610bba3813", "patch": "@@ -7,10 +7,13 @@ extern crate libeditor;\n extern crate fst;\n extern crate rayon;\n extern crate relative_path;\n+#[macro_use]\n+extern crate crossbeam_channel;\n \n mod symbol_index;\n mod module_map;\n mod imp;\n+mod job;\n \n use std::sync::Arc;\n \n@@ -22,6 +25,7 @@ pub use libeditor::{\n     StructureNode, LineIndex, FileSymbol,\n     Runnable, RunnableKind, HighlightedRange, CompletionItem,\n };\n+pub use job::{JobToken, JobHandle};\n \n #[derive(Debug, Clone, Copy, PartialEq, Eq, PartialOrd, Ord, Hash)]\n pub struct FileId(pub u32);"}]}