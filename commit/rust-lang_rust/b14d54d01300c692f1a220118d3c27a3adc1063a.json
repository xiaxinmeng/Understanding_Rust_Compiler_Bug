{"sha": "b14d54d01300c692f1a220118d3c27a3adc1063a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIxNGQ1NGQwMTMwMGM2OTJmMWEyMjAxMThkM2MyN2EzYWRjMTA2M2E=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2021-04-07T23:01:47Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-04-07T23:01:47Z"}, "message": "Rollup merge of #83974 - pierwill:fix-callbacks-names, r=jyn514\n\nFix outdated crate names in `rustc_interface::callbacks`", "tree": {"sha": "307f9d70bbf116a22b28d6004c2e6f90f3a7d8c3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/307f9d70bbf116a22b28d6004c2e6f90f3a7d8c3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b14d54d01300c692f1a220118d3c27a3adc1063a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgbjncCRBK7hj4Ov3rIwAAdHIIAGq8XmWP/ssUGc/XUAFIXUXj\nOvE61Yc9soJsFeNjTqGfDyRkZaE7IszMduLGFT6j0jdvS7mRmOqWwr4mcCiaIhUG\nz+Rq/cTo/T8YOgj8MD+Fz4Vj7zKVTQXcbbYemmS3X/jt2zoS6gewJNjNuvN6A0ii\nTU0wbLA0KPRrWdIsjLVIK9dg4MGYZ6mg/lls9uvClqp/px92O60T62x/4ti1I4EW\nuTq+yuEX2JrV7DKQWdhbXReiH9L5QIhFP3KKn1MlDCFEo1RQLxSQ7bBGwXePhw74\n8tvA3rmC5YRphCLYVZ5DFMXBXDAFg7QOH4pDOoJ4XvryWT3pNS2tEukijBsegp4=\n=DhkY\n-----END PGP SIGNATURE-----\n", "payload": "tree 307f9d70bbf116a22b28d6004c2e6f90f3a7d8c3\nparent 1ab186aeedf339a31d867690778e4553948b1b29\nparent 934a30a8fd756d6b1b9f2453ca24097c3c8e2157\nauthor Dylan DPC <dylan.dpc@gmail.com> 1617836507 +0200\ncommitter GitHub <noreply@github.com> 1617836507 +0200\n\nRollup merge of #83974 - pierwill:fix-callbacks-names, r=jyn514\n\nFix outdated crate names in `rustc_interface::callbacks`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b14d54d01300c692f1a220118d3c27a3adc1063a", "html_url": "https://github.com/rust-lang/rust/commit/b14d54d01300c692f1a220118d3c27a3adc1063a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b14d54d01300c692f1a220118d3c27a3adc1063a/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1ab186aeedf339a31d867690778e4553948b1b29", "url": "https://api.github.com/repos/rust-lang/rust/commits/1ab186aeedf339a31d867690778e4553948b1b29", "html_url": "https://github.com/rust-lang/rust/commit/1ab186aeedf339a31d867690778e4553948b1b29"}, {"sha": "934a30a8fd756d6b1b9f2453ca24097c3c8e2157", "url": "https://api.github.com/repos/rust-lang/rust/commits/934a30a8fd756d6b1b9f2453ca24097c3c8e2157", "html_url": "https://github.com/rust-lang/rust/commit/934a30a8fd756d6b1b9f2453ca24097c3c8e2157"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "3b852b8ccf9d0ffffb47e80769ac77abe64113da", "filename": "compiler/rustc_interface/src/callbacks.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/b14d54d01300c692f1a220118d3c27a3adc1063a/compiler%2Frustc_interface%2Fsrc%2Fcallbacks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b14d54d01300c692f1a220118d3c27a3adc1063a/compiler%2Frustc_interface%2Fsrc%2Fcallbacks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_interface%2Fsrc%2Fcallbacks.rs?ref=b14d54d01300c692f1a220118d3c27a3adc1063a", "patch": "@@ -1,6 +1,6 @@\n //! Throughout the compiler tree, there are several places which want to have\n //! access to state or queries while being inside crates that are dependencies\n-//! of librustc_middle. To facilitate this, we have the\n+//! of `rustc_middle`. To facilitate this, we have the\n //! `rustc_data_structures::AtomicRef` type, which allows us to setup a global\n //! static which can then be set in this file at program startup.\n //!\n@@ -13,8 +13,8 @@ use rustc_errors::{Diagnostic, TRACK_DIAGNOSTICS};\n use rustc_middle::ty::tls;\n use std::fmt;\n \n-/// This is a callback from librustc_ast as it cannot access the implicit state\n-/// in librustc_middle otherwise.\n+/// This is a callback from `rustc_ast` as it cannot access the implicit state\n+/// in `rustc_middle` otherwise.\n fn span_debug(span: rustc_span::Span, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n     tls::with_opt(|tcx| {\n         if let Some(tcx) = tcx {\n@@ -25,8 +25,8 @@ fn span_debug(span: rustc_span::Span, f: &mut fmt::Formatter<'_>) -> fmt::Result\n     })\n }\n \n-/// This is a callback from librustc_ast as it cannot access the implicit state\n-/// in librustc_middle otherwise. It is used to when diagnostic messages are\n+/// This is a callback from `rustc_ast` as it cannot access the implicit state\n+/// in `rustc_middle` otherwise. It is used to when diagnostic messages are\n /// emitted and stores them in the current query, if there is one.\n fn track_diagnostic(diagnostic: &Diagnostic) {\n     tls::with_context_opt(|icx| {\n@@ -39,8 +39,8 @@ fn track_diagnostic(diagnostic: &Diagnostic) {\n     })\n }\n \n-/// This is a callback from librustc_hir as it cannot access the implicit state\n-/// in librustc_middle otherwise.\n+/// This is a callback from `rustc_hir` as it cannot access the implicit state\n+/// in `rustc_middle` otherwise.\n fn def_id_debug(def_id: rustc_hir::def_id::DefId, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n     write!(f, \"DefId({}:{}\", def_id.krate, def_id.index.index())?;\n     tls::with_opt(|opt_tcx| {"}]}