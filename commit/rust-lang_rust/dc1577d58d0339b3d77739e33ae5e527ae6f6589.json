{"sha": "dc1577d58d0339b3d77739e33ae5e527ae6f6589", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRjMTU3N2Q1OGQwMzM5YjNkNzc3MzllMzNhZTVlNTI3YWU2ZjY1ODk=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-05-22T14:20:22Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-05-22T14:20:22Z"}, "message": "Add even more docs", "tree": {"sha": "2f80f27892374b70e95286324ecac2ad76302d97", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2f80f27892374b70e95286324ecac2ad76302d97"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dc1577d58d0339b3d77739e33ae5e527ae6f6589", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dc1577d58d0339b3d77739e33ae5e527ae6f6589", "html_url": "https://github.com/rust-lang/rust/commit/dc1577d58d0339b3d77739e33ae5e527ae6f6589", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dc1577d58d0339b3d77739e33ae5e527ae6f6589/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "188b0f96f98feaa0771f941343887c46113c8ced", "url": "https://api.github.com/repos/rust-lang/rust/commits/188b0f96f98feaa0771f941343887c46113c8ced", "html_url": "https://github.com/rust-lang/rust/commit/188b0f96f98feaa0771f941343887c46113c8ced"}], "stats": {"total": 49, "additions": 13, "deletions": 36}, "files": [{"sha": "b07fbf8b3f42ad1bb3a3deaa96858fb78eaf8a6e", "filename": "crates/hir_expand/src/name.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dc1577d58d0339b3d77739e33ae5e527ae6f6589/crates%2Fhir_expand%2Fsrc%2Fname.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dc1577d58d0339b3d77739e33ae5e527ae6f6589/crates%2Fhir_expand%2Fsrc%2Fname.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_expand%2Fsrc%2Fname.rs?ref=dc1577d58d0339b3d77739e33ae5e527ae6f6589", "patch": "@@ -1,4 +1,4 @@\n-//! FIXME: write short doc here\n+//! See [`Name`].\n \n use std::fmt;\n "}, {"sha": "bde370fdb1605e95f69a625e2a5a834689afb29a", "filename": "crates/mbe/src/subtree_source.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/dc1577d58d0339b3d77739e33ae5e527ae6f6589/crates%2Fmbe%2Fsrc%2Fsubtree_source.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dc1577d58d0339b3d77739e33ae5e527ae6f6589/crates%2Fmbe%2Fsrc%2Fsubtree_source.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fmbe%2Fsrc%2Fsubtree_source.rs?ref=dc1577d58d0339b3d77739e33ae5e527ae6f6589", "patch": "@@ -1,4 +1,6 @@\n-//! FIXME: write short doc here\n+//! Our parser is generic over the source of tokens it parses.\n+//!\n+//! This module defines tokens sourced from declarative macros.\n \n use parser::{Token, TokenSource};\n use syntax::{lex_single_syntax_kind, SmolStr, SyntaxKind, SyntaxKind::*, T};"}, {"sha": "b13168bd3d0d8adafca54850503fa72550e2833a", "filename": "crates/mbe/src/syntax_bridge.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dc1577d58d0339b3d77739e33ae5e527ae6f6589/crates%2Fmbe%2Fsrc%2Fsyntax_bridge.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dc1577d58d0339b3d77739e33ae5e527ae6f6589/crates%2Fmbe%2Fsrc%2Fsyntax_bridge.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fmbe%2Fsrc%2Fsyntax_bridge.rs?ref=dc1577d58d0339b3d77739e33ae5e527ae6f6589", "patch": "@@ -1,4 +1,4 @@\n-//! FIXME: write short doc here\n+//! Conversions between [`SyntaxNode`] and [`tt::TokenTree`].\n \n use parser::{FragmentKind, ParseError, TreeSink};\n use rustc_hash::FxHashMap;"}, {"sha": "99a8d250b7ac33ab14b1817a4580915ae1064f54", "filename": "crates/mbe/src/tt_iter.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/dc1577d58d0339b3d77739e33ae5e527ae6f6589/crates%2Fmbe%2Fsrc%2Ftt_iter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dc1577d58d0339b3d77739e33ae5e527ae6f6589/crates%2Fmbe%2Fsrc%2Ftt_iter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fmbe%2Fsrc%2Ftt_iter.rs?ref=dc1577d58d0339b3d77739e33ae5e527ae6f6589", "patch": "@@ -1,4 +1,5 @@\n-//! FIXME: write short doc here\n+//! A \"Parser\" structure for token trees. We use this when parsing a declarative\n+//! macro definition into a list of patterns and templates.\n \n use crate::{subtree_source::SubtreeTokenSource, ExpandError, ExpandResult};\n "}, {"sha": "790908aeaca5bee2953ce10b6b019e326e2104c6", "filename": "crates/parser/src/grammar.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/dc1577d58d0339b3d77739e33ae5e527ae6f6589/crates%2Fparser%2Fsrc%2Fgrammar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dc1577d58d0339b3d77739e33ae5e527ae6f6589/crates%2Fparser%2Fsrc%2Fgrammar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fgrammar.rs?ref=dc1577d58d0339b3d77739e33ae5e527ae6f6589", "patch": "@@ -27,6 +27,7 @@\n //! node or an error, rules like `opt_where_clause` may produce nothing.\n //! Non-opt rules typically start with `assert!(p.at(FIRST_TOKEN))`, the\n //! caller is responsible for branching on the first token.\n+\n mod attributes;\n mod expressions;\n mod items;"}, {"sha": "b8242cd2f08b2e622206097900d970cdf71c39a9", "filename": "crates/parser/src/grammar/attributes.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dc1577d58d0339b3d77739e33ae5e527ae6f6589/crates%2Fparser%2Fsrc%2Fgrammar%2Fattributes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dc1577d58d0339b3d77739e33ae5e527ae6f6589/crates%2Fparser%2Fsrc%2Fgrammar%2Fattributes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fgrammar%2Fattributes.rs?ref=dc1577d58d0339b3d77739e33ae5e527ae6f6589", "patch": "@@ -1,5 +1,3 @@\n-//! FIXME: write short doc here\n-\n use super::*;\n \n pub(super) fn inner_attrs(p: &mut Parser) {"}, {"sha": "9d22e1950da6310512574bc9c8b4e508bb7a6ad2", "filename": "crates/parser/src/grammar/expressions.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dc1577d58d0339b3d77739e33ae5e527ae6f6589/crates%2Fparser%2Fsrc%2Fgrammar%2Fexpressions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dc1577d58d0339b3d77739e33ae5e527ae6f6589/crates%2Fparser%2Fsrc%2Fgrammar%2Fexpressions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fgrammar%2Fexpressions.rs?ref=dc1577d58d0339b3d77739e33ae5e527ae6f6589", "patch": "@@ -1,5 +1,3 @@\n-//! FIXME: write short doc here\n-\n mod atom;\n \n pub(crate) use self::atom::{block_expr, match_arm_list};"}, {"sha": "269f223e6e40d383fe8c82840ae03ad2e6da2c46", "filename": "crates/parser/src/grammar/expressions/atom.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dc1577d58d0339b3d77739e33ae5e527ae6f6589/crates%2Fparser%2Fsrc%2Fgrammar%2Fexpressions%2Fatom.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dc1577d58d0339b3d77739e33ae5e527ae6f6589/crates%2Fparser%2Fsrc%2Fgrammar%2Fexpressions%2Fatom.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fgrammar%2Fexpressions%2Fatom.rs?ref=dc1577d58d0339b3d77739e33ae5e527ae6f6589", "patch": "@@ -1,5 +1,3 @@\n-//! FIXME: write short doc here\n-\n use super::*;\n \n // test expr_literals"}, {"sha": "1057ca8c29113f01cda23290e82ef52d29955f70", "filename": "crates/parser/src/grammar/items.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dc1577d58d0339b3d77739e33ae5e527ae6f6589/crates%2Fparser%2Fsrc%2Fgrammar%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dc1577d58d0339b3d77739e33ae5e527ae6f6589/crates%2Fparser%2Fsrc%2Fgrammar%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fgrammar%2Fitems.rs?ref=dc1577d58d0339b3d77739e33ae5e527ae6f6589", "patch": "@@ -1,5 +1,3 @@\n-//! FIXME: write short doc here\n-\n mod consts;\n mod adt;\n mod traits;"}, {"sha": "386d3806c32e5f06fdf6b72c8ddbfe5631e4db69", "filename": "crates/parser/src/grammar/items/adt.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dc1577d58d0339b3d77739e33ae5e527ae6f6589/crates%2Fparser%2Fsrc%2Fgrammar%2Fitems%2Fadt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dc1577d58d0339b3d77739e33ae5e527ae6f6589/crates%2Fparser%2Fsrc%2Fgrammar%2Fitems%2Fadt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fgrammar%2Fitems%2Fadt.rs?ref=dc1577d58d0339b3d77739e33ae5e527ae6f6589", "patch": "@@ -1,5 +1,3 @@\n-//! FIXME: write short doc here\n-\n use super::*;\n \n pub(super) fn strukt(p: &mut Parser, m: Marker) {"}, {"sha": "ed3bee4a4685707c48b6419612980cdd44d0b8b3", "filename": "crates/parser/src/grammar/items/consts.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dc1577d58d0339b3d77739e33ae5e527ae6f6589/crates%2Fparser%2Fsrc%2Fgrammar%2Fitems%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dc1577d58d0339b3d77739e33ae5e527ae6f6589/crates%2Fparser%2Fsrc%2Fgrammar%2Fitems%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fgrammar%2Fitems%2Fconsts.rs?ref=dc1577d58d0339b3d77739e33ae5e527ae6f6589", "patch": "@@ -1,5 +1,3 @@\n-//! FIXME: write short doc here\n-\n use super::*;\n \n pub(super) fn static_(p: &mut Parser, m: Marker) {"}, {"sha": "74f11b45a18dd7a6613372dd7f9f7129c9806a1e", "filename": "crates/parser/src/grammar/items/traits.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dc1577d58d0339b3d77739e33ae5e527ae6f6589/crates%2Fparser%2Fsrc%2Fgrammar%2Fitems%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dc1577d58d0339b3d77739e33ae5e527ae6f6589/crates%2Fparser%2Fsrc%2Fgrammar%2Fitems%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fgrammar%2Fitems%2Ftraits.rs?ref=dc1577d58d0339b3d77739e33ae5e527ae6f6589", "patch": "@@ -1,5 +1,3 @@\n-//! FIXME: write short doc here\n-\n use super::*;\n \n // test trait_item"}, {"sha": "2339d0c69cc3688a97984d0704388fc34f07d62d", "filename": "crates/parser/src/grammar/items/use_item.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dc1577d58d0339b3d77739e33ae5e527ae6f6589/crates%2Fparser%2Fsrc%2Fgrammar%2Fitems%2Fuse_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dc1577d58d0339b3d77739e33ae5e527ae6f6589/crates%2Fparser%2Fsrc%2Fgrammar%2Fitems%2Fuse_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fgrammar%2Fitems%2Fuse_item.rs?ref=dc1577d58d0339b3d77739e33ae5e527ae6f6589", "patch": "@@ -1,5 +1,3 @@\n-//! FIXME: write short doc here\n-\n use super::*;\n \n pub(super) fn use_(p: &mut Parser, m: Marker) {"}, {"sha": "01ee26a5304e972a552ab32392765ede1a032bc1", "filename": "crates/parser/src/grammar/params.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dc1577d58d0339b3d77739e33ae5e527ae6f6589/crates%2Fparser%2Fsrc%2Fgrammar%2Fparams.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dc1577d58d0339b3d77739e33ae5e527ae6f6589/crates%2Fparser%2Fsrc%2Fgrammar%2Fparams.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fgrammar%2Fparams.rs?ref=dc1577d58d0339b3d77739e33ae5e527ae6f6589", "patch": "@@ -1,5 +1,3 @@\n-//! FIXME: write short doc here\n-\n use super::*;\n \n // test param_list"}, {"sha": "e633646c3b6293cf0c5e369f87c95a006e8c8f02", "filename": "crates/parser/src/grammar/paths.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dc1577d58d0339b3d77739e33ae5e527ae6f6589/crates%2Fparser%2Fsrc%2Fgrammar%2Fpaths.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dc1577d58d0339b3d77739e33ae5e527ae6f6589/crates%2Fparser%2Fsrc%2Fgrammar%2Fpaths.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fgrammar%2Fpaths.rs?ref=dc1577d58d0339b3d77739e33ae5e527ae6f6589", "patch": "@@ -1,5 +1,3 @@\n-//! FIXME: write short doc here\n-\n use super::*;\n \n pub(super) const PATH_FIRST: TokenSet ="}, {"sha": "bd092e0af8603acde79a361a8248408631a74abd", "filename": "crates/parser/src/grammar/patterns.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dc1577d58d0339b3d77739e33ae5e527ae6f6589/crates%2Fparser%2Fsrc%2Fgrammar%2Fpatterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dc1577d58d0339b3d77739e33ae5e527ae6f6589/crates%2Fparser%2Fsrc%2Fgrammar%2Fpatterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fgrammar%2Fpatterns.rs?ref=dc1577d58d0339b3d77739e33ae5e527ae6f6589", "patch": "@@ -1,5 +1,3 @@\n-//! FIXME: write short doc here\n-\n use super::*;\n \n pub(super) const PATTERN_FIRST: TokenSet ="}, {"sha": "ed2322e52cbf9310b6f2d9b7f38775d9e63e32d5", "filename": "crates/parser/src/grammar/type_args.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dc1577d58d0339b3d77739e33ae5e527ae6f6589/crates%2Fparser%2Fsrc%2Fgrammar%2Ftype_args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dc1577d58d0339b3d77739e33ae5e527ae6f6589/crates%2Fparser%2Fsrc%2Fgrammar%2Ftype_args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fgrammar%2Ftype_args.rs?ref=dc1577d58d0339b3d77739e33ae5e527ae6f6589", "patch": "@@ -1,5 +1,3 @@\n-//! FIXME: write short doc here\n-\n use super::*;\n \n pub(super) fn opt_generic_arg_list(p: &mut Parser, colon_colon_required: bool) {"}, {"sha": "49d6fa6d0b651dd199d1026c58085e0708511f6c", "filename": "crates/parser/src/grammar/type_params.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dc1577d58d0339b3d77739e33ae5e527ae6f6589/crates%2Fparser%2Fsrc%2Fgrammar%2Ftype_params.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dc1577d58d0339b3d77739e33ae5e527ae6f6589/crates%2Fparser%2Fsrc%2Fgrammar%2Ftype_params.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fgrammar%2Ftype_params.rs?ref=dc1577d58d0339b3d77739e33ae5e527ae6f6589", "patch": "@@ -1,5 +1,3 @@\n-//! FIXME: write short doc here\n-\n use super::*;\n \n pub(super) fn opt_generic_param_list(p: &mut Parser) {"}, {"sha": "72476c1907001bbfe3265fd2feb19d1fcadb7e27", "filename": "crates/parser/src/grammar/types.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dc1577d58d0339b3d77739e33ae5e527ae6f6589/crates%2Fparser%2Fsrc%2Fgrammar%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dc1577d58d0339b3d77739e33ae5e527ae6f6589/crates%2Fparser%2Fsrc%2Fgrammar%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fgrammar%2Ftypes.rs?ref=dc1577d58d0339b3d77739e33ae5e527ae6f6589", "patch": "@@ -1,5 +1,3 @@\n-//! FIXME: write short doc here\n-\n use super::*;\n \n pub(super) const TYPE_FIRST: TokenSet = paths::PATH_FIRST.union(TokenSet::new(&["}, {"sha": "3f87d98a86089ca3b734bbfdba41ac1e6787b84e", "filename": "crates/parser/src/parser.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dc1577d58d0339b3d77739e33ae5e527ae6f6589/crates%2Fparser%2Fsrc%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dc1577d58d0339b3d77739e33ae5e527ae6f6589/crates%2Fparser%2Fsrc%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fparser.rs?ref=dc1577d58d0339b3d77739e33ae5e527ae6f6589", "patch": "@@ -1,4 +1,4 @@\n-//! FIXME: write short doc here\n+//! See [`Parser`].\n \n use std::cell::Cell;\n "}, {"sha": "4d4377422b5e9dd97867c59e0ccdf64fe059eabf", "filename": "crates/parser/src/syntax_kind.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/dc1577d58d0339b3d77739e33ae5e527ae6f6589/crates%2Fparser%2Fsrc%2Fsyntax_kind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dc1577d58d0339b3d77739e33ae5e527ae6f6589/crates%2Fparser%2Fsrc%2Fsyntax_kind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fsyntax_kind.rs?ref=dc1577d58d0339b3d77739e33ae5e527ae6f6589", "patch": "@@ -1,4 +1,5 @@\n-//! FIXME: write short doc here\n+//! Defines [`SyntaxKind`] -- a fieldless enum of all possible syntactic\n+//! constructs of the Rust language.\n \n #[macro_use]\n mod generated;"}, {"sha": "f97e751c58a086720cf99b3d63798563ec0d731b", "filename": "xtask/src/tidy.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/dc1577d58d0339b3d77739e33ae5e527ae6f6589/xtask%2Fsrc%2Ftidy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dc1577d58d0339b3d77739e33ae5e527ae6f6589/xtask%2Fsrc%2Ftidy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Ftidy.rs?ref=dc1577d58d0339b3d77739e33ae5e527ae6f6589", "patch": "@@ -348,7 +348,7 @@ struct TidyDocs {\n impl TidyDocs {\n     fn visit(&mut self, path: &Path, text: &str) {\n         // Tests and diagnostic fixes don't need module level comments.\n-        if is_exclude_dir(path, &[\"tests\", \"test_data\", \"fixes\"]) {\n+        if is_exclude_dir(path, &[\"tests\", \"test_data\", \"fixes\", \"grammar\"]) {\n             return;\n         }\n \n@@ -392,7 +392,7 @@ impl TidyDocs {\n             )\n         }\n \n-        let poorly_documented = [\"hir_expand\", \"mbe\", \"parser\", \"hir_ty\"];\n+        let poorly_documented = [\"hir_ty\"];\n \n         let mut has_fixmes =\n             poorly_documented.iter().map(|it| (*it, false)).collect::<HashMap<&str, bool>>();"}]}