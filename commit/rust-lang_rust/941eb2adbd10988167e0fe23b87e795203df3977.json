{"sha": "941eb2adbd10988167e0fe23b87e795203df3977", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk0MWViMmFkYmQxMDk4ODE2N2UwZmUyM2I4N2U3OTUyMDNkZjM5Nzc=", "commit": {"author": {"name": "Ryan Levick", "email": "me@ryanlevick.com", "date": "2021-07-01T11:35:33Z"}, "committer": {"name": "Ryan Levick", "email": "me@ryanlevick.com", "date": "2021-07-06T18:13:17Z"}, "message": "Rename future_prelude_collisions to rust_2021_prelude_collisions", "tree": {"sha": "c82031764b4507f67f729c34245c613ab3f5eda6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c82031764b4507f67f729c34245c613ab3f5eda6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/941eb2adbd10988167e0fe23b87e795203df3977", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/941eb2adbd10988167e0fe23b87e795203df3977", "html_url": "https://github.com/rust-lang/rust/commit/941eb2adbd10988167e0fe23b87e795203df3977", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/941eb2adbd10988167e0fe23b87e795203df3977/comments", "author": {"login": "rylev", "id": 1327285, "node_id": "MDQ6VXNlcjEzMjcyODU=", "avatar_url": "https://avatars.githubusercontent.com/u/1327285?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rylev", "html_url": "https://github.com/rylev", "followers_url": "https://api.github.com/users/rylev/followers", "following_url": "https://api.github.com/users/rylev/following{/other_user}", "gists_url": "https://api.github.com/users/rylev/gists{/gist_id}", "starred_url": "https://api.github.com/users/rylev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rylev/subscriptions", "organizations_url": "https://api.github.com/users/rylev/orgs", "repos_url": "https://api.github.com/users/rylev/repos", "events_url": "https://api.github.com/users/rylev/events{/privacy}", "received_events_url": "https://api.github.com/users/rylev/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rylev", "id": 1327285, "node_id": "MDQ6VXNlcjEzMjcyODU=", "avatar_url": "https://avatars.githubusercontent.com/u/1327285?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rylev", "html_url": "https://github.com/rylev", "followers_url": "https://api.github.com/users/rylev/followers", "following_url": "https://api.github.com/users/rylev/following{/other_user}", "gists_url": "https://api.github.com/users/rylev/gists{/gist_id}", "starred_url": "https://api.github.com/users/rylev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rylev/subscriptions", "organizations_url": "https://api.github.com/users/rylev/orgs", "repos_url": "https://api.github.com/users/rylev/repos", "events_url": "https://api.github.com/users/rylev/events{/privacy}", "received_events_url": "https://api.github.com/users/rylev/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "81c11a212eda360ee3808dacf8065685f4a2e07b", "url": "https://api.github.com/repos/rust-lang/rust/commits/81c11a212eda360ee3808dacf8065685f4a2e07b", "html_url": "https://github.com/rust-lang/rust/commit/81c11a212eda360ee3808dacf8065685f4a2e07b"}], "stats": {"total": 54, "additions": 27, "deletions": 27}, "files": [{"sha": "3e30b6553db033b7a81f3e4d6a2bbbb30fcc7cb7", "filename": "compiler/rustc_lint_defs/src/builtin.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/941eb2adbd10988167e0fe23b87e795203df3977/compiler%2Frustc_lint_defs%2Fsrc%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/941eb2adbd10988167e0fe23b87e795203df3977/compiler%2Frustc_lint_defs%2Fsrc%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint_defs%2Fsrc%2Fbuiltin.rs?ref=941eb2adbd10988167e0fe23b87e795203df3977", "patch": "@@ -2972,7 +2972,7 @@ declare_lint_pass! {\n         PROC_MACRO_BACK_COMPAT,\n         RUST_2021_INCOMPATIBLE_OR_PATTERNS,\n         LARGE_ASSIGNMENTS,\n-        FUTURE_PRELUDE_COLLISIONS,\n+        RUST_2021_PRELUDE_COLLISIONS,\n         RUST_2021_TOKEN_PREFIXES,\n         UNSUPPORTED_CALLING_CONVENTIONS,\n     ]\n@@ -3221,13 +3221,13 @@ declare_lint! {\n }\n \n declare_lint! {\n-    /// The `future_prelude_collisions` lint detects the usage of trait methods which are ambiguous\n+    /// The `rust_2021_prelude_collisions` lint detects the usage of trait methods which are ambiguous\n     /// with traits added to the prelude in future editions.\n     ///\n     /// ### Example\n     ///\n     /// ```rust,compile_fail\n-    /// #![deny(future_prelude_collisions)]\n+    /// #![deny(rust_2021_prelude_collisions)]\n     ///\n     /// trait Foo {\n     ///     fn try_into(self) -> Result<String, !>;\n@@ -3259,7 +3259,7 @@ declare_lint! {\n     ///  is called directly on a type.\n     ///\n     /// [prelude changes]: https://blog.rust-lang.org/inside-rust/2021/03/04/planning-rust-2021.html#prelude-changes\n-    pub FUTURE_PRELUDE_COLLISIONS,\n+    pub RUST_2021_PRELUDE_COLLISIONS,\n     Allow,\n     \"detects the usage of trait methods which are ambiguous with traits added to the \\\n         prelude in future editions\","}, {"sha": "6ca0b3ed66b3933e25198d878e998bb16033c8d7", "filename": "compiler/rustc_typeck/src/check/method/prelude2021.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/941eb2adbd10988167e0fe23b87e795203df3977/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fprelude2021.rs", "raw_url": "https://github.com/rust-lang/rust/raw/941eb2adbd10988167e0fe23b87e795203df3977/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fprelude2021.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fprelude2021.rs?ref=941eb2adbd10988167e0fe23b87e795203df3977", "patch": "@@ -5,7 +5,7 @@ use rustc_ast::Mutability;\n use rustc_errors::Applicability;\n use rustc_hir as hir;\n use rustc_middle::ty::{Ref, Ty};\n-use rustc_session::lint::builtin::FUTURE_PRELUDE_COLLISIONS;\n+use rustc_session::lint::builtin::RUST_2021_PRELUDE_COLLISIONS;\n use rustc_span::symbol::kw::Underscore;\n use rustc_span::symbol::{sym, Ident};\n use rustc_span::Span;\n@@ -67,7 +67,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             // Inherent impls only require not relying on autoref and autoderef in order to\n             // ensure that the trait implementation won't be used\n             self.tcx.struct_span_lint_hir(\n-                FUTURE_PRELUDE_COLLISIONS,\n+                RUST_2021_PRELUDE_COLLISIONS,\n                 self_expr.hir_id,\n                 self_expr.span,\n                 |lint| {\n@@ -128,7 +128,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             // trait implementations require full disambiguation to not clash with the new prelude\n             // additions (i.e. convert from dot-call to fully-qualified call)\n             self.tcx.struct_span_lint_hir(\n-                FUTURE_PRELUDE_COLLISIONS,\n+                RUST_2021_PRELUDE_COLLISIONS,\n                 call_expr.hir_id,\n                 call_expr.span,\n                 |lint| {\n@@ -212,7 +212,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             return;\n         }\n \n-        self.tcx.struct_span_lint_hir(FUTURE_PRELUDE_COLLISIONS, expr_id, span, |lint| {\n+        self.tcx.struct_span_lint_hir(RUST_2021_PRELUDE_COLLISIONS, expr_id, span, |lint| {\n             // \"type\" refers to either a type or, more likely, a trait from which\n             // the associated function or method is from.\n             let trait_path = self.trait_path_or_bare_name(span, expr_id, pick.item.container.id());"}, {"sha": "c5ff0b4bcd0f8cb3bdb74fb3d3d15ca4d5316b8a", "filename": "src/test/ui/rust-2021/future-prelude-collision-imported.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941eb2adbd10988167e0fe23b87e795203df3977/src%2Ftest%2Fui%2Frust-2021%2Ffuture-prelude-collision-imported.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/941eb2adbd10988167e0fe23b87e795203df3977/src%2Ftest%2Fui%2Frust-2021%2Ffuture-prelude-collision-imported.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2021%2Ffuture-prelude-collision-imported.fixed?ref=941eb2adbd10988167e0fe23b87e795203df3977", "patch": "@@ -1,7 +1,7 @@\n // run-rustfix\n // edition:2018\n // check-pass\n-#![warn(future_prelude_collisions)]\n+#![warn(rust_2021_prelude_collisions)]\n #![allow(dead_code)]\n #![allow(unused_imports)]\n "}, {"sha": "cd39eec47f2a4125416440a5053eee6b50d5841f", "filename": "src/test/ui/rust-2021/future-prelude-collision-imported.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941eb2adbd10988167e0fe23b87e795203df3977/src%2Ftest%2Fui%2Frust-2021%2Ffuture-prelude-collision-imported.rs", "raw_url": "https://github.com/rust-lang/rust/raw/941eb2adbd10988167e0fe23b87e795203df3977/src%2Ftest%2Fui%2Frust-2021%2Ffuture-prelude-collision-imported.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2021%2Ffuture-prelude-collision-imported.rs?ref=941eb2adbd10988167e0fe23b87e795203df3977", "patch": "@@ -1,7 +1,7 @@\n // run-rustfix\n // edition:2018\n // check-pass\n-#![warn(future_prelude_collisions)]\n+#![warn(rust_2021_prelude_collisions)]\n #![allow(dead_code)]\n #![allow(unused_imports)]\n "}, {"sha": "61975876819229bfbfc8fbe123f3b10a20eff4ad", "filename": "src/test/ui/rust-2021/future-prelude-collision-imported.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/941eb2adbd10988167e0fe23b87e795203df3977/src%2Ftest%2Fui%2Frust-2021%2Ffuture-prelude-collision-imported.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941eb2adbd10988167e0fe23b87e795203df3977/src%2Ftest%2Fui%2Frust-2021%2Ffuture-prelude-collision-imported.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2021%2Ffuture-prelude-collision-imported.stderr?ref=941eb2adbd10988167e0fe23b87e795203df3977", "patch": "@@ -7,8 +7,8 @@ LL |         let _: u32 = 3u8.try_into().unwrap();\n note: the lint level is defined here\n   --> $DIR/future-prelude-collision-imported.rs:4:9\n    |\n-LL | #![warn(future_prelude_collisions)]\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL | #![warn(rust_2021_prelude_collisions)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    = warning: this is accepted in the current edition (Rust 2018) but is a hard error in Rust 2021!\n    = note: for more information, see issue #85684 <https://github.com/rust-lang/rust/issues/85684>\n "}, {"sha": "27891a8d11db7474a64db2b7defdedc478e0b590", "filename": "src/test/ui/rust-2021/future-prelude-collision-shadow.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941eb2adbd10988167e0fe23b87e795203df3977/src%2Ftest%2Fui%2Frust-2021%2Ffuture-prelude-collision-shadow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/941eb2adbd10988167e0fe23b87e795203df3977/src%2Ftest%2Fui%2Frust-2021%2Ffuture-prelude-collision-shadow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2021%2Ffuture-prelude-collision-shadow.rs?ref=941eb2adbd10988167e0fe23b87e795203df3977", "patch": "@@ -1,5 +1,5 @@\n // edition:2018\n-#![warn(future_prelude_collisions)]\n+#![warn(rust_2021_prelude_collisions)]\n #![allow(dead_code)]\n #![allow(unused_imports)]\n "}, {"sha": "4be82056ad59bdab71fc3310d7ac2681f67b2d6d", "filename": "src/test/ui/rust-2021/future-prelude-collision-unneeded.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941eb2adbd10988167e0fe23b87e795203df3977/src%2Ftest%2Fui%2Frust-2021%2Ffuture-prelude-collision-unneeded.rs", "raw_url": "https://github.com/rust-lang/rust/raw/941eb2adbd10988167e0fe23b87e795203df3977/src%2Ftest%2Fui%2Frust-2021%2Ffuture-prelude-collision-unneeded.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2021%2Ffuture-prelude-collision-unneeded.rs?ref=941eb2adbd10988167e0fe23b87e795203df3977", "patch": "@@ -1,7 +1,7 @@\n // edition:2018\n // check-pass\n #![allow(unused)]\n-#![deny(future_prelude_collisions)]\n+#![deny(rust_2021_prelude_collisions)]\n \n struct S;\n "}, {"sha": "43b0ec1c3e6a709fab2eefc5670e7c80854b67a2", "filename": "src/test/ui/rust-2021/future-prelude-collision.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941eb2adbd10988167e0fe23b87e795203df3977/src%2Ftest%2Fui%2Frust-2021%2Ffuture-prelude-collision.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/941eb2adbd10988167e0fe23b87e795203df3977/src%2Ftest%2Fui%2Frust-2021%2Ffuture-prelude-collision.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2021%2Ffuture-prelude-collision.fixed?ref=941eb2adbd10988167e0fe23b87e795203df3977", "patch": "@@ -1,7 +1,7 @@\n // run-rustfix\n // edition:2018\n // check-pass\n-#![warn(future_prelude_collisions)]\n+#![warn(rust_2021_prelude_collisions)]\n \n trait TryIntoU32 {\n     fn try_into(self) -> Result<u32, ()>;"}, {"sha": "4c7a47ffbe28ac0bca9213847beb2379c63c1175", "filename": "src/test/ui/rust-2021/future-prelude-collision.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941eb2adbd10988167e0fe23b87e795203df3977/src%2Ftest%2Fui%2Frust-2021%2Ffuture-prelude-collision.rs", "raw_url": "https://github.com/rust-lang/rust/raw/941eb2adbd10988167e0fe23b87e795203df3977/src%2Ftest%2Fui%2Frust-2021%2Ffuture-prelude-collision.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2021%2Ffuture-prelude-collision.rs?ref=941eb2adbd10988167e0fe23b87e795203df3977", "patch": "@@ -1,7 +1,7 @@\n // run-rustfix\n // edition:2018\n // check-pass\n-#![warn(future_prelude_collisions)]\n+#![warn(rust_2021_prelude_collisions)]\n \n trait TryIntoU32 {\n     fn try_into(self) -> Result<u32, ()>;"}, {"sha": "03b89da00d970c934ece61e64ba817bc7f7eb4c4", "filename": "src/test/ui/rust-2021/future-prelude-collision.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/941eb2adbd10988167e0fe23b87e795203df3977/src%2Ftest%2Fui%2Frust-2021%2Ffuture-prelude-collision.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941eb2adbd10988167e0fe23b87e795203df3977/src%2Ftest%2Fui%2Frust-2021%2Ffuture-prelude-collision.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2021%2Ffuture-prelude-collision.stderr?ref=941eb2adbd10988167e0fe23b87e795203df3977", "patch": "@@ -7,8 +7,8 @@ LL |     let _: u32 = 3u8.try_into().unwrap();\n note: the lint level is defined here\n   --> $DIR/future-prelude-collision.rs:4:9\n    |\n-LL | #![warn(future_prelude_collisions)]\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL | #![warn(rust_2021_prelude_collisions)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    = warning: this is accepted in the current edition (Rust 2018) but is a hard error in Rust 2021!\n    = note: for more information, see issue #85684 <https://github.com/rust-lang/rust/issues/85684>\n "}, {"sha": "feba7d19b6615750da3f1a06fd48fee2f602c823", "filename": "src/test/ui/rust-2021/generic-type-collision.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941eb2adbd10988167e0fe23b87e795203df3977/src%2Ftest%2Fui%2Frust-2021%2Fgeneric-type-collision.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/941eb2adbd10988167e0fe23b87e795203df3977/src%2Ftest%2Fui%2Frust-2021%2Fgeneric-type-collision.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2021%2Fgeneric-type-collision.fixed?ref=941eb2adbd10988167e0fe23b87e795203df3977", "patch": "@@ -1,7 +1,7 @@\n // check-pass\n // run-rustfix\n // edition 2018\n-#![warn(future_prelude_collisions)]\n+#![warn(rust_2021_prelude_collisions)]\n \n trait MyTrait<A> {\n     fn from_iter(x: Option<A>);"}, {"sha": "335e7e520a495450d8e9cc2151a1c91afbcc2a0e", "filename": "src/test/ui/rust-2021/generic-type-collision.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941eb2adbd10988167e0fe23b87e795203df3977/src%2Ftest%2Fui%2Frust-2021%2Fgeneric-type-collision.rs", "raw_url": "https://github.com/rust-lang/rust/raw/941eb2adbd10988167e0fe23b87e795203df3977/src%2Ftest%2Fui%2Frust-2021%2Fgeneric-type-collision.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2021%2Fgeneric-type-collision.rs?ref=941eb2adbd10988167e0fe23b87e795203df3977", "patch": "@@ -1,7 +1,7 @@\n // check-pass\n // run-rustfix\n // edition 2018\n-#![warn(future_prelude_collisions)]\n+#![warn(rust_2021_prelude_collisions)]\n \n trait MyTrait<A> {\n     fn from_iter(x: Option<A>);"}, {"sha": "d4999201c27f962bacb9586e0d7687fe91eb296b", "filename": "src/test/ui/rust-2021/generic-type-collision.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/941eb2adbd10988167e0fe23b87e795203df3977/src%2Ftest%2Fui%2Frust-2021%2Fgeneric-type-collision.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941eb2adbd10988167e0fe23b87e795203df3977/src%2Ftest%2Fui%2Frust-2021%2Fgeneric-type-collision.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2021%2Fgeneric-type-collision.stderr?ref=941eb2adbd10988167e0fe23b87e795203df3977", "patch": "@@ -7,8 +7,8 @@ LL |     <Vec<i32>>::from_iter(None);\n note: the lint level is defined here\n   --> $DIR/generic-type-collision.rs:4:9\n    |\n-LL | #![warn(future_prelude_collisions)]\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL | #![warn(rust_2021_prelude_collisions)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\n    = note: for more information, see issue #85684 <https://github.com/rust-lang/rust/issues/85684>\n "}, {"sha": "5789a90393bae56106f04d19020c575691bbffc8", "filename": "src/test/ui/rust-2021/inherent-dyn-collision.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941eb2adbd10988167e0fe23b87e795203df3977/src%2Ftest%2Fui%2Frust-2021%2Finherent-dyn-collision.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/941eb2adbd10988167e0fe23b87e795203df3977/src%2Ftest%2Fui%2Frust-2021%2Finherent-dyn-collision.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2021%2Finherent-dyn-collision.fixed?ref=941eb2adbd10988167e0fe23b87e795203df3977", "patch": "@@ -5,7 +5,7 @@\n // run-rustfix\n // edition:2018\n \n-#![warn(future_prelude_collisions)]\n+#![warn(rust_2021_prelude_collisions)]\n \n trait TryIntoU32 {\n     fn try_into(&self) -> Result<u32, ()>;"}, {"sha": "a3893c033e942cf1e7c9566ca41a9bcc66ee99f4", "filename": "src/test/ui/rust-2021/inherent-dyn-collision.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941eb2adbd10988167e0fe23b87e795203df3977/src%2Ftest%2Fui%2Frust-2021%2Finherent-dyn-collision.rs", "raw_url": "https://github.com/rust-lang/rust/raw/941eb2adbd10988167e0fe23b87e795203df3977/src%2Ftest%2Fui%2Frust-2021%2Finherent-dyn-collision.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2021%2Finherent-dyn-collision.rs?ref=941eb2adbd10988167e0fe23b87e795203df3977", "patch": "@@ -5,7 +5,7 @@\n // run-rustfix\n // edition:2018\n \n-#![warn(future_prelude_collisions)]\n+#![warn(rust_2021_prelude_collisions)]\n \n trait TryIntoU32 {\n     fn try_into(&self) -> Result<u32, ()>;"}, {"sha": "605f9ced9ebb72e559a81c5ae2d35bacdce59010", "filename": "src/test/ui/rust-2021/inherent-dyn-collision.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/941eb2adbd10988167e0fe23b87e795203df3977/src%2Ftest%2Fui%2Frust-2021%2Finherent-dyn-collision.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/941eb2adbd10988167e0fe23b87e795203df3977/src%2Ftest%2Fui%2Frust-2021%2Finherent-dyn-collision.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2021%2Finherent-dyn-collision.stderr?ref=941eb2adbd10988167e0fe23b87e795203df3977", "patch": "@@ -7,8 +7,8 @@ LL |         get_dyn_trait().try_into().unwrap()\n note: the lint level is defined here\n   --> $DIR/inherent-dyn-collision.rs:8:9\n    |\n-LL | #![warn(future_prelude_collisions)]\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL | #![warn(rust_2021_prelude_collisions)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    = warning: this is accepted in the current edition (Rust 2018) but is a hard error in Rust 2021!\n    = note: for more information, see issue #85684 <https://github.com/rust-lang/rust/issues/85684>\n "}, {"sha": "507105207d695e18794c876f7c5390c0cbf890dc", "filename": "src/test/ui/rust-2021/inherent-method-collision.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941eb2adbd10988167e0fe23b87e795203df3977/src%2Ftest%2Fui%2Frust-2021%2Finherent-method-collision.rs", "raw_url": "https://github.com/rust-lang/rust/raw/941eb2adbd10988167e0fe23b87e795203df3977/src%2Ftest%2Fui%2Frust-2021%2Finherent-method-collision.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2021%2Finherent-method-collision.rs?ref=941eb2adbd10988167e0fe23b87e795203df3977", "patch": "@@ -2,7 +2,7 @@\n //\n // check-pass\n \n-#![deny(future_prelude_collisions)]\n+#![deny(rust_2021_prelude_collisions)]\n \n pub struct MySeq {}\n "}]}