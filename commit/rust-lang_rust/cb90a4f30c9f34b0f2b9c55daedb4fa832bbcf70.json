{"sha": "cb90a4f30c9f34b0f2b9c55daedb4fa832bbcf70", "node_id": "C_kwDOAAsO6NoAKGNiOTBhNGYzMGM5ZjM0YjBmMmI5YzU1ZGFlZGI0ZmE4MzJiYmNmNzA", "commit": {"author": {"name": "David Wood", "email": "david.wood@huawei.com", "date": "2022-06-22T12:31:24Z"}, "committer": {"name": "David Wood", "email": "david.wood@huawei.com", "date": "2022-06-27T07:53:42Z"}, "message": "privacy: port \"item is private\" diag\n\nSigned-off-by: David Wood <david.wood@huawei.com>", "tree": {"sha": "f71b2375051e2c1e16321179fe14d6c4d5dcd3b7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f71b2375051e2c1e16321179fe14d6c4d5dcd3b7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cb90a4f30c9f34b0f2b9c55daedb4fa832bbcf70", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cb90a4f30c9f34b0f2b9c55daedb4fa832bbcf70", "html_url": "https://github.com/rust-lang/rust/commit/cb90a4f30c9f34b0f2b9c55daedb4fa832bbcf70", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cb90a4f30c9f34b0f2b9c55daedb4fa832bbcf70/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "be9ebfdbceff0727d37d97a8f4bc812a05a0eff9", "url": "https://api.github.com/repos/rust-lang/rust/commits/be9ebfdbceff0727d37d97a8f4bc812a05a0eff9", "html_url": "https://github.com/rust-lang/rust/commit/be9ebfdbceff0727d37d97a8f4bc812a05a0eff9"}], "stats": {"total": 25, "additions": 19, "deletions": 6}, "files": [{"sha": "6f558d1c6cca93bea8f5394a5af5af2a3ca7428e", "filename": "compiler/rustc_error_messages/locales/en-US/privacy.ftl", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/cb90a4f30c9f34b0f2b9c55daedb4fa832bbcf70/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fprivacy.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/cb90a4f30c9f34b0f2b9c55daedb4fa832bbcf70/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fprivacy.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fprivacy.ftl?ref=cb90a4f30c9f34b0f2b9c55daedb4fa832bbcf70", "patch": "@@ -1,3 +1,6 @@\n privacy-field-is-private = field `{$field_name}` of {$variant_descr} `{$def_path_str}` is private\n privacy-field-is-private-is-update-syntax-label = field `{$field_name}` is private\n privacy-field-is-private-label = private field\n+\n+privacy-item-is-private = {$kind} `{$descr}` is private\n+    .label = private {$kind}"}, {"sha": "a3072ded5a32a5478ca6fd6341b4f9585eef0f7d", "filename": "compiler/rustc_privacy/src/errors.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/cb90a4f30c9f34b0f2b9c55daedb4fa832bbcf70/compiler%2Frustc_privacy%2Fsrc%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb90a4f30c9f34b0f2b9c55daedb4fa832bbcf70/compiler%2Frustc_privacy%2Fsrc%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_privacy%2Fsrc%2Ferrors.rs?ref=cb90a4f30c9f34b0f2b9c55daedb4fa832bbcf70", "patch": "@@ -27,3 +27,13 @@ pub enum FieldIsPrivateLabel {\n         span: Span,\n     },\n }\n+\n+#[derive(SessionDiagnostic)]\n+#[error(privacy::item_is_private)]\n+pub struct ItemIsPrivate<'a> {\n+    #[primary_span]\n+    #[label]\n+    pub span: Span,\n+    pub kind: &'a str,\n+    pub descr: String,\n+}"}, {"sha": "2ff1d031783856fd8f986cb53dc2c7b712ae3bb5", "filename": "compiler/rustc_privacy/src/lib.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/cb90a4f30c9f34b0f2b9c55daedb4fa832bbcf70/compiler%2Frustc_privacy%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb90a4f30c9f34b0f2b9c55daedb4fa832bbcf70/compiler%2Frustc_privacy%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_privacy%2Fsrc%2Flib.rs?ref=cb90a4f30c9f34b0f2b9c55daedb4fa832bbcf70", "patch": "@@ -36,7 +36,7 @@ use std::marker::PhantomData;\n use std::ops::ControlFlow;\n use std::{cmp, fmt, mem};\n \n-use errors::{FieldIsPrivate, FieldIsPrivateLabel};\n+use errors::{FieldIsPrivate, FieldIsPrivateLabel, ItemIsPrivate};\n \n ////////////////////////////////////////////////////////////////////////////////\n /// Generic infrastructure used to implement specific visitors below.\n@@ -1073,11 +1073,11 @@ impl<'tcx> TypePrivacyVisitor<'tcx> {\n     fn check_def_id(&mut self, def_id: DefId, kind: &str, descr: &dyn fmt::Display) -> bool {\n         let is_error = !self.item_is_accessible(def_id);\n         if is_error {\n-            self.tcx\n-                .sess\n-                .struct_span_err(self.span, &format!(\"{} `{}` is private\", kind, descr))\n-                .span_label(self.span, &format!(\"private {}\", kind))\n-                .emit();\n+            self.tcx.sess.emit_err(ItemIsPrivate {\n+                span: self.span,\n+                kind,\n+                descr: descr.to_string(),\n+            });\n         }\n         is_error\n     }"}]}