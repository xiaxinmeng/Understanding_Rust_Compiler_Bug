{"sha": "dc6d86b04ef43260a5180025628fb2f05db287fc", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRjNmQ4NmIwNGVmNDMyNjBhNTE4MDAyNTYyOGZiMmYwNWRiMjg3ZmM=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-01-12T09:55:16Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-01-12T09:55:16Z"}, "message": "Rollup merge of #57499 - steveklabnik:gh47757, r=Mark-Simulacrum\n\nnote that FromStr does not work for borrowed types\n\nFixes #47757", "tree": {"sha": "eecdc9e184abf9e442de2670ee566dd21ebc1e5d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eecdc9e184abf9e442de2670ee566dd21ebc1e5d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dc6d86b04ef43260a5180025628fb2f05db287fc", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcObmFCRBK7hj4Ov3rIwAAdHIIAEBttbvKnz3f9r/R7fxyEdVd\nutgCRasxMdsarkOFxs5cIjcEZdbnD39HjpnHqg/2YZmoHCghH00METAK2NpM5R6V\njRjkW/OgPP/yhGvG0NFGnKk1ou/fgd1nVBuqMKeOvbxMpyiS8G/FoUfy8CelUa+h\nmTn/PVaWaloBX+hoQSpWceuEU9O0iga3EqcGP0Igf2PyzjldCNsZD6DXbgfXggal\ndyIXlYMuCvfHwwCi0m7jKfl8foiRZD2mlLINogaYBlH6XxI3ISuZNb6hEIIn3gDc\nvSQQQhZBslK+UuCw1jFEYTQ+azs+JwNXCBOHEa4Vd5Efer4JsHUb0Du0tNrUS8Y=\n=VGvZ\n-----END PGP SIGNATURE-----\n", "payload": "tree eecdc9e184abf9e442de2670ee566dd21ebc1e5d\nparent cbe377b2f5e709b35cee2bfb683b4f6a508a750f\nparent beb6495862942903d71e39e328b62b58cd6d2bb2\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1547286916 +0100\ncommitter GitHub <noreply@github.com> 1547286916 +0100\n\nRollup merge of #57499 - steveklabnik:gh47757, r=Mark-Simulacrum\n\nnote that FromStr does not work for borrowed types\n\nFixes #47757\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dc6d86b04ef43260a5180025628fb2f05db287fc", "html_url": "https://github.com/rust-lang/rust/commit/dc6d86b04ef43260a5180025628fb2f05db287fc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dc6d86b04ef43260a5180025628fb2f05db287fc/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cbe377b2f5e709b35cee2bfb683b4f6a508a750f", "url": "https://api.github.com/repos/rust-lang/rust/commits/cbe377b2f5e709b35cee2bfb683b4f6a508a750f", "html_url": "https://github.com/rust-lang/rust/commit/cbe377b2f5e709b35cee2bfb683b4f6a508a750f"}, {"sha": "beb6495862942903d71e39e328b62b58cd6d2bb2", "url": "https://api.github.com/repos/rust-lang/rust/commits/beb6495862942903d71e39e328b62b58cd6d2bb2", "html_url": "https://github.com/rust-lang/rust/commit/beb6495862942903d71e39e328b62b58cd6d2bb2"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "bdde187d931cc4654264a42c21a7f2f21c4c89d5", "filename": "src/libcore/str/mod.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/dc6d86b04ef43260a5180025628fb2f05db287fc/src%2Flibcore%2Fstr%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dc6d86b04ef43260a5180025628fb2f05db287fc/src%2Flibcore%2Fstr%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr%2Fmod.rs?ref=dc6d86b04ef43260a5180025628fb2f05db287fc", "patch": "@@ -20,8 +20,7 @@ pub mod pattern;\n #[allow(missing_docs)]\n pub mod lossy;\n \n-/// A trait to abstract the idea of creating a new instance of a type from a\n-/// string.\n+/// Parse a value from a string\n ///\n /// `FromStr`'s [`from_str`] method is often used implicitly, through\n /// [`str`]'s [`parse`] method. See [`parse`]'s documentation for examples.\n@@ -30,6 +29,11 @@ pub mod lossy;\n /// [`str`]: ../../std/primitive.str.html\n /// [`parse`]: ../../std/primitive.str.html#method.parse\n ///\n+/// `FromStr` does not have a lifetime parameter, and so you can only parse types\n+/// that do not contain a lifetime parameter themselves. In other words, you can\n+/// parse an `i32` with `FromStr`, but not a `&i32`. You can parse a struct that\n+/// contains an `i32`, but not one that contains an `&i32`.\n+///\n /// # Examples\n ///\n /// Basic implementation of `FromStr` on an example `Point` type:"}]}