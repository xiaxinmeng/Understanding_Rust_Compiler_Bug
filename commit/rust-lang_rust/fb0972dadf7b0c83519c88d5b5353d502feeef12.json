{"sha": "fb0972dadf7b0c83519c88d5b5353d502feeef12", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZiMDk3MmRhZGY3YjBjODM1MTljODhkNWI1MzUzZDUwMmZlZWVmMTI=", "commit": {"author": {"name": "David Haig", "email": "david@ninjasource.com", "date": "2019-11-25T13:38:08Z"}, "committer": {"name": "David Haig", "email": "david@ninjasource.com", "date": "2019-11-28T07:43:53Z"}, "message": "Fixed merge issue", "tree": {"sha": "b2dd5c13195dcb9e67fbffa9988dac996f88894a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b2dd5c13195dcb9e67fbffa9988dac996f88894a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fb0972dadf7b0c83519c88d5b5353d502feeef12", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fb0972dadf7b0c83519c88d5b5353d502feeef12", "html_url": "https://github.com/rust-lang/rust/commit/fb0972dadf7b0c83519c88d5b5353d502feeef12", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fb0972dadf7b0c83519c88d5b5353d502feeef12/comments", "author": null, "committer": null, "parents": [{"sha": "ec41fda58bd7cf35f3506bba97d2a98a64b09498", "url": "https://api.github.com/repos/rust-lang/rust/commits/ec41fda58bd7cf35f3506bba97d2a98a64b09498", "html_url": "https://github.com/rust-lang/rust/commit/ec41fda58bd7cf35f3506bba97d2a98a64b09498"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "b2832c78ef4ab059aa35943f991367ff5c879e84", "filename": "src/librustc/mir/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb0972dadf7b0c83519c88d5b5353d502feeef12/src%2Flibrustc%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb0972dadf7b0c83519c88d5b5353d502feeef12/src%2Flibrustc%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Fmod.rs?ref=fb0972dadf7b0c83519c88d5b5353d502feeef12", "patch": "@@ -6,7 +6,7 @@\n \n use crate::hir::def::{CtorKind, Namespace};\n use crate::hir::def_id::DefId;\n-use crate::hir::GeneratorKind;\n+use crate::hir::{self, GeneratorKind};\n use crate::mir::interpret::{GlobalAlloc, PanicInfo, Scalar};\n use crate::mir::visit::MirVisitable;\n use crate::ty::adjustment::PointerCast;"}]}