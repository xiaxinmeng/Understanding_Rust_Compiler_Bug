{"sha": "f1f1c9b25b1046baecd271963739a8fef7c358e1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYxZjFjOWIyNWIxMDQ2YmFlY2QyNzE5NjM3MzlhOGZlZjdjMzU4ZTE=", "commit": {"author": {"name": "Aris Merchant", "email": "22333129+inquisitivecrystal@users.noreply.github.com", "date": "2021-06-13T08:36:53Z"}, "committer": {"name": "Aris Merchant", "email": "22333129+inquisitivecrystal@users.noreply.github.com", "date": "2021-06-16T08:13:28Z"}, "message": "Improve errors for missing Debug and Display impls", "tree": {"sha": "28a87bc2598e255dd441227fb203b75ab591914b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/28a87bc2598e255dd441227fb203b75ab591914b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f1f1c9b25b1046baecd271963739a8fef7c358e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f1f1c9b25b1046baecd271963739a8fef7c358e1", "html_url": "https://github.com/rust-lang/rust/commit/f1f1c9b25b1046baecd271963739a8fef7c358e1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f1f1c9b25b1046baecd271963739a8fef7c358e1/comments", "author": {"login": "inquisitivecrystal", "id": 22333129, "node_id": "MDQ6VXNlcjIyMzMzMTI5", "avatar_url": "https://avatars.githubusercontent.com/u/22333129?v=4", "gravatar_id": "", "url": "https://api.github.com/users/inquisitivecrystal", "html_url": "https://github.com/inquisitivecrystal", "followers_url": "https://api.github.com/users/inquisitivecrystal/followers", "following_url": "https://api.github.com/users/inquisitivecrystal/following{/other_user}", "gists_url": "https://api.github.com/users/inquisitivecrystal/gists{/gist_id}", "starred_url": "https://api.github.com/users/inquisitivecrystal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/inquisitivecrystal/subscriptions", "organizations_url": "https://api.github.com/users/inquisitivecrystal/orgs", "repos_url": "https://api.github.com/users/inquisitivecrystal/repos", "events_url": "https://api.github.com/users/inquisitivecrystal/events{/privacy}", "received_events_url": "https://api.github.com/users/inquisitivecrystal/received_events", "type": "User", "site_admin": false}, "committer": {"login": "inquisitivecrystal", "id": 22333129, "node_id": "MDQ6VXNlcjIyMzMzMTI5", "avatar_url": "https://avatars.githubusercontent.com/u/22333129?v=4", "gravatar_id": "", "url": "https://api.github.com/users/inquisitivecrystal", "html_url": "https://github.com/inquisitivecrystal", "followers_url": "https://api.github.com/users/inquisitivecrystal/followers", "following_url": "https://api.github.com/users/inquisitivecrystal/following{/other_user}", "gists_url": "https://api.github.com/users/inquisitivecrystal/gists{/gist_id}", "starred_url": "https://api.github.com/users/inquisitivecrystal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/inquisitivecrystal/subscriptions", "organizations_url": "https://api.github.com/users/inquisitivecrystal/orgs", "repos_url": "https://api.github.com/users/inquisitivecrystal/repos", "events_url": "https://api.github.com/users/inquisitivecrystal/events{/privacy}", "received_events_url": "https://api.github.com/users/inquisitivecrystal/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0a8629bff642c3c3b84bb644c0099194f063b627", "url": "https://api.github.com/repos/rust-lang/rust/commits/0a8629bff642c3c3b84bb644c0099194f063b627", "html_url": "https://github.com/rust-lang/rust/commit/0a8629bff642c3c3b84bb644c0099194f063b627"}], "stats": {"total": 28, "additions": 27, "deletions": 1}, "files": [{"sha": "45c35959380bc48c9f530dbbfc8a242e17c08841", "filename": "compiler/rustc_span/src/symbol.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f1f1c9b25b1046baecd271963739a8fef7c358e1/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f1f1c9b25b1046baecd271963739a8fef7c358e1/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs?ref=f1f1c9b25b1046baecd271963739a8fef7c358e1", "patch": "@@ -479,6 +479,7 @@ symbols! {\n         discriminant_type,\n         discriminant_value,\n         dispatch_from_dyn,\n+        display_trait,\n         div,\n         div_assign,\n         doc,"}, {"sha": "e276d92bf5ac05619c8f5c0109d1fa098dcd3868", "filename": "compiler/rustc_trait_selection/src/traits/error_reporting/mod.rs", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/f1f1c9b25b1046baecd271963739a8fef7c358e1/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f1f1c9b25b1046baecd271963739a8fef7c358e1/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs?ref=f1f1c9b25b1046baecd271963739a8fef7c358e1", "patch": "@@ -514,6 +514,30 @@ impl<'a, 'tcx> InferCtxtExt<'tcx> for InferCtxt<'a, 'tcx> {\n                             }\n                         }\n \n+                        // Return early if the trait is Debug or Display and the invocation\n+                        // originates within a standard library macro, because the output\n+                        // is otherwise overwhelming and unhelpful (see #85844 for an\n+                        // example).\n+\n+                        let trait_is_debug =\n+                            self.tcx.is_diagnostic_item(sym::debug_trait, trait_ref.def_id());\n+                        let trait_is_display =\n+                            self.tcx.is_diagnostic_item(sym::display_trait, trait_ref.def_id());\n+\n+                        let in_std_macro =\n+                            match obligation.cause.span.ctxt().outer_expn_data().macro_def_id {\n+                                Some(macro_def_id) => {\n+                                    let crate_name = tcx.crate_name(macro_def_id.krate);\n+                                    crate_name == sym::std || crate_name == sym::core\n+                                }\n+                                None => false,\n+                            };\n+\n+                        if in_std_macro && (trait_is_debug || trait_is_display) {\n+                            err.emit();\n+                            return;\n+                        }\n+\n                         err\n                     }\n "}, {"sha": "1a65bf35897d30e34d77519c28a073462e12acc2", "filename": "library/core/src/fmt/mod.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f1f1c9b25b1046baecd271963739a8fef7c358e1/library%2Fcore%2Fsrc%2Ffmt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f1f1c9b25b1046baecd271963739a8fef7c358e1/library%2Fcore%2Fsrc%2Ffmt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Ffmt%2Fmod.rs?ref=f1f1c9b25b1046baecd271963739a8fef7c358e1", "patch": "@@ -564,7 +564,7 @@ impl Display for Arguments<'_> {\n     on(\n         crate_local,\n         label = \"`{Self}` cannot be formatted using `{{:?}}`\",\n-        note = \"add `#[derive(Debug)]` or manually implement `{Debug}`\"\n+        note = \"add `#[derive(Debug)]` to `{Self}` or manually implement `{Debug}` for `{Self}`\"\n     ),\n     message = \"`{Self}` doesn't implement `{Debug}`\",\n     label = \"`{Self}` cannot be formatted using `{{:?}}` because it doesn't implement `{Debug}`\"\n@@ -662,6 +662,7 @@ pub use macros::Debug;\n     note = \"in format strings you may be able to use `{{:?}}` (or {{:#?}} for pretty-print) instead\"\n )]\n #[doc(alias = \"{}\")]\n+#[rustc_diagnostic_item = \"display_trait\"]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub trait Display {\n     /// Formats the value using the given formatter."}]}