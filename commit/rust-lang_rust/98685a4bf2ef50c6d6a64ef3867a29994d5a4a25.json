{"sha": "98685a4bf2ef50c6d6a64ef3867a29994d5a4a25", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk4Njg1YTRiZjJlZjUwYzZkNmE2NGVmMzg2N2EyOTk5NGQ1YTRhMjU=", "commit": {"author": {"name": "Rich Kadel", "email": "richkadel@google.com", "date": "2020-06-16T00:08:13Z"}, "committer": {"name": "Rich Kadel", "email": "richkadel@google.com", "date": "2020-06-16T00:08:13Z"}, "message": "Add new `fn_span` to TerminatorKind::Call instance", "tree": {"sha": "1a96534627c9f57c8f35a7e4160232a7e3369d7d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1a96534627c9f57c8f35a7e4160232a7e3369d7d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/98685a4bf2ef50c6d6a64ef3867a29994d5a4a25", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/98685a4bf2ef50c6d6a64ef3867a29994d5a4a25", "html_url": "https://github.com/rust-lang/rust/commit/98685a4bf2ef50c6d6a64ef3867a29994d5a4a25", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/98685a4bf2ef50c6d6a64ef3867a29994d5a4a25/comments", "author": {"login": "richkadel", "id": 3827298, "node_id": "MDQ6VXNlcjM4MjcyOTg=", "avatar_url": "https://avatars.githubusercontent.com/u/3827298?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richkadel", "html_url": "https://github.com/richkadel", "followers_url": "https://api.github.com/users/richkadel/followers", "following_url": "https://api.github.com/users/richkadel/following{/other_user}", "gists_url": "https://api.github.com/users/richkadel/gists{/gist_id}", "starred_url": "https://api.github.com/users/richkadel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richkadel/subscriptions", "organizations_url": "https://api.github.com/users/richkadel/orgs", "repos_url": "https://api.github.com/users/richkadel/repos", "events_url": "https://api.github.com/users/richkadel/events{/privacy}", "received_events_url": "https://api.github.com/users/richkadel/received_events", "type": "User", "site_admin": false}, "committer": {"login": "richkadel", "id": 3827298, "node_id": "MDQ6VXNlcjM4MjcyOTg=", "avatar_url": "https://avatars.githubusercontent.com/u/3827298?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richkadel", "html_url": "https://github.com/richkadel", "followers_url": "https://api.github.com/users/richkadel/followers", "following_url": "https://api.github.com/users/richkadel/following{/other_user}", "gists_url": "https://api.github.com/users/richkadel/gists{/gist_id}", "starred_url": "https://api.github.com/users/richkadel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richkadel/subscriptions", "organizations_url": "https://api.github.com/users/richkadel/orgs", "repos_url": "https://api.github.com/users/richkadel/repos", "events_url": "https://api.github.com/users/richkadel/events{/privacy}", "received_events_url": "https://api.github.com/users/richkadel/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "163e5854562f5274f092d66318a5c805e18d83c5", "url": "https://api.github.com/repos/rust-lang/rust/commits/163e5854562f5274f092d66318a5c805e18d83c5", "html_url": "https://github.com/rust-lang/rust/commit/163e5854562f5274f092d66318a5c805e18d83c5"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "c36614938e10f9ab8b9a006faae3becece49105b", "filename": "src/librustc_mir/transform/instrument_coverage.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/98685a4bf2ef50c6d6a64ef3867a29994d5a4a25/src%2Flibrustc_mir%2Ftransform%2Finstrument_coverage.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98685a4bf2ef50c6d6a64ef3867a29994d5a4a25/src%2Flibrustc_mir%2Ftransform%2Finstrument_coverage.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Finstrument_coverage.rs?ref=98685a4bf2ef50c6d6a64ef3867a29994d5a4a25", "patch": "@@ -57,6 +57,7 @@ pub fn instrument_coverage<'tcx>(tcx: TyCtxt<'tcx>, body: &mut Body<'tcx>) {\n             destination: Some((Place::from(temp), new_block)),\n             cleanup: None,\n             from_hir_call: false,\n+            fn_span: span,\n         },\n     );\n "}]}