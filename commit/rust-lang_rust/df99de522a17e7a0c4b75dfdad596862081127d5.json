{"sha": "df99de522a17e7a0c4b75dfdad596862081127d5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRmOTlkZTUyMmExN2U3YTBjNGI3NWRmZGFkNTk2ODYyMDgxMTI3ZDU=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2020-02-10T17:42:04Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2020-04-25T11:59:09Z"}, "message": "proc_macro: Stabilize `Span::resolved_at` and `Span::located_at`", "tree": {"sha": "f13d9f7e5067609619c55ba7252e40df11c6eee2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f13d9f7e5067609619c55ba7252e40df11c6eee2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/df99de522a17e7a0c4b75dfdad596862081127d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/df99de522a17e7a0c4b75dfdad596862081127d5", "html_url": "https://github.com/rust-lang/rust/commit/df99de522a17e7a0c4b75dfdad596862081127d5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/df99de522a17e7a0c4b75dfdad596862081127d5/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a58b1ed44f5e06976de2bdc4d7dc81c36a96934f", "url": "https://api.github.com/repos/rust-lang/rust/commits/a58b1ed44f5e06976de2bdc4d7dc81c36a96934f", "html_url": "https://github.com/rust-lang/rust/commit/a58b1ed44f5e06976de2bdc4d7dc81c36a96934f"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "6e49d9829a2e13f4c65b864e2321c6f93be49ca6", "filename": "src/libproc_macro/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/df99de522a17e7a0c4b75dfdad596862081127d5/src%2Flibproc_macro%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df99de522a17e7a0c4b75dfdad596862081127d5/src%2Flibproc_macro%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibproc_macro%2Flib.rs?ref=df99de522a17e7a0c4b75dfdad596862081127d5", "patch": "@@ -352,14 +352,14 @@ impl Span {\n \n     /// Creates a new span with the same line/column information as `self` but\n     /// that resolves symbols as though it were at `other`.\n-    #[unstable(feature = \"proc_macro_span\", issue = \"54725\")]\n+    #[stable(feature = \"proc_macro_span_resolved_at\", since = \"1.43.0\")]\n     pub fn resolved_at(&self, other: Span) -> Span {\n         Span(self.0.resolved_at(other.0))\n     }\n \n     /// Creates a new span with the same name resolution behavior as `self` but\n     /// with the line/column information of `other`.\n-    #[unstable(feature = \"proc_macro_span\", issue = \"54725\")]\n+    #[stable(feature = \"proc_macro_span_located_at\", since = \"1.43.0\")]\n     pub fn located_at(&self, other: Span) -> Span {\n         other.resolved_at(*self)\n     }"}]}