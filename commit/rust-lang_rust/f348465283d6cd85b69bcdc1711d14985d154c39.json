{"sha": "f348465283d6cd85b69bcdc1711d14985d154c39", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYzNDg0NjUyODNkNmNkODViNjliY2RjMTcxMWQxNDk4NWQxNTRjMzk=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-06-20T18:35:34Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-06-20T18:35:34Z"}, "message": "auto merge of #7128 : yichoi/rust/fix_sometc, r=brson\n\n- Fix stat struct for Android (found by SEGV at run-pass/stat.rs)\r\n- Adjust some test cases to rpass for Android \r\n- Modify some script to rpass for Android", "tree": {"sha": "2bd582132e82b3b0acb879311394913144da1ea8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2bd582132e82b3b0acb879311394913144da1ea8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f348465283d6cd85b69bcdc1711d14985d154c39", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f348465283d6cd85b69bcdc1711d14985d154c39", "html_url": "https://github.com/rust-lang/rust/commit/f348465283d6cd85b69bcdc1711d14985d154c39", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f348465283d6cd85b69bcdc1711d14985d154c39/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "adeb7e77ccff938c0afb105a14a2ff4df4c7efc8", "url": "https://api.github.com/repos/rust-lang/rust/commits/adeb7e77ccff938c0afb105a14a2ff4df4c7efc8", "html_url": "https://github.com/rust-lang/rust/commit/adeb7e77ccff938c0afb105a14a2ff4df4c7efc8"}, {"sha": "b82370cec65b17456b1d5b98a283d3f46a8ab09a", "url": "https://api.github.com/repos/rust-lang/rust/commits/b82370cec65b17456b1d5b98a283d3f46a8ab09a", "html_url": "https://github.com/rust-lang/rust/commit/b82370cec65b17456b1d5b98a283d3f46a8ab09a"}], "stats": {"total": 103, "additions": 92, "deletions": 11}, "files": [{"sha": "35d567ef771bb2f75f328b2f82b1467d2165ab4d", "filename": "mk/tests.mk", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f348465283d6cd85b69bcdc1711d14985d154c39/mk%2Ftests.mk", "raw_url": "https://github.com/rust-lang/rust/raw/f348465283d6cd85b69bcdc1711d14985d154c39/mk%2Ftests.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Ftests.mk?ref=f348465283d6cd85b69bcdc1711d14985d154c39", "patch": "@@ -122,9 +122,7 @@ CFG_ADB_TEST_DIR=/data/tmp\n $(info check: android device test dir $(CFG_ADB_TEST_DIR) ready \\\n  $(shell adb remount 1>/dev/null) \\\n  $(shell adb shell mkdir $(CFG_ADB_TEST_DIR) 1>/dev/null) \\\n- $(shell adb shell rm $(CFG_ADB_TEST_DIR)/*.so 1>/dev/null) \\\n- $(shell adb shell rm $(CFG_ADB_TEST_DIR)/*-arm-linux-androideabi 1>/dev/null) \\\n- $(shell adb shell rm $(CFG_ADB_TEST_DIR)/*-arm-linux-androideabi.* 1>/dev/null) \\\n+ $(shell adb shell rm -rf $(CFG_ADB_TEST_DIR)/* 1>/dev/null) \\\n  $(shell adb push $(S)src/etc/adb_run_wrapper.sh $(CFG_ADB_TEST_DIR) 1>/dev/null) \\\n  $(shell adb push $(CFG_ANDROID_CROSS_PATH)/arm-linux-androideabi/lib/armv7-a/libgnustl_shared.so \\\n                   $(CFG_ADB_TEST_DIR) 1>/dev/null) \\"}, {"sha": "7cbcf94dd409acd938357a58d59e720678316e8b", "filename": "src/etc/adb_run_wrapper.sh", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f348465283d6cd85b69bcdc1711d14985d154c39/src%2Fetc%2Fadb_run_wrapper.sh", "raw_url": "https://github.com/rust-lang/rust/raw/f348465283d6cd85b69bcdc1711d14985d154c39/src%2Fetc%2Fadb_run_wrapper.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fadb_run_wrapper.sh?ref=f348465283d6cd85b69bcdc1711d14985d154c39", "patch": "@@ -17,16 +17,17 @@ then\n \n         L_RET=1\n         L_COUNT=0\n+        cd $PATH\n         while [ $L_RET -eq 1 ]\n         do\n-            LD_LIBRARY_PATH=$PATH $PATH/$RUN $@ 1>$PATH/$RUN.stdout 2>$PATH/$RUN.stderr\n+            TEST_EXEC_ENV=22 LD_LIBRARY_PATH=$PATH $PATH/$RUN $@ 1>$PATH/$RUN.stdout 2>$PATH/$RUN.stderr\n             L_RET=$?\n             if [ $L_COUNT -gt 0 ]\n             then\n                /system/bin/sleep $WAIT\n                /system/bin/sync\n             fi\n-            L_COUNT=`expr $L_COUNT+1`\n+            L_COUNT=$((L_COUNT+1))\n         done\n \n         echo $L_RET > $PATH/$RUN.exitcode"}, {"sha": "988fb5cc9b15bf33bd5204af4d92b58b335500f3", "filename": "src/libstd/libc.rs", "status": "modified", "additions": 49, "deletions": 1, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/f348465283d6cd85b69bcdc1711d14985d154c39/src%2Flibstd%2Flibc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f348465283d6cd85b69bcdc1711d14985d154c39/src%2Flibstd%2Flibc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flibc.rs?ref=f348465283d6cd85b69bcdc1711d14985d154c39", "patch": "@@ -257,6 +257,8 @@ pub mod types {\n                 pub type intptr_t = int;\n                 pub type uintptr_t = uint;\n             }\n+            #[cfg(target_arch = \"x86\")]\n+            #[cfg(target_arch = \"mips\")]\n             pub mod posix88 {\n                 pub type off_t = i32;\n                 pub type dev_t = u64;\n@@ -268,6 +270,20 @@ pub mod types {\n                 pub type mode_t = u32;\n                 pub type ssize_t = i32;\n             }\n+            #[cfg(target_arch = \"arm\")]\n+            pub mod posix88 {\n+                pub type off_t = i32;\n+                pub type dev_t = u32;\n+                pub type ino_t = u32;\n+                pub type pid_t = i32;\n+                pub type uid_t = u32;\n+                pub type gid_t = u32;\n+                pub type useconds_t = u32;\n+                pub type mode_t = u16;\n+                pub type ssize_t = i32;\n+            }\n+            #[cfg(target_arch = \"x86\")]\n+            #[cfg(target_arch = \"mips\")]\n             pub mod posix01 {\n                 use libc::types::os::arch::c95::{c_short, c_long, c_ulong, time_t};\n                 use libc::types::os::arch::posix88::{dev_t, gid_t, ino_t};\n@@ -279,7 +295,6 @@ pub mod types {\n                 pub type blkcnt_t = i32;\n \n                 #[cfg(target_arch = \"x86\")]\n-                #[cfg(target_arch = \"arm\")]\n                 pub struct stat {\n                     st_dev: dev_t,\n                     __pad1: c_short,\n@@ -327,6 +342,39 @@ pub mod types {\n                     st_pad5: [c_long, ..14],\n                 }\n             }\n+            #[cfg(target_arch = \"arm\")]\n+            pub mod posix01 {\n+                use libc::types::os::arch::c95::{c_uchar, c_uint, c_ulong, time_t};\n+                use libc::types::os::arch::c99::{c_longlong, c_ulonglong};\n+                use libc::types::os::arch::posix88::{uid_t, gid_t, ino_t};\n+                use libc::types::os::arch::posix88::{uid_t};\n+\n+                pub type nlink_t = u16;\n+                pub type blksize_t = u32;\n+                pub type blkcnt_t = u32;\n+\n+                pub struct stat {\n+                    st_dev: c_ulonglong,\n+                    __pad0: [c_uchar, ..4],\n+                    __st_ino: ino_t,\n+                    st_mode: c_uint,\n+                    st_nlink: c_uint,\n+                    st_uid: uid_t,\n+                    st_gid: gid_t,\n+                    st_rdev: c_ulonglong,\n+                    __pad3: [c_uchar, ..4],\n+                    st_size: c_longlong,\n+                    st_blksize: blksize_t,\n+                    st_blocks: c_ulonglong,\n+                    st_atime: time_t,\n+                    st_atime_nsec: c_ulong,\n+                    st_mtime: time_t,\n+                    st_mtime_nsec: c_ulong,\n+                    st_ctime: time_t,\n+                    st_ctime_nsec: c_ulong,\n+                    st_ino: c_ulonglong\n+                }\n+            }\n             pub mod posix08 {}\n             pub mod bsd44 {}\n             pub mod extra {}"}, {"sha": "d7812bf49c21455c1db02c6d17aa60f4dc1fb689", "filename": "src/libstd/path.rs", "status": "modified", "additions": 29, "deletions": 1, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/f348465283d6cd85b69bcdc1711d14985d154c39/src%2Flibstd%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f348465283d6cd85b69bcdc1711d14985d154c39/src%2Flibstd%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fpath.rs?ref=f348465283d6cd85b69bcdc1711d14985d154c39", "patch": "@@ -128,7 +128,6 @@ pub trait GenericPath {\n #[cfg(target_os = \"android\")]\n mod stat {\n     #[cfg(target_arch = \"x86\")]\n-    #[cfg(target_arch = \"arm\")]\n     pub mod arch {\n         use libc;\n \n@@ -158,6 +157,35 @@ mod stat {\n         }\n     }\n \n+    #[cfg(target_arch = \"arm\")]\n+    pub mod arch {\n+        use libc;\n+\n+        pub fn default_stat() -> libc::stat {\n+            libc::stat {\n+                st_dev: 0,\n+                __pad0: [0, ..4],\n+                __st_ino: 0,\n+                st_mode: 0,\n+                st_nlink: 0,\n+                st_uid: 0,\n+                st_gid: 0,\n+                st_rdev: 0,\n+                __pad3: [0, ..4],\n+                st_size: 0,\n+                st_blksize: 0,\n+                st_blocks: 0,\n+                st_atime: 0,\n+                st_atime_nsec: 0,\n+                st_mtime: 0,\n+                st_mtime_nsec: 0,\n+                st_ctime: 0,\n+                st_ctime_nsec: 0,\n+                st_ino: 0\n+            }\n+        }\n+    }\n+\n     #[cfg(target_arch = \"mips\")]\n     pub mod arch {\n         use libc;"}, {"sha": "64f9ecc9de220452b788174910f242af36ce3c2f", "filename": "src/test/run-pass/core-run-destroy.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f348465283d6cd85b69bcdc1711d14985d154c39/src%2Ftest%2Frun-pass%2Fcore-run-destroy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f348465283d6cd85b69bcdc1711d14985d154c39/src%2Ftest%2Frun-pass%2Fcore-run-destroy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcore-run-destroy.rs?ref=f348465283d6cd85b69bcdc1711d14985d154c39", "patch": "@@ -42,12 +42,18 @@ fn test_destroy_actually_kills(force: bool) {\n     #[cfg(windows)]\n     static BLOCK_COMMAND: &'static str = \"cmd\";\n \n-    #[cfg(unix)]\n+    #[cfg(unix,not(target_os=\"android\"))]\n     fn process_exists(pid: libc::pid_t) -> bool {\n         let run::ProcessOutput {output, _} = run::process_output(\"ps\", [~\"-p\", pid.to_str()]);\n         str::from_bytes(output).contains(pid.to_str())\n     }\n \n+    #[cfg(unix,target_os=\"android\")]\n+    fn process_exists(pid: libc::pid_t) -> bool {\n+        let run::ProcessOutput {output, _} = run::process_output(\"/system/bin/ps\", [pid.to_str()]);\n+        str::from_bytes(output).contains(~\"root\")\n+    }\n+\n     #[cfg(windows)]\n     fn process_exists(pid: libc::pid_t) -> bool {\n "}, {"sha": "27767db8733d891c801815abafb5a39f40e42389", "filename": "src/test/run-pass/intrinsic-alignment.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f348465283d6cd85b69bcdc1711d14985d154c39/src%2Ftest%2Frun-pass%2Fintrinsic-alignment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f348465283d6cd85b69bcdc1711d14985d154c39/src%2Ftest%2Frun-pass%2Fintrinsic-alignment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fintrinsic-alignment.rs?ref=f348465283d6cd85b69bcdc1711d14985d154c39", "patch": "@@ -60,7 +60,7 @@ mod m {\n     pub fn main() {\n         unsafe {\n             assert_eq!(::rusti::pref_align_of::<u64>(), 8u);\n-            assert_eq!(::rusti::min_align_of::<u64>(), 4u);\n+            assert_eq!(::rusti::min_align_of::<u64>(), 8u);\n         }\n     }\n }"}, {"sha": "7bc7a8583b9153b8d053982d97101f7a0300b907", "filename": "src/test/run-pass/rec-align-u64.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f348465283d6cd85b69bcdc1711d14985d154c39/src%2Ftest%2Frun-pass%2Frec-align-u64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f348465283d6cd85b69bcdc1711d14985d154c39/src%2Ftest%2Frun-pass%2Frec-align-u64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Frec-align-u64.rs?ref=f348465283d6cd85b69bcdc1711d14985d154c39", "patch": "@@ -63,8 +63,8 @@ mod m {\n mod m {\n     #[cfg(target_arch = \"arm\")]\n     pub mod m {\n-        pub fn align() -> uint { 4u }\n-        pub fn size() -> uint { 12u }\n+        pub fn align() -> uint { 8u }\n+        pub fn size() -> uint { 16u }\n     }\n }\n "}]}