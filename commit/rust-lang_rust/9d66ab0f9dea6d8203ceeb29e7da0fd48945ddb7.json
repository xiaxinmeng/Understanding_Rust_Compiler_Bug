{"sha": "9d66ab0f9dea6d8203ceeb29e7da0fd48945ddb7", "node_id": "C_kwDOAAsO6NoAKDlkNjZhYjBmOWRlYTZkODIwM2NlZWIyOWU3ZGEwZmQ0ODk0NWRkYjc", "commit": {"author": {"name": "Andres Suarez", "email": "zertosh@gmail.com", "date": "2022-11-28T02:40:38Z"}, "committer": {"name": "Andres Suarez", "email": "zertosh@gmail.com", "date": "2022-11-28T17:06:59Z"}, "message": "Add `as_mut_os_string` to `&mut PathBuf` and `as_mut_os_str` to `&mut Path`\n\nImplements rust-lang/libs-team#140", "tree": {"sha": "62c246432f50dae5e917da360ea7fa9fe40438be", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/62c246432f50dae5e917da360ea7fa9fe40438be"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9d66ab0f9dea6d8203ceeb29e7da0fd48945ddb7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9d66ab0f9dea6d8203ceeb29e7da0fd48945ddb7", "html_url": "https://github.com/rust-lang/rust/commit/9d66ab0f9dea6d8203ceeb29e7da0fd48945ddb7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9d66ab0f9dea6d8203ceeb29e7da0fd48945ddb7/comments", "author": {"login": "zertosh", "id": 830952, "node_id": "MDQ6VXNlcjgzMDk1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/830952?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zertosh", "html_url": "https://github.com/zertosh", "followers_url": "https://api.github.com/users/zertosh/followers", "following_url": "https://api.github.com/users/zertosh/following{/other_user}", "gists_url": "https://api.github.com/users/zertosh/gists{/gist_id}", "starred_url": "https://api.github.com/users/zertosh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zertosh/subscriptions", "organizations_url": "https://api.github.com/users/zertosh/orgs", "repos_url": "https://api.github.com/users/zertosh/repos", "events_url": "https://api.github.com/users/zertosh/events{/privacy}", "received_events_url": "https://api.github.com/users/zertosh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "zertosh", "id": 830952, "node_id": "MDQ6VXNlcjgzMDk1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/830952?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zertosh", "html_url": "https://github.com/zertosh", "followers_url": "https://api.github.com/users/zertosh/followers", "following_url": "https://api.github.com/users/zertosh/following{/other_user}", "gists_url": "https://api.github.com/users/zertosh/gists{/gist_id}", "starred_url": "https://api.github.com/users/zertosh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zertosh/subscriptions", "organizations_url": "https://api.github.com/users/zertosh/orgs", "repos_url": "https://api.github.com/users/zertosh/repos", "events_url": "https://api.github.com/users/zertosh/events{/privacy}", "received_events_url": "https://api.github.com/users/zertosh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8a09420ac48658cad726e0a6997687ceac4151e3", "url": "https://api.github.com/repos/rust-lang/rust/commits/8a09420ac48658cad726e0a6997687ceac4151e3", "html_url": "https://github.com/rust-lang/rust/commit/8a09420ac48658cad726e0a6997687ceac4151e3"}], "stats": {"total": 46, "additions": 46, "deletions": 0}, "files": [{"sha": "6c957c2fa90eb517088f085687474dbc3b6d702a", "filename": "library/std/src/path.rs", "status": "modified", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/9d66ab0f9dea6d8203ceeb29e7da0fd48945ddb7/library%2Fstd%2Fsrc%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d66ab0f9dea6d8203ceeb29e7da0fd48945ddb7/library%2Fstd%2Fsrc%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fpath.rs?ref=9d66ab0f9dea6d8203ceeb29e7da0fd48945ddb7", "patch": "@@ -1463,6 +1463,30 @@ impl PathBuf {\n         true\n     }\n \n+    /// Yields a mutable reference to the underlying [`OsString`] instance.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// #![feature(path_as_mut_os_str)]\n+    /// use std::path::{Path, PathBuf};\n+    ///\n+    /// let mut path = PathBuf::from(\"/foo\");\n+    ///\n+    /// path.push(\"bar\");\n+    /// assert_eq!(path, Path::new(\"/foo/bar\"));\n+    ///\n+    /// // OsString's `push` does not add a separator.\n+    /// path.as_mut_os_string().push(\"baz\");\n+    /// assert_eq!(path, Path::new(\"/foo/barbaz\"));\n+    /// ```\n+    #[unstable(feature = \"path_as_mut_os_str\", issue = \"105021\")]\n+    #[must_use]\n+    #[inline]\n+    pub fn as_mut_os_string(&mut self) -> &mut OsString {\n+        &mut self.inner\n+    }\n+\n     /// Consumes the `PathBuf`, yielding its internal [`OsString`] storage.\n     ///\n     /// # Examples\n@@ -1993,6 +2017,28 @@ impl Path {\n         &self.inner\n     }\n \n+    /// Yields a mutable reference to the underlying [`OsStr`] slice.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// #![feature(path_as_mut_os_str)]\n+    /// use std::path::{Path, PathBuf};\n+    ///\n+    /// let mut path = PathBuf::from(\"/Foo.TXT\").into_boxed_path();\n+    ///\n+    /// assert_ne!(&*path, Path::new(\"/foo.txt\"));\n+    ///\n+    /// path.as_mut_os_str().make_ascii_lowercase();\n+    /// assert_eq!(&*path, Path::new(\"/foo.txt\"));\n+    /// ```\n+    #[unstable(feature = \"path_as_mut_os_str\", issue = \"105021\")]\n+    #[must_use]\n+    #[inline]\n+    pub fn as_mut_os_str(&mut self) -> &mut OsStr {\n+        &mut self.inner\n+    }\n+\n     /// Yields a [`&str`] slice if the `Path` is valid unicode.\n     ///\n     /// This conversion may entail doing a check for UTF-8 validity."}]}