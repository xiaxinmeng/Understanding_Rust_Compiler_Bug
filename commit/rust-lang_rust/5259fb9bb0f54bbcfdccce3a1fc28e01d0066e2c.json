{"sha": "5259fb9bb0f54bbcfdccce3a1fc28e01d0066e2c", "node_id": "C_kwDOAAsO6NoAKDUyNTlmYjliYjBmNTRiYmNmZGNjY2UzYTFmYzI4ZTAxZDAwNjZlMmM", "commit": {"author": {"name": "Hiroki6", "email": "hirokifujino0108@gmail.com", "date": "2022-08-22T17:13:39Z"}, "committer": {"name": "Hiroki6", "email": "hirokifujino0108@gmail.com", "date": "2022-08-22T17:13:39Z"}, "message": "move thread.rs into concurrency", "tree": {"sha": "6287a181b573f702cdea477cae53a52e9467b6d7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6287a181b573f702cdea477cae53a52e9467b6d7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5259fb9bb0f54bbcfdccce3a1fc28e01d0066e2c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5259fb9bb0f54bbcfdccce3a1fc28e01d0066e2c", "html_url": "https://github.com/rust-lang/rust/commit/5259fb9bb0f54bbcfdccce3a1fc28e01d0066e2c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5259fb9bb0f54bbcfdccce3a1fc28e01d0066e2c/comments", "author": {"login": "Hiroki6", "id": 11785972, "node_id": "MDQ6VXNlcjExNzg1OTcy", "avatar_url": "https://avatars.githubusercontent.com/u/11785972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Hiroki6", "html_url": "https://github.com/Hiroki6", "followers_url": "https://api.github.com/users/Hiroki6/followers", "following_url": "https://api.github.com/users/Hiroki6/following{/other_user}", "gists_url": "https://api.github.com/users/Hiroki6/gists{/gist_id}", "starred_url": "https://api.github.com/users/Hiroki6/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Hiroki6/subscriptions", "organizations_url": "https://api.github.com/users/Hiroki6/orgs", "repos_url": "https://api.github.com/users/Hiroki6/repos", "events_url": "https://api.github.com/users/Hiroki6/events{/privacy}", "received_events_url": "https://api.github.com/users/Hiroki6/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Hiroki6", "id": 11785972, "node_id": "MDQ6VXNlcjExNzg1OTcy", "avatar_url": "https://avatars.githubusercontent.com/u/11785972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Hiroki6", "html_url": "https://github.com/Hiroki6", "followers_url": "https://api.github.com/users/Hiroki6/followers", "following_url": "https://api.github.com/users/Hiroki6/following{/other_user}", "gists_url": "https://api.github.com/users/Hiroki6/gists{/gist_id}", "starred_url": "https://api.github.com/users/Hiroki6/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Hiroki6/subscriptions", "organizations_url": "https://api.github.com/users/Hiroki6/orgs", "repos_url": "https://api.github.com/users/Hiroki6/repos", "events_url": "https://api.github.com/users/Hiroki6/events{/privacy}", "received_events_url": "https://api.github.com/users/Hiroki6/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e0f0e1fce7464fa619bdcd3c7f684cd3ccc96386", "url": "https://api.github.com/repos/rust-lang/rust/commits/e0f0e1fce7464fa619bdcd3c7f684cd3ccc96386", "html_url": "https://github.com/rust-lang/rust/commit/e0f0e1fce7464fa619bdcd3c7f684cd3ccc96386"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "61ef3d5640e00cd4d0df402332b31bd5f78b7fda", "filename": "src/concurrency/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5259fb9bb0f54bbcfdccce3a1fc28e01d0066e2c/src%2Fconcurrency%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5259fb9bb0f54bbcfdccce3a1fc28e01d0066e2c/src%2Fconcurrency%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconcurrency%2Fmod.rs?ref=5259fb9bb0f54bbcfdccce3a1fc28e01d0066e2c", "patch": "@@ -1,5 +1,6 @@\n pub mod data_race;\n mod range_object_map;\n pub mod sync;\n+pub mod thread;\n mod vector_clock;\n pub mod weak_memory;"}, {"sha": "dc8b1c291148d52ff577431153dfc744bd6f23a6", "filename": "src/concurrency/thread.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/5259fb9bb0f54bbcfdccce3a1fc28e01d0066e2c/src%2Fconcurrency%2Fthread.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5259fb9bb0f54bbcfdccce3a1fc28e01d0066e2c/src%2Fconcurrency%2Fthread.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconcurrency%2Fthread.rs?ref=5259fb9bb0f54bbcfdccce3a1fc28e01d0066e2c", "previous_filename": "src/thread.rs"}, {"sha": "846290ae6c6b4a7b15e25d3e812e9ce4180b5f9a", "filename": "src/lib.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/5259fb9bb0f54bbcfdccce3a1fc28e01d0066e2c/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5259fb9bb0f54bbcfdccce3a1fc28e01d0066e2c/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=5259fb9bb0f54bbcfdccce3a1fc28e01d0066e2c", "patch": "@@ -62,7 +62,6 @@ mod operator;\n mod range_map;\n mod shims;\n mod stacked_borrows;\n-pub mod thread;\n \n // Establish a \"crate-wide prelude\": we often import `crate::*`.\n \n@@ -104,10 +103,10 @@ pub use crate::range_map::RangeMap;\n pub use crate::stacked_borrows::{\n     CallId, EvalContextExt as StackedBorEvalContextExt, Item, Permission, SbTag, Stack, Stacks,\n };\n-pub use crate::thread::{\n+pub use concurrency::sync::{CondvarId, EvalContextExt as SyncEvalContextExt, MutexId, RwLockId};\n+pub use concurrency::thread::{\n     EvalContextExt as ThreadsEvalContextExt, SchedulingAction, ThreadId, ThreadManager, ThreadState,\n };\n-pub use concurrency::sync::{CondvarId, EvalContextExt as SyncEvalContextExt, MutexId, RwLockId};\n /// Insert rustc arguments at the beginning of the argument list that Miri wants to be\n /// set per default, for maximal validation power.\n pub const MIRI_DEFAULT_ARGS: &[&str] = &["}, {"sha": "a574a0612c47dfb7c036b6fd7c4d034de3ac8f37", "filename": "src/shims/time.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5259fb9bb0f54bbcfdccce3a1fc28e01d0066e2c/src%2Fshims%2Ftime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5259fb9bb0f54bbcfdccce3a1fc28e01d0066e2c/src%2Fshims%2Ftime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Ftime.rs?ref=5259fb9bb0f54bbcfdccce3a1fc28e01d0066e2c", "patch": "@@ -1,6 +1,6 @@\n use std::time::{Duration, Instant, SystemTime};\n \n-use crate::thread::Time;\n+use crate::concurrency::thread::Time;\n use crate::*;\n \n /// Returns the time elapsed between the provided time and the unix epoch as a `Duration`."}, {"sha": "73a042d45b8fd5864a57cdecf5111068ac798403", "filename": "src/shims/unix/linux/sync.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5259fb9bb0f54bbcfdccce3a1fc28e01d0066e2c/src%2Fshims%2Funix%2Flinux%2Fsync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5259fb9bb0f54bbcfdccce3a1fc28e01d0066e2c/src%2Fshims%2Funix%2Flinux%2Fsync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Funix%2Flinux%2Fsync.rs?ref=5259fb9bb0f54bbcfdccce3a1fc28e01d0066e2c", "patch": "@@ -1,4 +1,4 @@\n-use crate::thread::Time;\n+use crate::concurrency::thread::Time;\n use crate::*;\n use rustc_target::abi::{Align, Size};\n use std::time::{Instant, SystemTime};"}, {"sha": "b8504fb08d48fd865943127f8673a592383c58cd", "filename": "src/shims/unix/sync.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5259fb9bb0f54bbcfdccce3a1fc28e01d0066e2c/src%2Fshims%2Funix%2Fsync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5259fb9bb0f54bbcfdccce3a1fc28e01d0066e2c/src%2Fshims%2Funix%2Fsync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Funix%2Fsync.rs?ref=5259fb9bb0f54bbcfdccce3a1fc28e01d0066e2c", "patch": "@@ -3,7 +3,7 @@ use std::time::SystemTime;\n use rustc_hir::LangItem;\n use rustc_middle::ty::{layout::TyAndLayout, query::TyCtxtAt, subst::Subst, Ty};\n \n-use crate::thread::Time;\n+use crate::concurrency::thread::Time;\n use crate::*;\n \n // pthread_mutexattr_t is either 4 or 8 bytes, depending on the platform."}]}