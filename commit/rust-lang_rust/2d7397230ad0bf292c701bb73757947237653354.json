{"sha": "2d7397230ad0bf292c701bb73757947237653354", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJkNzM5NzIzMGFkMGJmMjkyYzcwMWJiNzM3NTc5NDcyMzc2NTMzNTQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-10-13T06:32:10Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-10-13T06:32:10Z"}, "message": "Auto merge of #45031 - alexcrichton:nounwind, r=arielb1\n\nrustc: Add LLVM `nounwind` with `-C panic=abort`\n\nThis informs LLVM that functions can't unwind, which while it should typically\nhave already been inferred when necessary or otherwise not impact codegen is\napparently needed on targets like ARM to avoid references to unnecessary\nsymbols.\n\nCloses #44992", "tree": {"sha": "07bdd0a91f4fccb1757e29933251546090399451", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/07bdd0a91f4fccb1757e29933251546090399451"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2d7397230ad0bf292c701bb73757947237653354", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2d7397230ad0bf292c701bb73757947237653354", "html_url": "https://github.com/rust-lang/rust/commit/2d7397230ad0bf292c701bb73757947237653354", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2d7397230ad0bf292c701bb73757947237653354/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "86e548747b33023c750c2201e55b065a3f3d275c", "url": "https://api.github.com/repos/rust-lang/rust/commits/86e548747b33023c750c2201e55b065a3f3d275c", "html_url": "https://github.com/rust-lang/rust/commit/86e548747b33023c750c2201e55b065a3f3d275c"}, {"sha": "24cc38e3b00ff399acc99a57f92bfdef4ab8c949", "url": "https://api.github.com/repos/rust-lang/rust/commits/24cc38e3b00ff399acc99a57f92bfdef4ab8c949", "html_url": "https://github.com/rust-lang/rust/commit/24cc38e3b00ff399acc99a57f92bfdef4ab8c949"}], "stats": {"total": 53, "additions": 50, "deletions": 3}, "files": [{"sha": "b515c9420bf36d18812dad1c4208b88bad65ecbb", "filename": "src/librustc_trans/callee.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/2d7397230ad0bf292c701bb73757947237653354/src%2Flibrustc_trans%2Fcallee.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d7397230ad0bf292c701bb73757947237653354/src%2Flibrustc_trans%2Fcallee.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fcallee.rs?ref=2d7397230ad0bf292c701bb73757947237653354", "patch": "@@ -24,6 +24,7 @@ use rustc::hir::def_id::DefId;\n use rustc::ty::{self, TypeFoldable};\n use rustc::traits;\n use rustc::ty::subst::Substs;\n+use rustc_back::PanicStrategy;\n use type_of;\n \n /// Translates a reference to a fn/method item, monomorphizing and\n@@ -105,8 +106,10 @@ pub fn get_fn<'a, 'tcx>(ccx: &CrateContext<'a, 'tcx>,\n         // *in Rust code* may unwind. Foreign items like `extern \"C\" {\n         // fn foo(); }` are assumed not to unwind **unless** they have\n         // a `#[unwind]` attribute.\n-        if !tcx.is_foreign_item(instance_def_id) {\n-            attributes::unwind(llfn, true);\n+        if tcx.sess.panic_strategy() == PanicStrategy::Unwind {\n+            if !tcx.is_foreign_item(instance_def_id) {\n+                attributes::unwind(llfn, true);\n+            }\n         }\n \n         // Apply an appropriate linkage/visibility value to our item that we"}, {"sha": "f894bdf16e4de28c4c3233f622444aafda2882d2", "filename": "src/librustc_trans/declare.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2d7397230ad0bf292c701bb73757947237653354/src%2Flibrustc_trans%2Fdeclare.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d7397230ad0bf292c701bb73757947237653354/src%2Flibrustc_trans%2Fdeclare.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fdeclare.rs?ref=2d7397230ad0bf292c701bb73757947237653354", "patch": "@@ -24,6 +24,7 @@ use llvm::{self, ValueRef};\n use llvm::AttributePlace::Function;\n use rustc::ty::Ty;\n use rustc::session::config::Sanitizer;\n+use rustc_back::PanicStrategy;\n use abi::{Abi, FnType};\n use attributes;\n use context::CrateContext;\n@@ -98,6 +99,10 @@ fn declare_raw_fn(ccx: &CrateContext, name: &str, callconv: llvm::CallConv, ty:\n         _ => {},\n     }\n \n+    if ccx.tcx().sess.panic_strategy() != PanicStrategy::Unwind {\n+        attributes::unwind(llfn, false);\n+    }\n+\n     llfn\n }\n "}, {"sha": "5e40e8ede15571f63a0c1f69cc52782f32c3e211", "filename": "src/test/codegen/auxiliary/nounwind.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/2d7397230ad0bf292c701bb73757947237653354/src%2Ftest%2Fcodegen%2Fauxiliary%2Fnounwind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d7397230ad0bf292c701bb73757947237653354/src%2Ftest%2Fcodegen%2Fauxiliary%2Fnounwind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fauxiliary%2Fnounwind.rs?ref=2d7397230ad0bf292c701bb73757947237653354", "patch": "@@ -0,0 +1,13 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#[no_mangle]\n+pub fn bar() {\n+}"}, {"sha": "9fea907d3c884e56f1078e4b197b9dc3df38a8c9", "filename": "src/test/codegen/nounwind.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/2d7397230ad0bf292c701bb73757947237653354/src%2Ftest%2Fcodegen%2Fnounwind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d7397230ad0bf292c701bb73757947237653354/src%2Ftest%2Fcodegen%2Fnounwind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fnounwind.rs?ref=2d7397230ad0bf292c701bb73757947237653354", "patch": "@@ -0,0 +1,26 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// aux-build:nounwind.rs\n+// compile-flags: -C no-prepopulate-passes -C panic=abort -C metadata=a\n+// ignore-windows\n+\n+#![crate_type = \"lib\"]\n+\n+extern crate nounwind;\n+\n+#[no_mangle]\n+pub fn foo() {\n+    nounwind::bar();\n+// CHECK: @foo() unnamed_addr #0\n+// CHECK: @bar() unnamed_addr #0\n+// CHECK: attributes #0 = { {{.*}}nounwind{{.*}} }\n+}\n+"}, {"sha": "15688bdc2a110983b22c141e43c3081971499618", "filename": "src/test/codegen/panic-abort-windows.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2d7397230ad0bf292c701bb73757947237653354/src%2Ftest%2Fcodegen%2Fpanic-abort-windows.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d7397230ad0bf292c701bb73757947237653354/src%2Ftest%2Fcodegen%2Fpanic-abort-windows.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fpanic-abort-windows.rs?ref=2d7397230ad0bf292c701bb73757947237653354", "patch": "@@ -28,7 +28,7 @@\n \n #![crate_type = \"lib\"]\n \n-// CHECK: Function Attrs: uwtable\n+// CHECK: Function Attrs: nounwind uwtable\n // CHECK-NEXT: define void @normal_uwtable()\n #[no_mangle]\n pub fn normal_uwtable() {"}]}