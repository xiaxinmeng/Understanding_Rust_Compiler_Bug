{"sha": "e261665b2c6d6dd636ba369a086bd1bef598c026", "node_id": "C_kwDOAAsO6NoAKGUyNjE2NjViMmM2ZDZkZDYzNmJhMzY5YTA4NmJkMWJlZjU5OGMwMjY", "commit": {"author": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2023-02-10T03:41:47Z"}, "committer": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2023-02-12T22:32:51Z"}, "message": "Avoid interning empty tuples.", "tree": {"sha": "1b7f585e6d36ad246d6f164d6b55cd04c379476f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1b7f585e6d36ad246d6f164d6b55cd04c379476f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e261665b2c6d6dd636ba369a086bd1bef598c026", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e261665b2c6d6dd636ba369a086bd1bef598c026", "html_url": "https://github.com/rust-lang/rust/commit/e261665b2c6d6dd636ba369a086bd1bef598c026", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e261665b2c6d6dd636ba369a086bd1bef598c026/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7a7256015411f3178df466438006fe45530f4109", "url": "https://api.github.com/repos/rust-lang/rust/commits/7a7256015411f3178df466438006fe45530f4109", "html_url": "https://github.com/rust-lang/rust/commit/7a7256015411f3178df466438006fe45530f4109"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "5962384241e957f9106c8dd13011d3eeb731db7c", "filename": "compiler/rustc_middle/src/ty/context.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e261665b2c6d6dd636ba369a086bd1bef598c026/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e261665b2c6d6dd636ba369a086bd1bef598c026/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs?ref=e261665b2c6d6dd636ba369a086bd1bef598c026", "patch": "@@ -1800,11 +1800,11 @@ impl<'tcx> TyCtxt<'tcx> {\n \n     #[inline]\n     pub fn intern_tup(self, ts: &[Ty<'tcx>]) -> Ty<'tcx> {\n-        self.mk_ty(Tuple(self.intern_type_list(&ts)))\n+        if ts.is_empty() { self.types.unit } else { self.mk_ty(Tuple(self.intern_type_list(&ts))) }\n     }\n \n     pub fn mk_tup<I: InternAs<Ty<'tcx>, Ty<'tcx>>>(self, iter: I) -> I::Output {\n-        iter.intern_with(|ts| self.mk_ty(Tuple(self.intern_type_list(&ts))))\n+        iter.intern_with(|ts| self.intern_tup(ts))\n     }\n \n     #[inline]"}]}