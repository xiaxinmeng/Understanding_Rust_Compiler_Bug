{"sha": "f05282f03601ea0d7cd0a9bc5b0ee46de6600de0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYwNTI4MmYwMzYwMWVhMGQ3Y2QwYTliYzViMGVlNDZkZTY2MDBkZTA=", "commit": {"author": {"name": "O01eg", "email": "o01eg@yandex.ru", "date": "2018-01-12T07:04:02Z"}, "committer": {"name": "O01eg", "email": "o01eg@yandex.ru", "date": "2018-01-12T07:04:02Z"}, "message": "Add library path for real rustdoc with `RUSTDOC_LIBDIR` environment variable.", "tree": {"sha": "83c11d0640f32e03c9f7fe45e0051d352bf57312", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/83c11d0640f32e03c9f7fe45e0051d352bf57312"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f05282f03601ea0d7cd0a9bc5b0ee46de6600de0", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niHUEABEIAB0WIQQl7SqOimvGwwcxiyLRqU8kAPvH5QUCWlhd7AAKCRDRqU8kAPvH\n5Z1eAQCs3p1fGP9aNVZO3sT5QMRstrmJMKJWwt8ZzfpQQ6KGxAD+PnQHeW+M4vUh\nRXHR1GXEWyoBLxMIaHhbgpBw6Cmpwcc=\n=uzFA\n-----END PGP SIGNATURE-----", "payload": "tree 83c11d0640f32e03c9f7fe45e0051d352bf57312\nparent c87a1086dcca15bf7d6d6209b9bfa0893649202e\nauthor O01eg <o01eg@yandex.ru> 1515740642 +0300\ncommitter O01eg <o01eg@yandex.ru> 1515740642 +0300\n\nAdd library path for real rustdoc with `RUSTDOC_LIBDIR` environment variable.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f05282f03601ea0d7cd0a9bc5b0ee46de6600de0", "html_url": "https://github.com/rust-lang/rust/commit/f05282f03601ea0d7cd0a9bc5b0ee46de6600de0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f05282f03601ea0d7cd0a9bc5b0ee46de6600de0/comments", "author": {"login": "o01eg", "id": 397177, "node_id": "MDQ6VXNlcjM5NzE3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/397177?v=4", "gravatar_id": "", "url": "https://api.github.com/users/o01eg", "html_url": "https://github.com/o01eg", "followers_url": "https://api.github.com/users/o01eg/followers", "following_url": "https://api.github.com/users/o01eg/following{/other_user}", "gists_url": "https://api.github.com/users/o01eg/gists{/gist_id}", "starred_url": "https://api.github.com/users/o01eg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/o01eg/subscriptions", "organizations_url": "https://api.github.com/users/o01eg/orgs", "repos_url": "https://api.github.com/users/o01eg/repos", "events_url": "https://api.github.com/users/o01eg/events{/privacy}", "received_events_url": "https://api.github.com/users/o01eg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "o01eg", "id": 397177, "node_id": "MDQ6VXNlcjM5NzE3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/397177?v=4", "gravatar_id": "", "url": "https://api.github.com/users/o01eg", "html_url": "https://github.com/o01eg", "followers_url": "https://api.github.com/users/o01eg/followers", "following_url": "https://api.github.com/users/o01eg/following{/other_user}", "gists_url": "https://api.github.com/users/o01eg/gists{/gist_id}", "starred_url": "https://api.github.com/users/o01eg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/o01eg/subscriptions", "organizations_url": "https://api.github.com/users/o01eg/orgs", "repos_url": "https://api.github.com/users/o01eg/repos", "events_url": "https://api.github.com/users/o01eg/events{/privacy}", "received_events_url": "https://api.github.com/users/o01eg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c87a1086dcca15bf7d6d6209b9bfa0893649202e", "url": "https://api.github.com/repos/rust-lang/rust/commits/c87a1086dcca15bf7d6d6209b9bfa0893649202e", "html_url": "https://github.com/rust-lang/rust/commit/c87a1086dcca15bf7d6d6209b9bfa0893649202e"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "389b504c64cdcdb5a4718424cdff3deeddd51ea5", "filename": "src/bootstrap/bin/rustdoc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f05282f03601ea0d7cd0a9bc5b0ee46de6600de0/src%2Fbootstrap%2Fbin%2Frustdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f05282f03601ea0d7cd0a9bc5b0ee46de6600de0/src%2Fbootstrap%2Fbin%2Frustdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbin%2Frustdoc.rs?ref=f05282f03601ea0d7cd0a9bc5b0ee46de6600de0", "patch": "@@ -23,7 +23,7 @@ use std::path::PathBuf;\n fn main() {\n     let args = env::args_os().skip(1).collect::<Vec<_>>();\n     let rustdoc = env::var_os(\"RUSTDOC_REAL\").expect(\"RUSTDOC_REAL was not set\");\n-    let libdir = env::var_os(\"RUSTC_LIBDIR\").expect(\"RUSTC_LIBDIR was not set\");\n+    let libdir = env::var_os(\"RUSTDOC_LIBDIR\").expect(\"RUSTDOC_LIBDIR was not set\");\n     let stage = env::var(\"RUSTC_STAGE\").expect(\"RUSTC_STAGE was not set\");\n     let sysroot = env::var_os(\"RUSTC_SYSROOT\").expect(\"RUSTC_SYSROOT was not set\");\n "}, {"sha": "a8ef84ff1e980afd11942776126095618f7fc608", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f05282f03601ea0d7cd0a9bc5b0ee46de6600de0/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f05282f03601ea0d7cd0a9bc5b0ee46de6600de0/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=f05282f03601ea0d7cd0a9bc5b0ee46de6600de0", "patch": "@@ -416,7 +416,7 @@ impl<'a> Builder<'a> {\n         let compiler = self.compiler(self.top_stage, host);\n         cmd.env(\"RUSTC_STAGE\", compiler.stage.to_string())\n            .env(\"RUSTC_SYSROOT\", self.sysroot(compiler))\n-           .env(\"RUSTC_LIBDIR\", self.sysroot_libdir(compiler, self.build.build))\n+           .env(\"RUSTDOC_LIBDIR\", self.sysroot_libdir(compiler, self.build.build))\n            .env(\"CFG_RELEASE_CHANNEL\", &self.build.config.channel)\n            .env(\"RUSTDOC_REAL\", self.rustdoc(host))\n            .env(\"RUSTDOC_CRATE_VERSION\", self.build.rust_version())\n@@ -496,6 +496,9 @@ impl<'a> Builder<'a> {\n         if let Some(target_linker) = self.build.linker(target) {\n             cargo.env(\"RUSTC_TARGET_LINKER\", target_linker);\n         }\n+        if cmd != \"build\" {\n+            cargo.env(\"RUSTDOC_LIBDIR\", self.rustc_libdir(self.compiler(2, self.build.build)));\n+        }\n \n         if mode != Mode::Tool {\n             // Tools don't get debuginfo right now, e.g. cargo and rls don't"}]}