{"sha": "8d85504410e3e5dec2ea5fffd64b182d7a85750f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhkODU1MDQ0MTBlM2U1ZGVjMmVhNWZmZmQ2NGIxODJkN2E4NTc1MGY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-04-11T05:44:06Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-04-11T05:44:06Z"}, "message": "Auto merge of #41174 - estebank:issue-41155, r=nikomatsakis\n\nPoint at only one char on `Span::next_point`\n\nAvoid pointing at two chars so the diagnostic output doesn't display a\nmultiline span when starting beyond a line end.\n\nFix #41155.\n\nInstead of\n\n```rust\nerror: expected one of `(`, `const`, `default`, `extern`, `fn`, `type`, or `unsafe`, found `}`\n --> <anon>:3:1\n  |\n1 |   impl S {\tpub\n  |  _____________- starting here...\n2 | |\n  | |  ...ending here: expected one of 7 possible tokens here\n3 |   }\n  |   ^ unexpected token\n```\n\nshow\n\n```rust\nerror: expected one of `(`, `const`, `default`, `extern`, `fn`, `type`, or `unsafe`, found `}`\n  --> <anon>:13:1\n   |\n12 |     pub\n   |        - expected one of 7 possible tokens here\n13 | }\n   | ^ unexpected token\n```", "tree": {"sha": "c5d5b24f4d2d9e5674aae6a3ab3a462ebe217153", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c5d5b24f4d2d9e5674aae6a3ab3a462ebe217153"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8d85504410e3e5dec2ea5fffd64b182d7a85750f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8d85504410e3e5dec2ea5fffd64b182d7a85750f", "html_url": "https://github.com/rust-lang/rust/commit/8d85504410e3e5dec2ea5fffd64b182d7a85750f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8d85504410e3e5dec2ea5fffd64b182d7a85750f/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "730e5ad04e23f30cc24e4b87dfd5da807325e243", "url": "https://api.github.com/repos/rust-lang/rust/commits/730e5ad04e23f30cc24e4b87dfd5da807325e243", "html_url": "https://github.com/rust-lang/rust/commit/730e5ad04e23f30cc24e4b87dfd5da807325e243"}, {"sha": "4c80170782c168e5aae848b2911c16921e5a2f58", "url": "https://api.github.com/repos/rust-lang/rust/commits/4c80170782c168e5aae848b2911c16921e5a2f58", "html_url": "https://github.com/rust-lang/rust/commit/4c80170782c168e5aae848b2911c16921e5a2f58"}], "stats": {"total": 31, "additions": 28, "deletions": 3}, "files": [{"sha": "58be43526fd9d7e6da9ddc0572ec177c63ea482c", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8d85504410e3e5dec2ea5fffd64b182d7a85750f/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d85504410e3e5dec2ea5fffd64b182d7a85750f/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=8d85504410e3e5dec2ea5fffd64b182d7a85750f", "patch": "@@ -592,8 +592,10 @@ impl<'a> Parser<'a> {\n             } else {\n                 label_sp\n             };\n-            err.span_label(sp, &label_exp);\n-            if !sp.source_equal(&self.span) {\n+            if self.span.contains(sp) {\n+                err.span_label(self.span, &label_exp);\n+            } else {\n+                err.span_label(sp, &label_exp);\n                 err.span_label(self.span, &\"unexpected token\");\n             }\n             Err(err)"}, {"sha": "aaafcadc38a1468e8177fdc123a7c726f3483515", "filename": "src/libsyntax_pos/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8d85504410e3e5dec2ea5fffd64b182d7a85750f/src%2Flibsyntax_pos%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d85504410e3e5dec2ea5fffd64b182d7a85750f/src%2Flibsyntax_pos%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_pos%2Flib.rs?ref=8d85504410e3e5dec2ea5fffd64b182d7a85750f", "patch": "@@ -89,7 +89,7 @@ impl Span {\n     /// Returns a new span representing the next character after the end-point of this span\n     pub fn next_point(self) -> Span {\n         let lo = cmp::max(self.hi.0, self.lo.0 + 1);\n-        Span { lo: BytePos(lo), hi: BytePos(lo + 1), ..self }\n+        Span { lo: BytePos(lo), hi: BytePos(lo), ..self }\n     }\n \n     /// Returns `self` if `self` is not the dummy span, and `other` otherwise."}, {"sha": "0f473c9e0738818718432b9b65aa29203654b4ef", "filename": "src/test/ui/token/issue-41155.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/8d85504410e3e5dec2ea5fffd64b182d7a85750f/src%2Ftest%2Fui%2Ftoken%2Fissue-41155.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d85504410e3e5dec2ea5fffd64b182d7a85750f/src%2Ftest%2Fui%2Ftoken%2Fissue-41155.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftoken%2Fissue-41155.rs?ref=8d85504410e3e5dec2ea5fffd64b182d7a85750f", "patch": "@@ -0,0 +1,13 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+impl S {\n+    pub\n+}"}, {"sha": "0da3abd4eaf9c78b2cd70630c6cf5e892da385c2", "filename": "src/test/ui/token/issue-41155.stderr", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/8d85504410e3e5dec2ea5fffd64b182d7a85750f/src%2Ftest%2Fui%2Ftoken%2Fissue-41155.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8d85504410e3e5dec2ea5fffd64b182d7a85750f/src%2Ftest%2Fui%2Ftoken%2Fissue-41155.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftoken%2Fissue-41155.stderr?ref=8d85504410e3e5dec2ea5fffd64b182d7a85750f", "patch": "@@ -0,0 +1,10 @@\n+error: expected one of `(`, `const`, `default`, `extern`, `fn`, `type`, or `unsafe`, found `}`\n+  --> $DIR/issue-41155.rs:13:1\n+   |\n+12 |     pub\n+   |        - expected one of 7 possible tokens here\n+13 | }\n+   | ^ unexpected token\n+\n+error: aborting due to previous error\n+"}]}