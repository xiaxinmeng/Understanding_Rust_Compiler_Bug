{"sha": "e1b313af46b74a446d7772a261e006c199a5b2e0", "node_id": "C_kwDOAAsO6NoAKGUxYjMxM2FmNDZiNzRhNDQ2ZDc3NzJhMjYxZTAwNmMxOTlhNWIyZTA", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-10-04T03:22:45Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-10-04T03:29:19Z"}, "message": "We are able to resolve methods even if they need subst", "tree": {"sha": "8bf3c92a89d1334267102792313535e7a0037564", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8bf3c92a89d1334267102792313535e7a0037564"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e1b313af46b74a446d7772a261e006c199a5b2e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e1b313af46b74a446d7772a261e006c199a5b2e0", "html_url": "https://github.com/rust-lang/rust/commit/e1b313af46b74a446d7772a261e006c199a5b2e0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e1b313af46b74a446d7772a261e006c199a5b2e0/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8c600120e6abd8c25a88443451d190c68142180f", "url": "https://api.github.com/repos/rust-lang/rust/commits/8c600120e6abd8c25a88443451d190c68142180f", "html_url": "https://github.com/rust-lang/rust/commit/8c600120e6abd8c25a88443451d190c68142180f"}], "stats": {"total": 19, "additions": 11, "deletions": 8}, "files": [{"sha": "9a62afd3cafb78488d19001cbd56aa82ccf700af", "filename": "compiler/rustc_lint/src/noop_method_call.rs", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e1b313af46b74a446d7772a261e006c199a5b2e0/compiler%2Frustc_lint%2Fsrc%2Fnoop_method_call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1b313af46b74a446d7772a261e006c199a5b2e0/compiler%2Frustc_lint%2Fsrc%2Fnoop_method_call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fnoop_method_call.rs?ref=e1b313af46b74a446d7772a261e006c199a5b2e0", "patch": "@@ -1,5 +1,4 @@\n use crate::context::LintContext;\n-use crate::rustc_middle::ty::TypeVisitable;\n use crate::LateContext;\n use crate::LateLintPass;\n use rustc_errors::fluent;\n@@ -65,11 +64,6 @@ impl<'tcx> LateLintPass<'tcx> for NoopMethodCall {\n         let substs = cx\n             .tcx\n             .normalize_erasing_regions(cx.param_env, cx.typeck_results().node_substs(expr.hir_id));\n-        if substs.needs_subst() {\n-            // We can't resolve on types that require monomorphization, so we don't handle them if\n-            // we need to perform substitution.\n-            return;\n-        }\n         // Resolve the trait method instance.\n         let Ok(Some(i)) = ty::Instance::resolve(cx.tcx, cx.param_env, did, substs) else {\n             return"}, {"sha": "89b296635954204a1cbcec15cf5c01093caaee5c", "filename": "src/test/ui/lint/noop-method-call.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e1b313af46b74a446d7772a261e006c199a5b2e0/src%2Ftest%2Fui%2Flint%2Fnoop-method-call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1b313af46b74a446d7772a261e006c199a5b2e0/src%2Ftest%2Fui%2Flint%2Fnoop-method-call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fnoop-method-call.rs?ref=e1b313af46b74a446d7772a261e006c199a5b2e0", "patch": "@@ -46,6 +46,7 @@ fn main() {\n \n fn generic<T>(non_clone_type: &PlainType<T>) {\n     non_clone_type.clone();\n+    //~^ WARNING call to `.clone()` on a reference in this situation does nothing\n }\n \n fn non_generic(non_clone_type: &PlainType<u32>) {"}, {"sha": "6a904d01abc8e92fc8683abfff27662ad574a7c8", "filename": "src/test/ui/lint/noop-method-call.stderr", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e1b313af46b74a446d7772a261e006c199a5b2e0/src%2Ftest%2Fui%2Flint%2Fnoop-method-call.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e1b313af46b74a446d7772a261e006c199a5b2e0/src%2Ftest%2Fui%2Flint%2Fnoop-method-call.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fnoop-method-call.stderr?ref=e1b313af46b74a446d7772a261e006c199a5b2e0", "patch": "@@ -28,12 +28,20 @@ LL |     let non_borrow_type_borrow: &PlainType<u32> = non_borrow_type.borrow();\n    = note: the type `&PlainType<u32>` which `borrow` is being called on is the same as the type returned from `borrow`, so the method call does not do anything and can be removed\n \n warning: call to `.clone()` on a reference in this situation does nothing\n-  --> $DIR/noop-method-call.rs:52:19\n+  --> $DIR/noop-method-call.rs:48:19\n+   |\n+LL |     non_clone_type.clone();\n+   |                   ^^^^^^^^ unnecessary method call\n+   |\n+   = note: the type `&PlainType<T>` which `clone` is being called on is the same as the type returned from `clone`, so the method call does not do anything and can be removed\n+\n+warning: call to `.clone()` on a reference in this situation does nothing\n+  --> $DIR/noop-method-call.rs:53:19\n    |\n LL |     non_clone_type.clone();\n    |                   ^^^^^^^^ unnecessary method call\n    |\n    = note: the type `&PlainType<u32>` which `clone` is being called on is the same as the type returned from `clone`, so the method call does not do anything and can be removed\n \n-warning: 4 warnings emitted\n+warning: 5 warnings emitted\n "}]}