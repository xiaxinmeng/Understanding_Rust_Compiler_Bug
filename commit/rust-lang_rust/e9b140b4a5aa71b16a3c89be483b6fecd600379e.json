{"sha": "e9b140b4a5aa71b16a3c89be483b6fecd600379e", "node_id": "C_kwDOAAsO6NoAKGU5YjE0MGI0YTVhYTcxYjE2YTNjODliZTQ4M2I2ZmVjZDYwMDM3OWU", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-02-25T00:41:11Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-02-25T17:06:10Z"}, "message": "update fn ptr tests", "tree": {"sha": "7216af7e60bce35a951134c46017e3c2b184a9b0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7216af7e60bce35a951134c46017e3c2b184a9b0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e9b140b4a5aa71b16a3c89be483b6fecd600379e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e9b140b4a5aa71b16a3c89be483b6fecd600379e", "html_url": "https://github.com/rust-lang/rust/commit/e9b140b4a5aa71b16a3c89be483b6fecd600379e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e9b140b4a5aa71b16a3c89be483b6fecd600379e/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ddd3e3c4e016677613fe04d5ef3995f362f4a93d", "url": "https://api.github.com/repos/rust-lang/rust/commits/ddd3e3c4e016677613fe04d5ef3995f362f4a93d", "html_url": "https://github.com/rust-lang/rust/commit/ddd3e3c4e016677613fe04d5ef3995f362f4a93d"}], "stats": {"total": 17, "additions": 4, "deletions": 13}, "files": [{"sha": "27d8c830ce9046f9aac04ce81bca33dd8664e1c6", "filename": "tests/compile-fail/validity/fn_ptr_offset.rs", "status": "removed", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ddd3e3c4e016677613fe04d5ef3995f362f4a93d/tests%2Fcompile-fail%2Fvalidity%2Ffn_ptr_offset.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ddd3e3c4e016677613fe04d5ef3995f362f4a93d/tests%2Fcompile-fail%2Fvalidity%2Ffn_ptr_offset.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fvalidity%2Ffn_ptr_offset.rs?ref=ddd3e3c4e016677613fe04d5ef3995f362f4a93d", "patch": "@@ -1,10 +0,0 @@\n-use std::mem;\n-\n-fn f() {}\n-\n-fn main() {\n-    let x : fn() = f;\n-    let y : *mut u8 = unsafe { mem::transmute(x) };\n-    let y = y.wrapping_offset(1);\n-    let _x : fn() = unsafe { mem::transmute(y) }; //~ ERROR encountered a potentially null function pointer\n-}"}, {"sha": "0634fba36a3304396329ce1d81e848baabc2c81e", "filename": "tests/compile-fail/validity/invalid_fnptr_null.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9b140b4a5aa71b16a3c89be483b6fecd600379e/tests%2Fcompile-fail%2Fvalidity%2Finvalid_fnptr_null.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9b140b4a5aa71b16a3c89be483b6fecd600379e/tests%2Fcompile-fail%2Fvalidity%2Finvalid_fnptr_null.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fvalidity%2Finvalid_fnptr_null.rs?ref=e9b140b4a5aa71b16a3c89be483b6fecd600379e", "patch": "@@ -1,5 +1,5 @@\n #![allow(invalid_value)]\n \n fn main() {\n-    let _b: fn() = unsafe { std::mem::transmute(0usize) }; //~ ERROR encountered a potentially null function pointer\n+    let _b: fn() = unsafe { std::mem::transmute(0usize) }; //~ ERROR encountered a null function pointer\n }"}, {"sha": "e7d9b2ddd98ca133a583c309dc65c1b67f160eaa", "filename": "tests/run-pass/function_pointers.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e9b140b4a5aa71b16a3c89be483b6fecd600379e/tests%2Frun-pass%2Ffunction_pointers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9b140b4a5aa71b16a3c89be483b6fecd600379e/tests%2Frun-pass%2Ffunction_pointers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Ffunction_pointers.rs?ref=e9b140b4a5aa71b16a3c89be483b6fecd600379e", "patch": "@@ -62,9 +62,10 @@ fn main() {\n     // Any non-null value is okay for function pointers.\n     unsafe {\n         let _x: fn() = mem::transmute(1usize);\n-        let mut b = Box::new(42);\n-        let ptr = &mut *b as *mut _;\n+        let mut b = Box::new(42u8);\n+        let ptr = &mut *b as *mut u8;\n         drop(b);\n         let _x: fn() = mem::transmute(ptr);\n+        let _x: fn() = mem::transmute(ptr.wrapping_offset(1));\n     }\n }"}]}