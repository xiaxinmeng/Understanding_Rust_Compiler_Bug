{"sha": "44a927ad626620f0cde3216a256423b7a41d54c9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ0YTkyN2FkNjI2NjIwZjBjZGUzMjE2YTI1NjQyM2I3YTQxZDU0Yzk=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-07-24T14:08:01Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-08-02T20:33:36Z"}, "message": "cast: no need to catch errors any more, force_bits should succeed", "tree": {"sha": "efdd2c262389e04b3e697cf3b4be71138c360bfa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/efdd2c262389e04b3e697cf3b4be71138c360bfa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/44a927ad626620f0cde3216a256423b7a41d54c9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/44a927ad626620f0cde3216a256423b7a41d54c9", "html_url": "https://github.com/rust-lang/rust/commit/44a927ad626620f0cde3216a256423b7a41d54c9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/44a927ad626620f0cde3216a256423b7a41d54c9/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cf048cc115860cc110865f460f3f2b9b4308ad92", "url": "https://api.github.com/repos/rust-lang/rust/commits/cf048cc115860cc110865f460f3f2b9b4308ad92", "html_url": "https://github.com/rust-lang/rust/commit/cf048cc115860cc110865f460f3f2b9b4308ad92"}], "stats": {"total": 8, "additions": 2, "deletions": 6}, "files": [{"sha": "e1842e72e3c82f585d5ca50732e66e312f515b7b", "filename": "src/librustc_mir/interpret/cast.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/44a927ad626620f0cde3216a256423b7a41d54c9/src%2Flibrustc_mir%2Finterpret%2Fcast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44a927ad626620f0cde3216a256423b7a41d54c9/src%2Flibrustc_mir%2Finterpret%2Fcast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fcast.rs?ref=44a927ad626620f0cde3216a256423b7a41d54c9", "patch": "@@ -250,12 +250,8 @@ impl<'mir, 'tcx, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n             RawPtr(_) => Ok(ptr.into()),\n             Int(_) | Uint(_) => {\n                 let size = self.memory.pointer_size();\n-\n-                match self.force_bits(Scalar::Ptr(ptr), size) {\n-                    Ok(bits) => self.cast_from_int(bits, src_layout, dest_layout),\n-                    Err(_) if dest_layout.size == size => Ok(ptr.into()),\n-                    Err(e) => Err(e),\n-                }\n+                let bits = self.force_bits(Scalar::Ptr(ptr), size)?;\n+                self.cast_from_int(bits, src_layout, dest_layout)\n             }\n             _ => bug!(\"invalid MIR: ptr to {:?} cast\", dest_layout.ty)\n         }"}]}