{"sha": "9d52940dbeb2a099675f2d66c2a8cc173ea00059", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlkNTI5NDBkYmViMmEwOTk2NzVmMmQ2NmMyYThjYzE3M2VhMDAwNTk=", "commit": {"author": {"name": "Igor Matuszewski", "email": "Xanewok@gmail.com", "date": "2018-08-14T21:23:00Z"}, "committer": {"name": "Igor Matuszewski", "email": "Xanewok@gmail.com", "date": "2018-08-14T21:23:00Z"}, "message": "Run `cargo fmt`", "tree": {"sha": "7f3595a2cfd8a3d052fc76b506c8a334001a91ca", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7f3595a2cfd8a3d052fc76b506c8a334001a91ca"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9d52940dbeb2a099675f2d66c2a8cc173ea00059", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9d52940dbeb2a099675f2d66c2a8cc173ea00059", "html_url": "https://github.com/rust-lang/rust/commit/9d52940dbeb2a099675f2d66c2a8cc173ea00059", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9d52940dbeb2a099675f2d66c2a8cc173ea00059/comments", "author": {"login": "Xanewok", "id": 3093213, "node_id": "MDQ6VXNlcjMwOTMyMTM=", "avatar_url": "https://avatars.githubusercontent.com/u/3093213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Xanewok", "html_url": "https://github.com/Xanewok", "followers_url": "https://api.github.com/users/Xanewok/followers", "following_url": "https://api.github.com/users/Xanewok/following{/other_user}", "gists_url": "https://api.github.com/users/Xanewok/gists{/gist_id}", "starred_url": "https://api.github.com/users/Xanewok/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Xanewok/subscriptions", "organizations_url": "https://api.github.com/users/Xanewok/orgs", "repos_url": "https://api.github.com/users/Xanewok/repos", "events_url": "https://api.github.com/users/Xanewok/events{/privacy}", "received_events_url": "https://api.github.com/users/Xanewok/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Xanewok", "id": 3093213, "node_id": "MDQ6VXNlcjMwOTMyMTM=", "avatar_url": "https://avatars.githubusercontent.com/u/3093213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Xanewok", "html_url": "https://github.com/Xanewok", "followers_url": "https://api.github.com/users/Xanewok/followers", "following_url": "https://api.github.com/users/Xanewok/following{/other_user}", "gists_url": "https://api.github.com/users/Xanewok/gists{/gist_id}", "starred_url": "https://api.github.com/users/Xanewok/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Xanewok/subscriptions", "organizations_url": "https://api.github.com/users/Xanewok/orgs", "repos_url": "https://api.github.com/users/Xanewok/repos", "events_url": "https://api.github.com/users/Xanewok/events{/privacy}", "received_events_url": "https://api.github.com/users/Xanewok/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "38361c05bc48f0634501a8ad5bfb973388a777a2", "url": "https://api.github.com/repos/rust-lang/rust/commits/38361c05bc48f0634501a8ad5bfb973388a777a2", "html_url": "https://github.com/rust-lang/rust/commit/38361c05bc48f0634501a8ad5bfb973388a777a2"}], "stats": {"total": 43, "additions": 26, "deletions": 17}, "files": [{"sha": "58f65b3c1b6ea07c6a22b1a8f155381e4154dcd5", "filename": "src/config/file_lines.rs", "status": "modified", "additions": 26, "deletions": 17, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/9d52940dbeb2a099675f2d66c2a8cc173ea00059/src%2Fconfig%2Ffile_lines.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d52940dbeb2a099675f2d66c2a8cc173ea00059/src%2Fconfig%2Ffile_lines.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconfig%2Ffile_lines.rs?ref=9d52940dbeb2a099675f2d66c2a8cc173ea00059", "patch": "@@ -15,8 +15,8 @@ use std::path::PathBuf;\n use std::rc::Rc;\n use std::{cmp, fmt, iter, str};\n \n-use serde::ser::{self, Serialize, Serializer};\n use serde::de::{Deserialize, Deserializer};\n+use serde::ser::{self, Serialize, Serializer};\n use serde_json as json;\n \n use syntax::codemap::{self, FileMap};\n@@ -75,8 +75,9 @@ impl Serialize for FileName {\n     {\n         let s = match self {\n             FileName::Stdin => Ok(\"stdin\"),\n-            FileName::Real(path) => path.to_str().ok_or_else(||\n-                ser::Error::custom(\"path can't be serialized as UTF-8 string\"))\n+            FileName::Real(path) => path\n+                .to_str()\n+                .ok_or_else(|| ser::Error::custom(\"path can't be serialized as UTF-8 string\")),\n         };\n \n         s.and_then(|s| serializer.serialize_str(s))\n@@ -385,29 +386,37 @@ mod test {\n         );\n     }\n \n-    use std::{collections::HashMap, path::PathBuf};\n-    use super::{FileName, FileLines};\n     use super::json::{self, json, json_internal};\n+    use super::{FileLines, FileName};\n+    use std::{collections::HashMap, path::PathBuf};\n \n     #[test]\n     fn file_lines_to_json() {\n         let ranges: HashMap<FileName, Vec<Range>> = [\n-            (FileName::Real(PathBuf::from(\"src/main.rs\")), vec![\n-                Range::new(1, 3),\n-                Range::new(5, 7)\n-            ]),\n-            (FileName::Real(PathBuf::from(\"src/lib.rs\")), vec![\n-                Range::new(1, 7)\n-        ])].iter().cloned().collect();\n+            (\n+                FileName::Real(PathBuf::from(\"src/main.rs\")),\n+                vec![Range::new(1, 3), Range::new(5, 7)],\n+            ),\n+            (\n+                FileName::Real(PathBuf::from(\"src/lib.rs\")),\n+                vec![Range::new(1, 7)],\n+            ),\n+        ]\n+            .iter()\n+            .cloned()\n+            .collect();\n \n         let file_lines = FileLines::from_ranges(ranges);\n         let mut spans = file_lines.to_json_spans();\n         spans.sort();\n         let json = json::to_value(&spans).unwrap();\n-        assert_eq!(json, json! {[\n-            {\"file\": \"src/lib.rs\",  \"range\": [1, 7]},\n-            {\"file\": \"src/main.rs\", \"range\": [1, 3]},\n-            {\"file\": \"src/main.rs\", \"range\": [5, 7]},\n-        ]});\n+        assert_eq!(\n+            json,\n+            json! {[\n+                {\"file\": \"src/lib.rs\",  \"range\": [1, 7]},\n+                {\"file\": \"src/main.rs\", \"range\": [1, 3]},\n+                {\"file\": \"src/main.rs\", \"range\": [5, 7]},\n+            ]}\n+        );\n     }\n }"}]}