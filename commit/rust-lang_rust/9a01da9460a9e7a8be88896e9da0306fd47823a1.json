{"sha": "9a01da9460a9e7a8be88896e9da0306fd47823a1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlhMDFkYTk0NjBhOWU3YThiZTg4ODk2ZTlkYTAzMDZmZDQ3ODIzYTE=", "commit": {"author": {"name": "Florian Hahn", "email": "flo@fhahn.com", "date": "2014-09-21T21:11:33Z"}, "committer": {"name": "Florian Hahn", "email": "flo@fhahn.com", "date": "2014-09-24T21:44:00Z"}, "message": "Rename `begin_unwind` lang item to `fail_fmt`, refs #16114", "tree": {"sha": "57c5a8770ffd7062eeff8e02f98e6f2c21f449f7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/57c5a8770ffd7062eeff8e02f98e6f2c21f449f7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9a01da9460a9e7a8be88896e9da0306fd47823a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9a01da9460a9e7a8be88896e9da0306fd47823a1", "html_url": "https://github.com/rust-lang/rust/commit/9a01da9460a9e7a8be88896e9da0306fd47823a1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9a01da9460a9e7a8be88896e9da0306fd47823a1/comments", "author": {"login": "fhahn", "id": 450489, "node_id": "MDQ6VXNlcjQ1MDQ4OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/450489?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fhahn", "html_url": "https://github.com/fhahn", "followers_url": "https://api.github.com/users/fhahn/followers", "following_url": "https://api.github.com/users/fhahn/following{/other_user}", "gists_url": "https://api.github.com/users/fhahn/gists{/gist_id}", "starred_url": "https://api.github.com/users/fhahn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fhahn/subscriptions", "organizations_url": "https://api.github.com/users/fhahn/orgs", "repos_url": "https://api.github.com/users/fhahn/repos", "events_url": "https://api.github.com/users/fhahn/events{/privacy}", "received_events_url": "https://api.github.com/users/fhahn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fhahn", "id": 450489, "node_id": "MDQ6VXNlcjQ1MDQ4OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/450489?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fhahn", "html_url": "https://github.com/fhahn", "followers_url": "https://api.github.com/users/fhahn/followers", "following_url": "https://api.github.com/users/fhahn/following{/other_user}", "gists_url": "https://api.github.com/users/fhahn/gists{/gist_id}", "starred_url": "https://api.github.com/users/fhahn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fhahn/subscriptions", "organizations_url": "https://api.github.com/users/fhahn/orgs", "repos_url": "https://api.github.com/users/fhahn/repos", "events_url": "https://api.github.com/users/fhahn/events{/privacy}", "received_events_url": "https://api.github.com/users/fhahn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e0bd16c5ec7ff4c5445fa3991bd679b4d7d4e966", "url": "https://api.github.com/repos/rust-lang/rust/commits/e0bd16c5ec7ff4c5445fa3991bd679b4d7d4e966", "html_url": "https://github.com/rust-lang/rust/commit/e0bd16c5ec7ff4c5445fa3991bd679b4d7d4e966"}], "stats": {"total": 33, "additions": 26, "deletions": 7}, "files": [{"sha": "e152f16b7a2beb5bf124933dfa585c962fbb3bea", "filename": "src/doc/guide-unsafe.md", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9a01da9460a9e7a8be88896e9da0306fd47823a1/src%2Fdoc%2Fguide-unsafe.md", "raw_url": "https://github.com/rust-lang/rust/raw/9a01da9460a9e7a8be88896e9da0306fd47823a1/src%2Fdoc%2Fguide-unsafe.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fguide-unsafe.md?ref=9a01da9460a9e7a8be88896e9da0306fd47823a1", "patch": "@@ -573,8 +573,8 @@ pub extern fn dot_product(a: *const u32, a_len: u32,\n     return ret;\n }\n \n-#[lang = \"begin_unwind\"]\n-extern fn begin_unwind(args: &core::fmt::Arguments,\n+#[lang = \"fail_fmt\"]\n+extern fn fail_fmt(args: &core::fmt::Arguments,\n                        file: &str,\n                        line: uint) -> ! {\n     loop {}\n@@ -587,8 +587,8 @@ extern fn begin_unwind(args: &core::fmt::Arguments,\n ```\n \n Note that there is one extra lang item here which differs from the examples\n-above, `begin_unwind`. This must be defined by consumers of libcore because the\n-core library declares failure, but it does not define it. The `begin_unwind`\n+above, `fail_fmt`. This must be defined by consumers of libcore because the\n+core library declares failure, but it does not define it. The `fail_fmt`\n lang item is this crate's definition of failure, and it must be guaranteed to\n never return.\n "}, {"sha": "b8586f00675876518532fc9cf58d5fe49cc0df25", "filename": "src/libcore/failure.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9a01da9460a9e7a8be88896e9da0306fd47823a1/src%2Flibcore%2Ffailure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a01da9460a9e7a8be88896e9da0306fd47823a1/src%2Flibcore%2Ffailure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ffailure.rs?ref=9a01da9460a9e7a8be88896e9da0306fd47823a1", "patch": "@@ -64,9 +64,17 @@ pub fn begin_unwind_string(msg: &str, file: &(&'static str, uint)) -> ! {\n pub fn begin_unwind(fmt: &fmt::Arguments, file_line: &(&'static str, uint)) -> ! {\n     #[allow(ctypes)]\n     extern {\n+\n+        #[cfg(stage0)]\n         #[lang = \"begin_unwind\"]\n         fn begin_unwind(fmt: &fmt::Arguments, file: &'static str,\n                         line: uint) -> !;\n+\n+        #[cfg(not(stage0))]\n+        #[lang = \"fail_fmt\"]\n+        fn begin_unwind(fmt: &fmt::Arguments, file: &'static str,\n+                        line: uint) -> !;\n+\n     }\n     let (file, line) = *file_line;\n     unsafe { begin_unwind(fmt, file, line) }"}, {"sha": "61f7f1907299a9d12af364d858d133bda655a826", "filename": "src/librustc/middle/lang_items.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9a01da9460a9e7a8be88896e9da0306fd47823a1/src%2Flibrustc%2Fmiddle%2Flang_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a01da9460a9e7a8be88896e9da0306fd47823a1/src%2Flibrustc%2Fmiddle%2Flang_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Flang_items.rs?ref=9a01da9460a9e7a8be88896e9da0306fd47823a1", "patch": "@@ -275,7 +275,7 @@ lets_do_this! {\n     // lang item, but do not have it defined.\n     FailFnLangItem,                  \"fail_\",                   fail_fn;\n     FailBoundsCheckFnLangItem,       \"fail_bounds_check\",       fail_bounds_check_fn;\n-    BeginUnwindLangItem,             \"begin_unwind\",            begin_unwind;\n+    FailFmtLangItem,                 \"fail_fmt\",                fail_fmt;\n \n     ExchangeMallocFnLangItem,        \"exchange_malloc\",         exchange_malloc_fn;\n     ExchangeFreeFnLangItem,          \"exchange_free\",           exchange_free_fn;"}, {"sha": "79faf3aa147ed1b6a466bbdb5d85a0177be59937", "filename": "src/librustc/middle/weak_lang_items.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9a01da9460a9e7a8be88896e9da0306fd47823a1/src%2Flibrustc%2Fmiddle%2Fweak_lang_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a01da9460a9e7a8be88896e9da0306fd47823a1/src%2Flibrustc%2Fmiddle%2Fweak_lang_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fweak_lang_items.rs?ref=9a01da9460a9e7a8be88896e9da0306fd47823a1", "patch": "@@ -118,7 +118,7 @@ impl<'a, 'v> Visitor<'v> for Context<'a> {\n ) )\n \n weak_lang_items!(\n-    begin_unwind,       BeginUnwindLangItem,        rust_begin_unwind;\n+    fail_fmt,           FailFmtLangItem,            rust_begin_unwind;\n     stack_exhausted,    StackExhaustedLangItem,     rust_stack_exhausted;\n     eh_personality,     EhPersonalityLangItem,      rust_eh_personality;\n )"}, {"sha": "01120980dde63d0808dc7b90788774af8a0ec964", "filename": "src/librustrt/unwind.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/9a01da9460a9e7a8be88896e9da0306fd47823a1/src%2Flibrustrt%2Funwind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a01da9460a9e7a8be88896e9da0306fd47823a1/src%2Flibrustrt%2Funwind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustrt%2Funwind.rs?ref=9a01da9460a9e7a8be88896e9da0306fd47823a1", "patch": "@@ -489,12 +489,23 @@ pub mod eabi {\n \n // Entry point of failure from the libcore crate\n #[cfg(not(test))]\n+#[cfg(not(stage0))]\n+#[lang = \"fail_fmt\"]\n+pub extern fn rust_begin_unwind1(msg: &fmt::Arguments,\n+                                file: &'static str, line: uint) -> ! {\n+    begin_unwind_fmt(msg, &(file, line))\n+}\n+//\n+// Entry point of failure from the libcore crate\n+#[cfg(not(test))]\n+#[cfg(stage0)]\n #[lang = \"begin_unwind\"]\n pub extern fn rust_begin_unwind(msg: &fmt::Arguments,\n                                 file: &'static str, line: uint) -> ! {\n     begin_unwind_fmt(msg, &(file, line))\n }\n \n+\n /// The entry point for unwinding with a formatted message.\n ///\n /// This is designed to reduce the amount of code required at the call"}, {"sha": "74ec56f7bd90a5193b0f6cb970dd24fe2cdc5d42", "filename": "src/test/compile-fail/weak-lang-item.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9a01da9460a9e7a8be88896e9da0306fd47823a1/src%2Ftest%2Fcompile-fail%2Fweak-lang-item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a01da9460a9e7a8be88896e9da0306fd47823a1/src%2Ftest%2Fcompile-fail%2Fweak-lang-item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fweak-lang-item.rs?ref=9a01da9460a9e7a8be88896e9da0306fd47823a1", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n // aux-build:weak-lang-items.rs\n-// error-pattern: language item required, but not found: `begin_unwind`\n+// error-pattern: language item required, but not found: `fail_fmt`\n // error-pattern: language item required, but not found: `stack_exhausted`\n // error-pattern: language item required, but not found: `eh_personality`\n "}]}