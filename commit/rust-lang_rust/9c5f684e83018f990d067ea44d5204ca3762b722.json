{"sha": "9c5f684e83018f990d067ea44d5204ca3762b722", "node_id": "MDY6Q29tbWl0NzI0NzEyOjljNWY2ODRlODMwMThmOTkwZDA2N2VhNDRkNTIwNGNhMzc2MmI3MjI=", "commit": {"author": {"name": "\u00d6mer Sinan A\u011facan", "email": "omeragacan@gmail.com", "date": "2021-02-24T07:36:43Z"}, "committer": {"name": "\u00d6mer Sinan A\u011facan", "email": "omeragacan@gmail.com", "date": "2021-02-24T07:37:53Z"}, "message": "Turn Pick field comments into documentation", "tree": {"sha": "ae6a33c99da228136221c28853fcb50984590c1d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ae6a33c99da228136221c28853fcb50984590c1d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9c5f684e83018f990d067ea44d5204ca3762b722", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9c5f684e83018f990d067ea44d5204ca3762b722", "html_url": "https://github.com/rust-lang/rust/commit/9c5f684e83018f990d067ea44d5204ca3762b722", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9c5f684e83018f990d067ea44d5204ca3762b722/comments", "author": {"login": "osa1", "id": 448274, "node_id": "MDQ6VXNlcjQ0ODI3NA==", "avatar_url": "https://avatars.githubusercontent.com/u/448274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/osa1", "html_url": "https://github.com/osa1", "followers_url": "https://api.github.com/users/osa1/followers", "following_url": "https://api.github.com/users/osa1/following{/other_user}", "gists_url": "https://api.github.com/users/osa1/gists{/gist_id}", "starred_url": "https://api.github.com/users/osa1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/osa1/subscriptions", "organizations_url": "https://api.github.com/users/osa1/orgs", "repos_url": "https://api.github.com/users/osa1/repos", "events_url": "https://api.github.com/users/osa1/events{/privacy}", "received_events_url": "https://api.github.com/users/osa1/received_events", "type": "User", "site_admin": false}, "committer": {"login": "osa1", "id": 448274, "node_id": "MDQ6VXNlcjQ0ODI3NA==", "avatar_url": "https://avatars.githubusercontent.com/u/448274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/osa1", "html_url": "https://github.com/osa1", "followers_url": "https://api.github.com/users/osa1/followers", "following_url": "https://api.github.com/users/osa1/following{/other_user}", "gists_url": "https://api.github.com/users/osa1/gists{/gist_id}", "starred_url": "https://api.github.com/users/osa1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/osa1/subscriptions", "organizations_url": "https://api.github.com/users/osa1/orgs", "repos_url": "https://api.github.com/users/osa1/repos", "events_url": "https://api.github.com/users/osa1/events{/privacy}", "received_events_url": "https://api.github.com/users/osa1/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5ac6935974d72e28c0b9c49af45f771de1b4d4a0", "url": "https://api.github.com/repos/rust-lang/rust/commits/5ac6935974d72e28c0b9c49af45f771de1b4d4a0", "html_url": "https://github.com/rust-lang/rust/commit/5ac6935974d72e28c0b9c49af45f771de1b4d4a0"}], "stats": {"total": 22, "additions": 11, "deletions": 11}, "files": [{"sha": "52cdbde0e9816c2013ff778962e4f33fd1ccee20", "filename": "compiler/rustc_typeck/src/check/method/probe.rs", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/9c5f684e83018f990d067ea44d5204ca3762b722/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fprobe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c5f684e83018f990d067ea44d5204ca3762b722/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fprobe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fprobe.rs?ref=9c5f684e83018f990d067ea44d5204ca3762b722", "patch": "@@ -159,21 +159,21 @@ pub struct Pick<'tcx> {\n     pub kind: PickKind<'tcx>,\n     pub import_ids: SmallVec<[LocalDefId; 1]>,\n \n-    // Indicates that the source expression should be autoderef'd N times\n-    //\n-    // A = expr | *expr | **expr | ...\n+    /// Indicates that the source expression should be autoderef'd N times\n+    ///\n+    ///     A = expr | *expr | **expr | ...\n     pub autoderefs: usize,\n \n-    // Indicates that an autoref is applied after the optional autoderefs\n-    //\n-    // B = A | &A | &mut A\n+    /// Indicates that an autoref is applied after the optional autoderefs\n+    ///\n+    ///     B = A | &A | &mut A\n     pub autoref: Option<hir::Mutability>,\n \n-    // Indicates that the source expression should be \"unsized\" to a\n-    // target type. This should probably eventually go away in favor\n-    // of just coercing method receivers.\n-    //\n-    // C = B | unsize(B)\n+    /// Indicates that the source expression should be \"unsized\" to a\n+    /// target type. This should probably eventually go away in favor\n+    /// of just coercing method receivers.\n+    ///\n+    ///     C = B | unsize(B)\n     pub unsize: Option<Ty<'tcx>>,\n }\n "}]}