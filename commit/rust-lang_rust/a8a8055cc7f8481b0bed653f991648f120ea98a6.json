{"sha": "a8a8055cc7f8481b0bed653f991648f120ea98a6", "node_id": "C_kwDOAAsO6NoAKGE4YTgwNTVjYzdmODQ4MWIwYmVkNjUzZjk5MTY0OGYxMjBlYTk4YTY", "commit": {"author": {"name": "SLASHLogin", "email": "loginmlgxd@gmail.com", "date": "2022-11-04T19:08:01Z"}, "committer": {"name": "SLASHLogin", "email": "loginmlgxd@gmail.com", "date": "2022-11-09T13:56:21Z"}, "message": "Use `LayoutError`'s implementation of `IntoDiagnostic`", "tree": {"sha": "a0ca8c62c247e6a52bf80d90c474e1d16bc9a673", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a0ca8c62c247e6a52bf80d90c474e1d16bc9a673"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a8a8055cc7f8481b0bed653f991648f120ea98a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a8a8055cc7f8481b0bed653f991648f120ea98a6", "html_url": "https://github.com/rust-lang/rust/commit/a8a8055cc7f8481b0bed653f991648f120ea98a6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a8a8055cc7f8481b0bed653f991648f120ea98a6/comments", "author": {"login": "SLASHLogin", "id": 24846525, "node_id": "MDQ6VXNlcjI0ODQ2NTI1", "avatar_url": "https://avatars.githubusercontent.com/u/24846525?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SLASHLogin", "html_url": "https://github.com/SLASHLogin", "followers_url": "https://api.github.com/users/SLASHLogin/followers", "following_url": "https://api.github.com/users/SLASHLogin/following{/other_user}", "gists_url": "https://api.github.com/users/SLASHLogin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SLASHLogin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SLASHLogin/subscriptions", "organizations_url": "https://api.github.com/users/SLASHLogin/orgs", "repos_url": "https://api.github.com/users/SLASHLogin/repos", "events_url": "https://api.github.com/users/SLASHLogin/events{/privacy}", "received_events_url": "https://api.github.com/users/SLASHLogin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SLASHLogin", "id": 24846525, "node_id": "MDQ6VXNlcjI0ODQ2NTI1", "avatar_url": "https://avatars.githubusercontent.com/u/24846525?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SLASHLogin", "html_url": "https://github.com/SLASHLogin", "followers_url": "https://api.github.com/users/SLASHLogin/followers", "following_url": "https://api.github.com/users/SLASHLogin/following{/other_user}", "gists_url": "https://api.github.com/users/SLASHLogin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SLASHLogin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SLASHLogin/subscriptions", "organizations_url": "https://api.github.com/users/SLASHLogin/orgs", "repos_url": "https://api.github.com/users/SLASHLogin/repos", "events_url": "https://api.github.com/users/SLASHLogin/events{/privacy}", "received_events_url": "https://api.github.com/users/SLASHLogin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0381e51822129ca1791cb59df72056fe023e7566", "url": "https://api.github.com/repos/rust-lang/rust/commits/0381e51822129ca1791cb59df72056fe023e7566", "html_url": "https://github.com/rust-lang/rust/commit/0381e51822129ca1791cb59df72056fe023e7566"}], "stats": {"total": 25, "additions": 7, "deletions": 18}, "files": [{"sha": "eaa2ccfc835c5f2564a58d53ff9522d87e3320e7", "filename": "compiler/rustc_codegen_llvm/src/context.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a8a8055cc7f8481b0bed653f991648f120ea98a6/compiler%2Frustc_codegen_llvm%2Fsrc%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8a8055cc7f8481b0bed653f991648f120ea98a6/compiler%2Frustc_codegen_llvm%2Fsrc%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fcontext.rs?ref=a8a8055cc7f8481b0bed653f991648f120ea98a6", "patch": "@@ -4,7 +4,6 @@ use crate::callee::get_fn;\n use crate::coverageinfo;\n use crate::debuginfo;\n use crate::errors::BranchProtectionRequiresAArch64;\n-use crate::errors::LayoutSizeOverflow;\n use crate::llvm;\n use crate::llvm_util;\n use crate::type_::Type;\n@@ -28,6 +27,7 @@ use rustc_session::config::{BranchProtection, CFGuard, CFProtection};\n use rustc_session::config::{CrateType, DebugInfo, PAuthKey, PacRet};\n use rustc_session::Session;\n use rustc_span::source_map::Span;\n+use rustc_span::source_map::Spanned;\n use rustc_target::abi::{\n     call::FnAbi, HasDataLayout, PointeeInfo, Size, TargetDataLayout, VariantIdx,\n };\n@@ -953,7 +953,7 @@ impl<'tcx> LayoutOfHelpers<'tcx> for CodegenCx<'_, 'tcx> {\n     #[inline]\n     fn handle_layout_err(&self, err: LayoutError<'tcx>, span: Span, ty: Ty<'tcx>) -> ! {\n         if let LayoutError::SizeOverflow(_) = err {\n-            self.sess().emit_fatal(LayoutSizeOverflow { span, error: err.to_string() })\n+            self.sess().emit_fatal(Spanned { span, node: err })\n         } else {\n             span_bug!(span, \"failed to get layout for `{}`: {}\", ty, err)\n         }\n@@ -971,7 +971,7 @@ impl<'tcx> FnAbiOfHelpers<'tcx> for CodegenCx<'_, 'tcx> {\n         fn_abi_request: FnAbiRequest<'tcx>,\n     ) -> ! {\n         if let FnAbiError::Layout(LayoutError::SizeOverflow(_)) = err {\n-            self.sess().emit_fatal(LayoutSizeOverflow { span, error: err.to_string() })\n+            self.sess().emit_fatal(Spanned { span, node: err })\n         } else {\n             match fn_abi_request {\n                 FnAbiRequest::OfFnPtr { sig, extra_args } => {"}, {"sha": "0fafc214f2f5ebdc6144ff8dbd8f154d3a3b2814", "filename": "compiler/rustc_codegen_llvm/src/errors.rs", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a8a8055cc7f8481b0bed653f991648f120ea98a6/compiler%2Frustc_codegen_llvm%2Fsrc%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8a8055cc7f8481b0bed653f991648f120ea98a6/compiler%2Frustc_codegen_llvm%2Fsrc%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Ferrors.rs?ref=a8a8055cc7f8481b0bed653f991648f120ea98a6", "patch": "@@ -55,14 +55,6 @@ pub(crate) struct SymbolAlreadyDefined<'a> {\n #[diag(codegen_llvm_branch_protection_requires_aarch64)]\n pub(crate) struct BranchProtectionRequiresAArch64;\n \n-#[derive(Diagnostic)]\n-#[diag(codegen_llvm_layout_size_overflow)]\n-pub(crate) struct LayoutSizeOverflow {\n-    #[primary_span]\n-    pub span: Span,\n-    pub error: String,\n-}\n-\n #[derive(Diagnostic)]\n #[diag(codegen_llvm_invalid_minimum_alignment)]\n pub(crate) struct InvalidMinimumAlignment {"}, {"sha": "68a205df6c7ad05207b41617b23b8defd7dab31c", "filename": "compiler/rustc_error_messages/locales/en-US/codegen_llvm.ftl", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a8a8055cc7f8481b0bed653f991648f120ea98a6/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fcodegen_llvm.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/a8a8055cc7f8481b0bed653f991648f120ea98a6/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fcodegen_llvm.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fcodegen_llvm.ftl?ref=a8a8055cc7f8481b0bed653f991648f120ea98a6", "patch": "@@ -20,9 +20,6 @@ codegen_llvm_symbol_already_defined =\n codegen_llvm_branch_protection_requires_aarch64 =\n     -Zbranch-protection is only supported on aarch64\n \n-codegen_llvm_layout_size_overflow =\n-    {$error}\n-\n codegen_llvm_invalid_minimum_alignment =\n     invalid minimum global alignment: {$err}\n "}, {"sha": "c74d6bc3774a2d19030b27fc481a6d363b85cb02", "filename": "compiler/rustc_middle/src/ty/layout.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a8a8055cc7f8481b0bed653f991648f120ea98a6/compiler%2Frustc_middle%2Fsrc%2Fty%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8a8055cc7f8481b0bed653f991648f120ea98a6/compiler%2Frustc_middle%2Fsrc%2Fty%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Flayout.rs?ref=a8a8055cc7f8481b0bed653f991648f120ea98a6", "patch": "@@ -189,8 +189,8 @@ pub enum LayoutError<'tcx> {\n     NormalizationFailure(Ty<'tcx>, NormalizationError<'tcx>),\n }\n \n-impl<'a> IntoDiagnostic<'a, !> for LayoutError<'a> {\n-    fn into_diagnostic(self, handler: &'a Handler) -> DiagnosticBuilder<'a, !> {\n+impl IntoDiagnostic<'_, !> for LayoutError<'_> {\n+    fn into_diagnostic(self, handler: &Handler) -> DiagnosticBuilder<'_, !> {\n         let mut diag = handler.struct_fatal(\"\");\n \n         match self {\n@@ -1126,8 +1126,8 @@ impl<'tcx> fmt::Display for FnAbiError<'tcx> {\n     }\n }\n \n-impl<'tcx> IntoDiagnostic<'tcx, !> for FnAbiError<'tcx> {\n-    fn into_diagnostic(self, handler: &'tcx Handler) -> DiagnosticBuilder<'tcx, !> {\n+impl IntoDiagnostic<'_, !> for FnAbiError<'_> {\n+    fn into_diagnostic(self, handler: &Handler) -> DiagnosticBuilder<'_, !> {\n         handler.struct_fatal(self.to_string())\n     }\n }"}]}