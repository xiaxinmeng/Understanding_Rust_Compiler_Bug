{"sha": "c87060a72d68f7df1feaaa395437ce33e9856399", "node_id": "C_kwDOAAsO6NoAKGM4NzA2MGE3MmQ2OGY3ZGYxZmVhYWEzOTU0MzdjZTMzZTk4NTYzOTk", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2022-02-09T22:12:20Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2022-02-20T23:58:22Z"}, "message": "Delete read_enum_variant names", "tree": {"sha": "d41bedb9b163ba34c9af6f1858dab1ddc155e35c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d41bedb9b163ba34c9af6f1858dab1ddc155e35c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c87060a72d68f7df1feaaa395437ce33e9856399", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c87060a72d68f7df1feaaa395437ce33e9856399", "html_url": "https://github.com/rust-lang/rust/commit/c87060a72d68f7df1feaaa395437ce33e9856399", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c87060a72d68f7df1feaaa395437ce33e9856399/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c6bd6b444ca7718eca5bbd86a4438e779f31dc5e", "url": "https://api.github.com/repos/rust-lang/rust/commits/c6bd6b444ca7718eca5bbd86a4438e779f31dc5e", "html_url": "https://github.com/rust-lang/rust/commit/c6bd6b444ca7718eca5bbd86a4438e779f31dc5e"}], "stats": {"total": 14, "additions": 3, "deletions": 11}, "files": [{"sha": "8d898291e58874a4bfa9e01cda6025d0b0055e39", "filename": "compiler/rustc_macros/src/serialize.rs", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c87060a72d68f7df1feaaa395437ce33e9856399/compiler%2Frustc_macros%2Fsrc%2Fserialize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c87060a72d68f7df1feaaa395437ce33e9856399/compiler%2Frustc_macros%2Fsrc%2Fserialize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_macros%2Fsrc%2Fserialize.rs?ref=c87060a72d68f7df1feaaa395437ce33e9856399", "patch": "@@ -60,13 +60,6 @@ fn decodable_body(\n                     quote! { #idx => { #construct } }\n                 })\n                 .collect();\n-            let names: TokenStream = variants\n-                .iter()\n-                .map(|vi| {\n-                    let variant_name = vi.ast().ident.to_string();\n-                    quote!(#variant_name,)\n-                })\n-                .collect();\n             let message = format!(\n                 \"invalid enum variant tag while decoding `{}`, expected 0..{}\",\n                 ty_name,\n@@ -75,7 +68,6 @@ fn decodable_body(\n             quote! {\n                 ::rustc_serialize::Decoder::read_enum_variant(\n                     __decoder,\n-                    &[#names],\n                     |__decoder, __variant_idx| {\n                         match __variant_idx {\n                             #match_inner"}, {"sha": "b1a75309ccdd299a7acfaff4b4d9b6bc30788f6a", "filename": "compiler/rustc_serialize/src/serialize.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c87060a72d68f7df1feaaa395437ce33e9856399/compiler%2Frustc_serialize%2Fsrc%2Fserialize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c87060a72d68f7df1feaaa395437ce33e9856399/compiler%2Frustc_serialize%2Fsrc%2Fserialize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_serialize%2Fsrc%2Fserialize.rs?ref=c87060a72d68f7df1feaaa395437ce33e9856399", "patch": "@@ -202,7 +202,7 @@ pub trait Decoder {\n     fn read_raw_bytes_into(&mut self, s: &mut [u8]);\n \n     #[inline]\n-    fn read_enum_variant<T, F>(&mut self, _names: &[&str], mut f: F) -> T\n+    fn read_enum_variant<T, F>(&mut self, mut f: F) -> T\n     where\n         F: FnMut(&mut Self, usize) -> T,\n     {\n@@ -255,7 +255,7 @@ pub trait Decoder {\n     where\n         F: FnMut(&mut Self, bool) -> T,\n     {\n-        self.read_enum_variant(&[\"None\", \"Some\"], move |this, idx| match idx {\n+        self.read_enum_variant(move |this, idx| match idx {\n             0 => f(this, false),\n             1 => f(this, true),\n             _ => panic!(\"read_option: expected 0 for None or 1 for Some\"),\n@@ -571,7 +571,7 @@ impl<S: Encoder, T1: Encodable<S>, T2: Encodable<S>> Encodable<S> for Result<T1,\n \n impl<D: Decoder, T1: Decodable<D>, T2: Decodable<D>> Decodable<D> for Result<T1, T2> {\n     fn decode(d: &mut D) -> Result<T1, T2> {\n-        d.read_enum_variant(&[\"Ok\", \"Err\"], |d, disr| match disr {\n+        d.read_enum_variant(|d, disr| match disr {\n             0 => Ok(d.read_enum_variant_arg(|d| T1::decode(d))),\n             1 => Err(d.read_enum_variant_arg(|d| T2::decode(d))),\n             _ => panic!(\"Encountered invalid discriminant while decoding `Result`.\"),"}]}