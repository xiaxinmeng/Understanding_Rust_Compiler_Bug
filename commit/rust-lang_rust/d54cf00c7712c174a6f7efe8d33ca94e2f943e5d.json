{"sha": "d54cf00c7712c174a6f7efe8d33ca94e2f943e5d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ1NGNmMDBjNzcxMmMxNzRhNmY3ZWZlOGQzM2NhOTRlMmY5NDNlNWQ=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2019-05-01T22:23:35Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2019-05-05T09:45:10Z"}, "message": "Add comments", "tree": {"sha": "68c7a7114989578799c3db82789f713ea7473358", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/68c7a7114989578799c3db82789f713ea7473358"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d54cf00c7712c174a6f7efe8d33ca94e2f943e5d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d54cf00c7712c174a6f7efe8d33ca94e2f943e5d", "html_url": "https://github.com/rust-lang/rust/commit/d54cf00c7712c174a6f7efe8d33ca94e2f943e5d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d54cf00c7712c174a6f7efe8d33ca94e2f943e5d/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "11b1d483b2f0e65e049c491c34a0f8573553f4b4", "url": "https://api.github.com/repos/rust-lang/rust/commits/11b1d483b2f0e65e049c491c34a0f8573553f4b4", "html_url": "https://github.com/rust-lang/rust/commit/11b1d483b2f0e65e049c491c34a0f8573553f4b4"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "084a5429f26fa89945b8f7596983cacd7dd1fdc5", "filename": "src/librustc/session/config.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/d54cf00c7712c174a6f7efe8d33ca94e2f943e5d/src%2Flibrustc%2Fsession%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d54cf00c7712c174a6f7efe8d33ca94e2f943e5d/src%2Flibrustc%2Fsession%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fconfig.rs?ref=d54cf00c7712c174a6f7efe8d33ca94e2f943e5d", "patch": "@@ -2181,6 +2181,12 @@ pub fn build_session_options_and_crate_config(\n         TargetTriple::from_triple(host_triple())\n     };\n     let opt_level = {\n+        // The `-O` and `-C opt-level` flags specify the same setting, so we want to be able\n+        // to use them interchangeably. However, because they're technically different flags,\n+        // we need to work out manually which should take precedence if both are supplied (i.e.\n+        // the rightmost flag). We do this by finding the (rightmost) position of both flags and\n+        // comparing them. Note that if a flag is not found, its position will be `None`, which\n+        // always compared less than `Some(_)`.\n         let max_o = matches.opt_positions(\"O\").into_iter().max();\n         let max_c = matches.opt_strs_pos(\"C\").into_iter().flat_map(|(i, s)| {\n             if let Some(\"opt-level\") = s.splitn(2, '=').next() {\n@@ -2213,6 +2219,9 @@ pub fn build_session_options_and_crate_config(\n             }\n         }\n     };\n+    // The `-g` and `-C debuginfo` flags specify the same setting, so we want to be able\n+    // to use them interchangeably. See the note above (regarding `-O` and `-C opt-level`)\n+    // for more details.\n     let debug_assertions = cg.debug_assertions.unwrap_or(opt_level == OptLevel::No);\n     let max_g = matches.opt_positions(\"g\").into_iter().max();\n     let max_c = matches.opt_strs_pos(\"C\").into_iter().flat_map(|(i, s)| {"}]}