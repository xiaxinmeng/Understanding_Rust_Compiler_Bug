{"sha": "832d89db4791b4487f739ecd6e10140da147a537", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgzMmQ4OWRiNDc5MWI0NDg3ZjczOWVjZDZlMTAxNDBkYTE0N2E1Mzc=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-08-11T05:41:16Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-08-11T17:15:14Z"}, "message": "Bring run-pass/task-killjoin up to date and un-XFAIL", "tree": {"sha": "dfb039423074ad27ea56c9b4b9e57f5796d63063", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dfb039423074ad27ea56c9b4b9e57f5796d63063"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/832d89db4791b4487f739ecd6e10140da147a537", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/832d89db4791b4487f739ecd6e10140da147a537", "html_url": "https://github.com/rust-lang/rust/commit/832d89db4791b4487f739ecd6e10140da147a537", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/832d89db4791b4487f739ecd6e10140da147a537/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ffd6ee0730f599de4765464f208d1c0cc3dcdfbc", "url": "https://api.github.com/repos/rust-lang/rust/commits/ffd6ee0730f599de4765464f208d1c0cc3dcdfbc", "html_url": "https://github.com/rust-lang/rust/commit/ffd6ee0730f599de4765464f208d1c0cc3dcdfbc"}], "stats": {"total": 23, "additions": 11, "deletions": 12}, "files": [{"sha": "a81169c5f76c756115162e3eb184dea89119a0ef", "filename": "src/test/run-pass/task-killjoin.rs", "status": "modified", "additions": 11, "deletions": 12, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/832d89db4791b4487f739ecd6e10140da147a537/src%2Ftest%2Frun-pass%2Ftask-killjoin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/832d89db4791b4487f739ecd6e10140da147a537/src%2Ftest%2Frun-pass%2Ftask-killjoin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-killjoin.rs?ref=832d89db4791b4487f739ecd6e10140da147a537", "patch": "@@ -1,33 +1,32 @@\n-// xfail-stage1\n-// xfail-stage2\n-// xfail-stage3\n-\n // Create a task that is supervised by another task,\n // join the supervised task from the supervising task,\n // then fail the supervised task. The supervised task\n // will kill the supervising task, waking it up. The\n // supervising task no longer needs to be wakened when\n // the supervised task exits.\n \n+use std;\n+import std::task;\n+\n fn supervised() {\n     // Yield to make sure the supervisor joins before we\n     // fail. This is currently not needed because the supervisor\n     // runs first, but I can imagine that changing.\n-    yield;\n+    task::yield();\n     fail;\n }\n \n fn supervisor() {\n-    let task t = spawn \"supervised\" supervised();\n-    join t;\n+    // Unsupervise this task so the process doesn't return a failure status as\n+    // a result of the main task being killed.\n+    task::unsupervise();\n+    let t = spawn supervised();\n+    task::join(t);\n }\n \n fn main() {\n-    // Start the test in another domain so that\n-    // the process doesn't return a failure status as a result\n-    // of the main task being killed.\n-    let task dom2 = spawn thread \"supervisor\" supervisor();\n-    join dom2;\n+    let dom2 = spawn supervisor();\n+    task::join(dom2);\n }\n \n // Local Variables:"}]}