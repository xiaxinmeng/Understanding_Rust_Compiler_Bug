{"sha": "95a045835882e0f9590115ad992b650b71e8197c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk1YTA0NTgzNTg4MmUwZjk1OTAxMTVhZDk5MmI2NTBiNzFlODE5N2M=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2017-12-09T21:04:27Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2017-12-09T23:19:39Z"}, "message": "Resolve type on return type suggestion", "tree": {"sha": "cfdcb4b61ac4b8b55a3d4cd6df88a6643f0c9a1f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cfdcb4b61ac4b8b55a3d4cd6df88a6643f0c9a1f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/95a045835882e0f9590115ad992b650b71e8197c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/95a045835882e0f9590115ad992b650b71e8197c", "html_url": "https://github.com/rust-lang/rust/commit/95a045835882e0f9590115ad992b650b71e8197c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/95a045835882e0f9590115ad992b650b71e8197c/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c7b6d8263b0c106503d102ab8148769ac9f7d086", "url": "https://api.github.com/repos/rust-lang/rust/commits/c7b6d8263b0c106503d102ab8148769ac9f7d086", "html_url": "https://github.com/rust-lang/rust/commit/c7b6d8263b0c106503d102ab8148769ac9f7d086"}], "stats": {"total": 58, "additions": 51, "deletions": 7}, "files": [{"sha": "439ded40ec1c77e16af41d7ad1158852907b5a01", "filename": "src/librustc_errors/emitter.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/95a045835882e0f9590115ad992b650b71e8197c/src%2Flibrustc_errors%2Femitter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95a045835882e0f9590115ad992b650b71e8197c/src%2Flibrustc_errors%2Femitter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Femitter.rs?ref=95a045835882e0f9590115ad992b650b71e8197c", "patch": "@@ -46,7 +46,7 @@ impl Emitter for EmitterWriter {\n                sugg.msg.split_whitespace().count() < 10 &&\n                // don't display multiline suggestions as labels\n                !sugg.substitutions[0].parts[0].snippet.contains('\\n') {\n-                let substitution = &sugg.substitutions[0].parts[0].snippet;\n+                let substitution = &sugg.substitutions[0].parts[0].snippet.trim();\n                 let msg = if substitution.len() == 0 || !sugg.show_code_when_inline {\n                     // This substitution is only removal or we explicitly don't want to show the\n                     // code inline, don't show it"}, {"sha": "be595c712649603573d39776eae0b0fd0921c5f5", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/95a045835882e0f9590115ad992b650b71e8197c/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95a045835882e0f9590115ad992b650b71e8197c/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=95a045835882e0f9590115ad992b650b71e8197c", "patch": "@@ -4503,7 +4503,8 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n             (&hir::FunctionRetTy::DefaultReturn(span), true, true) => {\n                 err.span_suggestion(span,\n                                     \"try adding a return type\",\n-                                    format!(\"-> {} \", found));\n+                                    format!(\"-> {} \",\n+                                            self.resolve_type_vars_with_obligations(found)));\n             }\n             (&hir::FunctionRetTy::DefaultReturn(span), false, true) => {\n                 err.span_label(span, \"possibly return type missing here?\");"}, {"sha": "c887821c6d11af63de111ba460583efedc5d5355", "filename": "src/test/ui/codemap_tests/tab.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/95a045835882e0f9590115ad992b650b71e8197c/src%2Ftest%2Fui%2Fcodemap_tests%2Ftab.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/95a045835882e0f9590115ad992b650b71e8197c/src%2Ftest%2Fui%2Fcodemap_tests%2Ftab.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcodemap_tests%2Ftab.stderr?ref=95a045835882e0f9590115ad992b650b71e8197c", "patch": "@@ -8,7 +8,7 @@ error[E0308]: mismatched types\n   --> $DIR/tab.rs:18:2\n    |\n 17 | fn foo() {\n-   |          - help: try adding a return type: `-> &'static str `\n+   |          - help: try adding a return type: `-> &'static str`\n 18 |     \"bar            boo\" //~ ERROR mismatched types\n    |     ^^^^^^^^^^^^^^^^^^^^ expected (), found reference\n    |"}, {"sha": "be340b1ab9aee14f1e3c6e1e16a922543b887b09", "filename": "src/test/ui/feature-gate/issue-43106-gating-of-builtin-attrs.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/95a045835882e0f9590115ad992b650b71e8197c/src%2Ftest%2Fui%2Ffeature-gate%2Fissue-43106-gating-of-builtin-attrs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/95a045835882e0f9590115ad992b650b71e8197c/src%2Ftest%2Fui%2Ffeature-gate%2Fissue-43106-gating-of-builtin-attrs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gate%2Fissue-43106-gating-of-builtin-attrs.stderr?ref=95a045835882e0f9590115ad992b650b71e8197c", "patch": "@@ -548,7 +548,7 @@ warning: function is marked #[no_mangle], but not exported\n 426 |     #[no_mangle = \"3500\"] fn f() { }\n     |                           -^^^^^^^^^\n     |                           |\n-    |                           help: try making it public: `pub `\n+    |                           help: try making it public: `pub`\n     |\n     = note: #[warn(private_no_mangle_fns)] on by default\n "}, {"sha": "44cfb1a82a244516822dcad0f7c99ba8c6511416", "filename": "src/test/ui/lint/suggestions.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/95a045835882e0f9590115ad992b650b71e8197c/src%2Ftest%2Fui%2Flint%2Fsuggestions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/95a045835882e0f9590115ad992b650b71e8197c/src%2Ftest%2Fui%2Flint%2Fsuggestions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fsuggestions.stderr?ref=95a045835882e0f9590115ad992b650b71e8197c", "patch": "@@ -38,7 +38,7 @@ warning: static is marked #[no_mangle], but not exported\n 14 | #[no_mangle] static SHENZHOU: usize = 1; // should suggest `pub`\n    |              -^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |              |\n-   |              help: try making it public: `pub `\n+   |              help: try making it public: `pub`\n    |\n    = note: #[warn(private_no_mangle_statics)] on by default\n \n@@ -68,7 +68,7 @@ warning: function is marked #[no_mangle], but not exported\n 24 | fn rio_grande() {} // should suggest `pub`\n    | -^^^^^^^^^^^^^^^^^\n    | |\n-   | help: try making it public: `pub `\n+   | help: try making it public: `pub`\n    |\n    = note: #[warn(private_no_mangle_fns)] on by default\n "}, {"sha": "2942619f64936fee3a84a593cc25e2c1a372f531", "filename": "src/test/ui/mismatched_types/issue-19109.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/95a045835882e0f9590115ad992b650b71e8197c/src%2Ftest%2Fui%2Fmismatched_types%2Fissue-19109.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/95a045835882e0f9590115ad992b650b71e8197c/src%2Ftest%2Fui%2Fmismatched_types%2Fissue-19109.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Fissue-19109.stderr?ref=95a045835882e0f9590115ad992b650b71e8197c", "patch": "@@ -2,7 +2,7 @@ error[E0308]: mismatched types\n   --> $DIR/issue-19109.rs:14:5\n    |\n 13 | fn function(t: &mut Trait) {\n-   |                            - help: try adding a return type: `-> *mut Trait `\n+   |                            - help: try adding a return type: `-> *mut Trait`\n 14 |     t as *mut Trait\n    |     ^^^^^^^^^^^^^^^ expected (), found *-ptr\n    |"}, {"sha": "e63787949a41b60bde7adabbfd258f248bd99008", "filename": "src/test/ui/suggestions/return-type.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/95a045835882e0f9590115ad992b650b71e8197c/src%2Ftest%2Fui%2Fsuggestions%2Freturn-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95a045835882e0f9590115ad992b650b71e8197c/src%2Ftest%2Fui%2Fsuggestions%2Freturn-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Freturn-type.rs?ref=95a045835882e0f9590115ad992b650b71e8197c", "patch": "@@ -0,0 +1,24 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+struct S<T> {\n+    t: T,\n+}\n+\n+fn foo<T>(x: T) -> S<T> {\n+    S { t: x }\n+}\n+\n+fn bar() {\n+    foo(4 as usize)\n+    //~^ ERROR mismatched types\n+}\n+\n+fn main() {}"}, {"sha": "19c5d72dd7b36888f4ab83210b04645caba86dcf", "filename": "src/test/ui/suggestions/return-type.stderr", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/95a045835882e0f9590115ad992b650b71e8197c/src%2Ftest%2Fui%2Fsuggestions%2Freturn-type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/95a045835882e0f9590115ad992b650b71e8197c/src%2Ftest%2Fui%2Fsuggestions%2Freturn-type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Freturn-type.stderr?ref=95a045835882e0f9590115ad992b650b71e8197c", "patch": "@@ -0,0 +1,19 @@\n+error[E0308]: mismatched types\n+  --> $DIR/return-type.rs:20:5\n+   |\n+20 |     foo(4 as usize)\n+   |     ^^^^^^^^^^^^^^^ expected (), found struct `S`\n+   |\n+   = note: expected type `()`\n+              found type `S<usize>`\n+help: try adding a semicolon\n+   |\n+20 |     foo(4 as usize);\n+   |                    ^\n+help: try adding a return type\n+   |\n+19 | fn bar() -> S<usize> {\n+   |          ^^^^^^^^^^^\n+\n+error: aborting due to previous error\n+"}]}