{"sha": "7d5e2ac5eb78c5d3054267bbec5c31fcf8193507", "node_id": "C_kwDOAAsO6NoAKDdkNWUyYWM1ZWI3OGM1ZDMwNTQyNjdiYmVjNWMzMWZjZjgxOTM1MDc", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-02-08T05:47:36Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-02-08T05:47:36Z"}, "message": "Rollup merge of #93715 - GuillaumeGomez:horizontal-trim, r=notriddle\n\nFix horizontal trim for block doc comments\n\nFixes #93662.\n\nr? `@notriddle`", "tree": {"sha": "0ca562fb593e9faa1a6b2c4b26346ae4a9beab2a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0ca562fb593e9faa1a6b2c4b26346ae4a9beab2a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7d5e2ac5eb78c5d3054267bbec5c31fcf8193507", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiAgP5CRBK7hj4Ov3rIwAAI4oIAEZFO8l2uh3LWkotbLikh/3G\nzfIHYAOUlji/DofuNzJaMHFwqpvdvBNV7cgvFs7WTHyElBMXe59enCznKFOskGW2\nKSlldHYPDXYfPt6UDOKKZ7rsmxxpVD/9tgdMYOkc6UgHJI8Jn5wwoYg519/K2YDT\ndkx/YDWSNVFMLMIHS2ZWVL3UEF26UX9ZkHv7Qnda7J7pUqsaurh6GAfJrou22/pd\nRwdxtYV5lcaznQWQt14mg/e+HBREbhriccM0YuBed74rl0rE0BDuPaMnKRDrR17/\ndGgrZaO6Cvf6Lxtw/HVkX5XsitigdKBW/m3FD9shiehLwas91PdqYmft4qWTIeY=\n=YjRq\n-----END PGP SIGNATURE-----\n", "payload": "tree 0ca562fb593e9faa1a6b2c4b26346ae4a9beab2a\nparent b7f785092d84a4b4dadb08fc9fdfe86b0b6139e6\nparent a476ec8bd0b1925d349383110b75ff51567d7534\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1644299256 +0100\ncommitter GitHub <noreply@github.com> 1644299256 +0100\n\nRollup merge of #93715 - GuillaumeGomez:horizontal-trim, r=notriddle\n\nFix horizontal trim for block doc comments\n\nFixes #93662.\n\nr? `@notriddle`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7d5e2ac5eb78c5d3054267bbec5c31fcf8193507", "html_url": "https://github.com/rust-lang/rust/commit/7d5e2ac5eb78c5d3054267bbec5c31fcf8193507", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7d5e2ac5eb78c5d3054267bbec5c31fcf8193507/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b7f785092d84a4b4dadb08fc9fdfe86b0b6139e6", "url": "https://api.github.com/repos/rust-lang/rust/commits/b7f785092d84a4b4dadb08fc9fdfe86b0b6139e6", "html_url": "https://github.com/rust-lang/rust/commit/b7f785092d84a4b4dadb08fc9fdfe86b0b6139e6"}, {"sha": "a476ec8bd0b1925d349383110b75ff51567d7534", "url": "https://api.github.com/repos/rust-lang/rust/commits/a476ec8bd0b1925d349383110b75ff51567d7534", "html_url": "https://github.com/rust-lang/rust/commit/a476ec8bd0b1925d349383110b75ff51567d7534"}], "stats": {"total": 59, "additions": 52, "deletions": 7}, "files": [{"sha": "f51b0086dc8b6d6be5b784c677f93c067505428c", "filename": "compiler/rustc_ast/src/util/comments.rs", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/7d5e2ac5eb78c5d3054267bbec5c31fcf8193507/compiler%2Frustc_ast%2Fsrc%2Futil%2Fcomments.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d5e2ac5eb78c5d3054267bbec5c31fcf8193507/compiler%2Frustc_ast%2Fsrc%2Futil%2Fcomments.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast%2Fsrc%2Futil%2Fcomments.rs?ref=7d5e2ac5eb78c5d3054267bbec5c31fcf8193507", "patch": "@@ -43,15 +43,16 @@ pub fn beautify_doc_string(data: Symbol, kind: CommentKind) -> Symbol {\n         if i != 0 || j != lines.len() { Some((i, j)) } else { None }\n     }\n \n-    fn get_horizontal_trim(lines: &[&str], kind: CommentKind) -> Option<usize> {\n+    fn get_horizontal_trim<'a>(lines: &'a [&str], kind: CommentKind) -> Option<String> {\n         let mut i = usize::MAX;\n         let mut first = true;\n \n         // In case we have doc comments like `/**` or `/*!`, we want to remove stars if they are\n         // present. However, we first need to strip the empty lines so they don't get in the middle\n         // when we try to compute the \"horizontal trim\".\n         let lines = if kind == CommentKind::Block {\n-            let mut i = 0;\n+            // Whatever happens, we skip the first line.\n+            let mut i = if lines[0].trim_start().starts_with('*') { 0 } else { 1 };\n             let mut j = lines.len();\n \n             while i < j && lines[i].trim().is_empty() {\n@@ -84,7 +85,7 @@ pub fn beautify_doc_string(data: Symbol, kind: CommentKind) -> Symbol {\n                 return None;\n             }\n         }\n-        Some(i)\n+        if lines.is_empty() { None } else { Some(lines[0][..i].into()) }\n     }\n \n     let data_s = data.as_str();\n@@ -102,8 +103,13 @@ pub fn beautify_doc_string(data: Symbol, kind: CommentKind) -> Symbol {\n             changes = true;\n             // remove a \"[ \\t]*\\*\" block from each line, if possible\n             for line in lines.iter_mut() {\n-                if horizontal + 1 < line.len() {\n-                    *line = &line[horizontal + 1..];\n+                if let Some(tmp) = line.strip_prefix(&horizontal) {\n+                    *line = tmp;\n+                    if kind == CommentKind::Block\n+                        && (*line == \"*\" || line.starts_with(\"* \") || line.starts_with(\"**\"))\n+                    {\n+                        *line = &line[1..];\n+                    }\n                 }\n             }\n         }"}, {"sha": "11d50603a1011fb84f483c82731bce45664789d8", "filename": "compiler/rustc_ast/src/util/comments/tests.rs", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/7d5e2ac5eb78c5d3054267bbec5c31fcf8193507/compiler%2Frustc_ast%2Fsrc%2Futil%2Fcomments%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d5e2ac5eb78c5d3054267bbec5c31fcf8193507/compiler%2Frustc_ast%2Fsrc%2Futil%2Fcomments%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast%2Fsrc%2Futil%2Fcomments%2Ftests.rs?ref=7d5e2ac5eb78c5d3054267bbec5c31fcf8193507", "patch": "@@ -24,7 +24,7 @@ fn test_block_doc_comment_3() {\n     create_default_session_globals_then(|| {\n         let comment = \"\\n let a: *i32;\\n *a = 5;\\n\";\n         let stripped = beautify_doc_string(Symbol::intern(comment), CommentKind::Block);\n-        assert_eq!(stripped.as_str(), \" let a: *i32;\\n *a = 5;\");\n+        assert_eq!(stripped.as_str(), \"let a: *i32;\\n*a = 5;\");\n     })\n }\n \n@@ -41,3 +41,21 @@ fn test_line_doc_comment() {\n         assert_eq!(stripped.as_str(), \"!test\");\n     })\n }\n+\n+#[test]\n+fn test_doc_blocks() {\n+    create_default_session_globals_then(|| {\n+        let stripped =\n+            beautify_doc_string(Symbol::intern(\" # Returns\\n     *\\n     \"), CommentKind::Block);\n+        assert_eq!(stripped.as_str(), \" # Returns\\n\\n\");\n+\n+        let stripped = beautify_doc_string(\n+            Symbol::intern(\"\\n     * # Returns\\n     *\\n     \"),\n+            CommentKind::Block,\n+        );\n+        assert_eq!(stripped.as_str(), \" # Returns\\n\\n\");\n+\n+        let stripped = beautify_doc_string(Symbol::intern(\"\\n *     a\\n \"), CommentKind::Block);\n+        assert_eq!(stripped.as_str(), \"     a\\n\");\n+    })\n+}"}, {"sha": "c60dfa3f9518e0998a3a3016af866fedc4645b37", "filename": "src/test/rustdoc-ui/block-doc-comment.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/7d5e2ac5eb78c5d3054267bbec5c31fcf8193507/src%2Ftest%2Frustdoc-ui%2Fblock-doc-comment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d5e2ac5eb78c5d3054267bbec5c31fcf8193507/src%2Ftest%2Frustdoc-ui%2Fblock-doc-comment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fblock-doc-comment.rs?ref=7d5e2ac5eb78c5d3054267bbec5c31fcf8193507", "patch": "@@ -0,0 +1,16 @@\n+// check-pass\n+// compile-flags:--test\n+\n+// This test ensures that no code block is detected in the doc comments.\n+\n+pub mod Wormhole {\n+    /** # Returns\n+     *\n+     */\n+    pub fn foofoo() {}\n+    /**\n+     * # Returns\n+     *\n+     */\n+    pub fn barbar() {}\n+}"}, {"sha": "e5c27bebbdb23760134f4ddd98b349116b3c04e6", "filename": "src/test/rustdoc-ui/block-doc-comment.stdout", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/7d5e2ac5eb78c5d3054267bbec5c31fcf8193507/src%2Ftest%2Frustdoc-ui%2Fblock-doc-comment.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/7d5e2ac5eb78c5d3054267bbec5c31fcf8193507/src%2Ftest%2Frustdoc-ui%2Fblock-doc-comment.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fblock-doc-comment.stdout?ref=7d5e2ac5eb78c5d3054267bbec5c31fcf8193507", "patch": "@@ -0,0 +1,5 @@\n+\n+running 0 tests\n+\n+test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n+"}, {"sha": "ea28d84f1ffdfe63fd0b41bad05a8c29205c822e", "filename": "src/test/rustdoc/strip-block-doc-comments-stars.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7d5e2ac5eb78c5d3054267bbec5c31fcf8193507/src%2Ftest%2Frustdoc%2Fstrip-block-doc-comments-stars.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d5e2ac5eb78c5d3054267bbec5c31fcf8193507/src%2Ftest%2Frustdoc%2Fstrip-block-doc-comments-stars.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fstrip-block-doc-comments-stars.rs?ref=7d5e2ac5eb78c5d3054267bbec5c31fcf8193507", "patch": "@@ -1,6 +1,6 @@\n #![crate_name = \"foo\"]\n \n-// The goal of this test is to answer that it won't be generated as a list because\n+// The goal of this test is to ensure that it won't be generated as a list because\n // block doc comments can have their lines starting with a star.\n \n // @has foo/fn.foo.html"}]}