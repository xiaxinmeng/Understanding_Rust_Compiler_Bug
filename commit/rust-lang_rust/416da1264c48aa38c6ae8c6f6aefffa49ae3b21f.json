{"sha": "416da1264c48aa38c6ae8c6f6aefffa49ae3b21f", "node_id": "C_kwDOAAsO6NoAKDQxNmRhMTI2NGM0OGFhMzhjNmFlOGM2ZjZhZWZmZmE0OWFlM2IyMWY", "commit": {"author": {"name": "Evan Typanski", "email": "evantypanski@gmail.com", "date": "2022-09-29T23:31:32Z"}, "committer": {"name": "Evan Typanski", "email": "evantypanski@gmail.com", "date": "2022-09-29T23:35:04Z"}, "message": "[`redundant_closure`] Add `&mut` to more cases", "tree": {"sha": "a6fb1261a50904ec5145f12d69147e93b3641f43", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a6fb1261a50904ec5145f12d69147e93b3641f43"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/416da1264c48aa38c6ae8c6f6aefffa49ae3b21f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/416da1264c48aa38c6ae8c6f6aefffa49ae3b21f", "html_url": "https://github.com/rust-lang/rust/commit/416da1264c48aa38c6ae8c6f6aefffa49ae3b21f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/416da1264c48aa38c6ae8c6f6aefffa49ae3b21f/comments", "author": {"login": "evantypanski", "id": 22875724, "node_id": "MDQ6VXNlcjIyODc1NzI0", "avatar_url": "https://avatars.githubusercontent.com/u/22875724?v=4", "gravatar_id": "", "url": "https://api.github.com/users/evantypanski", "html_url": "https://github.com/evantypanski", "followers_url": "https://api.github.com/users/evantypanski/followers", "following_url": "https://api.github.com/users/evantypanski/following{/other_user}", "gists_url": "https://api.github.com/users/evantypanski/gists{/gist_id}", "starred_url": "https://api.github.com/users/evantypanski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/evantypanski/subscriptions", "organizations_url": "https://api.github.com/users/evantypanski/orgs", "repos_url": "https://api.github.com/users/evantypanski/repos", "events_url": "https://api.github.com/users/evantypanski/events{/privacy}", "received_events_url": "https://api.github.com/users/evantypanski/received_events", "type": "User", "site_admin": false}, "committer": {"login": "evantypanski", "id": 22875724, "node_id": "MDQ6VXNlcjIyODc1NzI0", "avatar_url": "https://avatars.githubusercontent.com/u/22875724?v=4", "gravatar_id": "", "url": "https://api.github.com/users/evantypanski", "html_url": "https://github.com/evantypanski", "followers_url": "https://api.github.com/users/evantypanski/followers", "following_url": "https://api.github.com/users/evantypanski/following{/other_user}", "gists_url": "https://api.github.com/users/evantypanski/gists{/gist_id}", "starred_url": "https://api.github.com/users/evantypanski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/evantypanski/subscriptions", "organizations_url": "https://api.github.com/users/evantypanski/orgs", "repos_url": "https://api.github.com/users/evantypanski/repos", "events_url": "https://api.github.com/users/evantypanski/events{/privacy}", "received_events_url": "https://api.github.com/users/evantypanski/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e43f5a17d4d9263616ae6fc28a7c5353e80d8a12", "url": "https://api.github.com/repos/rust-lang/rust/commits/e43f5a17d4d9263616ae6fc28a7c5353e80d8a12", "html_url": "https://github.com/rust-lang/rust/commit/e43f5a17d4d9263616ae6fc28a7c5353e80d8a12"}], "stats": {"total": 50, "additions": 40, "deletions": 10}, "files": [{"sha": "a5c6512a5e7d2760519cdcb0f56986c2e54b2ccf", "filename": "clippy_lints/src/eta_reduction.rs", "status": "modified", "additions": 5, "deletions": 9, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/416da1264c48aa38c6ae8c6f6aefffa49ae3b21f/clippy_lints%2Fsrc%2Feta_reduction.rs", "raw_url": "https://github.com/rust-lang/rust/raw/416da1264c48aa38c6ae8c6f6aefffa49ae3b21f/clippy_lints%2Fsrc%2Feta_reduction.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Feta_reduction.rs?ref=416da1264c48aa38c6ae8c6f6aefffa49ae3b21f", "patch": "@@ -1,7 +1,7 @@\n use clippy_utils::diagnostics::{span_lint_and_sugg, span_lint_and_then};\n use clippy_utils::higher::VecArgs;\n use clippy_utils::source::snippet_opt;\n-use clippy_utils::ty::is_type_diagnostic_item;\n+use clippy_utils::ty::{implements_trait, is_type_diagnostic_item};\n use clippy_utils::usage::local_used_after_expr;\n use clippy_utils::{higher, is_adjusted, path_to_local, path_to_local_id};\n use if_chain::if_chain;\n@@ -11,7 +11,7 @@ use rustc_hir::{Closure, Expr, ExprKind, Param, PatKind, Unsafety};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_middle::ty::adjustment::{Adjust, Adjustment, AutoBorrow};\n use rustc_middle::ty::binding::BindingMode;\n-use rustc_middle::ty::{self, ClosureKind, Ty, TypeVisitable};\n+use rustc_middle::ty::{self, Ty, TypeVisitable};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::symbol::sym;\n \n@@ -122,15 +122,11 @@ impl<'tcx> LateLintPass<'tcx> for EtaReduction {\n             then {\n                 span_lint_and_then(cx, REDUNDANT_CLOSURE, expr.span, \"redundant closure\", |diag| {\n                     if let Some(mut snippet) = snippet_opt(cx, callee.span) {\n-                        if_chain! {\n-                            if let ty::Closure(_, substs) = callee_ty.peel_refs().kind();\n-                            if substs.as_closure().kind() == ClosureKind::FnMut;\n-                            if path_to_local(callee).map_or(false, |l| local_used_after_expr(cx, l, expr));\n-\n-                            then {\n+                        if let Some(fn_mut_id) = cx.tcx.lang_items().fn_mut_trait() &&\n+                            implements_trait(cx, callee_ty.peel_refs(), fn_mut_id, &[]) &&\n+                            path_to_local(callee).map_or(false, |l| local_used_after_expr(cx, l, expr)) {\n                                 // Mutable closure is used after current expr; we cannot consume it.\n                                 snippet = format!(\"&mut {snippet}\");\n-                            }\n                         }\n                         diag.span_suggestion(\n                             expr.span,"}, {"sha": "112bb4b4817ae2ed78658ec79b2664a0988a4456", "filename": "tests/ui/eta.fixed", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/416da1264c48aa38c6ae8c6f6aefffa49ae3b21f/tests%2Fui%2Feta.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/416da1264c48aa38c6ae8c6f6aefffa49ae3b21f/tests%2Fui%2Feta.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Feta.fixed?ref=416da1264c48aa38c6ae8c6f6aefffa49ae3b21f", "patch": "@@ -303,3 +303,14 @@ fn not_general_enough() {\n     fn f(_: impl FnMut(&Path) -> std::io::Result<()>) {}\n     f(|path| std::fs::remove_file(path));\n }\n+\n+// https://github.com/rust-lang/rust-clippy/issues/9369\n+pub fn mutable_impl_fn_mut(mut f: impl FnMut()) {\n+    fn takes_fn_mut(_: impl FnMut()) {}\n+    takes_fn_mut(&mut f);\n+\n+    fn takes_fn_once(_: impl FnOnce()) {}\n+    takes_fn_once(&mut f);\n+\n+    f();\n+}"}, {"sha": "970144e06ddfab94dbfcccd442c21f3888056837", "filename": "tests/ui/eta.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/416da1264c48aa38c6ae8c6f6aefffa49ae3b21f/tests%2Fui%2Feta.rs", "raw_url": "https://github.com/rust-lang/rust/raw/416da1264c48aa38c6ae8c6f6aefffa49ae3b21f/tests%2Fui%2Feta.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Feta.rs?ref=416da1264c48aa38c6ae8c6f6aefffa49ae3b21f", "patch": "@@ -303,3 +303,14 @@ fn not_general_enough() {\n     fn f(_: impl FnMut(&Path) -> std::io::Result<()>) {}\n     f(|path| std::fs::remove_file(path));\n }\n+\n+// https://github.com/rust-lang/rust-clippy/issues/9369\n+pub fn mutable_impl_fn_mut(mut f: impl FnMut()) {\n+    fn takes_fn_mut(_: impl FnMut()) {}\n+    takes_fn_mut(|| f());\n+\n+    fn takes_fn_once(_: impl FnOnce()) {}\n+    takes_fn_once(|| f());\n+\n+    f();\n+}"}, {"sha": "f7ead7257f6a6d4d47339ae05bd704c9c6e5c620", "filename": "tests/ui/eta.stderr", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/416da1264c48aa38c6ae8c6f6aefffa49ae3b21f/tests%2Fui%2Feta.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/416da1264c48aa38c6ae8c6f6aefffa49ae3b21f/tests%2Fui%2Feta.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Feta.stderr?ref=416da1264c48aa38c6ae8c6f6aefffa49ae3b21f", "patch": "@@ -116,5 +116,17 @@ error: redundant closure\n LL |         Some(1).map(|n| in_loop(n));\n    |                     ^^^^^^^^^^^^^^ help: replace the closure with the function itself: `in_loop`\n \n-error: aborting due to 19 previous errors\n+error: redundant closure\n+  --> $DIR/eta.rs:310:18\n+   |\n+LL |     takes_fn_mut(|| f());\n+   |                  ^^^^^^ help: replace the closure with the function itself: `&mut f`\n+\n+error: redundant closure\n+  --> $DIR/eta.rs:313:19\n+   |\n+LL |     takes_fn_once(|| f());\n+   |                   ^^^^^^ help: replace the closure with the function itself: `&mut f`\n+\n+error: aborting due to 21 previous errors\n "}]}