{"sha": "e7d3ae606ed496144554dae499b69207da3b09c5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU3ZDNhZTYwNmVkNDk2MTQ0NTU0ZGFlNDk5YjY5MjA3ZGEzYjA5YzU=", "commit": {"author": {"name": "Eli Friedman", "email": "eli.friedman@gmail.com", "date": "2015-10-28T05:20:01Z"}, "committer": {"name": "Eli Friedman", "email": "eli.friedman@gmail.com", "date": "2015-10-28T21:11:31Z"}, "message": "Make quote plugin use parsing functions which explicitly panic.\n\nRename parse_* to parse_*_panic, and add parse_attribute_panic.", "tree": {"sha": "cd68b8303226e9a6b1b30c70aa7d7fa3597cf326", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cd68b8303226e9a6b1b30c70aa7d7fa3597cf326"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e7d3ae606ed496144554dae499b69207da3b09c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e7d3ae606ed496144554dae499b69207da3b09c5", "html_url": "https://github.com/rust-lang/rust/commit/e7d3ae606ed496144554dae499b69207da3b09c5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e7d3ae606ed496144554dae499b69207da3b09c5/comments", "author": {"login": "eefriedman", "id": 12769964, "node_id": "MDQ6VXNlcjEyNzY5OTY0", "avatar_url": "https://avatars.githubusercontent.com/u/12769964?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eefriedman", "html_url": "https://github.com/eefriedman", "followers_url": "https://api.github.com/users/eefriedman/followers", "following_url": "https://api.github.com/users/eefriedman/following{/other_user}", "gists_url": "https://api.github.com/users/eefriedman/gists{/gist_id}", "starred_url": "https://api.github.com/users/eefriedman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eefriedman/subscriptions", "organizations_url": "https://api.github.com/users/eefriedman/orgs", "repos_url": "https://api.github.com/users/eefriedman/repos", "events_url": "https://api.github.com/users/eefriedman/events{/privacy}", "received_events_url": "https://api.github.com/users/eefriedman/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eefriedman", "id": 12769964, "node_id": "MDQ6VXNlcjEyNzY5OTY0", "avatar_url": "https://avatars.githubusercontent.com/u/12769964?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eefriedman", "html_url": "https://github.com/eefriedman", "followers_url": "https://api.github.com/users/eefriedman/followers", "following_url": "https://api.github.com/users/eefriedman/following{/other_user}", "gists_url": "https://api.github.com/users/eefriedman/gists{/gist_id}", "starred_url": "https://api.github.com/users/eefriedman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eefriedman/subscriptions", "organizations_url": "https://api.github.com/users/eefriedman/orgs", "repos_url": "https://api.github.com/users/eefriedman/repos", "events_url": "https://api.github.com/users/eefriedman/events{/privacy}", "received_events_url": "https://api.github.com/users/eefriedman/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "56ba8feed694f46f28d9e65e132e1b62cc18e0b4", "url": "https://api.github.com/repos/rust-lang/rust/commits/56ba8feed694f46f28d9e65e132e1b62cc18e0b4", "html_url": "https://github.com/rust-lang/rust/commit/56ba8feed694f46f28d9e65e132e1b62cc18e0b4"}], "stats": {"total": 34, "additions": 19, "deletions": 15}, "files": [{"sha": "59e8533a83d3198117db470f68ca6545a5dc71c5", "filename": "src/libsyntax/ext/quote.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/e7d3ae606ed496144554dae499b69207da3b09c5/src%2Flibsyntax%2Fext%2Fquote.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7d3ae606ed496144554dae499b69207da3b09c5/src%2Flibsyntax%2Fext%2Fquote.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fquote.rs?ref=e7d3ae606ed496144554dae499b69207da3b09c5", "patch": "@@ -327,55 +327,55 @@ pub fn expand_quote_expr<'cx>(cx: &'cx mut ExtCtxt,\n                               sp: Span,\n                               tts: &[ast::TokenTree])\n                               -> Box<base::MacResult+'cx> {\n-    let expanded = expand_parse_call(cx, sp, \"parse_expr\", vec!(), tts);\n+    let expanded = expand_parse_call(cx, sp, \"parse_expr_panic\", vec!(), tts);\n     base::MacEager::expr(expanded)\n }\n \n pub fn expand_quote_item<'cx>(cx: &mut ExtCtxt,\n                               sp: Span,\n                               tts: &[ast::TokenTree])\n                               -> Box<base::MacResult+'cx> {\n-    let expanded = expand_parse_call(cx, sp, \"parse_item\", vec!(), tts);\n+    let expanded = expand_parse_call(cx, sp, \"parse_item_panic\", vec!(), tts);\n     base::MacEager::expr(expanded)\n }\n \n pub fn expand_quote_pat<'cx>(cx: &'cx mut ExtCtxt,\n                              sp: Span,\n                              tts: &[ast::TokenTree])\n                              -> Box<base::MacResult+'cx> {\n-    let expanded = expand_parse_call(cx, sp, \"parse_pat\", vec!(), tts);\n+    let expanded = expand_parse_call(cx, sp, \"parse_pat_panic\", vec!(), tts);\n     base::MacEager::expr(expanded)\n }\n \n pub fn expand_quote_arm(cx: &mut ExtCtxt,\n                         sp: Span,\n                         tts: &[ast::TokenTree])\n                         -> Box<base::MacResult+'static> {\n-    let expanded = expand_parse_call(cx, sp, \"parse_arm\", vec!(), tts);\n+    let expanded = expand_parse_call(cx, sp, \"parse_arm_panic\", vec!(), tts);\n     base::MacEager::expr(expanded)\n }\n \n pub fn expand_quote_ty(cx: &mut ExtCtxt,\n                        sp: Span,\n                        tts: &[ast::TokenTree])\n                        -> Box<base::MacResult+'static> {\n-    let expanded = expand_parse_call(cx, sp, \"parse_ty\", vec!(), tts);\n+    let expanded = expand_parse_call(cx, sp, \"parse_ty_panic\", vec!(), tts);\n     base::MacEager::expr(expanded)\n }\n \n pub fn expand_quote_stmt(cx: &mut ExtCtxt,\n                          sp: Span,\n                          tts: &[ast::TokenTree])\n                          -> Box<base::MacResult+'static> {\n-    let expanded = expand_parse_call(cx, sp, \"parse_stmt\", vec!(), tts);\n+    let expanded = expand_parse_call(cx, sp, \"parse_stmt_panic\", vec!(), tts);\n     base::MacEager::expr(expanded)\n }\n \n pub fn expand_quote_attr(cx: &mut ExtCtxt,\n                          sp: Span,\n                          tts: &[ast::TokenTree])\n                          -> Box<base::MacResult+'static> {\n-    let expanded = expand_parse_call(cx, sp, \"parse_attribute\",\n+    let expanded = expand_parse_call(cx, sp, \"parse_attribute_panic\",\n                                     vec!(cx.expr_bool(sp, true)), tts);\n \n     base::MacEager::expr(expanded)"}, {"sha": "5df2478d4875809c8fe5c6e381ba44658952913f", "filename": "src/libsyntax/parse/attr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e7d3ae606ed496144554dae499b69207da3b09c5/src%2Flibsyntax%2Fparse%2Fattr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7d3ae606ed496144554dae499b69207da3b09c5/src%2Flibsyntax%2Fparse%2Fattr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fattr.rs?ref=e7d3ae606ed496144554dae499b69207da3b09c5", "patch": "@@ -51,7 +51,7 @@ impl<'a> Parser<'a> {\n     ///\n     /// If permit_inner is true, then a leading `!` indicates an inner\n     /// attribute\n-    fn parse_attribute(&mut self, permit_inner: bool) -> PResult<ast::Attribute> {\n+    pub fn parse_attribute(&mut self, permit_inner: bool) -> PResult<ast::Attribute> {\n         debug!(\"parse_attributes: permit_inner={:?} self.token={:?}\",\n                permit_inner, self.token);\n         let (span, value, mut style) = match self.token {"}, {"sha": "570934a5bff68bc736699233cb7a243016f27661", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/e7d3ae606ed496144554dae499b69207da3b09c5/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7d3ae606ed496144554dae499b69207da3b09c5/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=e7d3ae606ed496144554dae499b69207da3b09c5", "patch": "@@ -360,30 +360,34 @@ impl<'a> Parser<'a> {\n     // Panicing fns (for now!)\n     // These functions are used by the quote_*!() syntax extensions, but shouldn't\n     // be used otherwise.\n-    pub fn parse_expr(&mut self) -> P<Expr> {\n+    pub fn parse_expr_panic(&mut self) -> P<Expr> {\n         panictry!(self.parse_expr_nopanic())\n     }\n \n-    pub fn parse_item(&mut self) -> Option<P<Item>> {\n+    pub fn parse_item_panic(&mut self) -> Option<P<Item>> {\n         panictry!(self.parse_item_nopanic())\n     }\n \n-    pub fn parse_pat(&mut self) -> P<Pat> {\n+    pub fn parse_pat_panic(&mut self) -> P<Pat> {\n         panictry!(self.parse_pat_nopanic())\n     }\n \n-    pub fn parse_arm(&mut self) -> Arm {\n+    pub fn parse_arm_panic(&mut self) -> Arm {\n         panictry!(self.parse_arm_nopanic())\n     }\n \n-    pub fn parse_ty(&mut self) -> P<Ty> {\n+    pub fn parse_ty_panic(&mut self) -> P<Ty> {\n         panictry!(self.parse_ty_nopanic())\n     }\n \n-    pub fn parse_stmt(&mut self) -> Option<P<Stmt>> {\n+    pub fn parse_stmt_panic(&mut self) -> Option<P<Stmt>> {\n         panictry!(self.parse_stmt_nopanic())\n     }\n \n+    pub fn parse_attribute_panic(&mut self, permit_inner: bool) -> ast::Attribute {\n+        panictry!(self.parse_attribute(permit_inner))\n+    }\n+\n     /// Convert a token to a string using self's reader\n     pub fn token_to_string(token: &token::Token) -> String {\n         pprust::token_to_string(token)"}, {"sha": "0bb5c05aaf5bac88280fe41f9a2e19446db50ed6", "filename": "src/test/auxiliary/macro_crate_test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e7d3ae606ed496144554dae499b69207da3b09c5/src%2Ftest%2Fauxiliary%2Fmacro_crate_test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7d3ae606ed496144554dae499b69207da3b09c5/src%2Ftest%2Fauxiliary%2Fmacro_crate_test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fmacro_crate_test.rs?ref=e7d3ae606ed496144554dae499b69207da3b09c5", "patch": "@@ -54,7 +54,7 @@ fn expand_identity(cx: &mut ExtCtxt, _span: Span, tts: &[TokenTree])\n     // Parse an expression and emit it unchanged.\n     let mut parser = parse::new_parser_from_tts(cx.parse_sess(),\n         cx.cfg(), tts.to_vec());\n-    let expr = parser.parse_expr();\n+    let expr = parser.parse_expr_panic();\n     MacEager::expr(quote_expr!(&mut *cx, $expr))\n }\n "}]}