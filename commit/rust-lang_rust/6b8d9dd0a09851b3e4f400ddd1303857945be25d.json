{"sha": "6b8d9dd0a09851b3e4f400ddd1303857945be25d", "node_id": "C_kwDOAAsO6NoAKDZiOGQ5ZGQwYTA5ODUxYjNlNGY0MDBkZGQxMzAzODU3OTQ1YmUyNWQ", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-11-05T13:48:30Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-11-05T13:48:30Z"}, "message": "Auto merge of #103831 - chenyukang:yukang/fix-103751-ice, r=nagisa\n\nFix capacity overflow issue during transmutability check\n\nFixes #103751", "tree": {"sha": "41c63f339061a02a324140c7be0ccca383c7f0a2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/41c63f339061a02a324140c7be0ccca383c7f0a2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6b8d9dd0a09851b3e4f400ddd1303857945be25d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6b8d9dd0a09851b3e4f400ddd1303857945be25d", "html_url": "https://github.com/rust-lang/rust/commit/6b8d9dd0a09851b3e4f400ddd1303857945be25d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6b8d9dd0a09851b3e4f400ddd1303857945be25d/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b0f3940c35d565399dccf8c79f38147b40f2724a", "url": "https://api.github.com/repos/rust-lang/rust/commits/b0f3940c35d565399dccf8c79f38147b40f2724a", "html_url": "https://github.com/rust-lang/rust/commit/b0f3940c35d565399dccf8c79f38147b40f2724a"}, {"sha": "749afe57c3e16667128c3e983166d7a69d03a3dd", "url": "https://api.github.com/repos/rust-lang/rust/commits/749afe57c3e16667128c3e983166d7a69d03a3dd", "html_url": "https://github.com/rust-lang/rust/commit/749afe57c3e16667128c3e983166d7a69d03a3dd"}], "stats": {"total": 57, "additions": 55, "deletions": 2}, "files": [{"sha": "30e20ba6f586899cc1dd6eff3a12d3cb8b3da9b2", "filename": "compiler/rustc_transmute/src/layout/tree.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6b8d9dd0a09851b3e4f400ddd1303857945be25d/compiler%2Frustc_transmute%2Fsrc%2Flayout%2Ftree.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b8d9dd0a09851b3e4f400ddd1303857945be25d/compiler%2Frustc_transmute%2Fsrc%2Flayout%2Ftree.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_transmute%2Fsrc%2Flayout%2Ftree.rs?ref=6b8d9dd0a09851b3e4f400ddd1303857945be25d", "patch": "@@ -436,8 +436,8 @@ pub(crate) mod rustc {\n \n             // finally: padding\n             let padding_span = trace_span!(\"adding trailing padding\").entered();\n-            let padding_needed = layout_summary.total_size - variant_layout.size();\n-            if padding_needed > 0 {\n+            if layout_summary.total_size > variant_layout.size() {\n+                let padding_needed = layout_summary.total_size - variant_layout.size();\n                 tree = tree.then(Self::padding(padding_needed));\n             };\n             drop(padding_span);"}, {"sha": "a1be7075a8a038c7154f2e9c12deae70801bb912", "filename": "src/test/ui/transmute/transmute-padding-ice.rs", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/6b8d9dd0a09851b3e4f400ddd1303857945be25d/src%2Ftest%2Fui%2Ftransmute%2Ftransmute-padding-ice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b8d9dd0a09851b3e4f400ddd1303857945be25d/src%2Ftest%2Fui%2Ftransmute%2Ftransmute-padding-ice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftransmute%2Ftransmute-padding-ice.rs?ref=6b8d9dd0a09851b3e4f400ddd1303857945be25d", "patch": "@@ -0,0 +1,29 @@\n+#![crate_type = \"lib\"]\n+#![feature(transmutability)]\n+#![allow(dead_code)]\n+\n+mod assert {\n+    use std::mem::{Assume, BikeshedIntrinsicFrom};\n+    pub struct Context;\n+\n+    pub fn is_maybe_transmutable<Src, Dst>()\n+    where\n+        Dst: BikeshedIntrinsicFrom<\n+            Src,\n+            Context,\n+            { Assume { alignment: true, lifetimes: true, safety: true, validity: true } },\n+        >,\n+    {\n+    }\n+}\n+\n+fn test() {\n+    #[repr(C, align(2))]\n+    struct A(u8, u8);\n+\n+    #[repr(C)]\n+    struct B(u8, u8);\n+\n+    assert::is_maybe_transmutable::<B, A>();\n+    //~^ ERROR cannot be safely transmuted\n+}"}, {"sha": "c9233890f7aa9b4fc70fc4e0fe3122fb64ee0d11", "filename": "src/test/ui/transmute/transmute-padding-ice.stderr", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/6b8d9dd0a09851b3e4f400ddd1303857945be25d/src%2Ftest%2Fui%2Ftransmute%2Ftransmute-padding-ice.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6b8d9dd0a09851b3e4f400ddd1303857945be25d/src%2Ftest%2Fui%2Ftransmute%2Ftransmute-padding-ice.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftransmute%2Ftransmute-padding-ice.stderr?ref=6b8d9dd0a09851b3e4f400ddd1303857945be25d", "patch": "@@ -0,0 +1,24 @@\n+error[E0277]: `B` cannot be safely transmuted into `A` in the defining scope of `assert::Context`.\n+  --> $DIR/transmute-padding-ice.rs:27:40\n+   |\n+LL |     assert::is_maybe_transmutable::<B, A>();\n+   |                                        ^ `B` cannot be safely transmuted into `A` in the defining scope of `assert::Context`.\n+   |\n+   = help: the trait `BikeshedIntrinsicFrom<B, assert::Context, Assume { alignment: true, lifetimes: true, safety: true, validity: true }>` is not implemented for `A`\n+note: required by a bound in `is_maybe_transmutable`\n+  --> $DIR/transmute-padding-ice.rs:11:14\n+   |\n+LL |       pub fn is_maybe_transmutable<Src, Dst>()\n+   |              --------------------- required by a bound in this\n+LL |       where\n+LL |           Dst: BikeshedIntrinsicFrom<\n+   |  ______________^\n+LL | |             Src,\n+LL | |             Context,\n+LL | |             { Assume { alignment: true, lifetimes: true, safety: true, validity: true } },\n+LL | |         >,\n+   | |_________^ required by this bound in `is_maybe_transmutable`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0277`."}]}