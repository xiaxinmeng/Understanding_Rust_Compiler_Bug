{"sha": "cf8f3796578b5423d9465ff0d1e8327668753cca", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNmOGYzNzk2NTc4YjU0MjNkOTQ2NWZmMGQxZTgzMjc2Njg3NTNjY2E=", "commit": {"author": {"name": "Victor Korkin", "email": "victor.korkin@gmail.com", "date": "2018-05-28T16:31:55Z"}, "committer": {"name": "Victor Korkin", "email": "victor.korkin@gmail.com", "date": "2018-05-28T16:31:55Z"}, "message": "Add lint on cast Fn to numerical.", "tree": {"sha": "98168e82b2d9a83fe43683d1aade1f6dcdd71c03", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/98168e82b2d9a83fe43683d1aade1f6dcdd71c03"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cf8f3796578b5423d9465ff0d1e8327668753cca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cf8f3796578b5423d9465ff0d1e8327668753cca", "html_url": "https://github.com/rust-lang/rust/commit/cf8f3796578b5423d9465ff0d1e8327668753cca", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cf8f3796578b5423d9465ff0d1e8327668753cca/comments", "author": {"login": "VKlayd", "id": 2850547, "node_id": "MDQ6VXNlcjI4NTA1NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/2850547?v=4", "gravatar_id": "", "url": "https://api.github.com/users/VKlayd", "html_url": "https://github.com/VKlayd", "followers_url": "https://api.github.com/users/VKlayd/followers", "following_url": "https://api.github.com/users/VKlayd/following{/other_user}", "gists_url": "https://api.github.com/users/VKlayd/gists{/gist_id}", "starred_url": "https://api.github.com/users/VKlayd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/VKlayd/subscriptions", "organizations_url": "https://api.github.com/users/VKlayd/orgs", "repos_url": "https://api.github.com/users/VKlayd/repos", "events_url": "https://api.github.com/users/VKlayd/events{/privacy}", "received_events_url": "https://api.github.com/users/VKlayd/received_events", "type": "User", "site_admin": false}, "committer": {"login": "VKlayd", "id": 2850547, "node_id": "MDQ6VXNlcjI4NTA1NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/2850547?v=4", "gravatar_id": "", "url": "https://api.github.com/users/VKlayd", "html_url": "https://github.com/VKlayd", "followers_url": "https://api.github.com/users/VKlayd/followers", "following_url": "https://api.github.com/users/VKlayd/following{/other_user}", "gists_url": "https://api.github.com/users/VKlayd/gists{/gist_id}", "starred_url": "https://api.github.com/users/VKlayd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/VKlayd/subscriptions", "organizations_url": "https://api.github.com/users/VKlayd/orgs", "repos_url": "https://api.github.com/users/VKlayd/repos", "events_url": "https://api.github.com/users/VKlayd/events{/privacy}", "received_events_url": "https://api.github.com/users/VKlayd/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fc008aa14c59a0b0cb0a1e60fe836f83019a722a", "url": "https://api.github.com/repos/rust-lang/rust/commits/fc008aa14c59a0b0cb0a1e60fe836f83019a722a", "html_url": "https://github.com/rust-lang/rust/commit/fc008aa14c59a0b0cb0a1e60fe836f83019a722a"}], "stats": {"total": 36, "additions": 36, "deletions": 0}, "files": [{"sha": "f5cbcfb6b0082c57d3f04766ca88b080eaa360af", "filename": "clippy_lints/src/types.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/cf8f3796578b5423d9465ff0d1e8327668753cca/clippy_lints%2Fsrc%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf8f3796578b5423d9465ff0d1e8327668753cca/clippy_lints%2Fsrc%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftypes.rs?ref=cf8f3796578b5423d9465ff0d1e8327668753cca", "patch": "@@ -975,6 +975,22 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for CastPass {\n                     },\n                 }\n             }\n+\n+            match &cast_from.sty {\n+                ty::TyFnDef(..) |\n+                ty::TyFnPtr(..) => {\n+                    if cast_to.is_numeric() && cast_to.sty != ty::TyUint(UintTy::Usize){\n+                        span_lint(\n+                            cx,\n+                            UNNECESSARY_CAST,\n+                            expr.span,\n+                            \"casting Fn not to usize may truncate the value\",\n+                        );\n+                    }\n+                }\n+                _ => ()\n+            }\n+\n             if_chain!{\n                 if let ty::TyRawPtr(from_ptr_ty) = &cast_from.sty;\n                 if let ty::TyRawPtr(to_ptr_ty) = &cast_to.sty;"}, {"sha": "250307e54b789c6afa65cfde340250bbfe19d6f5", "filename": "tests/ui/types_fn_to_int.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/cf8f3796578b5423d9465ff0d1e8327668753cca/tests%2Fui%2Ftypes_fn_to_int.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf8f3796578b5423d9465ff0d1e8327668753cca/tests%2Fui%2Ftypes_fn_to_int.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftypes_fn_to_int.rs?ref=cf8f3796578b5423d9465ff0d1e8327668753cca", "patch": "@@ -0,0 +1,10 @@\n+#![feature(tool_attributes)]\n+enum Foo {\n+    A(usize),\n+    B\n+}\n+\n+fn main() {\n+    let x = Foo::A;\n+    let y = x as i32;\n+}"}, {"sha": "dffcf00830292babb820e194d96b61c69def1c94", "filename": "tests/ui/types_fn_to_int.stderr", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/cf8f3796578b5423d9465ff0d1e8327668753cca/tests%2Fui%2Ftypes_fn_to_int.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cf8f3796578b5423d9465ff0d1e8327668753cca/tests%2Fui%2Ftypes_fn_to_int.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftypes_fn_to_int.stderr?ref=cf8f3796578b5423d9465ff0d1e8327668753cca", "patch": "@@ -0,0 +1,10 @@\n+error: casting Fn not to usize may truncate the value\n+ --> $DIR/types_fn_to_int.rs:9:13\n+  |\n+9 |     let y = x as i32;\n+  |             ^^^^^^^^\n+  |\n+  = note: `-D unnecessary-cast` implied by `-D warnings`\n+\n+error: aborting due to previous error\n+"}]}