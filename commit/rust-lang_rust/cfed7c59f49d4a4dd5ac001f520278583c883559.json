{"sha": "cfed7c59f49d4a4dd5ac001f520278583c883559", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNmZWQ3YzU5ZjQ5ZDRhNGRkNWFjMDAxZjUyMDI3ODU4M2M4ODM1NTk=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2019-02-13T16:16:28Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2019-02-13T16:16:28Z"}, "message": "In `RootConfig::contains`, check against canonicalized version of root\npath since OS may hand us data that uses that rather than the root as\nspecified by the user.", "tree": {"sha": "80bb5890c434c13697b2aa9bfacb9387d5c3924c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/80bb5890c434c13697b2aa9bfacb9387d5c3924c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cfed7c59f49d4a4dd5ac001f520278583c883559", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cfed7c59f49d4a4dd5ac001f520278583c883559", "html_url": "https://github.com/rust-lang/rust/commit/cfed7c59f49d4a4dd5ac001f520278583c883559", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cfed7c59f49d4a4dd5ac001f520278583c883559/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a36e310229f13d6959d6ce95c99b659700cefc9a", "url": "https://api.github.com/repos/rust-lang/rust/commits/a36e310229f13d6959d6ce95c99b659700cefc9a", "html_url": "https://github.com/rust-lang/rust/commit/a36e310229f13d6959d6ce95c99b659700cefc9a"}], "stats": {"total": 17, "additions": 15, "deletions": 2}, "files": [{"sha": "2c3c35f28e66ae410a9648bb56fa11f23465a888", "filename": "crates/ra_vfs/src/lib.rs", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/cfed7c59f49d4a4dd5ac001f520278583c883559/crates%2Fra_vfs%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cfed7c59f49d4a4dd5ac001f520278583c883559/crates%2Fra_vfs%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_vfs%2Fsrc%2Flib.rs?ref=cfed7c59f49d4a4dd5ac001f520278583c883559", "patch": "@@ -42,6 +42,8 @@ impl_arena_id!(VfsRoot);\n /// returns `true` iff path belongs to the source root\n pub(crate) struct RootConfig {\n     root: PathBuf,\n+    // result of `root.canonicalize()` if that differs from `root`; `None` otherwise.\n+    canonical_root: Option<PathBuf>,\n     excluded_dirs: Vec<PathBuf>,\n }\n \n@@ -58,15 +60,26 @@ impl std::ops::Deref for Roots {\n \n impl RootConfig {\n     fn new(root: PathBuf, excluded_dirs: Vec<PathBuf>) -> RootConfig {\n-        RootConfig { root, excluded_dirs }\n+        let mut canonical_root = root.canonicalize().ok();\n+        if Some(&root) == canonical_root.as_ref() {\n+            canonical_root = None;\n+        }\n+        RootConfig { root, canonical_root, excluded_dirs }\n     }\n     /// Checks if root contains a path and returns a root-relative path.\n     pub(crate) fn contains(&self, path: &Path) -> Option<RelativePathBuf> {\n         // First, check excluded dirs\n         if self.excluded_dirs.iter().any(|it| path.starts_with(it)) {\n             return None;\n         }\n-        let rel_path = path.strip_prefix(&self.root).ok()?;\n+        let rel_path = path.strip_prefix(&self.root)\n+            .or_else(|err_payload| {\n+                self.canonical_root\n+                    .as_ref()\n+                    .map_or(Err(err_payload),\n+                            |canonical_root| path.strip_prefix(canonical_root))\n+            })\n+            .ok()?;\n         let rel_path = RelativePathBuf::from_path(rel_path).ok()?;\n \n         // Ignore some common directories."}]}