{"sha": "a2baba09a2d86db7915b899ea631c427bfe8c4e8", "node_id": "C_kwDOAAsO6NoAKGEyYmFiYTA5YTJkODZkYjc5MTViODk5ZWE2MzFjNDI3YmZlOGM0ZTg", "commit": {"author": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2023-03-02T12:00:26Z"}, "committer": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2023-03-02T12:00:26Z"}, "message": "Fill-in tracking issue for `feature(\"atomic_from_ptr\")`", "tree": {"sha": "901b80bc1b03b23d355a38506967ec0ee00db919", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/901b80bc1b03b23d355a38506967ec0ee00db919"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a2baba09a2d86db7915b899ea631c427bfe8c4e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a2baba09a2d86db7915b899ea631c427bfe8c4e8", "html_url": "https://github.com/rust-lang/rust/commit/a2baba09a2d86db7915b899ea631c427bfe8c4e8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a2baba09a2d86db7915b899ea631c427bfe8c4e8/comments", "author": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4a2c555904ad3ea89c5b4385ec99ade1378f3e7f", "url": "https://api.github.com/repos/rust-lang/rust/commits/4a2c555904ad3ea89c5b4385ec99ade1378f3e7f", "html_url": "https://github.com/rust-lang/rust/commit/4a2c555904ad3ea89c5b4385ec99ade1378f3e7f"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "040a59184a64639d675d63dfada5d6a20a42781e", "filename": "library/core/src/sync/atomic.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/a2baba09a2d86db7915b899ea631c427bfe8c4e8/library%2Fcore%2Fsrc%2Fsync%2Fatomic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2baba09a2d86db7915b899ea631c427bfe8c4e8/library%2Fcore%2Fsrc%2Fsync%2Fatomic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fsync%2Fatomic.rs?ref=a2baba09a2d86db7915b899ea631c427bfe8c4e8", "patch": "@@ -342,8 +342,8 @@ impl AtomicBool {\n     /// * The value behind `ptr` must not be accessed through non-atomic operations for the whole lifetime `'a`.\n     ///\n     /// [valid]: crate::ptr#safety\n-    #[unstable(feature = \"atomic_from_ptr\", issue = \"none\")]\n-    #[rustc_const_unstable(feature = \"atomic_from_ptr\", issue = \"none\")]\n+    #[unstable(feature = \"atomic_from_ptr\", issue = \"108652\")]\n+    #[rustc_const_unstable(feature = \"atomic_from_ptr\", issue = \"108652\")]\n     pub const unsafe fn from_ptr<'a>(ptr: *mut bool) -> &'a AtomicBool {\n         // SAFETY: guaranteed by the caller\n         unsafe { &*ptr.cast() }\n@@ -1098,8 +1098,8 @@ impl<T> AtomicPtr<T> {\n     /// * The value behind `ptr` must not be accessed through non-atomic operations for the whole lifetime `'a`.\n     ///\n     /// [valid]: crate::ptr#safety\n-    #[unstable(feature = \"atomic_from_ptr\", issue = \"none\")]\n-    #[rustc_const_unstable(feature = \"atomic_from_ptr\", issue = \"none\")]\n+    #[unstable(feature = \"atomic_from_ptr\", issue = \"108652\")]\n+    #[rustc_const_unstable(feature = \"atomic_from_ptr\", issue = \"108652\")]\n     pub const unsafe fn from_ptr<'a>(ptr: *mut *mut T) -> &'a AtomicPtr<T> {\n         // SAFETY: guaranteed by the caller\n         unsafe { &*ptr.cast() }\n@@ -2085,8 +2085,8 @@ macro_rules! atomic_int {\n             /// * The value behind `ptr` must not be accessed through non-atomic operations for the whole lifetime `'a`.\n             ///\n             /// [valid]: crate::ptr#safety\n-            #[unstable(feature = \"atomic_from_ptr\", issue = \"none\")]\n-            #[rustc_const_unstable(feature = \"atomic_from_ptr\", issue = \"none\")]\n+            #[unstable(feature = \"atomic_from_ptr\", issue = \"108652\")]\n+            #[rustc_const_unstable(feature = \"atomic_from_ptr\", issue = \"108652\")]\n             pub const unsafe fn from_ptr<'a>(ptr: *mut $int_type) -> &'a $atomic_type {\n                 // SAFETY: guaranteed by the caller\n                 unsafe { &*ptr.cast() }"}]}