{"sha": "1550a2506d1ad6e3810aa806a6fee59ff4aa6074", "node_id": "C_kwDOAAsO6NoAKDE1NTBhMjUwNmQxYWQ2ZTM4MTBhYTgwNmE2ZmVlNTlmZjRhYTYwNzQ", "commit": {"author": {"name": "Tavian Barnes", "email": "tavianator@tavianator.com", "date": "2022-12-14T14:54:55Z"}, "committer": {"name": "Tavian Barnes", "email": "tavianator@tavianator.com", "date": "2022-12-14T15:03:42Z"}, "message": "fs/tests: Explicitly kill the zombie rather than sleeping until it dies", "tree": {"sha": "32807c0b354c7b19bf456b871606cd6029f64be2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/32807c0b354c7b19bf456b871606cd6029f64be2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1550a2506d1ad6e3810aa806a6fee59ff4aa6074", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1550a2506d1ad6e3810aa806a6fee59ff4aa6074", "html_url": "https://github.com/rust-lang/rust/commit/1550a2506d1ad6e3810aa806a6fee59ff4aa6074", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1550a2506d1ad6e3810aa806a6fee59ff4aa6074/comments", "author": {"login": "tavianator", "id": 1692591, "node_id": "MDQ6VXNlcjE2OTI1OTE=", "avatar_url": "https://avatars.githubusercontent.com/u/1692591?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tavianator", "html_url": "https://github.com/tavianator", "followers_url": "https://api.github.com/users/tavianator/followers", "following_url": "https://api.github.com/users/tavianator/following{/other_user}", "gists_url": "https://api.github.com/users/tavianator/gists{/gist_id}", "starred_url": "https://api.github.com/users/tavianator/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tavianator/subscriptions", "organizations_url": "https://api.github.com/users/tavianator/orgs", "repos_url": "https://api.github.com/users/tavianator/repos", "events_url": "https://api.github.com/users/tavianator/events{/privacy}", "received_events_url": "https://api.github.com/users/tavianator/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tavianator", "id": 1692591, "node_id": "MDQ6VXNlcjE2OTI1OTE=", "avatar_url": "https://avatars.githubusercontent.com/u/1692591?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tavianator", "html_url": "https://github.com/tavianator", "followers_url": "https://api.github.com/users/tavianator/followers", "following_url": "https://api.github.com/users/tavianator/following{/other_user}", "gists_url": "https://api.github.com/users/tavianator/gists{/gist_id}", "starred_url": "https://api.github.com/users/tavianator/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tavianator/subscriptions", "organizations_url": "https://api.github.com/users/tavianator/orgs", "repos_url": "https://api.github.com/users/tavianator/repos", "events_url": "https://api.github.com/users/tavianator/events{/privacy}", "received_events_url": "https://api.github.com/users/tavianator/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ba4dd464f5548aa3180dbe1e8144062221d6463d", "url": "https://api.github.com/repos/rust-lang/rust/commits/ba4dd464f5548aa3180dbe1e8144062221d6463d", "html_url": "https://github.com/rust-lang/rust/commit/ba4dd464f5548aa3180dbe1e8144062221d6463d"}], "stats": {"total": 16, "additions": 9, "deletions": 7}, "files": [{"sha": "5c6a16c4bb16c847305625a3e90df0114416fd24", "filename": "library/std/src/fs/tests.rs", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/1550a2506d1ad6e3810aa806a6fee59ff4aa6074/library%2Fstd%2Fsrc%2Ffs%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1550a2506d1ad6e3810aa806a6fee59ff4aa6074/library%2Fstd%2Fsrc%2Ffs%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Ffs%2Ftests.rs?ref=1550a2506d1ad6e3810aa806a6fee59ff4aa6074", "patch": "@@ -1572,16 +1572,18 @@ fn test_eq_direntry_metadata() {\n #[test]\n #[cfg(target_os = \"linux\")]\n fn test_read_dir_infinite_loop() {\n+    use crate::io::ErrorKind;\n     use crate::process::Command;\n-    use crate::thread::sleep;\n-    use crate::time::Duration;\n \n-    // Create a child process\n-    let Ok(child) = Command::new(\"echo\").spawn() else { return };\n+    // Create a zombie child process\n+    let Ok(mut child) = Command::new(\"echo\").spawn() else { return };\n \n-    // Wait for it to (probably) become a zombie.  We can't use wait() because\n-    // that will reap the process.\n-    sleep(Duration::from_millis(10));\n+    // Make sure the process is (un)dead\n+    match child.kill() {\n+        // InvalidInput means the child already exited\n+        Err(e) if e.kind() != ErrorKind::InvalidInput => return,\n+        _ => {}\n+    }\n \n     // open() on this path will succeed, but readdir() will fail\n     let id = child.id();"}]}