{"sha": "044dc6e8dd435eb9c3b6f1dc0c85d0a6e70dae82", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA0NGRjNmU4ZGQ0MzVlYjljM2I2ZjFkYzBjODVkMGE2ZTcwZGFlODI=", "commit": {"author": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2020-03-17T23:08:28Z"}, "committer": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2020-03-18T03:27:49Z"}, "message": "Update const-eval tests", "tree": {"sha": "465296342b53f6fe1ad1f0ab3d4a5f40e703532d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/465296342b53f6fe1ad1f0ab3d4a5f40e703532d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/044dc6e8dd435eb9c3b6f1dc0c85d0a6e70dae82", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/044dc6e8dd435eb9c3b6f1dc0c85d0a6e70dae82", "html_url": "https://github.com/rust-lang/rust/commit/044dc6e8dd435eb9c3b6f1dc0c85d0a6e70dae82", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/044dc6e8dd435eb9c3b6f1dc0c85d0a6e70dae82/comments", "author": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e15c48672850c0a0b7936df3dfa861bfa34db4bd", "url": "https://api.github.com/repos/rust-lang/rust/commits/e15c48672850c0a0b7936df3dfa861bfa34db4bd", "html_url": "https://github.com/rust-lang/rust/commit/e15c48672850c0a0b7936df3dfa861bfa34db4bd"}], "stats": {"total": 116, "additions": 46, "deletions": 70}, "files": [{"sha": "c8de259354eac03f0d79f73d45b5a4a2bbe79238", "filename": "src/test/ui/consts/const-eval/infinite_loop.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/044dc6e8dd435eb9c3b6f1dc0c85d0a6e70dae82/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Finfinite_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/044dc6e8dd435eb9c3b6f1dc0c85d0a6e70dae82/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Finfinite_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Finfinite_loop.rs?ref=044dc6e8dd435eb9c3b6f1dc0c85d0a6e70dae82", "patch": "@@ -2,7 +2,6 @@ fn main() {\n     // Tests the Collatz conjecture with an incorrect base case (0 instead of 1).\n     // The value of `n` will loop indefinitely (4 - 2 - 1 - 4).\n     let _ = [(); {\n-        //~^ WARNING Constant evaluating a complex constant, this might take some time\n         let mut n = 113383; // #20 in https://oeis.org/A006884\n         while n != 0 {\n         //~^ ERROR `while` is not allowed in a `const`"}, {"sha": "9b56457ea5f5743dcd222abeff2171cc15ebe435", "filename": "src/test/ui/consts/const-eval/infinite_loop.stderr", "status": "modified", "additions": 4, "deletions": 17, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/044dc6e8dd435eb9c3b6f1dc0c85d0a6e70dae82/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Finfinite_loop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/044dc6e8dd435eb9c3b6f1dc0c85d0a6e70dae82/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Finfinite_loop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Finfinite_loop.stderr?ref=044dc6e8dd435eb9c3b6f1dc0c85d0a6e70dae82", "patch": "@@ -1,5 +1,5 @@\n error[E0658]: `while` is not allowed in a `const`\n-  --> $DIR/infinite_loop.rs:7:9\n+  --> $DIR/infinite_loop.rs:6:9\n    |\n LL | /         while n != 0 {\n LL | |\n@@ -14,32 +14,19 @@ LL | |         }\n    = help: add `#![feature(const_if_match)]` to the crate attributes to enable\n \n error[E0658]: `if` is not allowed in a `const`\n-  --> $DIR/infinite_loop.rs:9:17\n+  --> $DIR/infinite_loop.rs:8:17\n    |\n LL |             n = if n % 2 == 0 { n/2 } else { 3*n + 1 };\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #49146 <https://github.com/rust-lang/rust/issues/49146> for more information\n    = help: add `#![feature(const_if_match)]` to the crate attributes to enable\n \n-warning: Constant evaluating a complex constant, this might take some time\n-  --> $DIR/infinite_loop.rs:4:18\n-   |\n-LL |       let _ = [(); {\n-   |  __________________^\n-LL | |\n-LL | |         let mut n = 113383; // #20 in https://oeis.org/A006884\n-LL | |         while n != 0 {\n-...  |\n-LL | |         n\n-LL | |     }];\n-   | |_____^\n-\n error[E0080]: evaluation of constant value failed\n-  --> $DIR/infinite_loop.rs:9:20\n+  --> $DIR/infinite_loop.rs:8:20\n    |\n LL |             n = if n % 2 == 0 { n/2 } else { 3*n + 1 };\n-   |                    ^^^^^^^^^^ duplicate interpreter state observed here, const evaluation will never terminate\n+   |                    ^^^^^^^^^^ exceeded interpreter time limit\n \n error: aborting due to 3 previous errors\n "}, {"sha": "869f0b981af7d881e4dce06fc6f4cd9fe531b727", "filename": "src/test/ui/consts/const-eval/issue-52475.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/044dc6e8dd435eb9c3b6f1dc0c85d0a6e70dae82/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-52475.rs", "raw_url": "https://github.com/rust-lang/rust/raw/044dc6e8dd435eb9c3b6f1dc0c85d0a6e70dae82/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-52475.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-52475.rs?ref=044dc6e8dd435eb9c3b6f1dc0c85d0a6e70dae82", "patch": "@@ -1,6 +1,5 @@\n fn main() {\n     let _ = [(); {\n-        //~^ WARNING Constant evaluating a complex constant, this might take some time\n         let mut x = &0;\n         let mut n = 0;\n         while n < 5 {"}, {"sha": "8d6168a7f86938db44208b851d459fde38f3be7b", "filename": "src/test/ui/consts/const-eval/issue-52475.stderr", "status": "modified", "additions": 3, "deletions": 16, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/044dc6e8dd435eb9c3b6f1dc0c85d0a6e70dae82/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-52475.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/044dc6e8dd435eb9c3b6f1dc0c85d0a6e70dae82/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-52475.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-52475.stderr?ref=044dc6e8dd435eb9c3b6f1dc0c85d0a6e70dae82", "patch": "@@ -1,5 +1,5 @@\n error[E0658]: `while` is not allowed in a `const`\n-  --> $DIR/issue-52475.rs:6:9\n+  --> $DIR/issue-52475.rs:5:9\n    |\n LL | /         while n < 5 {\n LL | |\n@@ -12,24 +12,11 @@ LL | |         }\n    = help: add `#![feature(const_loop)]` to the crate attributes to enable\n    = help: add `#![feature(const_if_match)]` to the crate attributes to enable\n \n-warning: Constant evaluating a complex constant, this might take some time\n-  --> $DIR/issue-52475.rs:2:18\n-   |\n-LL |       let _ = [(); {\n-   |  __________________^\n-LL | |\n-LL | |         let mut x = &0;\n-LL | |         let mut n = 0;\n-...  |\n-LL | |         0\n-LL | |     }];\n-   | |_____^\n-\n error[E0080]: evaluation of constant value failed\n-  --> $DIR/issue-52475.rs:8:17\n+  --> $DIR/issue-52475.rs:7:17\n    |\n LL |             n = (n + 1) % 5;\n-   |                 ^^^^^^^^^^^ duplicate interpreter state observed here, const evaluation will never terminate\n+   |                 ^^^^^^^^^^^ exceeded interpreter time limit\n \n error: aborting due to 2 previous errors\n "}, {"sha": "34abcdf08dae0e2cf6159f5a3af2e04ae2b8b79a", "filename": "src/test/ui/consts/const_limit/const_eval_limit_not_reached.rs", "status": "modified", "additions": 14, "deletions": 8, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/044dc6e8dd435eb9c3b6f1dc0c85d0a6e70dae82/src%2Ftest%2Fui%2Fconsts%2Fconst_limit%2Fconst_eval_limit_not_reached.rs", "raw_url": "https://github.com/rust-lang/rust/raw/044dc6e8dd435eb9c3b6f1dc0c85d0a6e70dae82/src%2Ftest%2Fui%2Fconsts%2Fconst_limit%2Fconst_eval_limit_not_reached.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst_limit%2Fconst_eval_limit_not_reached.rs?ref=044dc6e8dd435eb9c3b6f1dc0c85d0a6e70dae82", "patch": "@@ -1,15 +1,21 @@\n // check-pass\n+\n #![feature(const_eval_limit)]\n-#![const_eval_limit=\"1000\"]\n+#![feature(const_loop, const_if_match)]\n \n-const CONSTANT: usize = limit();\n+// This needs to be higher than the number of loop iterations since each pass through the loop may\n+// hit more than one terminator.\n+#![const_eval_limit=\"4000\"]\n \n-fn main() {\n-    assert_eq!(CONSTANT, 1764);\n-}\n+const X: usize = {\n+    let mut x = 0;\n+    while x != 1000 {\n+        x += 1;\n+    }\n \n-const fn limit() -> usize {\n-    let x = 42;\n+    x\n+};\n \n-    x * 42\n+fn main() {\n+    assert_eq!(X, 1000);\n }"}, {"sha": "b45aca0b13e42f51a1f2f7299555cfdb76530cab", "filename": "src/test/ui/consts/const_limit/const_eval_limit_reached.rs", "status": "modified", "additions": 12, "deletions": 15, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/044dc6e8dd435eb9c3b6f1dc0c85d0a6e70dae82/src%2Ftest%2Fui%2Fconsts%2Fconst_limit%2Fconst_eval_limit_reached.rs", "raw_url": "https://github.com/rust-lang/rust/raw/044dc6e8dd435eb9c3b6f1dc0c85d0a6e70dae82/src%2Ftest%2Fui%2Fconsts%2Fconst_limit%2Fconst_eval_limit_reached.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst_limit%2Fconst_eval_limit_reached.rs?ref=044dc6e8dd435eb9c3b6f1dc0c85d0a6e70dae82", "patch": "@@ -1,21 +1,18 @@\n-// ignore-tidy-linelength\n-// only-x86_64\n-// check-pass\n-// NOTE: We always compile this test with -Copt-level=0 because higher opt-levels\n-//       optimize away the const function\n-// compile-flags:-Copt-level=0\n #![feature(const_eval_limit)]\n-#![const_eval_limit=\"2\"]\n+#![feature(const_loop, const_if_match)]\n \n-const CONSTANT: usize = limit();\n-//~^ WARNING Constant evaluating a complex constant, this might take some time\n+#![const_eval_limit=\"500\"]\n \n-fn main() {\n-    assert_eq!(CONSTANT, 1764);\n-}\n+const X: usize = {\n+    let mut x = 0;\n+    while x != 1000 {\n+        //~^ ERROR any use of this value will cause an error\n+        x += 1;\n+    }\n \n-const fn limit() -> usize { //~ WARNING Constant evaluating a complex constant, this might take some time\n-    let x = 42;\n+    x\n+};\n \n-    x * 42\n+fn main() {\n+    assert_eq!(X, 1000);\n }"}, {"sha": "ca8fbef9072d85ac3d473c5d6dccf5737ca4a385", "filename": "src/test/ui/consts/const_limit/const_eval_limit_reached.stderr", "status": "modified", "additions": 13, "deletions": 12, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/044dc6e8dd435eb9c3b6f1dc0c85d0a6e70dae82/src%2Ftest%2Fui%2Fconsts%2Fconst_limit%2Fconst_eval_limit_reached.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/044dc6e8dd435eb9c3b6f1dc0c85d0a6e70dae82/src%2Ftest%2Fui%2Fconsts%2Fconst_limit%2Fconst_eval_limit_reached.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst_limit%2Fconst_eval_limit_reached.stderr?ref=044dc6e8dd435eb9c3b6f1dc0c85d0a6e70dae82", "patch": "@@ -1,16 +1,17 @@\n-warning: Constant evaluating a complex constant, this might take some time\n-  --> $DIR/const_eval_limit_reached.rs:17:1\n+error: any use of this value will cause an error\n+  --> $DIR/const_eval_limit_reached.rs:8:11\n    |\n-LL | / const fn limit() -> usize {\n-LL | |     let x = 42;\n+LL | / const X: usize = {\n+LL | |     let mut x = 0;\n+LL | |     while x != 1000 {\n+   | |           ^^^^^^^^^ exceeded interpreter time limit\n LL | |\n-LL | |     x * 42\n-LL | | }\n-   | |_^\n-\n-warning: Constant evaluating a complex constant, this might take some time\n-  --> $DIR/const_eval_limit_reached.rs:10:1\n+...  |\n+LL | |     x\n+LL | | };\n+   | |__-\n    |\n-LL | const CONSTANT: usize = limit();\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   = note: `#[deny(const_err)]` on by default\n+\n+error: aborting due to previous error\n "}]}