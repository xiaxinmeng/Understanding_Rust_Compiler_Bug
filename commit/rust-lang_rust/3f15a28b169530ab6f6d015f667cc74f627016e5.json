{"sha": "3f15a28b169530ab6f6d015f667cc74f627016e5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNmMTVhMjhiMTY5NTMwYWI2ZjZkMDE1ZjY2N2NjNzRmNjI3MDE2ZTU=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2012-02-11T17:49:38Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2012-02-11T22:09:52Z"}, "message": "correct fully qualified type names to include the crate; add tests (take 2)\n\nThis reverts commit fc023d91c77f468211ba9f7681b4d2a6469aac74.", "tree": {"sha": "a57fc60bcbde1047ae527c4184f91aa56e99abed", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a57fc60bcbde1047ae527c4184f91aa56e99abed"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3f15a28b169530ab6f6d015f667cc74f627016e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3f15a28b169530ab6f6d015f667cc74f627016e5", "html_url": "https://github.com/rust-lang/rust/commit/3f15a28b169530ab6f6d015f667cc74f627016e5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3f15a28b169530ab6f6d015f667cc74f627016e5/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "13d743093b55dae44772ebdf21194058a33d3bb6", "url": "https://api.github.com/repos/rust-lang/rust/commits/13d743093b55dae44772ebdf21194058a33d3bb6", "html_url": "https://github.com/rust-lang/rust/commit/13d743093b55dae44772ebdf21194058a33d3bb6"}], "stats": {"total": 29, "additions": 27, "deletions": 2}, "files": [{"sha": "6cd78d0b5c44025dd69862408b06da1851e3607e", "filename": "src/comp/metadata/csearch.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3f15a28b169530ab6f6d015f667cc74f627016e5/src%2Fcomp%2Fmetadata%2Fcsearch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f15a28b169530ab6f6d015f667cc74f627016e5/src%2Fcomp%2Fmetadata%2Fcsearch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmetadata%2Fcsearch.rs?ref=3f15a28b169530ab6f6d015f667cc74f627016e5", "patch": "@@ -60,7 +60,8 @@ fn resolve_path(cstore: cstore::cstore, cnum: ast::crate_num,\n fn get_item_path(tcx: ty::ctxt, def: ast::def_id) -> ast_map::path {\n     let cstore = tcx.sess.cstore;\n     let cdata = cstore::get_crate_data(cstore, def.crate);\n-    ret decoder::get_item_path(cdata, def.node);\n+    let path = decoder::get_item_path(cdata, def.node);\n+    [ast_map::path_mod(cdata.name)] + path\n }\n \n fn get_enum_variants(tcx: ty::ctxt, def: ast::def_id) -> [ty::variant_info] {"}, {"sha": "01ad8a3df67076f2ad915fa39e798c24857a4697", "filename": "src/comp/middle/ast_map.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3f15a28b169530ab6f6d015f667cc74f627016e5/src%2Fcomp%2Fmiddle%2Fast_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f15a28b169530ab6f6d015f667cc74f627016e5/src%2Fcomp%2Fmiddle%2Fast_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fast_map.rs?ref=3f15a28b169530ab6f6d015f667cc74f627016e5", "patch": "@@ -17,7 +17,7 @@ fn path_to_str_with_sep(p: path, sep: str) -> str {\n }\n \n fn path_to_str(p: path) -> str {\n-    path_to_str_with_sep(p, \"::\")\n+    \"::\" + path_to_str_with_sep(p, \"::\")\n }\n \n enum ast_node {"}, {"sha": "9a197de565b6cc017f623be1019722dd14622f88", "filename": "src/test/compile-fail/fully-qualified-type-name1.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/3f15a28b169530ab6f6d015f667cc74f627016e5/src%2Ftest%2Fcompile-fail%2Ffully-qualified-type-name1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f15a28b169530ab6f6d015f667cc74f627016e5/src%2Ftest%2Fcompile-fail%2Ffully-qualified-type-name1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffully-qualified-type-name1.rs?ref=3f15a28b169530ab6f6d015f667cc74f627016e5", "patch": "@@ -0,0 +1,7 @@\n+// Test that we use fully-qualified type names in error messages.\n+\n+fn main() {\n+    let x: option<uint>;\n+    x = 5;\n+    //!^ ERROR mismatched types: expected `::core::option::t<uint>`\n+}"}, {"sha": "4b40875ebd18ec93979bc9feb38bdb6ab4fed404", "filename": "src/test/compile-fail/fully-qualified-type-name2.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/3f15a28b169530ab6f6d015f667cc74f627016e5/src%2Ftest%2Fcompile-fail%2Ffully-qualified-type-name2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f15a28b169530ab6f6d015f667cc74f627016e5/src%2Ftest%2Fcompile-fail%2Ffully-qualified-type-name2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffully-qualified-type-name2.rs?ref=3f15a28b169530ab6f6d015f667cc74f627016e5", "patch": "@@ -0,0 +1,17 @@\n+// Test that we use fully-qualified type names in error messages.\n+\n+mod x {\n+    enum foo { }\n+}\n+\n+mod y {\n+    enum foo { }\n+}\n+\n+fn bar(x: x::foo) -> y::foo {\n+    ret x;\n+    //!^ ERROR mismatched types: expected `::y::foo` but found `::x::foo`\n+}\n+\n+fn main() {\n+}"}]}