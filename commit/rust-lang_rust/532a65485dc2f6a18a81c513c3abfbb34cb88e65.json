{"sha": "532a65485dc2f6a18a81c513c3abfbb34cb88e65", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUzMmE2NTQ4NWRjMmY2YTE4YTgxYzUxM2MzYWJmYmIzNGNiODhlNjU=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-04-27T01:48:02Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-04-27T02:01:24Z"}, "message": "rustc: Actually write the optimized bitcode when --save-temps is on", "tree": {"sha": "86ffccb362de2f9e293eebc8d3b9691fc47058c7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/86ffccb362de2f9e293eebc8d3b9691fc47058c7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/532a65485dc2f6a18a81c513c3abfbb34cb88e65", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/532a65485dc2f6a18a81c513c3abfbb34cb88e65", "html_url": "https://github.com/rust-lang/rust/commit/532a65485dc2f6a18a81c513c3abfbb34cb88e65", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/532a65485dc2f6a18a81c513c3abfbb34cb88e65/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8216b5fc10e7c7b0d4e9f40bb4f9fdaaaebf9400", "url": "https://api.github.com/repos/rust-lang/rust/commits/8216b5fc10e7c7b0d4e9f40bb4f9fdaaaebf9400", "html_url": "https://github.com/rust-lang/rust/commit/8216b5fc10e7c7b0d4e9f40bb4f9fdaaaebf9400"}], "stats": {"total": 25, "additions": 13, "deletions": 12}, "files": [{"sha": "a36821a7a6f6960ac0f7a25217193f4947d34133", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 13, "deletions": 12, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/532a65485dc2f6a18a81c513c3abfbb34cb88e65/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/532a65485dc2f6a18a81c513c3abfbb34cb88e65/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=532a65485dc2f6a18a81c513c3abfbb34cb88e65", "patch": "@@ -7110,18 +7110,6 @@ fn run_passes(ModuleRef llmod, bool opt, bool verify, bool save_temps,\n         llvm.LLVMAddStripDeadPrototypesPass(pm.llpm);\n         llvm.LLVMAddDeadTypeEliminationPass(pm.llpm);\n         llvm.LLVMAddConstantMergePass(pm.llpm);\n-\n-        // Generate a post-optimization intermediate file if -save-temps was\n-        // specified.\n-        if (save_temps) {\n-            alt (ot) {\n-                case (output_type_bitcode) { /* nothing to do */ }\n-                case (_) {\n-                    auto filename = mk_intermediate_name(output, \"opt.bc\");\n-                    llvm.LLVMWriteBitcodeToFile(llmod, _str.buf(filename));\n-                }\n-            }\n-        }\n     }\n \n     if (verify) {\n@@ -7140,6 +7128,19 @@ fn run_passes(ModuleRef llmod, bool opt, bool verify, bool save_temps,\n             FileType = LLVMAssemblyFile;\n         }\n \n+        // Write optimized bitcode if --save-temps was on.\n+        if (save_temps) {\n+            alt (ot) {\n+                case (output_type_bitcode) { /* nothing to do */ }\n+                case (_) {\n+                    auto filename = mk_intermediate_name(output, \"opt.bc\");\n+                    llvm.LLVMRunPassManager(pm.llpm, llmod);\n+                    llvm.LLVMWriteBitcodeToFile(llmod, _str.buf(filename));\n+                    pm = mk_pass_manager();\n+                }\n+            }\n+        }\n+\n         llvm.LLVMRustWriteOutputFile(pm.llpm, llmod,\n                                      _str.buf(x86.get_target_triple()),\n                                      _str.buf(output),"}]}