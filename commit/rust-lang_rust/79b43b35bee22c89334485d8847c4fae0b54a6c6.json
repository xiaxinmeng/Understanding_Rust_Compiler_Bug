{"sha": "79b43b35bee22c89334485d8847c4fae0b54a6c6", "node_id": "C_kwDOAAsO6NoAKDc5YjQzYjM1YmVlMjJjODkzMzQ0ODVkODg0N2M0ZmFlMGI1NGE2YzY", "commit": {"author": {"name": "The8472", "email": "git@infinite-source.de", "date": "2021-08-24T21:54:14Z"}, "committer": {"name": "The 8472", "email": "git@infinite-source.de", "date": "2022-03-21T21:29:38Z"}, "message": "move AsIntoIter helper trait and mark it as unsafe", "tree": {"sha": "86d3479b780a8d075cf7e3561743c7c51e17b4f3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/86d3479b780a8d075cf7e3561743c7c51e17b4f3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/79b43b35bee22c89334485d8847c4fae0b54a6c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/79b43b35bee22c89334485d8847c4fae0b54a6c6", "html_url": "https://github.com/rust-lang/rust/commit/79b43b35bee22c89334485d8847c4fae0b54a6c6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/79b43b35bee22c89334485d8847c4fae0b54a6c6/comments", "author": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "committer": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "47a7a07a8b9f9c1b7a2de3de4632e4e261260cf4", "url": "https://api.github.com/repos/rust-lang/rust/commits/47a7a07a8b9f9c1b7a2de3de4632e4e261260cf4", "html_url": "https://github.com/rust-lang/rust/commit/47a7a07a8b9f9c1b7a2de3de4632e4e261260cf4"}], "stats": {"total": 25, "additions": 14, "deletions": 11}, "files": [{"sha": "9849503f546b38965f302d96beb79f819d4cea3b", "filename": "library/alloc/src/collections/binary_heap.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/79b43b35bee22c89334485d8847c4fae0b54a6c6/library%2Falloc%2Fsrc%2Fcollections%2Fbinary_heap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79b43b35bee22c89334485d8847c4fae0b54a6c6/library%2Falloc%2Fsrc%2Fcollections%2Fbinary_heap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fbinary_heap.rs?ref=79b43b35bee22c89334485d8847c4fae0b54a6c6", "patch": "@@ -1416,7 +1416,7 @@ unsafe impl<T> SourceIter for IntoIter<T> {\n #[doc(hidden)]\n unsafe impl<I> InPlaceIterable for IntoIter<I> {}\n \n-impl<I> AsIntoIter for IntoIter<I> {\n+unsafe impl<I> AsIntoIter for IntoIter<I> {\n     type Item = I;\n \n     fn as_into_iter(&mut self) -> &mut vec::IntoIter<Self::Item> {"}, {"sha": "ff7780ee07d6f3c77a24d24f293d0bb4deb4e4e9", "filename": "library/alloc/src/vec/in_place_collect.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/79b43b35bee22c89334485d8847c4fae0b54a6c6/library%2Falloc%2Fsrc%2Fvec%2Fin_place_collect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79b43b35bee22c89334485d8847c4fae0b54a6c6/library%2Falloc%2Fsrc%2Fvec%2Fin_place_collect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fvec%2Fin_place_collect.rs?ref=79b43b35bee22c89334485d8847c4fae0b54a6c6", "patch": "@@ -2,7 +2,7 @@ use core::iter::{InPlaceIterable, SourceIter, TrustedRandomAccessNoCoerce};\n use core::mem::{self, ManuallyDrop};\n use core::ptr::{self};\n \n-use super::{AsIntoIter, InPlaceDrop, SpecFromIter, SpecFromIterNested, Vec};\n+use super::{InPlaceDrop, SpecFromIter, SpecFromIterNested, Vec};\n \n /// Specialization marker for collecting an iterator pipeline into a Vec while reusing the\n /// source allocation, i.e. executing the pipeline in place.\n@@ -154,3 +154,10 @@ where\n         len\n     }\n }\n+\n+// internal helper trait for in-place iteration specialization.\n+#[rustc_specialization_trait]\n+pub(crate) unsafe trait AsIntoIter {\n+    type Item;\n+    fn as_into_iter(&mut self) -> &mut super::IntoIter<Self::Item>;\n+}"}, {"sha": "7cbf3395269ff2e84bcbdc06824ddfd9d064800e", "filename": "library/alloc/src/vec/into_iter.rs", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/79b43b35bee22c89334485d8847c4fae0b54a6c6/library%2Falloc%2Fsrc%2Fvec%2Finto_iter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79b43b35bee22c89334485d8847c4fae0b54a6c6/library%2Falloc%2Fsrc%2Fvec%2Finto_iter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fvec%2Finto_iter.rs?ref=79b43b35bee22c89334485d8847c4fae0b54a6c6", "patch": "@@ -1,3 +1,5 @@\n+#[cfg(not(no_global_oom_handling))]\n+use super::AsIntoIter;\n use crate::alloc::{Allocator, Global};\n use crate::raw_vec::RawVec;\n use core::fmt;\n@@ -338,14 +340,8 @@ unsafe impl<T, A: Allocator> SourceIter for IntoIter<T, A> {\n     }\n }\n \n-// internal helper trait for in-place iteration specialization.\n-#[rustc_specialization_trait]\n-pub(crate) trait AsIntoIter {\n-    type Item;\n-    fn as_into_iter(&mut self) -> &mut IntoIter<Self::Item>;\n-}\n-\n-impl<T> AsIntoIter for IntoIter<T> {\n+#[cfg(not(no_global_oom_handling))]\n+unsafe impl<T> AsIntoIter for IntoIter<T> {\n     type Item = T;\n \n     fn as_into_iter(&mut self) -> &mut IntoIter<Self::Item> {"}, {"sha": "0b305b49d5129bb7dc08d64f394613bdeab4e19a", "filename": "library/alloc/src/vec/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/79b43b35bee22c89334485d8847c4fae0b54a6c6/library%2Falloc%2Fsrc%2Fvec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79b43b35bee22c89334485d8847c4fae0b54a6c6/library%2Falloc%2Fsrc%2Fvec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fvec%2Fmod.rs?ref=79b43b35bee22c89334485d8847c4fae0b54a6c6", "patch": "@@ -96,7 +96,7 @@ mod drain;\n mod cow;\n \n #[cfg(not(no_global_oom_handling))]\n-pub(crate) use self::into_iter::AsIntoIter;\n+pub(crate) use self::in_place_collect::AsIntoIter;\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub use self::into_iter::IntoIter;\n "}]}