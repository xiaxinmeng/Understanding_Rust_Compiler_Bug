{"sha": "21a0c8e9e47942dcbc47f1680d076daeb5629451", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIxYTBjOGU5ZTQ3OTQyZGNiYzQ3ZjE2ODBkMDc2ZGFlYjU2Mjk0NTE=", "commit": {"author": {"name": "Oli Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2021-03-15T11:23:44Z"}, "committer": {"name": "Oli Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2021-03-15T12:06:52Z"}, "message": "s/ConstantSource/ConstantKind/", "tree": {"sha": "3af430d864cd91f1cf4227b1ce16d9931f0d0e9a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3af430d864cd91f1cf4227b1ce16d9931f0d0e9a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/21a0c8e9e47942dcbc47f1680d076daeb5629451", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/21a0c8e9e47942dcbc47f1680d076daeb5629451", "html_url": "https://github.com/rust-lang/rust/commit/21a0c8e9e47942dcbc47f1680d076daeb5629451", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/21a0c8e9e47942dcbc47f1680d076daeb5629451/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6b1dd82162d62fef5fee258b050c96686b5ccbf0", "url": "https://api.github.com/repos/rust-lang/rust/commits/6b1dd82162d62fef5fee258b050c96686b5ccbf0", "html_url": "https://github.com/rust-lang/rust/commit/6b1dd82162d62fef5fee258b050c96686b5ccbf0"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "9d93370b7d0c9d4dd88cf8ee8ce46cc0a1c2ee78", "filename": "src/constant.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/21a0c8e9e47942dcbc47f1680d076daeb5629451/src%2Fconstant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21a0c8e9e47942dcbc47f1680d076daeb5629451/src%2Fconstant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconstant.rs?ref=21a0c8e9e47942dcbc47f1680d076daeb5629451", "patch": "@@ -40,8 +40,8 @@ pub(crate) fn check_constants(fx: &mut FunctionCx<'_, '_, '_>) -> bool {\n     let mut all_constants_ok = true;\n     for constant in &fx.mir.required_consts {\n         let const_ = match fx.monomorphize(constant.literal) {\n-            ConstantSource::Ty(ct) => ct,\n-            ConstantSource::Val(..) => continue,\n+            ConstantKind::Ty(ct) => ct,\n+            ConstantKind::Val(..) => continue,\n         };\n         match const_.val {\n             ConstKind::Value(_) => {}\n@@ -117,8 +117,8 @@ pub(crate) fn codegen_constant<'tcx>(\n     constant: &Constant<'tcx>,\n ) -> CValue<'tcx> {\n     let const_ = match fx.monomorphize(constant.literal) {\n-        ConstantSource::Ty(ct) => ct,\n-        ConstantSource::Val(val, ty) => return codegen_const_value(fx, val, ty),\n+        ConstantKind::Ty(ct) => ct,\n+        ConstantKind::Val(val, ty) => return codegen_const_value(fx, val, ty),\n     };\n     let const_val = match const_.val {\n         ConstKind::Value(const_val) => const_val,\n@@ -427,10 +427,10 @@ pub(crate) fn mir_operand_get_const_val<'tcx>(\n     match operand {\n         Operand::Copy(_) | Operand::Move(_) => None,\n         Operand::Constant(const_) => match const_.literal {\n-            ConstantSource::Ty(const_) => {\n+            ConstantKind::Ty(const_) => {\n                 fx.monomorphize(const_).eval(fx.tcx, ParamEnv::reveal_all()).val.try_to_value()\n             }\n-            ConstantSource::Val(val, _) => Some(val),\n+            ConstantKind::Val(val, _) => Some(val),\n         },\n     }\n }"}]}