{"sha": "59ba386bee974b56b546eb7e8fdec6721ab0d08a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU5YmEzODZiZWU5NzRiNTZiNTQ2ZWI3ZThmZGVjNjcyMWFiMGQwOGE=", "commit": {"author": {"name": "veetaha", "email": "veetaha2@gmail.com", "date": "2020-03-18T20:49:14Z"}, "committer": {"name": "veetaha", "email": "veetaha2@gmail.com", "date": "2020-03-21T21:36:31Z"}, "message": "ra_cargo_watch: log more errors", "tree": {"sha": "047550163eb5b06092586afdef5ceac158d0a9d0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/047550163eb5b06092586afdef5ceac158d0a9d0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/59ba386bee974b56b546eb7e8fdec6721ab0d08a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/59ba386bee974b56b546eb7e8fdec6721ab0d08a", "html_url": "https://github.com/rust-lang/rust/commit/59ba386bee974b56b546eb7e8fdec6721ab0d08a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/59ba386bee974b56b546eb7e8fdec6721ab0d08a/comments", "author": {"login": "Veetaha", "id": 36276403, "node_id": "MDQ6VXNlcjM2Mjc2NDAz", "avatar_url": "https://avatars.githubusercontent.com/u/36276403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veetaha", "html_url": "https://github.com/Veetaha", "followers_url": "https://api.github.com/users/Veetaha/followers", "following_url": "https://api.github.com/users/Veetaha/following{/other_user}", "gists_url": "https://api.github.com/users/Veetaha/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veetaha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veetaha/subscriptions", "organizations_url": "https://api.github.com/users/Veetaha/orgs", "repos_url": "https://api.github.com/users/Veetaha/repos", "events_url": "https://api.github.com/users/Veetaha/events{/privacy}", "received_events_url": "https://api.github.com/users/Veetaha/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veetaha", "id": 36276403, "node_id": "MDQ6VXNlcjM2Mjc2NDAz", "avatar_url": "https://avatars.githubusercontent.com/u/36276403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veetaha", "html_url": "https://github.com/Veetaha", "followers_url": "https://api.github.com/users/Veetaha/followers", "following_url": "https://api.github.com/users/Veetaha/following{/other_user}", "gists_url": "https://api.github.com/users/Veetaha/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veetaha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veetaha/subscriptions", "organizations_url": "https://api.github.com/users/Veetaha/orgs", "repos_url": "https://api.github.com/users/Veetaha/repos", "events_url": "https://api.github.com/users/Veetaha/events{/privacy}", "received_events_url": "https://api.github.com/users/Veetaha/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fdb12f3e0ecf827d10f81ba4dd0824a3bdce1c97", "url": "https://api.github.com/repos/rust-lang/rust/commits/fdb12f3e0ecf827d10f81ba4dd0824a3bdce1c97", "html_url": "https://github.com/rust-lang/rust/commit/fdb12f3e0ecf827d10f81ba4dd0824a3bdce1c97"}], "stats": {"total": 19, "additions": 16, "deletions": 3}, "files": [{"sha": "deb763af95f59e181b760d7829c3cdaa6963853e", "filename": "crates/ra_cargo_watch/src/lib.rs", "status": "modified", "additions": 16, "deletions": 3, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/59ba386bee974b56b546eb7e8fdec6721ab0d08a/crates%2Fra_cargo_watch%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/59ba386bee974b56b546eb7e8fdec6721ab0d08a/crates%2Fra_cargo_watch%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_cargo_watch%2Fsrc%2Flib.rs?ref=59ba386bee974b56b546eb7e8fdec6721ab0d08a", "patch": "@@ -259,7 +259,7 @@ pub fn run_cargo(\n     let mut child = command\n         .args(args)\n         .stdout(Stdio::piped())\n-        .stderr(Stdio::null())\n+        .stderr(Stdio::piped())\n         .stdin(Stdio::null())\n         .spawn()\n         .expect(\"couldn't launch cargo\");\n@@ -352,8 +352,21 @@ impl WatchThread {\n                 // It is okay to ignore the result, as it only errors if the process is already dead\n                 let _ = child.kill();\n \n-                // Again, we don't care about the exit status so just ignore the result\n-                let _ = child.wait();\n+                // Again, we are resilient to errors, so we don't try to panic here\n+                match child.wait_with_output() {\n+                    Ok(output) => match output.status.code() {\n+                        Some(0) | None => {}\n+                        Some(exit_code) => {\n+                            let output =\n+                                std::str::from_utf8(&output.stderr).unwrap_or(\"<bad utf8 output>\");\n+\n+                            if !output.contains(\"could not compile\") {\n+                                log::error!(\"Cargo failed with exit code {} {}\", exit_code, output);\n+                            }\n+                        }\n+                    },\n+                    Err(err) => log::error!(\"Cargo io error: {:?}\", err),\n+                }\n             }))\n         } else {\n             None"}]}