{"sha": "469281c0dd6abb13b0b0067e0ed977e70145183c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ2OTI4MWMwZGQ2YWJiMTNiMGIwMDY3ZTBlZDk3N2U3MDE0NTE4M2M=", "commit": {"author": {"name": "nahuakang", "email": "kangnahua@gmail.com", "date": "2020-12-28T17:59:35Z"}, "committer": {"name": "nahuakang", "email": "kangnahua@gmail.com", "date": "2020-12-28T17:59:35Z"}, "message": "Check if never type feature is enabled by TyCtxt before suggesting empty enum lint", "tree": {"sha": "c26cfb88e7c5251cc99b6ae21bed266742c5aca0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c26cfb88e7c5251cc99b6ae21bed266742c5aca0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/469281c0dd6abb13b0b0067e0ed977e70145183c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/469281c0dd6abb13b0b0067e0ed977e70145183c", "html_url": "https://github.com/rust-lang/rust/commit/469281c0dd6abb13b0b0067e0ed977e70145183c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/469281c0dd6abb13b0b0067e0ed977e70145183c/comments", "author": {"login": "nahuakang", "id": 18533347, "node_id": "MDQ6VXNlcjE4NTMzMzQ3", "avatar_url": "https://avatars.githubusercontent.com/u/18533347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nahuakang", "html_url": "https://github.com/nahuakang", "followers_url": "https://api.github.com/users/nahuakang/followers", "following_url": "https://api.github.com/users/nahuakang/following{/other_user}", "gists_url": "https://api.github.com/users/nahuakang/gists{/gist_id}", "starred_url": "https://api.github.com/users/nahuakang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nahuakang/subscriptions", "organizations_url": "https://api.github.com/users/nahuakang/orgs", "repos_url": "https://api.github.com/users/nahuakang/repos", "events_url": "https://api.github.com/users/nahuakang/events{/privacy}", "received_events_url": "https://api.github.com/users/nahuakang/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nahuakang", "id": 18533347, "node_id": "MDQ6VXNlcjE4NTMzMzQ3", "avatar_url": "https://avatars.githubusercontent.com/u/18533347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nahuakang", "html_url": "https://github.com/nahuakang", "followers_url": "https://api.github.com/users/nahuakang/followers", "following_url": "https://api.github.com/users/nahuakang/following{/other_user}", "gists_url": "https://api.github.com/users/nahuakang/gists{/gist_id}", "starred_url": "https://api.github.com/users/nahuakang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nahuakang/subscriptions", "organizations_url": "https://api.github.com/users/nahuakang/orgs", "repos_url": "https://api.github.com/users/nahuakang/repos", "events_url": "https://api.github.com/users/nahuakang/events{/privacy}", "received_events_url": "https://api.github.com/users/nahuakang/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "61a3ee79350daf2eb9669999839c05de7a473316", "url": "https://api.github.com/repos/rust-lang/rust/commits/61a3ee79350daf2eb9669999839c05de7a473316", "html_url": "https://github.com/rust-lang/rust/commit/61a3ee79350daf2eb9669999839c05de7a473316"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "585709660a4a5dfd620d1753a09d19f0a835a0cd", "filename": "clippy_lints/src/empty_enum.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/469281c0dd6abb13b0b0067e0ed977e70145183c/clippy_lints%2Fsrc%2Fempty_enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/469281c0dd6abb13b0b0067e0ed977e70145183c/clippy_lints%2Fsrc%2Fempty_enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fempty_enum.rs?ref=469281c0dd6abb13b0b0067e0ed977e70145183c", "patch": "@@ -44,7 +44,9 @@ impl<'tcx> LateLintPass<'tcx> for EmptyEnum {\n         if let ItemKind::Enum(..) = item.kind {\n             let ty = cx.tcx.type_of(did);\n             let adt = ty.ty_adt_def().expect(\"already checked whether this is an enum\");\n-            if adt.variants.is_empty() {\n+\n+            // Only suggest the never type if the feature is enabled\n+            if adt.variants.is_empty() && cx.tcx.features().never_type {\n                 span_lint_and_help(\n                     cx,\n                     EMPTY_ENUM,"}]}