{"sha": "1685264f129602a8fba598c9de1d614c5f6f83a3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE2ODUyNjRmMTI5NjAyYThmYmE1OThjOWRlMWQ2MTRjNWY2ZjgzYTM=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-03-16T12:16:38Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-03-16T12:16:38Z"}, "message": "Rollup merge of #69520 - kornelski:e69492, r=cramertj\n\nMake error message clearer about creating new module\n\nThis is a partial improvement for #69492", "tree": {"sha": "6da1630be65131f9a414e4c6fdaab201ae42b98a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6da1630be65131f9a414e4c6fdaab201ae42b98a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1685264f129602a8fba598c9de1d614c5f6f83a3", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeb24mCRBK7hj4Ov3rIwAAdHIIAK7VFSJsb/z2IS5EKq/EQEk3\nY+tcdoVIb5u7tZhUMnh0/0OfT3aGJSxFlj8Q78x7CKLI6tZyqOv6xrljSReiI01A\nxPl0RGPjPf3AAStAssGEnyze7ghDkFQw1IMdiG7K7bgkJOB8iX2SY2MiEF4Um+iU\nz4dE/cIRuK1ItFs3oMdUb0BC5YIWVE+UlGZmz0KQNc8WHApFAUqRuh+j8Bh6iyxb\neSznejieZ5kFvOGWAZrp2EohS0L6p7eyQgD+sBd3/sIby6yU5+b3tbqIzFOZmUZF\nz6u1BKHcQE+fmdQ9gn/+5EtOc+zKbqWSndtYHJ2nXLspA3luOYR5+7IBgDvmfi8=\n=RHt3\n-----END PGP SIGNATURE-----\n", "payload": "tree 6da1630be65131f9a414e4c6fdaab201ae42b98a\nparent 2443eb46cf20d6663b055ad93b3984646696a894\nparent 8de1ec9ce0a53b8ad9987e923e833c82fda05603\nauthor Dylan DPC <dylan.dpc@gmail.com> 1584360998 +0100\ncommitter GitHub <noreply@github.com> 1584360998 +0100\n\nRollup merge of #69520 - kornelski:e69492, r=cramertj\n\nMake error message clearer about creating new module\n\nThis is a partial improvement for #69492\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1685264f129602a8fba598c9de1d614c5f6f83a3", "html_url": "https://github.com/rust-lang/rust/commit/1685264f129602a8fba598c9de1d614c5f6f83a3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1685264f129602a8fba598c9de1d614c5f6f83a3/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2443eb46cf20d6663b055ad93b3984646696a894", "url": "https://api.github.com/repos/rust-lang/rust/commits/2443eb46cf20d6663b055ad93b3984646696a894", "html_url": "https://github.com/rust-lang/rust/commit/2443eb46cf20d6663b055ad93b3984646696a894"}, {"sha": "8de1ec9ce0a53b8ad9987e923e833c82fda05603", "url": "https://api.github.com/repos/rust-lang/rust/commits/8de1ec9ce0a53b8ad9987e923e833c82fda05603", "html_url": "https://github.com/rust-lang/rust/commit/8de1ec9ce0a53b8ad9987e923e833c82fda05603"}], "stats": {"total": 51, "additions": 18, "deletions": 33}, "files": [{"sha": "8e52bb16147576046eb8d11b70252243ffa7e57e", "filename": "src/librustc_parse/parser/diagnostics.rs", "status": "modified", "additions": 7, "deletions": 19, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/1685264f129602a8fba598c9de1d614c5f6f83a3/src%2Flibrustc_parse%2Fparser%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1685264f129602a8fba598c9de1d614c5f6f83a3/src%2Flibrustc_parse%2Fparser%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fdiagnostics.rs?ref=1685264f129602a8fba598c9de1d614c5f6f83a3", "patch": "@@ -18,6 +18,7 @@ use rustc_span::{MultiSpan, Span, SpanSnippetError, DUMMY_SP};\n \n use log::{debug, trace};\n use std::mem;\n+use std::path::PathBuf;\n \n const TURBOFISH: &str = \"use `::<...>` instead of `<...>` to specify type arguments\";\n \n@@ -40,29 +41,15 @@ pub(super) fn dummy_arg(ident: Ident) -> Param {\n }\n \n pub enum Error {\n-    FileNotFoundForModule {\n-        mod_name: String,\n-        default_path: String,\n-        secondary_path: String,\n-        dir_path: String,\n-    },\n-    DuplicatePaths {\n-        mod_name: String,\n-        default_path: String,\n-        secondary_path: String,\n-    },\n+    FileNotFoundForModule { mod_name: String, default_path: PathBuf },\n+    DuplicatePaths { mod_name: String, default_path: String, secondary_path: String },\n     UselessDocComment,\n }\n \n impl Error {\n     fn span_err(self, sp: impl Into<MultiSpan>, handler: &Handler) -> DiagnosticBuilder<'_> {\n         match self {\n-            Error::FileNotFoundForModule {\n-                ref mod_name,\n-                ref default_path,\n-                ref secondary_path,\n-                ref dir_path,\n-            } => {\n+            Error::FileNotFoundForModule { ref mod_name, ref default_path } => {\n                 let mut err = struct_span_err!(\n                     handler,\n                     sp,\n@@ -71,8 +58,9 @@ impl Error {\n                     mod_name,\n                 );\n                 err.help(&format!(\n-                    \"name the file either {} or {} inside the directory \\\"{}\\\"\",\n-                    default_path, secondary_path, dir_path,\n+                    \"to create the module `{}`, create file \\\"{}\\\"\",\n+                    mod_name,\n+                    default_path.display(),\n                 ));\n                 err\n             }"}, {"sha": "7b46601cc7d8026cc492f04fa432d40be511a182", "filename": "src/librustc_parse/parser/module.rs", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/1685264f129602a8fba598c9de1d614c5f6f83a3/src%2Flibrustc_parse%2Fparser%2Fmodule.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1685264f129602a8fba598c9de1d614c5f6f83a3/src%2Flibrustc_parse%2Fparser%2Fmodule.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fmodule.rs?ref=1685264f129602a8fba598c9de1d614c5f6f83a3", "patch": "@@ -234,12 +234,9 @@ impl<'a> Parser<'a> {\n                 path: secondary_path,\n                 directory_ownership: DirectoryOwnership::Owned { relative: None },\n             }),\n-            (false, false) => Err(Error::FileNotFoundForModule {\n-                mod_name: mod_name.clone(),\n-                default_path: default_path_str,\n-                secondary_path: secondary_path_str,\n-                dir_path: dir_path.display().to_string(),\n-            }),\n+            (false, false) => {\n+                Err(Error::FileNotFoundForModule { mod_name: mod_name.clone(), default_path })\n+            }\n             (true, true) => Err(Error::DuplicatePaths {\n                 mod_name: mod_name.clone(),\n                 default_path: default_path_str,"}, {"sha": "5d47b633e78db919ba5a777790db09ea3f819f99", "filename": "src/test/ui/error-codes/E0583.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1685264f129602a8fba598c9de1d614c5f6f83a3/src%2Ftest%2Fui%2Ferror-codes%2FE0583.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1685264f129602a8fba598c9de1d614c5f6f83a3/src%2Ftest%2Fui%2Ferror-codes%2FE0583.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0583.stderr?ref=1685264f129602a8fba598c9de1d614c5f6f83a3", "patch": "@@ -4,7 +4,7 @@ error[E0583]: file not found for module `module_that_doesnt_exist`\n LL | mod module_that_doesnt_exist;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: name the file either module_that_doesnt_exist.rs or module_that_doesnt_exist/mod.rs inside the directory \"$DIR\"\n+   = help: to create the module `module_that_doesnt_exist`, create file \"$DIR/module_that_doesnt_exist.rs\"\n \n error: aborting due to previous error\n "}, {"sha": "5d2cdaef1a7611f5719583003862de9d1d72d2f9", "filename": "src/test/ui/invalid-module-declaration/invalid-module-declaration.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1685264f129602a8fba598c9de1d614c5f6f83a3/src%2Ftest%2Fui%2Finvalid-module-declaration%2Finvalid-module-declaration.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1685264f129602a8fba598c9de1d614c5f6f83a3/src%2Ftest%2Fui%2Finvalid-module-declaration%2Finvalid-module-declaration.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finvalid-module-declaration%2Finvalid-module-declaration.stderr?ref=1685264f129602a8fba598c9de1d614c5f6f83a3", "patch": "@@ -4,7 +4,7 @@ error[E0583]: file not found for module `baz`\n LL | pub mod baz;\n    |         ^^^\n    |\n-   = help: name the file either bar/baz.rs or bar/baz/mod.rs inside the directory \"$DIR/auxiliary/foo\"\n+   = help: to create the module `baz`, create file \"$DIR/auxiliary/foo/bar/baz.rs\"\n \n error: aborting due to previous error\n "}, {"sha": "e8d997e6de0913c81fc8d24166d903253fa5b861", "filename": "src/test/ui/missing_non_modrs_mod/missing_non_modrs_mod.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1685264f129602a8fba598c9de1d614c5f6f83a3/src%2Ftest%2Fui%2Fmissing_non_modrs_mod%2Fmissing_non_modrs_mod.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1685264f129602a8fba598c9de1d614c5f6f83a3/src%2Ftest%2Fui%2Fmissing_non_modrs_mod%2Fmissing_non_modrs_mod.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmissing_non_modrs_mod%2Fmissing_non_modrs_mod.stderr?ref=1685264f129602a8fba598c9de1d614c5f6f83a3", "patch": "@@ -4,7 +4,7 @@ error[E0583]: file not found for module `missing`\n LL | mod missing;\n    |     ^^^^^^^\n    |\n-   = help: name the file either foo/missing.rs or foo/missing/mod.rs inside the directory \"$DIR\"\n+   = help: to create the module `missing`, create file \"$DIR/foo/missing.rs\"\n \n error: aborting due to previous error\n "}, {"sha": "b2b0f8b466a04b2c9b34b95b39d00094397669f1", "filename": "src/test/ui/missing_non_modrs_mod/missing_non_modrs_mod_inline.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1685264f129602a8fba598c9de1d614c5f6f83a3/src%2Ftest%2Fui%2Fmissing_non_modrs_mod%2Fmissing_non_modrs_mod_inline.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1685264f129602a8fba598c9de1d614c5f6f83a3/src%2Ftest%2Fui%2Fmissing_non_modrs_mod%2Fmissing_non_modrs_mod_inline.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmissing_non_modrs_mod%2Fmissing_non_modrs_mod_inline.stderr?ref=1685264f129602a8fba598c9de1d614c5f6f83a3", "patch": "@@ -4,7 +4,7 @@ error[E0583]: file not found for module `missing`\n LL |     mod missing;\n    |         ^^^^^^^\n    |\n-   = help: name the file either missing.rs or missing/mod.rs inside the directory \"$DIR/foo_inline/inline\"\n+   = help: to create the module `missing`, create file \"$DIR/foo_inline/inline/missing.rs\"\n \n error: aborting due to previous error\n "}, {"sha": "71fbc7aea45eb6a675b0950a5b3d8503dcd92e1c", "filename": "src/test/ui/parser/mod_file_not_exist.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1685264f129602a8fba598c9de1d614c5f6f83a3/src%2Ftest%2Fui%2Fparser%2Fmod_file_not_exist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1685264f129602a8fba598c9de1d614c5f6f83a3/src%2Ftest%2Fui%2Fparser%2Fmod_file_not_exist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fmod_file_not_exist.rs?ref=1685264f129602a8fba598c9de1d614c5f6f83a3", "patch": "@@ -1,7 +1,7 @@\n // ignore-windows\n \n mod not_a_real_file; //~ ERROR file not found for module `not_a_real_file`\n-//~^ HELP name the file either not_a_real_file.rs or not_a_real_file/mod.rs inside the directory\n+//~^ HELP to create the module `not_a_real_file`, create file \"\n \n fn main() {\n     assert_eq!(mod_file_aux::bar(), 10);"}, {"sha": "db3ea04ac7655029dcb565c74fe264f30238b354", "filename": "src/test/ui/parser/mod_file_not_exist.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1685264f129602a8fba598c9de1d614c5f6f83a3/src%2Ftest%2Fui%2Fparser%2Fmod_file_not_exist.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1685264f129602a8fba598c9de1d614c5f6f83a3/src%2Ftest%2Fui%2Fparser%2Fmod_file_not_exist.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fmod_file_not_exist.stderr?ref=1685264f129602a8fba598c9de1d614c5f6f83a3", "patch": "@@ -4,7 +4,7 @@ error[E0583]: file not found for module `not_a_real_file`\n LL | mod not_a_real_file;\n    |     ^^^^^^^^^^^^^^^\n    |\n-   = help: name the file either not_a_real_file.rs or not_a_real_file/mod.rs inside the directory \"$DIR\"\n+   = help: to create the module `not_a_real_file`, create file \"$DIR/not_a_real_file.rs\"\n \n error: aborting due to previous error\n "}, {"sha": "97cadab675f5192fe9cad9b363c05eb8bce515ba", "filename": "src/test/ui/parser/mod_file_not_exist_windows.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1685264f129602a8fba598c9de1d614c5f6f83a3/src%2Ftest%2Fui%2Fparser%2Fmod_file_not_exist_windows.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1685264f129602a8fba598c9de1d614c5f6f83a3/src%2Ftest%2Fui%2Fparser%2Fmod_file_not_exist_windows.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fmod_file_not_exist_windows.rs?ref=1685264f129602a8fba598c9de1d614c5f6f83a3", "patch": "@@ -1,7 +1,7 @@\n // only-windows\n \n mod not_a_real_file; //~ ERROR file not found for module `not_a_real_file`\n-//~^ HELP name the file either not_a_real_file.rs or not_a_real_file\\mod.rs inside the directory\n+//~^ HELP to create the module `not_a_real_file`, create file\n \n fn main() {\n     assert_eq!(mod_file_aux::bar(), 10);"}, {"sha": "a58db80f73d7d964404cfde2afd7d94ba939b683", "filename": "src/test/ui/parser/mod_file_not_exist_windows.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1685264f129602a8fba598c9de1d614c5f6f83a3/src%2Ftest%2Fui%2Fparser%2Fmod_file_not_exist_windows.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1685264f129602a8fba598c9de1d614c5f6f83a3/src%2Ftest%2Fui%2Fparser%2Fmod_file_not_exist_windows.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fmod_file_not_exist_windows.stderr?ref=1685264f129602a8fba598c9de1d614c5f6f83a3", "patch": "@@ -4,7 +4,7 @@ error[E0583]: file not found for module `not_a_real_file`\n LL | mod not_a_real_file;\n    |     ^^^^^^^^^^^^^^^\n    |\n-   = help: name the file either not_a_real_file.rs or not_a_real_file/mod.rs inside the directory \"$DIR\"\n+   = help: to create the module `not_a_real_file`, create file \"$DIR/not_a_real_file.rs\"\n \n error: aborting due to previous error\n "}]}