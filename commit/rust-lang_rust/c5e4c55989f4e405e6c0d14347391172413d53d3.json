{"sha": "c5e4c55989f4e405e6c0d14347391172413d53d3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM1ZTRjNTU5ODlmNGU0MDVlNmMwZDE0MzQ3MzkxMTcyNDEzZDUzZDM=", "commit": {"author": {"name": "blake2-ppc", "email": "blake2-ppc", "date": "2013-08-03T17:40:20Z"}, "committer": {"name": "blake2-ppc", "email": "blake2-ppc", "date": "2013-08-06T02:05:07Z"}, "message": "std: Remove unused trait bound in Result::map", "tree": {"sha": "fbe3544e2f106c63142d22b61b21b4bebf0f67db", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fbe3544e2f106c63142d22b61b21b4bebf0f67db"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c5e4c55989f4e405e6c0d14347391172413d53d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c5e4c55989f4e405e6c0d14347391172413d53d3", "html_url": "https://github.com/rust-lang/rust/commit/c5e4c55989f4e405e6c0d14347391172413d53d3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c5e4c55989f4e405e6c0d14347391172413d53d3/comments", "author": null, "committer": null, "parents": [{"sha": "109e0d85a14f62e08b324feb89d6baa740e25319", "url": "https://api.github.com/repos/rust-lang/rust/commits/109e0d85a14f62e08b324feb89d6baa740e25319", "html_url": "https://github.com/rust-lang/rust/commit/109e0d85a14f62e08b324feb89d6baa740e25319"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "5a6021d32a5e3d30b1c1f851cb10e07b6c3c94e3", "filename": "src/libstd/result.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c5e4c55989f4e405e6c0d14347391172413d53d3/src%2Flibstd%2Fresult.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c5e4c55989f4e405e6c0d14347391172413d53d3/src%2Flibstd%2Fresult.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fresult.rs?ref=c5e4c55989f4e405e6c0d14347391172413d53d3", "patch": "@@ -214,7 +214,7 @@ impl<T, E: Clone + ToStr> Result<T, E> {\n     ///         parse_bytes(buf)\n     ///     };\n     #[inline]\n-    pub fn map<U: Clone>(&self, op: &fn(&T) -> U) -> Result<U,E> {\n+    pub fn map<U>(&self, op: &fn(&T) -> U) -> Result<U,E> {\n         match *self {\n             Ok(ref t) => Ok(op(t)),\n             Err(ref e) => Err(e.clone())"}]}