{"sha": "e07e34c4b0ccdc0feecd49091682e6cc365b279a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUwN2UzNGM0YjBjY2RjMGZlZWNkNDkwOTE2ODJlNmNjMzY1YjI3OWE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-04-29T13:49:45Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-04-29T13:49:45Z"}, "message": "Auto merge of #33272 - Manishearth:rollup, r=Manishearth\n\nRollup of 4 pull requests\n\n- Successful merges: #33239, #33248, #33253, #33258\n- Failed merges:", "tree": {"sha": "d2543fc9a925d84c0d85368971bcfc3bbd0185fd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d2543fc9a925d84c0d85368971bcfc3bbd0185fd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e07e34c4b0ccdc0feecd49091682e6cc365b279a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e07e34c4b0ccdc0feecd49091682e6cc365b279a", "html_url": "https://github.com/rust-lang/rust/commit/e07e34c4b0ccdc0feecd49091682e6cc365b279a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e07e34c4b0ccdc0feecd49091682e6cc365b279a/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c0c08e2d77a4dab0414b08c4e9008113bf3fee67", "url": "https://api.github.com/repos/rust-lang/rust/commits/c0c08e2d77a4dab0414b08c4e9008113bf3fee67", "html_url": "https://github.com/rust-lang/rust/commit/c0c08e2d77a4dab0414b08c4e9008113bf3fee67"}, {"sha": "f30058facff3c60e3d9c8fd22b40aae10bb8e022", "url": "https://api.github.com/repos/rust-lang/rust/commits/f30058facff3c60e3d9c8fd22b40aae10bb8e022", "html_url": "https://github.com/rust-lang/rust/commit/f30058facff3c60e3d9c8fd22b40aae10bb8e022"}], "stats": {"total": 43, "additions": 36, "deletions": 7}, "files": [{"sha": "af02d87cc8da89d43dc3ef7ea557a75fa0869fc9", "filename": "src/doc/style/style/comments.md", "status": "modified", "additions": 20, "deletions": 2, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/e07e34c4b0ccdc0feecd49091682e6cc365b279a/src%2Fdoc%2Fstyle%2Fstyle%2Fcomments.md", "raw_url": "https://github.com/rust-lang/rust/raw/e07e34c4b0ccdc0feecd49091682e6cc365b279a/src%2Fdoc%2Fstyle%2Fstyle%2Fcomments.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fstyle%2Fstyle%2Fcomments.md?ref=e07e34c4b0ccdc0feecd49091682e6cc365b279a", "patch": "@@ -1,4 +1,4 @@\n-% Comments [FIXME: needs RFC]\n+% Comments [RFC #505]\n \n ### Avoid block comments.\n \n@@ -74,7 +74,25 @@ For example:\n \n ### Code snippets\n \n-> **[FIXME]**\n+Only use inner doc comments `//!` to write crate and module-level documentation,\n+nothing else. When using `mod` blocks, prefer `///` outside of the block:\n+\n+```rust\n+/// This module contains tests\n+mod test {\n+    // ...\n+}\n+```\n+\n+over\n+\n+```rust\n+mod test {\n+    //! This module contains tests\n+\n+    // ...\n+}\n+```\n \n ### Avoid inner doc comments.\n "}, {"sha": "13cc37fc236ca4a6508227e17f111ce7e118ee37", "filename": "src/doc/style/style/features.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e07e34c4b0ccdc0feecd49091682e6cc365b279a/src%2Fdoc%2Fstyle%2Fstyle%2Ffeatures.md", "raw_url": "https://github.com/rust-lang/rust/raw/e07e34c4b0ccdc0feecd49091682e6cc365b279a/src%2Fdoc%2Fstyle%2Fstyle%2Ffeatures.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fstyle%2Fstyle%2Ffeatures.md?ref=e07e34c4b0ccdc0feecd49091682e6cc365b279a", "patch": "@@ -1,4 +1,4 @@\n-## `return` [FIXME: needs RFC]\n+## `return` [RFC #968]\n \n Terminate `return` statements with semicolons:\n "}, {"sha": "710a30ff2364ecdbdd076b40ac0b0c2da0f2fb9b", "filename": "src/libcollections/fmt.rs", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/e07e34c4b0ccdc0feecd49091682e6cc365b279a/src%2Flibcollections%2Ffmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e07e34c4b0ccdc0feecd49091682e6cc365b279a/src%2Flibcollections%2Ffmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Ffmt.rs?ref=e07e34c4b0ccdc0feecd49091682e6cc365b279a", "patch": "@@ -395,8 +395,19 @@\n //! `0`.\n //!\n //! The value for the width can also be provided as a `usize` in the list of\n-//! parameters by using the `2$` syntax indicating that the second argument is a\n-//! `usize` specifying the width.\n+//! parameters by using the dollar syntax indicating that the second argument is\n+//! a `usize` specifying the width, for example:\n+//!\n+//! ```\n+//! // All of these print \"Hello x    !\"\n+//! println!(\"Hello {:5}!\", \"x\");\n+//! println!(\"Hello {:1$}!\", \"x\", 5);\n+//! println!(\"Hello {1:0$}!\", 5, \"x\");\n+//! ```\n+//!\n+//! Referring to an argument with the dollar syntax does not affect the \"next\n+//! argument\" counter, so it's usually a good idea to refer to all arguments by\n+//! their position explicitly.\n //!\n //! ## Precision\n //!"}, {"sha": "724bd7341e312eb316fd2a344a0353fc344db70d", "filename": "src/librustc_save_analysis/dump_visitor.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e07e34c4b0ccdc0feecd49091682e6cc365b279a/src%2Flibrustc_save_analysis%2Fdump_visitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e07e34c4b0ccdc0feecd49091682e6cc365b279a/src%2Flibrustc_save_analysis%2Fdump_visitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_save_analysis%2Fdump_visitor.rs?ref=e07e34c4b0ccdc0feecd49091682e6cc365b279a", "patch": "@@ -1032,8 +1032,8 @@ impl<'v, 'l, 'tcx: 'l, 'll, D: Dump +'ll> Visitor<'v> for DumpVisitor<'l, 'tcx,\n                         }\n \n                         let sub_span = self.span\n-                                           .sub_span_of_token(path.span, token::BinOp(token::Star));\n-                        if !self.span.filter_generated(sub_span, path.span) {\n+                                           .sub_span_of_token(item.span, token::BinOp(token::Star));\n+                        if !self.span.filter_generated(sub_span, item.span) {\n                             self.dumper.use_glob(UseGlobData {\n                                 span: sub_span.expect(\"No span found for use glob\"),\n                                 id: item.id,"}]}