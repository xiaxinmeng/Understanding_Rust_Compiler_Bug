{"sha": "9c0b89cff7ef84cedb5c03400b0c195d5173f157", "node_id": "MDY6Q29tbWl0NzI0NzEyOjljMGI4OWNmZjdlZjg0Y2VkYjVjMDM0MDBiMGMxOTVkNTE3M2YxNTc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-01-30T22:20:36Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-01-30T22:20:36Z"}, "message": "Auto merge of #1163 - RalfJung:raw-cast, r=RalfJung\n\nTest raw-ptr-cast without reborrow\n\nWith https://github.com/rust-lang/rust/pull/64588 landed, we can finally test these things adequately. :)", "tree": {"sha": "6f98e934fc758206b6e792cf7361e1d88a7c7808", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6f98e934fc758206b6e792cf7361e1d88a7c7808"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9c0b89cff7ef84cedb5c03400b0c195d5173f157", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9c0b89cff7ef84cedb5c03400b0c195d5173f157", "html_url": "https://github.com/rust-lang/rust/commit/9c0b89cff7ef84cedb5c03400b0c195d5173f157", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9c0b89cff7ef84cedb5c03400b0c195d5173f157/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e7f5c4f15503633c83f260e06ced5a80837d84f5", "url": "https://api.github.com/repos/rust-lang/rust/commits/e7f5c4f15503633c83f260e06ced5a80837d84f5", "html_url": "https://github.com/rust-lang/rust/commit/e7f5c4f15503633c83f260e06ced5a80837d84f5"}, {"sha": "b2c9871f7d83d9ac4c7838d4bcd2c91454620244", "url": "https://api.github.com/repos/rust-lang/rust/commits/b2c9871f7d83d9ac4c7838d4bcd2c91454620244", "html_url": "https://github.com/rust-lang/rust/commit/b2c9871f7d83d9ac4c7838d4bcd2c91454620244"}], "stats": {"total": 34, "additions": 18, "deletions": 16}, "files": [{"sha": "72fca84ba19babc0183c00179f8126493b34cc26", "filename": "tests/compile-fail/stacked_borrows/illegal_read8.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/9c0b89cff7ef84cedb5c03400b0c195d5173f157/tests%2Fcompile-fail%2Fstacked_borrows%2Fillegal_read8.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c0b89cff7ef84cedb5c03400b0c195d5173f157/tests%2Fcompile-fail%2Fstacked_borrows%2Fillegal_read8.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fstacked_borrows%2Fillegal_read8.rs?ref=9c0b89cff7ef84cedb5c03400b0c195d5173f157", "patch": "@@ -0,0 +1,13 @@\n+// Make sure that creating a raw ptr next to a shared ref works\n+// but the shared ref still gets invalidated when the raw ptr is used for writing.\n+\n+fn main() { unsafe {\n+    use std::mem;\n+    let x = &mut 0;\n+    let y1: &i32 = mem::transmute(&*x); // launder lifetimes\n+    let y2 = x as *mut _;\n+    let _val = *y2;\n+    let _val = *y1;\n+    *y2 += 1;\n+    let _fail = *y1; //~ ERROR borrow stack\n+} }"}, {"sha": "765c6188b6e17a925cb47a624c2fc72ae6e3bc33", "filename": "tests/run-pass/stacked-borrows/stacked-borrows.rs", "status": "modified", "additions": 4, "deletions": 9, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/9c0b89cff7ef84cedb5c03400b0c195d5173f157/tests%2Frun-pass%2Fstacked-borrows%2Fstacked-borrows.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c0b89cff7ef84cedb5c03400b0c195d5173f157/tests%2Frun-pass%2Fstacked-borrows%2Fstacked-borrows.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fstacked-borrows%2Fstacked-borrows.rs?ref=9c0b89cff7ef84cedb5c03400b0c195d5173f157", "patch": "@@ -108,7 +108,7 @@ fn drop_after_sharing() {\n \n // Make sure that coercing &mut T to *const T produces a writeable pointer.\n fn direct_mut_to_const_raw() {\n-    // FIXME: This is currently disabled, waiting on a fix for <https://github.com/rust-lang/rust/issues/56604>\n+    // TODO: This is currently disabled, waiting on a decision on <https://github.com/rust-lang/rust/issues/56604>\n     /*let x = &mut 0;\n     let y: *const i32 = x;\n     unsafe { *(y as *mut i32) = 1; }\n@@ -119,26 +119,21 @@ fn direct_mut_to_const_raw() {\n // Make sure that we can create two raw pointers from a mutable reference and use them both.\n fn two_raw() { unsafe {\n     let x = &mut 0;\n-    // Given the implicit reborrows, the only reason this currently works is that we\n-    // do not track raw pointers: The creation of `y2` reborrows `x` and thus pops\n-    // `y1` off the stack.\n     let y1 = x as *mut _;\n     let y2 = x as *mut _;\n     *y1 += 2;\n     *y2 += 1;\n } }\n \n // Make sure that creating a *mut does not invalidate existing shared references.\n-fn shr_and_raw() { /* unsafe {\n+fn shr_and_raw() { unsafe {\n     use std::mem;\n-    // FIXME: This is currently disabled because \"as *mut _\" incurs a reborrow.\n     let x = &mut 0;\n     let y1: &i32 = mem::transmute(&*x); // launder lifetimes\n     let y2 = x as *mut _;\n     let _val = *y1;\n     *y2 += 1;\n-    // TODO: Once this works, add compile-fail test that tries to read from y1 again.\n-} */ }\n+} }\n \n fn disjoint_mutable_subborrows() {\n     struct Foo {\n@@ -165,5 +160,5 @@ fn disjoint_mutable_subborrows() {\n     let b = unsafe{ borrow_field_b(ptr) };\n     b.push(4);\n     a.push_str(\" world\");\n-    dbg!(a,b);\n+    eprintln!(\"{:?} {:?}\", a, b);\n }"}, {"sha": "8ee4e25dbef8431827774bed1ae50b8cfdf16b24", "filename": "tests/run-pass/stacked-borrows/stacked-borrows.stderr", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9c0b89cff7ef84cedb5c03400b0c195d5173f157/tests%2Frun-pass%2Fstacked-borrows%2Fstacked-borrows.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9c0b89cff7ef84cedb5c03400b0c195d5173f157/tests%2Frun-pass%2Fstacked-borrows%2Fstacked-borrows.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fstacked-borrows%2Fstacked-borrows.stderr?ref=9c0b89cff7ef84cedb5c03400b0c195d5173f157", "patch": "@@ -1,7 +1 @@\n-[$DIR/stacked-borrows.rs:168] a = \"hello world\"\n-[$DIR/stacked-borrows.rs:168] b = [\n-    0,\n-    1,\n-    2,\n-    4,\n-]\n+\"hello world\" [0, 1, 2, 4]"}]}