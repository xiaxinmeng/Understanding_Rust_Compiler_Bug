{"sha": "64c1d3bea7b6c8f8db4b4be7a01ad26c2c8c9cca", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY0YzFkM2JlYTdiNmM4ZjhkYjRiNGJlN2EwMWFkMjZjMmM4YzljY2E=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-05-22T10:44:39Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-05-22T10:44:39Z"}, "message": "Auto merge of #4120 - phansch:needless_lifetimes_async_test_cleanup, r=Manishearth\n\nLifetimes UI test cleanup\n\n* Removes an unneeded `#![warn(clippy::extra_unused_lifetimes)]` from\n  the `needless_lifetimes` test - the tests for those are in a different\n  file.\n\n* Renames `unused_lt.{rs,stderr}` to `extra_unused_lifetimes.{rs,stderr}`\n* Renames `lifetimes.{rs,stderr}` to `needless_lifetimes.{rs,stderr}`", "tree": {"sha": "9a0cb41322d7e8137c885949306c57576157a1bd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9a0cb41322d7e8137c885949306c57576157a1bd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/64c1d3bea7b6c8f8db4b4be7a01ad26c2c8c9cca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/64c1d3bea7b6c8f8db4b4be7a01ad26c2c8c9cca", "html_url": "https://github.com/rust-lang/rust/commit/64c1d3bea7b6c8f8db4b4be7a01ad26c2c8c9cca", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/64c1d3bea7b6c8f8db4b4be7a01ad26c2c8c9cca/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a8eeb7cdb135da1cd582c6093c1739732727a4a2", "url": "https://api.github.com/repos/rust-lang/rust/commits/a8eeb7cdb135da1cd582c6093c1739732727a4a2", "html_url": "https://github.com/rust-lang/rust/commit/a8eeb7cdb135da1cd582c6093c1739732727a4a2"}, {"sha": "3f382999ab81c9287e03a3c6021f98fd4fe0c268", "url": "https://api.github.com/repos/rust-lang/rust/commits/3f382999ab81c9287e03a3c6021f98fd4fe0c268", "html_url": "https://github.com/rust-lang/rust/commit/3f382999ab81c9287e03a3c6021f98fd4fe0c268"}], "stats": {"total": 38, "additions": 19, "deletions": 19}, "files": [{"sha": "ba7c42b3a90d4d80b8804e73efd0aa8263e46ee3", "filename": "tests/ui/extra_unused_lifetimes.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/64c1d3bea7b6c8f8db4b4be7a01ad26c2c8c9cca/tests%2Fui%2Fextra_unused_lifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64c1d3bea7b6c8f8db4b4be7a01ad26c2c8c9cca/tests%2Fui%2Fextra_unused_lifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fextra_unused_lifetimes.rs?ref=64c1d3bea7b6c8f8db4b4be7a01ad26c2c8c9cca", "previous_filename": "tests/ui/unused_lt.rs"}, {"sha": "6473a2fbcb28aecd7274fae80c58761163545165", "filename": "tests/ui/extra_unused_lifetimes.stderr", "status": "renamed", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/64c1d3bea7b6c8f8db4b4be7a01ad26c2c8c9cca/tests%2Fui%2Fextra_unused_lifetimes.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/64c1d3bea7b6c8f8db4b4be7a01ad26c2c8c9cca/tests%2Fui%2Fextra_unused_lifetimes.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fextra_unused_lifetimes.stderr?ref=64c1d3bea7b6c8f8db4b4be7a01ad26c2c8c9cca", "patch": "@@ -1,19 +1,19 @@\n error: this lifetime isn't used in the function definition\n-  --> $DIR/unused_lt.rs:14:14\n+  --> $DIR/extra_unused_lifetimes.rs:14:14\n    |\n LL | fn unused_lt<'a>(x: u8) {}\n    |              ^^\n    |\n    = note: `-D clippy::extra-unused-lifetimes` implied by `-D warnings`\n \n error: this lifetime isn't used in the function definition\n-  --> $DIR/unused_lt.rs:16:25\n+  --> $DIR/extra_unused_lifetimes.rs:16:25\n    |\n LL | fn unused_lt_transitive<'a, 'b: 'a>(x: &'b u8) {\n    |                         ^^\n \n error: this lifetime isn't used in the function definition\n-  --> $DIR/unused_lt.rs:41:10\n+  --> $DIR/extra_unused_lifetimes.rs:41:10\n    |\n LL |     fn x<'a>(&self) {}\n    |          ^^", "previous_filename": "tests/ui/unused_lt.stderr"}, {"sha": "e2d680ceaeb1938b1b996a84df7be2e068abe937", "filename": "tests/ui/needless_lifetimes.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/64c1d3bea7b6c8f8db4b4be7a01ad26c2c8c9cca/tests%2Fui%2Fneedless_lifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64c1d3bea7b6c8f8db4b4be7a01ad26c2c8c9cca/tests%2Fui%2Fneedless_lifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_lifetimes.rs?ref=64c1d3bea7b6c8f8db4b4be7a01ad26c2c8c9cca", "patch": "@@ -1,4 +1,4 @@\n-#![warn(clippy::needless_lifetimes, clippy::extra_unused_lifetimes)]\n+#![warn(clippy::needless_lifetimes)]\n #![allow(dead_code, clippy::needless_pass_by_value, clippy::trivially_copy_pass_by_ref)]\n \n fn distinct_lifetimes<'a, 'b>(_x: &'a u8, _y: &'b u8, _z: u8) {}", "previous_filename": "tests/ui/lifetimes.rs"}, {"sha": "9334076fc71c2c041a8ffa651f9bd39391b4512c", "filename": "tests/ui/needless_lifetimes.stderr", "status": "renamed", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/64c1d3bea7b6c8f8db4b4be7a01ad26c2c8c9cca/tests%2Fui%2Fneedless_lifetimes.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/64c1d3bea7b6c8f8db4b4be7a01ad26c2c8c9cca/tests%2Fui%2Fneedless_lifetimes.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_lifetimes.stderr?ref=64c1d3bea7b6c8f8db4b4be7a01ad26c2c8c9cca", "patch": "@@ -1,35 +1,35 @@\n error: explicit lifetimes given in parameter types where they could be elided (or replaced with `'_` if needed by type declaration)\n-  --> $DIR/lifetimes.rs:4:1\n+  --> $DIR/needless_lifetimes.rs:4:1\n    |\n LL | fn distinct_lifetimes<'a, 'b>(_x: &'a u8, _y: &'b u8, _z: u8) {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::needless-lifetimes` implied by `-D warnings`\n \n error: explicit lifetimes given in parameter types where they could be elided (or replaced with `'_` if needed by type declaration)\n-  --> $DIR/lifetimes.rs:6:1\n+  --> $DIR/needless_lifetimes.rs:6:1\n    |\n LL | fn distinct_and_static<'a, 'b>(_x: &'a u8, _y: &'b u8, _z: &'static u8) {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: explicit lifetimes given in parameter types where they could be elided (or replaced with `'_` if needed by type declaration)\n-  --> $DIR/lifetimes.rs:16:1\n+  --> $DIR/needless_lifetimes.rs:16:1\n    |\n LL | / fn in_and_out<'a>(x: &'a u8, _y: u8) -> &'a u8 {\n LL | |     x\n LL | | }\n    | |_^\n \n error: explicit lifetimes given in parameter types where they could be elided (or replaced with `'_` if needed by type declaration)\n-  --> $DIR/lifetimes.rs:45:1\n+  --> $DIR/needless_lifetimes.rs:45:1\n    |\n LL | / fn deep_reference_3<'a>(x: &'a u8, _y: u8) -> Result<&'a u8, ()> {\n LL | |     Ok(x)\n LL | | }\n    | |_^\n \n error: explicit lifetimes given in parameter types where they could be elided (or replaced with `'_` if needed by type declaration)\n-  --> $DIR/lifetimes.rs:50:1\n+  --> $DIR/needless_lifetimes.rs:50:1\n    |\n LL | / fn where_clause_without_lt<'a, T>(x: &'a u8, _y: u8) -> Result<&'a u8, ()>\n LL | | where\n@@ -40,13 +40,13 @@ LL | | }\n    | |_^\n \n error: explicit lifetimes given in parameter types where they could be elided (or replaced with `'_` if needed by type declaration)\n-  --> $DIR/lifetimes.rs:62:1\n+  --> $DIR/needless_lifetimes.rs:62:1\n    |\n LL | fn lifetime_param_2<'a, 'b>(_x: Ref<'a>, _y: &'b u8) {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: explicit lifetimes given in parameter types where they could be elided (or replaced with `'_` if needed by type declaration)\n-  --> $DIR/lifetimes.rs:86:1\n+  --> $DIR/needless_lifetimes.rs:86:1\n    |\n LL | / fn fn_bound_2<'a, F, I>(_m: Lt<'a, I>, _f: F) -> Lt<'a, I>\n LL | | where\n@@ -57,61 +57,61 @@ LL | | }\n    | |_^\n \n error: explicit lifetimes given in parameter types where they could be elided (or replaced with `'_` if needed by type declaration)\n-  --> $DIR/lifetimes.rs:120:5\n+  --> $DIR/needless_lifetimes.rs:120:5\n    |\n LL | /     fn self_and_out<'s>(&'s self) -> &'s u8 {\n LL | |         &self.x\n LL | |     }\n    | |_____^\n \n error: explicit lifetimes given in parameter types where they could be elided (or replaced with `'_` if needed by type declaration)\n-  --> $DIR/lifetimes.rs:129:5\n+  --> $DIR/needless_lifetimes.rs:129:5\n    |\n LL |     fn distinct_self_and_in<'s, 't>(&'s self, _x: &'t u8) {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: explicit lifetimes given in parameter types where they could be elided (or replaced with `'_` if needed by type declaration)\n-  --> $DIR/lifetimes.rs:148:1\n+  --> $DIR/needless_lifetimes.rs:148:1\n    |\n LL | / fn struct_with_lt<'a>(_foo: Foo<'a>) -> &'a str {\n LL | |     unimplemented!()\n LL | | }\n    | |_^\n \n error: explicit lifetimes given in parameter types where they could be elided (or replaced with `'_` if needed by type declaration)\n-  --> $DIR/lifetimes.rs:178:1\n+  --> $DIR/needless_lifetimes.rs:178:1\n    |\n LL | / fn trait_obj_elided2<'a>(_arg: &'a Drop) -> &'a str {\n LL | |     unimplemented!()\n LL | | }\n    | |_^\n \n error: explicit lifetimes given in parameter types where they could be elided (or replaced with `'_` if needed by type declaration)\n-  --> $DIR/lifetimes.rs:184:1\n+  --> $DIR/needless_lifetimes.rs:184:1\n    |\n LL | / fn alias_with_lt<'a>(_foo: FooAlias<'a>) -> &'a str {\n LL | |     unimplemented!()\n LL | | }\n    | |_^\n \n error: explicit lifetimes given in parameter types where they could be elided (or replaced with `'_` if needed by type declaration)\n-  --> $DIR/lifetimes.rs:203:1\n+  --> $DIR/needless_lifetimes.rs:203:1\n    |\n LL | / fn named_input_elided_output<'a>(_arg: &'a str) -> &str {\n LL | |     unimplemented!()\n LL | | }\n    | |_^\n \n error: explicit lifetimes given in parameter types where they could be elided (or replaced with `'_` if needed by type declaration)\n-  --> $DIR/lifetimes.rs:211:1\n+  --> $DIR/needless_lifetimes.rs:211:1\n    |\n LL | / fn trait_bound_ok<'a, T: WithLifetime<'static>>(_: &'a u8, _: T) {\n LL | |     unimplemented!()\n LL | | }\n    | |_^\n \n error: explicit lifetimes given in parameter types where they could be elided (or replaced with `'_` if needed by type declaration)\n-  --> $DIR/lifetimes.rs:247:1\n+  --> $DIR/needless_lifetimes.rs:247:1\n    |\n LL | / fn out_return_type_lts<'a>(e: &'a str) -> Cow<'a> {\n LL | |     unimplemented!()", "previous_filename": "tests/ui/lifetimes.stderr"}]}