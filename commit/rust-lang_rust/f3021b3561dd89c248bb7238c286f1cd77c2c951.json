{"sha": "f3021b3561dd89c248bb7238c286f1cd77c2c951", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYzMDIxYjM1NjFkZDg5YzI0OGJiNzIzOGMyODZmMWNkNzdjMmM5NTE=", "commit": {"author": {"name": "Esteban Kuber", "email": "esteban@kuber.com.ar", "date": "2021-08-09T16:47:09Z"}, "committer": {"name": "Esteban Kuber", "email": "esteban@kuber.com.ar", "date": "2021-08-09T16:47:09Z"}, "message": "Use smaller spans when suggesting method call disambiguation", "tree": {"sha": "a6e4208f92818e43471fe4a0a6073e4057095607", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a6e4208f92818e43471fe4a0a6073e4057095607"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f3021b3561dd89c248bb7238c286f1cd77c2c951", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f3021b3561dd89c248bb7238c286f1cd77c2c951", "html_url": "https://github.com/rust-lang/rust/commit/f3021b3561dd89c248bb7238c286f1cd77c2c951", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f3021b3561dd89c248bb7238c286f1cd77c2c951/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eaf6f463599df1f18da94a6965e216ea15795417", "url": "https://api.github.com/repos/rust-lang/rust/commits/eaf6f463599df1f18da94a6965e216ea15795417", "html_url": "https://github.com/rust-lang/rust/commit/eaf6f463599df1f18da94a6965e216ea15795417"}], "stats": {"total": 42, "additions": 22, "deletions": 20}, "files": [{"sha": "c7a7462668aa52b82ddada4789a41f01603ea129", "filename": "compiler/rustc_typeck/src/check/method/suggest.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/f3021b3561dd89c248bb7238c286f1cd77c2c951/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fsuggest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3021b3561dd89c248bb7238c286f1cd77c2c951/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fsuggest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fsuggest.rs?ref=f3021b3561dd89c248bb7238c286f1cd77c2c951", "patch": "@@ -1695,8 +1695,8 @@ fn print_disambiguation_help(\n     source_map: &source_map::SourceMap,\n ) {\n     let mut applicability = Applicability::MachineApplicable;\n-    let sugg_args = if let (ty::AssocKind::Fn, Some(args)) = (kind, args) {\n-        format!(\n+    let (span, sugg) = if let (ty::AssocKind::Fn, Some(args)) = (kind, args) {\n+        let args = format!(\n             \"({}{})\",\n             if rcvr_ty.is_region_ptr() {\n                 if rcvr_ty.is_mutable_ptr() { \"&mut \" } else { \"&\" }\n@@ -1710,12 +1710,12 @@ fn print_disambiguation_help(\n                 }))\n                 .collect::<Vec<_>>()\n                 .join(\", \"),\n-        )\n+        );\n+        (span, format!(\"{}::{}{}\", trait_name, item_name, args))\n     } else {\n-        String::new()\n+        (span.with_hi(item_name.span.lo()), format!(\"{}::\", trait_name))\n     };\n-    let sugg = format!(\"{}::{}{}\", trait_name, item_name, sugg_args);\n-    err.span_suggestion(\n+    err.span_suggestion_verbose(\n         span,\n         &format!(\n             \"disambiguate the {} for {}\","}, {"sha": "fc94ef2ff887238c6986fd20d0d8374992ca3927", "filename": "src/test/ui/associated-consts/associated-const-ambiguity-report.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f3021b3561dd89c248bb7238c286f1cd77c2c951/src%2Ftest%2Fui%2Fassociated-consts%2Fassociated-const-ambiguity-report.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f3021b3561dd89c248bb7238c286f1cd77c2c951/src%2Ftest%2Fui%2Fassociated-consts%2Fassociated-const-ambiguity-report.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-consts%2Fassociated-const-ambiguity-report.stderr?ref=f3021b3561dd89c248bb7238c286f1cd77c2c951", "patch": "@@ -17,11 +17,11 @@ LL |     const ID: i32 = 3;\n help: disambiguate the associated constant for candidate #1\n    |\n LL | const X: i32 = Foo::ID;\n-   |                ^^^^^^^\n+   |                ^^^^^\n help: disambiguate the associated constant for candidate #2\n    |\n LL | const X: i32 = Bar::ID;\n-   |                ^^^^^^^\n+   |                ^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "55119857d8f834f027eae80d2e94803055dab7f2", "filename": "src/test/ui/error-codes/E0034.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f3021b3561dd89c248bb7238c286f1cd77c2c951/src%2Ftest%2Fui%2Ferror-codes%2FE0034.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f3021b3561dd89c248bb7238c286f1cd77c2c951/src%2Ftest%2Fui%2Ferror-codes%2FE0034.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0034.stderr?ref=f3021b3561dd89c248bb7238c286f1cd77c2c951", "patch": "@@ -17,11 +17,11 @@ LL |     fn foo() {}\n help: disambiguate the associated function for candidate #1\n    |\n LL |     Trait1::foo()\n-   |     ^^^^^^^^^^^\n+   |     ^^^^^^^^\n help: disambiguate the associated function for candidate #2\n    |\n LL |     Trait2::foo()\n-   |     ^^^^^^^^^^^\n+   |     ^^^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "33cf76d777bb6666087273d749f08b58489da3f0", "filename": "src/test/ui/issues/issue-18446.stderr", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f3021b3561dd89c248bb7238c286f1cd77c2c951/src%2Ftest%2Fui%2Fissues%2Fissue-18446.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f3021b3561dd89c248bb7238c286f1cd77c2c951/src%2Ftest%2Fui%2Fissues%2Fissue-18446.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-18446.stderr?ref=f3021b3561dd89c248bb7238c286f1cd77c2c951", "patch": "@@ -2,10 +2,7 @@ error[E0034]: multiple applicable items in scope\n   --> $DIR/issue-18446.rs:18:7\n    |\n LL |     x.foo();\n-   |     --^^^--\n-   |     | |\n-   |     | multiple `foo` found\n-   |     help: disambiguate the associated function for candidate #2: `T::foo(&x)`\n+   |       ^^^ multiple `foo` found\n    |\n note: candidate #1 is defined in an impl for the type `(dyn T + 'a)`\n   --> $DIR/issue-18446.rs:9:5\n@@ -17,6 +14,10 @@ note: candidate #2 is defined in the trait `T`\n    |\n LL |     fn foo(&self);\n    |     ^^^^^^^^^^^^^^\n+help: disambiguate the associated function for candidate #2\n+   |\n+LL |     T::foo(&x);\n+   |     ^^^^^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "7bfb8baa0c643b34c2f0936f01c3fb2d12a6f185", "filename": "src/test/ui/methods/method-ambig-two-traits-from-impls2.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f3021b3561dd89c248bb7238c286f1cd77c2c951/src%2Ftest%2Fui%2Fmethods%2Fmethod-ambig-two-traits-from-impls2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f3021b3561dd89c248bb7238c286f1cd77c2c951/src%2Ftest%2Fui%2Fmethods%2Fmethod-ambig-two-traits-from-impls2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmethods%2Fmethod-ambig-two-traits-from-impls2.stderr?ref=f3021b3561dd89c248bb7238c286f1cd77c2c951", "patch": "@@ -17,11 +17,11 @@ LL |     fn foo() {}\n help: disambiguate the associated function for candidate #1\n    |\n LL |     A::foo();\n-   |     ^^^^^^\n+   |     ^^^\n help: disambiguate the associated function for candidate #2\n    |\n LL |     B::foo();\n-   |     ^^^^^^\n+   |     ^^^\n \n error: aborting due to previous error\n "}, {"sha": "f789441378fe4d24792e52cb1bc853b24d2bc830", "filename": "src/test/ui/span/issue-7575.stderr", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f3021b3561dd89c248bb7238c286f1cd77c2c951/src%2Ftest%2Fui%2Fspan%2Fissue-7575.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f3021b3561dd89c248bb7238c286f1cd77c2c951/src%2Ftest%2Fui%2Fspan%2Fissue-7575.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-7575.stderr?ref=f3021b3561dd89c248bb7238c286f1cd77c2c951", "patch": "@@ -61,10 +61,7 @@ error[E0599]: no method named `is_str` found for type parameter `T` in the curre\n   --> $DIR/issue-7575.rs:70:7\n    |\n LL |     t.is_str()\n-   |     --^^^^^^--\n-   |     | |\n-   |     | this is an associated function, not a method\n-   |     help: disambiguate the associated function for the candidate: `ManyImplTrait::is_str(t)`\n+   |       ^^^^^^ this is an associated function, not a method\n    |\n    = note: found the following associated functions; to be used as methods, functions must have a `self` parameter\n note: the candidate is defined in the trait `ManyImplTrait`\n@@ -73,6 +70,10 @@ note: the candidate is defined in the trait `ManyImplTrait`\n LL |     fn is_str() -> bool {\n    |     ^^^^^^^^^^^^^^^^^^^\n    = help: items from traits can only be used if the type parameter is bounded by the trait\n+help: disambiguate the associated function for the candidate\n+   |\n+LL |     ManyImplTrait::is_str(t)\n+   |\n \n error: aborting due to 3 previous errors\n "}]}