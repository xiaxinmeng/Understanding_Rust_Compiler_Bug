{"sha": "2f25d9c983c5730d79cc14278e666b8eb6531b10", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJmMjVkOWM5ODNjNTczMGQ3OWNjMTQyNzhlNjY2YjhlYjY1MzFiMTA=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-02-09T01:05:53Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-02-09T01:05:53Z"}, "message": "Handle subtle view-shift on outptr in generic calls. Can construct generic objs now.", "tree": {"sha": "278091bbe46894e5a3862016de6d210d54b4f52c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/278091bbe46894e5a3862016de6d210d54b4f52c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2f25d9c983c5730d79cc14278e666b8eb6531b10", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2f25d9c983c5730d79cc14278e666b8eb6531b10", "html_url": "https://github.com/rust-lang/rust/commit/2f25d9c983c5730d79cc14278e666b8eb6531b10", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2f25d9c983c5730d79cc14278e666b8eb6531b10/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "74f71d387eceb4235bae89a400292ad6ecde8ca1", "url": "https://api.github.com/repos/rust-lang/rust/commits/74f71d387eceb4235bae89a400292ad6ecde8ca1", "html_url": "https://github.com/rust-lang/rust/commit/74f71d387eceb4235bae89a400292ad6ecde8ca1"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "4401f8852c75f1b372a7621ccb79bd0383287318", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2f25d9c983c5730d79cc14278e666b8eb6531b10/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f25d9c983c5730d79cc14278e666b8eb6531b10/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=2f25d9c983c5730d79cc14278e666b8eb6531b10", "patch": "@@ -2710,6 +2710,14 @@ fn trans_args(@block_ctxt cx,\n     }\n     if (ty.type_has_dynamic_size(retty)) {\n         llargs += cx.build.PointerCast(llretslot, T_typaram_ptr());\n+    } else if (ty.count_ty_params(retty) != 0u) {\n+        // It's possible that the callee has some generic-ness somewhere in\n+        // its return value -- say a method signature within an obj or a fn\n+        // type deep in a structure -- which the caller has a concrete view\n+        // of. If so, cast the caller's view of the restlot to the callee's\n+        // view, for the sake of making a type-compatible call.\n+        llargs += cx.build.PointerCast(llretslot,\n+                                       T_ptr(type_of(cx.fcx.ccx, retty)));\n     } else {\n         llargs += llretslot;\n     }"}]}