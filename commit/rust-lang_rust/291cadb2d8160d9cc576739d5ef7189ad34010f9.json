{"sha": "291cadb2d8160d9cc576739d5ef7189ad34010f9", "node_id": "C_kwDOAAsO6NoAKDI5MWNhZGIyZDgxNjBkOWNjNTc2NzM5ZDVlZjcxODlhZDM0MDEwZjk", "commit": {"author": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2023-02-10T20:06:22Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-02-10T20:06:22Z"}, "message": "Merge pull request #1355 from matthiaskrgr/clippy_perf\n\nclippy::perf fixes", "tree": {"sha": "5aa25cd3c0cd4a9be6e2f761c064e56d88dbf28c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5aa25cd3c0cd4a9be6e2f761c064e56d88dbf28c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/291cadb2d8160d9cc576739d5ef7189ad34010f9", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJj5qO+CRBK7hj4Ov3rIwAAL4UIAFMcLpN3TMmWgpM8o2ZrFGD1\nwGXL9FDWp54fPDfbrJBt5+ivrw20az/3PJIctJSarVuNMSUCS9zE8oQDEkGsM+RS\nd+GlOj1OvdZZ0xXhQ2d0lQ9f3MATcvbht1GdGH7hR8WMW2QT0HMCs3A3GMqLnbCg\nTV1lebstjX85QHilMz/FLFYFLgsnbQWfowDbMVfb570HdBgd4d+vAFaGbild+yDO\n7ZslWRh2FlziE8LBddQOWKC4/ky8pqlHX6jucy+dKhjFTpSOPQui1A1EKQT1LGv5\nW6RCaj1+4leJfdkhDAx/REDw1feUJWkgzZCsZj0KG2sCXc2ffa7GdahPjlr4qbQ=\n=0ss4\n-----END PGP SIGNATURE-----\n", "payload": "tree 5aa25cd3c0cd4a9be6e2f761c064e56d88dbf28c\nparent 4a1c2d9c7c5cb370eea0df964d537b60d29a4191\nparent 1a072c5688e3bb8f6ba7db5bce3ca1c29cf3919d\nauthor bjorn3 <17426603+bjorn3@users.noreply.github.com> 1676059582 +0100\ncommitter GitHub <noreply@github.com> 1676059582 +0100\n\nMerge pull request #1355 from matthiaskrgr/clippy_perf\n\nclippy::perf fixes"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/291cadb2d8160d9cc576739d5ef7189ad34010f9", "html_url": "https://github.com/rust-lang/rust/commit/291cadb2d8160d9cc576739d5ef7189ad34010f9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/291cadb2d8160d9cc576739d5ef7189ad34010f9/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4a1c2d9c7c5cb370eea0df964d537b60d29a4191", "url": "https://api.github.com/repos/rust-lang/rust/commits/4a1c2d9c7c5cb370eea0df964d537b60d29a4191", "html_url": "https://github.com/rust-lang/rust/commit/4a1c2d9c7c5cb370eea0df964d537b60d29a4191"}, {"sha": "1a072c5688e3bb8f6ba7db5bce3ca1c29cf3919d", "url": "https://api.github.com/repos/rust-lang/rust/commits/1a072c5688e3bb8f6ba7db5bce3ca1c29cf3919d", "html_url": "https://github.com/rust-lang/rust/commit/1a072c5688e3bb8f6ba7db5bce3ca1c29cf3919d"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "c084d10502a9d3028f5b17059e79f45ab2e9c371", "filename": "src/base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/291cadb2d8160d9cc576739d5ef7189ad34010f9/src%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/291cadb2d8160d9cc576739d5ef7189ad34010f9/src%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbase.rs?ref=291cadb2d8160d9cc576739d5ef7189ad34010f9", "patch": "@@ -192,7 +192,7 @@ pub(crate) fn compile_fn(\n                         let pass_times = cranelift_codegen::timing::take_current();\n                         // Replace newlines with | as measureme doesn't allow control characters like\n                         // newlines inside strings.\n-                        recorder.record_arg(format!(\"{}\", pass_times).replace(\"\\n\", \" | \"));\n+                        recorder.record_arg(format!(\"{}\", pass_times).replace('\\n', \" | \"));\n                         recording_args = true;\n                     },\n                 )"}, {"sha": "a74f8ffa23d43546acd606b4af8fdb356a8d5d51", "filename": "src/global_asm.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/291cadb2d8160d9cc576739d5ef7189ad34010f9/src%2Fglobal_asm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/291cadb2d8160d9cc576739d5ef7189ad34010f9/src%2Fglobal_asm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fglobal_asm.rs?ref=291cadb2d8160d9cc576739d5ef7189ad34010f9", "patch": "@@ -125,7 +125,7 @@ pub(crate) fn compile_global_asm(\n     let output_object_file = config.output_filenames.temp_path(OutputType::Object, Some(cgu_name));\n \n     // Assemble `global_asm`\n-    let global_asm_object_file = add_file_stem_postfix(output_object_file.clone(), \".asm\");\n+    let global_asm_object_file = add_file_stem_postfix(output_object_file, \".asm\");\n     let mut child = Command::new(&config.assembler)\n         .arg(\"-o\")\n         .arg(&global_asm_object_file)"}, {"sha": "e0a081c9d498bb41207ebf3c93aaa2ec060e6332", "filename": "src/pretty_clif.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/291cadb2d8160d9cc576739d5ef7189ad34010f9/src%2Fpretty_clif.rs", "raw_url": "https://github.com/rust-lang/rust/raw/291cadb2d8160d9cc576739d5ef7189ad34010f9/src%2Fpretty_clif.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fpretty_clif.rs?ref=291cadb2d8160d9cc576739d5ef7189ad34010f9", "patch": "@@ -245,7 +245,7 @@ pub(crate) fn write_clif_file(\n         for flag in isa.flags().iter() {\n             writeln!(file, \"set {}\", flag)?;\n         }\n-        write!(file, \"target {}\", isa.triple().architecture.to_string())?;\n+        write!(file, \"target {}\", isa.triple().architecture)?;\n         for isa_flag in isa.isa_flags().iter() {\n             write!(file, \" {}\", isa_flag)?;\n         }"}]}