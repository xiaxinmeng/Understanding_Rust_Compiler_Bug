{"sha": "1312d30a6a837f72c3f36f5dc1c575a29890aa2c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEzMTJkMzBhNmE4MzdmNzJjM2YzNmY1ZGMxYzU3NWEyOTg5MGFhMmM=", "commit": {"author": {"name": "Alexis Bourget", "email": "alexis.bourget@gmail.com", "date": "2020-06-09T20:40:30Z"}, "committer": {"name": "Alexis Bourget", "email": "alexis.bourget@gmail.com", "date": "2020-06-09T20:40:30Z"}, "message": "Remove a lot of unecessary/duplicated comments", "tree": {"sha": "db6857d69f3d3498744d6149b059425f2468b15f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/db6857d69f3d3498744d6149b059425f2468b15f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1312d30a6a837f72c3f36f5dc1c575a29890aa2c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1312d30a6a837f72c3f36f5dc1c575a29890aa2c", "html_url": "https://github.com/rust-lang/rust/commit/1312d30a6a837f72c3f36f5dc1c575a29890aa2c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1312d30a6a837f72c3f36f5dc1c575a29890aa2c/comments", "author": {"login": "poliorcetics", "id": 7951708, "node_id": "MDQ6VXNlcjc5NTE3MDg=", "avatar_url": "https://avatars.githubusercontent.com/u/7951708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poliorcetics", "html_url": "https://github.com/poliorcetics", "followers_url": "https://api.github.com/users/poliorcetics/followers", "following_url": "https://api.github.com/users/poliorcetics/following{/other_user}", "gists_url": "https://api.github.com/users/poliorcetics/gists{/gist_id}", "starred_url": "https://api.github.com/users/poliorcetics/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poliorcetics/subscriptions", "organizations_url": "https://api.github.com/users/poliorcetics/orgs", "repos_url": "https://api.github.com/users/poliorcetics/repos", "events_url": "https://api.github.com/users/poliorcetics/events{/privacy}", "received_events_url": "https://api.github.com/users/poliorcetics/received_events", "type": "User", "site_admin": false}, "committer": {"login": "poliorcetics", "id": 7951708, "node_id": "MDQ6VXNlcjc5NTE3MDg=", "avatar_url": "https://avatars.githubusercontent.com/u/7951708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poliorcetics", "html_url": "https://github.com/poliorcetics", "followers_url": "https://api.github.com/users/poliorcetics/followers", "following_url": "https://api.github.com/users/poliorcetics/following{/other_user}", "gists_url": "https://api.github.com/users/poliorcetics/gists{/gist_id}", "starred_url": "https://api.github.com/users/poliorcetics/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poliorcetics/subscriptions", "organizations_url": "https://api.github.com/users/poliorcetics/orgs", "repos_url": "https://api.github.com/users/poliorcetics/repos", "events_url": "https://api.github.com/users/poliorcetics/events{/privacy}", "received_events_url": "https://api.github.com/users/poliorcetics/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fdef1a5915332a3f9012b41f4176cf2a16025257", "url": "https://api.github.com/repos/rust-lang/rust/commits/fdef1a5915332a3f9012b41f4176cf2a16025257", "html_url": "https://github.com/rust-lang/rust/commit/fdef1a5915332a3f9012b41f4176cf2a16025257"}], "stats": {"total": 14, "additions": 3, "deletions": 11}, "files": [{"sha": "b3ef521d6ecb0d1e1dcacb46ea93e0da77e22bd9", "filename": "src/libstd/sync/mutex.rs", "status": "modified", "additions": 3, "deletions": 11, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/1312d30a6a837f72c3f36f5dc1c575a29890aa2c/src%2Flibstd%2Fsync%2Fmutex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1312d30a6a837f72c3f36f5dc1c575a29890aa2c/src%2Flibstd%2Fsync%2Fmutex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Fmutex.rs?ref=1312d30a6a837f72c3f36f5dc1c575a29890aa2c", "patch": "@@ -118,15 +118,11 @@ use crate::sys_common::poison::{self, LockResult, TryLockError, TryLockResult};\n ///\n /// const N: usize = 3;\n ///\n-/// // Some data to work with in multiple threads.\n /// let data_mutex = Arc::new(Mutex::new(vec![1, 2, 3, 4]));\n-/// // The result of all the work across all threads.\n /// let res_mutex = Arc::new(Mutex::new(0));\n ///\n-/// // Threads other than the main thread.\n /// let mut threads = Vec::with_capacity(N);\n /// (0..N).for_each(|_| {\n-///     // Getting clones for the mutexes.\n ///     let data_mutex_clone = Arc::clone(&data_mutex);\n ///     let res_mutex_clone = Arc::clone(&res_mutex);\n ///\n@@ -135,10 +131,6 @@ use crate::sys_common::poison::{self, LockResult, TryLockError, TryLockResult};\n ///         // This is the result of some important and long-ish work.\n ///         let result = data.iter().fold(0, |acc, x| acc + x * 2);\n ///         data.push(result);\n-///         // We drop the `data` explicitely because it's not necessary anymore\n-///         // and the thread still has work to do. This allow other threads to\n-///         // start working on the data immediately, without waiting\n-///         // for the rest of the unrelated work to be done here.\n ///         drop(data);\n ///         *res_mutex_clone.lock().unwrap() += result;\n ///     }));\n@@ -153,9 +145,9 @@ use crate::sys_common::poison::{self, LockResult, TryLockError, TryLockResult};\n /// // start working on the data immediately, without waiting\n /// // for the rest of the unrelated work to be done here.\n /// //\n-/// // It's even more important here because we `.join` the threads after that.\n-/// // If we had not dropped the lock, a thread could be waiting forever for\n-/// // it, causing a deadlock.\n+/// // It's even more important here than in the threads because we `.join` the\n+/// // threads after that. If we had not dropped the lock, a thread could be\n+/// // waiting forever for it, causing a deadlock.\n /// drop(data);\n /// // Here the lock is not assigned to a variable and so, even if the scope\n /// // does not end after this line, the mutex is still released:"}]}