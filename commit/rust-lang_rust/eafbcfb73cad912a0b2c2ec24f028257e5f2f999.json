{"sha": "eafbcfb73cad912a0b2c2ec24f028257e5f2f999", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVhZmJjZmI3M2NhZDkxMmEwYjJjMmVjMjRmMDI4MjU3ZTVmMmY5OTk=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2013-09-30T18:01:23Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2013-10-01T16:26:15Z"}, "message": "Change the format! statics to be all-caps\n\nThis lets them get past the non_uppercase_statics lint mode (if it's turned on)\n\nCloses #9631", "tree": {"sha": "e1f95cc9c7cd6b3a75700ca7884ebd811d4309da", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e1f95cc9c7cd6b3a75700ca7884ebd811d4309da"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eafbcfb73cad912a0b2c2ec24f028257e5f2f999", "comment_count": 9, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eafbcfb73cad912a0b2c2ec24f028257e5f2f999", "html_url": "https://github.com/rust-lang/rust/commit/eafbcfb73cad912a0b2c2ec24f028257e5f2f999", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eafbcfb73cad912a0b2c2ec24f028257e5f2f999/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "12404aaaddd1edc0c59e21f03a9f5ac8df828dcf", "url": "https://api.github.com/repos/rust-lang/rust/commits/12404aaaddd1edc0c59e21f03a9f5ac8df828dcf", "html_url": "https://github.com/rust-lang/rust/commit/12404aaaddd1edc0c59e21f03a9f5ac8df828dcf"}], "stats": {"total": 43, "additions": 31, "deletions": 12}, "files": [{"sha": "11d9713af98f8bcbf075dfe8a34d9b5c4877658a", "filename": "src/libsyntax/ext/format.rs", "status": "modified", "additions": 16, "deletions": 12, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/eafbcfb73cad912a0b2c2ec24f028257e5f2f999/src%2Flibsyntax%2Fext%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eafbcfb73cad912a0b2c2ec24f028257e5f2f999/src%2Flibsyntax%2Fext%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fformat.rs?ref=eafbcfb73cad912a0b2c2ec24f028257e5f2f999", "patch": "@@ -319,6 +319,17 @@ impl Context {\n         }\n     }\n \n+    /// These attributes are applied to all statics that this syntax extension\n+    /// will generate.\n+    fn static_attrs(&self) -> ~[ast::Attribute] {\n+        // Flag statics as `address_insignificant` so LLVM can merge duplicate\n+        // globals as much as possible (which we're generating a whole lot of).\n+        let unnamed = self.ecx.meta_word(self.fmtsp, @\"address_insignificant\");\n+        let unnamed = self.ecx.attribute(self.fmtsp, unnamed);\n+\n+        return ~[unnamed];\n+    }\n+\n     /// Translate a `parse::Piece` to a static `rt::Piece`\n     fn trans_piece(&mut self, piece: &parse::Piece) -> @ast::Expr {\n         let sp = self.fmtsp;\n@@ -444,14 +455,9 @@ impl Context {\n                 ~[]\n             ), None);\n             let st = ast::item_static(ty, ast::MutImmutable, method);\n-            let static_name = self.ecx.ident_of(format!(\"__static_method_{}\",\n+            let static_name = self.ecx.ident_of(format!(\"__STATIC_METHOD_{}\",\n                                                      self.method_statics.len()));\n-            // Flag these statics as `address_insignificant` so LLVM can\n-            // merge duplicate globals as much as possible (which we're\n-            // generating a whole lot of).\n-            let unnamed = self.ecx.meta_word(self.fmtsp, @\"address_insignificant\");\n-            let unnamed = self.ecx.attribute(self.fmtsp, unnamed);\n-            let item = self.ecx.item(sp, static_name, ~[unnamed], st);\n+            let item = self.ecx.item(sp, static_name, self.static_attrs(), st);\n             self.method_statics.push(item);\n             self.ecx.expr_ident(sp, static_name)\n         };\n@@ -572,11 +578,9 @@ impl Context {\n         );\n         let ty = self.ecx.ty(self.fmtsp, ty);\n         let st = ast::item_static(ty, ast::MutImmutable, fmt);\n-        let static_name = self.ecx.ident_of(\"__static_fmtstr\");\n-        // see above comment for `address_insignificant` and why we do it\n-        let unnamed = self.ecx.meta_word(self.fmtsp, @\"address_insignificant\");\n-        let unnamed = self.ecx.attribute(self.fmtsp, unnamed);\n-        let item = self.ecx.item(self.fmtsp, static_name, ~[unnamed], st);\n+        let static_name = self.ecx.ident_of(\"__STATIC_FMTSTR\");\n+        let item = self.ecx.item(self.fmtsp, static_name,\n+                                 self.static_attrs(), st);\n         let decl = respan(self.fmtsp, ast::DeclItem(item));\n         lets.push(@respan(self.fmtsp, ast::StmtDecl(@decl, ast::DUMMY_NODE_ID)));\n "}, {"sha": "585a61544cab9a6c3afcd0cd0865a4804188caf9", "filename": "src/test/run-pass/format-no-uppercase-statics.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/eafbcfb73cad912a0b2c2ec24f028257e5f2f999/src%2Ftest%2Frun-pass%2Fformat-no-uppercase-statics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eafbcfb73cad912a0b2c2ec24f028257e5f2f999/src%2Ftest%2Frun-pass%2Fformat-no-uppercase-statics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fformat-no-uppercase-statics.rs?ref=eafbcfb73cad912a0b2c2ec24f028257e5f2f999", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#[deny(non_uppercase_statics)];\n+\n+pub fn main() {\n+    println!(\"I generate statics with {0, select, other{#}}\", \"weird names\");\n+}"}]}