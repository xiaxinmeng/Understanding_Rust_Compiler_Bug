{"sha": "56c7145993f94a12bf923f08cbd62d963e62bbd1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU2YzcxNDU5OTNmOTRhMTJiZjkyM2YwOGNiZDYyZDk2M2U2MmJiZDE=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonas.schievink@ferrous-systems.com", "date": "2020-06-10T10:30:33Z"}, "committer": {"name": "Jonas Schievink", "email": "jonas.schievink@ferrous-systems.com", "date": "2020-06-10T10:40:33Z"}, "message": "Limit import map queries", "tree": {"sha": "d61f3726112bc0c2fd5749ce7d95777de1246c43", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d61f3726112bc0c2fd5749ce7d95777de1246c43"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/56c7145993f94a12bf923f08cbd62d963e62bbd1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/56c7145993f94a12bf923f08cbd62d963e62bbd1", "html_url": "https://github.com/rust-lang/rust/commit/56c7145993f94a12bf923f08cbd62d963e62bbd1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/56c7145993f94a12bf923f08cbd62d963e62bbd1/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bcf875f46ae5142c42ddac8094e1b6652182d4be", "url": "https://api.github.com/repos/rust-lang/rust/commits/bcf875f46ae5142c42ddac8094e1b6652182d4be", "html_url": "https://github.com/rust-lang/rust/commit/bcf875f46ae5142c42ddac8094e1b6652182d4be"}], "stats": {"total": 58, "additions": 51, "deletions": 7}, "files": [{"sha": "a55fe03a699c1eb5b922f2a8a5491936a6b9b82a", "filename": "crates/ra_hir/src/code_model.rs", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/56c7145993f94a12bf923f08cbd62d963e62bbd1/crates%2Fra_hir%2Fsrc%2Fcode_model.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56c7145993f94a12bf923f08cbd62d963e62bbd1/crates%2Fra_hir%2Fsrc%2Fcode_model.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fcode_model.rs?ref=56c7145993f94a12bf923f08cbd62d963e62bbd1", "patch": "@@ -104,12 +104,16 @@ impl Crate {\n         db: &dyn DefDatabase,\n         query: &str,\n     ) -> impl Iterator<Item = Either<ModuleDef, MacroDef>> {\n-        import_map::search_dependencies(db, self.into(), import_map::Query::new(query).anchor_end())\n-            .into_iter()\n-            .map(|item| match item {\n-                ItemInNs::Types(mod_id) | ItemInNs::Values(mod_id) => Either::Left(mod_id.into()),\n-                ItemInNs::Macros(mac_id) => Either::Right(mac_id.into()),\n-            })\n+        import_map::search_dependencies(\n+            db,\n+            self.into(),\n+            import_map::Query::new(query).anchor_end().limit(40),\n+        )\n+        .into_iter()\n+        .map(|item| match item {\n+            ItemInNs::Types(mod_id) | ItemInNs::Values(mod_id) => Either::Left(mod_id.into()),\n+            ItemInNs::Macros(mac_id) => Either::Right(mac_id.into()),\n+        })\n     }\n \n     pub fn all(db: &dyn HirDatabase) -> Vec<Crate> {"}, {"sha": "70368d8df5f4276feeb38a2eeab5a28e0ee72a58", "filename": "crates/ra_hir_def/src/import_map.rs", "status": "modified", "additions": 41, "deletions": 1, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/56c7145993f94a12bf923f08cbd62d963e62bbd1/crates%2Fra_hir_def%2Fsrc%2Fimport_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56c7145993f94a12bf923f08cbd62d963e62bbd1/crates%2Fra_hir_def%2Fsrc%2Fimport_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fimport_map.rs?ref=56c7145993f94a12bf923f08cbd62d963e62bbd1", "patch": "@@ -178,18 +178,24 @@ fn cmp((_, lhs): &(&ItemInNs, &ModPath), (_, rhs): &(&ItemInNs, &ModPath)) -> Or\n pub struct Query {\n     query: String,\n     anchor_end: bool,\n+    limit: usize,\n }\n \n impl Query {\n     pub fn new(query: &str) -> Self {\n-        Self { query: query.to_lowercase(), anchor_end: false }\n+        Self { query: query.to_lowercase(), anchor_end: false, limit: usize::max_value() }\n     }\n \n     /// Only returns items whose paths end with the (case-insensitive) query string as their last\n     /// segment.\n     pub fn anchor_end(self) -> Self {\n         Self { anchor_end: true, ..self }\n     }\n+\n+    /// Limits the returned number of items to `limit`.\n+    pub fn limit(self, limit: usize) -> Self {\n+        Self { limit, ..self }\n+    }\n }\n \n /// Searches dependencies of `krate` for an importable path matching `query`.\n@@ -237,6 +243,11 @@ pub fn search_dependencies<'a>(\n                 let item_path = &import_map.map[item];\n                 fst_path(item_path) == fst_path(path)\n             }));\n+\n+            if res.len() >= query.limit {\n+                res.truncate(query.limit);\n+                return res;\n+            }\n         }\n     }\n \n@@ -570,4 +581,33 @@ mod tests {\n         dep::Fmt (m)\n         \"###);\n     }\n+\n+    #[test]\n+    fn search_limit() {\n+        let res = search_dependencies_of(\n+            r#\"\n+        //- /main.rs crate:main deps:dep\n+        //- /dep.rs crate:dep\n+        pub mod fmt {\n+            pub trait Display {\n+                fn fmt();\n+            }\n+        }\n+        #[macro_export]\n+        macro_rules! Fmt {\n+            () => {};\n+        }\n+        pub struct Fmt;\n+\n+        pub fn format() {}\n+        pub fn no() {}\n+    \"#,\n+            \"main\",\n+            Query::new(\"\").limit(2),\n+        );\n+        assert_snapshot!(res, @r###\"\n+        dep::fmt (t)\n+        dep::Fmt (t)\n+        \"###);\n+    }\n }"}]}