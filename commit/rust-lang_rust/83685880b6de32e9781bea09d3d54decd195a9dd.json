{"sha": "83685880b6de32e9781bea09d3d54decd195a9dd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgzNjg1ODgwYjZkZTMyZTk3ODFiZWEwOWQzZDU0ZGVjZDE5NWE5ZGQ=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-10-10T18:19:12Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-10-10T18:19:12Z"}, "message": "Rollup merge of #77748 - mati865:dead-code-cleanup, r=petrochenkov\n\nDead code cleanup in windows-gnu std\n\nCloses https://github.com/rust-lang/rust/issues/77622\n\nThis is the only leftover I could find.", "tree": {"sha": "d6a2d7e1b42562e2eb885bd5c76963b896636f3b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d6a2d7e1b42562e2eb885bd5c76963b896636f3b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/83685880b6de32e9781bea09d3d54decd195a9dd", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfgfshCRBK7hj4Ov3rIwAAdHIIADC2Bo3/O4AexM7L/IiH0yat\n+FjDAAJFcIaWZop6RCrUujA3TsI6va5Ctlj4elFAjGJG9lfiC5RZVtnrm1nC/6of\n9KzqESJLMMT1R7Yyi7eLfmMmtIEOIx8qprdZwY4NwuzqDY5KUIlyHzDtChEjATp3\n9xI/7YvUn2xlsGNn8G1S100McbIUWrj1UoLbGREyom6lnEY6yssM9FsdSeASCkKg\np7KUncXuNUQCCAdHPp2RfzaSF9c7Yh3Yj/N68m/jcbd+Jx37GkuojLGHRWOd2/bO\noE9yu1+2A9pxIC3v9r1XtZ1q4bDaTP4jXDjoW0VbsskW96L7fuV8HfTjVoZWHF4=\n=blhW\n-----END PGP SIGNATURE-----\n", "payload": "tree d6a2d7e1b42562e2eb885bd5c76963b896636f3b\nparent b6b6bc0a61e847f38ad5e8bd136b5473601f366d\nparent 8818fda7f0ba5ed9e83f89d760647c3203c00e8e\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1602353952 +0900\ncommitter GitHub <noreply@github.com> 1602353952 +0900\n\nRollup merge of #77748 - mati865:dead-code-cleanup, r=petrochenkov\n\nDead code cleanup in windows-gnu std\n\nCloses https://github.com/rust-lang/rust/issues/77622\n\nThis is the only leftover I could find.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/83685880b6de32e9781bea09d3d54decd195a9dd", "html_url": "https://github.com/rust-lang/rust/commit/83685880b6de32e9781bea09d3d54decd195a9dd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/83685880b6de32e9781bea09d3d54decd195a9dd/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b6b6bc0a61e847f38ad5e8bd136b5473601f366d", "url": "https://api.github.com/repos/rust-lang/rust/commits/b6b6bc0a61e847f38ad5e8bd136b5473601f366d", "html_url": "https://github.com/rust-lang/rust/commit/b6b6bc0a61e847f38ad5e8bd136b5473601f366d"}, {"sha": "8818fda7f0ba5ed9e83f89d760647c3203c00e8e", "url": "https://api.github.com/repos/rust-lang/rust/commits/8818fda7f0ba5ed9e83f89d760647c3203c00e8e", "html_url": "https://github.com/rust-lang/rust/commit/8818fda7f0ba5ed9e83f89d760647c3203c00e8e"}], "stats": {"total": 66, "additions": 1, "deletions": 65}, "files": [{"sha": "657421e3fa4cc7982fb433036c37c8378a267a93", "filename": "library/std/src/sys/windows/c.rs", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/83685880b6de32e9781bea09d3d54decd195a9dd/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83685880b6de32e9781bea09d3d54decd195a9dd/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fc.rs?ref=83685880b6de32e9781bea09d3d54decd195a9dd", "patch": "@@ -47,7 +47,6 @@ pub type LPWCH = *mut WCHAR;\n pub type LPWIN32_FIND_DATAW = *mut WIN32_FIND_DATAW;\n pub type LPWSADATA = *mut WSADATA;\n pub type LPWSAPROTOCOL_INFO = *mut WSAPROTOCOL_INFO;\n-pub type LPSTR = *mut CHAR;\n pub type LPWSTR = *mut WCHAR;\n pub type LPFILETIME = *mut FILETIME;\n pub type LPWSABUF = *mut WSABUF;\n@@ -876,16 +875,6 @@ extern \"system\" {\n     pub fn DeleteFileW(lpPathName: LPCWSTR) -> BOOL;\n     pub fn GetCurrentDirectoryW(nBufferLength: DWORD, lpBuffer: LPWSTR) -> DWORD;\n     pub fn SetCurrentDirectoryW(lpPathName: LPCWSTR) -> BOOL;\n-    pub fn WideCharToMultiByte(\n-        CodePage: UINT,\n-        dwFlags: DWORD,\n-        lpWideCharStr: LPCWSTR,\n-        cchWideChar: c_int,\n-        lpMultiByteStr: LPSTR,\n-        cbMultiByte: c_int,\n-        lpDefaultChar: LPCSTR,\n-        lpUsedDefaultChar: LPBOOL,\n-    ) -> c_int;\n \n     pub fn closesocket(socket: SOCKET) -> c_int;\n     pub fn recv(socket: SOCKET, buf: *mut c_void, len: c_int, flags: c_int) -> c_int;"}, {"sha": "8c19cc78b09cd2fe968dcb51ea81af694e9eeb73", "filename": "library/std/src/sys/windows/mod.rs", "status": "modified", "additions": 0, "deletions": 53, "changes": 53, "blob_url": "https://github.com/rust-lang/rust/blob/83685880b6de32e9781bea09d3d54decd195a9dd/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83685880b6de32e9781bea09d3d54decd195a9dd/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fmod.rs?ref=83685880b6de32e9781bea09d3d54decd195a9dd", "patch": "@@ -4,7 +4,6 @@ use crate::ffi::{OsStr, OsString};\n use crate::io::ErrorKind;\n use crate::os::windows::ffi::{OsStrExt, OsStringExt};\n use crate::path::PathBuf;\n-use crate::ptr;\n use crate::time::Duration;\n \n pub use self::rand::hashmap_random_keys;\n@@ -206,58 +205,6 @@ fn os2path(s: &[u16]) -> PathBuf {\n     PathBuf::from(OsString::from_wide(s))\n }\n \n-#[allow(dead_code)] // Only used in backtrace::gnu::get_executable_filename()\n-fn wide_char_to_multi_byte(\n-    code_page: u32,\n-    flags: u32,\n-    s: &[u16],\n-    no_default_char: bool,\n-) -> crate::io::Result<Vec<i8>> {\n-    unsafe {\n-        let mut size = c::WideCharToMultiByte(\n-            code_page,\n-            flags,\n-            s.as_ptr(),\n-            s.len() as i32,\n-            ptr::null_mut(),\n-            0,\n-            ptr::null(),\n-            ptr::null_mut(),\n-        );\n-        if size == 0 {\n-            return Err(crate::io::Error::last_os_error());\n-        }\n-\n-        let mut buf = Vec::with_capacity(size as usize);\n-        buf.set_len(size as usize);\n-\n-        let mut used_default_char = c::FALSE;\n-        size = c::WideCharToMultiByte(\n-            code_page,\n-            flags,\n-            s.as_ptr(),\n-            s.len() as i32,\n-            buf.as_mut_ptr(),\n-            buf.len() as i32,\n-            ptr::null(),\n-            if no_default_char { &mut used_default_char } else { ptr::null_mut() },\n-        );\n-        if size == 0 {\n-            return Err(crate::io::Error::last_os_error());\n-        }\n-        if no_default_char && used_default_char == c::TRUE {\n-            return Err(crate::io::Error::new(\n-                crate::io::ErrorKind::InvalidData,\n-                \"string cannot be converted to requested code page\",\n-            ));\n-        }\n-\n-        buf.set_len(size as usize);\n-\n-        Ok(buf)\n-    }\n-}\n-\n pub fn truncate_utf16_at_nul(v: &[u16]) -> &[u16] {\n     match unrolled_find_u16s(0, v) {\n         // don't include the 0"}, {"sha": "ff1d82fc990407bbe290dbb879acb138ef42eba8", "filename": "library/unwind/src/libunwind.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/83685880b6de32e9781bea09d3d54decd195a9dd/library%2Funwind%2Fsrc%2Flibunwind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83685880b6de32e9781bea09d3d54decd195a9dd/library%2Funwind%2Fsrc%2Flibunwind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Funwind%2Fsrc%2Flibunwind.rs?ref=83685880b6de32e9781bea09d3d54decd195a9dd", "patch": "@@ -89,7 +89,7 @@ extern \"C\" {\n }\n \n cfg_if::cfg_if! {\n-if #[cfg(all(any(target_os = \"ios\", target_os = \"netbsd\", not(target_arch = \"arm\"))))] {\n+if #[cfg(any(target_os = \"ios\", target_os = \"netbsd\", not(target_arch = \"arm\")))] {\n     // Not ARM EHABI\n     #[repr(C)]\n     #[derive(Copy, Clone, PartialEq)]"}]}