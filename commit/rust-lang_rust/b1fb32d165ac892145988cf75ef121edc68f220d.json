{"sha": "b1fb32d165ac892145988cf75ef121edc68f220d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIxZmIzMmQxNjVhYzg5MjE0NTk4OGNmNzVlZjEyMWVkYzY4ZjIyMGQ=", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2021-06-16T20:54:54Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-06-16T20:54:54Z"}, "message": "Rollup merge of #86140 - scottmcm:array-hash-facepalm, r=kennytm\n\nMention the `Borrow` guarantee on the `Hash` implementations for Arrays and `Vec`\n\nTo remind people like me who forget about it and send PRs to make them different, and to (probably) get a test failure if the code is changed to no longer uphold it.", "tree": {"sha": "5434808b9bcb70d91bd932bd6792f5405eb863fe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5434808b9bcb70d91bd932bd6792f5405eb863fe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b1fb32d165ac892145988cf75ef121edc68f220d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgymUeCRBK7hj4Ov3rIwAA66AIAAJrQQ7u0derhKTMG+6CkRG4\nYFe7iA376LIIffKSfcFe5KTvvR1jMbJvxYoJUUPKD0vSEkrZ9bn7a3vxt9sKKlJE\np1YG4U3b2PAMJ3Z1wdU4lREhKUVCvZ0g1dJgbmIslraxLhdtGt0rPrd0DCkb8zfY\nY8oWH6w/PkehvkS6EphPE0iQBHyOQej4ISeqK2C18QFlqIsv7R4KkwIgTcLBk5lM\nw/RA9qmKTXfXhazAPdmdJFYQCQaMXanlCGkL8cwIpeYCYOgGh4KEMutypaim8u1C\nQH0b3T3rip/ln6BCPjKTIyRJFXPxoG1/AJgwfkH9Xs4aLJ5NgkLUkc1dJqG2Du0=\n=sPuv\n-----END PGP SIGNATURE-----\n", "payload": "tree 5434808b9bcb70d91bd932bd6792f5405eb863fe\nparent 4ff55ecf0477034a05bcf4a135e0a25e428cfccb\nparent 3802d573c36902dbab68199beee3041514efd8bd\nauthor Yuki Okushi <jtitor@2k36.org> 1623876894 +0900\ncommitter GitHub <noreply@github.com> 1623876894 +0900\n\nRollup merge of #86140 - scottmcm:array-hash-facepalm, r=kennytm\n\nMention the `Borrow` guarantee on the `Hash` implementations for Arrays and `Vec`\n\nTo remind people like me who forget about it and send PRs to make them different, and to (probably) get a test failure if the code is changed to no longer uphold it.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b1fb32d165ac892145988cf75ef121edc68f220d", "html_url": "https://github.com/rust-lang/rust/commit/b1fb32d165ac892145988cf75ef121edc68f220d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b1fb32d165ac892145988cf75ef121edc68f220d/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4ff55ecf0477034a05bcf4a135e0a25e428cfccb", "url": "https://api.github.com/repos/rust-lang/rust/commits/4ff55ecf0477034a05bcf4a135e0a25e428cfccb", "html_url": "https://github.com/rust-lang/rust/commit/4ff55ecf0477034a05bcf4a135e0a25e428cfccb"}, {"sha": "3802d573c36902dbab68199beee3041514efd8bd", "url": "https://api.github.com/repos/rust-lang/rust/commits/3802d573c36902dbab68199beee3041514efd8bd", "html_url": "https://github.com/rust-lang/rust/commit/3802d573c36902dbab68199beee3041514efd8bd"}], "stats": {"total": 34, "additions": 34, "deletions": 0}, "files": [{"sha": "b59d2977add95ffb5fd45109940ac8a14eea1ff6", "filename": "library/alloc/src/vec/mod.rs", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/b1fb32d165ac892145988cf75ef121edc68f220d/library%2Falloc%2Fsrc%2Fvec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1fb32d165ac892145988cf75ef121edc68f220d/library%2Falloc%2Fsrc%2Fvec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fvec%2Fmod.rs?ref=b1fb32d165ac892145988cf75ef121edc68f220d", "patch": "@@ -2407,6 +2407,23 @@ impl<T: Clone, A: Allocator + Clone> Clone for Vec<T, A> {\n     }\n }\n \n+/// The hash of a vector is the same as that of the corresponding slice,\n+/// as required by the `core::borrow::Borrow` implementation.\n+///\n+/// ```\n+/// use std::hash::{BuildHasher, Hash, Hasher};\n+///\n+/// fn hash_of(x: impl Hash, b: &impl BuildHasher) -> u64 {\n+///     let mut h = b.build_hasher();\n+///     x.hash(&mut h);\n+///     h.finish()\n+/// }\n+///\n+/// let b = std::collections::hash_map::RandomState::new();\n+/// let v: Vec<u8> = vec![0xa8, 0x3c, 0x09];\n+/// let s: &[u8] = &[0xa8, 0x3c, 0x09];\n+/// assert_eq!(hash_of(v, &b), hash_of(s, &b));\n+/// ```\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<T: Hash, A: Allocator> Hash for Vec<T, A> {\n     #[inline]"}, {"sha": "f44e22b3dbd7c5d27ddb114ceb9b037a4a1db373", "filename": "library/core/src/array/mod.rs", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/b1fb32d165ac892145988cf75ef121edc68f220d/library%2Fcore%2Fsrc%2Farray%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1fb32d165ac892145988cf75ef121edc68f220d/library%2Fcore%2Fsrc%2Farray%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Farray%2Fmod.rs?ref=b1fb32d165ac892145988cf75ef121edc68f220d", "patch": "@@ -139,6 +139,23 @@ impl<'a, T, const N: usize> TryFrom<&'a mut [T]> for &'a mut [T; N] {\n     }\n }\n \n+/// The hash of an array is the same as that of the corresponding slice,\n+/// as required by the `Borrow` implementation.\n+///\n+/// ```\n+/// use std::hash::{BuildHasher, Hash, Hasher};\n+///\n+/// fn hash_of(x: impl Hash, b: &impl BuildHasher) -> u64 {\n+///     let mut h = b.build_hasher();\n+///     x.hash(&mut h);\n+///     h.finish()\n+/// }\n+///\n+/// let b = std::collections::hash_map::RandomState::new();\n+/// let a: [u8; 3] = [0xa8, 0x3c, 0x09];\n+/// let s: &[u8] = &[0xa8, 0x3c, 0x09];\n+/// assert_eq!(hash_of(a, &b), hash_of(s, &b));\n+/// ```\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<T: Hash, const N: usize> Hash for [T; N] {\n     fn hash<H: hash::Hasher>(&self, state: &mut H) {"}]}