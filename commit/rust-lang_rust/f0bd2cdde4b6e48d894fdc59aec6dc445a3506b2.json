{"sha": "f0bd2cdde4b6e48d894fdc59aec6dc445a3506b2", "node_id": "C_kwDOAAsO6NoAKGYwYmQyY2RkZTRiNmU0OGQ4OTRmZGM1OWFlYzZkYzQ0NWEzNTA2YjI", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-11-07T13:05:25Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-11-07T13:05:25Z"}, "message": "Rollup merge of #104038 - compiler-errors:super-norm-closure-sig, r=lcnr\n\nNormalize types when deducing closure signature from supertraits\n\nElaborated supertraits should be normalized, since there's no guarantee they don't contain projections :sweat_smile:\n\nFixes #104025\nr? types", "tree": {"sha": "139571bcd466e07b7f03e5ac0684f823ff6f413d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/139571bcd466e07b7f03e5ac0684f823ff6f413d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f0bd2cdde4b6e48d894fdc59aec6dc445a3506b2", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjaQKVCRBK7hj4Ov3rIwAA6/MIAJuKilgiHd9YnksLtxjCWzFT\ngltTvwhZvBvN2vhnS29wSuIm7+l07yG57vnemV8ekhY0gDn7yo1sOy7e/f/tVNx1\np/HL16nn+LcywYiEy02gR5ejKaoJ3ni8ndCZBRfsV1fGyVNhV0N5/nNlQdtzf5lQ\nDapPc/xSlFv82k5h7NsYt1Zgo5TnKxIerv+93NaeiFaEWyC0iyL7SG+YAkTSm1I6\nQVTGm1wiSD5tS9t/S6Qb4gZJynGJ2wfLGiacTXKe5w1DW7TkaeRbDm80Rq7l9xpp\n3/evPb1BS9e4CKX8LhZljDW8V8g8UzneWAaZn/szr8Ni114fRc2yRbmRhpanEqI=\n=aMkY\n-----END PGP SIGNATURE-----\n", "payload": "tree 139571bcd466e07b7f03e5ac0684f823ff6f413d\nparent c5903969145660350d2e7c7e4757c83949beccb7\nparent 9a1043eac7dbd7177ce032c0f777b5ee2f636621\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1667826325 +0530\ncommitter GitHub <noreply@github.com> 1667826325 +0530\n\nRollup merge of #104038 - compiler-errors:super-norm-closure-sig, r=lcnr\n\nNormalize types when deducing closure signature from supertraits\n\nElaborated supertraits should be normalized, since there's no guarantee they don't contain projections :sweat_smile:\n\nFixes #104025\nr? types\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f0bd2cdde4b6e48d894fdc59aec6dc445a3506b2", "html_url": "https://github.com/rust-lang/rust/commit/f0bd2cdde4b6e48d894fdc59aec6dc445a3506b2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f0bd2cdde4b6e48d894fdc59aec6dc445a3506b2/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c5903969145660350d2e7c7e4757c83949beccb7", "url": "https://api.github.com/repos/rust-lang/rust/commits/c5903969145660350d2e7c7e4757c83949beccb7", "html_url": "https://github.com/rust-lang/rust/commit/c5903969145660350d2e7c7e4757c83949beccb7"}, {"sha": "9a1043eac7dbd7177ce032c0f777b5ee2f636621", "url": "https://api.github.com/repos/rust-lang/rust/commits/9a1043eac7dbd7177ce032c0f777b5ee2f636621", "html_url": "https://github.com/rust-lang/rust/commit/9a1043eac7dbd7177ce032c0f777b5ee2f636621"}], "stats": {"total": 27, "additions": 24, "deletions": 3}, "files": [{"sha": "3001e7994767296fc940ee2e653953c89b0dd1a3", "filename": "compiler/rustc_hir_typeck/src/closure.rs", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f0bd2cdde4b6e48d894fdc59aec6dc445a3506b2/compiler%2Frustc_hir_typeck%2Fsrc%2Fclosure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0bd2cdde4b6e48d894fdc59aec6dc445a3506b2/compiler%2Frustc_hir_typeck%2Fsrc%2Fclosure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Fclosure.rs?ref=f0bd2cdde4b6e48d894fdc59aec6dc445a3506b2", "patch": "@@ -10,6 +10,7 @@ use rustc_hir_analysis::astconv::AstConv;\n use rustc_infer::infer::type_variable::{TypeVariableOrigin, TypeVariableOriginKind};\n use rustc_infer::infer::LateBoundRegionConversionTime;\n use rustc_infer::infer::{InferOk, InferResult};\n+use rustc_macros::{TypeFoldable, TypeVisitable};\n use rustc_middle::ty::subst::InternalSubsts;\n use rustc_middle::ty::visit::TypeVisitable;\n use rustc_middle::ty::{self, Ty};\n@@ -22,7 +23,7 @@ use std::cmp;\n use std::iter;\n \n /// What signature do we *expect* the closure to have from context?\n-#[derive(Debug)]\n+#[derive(Debug, Clone, TypeFoldable, TypeVisitable)]\n struct ExpectedSig<'tcx> {\n     /// Span that gave us this expectation, if we know that.\n     cause_span: Option<Span>,\n@@ -241,9 +242,12 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             if expected_sig.is_none()\n                 && let ty::PredicateKind::Projection(proj_predicate) = bound_predicate.skip_binder()\n             {\n-                expected_sig = self.deduce_sig_from_projection(\n+                expected_sig = self.normalize_associated_types_in(\n+                    obligation.cause.span,\n+                    self.deduce_sig_from_projection(\n                     Some(obligation.cause.span),\n-                    bound_predicate.rebind(proj_predicate),\n+                        bound_predicate.rebind(proj_predicate),\n+                    ),\n                 );\n             }\n "}, {"sha": "270bf14c35eca445458fe31e2d86fe03db7ca954", "filename": "src/test/ui/closures/supertrait-hint-references-assoc-ty.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/f0bd2cdde4b6e48d894fdc59aec6dc445a3506b2/src%2Ftest%2Fui%2Fclosures%2Fsupertrait-hint-references-assoc-ty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0bd2cdde4b6e48d894fdc59aec6dc445a3506b2/src%2Ftest%2Fui%2Fclosures%2Fsupertrait-hint-references-assoc-ty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2Fsupertrait-hint-references-assoc-ty.rs?ref=f0bd2cdde4b6e48d894fdc59aec6dc445a3506b2", "patch": "@@ -0,0 +1,17 @@\n+// check-pass\n+\n+pub trait Fn0: Fn(i32) -> Self::Out {\n+    type Out;\n+}\n+\n+impl<F: Fn(i32) -> ()> Fn0 for F {\n+    type Out = ();\n+}\n+\n+pub fn closure_typer(_: impl Fn0) {}\n+\n+fn main() {\n+    closure_typer(move |x| {\n+        let _: i64 = x.into();\n+    });\n+}"}]}