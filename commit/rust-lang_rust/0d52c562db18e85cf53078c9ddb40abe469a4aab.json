{"sha": "0d52c562db18e85cf53078c9ddb40abe469a4aab", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBkNTJjNTYyZGIxOGU4NWNmNTMwNzhjOWRkYjQwYWJlNDY5YTRhYWI=", "commit": {"author": {"name": "Gregor Peach", "email": "gregorpeach@gmail.com", "date": "2020-01-04T23:40:36Z"}, "committer": {"name": "Gregor Peach", "email": "gregorpeach@gmail.com", "date": "2020-01-30T20:40:14Z"}, "message": "Change opt-level from 2 back to 3\n\nIn Cargo.toml, the opt-level for `release` and `bench` was\noverridden to be 2. This was to work around a problem with LLVM\n7. However, rust no longer uses LLVM 7, so this is no longer\nneeded.\n\nThis creates a small compile time regression in MIR constant eval,\nso I've added a #[inline(always)] on the `step` function used in\nconst eval\n\nAlso creates a binary size increase in wasm-stringify-ints-small,\nso I've bumped the limit there.", "tree": {"sha": "69a70c7774210ef35f7954299ea921aeb0329a54", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/69a70c7774210ef35f7954299ea921aeb0329a54"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0d52c562db18e85cf53078c9ddb40abe469a4aab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0d52c562db18e85cf53078c9ddb40abe469a4aab", "html_url": "https://github.com/rust-lang/rust/commit/0d52c562db18e85cf53078c9ddb40abe469a4aab", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0d52c562db18e85cf53078c9ddb40abe469a4aab/comments", "author": {"login": "Others", "id": 6342225, "node_id": "MDQ6VXNlcjYzNDIyMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6342225?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Others", "html_url": "https://github.com/Others", "followers_url": "https://api.github.com/users/Others/followers", "following_url": "https://api.github.com/users/Others/following{/other_user}", "gists_url": "https://api.github.com/users/Others/gists{/gist_id}", "starred_url": "https://api.github.com/users/Others/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Others/subscriptions", "organizations_url": "https://api.github.com/users/Others/orgs", "repos_url": "https://api.github.com/users/Others/repos", "events_url": "https://api.github.com/users/Others/events{/privacy}", "received_events_url": "https://api.github.com/users/Others/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Others", "id": 6342225, "node_id": "MDQ6VXNlcjYzNDIyMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6342225?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Others", "html_url": "https://github.com/Others", "followers_url": "https://api.github.com/users/Others/followers", "following_url": "https://api.github.com/users/Others/following{/other_user}", "gists_url": "https://api.github.com/users/Others/gists{/gist_id}", "starred_url": "https://api.github.com/users/Others/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Others/subscriptions", "organizations_url": "https://api.github.com/users/Others/orgs", "repos_url": "https://api.github.com/users/Others/repos", "events_url": "https://api.github.com/users/Others/events{/privacy}", "received_events_url": "https://api.github.com/users/Others/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "760ce94c69ca510d44087291c311296f6d9ccdf5", "url": "https://api.github.com/repos/rust-lang/rust/commits/760ce94c69ca510d44087291c311296f6d9ccdf5", "html_url": "https://github.com/rust-lang/rust/commit/760ce94c69ca510d44087291c311296f6d9ccdf5"}], "stats": {"total": 12, "additions": 4, "deletions": 8}, "files": [{"sha": "8c3c858de1d5c9a853f6e96214e8e30173f10938", "filename": "Cargo.toml", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/0d52c562db18e85cf53078c9ddb40abe469a4aab/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/0d52c562db18e85cf53078c9ddb40abe469a4aab/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=0d52c562db18e85cf53078c9ddb40abe469a4aab", "patch": "@@ -30,13 +30,6 @@ exclude = [\n   \"obj\",\n ]\n \n-# Curiously, LLVM 7.0 will segfault if compiled with opt-level=3\n-# See issue https://github.com/rust-lang/rust/issues/52378\n-[profile.release]\n-opt-level = 2\n-[profile.bench]\n-opt-level = 2\n-\n # These options are controlled from our rustc wrapper script, so turn them off\n # here and have them controlled elsewhere.\n [profile.dev]"}, {"sha": "7d59c0181a8f3645ef84163382892ec8d043c7fb", "filename": "src/librustc_mir/interpret/step.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0d52c562db18e85cf53078c9ddb40abe469a4aab/src%2Flibrustc_mir%2Finterpret%2Fstep.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d52c562db18e85cf53078c9ddb40abe469a4aab/src%2Flibrustc_mir%2Finterpret%2Fstep.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fstep.rs?ref=0d52c562db18e85cf53078c9ddb40abe469a4aab", "patch": "@@ -38,6 +38,9 @@ impl<'mir, 'tcx, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n     /// Returns `true` as long as there are more things to do.\n     ///\n     /// This is used by [priroda](https://github.com/oli-obk/priroda)\n+    ///\n+    /// This is marked `#inline(always)` to work around adverserial codegen when `opt-level = 3`\n+    #[inline(always)]\n     pub fn step(&mut self) -> InterpResult<'tcx, bool> {\n         if self.stack.is_empty() {\n             return Ok(false);"}, {"sha": "01e1c6b0ce8d84e43a09376afcda032c98857797", "filename": "src/test/run-make/wasm-stringify-ints-small/Makefile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0d52c562db18e85cf53078c9ddb40abe469a4aab/src%2Ftest%2Frun-make%2Fwasm-stringify-ints-small%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/0d52c562db18e85cf53078c9ddb40abe469a4aab/src%2Ftest%2Frun-make%2Fwasm-stringify-ints-small%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fwasm-stringify-ints-small%2FMakefile?ref=0d52c562db18e85cf53078c9ddb40abe469a4aab", "patch": "@@ -4,7 +4,7 @@ ifeq ($(TARGET),wasm32-unknown-unknown)\n all:\n \t$(RUSTC) foo.rs -C lto -O --target wasm32-unknown-unknown\n \twc -c < $(TMPDIR)/foo.wasm\n-\t[ \"`wc -c < $(TMPDIR)/foo.wasm`\" -lt \"20500\" ]\n+\t[ \"`wc -c < $(TMPDIR)/foo.wasm`\" -lt \"25000\" ]\n else\n all:\n endif"}]}