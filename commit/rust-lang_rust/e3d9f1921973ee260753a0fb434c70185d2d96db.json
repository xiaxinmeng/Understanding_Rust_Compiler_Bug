{"sha": "e3d9f1921973ee260753a0fb434c70185d2d96db", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUzZDlmMTkyMTk3M2VlMjYwNzUzYTBmYjQzNGM3MDE4NWQyZDk2ZGI=", "commit": {"author": {"name": "QuietMisdreavus", "email": "grey@quietmisdreavus.net", "date": "2018-05-23T21:22:18Z"}, "committer": {"name": "QuietMisdreavus", "email": "grey@quietmisdreavus.net", "date": "2018-05-23T21:22:18Z"}, "message": "rustdoc: hide macro export statements from docs", "tree": {"sha": "cdb5ac7d83636b6fbf138ebb25816e3ca5960ab6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cdb5ac7d83636b6fbf138ebb25816e3ca5960ab6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e3d9f1921973ee260753a0fb434c70185d2d96db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e3d9f1921973ee260753a0fb434c70185d2d96db", "html_url": "https://github.com/rust-lang/rust/commit/e3d9f1921973ee260753a0fb434c70185d2d96db", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e3d9f1921973ee260753a0fb434c70185d2d96db/comments", "author": {"login": "QuietMisdreavus", "id": 5217170, "node_id": "MDQ6VXNlcjUyMTcxNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/5217170?v=4", "gravatar_id": "", "url": "https://api.github.com/users/QuietMisdreavus", "html_url": "https://github.com/QuietMisdreavus", "followers_url": "https://api.github.com/users/QuietMisdreavus/followers", "following_url": "https://api.github.com/users/QuietMisdreavus/following{/other_user}", "gists_url": "https://api.github.com/users/QuietMisdreavus/gists{/gist_id}", "starred_url": "https://api.github.com/users/QuietMisdreavus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/QuietMisdreavus/subscriptions", "organizations_url": "https://api.github.com/users/QuietMisdreavus/orgs", "repos_url": "https://api.github.com/users/QuietMisdreavus/repos", "events_url": "https://api.github.com/users/QuietMisdreavus/events{/privacy}", "received_events_url": "https://api.github.com/users/QuietMisdreavus/received_events", "type": "User", "site_admin": false}, "committer": {"login": "QuietMisdreavus", "id": 5217170, "node_id": "MDQ6VXNlcjUyMTcxNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/5217170?v=4", "gravatar_id": "", "url": "https://api.github.com/users/QuietMisdreavus", "html_url": "https://github.com/QuietMisdreavus", "followers_url": "https://api.github.com/users/QuietMisdreavus/followers", "following_url": "https://api.github.com/users/QuietMisdreavus/following{/other_user}", "gists_url": "https://api.github.com/users/QuietMisdreavus/gists{/gist_id}", "starred_url": "https://api.github.com/users/QuietMisdreavus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/QuietMisdreavus/subscriptions", "organizations_url": "https://api.github.com/users/QuietMisdreavus/orgs", "repos_url": "https://api.github.com/users/QuietMisdreavus/repos", "events_url": "https://api.github.com/users/QuietMisdreavus/events{/privacy}", "received_events_url": "https://api.github.com/users/QuietMisdreavus/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "90463a6bdcd18c60e18a1cc810fc6453b96f7d54", "url": "https://api.github.com/repos/rust-lang/rust/commits/90463a6bdcd18c60e18a1cc810fc6453b96f7d54", "html_url": "https://github.com/rust-lang/rust/commit/90463a6bdcd18c60e18a1cc810fc6453b96f7d54"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "782c8bf6dd1777f2a0629c0f6f35c077056c545c", "filename": "src/librustdoc/clean/inline.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e3d9f1921973ee260753a0fb434c70185d2d96db/src%2Flibrustdoc%2Fclean%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3d9f1921973ee260753a0fb434c70185d2d96db/src%2Flibrustdoc%2Fclean%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Finline.rs?ref=e3d9f1921973ee260753a0fb434c70185d2d96db", "patch": "@@ -97,6 +97,9 @@ pub fn try_inline(cx: &DocContext, def: Def, name: ast::Name, visited: &mut FxHa\n             record_extern_fqn(cx, did, clean::TypeKind::Const);\n             clean::ConstantItem(build_const(cx, did))\n         }\n+        // Macros are eagerly inlined back in visit_ast, don't show their export statements\n+        // FIXME(50647): the eager inline does not take doc(hidden)/doc(no_inline) into account\n+        Def::Macro(..) => return Some(Vec::new()),\n         _ => return None,\n     };\n     cx.renderinfo.borrow_mut().inlined.insert(did);"}, {"sha": "8c2555c4b3de27ce9cd9cbf7dd7239be25f0ebda", "filename": "src/librustdoc/visit_ast.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e3d9f1921973ee260753a0fb434c70185d2d96db/src%2Flibrustdoc%2Fvisit_ast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3d9f1921973ee260753a0fb434c70185d2d96db/src%2Flibrustdoc%2Fvisit_ast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fvisit_ast.rs?ref=e3d9f1921973ee260753a0fb434c70185d2d96db", "patch": "@@ -219,6 +219,8 @@ impl<'a, 'tcx, 'rcx> RustdocVisitor<'a, 'tcx, 'rcx> {\n         if let Some(exports) = self.cx.tcx.module_exports(def_id) {\n             for export in exports.iter().filter(|e| e.vis == Visibility::Public) {\n                 if let Def::Macro(def_id, ..) = export.def {\n+                    // FIXME(50647): this eager macro inlining does not take\n+                    // doc(hidden)/doc(no_inline) into account\n                     if def_id.krate == LOCAL_CRATE {\n                         continue // These are `krate.exported_macros`, handled in `self.visit()`.\n                     }\n@@ -237,6 +239,7 @@ impl<'a, 'tcx, 'rcx> RustdocVisitor<'a, 'tcx, 'rcx> {\n                         unreachable!()\n                     };\n \n+                    debug!(\"inlining macro {}\", def.ident.name);\n                     om.macros.push(Macro {\n                         def_id,\n                         attrs: def.attrs.clone().into(),\n@@ -561,6 +564,7 @@ impl<'a, 'tcx, 'rcx> RustdocVisitor<'a, 'tcx, 'rcx> {\n \n     // convert each exported_macro into a doc item\n     fn visit_local_macro(&self, def: &hir::MacroDef) -> Macro {\n+        debug!(\"visit_local_macro: {}\", def.name);\n         let tts = def.body.trees().collect::<Vec<_>>();\n         // Extract the spans of all matchers. They represent the \"interface\" of the macro.\n         let matchers = tts.chunks(4).map(|arm| arm[0].span()).collect();"}]}