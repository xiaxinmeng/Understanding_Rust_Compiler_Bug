{"sha": "d5dcda2f42cf398df3e3fb486a1b54ee8eba5bf2", "node_id": "C_kwDOAAsO6NoAKGQ1ZGNkYTJmNDJjZjM5OGRmM2UzZmI0ODZhMWI1NGVlOGViYTViZjI", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-01-05T00:49:23Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-01-05T00:49:23Z"}, "message": "Auto merge of #8223 - camsteffen:remove-in-macro, r=llogiq\n\nRemove in_macro from clippy_utils\n\nchangelog: none\n\nPreviously done in #7897 but reverted in #8170. I'd like to keep `in_macro` out of utils because if a span is from expansion in any way (desugaring or macro), we should not proceed without understanding the nature of the expansion IMO.\n\nr? `@llogiq`", "tree": {"sha": "dbd2b27132aaa94fa10448daa06e0f0a38d603ba", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dbd2b27132aaa94fa10448daa06e0f0a38d603ba"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d5dcda2f42cf398df3e3fb486a1b54ee8eba5bf2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d5dcda2f42cf398df3e3fb486a1b54ee8eba5bf2", "html_url": "https://github.com/rust-lang/rust/commit/d5dcda2f42cf398df3e3fb486a1b54ee8eba5bf2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d5dcda2f42cf398df3e3fb486a1b54ee8eba5bf2/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ba03dc70fd219273934b4fa3280ccaf7bb0dcd9b", "url": "https://api.github.com/repos/rust-lang/rust/commits/ba03dc70fd219273934b4fa3280ccaf7bb0dcd9b", "html_url": "https://github.com/rust-lang/rust/commit/ba03dc70fd219273934b4fa3280ccaf7bb0dcd9b"}, {"sha": "00da1b8f14989b57e56ed28da177b5819a2b53f9", "url": "https://api.github.com/repos/rust-lang/rust/commits/00da1b8f14989b57e56ed28da177b5819a2b53f9", "html_url": "https://github.com/rust-lang/rust/commit/00da1b8f14989b57e56ed28da177b5819a2b53f9"}], "stats": {"total": 16, "additions": 6, "deletions": 10}, "files": [{"sha": "9284e002409920673763967bb375b5bbf1b1b90a", "filename": "clippy_lints/src/init_numbered_fields.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d5dcda2f42cf398df3e3fb486a1b54ee8eba5bf2/clippy_lints%2Fsrc%2Finit_numbered_fields.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d5dcda2f42cf398df3e3fb486a1b54ee8eba5bf2/clippy_lints%2Fsrc%2Finit_numbered_fields.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Finit_numbered_fields.rs?ref=d5dcda2f42cf398df3e3fb486a1b54ee8eba5bf2", "patch": "@@ -1,5 +1,4 @@\n use clippy_utils::diagnostics::span_lint_and_sugg;\n-use clippy_utils::in_macro;\n use clippy_utils::source::snippet_with_applicability;\n use rustc_errors::Applicability;\n use rustc_hir::{Expr, ExprKind};\n@@ -46,7 +45,7 @@ impl<'tcx> LateLintPass<'tcx> for NumberedFields {\n     fn check_expr(&mut self, cx: &LateContext<'tcx>, e: &'tcx Expr<'_>) {\n         if let ExprKind::Struct(path, fields, None) = e.kind {\n             if !fields.is_empty()\n-                && !in_macro(e.span)\n+                && !e.span.from_expansion()\n                 && fields\n                     .iter()\n                     .all(|f| f.ident.as_str().as_bytes().iter().all(u8::is_ascii_digit))"}, {"sha": "262a26951c68110152da002292a89b57145c607c", "filename": "clippy_lints/src/macro_use.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d5dcda2f42cf398df3e3fb486a1b54ee8eba5bf2/clippy_lints%2Fsrc%2Fmacro_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d5dcda2f42cf398df3e3fb486a1b54ee8eba5bf2/clippy_lints%2Fsrc%2Fmacro_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmacro_use.rs?ref=d5dcda2f42cf398df3e3fb486a1b54ee8eba5bf2", "patch": "@@ -1,5 +1,4 @@\n use clippy_utils::diagnostics::span_lint_and_sugg;\n-use clippy_utils::in_macro;\n use clippy_utils::source::snippet;\n use hir::def::{DefKind, Res};\n use if_chain::if_chain;\n@@ -9,6 +8,7 @@ use rustc_errors::Applicability;\n use rustc_hir as hir;\n use rustc_lint::{LateContext, LateLintPass, LintContext};\n use rustc_session::{declare_tool_lint, impl_lint_pass};\n+use rustc_span::hygiene::ExpnKind;\n use rustc_span::{edition::Edition, sym, Span};\n \n declare_clippy_lint! {\n@@ -214,3 +214,7 @@ impl<'tcx> LateLintPass<'tcx> for MacroUseImports {\n         }\n     }\n }\n+\n+fn in_macro(span: Span) -> bool {\n+    span.from_expansion() && !matches!(span.ctxt().outer_expn_data().kind, ExpnKind::Desugaring(..))\n+}"}, {"sha": "16bcffb8df9e7667d42d5865d03f9a07da1b02de", "filename": "clippy_utils/src/lib.rs", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/d5dcda2f42cf398df3e3fb486a1b54ee8eba5bf2/clippy_utils%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d5dcda2f42cf398df3e3fb486a1b54ee8eba5bf2/clippy_utils%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Flib.rs?ref=d5dcda2f42cf398df3e3fb486a1b54ee8eba5bf2", "patch": "@@ -148,13 +148,6 @@ macro_rules! extract_msrv_attr {\n     };\n }\n \n-/// Returns `true` if the span comes from a macro expansion, no matter if from a\n-/// macro by example or from a procedural macro\n-#[must_use]\n-pub fn in_macro(span: Span) -> bool {\n-    span.from_expansion() && !matches!(span.ctxt().outer_expn_data().kind, ExpnKind::Desugaring(..))\n-}\n-\n /// Returns `true` if the two spans come from differing expansions (i.e., one is\n /// from a macro and one isn't).\n #[must_use]"}]}