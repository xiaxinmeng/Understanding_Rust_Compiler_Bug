{"sha": "e2e47d6eb5425cd860137d632c1b8688e5e74241", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUyZTQ3ZDZlYjU0MjVjZDg2MDEzN2Q2MzJjMWI4Njg4ZTVlNzQyNDE=", "commit": {"author": {"name": "Piotr Czarnecki", "email": "pioczarn@gmail.com", "date": "2014-10-24T13:28:10Z"}, "committer": {"name": "Piotr Czarnecki", "email": "pioczarn@gmail.com", "date": "2014-10-24T16:59:29Z"}, "message": "regex: Fix control flow in the parser", "tree": {"sha": "66873e2d6c18f8f768417f6f252d592d5e4fed30", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/66873e2d6c18f8f768417f6f252d592d5e4fed30"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e2e47d6eb5425cd860137d632c1b8688e5e74241", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e2e47d6eb5425cd860137d632c1b8688e5e74241", "html_url": "https://github.com/rust-lang/rust/commit/e2e47d6eb5425cd860137d632c1b8688e5e74241", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e2e47d6eb5425cd860137d632c1b8688e5e74241/comments", "author": {"login": "pczarn", "id": 3356767, "node_id": "MDQ6VXNlcjMzNTY3Njc=", "avatar_url": "https://avatars.githubusercontent.com/u/3356767?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pczarn", "html_url": "https://github.com/pczarn", "followers_url": "https://api.github.com/users/pczarn/followers", "following_url": "https://api.github.com/users/pczarn/following{/other_user}", "gists_url": "https://api.github.com/users/pczarn/gists{/gist_id}", "starred_url": "https://api.github.com/users/pczarn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pczarn/subscriptions", "organizations_url": "https://api.github.com/users/pczarn/orgs", "repos_url": "https://api.github.com/users/pczarn/repos", "events_url": "https://api.github.com/users/pczarn/events{/privacy}", "received_events_url": "https://api.github.com/users/pczarn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pczarn", "id": 3356767, "node_id": "MDQ6VXNlcjMzNTY3Njc=", "avatar_url": "https://avatars.githubusercontent.com/u/3356767?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pczarn", "html_url": "https://github.com/pczarn", "followers_url": "https://api.github.com/users/pczarn/followers", "following_url": "https://api.github.com/users/pczarn/following{/other_user}", "gists_url": "https://api.github.com/users/pczarn/gists{/gist_id}", "starred_url": "https://api.github.com/users/pczarn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pczarn/subscriptions", "organizations_url": "https://api.github.com/users/pczarn/orgs", "repos_url": "https://api.github.com/users/pczarn/repos", "events_url": "https://api.github.com/users/pczarn/events{/privacy}", "received_events_url": "https://api.github.com/users/pczarn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "00cc6d24099eb93ecfeb9bf807ab9e5130a01749", "url": "https://api.github.com/repos/rust-lang/rust/commits/00cc6d24099eb93ecfeb9bf807ab9e5130a01749", "html_url": "https://github.com/rust-lang/rust/commit/00cc6d24099eb93ecfeb9bf807ab9e5130a01749"}], "stats": {"total": 42, "additions": 24, "deletions": 18}, "files": [{"sha": "2b6aa669f3c212b628c1acc762eed6354e09a813", "filename": "src/libregex/parse.rs", "status": "modified", "additions": 14, "deletions": 18, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/e2e47d6eb5425cd860137d632c1b8688e5e74241/src%2Flibregex%2Fparse.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2e47d6eb5425cd860137d632c1b8688e5e74241/src%2Flibregex%2Fparse.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibregex%2Fparse.rs?ref=e2e47d6eb5425cd860137d632c1b8688e5e74241", "patch": "@@ -411,9 +411,6 @@ impl<'a> Parser<'a> {\n                         ast => fail!(\"Unexpected AST item '{}'\", ast),\n                     }\n                 }\n-                _ => {},\n-            }\n-            match c {\n                 ']' => {\n                     if ranges.len() > 0 {\n                         let flags = negated | (self.flags & FLAG_NOCASE);\n@@ -431,22 +428,21 @@ impl<'a> Parser<'a> {\n                     }\n                     return Ok(())\n                 }\n-                c => {\n-                    if self.peek_is(1, '-') && !self.peek_is(2, ']') {\n-                        try!(self.expect('-'))\n-                        try!(self.noteof(\"not a ']'\"))\n-                        let c2 = self.cur();\n-                        if c2 < c {\n-                            return self.err(format!(\"Invalid character class \\\n-                                                     range '{}-{}'\",\n-                                                    c,\n-                                                    c2).as_slice())\n-                        }\n-                        ranges.push((c, self.cur()))\n-                    } else {\n-                        ranges.push((c, c))\n-                    }\n+            }\n+\n+            if self.peek_is(1, '-') && !self.peek_is(2, ']') {\n+                try!(self.expect('-'))\n+                try!(self.noteof(\"not a ']'\"))\n+                let c2 = self.cur();\n+                if c2 < c {\n+                    return self.err(format!(\"Invalid character class \\\n+                                             range '{}-{}'\",\n+                                            c,\n+                                            c2).as_slice())\n                 }\n+                ranges.push((c, self.cur()))\n+            } else {\n+                ranges.push((c, c))\n             }\n         }\n     }"}, {"sha": "fa645c84dd86d5c98eb6bd95462c9fda38cb6ae4", "filename": "src/libregex/test/tests.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e2e47d6eb5425cd860137d632c1b8688e5e74241/src%2Flibregex%2Ftest%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2e47d6eb5425cd860137d632c1b8688e5e74241/src%2Flibregex%2Ftest%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibregex%2Ftest%2Ftests.rs?ref=e2e47d6eb5425cd860137d632c1b8688e5e74241", "patch": "@@ -43,6 +43,16 @@ fn empty_regex_nonempty_match() {\n     assert_eq!(ms, vec![(0, 0), (1, 1), (2, 2), (3, 3)]);\n }\n \n+#[test]\n+fn quoted_bracket_set() {\n+    let re = regex!(r\"([\\x{5b}\\x{5d}])\");\n+    let ms = re.find_iter(\"[]\").collect::<Vec<(uint, uint)>>();\n+    assert_eq!(ms, vec![(0, 1), (1, 2)]);\n+    let re = regex!(r\"([\\[\\]])\");\n+    let ms = re.find_iter(\"[]\").collect::<Vec<(uint, uint)>>();\n+    assert_eq!(ms, vec![(0, 1), (1, 2)]);\n+}\n+\n macro_rules! replace(\n     ($name:ident, $which:ident, $re:expr,\n      $search:expr, $replace:expr, $result:expr) => ("}]}