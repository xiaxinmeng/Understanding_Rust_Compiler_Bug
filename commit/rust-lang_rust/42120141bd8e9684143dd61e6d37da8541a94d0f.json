{"sha": "42120141bd8e9684143dd61e6d37da8541a94d0f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQyMTIwMTQxYmQ4ZTk2ODQxNDNkZDYxZTZkMzdkYTg1NDFhOTRkMGY=", "commit": {"author": {"name": "TomasKralCZ", "email": "tomas@kral.hk", "date": "2018-02-11T09:50:19Z"}, "committer": {"name": "TomasKralCZ", "email": "tomas@kral.hk", "date": "2018-02-12T10:26:00Z"}, "message": "Suggestion fixed, simplified lint logic.", "tree": {"sha": "b8013c5822481af717b2c74318876f808099059f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b8013c5822481af717b2c74318876f808099059f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/42120141bd8e9684143dd61e6d37da8541a94d0f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/42120141bd8e9684143dd61e6d37da8541a94d0f", "html_url": "https://github.com/rust-lang/rust/commit/42120141bd8e9684143dd61e6d37da8541a94d0f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/42120141bd8e9684143dd61e6d37da8541a94d0f/comments", "author": {"login": "TomasKralCZ", "id": 23663355, "node_id": "MDQ6VXNlcjIzNjYzMzU1", "avatar_url": "https://avatars.githubusercontent.com/u/23663355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TomasKralCZ", "html_url": "https://github.com/TomasKralCZ", "followers_url": "https://api.github.com/users/TomasKralCZ/followers", "following_url": "https://api.github.com/users/TomasKralCZ/following{/other_user}", "gists_url": "https://api.github.com/users/TomasKralCZ/gists{/gist_id}", "starred_url": "https://api.github.com/users/TomasKralCZ/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TomasKralCZ/subscriptions", "organizations_url": "https://api.github.com/users/TomasKralCZ/orgs", "repos_url": "https://api.github.com/users/TomasKralCZ/repos", "events_url": "https://api.github.com/users/TomasKralCZ/events{/privacy}", "received_events_url": "https://api.github.com/users/TomasKralCZ/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TomasKralCZ", "id": 23663355, "node_id": "MDQ6VXNlcjIzNjYzMzU1", "avatar_url": "https://avatars.githubusercontent.com/u/23663355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TomasKralCZ", "html_url": "https://github.com/TomasKralCZ", "followers_url": "https://api.github.com/users/TomasKralCZ/followers", "following_url": "https://api.github.com/users/TomasKralCZ/following{/other_user}", "gists_url": "https://api.github.com/users/TomasKralCZ/gists{/gist_id}", "starred_url": "https://api.github.com/users/TomasKralCZ/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TomasKralCZ/subscriptions", "organizations_url": "https://api.github.com/users/TomasKralCZ/orgs", "repos_url": "https://api.github.com/users/TomasKralCZ/repos", "events_url": "https://api.github.com/users/TomasKralCZ/events{/privacy}", "received_events_url": "https://api.github.com/users/TomasKralCZ/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "85642ddd23e14c26f2f5064bf515e9d327f8222c", "url": "https://api.github.com/repos/rust-lang/rust/commits/85642ddd23e14c26f2f5064bf515e9d327f8222c", "html_url": "https://github.com/rust-lang/rust/commit/85642ddd23e14c26f2f5064bf515e9d327f8222c"}], "stats": {"total": 56, "additions": 23, "deletions": 33}, "files": [{"sha": "e4d113bd3dead9743838bc8ab44c6eb86431e32f", "filename": "clippy_lints/src/redundant_field_names.rs", "status": "modified", "additions": 13, "deletions": 25, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/42120141bd8e9684143dd61e6d37da8541a94d0f/clippy_lints%2Fsrc%2Fredundant_field_names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/42120141bd8e9684143dd61e6d37da8541a94d0f/clippy_lints%2Fsrc%2Fredundant_field_names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fredundant_field_names.rs?ref=42120141bd8e9684143dd61e6d37da8541a94d0f", "patch": "@@ -1,9 +1,9 @@\n use rustc::lint::*;\n use rustc::hir::*;\n-use utils::{span_lint_and_sugg};\n+use utils::{span_lint_and_sugg, match_var};\n \n-/// **What it does:** Checks for redundnat field names where shorthands\n-/// can be used.\n+/// **What it does:** Checks for fields in struct literals where shorthands\n+/// could be used.\n /// \n /// **Why is this bad?** If the field and variable names are the same,\n /// the field name is redundant.\n@@ -23,7 +23,7 @@ use utils::{span_lint_and_sugg};\n declare_lint! {\n     pub REDUNDANT_FIELD_NAMES,\n     Warn,\n-    \"using same name for field and variable ,where shorthand can be used\"\n+    \"checks for fields in struct literals where shorthands could be used\"\n }\n \n pub struct RedundantFieldNames;\n@@ -39,28 +39,16 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for RedundantFieldNames {\n         if let ExprStruct(_, ref fields, _) = expr.node {\n             for field in fields {\n                 let name = field.name.node;\n-                if let ExprPath(ref qpath) = field.expr.node {\n-                    if let &QPath::Resolved(_, ref path) = qpath {\n-                        let segments = &path.segments;\n \n-                        if segments.len() == 1 {\n-                            let expr_name = segments[0].name;\n-\n-                            if name == expr_name {\n-                                span_lint_and_sugg(\n-                                    cx,\n-                                    REDUNDANT_FIELD_NAMES,\n-                                    path.span,\n-                                    \"redundant field names in struct initialization\",\n-                                    &format!(\n-                                        \"replace '{0}: {0}' with '{0}'\",\n-                                        name,\n-                                    ),\n-                                    \"\".to_string()\n-                                );\n-                            }\n-                        }\n-                    }\n+                if match_var(&field.expr, name) && !field.is_shorthand {\n+                    span_lint_and_sugg (\n+                        cx,\n+                        REDUNDANT_FIELD_NAMES,\n+                        field.span,\n+                        \"redundant field names in struct initialization\",\n+                        \"replace it with\",\n+                        name.to_string()\n+                    );\n                 }\n             }\n         }"}, {"sha": "7b7167cef7004c5aabeb7853f6f6a244f808a0c4", "filename": "src/driver.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/42120141bd8e9684143dd61e6d37da8541a94d0f/src%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/42120141bd8e9684143dd61e6d37da8541a94d0f/src%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdriver.rs?ref=42120141bd8e9684143dd61e6d37da8541a94d0f", "patch": "@@ -29,7 +29,7 @@ impl ClippyCompilerCalls {\n     fn new(run_lints: bool) -> Self {\n         Self {\n             default: RustcDefaultCalls,\n-            run_lints: run_lints,\n+            run_lints,\n         }\n     }\n }"}, {"sha": "0eb9bef45b5672f991619701d275f73d0806146a", "filename": "tests/ui/redundant_field_names.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/42120141bd8e9684143dd61e6d37da8541a94d0f/tests%2Fui%2Fredundant_field_names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/42120141bd8e9684143dd61e6d37da8541a94d0f/tests%2Fui%2Fredundant_field_names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_field_names.rs?ref=42120141bd8e9684143dd61e6d37da8541a94d0f", "patch": "@@ -8,7 +8,7 @@ mod foo {\n struct Person {\n     gender: u8,\n     age: u8,\n-\n+    name: u8,\n     buzz: u64,\n     foo: u8,\n }\n@@ -17,11 +17,13 @@ fn main() {\n     let gender: u8 = 42;\n     let age = 0;\n     let fizz: u64 = 0;\n+    let name: u8 = 0;\n \n     let me = Person {\n         gender: gender,\n         age: age,\n \n+        name, //should be ok\n         buzz: fizz, //should be ok\n         foo: foo::BAR, //should be ok\n     };"}, {"sha": "d6d752b93a35677df6d3c13838919f47656993ef", "filename": "tests/ui/redundant_field_names.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/42120141bd8e9684143dd61e6d37da8541a94d0f/tests%2Fui%2Fredundant_field_names.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/42120141bd8e9684143dd61e6d37da8541a94d0f/tests%2Fui%2Fredundant_field_names.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_field_names.stderr?ref=42120141bd8e9684143dd61e6d37da8541a94d0f", "patch": "@@ -1,16 +1,16 @@\n error: redundant field names in struct initialization\n-  --> $DIR/redundant_field_names.rs:22:17\n+  --> $DIR/redundant_field_names.rs:23:9\n    |\n-22 |         gender: gender,\n-   |                 ^^^^^^ help: replace 'gender: gender' with 'gender'\n+23 |         gender: gender,\n+   |         ^^^^^^^^^^^^^^ help: replace it with: `gender`\n    |\n    = note: `-D redundant-field-names` implied by `-D warnings`\n \n error: redundant field names in struct initialization\n-  --> $DIR/redundant_field_names.rs:23:14\n+  --> $DIR/redundant_field_names.rs:24:9\n    |\n-23 |         age: age,\n-   |              ^^^ help: replace 'age: age' with 'age'\n+24 |         age: age,\n+   |         ^^^^^^^^ help: replace it with: `age`\n \n error: aborting due to 2 previous errors\n "}]}