{"sha": "3e7bc08b6c591b2f70eecde18e299ff127b65cff", "node_id": "C_kwDOAAsO6NoAKDNlN2JjMDhiNmM1OTFiMmY3MGVlY2RlMThlMjk5ZmYxMjdiNjVjZmY", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-01-13T07:11:17Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-01-13T07:11:17Z"}, "message": "Rollup merge of #91687 - euclio:tuple-variant-field-section, r=GuillaumeGomez\n\nrustdoc: do not emit tuple variant fields if none are documented\n\nFixes #90824.\n\nBefore:\n\n![2021-12-15T22:26:41](https://user-images.githubusercontent.com/1372438/146302871-4d265433-b9aa-4e53-adfb-e7cb92107180.png)\n\nAfter:\n\n![2021-12-15T22:27:01](https://user-images.githubusercontent.com/1372438/146302872-e39eda3d-2fb2-4fb9-aae7-2008e4e1b4dd.png)", "tree": {"sha": "0419f83f3957c41276ccb6027e08de7c0c186ddb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0419f83f3957c41276ccb6027e08de7c0c186ddb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3e7bc08b6c591b2f70eecde18e299ff127b65cff", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJh39CVCRBK7hj4Ov3rIwAAuUIIAGu8qBJwpcC9CXgXpz5nUOk8\ncCUQuGNG8JsGWkBRqmqOLxerewmqk0OZ60nW63qyiDVSq7XcRtA9yhvEWUx+bj6X\nBbog5WS1e3jv1J5GJuNx26VZvCEoQ29Wm8pJCWCPwArOtYg6rBXrpFxTKKl4wrpE\nSL/+3x88g+2Rv3HmFwz3JcWI/MIR8tG+4R6YBxNrDVgaKg6wPaG6GX8CQKCWpdFj\n6KqV6eGL4G9bXCXODe5HFcF8KmausrR6YywR06VDDG0MfGHpUQDfynDDG9ajOOLs\nViV+UMxEon1Hy0+vOZ6WhQmIvYtenxxBPVbxOS+a2Keuy+UH9rMqLbA13LGU4CI=\n=tcKc\n-----END PGP SIGNATURE-----\n", "payload": "tree 0419f83f3957c41276ccb6027e08de7c0c186ddb\nparent c7ada001ec10f7702d98af70d3b8dffabb990f5f\nparent 4193f2da2d3553162af383dbeaf5f8ef5908dafd\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1642057877 +0100\ncommitter GitHub <noreply@github.com> 1642057877 +0100\n\nRollup merge of #91687 - euclio:tuple-variant-field-section, r=GuillaumeGomez\n\nrustdoc: do not emit tuple variant fields if none are documented\n\nFixes #90824.\n\nBefore:\n\n![2021-12-15T22:26:41](https://user-images.githubusercontent.com/1372438/146302871-4d265433-b9aa-4e53-adfb-e7cb92107180.png)\n\nAfter:\n\n![2021-12-15T22:27:01](https://user-images.githubusercontent.com/1372438/146302872-e39eda3d-2fb2-4fb9-aae7-2008e4e1b4dd.png)\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3e7bc08b6c591b2f70eecde18e299ff127b65cff", "html_url": "https://github.com/rust-lang/rust/commit/3e7bc08b6c591b2f70eecde18e299ff127b65cff", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3e7bc08b6c591b2f70eecde18e299ff127b65cff/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c7ada001ec10f7702d98af70d3b8dffabb990f5f", "url": "https://api.github.com/repos/rust-lang/rust/commits/c7ada001ec10f7702d98af70d3b8dffabb990f5f", "html_url": "https://github.com/rust-lang/rust/commit/c7ada001ec10f7702d98af70d3b8dffabb990f5f"}, {"sha": "4193f2da2d3553162af383dbeaf5f8ef5908dafd", "url": "https://api.github.com/repos/rust-lang/rust/commits/4193f2da2d3553162af383dbeaf5f8ef5908dafd", "html_url": "https://github.com/rust-lang/rust/commit/4193f2da2d3553162af383dbeaf5f8ef5908dafd"}], "stats": {"total": 38, "additions": 31, "deletions": 7}, "files": [{"sha": "5431bd8565b5787fc277eb9ff37527652bf0a642", "filename": "src/librustdoc/html/render/print_item.rs", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/3e7bc08b6c591b2f70eecde18e299ff127b65cff/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e7bc08b6c591b2f70eecde18e299ff127b65cff/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs?ref=3e7bc08b6c591b2f70eecde18e299ff127b65cff", "patch": "@@ -1126,18 +1126,27 @@ fn item_enum(w: &mut Buffer, cx: &Context<'_>, it: &clean::Item, e: &clean::Enum\n             w.write_str(\"</h3>\");\n \n             use crate::clean::Variant;\n-            if let Some((extra, fields)) = match *variant.kind {\n-                clean::VariantItem(Variant::Struct(ref s)) => Some((\"\", &s.fields)),\n-                clean::VariantItem(Variant::Tuple(ref fields)) => Some((\"Tuple \", fields)),\n+\n+            let heading_and_fields = match &*variant.kind {\n+                clean::VariantItem(Variant::Struct(s)) => Some((\"Fields\", &s.fields)),\n+                // Documentation on tuple variant fields is rare, so to reduce noise we only emit\n+                // the section if at least one field is documented.\n+                clean::VariantItem(Variant::Tuple(fields))\n+                    if fields.iter().any(|f| f.doc_value().is_some()) =>\n+                {\n+                    Some((\"Tuple Fields\", fields))\n+                }\n                 _ => None,\n-            } {\n+            };\n+\n+            if let Some((heading, fields)) = heading_and_fields {\n                 let variant_id = cx.derive_id(format!(\n                     \"{}.{}.fields\",\n                     ItemType::Variant,\n                     variant.name.as_ref().unwrap()\n                 ));\n                 write!(w, \"<div class=\\\"sub-variant\\\" id=\\\"{id}\\\">\", id = variant_id);\n-                write!(w, \"<h4>{extra}Fields</h4>\", extra = extra,);\n+                write!(w, \"<h4>{heading}</h4>\", heading = heading);\n                 document_non_exhaustive(w, variant);\n                 for field in fields {\n                     match *field.kind {"}, {"sha": "fc63ed343bda27cefb52a6258acb6b23c557af8e", "filename": "src/test/rustdoc/issue-88600.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/3e7bc08b6c591b2f70eecde18e299ff127b65cff/src%2Ftest%2Frustdoc%2Fissue-88600.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e7bc08b6c591b2f70eecde18e299ff127b65cff/src%2Ftest%2Frustdoc%2Fissue-88600.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-88600.rs?ref=3e7bc08b6c591b2f70eecde18e299ff127b65cff", "patch": "@@ -18,17 +18,18 @@ pub enum FooEnum {\n     // @has - '//*[@id=\"variant.MixedHiddenFirst\"]//code' 'MixedHiddenFirst(_, S)'\n     // @count - '//*[@id=\"variant.MixedHiddenFirst.field.0\"]' 0\n     // @has - '//*[@id=\"variant.MixedHiddenFirst.field.1\"]' '1: S'\n-    MixedHiddenFirst(#[doc(hidden)] H, S),\n+    MixedHiddenFirst(#[doc(hidden)] H, /** dox */ S),\n     // @has - '//*[@id=\"variant.MixedHiddenLast\"]//code' 'MixedHiddenLast(S, _)'\n     // @has - '//*[@id=\"variant.MixedHiddenLast.field.0\"]' '0: S'\n     // @count - '//*[@id=\"variant.MixedHiddenLast.field.1\"]' 0\n-    MixedHiddenLast(S, #[doc(hidden)] H),\n+    MixedHiddenLast(/** dox */ S, #[doc(hidden)] H),\n     // @has - '//*[@id=\"variant.HiddenStruct\"]//code' 'HiddenStruct'\n     // @count - '//*[@id=\"variant.HiddenStruct.field.h\"]' 0\n     // @has - '//*[@id=\"variant.HiddenStruct.field.s\"]' 's: S'\n     HiddenStruct {\n         #[doc(hidden)]\n         h: H,\n+        /// dox\n         s: S,\n     },\n }"}, {"sha": "31426131bc2c1897312145ebd8d418413138468a", "filename": "src/test/rustdoc/tuple-struct-fields-doc.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/3e7bc08b6c591b2f70eecde18e299ff127b65cff/src%2Ftest%2Frustdoc%2Ftuple-struct-fields-doc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e7bc08b6c591b2f70eecde18e299ff127b65cff/src%2Ftest%2Frustdoc%2Ftuple-struct-fields-doc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Ftuple-struct-fields-doc.rs?ref=3e7bc08b6c591b2f70eecde18e299ff127b65cff", "patch": "@@ -24,6 +24,9 @@ pub struct Foo(\n // @has - '//*[@id=\"variant.BarVariant.field.0\"]' '0: String'\n // @has - '//*[@id=\"variant.BarVariant.fields\"]//*[@class=\"docblock\"]' 'Hello docs'\n // @matches - '//*[@id=\"variant.FooVariant.fields\"]/h4' '^Fields$'\n+// @has - '//*[@id=\"variant.BazVariant.fields\"]//*[@class=\"docblock\"]' 'dox'\n+// @has - '//*[@id=\"variant.OtherVariant.fields\"]//*[@class=\"docblock\"]' 'dox'\n+// @!matches - '//*[@id=\"variant.QuuxVariant.fields\"]/h4' '^Tuple Fields$'\n pub enum Bar {\n     BarVariant(\n         /// Hello docs\n@@ -33,4 +36,15 @@ pub enum Bar {\n        /// hello\n        x: u32,\n     },\n+    BazVariant(\n+        String,\n+        /// dox\n+        u32,\n+    ),\n+    OtherVariant(\n+        /// dox\n+        String,\n+        u32,\n+    ),\n+    QuuxVariant(String),\n }"}]}