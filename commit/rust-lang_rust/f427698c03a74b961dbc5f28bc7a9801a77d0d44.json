{"sha": "f427698c03a74b961dbc5f28bc7a9801a77d0d44", "node_id": "C_kwDOAAsO6NoAKGY0Mjc2OThjMDNhNzRiOTYxZGJjNWYyOGJjN2E5ODAxYTc3ZDBkNDQ", "commit": {"author": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2022-03-16T00:20:21Z"}, "committer": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2022-03-16T00:56:59Z"}, "message": "Parse inner attributes on inline const block", "tree": {"sha": "72ad624ce85a93a8a64633d529eecd4977457f24", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/72ad624ce85a93a8a64633d529eecd4977457f24"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f427698c03a74b961dbc5f28bc7a9801a77d0d44", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEERijF2Cz/ZdaBZKeK+boUO5X/bYIFAmIxNdsACgkQ+boUO5X/\nbYK+pw/8CjOecdCgqI8y6W1O55ZMgDFfrP/FYy2R3ntRMEmw+gSt7gsp5ru7aiFm\nBLt0OewWH55m4MS2cDergaoh7DOATtm9STexcWOfJyBfNSdhc+Uo6uWmwRDYN8JV\nWtXOUZuhp+48Nn93tGTiXbf9ZnNsPeAKarlAxwuNkffn7FpAGMT3kFWK1nXZD98/\nvmVYxFn1iLihckfQ4MvnYtt8KNap8KwU+0YQbb8l2YTJJd7zjV727YDH4oAxtv/B\ns52nfoeXnXyETwvM1kG876yQR45bgNrdgKd5pHEblKxxAotPDyysphYKtj5yMn+2\nbje3pYOS1+ehkWZytAwSmPG1zZfPjlT2Xl/Ho5SgEjBtyRsivOmexD2cQhb23ULC\n8RXQ3d/KRSqiiH8lONSBHgMgBQb/1V+5c/ECa2Gp4F4/zRHCLIrxp7laPZbFXFhq\nfRHR55MiCLEDwzjYD/hjQ7gCk9+qCS+4HC+hxJf9Al0yWG+/NOocdZD8xYNmaTpE\nTDcGL+JhznzMmODNt2fy3FrJNvGFxbGJy94wve82H0U8TqcDlgkuzHODJSLJ0yvc\nhRakXxzXA29P7ShUCD5PqLzzqibffq8iaOabIPAaUBhFhO8mf8K359m68AyApcnL\nwHDGJV+PN4UtC3iz1/Y6Q2YYyBRdC6XQtCuPWTPo62sXJFC3hsI=\n=zzoN\n-----END PGP SIGNATURE-----", "payload": "tree 72ad624ce85a93a8a64633d529eecd4977457f24\nparent 52b34550aca5f7dd7e152f773e3ab786acb86f6f\nauthor David Tolnay <dtolnay@gmail.com> 1647390021 -0700\ncommitter David Tolnay <dtolnay@gmail.com> 1647392219 -0700\n\nParse inner attributes on inline const block\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f427698c03a74b961dbc5f28bc7a9801a77d0d44", "html_url": "https://github.com/rust-lang/rust/commit/f427698c03a74b961dbc5f28bc7a9801a77d0d44", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f427698c03a74b961dbc5f28bc7a9801a77d0d44/comments", "author": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "52b34550aca5f7dd7e152f773e3ab786acb86f6f", "url": "https://api.github.com/repos/rust-lang/rust/commits/52b34550aca5f7dd7e152f773e3ab786acb86f6f", "html_url": "https://github.com/rust-lang/rust/commit/52b34550aca5f7dd7e152f773e3ab786acb86f6f"}], "stats": {"total": 32, "additions": 26, "deletions": 6}, "files": [{"sha": "dc610da5dd0898003390bd042b62c7da5c411561", "filename": "compiler/rustc_ast_pretty/src/pprust/state.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f427698c03a74b961dbc5f28bc7a9801a77d0d44/compiler%2Frustc_ast_pretty%2Fsrc%2Fpprust%2Fstate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f427698c03a74b961dbc5f28bc7a9801a77d0d44/compiler%2Frustc_ast_pretty%2Fsrc%2Fpprust%2Fstate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_pretty%2Fsrc%2Fpprust%2Fstate.rs?ref=f427698c03a74b961dbc5f28bc7a9801a77d0d44", "patch": "@@ -960,7 +960,7 @@ impl<'a> State<'a> {\n                 self.word_space(\"=\");\n                 match term {\n                     Term::Ty(ty) => self.print_type(ty),\n-                    Term::Const(c) => self.print_expr_anon_const(c),\n+                    Term::Const(c) => self.print_expr_anon_const(c, &[]),\n                 }\n             }\n             ast::AssocConstraintKind::Bound { bounds } => self.print_type_bounds(\":\", &*bounds),"}, {"sha": "9de4cbbee13f068e483d0fa0ae26d055358f4e1a", "filename": "compiler/rustc_ast_pretty/src/pprust/state/expr.rs", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/f427698c03a74b961dbc5f28bc7a9801a77d0d44/compiler%2Frustc_ast_pretty%2Fsrc%2Fpprust%2Fstate%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f427698c03a74b961dbc5f28bc7a9801a77d0d44/compiler%2Frustc_ast_pretty%2Fsrc%2Fpprust%2Fstate%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_pretty%2Fsrc%2Fpprust%2Fstate%2Fexpr.rs?ref=f427698c03a74b961dbc5f28bc7a9801a77d0d44", "patch": "@@ -88,10 +88,21 @@ impl<'a> State<'a> {\n         self.end();\n     }\n \n-    pub(super) fn print_expr_anon_const(&mut self, expr: &ast::AnonConst) {\n+    pub(super) fn print_expr_anon_const(\n+        &mut self,\n+        expr: &ast::AnonConst,\n+        attrs: &[ast::Attribute],\n+    ) {\n         self.ibox(INDENT_UNIT);\n         self.word(\"const\");\n-        self.print_expr(&expr.value);\n+        self.nbsp();\n+        if let ast::ExprKind::Block(block, None) = &expr.value.kind {\n+            self.cbox(0);\n+            self.ibox(0);\n+            self.print_block_with_attrs(block, attrs);\n+        } else {\n+            self.print_expr(&expr.value);\n+        }\n         self.end();\n     }\n \n@@ -275,7 +286,7 @@ impl<'a> State<'a> {\n                 self.print_expr_vec(exprs);\n             }\n             ast::ExprKind::ConstBlock(ref anon_const) => {\n-                self.print_expr_anon_const(anon_const);\n+                self.print_expr_anon_const(anon_const, attrs);\n             }\n             ast::ExprKind::Repeat(ref element, ref count) => {\n                 self.print_expr_repeat(element, count);"}, {"sha": "ffa4f7fed2dc809b1e285c108c3abc9eff110a49", "filename": "compiler/rustc_parse/src/parser/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f427698c03a74b961dbc5f28bc7a9801a77d0d44/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f427698c03a74b961dbc5f28bc7a9801a77d0d44/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fmod.rs?ref=f427698c03a74b961dbc5f28bc7a9801a77d0d44", "patch": "@@ -1105,13 +1105,13 @@ impl<'a> Parser<'a> {\n             self.sess.gated_spans.gate(sym::inline_const, span);\n         }\n         self.eat_keyword(kw::Const);\n-        let blk = self.parse_block()?;\n+        let (attrs, blk) = self.parse_inner_attrs_and_block()?;\n         let anon_const = AnonConst {\n             id: DUMMY_NODE_ID,\n             value: self.mk_expr(blk.span, ExprKind::Block(blk, None), AttrVec::new()),\n         };\n         let blk_span = anon_const.value.span;\n-        Ok(self.mk_expr(span.to(blk_span), ExprKind::ConstBlock(anon_const), AttrVec::new()))\n+        Ok(self.mk_expr(span.to(blk_span), ExprKind::ConstBlock(anon_const), AttrVec::from(attrs)))\n     }\n \n     /// Parses mutability (`mut` or nothing)."}, {"sha": "c01379065d1cd5ded2faa70b9e0daedce9ec065e", "filename": "src/test/pretty/stmt_expr_attributes.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f427698c03a74b961dbc5f28bc7a9801a77d0d44/src%2Ftest%2Fpretty%2Fstmt_expr_attributes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f427698c03a74b961dbc5f28bc7a9801a77d0d44/src%2Ftest%2Fpretty%2Fstmt_expr_attributes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fpretty%2Fstmt_expr_attributes.rs?ref=f427698c03a74b961dbc5f28bc7a9801a77d0d44", "patch": "@@ -1,6 +1,8 @@\n // pp-exact\n \n #![feature(box_syntax)]\n+#![feature(inline_const)]\n+#![feature(inline_const_pat)]\n #![feature(rustc_attrs)]\n #![feature(stmt_expr_attributes)]\n \n@@ -16,6 +18,7 @@ fn _1() {\n \n     #[rustc_dummy]\n     unsafe {\n+        #![rustc_dummy]\n         // code\n     }\n }\n@@ -206,6 +209,12 @@ fn _11() {\n             let _ = ();\n             ()\n         };\n+    let const {\n+                    #![rustc_dummy]\n+                } =\n+        #[rustc_dummy] const {\n+                #![rustc_dummy]\n+            };\n     let mut x = 0;\n     let _ = #[rustc_dummy] x = 15;\n     let _ = #[rustc_dummy] x += 15;"}]}