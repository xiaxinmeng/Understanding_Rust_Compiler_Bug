{"sha": "116f30dc33d9e3744f257f2f7f5467acfbff178b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjExNmYzMGRjMzNkOWUzNzQ0ZjI1N2YyZjdmNTQ2N2FjZmJmZjE3OGI=", "commit": {"author": {"name": "rail", "email": "12975677+rail-rain@users.noreply.github.com", "date": "2020-06-10T02:25:06Z"}, "committer": {"name": "rail", "email": "12975677+rail-rain@users.noreply.github.com", "date": "2020-09-24T20:59:14Z"}, "message": "Use else blocks instead of return statements in Increment/InitializeVisitor", "tree": {"sha": "651a2fdbabab4a418fac431cd4debb556f602b3e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/651a2fdbabab4a418fac431cd4debb556f602b3e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/116f30dc33d9e3744f257f2f7f5467acfbff178b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/116f30dc33d9e3744f257f2f7f5467acfbff178b", "html_url": "https://github.com/rust-lang/rust/commit/116f30dc33d9e3744f257f2f7f5467acfbff178b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/116f30dc33d9e3744f257f2f7f5467acfbff178b/comments", "author": {"login": "rail-rain", "id": 12975677, "node_id": "MDQ6VXNlcjEyOTc1Njc3", "avatar_url": "https://avatars.githubusercontent.com/u/12975677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rail-rain", "html_url": "https://github.com/rail-rain", "followers_url": "https://api.github.com/users/rail-rain/followers", "following_url": "https://api.github.com/users/rail-rain/following{/other_user}", "gists_url": "https://api.github.com/users/rail-rain/gists{/gist_id}", "starred_url": "https://api.github.com/users/rail-rain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rail-rain/subscriptions", "organizations_url": "https://api.github.com/users/rail-rain/orgs", "repos_url": "https://api.github.com/users/rail-rain/repos", "events_url": "https://api.github.com/users/rail-rain/events{/privacy}", "received_events_url": "https://api.github.com/users/rail-rain/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rail-rain", "id": 12975677, "node_id": "MDQ6VXNlcjEyOTc1Njc3", "avatar_url": "https://avatars.githubusercontent.com/u/12975677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rail-rain", "html_url": "https://github.com/rail-rain", "followers_url": "https://api.github.com/users/rail-rain/followers", "following_url": "https://api.github.com/users/rail-rain/following{/other_user}", "gists_url": "https://api.github.com/users/rail-rain/gists{/gist_id}", "starred_url": "https://api.github.com/users/rail-rain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rail-rain/subscriptions", "organizations_url": "https://api.github.com/users/rail-rain/orgs", "repos_url": "https://api.github.com/users/rail-rain/repos", "events_url": "https://api.github.com/users/rail-rain/events{/privacy}", "received_events_url": "https://api.github.com/users/rail-rain/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dc89bb1135afc31fc9ee2272e627192c04354d22", "url": "https://api.github.com/repos/rust-lang/rust/commits/dc89bb1135afc31fc9ee2272e627192c04354d22", "html_url": "https://github.com/rust-lang/rust/commit/dc89bb1135afc31fc9ee2272e627192c04354d22"}], "stats": {"total": 13, "additions": 7, "deletions": 6}, "files": [{"sha": "a59d3ef8708b62b2dc37d97cadad4341d365b671", "filename": "clippy_lints/src/loops.rs", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/116f30dc33d9e3744f257f2f7f5467acfbff178b/clippy_lints%2Fsrc%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/116f30dc33d9e3744f257f2f7f5467acfbff178b/clippy_lints%2Fsrc%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops.rs?ref=116f30dc33d9e3744f257f2f7f5467acfbff178b", "patch": "@@ -2181,16 +2181,17 @@ impl<'a, 'tcx> Visitor<'tcx> for IncrementVisitor<'a, 'tcx> {\n                     _ => (),\n                 }\n             }\n+\n+            walk_expr(self, expr);\n         } else if is_loop(expr) || is_conditional(expr) {\n             self.depth += 1;\n             walk_expr(self, expr);\n             self.depth -= 1;\n-            return;\n         } else if let ExprKind::Continue(_) = expr.kind {\n             self.done = true;\n-            return;\n+        } else {\n+            walk_expr(self, expr);\n         }\n-        walk_expr(self, expr);\n     }\n     fn nested_visit_map(&mut self) -> NestedVisitorMap<Self::Map> {\n         NestedVisitorMap::None\n@@ -2272,16 +2273,16 @@ impl<'a, 'tcx> Visitor<'tcx> for InitializeVisitor<'a, 'tcx> {\n                 self.state = VarState::DontWarn;\n                 return;\n             }\n+            walk_expr(self, expr);\n         } else if !self.past_loop && is_loop(expr) {\n             self.state = VarState::DontWarn;\n-            return;\n         } else if is_conditional(expr) {\n             self.depth += 1;\n             walk_expr(self, expr);\n             self.depth -= 1;\n-            return;\n+        } else {\n+            walk_expr(self, expr);\n         }\n-        walk_expr(self, expr);\n     }\n \n     fn nested_visit_map(&mut self) -> NestedVisitorMap<Self::Map> {"}]}