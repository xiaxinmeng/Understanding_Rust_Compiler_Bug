{"sha": "6fb3b2c1601662ac85d1e26ee4c939a7ecf680fc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZmYjNiMmMxNjAxNjYyYWM4NWQxZTI2ZWU0YzkzOWE3ZWNmNjgwZmM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-10-09T08:09:23Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-10-09T08:09:23Z"}, "message": "Auto merge of #6115 - ebroto:changelog_1_48, r=flip1995\n\nAdd changelog for 1.48 beta\n\n[Rendered](https://github.com/ebroto/rust-clippy/blob/changelog_1_48/CHANGELOG.md)\n\nI've not added the PRs fixing `same_item_push` because those were backported, namely:\n* [#5908](https://github.com/rust-lang/rust-clippy/pull/5908)\n* [#5997](https://github.com/rust-lang/rust-clippy/pull/5997)\n* [#6016](https://github.com/rust-lang/rust-clippy/pull/6016)\n\nThe following PR was reverted, so I've ignored it too:\n* [#5984](https://github.com/rust-lang/rust-clippy/pull/5984)\n\n~~Also, I took the liberty of adding a \"Thanks\" section, naming all the contributors to this release. I think they deserve visibility in the changelog. Please tell me if we want to add this or maybe it's redundant given we link to the PRs?~~\n\nchangelog: none\n\nr? `@flip1995`", "tree": {"sha": "fcbb6a9407c445dbcf957b11e6154f623c99852e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fcbb6a9407c445dbcf957b11e6154f623c99852e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6fb3b2c1601662ac85d1e26ee4c939a7ecf680fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6fb3b2c1601662ac85d1e26ee4c939a7ecf680fc", "html_url": "https://github.com/rust-lang/rust/commit/6fb3b2c1601662ac85d1e26ee4c939a7ecf680fc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6fb3b2c1601662ac85d1e26ee4c939a7ecf680fc/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "195cc9be94c51fb4651f447d1dda11c788650315", "url": "https://api.github.com/repos/rust-lang/rust/commits/195cc9be94c51fb4651f447d1dda11c788650315", "html_url": "https://github.com/rust-lang/rust/commit/195cc9be94c51fb4651f447d1dda11c788650315"}, {"sha": "13781ae2f8e31861c19a2c957d465d11569ea9ea", "url": "https://api.github.com/repos/rust-lang/rust/commits/13781ae2f8e31861c19a2c957d465d11569ea9ea", "html_url": "https://github.com/rust-lang/rust/commit/13781ae2f8e31861c19a2c957d465d11569ea9ea"}], "stats": {"total": 124, "additions": 121, "deletions": 3}, "files": [{"sha": "0bd13320dc952179435b89b971a0c24fae987940", "filename": "CHANGELOG.md", "status": "modified", "additions": 121, "deletions": 3, "changes": 124, "blob_url": "https://github.com/rust-lang/rust/blob/6fb3b2c1601662ac85d1e26ee4c939a7ecf680fc/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/6fb3b2c1601662ac85d1e26ee4c939a7ecf680fc/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=6fb3b2c1601662ac85d1e26ee4c939a7ecf680fc", "patch": "@@ -6,11 +6,129 @@ document.\n \n ## Unreleased / In Rust Nightly\n \n-[09bd400...master](https://github.com/rust-lang/rust-clippy/compare/09bd400...master)\n+[e636b88...master](https://github.com/rust-lang/rust-clippy/compare/e636b88...master)\n+\n+## Rust 1.48\n+\n+Current beta, release 2020-11-19\n+\n+[09bd400...e636b88](https://github.com/rust-lang/rust-clippy/compare/09bd400...e636b88)\n+\n+### New lints\n+\n+* [`self_assignment`] [#5894](https://github.com/rust-lang/rust-clippy/pull/5894)\n+* [`unnecessary_lazy_evaluations`] [#5720](https://github.com/rust-lang/rust-clippy/pull/5720)\n+* [`manual_strip`] [#6038](https://github.com/rust-lang/rust-clippy/pull/6038)\n+* [`map_err_ignore`] [#5998](https://github.com/rust-lang/rust-clippy/pull/5998)\n+* [`rc_buffer`] [#6044](https://github.com/rust-lang/rust-clippy/pull/6044)\n+* [`to_string_in_display`] [#5831](https://github.com/rust-lang/rust-clippy/pull/5831)\n+* [`single_char_push_str`] [#5881](https://github.com/rust-lang/rust-clippy/pull/5881)\n+\n+### Moves and Deprecations\n+\n+* Downgrade [`verbose_bit_mask`] to pedantic\n+  [#6036](https://github.com/rust-lang/rust-clippy/pull/6036)\n+\n+### Enhancements\n+\n+* Extend [`precedence`] to handle chains of methods combined with unary negation\n+  [#5928](https://github.com/rust-lang/rust-clippy/pull/5928)\n+* [`useless_vec`]: add a configuration value for the maximum allowed size on the stack\n+  [#5907](https://github.com/rust-lang/rust-clippy/pull/5907)\n+* [`suspicious_arithmetic_impl`]: extend to implementations of `BitAnd`, `BitOr`, `BitXor`, `Rem`, `Shl`, and `Shr`\n+  [#5884](https://github.com/rust-lang/rust-clippy/pull/5884)\n+* [`invalid_atomic_ordering`]: detect misuse of `compare_exchange`, `compare_exchange_weak`, and `fetch_update`\n+  [#6025](https://github.com/rust-lang/rust-clippy/pull/6025)\n+* Avoid [`redundant_pattern_matching`] triggering in macros\n+  [#6069](https://github.com/rust-lang/rust-clippy/pull/6069)\n+* [`option_if_let_else`]: distinguish pure from impure `else` expressions\n+  [#5937](https://github.com/rust-lang/rust-clippy/pull/5937)\n+* [`needless_doctest_main`]: parse doctests instead of using textual search\n+  [#5912](https://github.com/rust-lang/rust-clippy/pull/5912)\n+* [`wildcard_imports`]: allow `prelude` to appear in any segment of an import\n+  [#5929](https://github.com/rust-lang/rust-clippy/pull/5929)\n+* Re-enable [`len_zero`] for ranges now that `range_is_empty` is stable\n+  [#5961](https://github.com/rust-lang/rust-clippy/pull/5961)\n+* [`option_as_ref_deref`]: catch fully-qualified calls to `Deref::deref` and `DerefMut::deref_mut`\n+  [#5933](https://github.com/rust-lang/rust-clippy/pull/5933)\n+\n+### False Positive Fixes\n+\n+* [`useless_attribute`]: permit allowing [`wildcard_imports`] and [`enum_glob_use`]\n+  [#5994](https://github.com/rust-lang/rust-clippy/pull/5994)\n+* [`transmute_ptr_to_ptr`]: avoid suggesting dereferencing raw pointers in const contexts \n+  [#5999](https://github.com/rust-lang/rust-clippy/pull/5999)\n+* [`redundant_closure_call`]: take into account usages of the closure in nested functions and closures\n+  [#5920](https://github.com/rust-lang/rust-clippy/pull/5920)\n+* Fix false positive in [`borrow_interior_mutable_const`] when referencing a field behind a pointer\n+  [#5949](https://github.com/rust-lang/rust-clippy/pull/5949)\n+* [`doc_markdown`]: allow using \"GraphQL\" without backticks\n+  [#5996](https://github.com/rust-lang/rust-clippy/pull/5996)\n+* [`to_string_in_display`]: avoid linting when calling `to_string()` on anything that is not `self` \n+  [#5971](https://github.com/rust-lang/rust-clippy/pull/5971)\n+* [`indexing_slicing`] and [`out_of_bounds_indexing`] treat references to arrays as arrays\n+  [#6034](https://github.com/rust-lang/rust-clippy/pull/6034)\n+* [`should_implement_trait`]: ignore methods with lifetime parameters\n+  [#5725](https://github.com/rust-lang/rust-clippy/pull/5725)\n+* [`needless_return`]: avoid linting if a temporary borrows a local variable\n+  [#5903](https://github.com/rust-lang/rust-clippy/pull/5903)\n+* Restrict [`unnecessary_sort_by`] to non-reference, Copy types\n+  [#6006](https://github.com/rust-lang/rust-clippy/pull/6006)\n+* Avoid suggesting `from_bits`/`to_bits` in const contexts in [`transmute_int_to_float`]\n+  [#5919](https://github.com/rust-lang/rust-clippy/pull/5919)\n+* [`declare_interior_mutable_const`] and [`borrow_interior_mutable_const`]: improve detection of interior mutable types\n+  [#6046](https://github.com/rust-lang/rust-clippy/pull/6046)\n+\n+### Suggestion Fixes/Improvements\n+\n+* [`let_and_return`]: add a cast to the suggestion when the return expression has adjustments\n+  [#5946](https://github.com/rust-lang/rust-clippy/pull/5946)\n+* [`useless_conversion`]: show the type in the error message\n+  [#6035](https://github.com/rust-lang/rust-clippy/pull/6035)\n+* [`unnecessary_mut_passed`]: discriminate between functions and methods in the error message \n+  [#5892](https://github.com/rust-lang/rust-clippy/pull/5892)\n+* [`float_cmp`] and [`float_cmp_const`]: change wording to make margin of error less ambiguous\n+  [#6043](https://github.com/rust-lang/rust-clippy/pull/6043)\n+* [`default_trait_access`]: do not use unnecessary type parameters in the suggestion\n+  [#5993](https://github.com/rust-lang/rust-clippy/pull/5993)\n+* [`collapsible_if`]: don't use expanded code in the suggestion \n+  [#5992](https://github.com/rust-lang/rust-clippy/pull/5992)\n+* Do not suggest empty format strings in [`print_with_newline`] and [`write_with_newline`]\n+  [#6042](https://github.com/rust-lang/rust-clippy/pull/6042)\n+* [`unit_arg`]: improve the readability of the suggestion\n+  [#5931](https://github.com/rust-lang/rust-clippy/pull/5931)\n+* [`stable_sort_primitive`]: print the type that is being sorted in the lint message \n+  [#5935](https://github.com/rust-lang/rust-clippy/pull/5935)\n+* Show line count and max lines in [`too_many_lines`] lint message\n+  [#6009](https://github.com/rust-lang/rust-clippy/pull/6009)\n+* Keep parentheses in the suggestion of [`useless_conversion`] where applicable\n+  [#5900](https://github.com/rust-lang/rust-clippy/pull/5900)\n+* [`option_map_unit_fn`] and [`result_map_unit_fn`]: print the unit type `()` explicitly\n+  [#6024](https://github.com/rust-lang/rust-clippy/pull/6024)\n+* [`redundant_allocation`]: suggest replacing `Rc<Box<T>>` with `Rc<T>` \n+  [#5899](https://github.com/rust-lang/rust-clippy/pull/5899)\n+* Make lint messages adhere to rustc dev guide conventions\n+  [#5893](https://github.com/rust-lang/rust-clippy/pull/5893)\n+\n+### ICE Fixes\n+\n+* Fix ICE in [`repeat_once`]\n+  [#5948](https://github.com/rust-lang/rust-clippy/pull/5948)\n+\n+### Documentation Improvements\n+\n+* [`mutable_key_type`]: explain potential for false positives when the interior mutable type is not accessed in the `Hash` implementation\n+  [#6019](https://github.com/rust-lang/rust-clippy/pull/6019)\n+* [`unnecessary_mut_passed`]: fix typo\n+  [#5913](https://github.com/rust-lang/rust-clippy/pull/5913)\n+* Add example of false positive to [`ptr_arg`] docs.\n+  [#5885](https://github.com/rust-lang/rust-clippy/pull/5885)\n+* [`box_vec`], [`vec_box`] and [`borrowed_box`]: add link to the documentation of `Box`\n+  [#6023](https://github.com/rust-lang/rust-clippy/pull/6023)\n \n ## Rust 1.47\n \n-Current beta, release 2020-10-08\n+Current stable, released 2020-10-08\n \n [c2c07fa...09bd400](https://github.com/rust-lang/rust-clippy/compare/c2c07fa...09bd400)\n \n@@ -112,7 +230,7 @@ Current beta, release 2020-10-08\n \n ## Rust 1.46\n \n-Current stable, released 2020-08-27\n+Released 2020-08-27\n \n [7ea7cd1...c2c07fa](https://github.com/rust-lang/rust-clippy/compare/7ea7cd1...c2c07fa)\n "}]}