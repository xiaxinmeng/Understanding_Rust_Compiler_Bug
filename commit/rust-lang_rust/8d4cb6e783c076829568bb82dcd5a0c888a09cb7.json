{"sha": "8d4cb6e783c076829568bb82dcd5a0c888a09cb7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhkNGNiNmU3ODNjMDc2ODI5NTY4YmI4MmRjZDVhMGM4ODhhMDljYjc=", "commit": {"author": {"name": "Ruben Schmidmeister", "email": "ruben.schmidmeister@icloud.com", "date": "2019-05-18T09:42:49Z"}, "committer": {"name": "Ruben Schmidmeister", "email": "ruben.schmidmeister@icloud.com", "date": "2019-05-18T09:42:49Z"}, "message": "Use peek() instead of checking indexes", "tree": {"sha": "759edbb92fb50cea27784b1fe2ac4b24b3c9894d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/759edbb92fb50cea27784b1fe2ac4b24b3c9894d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8d4cb6e783c076829568bb82dcd5a0c888a09cb7", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEEU0FXzFYkrmfOhhqxKTh7Wnqvhj8FAlzf06cACgkQKTh7Wnqv\nhj8YlAf+MbX9uDiTzXQYjRr9+s/VtK0z9j9779pxOkBxuhAJ2JlEWwC8SuvRnzpM\nGZH2ZqJxkVs3Hk40dz0bUtYoDklckGYzXlT5AQWfw4NEbJKM5XVNiwjRqTkbEQen\nm+KfSieSnyHxXdwNKB7ycbpJ4ZeqXYJDh4hWSnL8Y1BLwOXZpfO7/qKRSd5HC+NJ\nWbHMBw5gGXb0mNxdFCNvEEX+PvHZNQRN3ULDuQ2BN8V+jsKjT5IxsKw/7j8n1zvV\nOLaYIasf9E5P7wTAqf25abHDevka5b42XQtvUcQwjzT4yG9Ra0LqmKR3yVb/gXij\n02qAg/hLLh3DYypWNpM/7aaWYllsow==\n=tfZb\n-----END PGP SIGNATURE-----", "payload": "tree 759edbb92fb50cea27784b1fe2ac4b24b3c9894d\nparent 9b98dd774ed0a6ddbe914da0157aced6f076b9da\nauthor Ruben Schmidmeister <ruben.schmidmeister@icloud.com> 1558172569 +0200\ncommitter Ruben Schmidmeister <ruben.schmidmeister@icloud.com> 1558172569 +0200\n\nUse peek() instead of checking indexes\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8d4cb6e783c076829568bb82dcd5a0c888a09cb7", "html_url": "https://github.com/rust-lang/rust/commit/8d4cb6e783c076829568bb82dcd5a0c888a09cb7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8d4cb6e783c076829568bb82dcd5a0c888a09cb7/comments", "author": {"login": "bash", "id": 4602612, "node_id": "MDQ6VXNlcjQ2MDI2MTI=", "avatar_url": "https://avatars.githubusercontent.com/u/4602612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bash", "html_url": "https://github.com/bash", "followers_url": "https://api.github.com/users/bash/followers", "following_url": "https://api.github.com/users/bash/following{/other_user}", "gists_url": "https://api.github.com/users/bash/gists{/gist_id}", "starred_url": "https://api.github.com/users/bash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bash/subscriptions", "organizations_url": "https://api.github.com/users/bash/orgs", "repos_url": "https://api.github.com/users/bash/repos", "events_url": "https://api.github.com/users/bash/events{/privacy}", "received_events_url": "https://api.github.com/users/bash/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bash", "id": 4602612, "node_id": "MDQ6VXNlcjQ2MDI2MTI=", "avatar_url": "https://avatars.githubusercontent.com/u/4602612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bash", "html_url": "https://github.com/bash", "followers_url": "https://api.github.com/users/bash/followers", "following_url": "https://api.github.com/users/bash/following{/other_user}", "gists_url": "https://api.github.com/users/bash/gists{/gist_id}", "starred_url": "https://api.github.com/users/bash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bash/subscriptions", "organizations_url": "https://api.github.com/users/bash/orgs", "repos_url": "https://api.github.com/users/bash/repos", "events_url": "https://api.github.com/users/bash/events{/privacy}", "received_events_url": "https://api.github.com/users/bash/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9b98dd774ed0a6ddbe914da0157aced6f076b9da", "url": "https://api.github.com/repos/rust-lang/rust/commits/9b98dd774ed0a6ddbe914da0157aced6f076b9da", "html_url": "https://github.com/rust-lang/rust/commit/9b98dd774ed0a6ddbe914da0157aced6f076b9da"}], "stats": {"total": 10, "additions": 4, "deletions": 6}, "files": [{"sha": "1affc7bc910d130870828c0c45f3514a60679591", "filename": "src/attr/doc_comment.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/8d4cb6e783c076829568bb82dcd5a0c888a09cb7/src%2Fattr%2Fdoc_comment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d4cb6e783c076829568bb82dcd5a0c888a09cb7/src%2Fattr%2Fdoc_comment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fattr%2Fdoc_comment.rs?ref=8d4cb6e783c076829568bb82dcd5a0c888a09cb7", "patch": "@@ -16,14 +16,12 @@ impl<'a> DocCommentFormatter<'a> {\n impl Display for DocCommentFormatter<'_> {\n     fn fmt(&self, formatter: &mut fmt::Formatter<'_>) -> fmt::Result {\n         let opener = self.style.opener().trim_end();\n-\n         let literal_as_str = self.literal.as_str().get();\n-        let line_count = literal_as_str.lines().count();\n-        let last_line_index = line_count - 1;\n-        let lines = literal_as_str.lines().enumerate();\n \n-        for (index, line) in lines {\n-            if index == last_line_index {\n+        let mut lines = literal_as_str.lines().peekable();\n+        while let Some(line) = lines.next() {\n+            let is_last_line = lines.peek().is_none();\n+            if is_last_line {\n                 write!(formatter, \"{}{}\", opener, line)?;\n             } else {\n                 writeln!(formatter, \"{}{}\", opener, line)?;"}]}