{"sha": "20979aad7733d8ddc89a1922560c4770d3a6e814", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIwOTc5YWFkNzczM2Q4ZGRjODlhMTkyMjU2MGM0NzcwZDNhNmU4MTQ=", "commit": {"author": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2021-01-08T19:57:28Z"}, "committer": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2021-01-08T19:57:35Z"}, "message": "Change wording of note", "tree": {"sha": "379d973cb98131854dd69d9fc506b87afeeb9c31", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/379d973cb98131854dd69d9fc506b87afeeb9c31"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/20979aad7733d8ddc89a1922560c4770d3a6e814", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7J9Gc3TfBwj2K399tAh+UQ6YsWQFAl/4uTMACgkQtAh+UQ6Y\nsWR18Q//bbdDl0IoWZLQvnvFsdkZXX+BFbP9+U4yUb9v4ULw2GrbuPQzgjbRyafC\nu/8QBKzG9hqnCmK/vlGawYUsYoJqJut7QiEAczU13x/xPLedivFNrvg7gbWKWGTe\nMJg6uwEXuAra+Aj5DGOXhrWRcyAlFF5LZOcz8zoWf6cZ4jNAYp5wmNWIST+xA/sH\nAL+f2gSq4ii9/0A1xWhKS9l53NUqFWMa+1PDCGoiT5DSetz7/DEOWeK8TO2bgo1B\nGZ5QHaN0OS+Y23CbGIVD7YVzRJg2x1OSYx/V8UPcEKpRJrR4KJSbqJnX2fb5j8d9\nRNutd7bkkAoww/FBkM4GlxvFKbTzpJXuaCj6XC/7po1uWEkTxdG7xNMk58FZw2Kg\ni/MatZ0nhBo6I78bXdv4QL3QkAgtrma8ue30GL2AqtOfordsn2UmxuAUCVzsNRDZ\nTwTulqHfOe+f/dqvqDg2MeDsfpJ64VPJQIlMUb61Fx5NuSBMvLu7L+NImveQEYSC\nHO6b19NuKR7z10D4/RqSYwnHGebhcojtk0iFXnhiuK8EdpoeI4RhMVqjwGrDFrNk\n8wlTV5KlizqpfVX8YAAUpAQmkTX1Jp7FXHoL+e84EpJCVugxUwUJSbA3SZoTUNCl\ncty6JaiDWYCe58uk4y5uTn3/2k9/XuB8V8O4nfngH97phLZLDCI=\n=yg9y\n-----END PGP SIGNATURE-----", "payload": "tree 379d973cb98131854dd69d9fc506b87afeeb9c31\nparent de90afc72e2393efad0fb9cdfd765703a044fe02\nauthor Aaron Hill <aa1ronham@gmail.com> 1610135848 -0500\ncommitter Aaron Hill <aa1ronham@gmail.com> 1610135855 -0500\n\nChange wording of note\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/20979aad7733d8ddc89a1922560c4770d3a6e814", "html_url": "https://github.com/rust-lang/rust/commit/20979aad7733d8ddc89a1922560c4770d3a6e814", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/20979aad7733d8ddc89a1922560c4770d3a6e814/comments", "author": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "de90afc72e2393efad0fb9cdfd765703a044fe02", "url": "https://api.github.com/repos/rust-lang/rust/commits/de90afc72e2393efad0fb9cdfd765703a044fe02", "html_url": "https://github.com/rust-lang/rust/commit/de90afc72e2393efad0fb9cdfd765703a044fe02"}], "stats": {"total": 40, "additions": 20, "deletions": 20}, "files": [{"sha": "db02ee67910b2ab59e940da0ed7cf120fcda4de9", "filename": "compiler/rustc_mir/src/borrow_check/diagnostics/conflict_errors.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/20979aad7733d8ddc89a1922560c4770d3a6e814/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fdiagnostics%2Fconflict_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/20979aad7733d8ddc89a1922560c4770d3a6e814/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fdiagnostics%2Fconflict_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fdiagnostics%2Fconflict_errors.rs?ref=20979aad7733d8ddc89a1922560c4770d3a6e814", "patch": "@@ -218,7 +218,7 @@ impl<'cx, 'tcx> MirBorrowckCtxt<'cx, 'tcx> {\n                             if self.fn_self_span_reported.insert(self_arg.span) {\n                                 err.span_note(\n                                     self_arg.span,\n-                                    &format!(\"this function consumes the receiver `self` by taking ownership of it, which moves {}\", place_name)\n+                                    &format!(\"this function takes ownership of the receiver `self`, which moves {}\", place_name)\n                                 );\n                             }\n                         }"}, {"sha": "e067dbbf85bddbfcb03004c38991f4f29f202f5b", "filename": "src/test/ui/codemap_tests/tab_3.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/20979aad7733d8ddc89a1922560c4770d3a6e814/src%2Ftest%2Fui%2Fcodemap_tests%2Ftab_3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/20979aad7733d8ddc89a1922560c4770d3a6e814/src%2Ftest%2Fui%2Fcodemap_tests%2Ftab_3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcodemap_tests%2Ftab_3.stderr?ref=20979aad7733d8ddc89a1922560c4770d3a6e814", "patch": "@@ -9,7 +9,7 @@ LL |     {\n LL |         println!(\"{:?}\", some_vec);\n    |                          ^^^^^^^^ value borrowed here after move\n    |\n-note: this function consumes the receiver `self` by taking ownership of it, which moves `some_vec`\n+note: this function takes ownership of the receiver `self`, which moves `some_vec`\n   --> $SRC_DIR/core/src/iter/traits/collect.rs:LL:COL\n    |\n LL |     fn into_iter(self) -> Self::IntoIter;"}, {"sha": "b14faff8f7b8d52cb07535df2a36698e4194d47c", "filename": "src/test/ui/issues/issue-34721.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/20979aad7733d8ddc89a1922560c4770d3a6e814/src%2Ftest%2Fui%2Fissues%2Fissue-34721.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/20979aad7733d8ddc89a1922560c4770d3a6e814/src%2Ftest%2Fui%2Fissues%2Fissue-34721.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-34721.stderr?ref=20979aad7733d8ddc89a1922560c4770d3a6e814", "patch": "@@ -13,7 +13,7 @@ LL |         };\n LL |         x.zero()\n    |         ^ value used here after move\n    |\n-note: this function consumes the receiver `self` by taking ownership of it, which moves `x`\n+note: this function takes ownership of the receiver `self`, which moves `x`\n   --> $DIR/issue-34721.rs:4:13\n    |\n LL |     fn zero(self) -> Self;"}, {"sha": "fb242f738c87e4877b356a9419af9dd367423633", "filename": "src/test/ui/issues/issue-61108.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/20979aad7733d8ddc89a1922560c4770d3a6e814/src%2Ftest%2Fui%2Fissues%2Fissue-61108.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/20979aad7733d8ddc89a1922560c4770d3a6e814/src%2Ftest%2Fui%2Fissues%2Fissue-61108.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-61108.stderr?ref=20979aad7733d8ddc89a1922560c4770d3a6e814", "patch": "@@ -12,7 +12,7 @@ LL |     for l in bad_letters {\n LL |     bad_letters.push('s');\n    |     ^^^^^^^^^^^ value borrowed here after move\n    |\n-note: this function consumes the receiver `self` by taking ownership of it, which moves `bad_letters`\n+note: this function takes ownership of the receiver `self`, which moves `bad_letters`\n   --> $SRC_DIR/core/src/iter/traits/collect.rs:LL:COL\n    |\n LL |     fn into_iter(self) -> Self::IntoIter;"}, {"sha": "e0da3fd5195cb26df853777f30ee45abfcc9dd61", "filename": "src/test/ui/issues/issue-64559.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/20979aad7733d8ddc89a1922560c4770d3a6e814/src%2Ftest%2Fui%2Fissues%2Fissue-64559.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/20979aad7733d8ddc89a1922560c4770d3a6e814/src%2Ftest%2Fui%2Fissues%2Fissue-64559.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-64559.stderr?ref=20979aad7733d8ddc89a1922560c4770d3a6e814", "patch": "@@ -13,7 +13,7 @@ LL |     let _closure = || orig;\n    |                    |\n    |                    value used here after move\n    |\n-note: this function consumes the receiver `self` by taking ownership of it, which moves `orig`\n+note: this function takes ownership of the receiver `self`, which moves `orig`\n   --> $SRC_DIR/core/src/iter/traits/collect.rs:LL:COL\n    |\n LL |     fn into_iter(self) -> Self::IntoIter;"}, {"sha": "eca6bb9296ddc91e989b16aa26ef65b732d38b28", "filename": "src/test/ui/moves/move-fn-self-receiver.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/20979aad7733d8ddc89a1922560c4770d3a6e814/src%2Ftest%2Fui%2Fmoves%2Fmove-fn-self-receiver.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/20979aad7733d8ddc89a1922560c4770d3a6e814/src%2Ftest%2Fui%2Fmoves%2Fmove-fn-self-receiver.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmoves%2Fmove-fn-self-receiver.stderr?ref=20979aad7733d8ddc89a1922560c4770d3a6e814", "patch": "@@ -6,7 +6,7 @@ LL |     val.0.into_iter().next();\n LL |     val.0;\n    |     ^^^^^ value used here after move\n    |\n-note: this function consumes the receiver `self` by taking ownership of it, which moves `val.0`\n+note: this function takes ownership of the receiver `self`, which moves `val.0`\n   --> $SRC_DIR/core/src/iter/traits/collect.rs:LL:COL\n    |\n LL |     fn into_iter(self) -> Self::IntoIter;\n@@ -23,7 +23,7 @@ LL |     foo.use_self();\n LL |     foo;\n    |     ^^^ value used here after move\n    |\n-note: this function consumes the receiver `self` by taking ownership of it, which moves `foo`\n+note: this function takes ownership of the receiver `self`, which moves `foo`\n   --> $DIR/move-fn-self-receiver.rs:13:17\n    |\n LL |     fn use_self(self) {}\n@@ -49,7 +49,7 @@ LL |     boxed_foo.use_box_self();\n LL |     boxed_foo;\n    |     ^^^^^^^^^ value used here after move\n    |\n-note: this function consumes the receiver `self` by taking ownership of it, which moves `boxed_foo`\n+note: this function takes ownership of the receiver `self`, which moves `boxed_foo`\n   --> $DIR/move-fn-self-receiver.rs:14:21\n    |\n LL |     fn use_box_self(self: Box<Self>) {}\n@@ -65,7 +65,7 @@ LL |     pin_box_foo.use_pin_box_self();\n LL |     pin_box_foo;\n    |     ^^^^^^^^^^^ value used here after move\n    |\n-note: this function consumes the receiver `self` by taking ownership of it, which moves `pin_box_foo`\n+note: this function takes ownership of the receiver `self`, which moves `pin_box_foo`\n   --> $DIR/move-fn-self-receiver.rs:15:25\n    |\n LL |     fn use_pin_box_self(self: Pin<Box<Self>>) {}\n@@ -91,7 +91,7 @@ LL |     rc_foo.use_rc_self();\n LL |     rc_foo;\n    |     ^^^^^^ value used here after move\n    |\n-note: this function consumes the receiver `self` by taking ownership of it, which moves `rc_foo`\n+note: this function takes ownership of the receiver `self`, which moves `rc_foo`\n   --> $DIR/move-fn-self-receiver.rs:16:20\n    |\n LL |     fn use_rc_self(self: Rc<Self>) {}\n@@ -146,7 +146,7 @@ LL |     for _val in container.custom_into_iter() {}\n LL |     container;\n    |     ^^^^^^^^^ value used here after move\n    |\n-note: this function consumes the receiver `self` by taking ownership of it, which moves `container`\n+note: this function takes ownership of the receiver `self`, which moves `container`\n   --> $DIR/move-fn-self-receiver.rs:23:25\n    |\n LL |     fn custom_into_iter(self) -> impl Iterator<Item = bool> {"}, {"sha": "3cc8ca29144ca6a49dc8bede2fdf0d4f26b4374f", "filename": "src/test/ui/moves/moves-based-on-type-access-to-field.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/20979aad7733d8ddc89a1922560c4770d3a6e814/src%2Ftest%2Fui%2Fmoves%2Fmoves-based-on-type-access-to-field.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/20979aad7733d8ddc89a1922560c4770d3a6e814/src%2Ftest%2Fui%2Fmoves%2Fmoves-based-on-type-access-to-field.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmoves%2Fmoves-based-on-type-access-to-field.stderr?ref=20979aad7733d8ddc89a1922560c4770d3a6e814", "patch": "@@ -8,7 +8,7 @@ LL |     consume(x.into_iter().next().unwrap());\n LL |     touch(&x[0]);\n    |            ^ value borrowed here after move\n    |\n-note: this function consumes the receiver `self` by taking ownership of it, which moves `x`\n+note: this function takes ownership of the receiver `self`, which moves `x`\n   --> $SRC_DIR/core/src/iter/traits/collect.rs:LL:COL\n    |\n LL |     fn into_iter(self) -> Self::IntoIter;"}, {"sha": "9bcec36740d6245ba901feb26a5ea7b4647a896f", "filename": "src/test/ui/moves/moves-based-on-type-exprs.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/20979aad7733d8ddc89a1922560c4770d3a6e814/src%2Ftest%2Fui%2Fmoves%2Fmoves-based-on-type-exprs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/20979aad7733d8ddc89a1922560c4770d3a6e814/src%2Ftest%2Fui%2Fmoves%2Fmoves-based-on-type-exprs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmoves%2Fmoves-based-on-type-exprs.stderr?ref=20979aad7733d8ddc89a1922560c4770d3a6e814", "patch": "@@ -108,7 +108,7 @@ LL |     let _y = x.into_iter().next().unwrap();\n LL |     touch(&x);\n    |           ^^ value borrowed here after move\n    |\n-note: this function consumes the receiver `self` by taking ownership of it, which moves `x`\n+note: this function takes ownership of the receiver `self`, which moves `x`\n   --> $SRC_DIR/core/src/iter/traits/collect.rs:LL:COL\n    |\n LL |     fn into_iter(self) -> Self::IntoIter;\n@@ -124,7 +124,7 @@ LL |     let _y = [x.into_iter().next().unwrap(); 1];\n LL |     touch(&x);\n    |           ^^ value borrowed here after move\n    |\n-note: this function consumes the receiver `self` by taking ownership of it, which moves `x`\n+note: this function takes ownership of the receiver `self`, which moves `x`\n   --> $SRC_DIR/core/src/iter/traits/collect.rs:LL:COL\n    |\n LL |     fn into_iter(self) -> Self::IntoIter;"}, {"sha": "28c319b659765ccbf1bef51cde2b85e12017a248", "filename": "src/test/ui/suggestions/borrow-for-loop-head.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/20979aad7733d8ddc89a1922560c4770d3a6e814/src%2Ftest%2Fui%2Fsuggestions%2Fborrow-for-loop-head.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/20979aad7733d8ddc89a1922560c4770d3a6e814/src%2Ftest%2Fui%2Fsuggestions%2Fborrow-for-loop-head.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fborrow-for-loop-head.stderr?ref=20979aad7733d8ddc89a1922560c4770d3a6e814", "patch": "@@ -18,7 +18,7 @@ LL |         for j in a {\n    |                  `a` moved due to this implicit call to `.into_iter()`, in previous iteration of loop\n    |                  help: consider borrowing to avoid moving into the for loop: `&a`\n    |\n-note: this function consumes the receiver `self` by taking ownership of it, which moves `a`\n+note: this function takes ownership of the receiver `self`, which moves `a`\n   --> $SRC_DIR/core/src/iter/traits/collect.rs:LL:COL\n    |\n LL |     fn into_iter(self) -> Self::IntoIter;"}, {"sha": "4f2bc06d4ab8e5177bf5cf821136fe1eb2e51c09", "filename": "src/test/ui/unsized-locals/borrow-after-move.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/20979aad7733d8ddc89a1922560c4770d3a6e814/src%2Ftest%2Fui%2Funsized-locals%2Fborrow-after-move.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/20979aad7733d8ddc89a1922560c4770d3a6e814/src%2Ftest%2Fui%2Funsized-locals%2Fborrow-after-move.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funsized-locals%2Fborrow-after-move.stderr?ref=20979aad7733d8ddc89a1922560c4770d3a6e814", "patch": "@@ -51,7 +51,7 @@ LL |         y.foo();\n LL |         println!(\"{}\", &y);\n    |                        ^^ value borrowed here after move\n    |\n-note: this function consumes the receiver `self` by taking ownership of it, which moves `y`\n+note: this function takes ownership of the receiver `self`, which moves `y`\n   --> $DIR/borrow-after-move.rs:5:12\n    |\n LL |     fn foo(self) -> String;"}, {"sha": "4bb2ad88faf3b7c7916c9a5267f8b0347bfee961", "filename": "src/test/ui/unsized-locals/double-move.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/20979aad7733d8ddc89a1922560c4770d3a6e814/src%2Ftest%2Fui%2Funsized-locals%2Fdouble-move.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/20979aad7733d8ddc89a1922560c4770d3a6e814/src%2Ftest%2Fui%2Funsized-locals%2Fdouble-move.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funsized-locals%2Fdouble-move.stderr?ref=20979aad7733d8ddc89a1922560c4770d3a6e814", "patch": "@@ -47,7 +47,7 @@ LL |         y.foo();\n LL |         y.foo();\n    |         ^ value used here after move\n    |\n-note: this function consumes the receiver `self` by taking ownership of it, which moves `y`\n+note: this function takes ownership of the receiver `self`, which moves `y`\n   --> $DIR/double-move.rs:5:12\n    |\n LL |     fn foo(self) -> String;"}, {"sha": "7fdc4ab251fe8ad5b2f93102c959ecb7c1f5346a", "filename": "src/test/ui/use/use-after-move-self-based-on-type.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/20979aad7733d8ddc89a1922560c4770d3a6e814/src%2Ftest%2Fui%2Fuse%2Fuse-after-move-self-based-on-type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/20979aad7733d8ddc89a1922560c4770d3a6e814/src%2Ftest%2Fui%2Fuse%2Fuse-after-move-self-based-on-type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fuse%2Fuse-after-move-self-based-on-type.stderr?ref=20979aad7733d8ddc89a1922560c4770d3a6e814", "patch": "@@ -8,7 +8,7 @@ LL |         self.bar();\n LL |         return self.x;\n    |                ^^^^^^ value used here after move\n    |\n-note: this function consumes the receiver `self` by taking ownership of it, which moves `self`\n+note: this function takes ownership of the receiver `self`, which moves `self`\n   --> $DIR/use-after-move-self-based-on-type.rs:15:16\n    |\n LL |     pub fn bar(self) {}"}, {"sha": "073deee63b98c763a35049c2a377af3925f3a5eb", "filename": "src/test/ui/use/use-after-move-self.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/20979aad7733d8ddc89a1922560c4770d3a6e814/src%2Ftest%2Fui%2Fuse%2Fuse-after-move-self.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/20979aad7733d8ddc89a1922560c4770d3a6e814/src%2Ftest%2Fui%2Fuse%2Fuse-after-move-self.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fuse%2Fuse-after-move-self.stderr?ref=20979aad7733d8ddc89a1922560c4770d3a6e814", "patch": "@@ -8,7 +8,7 @@ LL |         self.bar();\n LL |         return *self.x;\n    |                ^^^^^^^ value used here after move\n    |\n-note: this function consumes the receiver `self` by taking ownership of it, which moves `self`\n+note: this function takes ownership of the receiver `self`, which moves `self`\n   --> $DIR/use-after-move-self.rs:13:16\n    |\n LL |     pub fn bar(self) {}"}, {"sha": "cda08b0f4e09cc6c1404a2389535e1b39f83c42e", "filename": "src/test/ui/walk-struct-literal-with.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/20979aad7733d8ddc89a1922560c4770d3a6e814/src%2Ftest%2Fui%2Fwalk-struct-literal-with.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/20979aad7733d8ddc89a1922560c4770d3a6e814/src%2Ftest%2Fui%2Fwalk-struct-literal-with.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fwalk-struct-literal-with.stderr?ref=20979aad7733d8ddc89a1922560c4770d3a6e814", "patch": "@@ -8,7 +8,7 @@ LL |     let end = Mine{other_val:1, ..start.make_string_bar()};\n LL |     println!(\"{}\", start.test);\n    |                    ^^^^^^^^^^ value borrowed here after move\n    |\n-note: this function consumes the receiver `self` by taking ownership of it, which moves `start`\n+note: this function takes ownership of the receiver `self`, which moves `start`\n   --> $DIR/walk-struct-literal-with.rs:7:28\n    |\n LL |     fn make_string_bar(mut self) -> Mine{"}]}