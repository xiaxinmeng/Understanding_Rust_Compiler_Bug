{"sha": "42198c18f46aa1841ff2870c4841eafae7ec7e8d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQyMTk4YzE4ZjQ2YWExODQxZmYyODcwYzQ4NDFlYWZhZTdlYzdlOGQ=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-01-15T23:01:31Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-01-16T02:53:30Z"}, "message": "Test fixes and rebase conflicts", "tree": {"sha": "a669459825ecb6e8a78d4615fa2ccc0c2dee7836", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a669459825ecb6e8a78d4615fa2ccc0c2dee7836"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/42198c18f46aa1841ff2870c4841eafae7ec7e8d", "comment_count": 6, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/42198c18f46aa1841ff2870c4841eafae7ec7e8d", "html_url": "https://github.com/rust-lang/rust/commit/42198c18f46aa1841ff2870c4841eafae7ec7e8d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/42198c18f46aa1841ff2870c4841eafae7ec7e8d/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5f32992b318790b1aca4449c00fe9c8ef999a402", "url": "https://api.github.com/repos/rust-lang/rust/commits/5f32992b318790b1aca4449c00fe9c8ef999a402", "html_url": "https://github.com/rust-lang/rust/commit/5f32992b318790b1aca4449c00fe9c8ef999a402"}], "stats": {"total": 7, "additions": 2, "deletions": 5}, "files": [{"sha": "2719a09f4f57007443e9fba45989206ef21b88ea", "filename": "src/librustc_typeck/coherence/impls.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/42198c18f46aa1841ff2870c4841eafae7ec7e8d/src%2Flibrustc_typeck%2Fcoherence%2Fimpls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/42198c18f46aa1841ff2870c4841eafae7ec7e8d/src%2Flibrustc_typeck%2Fcoherence%2Fimpls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcoherence%2Fimpls.rs?ref=42198c18f46aa1841ff2870c4841eafae7ec7e8d", "patch": "@@ -11,13 +11,10 @@\n //! Implementations checker: builtin traits and default impls are allowed just\n //! for structs and enums.\n \n-use middle::def;\n use middle::ty;\n use syntax::ast::{Item, ItemImpl};\n use syntax::ast;\n-use syntax::ast_util;\n use syntax::visit;\n-use util::ppaux::UserString;\n \n pub fn check(tcx: &ty::ctxt) {\n     let mut impls = ImplsChecker { tcx: tcx };"}, {"sha": "30cc9836374fb598775890b6e2037e21f340cff2", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/42198c18f46aa1841ff2870c4841eafae7ec7e8d/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/42198c18f46aa1841ff2870c4841eafae7ec7e8d/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=42198c18f46aa1841ff2870c4841eafae7ec7e8d", "patch": "@@ -52,7 +52,7 @@ use ast::{SelfExplicit, SelfRegion, SelfStatic, SelfValue};\n use ast::{Delimited, SequenceRepetition, TokenTree, TraitItem, TraitRef};\n use ast::{TtDelimited, TtSequence, TtToken};\n use ast::{TupleVariantKind, Ty, Ty_, TypeBinding};\n-use ast::{TypeField, TyFixedLengthVec, TyBareFn};\n+use ast::{TyFixedLengthVec, TyBareFn};\n use ast::{TyTypeof, TyInfer, TypeMethod};\n use ast::{TyParam, TyParamBound, TyParen, TyPath, TyPolyTraitRef, TyPtr, TyQPath};\n use ast::{TyRptr, TyTup, TyU32, TyVec, UnUniq};"}, {"sha": "365cbf93da203cc42ae2073e383d0d04589c7bff", "filename": "src/test/run-make/tools.mk", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/42198c18f46aa1841ff2870c4841eafae7ec7e8d/src%2Ftest%2Frun-make%2Ftools.mk", "raw_url": "https://github.com/rust-lang/rust/raw/42198c18f46aa1841ff2870c4841eafae7ec7e8d/src%2Ftest%2Frun-make%2Ftools.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Ftools.mk?ref=42198c18f46aa1841ff2870c4841eafae7ec7e8d", "patch": "@@ -51,7 +51,7 @@ endif\n \n # Extra flags needed to compile a working executable with the standard library\n ifdef IS_WINDOWS\n-\tEXTRACFLAGS :=\n+\tEXTRACFLAGS := -lws2_32\n else\n ifeq ($(shell uname),Darwin)\n else"}]}