{"sha": "812ff668032e5feb8cd702ecd9f4b5be21513f10", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgxMmZmNjY4MDMyZTVmZWI4Y2Q3MDJlY2Q5ZjRiNWJlMjE1MTNmMTA=", "commit": {"author": {"name": "est31", "email": "MTest31@outlook.com", "date": "2020-09-20T09:34:34Z"}, "committer": {"name": "est31", "email": "MTest31@outlook.com", "date": "2020-09-20T09:34:34Z"}, "message": "Use const_cstr macro in consts.rs", "tree": {"sha": "e4c31a1449f71a6409b78864db15e67b5a3e02e3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e4c31a1449f71a6409b78864db15e67b5a3e02e3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/812ff668032e5feb8cd702ecd9f4b5be21513f10", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/812ff668032e5feb8cd702ecd9f4b5be21513f10", "html_url": "https://github.com/rust-lang/rust/commit/812ff668032e5feb8cd702ecd9f4b5be21513f10", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/812ff668032e5feb8cd702ecd9f4b5be21513f10/comments", "author": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "committer": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "285fc7d704fcdd7b2a37d475d04d5d955490e000", "url": "https://api.github.com/repos/rust-lang/rust/commits/285fc7d704fcdd7b2a37d475d04d5d955490e000", "html_url": "https://github.com/rust-lang/rust/commit/285fc7d704fcdd7b2a37d475d04d5d955490e000"}], "stats": {"total": 7, "additions": 3, "deletions": 4}, "files": [{"sha": "c8bc7c2f14f08eeac446286002f5e4c274af2366", "filename": "compiler/rustc_codegen_llvm/src/consts.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/812ff668032e5feb8cd702ecd9f4b5be21513f10/compiler%2Frustc_codegen_llvm%2Fsrc%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812ff668032e5feb8cd702ecd9f4b5be21513f10/compiler%2Frustc_codegen_llvm%2Fsrc%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fconsts.rs?ref=812ff668032e5feb8cd702ecd9f4b5be21513f10", "patch": "@@ -7,6 +7,7 @@ use crate::type_of::LayoutLlvmExt;\n use crate::value::Value;\n use libc::c_uint;\n use rustc_codegen_ssa::traits::*;\n+use rustc_data_structures::const_cstr;\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n use rustc_hir::Node;\n@@ -22,8 +23,6 @@ use rustc_span::Span;\n use rustc_target::abi::{AddressSpace, Align, HasDataLayout, LayoutOf, Primitive, Scalar, Size};\n use tracing::debug;\n \n-use std::ffi::CStr;\n-\n pub fn const_alloc_to_llvm(cx: &CodegenCx<'ll, '_>, alloc: &Allocation) -> &'ll Value {\n     let mut llvals = Vec::with_capacity(alloc.relocations().len() + 1);\n     let dl = cx.data_layout();\n@@ -457,9 +456,9 @@ impl StaticMethods for CodegenCx<'ll, 'tcx> {\n                             .all(|&byte| byte == 0);\n \n                     let sect_name = if all_bytes_are_zero {\n-                        CStr::from_bytes_with_nul_unchecked(b\"__DATA,__thread_bss\\0\")\n+                        const_cstr!(\"__DATA,__thread_bss\")\n                     } else {\n-                        CStr::from_bytes_with_nul_unchecked(b\"__DATA,__thread_data\\0\")\n+                        const_cstr!(\"__DATA,__thread_data\")\n                     };\n                     llvm::LLVMSetSection(g, sect_name.as_ptr());\n                 }"}]}