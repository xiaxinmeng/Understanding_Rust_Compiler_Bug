{"sha": "743726e352b41ea6a8370ab16cd81152b3b28a53", "node_id": "C_kwDOAAsO6NoAKDc0MzcyNmUzNTJiNDFlYTZhODM3MGFiMTZjZDgxMTUyYjNiMjhhNTM", "commit": {"author": {"name": "ripytide", "email": "62516857+ripytide@users.noreply.github.com", "date": "2022-11-06T15:25:00Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-11-06T15:25:00Z"}, "message": "Vec: IntoIterator signature consistency\n\nAlso makes the code dryer.", "tree": {"sha": "413dfd7e7527afdd6f4ef7fc978759be693d3b3e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/413dfd7e7527afdd6f4ef7fc978759be693d3b3e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/743726e352b41ea6a8370ab16cd81152b3b28a53", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjZ9HMCRBK7hj4Ov3rIwAAejkIAGedief1Rnt7qwCfxrIGbwzx\n2XMS13e0K8vriJ9dbqQeUmM777Eu4DpPflTzWfRKJM1w88x0WJ970tzd1CGgPGbi\ncnHjQuEnqcJrmyXeyTeb7VckNGFSm+10OhbLfBRl+vdVQVm/nCjKCahq3FLFGflZ\nnBR4TtqRwc6EwDANqUcZGT9aWE+EkWqbXLXIcCBZWWbQDpCryD9uH/5JBqvNvhfg\nHqxgZhnSRYzIqTyLqzupMeF+W+3VUuAmwVbiHE0pjBoI8LtY4AOABD8i9eaVK0K8\n0sm5J9LCKG4YCLWrSdPVUwKbmBDVJAdz7b6f5f3A8W9S49dDDB0zXPnoZdId1V0=\n=KD8y\n-----END PGP SIGNATURE-----\n", "payload": "tree 413dfd7e7527afdd6f4ef7fc978759be693d3b3e\nparent 534ddc6166a9031b0c269544929d68f2539ea7a0\nauthor ripytide <62516857+ripytide@users.noreply.github.com> 1667748300 +0000\ncommitter GitHub <noreply@github.com> 1667748300 +0000\n\nVec: IntoIterator signature consistency\n\nAlso makes the code dryer."}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/743726e352b41ea6a8370ab16cd81152b3b28a53", "html_url": "https://github.com/rust-lang/rust/commit/743726e352b41ea6a8370ab16cd81152b3b28a53", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/743726e352b41ea6a8370ab16cd81152b3b28a53/comments", "author": {"login": "ripytide", "id": 62516857, "node_id": "MDQ6VXNlcjYyNTE2ODU3", "avatar_url": "https://avatars.githubusercontent.com/u/62516857?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ripytide", "html_url": "https://github.com/ripytide", "followers_url": "https://api.github.com/users/ripytide/followers", "following_url": "https://api.github.com/users/ripytide/following{/other_user}", "gists_url": "https://api.github.com/users/ripytide/gists{/gist_id}", "starred_url": "https://api.github.com/users/ripytide/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ripytide/subscriptions", "organizations_url": "https://api.github.com/users/ripytide/orgs", "repos_url": "https://api.github.com/users/ripytide/repos", "events_url": "https://api.github.com/users/ripytide/events{/privacy}", "received_events_url": "https://api.github.com/users/ripytide/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "534ddc6166a9031b0c269544929d68f2539ea7a0", "url": "https://api.github.com/repos/rust-lang/rust/commits/534ddc6166a9031b0c269544929d68f2539ea7a0", "html_url": "https://github.com/rust-lang/rust/commit/534ddc6166a9031b0c269544929d68f2539ea7a0"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "766006939fa48ccd14c37e482596424267c111dd", "filename": "library/alloc/src/vec/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/743726e352b41ea6a8370ab16cd81152b3b28a53/library%2Falloc%2Fsrc%2Fvec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/743726e352b41ea6a8370ab16cd81152b3b28a53/library%2Falloc%2Fsrc%2Fvec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fvec%2Fmod.rs?ref=743726e352b41ea6a8370ab16cd81152b3b28a53", "patch": "@@ -2780,7 +2780,7 @@ impl<T, A: Allocator> IntoIterator for Vec<T, A> {\n     /// assert_eq!(v_iter.next(), None);\n     /// ```\n     #[inline]\n-    fn into_iter(self) -> IntoIter<T, A> {\n+    fn into_iter(self) -> Self::IntoIter {\n         unsafe {\n             let mut me = ManuallyDrop::new(self);\n             let alloc = ManuallyDrop::new(ptr::read(me.allocator()));\n@@ -2808,7 +2808,7 @@ impl<'a, T, A: Allocator> IntoIterator for &'a Vec<T, A> {\n     type Item = &'a T;\n     type IntoIter = slice::Iter<'a, T>;\n \n-    fn into_iter(self) -> slice::Iter<'a, T> {\n+    fn into_iter(self) -> Self::IntoIter {\n         self.iter()\n     }\n }\n@@ -2818,7 +2818,7 @@ impl<'a, T, A: Allocator> IntoIterator for &'a mut Vec<T, A> {\n     type Item = &'a mut T;\n     type IntoIter = slice::IterMut<'a, T>;\n \n-    fn into_iter(self) -> slice::IterMut<'a, T> {\n+    fn into_iter(self) -> Self::IntoIter {\n         self.iter_mut()\n     }\n }"}]}