{"sha": "7648776503040b302fe0589311fb27afe7c1e6cc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc2NDg3NzY1MDMwNDBiMzAyZmUwNTg5MzExZmIyN2FmZTdjMWU2Y2M=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-06-12T00:00:27Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-06-12T00:00:27Z"}, "message": "Auto merge of #26225 - arielb1:raw-self, r=eddyb\n\nThis can't be made to work with the current setup.\r\n\r\nTechnically a [breaking-change], but a simple bug fix.\r\n\r\nFixes #26194.", "tree": {"sha": "de0e8abd6ebca8f35c4373bc5b3c221bf0e1b492", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/de0e8abd6ebca8f35c4373bc5b3c221bf0e1b492"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7648776503040b302fe0589311fb27afe7c1e6cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7648776503040b302fe0589311fb27afe7c1e6cc", "html_url": "https://github.com/rust-lang/rust/commit/7648776503040b302fe0589311fb27afe7c1e6cc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7648776503040b302fe0589311fb27afe7c1e6cc/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "400e955d8bbff8c3abc3c43c74fc255a70cf885e", "url": "https://api.github.com/repos/rust-lang/rust/commits/400e955d8bbff8c3abc3c43c74fc255a70cf885e", "html_url": "https://github.com/rust-lang/rust/commit/400e955d8bbff8c3abc3c43c74fc255a70cf885e"}, {"sha": "3be18f0edca612b10d2ef40c7ed0e377f89f94e0", "url": "https://api.github.com/repos/rust-lang/rust/commits/3be18f0edca612b10d2ef40c7ed0e377f89f94e0", "html_url": "https://github.com/rust-lang/rust/commit/3be18f0edca612b10d2ef40c7ed0e377f89f94e0"}], "stats": {"total": 22, "additions": 20, "deletions": 2}, "files": [{"sha": "e09ed201a358250af2863606dd353bd3f942874b", "filename": "src/librustc_typeck/collect.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7648776503040b302fe0589311fb27afe7c1e6cc/src%2Flibrustc_typeck%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7648776503040b302fe0589311fb27afe7c1e6cc/src%2Flibrustc_typeck%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcollect.rs?ref=7648776503040b302fe0589311fb27afe7c1e6cc", "patch": "@@ -2174,7 +2174,7 @@ fn check_method_self_type<'a, 'tcx, RS:RegionScope>(\n     if let ast::SelfExplicit(ref ast_type, _) = explicit_self.node {\n         let typ = ccx.icx(&method_type.predicates).to_ty(rs, &**ast_type);\n         let base_type = match typ.sty {\n-            ty::ty_ptr(tm) | ty::ty_rptr(_, tm) => tm.ty,\n+            ty::ty_rptr(_, tm) => tm.ty,\n             ty::ty_uniq(typ) => typ,\n             _ => typ,\n         };\n@@ -2220,7 +2220,7 @@ fn check_method_self_type<'a, 'tcx, RS:RegionScope>(\n                         ppaux::ty_to_string(tcx, required_type))\n         }));\n \n-        // We could conceviably add more free-reion relations here,\n+        // We could conceviably add more free-region relations here,\n         // but since this code is just concerned with checking that\n         // the `&Self` types etc match up, it's not really necessary.\n         // It would just allow people to be more approximate in some"}, {"sha": "b5c875cc4cbd200c57efa5d4bdcaacc319296b3e", "filename": "src/test/compile-fail/issue-26194.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/7648776503040b302fe0589311fb27afe7c1e6cc/src%2Ftest%2Fcompile-fail%2Fissue-26194.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7648776503040b302fe0589311fb27afe7c1e6cc/src%2Ftest%2Fcompile-fail%2Fissue-26194.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-26194.rs?ref=7648776503040b302fe0589311fb27afe7c1e6cc", "patch": "@@ -0,0 +1,18 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+struct S(String);\n+\n+impl S {\n+    fn f(self: *mut S) -> String { self.0 }\n+    //~^ ERROR mismatched self type\n+}\n+\n+fn main() { S(\"\".to_owned()).f(); }"}]}