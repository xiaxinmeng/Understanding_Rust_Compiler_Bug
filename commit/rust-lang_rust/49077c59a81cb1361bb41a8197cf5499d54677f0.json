{"sha": "49077c59a81cb1361bb41a8197cf5499d54677f0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ5MDc3YzU5YTgxY2IxMzYxYmI0MWE4MTk3Y2Y1NDk5ZDU0Njc3ZjA=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-11-19T12:10:09Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-11-19T12:10:09Z"}, "message": "Rollup merge of #66090 - pietroalbini:ci-improvements, r=alexcrichton\n\nMisc CI improvements\n\nThis PR contains some misc improvements to our CI configuration:\n\n* The environment variables for MinGW builders were greatly simplified, with just `CUSTOM_MINGW=1` to tell the install scripts to install the vendored copy. All the others (`MINGW_URL`, `MINGW_DIR`, `MINGW_ARCHIVE` and `MSYS_BITS`) are detected either from the builder name or the environment.\n* Collecting CPU stats and running the build were moved into scripts.\n* Toolstate scripts validation was previously a separate step, ran just when `IMAGE=mingw-check`. This moves the validation code inside the actual image.\n* Vendored copies are now fetched from https://ci-mirrors.rust-lang.org instead of directly from the bucket.\n\nr? @alexcrichton", "tree": {"sha": "b68aec61bba9338987c3712aff778dd637f0c292", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b68aec61bba9338987c3712aff778dd637f0c292"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/49077c59a81cb1361bb41a8197cf5499d54677f0", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJd09uiCRBK7hj4Ov3rIwAAdHIIAJPElbwbqeEgA5WW+FoKxMMm\ntXZ+6Y22Zj5DYKEmqHl1U7dQuB9V+PEq6grtH8F4AKuvB7D5Yi1Ln4ssXapECQuw\ne4R8CoVOEj/TKD46ood2R1R6QFkDDzgIhO930BKSi94xb4o7qfyk/m+8ZHzEyOQ3\nHRQIWYCSAAyUkGcJ5VJ7R334PyoHp6mGxoDA3zbRFOeLwKo+pcU4wp0BvCdlK2mZ\n8N5wuCpxA32w+30HelhqcydViwLBfwp6f2LwCGcz9rXF+jNOIzExUFFAU0UzJiSO\n0rC94d2xI3ntdIKVkx2SHvcN7fuT9A/enBfCQGAybvKEbFlJOult1pma15NWOZ0=\n=Vpkt\n-----END PGP SIGNATURE-----\n", "payload": "tree b68aec61bba9338987c3712aff778dd637f0c292\nparent 2cad8bb659066b42fc518c95def384956126bd3f\nparent 85132b20c4b3f6858ea273ec276c4ad9162603f8\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1574165409 +0100\ncommitter GitHub <noreply@github.com> 1574165409 +0100\n\nRollup merge of #66090 - pietroalbini:ci-improvements, r=alexcrichton\n\nMisc CI improvements\n\nThis PR contains some misc improvements to our CI configuration:\n\n* The environment variables for MinGW builders were greatly simplified, with just `CUSTOM_MINGW=1` to tell the install scripts to install the vendored copy. All the others (`MINGW_URL`, `MINGW_DIR`, `MINGW_ARCHIVE` and `MSYS_BITS`) are detected either from the builder name or the environment.\n* Collecting CPU stats and running the build were moved into scripts.\n* Toolstate scripts validation was previously a separate step, ran just when `IMAGE=mingw-check`. This moves the validation code inside the actual image.\n* Vendored copies are now fetched from https://ci-mirrors.rust-lang.org instead of directly from the bucket.\n\nr? @alexcrichton\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/49077c59a81cb1361bb41a8197cf5499d54677f0", "html_url": "https://github.com/rust-lang/rust/commit/49077c59a81cb1361bb41a8197cf5499d54677f0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/49077c59a81cb1361bb41a8197cf5499d54677f0/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2cad8bb659066b42fc518c95def384956126bd3f", "url": "https://api.github.com/repos/rust-lang/rust/commits/2cad8bb659066b42fc518c95def384956126bd3f", "html_url": "https://github.com/rust-lang/rust/commit/2cad8bb659066b42fc518c95def384956126bd3f"}, {"sha": "85132b20c4b3f6858ea273ec276c4ad9162603f8", "url": "https://api.github.com/repos/rust-lang/rust/commits/85132b20c4b3f6858ea273ec276c4ad9162603f8", "html_url": "https://github.com/rust-lang/rust/commit/85132b20c4b3f6858ea273ec276c4ad9162603f8"}], "stats": {"total": 215, "additions": 114, "deletions": 101}, "files": [{"sha": "946eb483c2946a2c751ea9ae5b335ceaebe146fc", "filename": "src/ci/azure-pipelines/auto.yml", "status": "modified", "additions": 6, "deletions": 35, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/49077c59a81cb1361bb41a8197cf5499d54677f0/src%2Fci%2Fazure-pipelines%2Fauto.yml", "raw_url": "https://github.com/rust-lang/rust/raw/49077c59a81cb1361bb41a8197cf5499d54677f0/src%2Fci%2Fazure-pipelines%2Fauto.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fazure-pipelines%2Fauto.yml?ref=49077c59a81cb1361bb41a8197cf5499d54677f0", "patch": "@@ -223,37 +223,31 @@ jobs:\n     matrix:\n       # 32/64 bit MSVC tests\n       x86_64-msvc-1:\n-        MSYS_BITS: 64\n         RUST_CONFIGURE_ARGS: --build=x86_64-pc-windows-msvc --enable-profiler\n         SCRIPT: make ci-subset-1\n         # FIXME(#59637)\n         NO_DEBUG_ASSERTIONS: 1\n         NO_LLVM_ASSERTIONS: 1\n       x86_64-msvc-2:\n-        MSYS_BITS: 64\n         RUST_CONFIGURE_ARGS: --build=x86_64-pc-windows-msvc --enable-profiler\n         SCRIPT: make ci-subset-2\n       i686-msvc-1:\n-        MSYS_BITS: 32\n         RUST_CONFIGURE_ARGS: --build=i686-pc-windows-msvc\n         SCRIPT: make ci-subset-1\n         # FIXME(#59637)\n         NO_DEBUG_ASSERTIONS: 1\n         NO_LLVM_ASSERTIONS: 1\n       i686-msvc-2:\n-        MSYS_BITS: 32\n         RUST_CONFIGURE_ARGS: --build=i686-pc-windows-msvc\n         SCRIPT: make ci-subset-2\n         # FIXME(#59637)\n         NO_DEBUG_ASSERTIONS: 1\n         NO_LLVM_ASSERTIONS: 1\n       # MSVC aux tests\n       x86_64-msvc-aux:\n-        MSYS_BITS: 64\n         RUST_CHECK_TARGET: check-aux EXCLUDE_CARGO=1\n         RUST_CONFIGURE_ARGS: --build=x86_64-pc-windows-msvc\n       x86_64-msvc-cargo:\n-        MSYS_BITS: 64\n         SCRIPT: python x.py test src/tools/cargotest src/tools/cargo\n         RUST_CONFIGURE_ARGS: --build=x86_64-pc-windows-msvc\n         VCVARS_BAT: vcvars64.bat\n@@ -262,10 +256,8 @@ jobs:\n         NO_LLVM_ASSERTIONS: 1\n       # MSVC tools tests\n       x86_64-msvc-tools:\n-        MSYS_BITS: 64\n         SCRIPT: src/ci/docker/x86_64-gnu-tools/checktools.sh x.py /tmp/toolstate/toolstates.json windows\n         RUST_CONFIGURE_ARGS: --build=x86_64-pc-windows-msvc --save-toolstates=/tmp/toolstate/toolstates.json\n-        DEPLOY_TOOLSTATES_JSON: toolstates-windows.json\n \n       # 32/64-bit MinGW builds.\n       #\n@@ -281,43 +273,30 @@ jobs:\n       # came from the mingw-w64 SourceForge download site. Unfortunately\n       # SourceForge is notoriously flaky, so we mirror it on our own infrastructure.\n       i686-mingw-1:\n-        MSYS_BITS: 32\n         RUST_CONFIGURE_ARGS: --build=i686-pc-windows-gnu\n         SCRIPT: make ci-mingw-subset-1\n-        MINGW_URL: https://rust-lang-ci-mirrors.s3-us-west-1.amazonaws.com/rustc\n-        MINGW_ARCHIVE: i686-6.3.0-release-posix-dwarf-rt_v5-rev2.7z\n-        MINGW_DIR: mingw32\n+        CUSTOM_MINGW: 1\n         # FIXME(#59637)\n         NO_DEBUG_ASSERTIONS: 1\n         NO_LLVM_ASSERTIONS: 1\n       i686-mingw-2:\n-        MSYS_BITS: 32\n         RUST_CONFIGURE_ARGS: --build=i686-pc-windows-gnu\n         SCRIPT: make ci-mingw-subset-2\n-        MINGW_URL: https://rust-lang-ci-mirrors.s3-us-west-1.amazonaws.com/rustc\n-        MINGW_ARCHIVE: i686-6.3.0-release-posix-dwarf-rt_v5-rev2.7z\n-        MINGW_DIR: mingw32\n+        CUSTOM_MINGW: 1\n       x86_64-mingw-1:\n-        MSYS_BITS: 64\n         SCRIPT: make ci-mingw-subset-1\n         RUST_CONFIGURE_ARGS: --build=x86_64-pc-windows-gnu\n-        MINGW_URL: https://rust-lang-ci-mirrors.s3-us-west-1.amazonaws.com/rustc\n-        MINGW_ARCHIVE: x86_64-6.3.0-release-posix-seh-rt_v5-rev2.7z\n-        MINGW_DIR: mingw64\n+        CUSTOM_MINGW: 1\n         # FIXME(#59637)\n         NO_DEBUG_ASSERTIONS: 1\n         NO_LLVM_ASSERTIONS: 1\n       x86_64-mingw-2:\n-        MSYS_BITS: 64\n         SCRIPT: make ci-mingw-subset-2\n         RUST_CONFIGURE_ARGS: --build=x86_64-pc-windows-gnu\n-        MINGW_URL: https://rust-lang-ci-mirrors.s3-us-west-1.amazonaws.com/rustc\n-        MINGW_ARCHIVE: x86_64-6.3.0-release-posix-seh-rt_v5-rev2.7z\n-        MINGW_DIR: mingw64\n+        CUSTOM_MINGW: 1\n \n       # 32/64 bit MSVC and GNU deployment\n       dist-x86_64-msvc:\n-        MSYS_BITS: 64\n         RUST_CONFIGURE_ARGS: >-\n           --build=x86_64-pc-windows-msvc\n           --target=x86_64-pc-windows-msvc,aarch64-pc-windows-msvc\n@@ -327,7 +306,6 @@ jobs:\n         DIST_REQUIRE_ALL_TOOLS: 1\n         DEPLOY: 1\n       dist-i686-msvc:\n-        MSYS_BITS: 32\n         RUST_CONFIGURE_ARGS: >-\n           --build=i686-pc-windows-msvc\n           --target=i586-pc-windows-msvc\n@@ -337,27 +315,20 @@ jobs:\n         DIST_REQUIRE_ALL_TOOLS: 1\n         DEPLOY: 1\n       dist-i686-mingw:\n-        MSYS_BITS: 32\n         RUST_CONFIGURE_ARGS: --build=i686-pc-windows-gnu --enable-full-tools --enable-profiler\n         SCRIPT: python x.py dist\n-        MINGW_URL: https://rust-lang-ci-mirrors.s3-us-west-1.amazonaws.com/rustc\n-        MINGW_ARCHIVE: i686-6.3.0-release-posix-dwarf-rt_v5-rev2.7z\n-        MINGW_DIR: mingw32\n+        CUSTOM_MINGW: 1\n         DIST_REQUIRE_ALL_TOOLS: 1\n         DEPLOY: 1\n       dist-x86_64-mingw:\n-        MSYS_BITS: 64\n         SCRIPT: python x.py dist\n         RUST_CONFIGURE_ARGS: --build=x86_64-pc-windows-gnu --enable-full-tools --enable-profiler\n-        MINGW_URL: https://rust-lang-ci-mirrors.s3-us-west-1.amazonaws.com/rustc\n-        MINGW_ARCHIVE: x86_64-6.3.0-release-posix-seh-rt_v5-rev2.7z\n-        MINGW_DIR: mingw64\n+        CUSTOM_MINGW: 1\n         DIST_REQUIRE_ALL_TOOLS: 1\n         DEPLOY: 1\n \n       # \"alternate\" deployment, see .travis.yml for more info\n       dist-x86_64-msvc-alt:\n-        MSYS_BITS: 64\n         RUST_CONFIGURE_ARGS: --build=x86_64-pc-windows-msvc --enable-extended --enable-profiler\n         SCRIPT: python x.py dist\n         DEPLOY_ALT: 1"}, {"sha": "214c11fd69024ef191ed62d2f8342e1b385e103f", "filename": "src/ci/azure-pipelines/steps/run.yml", "status": "modified", "additions": 10, "deletions": 45, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/49077c59a81cb1361bb41a8197cf5499d54677f0/src%2Fci%2Fazure-pipelines%2Fsteps%2Frun.yml", "raw_url": "https://github.com/rust-lang/rust/raw/49077c59a81cb1361bb41a8197cf5499d54677f0/src%2Fci%2Fazure-pipelines%2Fsteps%2Frun.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fazure-pipelines%2Fsteps%2Frun.yml?ref=49077c59a81cb1361bb41a8197cf5499d54677f0", "patch": "@@ -8,6 +8,13 @@\n \n steps:\n \n+# Configure our CI_JOB_NAME variable which log analyzers can use for the main\n+# step to see what's going on.\n+- bash: |\n+    builder=$(echo $AGENT_JOBNAME | cut -d ' ' -f 2)\n+    echo \"##vso[task.setvariable variable=CI_JOB_NAME]$builder\"\n+  displayName: Configure Job Name\n+\n # Disable automatic line ending conversion, which is enabled by default on\n # Azure's Windows image. Having the conversion enabled caused regressions both\n # in our test suite (it broke miri tests) and in the ecosystem, since we\n@@ -24,11 +31,8 @@ steps:\n - bash: src/ci/scripts/should-skip-this.sh\n   displayName: Decide whether to run this job\n \n-# Spawn a background process to collect CPU usage statistics which we'll upload\n-# at the end of the build. See the comments in the script here for more\n-# information.\n-- bash: python src/ci/cpu-usage-over-time.py &> cpu-usage.csv &\n-  displayName: \"Collect CPU-usage statistics in the background\"\n+- bash: src/ci/scripts/collect-cpu-stats.sh\n+  displayName: Collect CPU-usage statistics in the background\n \n - bash: src/ci/scripts/dump-environment.sh\n   displayName: Show the current environment\n@@ -135,48 +139,9 @@ steps:\n   condition: and(succeeded(), not(variables.SKIP_JOB))\n   displayName: Install awscli\n \n-# Configure our CI_JOB_NAME variable which log analyzers can use for the main\n-# step to see what's going on.\n-- bash: |\n-    builder=$(echo $AGENT_JOBNAME | cut -d ' ' -f 2)\n-    echo \"##vso[task.setvariable variable=CI_JOB_NAME]$builder\"\n-  displayName: Configure Job Name\n-\n-# As a quick smoke check on the otherwise very fast mingw-check linux builder\n-# check our own internal scripts.\n-- bash: |\n-    set -e\n-    git clone --depth=1 https://github.com/rust-lang-nursery/rust-toolstate.git\n-    cd rust-toolstate\n-    python2.7 \"$BUILD_SOURCESDIRECTORY/src/tools/publish_toolstate.py\" \"$(git rev-parse HEAD)\" \"$(git log --format=%s -n1 HEAD)\" \"\" \"\"\n-    # Only check maintainers if this build is supposed to publish toolstate.\n-    # Builds that are not supposed to publish don't have the access token.\n-    if [ -n \"${TOOLSTATE_PUBLISH+is_set}\" ]; then\n-      TOOLSTATE_VALIDATE_MAINTAINERS_REPO=rust-lang/rust python2.7 \"${BUILD_SOURCESDIRECTORY}/src/tools/publish_toolstate.py\"\n-    fi\n-    cd ..\n-    rm -rf rust-toolstate\n-  env:\n-    TOOLSTATE_REPO_ACCESS_TOKEN: $(TOOLSTATE_REPO_ACCESS_TOKEN)\n-  condition: and(succeeded(), not(variables.SKIP_JOB), eq(variables['IMAGE'], 'mingw-check'))\n-  displayName: Verify the publish_toolstate script works\n-\n-- bash: |\n-    set -e\n-    # Remove any preexisting rustup installation since it can interfere\n-    # with the cargotest step and its auto-detection of things like Clippy in\n-    # the environment\n-    rustup self uninstall -y || true\n-    if [ \"$IMAGE\" = \"\" ]; then\n-      src/ci/run.sh\n-    else\n-      src/ci/docker/run.sh $IMAGE\n-    fi\n-  #timeoutInMinutes: 180\n+- bash: src/ci/scripts/run-build-from-ci.sh\n   timeoutInMinutes: 600\n   env:\n-    CI: true\n-    SRC: .\n     AWS_ACCESS_KEY_ID: $(SCCACHE_AWS_ACCESS_KEY_ID)\n     AWS_SECRET_ACCESS_KEY: $(SCCACHE_AWS_SECRET_ACCESS_KEY)\n     TOOLSTATE_REPO_ACCESS_TOKEN: $(TOOLSTATE_REPO_ACCESS_TOKEN)"}, {"sha": "fe39ce3e24116b974ac8c7432a46bc5cd67d4d6a", "filename": "src/ci/azure-pipelines/try.yml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49077c59a81cb1361bb41a8197cf5499d54677f0/src%2Fci%2Fazure-pipelines%2Ftry.yml", "raw_url": "https://github.com/rust-lang/rust/raw/49077c59a81cb1361bb41a8197cf5499d54677f0/src%2Fci%2Fazure-pipelines%2Ftry.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fazure-pipelines%2Ftry.yml?ref=49077c59a81cb1361bb41a8197cf5499d54677f0", "patch": "@@ -72,7 +72,6 @@ jobs:\n #         DEPLOY: 1\n #\n #       dist-x86_64-msvc-alt:\n-#         MSYS_BITS: 64\n #         RUST_CONFIGURE_ARGS: --build=x86_64-pc-windows-msvc --enable-extended --enable-profiler\n #         SCRIPT: python x.py dist\n #         DEPLOY_ALT: 1"}, {"sha": "5373612279bca109a2b276a102f74ebf000373e5", "filename": "src/ci/docker/armhf-gnu/Dockerfile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/49077c59a81cb1361bb41a8197cf5499d54677f0/src%2Fci%2Fdocker%2Farmhf-gnu%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/49077c59a81cb1361bb41a8197cf5499d54677f0/src%2Fci%2Fdocker%2Farmhf-gnu%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Farmhf-gnu%2FDockerfile?ref=49077c59a81cb1361bb41a8197cf5499d54677f0", "patch": "@@ -72,7 +72,7 @@ RUN arm-linux-gnueabihf-gcc addentropy.c -o rootfs/addentropy -static\n \n # TODO: What is this?!\n # Source of the file: https://github.com/vfdev-5/qemu-rpi2-vexpress/raw/master/vexpress-v2p-ca15-tc1.dtb\n-RUN curl -O https://rust-lang-ci-mirrors.s3-us-west-1.amazonaws.com/rustc/vexpress-v2p-ca15-tc1.dtb\n+RUN curl -O https://ci-mirrors.rust-lang.org/rustc/vexpress-v2p-ca15-tc1.dtb\n \n COPY scripts/sccache.sh /scripts/\n RUN sh /scripts/sccache.sh"}, {"sha": "fb067a79a5c85c93691cdf5244394982d465289f", "filename": "src/ci/docker/dist-armv7-linux/crosstool-ng.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/49077c59a81cb1361bb41a8197cf5499d54677f0/src%2Fci%2Fdocker%2Fdist-armv7-linux%2Fcrosstool-ng.sh", "raw_url": "https://github.com/rust-lang/rust/raw/49077c59a81cb1361bb41a8197cf5499d54677f0/src%2Fci%2Fdocker%2Fdist-armv7-linux%2Fcrosstool-ng.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-armv7-linux%2Fcrosstool-ng.sh?ref=49077c59a81cb1361bb41a8197cf5499d54677f0", "patch": "@@ -1,7 +1,7 @@\n set -ex\n \n # Mirrored from https://github.com/crosstool-ng/crosstool-ng/archive/crosstool-ng-1.24.0.tar.gz\n-url=\"https://rust-lang-ci-mirrors.s3-us-west-1.amazonaws.com/rustc/crosstool-ng-1.24.0.tar.gz\"\n+url=\"https://ci-mirrors.rust-lang.org/rustc/crosstool-ng-1.24.0.tar.gz\"\n curl -Lf $url | tar xzf -\n cd crosstool-ng-crosstool-ng-1.24.0\n ./bootstrap"}, {"sha": "9584258d23403b12fcfbb0249cec584535852c6e", "filename": "src/ci/docker/dist-various-1/install-mips-musl.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/49077c59a81cb1361bb41a8197cf5499d54677f0/src%2Fci%2Fdocker%2Fdist-various-1%2Finstall-mips-musl.sh", "raw_url": "https://github.com/rust-lang/rust/raw/49077c59a81cb1361bb41a8197cf5499d54677f0/src%2Fci%2Fdocker%2Fdist-various-1%2Finstall-mips-musl.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-various-1%2Finstall-mips-musl.sh?ref=49077c59a81cb1361bb41a8197cf5499d54677f0", "patch": "@@ -5,7 +5,7 @@ mkdir /usr/local/mips-linux-musl\n # originally from\n # https://downloads.openwrt.org/snapshots/trunk/ar71xx/generic/\n # OpenWrt-Toolchain-ar71xx-generic_gcc-5.3.0_musl-1.1.16.Linux-x86_64.tar.bz2\n-URL=\"https://rust-lang-ci-mirrors.s3-us-west-1.amazonaws.com/rustc\"\n+URL=\"https://ci-mirrors.rust-lang.org/rustc\"\n FILE=\"OpenWrt-Toolchain-ar71xx-generic_gcc-5.3.0_musl-1.1.16.Linux-x86_64.tar.bz2\"\n curl -L \"$URL/$FILE\" | tar xjf - -C /usr/local/mips-linux-musl --strip-components=2\n "}, {"sha": "50a8e554b1675f789f074c09e657260f242d2ca2", "filename": "src/ci/docker/dist-various-1/install-mipsel-musl.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/49077c59a81cb1361bb41a8197cf5499d54677f0/src%2Fci%2Fdocker%2Fdist-various-1%2Finstall-mipsel-musl.sh", "raw_url": "https://github.com/rust-lang/rust/raw/49077c59a81cb1361bb41a8197cf5499d54677f0/src%2Fci%2Fdocker%2Fdist-various-1%2Finstall-mipsel-musl.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-various-1%2Finstall-mipsel-musl.sh?ref=49077c59a81cb1361bb41a8197cf5499d54677f0", "patch": "@@ -5,7 +5,7 @@ mkdir /usr/local/mipsel-linux-musl\n # Note that this originally came from:\n # https://downloads.openwrt.org/snapshots/trunk/malta/generic/\n # OpenWrt-Toolchain-malta-le_gcc-5.3.0_musl-1.1.15.Linux-x86_64.tar.bz2\n-URL=\"https://rust-lang-ci-mirrors.s3-us-west-1.amazonaws.com/rustc\"\n+URL=\"https://ci-mirrors.rust-lang.org/rustc\"\n FILE=\"OpenWrt-Toolchain-malta-le_gcc-5.3.0_musl-1.1.15.Linux-x86_64.tar.bz2\"\n curl -L \"$URL/$FILE\" | tar xjf - -C /usr/local/mipsel-linux-musl --strip-components=2\n "}, {"sha": "17aa78945cf21541bfbbe3855e27bd06f7f8190a", "filename": "src/ci/docker/dist-various-2/build-wasi-toolchain.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/49077c59a81cb1361bb41a8197cf5499d54677f0/src%2Fci%2Fdocker%2Fdist-various-2%2Fbuild-wasi-toolchain.sh", "raw_url": "https://github.com/rust-lang/rust/raw/49077c59a81cb1361bb41a8197cf5499d54677f0/src%2Fci%2Fdocker%2Fdist-various-2%2Fbuild-wasi-toolchain.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-various-2%2Fbuild-wasi-toolchain.sh?ref=49077c59a81cb1361bb41a8197cf5499d54677f0", "patch": "@@ -5,7 +5,7 @@\n set -ex\n \n # Originally from https://releases.llvm.org/9.0.0/clang+llvm-9.0.0-x86_64-linux-gnu-ubuntu-14.04.tar.xz\n-curl https://rust-lang-ci-mirrors.s3-us-west-1.amazonaws.com/rustc/clang%2Bllvm-9.0.0-x86_64-linux-gnu-ubuntu-14.04.tar.xz | \\\n+curl https://ci-mirrors.rust-lang.org/rustc/clang%2Bllvm-9.0.0-x86_64-linux-gnu-ubuntu-14.04.tar.xz | \\\n   tar xJf -\n export PATH=`pwd`/clang+llvm-9.0.0-x86_64-linux-gnu-ubuntu-14.04/bin:$PATH\n "}, {"sha": "0c7eb5fdac9bea0425b92a8c4a8f31375546b3eb", "filename": "src/ci/docker/dist-x86_64-linux/build-curl.sh", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/49077c59a81cb1361bb41a8197cf5499d54677f0/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-curl.sh", "raw_url": "https://github.com/rust-lang/rust/raw/49077c59a81cb1361bb41a8197cf5499d54677f0/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-curl.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-curl.sh?ref=49077c59a81cb1361bb41a8197cf5499d54677f0", "patch": "@@ -5,6 +5,9 @@ source shared.sh\n \n VERSION=7.66.0\n \n+# This needs to be downloaded directly from S3, it can't go through the CDN.\n+# That's because the CDN is backed by CloudFront, which requires SNI and TLSv1\n+# (without paying an absurd amount of money).\n curl https://rust-lang-ci-mirrors.s3-us-west-1.amazonaws.com/rustc/curl-$VERSION.tar.xz \\\n   | xz --decompress \\\n   | tar xf -"}, {"sha": "d8f6bdb51b8d5bad24e0995de30e5babde6d0fa9", "filename": "src/ci/docker/dist-x86_64-linux/build-openssl.sh", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/49077c59a81cb1361bb41a8197cf5499d54677f0/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-openssl.sh", "raw_url": "https://github.com/rust-lang/rust/raw/49077c59a81cb1361bb41a8197cf5499d54677f0/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-openssl.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-openssl.sh?ref=49077c59a81cb1361bb41a8197cf5499d54677f0", "patch": "@@ -4,6 +4,10 @@ set -ex\n source shared.sh\n \n VERSION=1.0.2k\n+\n+# This needs to be downloaded directly from S3, it can't go through the CDN.\n+# That's because the CDN is backed by CloudFront, which requires SNI and TLSv1\n+# (without paying an absurd amount of money).\n URL=https://rust-lang-ci-mirrors.s3-us-west-1.amazonaws.com/rustc/openssl-$VERSION.tar.gz\n \n curl $URL | tar xzf -"}, {"sha": "f8697c698b9fb67aac77c9145a960e9f55437b8e", "filename": "src/ci/docker/dist-x86_64-netbsd/build-netbsd-toolchain.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/49077c59a81cb1361bb41a8197cf5499d54677f0/src%2Fci%2Fdocker%2Fdist-x86_64-netbsd%2Fbuild-netbsd-toolchain.sh", "raw_url": "https://github.com/rust-lang/rust/raw/49077c59a81cb1361bb41a8197cf5499d54677f0/src%2Fci%2Fdocker%2Fdist-x86_64-netbsd%2Fbuild-netbsd-toolchain.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-x86_64-netbsd%2Fbuild-netbsd-toolchain.sh?ref=49077c59a81cb1361bb41a8197cf5499d54677f0", "patch": "@@ -25,7 +25,7 @@ cd netbsd\n \n mkdir -p /x-tools/x86_64-unknown-netbsd/sysroot\n \n-URL=https://rust-lang-ci-mirrors.s3-us-west-1.amazonaws.com/rustc\n+URL=https://ci-mirrors.rust-lang.org/rustc\n \n # Originally from ftp://ftp.netbsd.org/pub/NetBSD/NetBSD-$BSD/source/sets/*.tgz\n curl $URL/2018-03-01-netbsd-src.tgz | tar xzf -"}, {"sha": "b2d96aed2a9e80370010739bd24f7da54eb66481", "filename": "src/ci/docker/mingw-check/Dockerfile", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/49077c59a81cb1361bb41a8197cf5499d54677f0/src%2Fci%2Fdocker%2Fmingw-check%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/49077c59a81cb1361bb41a8197cf5499d54677f0/src%2Fci%2Fdocker%2Fmingw-check%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fmingw-check%2FDockerfile?ref=49077c59a81cb1361bb41a8197cf5499d54677f0", "patch": "@@ -19,7 +19,10 @@ RUN apt-get update && apt-get install -y --no-install-recommends \\\n COPY scripts/sccache.sh /scripts/\n RUN sh /scripts/sccache.sh\n \n+COPY mingw-check/validate-toolstate.sh /scripts/\n+\n ENV RUN_CHECK_WITH_PARALLEL_QUERIES 1\n ENV SCRIPT python2.7 ../x.py check --target=i686-pc-windows-gnu --host=i686-pc-windows-gnu && \\\n            python2.7 ../x.py build --stage 0 src/tools/build-manifest && \\\n-           python2.7 ../x.py test --stage 0 src/tools/compiletest\n+           python2.7 ../x.py test --stage 0 src/tools/compiletest && \\\n+           /scripts/validate-toolstate.sh"}, {"sha": "2ebf1d6d5ae7f1882a0d3864bd0b7b9244681b34", "filename": "src/ci/docker/mingw-check/validate-toolstate.sh", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/49077c59a81cb1361bb41a8197cf5499d54677f0/src%2Fci%2Fdocker%2Fmingw-check%2Fvalidate-toolstate.sh", "raw_url": "https://github.com/rust-lang/rust/raw/49077c59a81cb1361bb41a8197cf5499d54677f0/src%2Fci%2Fdocker%2Fmingw-check%2Fvalidate-toolstate.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fmingw-check%2Fvalidate-toolstate.sh?ref=49077c59a81cb1361bb41a8197cf5499d54677f0", "patch": "@@ -0,0 +1,19 @@\n+#!/bin/bash\n+# A quick smoke test to make sure publish_tooolstate.py works.\n+\n+set -euo pipefail\n+IFS=$'\\n\\t'\n+\n+rm -rf rust-toolstate\n+git clone --depth=1 https://github.com/rust-lang-nursery/rust-toolstate.git\n+cd rust-toolstate\n+python2.7 \"../../src/tools/publish_toolstate.py\" \"$(git rev-parse HEAD)\" \\\n+    \"$(git log --format=%s -n1 HEAD)\" \"\" \"\"\n+# Only check maintainers if this build is supposed to publish toolstate.\n+# Builds that are not supposed to publish don't have the access token.\n+if [ -n \"${TOOLSTATE_PUBLISH+is_set}\" ]; then\n+  TOOLSTATE_VALIDATE_MAINTAINERS_REPO=rust-lang/rust python2.7 \\\n+      \"../../src/tools/publish_toolstate.py\"\n+fi\n+cd ..\n+rm -rf rust-toolstate"}, {"sha": "5670e10be23cf7b7e6042050020cbc774688f796", "filename": "src/ci/docker/scripts/freebsd-toolchain.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/49077c59a81cb1361bb41a8197cf5499d54677f0/src%2Fci%2Fdocker%2Fscripts%2Ffreebsd-toolchain.sh", "raw_url": "https://github.com/rust-lang/rust/raw/49077c59a81cb1361bb41a8197cf5499d54677f0/src%2Fci%2Fdocker%2Fscripts%2Ffreebsd-toolchain.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fscripts%2Ffreebsd-toolchain.sh?ref=49077c59a81cb1361bb41a8197cf5499d54677f0", "patch": "@@ -59,7 +59,7 @@ done\n \n # Originally downloaded from:\n # https://download.freebsd.org/ftp/releases/${freebsd_arch}/${freebsd_version}-RELEASE/base.txz\n-URL=https://rust-lang-ci-mirrors.s3-us-west-1.amazonaws.com/rustc/2019-04-04-freebsd-${freebsd_arch}-${freebsd_version}-RELEASE-base.txz\n+URL=https://ci-mirrors.rust-lang.org/rustc/2019-04-04-freebsd-${freebsd_arch}-${freebsd_version}-RELEASE-base.txz\n curl \"$URL\" | tar xJf - -C \"$sysroot\" --wildcards \"${files_to_extract[@]}\"\n \n # Fix up absolute symlinks from the system image.  This can be removed"}, {"sha": "552afbfee7c175f6d69a5cf2daafe20a24738163", "filename": "src/ci/docker/scripts/sccache.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/49077c59a81cb1361bb41a8197cf5499d54677f0/src%2Fci%2Fdocker%2Fscripts%2Fsccache.sh", "raw_url": "https://github.com/rust-lang/rust/raw/49077c59a81cb1361bb41a8197cf5499d54677f0/src%2Fci%2Fdocker%2Fscripts%2Fsccache.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fscripts%2Fsccache.sh?ref=49077c59a81cb1361bb41a8197cf5499d54677f0", "patch": "@@ -1,6 +1,6 @@\n set -ex\n \n curl -fo /usr/local/bin/sccache \\\n-  https://rust-lang-ci-mirrors.s3-us-west-1.amazonaws.com/rustc/2018-04-02-sccache-x86_64-unknown-linux-musl\n+  https://ci-mirrors.rust-lang.org/rustc/2018-04-02-sccache-x86_64-unknown-linux-musl\n \n chmod +x /usr/local/bin/sccache"}, {"sha": "08065431f981650e7b000281c288220e80f9d4c6", "filename": "src/ci/scripts/collect-cpu-stats.sh", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/49077c59a81cb1361bb41a8197cf5499d54677f0/src%2Fci%2Fscripts%2Fcollect-cpu-stats.sh", "raw_url": "https://github.com/rust-lang/rust/raw/49077c59a81cb1361bb41a8197cf5499d54677f0/src%2Fci%2Fscripts%2Fcollect-cpu-stats.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fscripts%2Fcollect-cpu-stats.sh?ref=49077c59a81cb1361bb41a8197cf5499d54677f0", "patch": "@@ -0,0 +1,9 @@\n+#!/bin/bash\n+# Spawn a background process to collect CPU usage statistics which we'll upload\n+# at the end of the build. See the comments in the script here for more\n+# information.\n+\n+set -euo pipefail\n+IFS=$'\\n\\t'\n+\n+python src/ci/cpu-usage-over-time.py &> cpu-usage.csv &"}, {"sha": "f0179994e8e4cb5c44d2c0feea09793c487dd0fe", "filename": "src/ci/scripts/install-clang.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/49077c59a81cb1361bb41a8197cf5499d54677f0/src%2Fci%2Fscripts%2Finstall-clang.sh", "raw_url": "https://github.com/rust-lang/rust/raw/49077c59a81cb1361bb41a8197cf5499d54677f0/src%2Fci%2Fscripts%2Finstall-clang.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fscripts%2Finstall-clang.sh?ref=49077c59a81cb1361bb41a8197cf5499d54677f0", "patch": "@@ -17,7 +17,7 @@ if isMacOS; then\n     # Configure `AR` specifically so rustbuild doesn't try to infer it as\n     # `clang-ar` by accident.\n     ciCommandSetEnv AR \"ar\"\n-elif isWindows && [[ -z ${MINGW_URL+x} ]]; then\n+elif isWindows && [[ ${CUSTOM_MINGW-0} -ne 1 ]]; then\n     # If we're compiling for MSVC then we, like most other distribution builders,\n     # switch to clang as the compiler. This'll allow us eventually to enable LTO\n     # amongst LLVM and rustc. Note that we only do this on MSVC as I don't think"}, {"sha": "8b579587b9e1f6ffc255468833fa02eeaf33ecc3", "filename": "src/ci/scripts/install-mingw.sh", "status": "modified", "additions": 28, "deletions": 9, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/49077c59a81cb1361bb41a8197cf5499d54677f0/src%2Fci%2Fscripts%2Finstall-mingw.sh", "raw_url": "https://github.com/rust-lang/rust/raw/49077c59a81cb1361bb41a8197cf5499d54677f0/src%2Fci%2Fscripts%2Finstall-mingw.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fscripts%2Finstall-mingw.sh?ref=49077c59a81cb1361bb41a8197cf5499d54677f0", "patch": "@@ -27,19 +27,38 @@ IFS=$'\\n\\t'\n \n source \"$(cd \"$(dirname \"$0\")\" && pwd)/../shared.sh\"\n \n+MINGW_ARCHIVE_32=\"i686-6.3.0-release-posix-dwarf-rt_v5-rev2.7z\"\n+MINGW_ARCHIVE_64=\"x86_64-6.3.0-release-posix-seh-rt_v5-rev2.7z\"\n+\n if isWindows; then\n-    if [[ -z \"${MINGW_URL+x}\" ]]; then\n-        arch=i686\n-        if [ \"$MSYS_BITS\" = \"64\" ]; then\n-          arch=x86_64\n-        fi\n+    case \"${CI_JOB_NAME}\" in\n+        *i686*)\n+            bits=32\n+            arch=i686\n+            mingw_archive=\"${MINGW_ARCHIVE_32}\"\n+            ;;\n+        *x86_64*)\n+            bits=64\n+            arch=x86_64\n+            mingw_archive=\"${MINGW_ARCHIVE_64}\"\n+            ;;\n+        *)\n+            echo \"src/ci/scripts/install-mingw.sh can't detect the builder's architecture\"\n+            echo \"please tweak it to recognize the builder named '${CI_JOB_NAME}'\"\n+            exit 1\n+            ;;\n+    esac\n+\n+    if [[ \"${CUSTOM_MINGW-0}\" -ne 1 ]]; then\n         pacman -S --noconfirm --needed mingw-w64-$arch-toolchain mingw-w64-$arch-cmake \\\n             mingw-w64-$arch-gcc mingw-w64-$arch-python2\n-        ciCommandAddPath \"${SYSTEM_WORKFOLDER}/msys2/mingw${MSYS_BITS}/bin\"\n+        ciCommandAddPath \"${SYSTEM_WORKFOLDER}/msys2/mingw${bits}/bin\"\n     else\n-        curl -o mingw.7z \"${MINGW_URL}/${MINGW_ARCHIVE}\"\n+        mingw_dir=\"mingw${bits}\"\n+\n+        curl -o mingw.7z \"${MIRRORS_BASE}/${mingw_archive}\"\n         7z x -y mingw.7z > /dev/null\n-        curl -o \"${MINGW_DIR}/bin/gdborig.exe\" \"${MINGW_URL}/2017-04-20-${MSYS_BITS}bit-gdborig.exe\"\n-        ciCommandAddPath \"$(pwd)/${MINGW_DIR}/bin\"\n+        curl -o \"${mingw_dir}/bin/gdborig.exe\" \"${MIRRORS_BASE}/2017-04-20-${bits}bit-gdborig.exe\"\n+        ciCommandAddPath \"$(pwd)/${mingw_dir}/bin\"\n     fi\n fi"}, {"sha": "c02117f459de0463adb7f619398a3140dc3a05ea", "filename": "src/ci/scripts/run-build-from-ci.sh", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/49077c59a81cb1361bb41a8197cf5499d54677f0/src%2Fci%2Fscripts%2Frun-build-from-ci.sh", "raw_url": "https://github.com/rust-lang/rust/raw/49077c59a81cb1361bb41a8197cf5499d54677f0/src%2Fci%2Fscripts%2Frun-build-from-ci.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fscripts%2Frun-build-from-ci.sh?ref=49077c59a81cb1361bb41a8197cf5499d54677f0", "patch": "@@ -0,0 +1,21 @@\n+#!/bin/bash\n+# Start the CI build. You shouldn't run this locally: call either src/ci/run.sh\n+# or src/ci/docker/run.sh instead.\n+\n+set -euo pipefail\n+IFS=$'\\n\\t'\n+\n+source \"$(cd \"$(dirname \"$0\")\" && pwd)/../shared.sh\"\n+\n+export CI=\"true\"\n+export SRC=.\n+\n+# Remove any preexisting rustup installation since it can interfere\n+# with the cargotest step and its auto-detection of things like Clippy in\n+# the environment\n+rustup self uninstall -y || true\n+if [ -z \"${IMAGE+x}\" ]; then\n+    src/ci/run.sh\n+else\n+    src/ci/docker/run.sh \"${IMAGE}\"\n+fi"}, {"sha": "862ded0d5dbf0de67568f7ac76dd07ae799c5d97", "filename": "src/ci/shared.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/49077c59a81cb1361bb41a8197cf5499d54677f0/src%2Fci%2Fshared.sh", "raw_url": "https://github.com/rust-lang/rust/raw/49077c59a81cb1361bb41a8197cf5499d54677f0/src%2Fci%2Fshared.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fshared.sh?ref=49077c59a81cb1361bb41a8197cf5499d54677f0", "patch": "@@ -4,7 +4,7 @@\n # `source shared.sh`, hence the invalid shebang and not being\n # marked as an executable file in git.\n \n-export MIRRORS_BASE=\"https://rust-lang-ci-mirrors.s3-us-west-1.amazonaws.com/rustc\"\n+export MIRRORS_BASE=\"https://ci-mirrors.rust-lang.org/rustc\"\n \n # See http://unix.stackexchange.com/questions/82598\n # Duplicated in docker/dist-various-2/shared.sh"}]}