{"sha": "9824c997fe6ee50015e1701e94231331d815db7d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk4MjRjOTk3ZmU2ZWU1MDAxNWUxNzAxZTk0MjMxMzMxZDgxNWRiN2Q=", "commit": {"author": {"name": "Bood Qian", "email": "bood@glowing.com", "date": "2017-02-12T01:16:37Z"}, "committer": {"name": "Bood Qian", "email": "bood@glowing.com", "date": "2017-02-12T01:16:37Z"}, "message": "Remove unnecessary ref", "tree": {"sha": "28e5d27ecb0e616ef92f6bc371a8b7474216569f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/28e5d27ecb0e616ef92f6bc371a8b7474216569f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9824c997fe6ee50015e1701e94231331d815db7d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9824c997fe6ee50015e1701e94231331d815db7d", "html_url": "https://github.com/rust-lang/rust/commit/9824c997fe6ee50015e1701e94231331d815db7d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9824c997fe6ee50015e1701e94231331d815db7d/comments", "author": null, "committer": null, "parents": [{"sha": "1c381ec642556ced608517df5518bbec7f535e14", "url": "https://api.github.com/repos/rust-lang/rust/commits/1c381ec642556ced608517df5518bbec7f535e14", "html_url": "https://github.com/rust-lang/rust/commit/1c381ec642556ced608517df5518bbec7f535e14"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "66b55c48455c33eebe43bd2f6c6619862d30a7ce", "filename": "clippy_lints/src/matches.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9824c997fe6ee50015e1701e94231331d815db7d/clippy_lints%2Fsrc%2Fmatches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9824c997fe6ee50015e1701e94231331d815db7d/clippy_lints%2Fsrc%2Fmatches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmatches.rs?ref=9824c997fe6ee50015e1701e94231331d815db7d", "patch": "@@ -379,7 +379,7 @@ fn is_panic_block(cx: &LateContext, block: &Block) -> bool {\n         (&Some(ref exp), 0, _) => {\n             is_expn_of(cx, exp.span, \"panic\").is_some() && is_expn_of(cx, exp.span, \"unreachable\").is_none()\n         },\n-        (&None, 1, Some(ref stmt)) => {\n+        (&None, 1, Some(stmt)) => {\n             is_expn_of(cx, stmt.span, \"panic\").is_some() && is_expn_of(cx, stmt.span, \"unreachable\").is_none()\n         },\n         _ => false,"}]}