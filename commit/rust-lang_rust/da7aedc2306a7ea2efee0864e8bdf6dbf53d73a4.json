{"sha": "da7aedc2306a7ea2efee0864e8bdf6dbf53d73a4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRhN2FlZGMyMzA2YTdlYTJlZmVlMDg2NGU4YmRmNmRiZjUzZDczYTQ=", "commit": {"author": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2013-02-25T00:56:49Z"}, "committer": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2013-02-27T04:48:12Z"}, "message": "libsyntax: add some explicit refs", "tree": {"sha": "7abc90ef7dcb6aff081ed1a22713b042613e4148", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7abc90ef7dcb6aff081ed1a22713b042613e4148"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/da7aedc2306a7ea2efee0864e8bdf6dbf53d73a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/da7aedc2306a7ea2efee0864e8bdf6dbf53d73a4", "html_url": "https://github.com/rust-lang/rust/commit/da7aedc2306a7ea2efee0864e8bdf6dbf53d73a4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/da7aedc2306a7ea2efee0864e8bdf6dbf53d73a4/comments", "author": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5271464cc0aae453e96ad70a33e0c9636df7f90e", "url": "https://api.github.com/repos/rust-lang/rust/commits/5271464cc0aae453e96ad70a33e0c9636df7f90e", "html_url": "https://github.com/rust-lang/rust/commit/5271464cc0aae453e96ad70a33e0c9636df7f90e"}], "stats": {"total": 21, "additions": 10, "deletions": 11}, "files": [{"sha": "e744d19b96544bc8868123c90760afd23e5451fb", "filename": "src/libsyntax/attr.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/da7aedc2306a7ea2efee0864e8bdf6dbf53d73a4/src%2Flibsyntax%2Fattr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da7aedc2306a7ea2efee0864e8bdf6dbf53d73a4/src%2Flibsyntax%2Fattr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fattr.rs?ref=da7aedc2306a7ea2efee0864e8bdf6dbf53d73a4", "patch": "@@ -300,7 +300,7 @@ pub fn remove_meta_items_by_name(items: ~[@ast::meta_item], name: &str) ->\n pub fn find_linkage_metas(attrs: &[ast::attribute]) -> ~[@ast::meta_item] {\n     do find_attrs_by_name(attrs, ~\"link\").flat_map |attr| {\n         match attr.node.value.node {\n-            ast::meta_list(_, items) => /* FIXME (#2543) */ copy items,\n+            ast::meta_list(_, ref items) => /* FIXME (#2543) */ copy *items,\n             _ => ~[]\n         }\n     }\n@@ -347,11 +347,10 @@ pub fn find_inline_attr(attrs: &[ast::attribute]) -> inline_attr {\n     do vec::foldl(ia_none, attrs) |ia,attr| {\n         match attr.node.value.node {\n           ast::meta_word(@~\"inline\") => ia_hint,\n-          ast::meta_list(@~\"inline\", items) => {\n-            if !vec::is_empty(find_meta_items_by_name(items, ~\"always\")) {\n+          ast::meta_list(@~\"inline\", ref items) => {\n+            if !find_meta_items_by_name(*items, ~\"always\").is_empty() {\n                 ia_always\n-            } else if !vec::is_empty(\n-                find_meta_items_by_name(items, ~\"never\")) {\n+            } else if !find_meta_items_by_name(*items, ~\"never\").is_empty() {\n                 ia_never\n             } else {\n                 ia_hint"}, {"sha": "68d05e11171c591bb4206007f44a7917d80cc91a", "filename": "src/libsyntax/fold.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/da7aedc2306a7ea2efee0864e8bdf6dbf53d73a4/src%2Flibsyntax%2Ffold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da7aedc2306a7ea2efee0864e8bdf6dbf53d73a4/src%2Flibsyntax%2Ffold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffold.rs?ref=da7aedc2306a7ea2efee0864e8bdf6dbf53d73a4", "patch": "@@ -372,21 +372,21 @@ fn noop_fold_arm(a: &arm, fld: ast_fold) -> arm {\n pub fn noop_fold_pat(p: &pat_, fld: ast_fold) -> pat_ {\n     match *p {\n         pat_wild => pat_wild,\n-        pat_ident(binding_mode, pth, sub) => {\n+        pat_ident(binding_mode, pth, ref sub) => {\n             pat_ident(\n                 binding_mode,\n                 fld.fold_path(pth),\n                 sub.map(|x| fld.fold_pat(*x))\n             )\n         }\n         pat_lit(e) => pat_lit(fld.fold_expr(e)),\n-        pat_enum(pth, pats) => {\n+        pat_enum(pth, ref pats) => {\n             pat_enum(\n                 fld.fold_path(pth),\n                 pats.map(|pats| pats.map(|x| fld.fold_pat(*x)))\n             )\n         }\n-        pat_rec(fields, etc) => {\n+        pat_rec(ref fields, etc) => {\n             let fs = do fields.map |f| {\n                 ast::field_pat {\n                     ident: /* FIXME (#2543) */ copy f.ident,\n@@ -395,7 +395,7 @@ pub fn noop_fold_pat(p: &pat_, fld: ast_fold) -> pat_ {\n             };\n             pat_rec(fs, etc)\n         }\n-        pat_struct(pth, fields, etc) => {\n+        pat_struct(pth, ref fields, etc) => {\n             let pth_ = fld.fold_path(pth);\n             let fs = do fields.map |f| {\n                 ast::field_pat {\n@@ -412,7 +412,7 @@ pub fn noop_fold_pat(p: &pat_, fld: ast_fold) -> pat_ {\n         pat_range(e1, e2) => {\n             pat_range(fld.fold_expr(e1), fld.fold_expr(e2))\n         },\n-        pat_vec(elts, tail) => {\n+        pat_vec(ref elts, ref tail) => {\n             pat_vec(\n                 elts.map(|x| fld.fold_pat(*x)),\n                 tail.map(|tail| fld.fold_pat(*tail))\n@@ -423,7 +423,7 @@ pub fn noop_fold_pat(p: &pat_, fld: ast_fold) -> pat_ {\n \n fn noop_fold_decl(d: &decl_, fld: ast_fold) -> decl_ {\n     match *d {\n-        decl_local(ls) => decl_local(ls.map(|x| fld.fold_local(*x))),\n+        decl_local(ref ls) => decl_local(ls.map(|x| fld.fold_local(*x))),\n         decl_item(it) => {\n             match fld.fold_item(it) {\n                 Some(it_folded) => decl_item(it_folded),"}]}