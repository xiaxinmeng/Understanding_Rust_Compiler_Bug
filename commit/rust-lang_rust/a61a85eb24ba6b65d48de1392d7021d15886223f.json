{"sha": "a61a85eb24ba6b65d48de1392d7021d15886223f", "node_id": "C_kwDOAAsO6NoAKGE2MWE4NWViMjRiYTZiNjVkNDhkZTEzOTJkNzAyMWQxNTg4NjIyM2Y", "commit": {"author": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-05-13T00:07:45Z"}, "committer": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-05-27T05:58:35Z"}, "message": "Add some comments.", "tree": {"sha": "69cbe87f46411039f05d744f44dfe16e33d2e23a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/69cbe87f46411039f05d744f44dfe16e33d2e23a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a61a85eb24ba6b65d48de1392d7021d15886223f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a61a85eb24ba6b65d48de1392d7021d15886223f", "html_url": "https://github.com/rust-lang/rust/commit/a61a85eb24ba6b65d48de1392d7021d15886223f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a61a85eb24ba6b65d48de1392d7021d15886223f/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2469ed0142bd7e9ca021b5a901cc3bae3ff8af11", "url": "https://api.github.com/repos/rust-lang/rust/commits/2469ed0142bd7e9ca021b5a901cc3bae3ff8af11", "html_url": "https://github.com/rust-lang/rust/commit/2469ed0142bd7e9ca021b5a901cc3bae3ff8af11"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "7d6adda48ec6e4f21102937b9c49b810654fb316", "filename": "library/proc_macro/src/bridge/handle.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a61a85eb24ba6b65d48de1392d7021d15886223f/library%2Fproc_macro%2Fsrc%2Fbridge%2Fhandle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a61a85eb24ba6b65d48de1392d7021d15886223f/library%2Fproc_macro%2Fsrc%2Fbridge%2Fhandle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fproc_macro%2Fsrc%2Fbridge%2Fhandle.rs?ref=a61a85eb24ba6b65d48de1392d7021d15886223f", "patch": "@@ -8,6 +8,8 @@ use std::sync::atomic::{AtomicUsize, Ordering};\n \n pub(super) type Handle = NonZeroU32;\n \n+/// A store that associates values of type `T` with numeric handles. A value can\n+/// be looked up using its handle.\n pub(super) struct OwnedStore<T: 'static> {\n     counter: &'static AtomicUsize,\n     data: BTreeMap<Handle, T>,\n@@ -49,6 +51,7 @@ impl<T> IndexMut<Handle> for OwnedStore<T> {\n     }\n }\n \n+/// Like `OwnedStore`, but avoids storing any value more than once.\n pub(super) struct InternedStore<T: 'static> {\n     owned: OwnedStore<T>,\n     interner: HashMap<T, Handle>,"}]}