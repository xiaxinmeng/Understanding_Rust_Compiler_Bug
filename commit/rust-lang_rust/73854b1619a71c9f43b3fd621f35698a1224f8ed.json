{"sha": "73854b1619a71c9f43b3fd621f35698a1224f8ed", "node_id": "MDY6Q29tbWl0NzI0NzEyOjczODU0YjE2MTlhNzFjOWY0M2IzZmQ2MjFmMzU2OThhMTIyNGY4ZWQ=", "commit": {"author": {"name": "Geoffrey Thomas", "email": "geofft@ldpreload.com", "date": "2016-01-20T22:12:28Z"}, "committer": {"name": "Geoffrey Thomas", "email": "geofft@ldpreload.com", "date": "2016-01-24T16:18:02Z"}, "message": "sys/unix/process.rs: Update comments in make_argv and make_envp\n\nThe implementation changed in 33a2191d, but the comments did not change\nto match.", "tree": {"sha": "2646a898ef5fb67bc63ca47a8b6ac5b9aedf1ce3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2646a898ef5fb67bc63ca47a8b6ac5b9aedf1ce3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/73854b1619a71c9f43b3fd621f35698a1224f8ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/73854b1619a71c9f43b3fd621f35698a1224f8ed", "html_url": "https://github.com/rust-lang/rust/commit/73854b1619a71c9f43b3fd621f35698a1224f8ed", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/73854b1619a71c9f43b3fd621f35698a1224f8ed/comments", "author": {"login": "geofft", "id": 74644, "node_id": "MDQ6VXNlcjc0NjQ0", "avatar_url": "https://avatars.githubusercontent.com/u/74644?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geofft", "html_url": "https://github.com/geofft", "followers_url": "https://api.github.com/users/geofft/followers", "following_url": "https://api.github.com/users/geofft/following{/other_user}", "gists_url": "https://api.github.com/users/geofft/gists{/gist_id}", "starred_url": "https://api.github.com/users/geofft/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geofft/subscriptions", "organizations_url": "https://api.github.com/users/geofft/orgs", "repos_url": "https://api.github.com/users/geofft/repos", "events_url": "https://api.github.com/users/geofft/events{/privacy}", "received_events_url": "https://api.github.com/users/geofft/received_events", "type": "User", "site_admin": false}, "committer": {"login": "geofft", "id": 74644, "node_id": "MDQ6VXNlcjc0NjQ0", "avatar_url": "https://avatars.githubusercontent.com/u/74644?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geofft", "html_url": "https://github.com/geofft", "followers_url": "https://api.github.com/users/geofft/followers", "following_url": "https://api.github.com/users/geofft/following{/other_user}", "gists_url": "https://api.github.com/users/geofft/gists{/gist_id}", "starred_url": "https://api.github.com/users/geofft/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geofft/subscriptions", "organizations_url": "https://api.github.com/users/geofft/orgs", "repos_url": "https://api.github.com/users/geofft/repos", "events_url": "https://api.github.com/users/geofft/events{/privacy}", "received_events_url": "https://api.github.com/users/geofft/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0486e12ad0661adcfdbd926dea17d7edfda419c1", "url": "https://api.github.com/repos/rust-lang/rust/commits/0486e12ad0661adcfdbd926dea17d7edfda419c1", "html_url": "https://github.com/rust-lang/rust/commit/0486e12ad0661adcfdbd926dea17d7edfda419c1"}], "stats": {"total": 15, "additions": 6, "deletions": 9}, "files": [{"sha": "4a91cece143a986f7c14f562d235ab0ef2846d02", "filename": "src/libstd/sys/unix/process.rs", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/73854b1619a71c9f43b3fd621f35698a1224f8ed/src%2Flibstd%2Fsys%2Funix%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73854b1619a71c9f43b3fd621f35698a1224f8ed/src%2Flibstd%2Fsys%2Funix%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fprocess.rs?ref=73854b1619a71c9f43b3fd621f35698a1224f8ed", "patch": "@@ -439,11 +439,9 @@ fn make_argv(prog: &CString, args: &[CString])\n {\n     let mut ptrs: Vec<*const libc::c_char> = Vec::with_capacity(args.len()+1);\n \n-    // Convert the CStrings into an array of pointers. Note: the\n-    // lifetime of the various CStrings involved is guaranteed to be\n-    // larger than the lifetime of our invocation of cb, but this is\n-    // technically unsafe as the callback could leak these pointers\n-    // out of our scope.\n+    // Convert the CStrings into an array of pointers. Also return the\n+    // vector that owns the raw pointers, to ensure they live long\n+    // enough.\n     ptrs.push(prog.as_ptr());\n     ptrs.extend(args.iter().map(|tmp| tmp.as_ptr()));\n \n@@ -457,10 +455,9 @@ fn make_envp(env: Option<&HashMap<OsString, OsString>>)\n              -> (*const c_void, Vec<Vec<u8>>, Vec<*const libc::c_char>)\n {\n     // On posixy systems we can pass a char** for envp, which is a\n-    // null-terminated array of \"k=v\\0\" strings. Since we must create\n-    // these strings locally, yet expose a raw pointer to them, we\n-    // create a temporary vector to own the CStrings that outlives the\n-    // call to cb.\n+    // null-terminated array of \"k=v\\0\" strings. As with make_argv, we\n+    // return two vectors that own the data to ensure that they live\n+    // long enough.\n     if let Some(env) = env {\n         let mut tmps = Vec::with_capacity(env.len());\n "}]}