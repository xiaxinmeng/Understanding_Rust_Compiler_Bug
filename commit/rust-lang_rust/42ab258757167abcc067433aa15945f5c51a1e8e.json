{"sha": "42ab258757167abcc067433aa15945f5c51a1e8e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQyYWIyNTg3NTcxNjdhYmNjMDY3NDMzYWExNTk0NWY1YzUxYTFlOGU=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seiichi.uchida@dena.com", "date": "2018-06-05T10:58:44Z"}, "committer": {"name": "Seiichi Uchida", "email": "seiichi.uchida@dena.com", "date": "2018-06-05T10:58:44Z"}, "message": "Put each nested import on its own line\n\nwhile putting non-nested imports on the same line as much as possible.", "tree": {"sha": "413bf250f862366a7eb8324cd9f2644daf486322", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/413bf250f862366a7eb8324cd9f2644daf486322"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/42ab258757167abcc067433aa15945f5c51a1e8e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/42ab258757167abcc067433aa15945f5c51a1e8e", "html_url": "https://github.com/rust-lang/rust/commit/42ab258757167abcc067433aa15945f5c51a1e8e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/42ab258757167abcc067433aa15945f5c51a1e8e/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "35fee77d39558845d4c55423af524fe850134a7f", "url": "https://api.github.com/repos/rust-lang/rust/commits/35fee77d39558845d4c55423af524fe850134a7f", "html_url": "https://github.com/rust-lang/rust/commit/35fee77d39558845d4c55423af524fe850134a7f"}], "stats": {"total": 24, "additions": 17, "deletions": 7}, "files": [{"sha": "a9846a1cc74883c82e7b946d973553cc9b118076", "filename": "src/config/lists.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/42ab258757167abcc067433aa15945f5c51a1e8e/src%2Fconfig%2Flists.rs", "raw_url": "https://github.com/rust-lang/rust/raw/42ab258757167abcc067433aa15945f5c51a1e8e/src%2Fconfig%2Flists.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconfig%2Flists.rs?ref=42ab258757167abcc067433aa15945f5c51a1e8e", "patch": "@@ -19,6 +19,8 @@ pub enum DefinitiveListTactic {\n     Vertical,\n     Horizontal,\n     Mixed,\n+    /// Tactic for nested import.\n+    NestedImport,\n     /// Special case tactic for `format!()`, `write!()` style macros.\n     SpecialMacro(usize),\n }"}, {"sha": "a1cf6a83f07fbbbc6031b34f05031e3e51258c29", "filename": "src/imports.rs", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/42ab258757167abcc067433aa15945f5c51a1e8e/src%2Fimports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/42ab258757167abcc067433aa15945f5c51a1e8e/src%2Fimports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fimports.rs?ref=42ab258757167abcc067433aa15945f5c51a1e8e", "patch": "@@ -706,12 +706,16 @@ fn rewrite_nested_use_tree(\n         shape.width.saturating_sub(2)\n     };\n \n-    let tactic = definitive_tactic(\n-        &list_items,\n-        context.config.imports_layout(),\n-        Separator::Comma,\n-        remaining_width,\n-    );\n+    let tactic = if has_nested_list {\n+        DefinitiveListTactic::NestedImport\n+    } else {\n+        definitive_tactic(\n+            &list_items,\n+            context.config.imports_layout(),\n+            Separator::Comma,\n+            remaining_width,\n+        )\n+    };\n \n     let ends_with_newline = context.config.imports_indent() == IndentStyle::Block\n         && tactic != DefinitiveListTactic::Horizontal;"}, {"sha": "6e86791886418701ad1e341771ec7715932d297b", "filename": "src/lists.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/42ab258757167abcc067433aa15945f5c51a1e8e/src%2Flists.rs", "raw_url": "https://github.com/rust-lang/rust/raw/42ab258757167abcc067433aa15945f5c51a1e8e/src%2Flists.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flists.rs?ref=42ab258757167abcc067433aa15945f5c51a1e8e", "patch": "@@ -229,6 +229,7 @@ where\n     let sep_place =\n         SeparatorPlace::from_tactic(formatting.separator_place, tactic, formatting.separator);\n     let mut prev_item_had_post_comment = false;\n+    let mut prev_item_is_nested_import = false;\n \n     let mut line_len = 0;\n     let indent_str = &formatting.shape.indent.to_string(formatting.config);\n@@ -281,12 +282,14 @@ where\n                 result.push('\\n');\n                 result.push_str(indent_str);\n             }\n-            DefinitiveListTactic::Mixed => {\n+            DefinitiveListTactic::Mixed | DefinitiveListTactic::NestedImport => {\n                 let total_width = total_item_width(item) + item_sep_len;\n \n                 // 1 is space between separator and item.\n                 if (line_len > 0 && line_len + 1 + total_width > formatting.shape.width)\n                     || prev_item_had_post_comment\n+                    || (tactic == DefinitiveListTactic::NestedImport\n+                        && (prev_item_is_nested_import || (!first && inner_item.contains(\"::\"))))\n                 {\n                     result.push('\\n');\n                     result.push_str(indent_str);\n@@ -452,6 +455,7 @@ where\n         }\n \n         prev_item_had_post_comment = item.post_comment.is_some();\n+        prev_item_is_nested_import = inner_item.contains(\"::\");\n     }\n \n     Some(result)"}]}