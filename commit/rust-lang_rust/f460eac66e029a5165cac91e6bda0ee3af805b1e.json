{"sha": "f460eac66e029a5165cac91e6bda0ee3af805b1e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY0NjBlYWM2NmUwMjlhNTE2NWNhYzkxZTZiZGEwZWUzYWY4MDViMWU=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-11-26T07:27:36Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-11-27T12:59:19Z"}, "message": "use deterministic HashMap in libtest", "tree": {"sha": "40503a8c43520df48a64fc24ac8bd0d563eb42aa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/40503a8c43520df48a64fc24ac8bd0d563eb42aa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f460eac66e029a5165cac91e6bda0ee3af805b1e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f460eac66e029a5165cac91e6bda0ee3af805b1e", "html_url": "https://github.com/rust-lang/rust/commit/f460eac66e029a5165cac91e6bda0ee3af805b1e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f460eac66e029a5165cac91e6bda0ee3af805b1e/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "691a7f8e2b2de984c3e0f062cbd294763af3d09a", "url": "https://api.github.com/repos/rust-lang/rust/commits/691a7f8e2b2de984c3e0f062cbd294763af3d09a", "html_url": "https://github.com/rust-lang/rust/commit/691a7f8e2b2de984c3e0f062cbd294763af3d09a"}], "stats": {"total": 12, "additions": 8, "deletions": 4}, "files": [{"sha": "d59cc293c23089f224f92098a9a9e79da22aaaa5", "filename": "src/libtest/lib.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/f460eac66e029a5165cac91e6bda0ee3af805b1e/src%2Flibtest%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f460eac66e029a5165cac91e6bda0ee3af805b1e/src%2Flibtest%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibtest%2Flib.rs?ref=f460eac66e029a5165cac91e6bda0ee3af805b1e", "patch": "@@ -1071,8 +1071,12 @@ pub fn run_tests<F>(opts: &TestOpts, tests: Vec<TestDescAndFn>, mut callback: F)\n where\n     F: FnMut(TestEvent) -> io::Result<()>,\n {\n-    use std::collections::HashMap;\n+    use std::collections::{self, HashMap};\n+    use std::hash::BuildHasherDefault;\n     use std::sync::mpsc::RecvTimeoutError;\n+    // Use a deterministic hasher\n+    type TestMap =\n+        HashMap<TestDesc, Instant, BuildHasherDefault<collections::hash_map::DefaultHasher>>;\n \n     let tests_len = tests.len();\n \n@@ -1111,9 +1115,9 @@ where\n \n     let (tx, rx) = channel::<MonitorMsg>();\n \n-    let mut running_tests: HashMap<TestDesc, Instant> = HashMap::new();\n+    let mut running_tests: TestMap = HashMap::default();\n \n-    fn get_timed_out_tests(running_tests: &mut HashMap<TestDesc, Instant>) -> Vec<TestDesc> {\n+    fn get_timed_out_tests(running_tests: &mut TestMap) -> Vec<TestDesc> {\n         let now = Instant::now();\n         let timed_out = running_tests\n             .iter()\n@@ -1131,7 +1135,7 @@ where\n         timed_out\n     };\n \n-    fn calc_timeout(running_tests: &HashMap<TestDesc, Instant>) -> Option<Duration> {\n+    fn calc_timeout(running_tests: &TestMap) -> Option<Duration> {\n         running_tests.values().min().map(|next_timeout| {\n             let now = Instant::now();\n             if *next_timeout >= now {"}]}