{"sha": "e18c59fd48a8387767d44fdd4d36208dfd33f762", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUxOGM1OWZkNDhhODM4Nzc2N2Q0NGZkZDRkMzYyMDhkZmQzM2Y3NjI=", "commit": {"author": {"name": "Simonas Kazlauskas", "email": "git@kazlauskas.me", "date": "2017-04-11T12:57:49Z"}, "committer": {"name": "Simonas Kazlauskas", "email": "git@kazlauskas.me", "date": "2017-04-11T13:06:30Z"}, "message": "Fix some nits", "tree": {"sha": "80e59a34bad7f40765cc40956d8b6247fc049476", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/80e59a34bad7f40765cc40956d8b6247fc049476"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e18c59fd48a8387767d44fdd4d36208dfd33f762", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e18c59fd48a8387767d44fdd4d36208dfd33f762", "html_url": "https://github.com/rust-lang/rust/commit/e18c59fd48a8387767d44fdd4d36208dfd33f762", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e18c59fd48a8387767d44fdd4d36208dfd33f762/comments", "author": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a384f131cbb3e79154cc99ef0d025fc9ed6d9674", "url": "https://api.github.com/repos/rust-lang/rust/commits/a384f131cbb3e79154cc99ef0d025fc9ed6d9674", "html_url": "https://github.com/rust-lang/rust/commit/a384f131cbb3e79154cc99ef0d025fc9ed6d9674"}], "stats": {"total": 13, "additions": 7, "deletions": 6}, "files": [{"sha": "039db3d9ee9117484aa69847768089bbfcdf608b", "filename": "src/librustc/session/mod.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e18c59fd48a8387767d44fdd4d36208dfd33f762/src%2Flibrustc%2Fsession%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e18c59fd48a8387767d44fdd4d36208dfd33f762/src%2Flibrustc%2Fsession%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fmod.rs?ref=e18c59fd48a8387767d44fdd4d36208dfd33f762", "patch": "@@ -530,11 +530,10 @@ impl Session {\n             Some(ref c) if c == crate_name => {\n                 let fuel = self.optimization_fuel_limit.get();\n                 ret = fuel != 0;\n-                if fuel == 0 && !self.out_of_fuel.get(){\n+                if fuel == 0 && !self.out_of_fuel.get() {\n                     println!(\"optimization-fuel-exhausted: {}\", msg());\n                     self.out_of_fuel.set(true);\n-                }\n-                else if fuel > 0{\n+                } else if fuel > 0 {\n                     self.optimization_fuel_limit.set(fuel-1);\n                 }\n             }"}, {"sha": "1a892b73aa5d771c86f6f2dd1c09796763647997", "filename": "src/librustc_driver/lib.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e18c59fd48a8387767d44fdd4d36208dfd33f762/src%2Flibrustc_driver%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e18c59fd48a8387767d44fdd4d36208dfd33f762/src%2Flibrustc_driver%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Flib.rs?ref=e18c59fd48a8387767d44fdd4d36208dfd33f762", "patch": "@@ -518,7 +518,9 @@ impl<'a> CompilerCalls<'a> for RustcDefaultCalls {\n         }\n \n         if sess.print_fuel_crate.is_some() {\n-            control.compilation_done.callback = box |state| {\n+            let old_callback = control.compilation_done.callback;\n+            control.compilation_done.callback = box move |state| {\n+                old_callback(state);\n                 let sess = state.session;\n                 println!(\"Fuel used by {}: {}\",\n                     sess.print_fuel_crate.as_ref().unwrap(),"}, {"sha": "7cfc28622c443a63c9dd0943e5af4a73d44af7a9", "filename": "src/librustc_trans/intrinsic.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e18c59fd48a8387767d44fdd4d36208dfd33f762/src%2Flibrustc_trans%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e18c59fd48a8387767d44fdd4d36208dfd33f762/src%2Flibrustc_trans%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fintrinsic.rs?ref=e18c59fd48a8387767d44fdd4d36208dfd33f762", "patch": "@@ -622,8 +622,8 @@ pub fn trans_intrinsic_call<'a, 'tcx>(bcx: &Builder<'a, 'tcx>,\n                         let val = bcx.extract_value(val, i);\n                         let lval = LvalueRef::new_sized_ty(llresult, ret_ty,\n                                                            Alignment::AbiAligned);\n-                        let (dest, _) = lval.trans_field_ptr(bcx, i);\n-                        bcx.store(val, dest, None);\n+                        let (dest, align) = lval.trans_field_ptr(bcx, i);\n+                        bcx.store(val, dest, align.to_align());\n                     }\n                     C_nil(ccx)\n                 }"}]}