{"sha": "38dcae2cda85916d91d727ffe08a944e69ee3162", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM4ZGNhZTJjZGE4NTkxNmQ5MWQ3MjdmZmUwOGE5NDRlNjllZTMxNjI=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2021-07-07T00:52:53Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-07-07T00:52:53Z"}, "message": "Apply suggestions from code review", "tree": {"sha": "4a8f222f10559036754547e622c497cc2864abd4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4a8f222f10559036754547e622c497cc2864abd4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/38dcae2cda85916d91d727ffe08a944e69ee3162", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJg5PrlCRBK7hj4Ov3rIwAAgrAIAC82Lh5WHAX17fls9IDtU4pI\n8nmIxJPVlmfRboi6zsrOrOwJnXzkhRJn3JAOZGOlwNexIr6LzbYKvUsr8xomL8Mw\nDVX8GWaWvVKsqotK54gSm8q/4iJn8+PZxhA2G1js7sXSdQq4UFiKfXVh5vsr6oaw\n0fdk4YQ97wFwjyxs5nHMNeaxGTsggwb9zBwZNOlbgGWDom6t2mH/Wx2Bc+t3i9h7\nW/ULIjueKpPXbzUjtu7YGeyKg07hejI9xTuSNcamCfRP1XkuF9PZI0u2yjtid6aD\nldEplhK2kE3IJmnL+oPp1DO68SWY+Nl44eZhcdlpGD2VULMxjmpnDOj9cEql1ys=\n=hJIE\n-----END PGP SIGNATURE-----\n", "payload": "tree 4a8f222f10559036754547e622c497cc2864abd4\nparent 32fa96486a5a9969d6151cf436dca4a31f8da292\nauthor Niko Matsakis <niko@alum.mit.edu> 1625619173 -0400\ncommitter GitHub <noreply@github.com> 1625619173 -0400\n\nApply suggestions from code review"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/38dcae2cda85916d91d727ffe08a944e69ee3162", "html_url": "https://github.com/rust-lang/rust/commit/38dcae2cda85916d91d727ffe08a944e69ee3162", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/38dcae2cda85916d91d727ffe08a944e69ee3162/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "32fa96486a5a9969d6151cf436dca4a31f8da292", "url": "https://api.github.com/repos/rust-lang/rust/commits/32fa96486a5a9969d6151cf436dca4a31f8da292", "html_url": "https://github.com/rust-lang/rust/commit/32fa96486a5a9969d6151cf436dca4a31f8da292"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "86d978718dd28edc1c1e229b00a35fd37fe45839", "filename": "compiler/rustc_typeck/src/check/upvar.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/38dcae2cda85916d91d727ffe08a944e69ee3162/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fupvar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38dcae2cda85916d91d727ffe08a944e69ee3162/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fupvar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fupvar.rs?ref=38dcae2cda85916d91d727ffe08a944e69ee3162", "patch": "@@ -2003,9 +2003,13 @@ fn determine_place_ancestry_relation(\n fn truncate_capture_for_optimization<'tcx>(place: &Place<'tcx>) -> Place<'tcx> {\n     let is_shared_ref = |ty: Ty<'_>| matches!(ty.kind(), ty::Ref(.., hir::Mutability::Not));\n \n+    // Find the right-most deref (if any). All the projections that come after this\n+    // are fields or other \"in-place pointer adjustments\"; these refer therefore to\n+    // data owned by whatever pointer is being dereferenced here.\n     let idx = place.projections.iter().rposition(|proj| ProjectionKind::Deref == proj.kind);\n \n     match idx {\n+        // If that pointer is a shared reference, then we don't need those fields.\n         Some(idx) if is_shared_ref(place.ty_before_projection(idx)) => {\n             Place { projections: place.projections[0..=idx].to_vec(), ..place.clone() }\n         }"}]}