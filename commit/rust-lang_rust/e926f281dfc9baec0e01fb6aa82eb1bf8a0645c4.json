{"sha": "e926f281dfc9baec0e01fb6aa82eb1bf8a0645c4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU5MjZmMjgxZGZjOWJhZWMwZTAxZmI2YWE4MmViMWJmOGEwNjQ1YzQ=", "commit": {"author": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-03-11T23:28:22Z"}, "committer": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-03-11T23:59:02Z"}, "message": "Comment `resolve_item_in_lexical_scope`", "tree": {"sha": "bca71d5a800088a75fad2d90a32ff0bfb9738b2c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bca71d5a800088a75fad2d90a32ff0bfb9738b2c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e926f281dfc9baec0e01fb6aa82eb1bf8a0645c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e926f281dfc9baec0e01fb6aa82eb1bf8a0645c4", "html_url": "https://github.com/rust-lang/rust/commit/e926f281dfc9baec0e01fb6aa82eb1bf8a0645c4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e926f281dfc9baec0e01fb6aa82eb1bf8a0645c4/comments", "author": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e742da0c71fc65facfa04df045839a230f059d42", "url": "https://api.github.com/repos/rust-lang/rust/commits/e742da0c71fc65facfa04df045839a230f059d42", "html_url": "https://github.com/rust-lang/rust/commit/e742da0c71fc65facfa04df045839a230f059d42"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "468c560b0bdbc4a8ec1d7a74f8170ad35190ba0b", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/e926f281dfc9baec0e01fb6aa82eb1bf8a0645c4/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e926f281dfc9baec0e01fb6aa82eb1bf8a0645c4/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=e926f281dfc9baec0e01fb6aa82eb1bf8a0645c4", "patch": "@@ -1443,16 +1443,22 @@ impl<'a, 'tcx> Resolver<'a, 'tcx> {\n                                            span)\n     }\n \n+    /// This function resolves `name` in `namespace` in the current lexical scope, returning\n+    /// Success(binding) if `name` resolves to an item, or Failed(None) if `name` does not resolve\n+    /// or resolves to a type parameter or local variable.\n+    /// n.b. `resolve_identifier_in_local_ribs` also resolves names in the current lexical scope.\n+    ///\n     /// Invariant: This must only be called during main resolution, not during\n     /// import resolution.\n     fn resolve_item_in_lexical_scope(&mut self,\n                                      name: Name,\n                                      namespace: Namespace,\n                                      record_used: bool)\n                                      -> ResolveResult<&'a NameBinding<'a>> {\n-        // Check the local set of ribs.\n+        // Walk backwards up the ribs in scope.\n         for i in (0 .. self.get_ribs(namespace).len()).rev() {\n             if let Some(_) = self.get_ribs(namespace)[i].bindings.get(&name).cloned() {\n+                // The name resolves to a type parameter or local variable, so return Failed(None).\n                 return Failed(None);\n             }\n \n@@ -1462,6 +1468,7 @@ impl<'a, 'tcx> Resolver<'a, 'tcx> {\n                                                                       namespace,\n                                                                       true,\n                                                                       record_used) {\n+                    // The name resolves to an item.\n                     return Success(binding);\n                 }\n                 // We can only see through anonymous modules"}]}