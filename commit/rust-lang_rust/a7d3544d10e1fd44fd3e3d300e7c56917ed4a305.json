{"sha": "a7d3544d10e1fd44fd3e3d300e7c56917ed4a305", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE3ZDM1NDRkMTBlMWZkNDRmZDNlM2QzMDBlN2M1NjkxN2VkNGEzMDU=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-23T23:57:28Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-24T00:18:01Z"}, "message": "rustdoc: Don't prune functions with documented arguments", "tree": {"sha": "80354b2818470e3730f8562fada84ee3946b0cd5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/80354b2818470e3730f8562fada84ee3946b0cd5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a7d3544d10e1fd44fd3e3d300e7c56917ed4a305", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a7d3544d10e1fd44fd3e3d300e7c56917ed4a305", "html_url": "https://github.com/rust-lang/rust/commit/a7d3544d10e1fd44fd3e3d300e7c56917ed4a305", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a7d3544d10e1fd44fd3e3d300e7c56917ed4a305/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5cff7c093eec13405ad8f6d16019c3b11cf88eac", "url": "https://api.github.com/repos/rust-lang/rust/commits/5cff7c093eec13405ad8f6d16019c3b11cf88eac", "html_url": "https://github.com/rust-lang/rust/commit/5cff7c093eec13405ad8f6d16019c3b11cf88eac"}], "stats": {"total": 13, "additions": 13, "deletions": 0}, "files": [{"sha": "029738da8dbbac9f36dd1067a80ccd2a1c48db87", "filename": "src/rustdoc/prune_undoc_pass.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/a7d3544d10e1fd44fd3e3d300e7c56917ed4a305/src%2Frustdoc%2Fprune_undoc_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7d3544d10e1fd44fd3e3d300e7c56917ed4a305/src%2Frustdoc%2Fprune_undoc_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fprune_undoc_pass.rs?ref=a7d3544d10e1fd44fd3e3d300e7c56917ed4a305", "patch": "@@ -44,9 +44,11 @@ fn fold_fn(\n     fold: fold::fold<ctxt>,\n     doc: doc::fndoc\n ) -> doc::fndoc {\n+    let have_arg_docs = false;\n     let doc = ~{\n         args: vec::filter_map(doc.args) {|doc|\n             if option::is_some(doc.desc) {\n+                have_arg_docs = true;\n                 some(doc)\n             } else {\n                 none\n@@ -58,6 +60,7 @@ fn fold_fn(\n     fold.ctxt.have_docs =\n         doc.brief != none\n         || doc.desc != none\n+        || have_arg_docs\n         || doc.return.desc != none;\n     ret doc;\n }\n@@ -72,6 +75,16 @@ fn should_elide_undocumented_arguments() {\n     assert vec::is_empty(doc.topmod.fns[0].args);\n }\n \n+#[test]\n+fn should_not_elide_fns_with_documented_arguments() {\n+    let source = \"#[doc(args(a = \\\"b\\\"))] fn a(a: int) { }\";\n+    let srv = astsrv::mk_srv_from_str(source);\n+    let doc = extract::from_srv(srv, \"\");\n+    let doc = attr_pass::mk_pass()(srv, doc);\n+    let doc = run(srv, doc);\n+    assert vec::is_not_empty(*doc.topmod.fns);\n+}\n+\n fn fold_modlist(\n     fold: fold::fold<ctxt>,\n     list: doc::modlist"}]}