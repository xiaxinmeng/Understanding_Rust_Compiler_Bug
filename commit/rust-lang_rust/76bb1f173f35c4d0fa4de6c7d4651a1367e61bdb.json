{"sha": "76bb1f173f35c4d0fa4de6c7d4651a1367e61bdb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc2YmIxZjE3M2YzNWM0ZDBmYTRkZTZjN2Q0NjUxYTEzNjdlNjFiZGI=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-03-06T18:19:29Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-03-06T18:19:29Z"}, "message": "Move the more advanced ways to use cg_clif to usage.md", "tree": {"sha": "83eacbf496a1461125f0e39b001e9b335d55dfdf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/83eacbf496a1461125f0e39b001e9b335d55dfdf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/76bb1f173f35c4d0fa4de6c7d4651a1367e61bdb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/76bb1f173f35c4d0fa4de6c7d4651a1367e61bdb", "html_url": "https://github.com/rust-lang/rust/commit/76bb1f173f35c4d0fa4de6c7d4651a1367e61bdb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/76bb1f173f35c4d0fa4de6c7d4651a1367e61bdb/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d194c707c82198864cd1493a9e104f904d354e16", "url": "https://api.github.com/repos/rust-lang/rust/commits/d194c707c82198864cd1493a9e104f904d354e16", "html_url": "https://github.com/rust-lang/rust/commit/d194c707c82198864cd1493a9e104f904d354e16"}], "stats": {"total": 125, "additions": 70, "deletions": 55}, "files": [{"sha": "6848ce7809088c8c8b6f0794ecbab55ef71ad9e0", "filename": "Readme.md", "status": "modified", "additions": 4, "deletions": 55, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/76bb1f173f35c4d0fa4de6c7d4651a1367e61bdb/Readme.md", "raw_url": "https://github.com/rust-lang/rust/raw/76bb1f173f35c4d0fa4de6c7d4651a1367e61bdb/Readme.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Readme.md?ref=76bb1f173f35c4d0fa4de6c7d4651a1367e61bdb", "patch": "@@ -34,70 +34,19 @@ rustc_codegen_cranelift can be used as a near-drop-in replacement for `cargo bui\n \n Assuming `$cg_clif_dir` is the directory you cloned this repo into and you followed the instructions (`prepare.sh` and `build.sh` or `test.sh`).\n \n-### Cargo\n-\n In the directory with your project (where you can do the usual `cargo build`), run:\n \n ```bash\n-$ $cg_clif_dir/build/cargo.sh run\n-```\n-\n-This should build and run your project with rustc_codegen_cranelift instead of the usual LLVM backend.\n-\n-### Rustc\n-\n-> You should prefer using the Cargo method.\n-\n-```bash\n-$ $cg_clif_dir/build/bin/cg_clif my_crate.rs\n-```\n-\n-### Jit mode\n-\n-In jit mode cg_clif will immediately execute your code without creating an executable file.\n-\n-> This requires all dependencies to be available as dynamic library.\n-> The jit mode will probably need cargo integration to make this possible.\n-\n-```bash\n-$ $cg_clif_dir/build/cargo.sh jit\n+$ $cg_clif_dir/build/cargo.sh build\n ```\n \n-or\n+This will build your project with rustc_codegen_cranelift instead of the usual LLVM backend.\n \n-```bash\n-$ $cg_clif_dir/build/bin/cg_clif -Cllvm-args=mode=jit -Cprefer-dynamic my_crate.rs\n-```\n-\n-There is also an experimental lazy jit mode. In this mode functions are only compiled once they are\n-first called. It currently does not work with multi-threaded programs. When a not yet compiled\n-function is called from another thread than the main thread, you will get an ICE.\n-\n-```bash\n-$ $cg_clif_dir/build/cargo.sh lazy-jit\n-```\n-\n-### Shell\n-\n-These are a few functions that allow you to easily run rust code from the shell using cg_clif as jit.\n-\n-```bash\n-function jit_naked() {\n-    echo \"$@\" | $cg_clif_dir/build/bin/cg_clif - -Cllvm-args=mode=jit -Cprefer-dynamic\n-}\n-\n-function jit() {\n-    jit_naked \"fn main() { $@ }\"\n-}\n-\n-function jit_calc() {\n-    jit 'println!(\"0x{:x}\", ' $@ ');';\n-}\n-```\n+For additional ways to use rustc_codegen_cranelift like the JIT mode see [full_usage.md](docs/full_usage.md).\n \n ## Env vars\n \n-[see env_vars.md](docs/env_vars.md)\n+See [env_vars.md](docs/env_vars.md) for all env vars used by rustc_codegen_cranelift.\n \n ## Not yet supported\n "}, {"sha": "defe16ab3af093f2c3a19ffe74c5e2f9da4cacab", "filename": "docs/usage.md", "status": "added", "additions": 66, "deletions": 0, "changes": 66, "blob_url": "https://github.com/rust-lang/rust/blob/76bb1f173f35c4d0fa4de6c7d4651a1367e61bdb/docs%2Fusage.md", "raw_url": "https://github.com/rust-lang/rust/raw/76bb1f173f35c4d0fa4de6c7d4651a1367e61bdb/docs%2Fusage.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fusage.md?ref=76bb1f173f35c4d0fa4de6c7d4651a1367e61bdb", "patch": "@@ -0,0 +1,66 @@\n+# Usage\n+\n+rustc_codegen_cranelift can be used as a near-drop-in replacement for `cargo build` or `cargo run` for existing projects.\n+\n+Assuming `$cg_clif_dir` is the directory you cloned this repo into and you followed the instructions (`prepare.sh` and `build.sh` or `test.sh`).\n+\n+## Cargo\n+\n+In the directory with your project (where you can do the usual `cargo build`), run:\n+\n+```bash\n+$ $cg_clif_dir/build/cargo.sh build\n+```\n+\n+This will build and run your project with rustc_codegen_cranelift instead of the usual LLVM backend.\n+\n+## Rustc\n+\n+> You should prefer using the Cargo method.\n+\n+```bash\n+$ $cg_clif_dir/build/bin/cg_clif my_crate.rs\n+```\n+\n+## Jit mode\n+\n+In jit mode cg_clif will immediately execute your code without creating an executable file.\n+\n+> This requires all dependencies to be available as dynamic library.\n+> The jit mode will probably need cargo integration to make this possible.\n+\n+```bash\n+$ $cg_clif_dir/build/cargo.sh jit\n+```\n+\n+or\n+\n+```bash\n+$ $cg_clif_dir/build/bin/cg_clif -Cllvm-args=mode=jit -Cprefer-dynamic my_crate.rs\n+```\n+\n+There is also an experimental lazy jit mode. In this mode functions are only compiled once they are\n+first called. It currently does not work with multi-threaded programs. When a not yet compiled\n+function is called from another thread than the main thread, you will get an ICE.\n+\n+```bash\n+$ $cg_clif_dir/build/cargo.sh lazy-jit\n+```\n+\n+## Shell\n+\n+These are a few functions that allow you to easily run rust code from the shell using cg_clif as jit.\n+\n+```bash\n+function jit_naked() {\n+    echo \"$@\" | $cg_clif_dir/build/bin/cg_clif - -Cllvm-args=mode=jit -Cprefer-dynamic\n+}\n+\n+function jit() {\n+    jit_naked \"fn main() { $@ }\"\n+}\n+\n+function jit_calc() {\n+    jit 'println!(\"0x{:x}\", ' $@ ');';\n+}\n+```"}]}