{"sha": "aa346401baae03aeeba5d3ff10006eae7b60ca0e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFhMzQ2NDAxYmFhZTAzYWVlYmE1ZDNmZjEwMDA2ZWFlN2I2MGNhMGU=", "commit": {"author": {"name": "John Clements", "email": "clements@racket-lang.org", "date": "2013-04-22T00:26:41Z"}, "committer": {"name": "John Clements", "email": "clements@racket-lang.org", "date": "2013-04-28T16:51:16Z"}, "message": "removed unneeded argument to parse_record", "tree": {"sha": "71ce29fcf7512d7b4973c2daa5d4c6e91ea514b6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/71ce29fcf7512d7b4973c2daa5d4c6e91ea514b6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aa346401baae03aeeba5d3ff10006eae7b60ca0e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aa346401baae03aeeba5d3ff10006eae7b60ca0e", "html_url": "https://github.com/rust-lang/rust/commit/aa346401baae03aeeba5d3ff10006eae7b60ca0e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aa346401baae03aeeba5d3ff10006eae7b60ca0e/comments", "author": {"login": "jbclements", "id": 226617, "node_id": "MDQ6VXNlcjIyNjYxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/226617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbclements", "html_url": "https://github.com/jbclements", "followers_url": "https://api.github.com/users/jbclements/followers", "following_url": "https://api.github.com/users/jbclements/following{/other_user}", "gists_url": "https://api.github.com/users/jbclements/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbclements/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbclements/subscriptions", "organizations_url": "https://api.github.com/users/jbclements/orgs", "repos_url": "https://api.github.com/users/jbclements/repos", "events_url": "https://api.github.com/users/jbclements/events{/privacy}", "received_events_url": "https://api.github.com/users/jbclements/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jbclements", "id": 226617, "node_id": "MDQ6VXNlcjIyNjYxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/226617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbclements", "html_url": "https://github.com/jbclements", "followers_url": "https://api.github.com/users/jbclements/followers", "following_url": "https://api.github.com/users/jbclements/following{/other_user}", "gists_url": "https://api.github.com/users/jbclements/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbclements/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbclements/subscriptions", "organizations_url": "https://api.github.com/users/jbclements/orgs", "repos_url": "https://api.github.com/users/jbclements/repos", "events_url": "https://api.github.com/users/jbclements/events{/privacy}", "received_events_url": "https://api.github.com/users/jbclements/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d2aee7b3e68c33edc410485f7ccadba1484c3bc3", "url": "https://api.github.com/repos/rust-lang/rust/commits/d2aee7b3e68c33edc410485f7ccadba1484c3bc3", "html_url": "https://github.com/rust-lang/rust/commit/d2aee7b3e68c33edc410485f7ccadba1484c3bc3"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "facf10c3cd994b8066fa17fa4cda8c3950648b3e", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/aa346401baae03aeeba5d3ff10006eae7b60ca0e/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa346401baae03aeeba5d3ff10006eae7b60ca0e/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=aa346401baae03aeeba5d3ff10006eae7b60ca0e", "patch": "@@ -1123,11 +1123,12 @@ pub impl Parser {\n         }\n     }\n \n-    fn parse_field(&self, sep: token::Token) -> field {\n+    // parse ident COLON expr\n+    fn parse_field(&self) -> field {\n         let lo = self.span.lo;\n         let m = self.parse_mutability();\n         let i = self.parse_ident();\n-        self.expect(&sep);\n+        self.expect(&token::COLON);\n         let e = self.parse_expr();\n         spanned(lo, e.span.hi, ast::field_ { mutbl: m, ident: i, expr: e })\n     }\n@@ -1323,7 +1324,7 @@ pub impl Parser {\n                     let mut fields = ~[];\n                     let mut base = None;\n \n-                    fields.push(self.parse_field(token::COLON));\n+                    fields.push(self.parse_field());\n                     while *self.token != token::RBRACE {\n                         if self.try_parse_obsolete_with() {\n                             break;\n@@ -1340,7 +1341,7 @@ pub impl Parser {\n                             // Accept an optional trailing comma.\n                             break;\n                         }\n-                        fields.push(self.parse_field(token::COLON));\n+                        fields.push(self.parse_field());\n                     }\n \n                     hi = pth.span.hi;"}]}