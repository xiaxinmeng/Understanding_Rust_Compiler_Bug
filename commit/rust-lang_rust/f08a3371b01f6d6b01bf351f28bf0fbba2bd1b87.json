{"sha": "f08a3371b01f6d6b01bf351f28bf0fbba2bd1b87", "node_id": "C_kwDOAAsO6NoAKGYwOGEzMzcxYjAxZjZkNmIwMWJmMzUxZjI4YmYwZmJiYTJiZDFiODc", "commit": {"author": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2023-02-02T23:15:24Z"}, "committer": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2023-02-05T21:52:04Z"}, "message": "Improve early bailout test in `resolve_vars_if_possible`.\n\n`!t.has_non_region_infer()` is the test used in\n`OpportunisticVarResolver`, and catches a few cases that\n`!t.needs_infer()` misses.", "tree": {"sha": "2744a1db2c031b8f8b9768dc4a3f2cde8c448c65", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2744a1db2c031b8f8b9768dc4a3f2cde8c448c65"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f08a3371b01f6d6b01bf351f28bf0fbba2bd1b87", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f08a3371b01f6d6b01bf351f28bf0fbba2bd1b87", "html_url": "https://github.com/rust-lang/rust/commit/f08a3371b01f6d6b01bf351f28bf0fbba2bd1b87", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f08a3371b01f6d6b01bf351f28bf0fbba2bd1b87/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bac7628eae905b0c806788914c9b7ee9409983de", "url": "https://api.github.com/repos/rust-lang/rust/commits/bac7628eae905b0c806788914c9b7ee9409983de", "html_url": "https://github.com/rust-lang/rust/commit/bac7628eae905b0c806788914c9b7ee9409983de"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "14af720fca1f929f600719766f689fd748c7402c", "filename": "compiler/rustc_infer/src/infer/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f08a3371b01f6d6b01bf351f28bf0fbba2bd1b87/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f08a3371b01f6d6b01bf351f28bf0fbba2bd1b87/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fmod.rs?ref=f08a3371b01f6d6b01bf351f28bf0fbba2bd1b87", "patch": "@@ -1389,8 +1389,8 @@ impl<'tcx> InferCtxt<'tcx> {\n     where\n         T: TypeFoldable<'tcx>,\n     {\n-        if !value.needs_infer() {\n-            return value; // Avoid duplicated subst-folding.\n+        if !value.has_non_region_infer() {\n+            return value;\n         }\n         let mut r = resolve::OpportunisticVarResolver::new(self);\n         value.fold_with(&mut r)"}]}