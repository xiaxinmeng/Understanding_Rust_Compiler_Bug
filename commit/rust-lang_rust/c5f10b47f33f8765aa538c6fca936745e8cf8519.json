{"sha": "c5f10b47f33f8765aa538c6fca936745e8cf8519", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM1ZjEwYjQ3ZjMzZjg3NjVhYTUzOGM2ZmNhOTM2NzQ1ZThjZjg1MTk=", "commit": {"author": {"name": "Palmer Cox", "email": "p@lmercox.com", "date": "2013-10-23T03:16:12Z"}, "committer": {"name": "Palmer Cox", "email": "p@lmercox.com", "date": "2013-10-28T01:25:19Z"}, "message": "Update workcache to no longer use Sha1.", "tree": {"sha": "cee1a0fc34e22b3fea8e5d17b381cdf03a7f8318", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cee1a0fc34e22b3fea8e5d17b381cdf03a7f8318"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c5f10b47f33f8765aa538c6fca936745e8cf8519", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c5f10b47f33f8765aa538c6fca936745e8cf8519", "html_url": "https://github.com/rust-lang/rust/commit/c5f10b47f33f8765aa538c6fca936745e8cf8519", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c5f10b47f33f8765aa538c6fca936745e8cf8519/comments", "author": null, "committer": null, "parents": [{"sha": "2c30fcea82f51271c9e93e27d9442da41cd55c5e", "url": "https://api.github.com/repos/rust-lang/rust/commits/2c30fcea82f51271c9e93e27d9442da41cd55c5e", "html_url": "https://github.com/rust-lang/rust/commit/2c30fcea82f51271c9e93e27d9442da41cd55c5e"}], "stats": {"total": 22, "additions": 5, "deletions": 17}, "files": [{"sha": "bdc8b95ad411d2838272bb7a5548560a9a57fe57", "filename": "src/libextra/workcache.rs", "status": "modified", "additions": 5, "deletions": 17, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/c5f10b47f33f8765aa538c6fca936745e8cf8519/src%2Flibextra%2Fworkcache.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c5f10b47f33f8765aa538c6fca936745e8cf8519/src%2Flibextra%2Fworkcache.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fworkcache.rs?ref=c5f10b47f33f8765aa538c6fca936745e8cf8519", "patch": "@@ -10,10 +10,8 @@\n \n #[allow(missing_doc)];\n \n-use digest::Digest;\n use json;\n use json::ToJson;\n-use sha1::Sha1;\n use serialize::{Encoder, Encodable, Decoder, Decodable};\n use arc::{Arc,RWArc};\n use treemap::TreeMap;\n@@ -23,7 +21,6 @@ use std::{os, str, task};\n use std::rt::io;\n use std::rt::io::Writer;\n use std::rt::io::Decorator;\n-use std::rt::io::extensions::ReaderUtil;\n use std::rt::io::mem::MemWriter;\n use std::rt::io::file::FileInfo;\n \n@@ -276,19 +273,6 @@ fn json_decode<T:Decodable<json::Decoder>>(s: &str) -> T {\n     Decodable::decode(&mut decoder)\n }\n \n-fn digest<T:Encodable<json::Encoder>>(t: &T) -> ~str {\n-    let mut sha = ~Sha1::new();\n-    (*sha).input_str(json_encode(t));\n-    (*sha).result_str()\n-}\n-\n-fn digest_file(path: &Path) -> ~str {\n-    let mut sha = ~Sha1::new();\n-    let s = path.open_reader(io::Open).read_to_end();\n-    (*sha).input(s);\n-    (*sha).result_str()\n-}\n-\n impl Context {\n \n     pub fn new(db: RWArc<Database>,\n@@ -497,6 +481,8 @@ impl<'self, T:Send +\n #[test]\n fn test() {\n     use std::{os, run};\n+    use std::rt::io::ReaderUtil;\n+    use std::str::from_utf8_owned;\n \n     // Create a path to a new file 'filename' in the directory in which\n     // this test is running.\n@@ -524,8 +510,10 @@ fn test() {\n         let subcx = cx.clone();\n         let pth = pth.clone();\n \n+        let file_content = from_utf8_owned(pth.open_reader(io::Open).read_to_end());\n+\n         // FIXME (#9639): This needs to handle non-utf8 paths\n-        prep.declare_input(\"file\", pth.as_str().unwrap(), digest_file(&pth));\n+        prep.declare_input(\"file\", pth.as_str().unwrap(), file_content);\n         do prep.exec |_exe| {\n             let out = make_path(~\"foo.o\");\n             // FIXME (#9639): This needs to handle non-utf8 paths"}]}