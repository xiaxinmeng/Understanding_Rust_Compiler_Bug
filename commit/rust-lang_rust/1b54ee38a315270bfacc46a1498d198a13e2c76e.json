{"sha": "1b54ee38a315270bfacc46a1498d198a13e2c76e", "node_id": "C_kwDOAAsO6NoAKDFiNTRlZTM4YTMxNTI3MGJmYWNjNDZhMTQ5OGQxOThhMTNlMmM3NmU", "commit": {"author": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2022-09-20T17:13:01Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-09-20T17:13:01Z"}, "message": "Rollup merge of #102027 - notriddle:notriddle/docblock-item-decl, r=GuillaumeGomez\n\nrustdoc: remove `docblock` class from `item-decl`\n\nThis class was originally added in 73b97c7e7c9cfac4dfa4804654b1db6ab687b589 to support hiding and showing the item, because `main.js` went through all `docblock` elements in the DOM and added toggles to them.\n\nhttps://github.com/rust-lang/rust/blob/73b97c7e7c9cfac4dfa4804654b1db6ab687b589/src/librustdoc/html/static/main.js#L1856-L1867\n\nThe `item-decl` is no longer auto-hidden since c96f86de3026f864e78397aff9097e885f2f8fdf removed it.\n\n`item-decl` used to be called `type-decl`: that name was changed in 8b7a2dd4626acf164e1ce8397878b3f5af83d585.\n\nThe `docblock` class is no longer used for implementing toggles, since rustdoc switched to using `<details>` elements.\n\nPreview: https://notriddle.com/notriddle-rustdoc-test/docblock-item-decl/rustdoc/clean/types/enum.Type.html", "tree": {"sha": "c9b2f402de2cb579fee9dd74b62ddbd66ca3e3f2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c9b2f402de2cb579fee9dd74b62ddbd66ca3e3f2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1b54ee38a315270bfacc46a1498d198a13e2c76e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjKfSdCRBK7hj4Ov3rIwAAOmsIAE2y34DpakyzrVMiP3iYJ4s+\nP5P74dMcGZYpKOIruJttv/rknIrJ9yoTtP0iDKoI7Ld5Jf+N0F6q5S8BPBX+Uaqx\nsXrMBE0Es4erdUp67YtITYhxhL4JByNghfKEz7lZXYAw/VdtGlR1B/WB0TFN1Ta6\ntpMRIIuFmfliojts/OqvYJ04HoV6kqfbkX4XKgnAdoIkUxFoGmNqtxCiaPfFdCSE\nYLn8RddrxhFlrO0haXNU4JL0AiCdLTWtl7tUggwnglv1DCsTIP41c18v2Lg/wrmO\nex+/GvfP1geEz/4qKrFI/y8tssyMAX4pK4aZCT8U1UPGKHfKztPUj3wDbHsBO6s=\n=wenj\n-----END PGP SIGNATURE-----\n", "payload": "tree c9b2f402de2cb579fee9dd74b62ddbd66ca3e3f2\nparent b149c481868a3efe10db36679a177cd2ede9d08a\nparent 8e6cf7d84089862aad9711792ccbbe58cab28395\nauthor Michael Howell <michael@notriddle.com> 1663693981 -0700\ncommitter GitHub <noreply@github.com> 1663693981 -0700\n\nRollup merge of #102027 - notriddle:notriddle/docblock-item-decl, r=GuillaumeGomez\n\nrustdoc: remove `docblock` class from `item-decl`\n\nThis class was originally added in 73b97c7e7c9cfac4dfa4804654b1db6ab687b589 to support hiding and showing the item, because `main.js` went through all `docblock` elements in the DOM and added toggles to them.\n\nhttps://github.com/rust-lang/rust/blob/73b97c7e7c9cfac4dfa4804654b1db6ab687b589/src/librustdoc/html/static/main.js#L1856-L1867\n\nThe `item-decl` is no longer auto-hidden since c96f86de3026f864e78397aff9097e885f2f8fdf removed it.\n\n`item-decl` used to be called `type-decl`: that name was changed in 8b7a2dd4626acf164e1ce8397878b3f5af83d585.\n\nThe `docblock` class is no longer used for implementing toggles, since rustdoc switched to using `<details>` elements.\n\nPreview: https://notriddle.com/notriddle-rustdoc-test/docblock-item-decl/rustdoc/clean/types/enum.Type.html\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1b54ee38a315270bfacc46a1498d198a13e2c76e", "html_url": "https://github.com/rust-lang/rust/commit/1b54ee38a315270bfacc46a1498d198a13e2c76e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1b54ee38a315270bfacc46a1498d198a13e2c76e/comments", "author": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b149c481868a3efe10db36679a177cd2ede9d08a", "url": "https://api.github.com/repos/rust-lang/rust/commits/b149c481868a3efe10db36679a177cd2ede9d08a", "html_url": "https://github.com/rust-lang/rust/commit/b149c481868a3efe10db36679a177cd2ede9d08a"}, {"sha": "8e6cf7d84089862aad9711792ccbbe58cab28395", "url": "https://api.github.com/repos/rust-lang/rust/commits/8e6cf7d84089862aad9711792ccbbe58cab28395", "html_url": "https://github.com/rust-lang/rust/commit/8e6cf7d84089862aad9711792ccbbe58cab28395"}], "stats": {"total": 177, "additions": 87, "deletions": 90}, "files": [{"sha": "3e324bbb069c619f7f6f8f0591bdcb1d77f0283a", "filename": "src/librustdoc/html/render/print_item.rs", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/1b54ee38a315270bfacc46a1498d198a13e2c76e/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b54ee38a315270bfacc46a1498d198a13e2c76e/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs?ref=1b54ee38a315270bfacc46a1498d198a13e2c76e", "patch": "@@ -514,7 +514,7 @@ fn item_function(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, f: &cle\n         + name.as_str().len()\n         + generics_len;\n \n-    wrap_into_docblock(w, |w| {\n+    wrap_into_item_decl(w, |w| {\n         wrap_item(w, \"fn\", |w| {\n             render_attributes_in_pre(w, it, \"\");\n             w.reserve(header_len);\n@@ -553,7 +553,7 @@ fn item_trait(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, t: &clean:\n         cx.tcx().trait_def(t.def_id).must_implement_one_of.clone();\n \n     // Output the trait definition\n-    wrap_into_docblock(w, |w| {\n+    wrap_into_item_decl(w, |w| {\n         wrap_item(w, \"trait\", |w| {\n             render_attributes_in_pre(w, it, \"\");\n             write!(\n@@ -1033,7 +1033,7 @@ fn item_trait(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, t: &clean:\n }\n \n fn item_trait_alias(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, t: &clean::TraitAlias) {\n-    wrap_into_docblock(w, |w| {\n+    wrap_into_item_decl(w, |w| {\n         wrap_item(w, \"trait-alias\", |w| {\n             render_attributes_in_pre(w, it, \"\");\n             write!(\n@@ -1057,7 +1057,7 @@ fn item_trait_alias(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, t: &\n }\n \n fn item_opaque_ty(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, t: &clean::OpaqueTy) {\n-    wrap_into_docblock(w, |w| {\n+    wrap_into_item_decl(w, |w| {\n         wrap_item(w, \"opaque\", |w| {\n             render_attributes_in_pre(w, it, \"\");\n             write!(\n@@ -1096,7 +1096,7 @@ fn item_typedef(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, t: &clea\n         });\n     }\n \n-    wrap_into_docblock(w, |w| write_content(w, cx, it, t));\n+    wrap_into_item_decl(w, |w| write_content(w, cx, it, t));\n \n     document(w, cx, it, None, HeadingOffset::H2);\n \n@@ -1110,7 +1110,7 @@ fn item_typedef(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, t: &clea\n }\n \n fn item_union(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, s: &clean::Union) {\n-    wrap_into_docblock(w, |w| {\n+    wrap_into_item_decl(w, |w| {\n         wrap_item(w, \"union\", |w| {\n             render_attributes_in_pre(w, it, \"\");\n             render_union(w, it, Some(&s.generics), &s.fields, \"\", cx);\n@@ -1174,7 +1174,7 @@ fn print_tuple_struct_fields(w: &mut Buffer, cx: &Context<'_>, s: &[clean::Item]\n \n fn item_enum(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, e: &clean::Enum) {\n     let count_variants = e.variants().count();\n-    wrap_into_docblock(w, |w| {\n+    wrap_into_item_decl(w, |w| {\n         wrap_item(w, \"enum\", |w| {\n             render_attributes_in_pre(w, it, \"\");\n             write!(\n@@ -1333,14 +1333,14 @@ fn item_enum(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, e: &clean::\n }\n \n fn item_macro(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, t: &clean::Macro) {\n-    wrap_into_docblock(w, |w| {\n+    wrap_into_item_decl(w, |w| {\n         highlight::render_macro_with_highlighting(&t.source, w);\n     });\n     document(w, cx, it, None, HeadingOffset::H2)\n }\n \n fn item_proc_macro(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, m: &clean::ProcMacro) {\n-    wrap_into_docblock(w, |w| {\n+    wrap_into_item_decl(w, |w| {\n         let name = it.name.expect(\"proc-macros always have names\");\n         match m.kind {\n             MacroKind::Bang => {\n@@ -1387,7 +1387,7 @@ fn item_primitive(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item) {\n }\n \n fn item_constant(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, c: &clean::Constant) {\n-    wrap_into_docblock(w, |w| {\n+    wrap_into_item_decl(w, |w| {\n         wrap_item(w, \"const\", |w| {\n             render_attributes_in_code(w, it);\n \n@@ -1436,7 +1436,7 @@ fn item_constant(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, c: &cle\n }\n \n fn item_struct(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, s: &clean::Struct) {\n-    wrap_into_docblock(w, |w| {\n+    wrap_into_item_decl(w, |w| {\n         wrap_item(w, \"struct\", |w| {\n             render_attributes_in_code(w, it);\n             render_struct(w, it, Some(&s.generics), s.struct_type, &s.fields, \"\", true, cx);\n@@ -1489,7 +1489,7 @@ fn item_struct(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, s: &clean\n }\n \n fn item_static(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, s: &clean::Static) {\n-    wrap_into_docblock(w, |w| {\n+    wrap_into_item_decl(w, |w| {\n         wrap_item(w, \"static\", |w| {\n             render_attributes_in_code(w, it);\n             write!(\n@@ -1506,7 +1506,7 @@ fn item_static(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, s: &clean\n }\n \n fn item_foreign_type(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item) {\n-    wrap_into_docblock(w, |w| {\n+    wrap_into_item_decl(w, |w| {\n         wrap_item(w, \"foreigntype\", |w| {\n             w.write_str(\"extern {\\n\");\n             render_attributes_in_code(w, it);\n@@ -1595,11 +1595,11 @@ fn bounds(t_bounds: &[clean::GenericBound], trait_alias: bool, cx: &Context<'_>)\n     bounds\n }\n \n-fn wrap_into_docblock<F>(w: &mut Buffer, f: F)\n+fn wrap_into_item_decl<F>(w: &mut Buffer, f: F)\n where\n     F: FnOnce(&mut Buffer),\n {\n-    w.write_str(\"<div class=\\\"docblock item-decl\\\">\");\n+    w.write_str(\"<div class=\\\"item-decl\\\">\");\n     f(w);\n     w.write_str(\"</div>\")\n }"}, {"sha": "72918570fb879f2b85e273bb1fea7eef14ab3682", "filename": "src/librustdoc/html/static/css/rustdoc.css", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1b54ee38a315270bfacc46a1498d198a13e2c76e/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css", "raw_url": "https://github.com/rust-lang/rust/raw/1b54ee38a315270bfacc46a1498d198a13e2c76e/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css?ref=1b54ee38a315270bfacc46a1498d198a13e2c76e", "patch": "@@ -372,9 +372,6 @@ code, pre, a.test-arrow, .code-header {\n pre {\n \tpadding: 14px;\n }\n-.docblock.item-decl {\n-\tmargin-left: 0;\n-}\n .item-decl pre {\n \toverflow-x: auto;\n }"}, {"sha": "f2fc3e9afc2a2adfe6eff3c70292081b278fad19", "filename": "src/test/rustdoc-gui/check-code-blocks-margin.goml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1b54ee38a315270bfacc46a1498d198a13e2c76e/src%2Ftest%2Frustdoc-gui%2Fcheck-code-blocks-margin.goml", "raw_url": "https://github.com/rust-lang/rust/raw/1b54ee38a315270bfacc46a1498d198a13e2c76e/src%2Ftest%2Frustdoc-gui%2Fcheck-code-blocks-margin.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fcheck-code-blocks-margin.goml?ref=1b54ee38a315270bfacc46a1498d198a13e2c76e", "patch": "@@ -1,6 +1,6 @@\n // This test ensures that the docblock elements have the appropriate left margin.\n goto: file://|DOC_PATH|/test_docs/fn.foo.html\n // The top docblock elements shouldn't have left margin...\n-assert-css: (\"#main-content .docblock.item-decl\", {\"margin-left\": \"0px\"})\n+assert-css: (\"#main-content .item-decl\", {\"margin-left\": \"0px\"})\n // ... but all the others should!\n-assert-css: (\"#main-content .docblock:not(.item-decl)\", {\"margin-left\": \"24px\"})\n+assert-css: (\"#main-content .docblock\", {\"margin-left\": \"24px\"})"}, {"sha": "13e8ec9fb16a787249e809d78f2dd13989896643", "filename": "src/test/rustdoc-gui/font-weight.goml", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1b54ee38a315270bfacc46a1498d198a13e2c76e/src%2Ftest%2Frustdoc-gui%2Ffont-weight.goml", "raw_url": "https://github.com/rust-lang/rust/raw/1b54ee38a315270bfacc46a1498d198a13e2c76e/src%2Ftest%2Frustdoc-gui%2Ffont-weight.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Ffont-weight.goml?ref=1b54ee38a315270bfacc46a1498d198a13e2c76e", "patch": "@@ -1,6 +1,6 @@\n // This test checks that the font weight is correctly applied.\n goto: file://|DOC_PATH|/lib2/struct.Foo.html\n-assert-css: (\"//*[@class='docblock item-decl']//a[text()='Alias']\", {\"font-weight\": \"400\"})\n+assert-css: (\"//*[@class='item-decl']//a[text()='Alias']\", {\"font-weight\": \"400\"})\n assert-css: (\n     \"//*[@class='structfield small-section-header']//a[text()='Alias']\",\n     {\"font-weight\": \"400\"},\n@@ -19,7 +19,7 @@ goto: file://|DOC_PATH|/lib2/trait.Trait.html\n \n // This is a complex selector, so here's how it works:\n //\n-// * //*[@class='docblock item-decl'] \u2014 selects element of any tag with classes docblock and item-decl\n+// * //*[@class='item-decl'] \u2014 selects element of any tag with classes docblock and item-decl\n // * /pre[@class='rust trait'] \u2014 selects immediate child with tag pre and classes rust and trait\n // * /code \u2014 selects immediate child with tag code\n // * /a[@class='constant'] \u2014 selects immediate child with tag a and class constant\n@@ -29,11 +29,11 @@ goto: file://|DOC_PATH|/lib2/trait.Trait.html\n // This uses '/parent::*' as a proxy for the style of the text node.\n // We can't just select the '<a>' because intermediate tags could be added.\n assert-count: (\n-    \"//*[@class='docblock item-decl']/pre[@class='rust trait']/code/a[@class='constant']//text()/parent::*\",\n+    \"//*[@class='item-decl']/pre[@class='rust trait']/code/a[@class='constant']//text()/parent::*\",\n     1,\n )\n assert-css: (\n-    \"//*[@class='docblock item-decl']/pre[@class='rust trait']/code/a[@class='constant']//text()/parent::*\",\n+    \"//*[@class='item-decl']/pre[@class='rust trait']/code/a[@class='constant']//text()/parent::*\",\n     {\"font-weight\": \"400\"},\n )\n "}, {"sha": "17478da4fea291986a47147bc7303273db0df617", "filename": "src/test/rustdoc-gui/item-info-overflow.goml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1b54ee38a315270bfacc46a1498d198a13e2c76e/src%2Ftest%2Frustdoc-gui%2Fitem-info-overflow.goml", "raw_url": "https://github.com/rust-lang/rust/raw/1b54ee38a315270bfacc46a1498d198a13e2c76e/src%2Ftest%2Frustdoc-gui%2Fitem-info-overflow.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fitem-info-overflow.goml?ref=1b54ee38a315270bfacc46a1498d198a13e2c76e", "patch": "@@ -3,7 +3,7 @@ goto: file://|DOC_PATH|/lib2/struct.LongItemInfo.html\n // We set a fixed size so there is no chance of \"random\" resize.\n size: (1200, 870)\n // Logically, the \"item-decl\" and the \"item-info\" should have the same scroll width.\n-compare-elements-property: (\".docblock.item-decl\", \".item-info\", [\"scrollWidth\"])\n+compare-elements-property: (\".item-decl\", \".item-info\", [\"scrollWidth\"])\n assert-property: (\".item-info\", {\"scrollWidth\": \"890\"})\n // Just to be sure we're comparing the correct \"item-info\":\n assert-text: ("}, {"sha": "36e10923c85354e44ef7658f031ed5e5b49fd090", "filename": "src/test/rustdoc/attribute-rendering.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1b54ee38a315270bfacc46a1498d198a13e2c76e/src%2Ftest%2Frustdoc%2Fattribute-rendering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b54ee38a315270bfacc46a1498d198a13e2c76e/src%2Ftest%2Frustdoc%2Fattribute-rendering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fattribute-rendering.rs?ref=1b54ee38a315270bfacc46a1498d198a13e2c76e", "patch": "@@ -1,7 +1,7 @@\n #![crate_name = \"foo\"]\n \n // @has 'foo/fn.f.html'\n-// @has - //*[@'class=\"docblock item-decl\"]' '#[export_name = \"f\"] pub fn f()'\n+// @has - //*[@'class=\"item-decl\"]' '#[export_name = \"f\"] pub fn f()'\n #[export_name = \"\\\n f\"]\n pub fn f() {}"}, {"sha": "a36dadced87d71e906c79babf398039265b46c12", "filename": "src/test/rustdoc/attributes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1b54ee38a315270bfacc46a1498d198a13e2c76e/src%2Ftest%2Frustdoc%2Fattributes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b54ee38a315270bfacc46a1498d198a13e2c76e/src%2Ftest%2Frustdoc%2Fattributes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fattributes.rs?ref=1b54ee38a315270bfacc46a1498d198a13e2c76e", "patch": "@@ -8,6 +8,6 @@ pub extern \"C\" fn f() {}\n #[export_name = \"bar\"]\n pub extern \"C\" fn g() {}\n \n-// @has foo/struct.Repr.html '//*[@class=\"docblock item-decl\"]' '#[repr(C, align(8))]'\n+// @has foo/struct.Repr.html '//*[@class=\"item-decl\"]' '#[repr(C, align(8))]'\n #[repr(C, align(8))]\n pub struct Repr;"}, {"sha": "8d95f0de9d098809873d8299e430c65a7e07ea25", "filename": "src/test/rustdoc/const-value-display.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1b54ee38a315270bfacc46a1498d198a13e2c76e/src%2Ftest%2Frustdoc%2Fconst-value-display.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b54ee38a315270bfacc46a1498d198a13e2c76e/src%2Ftest%2Frustdoc%2Fconst-value-display.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fconst-value-display.rs?ref=1b54ee38a315270bfacc46a1498d198a13e2c76e", "patch": "@@ -1,9 +1,9 @@\n #![crate_name = \"foo\"]\n \n // @has 'foo/constant.HOUR_IN_SECONDS.html'\n-// @has - '//*[@class=\"docblock item-decl\"]//code' 'pub const HOUR_IN_SECONDS: u64 = _; // 3_600u64'\n+// @has - '//*[@class=\"item-decl\"]//code' 'pub const HOUR_IN_SECONDS: u64 = _; // 3_600u64'\n pub const HOUR_IN_SECONDS: u64 = 60 * 60;\n \n // @has 'foo/constant.NEGATIVE.html'\n-// @has - '//*[@class=\"docblock item-decl\"]//code' 'pub const NEGATIVE: i64 = _; // -3_600i64'\n+// @has - '//*[@class=\"item-decl\"]//code' 'pub const NEGATIVE: i64 = _; // -3_600i64'\n pub const NEGATIVE: i64 = -60 * 60;"}, {"sha": "e47edc1321851744137066320b05838c0084ac67", "filename": "src/test/rustdoc/decl-trailing-whitespace.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1b54ee38a315270bfacc46a1498d198a13e2c76e/src%2Ftest%2Frustdoc%2Fdecl-trailing-whitespace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b54ee38a315270bfacc46a1498d198a13e2c76e/src%2Ftest%2Frustdoc%2Fdecl-trailing-whitespace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fdecl-trailing-whitespace.rs?ref=1b54ee38a315270bfacc46a1498d198a13e2c76e", "patch": "@@ -7,7 +7,7 @@ pub struct Error;\n // @has 'foo/trait.Write.html'\n \n pub trait Write {\n-    // @snapshot 'declaration' - '//*[@class=\"docblock item-decl\"]//code'\n+    // @snapshot 'declaration' - '//*[@class=\"item-decl\"]//code'\n     fn poll_write(\n         self: Option<String>,\n         cx: &mut Option<String>,"}, {"sha": "b8c52b7b791d61c3acbf000adb2c3c8262acc829", "filename": "src/test/rustdoc/macro-higher-kinded-function.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1b54ee38a315270bfacc46a1498d198a13e2c76e/src%2Ftest%2Frustdoc%2Fmacro-higher-kinded-function.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b54ee38a315270bfacc46a1498d198a13e2c76e/src%2Ftest%2Frustdoc%2Fmacro-higher-kinded-function.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fmacro-higher-kinded-function.rs?ref=1b54ee38a315270bfacc46a1498d198a13e2c76e", "patch": "@@ -11,8 +11,8 @@ macro_rules! gen {\n }\n \n // @has 'foo/struct.Providers.html'\n-// @has - '//*[@class=\"docblock item-decl\"]//code' \"pub a: for<'tcx> fn(_: TyCtxt<'tcx>, _: u8) -> i8,\"\n-// @has - '//*[@class=\"docblock item-decl\"]//code' \"pub b: for<'tcx> fn(_: TyCtxt<'tcx>, _: u16) -> i16,\"\n+// @has - '//*[@class=\"item-decl\"]//code' \"pub a: for<'tcx> fn(_: TyCtxt<'tcx>, _: u8) -> i8,\"\n+// @has - '//*[@class=\"item-decl\"]//code' \"pub b: for<'tcx> fn(_: TyCtxt<'tcx>, _: u16) -> i16,\"\n // @has - '//*[@id=\"structfield.a\"]/code' \"a: for<'tcx> fn(_: TyCtxt<'tcx>, _: u8) -> i8\"\n // @has - '//*[@id=\"structfield.b\"]/code' \"b: for<'tcx> fn(_: TyCtxt<'tcx>, _: u16) -> i16\"\n gen! {"}, {"sha": "6694c91d104425c9653c7879194a56a596a34370", "filename": "src/test/rustdoc/reexport-dep-foreign-fn.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1b54ee38a315270bfacc46a1498d198a13e2c76e/src%2Ftest%2Frustdoc%2Freexport-dep-foreign-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b54ee38a315270bfacc46a1498d198a13e2c76e/src%2Ftest%2Frustdoc%2Freexport-dep-foreign-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Freexport-dep-foreign-fn.rs?ref=1b54ee38a315270bfacc46a1498d198a13e2c76e", "patch": "@@ -8,5 +8,5 @@\n extern crate all_item_types;\n \n // @has 'foo/fn.foo_ffn.html'\n-// @has - '//*[@class=\"docblock item-decl\"]//code' 'pub unsafe extern \"C\" fn foo_ffn()'\n+// @has - '//*[@class=\"item-decl\"]//code' 'pub unsafe extern \"C\" fn foo_ffn()'\n pub use all_item_types::foo_ffn;"}, {"sha": "11364e7f707ef9c7e0d3e4756245907abea61087", "filename": "src/test/rustdoc/reexports-priv.rs", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/1b54ee38a315270bfacc46a1498d198a13e2c76e/src%2Ftest%2Frustdoc%2Freexports-priv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b54ee38a315270bfacc46a1498d198a13e2c76e/src%2Ftest%2Frustdoc%2Freexports-priv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Freexports-priv.rs?ref=1b54ee38a315270bfacc46a1498d198a13e2c76e", "patch": "@@ -5,7 +5,7 @@\n \n extern crate reexports;\n \n-// @has 'foo/macro.addr_of.html' '//*[@class=\"docblock item-decl\"]' 'pub macro addr_of($place:expr) {'\n+// @has 'foo/macro.addr_of.html' '//*[@class=\"item-decl\"]' 'pub macro addr_of($place:expr) {'\n pub use reexports::addr_of;\n // @!has 'foo/macro.addr_of_crate.html'\n pub(crate) use reexports::addr_of_crate;\n@@ -14,7 +14,7 @@ pub(self) use reexports::addr_of_self;\n // @!has 'foo/macro.addr_of_local.html'\n use reexports::addr_of_local;\n \n-// @has 'foo/struct.Foo.html' '//*[@class=\"docblock item-decl\"]' 'pub struct Foo;'\n+// @has 'foo/struct.Foo.html' '//*[@class=\"item-decl\"]' 'pub struct Foo;'\n pub use reexports::Foo;\n // @!has 'foo/struct.FooCrate.html'\n pub(crate) use reexports::FooCrate;\n@@ -23,7 +23,7 @@ pub(self) use reexports::FooSelf;\n // @!has 'foo/struct.FooLocal.html'\n use reexports::FooLocal;\n \n-// @has 'foo/enum.Bar.html' '//*[@class=\"docblock item-decl\"]' 'pub enum Bar {'\n+// @has 'foo/enum.Bar.html' '//*[@class=\"item-decl\"]' 'pub enum Bar {'\n pub use reexports::Bar;\n // @!has 'foo/enum.BarCrate.html'\n pub(crate) use reexports::BarCrate;\n@@ -50,7 +50,7 @@ pub(self) use reexports::TypeSelf;\n // @!has 'foo/type.TypeLocal.html'\n use reexports::TypeLocal;\n \n-// @has 'foo/union.Union.html' '//*[@class=\"docblock item-decl\"]' 'pub union Union {'\n+// @has 'foo/union.Union.html' '//*[@class=\"item-decl\"]' 'pub union Union {'\n pub use reexports::Union;\n // @!has 'foo/union.UnionCrate.html'\n pub(crate) use reexports::UnionCrate;\n@@ -61,33 +61,33 @@ use reexports::UnionLocal;\n \n pub mod outer {\n     pub mod inner {\n-        // @has 'foo/outer/inner/macro.addr_of.html' '//*[@class=\"docblock item-decl\"]' 'pub macro addr_of($place:expr) {'\n+        // @has 'foo/outer/inner/macro.addr_of.html' '//*[@class=\"item-decl\"]' 'pub macro addr_of($place:expr) {'\n         pub use reexports::addr_of;\n-        // @has 'foo/outer/inner/macro.addr_of_crate.html' '//*[@class=\"docblock item-decl\"]' 'pub(crate) macro addr_of_crate($place:expr) {'\n+        // @has 'foo/outer/inner/macro.addr_of_crate.html' '//*[@class=\"item-decl\"]' 'pub(crate) macro addr_of_crate($place:expr) {'\n         pub(crate) use reexports::addr_of_crate;\n-        // @has 'foo/outer/inner/macro.addr_of_super.html' '//*[@class=\"docblock item-decl\"]' 'pub(in outer) macro addr_of_super($place:expr) {'\n+        // @has 'foo/outer/inner/macro.addr_of_super.html' '//*[@class=\"item-decl\"]' 'pub(in outer) macro addr_of_super($place:expr) {'\n         pub(super) use reexports::addr_of_super;\n         // @!has 'foo/outer/inner/macro.addr_of_self.html'\n         pub(self) use reexports::addr_of_self;\n         // @!has 'foo/outer/inner/macro.addr_of_local.html'\n         use reexports::addr_of_local;\n \n-        // @has 'foo/outer/inner/struct.Foo.html' '//*[@class=\"docblock item-decl\"]' 'pub struct Foo;'\n+        // @has 'foo/outer/inner/struct.Foo.html' '//*[@class=\"item-decl\"]' 'pub struct Foo;'\n         pub use reexports::Foo;\n-        // @has 'foo/outer/inner/struct.FooCrate.html' '//*[@class=\"docblock item-decl\"]' 'pub(crate) struct FooCrate;'\n+        // @has 'foo/outer/inner/struct.FooCrate.html' '//*[@class=\"item-decl\"]' 'pub(crate) struct FooCrate;'\n         pub(crate) use reexports::FooCrate;\n-        // @has 'foo/outer/inner/struct.FooSuper.html' '//*[@class=\"docblock item-decl\"]' 'pub(in outer) struct FooSuper;'\n+        // @has 'foo/outer/inner/struct.FooSuper.html' '//*[@class=\"item-decl\"]' 'pub(in outer) struct FooSuper;'\n         pub(super) use reexports::FooSuper;\n         // @!has 'foo/outer/inner/struct.FooSelf.html'\n         pub(self) use reexports::FooSelf;\n         // @!has 'foo/outer/inner/struct.FooLocal.html'\n         use reexports::FooLocal;\n \n-        // @has 'foo/outer/inner/enum.Bar.html' '//*[@class=\"docblock item-decl\"]' 'pub enum Bar {'\n+        // @has 'foo/outer/inner/enum.Bar.html' '//*[@class=\"item-decl\"]' 'pub enum Bar {'\n         pub use reexports::Bar;\n-        // @has 'foo/outer/inner/enum.BarCrate.html' '//*[@class=\"docblock item-decl\"]' 'pub(crate) enum BarCrate {'\n+        // @has 'foo/outer/inner/enum.BarCrate.html' '//*[@class=\"item-decl\"]' 'pub(crate) enum BarCrate {'\n         pub(crate) use reexports::BarCrate;\n-        // @has 'foo/outer/inner/enum.BarSuper.html' '//*[@class=\"docblock item-decl\"]' 'pub(in outer) enum BarSuper {'\n+        // @has 'foo/outer/inner/enum.BarSuper.html' '//*[@class=\"item-decl\"]' 'pub(in outer) enum BarSuper {'\n         pub(super) use reexports::BarSuper;\n         // @!has 'foo/outer/inner/enum.BarSelf.html'\n         pub(self) use reexports::BarSelf;\n@@ -116,11 +116,11 @@ pub mod outer {\n         // @!has 'foo/outer/inner/type.TypeLocal.html'\n         use reexports::TypeLocal;\n \n-        // @has 'foo/outer/inner/union.Union.html' '//*[@class=\"docblock item-decl\"]' 'pub union Union {'\n+        // @has 'foo/outer/inner/union.Union.html' '//*[@class=\"item-decl\"]' 'pub union Union {'\n         pub use reexports::Union;\n-        // @has 'foo/outer/inner/union.UnionCrate.html' '//*[@class=\"docblock item-decl\"]' 'pub(crate) union UnionCrate {'\n+        // @has 'foo/outer/inner/union.UnionCrate.html' '//*[@class=\"item-decl\"]' 'pub(crate) union UnionCrate {'\n         pub(crate) use reexports::UnionCrate;\n-        // @has 'foo/outer/inner/union.UnionSuper.html' '//*[@class=\"docblock item-decl\"]' 'pub(in outer) union UnionSuper {'\n+        // @has 'foo/outer/inner/union.UnionSuper.html' '//*[@class=\"item-decl\"]' 'pub(in outer) union UnionSuper {'\n         pub(super) use reexports::UnionSuper;\n         // @!has 'foo/outer/inner/union.UnionSelf.html'\n         pub(self) use reexports::UnionSelf;"}, {"sha": "9aa6d7224baca200e54974cbee5ab25404d18a68", "filename": "src/test/rustdoc/reexports.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/1b54ee38a315270bfacc46a1498d198a13e2c76e/src%2Ftest%2Frustdoc%2Freexports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b54ee38a315270bfacc46a1498d198a13e2c76e/src%2Ftest%2Frustdoc%2Freexports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Freexports.rs?ref=1b54ee38a315270bfacc46a1498d198a13e2c76e", "patch": "@@ -4,7 +4,7 @@\n \n extern crate reexports;\n \n-// @has 'foo/macro.addr_of.html' '//*[@class=\"docblock item-decl\"]' 'pub macro addr_of($place:expr) {'\n+// @has 'foo/macro.addr_of.html' '//*[@class=\"item-decl\"]' 'pub macro addr_of($place:expr) {'\n pub use reexports::addr_of;\n // @!has 'foo/macro.addr_of_crate.html'\n pub(crate) use reexports::addr_of_crate;\n@@ -13,7 +13,7 @@ pub(self) use reexports::addr_of_self;\n // @!has 'foo/macro.addr_of_local.html'\n use reexports::addr_of_local;\n \n-// @has 'foo/struct.Foo.html' '//*[@class=\"docblock item-decl\"]' 'pub struct Foo;'\n+// @has 'foo/struct.Foo.html' '//*[@class=\"item-decl\"]' 'pub struct Foo;'\n pub use reexports::Foo;\n // @!has 'foo/struct.FooCrate.html'\n pub(crate) use reexports::FooCrate;\n@@ -22,7 +22,7 @@ pub(self) use reexports::FooSelf;\n // @!has 'foo/struct.FooLocal.html'\n use reexports::FooLocal;\n \n-// @has 'foo/enum.Bar.html' '//*[@class=\"docblock item-decl\"]' 'pub enum Bar {'\n+// @has 'foo/enum.Bar.html' '//*[@class=\"item-decl\"]' 'pub enum Bar {'\n pub use reexports::Bar;\n // @!has 'foo/enum.BarCrate.html'\n pub(crate) use reexports::BarCrate;\n@@ -49,7 +49,7 @@ pub(self) use reexports::TypeSelf;\n // @!has 'foo/type.TypeLocal.html'\n use reexports::TypeLocal;\n \n-// @has 'foo/union.Union.html' '//*[@class=\"docblock item-decl\"]' 'pub union Union {'\n+// @has 'foo/union.Union.html' '//*[@class=\"item-decl\"]' 'pub union Union {'\n pub use reexports::Union;\n // @!has 'foo/union.UnionCrate.html'\n pub(crate) use reexports::UnionCrate;\n@@ -60,7 +60,7 @@ use reexports::UnionLocal;\n \n pub mod outer {\n     pub mod inner {\n-        // @has 'foo/outer/inner/macro.addr_of.html' '//*[@class=\"docblock item-decl\"]' 'pub macro addr_of($place:expr) {'\n+        // @has 'foo/outer/inner/macro.addr_of.html' '//*[@class=\"item-decl\"]' 'pub macro addr_of($place:expr) {'\n         pub use reexports::addr_of;\n         // @!has 'foo/outer/inner/macro.addr_of_crate.html'\n         pub(crate) use reexports::addr_of_crate;\n@@ -71,7 +71,7 @@ pub mod outer {\n         // @!has 'foo/outer/inner/macro.addr_of_local.html'\n         use reexports::addr_of_local;\n \n-        // @has 'foo/outer/inner/struct.Foo.html' '//*[@class=\"docblock item-decl\"]' 'pub struct Foo;'\n+        // @has 'foo/outer/inner/struct.Foo.html' '//*[@class=\"item-decl\"]' 'pub struct Foo;'\n         pub use reexports::Foo;\n         // @!has 'foo/outer/inner/struct.FooCrate.html'\n         pub(crate) use reexports::FooCrate;\n@@ -82,7 +82,7 @@ pub mod outer {\n         // @!has 'foo/outer/inner/struct.FooLocal.html'\n         use reexports::FooLocal;\n \n-        // @has 'foo/outer/inner/enum.Bar.html' '//*[@class=\"docblock item-decl\"]' 'pub enum Bar {'\n+        // @has 'foo/outer/inner/enum.Bar.html' '//*[@class=\"item-decl\"]' 'pub enum Bar {'\n         pub use reexports::Bar;\n         // @!has 'foo/outer/inner/enum.BarCrate.html'\n         pub(crate) use reexports::BarCrate;\n@@ -115,7 +115,7 @@ pub mod outer {\n         // @!has 'foo/outer/inner/type.TypeLocal.html'\n         use reexports::TypeLocal;\n \n-        // @has 'foo/outer/inner/union.Union.html' '//*[@class=\"docblock item-decl\"]' 'pub union Union {'\n+        // @has 'foo/outer/inner/union.Union.html' '//*[@class=\"item-decl\"]' 'pub union Union {'\n         pub use reexports::Union;\n         // @!has 'foo/outer/inner/union.UnionCrate.html'\n         pub(crate) use reexports::UnionCrate;"}, {"sha": "47a1d62f5a7a3fc5cb81b1d61e8a055262b112e7", "filename": "src/test/rustdoc/toggle-item-contents.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1b54ee38a315270bfacc46a1498d198a13e2c76e/src%2Ftest%2Frustdoc%2Ftoggle-item-contents.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b54ee38a315270bfacc46a1498d198a13e2c76e/src%2Ftest%2Frustdoc%2Ftoggle-item-contents.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Ftoggle-item-contents.rs?ref=1b54ee38a315270bfacc46a1498d198a13e2c76e", "patch": "@@ -55,7 +55,7 @@ pub union Union {\n \n // @has 'toggle_item_contents/struct.PrivStruct.html'\n // @count - '//details[@class=\"rustdoc-toggle type-contents-toggle\"]' 0\n-// @has - '//div[@class=\"docblock item-decl\"]' '/* private fields */'\n+// @has - '//div[@class=\"item-decl\"]' '/* private fields */'\n pub struct PrivStruct {\n     a: usize,\n     b: usize,"}, {"sha": "791c099cc52336451cbfa9418c460ca82d3834cb", "filename": "src/test/rustdoc/trait_alias.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1b54ee38a315270bfacc46a1498d198a13e2c76e/src%2Ftest%2Frustdoc%2Ftrait_alias.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b54ee38a315270bfacc46a1498d198a13e2c76e/src%2Ftest%2Frustdoc%2Ftrait_alias.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Ftrait_alias.rs?ref=1b54ee38a315270bfacc46a1498d198a13e2c76e", "patch": "@@ -14,13 +14,13 @@ use std::fmt::Debug;\n // @has foo/index.html '//a[@class=\"traitalias\"]' 'Foo'\n \n // @has foo/traitalias.CopyAlias.html\n-// @has - '//section[@id=\"main-content\"]/div[@class=\"docblock item-decl\"]/pre' 'trait CopyAlias = Copy;'\n+// @has - '//section[@id=\"main-content\"]/div[@class=\"item-decl\"]/pre' 'trait CopyAlias = Copy;'\n pub trait CopyAlias = Copy;\n // @has foo/traitalias.Alias2.html\n-// @has - '//section[@id=\"main-content\"]/div[@class=\"docblock item-decl\"]/pre' 'trait Alias2 = Copy + Debug;'\n+// @has - '//section[@id=\"main-content\"]/div[@class=\"item-decl\"]/pre' 'trait Alias2 = Copy + Debug;'\n pub trait Alias2 = Copy + Debug;\n // @has foo/traitalias.Foo.html\n-// @has - '//section[@id=\"main-content\"]/div[@class=\"docblock item-decl\"]/pre' 'trait Foo<T> = Into<T> + Debug;'\n+// @has - '//section[@id=\"main-content\"]/div[@class=\"item-decl\"]/pre' 'trait Foo<T> = Into<T> + Debug;'\n pub trait Foo<T> = Into<T> + Debug;\n // @has foo/fn.bar.html '//a[@href=\"traitalias.Alias2.html\"]' 'Alias2'\n pub fn bar<T>() where T: Alias2 {}"}, {"sha": "6c1b5d31513526b21c8630f5c6b3e2c39d05864b", "filename": "src/test/rustdoc/where.SWhere_Simd_item-decl.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1b54ee38a315270bfacc46a1498d198a13e2c76e/src%2Ftest%2Frustdoc%2Fwhere.SWhere_Simd_item-decl.html", "raw_url": "https://github.com/rust-lang/rust/raw/1b54ee38a315270bfacc46a1498d198a13e2c76e/src%2Ftest%2Frustdoc%2Fwhere.SWhere_Simd_item-decl.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fwhere.SWhere_Simd_item-decl.html?ref=1b54ee38a315270bfacc46a1498d198a13e2c76e", "patch": "@@ -1 +1 @@\n-<div class=\"docblock item-decl\"><pre class=\"rust struct\"><code>pub struct Simd&lt;T&gt;(_) <br /><span class=\"where\">where<br />&#160;&#160;&#160;&#160;T: <a class=\"trait\" href=\"trait.MyTrait.html\" title=\"trait foo::MyTrait\">MyTrait</a></span>;</code></pre></div>\n\\ No newline at end of file\n+<div class=\"item-decl\"><pre class=\"rust struct\"><code>pub struct Simd&lt;T&gt;(_)<br /><span class=\"where\">where<br />&#160;&#160;&#160;&#160;T: <a class=\"trait\" href=\"trait.MyTrait.html\" title=\"trait foo::MyTrait\">MyTrait</a></span>;</code></pre></div>\n\\ No newline at end of file"}, {"sha": "0fbdc0c9cd1e8a16435f3bdf88e2e51d02c1f294", "filename": "src/test/rustdoc/where.SWhere_TraitWhere_item-decl.html", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1b54ee38a315270bfacc46a1498d198a13e2c76e/src%2Ftest%2Frustdoc%2Fwhere.SWhere_TraitWhere_item-decl.html", "raw_url": "https://github.com/rust-lang/rust/raw/1b54ee38a315270bfacc46a1498d198a13e2c76e/src%2Ftest%2Frustdoc%2Fwhere.SWhere_TraitWhere_item-decl.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fwhere.SWhere_TraitWhere_item-decl.html?ref=1b54ee38a315270bfacc46a1498d198a13e2c76e", "patch": "@@ -1,3 +1,3 @@\n-<div class=\"docblock item-decl\"><pre class=\"rust trait\"><code>pub trait TraitWhere {\n-    type <a href=\"#associatedtype.Item\" class=\"associatedtype\">Item</a>&lt;'a&gt;<br />&#160;&#160;&#160; <span class=\"where\">where<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Self: 'a</span>;\n+<div class=\"item-decl\"><pre class=\"rust trait\"><code>pub trait TraitWhere {\n+    type <a href=\"#associatedtype.Item\" class=\"associatedtype\">Item</a>&lt;'a&gt;<br />&#160;&#160;&#160;<span class=\"where\">where<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Self: 'a</span>;\n }</code></pre></div>\n\\ No newline at end of file"}, {"sha": "8818d74ddd087dda5ed6040bcb9c150a1a208d17", "filename": "src/test/rustdoc/where.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1b54ee38a315270bfacc46a1498d198a13e2c76e/src%2Ftest%2Frustdoc%2Fwhere.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b54ee38a315270bfacc46a1498d198a13e2c76e/src%2Ftest%2Frustdoc%2Fwhere.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fwhere.rs?ref=1b54ee38a315270bfacc46a1498d198a13e2c76e", "patch": "@@ -20,13 +20,13 @@ impl<D> Delta<D> where D: MyTrait {\n pub struct Echo<E>(E);\n \n // @has 'foo/struct.Simd.html'\n-// @snapshot SWhere_Simd_item-decl - '//div[@class=\"docblock item-decl\"]'\n+// @snapshot SWhere_Simd_item-decl - '//div[@class=\"item-decl\"]'\n pub struct Simd<T>([T; 1])\n where\n     T: MyTrait;\n \n // @has 'foo/trait.TraitWhere.html'\n-// @snapshot SWhere_TraitWhere_item-decl - '//div[@class=\"docblock item-decl\"]'\n+// @snapshot SWhere_TraitWhere_item-decl - '//div[@class=\"item-decl\"]'\n pub trait TraitWhere {\n     type Item<'a> where Self: 'a;\n }"}, {"sha": "c74866f4a10b89afb03fa19838e394455d05f248", "filename": "src/test/rustdoc/whitespace-after-where-clause.enum.html", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1b54ee38a315270bfacc46a1498d198a13e2c76e/src%2Ftest%2Frustdoc%2Fwhitespace-after-where-clause.enum.html", "raw_url": "https://github.com/rust-lang/rust/raw/1b54ee38a315270bfacc46a1498d198a13e2c76e/src%2Ftest%2Frustdoc%2Fwhitespace-after-where-clause.enum.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fwhitespace-after-where-clause.enum.html?ref=1b54ee38a315270bfacc46a1498d198a13e2c76e", "patch": "@@ -1,4 +1,4 @@\n-<div class=\"docblock item-decl\"><pre class=\"rust enum\"><code>pub enum Cow&lt;'a, B:&#160;?<a class=\"trait\" href=\"{{channel}}/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + 'a&gt; <span class=\"where fmt-newline\">where<br />&#160;&#160;&#160;&#160;B: <a class=\"trait\" href=\"trait.ToOwned.html\" title=\"trait foo::ToOwned\">ToOwned</a>&lt;dyn <a class=\"trait\" href=\"{{channel}}/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt;,&#160;</span>{\n+<div class=\"item-decl\"><pre class=\"rust enum\"><code>pub enum Cow&lt;'a, B:&#160;?<a class=\"trait\" href=\"{{channel}}/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + 'a&gt;<span class=\"where fmt-newline\">where<br />&#160;&#160;&#160;&#160;B: <a class=\"trait\" href=\"trait.ToOwned.html\" title=\"trait foo::ToOwned\">ToOwned</a>&lt;dyn <a class=\"trait\" href=\"{{channel}}/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt;,</span>{\n     Borrowed(<a class=\"primitive\" href=\"{{channel}}/std/primitive.reference.html\">&amp;'a </a>B),\n     Whatever(<a class=\"primitive\" href=\"{{channel}}/std/primitive.u32.html\">u32</a>),\n-}</code></pre></div>\n+}</code></pre></div>\n\\ No newline at end of file"}, {"sha": "ac7d7759821107d0acaf605772640945441a58c3", "filename": "src/test/rustdoc/whitespace-after-where-clause.enum2.html", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1b54ee38a315270bfacc46a1498d198a13e2c76e/src%2Ftest%2Frustdoc%2Fwhitespace-after-where-clause.enum2.html", "raw_url": "https://github.com/rust-lang/rust/raw/1b54ee38a315270bfacc46a1498d198a13e2c76e/src%2Ftest%2Frustdoc%2Fwhitespace-after-where-clause.enum2.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fwhitespace-after-where-clause.enum2.html?ref=1b54ee38a315270bfacc46a1498d198a13e2c76e", "patch": "@@ -1,4 +1,4 @@\n-<div class=\"docblock item-decl\"><pre class=\"rust enum\"><code>pub enum Cow2&lt;'a, B:&#160;?<a class=\"trait\" href=\"{{channel}}/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"trait.ToOwned.html\" title=\"trait foo::ToOwned\">ToOwned</a>&lt;dyn <a class=\"trait\" href=\"{{channel}}/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; + 'a&gt; {\n+<div class=\"item-decl\"><pre class=\"rust enum\"><code>pub enum Cow2&lt;'a, B:&#160;?<a class=\"trait\" href=\"{{channel}}/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"trait.ToOwned.html\" title=\"trait foo::ToOwned\">ToOwned</a>&lt;dyn <a class=\"trait\" href=\"{{channel}}/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; + 'a&gt; {\n     Borrowed(<a class=\"primitive\" href=\"{{channel}}/std/primitive.reference.html\">&amp;'a </a>B),\n     Whatever(<a class=\"primitive\" href=\"{{channel}}/std/primitive.u32.html\">u32</a>),\n-}</code></pre></div>\n+}</code></pre></div>\n\\ No newline at end of file"}, {"sha": "4b740b970fc20a425028f175aab99d4b8f9cd578", "filename": "src/test/rustdoc/whitespace-after-where-clause.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/1b54ee38a315270bfacc46a1498d198a13e2c76e/src%2Ftest%2Frustdoc%2Fwhitespace-after-where-clause.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b54ee38a315270bfacc46a1498d198a13e2c76e/src%2Ftest%2Frustdoc%2Fwhitespace-after-where-clause.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fwhitespace-after-where-clause.rs?ref=1b54ee38a315270bfacc46a1498d198a13e2c76e", "patch": "@@ -4,7 +4,7 @@\n #![crate_name = \"foo\"]\n \n // @has 'foo/trait.ToOwned.html'\n-// @snapshot trait - '//*[@class=\"docblock item-decl\"]'\n+// @snapshot trait - '//*[@class=\"item-decl\"]'\n pub trait ToOwned<T>\n where T: Clone\n {\n@@ -14,7 +14,7 @@ where T: Clone\n }\n \n // @has 'foo/trait.ToOwned2.html'\n-// @snapshot trait2 - '//*[@class=\"docblock item-decl\"]'\n+// @snapshot trait2 - '//*[@class=\"item-decl\"]'\n // There should be a whitespace before `{` in this case!\n pub trait ToOwned2<T: Clone> {\n     type Owned;\n@@ -23,7 +23,7 @@ pub trait ToOwned2<T: Clone> {\n }\n \n // @has 'foo/enum.Cow.html'\n-// @snapshot enum - '//*[@class=\"docblock item-decl\"]'\n+// @snapshot enum - '//*[@class=\"item-decl\"]'\n pub enum Cow<'a, B: ?Sized + 'a>\n where\n     B: ToOwned<Clone>,\n@@ -33,15 +33,15 @@ where\n }\n \n // @has 'foo/enum.Cow2.html'\n-// @snapshot enum2 - '//*[@class=\"docblock item-decl\"]'\n+// @snapshot enum2 - '//*[@class=\"item-decl\"]'\n // There should be a whitespace before `{` in this case!\n pub enum Cow2<'a, B: ?Sized + ToOwned<Clone> + 'a> {\n     Borrowed(&'a B),\n     Whatever(u32),\n }\n \n // @has 'foo/struct.Struct.html'\n-// @snapshot struct - '//*[@class=\"docblock item-decl\"]'\n+// @snapshot struct - '//*[@class=\"item-decl\"]'\n pub struct Struct<'a, B: ?Sized + 'a>\n where\n     B: ToOwned<Clone>,\n@@ -51,15 +51,15 @@ where\n }\n \n // @has 'foo/struct.Struct2.html'\n-// @snapshot struct2 - '//*[@class=\"docblock item-decl\"]'\n+// @snapshot struct2 - '//*[@class=\"item-decl\"]'\n // There should be a whitespace before `{` in this case!\n pub struct Struct2<'a, B: ?Sized + ToOwned<Clone> + 'a> {\n     pub a: &'a B,\n     pub b: u32,\n }\n \n // @has 'foo/union.Union.html'\n-// @snapshot union - '//*[@class=\"docblock item-decl\"]'\n+// @snapshot union - '//*[@class=\"item-decl\"]'\n pub union Union<'a, B: ?Sized + 'a>\n where\n     B: ToOwned<Clone>,\n@@ -69,7 +69,7 @@ where\n }\n \n // @has 'foo/union.Union2.html'\n-// @snapshot union2 - '//*[@class=\"docblock item-decl\"]'\n+// @snapshot union2 - '//*[@class=\"item-decl\"]'\n // There should be a whitespace before `{` in this case!\n pub union Union2<'a, B: ?Sized + ToOwned<Clone> + 'a> {\n     a: &'a B,"}, {"sha": "1ba1367d20f72f1f5341d01a9a284807aac50968", "filename": "src/test/rustdoc/whitespace-after-where-clause.struct.html", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1b54ee38a315270bfacc46a1498d198a13e2c76e/src%2Ftest%2Frustdoc%2Fwhitespace-after-where-clause.struct.html", "raw_url": "https://github.com/rust-lang/rust/raw/1b54ee38a315270bfacc46a1498d198a13e2c76e/src%2Ftest%2Frustdoc%2Fwhitespace-after-where-clause.struct.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fwhitespace-after-where-clause.struct.html?ref=1b54ee38a315270bfacc46a1498d198a13e2c76e", "patch": "@@ -1,4 +1,4 @@\n-<div class=\"docblock item-decl\"><pre class=\"rust struct\"><code>pub struct Struct&lt;'a, B:&#160;?<a class=\"trait\" href=\"{{channel}}/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + 'a&gt; <span class=\"where fmt-newline\">where<br />&#160;&#160;&#160;&#160;B: <a class=\"trait\" href=\"trait.ToOwned.html\" title=\"trait foo::ToOwned\">ToOwned</a>&lt;dyn <a class=\"trait\" href=\"{{channel}}/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt;,&#160;</span>{\n+<div class=\"item-decl\"><pre class=\"rust struct\"><code>pub struct Struct&lt;'a, B:&#160;?<a class=\"trait\" href=\"{{channel}}/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + 'a&gt;<span class=\"where fmt-newline\">where<br />&#160;&#160;&#160;&#160;B: <a class=\"trait\" href=\"trait.ToOwned.html\" title=\"trait foo::ToOwned\">ToOwned</a>&lt;dyn <a class=\"trait\" href=\"{{channel}}/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt;,</span>{\n     pub a: <a class=\"primitive\" href=\"{{channel}}/std/primitive.reference.html\">&amp;'a </a>B,\n     pub b: <a class=\"primitive\" href=\"{{channel}}/std/primitive.u32.html\">u32</a>,\n-}</code></pre></div>\n+}</code></pre></div>\n\\ No newline at end of file"}, {"sha": "fb06b0f77c5ce5f2c431f1a84bac8d4362965f52", "filename": "src/test/rustdoc/whitespace-after-where-clause.struct2.html", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1b54ee38a315270bfacc46a1498d198a13e2c76e/src%2Ftest%2Frustdoc%2Fwhitespace-after-where-clause.struct2.html", "raw_url": "https://github.com/rust-lang/rust/raw/1b54ee38a315270bfacc46a1498d198a13e2c76e/src%2Ftest%2Frustdoc%2Fwhitespace-after-where-clause.struct2.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fwhitespace-after-where-clause.struct2.html?ref=1b54ee38a315270bfacc46a1498d198a13e2c76e", "patch": "@@ -1,4 +1,4 @@\n-<div class=\"docblock item-decl\"><pre class=\"rust struct\"><code>pub struct Struct2&lt;'a, B:&#160;?<a class=\"trait\" href=\"{{channel}}/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"trait.ToOwned.html\" title=\"trait foo::ToOwned\">ToOwned</a>&lt;dyn <a class=\"trait\" href=\"{{channel}}/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; + 'a&gt; {\n+<div class=\"item-decl\"><pre class=\"rust struct\"><code>pub struct Struct2&lt;'a, B:&#160;?<a class=\"trait\" href=\"{{channel}}/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"trait.ToOwned.html\" title=\"trait foo::ToOwned\">ToOwned</a>&lt;dyn <a class=\"trait\" href=\"{{channel}}/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; + 'a&gt; {\n     pub a: <a class=\"primitive\" href=\"{{channel}}/std/primitive.reference.html\">&amp;'a </a>B,\n     pub b: <a class=\"primitive\" href=\"{{channel}}/std/primitive.u32.html\">u32</a>,\n-}</code></pre></div>\n+}</code></pre></div>\n\\ No newline at end of file"}, {"sha": "16b5582370353acec5e1988580e8c7fd3259b8a9", "filename": "src/test/rustdoc/whitespace-after-where-clause.trait.html", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1b54ee38a315270bfacc46a1498d198a13e2c76e/src%2Ftest%2Frustdoc%2Fwhitespace-after-where-clause.trait.html", "raw_url": "https://github.com/rust-lang/rust/raw/1b54ee38a315270bfacc46a1498d198a13e2c76e/src%2Ftest%2Frustdoc%2Fwhitespace-after-where-clause.trait.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fwhitespace-after-where-clause.trait.html?ref=1b54ee38a315270bfacc46a1498d198a13e2c76e", "patch": "@@ -1,6 +1,6 @@\n-<div class=\"docblock item-decl\"><pre class=\"rust trait\"><code>pub trait ToOwned&lt;T&gt; <span class=\"where fmt-newline\">where<br />&#160;&#160;&#160;&#160;T: <a class=\"trait\" href=\"{{channel}}/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,&#160;</span>{\n+<div class=\"item-decl\"><pre class=\"rust trait\"><code>pub trait ToOwned&lt;T&gt;<span class=\"where fmt-newline\">where<br />&#160;&#160;&#160;&#160;T: <a class=\"trait\" href=\"{{channel}}/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</span>{\n     type <a href=\"#associatedtype.Owned\" class=\"associatedtype\">Owned</a>;\n \n     fn <a href=\"#tymethod.to_owned\" class=\"fnname\">to_owned</a>(&amp;self) -&gt; Self::<a class=\"associatedtype\" href=\"trait.ToOwned.html#associatedtype.Owned\" title=\"type foo::ToOwned::Owned\">Owned</a>;\n <span class=\"item-spacer\" />    fn <a href=\"#tymethod.whatever\" class=\"fnname\">whatever</a>(&amp;self) -&gt; T;\n-}</code></pre></div>\n+}</code></pre></div>\n\\ No newline at end of file"}, {"sha": "eeca6e1f5008161c9b9dfae288020d845c715ed3", "filename": "src/test/rustdoc/whitespace-after-where-clause.trait2.html", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1b54ee38a315270bfacc46a1498d198a13e2c76e/src%2Ftest%2Frustdoc%2Fwhitespace-after-where-clause.trait2.html", "raw_url": "https://github.com/rust-lang/rust/raw/1b54ee38a315270bfacc46a1498d198a13e2c76e/src%2Ftest%2Frustdoc%2Fwhitespace-after-where-clause.trait2.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fwhitespace-after-where-clause.trait2.html?ref=1b54ee38a315270bfacc46a1498d198a13e2c76e", "patch": "@@ -1,6 +1,6 @@\n-<div class=\"docblock item-decl\"><pre class=\"rust trait\"><code>pub trait ToOwned2&lt;T:&#160;<a class=\"trait\" href=\"{{channel}}/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; {\n+<div class=\"item-decl\"><pre class=\"rust trait\"><code>pub trait ToOwned2&lt;T:&#160;<a class=\"trait\" href=\"{{channel}}/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; {\n     type <a href=\"#associatedtype.Owned\" class=\"associatedtype\">Owned</a>;\n \n     fn <a href=\"#tymethod.to_owned\" class=\"fnname\">to_owned</a>(&amp;self) -&gt; Self::<a class=\"associatedtype\" href=\"trait.ToOwned2.html#associatedtype.Owned\" title=\"type foo::ToOwned2::Owned\">Owned</a>;\n <span class=\"item-spacer\" />    fn <a href=\"#tymethod.whatever\" class=\"fnname\">whatever</a>(&amp;self) -&gt; T;\n-}</code></pre></div>\n+}</code></pre></div>\n\\ No newline at end of file"}, {"sha": "0dfb6407d45f1f60ac0e7eb3593e2a2636f6dde2", "filename": "src/test/rustdoc/whitespace-after-where-clause.union.html", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1b54ee38a315270bfacc46a1498d198a13e2c76e/src%2Ftest%2Frustdoc%2Fwhitespace-after-where-clause.union.html", "raw_url": "https://github.com/rust-lang/rust/raw/1b54ee38a315270bfacc46a1498d198a13e2c76e/src%2Ftest%2Frustdoc%2Fwhitespace-after-where-clause.union.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fwhitespace-after-where-clause.union.html?ref=1b54ee38a315270bfacc46a1498d198a13e2c76e", "patch": "@@ -1,3 +1,3 @@\n-<div class=\"docblock item-decl\"><pre class=\"rust union\"><code>pub union Union&lt;'a, B:&#160;?<a class=\"trait\" href=\"{{channel}}/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + 'a&gt; <span class=\"where fmt-newline\">where<br />&#160;&#160;&#160;&#160;B: <a class=\"trait\" href=\"trait.ToOwned.html\" title=\"trait foo::ToOwned\">ToOwned</a>&lt;dyn <a class=\"trait\" href=\"{{channel}}/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt;,&#160;</span>{\n+<div class=\"item-decl\"><pre class=\"rust union\"><code>pub union Union&lt;'a, B:&#160;?<a class=\"trait\" href=\"{{channel}}/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + 'a&gt;<span class=\"where fmt-newline\">where<br />&#160;&#160;&#160;&#160;B: <a class=\"trait\" href=\"trait.ToOwned.html\" title=\"trait foo::ToOwned\">ToOwned</a>&lt;dyn <a class=\"trait\" href=\"{{channel}}/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt;,</span>{\n     /* private fields */\n-}</code></pre></div>\n+}</code></pre></div>\n\\ No newline at end of file"}, {"sha": "0d237df53c7f463605bce968c4d96a3d8c0d876b", "filename": "src/test/rustdoc/whitespace-after-where-clause.union2.html", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1b54ee38a315270bfacc46a1498d198a13e2c76e/src%2Ftest%2Frustdoc%2Fwhitespace-after-where-clause.union2.html", "raw_url": "https://github.com/rust-lang/rust/raw/1b54ee38a315270bfacc46a1498d198a13e2c76e/src%2Ftest%2Frustdoc%2Fwhitespace-after-where-clause.union2.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fwhitespace-after-where-clause.union2.html?ref=1b54ee38a315270bfacc46a1498d198a13e2c76e", "patch": "@@ -1,3 +1,3 @@\n-<div class=\"docblock item-decl\"><pre class=\"rust union\"><code>pub union Union2&lt;'a, B:&#160;?<a class=\"trait\" href=\"{{channel}}/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"trait.ToOwned.html\" title=\"trait foo::ToOwned\">ToOwned</a>&lt;dyn <a class=\"trait\" href=\"{{channel}}/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; + 'a&gt; {\n+<div class=\"item-decl\"><pre class=\"rust union\"><code>pub union Union2&lt;'a, B:&#160;?<a class=\"trait\" href=\"{{channel}}/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"trait.ToOwned.html\" title=\"trait foo::ToOwned\">ToOwned</a>&lt;dyn <a class=\"trait\" href=\"{{channel}}/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; + 'a&gt; {\n     /* private fields */\n-}</code></pre></div>\n+}</code></pre></div>\n\\ No newline at end of file"}]}