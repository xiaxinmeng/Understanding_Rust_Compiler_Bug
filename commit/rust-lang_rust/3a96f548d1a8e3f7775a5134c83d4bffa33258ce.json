{"sha": "3a96f548d1a8e3f7775a5134c83d4bffa33258ce", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNhOTZmNTQ4ZDFhOGUzZjc3NzVhNTEzNGM4M2Q0YmZmYTMzMjU4Y2U=", "commit": {"author": {"name": "Eduardo Broto", "email": "ebroto@tutanota.com", "date": "2020-04-26T22:12:51Z"}, "committer": {"name": "Eduardo Broto", "email": "ebroto@tutanota.com", "date": "2020-04-27T19:20:08Z"}, "message": "used_underscore_binding: do not lint on `await` desugaring", "tree": {"sha": "95963021dee10fa297d03a4668e1cdce409a9bb8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/95963021dee10fa297d03a4668e1cdce409a9bb8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3a96f548d1a8e3f7775a5134c83d4bffa33258ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3a96f548d1a8e3f7775a5134c83d4bffa33258ce", "html_url": "https://github.com/rust-lang/rust/commit/3a96f548d1a8e3f7775a5134c83d4bffa33258ce", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3a96f548d1a8e3f7775a5134c83d4bffa33258ce/comments", "author": {"login": "ebroto", "id": 816908, "node_id": "MDQ6VXNlcjgxNjkwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/816908?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebroto", "html_url": "https://github.com/ebroto", "followers_url": "https://api.github.com/users/ebroto/followers", "following_url": "https://api.github.com/users/ebroto/following{/other_user}", "gists_url": "https://api.github.com/users/ebroto/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebroto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebroto/subscriptions", "organizations_url": "https://api.github.com/users/ebroto/orgs", "repos_url": "https://api.github.com/users/ebroto/repos", "events_url": "https://api.github.com/users/ebroto/events{/privacy}", "received_events_url": "https://api.github.com/users/ebroto/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ebroto", "id": 816908, "node_id": "MDQ6VXNlcjgxNjkwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/816908?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebroto", "html_url": "https://github.com/ebroto", "followers_url": "https://api.github.com/users/ebroto/followers", "following_url": "https://api.github.com/users/ebroto/following{/other_user}", "gists_url": "https://api.github.com/users/ebroto/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebroto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebroto/subscriptions", "organizations_url": "https://api.github.com/users/ebroto/orgs", "repos_url": "https://api.github.com/users/ebroto/repos", "events_url": "https://api.github.com/users/ebroto/events{/privacy}", "received_events_url": "https://api.github.com/users/ebroto/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f2486b3d35efc551ea0b5b549120c05f3ab1d636", "url": "https://api.github.com/repos/rust-lang/rust/commits/f2486b3d35efc551ea0b5b549120c05f3ab1d636", "html_url": "https://github.com/rust-lang/rust/commit/f2486b3d35efc551ea0b5b549120c05f3ab1d636"}], "stats": {"total": 23, "additions": 16, "deletions": 7}, "files": [{"sha": "e1d524c2231e4841bb1c91366c92a240f1156f0e", "filename": "clippy_lints/src/misc.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/3a96f548d1a8e3f7775a5134c83d4bffa33258ce/clippy_lints%2Fsrc%2Fmisc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a96f548d1a8e3f7775a5134c83d4bffa33258ce/clippy_lints%2Fsrc%2Fmisc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmisc.rs?ref=3a96f548d1a8e3f7775a5134c83d4bffa33258ce", "patch": "@@ -9,6 +9,7 @@ use rustc_hir::{\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_middle::ty;\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n+use rustc_span::hygiene::DesugaringKind;\n use rustc_span::source_map::{ExpnKind, Span};\n \n use crate::consts::{constant, Constant};\n@@ -399,8 +400,8 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for MiscLints {\n             },\n             _ => {},\n         }\n-        if in_attributes_expansion(expr) {\n-            // Don't lint things expanded by #[derive(...)], etc\n+        if in_attributes_expansion(expr) || expr.span.is_desugaring(DesugaringKind::Await) {\n+            // Don't lint things expanded by #[derive(...)], etc or `await` desugaring\n             return;\n         }\n         let binding = match expr.kind {"}, {"sha": "c94bee1d162303d68714a7b40d1ab15c15dbfa24", "filename": "tests/ui/used_underscore_binding.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3a96f548d1a8e3f7775a5134c83d4bffa33258ce/tests%2Fui%2Fused_underscore_binding.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a96f548d1a8e3f7775a5134c83d4bffa33258ce/tests%2Fui%2Fused_underscore_binding.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fused_underscore_binding.rs?ref=3a96f548d1a8e3f7775a5134c83d4bffa33258ce", "patch": "@@ -1,3 +1,4 @@\n+// edition:2018\n // aux-build:proc_macro_derive.rs\n \n #![feature(rustc_private)]\n@@ -86,6 +87,12 @@ fn non_variables() {\n     let f = _fn_test;\n     f();\n }\n+// Tests that we do not lint if the binding comes from await desugaring.\n+// See issue 5360.\n+async fn await_desugaring() {\n+    async fn foo() {}\n+    foo().await;\n+}\n \n fn main() {\n     let foo = 0u32;\n@@ -99,4 +106,5 @@ fn main() {\n     let _ = unused_underscore_complex(foo);\n     let _ = multiple_underscores(foo);\n     non_variables();\n+    await_desugaring();\n }"}, {"sha": "6cbc328aa02842953727399abef447fc294b64aa", "filename": "tests/ui/used_underscore_binding.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/3a96f548d1a8e3f7775a5134c83d4bffa33258ce/tests%2Fui%2Fused_underscore_binding.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3a96f548d1a8e3f7775a5134c83d4bffa33258ce/tests%2Fui%2Fused_underscore_binding.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fused_underscore_binding.stderr?ref=3a96f548d1a8e3f7775a5134c83d4bffa33258ce", "patch": "@@ -1,31 +1,31 @@\n error: used binding `_foo` which is prefixed with an underscore. A leading underscore signals that a binding will not be used.\n-  --> $DIR/used_underscore_binding.rs:25:5\n+  --> $DIR/used_underscore_binding.rs:26:5\n    |\n LL |     _foo + 1\n    |     ^^^^\n    |\n    = note: `-D clippy::used-underscore-binding` implied by `-D warnings`\n \n error: used binding `_foo` which is prefixed with an underscore. A leading underscore signals that a binding will not be used.\n-  --> $DIR/used_underscore_binding.rs:30:20\n+  --> $DIR/used_underscore_binding.rs:31:20\n    |\n LL |     println!(\"{}\", _foo);\n    |                    ^^^^\n \n error: used binding `_foo` which is prefixed with an underscore. A leading underscore signals that a binding will not be used.\n-  --> $DIR/used_underscore_binding.rs:31:16\n+  --> $DIR/used_underscore_binding.rs:32:16\n    |\n LL |     assert_eq!(_foo, _foo);\n    |                ^^^^\n \n error: used binding `_foo` which is prefixed with an underscore. A leading underscore signals that a binding will not be used.\n-  --> $DIR/used_underscore_binding.rs:31:22\n+  --> $DIR/used_underscore_binding.rs:32:22\n    |\n LL |     assert_eq!(_foo, _foo);\n    |                      ^^^^\n \n error: used binding `_underscore_field` which is prefixed with an underscore. A leading underscore signals that a binding will not be used.\n-  --> $DIR/used_underscore_binding.rs:44:5\n+  --> $DIR/used_underscore_binding.rs:45:5\n    |\n LL |     s._underscore_field += 1;\n    |     ^^^^^^^^^^^^^^^^^^^"}]}