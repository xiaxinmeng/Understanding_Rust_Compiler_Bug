{"sha": "5193728e1d650e6732a42ac5afd57609ff82e407", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUxOTM3MjhlMWQ2NTBlNjczMmE0MmFjNWFmZDU3NjA5ZmY4MmU0MDc=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-06-02T18:01:42Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-06-02T18:01:42Z"}, "message": "Merge #9114\n\n9114: Fix bind patterns always being treated as ref taking patterns r=Veykril a=Veykril\n\nFixes #9107\r\nbors r+\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>", "tree": {"sha": "3805a801ee5b55ade76953d822844958350f8bd9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3805a801ee5b55ade76953d822844958350f8bd9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5193728e1d650e6732a42ac5afd57609ff82e407", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgt8eGCRBK7hj4Ov3rIwAAJ3sIAJpNcuNDDGL0OVpiicYRoE9Z\nCAaqZyNYR66bbpDifAvynz89ywXmC62y6lq/qds3WcJZzCLig+mcACMWro8Pqz0F\n2/GrKLIhh+MYhQzPNhh7SqwicExCdpaf9hLu18ng+o/xaoMKXmzebYzYW7fKOZdj\ntLecPSx54qm+sb6/33dh7aJ/15FdDngJGIBq32MEyGI5/mA50eh8r059AApglAZB\nTSqyoQv9nBWH9nqNJ8R9pUWEzxgxzQVcedNVtkLbkXzaXHkvp8VSsfA8PdGyy3gq\nheLxUVmM9L+blpaHHLaLNnDylbWa6hrIsXbBNkiR6imqP0CWPv/FETTL/RpQf9Y=\n=zYi9\n-----END PGP SIGNATURE-----\n", "payload": "tree 3805a801ee5b55ade76953d822844958350f8bd9\nparent 5be653d426e3e3fd253f41f85e7d280a82037da9\nparent ded4e7cc836dd2f00ab5825e783c11e52db18d38\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1622656902 +0000\ncommitter GitHub <noreply@github.com> 1622656902 +0000\n\nMerge #9114\n\n9114: Fix bind patterns always being treated as ref taking patterns r=Veykril a=Veykril\n\nFixes #9107\r\nbors r+\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5193728e1d650e6732a42ac5afd57609ff82e407", "html_url": "https://github.com/rust-lang/rust/commit/5193728e1d650e6732a42ac5afd57609ff82e407", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5193728e1d650e6732a42ac5afd57609ff82e407/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5be653d426e3e3fd253f41f85e7d280a82037da9", "url": "https://api.github.com/repos/rust-lang/rust/commits/5be653d426e3e3fd253f41f85e7d280a82037da9", "html_url": "https://github.com/rust-lang/rust/commit/5be653d426e3e3fd253f41f85e7d280a82037da9"}, {"sha": "ded4e7cc836dd2f00ab5825e783c11e52db18d38", "url": "https://api.github.com/repos/rust-lang/rust/commits/ded4e7cc836dd2f00ab5825e783c11e52db18d38", "html_url": "https://github.com/rust-lang/rust/commit/ded4e7cc836dd2f00ab5825e783c11e52db18d38"}], "stats": {"total": 51, "additions": 32, "deletions": 19}, "files": [{"sha": "c97b4954428aab8648c0ad9cbefc616cbd0ad9f1", "filename": "crates/hir_ty/src/infer/pat.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5193728e1d650e6732a42ac5afd57609ff82e407/crates%2Fhir_ty%2Fsrc%2Finfer%2Fpat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5193728e1d650e6732a42ac5afd57609ff82e407/crates%2Fhir_ty%2Fsrc%2Finfer%2Fpat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Finfer%2Fpat.rs?ref=5193728e1d650e6732a42ac5afd57609ff82e407", "patch": "@@ -290,6 +290,10 @@ fn is_non_ref_pat(body: &hir_def::body::Body, pat: PatId) -> bool {\n             Expr::Literal(Literal::String(..)) => false,\n             _ => true,\n         },\n+        Pat::Bind { mode: BindingAnnotation::Mutable, subpat: Some(subpat), .. }\n+        | Pat::Bind { mode: BindingAnnotation::Unannotated, subpat: Some(subpat), .. } => {\n+            is_non_ref_pat(body, *subpat)\n+        }\n         Pat::Wild | Pat::Bind { .. } | Pat::Ref { .. } | Pat::Box { .. } | Pat::Missing => false,\n     }\n }"}, {"sha": "7d00cee9b3c25e15e9cb90c23e685d41ece3b6ff", "filename": "crates/hir_ty/src/tests/patterns.rs", "status": "modified", "additions": 28, "deletions": 19, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/5193728e1d650e6732a42ac5afd57609ff82e407/crates%2Fhir_ty%2Fsrc%2Ftests%2Fpatterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5193728e1d650e6732a42ac5afd57609ff82e407/crates%2Fhir_ty%2Fsrc%2Ftests%2Fpatterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Ftests%2Fpatterns.rs?ref=5193728e1d650e6732a42ac5afd57609ff82e407", "patch": "@@ -20,6 +20,8 @@ fn infer_pattern() {\n                 let h = val;\n             }\n \n+            if let x @ true = &true {}\n+\n             let lambda = |a: u64, b, c: i32| { a + b; c };\n \n             let ref ref_to_x = x;\n@@ -30,7 +32,7 @@ fn infer_pattern() {\n         \"#,\n         expect![[r#\"\n             8..9 'x': &i32\n-            17..368 '{     ...o_x; }': ()\n+            17..400 '{     ...o_x; }': ()\n             27..28 'y': &i32\n             31..32 'x': &i32\n             42..44 '&z': &i32\n@@ -59,24 +61,31 @@ fn infer_pattern() {\n             176..204 '{     ...     }': ()\n             190..191 'h': {unknown}\n             194..197 'val': {unknown}\n-            214..220 'lambda': |u64, u64, i32| -> i32\n-            223..255 '|a: u6...b; c }': |u64, u64, i32| -> i32\n-            224..225 'a': u64\n-            232..233 'b': u64\n-            235..236 'c': i32\n-            243..255 '{ a + b; c }': i32\n-            245..246 'a': u64\n-            245..250 'a + b': u64\n-            249..250 'b': u64\n-            252..253 'c': i32\n-            266..278 'ref ref_to_x': &&i32\n-            281..282 'x': &i32\n-            292..301 'mut mut_x': &i32\n-            304..305 'x': &i32\n-            315..335 'ref mu...f_to_x': &mut &i32\n-            338..339 'x': &i32\n-            349..350 'k': &mut &i32\n-            353..365 'mut_ref_to_x': &mut &i32\n+            210..236 'if let...rue {}': ()\n+            217..225 'x @ true': &bool\n+            221..225 'true': bool\n+            221..225 'true': bool\n+            228..233 '&true': &bool\n+            229..233 'true': bool\n+            234..236 '{}': ()\n+            246..252 'lambda': |u64, u64, i32| -> i32\n+            255..287 '|a: u6...b; c }': |u64, u64, i32| -> i32\n+            256..257 'a': u64\n+            264..265 'b': u64\n+            267..268 'c': i32\n+            275..287 '{ a + b; c }': i32\n+            277..278 'a': u64\n+            277..282 'a + b': u64\n+            281..282 'b': u64\n+            284..285 'c': i32\n+            298..310 'ref ref_to_x': &&i32\n+            313..314 'x': &i32\n+            324..333 'mut mut_x': &i32\n+            336..337 'x': &i32\n+            347..367 'ref mu...f_to_x': &mut &i32\n+            370..371 'x': &i32\n+            381..382 'k': &mut &i32\n+            385..397 'mut_ref_to_x': &mut &i32\n         \"#]],\n     );\n }"}]}