{"sha": "27490769cee7d06e5514786a4728260ab4dcc36b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI3NDkwNzY5Y2VlN2QwNmU1NTE0Nzg2YTQ3MjgyNjBhYjRkY2MzNmI=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-10-11T21:57:13Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-10-11T23:00:30Z"}, "message": "Update FIXME number", "tree": {"sha": "35e621f002228dbb3612561c93bce9ab052bbcb0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/35e621f002228dbb3612561c93bce9ab052bbcb0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/27490769cee7d06e5514786a4728260ab4dcc36b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/27490769cee7d06e5514786a4728260ab4dcc36b", "html_url": "https://github.com/rust-lang/rust/commit/27490769cee7d06e5514786a4728260ab4dcc36b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/27490769cee7d06e5514786a4728260ab4dcc36b/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fc4da29b4f5e5b5eb4a5c47c724edde399d28145", "url": "https://api.github.com/repos/rust-lang/rust/commits/fc4da29b4f5e5b5eb4a5c47c724edde399d28145", "html_url": "https://github.com/rust-lang/rust/commit/fc4da29b4f5e5b5eb4a5c47c724edde399d28145"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "1bb23203007583f36a24e3b3d272f7f21ee53503", "filename": "src/libcore/task.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/27490769cee7d06e5514786a4728260ab4dcc36b/src%2Flibcore%2Ftask.rs", "raw_url": "https://github.com/rust-lang/rust/raw/27490769cee7d06e5514786a4728260ab4dcc36b/src%2Flibcore%2Ftask.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftask.rs?ref=27490769cee7d06e5514786a4728260ab4dcc36b", "patch": "@@ -217,7 +217,7 @@ pub type TaskOpts = {\n // sidestep that whole issue by making builders uncopyable and making\n // the run function move them in.\n \n-// FIXME (#2585): Replace the 'consumed' bit with move mode on self\n+// FIXME (#3724): Replace the 'consumed' bit with move mode on self\n pub enum TaskBuilder = {\n     opts: TaskOpts,\n     gen_body: fn@(v: fn~()) -> fn~(),\n@@ -349,7 +349,7 @@ impl TaskBuilder {\n      * Fails if a future_result was already set for this task.\n      */\n     fn future_result(blk: fn(v: future::Future<TaskResult>)) -> TaskBuilder {\n-        // FIXME (#1087, #1857): Once linked failure and notification are\n+        // FIXME (#3725): Once linked failure and notification are\n         // handled in the library, I can imagine implementing this by just\n         // registering an arbitrary number of task::on_exit handlers and\n         // sending out messages.\n@@ -758,8 +758,8 @@ pub unsafe fn atomically<U>(f: fn() -> U) -> U {\n fn test_cant_dup_task_builder() {\n     let b = task().unlinked();\n     do b.spawn { }\n-    // FIXME(#2585): For now, this is a -runtime- failure, because we haven't\n-    // got modes on self. When 2585 is fixed, this test should fail to compile\n+    // FIXME(#3724): For now, this is a -runtime- failure, because we haven't\n+    // got move mode on self. When 3724 is fixed, this test should fail to compile\n     // instead, and should go in tests/compile-fail.\n     do b.spawn { } // b should have been consumed by the previous call\n }"}]}