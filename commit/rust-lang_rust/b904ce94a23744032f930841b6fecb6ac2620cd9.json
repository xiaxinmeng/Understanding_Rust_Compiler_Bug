{"sha": "b904ce94a23744032f930841b6fecb6ac2620cd9", "node_id": "C_kwDOAAsO6NoAKGI5MDRjZTk0YTIzNzQ0MDMyZjkzMDg0MWI2ZmVjYjZhYzI2MjBjZDk", "commit": {"author": {"name": "Le\u00f3n Orell Valerian Liehr", "email": "me@fmease.dev", "date": "2023-04-05T04:33:52Z"}, "committer": {"name": "Le\u00f3n Orell Valerian Liehr", "email": "me@fmease.dev", "date": "2023-04-05T18:28:18Z"}, "message": "account for self type when looking for source of unsolved ty var", "tree": {"sha": "c4d3f67ac23de99d9f70398b2deef9392efca855", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c4d3f67ac23de99d9f70398b2deef9392efca855"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b904ce94a23744032f930841b6fecb6ac2620cd9", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEXSQFaHGAjVoD5I3F0XoHIV9o5xMFAmQtvcMACgkQ0XoHIV9o\n5xNmFA/8CWUtGKO3rkSGCNbJgSRGJGzPkTdFa9X7+PQsmBvhAQlx3FWEuhyoUqTy\nXCG0es8NuYhxDtN9SQOkFNkSsGiYWSsYSnXiB49vP/U8ZjoIwoH0eROUcS4all4K\nNiDCp8L5HA5hn9ZoAXYQ0TPEJAMAu/fTjKQlt1uP8QrK4MyRdleT/lvHZXVqh9N/\nqP51CLHLVVkKhefFP2O86o+bivHVTPgHJ5JN5Hq+IJfHS19C41ViHILP4rpqhJ1p\nTZWHqOCinS+XJfnEsBmeEfz8xvdFW76kX4UCxUAnKSglOkVNHwJS5yxkDDKeQaRU\nA1CZmvkbnhR1iC/Axov8IUMN6jRSHh48ZHi/nvdLSixf+RmrdJbWo5LPRV/iVXuQ\nRrlcvta8yxolPfc+dRupCkhwM7lcumOoNJc+3oWF+I5ufwUwbKbBJbBMcEIKChjk\n1zB/tybbzPdqKCEHVjv3jkzwbCgDWsMRCcn9FG4wY+xDbUbNBO3r3/RL2JbW6Nvu\nou3lphji+Xw6mMxYfPzKKQQeF9F9qyElaa5NMBbUn0V7I7TecfLsZLlo5iTRCumV\nN1n/F3yZr+IQQSFQZDOcm72BpkwEe7DwMbg9YFXSBGa8iEOW0FL1Uup5SyqzrUUQ\nmwBmfQoICrf82FqG46DAg5z2yv19PHooEGCn0LSzATy7ENB4BcE=\n=KaNe\n-----END PGP SIGNATURE-----", "payload": "tree c4d3f67ac23de99d9f70398b2deef9392efca855\nparent 480068c2359ea65df4481788b5ce717a548ce171\nauthor Le\u00f3n Orell Valerian Liehr <me@fmease.dev> 1680669232 +0200\ncommitter Le\u00f3n Orell Valerian Liehr <me@fmease.dev> 1680719298 +0200\n\naccount for self type when looking for source of unsolved ty var\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b904ce94a23744032f930841b6fecb6ac2620cd9", "html_url": "https://github.com/rust-lang/rust/commit/b904ce94a23744032f930841b6fecb6ac2620cd9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b904ce94a23744032f930841b6fecb6ac2620cd9/comments", "author": {"login": "fmease", "id": 14913065, "node_id": "MDQ6VXNlcjE0OTEzMDY1", "avatar_url": "https://avatars.githubusercontent.com/u/14913065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmease", "html_url": "https://github.com/fmease", "followers_url": "https://api.github.com/users/fmease/followers", "following_url": "https://api.github.com/users/fmease/following{/other_user}", "gists_url": "https://api.github.com/users/fmease/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmease/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmease/subscriptions", "organizations_url": "https://api.github.com/users/fmease/orgs", "repos_url": "https://api.github.com/users/fmease/repos", "events_url": "https://api.github.com/users/fmease/events{/privacy}", "received_events_url": "https://api.github.com/users/fmease/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fmease", "id": 14913065, "node_id": "MDQ6VXNlcjE0OTEzMDY1", "avatar_url": "https://avatars.githubusercontent.com/u/14913065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmease", "html_url": "https://github.com/fmease", "followers_url": "https://api.github.com/users/fmease/followers", "following_url": "https://api.github.com/users/fmease/following{/other_user}", "gists_url": "https://api.github.com/users/fmease/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmease/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmease/subscriptions", "organizations_url": "https://api.github.com/users/fmease/orgs", "repos_url": "https://api.github.com/users/fmease/repos", "events_url": "https://api.github.com/users/fmease/events{/privacy}", "received_events_url": "https://api.github.com/users/fmease/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "480068c2359ea65df4481788b5ce717a548ce171", "url": "https://api.github.com/repos/rust-lang/rust/commits/480068c2359ea65df4481788b5ce717a548ce171", "html_url": "https://github.com/rust-lang/rust/commit/480068c2359ea65df4481788b5ce717a548ce171"}], "stats": {"total": 57, "additions": 52, "deletions": 5}, "files": [{"sha": "d7b900ca02d3e0bca860b237f0bd7842d8441258", "filename": "compiler/rustc_infer/src/infer/error_reporting/need_type_info.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/b904ce94a23744032f930841b6fecb6ac2620cd9/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fneed_type_info.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b904ce94a23744032f930841b6fecb6ac2620cd9/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fneed_type_info.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fneed_type_info.rs?ref=b904ce94a23744032f930841b6fecb6ac2620cd9", "patch": "@@ -1191,11 +1191,14 @@ impl<'a, 'tcx> Visitor<'tcx> for FindInferSourceVisitor<'a, 'tcx> {\n                 have_turbofish,\n             } = args;\n             let generics = tcx.generics_of(generics_def_id);\n-            if let Some(argument_index) = generics\n+            if let Some(mut argument_index) = generics\n                 .own_substs(substs)\n                 .iter()\n                 .position(|&arg| self.generic_arg_contains_target(arg))\n             {\n+                if generics.parent.is_none() && generics.has_self {\n+                    argument_index += 1;\n+                }\n                 let substs = self.infcx.resolve_vars_if_possible(substs);\n                 let generic_args = &generics.own_substs_no_defaults(tcx, substs)\n                     [generics.own_counts().lifetimes..];"}, {"sha": "fc79e6201bdb85755cfc9ec26e25b61a9cfc8cd5", "filename": "tests/ui/inference/need_type_info/concrete-impl.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b904ce94a23744032f930841b6fecb6ac2620cd9/tests%2Fui%2Finference%2Fneed_type_info%2Fconcrete-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b904ce94a23744032f930841b6fecb6ac2620cd9/tests%2Fui%2Finference%2Fneed_type_info%2Fconcrete-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finference%2Fneed_type_info%2Fconcrete-impl.rs?ref=b904ce94a23744032f930841b6fecb6ac2620cd9", "patch": "@@ -7,10 +7,13 @@ struct Two;\n struct Struct;\n \n impl Ambiguous<One> for Struct {}\n+//~^ NOTE multiple `impl`s satisfying `Struct: Ambiguous<_>` found\n impl Ambiguous<Two> for Struct {}\n \n fn main() {\n     <Struct as Ambiguous<_>>::method();\n     //~^ ERROR type annotations needed\n+    //~| NOTE cannot infer type of the type parameter `A`\n     //~| ERROR type annotations needed\n+    //~| NOTE infer type of the type parameter `A`\n }"}, {"sha": "74c3f6cd5cfad44164407db37a08cbd78eb4a181", "filename": "tests/ui/inference/need_type_info/concrete-impl.stderr", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/b904ce94a23744032f930841b6fecb6ac2620cd9/tests%2Fui%2Finference%2Fneed_type_info%2Fconcrete-impl.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b904ce94a23744032f930841b6fecb6ac2620cd9/tests%2Fui%2Finference%2Fneed_type_info%2Fconcrete-impl.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finference%2Fneed_type_info%2Fconcrete-impl.stderr?ref=b904ce94a23744032f930841b6fecb6ac2620cd9", "patch": "@@ -1,20 +1,21 @@\n error[E0282]: type annotations needed\n-  --> $DIR/concrete-impl.rs:13:5\n+  --> $DIR/concrete-impl.rs:14:5\n    |\n LL |     <Struct as Ambiguous<_>>::method();\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot infer type of the type parameter `Self` declared on the trait `Ambiguous`\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot infer type of the type parameter `A` declared on the trait `Ambiguous`\n \n error[E0283]: type annotations needed\n-  --> $DIR/concrete-impl.rs:13:5\n+  --> $DIR/concrete-impl.rs:14:5\n    |\n LL |     <Struct as Ambiguous<_>>::method();\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot infer type of the type parameter `Self` declared on the trait `Ambiguous`\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot infer type of the type parameter `A` declared on the trait `Ambiguous`\n    |\n note: multiple `impl`s satisfying `Struct: Ambiguous<_>` found\n   --> $DIR/concrete-impl.rs:9:1\n    |\n LL | impl Ambiguous<One> for Struct {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL |\n LL | impl Ambiguous<Two> for Struct {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n "}, {"sha": "99d10a5eae047165fed183712301c32bfd81709d", "filename": "tests/ui/inference/need_type_info/issue-109905.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/b904ce94a23744032f930841b6fecb6ac2620cd9/tests%2Fui%2Finference%2Fneed_type_info%2Fissue-109905.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b904ce94a23744032f930841b6fecb6ac2620cd9/tests%2Fui%2Finference%2Fneed_type_info%2Fissue-109905.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finference%2Fneed_type_info%2Fissue-109905.rs?ref=b904ce94a23744032f930841b6fecb6ac2620cd9", "patch": "@@ -0,0 +1,25 @@\n+// Test that we show the correct type parameter that couldn't be inferred and that we don't\n+// end up stating nonsense like \"type parameter `'a`\" which we used to do.\n+\n+trait Trait<'a, T> {\n+    fn m(self);\n+}\n+\n+impl<'a, A> Trait<'a, A> for () {\n+    fn m(self) {}\n+}\n+\n+fn qualified() {\n+    <() as Trait<'static, _>>::m(());\n+    //~^ ERROR type annotations needed\n+    //~| NOTE cannot infer type of the type parameter `T`\n+\n+}\n+\n+fn unqualified() {\n+    Trait::<'static, _>::m(());\n+    //~^ ERROR type annotations needed\n+    //~| NOTE cannot infer type of the type parameter `T`\n+}\n+\n+fn main() {}"}, {"sha": "fcdd50f1422661c169a435df3d8fdf25cdc1d77b", "filename": "tests/ui/inference/need_type_info/issue-109905.stderr", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/b904ce94a23744032f930841b6fecb6ac2620cd9/tests%2Fui%2Finference%2Fneed_type_info%2Fissue-109905.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b904ce94a23744032f930841b6fecb6ac2620cd9/tests%2Fui%2Finference%2Fneed_type_info%2Fissue-109905.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finference%2Fneed_type_info%2Fissue-109905.stderr?ref=b904ce94a23744032f930841b6fecb6ac2620cd9", "patch": "@@ -0,0 +1,15 @@\n+error[E0282]: type annotations needed\n+  --> $DIR/issue-109905.rs:13:5\n+   |\n+LL |     <() as Trait<'static, _>>::m(());\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot infer type of the type parameter `T` declared on the trait `Trait`\n+\n+error[E0282]: type annotations needed\n+  --> $DIR/issue-109905.rs:20:5\n+   |\n+LL |     Trait::<'static, _>::m(());\n+   |     ^^^^^^^^^^^^^^^^^^^^^^ cannot infer type of the type parameter `T` declared on the trait `Trait`\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0282`."}]}