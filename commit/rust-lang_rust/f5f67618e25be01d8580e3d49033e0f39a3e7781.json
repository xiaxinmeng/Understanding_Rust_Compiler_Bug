{"sha": "f5f67618e25be01d8580e3d49033e0f39a3e7781", "node_id": "C_kwDOAAsO6NoAKGY1ZjY3NjE4ZTI1YmUwMWQ4NTgwZTNkNDkwMzNlMGYzOWEzZTc3ODE", "commit": {"author": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2022-11-15T12:43:57Z"}, "committer": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2022-11-15T12:50:13Z"}, "message": "add comment about opaque types", "tree": {"sha": "89cdcafecf41529e2f9167bb3ca52f16f51463d9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/89cdcafecf41529e2f9167bb3ca52f16f51463d9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f5f67618e25be01d8580e3d49033e0f39a3e7781", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f5f67618e25be01d8580e3d49033e0f39a3e7781", "html_url": "https://github.com/rust-lang/rust/commit/f5f67618e25be01d8580e3d49033e0f39a3e7781", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f5f67618e25be01d8580e3d49033e0f39a3e7781/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6aa611a84c6f383e52ba4167dfda2910e122ef8f", "url": "https://api.github.com/repos/rust-lang/rust/commits/6aa611a84c6f383e52ba4167dfda2910e122ef8f", "html_url": "https://github.com/rust-lang/rust/commit/6aa611a84c6f383e52ba4167dfda2910e122ef8f"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "8a317a78afbcdc8c0dfb6be2894d9c6931cca3ae", "filename": "compiler/rustc_const_eval/src/util/compare_types.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f5f67618e25be01d8580e3d49033e0f39a3e7781/compiler%2Frustc_const_eval%2Fsrc%2Futil%2Fcompare_types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5f67618e25be01d8580e3d49033e0f39a3e7781/compiler%2Frustc_const_eval%2Fsrc%2Futil%2Fcompare_types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Futil%2Fcompare_types.rs?ref=f5f67618e25be01d8580e3d49033e0f39a3e7781", "patch": "@@ -28,6 +28,9 @@ pub fn is_equal_up_to_subtyping<'tcx>(\n }\n \n /// Returns whether `src` is a subtype of `dest`, i.e. `src <: dest`.\n+///\n+/// This mostly ignores opaque types as it can be used in constraining contexts\n+/// while still computing the final underlying type.\n pub fn is_subtype<'tcx>(\n     tcx: TyCtxt<'tcx>,\n     param_env: ParamEnv<'tcx>,"}]}