{"sha": "dfd11229b3fa9959e99a7bbce7069a081274870b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRmZDExMjI5YjNmYTk5NTllOTlhN2JiY2U3MDY5YTA4MTI3NDg3MGI=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2019-11-12T07:36:12Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-11-12T07:36:12Z"}, "message": "Rollup merge of #66276 - Mark-Simulacrum:sess-code-stats, r=nikomatsakis\n\nMove lock into CodeStats\n\nPrevent (theoretical) accidental too-long borrows by ensuring only encapsulated locking.", "tree": {"sha": "cf0f0b40783b341ea9bdc2763533c9863609391c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cf0f0b40783b341ea9bdc2763533c9863609391c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dfd11229b3fa9959e99a7bbce7069a081274870b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdymDsCRBK7hj4Ov3rIwAAdHIIAIpGUsMRl17SDAhauVqANTzj\n2VXuhyRz7eFJp3msqy+ux5Nv0M69AdKm7Dj82Ib/FYNNUmPuRNEvAOg/kypRjzd0\nqF/hGFEEUX2BDQ3xAYM4jVF/GXhzbkQpDsJX3Oz0SnRhf3eoAkXNQrkVLEAqqgwk\nVu1o8+GBKM0eFRLKjM9DLLb4NimXQJjreIxe6KhmlB3I2M4LNkrJk0QP8ZH2bLh1\nRGskpXoghXsxYPKt1uygWq8+hjJAV1CCaHG+33PHGNxpBOSEsOMMY3WP1M28oAOO\nJRymCTNE3laeHYPU3j/p0s2ls9MtBtWI4NB7gW9l5AHtq9tpikrjuPT/aHUhTVs=\n=117e\n-----END PGP SIGNATURE-----\n", "payload": "tree cf0f0b40783b341ea9bdc2763533c9863609391c\nparent cde56373946aa3e9ea0ab349264d691bdff061a4\nparent 2c34f384d4d2289e9c83000c01e8a4f98486e8ec\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1573544172 +0900\ncommitter GitHub <noreply@github.com> 1573544172 +0900\n\nRollup merge of #66276 - Mark-Simulacrum:sess-code-stats, r=nikomatsakis\n\nMove lock into CodeStats\n\nPrevent (theoretical) accidental too-long borrows by ensuring only encapsulated locking.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dfd11229b3fa9959e99a7bbce7069a081274870b", "html_url": "https://github.com/rust-lang/rust/commit/dfd11229b3fa9959e99a7bbce7069a081274870b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dfd11229b3fa9959e99a7bbce7069a081274870b/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cde56373946aa3e9ea0ab349264d691bdff061a4", "url": "https://api.github.com/repos/rust-lang/rust/commits/cde56373946aa3e9ea0ab349264d691bdff061a4", "html_url": "https://github.com/rust-lang/rust/commit/cde56373946aa3e9ea0ab349264d691bdff061a4"}, {"sha": "2c34f384d4d2289e9c83000c01e8a4f98486e8ec", "url": "https://api.github.com/repos/rust-lang/rust/commits/2c34f384d4d2289e9c83000c01e8a4f98486e8ec", "html_url": "https://github.com/rust-lang/rust/commit/2c34f384d4d2289e9c83000c01e8a4f98486e8ec"}], "stats": {"total": 30, "additions": 16, "deletions": 14}, "files": [{"sha": "5baf0c5948f28a5481a25ee1111f52494d9c7349", "filename": "src/librustc/session/code_stats.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/dfd11229b3fa9959e99a7bbce7069a081274870b/src%2Flibrustc%2Fsession%2Fcode_stats.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dfd11229b3fa9959e99a7bbce7069a081274870b/src%2Flibrustc%2Fsession%2Fcode_stats.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fcode_stats.rs?ref=dfd11229b3fa9959e99a7bbce7069a081274870b", "patch": "@@ -1,6 +1,7 @@\n use rustc_target::abi::{Align, Size};\n use rustc_data_structures::fx::{FxHashSet};\n use std::cmp::{self, Ordering};\n+use rustc_data_structures::sync::Lock;\n \n #[derive(Clone, PartialEq, Eq, Hash, Debug)]\n pub struct VariantInfo {\n@@ -44,13 +45,13 @@ pub struct TypeSizeInfo {\n     pub variants: Vec<VariantInfo>,\n }\n \n-#[derive(PartialEq, Eq, Debug, Default)]\n+#[derive(Default)]\n pub struct CodeStats {\n-    type_sizes: FxHashSet<TypeSizeInfo>,\n+    type_sizes: Lock<FxHashSet<TypeSizeInfo>>,\n }\n \n impl CodeStats {\n-    pub fn record_type_size<S: ToString>(&mut self,\n+    pub fn record_type_size<S: ToString>(&self,\n                                          kind: DataTypeKind,\n                                          type_desc: S,\n                                          align: Align,\n@@ -73,11 +74,12 @@ impl CodeStats {\n             opt_discr_size: opt_discr_size.map(|s| s.bytes()),\n             variants,\n         };\n-        self.type_sizes.insert(info);\n+        self.type_sizes.borrow_mut().insert(info);\n     }\n \n     pub fn print_type_sizes(&self) {\n-        let mut sorted: Vec<_> = self.type_sizes.iter().collect();\n+        let type_sizes = self.type_sizes.borrow();\n+        let mut sorted: Vec<_> = type_sizes.iter().collect();\n \n         // Primary sort: large-to-small.\n         // Secondary sort: description (dictionary order)"}, {"sha": "b6638a287b8dddc05d840d62d015fbb1d9493080", "filename": "src/librustc/session/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dfd11229b3fa9959e99a7bbce7069a081274870b/src%2Flibrustc%2Fsession%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dfd11229b3fa9959e99a7bbce7069a081274870b/src%2Flibrustc%2Fsession%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fmod.rs?ref=dfd11229b3fa9959e99a7bbce7069a081274870b", "patch": "@@ -124,7 +124,7 @@ pub struct Session {\n     pub perf_stats: PerfStats,\n \n     /// Data about code being compiled, gathered during compilation.\n-    pub code_stats: Lock<CodeStats>,\n+    pub code_stats: CodeStats,\n \n     /// If `-zfuel=crate=n` is specified, `Some(crate)`.\n     optimization_fuel_crate: Option<String>,"}, {"sha": "972452601ddd5c6ef192bf19a277177f8d76ce34", "filename": "src/librustc/ty/layout.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/dfd11229b3fa9959e99a7bbce7069a081274870b/src%2Flibrustc%2Fty%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dfd11229b3fa9959e99a7bbce7069a081274870b/src%2Flibrustc%2Fty%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Flayout.rs?ref=dfd11229b3fa9959e99a7bbce7069a081274870b", "patch": "@@ -1614,13 +1614,13 @@ impl<'tcx> LayoutCx<'tcx, TyCtxt<'tcx>> {\n         // (delay format until we actually need it)\n         let record = |kind, packed, opt_discr_size, variants| {\n             let type_desc = format!(\"{:?}\", layout.ty);\n-            self.tcx.sess.code_stats.borrow_mut().record_type_size(kind,\n-                                                                   type_desc,\n-                                                                   layout.align.abi,\n-                                                                   layout.size,\n-                                                                   packed,\n-                                                                   opt_discr_size,\n-                                                                   variants);\n+            self.tcx.sess.code_stats.record_type_size(kind,\n+                                                      type_desc,\n+                                                      layout.align.abi,\n+                                                      layout.size,\n+                                                      packed,\n+                                                      opt_discr_size,\n+                                                      variants);\n         };\n \n         let adt_def = match layout.ty.kind {"}, {"sha": "10bc6599e7592ac64f8d22447bdc643c2ad45cd8", "filename": "src/librustc_driver/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dfd11229b3fa9959e99a7bbce7069a081274870b/src%2Flibrustc_driver%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dfd11229b3fa9959e99a7bbce7069a081274870b/src%2Flibrustc_driver%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Flib.rs?ref=dfd11229b3fa9959e99a7bbce7069a081274870b", "patch": "@@ -393,7 +393,7 @@ pub fn run_compiler(\n         mem::drop(compiler.global_ctxt()?.take());\n \n         if sess.opts.debugging_opts.print_type_sizes {\n-            sess.code_stats.borrow().print_type_sizes();\n+            sess.code_stats.print_type_sizes();\n         }\n \n         compiler.link()?;"}]}