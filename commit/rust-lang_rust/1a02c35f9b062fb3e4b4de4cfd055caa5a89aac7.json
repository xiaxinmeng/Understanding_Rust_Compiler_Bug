{"sha": "1a02c35f9b062fb3e4b4de4cfd055caa5a89aac7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFhMDJjMzVmOWIwNjJmYjNlNGI0ZGU0Y2ZkMDU1Y2FhNWE4OWFhYzc=", "commit": {"author": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2017-08-24T19:36:04Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-08-24T19:36:04Z"}, "message": "Merge pull request #1910 from topecongiro/config-merge_derives\n\nAdd merge_derives config option", "tree": {"sha": "01386c24b00a8c2221912b5296927f8769ae1cc2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/01386c24b00a8c2221912b5296927f8769ae1cc2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1a02c35f9b062fb3e4b4de4cfd055caa5a89aac7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1a02c35f9b062fb3e4b4de4cfd055caa5a89aac7", "html_url": "https://github.com/rust-lang/rust/commit/1a02c35f9b062fb3e4b4de4cfd055caa5a89aac7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1a02c35f9b062fb3e4b4de4cfd055caa5a89aac7/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ba6121c4e251d927f52b498f0d50ab5c0748051d", "url": "https://api.github.com/repos/rust-lang/rust/commits/ba6121c4e251d927f52b498f0d50ab5c0748051d", "html_url": "https://github.com/rust-lang/rust/commit/ba6121c4e251d927f52b498f0d50ab5c0748051d"}, {"sha": "669a139956681edf13c9fa21f08fa27979d5c345", "url": "https://api.github.com/repos/rust-lang/rust/commits/669a139956681edf13c9fa21f08fa27979d5c345", "html_url": "https://github.com/rust-lang/rust/commit/669a139956681edf13c9fa21f08fa27979d5c345"}], "stats": {"total": 193, "additions": 176, "deletions": 17}, "files": [{"sha": "972c2e58241ac807594c4eb4b876c40bbc019c9a", "filename": "Configurations.md", "status": "modified", "additions": 34, "deletions": 10, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/1a02c35f9b062fb3e4b4de4cfd055caa5a89aac7/Configurations.md", "raw_url": "https://github.com/rust-lang/rust/raw/1a02c35f9b062fb3e4b4de4cfd055caa5a89aac7/Configurations.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Configurations.md?ref=1a02c35f9b062fb3e4b4de4cfd055caa5a89aac7", "patch": "@@ -1230,7 +1230,7 @@ Put a match sub-patterns' separator (`|`) in front or back.\n - **Default value**: `\"Back\"`\n - **Possible values**: `\"Back\"`, `\"Front\"`\n \n-#### `\"Back\"`\n+#### `\"Back\"`:\n \n ```rust\n match m {\n@@ -1243,7 +1243,7 @@ match m {\n }\n ```\n \n-#### `Front`\n+#### `Front`:\n \n ```rust\n match m {\n@@ -1265,25 +1265,40 @@ Maximum width of each line\n \n See also [`error_on_line_overflow`](#error_on_line_overflow).\n \n-## `multiline_closure_forces_block`\n+## `merge_derives`\n \n-Force multiline closure bodies to be wrapped in a block\n+Merge multiple derives into a single one.\n \n-- **Default value**: `false`\n-- **Possible values**: `false`, `true`\n+- **Default value**: `true`\n+- **Possible values**: `true`, `false`\n+\n+#### `true`:\n+\n+```rust\n+#[derive(Eq, PartialEq, Debug, Copy, Clone)]\n+pub enum Foo {}\n+```\n \n #### `false`:\n \n ```rust\n-result.and_then(|maybe_value| match maybe_value {\n-    None => ...,\n-    Some(value) => ...,\n-})\n+#[derive(Eq, PartialEq)]\n+#[derive(Debug)]\n+#[derive(Copy, Clone)]\n+pub enum Foo {}\n ```\n \n+## `multiline_closure_forces_block`\n+\n+Force multiline closure bodies to be wrapped in a block\n+\n+- **Default value**: `false`\n+- **Possible values**: `false`, `true`\n+\n #### `true`:\n \n ```rust\n+\n result.and_then(|maybe_value| {\n     match maybe_value {\n         None => ...,\n@@ -1292,6 +1307,15 @@ result.and_then(|maybe_value| {\n })\n ```\n \n+#### `false`:\n+\n+```rust\n+result.and_then(|maybe_value| match maybe_value {\n+    None => ...,\n+    Some(value) => ...,\n+})\n+```\n+\n ## `multiline_match_arm_forces_block`\n \n Force multiline match arm bodies to be wrapped in a block"}, {"sha": "31eccf2494195367658a608959ea7513ac9cf462", "filename": "src/config.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1a02c35f9b062fb3e4b4de4cfd055caa5a89aac7/src%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a02c35f9b062fb3e4b4de4cfd055caa5a89aac7/src%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconfig.rs?ref=1a02c35f9b062fb3e4b4de4cfd055caa5a89aac7", "patch": "@@ -619,6 +619,7 @@ create_config! {\n         \"Force multiline closure bodies to be wrapped in a block\";\n     multiline_match_arm_forces_block: bool, false,\n         \"Force multiline match arm bodies to be wrapped in a block\";\n+    merge_derives: bool, true, \"Merge multiple `#[derive(...)]` into a single one\";\n }\n \n #[cfg(test)]"}, {"sha": "8787850634e48af4e557fc3899395873930e3bb2", "filename": "src/lists.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1a02c35f9b062fb3e4b4de4cfd055caa5a89aac7/src%2Flists.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a02c35f9b062fb3e4b4de4cfd055caa5a89aac7/src%2Flists.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flists.rs?ref=1a02c35f9b062fb3e4b4de4cfd055caa5a89aac7", "patch": "@@ -19,10 +19,10 @@ use config::{Config, IndentStyle};\n use rewrite::RewriteContext;\n use utils::{first_line_width, last_line_width, mk_sp};\n \n-#[derive(Eq, PartialEq, Debug, Copy, Clone)]\n /// Formatting tactic for lists. This will be cast down to a\n /// DefinitiveListTactic depending on the number and length of the items and\n /// their comments.\n+#[derive(Eq, PartialEq, Debug, Copy, Clone)]\n pub enum ListTactic {\n     // One item per row.\n     Vertical,\n@@ -144,8 +144,8 @@ impl ListItem {\n     }\n }\n \n-#[derive(Eq, PartialEq, Debug, Copy, Clone)]\n /// The definitive formatting tactic for lists.\n+#[derive(Eq, PartialEq, Debug, Copy, Clone)]\n pub enum DefinitiveListTactic {\n     Vertical,\n     Horizontal,"}, {"sha": "2f6a503dc136914c094b73d1818ba357c62c964f", "filename": "src/visitor.rs", "status": "modified", "additions": 53, "deletions": 5, "changes": 58, "blob_url": "https://github.com/rust-lang/rust/blob/1a02c35f9b062fb3e4b4de4cfd055caa5a89aac7/src%2Fvisitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a02c35f9b062fb3e4b4de4cfd055caa5a89aac7/src%2Fvisitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvisitor.rs?ref=1a02c35f9b062fb3e4b4de4cfd055caa5a89aac7", "patch": "@@ -925,7 +925,10 @@ impl<'a> Rewrite for [ast::Attribute] {\n         }\n         let indent = shape.indent.to_string(context.config);\n \n-        for (i, a) in self.iter().enumerate() {\n+        let mut derive_args = Vec::new();\n+\n+        let mut iter = self.iter().enumerate().peekable();\n+        while let Some((i, a)) = iter.next() {\n             let a_str = try_opt!(a.rewrite(context, shape));\n \n             // Write comments and blank lines between attributes.\n@@ -952,17 +955,62 @@ impl<'a> Rewrite for [ast::Attribute] {\n                 } else if multi_line {\n                     result.push('\\n');\n                 }\n-                result.push_str(&indent);\n+                if derive_args.is_empty() {\n+                    result.push_str(&indent);\n+                }\n             }\n \n             // Write the attribute itself.\n-            result.push_str(&a_str);\n+            let mut insert_new_line = true;\n+            if context.config.merge_derives() {\n+                // If the attribute is `#[derive(...)]`, take the arguments.\n+                if let Some(mut args) = get_derive_args(context, a) {\n+                    derive_args.append(&mut args);\n+                    match iter.peek() {\n+                        // If the next attribute is `#[derive(...)]` as well, skip rewriting.\n+                        Some(&(_, next_attr)) if is_derive(next_attr) => insert_new_line = false,\n+                        // If not, rewrite the merged derives.\n+                        _ => {\n+                            result.push_str(&format!(\"#[derive({})]\", derive_args.join(\", \")));\n+                            derive_args.clear();\n+                        }\n+                    }\n+                } else {\n+                    result.push_str(&a_str);\n+                }\n+            } else {\n+                result.push_str(&a_str);\n+            }\n \n-            if i < self.len() - 1 {\n+            if insert_new_line && i < self.len() - 1 {\n                 result.push('\\n');\n             }\n         }\n-\n         Some(result)\n     }\n }\n+\n+fn is_derive(attr: &ast::Attribute) -> bool {\n+    match attr.meta() {\n+        Some(meta_item) => match meta_item.node {\n+            ast::MetaItemKind::List(..) => meta_item.name.as_str() == \"derive\",\n+            _ => false,\n+        },\n+        _ => false,\n+    }\n+}\n+\n+/// Returns the arguments of `#[derive(...)]`.\n+fn get_derive_args(context: &RewriteContext, attr: &ast::Attribute) -> Option<Vec<String>> {\n+    attr.meta().and_then(|meta_item| match meta_item.node {\n+        ast::MetaItemKind::List(ref args) if meta_item.name.as_str() == \"derive\" => {\n+            // Every argument of `derive` should be `NestedMetaItemKind::Literal`.\n+            Some(\n+                args.iter()\n+                    .map(|a| context.snippet(a.span))\n+                    .collect::<Vec<_>>(),\n+            )\n+        }\n+        _ => None,\n+    })\n+}"}, {"sha": "18b8443f0d7bb586465bfc12826e7e27a54eabc1", "filename": "tests/source/configs-merge_derives-true.rs", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/1a02c35f9b062fb3e4b4de4cfd055caa5a89aac7/tests%2Fsource%2Fconfigs-merge_derives-true.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a02c35f9b062fb3e4b4de4cfd055caa5a89aac7/tests%2Fsource%2Fconfigs-merge_derives-true.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs-merge_derives-true.rs?ref=1a02c35f9b062fb3e4b4de4cfd055caa5a89aac7", "patch": "@@ -0,0 +1,46 @@\n+// rustfmt-merge_derives: true\n+// Merge multiple derives to a single one.\n+\n+#[bar]\n+#[derive(Eq, PartialEq)]\n+#[foo]\n+#[derive(Debug)]\n+#[foobar]\n+#[derive(Copy, Clone)]\n+pub enum Foo {}\n+\n+#[derive(Eq, PartialEq)]\n+#[derive(Debug)]\n+#[foobar]\n+#[derive(Copy, Clone)]\n+pub enum Bar {}\n+\n+#[derive(Eq, PartialEq)]\n+#[derive(Debug)]\n+#[derive(Copy, Clone)]\n+pub enum FooBar {}\n+\n+mod foo {\n+#[bar]\n+#[derive(Eq, PartialEq)]\n+#[foo]\n+#[derive(Debug)]\n+#[foobar]\n+#[derive(Copy, Clone)]\n+pub enum Foo {}\n+}\n+\n+mod bar {\n+#[derive(Eq, PartialEq)]\n+#[derive(Debug)]\n+#[foobar]\n+#[derive(Copy, Clone)]\n+pub enum Bar {}\n+}\n+\n+mod foobar {\n+#[derive(Eq, PartialEq)]\n+#[derive(Debug)]\n+#[derive(Copy, Clone)]\n+pub enum FooBar {}\n+}"}, {"sha": "4d0148b1c6e2cc2202a9ba8b28cabebf85b17c7e", "filename": "tests/target/configs-merge_derives-true.rs", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/1a02c35f9b062fb3e4b4de4cfd055caa5a89aac7/tests%2Ftarget%2Fconfigs-merge_derives-true.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a02c35f9b062fb3e4b4de4cfd055caa5a89aac7/tests%2Ftarget%2Fconfigs-merge_derives-true.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-merge_derives-true.rs?ref=1a02c35f9b062fb3e4b4de4cfd055caa5a89aac7", "patch": "@@ -0,0 +1,40 @@\n+// rustfmt-merge_derives: true\n+// Merge multiple derives to a single one.\n+\n+#[bar]\n+#[derive(Eq, PartialEq)]\n+#[foo]\n+#[derive(Debug)]\n+#[foobar]\n+#[derive(Copy, Clone)]\n+pub enum Foo {}\n+\n+#[derive(Eq, PartialEq, Debug)]\n+#[foobar]\n+#[derive(Copy, Clone)]\n+pub enum Bar {}\n+\n+#[derive(Eq, PartialEq, Debug, Copy, Clone)]\n+pub enum FooBar {}\n+\n+mod foo {\n+    #[bar]\n+    #[derive(Eq, PartialEq)]\n+    #[foo]\n+    #[derive(Debug)]\n+    #[foobar]\n+    #[derive(Copy, Clone)]\n+    pub enum Foo {}\n+}\n+\n+mod bar {\n+    #[derive(Eq, PartialEq, Debug)]\n+    #[foobar]\n+    #[derive(Copy, Clone)]\n+    pub enum Bar {}\n+}\n+\n+mod foobar {\n+    #[derive(Eq, PartialEq, Debug, Copy, Clone)]\n+    pub enum FooBar {}\n+}"}]}