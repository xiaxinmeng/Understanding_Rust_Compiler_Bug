{"sha": "d5294a5bf3457c7565f1fce4ce804682a2f8fa10", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ1Mjk0YTViZjM0NTdjNzU2NWYxZmNlNGNlODA0NjgyYTJmOGZhMTA=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-08-09T08:32:53Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-08-09T09:01:42Z"}, "message": "test generator that yields during initialization of struct with uninhabited field", "tree": {"sha": "a1d3d5f76530b4dafd77ac4b22bbecf4ea139801", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a1d3d5f76530b4dafd77ac4b22bbecf4ea139801"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d5294a5bf3457c7565f1fce4ce804682a2f8fa10", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d5294a5bf3457c7565f1fce4ce804682a2f8fa10", "html_url": "https://github.com/rust-lang/rust/commit/d5294a5bf3457c7565f1fce4ce804682a2f8fa10", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d5294a5bf3457c7565f1fce4ce804682a2f8fa10/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1766d1b84b5ce11307f06c4bebdecd11b3908e64", "url": "https://api.github.com/repos/rust-lang/rust/commits/1766d1b84b5ce11307f06c4bebdecd11b3908e64", "html_url": "https://github.com/rust-lang/rust/commit/1766d1b84b5ce11307f06c4bebdecd11b3908e64"}], "stats": {"total": 15, "additions": 14, "deletions": 1}, "files": [{"sha": "c31b5b9ed3bb2a3845f931d3dea776e3e8986dd1", "filename": "tests/run-pass/generator.rs", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/d5294a5bf3457c7565f1fce4ce804682a2f8fa10/tests%2Frun-pass%2Fgenerator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d5294a5bf3457c7565f1fce4ce804682a2f8fa10/tests%2Frun-pass%2Fgenerator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fgenerator.rs?ref=d5294a5bf3457c7565f1fce4ce804682a2f8fa10", "patch": "@@ -1,4 +1,4 @@\n-#![feature(generators, generator_trait)]\n+#![feature(generators, generator_trait, never_type)]\n \n use std::ops::{GeneratorState, Generator};\n use std::pin::Pin;\n@@ -26,6 +26,7 @@ fn never() -> Never {\n \n fn main() {\n     finish(1, || yield 1);\n+\n     finish(3, || {\n         let mut x = 0;\n         yield 1;\n@@ -35,30 +36,35 @@ fn main() {\n         yield 1;\n         assert_eq!(x, 2);\n     });\n+\n     finish(7*8/2, || {\n         for i in 0..8 {\n             yield i;\n         }\n     });\n+\n     finish(1, || {\n         if true {\n             yield 1;\n         } else {\n         }\n     });\n+\n     finish(1, || {\n         if false {\n         } else {\n             yield 1;\n         }\n     });\n+\n     finish(2, || {\n         if { yield 1; false } {\n             yield 1;\n             panic!()\n         }\n         yield 1;\n     });\n+\n     // also test a self-referential generator\n     assert_eq!(\n         finish(5, || {\n@@ -71,6 +77,7 @@ fn main() {\n         }),\n         10\n     );\n+\n     let b = true;\n     finish(1, || {\n         yield 1;\n@@ -80,4 +87,10 @@ fn main() {\n         yield 2;\n         drop(x);\n     });\n+\n+    finish(3, || {\n+        yield 1;\n+        #[allow(unreachable_code)]\n+        let _x: (String, !) = (String::new(), { yield 2; return });\n+    });\n }"}]}