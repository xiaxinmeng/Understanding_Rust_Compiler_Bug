{"sha": "5d7b6595ceed4edb77a558a340f73120610d76fe", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVkN2I2NTk1Y2VlZDRlZGI3N2E1NThhMzQwZjczMTIwNjEwZDc2ZmU=", "commit": {"author": {"name": "est31", "email": "MTest31@outlook.com", "date": "2021-08-03T00:41:39Z"}, "committer": {"name": "est31", "email": "MTest31@outlook.com", "date": "2021-08-03T01:10:10Z"}, "message": "Add tests", "tree": {"sha": "37ea537cc1bf68656014704044d0c5fa9658d8d3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/37ea537cc1bf68656014704044d0c5fa9658d8d3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5d7b6595ceed4edb77a558a340f73120610d76fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5d7b6595ceed4edb77a558a340f73120610d76fe", "html_url": "https://github.com/rust-lang/rust/commit/5d7b6595ceed4edb77a558a340f73120610d76fe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5d7b6595ceed4edb77a558a340f73120610d76fe/comments", "author": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "committer": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "50fcd454c71084cb682f4d908b06cdd3eddacaf9", "url": "https://api.github.com/repos/rust-lang/rust/commits/50fcd454c71084cb682f4d908b06cdd3eddacaf9", "html_url": "https://github.com/rust-lang/rust/commit/50fcd454c71084cb682f4d908b06cdd3eddacaf9"}], "stats": {"total": 67, "additions": 67, "deletions": 0}, "files": [{"sha": "455c5c7c380af3f2f76a7ec78f14f1c249314340", "filename": "src/test/ui/proc-macro/auxiliary/assert-span-pos.rs", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/5d7b6595ceed4edb77a558a340f73120610d76fe/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fassert-span-pos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d7b6595ceed4edb77a558a340f73120610d76fe/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fassert-span-pos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fassert-span-pos.rs?ref=5d7b6595ceed4edb77a558a340f73120610d76fe", "patch": "@@ -0,0 +1,37 @@\n+// force-host\n+// no-prefer-dynamic\n+\n+#![feature(proc_macro_diagnostic, proc_macro_span)]\n+#![crate_type = \"proc-macro\"]\n+\n+extern crate proc_macro;\n+\n+use proc_macro::{TokenStream, TokenTree, Span};\n+\n+fn lit_span(tt: TokenTree) -> (Span, String) {\n+    match tt {\n+        TokenTree::Literal(..) |\n+        TokenTree::Group(..) => (tt.span(), tt.to_string().trim().into()),\n+        _ => panic!(\"expected a literal in token tree, got: {:?}\", tt)\n+    }\n+}\n+\n+#[proc_macro]\n+pub fn assert_span_pos(input: TokenStream) -> TokenStream {\n+    let mut tokens = input.into_iter();\n+    let (sp1, str1) = lit_span(tokens.next().expect(\"first argument\"));\n+    let _ = tokens.next();\n+    let (_sp2, str2) = lit_span(tokens.next().expect(\"second argument\"));\n+\n+    let line: usize = str1.parse().unwrap();\n+    let col: usize = str2.parse().unwrap();\n+\n+    let sp1s = sp1.start();\n+    if (line, col) != (sp1s.line, sp1s.column) {\n+        let msg = format!(\"line/column mismatch: ({}, {}) != ({}, {})\", line, col,\n+            sp1s.line, sp1s.column);\n+        sp1.error(msg).emit();\n+    }\n+\n+    \"\".parse().unwrap()\n+}"}, {"sha": "7fc3f6b5793bc58ccb351d974efd4e787c5e1f31", "filename": "src/test/ui/proc-macro/span-absolute-posititions.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/5d7b6595ceed4edb77a558a340f73120610d76fe/src%2Ftest%2Fui%2Fproc-macro%2Fspan-absolute-posititions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d7b6595ceed4edb77a558a340f73120610d76fe/src%2Ftest%2Fui%2Fproc-macro%2Fspan-absolute-posititions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fspan-absolute-posititions.rs?ref=5d7b6595ceed4edb77a558a340f73120610d76fe", "patch": "@@ -0,0 +1,16 @@\n+// aux-build:assert-span-pos.rs\n+// ignore-tidy-tab\n+extern crate assert_span_pos;\n+\n+assert_span_pos::assert_span_pos!(5, 35);\n+\n+// Test space indentation\n+    assert_span_pos::assert_span_pos!(8, 39);\n+// Test tab indentation\n+\tassert_span_pos::assert_span_pos!(10, 36);\n+\n+// Test that the macro actually emits an error on a mismatch:\n+assert_span_pos::assert_span_pos!(0, 35); //~ ERROR line/column mismatch: (0, 35) != (13, 35)\n+assert_span_pos::assert_span_pos!(14, 0); //~ ERROR line/column mismatch: (14, 0) != (14, 35)\n+\n+fn main() {}"}, {"sha": "ade66417520d6be84088d48bf33ac257699fddb3", "filename": "src/test/ui/proc-macro/span-absolute-posititions.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/5d7b6595ceed4edb77a558a340f73120610d76fe/src%2Ftest%2Fui%2Fproc-macro%2Fspan-absolute-posititions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5d7b6595ceed4edb77a558a340f73120610d76fe/src%2Ftest%2Fui%2Fproc-macro%2Fspan-absolute-posititions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fspan-absolute-posititions.stderr?ref=5d7b6595ceed4edb77a558a340f73120610d76fe", "patch": "@@ -0,0 +1,14 @@\n+error: line/column mismatch: (0, 35) != (13, 35)\n+  --> $DIR/span-absolute-posititions.rs:13:35\n+   |\n+LL | assert_span_pos::assert_span_pos!(0, 35);\n+   |                                   ^\n+\n+error: line/column mismatch: (14, 0) != (14, 35)\n+  --> $DIR/span-absolute-posititions.rs:14:35\n+   |\n+LL | assert_span_pos::assert_span_pos!(14, 0);\n+   |                                   ^^\n+\n+error: aborting due to 2 previous errors\n+"}]}