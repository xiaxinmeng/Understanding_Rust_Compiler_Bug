{"sha": "3e01b2d529a81ac7b2d7ba3deb5d1f116efc7b34", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNlMDFiMmQ1MjlhODFhYzdiMmQ3YmEzZGViNWQxZjExNmVmYzdiMzQ=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2010-11-23T01:38:23Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2010-11-23T01:38:23Z"}, "message": "rustc: \"Expected\" and \"actual\" were swapped. Also un-XFAIL compile-fail/arg-count-mismatch.rs for good measure.", "tree": {"sha": "25eb2b69c00a4fd73a99e36a8db8ffb0ced2388c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/25eb2b69c00a4fd73a99e36a8db8ffb0ced2388c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3e01b2d529a81ac7b2d7ba3deb5d1f116efc7b34", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3e01b2d529a81ac7b2d7ba3deb5d1f116efc7b34", "html_url": "https://github.com/rust-lang/rust/commit/3e01b2d529a81ac7b2d7ba3deb5d1f116efc7b34", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3e01b2d529a81ac7b2d7ba3deb5d1f116efc7b34/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c0741c13abe687667f28557c85386a97eaf276e4", "url": "https://api.github.com/repos/rust-lang/rust/commits/c0741c13abe687667f28557c85386a97eaf276e4", "html_url": "https://github.com/rust-lang/rust/commit/c0741c13abe687667f28557c85386a97eaf276e4"}], "stats": {"total": 42, "additions": 26, "deletions": 16}, "files": [{"sha": "db21cab17b6556a55237fdca99bb3b46cbdf1520", "filename": "src/Makefile", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/3e01b2d529a81ac7b2d7ba3deb5d1f116efc7b34/src%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/3e01b2d529a81ac7b2d7ba3deb5d1f116efc7b34/src%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2FMakefile?ref=3e01b2d529a81ac7b2d7ba3deb5d1f116efc7b34", "patch": "@@ -536,6 +536,9 @@ TEST_XFAILS_SELF := $(filter-out \\\n                         uint.rs \\\n                         unit.rs \\\n                         while-and-do-while.rs \\\n+                        ) \\\n+                      $(addprefix test/compile-fail/, \\\n+                        arg-count-mismatch.rs \\\n                         ), \\\n                       $(wildcard test/*/*.rs test/*/*.rc))\n \n@@ -772,6 +775,13 @@ test/compile-fail/%-boot.llvm.out.tmp: test/compile-fail/%.rs $(BREQ)\n \t$(CFG_QUIET)grep --text --quiet \\\n       \"`awk -F: '/error-pattern/ { print $$2 }' $< | tr -d '\\n\\r'`\" $@\n \n+test/compile-fail/%.llvm.out.tmp: test/compile-fail/%.rs $(BREQ)\n+\t@$(call CFG_ECHO, compile [rustc]: $<)\n+\t$(CFG_QUIET)rm -f $@\n+\t$(BOOT) -o $(@:.out=$(CFG_EXE_SUFFIX)) $< >$@ 2>&1 || true\n+\t$(CFG_QUIET)grep --text --quiet \\\n+      \"`awk -F: '/error-pattern/ { print $$2 }' $< | tr -d '\\n\\r'`\" $@\n+\n test/run-pass/%-boot.x86$(CFG_EXE_SUFFIX): test/run-pass/%.rc $(BREQ)\n \t@$(call CFG_ECHO, compile [boot x86]: $<)\n \t$(BOOT) -o $@ $<"}, {"sha": "e8ae94faaa24d00d21d66b786bb836c832534063", "filename": "src/comp/middle/typeck.rs", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/3e01b2d529a81ac7b2d7ba3deb5d1f116efc7b34/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e01b2d529a81ac7b2d7ba3deb5d1f116efc7b34/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftypeck.rs?ref=3e01b2d529a81ac7b2d7ba3deb5d1f116efc7b34", "patch": "@@ -821,67 +821,67 @@ fn demand_expr(&fn_ctxt fcx, @ty expected, @ast.expr e) -> @ast.expr {\n \n     alt (e.node) {\n         case (ast.expr_vec(?es, ?ann)) {\n-            auto t = demand(fcx, e.span, ann_to_type(ann), expected);\n+            auto t = demand(fcx, e.span, expected, ann_to_type(ann));\n             e_1 = ast.expr_vec(es, ast.ann_type(t));\n         }\n         case (ast.expr_tup(?es, ?ann)) {\n-            auto t = demand(fcx, e.span, ann_to_type(ann), expected);\n+            auto t = demand(fcx, e.span, expected, ann_to_type(ann));\n             e_1 = ast.expr_tup(es, ast.ann_type(t));\n         }\n         case (ast.expr_rec(?es, ?ann)) {\n-            auto t = demand(fcx, e.span, ann_to_type(ann), expected);\n+            auto t = demand(fcx, e.span, expected, ann_to_type(ann));\n             e_1 = ast.expr_rec(es, ast.ann_type(t));\n         }\n         case (ast.expr_call(?sube, ?es, ?ann)) {\n-            auto t = demand(fcx, e.span, ann_to_type(ann), expected);\n+            auto t = demand(fcx, e.span, expected, ann_to_type(ann));\n             e_1 = ast.expr_call(sube, es, ast.ann_type(t));\n         }\n         case (ast.expr_binary(?bop, ?lhs, ?rhs, ?ann)) {\n-            auto t = demand(fcx, e.span, ann_to_type(ann), expected);\n+            auto t = demand(fcx, e.span, expected, ann_to_type(ann));\n             e_1 = ast.expr_binary(bop, lhs, rhs, ast.ann_type(t));\n         }\n         case (ast.expr_unary(?uop, ?sube, ?ann)) {\n-            auto t = demand(fcx, e.span, ann_to_type(ann), expected);\n+            auto t = demand(fcx, e.span, expected, ann_to_type(ann));\n             e_1 = ast.expr_unary(uop, sube, ast.ann_type(t));\n         }\n         case (ast.expr_lit(?lit, ?ann)) {\n-            auto t = demand(fcx, e.span, ann_to_type(ann), expected);\n+            auto t = demand(fcx, e.span, expected, ann_to_type(ann));\n             e_1 = ast.expr_lit(lit, ast.ann_type(t));\n         }\n         case (ast.expr_cast(?sube, ?ast_ty, ?ann)) {\n-            auto t = demand(fcx, e.span, ann_to_type(ann), expected);\n+            auto t = demand(fcx, e.span, expected, ann_to_type(ann));\n             e_1 = ast.expr_cast(sube, ast_ty, ast.ann_type(t));\n         }\n         case (ast.expr_if(?cond, ?then, ?els, ?ann)) {\n-            auto t = demand(fcx, e.span, ann_to_type(ann), expected);\n+            auto t = demand(fcx, e.span, expected, ann_to_type(ann));\n             e_1 = ast.expr_if(cond, then, els, ast.ann_type(t));\n         }\n         case (ast.expr_while(?cond, ?bloc, ?ann)) {\n-            auto t = demand(fcx, e.span, ann_to_type(ann), expected);\n+            auto t = demand(fcx, e.span, expected, ann_to_type(ann));\n             e_1 = ast.expr_while(cond, bloc, ast.ann_type(t));\n         }\n         case (ast.expr_do_while(?bloc, ?cond, ?ann)) {\n-            auto t = demand(fcx, e.span, ann_to_type(ann), expected);\n+            auto t = demand(fcx, e.span, expected, ann_to_type(ann));\n             e_1 = ast.expr_do_while(bloc, cond, ast.ann_type(t));\n         }\n         case (ast.expr_block(?bloc, ?ann)) {\n-            auto t = demand(fcx, e.span, ann_to_type(ann), expected);\n+            auto t = demand(fcx, e.span, expected, ann_to_type(ann));\n             e_1 = ast.expr_block(bloc, ast.ann_type(t));\n         }\n         case (ast.expr_assign(?lhs, ?rhs, ?ann)) {\n-            auto t = demand(fcx, e.span, ann_to_type(ann), expected);\n+            auto t = demand(fcx, e.span, expected, ann_to_type(ann));\n             e_1 = ast.expr_assign(lhs, rhs, ast.ann_type(t));\n         }\n         case (ast.expr_field(?lhs, ?rhs, ?ann)) {\n-            auto t = demand(fcx, e.span, ann_to_type(ann), expected);\n+            auto t = demand(fcx, e.span, expected, ann_to_type(ann));\n             e_1 = ast.expr_field(lhs, rhs, ast.ann_type(t));\n         }\n         case (ast.expr_index(?base, ?index, ?ann)) {\n-            auto t = demand(fcx, e.span, ann_to_type(ann), expected);\n+            auto t = demand(fcx, e.span, expected, ann_to_type(ann));\n             e_1 = ast.expr_index(base, index, ast.ann_type(t));\n         }\n         case (ast.expr_name(?name, ?d, ?ann)) {\n-            auto t = demand(fcx, e.span, ann_to_type(ann), expected);\n+            auto t = demand(fcx, e.span, expected, ann_to_type(ann));\n             e_1 = ast.expr_name(name, d, ast.ann_type(t));\n         }\n         case (_) {"}]}