{"sha": "614d6da828969389871e01d1b8a17b3ccc1a5caa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYxNGQ2ZGE4Mjg5NjkzODk4NzFlMDFkMWI4YTE3YjNjY2MxYTVjYWE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-04-06T01:54:52Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-04-06T01:54:52Z"}, "message": "auto merge of #5721 : dhardy/rust/master, r=graydon\n\nThis is some stuff which seemed to be missing to me (though I haven't read everything yet so hope I haven't missed the relevant section).\r\n\r\nA similar addition for borrowing handles is needed, but #5720 stumped me.\r\n\r\nComments welcome.", "tree": {"sha": "fbab1f12447a5bd53882c7364974193a8035c59b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fbab1f12447a5bd53882c7364974193a8035c59b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/614d6da828969389871e01d1b8a17b3ccc1a5caa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/614d6da828969389871e01d1b8a17b3ccc1a5caa", "html_url": "https://github.com/rust-lang/rust/commit/614d6da828969389871e01d1b8a17b3ccc1a5caa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/614d6da828969389871e01d1b8a17b3ccc1a5caa/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "08e2cf846aebf5a9f5e53881814976a3beee89a7", "url": "https://api.github.com/repos/rust-lang/rust/commits/08e2cf846aebf5a9f5e53881814976a3beee89a7", "html_url": "https://github.com/rust-lang/rust/commit/08e2cf846aebf5a9f5e53881814976a3beee89a7"}, {"sha": "e2a6feb8fe38be01512f0fd1ea08b1909f190892", "url": "https://api.github.com/repos/rust-lang/rust/commits/e2a6feb8fe38be01512f0fd1ea08b1909f190892", "html_url": "https://github.com/rust-lang/rust/commit/e2a6feb8fe38be01512f0fd1ea08b1909f190892"}], "stats": {"total": 32, "additions": 32, "deletions": 0}, "files": [{"sha": "902a79029725ef5309ee8a7f9c16699c65303140", "filename": "doc/tutorial.md", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/614d6da828969389871e01d1b8a17b3ccc1a5caa/doc%2Ftutorial.md", "raw_url": "https://github.com/rust-lang/rust/raw/614d6da828969389871e01d1b8a17b3ccc1a5caa/doc%2Ftutorial.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Ftutorial.md?ref=614d6da828969389871e01d1b8a17b3ccc1a5caa", "patch": "@@ -1067,6 +1067,28 @@ let mut d = @mut 5; // mutable variable, mutable box\n d = @mut 15;\n ~~~~\n \n+A mutable variable and an immutable variable can refer to the same box, given \n+that their types are compatible. Mutability of a box is a property of its type, \n+however, so for example a mutable handle to an immutable box cannot be \n+assigned a reference to a mutable box.\n+\n+~~~~\n+let a = @1;     // immutable box\n+let b = @mut 2; // mutable box\n+\n+let mut c : @int;       // declare a variable with type managed immutable int\n+let mut d : @mut int;   // and one of type managed mutable int\n+\n+c = a;          // box type is the same, okay\n+d = b;          // box type is the same, okay\n+~~~~\n+\n+~~~~ {.xfail-test}\n+// but b cannot be assigned to c, or a to d\n+c = b;          // error\n+~~~~\n+\n+\n # Move semantics\n \n Rust uses a shallow copy for parameter passing, assignment and returning values\n@@ -1081,6 +1103,16 @@ let y = x.clone(); // y is a newly allocated box\n let z = x; // no new memory allocated, x can no longer be used\n ~~~~\n \n+Since in owned boxes mutability is a property of the owner, not the \n+box, mutable boxes may become immutable when they are moved, and vice-versa.\n+\n+~~~~\n+let r = ~13;\n+let mut s = r; // box becomes mutable\n+*s += 1;\n+let t = s; // box becomes immutable\n+~~~~\n+\n # Borrowed pointers\n \n Rust's borrowed pointers are a general purpose reference type. In contrast with"}]}