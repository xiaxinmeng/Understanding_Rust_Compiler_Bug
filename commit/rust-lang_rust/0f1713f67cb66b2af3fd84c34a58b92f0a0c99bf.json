{"sha": "0f1713f67cb66b2af3fd84c34a58b92f0a0c99bf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBmMTcxM2Y2N2NiNjZiMmFmM2ZkODRjMzRhNThiOTJmMGEwYzk5YmY=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-03-19T14:50:02Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-03-19T14:54:09Z"}, "message": "whitelist platforms where panicking should work", "tree": {"sha": "44b8a27b6d4e25d05280b62d10e45f148941fd30", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/44b8a27b6d4e25d05280b62d10e45f148941fd30"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0f1713f67cb66b2af3fd84c34a58b92f0a0c99bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0f1713f67cb66b2af3fd84c34a58b92f0a0c99bf", "html_url": "https://github.com/rust-lang/rust/commit/0f1713f67cb66b2af3fd84c34a58b92f0a0c99bf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0f1713f67cb66b2af3fd84c34a58b92f0a0c99bf/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0ff05c4cfe534321b194bf3bedf028df92ef519c", "url": "https://api.github.com/repos/rust-lang/rust/commits/0ff05c4cfe534321b194bf3bedf028df92ef519c", "html_url": "https://github.com/rust-lang/rust/commit/0ff05c4cfe534321b194bf3bedf028df92ef519c"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "af2c6d6ebb9a61c10eba0170aa2883364ebc123e", "filename": "src/shims/foreign_items.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0f1713f67cb66b2af3fd84c34a58b92f0a0c99bf/src%2Fshims%2Fforeign_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f1713f67cb66b2af3fd84c34a58b92f0a0c99bf/src%2Fshims%2Fforeign_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fforeign_items.rs?ref=0f1713f67cb66b2af3fd84c34a58b92f0a0c99bf", "patch": "@@ -132,6 +132,12 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n                 // This matches calls to the foreign item `panic_impl`.\n                 // The implementation is provided by the function with the `#[panic_handler]` attribute.\n                 \"panic_impl\" => {\n+                    // Make sure panicking actually works on this platform.\n+                    match this.tcx.sess.target.target.target_os.as_str() {\n+                        \"linux\" | \"macos\" => {},\n+                        _ => throw_unsup_format!(\"panicking is not supported on this platform\"),\n+                    }\n+\n                     let panic_impl_id = this.tcx.lang_items().panic_impl().unwrap();\n                     let panic_impl_instance = ty::Instance::mono(*this.tcx, panic_impl_id);\n                     return Ok(Some(&*this.load_mir(panic_impl_instance.def, None)?));"}]}