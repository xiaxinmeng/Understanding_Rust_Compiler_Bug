{"sha": "20097be2feaaa92c3a2843fb1c57c6a28d3dcf29", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIwMDk3YmUyZmVhYWE5MmMzYTI4NDNmYjFjNTdjNmEyOGQzZGNmMjk=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-05-09T09:54:35Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-05-09T09:54:45Z"}, "message": "more comment", "tree": {"sha": "5a80ebfaa560914e2d725c5263504e27340a82ac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5a80ebfaa560914e2d725c5263504e27340a82ac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/20097be2feaaa92c3a2843fb1c57c6a28d3dcf29", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/20097be2feaaa92c3a2843fb1c57c6a28d3dcf29", "html_url": "https://github.com/rust-lang/rust/commit/20097be2feaaa92c3a2843fb1c57c6a28d3dcf29", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/20097be2feaaa92c3a2843fb1c57c6a28d3dcf29/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1ba42b9f55b11a13a507534e9b832b4d754d6435", "url": "https://api.github.com/repos/rust-lang/rust/commits/1ba42b9f55b11a13a507534e9b832b4d754d6435", "html_url": "https://github.com/rust-lang/rust/commit/1ba42b9f55b11a13a507534e9b832b4d754d6435"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "8bd9947092a783854c8461a357eaa2cdf6ba54a8", "filename": "src/bin/cargo-miri.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/20097be2feaaa92c3a2843fb1c57c6a28d3dcf29/src%2Fbin%2Fcargo-miri.rs", "raw_url": "https://github.com/rust-lang/rust/raw/20097be2feaaa92c3a2843fb1c57c6a28d3dcf29/src%2Fbin%2Fcargo-miri.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fcargo-miri.rs?ref=20097be2feaaa92c3a2843fb1c57c6a28d3dcf29", "patch": "@@ -502,7 +502,8 @@ fn inside_cargo_rustc() {\n     ///\n     /// Currently, we detect this by checking for \"--target=\", which is\n     /// never set for host crates. This matches what rustc bootstrap does,\n-    /// which hopefully makes it \"reliable enough\".\n+    /// which hopefully makes it \"reliable enough\". This relies on us always\n+    /// invoking cargo itself with `--target`, which `in_cargo_miri` ensures.\n     fn is_target_crate() -> bool {\n         get_arg_flag_value(\"--target\").is_some()\n     }"}]}