{"sha": "9cbe3b749dfb39fde5992081e18114700ed5bd80", "node_id": "MDY6Q29tbWl0NzI0NzEyOjljYmUzYjc0OWRmYjM5ZmRlNTk5MjA4MWUxODExNDcwMGVkNWJkODA=", "commit": {"author": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2018-04-15T21:21:00Z"}, "committer": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2018-04-16T21:30:36Z"}, "message": "Update tests", "tree": {"sha": "d50581518bf8e3d03fb904e83186321409ed0b55", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d50581518bf8e3d03fb904e83186321409ed0b55"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9cbe3b749dfb39fde5992081e18114700ed5bd80", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9cbe3b749dfb39fde5992081e18114700ed5bd80", "html_url": "https://github.com/rust-lang/rust/commit/9cbe3b749dfb39fde5992081e18114700ed5bd80", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9cbe3b749dfb39fde5992081e18114700ed5bd80/comments", "author": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5841c687a39f7aed99cde543e60199b4dabff76b", "url": "https://api.github.com/repos/rust-lang/rust/commits/5841c687a39f7aed99cde543e60199b4dabff76b", "html_url": "https://github.com/rust-lang/rust/commit/5841c687a39f7aed99cde543e60199b4dabff76b"}], "stats": {"total": 216, "additions": 83, "deletions": 133}, "files": [{"sha": "5db901b5ba1c202e08570b239df0412eacd73dcc", "filename": "src/test/compile-fail/coherence-inherited-assoc-ty-cycle-err.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9cbe3b749dfb39fde5992081e18114700ed5bd80/src%2Ftest%2Fcompile-fail%2Fcoherence-inherited-assoc-ty-cycle-err.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9cbe3b749dfb39fde5992081e18114700ed5bd80/src%2Ftest%2Fcompile-fail%2Fcoherence-inherited-assoc-ty-cycle-err.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fcoherence-inherited-assoc-ty-cycle-err.rs?ref=9cbe3b749dfb39fde5992081e18114700ed5bd80", "patch": "@@ -17,7 +17,7 @@\n #![feature(specialization)]\n \n trait Trait<T> { type Assoc; }\n-//~^ cyclic dependency detected [E0391]\n+//~^ cycle detected\n \n impl<T> Trait<T> for Vec<T> {\n     type Assoc = ();"}, {"sha": "fed8e1885de8a996296b37ce83cb1affc554262f", "filename": "src/test/compile-fail/const-size_of-cycle.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9cbe3b749dfb39fde5992081e18114700ed5bd80/src%2Ftest%2Fcompile-fail%2Fconst-size_of-cycle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9cbe3b749dfb39fde5992081e18114700ed5bd80/src%2Ftest%2Fcompile-fail%2Fconst-size_of-cycle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fconst-size_of-cycle.rs?ref=9cbe3b749dfb39fde5992081e18114700ed5bd80", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// error-pattern: cyclic dependency detected\n+// error-pattern: cycle detected\n \n #![feature(const_fn)]\n "}, {"sha": "56ad1771e00bd0f2a7403c7c75f7c68c15942720", "filename": "src/test/compile-fail/cycle-projection-based-on-where-clause.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9cbe3b749dfb39fde5992081e18114700ed5bd80/src%2Ftest%2Fcompile-fail%2Fcycle-projection-based-on-where-clause.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9cbe3b749dfb39fde5992081e18114700ed5bd80/src%2Ftest%2Fcompile-fail%2Fcycle-projection-based-on-where-clause.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fcycle-projection-based-on-where-clause.rs?ref=9cbe3b749dfb39fde5992081e18114700ed5bd80", "patch": "@@ -25,7 +25,7 @@ trait Trait { type Item; }\n struct A<T>\n     where T : Trait,\n           T : Add<T::Item>\n-    //~^ ERROR cyclic dependency detected\n+    //~^ ERROR cycle detected\n     //~| ERROR associated type `Item` not found for `T`\n {\n     data: T"}, {"sha": "b8bae2154566e584ca15bed75a0d515b7ea96103", "filename": "src/test/compile-fail/cycle-trait-default-type-trait.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9cbe3b749dfb39fde5992081e18114700ed5bd80/src%2Ftest%2Fcompile-fail%2Fcycle-trait-default-type-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9cbe3b749dfb39fde5992081e18114700ed5bd80/src%2Ftest%2Fcompile-fail%2Fcycle-trait-default-type-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fcycle-trait-default-type-trait.rs?ref=9cbe3b749dfb39fde5992081e18114700ed5bd80", "patch": "@@ -12,7 +12,7 @@\n // again references the trait.\n \n trait Foo<X = Box<Foo>> {\n-    //~^ ERROR cyclic dependency detected\n+    //~^ ERROR cycle detected\n }\n \n fn main() { }"}, {"sha": "b802463fcb036dfa47dde3e0d6a7b158210869ad", "filename": "src/test/compile-fail/cycle-trait-supertrait-direct.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9cbe3b749dfb39fde5992081e18114700ed5bd80/src%2Ftest%2Fcompile-fail%2Fcycle-trait-supertrait-direct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9cbe3b749dfb39fde5992081e18114700ed5bd80/src%2Ftest%2Fcompile-fail%2Fcycle-trait-supertrait-direct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fcycle-trait-supertrait-direct.rs?ref=9cbe3b749dfb39fde5992081e18114700ed5bd80", "patch": "@@ -11,7 +11,7 @@\n // Test a supertrait cycle where a trait extends itself.\n \n trait Chromosome: Chromosome {\n-    //~^ ERROR cyclic dependency detected\n+    //~^ ERROR cycle detected\n }\n \n fn main() { }"}, {"sha": "42c80b54313d0f45217b849e5c91a38bcf4841e6", "filename": "src/test/compile-fail/infinite-vec-type-recursion.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9cbe3b749dfb39fde5992081e18114700ed5bd80/src%2Ftest%2Fcompile-fail%2Finfinite-vec-type-recursion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9cbe3b749dfb39fde5992081e18114700ed5bd80/src%2Ftest%2Fcompile-fail%2Finfinite-vec-type-recursion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Finfinite-vec-type-recursion.rs?ref=9cbe3b749dfb39fde5992081e18114700ed5bd80", "patch": "@@ -9,6 +9,6 @@\n // except according to those terms.\n \n type x = Vec<x>;\n-//~^ ERROR cyclic dependency detected\n+//~^ ERROR cycle detected\n \n fn main() { let b: x = Vec::new(); }"}, {"sha": "d67c76a1525d51b55d280e4483fc43e5bf54d9d3", "filename": "src/test/compile-fail/issue-20772.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9cbe3b749dfb39fde5992081e18114700ed5bd80/src%2Ftest%2Fcompile-fail%2Fissue-20772.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9cbe3b749dfb39fde5992081e18114700ed5bd80/src%2Ftest%2Fcompile-fail%2Fissue-20772.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-20772.rs?ref=9cbe3b749dfb39fde5992081e18114700ed5bd80", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n trait T : Iterator<Item=Self::Item>\n-//~^ ERROR cyclic dependency detected\n+//~^ ERROR cycle detected\n //~| ERROR associated type `Item` not found for `Self`\n {}\n "}, {"sha": "cbb987cd512afb65ce78941a2d793d70cefeb230", "filename": "src/test/compile-fail/issue-20825.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9cbe3b749dfb39fde5992081e18114700ed5bd80/src%2Ftest%2Fcompile-fail%2Fissue-20825.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9cbe3b749dfb39fde5992081e18114700ed5bd80/src%2Ftest%2Fcompile-fail%2Fissue-20825.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-20825.rs?ref=9cbe3b749dfb39fde5992081e18114700ed5bd80", "patch": "@@ -13,7 +13,7 @@ pub trait Subscriber {\n }\n \n pub trait Processor: Subscriber<Input = Self::Input> {\n-    //~^ ERROR cyclic dependency detected [E0391]\n+    //~^ ERROR cycle detected\n     type Input;\n }\n "}, {"sha": "9da57877a09dcdfff59837ed46bed958ca682861", "filename": "src/test/compile-fail/issue-21177.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9cbe3b749dfb39fde5992081e18114700ed5bd80/src%2Ftest%2Fcompile-fail%2Fissue-21177.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9cbe3b749dfb39fde5992081e18114700ed5bd80/src%2Ftest%2Fcompile-fail%2Fissue-21177.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-21177.rs?ref=9cbe3b749dfb39fde5992081e18114700ed5bd80", "patch": "@@ -14,7 +14,7 @@ trait Trait {\n }\n \n fn foo<T: Trait<A = T::B>>() { }\n-//~^ ERROR cyclic dependency detected\n+//~^ ERROR cycle detected\n //~| ERROR associated type `B` not found for `T`\n \n fn main() { }"}, {"sha": "2396007c3df3ed06ffe717f9132d77ed4ecf701e", "filename": "src/test/compile-fail/issue-22673.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9cbe3b749dfb39fde5992081e18114700ed5bd80/src%2Ftest%2Fcompile-fail%2Fissue-22673.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9cbe3b749dfb39fde5992081e18114700ed5bd80/src%2Ftest%2Fcompile-fail%2Fissue-22673.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-22673.rs?ref=9cbe3b749dfb39fde5992081e18114700ed5bd80", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n trait Expr : PartialEq<Self::Item> {\n-    //~^ ERROR: cyclic dependency detected\n+    //~^ ERROR: cycle detected\n     type Item;\n }\n "}, {"sha": "aab674fbb1a44e11635b4a0adcc6035894164722", "filename": "src/test/compile-fail/issue-26548.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9cbe3b749dfb39fde5992081e18114700ed5bd80/src%2Ftest%2Fcompile-fail%2Fissue-26548.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9cbe3b749dfb39fde5992081e18114700ed5bd80/src%2Ftest%2Fcompile-fail%2Fissue-26548.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-26548.rs?ref=9cbe3b749dfb39fde5992081e18114700ed5bd80", "patch": "@@ -8,11 +8,9 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// error-pattern: cyclic dependency detected\n-// note-pattern: the cycle begins when computing layout of\n-// note-pattern: ...which then requires computing layout of\n-// note-pattern: ...which then again requires computing layout of\n-\n+// error-pattern: cycle detected when computing layout of\n+// note-pattern: ...which requires computing layout of\n+// note-pattern: ...which again requires computing layout of\n \n trait Mirror { type It: ?Sized; }\n impl<T: ?Sized> Mirror for T { type It = Self; }"}, {"sha": "4d7238ad76f75acee3743086feb6639682c8c212", "filename": "src/test/compile-fail/issue-34373.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9cbe3b749dfb39fde5992081e18114700ed5bd80/src%2Ftest%2Fcompile-fail%2Fissue-34373.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9cbe3b749dfb39fde5992081e18114700ed5bd80/src%2Ftest%2Fcompile-fail%2Fissue-34373.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-34373.rs?ref=9cbe3b749dfb39fde5992081e18114700ed5bd80", "patch": "@@ -14,8 +14,8 @@ trait Trait<T> {\n     fn foo(_: T) {}\n }\n \n-pub struct Foo<T = Box<Trait<DefaultFoo>>>;\n-type DefaultFoo = Foo; //~ ERROR cyclic dependency detected\n+pub struct Foo<T = Box<Trait<DefaultFoo>>>;  //~ ERROR cycle detected\n+type DefaultFoo = Foo;\n \n fn main() {\n }"}, {"sha": "ecaf326b0504dde984f16c7f627a6074eb99d108", "filename": "src/test/compile-fail/issue-44415.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9cbe3b749dfb39fde5992081e18114700ed5bd80/src%2Ftest%2Fcompile-fail%2Fissue-44415.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9cbe3b749dfb39fde5992081e18114700ed5bd80/src%2Ftest%2Fcompile-fail%2Fissue-44415.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-44415.rs?ref=9cbe3b749dfb39fde5992081e18114700ed5bd80", "patch": "@@ -8,14 +8,15 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// error-pattern: cycle detected when computing layout of\n+\n #![feature(const_fn)]\n #![feature(core_intrinsics)]\n \n use std::intrinsics;\n \n struct Foo {\n     bytes: [u8; unsafe { intrinsics::size_of::<Foo>() }],\n-    //~^ ERROR cyclic dependency detected\n     x: usize,\n }\n "}, {"sha": "2a894c57b8df19c5a83d9b131f7d0de6ffb90d06", "filename": "src/test/compile-fail/resolve-self-in-impl.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/9cbe3b749dfb39fde5992081e18114700ed5bd80/src%2Ftest%2Fcompile-fail%2Fresolve-self-in-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9cbe3b749dfb39fde5992081e18114700ed5bd80/src%2Ftest%2Fcompile-fail%2Fresolve-self-in-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fresolve-self-in-impl.rs?ref=9cbe3b749dfb39fde5992081e18114700ed5bd80", "patch": "@@ -21,10 +21,10 @@ impl Tr for S where Self: Copy {} // OK\n impl Tr for S where S<Self>: Copy {} // OK\n impl Tr for S where Self::A: Copy {} // OK\n \n-impl Tr for Self {} //~ ERROR cyclic dependency detected\n-impl Tr for S<Self> {} //~ ERROR cyclic dependency detected\n-impl Self {} //~ ERROR cyclic dependency detected\n-impl S<Self> {} //~ ERROR cyclic dependency detected\n-impl Tr<Self::A> for S {} //~ ERROR cyclic dependency detected\n+impl Tr for Self {} //~ ERROR cycle detected\n+impl Tr for S<Self> {} //~ ERROR cycle detected\n+impl Self {} //~ ERROR cycle detected\n+impl S<Self> {} //~ ERROR cycle detected\n+impl Tr<Self::A> for S {} //~ ERROR cycle detected\n \n fn main() {}"}, {"sha": "f240a34817db5ff8c20e1247ffd182695fadb78c", "filename": "src/test/ui/cycle-trait-supertrait-indirect.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9cbe3b749dfb39fde5992081e18114700ed5bd80/src%2Ftest%2Fui%2Fcycle-trait-supertrait-indirect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9cbe3b749dfb39fde5992081e18114700ed5bd80/src%2Ftest%2Fui%2Fcycle-trait-supertrait-indirect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcycle-trait-supertrait-indirect.rs?ref=9cbe3b749dfb39fde5992081e18114700ed5bd80", "patch": "@@ -15,10 +15,9 @@ trait A: B {\n }\n \n trait B: C {\n+    //~^ ERROR cycle detected\n }\n \n trait C: B { }\n-    //~^ ERROR cyclic dependency detected\n-    //~| cyclic reference\n \n fn main() { }"}, {"sha": "85681b478e21df537afe9fade5f8fe5594836be0", "filename": "src/test/ui/cycle-trait-supertrait-indirect.stderr", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/9cbe3b749dfb39fde5992081e18114700ed5bd80/src%2Ftest%2Fui%2Fcycle-trait-supertrait-indirect.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9cbe3b749dfb39fde5992081e18114700ed5bd80/src%2Ftest%2Fui%2Fcycle-trait-supertrait-indirect.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcycle-trait-supertrait-indirect.stderr?ref=9cbe3b749dfb39fde5992081e18114700ed5bd80", "patch": "@@ -1,20 +1,20 @@\n-error[E0391]: cyclic dependency detected\n-  --> $DIR/cycle-trait-supertrait-indirect.rs:20:1\n+error[E0391]: cycle detected when computing the supertraits of `B`\n+  --> $DIR/cycle-trait-supertrait-indirect.rs:17:1\n    |\n-LL | trait C: B { }\n-   | ^^^^^^^^^^ cyclic reference\n+LL | trait B: C {\n+   | ^^^^^^^^^^\n    |\n-note: the cycle begins when computing the supertraits of `B`...\n-  --> $DIR/cycle-trait-supertrait-indirect.rs:14:1\n+note: ...which requires computing the supertraits of `C`...\n+  --> $DIR/cycle-trait-supertrait-indirect.rs:21:1\n    |\n-LL | trait A: B {\n+LL | trait C: B { }\n    | ^^^^^^^^^^\n-note: ...which then requires computing the supertraits of `C`...\n-  --> $DIR/cycle-trait-supertrait-indirect.rs:17:1\n+   = note: ...which again requires computing the supertraits of `B`, completing the cycle\n+note: cycle used when computing the supertraits of `A`\n+  --> $DIR/cycle-trait-supertrait-indirect.rs:14:1\n    |\n-LL | trait B: C {\n+LL | trait A: B {\n    | ^^^^^^^^^^\n-   = note: ...which then again requires computing the supertraits of `B`, completing the cycle.\n \n error: aborting due to previous error\n "}, {"sha": "54d548757643320c57c973f1359202c5eceaaba7", "filename": "src/test/ui/impl-trait/auto-trait-leak.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9cbe3b749dfb39fde5992081e18114700ed5bd80/src%2Ftest%2Fui%2Fimpl-trait%2Fauto-trait-leak.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9cbe3b749dfb39fde5992081e18114700ed5bd80/src%2Ftest%2Fui%2Fimpl-trait%2Fauto-trait-leak.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fauto-trait-leak.rs?ref=9cbe3b749dfb39fde5992081e18114700ed5bd80", "patch": "@@ -40,8 +40,7 @@ fn after() -> impl Fn(i32) {\n // independently resolved and only require the concrete\n // return type, which can't depend on the obligation.\n fn cycle1() -> impl Clone {\n-    //~^ ERROR cyclic dependency detected\n-    //~| cyclic reference\n+    //~^ ERROR cycle detected\n     send(cycle2().clone());\n \n     Rc::new(Cell::new(5))"}, {"sha": "3b20451b10215afd4495b47b8ac21bf110a96e0c", "filename": "src/test/ui/impl-trait/auto-trait-leak.stderr", "status": "modified", "additions": 9, "deletions": 13, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/9cbe3b749dfb39fde5992081e18114700ed5bd80/src%2Ftest%2Fui%2Fimpl-trait%2Fauto-trait-leak.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9cbe3b749dfb39fde5992081e18114700ed5bd80/src%2Ftest%2Fui%2Fimpl-trait%2Fauto-trait-leak.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fauto-trait-leak.stderr?ref=9cbe3b749dfb39fde5992081e18114700ed5bd80", "patch": "@@ -28,33 +28,29 @@ note: required by `send`\n LL | fn send<T: Send>(_: T) {}\n    | ^^^^^^^^^^^^^^^^^^^^^^\n \n-error[E0391]: cyclic dependency detected\n-  --> $DIR/auto-trait-leak.rs:42:1\n-   |\n-LL | fn cycle1() -> impl Clone {\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^ cyclic reference\n-   |\n-note: the cycle begins when processing `cycle1`...\n+error[E0391]: cycle detected when processing `cycle1`\n   --> $DIR/auto-trait-leak.rs:42:1\n    |\n LL | fn cycle1() -> impl Clone {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^\n-note: ...which then requires processing `cycle2::{{impl-Trait}}`...\n-  --> $DIR/auto-trait-leak.rs:50:16\n+   |\n+note: ...which requires processing `cycle2::{{impl-Trait}}`...\n+  --> $DIR/auto-trait-leak.rs:49:16\n    |\n LL | fn cycle2() -> impl Clone {\n    |                ^^^^^^^^^^\n-note: ...which then requires processing `cycle2`...\n-  --> $DIR/auto-trait-leak.rs:50:1\n+note: ...which requires processing `cycle2`...\n+  --> $DIR/auto-trait-leak.rs:49:1\n    |\n LL | fn cycle2() -> impl Clone {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^\n-note: ...which then requires processing `cycle1::{{impl-Trait}}`...\n+note: ...which requires processing `cycle1::{{impl-Trait}}`...\n   --> $DIR/auto-trait-leak.rs:42:16\n    |\n LL | fn cycle1() -> impl Clone {\n    |                ^^^^^^^^^^\n-   = note: ...which then again requires processing `cycle1`, completing the cycle.\n+   = note: ...which again requires processing `cycle1`, completing the cycle\n+note: cycle used when type-checking all item bodies\n \n error: aborting due to 3 previous errors\n "}, {"sha": "83359bf1675d94bd362955044bc416da1fc75342", "filename": "src/test/ui/issue-12511.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9cbe3b749dfb39fde5992081e18114700ed5bd80/src%2Ftest%2Fui%2Fissue-12511.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9cbe3b749dfb39fde5992081e18114700ed5bd80/src%2Ftest%2Fui%2Fissue-12511.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-12511.rs?ref=9cbe3b749dfb39fde5992081e18114700ed5bd80", "patch": "@@ -9,11 +9,10 @@\n // except according to those terms.\n \n trait t1 : t2 {\n+//~^ ERROR cycle detected\n }\n \n trait t2 : t1 {\n-//~^ ERROR cyclic dependency detected\n-//~| cyclic reference\n }\n \n fn main() { }"}, {"sha": "1a48e6a6de1c6a8f2d56219f84be9578a9650949", "filename": "src/test/ui/issue-12511.stderr", "status": "modified", "additions": 6, "deletions": 11, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/9cbe3b749dfb39fde5992081e18114700ed5bd80/src%2Ftest%2Fui%2Fissue-12511.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9cbe3b749dfb39fde5992081e18114700ed5bd80/src%2Ftest%2Fui%2Fissue-12511.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-12511.stderr?ref=9cbe3b749dfb39fde5992081e18114700ed5bd80", "patch": "@@ -1,20 +1,15 @@\n-error[E0391]: cyclic dependency detected\n-  --> $DIR/issue-12511.rs:14:1\n-   |\n-LL | trait t2 : t1 {\n-   | ^^^^^^^^^^^^^ cyclic reference\n-   |\n-note: the cycle begins when computing the supertraits of `t1`...\n+error[E0391]: cycle detected when computing the supertraits of `t1`\n   --> $DIR/issue-12511.rs:11:1\n    |\n LL | trait t1 : t2 {\n    | ^^^^^^^^^^^^^\n-note: ...which then requires computing the supertraits of `t2`...\n-  --> $DIR/issue-12511.rs:11:1\n    |\n-LL | trait t1 : t2 {\n+note: ...which requires computing the supertraits of `t2`...\n+  --> $DIR/issue-12511.rs:15:1\n+   |\n+LL | trait t2 : t1 {\n    | ^^^^^^^^^^^^^\n-   = note: ...which then again requires computing the supertraits of `t1`, completing the cycle.\n+   = note: ...which again requires computing the supertraits of `t1`, completing the cycle\n \n error: aborting due to previous error\n "}, {"sha": "0fbe2f7a41177a5458b02e45d63c09009e01ee12", "filename": "src/test/ui/issue-23302-1.stderr", "status": "modified", "additions": 4, "deletions": 13, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/9cbe3b749dfb39fde5992081e18114700ed5bd80/src%2Ftest%2Fui%2Fissue-23302-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9cbe3b749dfb39fde5992081e18114700ed5bd80/src%2Ftest%2Fui%2Fissue-23302-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-23302-1.stderr?ref=9cbe3b749dfb39fde5992081e18114700ed5bd80", "patch": "@@ -1,20 +1,11 @@\n-error[E0391]: cyclic dependency detected\n-  --> $DIR/issue-23302-1.rs:14:9\n-   |\n-LL |     A = X::A as isize, //~ ERROR E0391\n-   |         ^^^^^^^^^^^^^ cyclic reference\n-   |\n-note: the cycle begins when const-evaluating `X::A::{{initializer}}`...\n-  --> $DIR/issue-23302-1.rs:14:9\n-   |\n-LL |     A = X::A as isize, //~ ERROR E0391\n-   |         ^^^^^^^^^^^^^\n-note: ...which then requires computing layout of `X`...\n+error[E0391]: cycle detected when const-evaluating `X::A::{{initializer}}`\n   --> $DIR/issue-23302-1.rs:14:9\n    |\n LL |     A = X::A as isize, //~ ERROR E0391\n    |         ^^^^\n-   = note: ...which then again requires const-evaluating `X::A::{{initializer}}`, completing the cycle.\n+   |\n+note: ...which requires computing layout of `X`...\n+   = note: ...which again requires const-evaluating `X::A::{{initializer}}`, completing the cycle\n \n error: aborting due to previous error\n "}, {"sha": "313cfa0c16260af9f2a46b6c8125a29c01b3d91d", "filename": "src/test/ui/issue-23302-2.stderr", "status": "modified", "additions": 4, "deletions": 13, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/9cbe3b749dfb39fde5992081e18114700ed5bd80/src%2Ftest%2Fui%2Fissue-23302-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9cbe3b749dfb39fde5992081e18114700ed5bd80/src%2Ftest%2Fui%2Fissue-23302-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-23302-2.stderr?ref=9cbe3b749dfb39fde5992081e18114700ed5bd80", "patch": "@@ -1,20 +1,11 @@\n-error[E0391]: cyclic dependency detected\n-  --> $DIR/issue-23302-2.rs:14:9\n-   |\n-LL |     A = Y::B as isize, //~ ERROR E0391\n-   |         ^^^^^^^^^^^^^ cyclic reference\n-   |\n-note: the cycle begins when const-evaluating `Y::A::{{initializer}}`...\n-  --> $DIR/issue-23302-2.rs:14:9\n-   |\n-LL |     A = Y::B as isize, //~ ERROR E0391\n-   |         ^^^^^^^^^^^^^\n-note: ...which then requires computing layout of `Y`...\n+error[E0391]: cycle detected when const-evaluating `Y::A::{{initializer}}`\n   --> $DIR/issue-23302-2.rs:14:9\n    |\n LL |     A = Y::B as isize, //~ ERROR E0391\n    |         ^^^^\n-   = note: ...which then again requires const-evaluating `Y::A::{{initializer}}`, completing the cycle.\n+   |\n+note: ...which requires computing layout of `Y`...\n+   = note: ...which again requires const-evaluating `Y::A::{{initializer}}`, completing the cycle\n \n error: aborting due to previous error\n "}, {"sha": "c3664e0abe1149664d979e7ac07571a4ef6eafd7", "filename": "src/test/ui/issue-23302-3.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9cbe3b749dfb39fde5992081e18114700ed5bd80/src%2Ftest%2Fui%2Fissue-23302-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9cbe3b749dfb39fde5992081e18114700ed5bd80/src%2Ftest%2Fui%2Fissue-23302-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-23302-3.rs?ref=9cbe3b749dfb39fde5992081e18114700ed5bd80", "patch": "@@ -8,8 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-const A: i32 = B;\n+const A: i32 = B; //~ ERROR cycle detected\n \n-const B: i32 = A; //~ ERROR cyclic dependency detected\n+const B: i32 = A;\n \n fn main() { }"}, {"sha": "54edf42679aeff372be1589bebb10761135f1738", "filename": "src/test/ui/issue-23302-3.stderr", "status": "modified", "additions": 12, "deletions": 17, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/9cbe3b749dfb39fde5992081e18114700ed5bd80/src%2Ftest%2Fui%2Fissue-23302-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9cbe3b749dfb39fde5992081e18114700ed5bd80/src%2Ftest%2Fui%2Fissue-23302-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-23302-3.stderr?ref=9cbe3b749dfb39fde5992081e18114700ed5bd80", "patch": "@@ -1,30 +1,25 @@\n-error[E0391]: cyclic dependency detected\n-  --> $DIR/issue-23302-3.rs:13:16\n-   |\n-LL | const B: i32 = A; //~ ERROR cyclic dependency detected\n-   |                ^ cyclic reference\n-   |\n-note: the cycle begins when const checking if rvalue is promotable to static `A`...\n+error[E0391]: cycle detected when const checking if rvalue is promotable to static `A`\n   --> $DIR/issue-23302-3.rs:11:1\n    |\n-LL | const A: i32 = B;\n+LL | const A: i32 = B; //~ ERROR cycle detected\n    | ^^^^^^^^^^^^^^^^^\n-note: ...which then requires checking which parts of `A` are promotable to static...\n-  --> $DIR/issue-23302-3.rs:11:1\n    |\n-LL | const A: i32 = B;\n-   | ^^^^^^^^^^^^^^^^^\n-note: ...which then requires const checking if rvalue is promotable to static `B`...\n+note: ...which requires checking which parts of `A` are promotable to static...\n   --> $DIR/issue-23302-3.rs:11:16\n    |\n-LL | const A: i32 = B;\n+LL | const A: i32 = B; //~ ERROR cycle detected\n    |                ^\n-note: ...which then requires checking which parts of `B` are promotable to static...\n+note: ...which requires const checking if rvalue is promotable to static `B`...\n   --> $DIR/issue-23302-3.rs:13:1\n    |\n-LL | const B: i32 = A; //~ ERROR cyclic dependency detected\n+LL | const B: i32 = A;\n    | ^^^^^^^^^^^^^^^^^\n-   = note: ...which then again requires const checking if rvalue is promotable to static `A`, completing the cycle.\n+note: ...which requires checking which parts of `B` are promotable to static...\n+  --> $DIR/issue-23302-3.rs:13:16\n+   |\n+LL | const B: i32 = A;\n+   |                ^\n+   = note: ...which again requires const checking if rvalue is promotable to static `A`, completing the cycle\n \n error: aborting due to previous error\n "}, {"sha": "541f54ca7689148a1d4dcec6219b3e4583da68db", "filename": "src/test/ui/issue-36163.stderr", "status": "modified", "additions": 6, "deletions": 15, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/9cbe3b749dfb39fde5992081e18114700ed5bd80/src%2Ftest%2Fui%2Fissue-36163.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9cbe3b749dfb39fde5992081e18114700ed5bd80/src%2Ftest%2Fui%2Fissue-36163.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-36163.stderr?ref=9cbe3b749dfb39fde5992081e18114700ed5bd80", "patch": "@@ -1,30 +1,21 @@\n-error[E0391]: cyclic dependency detected\n-  --> $DIR/issue-36163.rs:14:9\n-   |\n-LL |     B = A, //~ ERROR E0391\n-   |         ^ cyclic reference\n-   |\n-note: the cycle begins when const-evaluating `Foo::B::{{initializer}}`...\n+error[E0391]: cycle detected when const-evaluating `Foo::B::{{initializer}}`\n   --> $DIR/issue-36163.rs:14:9\n    |\n LL |     B = A, //~ ERROR E0391\n    |         ^\n-note: ...which then requires processing `Foo::B::{{initializer}}`...\n+   |\n+note: ...which requires processing `Foo::B::{{initializer}}`...\n   --> $DIR/issue-36163.rs:14:9\n    |\n LL |     B = A, //~ ERROR E0391\n    |         ^\n-note: ...which then requires const-evaluating `A`...\n-  --> $DIR/issue-36163.rs:11:1\n-   |\n-LL | const A: isize = Foo::B as isize;\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-note: ...which then requires computing layout of `Foo`...\n+note: ...which requires const-evaluating `A`...\n   --> $DIR/issue-36163.rs:11:18\n    |\n LL | const A: isize = Foo::B as isize;\n    |                  ^^^^^^\n-   = note: ...which then again requires const-evaluating `Foo::B::{{initializer}}`, completing the cycle.\n+note: ...which requires computing layout of `Foo`...\n+   = note: ...which again requires const-evaluating `Foo::B::{{initializer}}`, completing the cycle\n \n error: aborting due to previous error\n "}, {"sha": "5ae4ce1f7ee302e54740282d5ec0a2cb9242e9c0", "filename": "src/test/ui/resolve/issue-23305.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9cbe3b749dfb39fde5992081e18114700ed5bd80/src%2Ftest%2Fui%2Fresolve%2Fissue-23305.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9cbe3b749dfb39fde5992081e18114700ed5bd80/src%2Ftest%2Fui%2Fresolve%2Fissue-23305.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-23305.rs?ref=9cbe3b749dfb39fde5992081e18114700ed5bd80", "patch": "@@ -13,6 +13,6 @@ pub trait ToNbt<T> {\n }\n \n impl ToNbt<Self> {}\n-//~^ ERROR cyclic dependency detected\n+//~^ ERROR cycle detected\n \n fn main() {}"}, {"sha": "d25a072fe0a886bdec4a57bcd6a88d655b1aef88", "filename": "src/test/ui/resolve/issue-23305.stderr", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/9cbe3b749dfb39fde5992081e18114700ed5bd80/src%2Ftest%2Fui%2Fresolve%2Fissue-23305.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9cbe3b749dfb39fde5992081e18114700ed5bd80/src%2Ftest%2Fui%2Fresolve%2Fissue-23305.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-23305.stderr?ref=9cbe3b749dfb39fde5992081e18114700ed5bd80", "patch": "@@ -1,15 +1,10 @@\n-error[E0391]: cyclic dependency detected\n+error[E0391]: cycle detected when processing `<impl at $DIR/issue-23305.rs:15:1: 15:20>`\n   --> $DIR/issue-23305.rs:15:12\n    |\n LL | impl ToNbt<Self> {}\n-   |            ^^^^ cyclic reference\n+   |            ^^^^\n    |\n-note: the cycle begins when processing `<impl at $DIR/issue-23305.rs:15:1: 15:20>`...\n-  --> $DIR/issue-23305.rs:15:1\n-   |\n-LL | impl ToNbt<Self> {}\n-   | ^^^^^^^^^^^^^^^^\n-   = note: ...which then again requires processing `<impl at $DIR/issue-23305.rs:15:1: 15:20>`, completing the cycle.\n+   = note: ...which again requires processing `<impl at $DIR/issue-23305.rs:15:1: 15:20>`, completing the cycle\n \n error: aborting due to previous error\n "}]}