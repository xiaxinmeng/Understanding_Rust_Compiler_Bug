{"sha": "9ff65b503f0ecb00e5ddcda1776b1c55b123fc46", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlmZjY1YjUwM2YwZWNiMDBlNWRkY2RhMTc3NmIxYzU1YjEyM2ZjNDY=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-22T01:14:53Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-26T23:54:32Z"}, "message": "librustc: De-`@mut` `TestCtxt::path`", "tree": {"sha": "12b193d9786e6689b7f8aff96f9d1e392fa0fe1f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/12b193d9786e6689b7f8aff96f9d1e392fa0fe1f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9ff65b503f0ecb00e5ddcda1776b1c55b123fc46", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9ff65b503f0ecb00e5ddcda1776b1c55b123fc46", "html_url": "https://github.com/rust-lang/rust/commit/9ff65b503f0ecb00e5ddcda1776b1c55b123fc46", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9ff65b503f0ecb00e5ddcda1776b1c55b123fc46/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a5d976297285ad837e5c7e3a4ce5e9d01d3848c5", "url": "https://api.github.com/repos/rust-lang/rust/commits/a5d976297285ad837e5c7e3a4ce5e9d01d3848c5", "html_url": "https://github.com/rust-lang/rust/commit/a5d976297285ad837e5c7e3a4ce5e9d01d3848c5"}], "stats": {"total": 19, "additions": 13, "deletions": 6}, "files": [{"sha": "eb8ccf53f0a94a6b6f35ecb3c87907ab3954dfbc", "filename": "src/librustc/front/test.rs", "status": "modified", "additions": 13, "deletions": 6, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/9ff65b503f0ecb00e5ddcda1776b1c55b123fc46/src%2Flibrustc%2Ffront%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ff65b503f0ecb00e5ddcda1776b1c55b123fc46/src%2Flibrustc%2Ffront%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ffront%2Ftest.rs?ref=9ff65b503f0ecb00e5ddcda1776b1c55b123fc46", "patch": "@@ -14,6 +14,7 @@\n use driver::session;\n use front::config;\n \n+use std::cell::RefCell;\n use std::vec;\n use syntax::ast_util::*;\n use syntax::attr::AttrMetaMethods;\n@@ -38,7 +39,7 @@ struct Test {\n \n struct TestCtxt {\n     sess: session::Session,\n-    path: ~[ast::Ident],\n+    path: RefCell<~[ast::Ident]>,\n     ext_cx: @ExtCtxt,\n     testfns: ~[Test],\n     is_extra: bool,\n@@ -78,9 +79,12 @@ impl fold::ast_fold for TestHarnessGenerator {\n     }\n \n     fn fold_item(&self, i: @ast::item) -> SmallVector<@ast::item> {\n-        self.cx.path.push(i.ident);\n+        {\n+            let mut path = self.cx.path.borrow_mut();\n+            path.get().push(i.ident);\n+        }\n         debug!(\"current path: {}\",\n-               ast_util::path_name_i(self.cx.path.clone()));\n+               ast_util::path_name_i(self.cx.path.get()));\n \n         if is_test_fn(self.cx, i) || is_bench_fn(i) {\n             match i.node {\n@@ -95,7 +99,7 @@ impl fold::ast_fold for TestHarnessGenerator {\n                     debug!(\"this is a test function\");\n                     let test = Test {\n                         span: i.span,\n-                        path: self.cx.path.clone(),\n+                        path: self.cx.path.get(),\n                         bench: is_bench_fn(i),\n                         ignore: is_ignored(self.cx, i),\n                         should_fail: should_fail(i)\n@@ -108,7 +112,10 @@ impl fold::ast_fold for TestHarnessGenerator {\n         }\n \n         let res = fold::noop_fold_item(i, self);\n-        self.cx.path.pop();\n+        {\n+            let mut path = self.cx.path.borrow_mut();\n+            path.get().pop();\n+        }\n         res\n     }\n \n@@ -147,7 +154,7 @@ fn generate_test_harness(sess: session::Session, crate: ast::Crate)\n     let cx: @mut TestCtxt = @mut TestCtxt {\n         sess: sess,\n         ext_cx: ExtCtxt::new(sess.parse_sess, sess.opts.cfg.clone()),\n-        path: ~[],\n+        path: RefCell::new(~[]),\n         testfns: ~[],\n         is_extra: is_extra(&crate),\n         config: crate.config.clone(),"}]}