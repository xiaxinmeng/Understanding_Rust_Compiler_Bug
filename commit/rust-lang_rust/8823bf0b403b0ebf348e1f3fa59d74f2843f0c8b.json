{"sha": "8823bf0b403b0ebf348e1f3fa59d74f2843f0c8b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg4MjNiZjBiNDAzYjBlYmYzNDhlMWYzZmE1OWQ3NGYyODQzZjBjOGI=", "commit": {"author": {"name": "Stein Somers", "email": "git@steinsomers.be", "date": "2019-01-09T21:19:54Z"}, "committer": {"name": "Stein Somers", "email": "git@steinsomers.be", "date": "2019-01-09T21:19:54Z"}, "message": "Fix poor worst case performance of is_disjoint", "tree": {"sha": "ef3438a54e2f0253380af560d465cf650fd61cee", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ef3438a54e2f0253380af560d465cf650fd61cee"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8823bf0b403b0ebf348e1f3fa59d74f2843f0c8b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8823bf0b403b0ebf348e1f3fa59d74f2843f0c8b", "html_url": "https://github.com/rust-lang/rust/commit/8823bf0b403b0ebf348e1f3fa59d74f2843f0c8b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8823bf0b403b0ebf348e1f3fa59d74f2843f0c8b/comments", "author": {"login": "ssomers", "id": 10174877, "node_id": "MDQ6VXNlcjEwMTc0ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/10174877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ssomers", "html_url": "https://github.com/ssomers", "followers_url": "https://api.github.com/users/ssomers/followers", "following_url": "https://api.github.com/users/ssomers/following{/other_user}", "gists_url": "https://api.github.com/users/ssomers/gists{/gist_id}", "starred_url": "https://api.github.com/users/ssomers/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ssomers/subscriptions", "organizations_url": "https://api.github.com/users/ssomers/orgs", "repos_url": "https://api.github.com/users/ssomers/repos", "events_url": "https://api.github.com/users/ssomers/events{/privacy}", "received_events_url": "https://api.github.com/users/ssomers/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ssomers", "id": 10174877, "node_id": "MDQ6VXNlcjEwMTc0ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/10174877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ssomers", "html_url": "https://github.com/ssomers", "followers_url": "https://api.github.com/users/ssomers/followers", "following_url": "https://api.github.com/users/ssomers/following{/other_user}", "gists_url": "https://api.github.com/users/ssomers/gists{/gist_id}", "starred_url": "https://api.github.com/users/ssomers/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ssomers/subscriptions", "organizations_url": "https://api.github.com/users/ssomers/orgs", "repos_url": "https://api.github.com/users/ssomers/repos", "events_url": "https://api.github.com/users/ssomers/events{/privacy}", "received_events_url": "https://api.github.com/users/ssomers/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "url": "https://api.github.com/repos/rust-lang/rust/commits/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44", "html_url": "https://github.com/rust-lang/rust/commit/ccba43df81d5bda37c9e4d231ad4443e6f3a7e44"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "c55dd049ec60fd15ca924349e78042f31cd3ae85", "filename": "src/libstd/collections/hash/set.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/8823bf0b403b0ebf348e1f3fa59d74f2843f0c8b/src%2Flibstd%2Fcollections%2Fhash%2Fset.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8823bf0b403b0ebf348e1f3fa59d74f2843f0c8b/src%2Flibstd%2Fcollections%2Fhash%2Fset.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcollections%2Fhash%2Fset.rs?ref=8823bf0b403b0ebf348e1f3fa59d74f2843f0c8b", "patch": "@@ -599,7 +599,11 @@ impl<T, S> HashSet<T, S>\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn is_disjoint(&self, other: &HashSet<T, S>) -> bool {\n-        self.iter().all(|v| !other.contains(v))\n+        if self.len() <= other.len() {\n+            self.iter().all(|v| !other.contains(v))\n+        } else {\n+            other.iter().all(|v| !self.contains(v))\n+        }\n     }\n \n     /// Returns `true` if the set is a subset of another,\n@@ -1510,7 +1514,6 @@ mod test_set {\n         let mut a = HashSet::new();\n         let mut b = HashSet::new();\n         assert!(a.intersection(&b).next().is_none());\n-        assert!(b.intersection(&a).next().is_none());\n \n         assert!(a.insert(11));\n         assert!(a.insert(1));"}]}