{"sha": "b82d76c8a14bcdb166d453604fde6903bb52d80e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI4MmQ3NmM4YTE0YmNkYjE2NmQ0NTM2MDRmZGU2OTAzYmI1MmQ4MGU=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2015-10-05T22:47:35Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2015-10-05T22:47:35Z"}, "message": "Add comment for the use of Ident in hash map in mtwt", "tree": {"sha": "4edd9bd015f31354163382c8ec156cc9843f40fa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4edd9bd015f31354163382c8ec156cc9843f40fa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b82d76c8a14bcdb166d453604fde6903bb52d80e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b82d76c8a14bcdb166d453604fde6903bb52d80e", "html_url": "https://github.com/rust-lang/rust/commit/b82d76c8a14bcdb166d453604fde6903bb52d80e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b82d76c8a14bcdb166d453604fde6903bb52d80e/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f37d6fc6f3732ce00cfb332d028b46a7807341ae", "url": "https://api.github.com/repos/rust-lang/rust/commits/f37d6fc6f3732ce00cfb332d028b46a7807341ae", "html_url": "https://github.com/rust-lang/rust/commit/f37d6fc6f3732ce00cfb332d028b46a7807341ae"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "7ac0e8c64c27554844a2809c8bfe8fc58f458692", "filename": "src/libsyntax/ext/mtwt.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b82d76c8a14bcdb166d453604fde6903bb52d80e/src%2Flibsyntax%2Fext%2Fmtwt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b82d76c8a14bcdb166d453604fde6903bb52d80e/src%2Flibsyntax%2Fext%2Fmtwt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fmtwt.rs?ref=b82d76c8a14bcdb166d453604fde6903bb52d80e", "patch": "@@ -35,6 +35,8 @@ use std::collections::HashMap;\n pub struct SCTable {\n     table: RefCell<Vec<SyntaxContext_>>,\n     mark_memo: RefCell<HashMap<(SyntaxContext,Mrk),SyntaxContext>>,\n+    // The pair (Name,SyntaxContext) is actually one Ident, but it needs to be hashed and\n+    // compared as pair (name, ctxt) and not as an Ident\n     rename_memo: RefCell<HashMap<(SyntaxContext,(Name,SyntaxContext),Name),SyntaxContext>>,\n }\n "}]}