{"sha": "f25f466afe7d4d94d711e4f288fd39ab72f1cc61", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYyNWY0NjZhZmU3ZDRkOTRkNzExZTRmMjg4ZmQzOWFiNzJmMWNjNjE=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-06-27T18:16:53Z"}, "committer": {"name": "Corey Richardson", "email": "corey@octayn.net", "date": "2013-06-28T14:47:59Z"}, "message": "librustc: Fix even *more* merge fallout!", "tree": {"sha": "24a07c645104ff214d1b3a62da1d086b76886f90", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/24a07c645104ff214d1b3a62da1d086b76886f90"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f25f466afe7d4d94d711e4f288fd39ab72f1cc61", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f25f466afe7d4d94d711e4f288fd39ab72f1cc61", "html_url": "https://github.com/rust-lang/rust/commit/f25f466afe7d4d94d711e4f288fd39ab72f1cc61", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f25f466afe7d4d94d711e4f288fd39ab72f1cc61/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "emberian", "id": 704250, "node_id": "MDQ6VXNlcjcwNDI1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/704250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emberian", "html_url": "https://github.com/emberian", "followers_url": "https://api.github.com/users/emberian/followers", "following_url": "https://api.github.com/users/emberian/following{/other_user}", "gists_url": "https://api.github.com/users/emberian/gists{/gist_id}", "starred_url": "https://api.github.com/users/emberian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emberian/subscriptions", "organizations_url": "https://api.github.com/users/emberian/orgs", "repos_url": "https://api.github.com/users/emberian/repos", "events_url": "https://api.github.com/users/emberian/events{/privacy}", "received_events_url": "https://api.github.com/users/emberian/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f6a27cbda273d5d39af953bca12990cc4930382c", "url": "https://api.github.com/repos/rust-lang/rust/commits/f6a27cbda273d5d39af953bca12990cc4930382c", "html_url": "https://github.com/rust-lang/rust/commit/f6a27cbda273d5d39af953bca12990cc4930382c"}], "stats": {"total": 19, "additions": 10, "deletions": 9}, "files": [{"sha": "69faf519bc2804f772711a7eea0dc7ebbbbf1e67", "filename": "src/librustc/metadata/decoder.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f25f466afe7d4d94d711e4f288fd39ab72f1cc61/src%2Flibrustc%2Fmetadata%2Fdecoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f25f466afe7d4d94d711e4f288fd39ab72f1cc61/src%2Flibrustc%2Fmetadata%2Fdecoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Fdecoder.rs?ref=f25f466afe7d4d94d711e4f288fd39ab72f1cc61", "patch": "@@ -523,10 +523,10 @@ impl<'self> EachItemContext<'self> {\n                 Mod | ForeignMod | Trait | Impl => {\n                     continue = self.each_item_of_module(def_id);\n                 }\n-                ImmStatic | MutStatic | Struct | UnsafeFn | Fn | PureFn |\n-                ForeignFn | UnsafeStaticMethod | StaticMethod |\n-                PureStaticMethod | Type | ForeignType | Variant | Enum |\n-                PublicField | PrivateField | InheritedField => {}\n+                ImmStatic | MutStatic | Struct | UnsafeFn | Fn | ForeignFn |\n+                UnsafeStaticMethod | StaticMethod | Type | ForeignType |\n+                Variant | Enum | PublicField | PrivateField |\n+                InheritedField => {}\n             }\n         }\n "}, {"sha": "175529be206296701996ae73bdf19915aac6f51b", "filename": "src/librustc/middle/ty.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f25f466afe7d4d94d711e4f288fd39ab72f1cc61/src%2Flibrustc%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f25f466afe7d4d94d711e4f288fd39ab72f1cc61/src%2Flibrustc%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fty.rs?ref=f25f466afe7d4d94d711e4f288fd39ab72f1cc61", "patch": "@@ -2293,11 +2293,11 @@ pub fn type_contents(cx: ctxt, ty: t) -> TypeContents {\n                 BoundCopy if store == UniqTraitStore\n                             => TC_NONCOPY_TRAIT,\n                 BoundCopy   => TC_NONE, // @Trait/&Trait are copyable either way\n-                BoundStatic if bounds.contains_elem(BoundOwned)\n-                            => TC_NONE, // Owned bound implies static bound.\n+                BoundStatic if bounds.contains_elem(BoundSend)\n+                            => TC_NONE, // Send bound implies static bound.\n                 BoundStatic => TC_BORROWED_POINTER, // Useful for \"@Trait:'static\"\n-                BoundOwned  => TC_NON_OWNED,\n-                BoundConst  => TC_MUTABLE,\n+                BoundSend   => TC_NON_SENDABLE,\n+                BoundFreeze => TC_MUTABLE,\n                 BoundSized  => TC_NONE, // don't care if interior is sized\n             };\n         }"}, {"sha": "3d0cbec8b1a6cff8b27b9e801104211b2a078424", "filename": "src/librustc/middle/typeck/astconv.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f25f466afe7d4d94d711e4f288fd39ab72f1cc61/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fastconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f25f466afe7d4d94d711e4f288fd39ab72f1cc61/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fastconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fastconv.rs?ref=f25f466afe7d4d94d711e4f288fd39ab72f1cc61", "patch": "@@ -790,7 +790,7 @@ fn conv_builtin_bounds(tcx: ty::ctxt, ast_bounds: &Option<OptVec<ast::TyParamBou\n         },\n         // ~Trait is sugar for ~Trait:Owned.\n         (&None, ty::UniqTraitStore) => {\n-            let mut set = ty::EmptyBuiltinBounds(); set.add(ty::BoundOwned); set\n+            let mut set = ty::EmptyBuiltinBounds(); set.add(ty::BoundSend); set\n         }\n         // @Trait is sugar for @Trait:'static.\n         // &'static Trait is sugar for &'static Trait:'static."}, {"sha": "550a3411b5ddcc5ef3f465394e5003a81b3159f6", "filename": "src/librustpkg/rustpkg.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f25f466afe7d4d94d711e4f288fd39ab72f1cc61/src%2Flibrustpkg%2Frustpkg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f25f466afe7d4d94d711e4f288fd39ab72f1cc61/src%2Flibrustpkg%2Frustpkg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustpkg%2Frustpkg.rs?ref=f25f466afe7d4d94d711e4f288fd39ab72f1cc61", "patch": "@@ -192,6 +192,7 @@ pub trait CtxMethods {\n     fn clean(&self, workspace: &Path, id: &PkgId);\n     fn info(&self);\n     fn install(&self, workspace: &Path, id: &PkgId);\n+    fn install_no_build(&self, workspace: &Path, id: &PkgId);\n     fn prefer(&self, _id: &str, _vers: Option<~str>);\n     fn test(&self);\n     fn uninstall(&self, _id: &str, _vers: Option<~str>);"}]}