{"sha": "9b046d105170ea1eb4ef7556fc8f5e0eb81a2b3e", "node_id": "C_kwDOAAsO6NoAKDliMDQ2ZDEwNTE3MGVhMWViNGVmNzU1NmZjOGY1ZTBlYjgxYTJiM2U", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-03-26T17:46:49Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-03-26T17:46:49Z"}, "message": "fix: Don't complete Drop::drop for qualified paths", "tree": {"sha": "fa10c548c54596ae34c42540c2abd99b4d4eab88", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fa10c548c54596ae34c42540c2abd99b4d4eab88"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9b046d105170ea1eb4ef7556fc8f5e0eb81a2b3e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9b046d105170ea1eb4ef7556fc8f5e0eb81a2b3e", "html_url": "https://github.com/rust-lang/rust/commit/9b046d105170ea1eb4ef7556fc8f5e0eb81a2b3e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9b046d105170ea1eb4ef7556fc8f5e0eb81a2b3e/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e55ed520039983b322bff424e1a1dfa777d401d2", "url": "https://api.github.com/repos/rust-lang/rust/commits/e55ed520039983b322bff424e1a1dfa777d401d2", "html_url": "https://github.com/rust-lang/rust/commit/e55ed520039983b322bff424e1a1dfa777d401d2"}], "stats": {"total": 33, "additions": 28, "deletions": 5}, "files": [{"sha": "c1f23ceecaf346f8a980a4138d5dc598b7cdb53c", "filename": "crates/ide_completion/src/completions/qualified_path.rs", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/9b046d105170ea1eb4ef7556fc8f5e0eb81a2b3e/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fqualified_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9b046d105170ea1eb4ef7556fc8f5e0eb81a2b3e/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fqualified_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fqualified_path.rs?ref=9b046d105170ea1eb4ef7556fc8f5e0eb81a2b3e", "patch": "@@ -1,6 +1,7 @@\n //! Completion of paths, i.e. `some::prefix::$0`.\n \n use hir::{ScopeDef, Trait};\n+use ide_db::famous_defs::FamousDefs;\n use rustc_hash::FxHashSet;\n use syntax::ast;\n \n@@ -23,6 +24,13 @@ pub(crate) fn complete_qualified_path(acc: &mut Completions, ctx: &CompletionCon\n         Some(PathCompletionCtx { qualifier: Some(ref qualifier), kind, .. }) => (qualifier, kind),\n         _ => return,\n     };\n+    let traits_in_scope = |ctx: &CompletionContext| {\n+        let mut traits_in_scope = ctx.scope.visible_traits();\n+        if let Some(drop) = FamousDefs(&ctx.sema, ctx.krate).core_ops_Drop() {\n+            traits_in_scope.remove(&drop.into());\n+        }\n+        traits_in_scope\n+    };\n \n     // special case `<_>::$0` as this doesn't resolve to anything.\n     if qualifier.path.qualifier().is_none() {\n@@ -34,8 +42,7 @@ pub(crate) fn complete_qualified_path(acc: &mut Completions, ctx: &CompletionCon\n             })\n         ) {\n             cov_mark::hit!(completion_type_anchor_empty);\n-            ctx.scope\n-                .visible_traits()\n+            traits_in_scope(ctx)\n                 .into_iter()\n                 .flat_map(|it| Trait::from(it).items(ctx.sema.db))\n                 .for_each(|item| add_assoc_item(acc, ctx, item));\n@@ -141,7 +148,7 @@ pub(crate) fn complete_qualified_path(acc: &mut Completions, ctx: &CompletionCon\n \n             let krate = ctx.krate;\n             if let Some(krate) = krate {\n-                let traits_in_scope = ctx.scope.visible_traits();\n+                let traits_in_scope = traits_in_scope(ctx);\n                 ty.iterate_path_candidates(\n                     ctx.db,\n                     &ctx.scope,\n@@ -179,8 +186,7 @@ pub(crate) fn complete_qualified_path(acc: &mut Completions, ctx: &CompletionCon\n             if let Some(hir::Adt::Enum(e)) = ty.as_adt() {\n                 add_enum_variants(acc, ctx, e);\n             }\n-\n-            let traits_in_scope = ctx.scope.visible_traits();\n+            let traits_in_scope = traits_in_scope(ctx);\n             let mut seen = FxHashSet::default();\n             ty.iterate_path_candidates(\n                 ctx.db,"}, {"sha": "de283c705d089efc2a467a2e448f8fcdc3b0e599", "filename": "crates/ide_completion/src/tests/expression.rs", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/9b046d105170ea1eb4ef7556fc8f5e0eb81a2b3e/crates%2Fide_completion%2Fsrc%2Ftests%2Fexpression.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9b046d105170ea1eb4ef7556fc8f5e0eb81a2b3e/crates%2Fide_completion%2Fsrc%2Ftests%2Fexpression.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Ftests%2Fexpression.rs?ref=9b046d105170ea1eb4ef7556fc8f5e0eb81a2b3e", "patch": "@@ -553,6 +553,23 @@ fn func() {\n     );\n }\n \n+#[test]\n+fn ty_qualified_no_drop() {\n+    check_empty(\n+        r#\"\n+//- minicore: drop\n+struct Foo;\n+impl Drop for Foo {\n+    fn drop(&mut self) {}\n+}\n+fn func() {\n+    Foo::$0\n+}\n+\"#,\n+        expect![[r#\"\"#]],\n+    );\n+}\n+\n #[test]\n fn with_parens() {\n     check_empty("}]}