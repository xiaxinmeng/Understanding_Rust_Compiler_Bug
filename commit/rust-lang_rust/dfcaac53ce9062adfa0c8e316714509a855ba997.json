{"sha": "dfcaac53ce9062adfa0c8e316714509a855ba997", "node_id": "C_kwDOAAsO6NoAKGRmY2FhYzUzY2U5MDYyYWRmYTBjOGUzMTY3MTQ1MDlhODU1YmE5OTc", "commit": {"author": {"name": "Joshua Nelson", "email": "jnelson@cloudflare.com", "date": "2021-12-09T17:15:38Z"}, "committer": {"name": "Joshua Nelson", "email": "jnelson@cloudflare.com", "date": "2021-12-09T17:30:38Z"}, "message": "Don't print bootstrap caching/ensure info unless `-vv` is passed\n\nPreviously, passing `-v` would emit an overwhelming amount of logging:\n\n```\n> Std { stage: 1, target: TargetSelection { triple: \"x86_64-unknown-linux-gnu\", file: None } }\n  > Assemble { target_compiler: Compiler { stage: 1, host: TargetSelection { triple: \"x86_64-unknown-linux-gnu\", file: None } } }\n    > Assemble { target_compiler: Compiler { stage: 0, host: TargetSelection { triple: \"x86_64-unknown-linux-gnu\", file: None } } }\n    < Assemble { target_compiler: Compiler { stage: 0, host: TargetSelection { triple: \"x86_64-unknown-linux-gnu\", file: None } } }\n    > Rustc { target: TargetSelection { triple: \"x86_64-unknown-linux-gnu\", file: None }, compiler: Compiler { stage: 0, host: TargetSelection { triple: \"x86_64-unknown-linux-gnu\", file: None } } }\n      > Std { target: TargetSelection { triple: \"x86_64-unknown-linux-gnu\", file: None }, compiler: Compiler { stage: 0, host: TargetSelection { triple: \"x86_64-unknown-linux-gnu\", file: None } } }\n        > StartupObjects { compiler: Compiler { stage: 0, host: TargetSelection { triple: \"x86_64-unknown-linux-gnu\", file: None } }, target: TargetSelection { triple: \"x86_64-unknown-linux-gnu\", file: None } }\n        < StartupObjects { compiler: Compiler { stage: 0, host: TargetSelection { triple: \"x86_64-unknown-linux-gnu\", file: None } }, target: TargetSelection { triple: \"x86_64-unknown-linux-gnu\", file: None } }\n        c Assemble { target_compiler: Compiler { stage: 0, host: TargetSelection { triple: \"x86_64-unknown-linux-gnu\", file: None } } }\n        > Libdir { compiler: Compiler { stage: 0, host: TargetSelection { triple: \"x86_64-unknown-linux-gnu\", file: None } }, target: TargetSelection { triple: \"x86_64-unknown-linux-gnu\", file: None } }\n          > Sysroot { compiler: Compiler { stage: 0, host: TargetSelection { triple: \"x86_64-unknown-linux-gnu\", file: None } } }\n          < Sysroot { compiler: Compiler { stage: 0, host: TargetSelection { triple: \"x86_64-unknown-linux-gnu\", file: None } } }\n        < Libdir { compiler: Compiler { stage: 0, host: TargetSelection { triple: \"x86_64-unknown-linux-gnu\", file: None } }, target: TargetSelection { triple: \"x86_64-unknown-linux-gnu\", file: None } }\n        c Libdir { compiler: Compiler { stage: 0, host: TargetSelection { triple: \"x86_64-unknown-linux-gnu\", file: None } }, target: TargetSelection { triple: \"x86_64-unknown-linux-gnu\", file: None } }\n        c Sysroot { compiler: Compiler { stage: 0, host: TargetSelection { triple: \"x86_64-unknown-linux-gnu\", file: None } } }\n        c Assemble { target_compiler: Compiler { stage: 0, host: TargetSelection { triple: \"x86_64-unknown-linux-gnu\", file: None } } }\n        > StdLink { compiler: Compiler { stage: 0, host: TargetSelection { triple: \"x86_64-unknown-linux-gnu\", file: None } }, target_compiler: Compiler { stage: 0, host: TargetSelection { triple: \"x86_64-unknown-linux-gnu\", file: None } }, target: TargetSelection { triple: \"x86_64-unknown-linux-gnu\", file: None } }\n          c Libdir { compiler: Compiler { stage: 0, host: TargetSelection { triple: \"x86_64-unknown-linux-gnu\", file: None } }, target: TargetSelection { triple: \"x86_64-unknown-linux-gnu\", file: None } }\n          c Libdir { compiler: Compiler { stage: 0, host: TargetSelection { triple: \"x86_64-unknown-linux-gnu\", file: None } }, target: TargetSelection { triple: \"x86_64-unknown-linux-gnu\", file: None } }\n        < StdLink { compiler: Compiler { stage: 0, host: TargetSelection { triple: \"x86_64-unknown-linux-gnu\", file: None } }, target_compiler: Compiler { stage: 0, host: TargetSelection { triple: \"x86_64-unknown-linux-gnu\", file: None } }, target: TargetSelection { triple: \"x86_64-unknown-linux-gnu\", file: None } }\n      < Std { target: TargetSelection { triple: \"x86_64-unknown-linux-gnu\", file: None }, compiler: Compiler { stage: 0, host: TargetSelection { triple: \"x86_64-unknown-linux-gnu\", file: None } } }\n... continues for another 150 lines ...\n```\n\nThis info is occasionally useful when debugging bootstrap itself, but not very useful for figuring\nout why a config option was ignored or command wasn't run.  Demote it to `-vv` logging so that `-v`\nis more useful.", "tree": {"sha": "337742ee212a06cb9474cd4b96725a5f573fc611", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/337742ee212a06cb9474cd4b96725a5f573fc611"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dfcaac53ce9062adfa0c8e316714509a855ba997", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dfcaac53ce9062adfa0c8e316714509a855ba997", "html_url": "https://github.com/rust-lang/rust/commit/dfcaac53ce9062adfa0c8e316714509a855ba997", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dfcaac53ce9062adfa0c8e316714509a855ba997/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ae6f5fbc3f7825c42ade064be3a54f38a143e26b", "url": "https://api.github.com/repos/rust-lang/rust/commits/ae6f5fbc3f7825c42ade064be3a54f38a143e26b", "html_url": "https://github.com/rust-lang/rust/commit/ae6f5fbc3f7825c42ade064be3a54f38a143e26b"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "952a65a428688bf42cefc188534fe7c6473b6410", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/dfcaac53ce9062adfa0c8e316714509a855ba997/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dfcaac53ce9062adfa0c8e316714509a855ba997/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=dfcaac53ce9062adfa0c8e316714509a855ba997", "patch": "@@ -1578,11 +1578,11 @@ impl<'a> Builder<'a> {\n                 panic!(\"{}\", out);\n             }\n             if let Some(out) = self.cache.get(&step) {\n-                self.verbose(&format!(\"{}c {:?}\", \"  \".repeat(stack.len()), step));\n+                self.verbose_than(1, &format!(\"{}c {:?}\", \"  \".repeat(stack.len()), step));\n \n                 return out;\n             }\n-            self.verbose(&format!(\"{}> {:?}\", \"  \".repeat(stack.len()), step));\n+            self.verbose_than(1, &format!(\"{}> {:?}\", \"  \".repeat(stack.len()), step));\n             stack.push(Box::new(step.clone()));\n         }\n \n@@ -1605,7 +1605,7 @@ impl<'a> Builder<'a> {\n             let cur_step = stack.pop().expect(\"step stack empty\");\n             assert_eq!(cur_step.downcast_ref(), Some(&step));\n         }\n-        self.verbose(&format!(\"{}< {:?}\", \"  \".repeat(self.stack.borrow().len()), step));\n+        self.verbose_than(1, &format!(\"{}< {:?}\", \"  \".repeat(self.stack.borrow().len()), step));\n         self.cache.put(step, out.clone());\n         out\n     }"}]}