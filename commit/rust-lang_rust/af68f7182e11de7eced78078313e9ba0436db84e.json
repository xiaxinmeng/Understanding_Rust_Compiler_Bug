{"sha": "af68f7182e11de7eced78078313e9ba0436db84e", "node_id": "C_kwDOAAsO6NoAKGFmNjhmNzE4MmUxMWRlN2VjZWQ3ODA3ODMxM2U5YmEwNDM2ZGI4NGU", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-04-17T10:31:52Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-04-17T10:31:52Z"}, "message": "Auto merge of #96016 - Aaron1011:hash-name-cleanup, r=cjgillot\n\nRemove last vestiges of skippng ident span hashing\n\nThis removes a comment that no longer applies, and properly hashes\nthe full ident for path segments.", "tree": {"sha": "0ef01e2b33b7ac4e1d3c7b6a3046e96861478f93", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0ef01e2b33b7ac4e1d3c7b6a3046e96861478f93"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/af68f7182e11de7eced78078313e9ba0436db84e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/af68f7182e11de7eced78078313e9ba0436db84e", "html_url": "https://github.com/rust-lang/rust/commit/af68f7182e11de7eced78078313e9ba0436db84e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/af68f7182e11de7eced78078313e9ba0436db84e/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "edba28277038f24ee80b88b66e054ec33facefa4", "url": "https://api.github.com/repos/rust-lang/rust/commits/edba28277038f24ee80b88b66e054ec33facefa4", "html_url": "https://github.com/rust-lang/rust/commit/edba28277038f24ee80b88b66e054ec33facefa4"}, {"sha": "002a4e1bd5012f6640c1338ac809df03e7eb9288", "url": "https://api.github.com/repos/rust-lang/rust/commits/002a4e1bd5012f6640c1338ac809df03e7eb9288", "html_url": "https://github.com/rust-lang/rust/commit/002a4e1bd5012f6640c1338ac809df03e7eb9288"}], "stats": {"total": 14, "additions": 2, "deletions": 12}, "files": [{"sha": "b7da276fc7e1dc431acd53a999524e3d4e05bb06", "filename": "compiler/rustc_ast/src/ast.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/af68f7182e11de7eced78078313e9ba0436db84e/compiler%2Frustc_ast%2Fsrc%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/af68f7182e11de7eced78078313e9ba0436db84e/compiler%2Frustc_ast%2Fsrc%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast%2Fsrc%2Fast.rs?ref=af68f7182e11de7eced78078313e9ba0436db84e", "patch": "@@ -107,11 +107,11 @@ impl PartialEq<Symbol> for Path {\n     }\n }\n \n-impl<CTX> HashStable<CTX> for Path {\n+impl<CTX: rustc_span::HashStableContext> HashStable<CTX> for Path {\n     fn hash_stable(&self, hcx: &mut CTX, hasher: &mut StableHasher) {\n         self.segments.len().hash_stable(hcx, hasher);\n         for segment in &self.segments {\n-            segment.ident.name.hash_stable(hcx, hasher);\n+            segment.ident.hash_stable(hcx, hasher);\n         }\n     }\n }"}, {"sha": "3889639b50f454bf232b430c17bbf9ff86397db1", "filename": "compiler/rustc_span/src/hygiene.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/af68f7182e11de7eced78078313e9ba0436db84e/compiler%2Frustc_span%2Fsrc%2Fhygiene.rs", "raw_url": "https://github.com/rust-lang/rust/raw/af68f7182e11de7eced78078313e9ba0436db84e/compiler%2Frustc_span%2Fsrc%2Fhygiene.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Fhygiene.rs?ref=af68f7182e11de7eced78078313e9ba0436db84e", "patch": "@@ -103,16 +103,6 @@ impl !PartialOrd for LocalExpnId {}\n /// of `HashingControls` settings.\n fn assert_default_hashing_controls<CTX: HashStableContext>(ctx: &CTX, msg: &str) {\n     match ctx.hashing_controls() {\n-        // Ideally, we would also check that `node_id_hashing_mode` was always\n-        // `NodeIdHashingMode::HashDefPath`. However, we currently end up hashing\n-        // `Span`s in this mode, and there's not an easy way to change that.\n-        // All of the span-related data that we hash is pretty self-contained\n-        // (in particular, we don't hash any `HirId`s), so this shouldn't result\n-        // in any caching problems.\n-        // FIXME: Enforce that we don't end up transitively hashing any `HirId`s,\n-        // or ensure that this method is always invoked with the same\n-        // `NodeIdHashingMode`\n-        //\n         // Note that we require that `hash_spans` be set according to the global\n         // `-Z incremental-ignore-spans` option. Normally, this option is disabled,\n         // which will cause us to require that this method always be called with `Span` hashing"}]}