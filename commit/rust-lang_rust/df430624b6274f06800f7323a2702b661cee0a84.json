{"sha": "df430624b6274f06800f7323a2702b661cee0a84", "node_id": "C_kwDOAAsO6NoAKGRmNDMwNjI0YjYyNzRmMDY4MDBmNzMyM2EyNzAyYjY2MWNlZTBhODQ", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-10-23T03:28:20Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-10-23T03:28:20Z"}, "message": "Rollup merge of #88300 - ijackson:exitstatusext-methods, r=yaahc\n\nStabilise unix_process_wait_more, extra ExitStatusExt methods\n\nThis stabilises the feature `unix_process_wait_more`.  Tracking issue #80695, FCP needed.\n\nThis was implemented in #79982 and merged in January.", "tree": {"sha": "2c722aac32ca34f489a3cfa10a2fbebb10a5337c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2c722aac32ca34f489a3cfa10a2fbebb10a5337c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/df430624b6274f06800f7323a2702b661cee0a84", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhc4FUCRBK7hj4Ov3rIwAARqUIAEfCVbyC+i4vlOJYSOspuG9m\nWiPFKx1JiGUor6NEYH5izfrc/Z8fJdEQk3bHBT9PEmlYHsbwF2mY9yFiP3QPRbyQ\n6yJYYY7NjJR+khPeZpU/doxHiB3KiD9AZW2bpngK8lfcvv1j5heHHjuyCTv4xl8n\n7USYMlgIrPP3vFDfojwYleIQShKTwdXnn4x60cmdYgbNs7woVCEco21E4Z3biKVE\nm9XP8tTaQK4mB5YyOZVey1ocCZ+seCUsWvLyzpAiw8jbiZJmwA9C3fgBKIMYAeEA\n5Lsp+LbRr19Jrk0j80QVu3v8XCBe4l2yE/YmWh02X1SLuZ7QLtdjuGDS1phBjfk=\n=nxfB\n-----END PGP SIGNATURE-----\n", "payload": "tree 2c722aac32ca34f489a3cfa10a2fbebb10a5337c\nparent 5ea02745637be7c4c0c8ba46407bbfca3b66edcc\nparent 2ed566559b5114848a6750971bcc0169a227b975\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1634959700 +0200\ncommitter GitHub <noreply@github.com> 1634959700 +0200\n\nRollup merge of #88300 - ijackson:exitstatusext-methods, r=yaahc\n\nStabilise unix_process_wait_more, extra ExitStatusExt methods\n\nThis stabilises the feature `unix_process_wait_more`.  Tracking issue #80695, FCP needed.\n\nThis was implemented in #79982 and merged in January.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/df430624b6274f06800f7323a2702b661cee0a84", "html_url": "https://github.com/rust-lang/rust/commit/df430624b6274f06800f7323a2702b661cee0a84", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/df430624b6274f06800f7323a2702b661cee0a84/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5ea02745637be7c4c0c8ba46407bbfca3b66edcc", "url": "https://api.github.com/repos/rust-lang/rust/commits/5ea02745637be7c4c0c8ba46407bbfca3b66edcc", "html_url": "https://github.com/rust-lang/rust/commit/5ea02745637be7c4c0c8ba46407bbfca3b66edcc"}, {"sha": "2ed566559b5114848a6750971bcc0169a227b975", "url": "https://api.github.com/repos/rust-lang/rust/commits/2ed566559b5114848a6750971bcc0169a227b975", "html_url": "https://github.com/rust-lang/rust/commit/2ed566559b5114848a6750971bcc0169a227b975"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "9b94615d24773b002c31129dfccaa51b78a31574", "filename": "library/std/src/os/unix/process.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/df430624b6274f06800f7323a2702b661cee0a84/library%2Fstd%2Fsrc%2Fos%2Funix%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df430624b6274f06800f7323a2702b661cee0a84/library%2Fstd%2Fsrc%2Fos%2Funix%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Funix%2Fprocess.rs?ref=df430624b6274f06800f7323a2702b661cee0a84", "patch": "@@ -239,27 +239,27 @@ pub trait ExitStatusExt: Sealed {\n     fn signal(&self) -> Option<i32>;\n \n     /// If the process was terminated by a signal, says whether it dumped core.\n-    #[unstable(feature = \"unix_process_wait_more\", issue = \"80695\")]\n+    #[stable(feature = \"unix_process_wait_more\", since = \"1.58.0\")]\n     fn core_dumped(&self) -> bool;\n \n     /// If the process was stopped by a signal, returns that signal.\n     ///\n     /// In other words, if `WIFSTOPPED`, this returns `WSTOPSIG`.  This is only possible if the status came from\n     /// a `wait` system call which was passed `WUNTRACED`, and was then converted into an `ExitStatus`.\n-    #[unstable(feature = \"unix_process_wait_more\", issue = \"80695\")]\n+    #[stable(feature = \"unix_process_wait_more\", since = \"1.58.0\")]\n     fn stopped_signal(&self) -> Option<i32>;\n \n     /// Whether the process was continued from a stopped status.\n     ///\n     /// Ie, `WIFCONTINUED`.  This is only possible if the status came from a `wait` system call\n     /// which was passed `WCONTINUED`, and was then converted into an `ExitStatus`.\n-    #[unstable(feature = \"unix_process_wait_more\", issue = \"80695\")]\n+    #[stable(feature = \"unix_process_wait_more\", since = \"1.58.0\")]\n     fn continued(&self) -> bool;\n \n     /// Returns the underlying raw `wait` status.\n     ///\n     /// The returned integer is a **wait status, not an exit status**.\n-    #[unstable(feature = \"unix_process_wait_more\", issue = \"80695\")]\n+    #[stable(feature = \"unix_process_wait_more\", since = \"1.58.0\")]\n     fn into_raw(self) -> i32;\n }\n "}]}