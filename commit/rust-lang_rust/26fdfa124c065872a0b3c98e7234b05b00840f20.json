{"sha": "26fdfa124c065872a0b3c98e7234b05b00840f20", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI2ZmRmYTEyNGMwNjU4NzJhMGIzYzk4ZTcyMzRiMDViMDA4NDBmMjA=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-03-14T22:16:31Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-03-14T22:16:31Z"}, "message": "auto merge of #12878 : crabtw/rust/mips, r=alexcrichton\n\nI ignored AtomicU64 methods on MIPS target\r\nbecause libgcc doesn't implement MIPS32 64-bit atomic operations.\r\nOtherwise it would cause link failure.\r\n\r\nBy the way, the patched LLVM doesn't have MIPS split stack anymore.\r\nShould I file an issue about that?", "tree": {"sha": "bb2f938e28c8db156563a64fccfd81ac9c4c22de", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bb2f938e28c8db156563a64fccfd81ac9c4c22de"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/26fdfa124c065872a0b3c98e7234b05b00840f20", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/26fdfa124c065872a0b3c98e7234b05b00840f20", "html_url": "https://github.com/rust-lang/rust/commit/26fdfa124c065872a0b3c98e7234b05b00840f20", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/26fdfa124c065872a0b3c98e7234b05b00840f20/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "42fc32f293eb7de7139f058fa06f580a503b87b5", "url": "https://api.github.com/repos/rust-lang/rust/commits/42fc32f293eb7de7139f058fa06f580a503b87b5", "html_url": "https://github.com/rust-lang/rust/commit/42fc32f293eb7de7139f058fa06f580a503b87b5"}, {"sha": "6d7e86d099cf33821398731f750b36df564ca5d2", "url": "https://api.github.com/repos/rust-lang/rust/commits/6d7e86d099cf33821398731f750b36df564ca5d2", "html_url": "https://github.com/rust-lang/rust/commit/6d7e86d099cf33821398731f750b36df564ca5d2"}], "stats": {"total": 81, "additions": 38, "deletions": 43}, "files": [{"sha": "f072df733684776aea99cb73ebf31a63d10a5c9f", "filename": "src/libgreen/context.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/26fdfa124c065872a0b3c98e7234b05b00840f20/src%2Flibgreen%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26fdfa124c065872a0b3c98e7234b05b00840f20/src%2Flibgreen%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibgreen%2Fcontext.rs?ref=26fdfa124c065872a0b3c98e7234b05b00840f20", "patch": "@@ -283,6 +283,8 @@ fn initialize_call_frame(regs: &mut Registers, fptr: InitFn, arg: uint,\n     unsafe { *sp = 0; }\n \n     regs[4] = arg as uint;\n+    regs[5] = procedure.code as uint;\n+    regs[6] = procedure.env as uint;\n     regs[29] = sp as uint;\n     regs[25] = fptr as uint;\n     regs[31] = fptr as uint;"}, {"sha": "0de256ba8d8e6fd977aea9a64825c4ebe0c51fa5", "filename": "src/librustc/back/mips.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/26fdfa124c065872a0b3c98e7234b05b00840f20/src%2Flibrustc%2Fback%2Fmips.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26fdfa124c065872a0b3c98e7234b05b00840f20/src%2Flibrustc%2Fback%2Fmips.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fback%2Fmips.rs?ref=26fdfa124c065872a0b3c98e7234b05b00840f20", "patch": "@@ -22,39 +22,39 @@ pub fn get_target_strs(target_triple: ~str, target_os: abi::Os) -> target_strs::\n \n         data_layout: match target_os {\n           abi::OsMacos => {\n-            ~\"e-p:32:32:32\" +\n+            ~\"E-p:32:32:32\" +\n                 \"-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64\" +\n                 \"-f32:32:32-f64:64:64\" +\n                 \"-v64:64:64-v128:64:128\" +\n                 \"-a0:0:64-n32\"\n           }\n \n           abi::OsWin32 => {\n-            ~\"e-p:32:32:32\" +\n+            ~\"E-p:32:32:32\" +\n                 \"-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64\" +\n                 \"-f32:32:32-f64:64:64\" +\n                 \"-v64:64:64-v128:64:128\" +\n                 \"-a0:0:64-n32\"\n           }\n \n           abi::OsLinux => {\n-            ~\"e-p:32:32:32\" +\n+            ~\"E-p:32:32:32\" +\n                 \"-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64\" +\n                 \"-f32:32:32-f64:64:64\" +\n                 \"-v64:64:64-v128:64:128\" +\n                 \"-a0:0:64-n32\"\n           }\n \n           abi::OsAndroid => {\n-            ~\"e-p:32:32:32\" +\n+            ~\"E-p:32:32:32\" +\n                 \"-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64\" +\n                 \"-f32:32:32-f64:64:64\" +\n                 \"-v64:64:64-v128:64:128\" +\n                 \"-a0:0:64-n32\"\n           }\n \n           abi::OsFreebsd => {\n-            ~\"e-p:32:32:32\" +\n+            ~\"E-p:32:32:32\" +\n                 \"-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64\" +\n                 \"-f32:32:32-f64:64:64\" +\n                 \"-v64:64:64-v128:64:128\" +"}, {"sha": "0fb7a5f85032cb93f7d9868573ffdcf6eec3b733", "filename": "src/libstd/libc.rs", "status": "modified", "additions": 12, "deletions": 13, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/26fdfa124c065872a0b3c98e7234b05b00840f20/src%2Flibstd%2Flibc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26fdfa124c065872a0b3c98e7234b05b00840f20/src%2Flibstd%2Flibc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flibc.rs?ref=26fdfa124c065872a0b3c98e7234b05b00840f20", "patch": "@@ -2137,7 +2137,7 @@ pub mod consts {\n             pub static MAP_SHARED : c_int = 0x0001;\n             pub static MAP_PRIVATE : c_int = 0x0002;\n             pub static MAP_FIXED : c_int = 0x0010;\n-            pub static MAP_ANON : c_int = 0x0020;\n+            pub static MAP_ANON : c_int = 0x0800;\n \n             pub static MAP_FAILED : *c_void = -1 as *c_void;\n \n@@ -2433,20 +2433,19 @@ pub mod consts {\n             pub static O_DSYNC : c_int = 16;\n             pub static O_SYNC : c_int = 16400;\n \n-            pub static PROT_GROWSDOWN : c_int = 0x010000000;\n-            pub static PROT_GROWSUP : c_int = 0x020000000;\n+            pub static PROT_GROWSDOWN : c_int = 0x01000000;\n+            pub static PROT_GROWSUP : c_int = 0x02000000;\n \n             pub static MAP_TYPE : c_int = 0x000f;\n-            pub static MAP_ANONONYMOUS : c_int = 0x0020;\n-            pub static MAP_32BIT : c_int = 0x0040;\n-            pub static MAP_GROWSDOWN : c_int = 0x0100;\n-            pub static MAP_DENYWRITE : c_int = 0x0800;\n-            pub static MAP_EXECUTABLE : c_int = 0x01000;\n-            pub static MAP_LOCKED : c_int = 0x02000;\n-            pub static MAP_NONRESERVE : c_int = 0x04000;\n-            pub static MAP_POPULATE : c_int = 0x08000;\n-            pub static MAP_NONBLOCK : c_int = 0x010000;\n-            pub static MAP_STACK : c_int = 0x020000;\n+            pub static MAP_ANONONYMOUS : c_int = 0x0800;\n+            pub static MAP_GROWSDOWN : c_int = 0x01000;\n+            pub static MAP_DENYWRITE : c_int = 0x02000;\n+            pub static MAP_EXECUTABLE : c_int = 0x04000;\n+            pub static MAP_LOCKED : c_int = 0x08000;\n+            pub static MAP_NONRESERVE : c_int = 0x0400;\n+            pub static MAP_POPULATE : c_int = 0x010000;\n+            pub static MAP_NONBLOCK : c_int = 0x020000;\n+            pub static MAP_STACK : c_int = 0x040000;\n         }\n         #[cfg(target_os = \"linux\")]\n         pub mod sysconf {"}, {"sha": "8c14e6c81e960ac1cfa8f5e3b687c9f32443aa14", "filename": "src/libstd/rt/libunwind.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/26fdfa124c065872a0b3c98e7234b05b00840f20/src%2Flibstd%2Frt%2Flibunwind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26fdfa124c065872a0b3c98e7234b05b00840f20/src%2Flibstd%2Frt%2Flibunwind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Flibunwind.rs?ref=26fdfa124c065872a0b3c98e7234b05b00840f20", "patch": "@@ -65,6 +65,9 @@ pub static unwinder_private_data_size: int = 2;\n #[cfg(target_arch = \"arm\")]\n pub static unwinder_private_data_size: int = 20;\n \n+#[cfg(target_arch = \"mips\")]\n+pub static unwinder_private_data_size: int = 2;\n+\n pub struct _Unwind_Exception {\n     exception_class: _Unwind_Exception_Class,\n     exception_cleanup: _Unwind_Exception_Cleanup_Fn,"}, {"sha": "b38a5aed16f0e103c57fc316e8969034ffb3708d", "filename": "src/libstd/sync/atomics.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/26fdfa124c065872a0b3c98e7234b05b00840f20/src%2Flibstd%2Fsync%2Fatomics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26fdfa124c065872a0b3c98e7234b05b00840f20/src%2Flibstd%2Fsync%2Fatomics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Fatomics.rs?ref=26fdfa124c065872a0b3c98e7234b05b00840f20", "patch": "@@ -225,6 +225,10 @@ impl AtomicInt {\n     }\n }\n \n+// temporary workaround\n+// it causes link failure on MIPS target\n+// libgcc doesn't implement 64-bit atomic operations for MIPS32\n+#[cfg(not(target_arch = \"mips\"))]\n impl AtomicU64 {\n     pub fn new(v: u64) -> AtomicU64 {\n         AtomicU64 { v:v, nopod: marker::NoPod }"}, {"sha": "2a3c89639805ec35ad32b96d0dd67ceacc12238d", "filename": "src/libstd/unstable/mutex.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/26fdfa124c065872a0b3c98e7234b05b00840f20/src%2Flibstd%2Funstable%2Fmutex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26fdfa124c065872a0b3c98e7234b05b00840f20/src%2Flibstd%2Funstable%2Fmutex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Funstable%2Fmutex.rs?ref=26fdfa124c065872a0b3c98e7234b05b00840f20", "patch": "@@ -324,12 +324,16 @@ mod imp {\n         static __SIZEOF_PTHREAD_MUTEX_T: uint = 24 - 8;\n         #[cfg(target_arch = \"arm\")]\n         static __SIZEOF_PTHREAD_MUTEX_T: uint = 24 - 8;\n+        #[cfg(target_arch = \"mips\")]\n+        static __SIZEOF_PTHREAD_MUTEX_T: uint = 24 - 8;\n         #[cfg(target_arch = \"x86_64\")]\n         static __SIZEOF_PTHREAD_COND_T: uint = 48 - 8;\n         #[cfg(target_arch = \"x86\")]\n         static __SIZEOF_PTHREAD_COND_T: uint = 48 - 8;\n         #[cfg(target_arch = \"arm\")]\n         static __SIZEOF_PTHREAD_COND_T: uint = 48 - 8;\n+        #[cfg(target_arch = \"mips\")]\n+        static __SIZEOF_PTHREAD_COND_T: uint = 48 - 8;\n \n         pub struct pthread_mutex_t {\n             __align: libc::c_longlong,"}, {"sha": "266933df8c51c94d595ec935c00ea746b1c1204e", "filename": "src/rt/arch/mips/morestack.S", "status": "modified", "additions": 8, "deletions": 25, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/26fdfa124c065872a0b3c98e7234b05b00840f20/src%2Frt%2Farch%2Fmips%2Fmorestack.S", "raw_url": "https://github.com/rust-lang/rust/raw/26fdfa124c065872a0b3c98e7234b05b00840f20/src%2Frt%2Farch%2Fmips%2Fmorestack.S", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Farch%2Fmips%2Fmorestack.S?ref=26fdfa124c065872a0b3c98e7234b05b00840f20", "patch": "@@ -19,38 +19,21 @@ __morestack:\n         .set noreorder\n         .set nomacro\n \n-        // n.b. most of this is probably unnecessary. I know very little mips\n-        //      assembly, and I didn't have anything to test on, so I wasn't\n-        //      brave enough to try to trim this down.\n+        addiu $29, $29, -4\n+        sw $30, 0($29)\n \n-        addiu $29, $29, -12\n-        sw $31, 8($29)\n-        sw $30, 4($29)\n-        sw $23, 0($29)\n-\n-        // 24 = 12 (current) + 12 (previous)\n-        .cfi_def_cfa_offset 24\n+        // 16 = 4 (current) + 12 (previous)\n+        .cfi_def_cfa_offset 16\n         .cfi_offset 31, -4\n-        .cfi_offset 30, -20\n-        .cfi_offset 23, -24\n+        .cfi_offset 30, -16\n \n-        move $23, $28\n         move $30, $29\n         .cfi_def_cfa_register 30\n \n-        // Save argument registers of the original function\n-        addiu $29, $29, -32\n-        sw $4, 16($29)\n-        sw $5, 20($29)\n-        sw $6, 24($29)\n-        sw $7, 28($29)\n-\n-        move $4, $14     // Size of stack arguments\n-        addu $5, $30, 24 // Address of stack arguments\n-        move $6, $15     // The amount of stack needed\n+        // O32 ABI always reserves 16 bytes for arguments\n+        addiu $29, $29, -16\n \n-        move $28, $23\n-        lw $25, %call16(rust_stack_exhausted)($23)\n+        lw $25, %call16(rust_stack_exhausted)($28)\n         jalr $25\n         nop\n "}]}