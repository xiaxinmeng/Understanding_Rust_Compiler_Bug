{"sha": "7175980ff51636f03824d67869e9a237c7d76ad5", "node_id": "C_kwDOAAsO6NoAKDcxNzU5ODBmZjUxNjM2ZjAzODI0ZDY3ODY5ZTlhMjM3YzdkNzZhZDU", "commit": {"author": {"name": "Ellen", "email": "supbscripter@gmail.com", "date": "2021-12-13T19:14:35Z"}, "committer": {"name": "Ellen", "email": "supbscripter@gmail.com", "date": "2021-12-14T03:32:58Z"}, "message": "awdawdawd", "tree": {"sha": "92753e4c707231fbae22c553bf94166ac533ddda", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/92753e4c707231fbae22c553bf94166ac533ddda"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7175980ff51636f03824d67869e9a237c7d76ad5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7175980ff51636f03824d67869e9a237c7d76ad5", "html_url": "https://github.com/rust-lang/rust/commit/7175980ff51636f03824d67869e9a237c7d76ad5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7175980ff51636f03824d67869e9a237c7d76ad5/comments", "author": {"login": "BoxyUwU", "id": 21149742, "node_id": "MDQ6VXNlcjIxMTQ5NzQy", "avatar_url": "https://avatars.githubusercontent.com/u/21149742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BoxyUwU", "html_url": "https://github.com/BoxyUwU", "followers_url": "https://api.github.com/users/BoxyUwU/followers", "following_url": "https://api.github.com/users/BoxyUwU/following{/other_user}", "gists_url": "https://api.github.com/users/BoxyUwU/gists{/gist_id}", "starred_url": "https://api.github.com/users/BoxyUwU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BoxyUwU/subscriptions", "organizations_url": "https://api.github.com/users/BoxyUwU/orgs", "repos_url": "https://api.github.com/users/BoxyUwU/repos", "events_url": "https://api.github.com/users/BoxyUwU/events{/privacy}", "received_events_url": "https://api.github.com/users/BoxyUwU/received_events", "type": "User", "site_admin": false}, "committer": {"login": "BoxyUwU", "id": 21149742, "node_id": "MDQ6VXNlcjIxMTQ5NzQy", "avatar_url": "https://avatars.githubusercontent.com/u/21149742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BoxyUwU", "html_url": "https://github.com/BoxyUwU", "followers_url": "https://api.github.com/users/BoxyUwU/followers", "following_url": "https://api.github.com/users/BoxyUwU/following{/other_user}", "gists_url": "https://api.github.com/users/BoxyUwU/gists{/gist_id}", "starred_url": "https://api.github.com/users/BoxyUwU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BoxyUwU/subscriptions", "organizations_url": "https://api.github.com/users/BoxyUwU/orgs", "repos_url": "https://api.github.com/users/BoxyUwU/repos", "events_url": "https://api.github.com/users/BoxyUwU/events{/privacy}", "received_events_url": "https://api.github.com/users/BoxyUwU/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8f117a77d0880ed59afcc1a19c72ec5c1e44b97c", "url": "https://api.github.com/repos/rust-lang/rust/commits/8f117a77d0880ed59afcc1a19c72ec5c1e44b97c", "html_url": "https://github.com/rust-lang/rust/commit/8f117a77d0880ed59afcc1a19c72ec5c1e44b97c"}], "stats": {"total": 26, "additions": 5, "deletions": 21}, "files": [{"sha": "4f571cd87a2fe803d0d4353a8acd7010f8d9e6fd", "filename": "compiler/rustc_ast_lowering/src/lib.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7175980ff51636f03824d67869e9a237c7d76ad5/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7175980ff51636f03824d67869e9a237c7d76ad5/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs?ref=7175980ff51636f03824d67869e9a237c7d76ad5", "patch": "@@ -53,7 +53,7 @@ use rustc_hir::def::{DefKind, Namespace, PartialRes, PerNS, Res};\n use rustc_hir::def_id::{DefId, DefPathHash, LocalDefId, CRATE_DEF_ID};\n use rustc_hir::definitions::{DefKey, DefPathData, Definitions};\n use rustc_hir::intravisit;\n-use rustc_hir::{ConstArg, GenericArg, InferKind, ParamName};\n+use rustc_hir::{ConstArg, GenericArg, ParamName};\n use rustc_index::vec::{Idx, IndexVec};\n use rustc_query_system::ich::StableHashingContext;\n use rustc_session::lint::builtin::BARE_TRAIT_OBJECTS;\n@@ -1114,7 +1114,6 @@ impl<'a, 'hir> LoweringContext<'a, 'hir> {\n                         return GenericArg::Infer(hir::InferArg {\n                             hir_id: self.lower_node_id(ty.id),\n                             span: self.lower_span(ty.span),\n-                            kind: InferKind::Type,\n                         });\n                     }\n                     // We parse const arguments as path types as we cannot distinguish them during"}, {"sha": "b8fe43ae10d92a6d54d349341699789754b436dc", "filename": "compiler/rustc_hir/src/hir.rs", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/7175980ff51636f03824d67869e9a237c7d76ad5/compiler%2Frustc_hir%2Fsrc%2Fhir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7175980ff51636f03824d67869e9a237c7d76ad5/compiler%2Frustc_hir%2Fsrc%2Fhir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir%2Fsrc%2Fhir.rs?ref=7175980ff51636f03824d67869e9a237c7d76ad5", "patch": "@@ -255,23 +255,9 @@ pub struct ConstArg {\n     pub span: Span,\n }\n \n-#[derive(Copy, Clone, Encodable, Debug, HashStable_Generic)]\n-pub enum InferKind {\n-    Const,\n-    Type,\n-}\n-\n-impl InferKind {\n-    #[inline]\n-    pub fn is_type(self) -> bool {\n-        matches!(self, InferKind::Type)\n-    }\n-}\n-\n #[derive(Encodable, Debug, HashStable_Generic)]\n pub struct InferArg {\n     pub hir_id: HirId,\n-    pub kind: InferKind,\n     pub span: Span,\n }\n "}, {"sha": "05098defead38dc5274e112bac4839f11c8547bf", "filename": "compiler/rustc_resolve/src/late/lifetimes.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/7175980ff51636f03824d67869e9a237c7d76ad5/compiler%2Frustc_resolve%2Fsrc%2Flate%2Flifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7175980ff51636f03824d67869e9a237c7d76ad5/compiler%2Frustc_resolve%2Fsrc%2Flate%2Flifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flate%2Flifetimes.rs?ref=7175980ff51636f03824d67869e9a237c7d76ad5", "patch": "@@ -2541,8 +2541,8 @@ impl<'a, 'tcx> LifetimeContext<'a, 'tcx> {\n                                 GenericParamDefKind::Type { object_lifetime_default, .. } => {\n                                     Some(object_lifetime_default)\n                                 }\n-                                GenericParamDefKind::Lifetime\n-                                | GenericParamDefKind::Const { .. } => None,\n+                                GenericParamDefKind::Const { .. } => Some(Set1::Empty),\n+                                GenericParamDefKind::Lifetime => None,\n                             })\n                             .collect()\n                     })\n@@ -2569,12 +2569,11 @@ impl<'a, 'tcx> LifetimeContext<'a, 'tcx> {\n                 }\n                 GenericArg::Const(ct) => {\n                     self.visit_anon_const(&ct.value);\n+                    i += 1;\n                 }\n                 GenericArg::Infer(inf) => {\n                     self.visit_id(inf.hir_id);\n-                    if inf.kind.is_type() {\n-                        i += 1;\n-                    }\n+                    i += 1;\n                 }\n             }\n         }"}]}