{"sha": "d3bbce79d0c0b3b4525f65e3bc75a8fa2863634a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQzYmJjZTc5ZDBjMGIzYjQ1MjVmNjVlM2JjNzVhOGZhMjg2MzYzNGE=", "commit": {"author": {"name": "Douglas Campos", "email": "qmx@qmx.me", "date": "2017-09-08T02:22:08Z"}, "committer": {"name": "Douglas Campos", "email": "qmx@qmx.me", "date": "2017-09-14T03:00:17Z"}, "message": "bring TyCtxt into scope", "tree": {"sha": "03fc7aa515a34e486ab602bf835f2157b9cf0f28", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/03fc7aa515a34e486ab602bf835f2157b9cf0f28"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d3bbce79d0c0b3b4525f65e3bc75a8fa2863634a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d3bbce79d0c0b3b4525f65e3bc75a8fa2863634a", "html_url": "https://github.com/rust-lang/rust/commit/d3bbce79d0c0b3b4525f65e3bc75a8fa2863634a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d3bbce79d0c0b3b4525f65e3bc75a8fa2863634a/comments", "author": {"login": "qmx", "id": 66734, "node_id": "MDQ6VXNlcjY2NzM0", "avatar_url": "https://avatars.githubusercontent.com/u/66734?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qmx", "html_url": "https://github.com/qmx", "followers_url": "https://api.github.com/users/qmx/followers", "following_url": "https://api.github.com/users/qmx/following{/other_user}", "gists_url": "https://api.github.com/users/qmx/gists{/gist_id}", "starred_url": "https://api.github.com/users/qmx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qmx/subscriptions", "organizations_url": "https://api.github.com/users/qmx/orgs", "repos_url": "https://api.github.com/users/qmx/repos", "events_url": "https://api.github.com/users/qmx/events{/privacy}", "received_events_url": "https://api.github.com/users/qmx/received_events", "type": "User", "site_admin": false}, "committer": {"login": "qmx", "id": 66734, "node_id": "MDQ6VXNlcjY2NzM0", "avatar_url": "https://avatars.githubusercontent.com/u/66734?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qmx", "html_url": "https://github.com/qmx", "followers_url": "https://api.github.com/users/qmx/followers", "following_url": "https://api.github.com/users/qmx/following{/other_user}", "gists_url": "https://api.github.com/users/qmx/gists{/gist_id}", "starred_url": "https://api.github.com/users/qmx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qmx/subscriptions", "organizations_url": "https://api.github.com/users/qmx/orgs", "repos_url": "https://api.github.com/users/qmx/repos", "events_url": "https://api.github.com/users/qmx/events{/privacy}", "received_events_url": "https://api.github.com/users/qmx/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "94211416bcde4d1049f241b6c95594e28c8865e6", "url": "https://api.github.com/repos/rust-lang/rust/commits/94211416bcde4d1049f241b6c95594e28c8865e6", "html_url": "https://github.com/rust-lang/rust/commit/94211416bcde4d1049f241b6c95594e28c8865e6"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "d9c6843fad73a64d5cc92ff1eb39071607bd18a2", "filename": "src/librustc/ty/instance.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d3bbce79d0c0b3b4525f65e3bc75a8fa2863634a/src%2Flibrustc%2Fty%2Finstance.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3bbce79d0c0b3b4525f65e3bc75a8fa2863634a/src%2Flibrustc%2Fty%2Finstance.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Finstance.rs?ref=d3bbce79d0c0b3b4525f65e3bc75a8fa2863634a", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n use hir::def_id::DefId;\n-use ty::{self, Ty, TypeFoldable, Substs};\n+use ty::{self, Ty, TypeFoldable, Substs, TyCtxt};\n use util::ppaux;\n \n use std::fmt;\n@@ -57,12 +57,12 @@ impl<'tcx> InstanceDef<'tcx> {\n     }\n \n     #[inline]\n-    pub fn def_ty<'a>(&self, tcx: ty::TyCtxt<'a, 'tcx, 'tcx>) -> Ty<'tcx> {\n+    pub fn def_ty<'a>(&self, tcx: TyCtxt<'a, 'tcx, 'tcx>) -> Ty<'tcx> {\n         tcx.type_of(self.def_id())\n     }\n \n     #[inline]\n-    pub fn attrs<'a>(&self, tcx: ty::TyCtxt<'a, 'tcx, 'tcx>) -> ty::Attributes<'tcx> {\n+    pub fn attrs<'a>(&self, tcx: TyCtxt<'a, 'tcx, 'tcx>) -> ty::Attributes<'tcx> {\n         tcx.get_attrs(self.def_id())\n     }\n }\n@@ -103,7 +103,7 @@ impl<'a, 'b, 'tcx> Instance<'tcx> {\n         Instance { def: InstanceDef::Item(def_id), substs: substs }\n     }\n \n-    pub fn mono(tcx: ty::TyCtxt<'a, 'tcx, 'b>, def_id: DefId) -> Instance<'tcx> {\n+    pub fn mono(tcx: TyCtxt<'a, 'tcx, 'b>, def_id: DefId) -> Instance<'tcx> {\n         Instance::new(def_id, tcx.global_tcx().empty_substs_for_def_id(def_id))\n     }\n "}]}