{"sha": "9457380ac902db3febf92077c5b645db55998ad4", "node_id": "C_kwDOAAsO6NoAKDk0NTczODBhYzkwMmRiM2ZlYmY5MjA3N2M1YjY0NWRiNTU5OThhZDQ", "commit": {"author": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2022-09-19T17:52:13Z"}, "committer": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2022-09-19T17:52:51Z"}, "message": "rustdoc: remove `docblock` class from `item-decl`\n\nThis class was originally added in 73b97c7e7c9cfac4dfa4804654b1db6ab687b589\nto support hiding and showing the item, because `main.js` went through all\n`docblock` elements in the DOM and added toggles to them.\n\nhttps://github.com/rust-lang/rust/blob/73b97c7e7c9cfac4dfa4804654b1db6ab687b589/src/librustdoc/html/static/main.js#L1856-L1867\n\nThe `item-decl` is no longer auto-hidden since\nc96f86de3026f864e78397aff9097e885f2f8fdf removed it.\n\n`item-decl` used to be called `type-decl`: that name was changed in\n8b7a2dd4626acf164e1ce8397878b3f5af83d585.\n\nThe `docblock` class is no longer used for implementing toggles, since\nrustdoc switched to using `<details>` elements.", "tree": {"sha": "adf88dfa65406146207e7ef72d204e3d8d8f8458", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/adf88dfa65406146207e7ef72d204e3d8d8f8458"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9457380ac902db3febf92077c5b645db55998ad4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9457380ac902db3febf92077c5b645db55998ad4", "html_url": "https://github.com/rust-lang/rust/commit/9457380ac902db3febf92077c5b645db55998ad4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9457380ac902db3febf92077c5b645db55998ad4/comments", "author": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a37499ae66ec5fc52a93d71493b78fb141c32f6b", "url": "https://api.github.com/repos/rust-lang/rust/commits/a37499ae66ec5fc52a93d71493b78fb141c32f6b", "html_url": "https://github.com/rust-lang/rust/commit/a37499ae66ec5fc52a93d71493b78fb141c32f6b"}], "stats": {"total": 33, "additions": 15, "deletions": 18}, "files": [{"sha": "3e324bbb069c619f7f6f8f0591bdcb1d77f0283a", "filename": "src/librustdoc/html/render/print_item.rs", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/9457380ac902db3febf92077c5b645db55998ad4/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9457380ac902db3febf92077c5b645db55998ad4/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs?ref=9457380ac902db3febf92077c5b645db55998ad4", "patch": "@@ -514,7 +514,7 @@ fn item_function(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, f: &cle\n         + name.as_str().len()\n         + generics_len;\n \n-    wrap_into_docblock(w, |w| {\n+    wrap_into_item_decl(w, |w| {\n         wrap_item(w, \"fn\", |w| {\n             render_attributes_in_pre(w, it, \"\");\n             w.reserve(header_len);\n@@ -553,7 +553,7 @@ fn item_trait(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, t: &clean:\n         cx.tcx().trait_def(t.def_id).must_implement_one_of.clone();\n \n     // Output the trait definition\n-    wrap_into_docblock(w, |w| {\n+    wrap_into_item_decl(w, |w| {\n         wrap_item(w, \"trait\", |w| {\n             render_attributes_in_pre(w, it, \"\");\n             write!(\n@@ -1033,7 +1033,7 @@ fn item_trait(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, t: &clean:\n }\n \n fn item_trait_alias(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, t: &clean::TraitAlias) {\n-    wrap_into_docblock(w, |w| {\n+    wrap_into_item_decl(w, |w| {\n         wrap_item(w, \"trait-alias\", |w| {\n             render_attributes_in_pre(w, it, \"\");\n             write!(\n@@ -1057,7 +1057,7 @@ fn item_trait_alias(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, t: &\n }\n \n fn item_opaque_ty(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, t: &clean::OpaqueTy) {\n-    wrap_into_docblock(w, |w| {\n+    wrap_into_item_decl(w, |w| {\n         wrap_item(w, \"opaque\", |w| {\n             render_attributes_in_pre(w, it, \"\");\n             write!(\n@@ -1096,7 +1096,7 @@ fn item_typedef(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, t: &clea\n         });\n     }\n \n-    wrap_into_docblock(w, |w| write_content(w, cx, it, t));\n+    wrap_into_item_decl(w, |w| write_content(w, cx, it, t));\n \n     document(w, cx, it, None, HeadingOffset::H2);\n \n@@ -1110,7 +1110,7 @@ fn item_typedef(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, t: &clea\n }\n \n fn item_union(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, s: &clean::Union) {\n-    wrap_into_docblock(w, |w| {\n+    wrap_into_item_decl(w, |w| {\n         wrap_item(w, \"union\", |w| {\n             render_attributes_in_pre(w, it, \"\");\n             render_union(w, it, Some(&s.generics), &s.fields, \"\", cx);\n@@ -1174,7 +1174,7 @@ fn print_tuple_struct_fields(w: &mut Buffer, cx: &Context<'_>, s: &[clean::Item]\n \n fn item_enum(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, e: &clean::Enum) {\n     let count_variants = e.variants().count();\n-    wrap_into_docblock(w, |w| {\n+    wrap_into_item_decl(w, |w| {\n         wrap_item(w, \"enum\", |w| {\n             render_attributes_in_pre(w, it, \"\");\n             write!(\n@@ -1333,14 +1333,14 @@ fn item_enum(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, e: &clean::\n }\n \n fn item_macro(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, t: &clean::Macro) {\n-    wrap_into_docblock(w, |w| {\n+    wrap_into_item_decl(w, |w| {\n         highlight::render_macro_with_highlighting(&t.source, w);\n     });\n     document(w, cx, it, None, HeadingOffset::H2)\n }\n \n fn item_proc_macro(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, m: &clean::ProcMacro) {\n-    wrap_into_docblock(w, |w| {\n+    wrap_into_item_decl(w, |w| {\n         let name = it.name.expect(\"proc-macros always have names\");\n         match m.kind {\n             MacroKind::Bang => {\n@@ -1387,7 +1387,7 @@ fn item_primitive(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item) {\n }\n \n fn item_constant(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, c: &clean::Constant) {\n-    wrap_into_docblock(w, |w| {\n+    wrap_into_item_decl(w, |w| {\n         wrap_item(w, \"const\", |w| {\n             render_attributes_in_code(w, it);\n \n@@ -1436,7 +1436,7 @@ fn item_constant(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, c: &cle\n }\n \n fn item_struct(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, s: &clean::Struct) {\n-    wrap_into_docblock(w, |w| {\n+    wrap_into_item_decl(w, |w| {\n         wrap_item(w, \"struct\", |w| {\n             render_attributes_in_code(w, it);\n             render_struct(w, it, Some(&s.generics), s.struct_type, &s.fields, \"\", true, cx);\n@@ -1489,7 +1489,7 @@ fn item_struct(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, s: &clean\n }\n \n fn item_static(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, s: &clean::Static) {\n-    wrap_into_docblock(w, |w| {\n+    wrap_into_item_decl(w, |w| {\n         wrap_item(w, \"static\", |w| {\n             render_attributes_in_code(w, it);\n             write!(\n@@ -1506,7 +1506,7 @@ fn item_static(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, s: &clean\n }\n \n fn item_foreign_type(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item) {\n-    wrap_into_docblock(w, |w| {\n+    wrap_into_item_decl(w, |w| {\n         wrap_item(w, \"foreigntype\", |w| {\n             w.write_str(\"extern {\\n\");\n             render_attributes_in_code(w, it);\n@@ -1595,11 +1595,11 @@ fn bounds(t_bounds: &[clean::GenericBound], trait_alias: bool, cx: &Context<'_>)\n     bounds\n }\n \n-fn wrap_into_docblock<F>(w: &mut Buffer, f: F)\n+fn wrap_into_item_decl<F>(w: &mut Buffer, f: F)\n where\n     F: FnOnce(&mut Buffer),\n {\n-    w.write_str(\"<div class=\\\"docblock item-decl\\\">\");\n+    w.write_str(\"<div class=\\\"item-decl\\\">\");\n     f(w);\n     w.write_str(\"</div>\")\n }"}, {"sha": "dc2a67c69d725a7811780b4df4debd15dfda5335", "filename": "src/librustdoc/html/static/css/rustdoc.css", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9457380ac902db3febf92077c5b645db55998ad4/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css", "raw_url": "https://github.com/rust-lang/rust/raw/9457380ac902db3febf92077c5b645db55998ad4/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css?ref=9457380ac902db3febf92077c5b645db55998ad4", "patch": "@@ -372,9 +372,6 @@ code, pre, a.test-arrow, .code-header {\n pre {\n \tpadding: 14px;\n }\n-.docblock.item-decl {\n-\tmargin-left: 0;\n-}\n .item-decl pre {\n \toverflow-x: auto;\n }"}]}