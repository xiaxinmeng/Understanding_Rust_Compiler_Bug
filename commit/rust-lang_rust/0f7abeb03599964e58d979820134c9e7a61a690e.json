{"sha": "0f7abeb03599964e58d979820134c9e7a61a690e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBmN2FiZWIwMzU5OTk2NGU1OGQ5Nzk4MjAxMzRjOWU3YTYxYTY5MGU=", "commit": {"author": {"name": "Veetaha", "email": "gerzoh1@gmail.com", "date": "2020-02-16T01:12:25Z"}, "committer": {"name": "Veetaha", "email": "gerzoh1@gmail.com", "date": "2020-02-16T01:41:40Z"}, "message": "vscode: add release tag option to fetchArtifactReleaseInfo()", "tree": {"sha": "da2dd6ba4174a4770e5d56b1160593d114fd222c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/da2dd6ba4174a4770e5d56b1160593d114fd222c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0f7abeb03599964e58d979820134c9e7a61a690e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0f7abeb03599964e58d979820134c9e7a61a690e", "html_url": "https://github.com/rust-lang/rust/commit/0f7abeb03599964e58d979820134c9e7a61a690e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0f7abeb03599964e58d979820134c9e7a61a690e/comments", "author": null, "committer": null, "parents": [{"sha": "8533fc437b7619e1c289fa7913fdafda533903b8", "url": "https://api.github.com/repos/rust-lang/rust/commits/8533fc437b7619e1c289fa7913fdafda533903b8", "html_url": "https://github.com/rust-lang/rust/commit/8533fc437b7619e1c289fa7913fdafda533903b8"}], "stats": {"total": 16, "additions": 11, "deletions": 5}, "files": [{"sha": "7d497057aa4787ce05644e1f127e2ebfb2b4be76", "filename": "editors/code/src/installation/fetch_artifact_release_info.ts", "status": "renamed", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/0f7abeb03599964e58d979820134c9e7a61a690e/editors%2Fcode%2Fsrc%2Finstallation%2Ffetch_artifact_release_info.ts", "raw_url": "https://github.com/rust-lang/rust/raw/0f7abeb03599964e58d979820134c9e7a61a690e/editors%2Fcode%2Fsrc%2Finstallation%2Ffetch_artifact_release_info.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Finstallation%2Ffetch_artifact_release_info.ts?ref=0f7abeb03599964e58d979820134c9e7a61a690e", "patch": "@@ -3,24 +3,30 @@ import { GithubRepo, ArtifactReleaseInfo } from \"./interfaces\";\n \n const GITHUB_API_ENDPOINT_URL = \"https://api.github.com\";\n \n+\n /**\n- * Fetches the latest release from GitHub `repo` and returns metadata about\n- * `artifactFileName` shipped with this release or `null` if no such artifact was published.\n+ * Fetches the release with `releaseTag` (or just latest release when not specified)\n+ * from GitHub `repo` and returns metadata about `artifactFileName` shipped with\n+ * this release or `null` if no such artifact was published.\n  */\n-export async function fetchLatestArtifactReleaseInfo(\n-    repo: GithubRepo, artifactFileName: string\n+export async function fetchArtifactReleaseInfo(\n+    repo: GithubRepo, artifactFileName: string, releaseTag?: string\n ): Promise<null | ArtifactReleaseInfo> {\n \n     const repoOwner = encodeURIComponent(repo.owner);\n     const repoName  = encodeURIComponent(repo.name);\n \n-    const apiEndpointPath = `/repos/${repoOwner}/${repoName}/releases/latest`;\n+    const apiEndpointPath = releaseTag\n+        ? `/repos/${repoOwner}/${repoName}/releases/tags/${releaseTag}`\n+        : `/repos/${repoOwner}/${repoName}/releases/latest`;\n+\n     const requestUrl = GITHUB_API_ENDPOINT_URL + apiEndpointPath;\n \n     // We skip runtime type checks for simplicity (here we cast from `any` to `GithubRelease`)\n \n     console.log(\"Issuing request for released artifacts metadata to\", requestUrl);\n \n+    // FIXME: handle non-ok response\n     const response: GithubRelease = await fetch(requestUrl, {\n             headers: { Accept: \"application/vnd.github.v3+json\" }\n         })", "previous_filename": "editors/code/src/installation/fetch_latest_artifact_release_info.ts"}]}