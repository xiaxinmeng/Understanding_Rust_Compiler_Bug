{"sha": "222b780e7ac3fa1937948cb159c2e88422adb715", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIyMmI3ODBlN2FjM2ZhMTkzNzk0OGNiMTU5YzJlODg0MjJhZGI3MTU=", "commit": {"author": {"name": "Jonas Hietala", "email": "tradet.h@gmail.com", "date": "2014-07-24T14:28:34Z"}, "committer": {"name": "Jonas Hietala", "email": "tradet.h@gmail.com", "date": "2014-07-24T14:30:29Z"}, "message": "Document update and update_with_key in SmallIntMap.\n\nMove update above for better docs progression.", "tree": {"sha": "cbd17b11267e8bd56b76fcb301102a54c5a3dc36", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cbd17b11267e8bd56b76fcb301102a54c5a3dc36"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/222b780e7ac3fa1937948cb159c2e88422adb715", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/222b780e7ac3fa1937948cb159c2e88422adb715", "html_url": "https://github.com/rust-lang/rust/commit/222b780e7ac3fa1937948cb159c2e88422adb715", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/222b780e7ac3fa1937948cb159c2e88422adb715/comments", "author": {"login": "treeman", "id": 162027, "node_id": "MDQ6VXNlcjE2MjAyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/162027?v=4", "gravatar_id": "", "url": "https://api.github.com/users/treeman", "html_url": "https://github.com/treeman", "followers_url": "https://api.github.com/users/treeman/followers", "following_url": "https://api.github.com/users/treeman/following{/other_user}", "gists_url": "https://api.github.com/users/treeman/gists{/gist_id}", "starred_url": "https://api.github.com/users/treeman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/treeman/subscriptions", "organizations_url": "https://api.github.com/users/treeman/orgs", "repos_url": "https://api.github.com/users/treeman/repos", "events_url": "https://api.github.com/users/treeman/events{/privacy}", "received_events_url": "https://api.github.com/users/treeman/received_events", "type": "User", "site_admin": false}, "committer": {"login": "treeman", "id": 162027, "node_id": "MDQ6VXNlcjE2MjAyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/162027?v=4", "gravatar_id": "", "url": "https://api.github.com/users/treeman", "html_url": "https://github.com/treeman", "followers_url": "https://api.github.com/users/treeman/followers", "following_url": "https://api.github.com/users/treeman/following{/other_user}", "gists_url": "https://api.github.com/users/treeman/gists{/gist_id}", "starred_url": "https://api.github.com/users/treeman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/treeman/subscriptions", "organizations_url": "https://api.github.com/users/treeman/orgs", "repos_url": "https://api.github.com/users/treeman/repos", "events_url": "https://api.github.com/users/treeman/events{/privacy}", "received_events_url": "https://api.github.com/users/treeman/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9e2bb9d67bb47b9a3a6c7389efa45cefc33206a6", "url": "https://api.github.com/repos/rust-lang/rust/commits/9e2bb9d67bb47b9a3a6c7389efa45cefc33206a6", "html_url": "https://github.com/rust-lang/rust/commit/9e2bb9d67bb47b9a3a6c7389efa45cefc33206a6"}], "stats": {"total": 48, "additions": 44, "deletions": 4}, "files": [{"sha": "5e71b2c4e592a5c7234372418feb20727bb1fbf7", "filename": "src/libcollections/smallintmap.rs", "status": "modified", "additions": 44, "deletions": 4, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/222b780e7ac3fa1937948cb159c2e88422adb715/src%2Flibcollections%2Fsmallintmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/222b780e7ac3fa1937948cb159c2e88422adb715/src%2Flibcollections%2Fsmallintmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fsmallintmap.rs?ref=222b780e7ac3fa1937948cb159c2e88422adb715", "patch": "@@ -167,6 +167,50 @@ impl<V> SmallIntMap<V> {\n }\n \n impl<V:Clone> SmallIntMap<V> {\n+    /// Update a value in the map. If the key already exists in the map,\n+    /// modify the value with `ff` taking `oldval, newval`.\n+    /// Otherwise set the value to `newval`.\n+    /// Return `true` if the key did not already exist in the map.\n+    ///\n+    /// # Example\n+    ///\n+    /// ```\n+    /// use std::collections::SmallIntMap;\n+    ///\n+    /// let mut map = SmallIntMap::new();\n+    ///\n+    /// // Key does not exist, will do a simple insert\n+    /// assert!(map.update(1, vec![1i, 2], |old, new| old.append(new.as_slice())));\n+    /// assert_eq!(map.get(&1), &vec![1i, 2]);\n+    ///\n+    /// // Key exists, update the value\n+    /// assert!(!map.update(1, vec![3i, 4], |old, new| old.append(new.as_slice())));\n+    /// assert_eq!(map.get(&1), &vec![1i, 2, 3, 4]);\n+    /// ```\n+    pub fn update(&mut self, key: uint, newval: V, ff: |V, V| -> V) -> bool {\n+        self.update_with_key(key, newval, |_k, v, v1| ff(v,v1))\n+    }\n+\n+    /// Update a value in the map. If the key already exists in the map,\n+    /// modify the value with `ff` taking `key, oldval, newval`.\n+    /// Otherwise set the value to `newval`.\n+    /// Return `true` if the key did not already exist in the map.\n+    ///\n+    /// # Example\n+    ///\n+    /// ```\n+    /// use std::collections::SmallIntMap;\n+    ///\n+    /// let mut map = SmallIntMap::new();\n+    ///\n+    /// // Key does not exist, will do a simple insert\n+    /// assert!(map.update_with_key(7, 10, |key, old, new| (old + new) % key));\n+    /// assert_eq!(map.get(&7), &10);\n+    ///\n+    /// // Key exists, update the value\n+    /// assert!(!map.update_with_key(7, 20, |key, old, new| (old + new) % key));\n+    /// assert_eq!(map.get(&7), &2);\n+    /// ```\n     pub fn update_with_key(&mut self,\n                            key: uint,\n                            val: V,\n@@ -178,10 +222,6 @@ impl<V:Clone> SmallIntMap<V> {\n         };\n         self.insert(key, new_val)\n     }\n-\n-    pub fn update(&mut self, key: uint, newval: V, ff: |V, V| -> V) -> bool {\n-        self.update_with_key(key, newval, |_k, v, v1| ff(v,v1))\n-    }\n }\n \n impl<V: fmt::Show> fmt::Show for SmallIntMap<V> {"}]}