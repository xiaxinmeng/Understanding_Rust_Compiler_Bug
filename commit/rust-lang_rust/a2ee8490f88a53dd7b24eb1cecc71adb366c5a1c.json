{"sha": "a2ee8490f88a53dd7b24eb1cecc71adb366c5a1c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEyZWU4NDkwZjg4YTUzZGQ3YjI0ZWIxY2VjYzcxYWRiMzY2YzVhMWM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-03-17T09:24:54Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-03-17T09:24:54Z"}, "message": "Auto merge of #6888 - matthiaskrgr:rip_ra_setup, r=flip1995\n\ndocs: update RA setup documentation\n\nAdd documentation how to get rust-analyzer to like clippys `extern crate` rustc deps.\n\nFixes #6883\n\nThis initially removed `cargo-dev ra_setup` but it is still needed by folks who use intellij rust, so keeping that.\n\nchangelog: none", "tree": {"sha": "01b6ad8f8cfd6f85358143a6fee633cdfb426a2e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/01b6ad8f8cfd6f85358143a6fee633cdfb426a2e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a2ee8490f88a53dd7b24eb1cecc71adb366c5a1c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a2ee8490f88a53dd7b24eb1cecc71adb366c5a1c", "html_url": "https://github.com/rust-lang/rust/commit/a2ee8490f88a53dd7b24eb1cecc71adb366c5a1c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a2ee8490f88a53dd7b24eb1cecc71adb366c5a1c/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "56161b2982a4e6513e6765d6cc951ccc0f297a89", "url": "https://api.github.com/repos/rust-lang/rust/commits/56161b2982a4e6513e6765d6cc951ccc0f297a89", "html_url": "https://github.com/rust-lang/rust/commit/56161b2982a4e6513e6765d6cc951ccc0f297a89"}, {"sha": "65462859596f20bc99ca177c6ed722bd4079dc26", "url": "https://api.github.com/repos/rust-lang/rust/commits/65462859596f20bc99ca177c6ed722bd4079dc26", "html_url": "https://github.com/rust-lang/rust/commit/65462859596f20bc99ca177c6ed722bd4079dc26"}], "stats": {"total": 54, "additions": 38, "deletions": 16}, "files": [{"sha": "e0a4d4455e9c6c2182ebb60639f228f35eaec621", "filename": "CONTRIBUTING.md", "status": "modified", "additions": 29, "deletions": 7, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/a2ee8490f88a53dd7b24eb1cecc71adb366c5a1c/CONTRIBUTING.md", "raw_url": "https://github.com/rust-lang/rust/raw/a2ee8490f88a53dd7b24eb1cecc71adb366c5a1c/CONTRIBUTING.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CONTRIBUTING.md?ref=a2ee8490f88a53dd7b24eb1cecc71adb366c5a1c", "patch": "@@ -18,11 +18,13 @@ All contributors are expected to follow the [Rust Code of Conduct].\n     - [Finding something to fix/improve](#finding-something-to-fiximprove)\n   - [Writing code](#writing-code)\n   - [Getting code-completion for rustc internals to work](#getting-code-completion-for-rustc-internals-to-work)\n+    - [IntelliJ Rust](#intellij-rust)\n+    - [Rust Analyzer](#rust-analyzer)\n   - [How Clippy works](#how-clippy-works)\n-  - [Syncing changes between Clippy and `rust-lang/rust`](#syncing-changes-between-clippy-and-rust-langrust)\n+  - [Syncing changes between Clippy and [`rust-lang/rust`]](#syncing-changes-between-clippy-and-rust-langrust)\n     - [Patching git-subtree to work with big repos](#patching-git-subtree-to-work-with-big-repos)\n-    - [Performing the sync from `rust-lang/rust` to Clippy](#performing-the-sync-from-rust-langrust-to-clippy)\n-    - [Performing the sync from Clippy to `rust-lang/rust`](#performing-the-sync-from-clippy-to-rust-langrust)\n+    - [Performing the sync from [`rust-lang/rust`] to Clippy](#performing-the-sync-from-rust-langrust-to-clippy)\n+    - [Performing the sync from Clippy to [`rust-lang/rust`]](#performing-the-sync-from-clippy-to-rust-langrust)\n     - [Defining remotes](#defining-remotes)\n   - [Issue and PR triage](#issue-and-pr-triage)\n   - [Bors and Homu](#bors-and-homu)\n@@ -105,21 +107,41 @@ quick read.\n \n ## Getting code-completion for rustc internals to work\n \n-Unfortunately, [`rust-analyzer`][ra_homepage] does not (yet?) understand how Clippy uses compiler-internals\n+### IntelliJ Rust\n+Unfortunately, [`IntelliJ Rust`][IntelliJ_rust_homepage] does not (yet?) understand how Clippy uses compiler-internals\n using `extern crate` and it also needs to be able to read the source files of the rustc-compiler which are not\n available via a `rustup` component at the time of writing.\n To work around this, you need to have a copy of the [rustc-repo][rustc_repo] available which can be obtained via\n `git clone https://github.com/rust-lang/rust/`.\n Then you can run a `cargo dev` command to automatically make Clippy use the rustc-repo via path-dependencies\n-which rust-analyzer will be able to understand.\n-Run `cargo dev ra_setup --repo-path <repo-path>` where `<repo-path>` is an absolute path to the rustc repo\n+which `IntelliJ Rust` will be able to understand.\n+Run `cargo dev ide_setup --repo-path <repo-path>` where `<repo-path>` is a path to the rustc repo\n you just cloned.\n The command will add path-dependencies pointing towards rustc-crates inside the rustc repo to\n Clippys `Cargo.toml`s and should allow rust-analyzer to understand most of the types that Clippy uses.\n Just make sure to remove the dependencies again before finally making a pull request!\n \n-[ra_homepage]: https://rust-analyzer.github.io/\n [rustc_repo]: https://github.com/rust-lang/rust/\n+[IntelliJ_rust_homepage]: https://intellij-rust.github.io/\n+\n+### Rust Analyzer\n+As of [#6869][6869], [`rust-analyzer`][ra_homepage] can understand that Clippy uses compiler-internals\n+using `extern crate` when `package.metadata.rust-analyzer.rustc_private` is set to `true` in Clippys `Cargo.toml.`\n+You will required a `nightly` toolchain with the `rustc-dev` component installed.\n+Make sure that in the `rust-analyzer` configuration, you set\n+```\n+{ \"rust-analyzer.rustcSource\": \"discover\" }\n+```\n+and\n+```\n+{ \"rust-analyzer.updates.channel\": \"nightly\" }\n+```\n+You should be able to see information on things like `Expr` or `EarlyContext` now if you hover them, also\n+a lot more type hints.\n+This will work with `rust-analyzer 2021-03-15` shipped in nightly `1.52.0-nightly (107896c32 2021-03-15)` or later.\n+\n+[ra_homepage]: https://rust-analyzer.github.io/\n+[6869]: https://github.com/rust-lang/rust-clippy/pull/6869\n \n ## How Clippy works\n "}, {"sha": "111c79c332d0596e4a5d25cb338c95374da4a88d", "filename": "clippy_dev/src/fmt.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a2ee8490f88a53dd7b24eb1cecc71adb366c5a1c/clippy_dev%2Fsrc%2Ffmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2ee8490f88a53dd7b24eb1cecc71adb366c5a1c/clippy_dev%2Fsrc%2Ffmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2Fsrc%2Ffmt.rs?ref=a2ee8490f88a53dd7b24eb1cecc71adb366c5a1c", "patch": "@@ -90,7 +90,7 @@ pub fn run(check: bool, verbose: bool) {\n             },\n             CliError::RaSetupActive => {\n                 eprintln!(\n-                    \"error: a local rustc repo is enabled as path dependency via `cargo dev ra_setup`.\n+                    \"error: a local rustc repo is enabled as path dependency via `cargo dev ide_setup`.\n Not formatting because that would format the local repo as well!\n Please revert the changes to Cargo.tomls first.\"\n                 );"}, {"sha": "defb1133e44e60f285bf642a48abd5c22ffe8cc1", "filename": "clippy_dev/src/ide_setup.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a2ee8490f88a53dd7b24eb1cecc71adb366c5a1c/clippy_dev%2Fsrc%2Fide_setup.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2ee8490f88a53dd7b24eb1cecc71adb366c5a1c/clippy_dev%2Fsrc%2Fide_setup.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2Fsrc%2Fide_setup.rs?ref=a2ee8490f88a53dd7b24eb1cecc71adb366c5a1c", "patch": "@@ -55,7 +55,7 @@ fn inject_deps_into_manifest(\n     // do not inject deps if we have aleady done so\n     if cargo_toml.contains(\"[target.'cfg(NOT_A_PLATFORM)'.dependencies]\") {\n         eprintln!(\n-            \"cargo dev ra_setup: warning: deps already found inside {}, doing nothing.\",\n+            \"cargo dev ide_setup: warning: deps already found inside {}, doing nothing.\",\n             manifest_path\n         );\n         return Ok(());", "previous_filename": "clippy_dev/src/ra_setup.rs"}, {"sha": "a5e94683878ec7ff78b9a8eb932546fc273c1e7b", "filename": "clippy_dev/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a2ee8490f88a53dd7b24eb1cecc71adb366c5a1c/clippy_dev%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2ee8490f88a53dd7b24eb1cecc71adb366c5a1c/clippy_dev%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2Fsrc%2Flib.rs?ref=a2ee8490f88a53dd7b24eb1cecc71adb366c5a1c", "patch": "@@ -12,8 +12,8 @@ use walkdir::WalkDir;\n \n pub mod bless;\n pub mod fmt;\n+pub mod ide_setup;\n pub mod new_lint;\n-pub mod ra_setup;\n pub mod serve;\n pub mod stderr_length_check;\n pub mod update_lints;"}, {"sha": "f4da783502c5fdc8c8e51dd8eef0a4ee61929c67", "filename": "clippy_dev/src/main.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a2ee8490f88a53dd7b24eb1cecc71adb366c5a1c/clippy_dev%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2ee8490f88a53dd7b24eb1cecc71adb366c5a1c/clippy_dev%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2Fsrc%2Fmain.rs?ref=a2ee8490f88a53dd7b24eb1cecc71adb366c5a1c", "patch": "@@ -1,7 +1,7 @@\n #![cfg_attr(feature = \"deny-warnings\", deny(warnings))]\n \n use clap::{App, Arg, ArgMatches, SubCommand};\n-use clippy_dev::{bless, fmt, new_lint, ra_setup, serve, stderr_length_check, update_lints};\n+use clippy_dev::{bless, fmt, ide_setup, new_lint, serve, stderr_length_check, update_lints};\n fn main() {\n     let matches = get_clap_config();\n \n@@ -34,7 +34,7 @@ fn main() {\n         (\"limit_stderr_length\", _) => {\n             stderr_length_check::check();\n         },\n-        (\"ra_setup\", Some(matches)) => ra_setup::run(matches.value_of(\"rustc-repo-path\")),\n+        (\"ide_setup\", Some(matches)) => ide_setup::run(matches.value_of(\"rustc-repo-path\")),\n         (\"serve\", Some(matches)) => {\n             let port = matches.value_of(\"port\").unwrap().parse().unwrap();\n             let lint = matches.value_of(\"lint\");\n@@ -138,8 +138,8 @@ fn get_clap_config<'a>() -> ArgMatches<'a> {\n                 .about(\"Ensures that stderr files do not grow longer than a certain amount of lines.\"),\n         )\n         .subcommand(\n-            SubCommand::with_name(\"ra_setup\")\n-                .about(\"Alter dependencies so rust-analyzer can find rustc internals\")\n+            SubCommand::with_name(\"ide_setup\")\n+                .about(\"Alter dependencies so Intellij Rust can find rustc internals\")\n                 .arg(\n                     Arg::with_name(\"rustc-repo-path\")\n                         .long(\"repo-path\")"}, {"sha": "5226875cc210a8c7989efd09a6aa7de31a9d7ccb", "filename": "doc/basics.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a2ee8490f88a53dd7b24eb1cecc71adb366c5a1c/doc%2Fbasics.md", "raw_url": "https://github.com/rust-lang/rust/raw/a2ee8490f88a53dd7b24eb1cecc71adb366c5a1c/doc%2Fbasics.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Fbasics.md?ref=a2ee8490f88a53dd7b24eb1cecc71adb366c5a1c", "patch": "@@ -88,8 +88,8 @@ cargo dev fmt\n cargo dev update_lints\n # create a new lint and register it\n cargo dev new_lint\n-# (experimental) Setup Clippy to work with rust-analyzer\n-cargo dev ra_setup\n+# (experimental) Setup Clippy to work with IntelliJ-Rust\n+cargo dev ide_setup\n ```\n \n ## lintcheck"}]}