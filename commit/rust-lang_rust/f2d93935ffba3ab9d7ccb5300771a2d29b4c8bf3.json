{"sha": "f2d93935ffba3ab9d7ccb5300771a2d29b4c8bf3", "node_id": "C_kwDOAAsO6NoAKGYyZDkzOTM1ZmZiYTNhYjlkN2NjYjUzMDA3NzFhMmQyOWI0YzhiZjM", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-07-02T19:46:01Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-07-02T19:46:01Z"}, "message": "Auto merge of #98820 - RalfJung:rollup-i3mip9a, r=RalfJung\n\nRollup of 6 pull requests\n\nSuccessful merges:\n\n - #98701 (Add regression test for #50439)\n - #98715 (add ice test for #97047)\n - #98753 (Fix `x dist rust-dev` on a fresh checkout)\n - #98805 (Add #95469 to the release notes)\n - #98812 (feat: Add a documentation problem issue template)\n - #98819 (update Miri)\n\nFailed merges:\n\nr? `@ghost`\n`@rustbot` modify labels: rollup", "tree": {"sha": "c2266bee0bf742d072809b0be8bd3ebd6c517e2f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c2266bee0bf742d072809b0be8bd3ebd6c517e2f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f2d93935ffba3ab9d7ccb5300771a2d29b4c8bf3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f2d93935ffba3ab9d7ccb5300771a2d29b4c8bf3", "html_url": "https://github.com/rust-lang/rust/commit/f2d93935ffba3ab9d7ccb5300771a2d29b4c8bf3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f2d93935ffba3ab9d7ccb5300771a2d29b4c8bf3/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "750d6f85459356db4838dc06db8b19406e1ed31a", "url": "https://api.github.com/repos/rust-lang/rust/commits/750d6f85459356db4838dc06db8b19406e1ed31a", "html_url": "https://github.com/rust-lang/rust/commit/750d6f85459356db4838dc06db8b19406e1ed31a"}, {"sha": "434ce766fbcf6a3dce6e03f2068fdf534b0e07fc", "url": "https://api.github.com/repos/rust-lang/rust/commits/434ce766fbcf6a3dce6e03f2068fdf534b0e07fc", "html_url": "https://github.com/rust-lang/rust/commit/434ce766fbcf6a3dce6e03f2068fdf534b0e07fc"}], "stats": {"total": 148, "additions": 147, "deletions": 1}, "files": [{"sha": "1d93939e2336037818b4965197db80e0f308e584", "filename": ".github/ISSUE_TEMPLATE/documentation.md", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/f2d93935ffba3ab9d7ccb5300771a2d29b4c8bf3/.github%2FISSUE_TEMPLATE%2Fdocumentation.md", "raw_url": "https://github.com/rust-lang/rust/raw/f2d93935ffba3ab9d7ccb5300771a2d29b4c8bf3/.github%2FISSUE_TEMPLATE%2Fdocumentation.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2FISSUE_TEMPLATE%2Fdocumentation.md?ref=f2d93935ffba3ab9d7ccb5300771a2d29b4c8bf3", "patch": "@@ -0,0 +1,16 @@\n+---\n+name: Documentation problem\n+about: Create a report for a documentation problem.\n+labels: A-docs\n+---\n+<!--\n+Thank you for finding a documentation problem! \ud83d\udcda\n+\n+Documentation problems might be grammatical issues, typos, or unclear wording, please provide details regarding the documentation including where it is present.\n+\n+-->\n+\n+### Location\n+\n+### Summary\n+"}, {"sha": "8154eab20599aa43e9a39eced4ef3e9480a50a9f", "filename": "RELEASES.md", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f2d93935ffba3ab9d7ccb5300771a2d29b4c8bf3/RELEASES.md", "raw_url": "https://github.com/rust-lang/rust/raw/f2d93935ffba3ab9d7ccb5300771a2d29b4c8bf3/RELEASES.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/RELEASES.md?ref=f2d93935ffba3ab9d7ccb5300771a2d29b4c8bf3", "patch": "@@ -78,6 +78,8 @@ Compatibility Notes\n - [rustdoc: doctests are now run on unexported `macro_rules!` macros, matching other private items][96630]\n - [rustdoc: Remove .woff font files][96279]\n - [Enforce Copy bounds for repeat elements while considering lifetimes][95819]\n+- [Windows: Fix potentinal unsoundness by aborting if `File` reads or writes cannot\n+  complete synchronously][95469].\n \n Internal Changes\n ----------------\n@@ -99,6 +101,7 @@ and related tools.\n [95372]: https://github.com/rust-lang/rust/pull/95372/\n [95380]: https://github.com/rust-lang/rust/pull/95380/\n [95431]: https://github.com/rust-lang/rust/pull/95431/\n+[95469]: https://github.com/rust-lang/rust/pull/95469/\n [95705]: https://github.com/rust-lang/rust/pull/95705/\n [95801]: https://github.com/rust-lang/rust/pull/95801/\n [95819]: https://github.com/rust-lang/rust/pull/95819/"}, {"sha": "cd85654db0167fb20baa1253473a256241c365de", "filename": "src/bootstrap/dist.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f2d93935ffba3ab9d7ccb5300771a2d29b4c8bf3/src%2Fbootstrap%2Fdist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2d93935ffba3ab9d7ccb5300771a2d29b4c8bf3/src%2Fbootstrap%2Fdist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdist.rs?ref=f2d93935ffba3ab9d7ccb5300771a2d29b4c8bf3", "patch": "@@ -2025,6 +2025,8 @@ impl Step for RustDev {\n         let mut tarball = Tarball::new(builder, \"rust-dev\", &target.triple);\n         tarball.set_overlay(OverlayKind::LLVM);\n \n+        builder.ensure(crate::native::Llvm { target });\n+\n         let src_bindir = builder.llvm_out(target).join(\"bin\");\n         // If updating this list, you likely want to change\n         // src/bootstrap/download-ci-llvm-stamp as well, otherwise local users"}, {"sha": "67e30232e2fbb24fd30106b369875536dab26de9", "filename": "src/test/ui/const-generics/generic_const_exprs/issue-97047-ice-1.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/f2d93935ffba3ab9d7ccb5300771a2d29b4c8bf3/src%2Ftest%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Fissue-97047-ice-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2d93935ffba3ab9d7ccb5300771a2d29b4c8bf3/src%2Ftest%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Fissue-97047-ice-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Fissue-97047-ice-1.rs?ref=f2d93935ffba3ab9d7ccb5300771a2d29b4c8bf3", "patch": "@@ -0,0 +1,25 @@\n+// check-pass\n+\n+#![feature(adt_const_params, generic_const_exprs)]\n+//~^ WARN the feature `adt_const_params` is incomplete and may not be safe to use and/or cause compiler crashes [incomplete_features]\n+//~^^ WARN the feature `generic_const_exprs` is incomplete and may not be safe to use and/or cause compiler crashes [incomplete_features]\n+\n+pub struct Changes<const CHANGES: &'static [&'static str]>\n+where\n+    [(); CHANGES.len()]:,\n+{\n+    changes: [usize; CHANGES.len()],\n+}\n+\n+impl<const CHANGES: &'static [&'static str]> Changes<CHANGES>\n+where\n+    [(); CHANGES.len()]:,\n+{\n+    pub const fn new() -> Self {\n+        Self {\n+            changes: [0; CHANGES.len()],\n+        }\n+    }\n+}\n+\n+pub fn main() {}"}, {"sha": "b5b2b0e405a26381fa19cf575fd8a6fbd29891e5", "filename": "src/test/ui/const-generics/generic_const_exprs/issue-97047-ice-1.stderr", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/f2d93935ffba3ab9d7ccb5300771a2d29b4c8bf3/src%2Ftest%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Fissue-97047-ice-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f2d93935ffba3ab9d7ccb5300771a2d29b4c8bf3/src%2Ftest%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Fissue-97047-ice-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Fissue-97047-ice-1.stderr?ref=f2d93935ffba3ab9d7ccb5300771a2d29b4c8bf3", "patch": "@@ -0,0 +1,19 @@\n+warning: the feature `adt_const_params` is incomplete and may not be safe to use and/or cause compiler crashes\n+  --> $DIR/issue-97047-ice-1.rs:3:12\n+   |\n+LL | #![feature(adt_const_params, generic_const_exprs)]\n+   |            ^^^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #95174 <https://github.com/rust-lang/rust/issues/95174> for more information\n+\n+warning: the feature `generic_const_exprs` is incomplete and may not be safe to use and/or cause compiler crashes\n+  --> $DIR/issue-97047-ice-1.rs:3:30\n+   |\n+LL | #![feature(adt_const_params, generic_const_exprs)]\n+   |                              ^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: see issue #76560 <https://github.com/rust-lang/rust/issues/76560> for more information\n+\n+warning: 2 warnings emitted\n+"}, {"sha": "00568a089446592bbf5388c7be692982eb3e9709", "filename": "src/test/ui/const-generics/generic_const_exprs/issue-97047-ice-2.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/f2d93935ffba3ab9d7ccb5300771a2d29b4c8bf3/src%2Ftest%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Fissue-97047-ice-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2d93935ffba3ab9d7ccb5300771a2d29b4c8bf3/src%2Ftest%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Fissue-97047-ice-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Fissue-97047-ice-2.rs?ref=f2d93935ffba3ab9d7ccb5300771a2d29b4c8bf3", "patch": "@@ -0,0 +1,23 @@\n+// check-pass\n+\n+#![feature(adt_const_params, generic_const_exprs)]\n+//~^ WARN the feature `adt_const_params` is incomplete and may not be safe to use and/or cause compiler crashes [incomplete_features]\n+//~^^ WARN the feature `generic_const_exprs` is incomplete and may not be safe to use and/or cause compiler crashes [incomplete_features]\n+\n+pub struct Changes<const CHANGES: &'static [&'static str]>\n+where\n+    [(); CHANGES.len()]:,\n+{\n+    changes: [usize; CHANGES.len()],\n+}\n+\n+impl<const CHANGES: &'static [&'static str]> Changes<CHANGES>\n+where\n+    [(); CHANGES.len()]:,\n+{\n+    pub fn combine(&mut self, other: &Self) {\n+        for _change in &self.changes {}\n+    }\n+}\n+\n+pub fn main() {}"}, {"sha": "5dfbd87ccd480d740439aaca2d592c34524e6708", "filename": "src/test/ui/const-generics/generic_const_exprs/issue-97047-ice-2.stderr", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/f2d93935ffba3ab9d7ccb5300771a2d29b4c8bf3/src%2Ftest%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Fissue-97047-ice-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f2d93935ffba3ab9d7ccb5300771a2d29b4c8bf3/src%2Ftest%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Fissue-97047-ice-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Fissue-97047-ice-2.stderr?ref=f2d93935ffba3ab9d7ccb5300771a2d29b4c8bf3", "patch": "@@ -0,0 +1,19 @@\n+warning: the feature `adt_const_params` is incomplete and may not be safe to use and/or cause compiler crashes\n+  --> $DIR/issue-97047-ice-2.rs:3:12\n+   |\n+LL | #![feature(adt_const_params, generic_const_exprs)]\n+   |            ^^^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #95174 <https://github.com/rust-lang/rust/issues/95174> for more information\n+\n+warning: the feature `generic_const_exprs` is incomplete and may not be safe to use and/or cause compiler crashes\n+  --> $DIR/issue-97047-ice-2.rs:3:30\n+   |\n+LL | #![feature(adt_const_params, generic_const_exprs)]\n+   |                              ^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: see issue #76560 <https://github.com/rust-lang/rust/issues/76560> for more information\n+\n+warning: 2 warnings emitted\n+"}, {"sha": "0be7c405473ca40ea783e495ea7b85194574830c", "filename": "src/test/ui/consts/issue-50439.rs", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/f2d93935ffba3ab9d7ccb5300771a2d29b4c8bf3/src%2Ftest%2Fui%2Fconsts%2Fissue-50439.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2d93935ffba3ab9d7ccb5300771a2d29b4c8bf3/src%2Ftest%2Fui%2Fconsts%2Fissue-50439.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fissue-50439.rs?ref=f2d93935ffba3ab9d7ccb5300771a2d29b4c8bf3", "patch": "@@ -0,0 +1,29 @@\n+#![feature(specialization)]\n+#![allow(incomplete_features)]\n+\n+pub trait ReflectDrop {\n+    const REFLECT_DROP: bool = false;\n+}\n+\n+impl<T> ReflectDrop for T where T: Clone {}\n+\n+pub trait PinDropInternal {\n+    fn is_valid()\n+    where\n+        Self: ReflectDrop;\n+}\n+\n+struct Bears<T>(T);\n+\n+default impl<T> ReflectDrop for Bears<T> {}\n+\n+impl<T: Sized> PinDropInternal for Bears<T> {\n+    fn is_valid()\n+    where\n+        Self: ReflectDrop,\n+    {\n+        let _ = [(); 0 - !!(<Bears<T> as ReflectDrop>::REFLECT_DROP) as usize]; //~ ERROR constant expression depends on a generic parameter\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "3fbdf33b2d8812581baec6b54f87772ef1adb28e", "filename": "src/test/ui/consts/issue-50439.stderr", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f2d93935ffba3ab9d7ccb5300771a2d29b4c8bf3/src%2Ftest%2Fui%2Fconsts%2Fissue-50439.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f2d93935ffba3ab9d7ccb5300771a2d29b4c8bf3/src%2Ftest%2Fui%2Fconsts%2Fissue-50439.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fissue-50439.stderr?ref=f2d93935ffba3ab9d7ccb5300771a2d29b4c8bf3", "patch": "@@ -0,0 +1,10 @@\n+error: constant expression depends on a generic parameter\n+  --> $DIR/issue-50439.rs:25:22\n+   |\n+LL |         let _ = [(); 0 - !!(<Bears<T> as ReflectDrop>::REFLECT_DROP) as usize];\n+   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: this may fail depending on what value the parameter takes\n+\n+error: aborting due to previous error\n+"}, {"sha": "f76ebd6feb9f59be993336f84ecfdc441ad33d81", "filename": "src/tools/miri", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri?ref=f2d93935ffba3ab9d7ccb5300771a2d29b4c8bf3", "patch": "@@ -1 +1 @@\n-Subproject commit ff62c3ac98eb85816190afa1c1ec5d0ad2e44235\n+Subproject commit f76ebd6feb9f59be993336f84ecfdc441ad33d81"}]}