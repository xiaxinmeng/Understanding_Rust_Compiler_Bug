{"sha": "c6e8af446fa7fcd6b2362489293f2e6c5b98ffc3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM2ZThhZjQ0NmZhN2ZjZDZiMjM2MjQ4OTI5M2YyZTZjNWI5OGZmYzM=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-02-01T08:27:37Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-02-02T05:22:49Z"}, "message": "rustdoc: Remove definitions of spawn_listener and spawn_conversation", "tree": {"sha": "6655fd4f398765fe03bd3690a1e00203080db5f4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6655fd4f398765fe03bd3690a1e00203080db5f4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c6e8af446fa7fcd6b2362489293f2e6c5b98ffc3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c6e8af446fa7fcd6b2362489293f2e6c5b98ffc3", "html_url": "https://github.com/rust-lang/rust/commit/c6e8af446fa7fcd6b2362489293f2e6c5b98ffc3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c6e8af446fa7fcd6b2362489293f2e6c5b98ffc3/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "89c8ef792f7e7641abfac421ba1e8f90384883ec", "url": "https://api.github.com/repos/rust-lang/rust/commits/89c8ef792f7e7641abfac421ba1e8f90384883ec", "html_url": "https://github.com/rust-lang/rust/commit/89c8ef792f7e7641abfac421ba1e8f90384883ec"}], "stats": {"total": 24, "additions": 0, "deletions": 24}, "files": [{"sha": "37f373504e624645ca661f1f97dd692710dd694f", "filename": "src/librustdoc/util.rs", "status": "modified", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/c6e8af446fa7fcd6b2362489293f2e6c5b98ffc3/src%2Flibrustdoc%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c6e8af446fa7fcd6b2362489293f2e6c5b98ffc3/src%2Flibrustdoc%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Futil.rs?ref=c6e8af446fa7fcd6b2362489293f2e6c5b98ffc3", "patch": "@@ -21,27 +21,3 @@ pub struct NominalOp<T> {\n impl<T: Copy> NominalOp<T>: Clone {\n     fn clone(&self) -> NominalOp<T> { copy *self }\n }\n-\n-pub fn spawn_listener<A: Owned>(\n-    f: fn~(oldcomm::Port<A>)) -> oldcomm::Chan<A> {\n-    let setup_po = oldcomm::Port();\n-    let setup_ch = oldcomm::Chan(&setup_po);\n-    do task::spawn |move f| {\n-        let po = oldcomm::Port();\n-        let ch = oldcomm::Chan(&po);\n-        oldcomm::send(setup_ch, ch);\n-        f(move po);\n-    }\n-    oldcomm::recv(setup_po)\n-}\n-\n-pub fn spawn_conversation<A: Owned, B: Owned>\n-    (f: fn~(oldcomm::Port<A>, oldcomm::Chan<B>))\n-    -> (oldcomm::Port<B>, oldcomm::Chan<A>) {\n-    let from_child = oldcomm::Port();\n-    let to_parent = oldcomm::Chan(&from_child);\n-    let to_child = do spawn_listener |move f, from_parent| {\n-        f(from_parent, to_parent)\n-    };\n-    (from_child, to_child)\n-}"}]}