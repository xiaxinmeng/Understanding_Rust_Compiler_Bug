{"sha": "55c4164fffb8c4389727cff554dd77012c624087", "node_id": "C_kwDOAAsO6NoAKDU1YzQxNjRmZmZiOGM0Mzg5NzI3Y2ZmNTU0ZGQ3NzAxMmM2MjQwODc", "commit": {"author": {"name": "Arvind Mukund", "email": "armu30@gmail.com", "date": "2022-12-20T03:06:30Z"}, "committer": {"name": "Arvind Mukund", "email": "armu30@gmail.com", "date": "2022-12-20T03:13:17Z"}, "message": "Correct ModFlagBehavior for Aarch64 on LLVM-15\n\nWhen building with Fat LTO and BTI enabled on aarch64, the BTI is set to\n`Module::Min` for alloc shim but is set to `Module::Error` for the\ncrate. This was fine when we were using LLVM-14 but LLVM-15 changes it's\nbehaviour to support for compiling with different `mbranch-protection`\nflags.\n\nRefer:\nhttps://github.com/rust-lang/llvm-project/commit/b0343a38a5910e980bb031e4014655d77cd0c162", "tree": {"sha": "0b89d2b232dad1d89031a674b6f0d9d671434399", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0b89d2b232dad1d89031a674b6f0d9d671434399"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/55c4164fffb8c4389727cff554dd77012c624087", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/55c4164fffb8c4389727cff554dd77012c624087", "html_url": "https://github.com/rust-lang/rust/commit/55c4164fffb8c4389727cff554dd77012c624087", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/55c4164fffb8c4389727cff554dd77012c624087/comments", "author": {"login": "MasterAwesome", "id": 7382032, "node_id": "MDQ6VXNlcjczODIwMzI=", "avatar_url": "https://avatars.githubusercontent.com/u/7382032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MasterAwesome", "html_url": "https://github.com/MasterAwesome", "followers_url": "https://api.github.com/users/MasterAwesome/followers", "following_url": "https://api.github.com/users/MasterAwesome/following{/other_user}", "gists_url": "https://api.github.com/users/MasterAwesome/gists{/gist_id}", "starred_url": "https://api.github.com/users/MasterAwesome/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MasterAwesome/subscriptions", "organizations_url": "https://api.github.com/users/MasterAwesome/orgs", "repos_url": "https://api.github.com/users/MasterAwesome/repos", "events_url": "https://api.github.com/users/MasterAwesome/events{/privacy}", "received_events_url": "https://api.github.com/users/MasterAwesome/received_events", "type": "User", "site_admin": false}, "committer": {"login": "MasterAwesome", "id": 7382032, "node_id": "MDQ6VXNlcjczODIwMzI=", "avatar_url": "https://avatars.githubusercontent.com/u/7382032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MasterAwesome", "html_url": "https://github.com/MasterAwesome", "followers_url": "https://api.github.com/users/MasterAwesome/followers", "following_url": "https://api.github.com/users/MasterAwesome/following{/other_user}", "gists_url": "https://api.github.com/users/MasterAwesome/gists{/gist_id}", "starred_url": "https://api.github.com/users/MasterAwesome/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MasterAwesome/subscriptions", "organizations_url": "https://api.github.com/users/MasterAwesome/orgs", "repos_url": "https://api.github.com/users/MasterAwesome/repos", "events_url": "https://api.github.com/users/MasterAwesome/events{/privacy}", "received_events_url": "https://api.github.com/users/MasterAwesome/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "696563efc5c3c0d87a601dff22966d2c5eb20a5e", "url": "https://api.github.com/repos/rust-lang/rust/commits/696563efc5c3c0d87a601dff22966d2c5eb20a5e", "html_url": "https://github.com/rust-lang/rust/commit/696563efc5c3c0d87a601dff22966d2c5eb20a5e"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "9c7d3dabd6fb50c76f6d66e2ed7a02eafa68de51", "filename": "compiler/rustc_codegen_llvm/src/context.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/55c4164fffb8c4389727cff554dd77012c624087/compiler%2Frustc_codegen_llvm%2Fsrc%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55c4164fffb8c4389727cff554dd77012c624087/compiler%2Frustc_codegen_llvm%2Fsrc%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fcontext.rs?ref=55c4164fffb8c4389727cff554dd77012c624087", "patch": "@@ -283,26 +283,26 @@ pub unsafe fn create_module<'ll>(\n         if sess.target.arch == \"aarch64\" {\n             llvm::LLVMRustAddModuleFlag(\n                 llmod,\n-                llvm::LLVMModFlagBehavior::Error,\n+                llvm::LLVMModFlagBehavior::Min,\n                 \"branch-target-enforcement\\0\".as_ptr().cast(),\n                 bti.into(),\n             );\n             llvm::LLVMRustAddModuleFlag(\n                 llmod,\n-                llvm::LLVMModFlagBehavior::Error,\n+                llvm::LLVMModFlagBehavior::Min,\n                 \"sign-return-address\\0\".as_ptr().cast(),\n                 pac_ret.is_some().into(),\n             );\n             let pac_opts = pac_ret.unwrap_or(PacRet { leaf: false, key: PAuthKey::A });\n             llvm::LLVMRustAddModuleFlag(\n                 llmod,\n-                llvm::LLVMModFlagBehavior::Error,\n+                llvm::LLVMModFlagBehavior::Min,\n                 \"sign-return-address-all\\0\".as_ptr().cast(),\n                 pac_opts.leaf.into(),\n             );\n             llvm::LLVMRustAddModuleFlag(\n                 llmod,\n-                llvm::LLVMModFlagBehavior::Error,\n+                llvm::LLVMModFlagBehavior::Min,\n                 \"sign-return-address-with-bkey\\0\".as_ptr().cast(),\n                 u32::from(pac_opts.key == PAuthKey::B),\n             );"}, {"sha": "6c78966a98d81d9f6e73c55f5a0d223bb8c6d47b", "filename": "compiler/rustc_codegen_llvm/src/llvm/ffi.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/55c4164fffb8c4389727cff554dd77012c624087/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm%2Fffi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55c4164fffb8c4389727cff554dd77012c624087/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm%2Fffi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm%2Fffi.rs?ref=55c4164fffb8c4389727cff554dd77012c624087", "patch": "@@ -79,6 +79,7 @@ pub enum LLVMModFlagBehavior {\n     Append = 5,\n     AppendUnique = 6,\n     Max = 7,\n+    Min = 8,\n }\n \n // Consts for the LLVM CallConv type, pre-cast to usize."}]}