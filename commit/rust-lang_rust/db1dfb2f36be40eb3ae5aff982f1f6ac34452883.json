{"sha": "db1dfb2f36be40eb3ae5aff982f1f6ac34452883", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRiMWRmYjJmMzZiZTQwZWIzYWU1YWZmOTgyZjFmNmFjMzQ0NTI4ODM=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2019-06-04T16:27:56Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2019-06-11T23:07:32Z"}, "message": "rename `evaluate_obligation_recursively`\n\nIt does not, in fact, execute in a recursive context.", "tree": {"sha": "c1c0eeeb1c92fab59400c90a8227080b69422edb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c1c0eeeb1c92fab59400c90a8227080b69422edb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/db1dfb2f36be40eb3ae5aff982f1f6ac34452883", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/db1dfb2f36be40eb3ae5aff982f1f6ac34452883", "html_url": "https://github.com/rust-lang/rust/commit/db1dfb2f36be40eb3ae5aff982f1f6ac34452883", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/db1dfb2f36be40eb3ae5aff982f1f6ac34452883/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8e948df707ea8a3c88c65bf2ffdcb2f1cf5491be", "url": "https://api.github.com/repos/rust-lang/rust/commits/8e948df707ea8a3c88c65bf2ffdcb2f1cf5491be", "html_url": "https://github.com/rust-lang/rust/commit/8e948df707ea8a3c88c65bf2ffdcb2f1cf5491be"}], "stats": {"total": 13, "additions": 7, "deletions": 6}, "files": [{"sha": "5f1af668a9e48b5818f62b40fbcfa4e4dcf69912", "filename": "src/librustc/traits/query/evaluate_obligation.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/db1dfb2f36be40eb3ae5aff982f1f6ac34452883/src%2Flibrustc%2Ftraits%2Fquery%2Fevaluate_obligation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db1dfb2f36be40eb3ae5aff982f1f6ac34452883/src%2Flibrustc%2Ftraits%2Fquery%2Fevaluate_obligation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fquery%2Fevaluate_obligation.rs?ref=db1dfb2f36be40eb3ae5aff982f1f6ac34452883", "patch": "@@ -64,7 +64,7 @@ impl<'cx, 'gcx, 'tcx> InferCtxt<'cx, 'gcx, 'tcx> {\n             Err(OverflowError) => {\n                 let mut selcx =\n                     SelectionContext::with_query_mode(&self, TraitQueryMode::Standard);\n-                selcx.evaluate_obligation_recursively(obligation)\n+                selcx.evaluate_root_obligation(obligation)\n                     .unwrap_or_else(|r| {\n                         span_bug!(\n                             obligation.cause.span,"}, {"sha": "503e0db548e4a2a43d7b4d166a248548fd2af9b5", "filename": "src/librustc/traits/select.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/db1dfb2f36be40eb3ae5aff982f1f6ac34452883/src%2Flibrustc%2Ftraits%2Fselect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db1dfb2f36be40eb3ae5aff982f1f6ac34452883/src%2Flibrustc%2Ftraits%2Fselect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fselect.rs?ref=db1dfb2f36be40eb3ae5aff982f1f6ac34452883", "patch": "@@ -649,14 +649,15 @@ impl<'cx, 'gcx, 'tcx> SelectionContext<'cx, 'gcx, 'tcx> {\n         // where we do not expect overflow to be propagated.\n         assert!(self.query_mode == TraitQueryMode::Standard);\n \n-        self.evaluate_obligation_recursively(obligation)\n+        self.evaluate_root_obligation(obligation)\n             .expect(\"Overflow should be caught earlier in standard query mode\")\n             .may_apply()\n     }\n \n-    /// Evaluates whether the obligation `obligation` can be satisfied and returns\n-    /// an `EvaluationResult`.\n-    pub fn evaluate_obligation_recursively(\n+    /// Evaluates whether the obligation `obligation` can be satisfied\n+    /// and returns an `EvaluationResult`. This is meant for the\n+    /// *initial* call.\n+    pub fn evaluate_root_obligation(\n         &mut self,\n         obligation: &PredicateObligation<'tcx>,\n     ) -> Result<EvaluationResult, OverflowError> {"}, {"sha": "59b743abaf14b05ec29dd51284598e4418601e1b", "filename": "src/librustc_traits/evaluate_obligation.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/db1dfb2f36be40eb3ae5aff982f1f6ac34452883/src%2Flibrustc_traits%2Fevaluate_obligation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db1dfb2f36be40eb3ae5aff982f1f6ac34452883/src%2Flibrustc_traits%2Fevaluate_obligation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_traits%2Fevaluate_obligation.rs?ref=db1dfb2f36be40eb3ae5aff982f1f6ac34452883", "patch": "@@ -29,7 +29,7 @@ fn evaluate_obligation<'tcx>(\n             let mut selcx = SelectionContext::with_query_mode(&infcx, TraitQueryMode::Canonical);\n             let obligation = Obligation::new(ObligationCause::dummy(), param_env, predicate);\n \n-            selcx.evaluate_obligation_recursively(&obligation)\n+            selcx.evaluate_root_obligation(&obligation)\n         },\n     )\n }"}]}