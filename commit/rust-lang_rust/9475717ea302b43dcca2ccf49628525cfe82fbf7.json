{"sha": "9475717ea302b43dcca2ccf49628525cfe82fbf7", "node_id": "C_kwDOAAsO6NoAKDk0NzU3MTdlYTMwMmI0M2RjY2EyY2NmNDk2Mjg1MjVjZmU4MmZiZjc", "commit": {"author": {"name": "est31", "email": "MTest31@outlook.com", "date": "2023-03-04T05:20:03Z"}, "committer": {"name": "est31", "email": "MTest31@outlook.com", "date": "2023-03-11T19:42:53Z"}, "message": "Add a fixme and address a more non trivial case\n\nCo-authored-by: nils <48135649+Nilstrieb@users.noreply.github.com>", "tree": {"sha": "a14f310109df0977d0e339c3ad0e187bb000c967", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a14f310109df0977d0e339c3ad0e187bb000c967"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9475717ea302b43dcca2ccf49628525cfe82fbf7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9475717ea302b43dcca2ccf49628525cfe82fbf7", "html_url": "https://github.com/rust-lang/rust/commit/9475717ea302b43dcca2ccf49628525cfe82fbf7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9475717ea302b43dcca2ccf49628525cfe82fbf7/comments", "author": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "committer": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7f4cc178f07fca98aee1b58bb4f82b2f45f8afac", "url": "https://api.github.com/repos/rust-lang/rust/commits/7f4cc178f07fca98aee1b58bb4f82b2f45f8afac", "html_url": "https://github.com/rust-lang/rust/commit/7f4cc178f07fca98aee1b58bb4f82b2f45f8afac"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "773ac0e40c571c433d9c4fbb32c05593735c48c6", "filename": "compiler/rustc_hir_typeck/src/closure.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9475717ea302b43dcca2ccf49628525cfe82fbf7/compiler%2Frustc_hir_typeck%2Fsrc%2Fclosure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9475717ea302b43dcca2ccf49628525cfe82fbf7/compiler%2Frustc_hir_typeck%2Fsrc%2Fclosure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Fclosure.rs?ref=9475717ea302b43dcca2ccf49628525cfe82fbf7", "patch": "@@ -398,7 +398,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n     ///\n     /// Here:\n     /// - E would be `fn(&u32) -> &u32`.\n-    /// - S would be `fn(&u32) ->\n+    /// - S would be `fn(&u32) -> ?T`\n     /// - E' is `&'!0 u32 -> &'!0 u32`\n     /// - S' is `&'?0 u32 -> ?T`\n     ///"}, {"sha": "626b44d08e7e6c63129df0271145a3ebaad6dc79", "filename": "compiler/rustc_trait_selection/src/solve/assembly.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9475717ea302b43dcca2ccf49628525cfe82fbf7/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Fassembly.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9475717ea302b43dcca2ccf49628525cfe82fbf7/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Fassembly.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Fassembly.rs?ref=9475717ea302b43dcca2ccf49628525cfe82fbf7", "patch": "@@ -247,7 +247,8 @@ impl<'tcx> EvalCtxt<'_, 'tcx> {\n     ///\n     /// To deal with this, we first try to normalize the self type and add the candidates for the normalized\n     /// self type to the list of candidates in case that succeeds. Note that we can't just eagerly return in\n-    /// this case as projections as self types add `\n+    /// this case as projections as self types add\n+    // FIXME complete the unfinished sentence above\n     fn assemble_candidates_after_normalizing_self_ty<G: GoalKind<'tcx>>(\n         &mut self,\n         goal: Goal<'tcx, G>,"}]}