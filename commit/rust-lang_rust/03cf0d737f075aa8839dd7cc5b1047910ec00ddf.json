{"sha": "03cf0d737f075aa8839dd7cc5b1047910ec00ddf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAzY2YwZDczN2YwNzVhYTg4MzlkZDdjYzViMTA0NzkxMGVjMDBkZGY=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-11-07T19:12:34Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-11-14T13:00:16Z"}, "message": "TAIT: adjust tests", "tree": {"sha": "b6abd96cb12c9491ded84aec030c4931cfea186a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b6abd96cb12c9491ded84aec030c4931cfea186a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/03cf0d737f075aa8839dd7cc5b1047910ec00ddf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/03cf0d737f075aa8839dd7cc5b1047910ec00ddf", "html_url": "https://github.com/rust-lang/rust/commit/03cf0d737f075aa8839dd7cc5b1047910ec00ddf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/03cf0d737f075aa8839dd7cc5b1047910ec00ddf/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8b663ec16fa94e4a1dea618e235c827059136dc4", "url": "https://api.github.com/repos/rust-lang/rust/commits/8b663ec16fa94e4a1dea618e235c827059136dc4", "html_url": "https://github.com/rust-lang/rust/commit/8b663ec16fa94e4a1dea618e235c827059136dc4"}], "stats": {"total": 231, "additions": 202, "deletions": 29}, "files": [{"sha": "6088331cded776d28ec2c8786dc8d85494df4ee3", "filename": "src/test/ui/feature-gates/feature-gate-type_alias_impl_trait.rs", "status": "modified", "additions": 33, "deletions": 3, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/03cf0d737f075aa8839dd7cc5b1047910ec00ddf/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-type_alias_impl_trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03cf0d737f075aa8839dd7cc5b1047910ec00ddf/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-type_alias_impl_trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-type_alias_impl_trait.rs?ref=03cf0d737f075aa8839dd7cc5b1047910ec00ddf", "patch": "@@ -1,15 +1,45 @@\n-type Foo = impl std::fmt::Debug; //~ ERROR `impl Trait` in type aliases is unstable\n+use std::fmt::Debug;\n+\n+type Foo = impl Debug; //~ ERROR `impl Trait` in type aliases is unstable\n \n trait Bar {\n-    type Baa: std::fmt::Debug;\n+    type Baa: Debug;\n     fn define() -> Self::Baa;\n }\n \n impl Bar for () {\n-    type Baa = impl std::fmt::Debug; //~ ERROR `impl Trait` in type aliases is unstable\n+    type Baa = impl Debug; //~ ERROR `impl Trait` in type aliases is unstable\n     fn define() -> Self::Baa { 0 }\n }\n \n fn define() -> Foo { 0 }\n \n+trait TraitWithDefault {\n+    type Assoc = impl Debug;\n+    //~^ ERROR associated type defaults are unstable\n+    //~| ERROR `impl Trait` not allowed outside of function\n+    //~| ERROR `impl Trait` in type aliases is unstable\n+}\n+\n+type NestedFree = (Vec<impl Debug>, impl Debug, impl Iterator<Item = impl Debug>);\n+//~^ ERROR `impl Trait` in type aliases is unstable\n+//~| ERROR `impl Trait` in type aliases is unstable\n+//~| ERROR `impl Trait` in type aliases is unstable\n+//~| ERROR `impl Trait` in type aliases is unstable\n+//~| ERROR `impl Trait` not allowed outside of function\n+//~| ERROR `impl Trait` not allowed outside of function\n+//~| ERROR `impl Trait` not allowed outside of function\n+\n+impl Bar for u8 {\n+    type Baa = (Vec<impl Debug>, impl Debug, impl Iterator<Item = impl Debug>);\n+    //~^ ERROR `impl Trait` in type aliases is unstable\n+    //~| ERROR `impl Trait` in type aliases is unstable\n+    //~| ERROR `impl Trait` in type aliases is unstable\n+    //~| ERROR `impl Trait` in type aliases is unstable\n+    //~| ERROR `impl Trait` not allowed outside of function\n+    //~| ERROR `impl Trait` not allowed outside of function\n+    //~| ERROR `impl Trait` not allowed outside of function\n+    fn define() -> Self::Baa { (vec![true], 0u8, 0i32..1) }\n+}\n+\n fn main() {}"}, {"sha": "d9ebcdecb9bfd2947c2abeec631b8cb45e87694d", "filename": "src/test/ui/feature-gates/feature-gate-type_alias_impl_trait.stderr", "status": "modified", "additions": 141, "deletions": 8, "changes": 149, "blob_url": "https://github.com/rust-lang/rust/blob/03cf0d737f075aa8839dd7cc5b1047910ec00ddf/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-type_alias_impl_trait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/03cf0d737f075aa8839dd7cc5b1047910ec00ddf/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-type_alias_impl_trait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-type_alias_impl_trait.stderr?ref=03cf0d737f075aa8839dd7cc5b1047910ec00ddf", "patch": "@@ -1,21 +1,154 @@\n error[E0658]: `impl Trait` in type aliases is unstable\n-  --> $DIR/feature-gate-type_alias_impl_trait.rs:1:1\n+  --> $DIR/feature-gate-type_alias_impl_trait.rs:3:12\n    |\n-LL | type Foo = impl std::fmt::Debug;\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL | type Foo = impl Debug;\n+   |            ^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/63063\n    = help: add `#![feature(type_alias_impl_trait)]` to the crate attributes to enable\n \n error[E0658]: `impl Trait` in type aliases is unstable\n-  --> $DIR/feature-gate-type_alias_impl_trait.rs:9:5\n+  --> $DIR/feature-gate-type_alias_impl_trait.rs:11:16\n    |\n-LL |     type Baa = impl std::fmt::Debug;\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL |     type Baa = impl Debug;\n+   |                ^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/63063\n    = help: add `#![feature(type_alias_impl_trait)]` to the crate attributes to enable\n \n-error: aborting due to 2 previous errors\n+error[E0658]: `impl Trait` in type aliases is unstable\n+  --> $DIR/feature-gate-type_alias_impl_trait.rs:18:18\n+   |\n+LL |     type Assoc = impl Debug;\n+   |                  ^^^^^^^^^^\n+   |\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/63063\n+   = help: add `#![feature(type_alias_impl_trait)]` to the crate attributes to enable\n+\n+error[E0658]: associated type defaults are unstable\n+  --> $DIR/feature-gate-type_alias_impl_trait.rs:18:5\n+   |\n+LL |     type Assoc = impl Debug;\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29661\n+   = help: add `#![feature(associated_type_defaults)]` to the crate attributes to enable\n+\n+error[E0658]: `impl Trait` in type aliases is unstable\n+  --> $DIR/feature-gate-type_alias_impl_trait.rs:24:24\n+   |\n+LL | type NestedFree = (Vec<impl Debug>, impl Debug, impl Iterator<Item = impl Debug>);\n+   |                        ^^^^^^^^^^\n+   |\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/63063\n+   = help: add `#![feature(type_alias_impl_trait)]` to the crate attributes to enable\n+\n+error[E0658]: `impl Trait` in type aliases is unstable\n+  --> $DIR/feature-gate-type_alias_impl_trait.rs:24:37\n+   |\n+LL | type NestedFree = (Vec<impl Debug>, impl Debug, impl Iterator<Item = impl Debug>);\n+   |                                     ^^^^^^^^^^\n+   |\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/63063\n+   = help: add `#![feature(type_alias_impl_trait)]` to the crate attributes to enable\n+\n+error[E0658]: `impl Trait` in type aliases is unstable\n+  --> $DIR/feature-gate-type_alias_impl_trait.rs:24:49\n+   |\n+LL | type NestedFree = (Vec<impl Debug>, impl Debug, impl Iterator<Item = impl Debug>);\n+   |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/63063\n+   = help: add `#![feature(type_alias_impl_trait)]` to the crate attributes to enable\n+\n+error[E0658]: `impl Trait` in type aliases is unstable\n+  --> $DIR/feature-gate-type_alias_impl_trait.rs:24:70\n+   |\n+LL | type NestedFree = (Vec<impl Debug>, impl Debug, impl Iterator<Item = impl Debug>);\n+   |                                                                      ^^^^^^^^^^\n+   |\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/63063\n+   = help: add `#![feature(type_alias_impl_trait)]` to the crate attributes to enable\n+\n+error[E0658]: `impl Trait` in type aliases is unstable\n+  --> $DIR/feature-gate-type_alias_impl_trait.rs:34:21\n+   |\n+LL |     type Baa = (Vec<impl Debug>, impl Debug, impl Iterator<Item = impl Debug>);\n+   |                     ^^^^^^^^^^\n+   |\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/63063\n+   = help: add `#![feature(type_alias_impl_trait)]` to the crate attributes to enable\n+\n+error[E0658]: `impl Trait` in type aliases is unstable\n+  --> $DIR/feature-gate-type_alias_impl_trait.rs:34:34\n+   |\n+LL |     type Baa = (Vec<impl Debug>, impl Debug, impl Iterator<Item = impl Debug>);\n+   |                                  ^^^^^^^^^^\n+   |\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/63063\n+   = help: add `#![feature(type_alias_impl_trait)]` to the crate attributes to enable\n+\n+error[E0658]: `impl Trait` in type aliases is unstable\n+  --> $DIR/feature-gate-type_alias_impl_trait.rs:34:46\n+   |\n+LL |     type Baa = (Vec<impl Debug>, impl Debug, impl Iterator<Item = impl Debug>);\n+   |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/63063\n+   = help: add `#![feature(type_alias_impl_trait)]` to the crate attributes to enable\n+\n+error[E0658]: `impl Trait` in type aliases is unstable\n+  --> $DIR/feature-gate-type_alias_impl_trait.rs:34:67\n+   |\n+LL |     type Baa = (Vec<impl Debug>, impl Debug, impl Iterator<Item = impl Debug>);\n+   |                                                                   ^^^^^^^^^^\n+   |\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/63063\n+   = help: add `#![feature(type_alias_impl_trait)]` to the crate attributes to enable\n+\n+error[E0562]: `impl Trait` not allowed outside of function and inherent method return types\n+  --> $DIR/feature-gate-type_alias_impl_trait.rs:18:18\n+   |\n+LL |     type Assoc = impl Debug;\n+   |                  ^^^^^^^^^^\n+\n+error[E0562]: `impl Trait` not allowed outside of function and inherent method return types\n+  --> $DIR/feature-gate-type_alias_impl_trait.rs:24:24\n+   |\n+LL | type NestedFree = (Vec<impl Debug>, impl Debug, impl Iterator<Item = impl Debug>);\n+   |                        ^^^^^^^^^^\n+\n+error[E0562]: `impl Trait` not allowed outside of function and inherent method return types\n+  --> $DIR/feature-gate-type_alias_impl_trait.rs:24:37\n+   |\n+LL | type NestedFree = (Vec<impl Debug>, impl Debug, impl Iterator<Item = impl Debug>);\n+   |                                     ^^^^^^^^^^\n+\n+error[E0562]: `impl Trait` not allowed outside of function and inherent method return types\n+  --> $DIR/feature-gate-type_alias_impl_trait.rs:24:49\n+   |\n+LL | type NestedFree = (Vec<impl Debug>, impl Debug, impl Iterator<Item = impl Debug>);\n+   |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error[E0562]: `impl Trait` not allowed outside of function and inherent method return types\n+  --> $DIR/feature-gate-type_alias_impl_trait.rs:34:21\n+   |\n+LL |     type Baa = (Vec<impl Debug>, impl Debug, impl Iterator<Item = impl Debug>);\n+   |                     ^^^^^^^^^^\n+\n+error[E0562]: `impl Trait` not allowed outside of function and inherent method return types\n+  --> $DIR/feature-gate-type_alias_impl_trait.rs:34:34\n+   |\n+LL |     type Baa = (Vec<impl Debug>, impl Debug, impl Iterator<Item = impl Debug>);\n+   |                                  ^^^^^^^^^^\n+\n+error[E0562]: `impl Trait` not allowed outside of function and inherent method return types\n+  --> $DIR/feature-gate-type_alias_impl_trait.rs:34:46\n+   |\n+LL |     type Baa = (Vec<impl Debug>, impl Debug, impl Iterator<Item = impl Debug>);\n+   |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to 19 previous errors\n \n-For more information about this error, try `rustc --explain E0658`.\n+Some errors have detailed explanations: E0562, E0658.\n+For more information about an error, try `rustc --explain E0562`."}, {"sha": "5ab74e02e0e4045dfc779474e4f12996bbb8210d", "filename": "src/test/ui/impl-trait/where-allowed.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/03cf0d737f075aa8839dd7cc5b1047910ec00ddf/src%2Ftest%2Fui%2Fimpl-trait%2Fwhere-allowed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03cf0d737f075aa8839dd7cc5b1047910ec00ddf/src%2Ftest%2Fui%2Fimpl-trait%2Fwhere-allowed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fwhere-allowed.rs?ref=03cf0d737f075aa8839dd7cc5b1047910ec00ddf", "patch": "@@ -163,6 +163,7 @@ type InTypeAlias<R> = impl Debug;\n \n type InReturnInTypeAlias<R> = fn() -> impl Debug;\n //~^ ERROR `impl Trait` not allowed outside of function and inherent method return types\n+//~| ERROR `impl Trait` in type aliases is unstable\n \n // Disallowed in impl headers\n impl PartialEq<impl Debug> for () {"}, {"sha": "fcd4c357afdbe38de804b6524674c7b4a8b6ddf4", "filename": "src/test/ui/impl-trait/where-allowed.stderr", "status": "modified", "additions": 25, "deletions": 16, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/03cf0d737f075aa8839dd7cc5b1047910ec00ddf/src%2Ftest%2Fui%2Fimpl-trait%2Fwhere-allowed.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/03cf0d737f075aa8839dd7cc5b1047910ec00ddf/src%2Ftest%2Fui%2Fimpl-trait%2Fwhere-allowed.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fwhere-allowed.stderr?ref=03cf0d737f075aa8839dd7cc5b1047910ec00ddf", "patch": "@@ -17,19 +17,28 @@ LL | fn in_impl_Fn_parameter_in_return() -> &'static impl Fn(impl Debug) { panic\n    |                                                 outer `impl Trait`\n \n error[E0658]: `impl Trait` in type aliases is unstable\n-  --> $DIR/where-allowed.rs:124:5\n+  --> $DIR/where-allowed.rs:124:16\n    |\n LL |     type Out = impl Debug;\n-   |     ^^^^^^^^^^^^^^^^^^^^^^\n+   |                ^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/63063\n    = help: add `#![feature(type_alias_impl_trait)]` to the crate attributes to enable\n \n error[E0658]: `impl Trait` in type aliases is unstable\n-  --> $DIR/where-allowed.rs:160:1\n+  --> $DIR/where-allowed.rs:160:23\n    |\n LL | type InTypeAlias<R> = impl Debug;\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |                       ^^^^^^^^^^\n+   |\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/63063\n+   = help: add `#![feature(type_alias_impl_trait)]` to the crate attributes to enable\n+\n+error[E0658]: `impl Trait` in type aliases is unstable\n+  --> $DIR/where-allowed.rs:164:39\n+   |\n+LL | type InReturnInTypeAlias<R> = fn() -> impl Debug;\n+   |                                       ^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/63063\n    = help: add `#![feature(type_alias_impl_trait)]` to the crate attributes to enable\n@@ -179,69 +188,69 @@ LL | type InReturnInTypeAlias<R> = fn() -> impl Debug;\n    |                                       ^^^^^^^^^^\n \n error[E0562]: `impl Trait` not allowed outside of function and inherent method return types\n-  --> $DIR/where-allowed.rs:168:16\n+  --> $DIR/where-allowed.rs:169:16\n    |\n LL | impl PartialEq<impl Debug> for () {\n    |                ^^^^^^^^^^\n \n error[E0562]: `impl Trait` not allowed outside of function and inherent method return types\n-  --> $DIR/where-allowed.rs:173:24\n+  --> $DIR/where-allowed.rs:174:24\n    |\n LL | impl PartialEq<()> for impl Debug {\n    |                        ^^^^^^^^^^\n \n error[E0562]: `impl Trait` not allowed outside of function and inherent method return types\n-  --> $DIR/where-allowed.rs:178:6\n+  --> $DIR/where-allowed.rs:179:6\n    |\n LL | impl impl Debug {\n    |      ^^^^^^^^^^\n \n error[E0562]: `impl Trait` not allowed outside of function and inherent method return types\n-  --> $DIR/where-allowed.rs:184:24\n+  --> $DIR/where-allowed.rs:185:24\n    |\n LL | impl InInherentImplAdt<impl Debug> {\n    |                        ^^^^^^^^^^\n \n error[E0562]: `impl Trait` not allowed outside of function and inherent method return types\n-  --> $DIR/where-allowed.rs:190:11\n+  --> $DIR/where-allowed.rs:191:11\n    |\n LL |     where impl Debug: Debug\n    |           ^^^^^^^^^^\n \n error[E0562]: `impl Trait` not allowed outside of function and inherent method return types\n-  --> $DIR/where-allowed.rs:197:15\n+  --> $DIR/where-allowed.rs:198:15\n    |\n LL |     where Vec<impl Debug>: Debug\n    |               ^^^^^^^^^^\n \n error[E0562]: `impl Trait` not allowed outside of function and inherent method return types\n-  --> $DIR/where-allowed.rs:204:24\n+  --> $DIR/where-allowed.rs:205:24\n    |\n LL |     where T: PartialEq<impl Debug>\n    |                        ^^^^^^^^^^\n \n error[E0562]: `impl Trait` not allowed outside of function and inherent method return types\n-  --> $DIR/where-allowed.rs:211:17\n+  --> $DIR/where-allowed.rs:212:17\n    |\n LL |     where T: Fn(impl Debug)\n    |                 ^^^^^^^^^^\n \n error[E0562]: `impl Trait` not allowed outside of function and inherent method return types\n-  --> $DIR/where-allowed.rs:218:22\n+  --> $DIR/where-allowed.rs:219:22\n    |\n LL |     where T: Fn() -> impl Debug\n    |                      ^^^^^^^^^^\n \n error[E0562]: `impl Trait` not allowed outside of function and inherent method return types\n-  --> $DIR/where-allowed.rs:224:29\n+  --> $DIR/where-allowed.rs:225:29\n    |\n LL |     let _in_local_variable: impl Fn() = || {};\n    |                             ^^^^^^^^^\n    |\n    = help: add `#![feature(impl_trait_in_bindings)]` to the crate attributes to enable\n \n error[E0562]: `impl Trait` not allowed outside of function and inherent method return types\n-  --> $DIR/where-allowed.rs:226:46\n+  --> $DIR/where-allowed.rs:227:46\n    |\n LL |     let _in_return_in_local_variable = || -> impl Fn() { || {} };\n    |                                              ^^^^^^^^^\n@@ -270,7 +279,7 @@ error: could not find defining uses\n LL |     type Out = impl Debug;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to 43 previous errors\n+error: aborting due to 44 previous errors\n \n Some errors have detailed explanations: E0282, E0562, E0658, E0666.\n For more information about an error, try `rustc --explain E0282`."}, {"sha": "cb35706a51e09712fc2462d32578209da216da8e", "filename": "src/test/ui/type-alias-impl-trait/issue-60371.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/03cf0d737f075aa8839dd7cc5b1047910ec00ddf/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-60371.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/03cf0d737f075aa8839dd7cc5b1047910ec00ddf/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-60371.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-60371.stderr?ref=03cf0d737f075aa8839dd7cc5b1047910ec00ddf", "patch": "@@ -1,8 +1,8 @@\n error[E0658]: `impl Trait` in type aliases is unstable\n-  --> $DIR/issue-60371.rs:8:5\n+  --> $DIR/issue-60371.rs:8:17\n    |\n LL |     type Item = impl Bug;\n-   |     ^^^^^^^^^^^^^^^^^^^^^\n+   |                 ^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/63063\n    = help: add `#![feature(type_alias_impl_trait)]` to the crate attributes to enable"}]}