{"sha": "ef7c833c203e3de3785f8cbea3006da6237f730e", "node_id": "C_kwDOAAsO6NoAKGVmN2M4MzNjMjAzZTNkZTM3ODVmOGNiZWEzMDA2ZGE2MjM3ZjczMGU", "commit": {"author": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2021-11-29T03:53:32Z"}, "committer": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2021-12-06T08:58:40Z"}, "message": "Move the doc test to edition2021", "tree": {"sha": "142ee8aa637fec9959d5c98eddbc94d415e38717", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/142ee8aa637fec9959d5c98eddbc94d415e38717"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ef7c833c203e3de3785f8cbea3006da6237f730e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ef7c833c203e3de3785f8cbea3006da6237f730e", "html_url": "https://github.com/rust-lang/rust/commit/ef7c833c203e3de3785f8cbea3006da6237f730e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ef7c833c203e3de3785f8cbea3006da6237f730e/comments", "author": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a30f96311aa2c0c1614132b1d5dd07bcfa9267fe", "url": "https://api.github.com/repos/rust-lang/rust/commits/a30f96311aa2c0c1614132b1d5dd07bcfa9267fe", "html_url": "https://github.com/rust-lang/rust/commit/a30f96311aa2c0c1614132b1d5dd07bcfa9267fe"}], "stats": {"total": 11, "additions": 5, "deletions": 6}, "files": [{"sha": "9d4cb9284a5f40d0e561fed28d79ce6cb141374e", "filename": "library/core/src/array/iter.rs", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/ef7c833c203e3de3785f8cbea3006da6237f730e/library%2Fcore%2Fsrc%2Farray%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef7c833c203e3de3785f8cbea3006da6237f730e/library%2Fcore%2Fsrc%2Farray%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Farray%2Fiter.rs?ref=ef7c833c203e3de3785f8cbea3006da6237f730e", "patch": "@@ -173,28 +173,27 @@ impl<T, const N: usize> IntoIter<T, N> {\n     /// ```\n     ///\n     /// `[1, 2].into_iter()` and `[].into_iter()` have different types\n-    /// ```should_fail\n+    /// ```should_fail,edition2021\n     /// #![feature(array_into_iter_constructors)]\n     /// use std::array::IntoIter;\n     ///\n-    /// # // FIXME: use `.into_iter()` once the doc tests are in edition2021\n     /// pub fn get_bytes(b: bool) -> IntoIter<i8, 4> {\n     ///     if b {\n-    ///         IntoIter::new([1, 2, 3, 4])\n+    ///         [1, 2, 3, 4].into_iter()\n     ///     } else {\n-    ///         IntoIter::new([]) // error[E0308]: mismatched types\n+    ///         [].into_iter() // error[E0308]: mismatched types\n     ///     }\n     /// }\n     /// ```\n     ///\n     /// But using this method you can get an empty iterator of appropriate size:\n-    /// ```\n+    /// ```edition2021\n     /// #![feature(array_into_iter_constructors)]\n     /// use std::array::IntoIter;\n     ///\n     /// pub fn get_bytes(b: bool) -> IntoIter<i8, 4> {\n     ///     if b {\n-    ///         IntoIter::new([1, 2, 3, 4])\n+    ///         [1, 2, 3, 4].into_iter()\n     ///     } else {\n     ///         IntoIter::empty()\n     ///     }"}]}