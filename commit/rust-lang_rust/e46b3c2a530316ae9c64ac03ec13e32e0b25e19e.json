{"sha": "e46b3c2a530316ae9c64ac03ec13e32e0b25e19e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU0NmIzYzJhNTMwMzE2YWU5YzY0YWMwM2VjMTNlMzJlMGIyNWUxOWU=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-03-20T22:28:01Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-03-20T22:28:01Z"}, "message": "more type annotations to help inference", "tree": {"sha": "40d369a3dfc985bedce3db7fb1c08d8bfde7bdb3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/40d369a3dfc985bedce3db7fb1c08d8bfde7bdb3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e46b3c2a530316ae9c64ac03ec13e32e0b25e19e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e46b3c2a530316ae9c64ac03ec13e32e0b25e19e", "html_url": "https://github.com/rust-lang/rust/commit/e46b3c2a530316ae9c64ac03ec13e32e0b25e19e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e46b3c2a530316ae9c64ac03ec13e32e0b25e19e/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a39875b4dd90be99d870b9b341a516c313076313", "url": "https://api.github.com/repos/rust-lang/rust/commits/a39875b4dd90be99d870b9b341a516c313076313", "html_url": "https://github.com/rust-lang/rust/commit/a39875b4dd90be99d870b9b341a516c313076313"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "dfe5adb1bbff0ec7183631e5e4b0e207977de9cf", "filename": "src/librustc/mir/interpret/mod.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e46b3c2a530316ae9c64ac03ec13e32e0b25e19e/src%2Flibrustc%2Fmir%2Finterpret%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e46b3c2a530316ae9c64ac03ec13e32e0b25e19e/src%2Flibrustc%2Fmir%2Finterpret%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Finterpret%2Fmod.rs?ref=e46b3c2a530316ae9c64ac03ec13e32e0b25e19e", "patch": "@@ -49,7 +49,7 @@ macro_rules! err_exhaust {\n // In the `throw_*` macros, avoid `return` to make them work with `try {}`.\n #[macro_export]\n macro_rules! throw_unsup {\n-    ($($tt:tt)*) => { Err(err_unsup!($($tt)*))? };\n+    ($($tt:tt)*) => { Err::<!, _>(err_unsup!($($tt)*))? };\n }\n \n #[macro_export]\n@@ -59,12 +59,12 @@ macro_rules! throw_unsup_format {\n \n #[macro_export]\n macro_rules! throw_inval {\n-    ($($tt:tt)*) => { Err(err_inval!($($tt)*))? };\n+    ($($tt:tt)*) => { Err::<!, _>(err_inval!($($tt)*))? };\n }\n \n #[macro_export]\n macro_rules! throw_ub {\n-    ($($tt:tt)*) => { Err(err_ub!($($tt)*))? };\n+    ($($tt:tt)*) => { Err::<!, _>(err_ub!($($tt)*))? };\n }\n \n #[macro_export]\n@@ -74,13 +74,13 @@ macro_rules! throw_ub_format {\n \n #[macro_export]\n macro_rules! throw_exhaust {\n-    ($($tt:tt)*) => { Err(err_exhaust!($($tt)*))? };\n+    ($($tt:tt)*) => { Err::<!, _>(err_exhaust!($($tt)*))? };\n }\n \n #[macro_export]\n macro_rules! throw_machine_stop {\n     ($($tt:tt)*) => {\n-        Err($crate::mir::interpret::InterpError::MachineStop(Box::new($($tt)*)))?\n+        Err::<!, _>($crate::mir::interpret::InterpError::MachineStop(Box::new($($tt)*)))?\n     };\n }\n "}]}