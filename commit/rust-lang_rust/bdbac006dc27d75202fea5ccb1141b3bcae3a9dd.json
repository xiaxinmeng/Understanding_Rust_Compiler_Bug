{"sha": "bdbac006dc27d75202fea5ccb1141b3bcae3a9dd", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJkYmFjMDA2ZGMyN2Q3NTIwMmZlYTVjY2IxMTQxYjNiY2FlM2E5ZGQ=", "commit": {"author": {"name": "Michael Sullivan", "email": "sully@msully.net", "date": "2011-07-21T23:11:35Z"}, "committer": {"name": "Michael Sullivan", "email": "sully@msully.net", "date": "2011-07-22T00:55:47Z"}, "message": "Build the stage1 compiler against the newly built librustrt.", "tree": {"sha": "6ba378d15591afcd9b7bc3cf5b4eba303e469d5f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6ba378d15591afcd9b7bc3cf5b4eba303e469d5f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bdbac006dc27d75202fea5ccb1141b3bcae3a9dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bdbac006dc27d75202fea5ccb1141b3bcae3a9dd", "html_url": "https://github.com/rust-lang/rust/commit/bdbac006dc27d75202fea5ccb1141b3bcae3a9dd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bdbac006dc27d75202fea5ccb1141b3bcae3a9dd/comments", "author": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c62a9fec775a2f0fba5980fb13329bed57a1b118", "url": "https://api.github.com/repos/rust-lang/rust/commits/c62a9fec775a2f0fba5980fb13329bed57a1b118", "html_url": "https://github.com/rust-lang/rust/commit/c62a9fec775a2f0fba5980fb13329bed57a1b118"}], "stats": {"total": 50, "additions": 21, "deletions": 29}, "files": [{"sha": "2d0b9fe3c6cd50d7634a003cf12f86f306f1aa0c", "filename": "mk/stage0.mk", "status": "modified", "additions": 5, "deletions": 12, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/bdbac006dc27d75202fea5ccb1141b3bcae3a9dd/mk%2Fstage0.mk", "raw_url": "https://github.com/rust-lang/rust/raw/bdbac006dc27d75202fea5ccb1141b3bcae3a9dd/mk%2Fstage0.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fstage0.mk?ref=bdbac006dc27d75202fea5ccb1141b3bcae3a9dd", "patch": "@@ -1,5 +1,5 @@\n-# FIXME: temporary hack: stdlib comes in the lib/ directory, but we want it in\n-# the base directory, so we move it out.\n+# FIXME: temporary hack: stdlib and rustrt come in the lib/ directory,\n+# but we want them in the base directory, so we move them out.\n stage0/rustc$(X): $(S)src/snapshots.txt $(S)src/etc/get-snapshot.py $(MKFILES)\n \t@$(call E, fetch: $@)\n \t$(Q)$(S)src/etc/get-snapshot.py\n@@ -8,11 +8,8 @@ stage0/rustc$(X): $(S)src/snapshots.txt $(S)src/etc/get-snapshot.py $(MKFILES)\n \n # Host libs will be made in the process of making rustc above.\n \n-# FIXME: temporary hack: the runtime is currently carried in\n-# lib/ directory only, so we copy it out.\n-\n-stage0/$(CFG_RUNTIME): stage0/lib/$(CFG_RUNTIME)\n-\t$(Q)cp $< $@\n+stage0/$(CFG_RUNTIME): stage0/rustc$(X)\n+\t$(Q)touch $@\n \n stage0/$(CFG_STDLIB): stage0/rustc$(X)\n \t$(Q)touch $@\n@@ -31,12 +28,8 @@ stage0/lib/glue.o: stage0/rustc$(X)\n stage0/lib/main.o: rt/main.o\n \t$(Q)cp $< $@\n \n-\n-stage0/lib/$(CFG_RUNTIME): stage0/rustc$(X)\n-\t$(Q)touch $@\n-\n # Instantiate template (in stageN.mk) for building\n # stage0/lib/$(CFG_STDLIB) and stage0/lib/libstd.rlib.\n SREQpre = stage0/lib/main.o $(MKFILES)\n-$(eval $(call STDLIBGEN,pre,0))\n+$(eval $(call LIBGEN,pre,0))\n "}, {"sha": "1338f1ae30fe633f06e79513cd0cfe1496cbd9f6", "filename": "mk/stageN.mk", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/bdbac006dc27d75202fea5ccb1141b3bcae3a9dd/mk%2FstageN.mk", "raw_url": "https://github.com/rust-lang/rust/raw/bdbac006dc27d75202fea5ccb1141b3bcae3a9dd/mk%2FstageN.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2FstageN.mk?ref=bdbac006dc27d75202fea5ccb1141b3bcae3a9dd", "patch": "@@ -3,10 +3,11 @@\n # The easiest way to read this template is to assume we're building stage2\n # using stage1, and mentally gloss $(1) as 1, $(2) as 2.\n #\n-# STDLIBGEN is pulled out seperately because we need to specially invoke\n-# it to build stage0/lib/libstd using stage0/rustc.\n+# LIBGEN is pulled out seperately because we need to specially invoke\n+# it to build stage0/lib/libstd using stage0/rustc and to use the\n+# new rustrt in stage0/lib/.\n \n-define STDLIBGEN\n+define LIBGEN\n stage$(2)/lib/$$(CFG_STDLIB): $$(STDLIB_CRATE) $$(STDLIB_INPUTS) \\\n                               stage$(2)/rustc$$(X)               \\\n                               stage$(2)/$$(CFG_RUNTIME)          \\\n@@ -24,6 +25,11 @@ stage$(2)/lib/libstd.rlib: $$(STDLIB_CRATE) $$(STDLIB_INPUTS) \\\n                            $$(SREQ$(1))\n \t@$$(call E, compile_and_link: $$@)\n \t$$(STAGE$(2)) --lib --static -o $$@ $$<\n+\n+stage$(2)/lib/$$(CFG_RUNTIME): rt/$$(CFG_RUNTIME)\n+\t@$$(call E, cp: $$@)\n+\t$$(Q)cp $$< $$@\n+\n endef\n \n define STAGEN\n@@ -79,16 +85,12 @@ stage$(2)/lib/glue.o: stage$(2)/rustc$$(X)        \\\n \t@$$(call E, generate: $$@)\n \t$$(STAGE$(2)) -c -o $$@ --glue\n \n-$(eval $(call STDLIBGEN,$(1),$(2)))\n+$(eval $(call LIBGEN,$(1),$(2)))\n \n stage$(2)/lib/main.o: rt/main.o\n \t@$$(call E, cp: $$@)\n \t$$(Q)cp $$< $$@\n \n-stage$(2)/lib/$$(CFG_RUNTIME): rt/$$(CFG_RUNTIME)\n-\t@$$(call E, cp: $$@)\n-\t$$(Q)cp $$< $$@\n-\n stage$(2)/lib/$$(CFG_LIBRUSTC): $$(COMPILER_CRATE) $$(COMPILER_INPUTS) \\\n                                 $$(SREQ$(2))\n \t@$$(call E, compile_and_link: $$@)"}, {"sha": "98e480defda1d1e91f56395461e25b64d0cc674a", "filename": "src/etc/get-snapshot.py", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bdbac006dc27d75202fea5ccb1141b3bcae3a9dd/src%2Fetc%2Fget-snapshot.py", "raw_url": "https://github.com/rust-lang/rust/raw/bdbac006dc27d75202fea5ccb1141b3bcae3a9dd/src%2Fetc%2Fget-snapshot.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fget-snapshot.py?ref=bdbac006dc27d75202fea5ccb1141b3bcae3a9dd", "patch": "@@ -9,7 +9,7 @@ def unpack_snapshot(snap):\n   print(\"opening snapshot \" + dl_path)\n   tar = tarfile.open(dl_path)\n   kernel = get_kernel()\n-  for name in old_snapshot_files[kernel]:\n+  for name in snapshot_files[kernel]:\n     p = \"rust-stage0/\" + name\n     fp = os.path.join(\"stage0\", name)\n     print(\"extracting \" + fp)"}, {"sha": "88caf2789b14d7b469e30e2998071b8835e6e1c4", "filename": "src/etc/snapshot.py", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/bdbac006dc27d75202fea5ccb1141b3bcae3a9dd/src%2Fetc%2Fsnapshot.py", "raw_url": "https://github.com/rust-lang/rust/raw/bdbac006dc27d75202fea5ccb1141b3bcae3a9dd/src%2Fetc%2Fsnapshot.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fsnapshot.py?ref=bdbac006dc27d75202fea5ccb1141b3bcae3a9dd", "patch": "@@ -23,14 +23,6 @@ def scrub(b):\n     \"winnt\": [\"rustc.exe\", \"lib/glue.o\", \"lib/std.dll\",\n               \"rustrt.dll\", \"rustllvm.dll\", \"lib/intrinsics.bc\"]\n     }\n-old_snapshot_files = {\n-    \"linux\": [\"rustc\", \"lib/glue.o\", \"lib/libstd.so\",\n-              \"lib/librustrt.so\", \"librustllvm.so\", \"lib/intrinsics.bc\"],\n-    \"macos\": [\"rustc\", \"lib/glue.o\", \"lib/libstd.dylib\",\n-              \"lib/librustrt.dylib\", \"librustllvm.dylib\", \"lib/intrinsics.bc\"],\n-    \"winnt\": [\"rustc.exe\", \"lib/glue.o\", \"lib/std.dll\",\n-              \"lib/rustrt.dll\", \"rustllvm.dll\", \"lib/intrinsics.bc\"]\n-    }\n \n def parse_line(n, line):\n   global snapshotfile"}, {"sha": "6e991d97e23d2b3778c02c24ae97d6ec008768fa", "filename": "src/snapshots.txt", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/bdbac006dc27d75202fea5ccb1141b3bcae3a9dd/src%2Fsnapshots.txt", "raw_url": "https://github.com/rust-lang/rust/raw/bdbac006dc27d75202fea5ccb1141b3bcae3a9dd/src%2Fsnapshots.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fsnapshots.txt?ref=bdbac006dc27d75202fea5ccb1141b3bcae3a9dd", "patch": "@@ -1,3 +1,8 @@\n+S 2011-07-21 c62a9fe\n+  linux-i386 3c8f658093adea1cb0e5b84150d3d342571013b4\n+  macos-i386 1833b475fd1adec3df02ab3dd2fb7c6f280a33a5\n+  winnt-i386 f6b6b42d00f25d82603b9466229d3229bfce3317\n+\n S 2011-07-20 8a7f2e0\n   linux-i386 c4881df0302a4a1e126a7ea847e1d7b4de49b943\n   macos-i386 d5d486af50fade251fd04a24062385d67cfff30a"}]}