{"sha": "48dc8efc8595d397b3820a0784f0dbe553c3fb27", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ4ZGM4ZWZjODU5NWQzOTdiMzgyMGEwNzg0ZjBkYmU1NTNjM2ZiMjc=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2019-03-24T07:32:45Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-03-24T07:32:45Z"}, "message": "Rollup merge of #59239 - gnzlbg:fix_spin_loop, r=nagisa\n\nRemove inline assembly from hint::spin_loop\n\nThis PR removes the inline assembly which was not required since these\ninstructions are available in core::arch, and extends support of\nthe spin_loop hint to arm targets with the v6 feature which also\nsupport the yield instruction.", "tree": {"sha": "b2e32713e5026bcba10a6834970533ba4159c5a2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b2e32713e5026bcba10a6834970533ba4159c5a2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/48dc8efc8595d397b3820a0784f0dbe553c3fb27", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJclzKdCRBK7hj4Ov3rIwAAdHIIABpm7HF0AGncVDF/CENqzN59\nxfXwb+3ALgr1DloYWVM+3hk2DFgRhwFOTBgyCBqvp5dq2+3FevrVMtHcXQB45Lpb\nXF3Skbf6OhksjCNDiMLhMjlmVl74zXDJiB3xjYgXOgb0+K0acivop9lalfLNTnsU\nbrZdljvHJHXeRyQdmojAUkintKGRf3Fego4ksm0vFZXdkPL/h4/y2SC1DDEbyA0I\n47ajMCIAXN792m8/0eUlVDuWC5AZvfT0ElmMAqdI5W7iPPGBR01sZliIC0SpCvsb\nxjmuBRTCaTXLMnYHvmmBgGisUukqyoXKs6LK773mdgr71axLgZhi5GNFAET+UUQ=\n=FlqI\n-----END PGP SIGNATURE-----\n", "payload": "tree b2e32713e5026bcba10a6834970533ba4159c5a2\nparent 6c5e1d151a2526a8f597150b0ec01e22f550a002\nparent 830c98d7fa4da9381d3ee9c8b918bc5dff11c378\nauthor kennytm <kennytm@gmail.com> 1553412765 +0800\ncommitter GitHub <noreply@github.com> 1553412765 +0800\n\nRollup merge of #59239 - gnzlbg:fix_spin_loop, r=nagisa\n\nRemove inline assembly from hint::spin_loop\n\nThis PR removes the inline assembly which was not required since these\ninstructions are available in core::arch, and extends support of\nthe spin_loop hint to arm targets with the v6 feature which also\nsupport the yield instruction.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/48dc8efc8595d397b3820a0784f0dbe553c3fb27", "html_url": "https://github.com/rust-lang/rust/commit/48dc8efc8595d397b3820a0784f0dbe553c3fb27", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/48dc8efc8595d397b3820a0784f0dbe553c3fb27/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6c5e1d151a2526a8f597150b0ec01e22f550a002", "url": "https://api.github.com/repos/rust-lang/rust/commits/6c5e1d151a2526a8f597150b0ec01e22f550a002", "html_url": "https://github.com/rust-lang/rust/commit/6c5e1d151a2526a8f597150b0ec01e22f550a002"}, {"sha": "830c98d7fa4da9381d3ee9c8b918bc5dff11c378", "url": "https://api.github.com/repos/rust-lang/rust/commits/830c98d7fa4da9381d3ee9c8b918bc5dff11c378", "html_url": "https://github.com/rust-lang/rust/commit/830c98d7fa4da9381d3ee9c8b918bc5dff11c378"}], "stats": {"total": 31, "additions": 25, "deletions": 6}, "files": [{"sha": "b2f82ef0d175ccf3124b89728a1e292aeb0895b4", "filename": "src/libcore/hint.rs", "status": "modified", "additions": 25, "deletions": 6, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/48dc8efc8595d397b3820a0784f0dbe553c3fb27/src%2Flibcore%2Fhint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48dc8efc8595d397b3820a0784f0dbe553c3fb27/src%2Flibcore%2Fhint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fhint.rs?ref=48dc8efc8595d397b3820a0784f0dbe553c3fb27", "patch": "@@ -62,13 +62,32 @@ pub unsafe fn unreachable_unchecked() -> ! {\n #[inline]\n #[unstable(feature = \"renamed_spin_loop\", issue = \"55002\")]\n pub fn spin_loop() {\n-    #[cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))]\n-    unsafe {\n-        asm!(\"pause\" ::: \"memory\" : \"volatile\");\n+    #[cfg(\n+        all(\n+            any(target_arch = \"x86\", target_arch = \"x86_64\"),\n+            target_feature = \"sse2\"\n+        )\n+    )] {\n+        #[cfg(target_arch = \"x86\")] {\n+            unsafe { crate::arch::x86::_mm_pause() };\n+        }\n+\n+        #[cfg(target_arch = \"x86_64\")] {\n+            unsafe { crate::arch::x86_64::_mm_pause() };\n+        }\n     }\n \n-    #[cfg(target_arch = \"aarch64\")]\n-    unsafe {\n-        asm!(\"yield\" ::: \"memory\" : \"volatile\");\n+    #[cfg(\n+        any(\n+            target_arch = \"aarch64\",\n+            all(target_arch = \"arm\", target_feature = \"v6\")\n+        )\n+    )] {\n+        #[cfg(target_arch = \"aarch64\")] {\n+            unsafe { crate::arch::aarch64::__yield() };\n+        }\n+        #[cfg(target_arch = \"arm\")] {\n+            unsafe { crate::arch::arm::__yield() };\n+        }\n     }\n }"}]}