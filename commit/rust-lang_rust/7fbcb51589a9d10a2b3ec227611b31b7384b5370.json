{"sha": "7fbcb51589a9d10a2b3ec227611b31b7384b5370", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdmYmNiNTE1ODlhOWQxMGEyYjNlYzIyNzYxMWIzMWI3Mzg0YjUzNzA=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-11-24T01:53:53Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-11-24T04:35:51Z"}, "message": "Fix unreachable code in libsyntax", "tree": {"sha": "19e1f39af9df387956f07b5f58beb242bef7f1e6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/19e1f39af9df387956f07b5f58beb242bef7f1e6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7fbcb51589a9d10a2b3ec227611b31b7384b5370", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7fbcb51589a9d10a2b3ec227611b31b7384b5370", "html_url": "https://github.com/rust-lang/rust/commit/7fbcb51589a9d10a2b3ec227611b31b7384b5370", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7fbcb51589a9d10a2b3ec227611b31b7384b5370/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2eca64de71d1c7ab58a5f8c38d424193f01e5d89", "url": "https://api.github.com/repos/rust-lang/rust/commits/2eca64de71d1c7ab58a5f8c38d424193f01e5d89", "html_url": "https://github.com/rust-lang/rust/commit/2eca64de71d1c7ab58a5f8c38d424193f01e5d89"}], "stats": {"total": 13, "additions": 4, "deletions": 9}, "files": [{"sha": "08888b3073d5db45baad542515bc17ace0eeb6bd", "filename": "src/libsyntax/ext/base.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7fbcb51589a9d10a2b3ec227611b31b7384b5370/src%2Flibsyntax%2Fext%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7fbcb51589a9d10a2b3ec227611b31b7384b5370/src%2Flibsyntax%2Fext%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fbase.rs?ref=7fbcb51589a9d10a2b3ec227611b31b7384b5370", "patch": "@@ -678,9 +678,9 @@ impl<'a> ExtCtxt<'a> {\n     pub fn bt_push(&mut self, ei: ExpnInfo) {\n         self.recursion_count += 1;\n         if self.recursion_count > self.ecfg.recursion_limit {\n-            panic!(self.span_fatal(ei.call_site,\n+            self.span_fatal(ei.call_site,\n                             &format!(\"recursion limit reached while expanding the macro `{}`\",\n-                                    ei.callee.name())));\n+                                    ei.callee.name()));\n         }\n \n         let mut call_site = ei.call_site;"}, {"sha": "23d6b794a72c5c99c4ed470d448bee14b52ffb8c", "filename": "src/libsyntax/ext/tt/macro_rules.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7fbcb51589a9d10a2b3ec227611b31b7384b5370/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7fbcb51589a9d10a2b3ec227611b31b7384b5370/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs?ref=7fbcb51589a9d10a2b3ec227611b31b7384b5370", "patch": "@@ -209,12 +209,12 @@ fn generic_extension<'cx>(cx: &'cx ExtCtxt,\n                 best_fail_msg = (*msg).clone();\n             },\n             Error(err_sp, ref msg) => {\n-                panic!(cx.span_fatal(err_sp.substitute_dummy(sp), &msg[..]))\n+                cx.span_fatal(err_sp.substitute_dummy(sp), &msg[..])\n             }\n         }\n     }\n \n-    panic!(cx.span_fatal(best_fail_spot.substitute_dummy(sp), &best_fail_msg[..]));\n+     cx.span_fatal(best_fail_spot.substitute_dummy(sp), &best_fail_msg[..]);\n }\n \n // Note that macro-by-example's input is also matched against a token tree:"}, {"sha": "5a3257d54db21a37203e66801c2cf3195030bc11", "filename": "src/test/compile-fail/unreachable-in-call.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/7fbcb51589a9d10a2b3ec227611b31b7384b5370/src%2Ftest%2Fcompile-fail%2Funreachable-in-call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7fbcb51589a9d10a2b3ec227611b31b7384b5370/src%2Ftest%2Fcompile-fail%2Funreachable-in-call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funreachable-in-call.rs?ref=7fbcb51589a9d10a2b3ec227611b31b7384b5370", "patch": "@@ -8,11 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// Test that the unboxed closure sugar can be used with an arbitrary\n-// struct type and that it is equivalent to the same syntax using\n-// angle brackets. This test covers only simple types and in\n-// particular doesn't test bound regions.\n-\n #![allow(dead_code)]\n #![deny(unreachable_code)]\n "}]}