{"sha": "ce2516545018bf146ec1c898531eed942bb42da7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNlMjUxNjU0NTAxOGJmMTQ2ZWMxYzg5ODUzMWVlZDk0MmJiNDJkYTc=", "commit": {"author": {"name": "Mika Attila", "email": "radiantstatue@gmail.com", "date": "2015-08-28T11:07:08Z"}, "committer": {"name": "Mika Attila", "email": "radiantstatue@gmail.com", "date": "2015-08-28T11:12:27Z"}, "message": "Don't pass --write-mode argument to rustc\n\nFixes regression introduced by\n660f41865b43f38d68b649328c04b1702e37655e", "tree": {"sha": "0031b9f153c79824d281530c32fb624d09043dc6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0031b9f153c79824d281530c32fb624d09043dc6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ce2516545018bf146ec1c898531eed942bb42da7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ce2516545018bf146ec1c898531eed942bb42da7", "html_url": "https://github.com/rust-lang/rust/commit/ce2516545018bf146ec1c898531eed942bb42da7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ce2516545018bf146ec1c898531eed942bb42da7/comments", "author": {"login": "crumblingstatue", "id": 1521976, "node_id": "MDQ6VXNlcjE1MjE5NzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1521976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/crumblingstatue", "html_url": "https://github.com/crumblingstatue", "followers_url": "https://api.github.com/users/crumblingstatue/followers", "following_url": "https://api.github.com/users/crumblingstatue/following{/other_user}", "gists_url": "https://api.github.com/users/crumblingstatue/gists{/gist_id}", "starred_url": "https://api.github.com/users/crumblingstatue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/crumblingstatue/subscriptions", "organizations_url": "https://api.github.com/users/crumblingstatue/orgs", "repos_url": "https://api.github.com/users/crumblingstatue/repos", "events_url": "https://api.github.com/users/crumblingstatue/events{/privacy}", "received_events_url": "https://api.github.com/users/crumblingstatue/received_events", "type": "User", "site_admin": false}, "committer": {"login": "crumblingstatue", "id": 1521976, "node_id": "MDQ6VXNlcjE1MjE5NzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1521976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/crumblingstatue", "html_url": "https://github.com/crumblingstatue", "followers_url": "https://api.github.com/users/crumblingstatue/followers", "following_url": "https://api.github.com/users/crumblingstatue/following{/other_user}", "gists_url": "https://api.github.com/users/crumblingstatue/gists{/gist_id}", "starred_url": "https://api.github.com/users/crumblingstatue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/crumblingstatue/subscriptions", "organizations_url": "https://api.github.com/users/crumblingstatue/orgs", "repos_url": "https://api.github.com/users/crumblingstatue/repos", "events_url": "https://api.github.com/users/crumblingstatue/events{/privacy}", "received_events_url": "https://api.github.com/users/crumblingstatue/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "660f41865b43f38d68b649328c04b1702e37655e", "url": "https://api.github.com/repos/rust-lang/rust/commits/660f41865b43f38d68b649328c04b1702e37655e", "html_url": "https://github.com/rust-lang/rust/commit/660f41865b43f38d68b649328c04b1702e37655e"}], "stats": {"total": 26, "additions": 12, "deletions": 14}, "files": [{"sha": "c527ae1504a4f3048c6c7f729965334570a62f5c", "filename": "src/bin/rustfmt.rs", "status": "modified", "additions": 12, "deletions": 14, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/ce2516545018bf146ec1c898531eed942bb42da7/src%2Fbin%2Frustfmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce2516545018bf146ec1c898531eed942bb42da7/src%2Fbin%2Frustfmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Frustfmt.rs?ref=ce2516545018bf146ec1c898531eed942bb42da7", "patch": "@@ -93,38 +93,36 @@ fn determine_params<I>(args: I) -> Option<(Vec<String>, WriteMode)>\n     let help_mode = \"-h\";\n     let long_help_mode = \"--help\";\n     let mut write_mode = WriteMode::Replace;\n-    let args: Vec<String> = args.collect();\n+    let mut rustc_args = Vec::new();\n \n     // The NewFile option currently isn't supported because it requires another\n     // parameter, but it can be added later.\n-    if args.iter().any(|arg| {\n+    for arg in args {\n         if arg.starts_with(write_mode_prefix) {\n-            write_mode = match FromStr::from_str(&arg[write_mode_prefix.len()..]) {\n-                Ok(mode) => mode,\n+            match FromStr::from_str(&arg[write_mode_prefix.len()..]) {\n+                Ok(mode) => write_mode = mode,\n                 Err(_) => {\n                     print_usage(\"Unrecognized write mode\");\n-                    return true;\n+                    return None;\n                 }\n-            };\n-            false\n+            }\n         } else if arg.starts_with(help_mode) || arg.starts_with(long_help_mode) {\n             print_usage(\"\");\n-            true\n+            return None;\n         } else if arg.starts_with(arg_prefix) {\n             print_usage(\"Invalid argument\");\n-            true\n+            return None;\n         } else {\n-            false\n+            // Pass everything else to rustc\n+            rustc_args.push(arg);\n         }\n-    }) {\n-        return None;\n     }\n \n-    if args.len() < 2 {\n+    if rustc_args.len() < 2 {\n         print_usage(\"Please provide a file to be formatted\");\n         return None;\n     }\n \n \n-    Some((args, write_mode))\n+    Some((rustc_args, write_mode))\n }"}]}