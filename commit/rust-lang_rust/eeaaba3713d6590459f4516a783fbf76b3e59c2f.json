{"sha": "eeaaba3713d6590459f4516a783fbf76b3e59c2f", "node_id": "C_kwDOAAsO6NoAKGVlYWFiYTM3MTNkNjU5MDQ1OWY0NTE2YTc4M2ZiZjc2YjNlNTljMmY", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-08-18T18:13:39Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-08-18T18:13:39Z"}, "message": "Auto merge of #9348 - lukaslueg:issue9347, r=Alexendoo\n\nDon't lint on match pattern-binding in \u00b4question_mark`\n\nFixes #9347\n\nTechnically it is possible to have a blank match-pattern that does nothing, and we fail to lint. But it's easier to be safe than sorry here.\n\nchangelog: [`question_mark`]: don't lint `if let`s with subpatterns", "tree": {"sha": "d6222f5cf6b9ea031825ecc08f9d2fe486393e41", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d6222f5cf6b9ea031825ecc08f9d2fe486393e41"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eeaaba3713d6590459f4516a783fbf76b3e59c2f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eeaaba3713d6590459f4516a783fbf76b3e59c2f", "html_url": "https://github.com/rust-lang/rust/commit/eeaaba3713d6590459f4516a783fbf76b3e59c2f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eeaaba3713d6590459f4516a783fbf76b3e59c2f/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c419d0a8b538de6000226cc54a2f18a03bbd31d6", "url": "https://api.github.com/repos/rust-lang/rust/commits/c419d0a8b538de6000226cc54a2f18a03bbd31d6", "html_url": "https://github.com/rust-lang/rust/commit/c419d0a8b538de6000226cc54a2f18a03bbd31d6"}, {"sha": "e87a5a1cc5e799b929abf27a03a6535a88698ce6", "url": "https://api.github.com/repos/rust-lang/rust/commits/e87a5a1cc5e799b929abf27a03a6535a88698ce6", "html_url": "https://github.com/rust-lang/rust/commit/e87a5a1cc5e799b929abf27a03a6535a88698ce6"}], "stats": {"total": 32, "additions": 31, "deletions": 1}, "files": [{"sha": "b432ccb1ee32dd675d054de109fd3ec690fe80f8", "filename": "clippy_lints/src/question_mark.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eeaaba3713d6590459f4516a783fbf76b3e59c2f/clippy_lints%2Fsrc%2Fquestion_mark.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eeaaba3713d6590459f4516a783fbf76b3e59c2f/clippy_lints%2Fsrc%2Fquestion_mark.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fquestion_mark.rs?ref=eeaaba3713d6590459f4516a783fbf76b3e59c2f", "patch": "@@ -123,7 +123,7 @@ fn check_if_let_some_or_err_and_early_return<'tcx>(cx: &LateContext<'tcx>, expr:\n         if let Some(higher::IfLet { let_pat, let_expr, if_then, if_else }) = higher::IfLet::hir(cx, expr);\n         if !is_else_clause(cx.tcx, expr);\n         if let PatKind::TupleStruct(ref path1, [field], None) = let_pat.kind;\n-        if let PatKind::Binding(annot, bind_id, ident, _) = field.kind;\n+        if let PatKind::Binding(annot, bind_id, ident, None) = field.kind;\n         let caller_ty = cx.typeck_results().expr_ty(let_expr);\n         let if_block = IfBlockType::IfLet(path1, caller_ty, ident.name, let_expr, if_then, if_else);\n         if (is_early_return(sym::Option, cx, &if_block) && path_to_local_id(peel_blocks(if_then), bind_id))"}, {"sha": "57f23bd1916ffaa46272f152ebc52f5d79c1f8e3", "filename": "tests/ui/question_mark.fixed", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/eeaaba3713d6590459f4516a783fbf76b3e59c2f/tests%2Fui%2Fquestion_mark.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/eeaaba3713d6590459f4516a783fbf76b3e59c2f/tests%2Fui%2Fquestion_mark.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fquestion_mark.fixed?ref=eeaaba3713d6590459f4516a783fbf76b3e59c2f", "patch": "@@ -207,4 +207,19 @@ fn option_map() -> Option<bool> {\n     }\n }\n \n+pub struct PatternedError {\n+    flag: bool,\n+}\n+\n+// No warning\n+fn pattern() -> Result<(), PatternedError> {\n+    let res = Ok(());\n+\n+    if let Err(err @ PatternedError { flag: true }) = res {\n+        return Err(err);\n+    }\n+\n+    res\n+}\n+\n fn main() {}"}, {"sha": "436f027c215d54f459d244628acd9b358899c51c", "filename": "tests/ui/question_mark.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/eeaaba3713d6590459f4516a783fbf76b3e59c2f/tests%2Fui%2Fquestion_mark.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eeaaba3713d6590459f4516a783fbf76b3e59c2f/tests%2Fui%2Fquestion_mark.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fquestion_mark.rs?ref=eeaaba3713d6590459f4516a783fbf76b3e59c2f", "patch": "@@ -243,4 +243,19 @@ fn option_map() -> Option<bool> {\n     }\n }\n \n+pub struct PatternedError {\n+    flag: bool,\n+}\n+\n+// No warning\n+fn pattern() -> Result<(), PatternedError> {\n+    let res = Ok(());\n+\n+    if let Err(err @ PatternedError { flag: true }) = res {\n+        return Err(err);\n+    }\n+\n+    res\n+}\n+\n fn main() {}"}]}