{"sha": "2741b94daaa56c0f88ed91a7a4e9b888a5b835a0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI3NDFiOTRkYWFhNTZjMGY4OGVkOTFhN2E0ZTliODg4YTViODM1YTA=", "commit": {"author": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2015-05-05T20:13:48Z"}, "committer": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2015-05-05T20:13:48Z"}, "message": "Indicate code is code-like in diagnostic error message", "tree": {"sha": "78eb5462e6b028346a045fcb764857cc8fc3e220", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/78eb5462e6b028346a045fcb764857cc8fc3e220"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2741b94daaa56c0f88ed91a7a4e9b888a5b835a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2741b94daaa56c0f88ed91a7a4e9b888a5b835a0", "html_url": "https://github.com/rust-lang/rust/commit/2741b94daaa56c0f88ed91a7a4e9b888a5b835a0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2741b94daaa56c0f88ed91a7a4e9b888a5b835a0/comments", "author": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "committer": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6cd748611346dec3181f81ca3aa551cce0529343", "url": "https://api.github.com/repos/rust-lang/rust/commits/6cd748611346dec3181f81ca3aa551cce0529343", "html_url": "https://github.com/rust-lang/rust/commit/6cd748611346dec3181f81ca3aa551cce0529343"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "0aefba28efa630315bc0aff6efd818f0bf275bb9", "filename": "src/librustc/diagnostics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2741b94daaa56c0f88ed91a7a4e9b888a5b835a0/src%2Flibrustc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2741b94daaa56c0f88ed91a7a4e9b888a5b835a0/src%2Flibrustc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdiagnostics.rs?ref=2741b94daaa56c0f88ed91a7a4e9b888a5b835a0", "patch": "@@ -37,7 +37,7 @@ An example of an empty type is `enum Empty { }`.\n E0003: r##\"\n Not-a-Number (NaN) values cannot be compared for equality and hence can never\n match the input to a match expression. To match against NaN values, you should\n-instead use the `is_nan` method in a guard, as in: x if x.is_nan() => ...\n+instead use the `is_nan` method in a guard, as in: `x if x.is_nan() => ...`\n \"##,\n \n E0004: r##\""}]}