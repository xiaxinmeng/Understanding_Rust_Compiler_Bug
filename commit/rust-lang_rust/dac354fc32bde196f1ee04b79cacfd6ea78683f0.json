{"sha": "dac354fc32bde196f1ee04b79cacfd6ea78683f0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRhYzM1NGZjMzJiZGUxOTZmMWVlMDRiNzljYWNmZDZlYTc4NjgzZjA=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2021-01-22T03:44:02Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2021-02-05T02:29:50Z"}, "message": "Revert \"Simplify unscheduling of drops after moves\"\n\nThis reverts commit b766abc88f78f36193ddefb1079dbc832346b358.", "tree": {"sha": "55ecb495b420c342e5869d300ec2d987c44d2a61", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/55ecb495b420c342e5869d300ec2d987c44d2a61"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dac354fc32bde196f1ee04b79cacfd6ea78683f0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dac354fc32bde196f1ee04b79cacfd6ea78683f0", "html_url": "https://github.com/rust-lang/rust/commit/dac354fc32bde196f1ee04b79cacfd6ea78683f0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dac354fc32bde196f1ee04b79cacfd6ea78683f0/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bed69c613471cf0717f1664003ccf714168eec95", "url": "https://api.github.com/repos/rust-lang/rust/commits/bed69c613471cf0717f1664003ccf714168eec95", "html_url": "https://github.com/rust-lang/rust/commit/bed69c613471cf0717f1664003ccf714168eec95"}], "stats": {"total": 111, "additions": 80, "deletions": 31}, "files": [{"sha": "03717183707b305571031d3219a598be6850efa1", "filename": "compiler/rustc_mir_build/src/build/scope.rs", "status": "modified", "additions": 25, "deletions": 13, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/dac354fc32bde196f1ee04b79cacfd6ea78683f0/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fscope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dac354fc32bde196f1ee04b79cacfd6ea78683f0/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fscope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fscope.rs?ref=dac354fc32bde196f1ee04b79cacfd6ea78683f0", "patch": "@@ -83,7 +83,7 @@ that contains only loops and breakable blocks. It tracks where a `break`,\n \n use crate::build::{BlockAnd, BlockAndExtension, BlockFrame, Builder, CFG};\n use crate::thir::{Expr, ExprRef, LintLevel};\n-use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n+use rustc_data_structures::fx::FxHashMap;\n use rustc_index::vec::IndexVec;\n use rustc_middle::middle::region;\n use rustc_middle::mir::*;\n@@ -120,6 +120,8 @@ struct Scope {\n     /// end of the vector (top of the stack) first.\n     drops: Vec<DropData>,\n \n+    moved_locals: Vec<Local>,\n+\n     /// The drop index that will drop everything in and below this scope on an\n     /// unwind path.\n     cached_unwind_block: Option<DropIdx>,\n@@ -403,6 +405,7 @@ impl<'tcx> Scopes<'tcx> {\n             region_scope: region_scope.0,\n             region_scope_span: region_scope.1.span,\n             drops: vec![],\n+            moved_locals: vec![],\n             cached_unwind_block: None,\n             cached_generator_drop_block: None,\n         });\n@@ -890,19 +893,20 @@ impl<'a, 'tcx> Builder<'a, 'tcx> {\n         assert_eq!(scope.region_scope, local_scope, \"local scope is not the topmost scope!\",);\n \n         // look for moves of a local variable, like `MOVE(_X)`\n-        let locals_moved = operands\n-            .iter()\n-            .filter_map(|operand| match operand {\n-                Operand::Copy(_) | Operand::Constant(_) => None,\n-                Operand::Move(place) => place.as_local(),\n-            })\n-            .collect::<FxHashSet<_>>();\n+        let locals_moved = operands.iter().flat_map(|operand| match operand {\n+            Operand::Copy(_) | Operand::Constant(_) => None,\n+            Operand::Move(place) => place.as_local(),\n+        });\n \n-        // Remove the drops for the moved operands.\n-        scope\n-            .drops\n-            .retain(|drop| drop.kind == DropKind::Storage || !locals_moved.contains(&drop.local));\n-        scope.invalidate_cache();\n+        for local in locals_moved {\n+            // check if we have a Drop for this operand and -- if so\n+            // -- add it to the list of moved operands. Note that this\n+            // local might not have been an operand created for this\n+            // call, it could come from other places too.\n+            if scope.drops.iter().any(|drop| drop.local == local && drop.kind == DropKind::Value) {\n+                scope.moved_locals.push(local);\n+            }\n+        }\n     }\n \n     // Other\n@@ -1147,6 +1151,14 @@ fn build_scope_drops<'tcx>(\n                 debug_assert_eq!(unwind_drops.drops[unwind_to].0.kind, drop_data.kind);\n                 unwind_to = unwind_drops.drops[unwind_to].1;\n \n+                // If the operand has been moved, and we are not on an unwind\n+                // path, then don't generate the drop. (We only take this into\n+                // account for non-unwind paths so as not to disturb the\n+                // caching mechanism.)\n+                if scope.moved_locals.iter().any(|&o| o == local) {\n+                    continue;\n+                }\n+\n                 unwind_drops.add_entry(block, unwind_to);\n \n                 let next = cfg.start_new_block();"}, {"sha": "cfbd3a58637c0edd08c958bf59739c1b9841d761", "filename": "src/test/mir-opt/box_expr.main.ElaborateDrops.before.mir", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/dac354fc32bde196f1ee04b79cacfd6ea78683f0/src%2Ftest%2Fmir-opt%2Fbox_expr.main.ElaborateDrops.before.mir", "raw_url": "https://github.com/rust-lang/rust/raw/dac354fc32bde196f1ee04b79cacfd6ea78683f0/src%2Ftest%2Fmir-opt%2Fbox_expr.main.ElaborateDrops.before.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fbox_expr.main.ElaborateDrops.before.mir?ref=dac354fc32bde196f1ee04b79cacfd6ea78683f0", "patch": "@@ -14,7 +14,7 @@ fn main() -> () {\n         StorageLive(_1);                 // scope 0 at $DIR/box_expr.rs:7:9: 7:10\n         StorageLive(_2);                 // scope 0 at $DIR/box_expr.rs:7:13: 7:25\n         _2 = Box(S);                     // scope 0 at $DIR/box_expr.rs:7:13: 7:25\n-        (*_2) = S::new() -> [return: bb1, unwind: bb6]; // scope 0 at $DIR/box_expr.rs:7:17: 7:25\n+        (*_2) = S::new() -> [return: bb1, unwind: bb7]; // scope 0 at $DIR/box_expr.rs:7:17: 7:25\n                                          // mir::Constant\n                                          // + span: $DIR/box_expr.rs:7:17: 7:23\n                                          // + literal: Const { ty: fn() -> S {S::new}, val: Value(Scalar(<ZST>)) }\n@@ -49,14 +49,18 @@ fn main() -> () {\n     }\n \n     bb5 (cleanup): {\n-        drop(_1) -> bb7;                 // scope 0 at $DIR/box_expr.rs:9:1: 9:2\n+        drop(_4) -> bb6;                 // scope 1 at $DIR/box_expr.rs:8:11: 8:12\n     }\n \n     bb6 (cleanup): {\n-        drop(_2) -> bb7;                 // scope 0 at $DIR/box_expr.rs:7:24: 7:25\n+        drop(_1) -> bb8;                 // scope 0 at $DIR/box_expr.rs:9:1: 9:2\n     }\n \n     bb7 (cleanup): {\n+        drop(_2) -> bb8;                 // scope 0 at $DIR/box_expr.rs:7:24: 7:25\n+    }\n+\n+    bb8 (cleanup): {\n         resume;                          // scope 0 at $DIR/box_expr.rs:6:1: 9:2\n     }\n }"}, {"sha": "7113c42b9c77f97088ae3ab70be33c53fdb48e96", "filename": "src/test/mir-opt/issue_41110.main.ElaborateDrops.after.mir", "status": "modified", "additions": 24, "deletions": 3, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/dac354fc32bde196f1ee04b79cacfd6ea78683f0/src%2Ftest%2Fmir-opt%2Fissue_41110.main.ElaborateDrops.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/dac354fc32bde196f1ee04b79cacfd6ea78683f0/src%2Ftest%2Fmir-opt%2Fissue_41110.main.ElaborateDrops.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fissue_41110.main.ElaborateDrops.after.mir?ref=dac354fc32bde196f1ee04b79cacfd6ea78683f0", "patch": "@@ -6,44 +6,65 @@ fn main() -> () {\n     let mut _2: S;                       // in scope 0 at $DIR/issue-41110.rs:8:13: 8:14\n     let mut _3: S;                       // in scope 0 at $DIR/issue-41110.rs:8:21: 8:27\n     let mut _4: S;                       // in scope 0 at $DIR/issue-41110.rs:8:21: 8:22\n+    let mut _5: bool;                    // in scope 0 at $DIR/issue-41110.rs:8:27: 8:28\n     scope 1 {\n         debug x => _1;                   // in scope 1 at $DIR/issue-41110.rs:8:9: 8:10\n     }\n \n     bb0: {\n+        _5 = const false;                // scope 0 at $DIR/issue-41110.rs:8:9: 8:10\n         StorageLive(_1);                 // scope 0 at $DIR/issue-41110.rs:8:9: 8:10\n         StorageLive(_2);                 // scope 0 at $DIR/issue-41110.rs:8:13: 8:14\n+        _5 = const true;                 // scope 0 at $DIR/issue-41110.rs:8:13: 8:14\n         _2 = S;                          // scope 0 at $DIR/issue-41110.rs:8:13: 8:14\n         StorageLive(_3);                 // scope 0 at $DIR/issue-41110.rs:8:21: 8:27\n         StorageLive(_4);                 // scope 0 at $DIR/issue-41110.rs:8:21: 8:22\n         _4 = S;                          // scope 0 at $DIR/issue-41110.rs:8:21: 8:22\n-        _3 = S::id(move _4) -> [return: bb1, unwind: bb3]; // scope 0 at $DIR/issue-41110.rs:8:21: 8:27\n+        _3 = S::id(move _4) -> [return: bb1, unwind: bb4]; // scope 0 at $DIR/issue-41110.rs:8:21: 8:27\n                                          // mir::Constant\n                                          // + span: $DIR/issue-41110.rs:8:23: 8:25\n                                          // + literal: Const { ty: fn(S) -> S {S::id}, val: Value(Scalar(<ZST>)) }\n     }\n \n     bb1: {\n         StorageDead(_4);                 // scope 0 at $DIR/issue-41110.rs:8:26: 8:27\n-        _1 = S::other(move _2, move _3) -> bb2; // scope 0 at $DIR/issue-41110.rs:8:13: 8:28\n+        _5 = const false;                // scope 0 at $DIR/issue-41110.rs:8:13: 8:28\n+        _1 = S::other(move _2, move _3) -> [return: bb2, unwind: bb3]; // scope 0 at $DIR/issue-41110.rs:8:13: 8:28\n                                          // mir::Constant\n                                          // + span: $DIR/issue-41110.rs:8:15: 8:20\n                                          // + literal: Const { ty: fn(S, S) {S::other}, val: Value(Scalar(<ZST>)) }\n     }\n \n     bb2: {\n         StorageDead(_3);                 // scope 0 at $DIR/issue-41110.rs:8:27: 8:28\n+        _5 = const false;                // scope 0 at $DIR/issue-41110.rs:8:27: 8:28\n         StorageDead(_2);                 // scope 0 at $DIR/issue-41110.rs:8:27: 8:28\n         _0 = const ();                   // scope 0 at $DIR/issue-41110.rs:7:11: 9:2\n         StorageDead(_1);                 // scope 0 at $DIR/issue-41110.rs:9:1: 9:2\n         return;                          // scope 0 at $DIR/issue-41110.rs:9:2: 9:2\n     }\n \n     bb3 (cleanup): {\n-        drop(_2) -> bb4;                 // scope 0 at $DIR/issue-41110.rs:8:27: 8:28\n+        goto -> bb5;                     // scope 0 at $DIR/issue-41110.rs:8:27: 8:28\n     }\n \n     bb4 (cleanup): {\n+        goto -> bb5;                     // scope 0 at $DIR/issue-41110.rs:8:26: 8:27\n+    }\n+\n+    bb5 (cleanup): {\n+        goto -> bb8;                     // scope 0 at $DIR/issue-41110.rs:8:27: 8:28\n+    }\n+\n+    bb6 (cleanup): {\n         resume;                          // scope 0 at $DIR/issue-41110.rs:7:1: 9:2\n     }\n+\n+    bb7 (cleanup): {\n+        drop(_2) -> bb6;                 // scope 0 at $DIR/issue-41110.rs:8:27: 8:28\n+    }\n+\n+    bb8 (cleanup): {\n+        switchInt(_5) -> [false: bb6, otherwise: bb7]; // scope 0 at $DIR/issue-41110.rs:8:27: 8:28\n+    }\n }"}, {"sha": "c4e852ca3212a5d9eddf51c4476cfcfedf6335e3", "filename": "src/test/mir-opt/issue_41110.test.ElaborateDrops.after.mir", "status": "modified", "additions": 15, "deletions": 11, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/dac354fc32bde196f1ee04b79cacfd6ea78683f0/src%2Ftest%2Fmir-opt%2Fissue_41110.test.ElaborateDrops.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/dac354fc32bde196f1ee04b79cacfd6ea78683f0/src%2Ftest%2Fmir-opt%2Fissue_41110.test.ElaborateDrops.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fissue_41110.test.ElaborateDrops.after.mir?ref=dac354fc32bde196f1ee04b79cacfd6ea78683f0", "patch": "@@ -37,7 +37,7 @@ fn test() -> () {\n         StorageLive(_5);                 // scope 2 at $DIR/issue-41110.rs:18:9: 18:10\n         _6 = const false;                // scope 2 at $DIR/issue-41110.rs:18:9: 18:10\n         _5 = move _1;                    // scope 2 at $DIR/issue-41110.rs:18:9: 18:10\n-        goto -> bb11;                    // scope 2 at $DIR/issue-41110.rs:18:5: 18:6\n+        goto -> bb12;                    // scope 2 at $DIR/issue-41110.rs:18:5: 18:6\n     }\n \n     bb2: {\n@@ -47,7 +47,7 @@ fn test() -> () {\n     bb3: {\n         StorageDead(_5);                 // scope 2 at $DIR/issue-41110.rs:18:9: 18:10\n         _0 = const ();                   // scope 0 at $DIR/issue-41110.rs:14:15: 19:2\n-        drop(_2) -> [return: bb4, unwind: bb8]; // scope 1 at $DIR/issue-41110.rs:19:1: 19:2\n+        drop(_2) -> [return: bb4, unwind: bb9]; // scope 1 at $DIR/issue-41110.rs:19:1: 19:2\n     }\n \n     bb4: {\n@@ -62,36 +62,40 @@ fn test() -> () {\n     }\n \n     bb6 (cleanup): {\n-        goto -> bb7;                     // scope 2 at $DIR/issue-41110.rs:18:9: 18:10\n+        goto -> bb8;                     // scope 2 at $DIR/issue-41110.rs:18:9: 18:10\n     }\n \n     bb7 (cleanup): {\n-        goto -> bb8;                     // scope 1 at $DIR/issue-41110.rs:19:1: 19:2\n+        goto -> bb8;                     // scope 2 at $DIR/issue-41110.rs:17:11: 17:12\n     }\n \n     bb8 (cleanup): {\n-        goto -> bb13;                    // scope 0 at $DIR/issue-41110.rs:19:1: 19:2\n+        goto -> bb9;                     // scope 1 at $DIR/issue-41110.rs:19:1: 19:2\n     }\n \n     bb9 (cleanup): {\n-        resume;                          // scope 0 at $DIR/issue-41110.rs:14:1: 19:2\n+        goto -> bb14;                    // scope 0 at $DIR/issue-41110.rs:19:1: 19:2\n     }\n \n     bb10 (cleanup): {\n+        resume;                          // scope 0 at $DIR/issue-41110.rs:14:1: 19:2\n+    }\n+\n+    bb11 (cleanup): {\n         _2 = move _5;                    // scope 2 at $DIR/issue-41110.rs:18:5: 18:6\n         goto -> bb6;                     // scope 2 at $DIR/issue-41110.rs:18:5: 18:6\n     }\n \n-    bb11: {\n+    bb12: {\n         _2 = move _5;                    // scope 2 at $DIR/issue-41110.rs:18:5: 18:6\n         goto -> bb2;                     // scope 2 at $DIR/issue-41110.rs:18:5: 18:6\n     }\n \n-    bb12 (cleanup): {\n-        drop(_1) -> bb9;                 // scope 0 at $DIR/issue-41110.rs:19:1: 19:2\n+    bb13 (cleanup): {\n+        drop(_1) -> bb10;                // scope 0 at $DIR/issue-41110.rs:19:1: 19:2\n     }\n \n-    bb13 (cleanup): {\n-        switchInt(_6) -> [false: bb9, otherwise: bb12]; // scope 0 at $DIR/issue-41110.rs:19:1: 19:2\n+    bb14 (cleanup): {\n+        switchInt(_6) -> [false: bb10, otherwise: bb13]; // scope 0 at $DIR/issue-41110.rs:19:1: 19:2\n     }\n }"}, {"sha": "bbb433dbe25c787203525dbe6561d0ff04946023", "filename": "src/test/mir-opt/no_spurious_drop_after_call.main.ElaborateDrops.before.mir", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/dac354fc32bde196f1ee04b79cacfd6ea78683f0/src%2Ftest%2Fmir-opt%2Fno_spurious_drop_after_call.main.ElaborateDrops.before.mir", "raw_url": "https://github.com/rust-lang/rust/raw/dac354fc32bde196f1ee04b79cacfd6ea78683f0/src%2Ftest%2Fmir-opt%2Fno_spurious_drop_after_call.main.ElaborateDrops.before.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fno_spurious_drop_after_call.main.ElaborateDrops.before.mir?ref=dac354fc32bde196f1ee04b79cacfd6ea78683f0", "patch": "@@ -28,7 +28,7 @@ fn main() -> () {\n \n     bb1: {\n         StorageDead(_3);                 // scope 0 at $DIR/no-spurious-drop-after-call.rs:9:33: 9:34\n-        _1 = std::mem::drop::<String>(move _2) -> bb2; // scope 0 at $DIR/no-spurious-drop-after-call.rs:9:5: 9:35\n+        _1 = std::mem::drop::<String>(move _2) -> [return: bb2, unwind: bb3]; // scope 0 at $DIR/no-spurious-drop-after-call.rs:9:5: 9:35\n                                          // mir::Constant\n                                          // + span: $DIR/no-spurious-drop-after-call.rs:9:5: 9:19\n                                          // + literal: Const { ty: fn(std::string::String) {std::mem::drop::<std::string::String>}, val: Value(Scalar(<ZST>)) }\n@@ -41,4 +41,12 @@ fn main() -> () {\n         _0 = const ();                   // scope 0 at $DIR/no-spurious-drop-after-call.rs:8:11: 10:2\n         return;                          // scope 0 at $DIR/no-spurious-drop-after-call.rs:10:2: 10:2\n     }\n+\n+    bb3 (cleanup): {\n+        drop(_2) -> bb4;                 // scope 0 at $DIR/no-spurious-drop-after-call.rs:9:34: 9:35\n+    }\n+\n+    bb4 (cleanup): {\n+        resume;                          // scope 0 at $DIR/no-spurious-drop-after-call.rs:8:1: 10:2\n+    }\n }"}]}