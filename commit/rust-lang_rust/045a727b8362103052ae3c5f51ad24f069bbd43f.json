{"sha": "045a727b8362103052ae3c5f51ad24f069bbd43f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA0NWE3MjdiODM2MjEwMzA1MmFlM2M1ZjUxYWQyNGYwNjliYmQ0M2Y=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-11-07T07:05:58Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-11-07T07:05:58Z"}, "message": "Auto merge of #37605 - dsprenkels:arc-max-refcount, r=alexcrichton\n\nFix Arc::clone()'s MAX_REFCOUNT check (off-by-one)\n\nBefore, the strong count of an `Arc` could be set to\n`MAX_REFCOUNT + 1`, because when this happened, `old_size` would\nbe exactly `MAX_REFCOUNT`. `Arc::clone()` would not abort.\n\nThis commit changes the check in `Arc::clone()` to also abort if\nthe old value is equal to `MAX_REFCOUNT`, because then the new\nvalue will be equal to `MAX_REFCOUNT + 1`.\n\nA test would require allocating memory for `isize::MAX` pointers.\nThis would probably crash any machine, so no test is submitted\nwith this commit.", "tree": {"sha": "d35159895556b813f5f6b56db2240b8009f9de22", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d35159895556b813f5f6b56db2240b8009f9de22"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/045a727b8362103052ae3c5f51ad24f069bbd43f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/045a727b8362103052ae3c5f51ad24f069bbd43f", "html_url": "https://github.com/rust-lang/rust/commit/045a727b8362103052ae3c5f51ad24f069bbd43f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/045a727b8362103052ae3c5f51ad24f069bbd43f/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "09fc1af9d80ecb71c82367b6569461e645a3a946", "url": "https://api.github.com/repos/rust-lang/rust/commits/09fc1af9d80ecb71c82367b6569461e645a3a946", "html_url": "https://github.com/rust-lang/rust/commit/09fc1af9d80ecb71c82367b6569461e645a3a946"}, {"sha": "99aaccd32fe7b63366fa13b48f485fd1cdcd8660", "url": "https://api.github.com/repos/rust-lang/rust/commits/99aaccd32fe7b63366fa13b48f485fd1cdcd8660", "html_url": "https://github.com/rust-lang/rust/commit/99aaccd32fe7b63366fa13b48f485fd1cdcd8660"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "d6096d58947727a381533794661721beffb5b815", "filename": "src/liballoc/arc.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/045a727b8362103052ae3c5f51ad24f069bbd43f/src%2Fliballoc%2Farc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/045a727b8362103052ae3c5f51ad24f069bbd43f/src%2Fliballoc%2Farc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Farc.rs?ref=045a727b8362103052ae3c5f51ad24f069bbd43f", "patch": "@@ -36,6 +36,10 @@ use core::{isize, usize};\n use core::convert::From;\n use heap::deallocate;\n \n+/// A soft limit on the amount of references that may be made to an `Arc`.\n+///\n+/// Going above this limit will abort your program (although not\n+/// necessarily) at _exactly_ `MAX_REFCOUNT + 1` references.\n const MAX_REFCOUNT: usize = (isize::MAX) as usize;\n \n /// A thread-safe reference-counting pointer."}]}