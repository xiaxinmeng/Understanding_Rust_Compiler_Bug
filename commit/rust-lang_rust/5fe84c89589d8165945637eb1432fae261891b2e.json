{"sha": "5fe84c89589d8165945637eb1432fae261891b2e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVmZTg0Yzg5NTg5ZDgxNjU5NDU2MzdlYjE0MzJmYWUyNjE4OTFiMmU=", "commit": {"author": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2021-01-23T21:10:09Z"}, "committer": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2021-01-23T21:10:09Z"}, "message": "always eagerly eval consts in Relate", "tree": {"sha": "542adfd374f8bd85ef99d231b45250ee251d708c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/542adfd374f8bd85ef99d231b45250ee251d708c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5fe84c89589d8165945637eb1432fae261891b2e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5fe84c89589d8165945637eb1432fae261891b2e", "html_url": "https://github.com/rust-lang/rust/commit/5fe84c89589d8165945637eb1432fae261891b2e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5fe84c89589d8165945637eb1432fae261891b2e/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4d0dd02ee07bddad9136f95c9f7846ebf3eb3fc5", "url": "https://api.github.com/repos/rust-lang/rust/commits/4d0dd02ee07bddad9136f95c9f7846ebf3eb3fc5", "html_url": "https://github.com/rust-lang/rust/commit/4d0dd02ee07bddad9136f95c9f7846ebf3eb3fc5"}], "stats": {"total": 8, "additions": 5, "deletions": 3}, "files": [{"sha": "05c85ecb03f417f0fc769b707b423ce173187208", "filename": "compiler/rustc_middle/src/ty/relate.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5fe84c89589d8165945637eb1432fae261891b2e/compiler%2Frustc_middle%2Fsrc%2Fty%2Frelate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5fe84c89589d8165945637eb1432fae261891b2e/compiler%2Frustc_middle%2Fsrc%2Fty%2Frelate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Frelate.rs?ref=5fe84c89589d8165945637eb1432fae261891b2e", "patch": "@@ -421,12 +421,14 @@ pub fn super_relate_tys<R: TypeRelation<'tcx>>(\n             let t = relation.relate(a_t, b_t)?;\n             match relation.relate(sz_a, sz_b) {\n                 Ok(sz) => Ok(tcx.mk_ty(ty::Array(t, sz))),\n-                // FIXME(#72219) Implement improved diagnostics for mismatched array\n-                // length?\n-                Err(err) if relation.tcx().lazy_normalization() => Err(err),\n                 Err(err) => {\n                     // Check whether the lengths are both concrete/known values,\n                     // but are unequal, for better diagnostics.\n+                    //\n+                    // It might seem dubious to eagerly evaluate these constants here,\n+                    // we however cannot end up with errors in `Relate` during both\n+                    // `type_of` and `predicates_of`. This means that evaluating the\n+                    // constants should not cause cycle errors here.\n                     let sz_a = sz_a.try_eval_usize(tcx, relation.param_env());\n                     let sz_b = sz_b.try_eval_usize(tcx, relation.param_env());\n                     match (sz_a, sz_b) {"}]}