{"sha": "1c3033d5cf903d19d8f3dcdfc01ba1dc55debf71", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFjMzAzM2Q1Y2Y5MDNkMTlkOGYzZGNkZmMwMWJhMWRjNTVkZWJmNzE=", "commit": {"author": {"name": "Takayuki Maeda", "email": "takoyaki0316@gmail.com", "date": "2021-02-07T16:34:59Z"}, "committer": {"name": "Takayuki Maeda", "email": "takoyaki0316@gmail.com", "date": "2021-02-07T16:34:59Z"}, "message": "add a new lint `bytes_nth`", "tree": {"sha": "4c04c9a9678a0fe6abf8f39f5d8c9bb3154cdf76", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4c04c9a9678a0fe6abf8f39f5d8c9bb3154cdf76"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1c3033d5cf903d19d8f3dcdfc01ba1dc55debf71", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1c3033d5cf903d19d8f3dcdfc01ba1dc55debf71", "html_url": "https://github.com/rust-lang/rust/commit/1c3033d5cf903d19d8f3dcdfc01ba1dc55debf71", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1c3033d5cf903d19d8f3dcdfc01ba1dc55debf71/comments", "author": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c1ce78f0b2871763fea2bc39194a691bc35c9d29", "url": "https://api.github.com/repos/rust-lang/rust/commits/c1ce78f0b2871763fea2bc39194a691bc35c9d29", "html_url": "https://github.com/rust-lang/rust/commit/c1ce78f0b2871763fea2bc39194a691bc35c9d29"}], "stats": {"total": 102, "additions": 102, "deletions": 0}, "files": [{"sha": "7c79fe88816f13176974589209860dac1cbf3a8f", "filename": "CHANGELOG.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1c3033d5cf903d19d8f3dcdfc01ba1dc55debf71/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/1c3033d5cf903d19d8f3dcdfc01ba1dc55debf71/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=1c3033d5cf903d19d8f3dcdfc01ba1dc55debf71", "patch": "@@ -1877,6 +1877,7 @@ Released 2018-09-13\n [`box_vec`]: https://rust-lang.github.io/rust-clippy/master/index.html#box_vec\n [`boxed_local`]: https://rust-lang.github.io/rust-clippy/master/index.html#boxed_local\n [`builtin_type_shadow`]: https://rust-lang.github.io/rust-clippy/master/index.html#builtin_type_shadow\n+[`bytes_nth`]: https://rust-lang.github.io/rust-clippy/master/index.html#bytes_nth\n [`cargo_common_metadata`]: https://rust-lang.github.io/rust-clippy/master/index.html#cargo_common_metadata\n [`case_sensitive_file_extension_comparisons`]: https://rust-lang.github.io/rust-clippy/master/index.html#case_sensitive_file_extension_comparisons\n [`cast_lossless`]: https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless"}, {"sha": "22d91c9d40d3723643c3fecc07d6c1168eab8104", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1c3033d5cf903d19d8f3dcdfc01ba1dc55debf71/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c3033d5cf903d19d8f3dcdfc01ba1dc55debf71/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=1c3033d5cf903d19d8f3dcdfc01ba1dc55debf71", "patch": "@@ -734,6 +734,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         &mem_replace::MEM_REPLACE_WITH_DEFAULT,\n         &mem_replace::MEM_REPLACE_WITH_UNINIT,\n         &methods::BIND_INSTEAD_OF_MAP,\n+        &methods::BYTES_NTH,\n         &methods::CHARS_LAST_CMP,\n         &methods::CHARS_NEXT_CMP,\n         &methods::CLONE_DOUBLE_REF,\n@@ -1531,6 +1532,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         LintId::of(&mem_replace::MEM_REPLACE_WITH_DEFAULT),\n         LintId::of(&mem_replace::MEM_REPLACE_WITH_UNINIT),\n         LintId::of(&methods::BIND_INSTEAD_OF_MAP),\n+        LintId::of(&methods::BYTES_NTH),\n         LintId::of(&methods::CHARS_LAST_CMP),\n         LintId::of(&methods::CHARS_NEXT_CMP),\n         LintId::of(&methods::CLONE_DOUBLE_REF),\n@@ -1749,6 +1751,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         LintId::of(&matches::SINGLE_MATCH),\n         LintId::of(&mem_replace::MEM_REPLACE_OPTION_WITH_NONE),\n         LintId::of(&mem_replace::MEM_REPLACE_WITH_DEFAULT),\n+        LintId::of(&methods::BYTES_NTH),\n         LintId::of(&methods::CHARS_LAST_CMP),\n         LintId::of(&methods::CHARS_NEXT_CMP),\n         LintId::of(&methods::FROM_ITER_INSTEAD_OF_COLLECT),"}, {"sha": "4f38db06c0a372bb3c94978df821b3e89d144c1b", "filename": "clippy_lints/src/methods/bytes_nth.rs", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/1c3033d5cf903d19d8f3dcdfc01ba1dc55debf71/clippy_lints%2Fsrc%2Fmethods%2Fbytes_nth.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c3033d5cf903d19d8f3dcdfc01ba1dc55debf71/clippy_lints%2Fsrc%2Fmethods%2Fbytes_nth.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fbytes_nth.rs?ref=1c3033d5cf903d19d8f3dcdfc01ba1dc55debf71", "patch": "@@ -0,0 +1,39 @@\n+use crate::utils::{is_type_diagnostic_item, snippet_with_applicability, span_lint_and_sugg};\n+use if_chain::if_chain;\n+use rustc_errors::Applicability;\n+use rustc_hir::{Expr, ExprKind};\n+use rustc_lint::LateContext;\n+use rustc_span::sym;\n+\n+use super::BYTES_NTH;\n+\n+pub(super) fn lints<'tcx>(cx: &LateContext<'tcx>, expr: &Expr<'_>, iter_args: &'tcx [Expr<'tcx>]) {\n+    if_chain! {\n+        if let ExprKind::MethodCall(_, _, ref args, _) = expr.kind;\n+        let ty = cx.typeck_results().expr_ty(&iter_args[0]).peel_refs();\n+        let caller_type = if is_type_diagnostic_item(cx, ty, sym::string_type) {\n+            Some(\"String\")\n+        } else if ty.is_str() {\n+            Some(\"str\")\n+        } else {\n+            None\n+        };\n+        if let Some(caller_type) = caller_type;\n+        then {\n+            let mut applicability = Applicability::MachineApplicable;\n+            span_lint_and_sugg(\n+                cx,\n+                BYTES_NTH,\n+                expr.span,\n+                &format!(\"called `.byte().nth()` on a `{}`\", caller_type),\n+                \"try calling `.as_bytes().get()`\",\n+                format!(\n+                    \"{}.as_bytes().get({})\",\n+                    snippet_with_applicability(cx, iter_args[0].span, \"..\", &mut applicability),\n+                    snippet_with_applicability(cx, args[1].span, \"..\", &mut applicability)\n+                ),\n+                applicability,\n+            );\n+        }\n+    }\n+}"}, {"sha": "4cb3a858511509972f152e04eaa00f35dead20c7", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/1c3033d5cf903d19d8f3dcdfc01ba1dc55debf71/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c3033d5cf903d19d8f3dcdfc01ba1dc55debf71/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=1c3033d5cf903d19d8f3dcdfc01ba1dc55debf71", "patch": "@@ -1,4 +1,5 @@\n mod bind_instead_of_map;\n+mod bytes_nth;\n mod filter_map_identity;\n mod inefficient_to_string;\n mod inspect_for_each;\n@@ -1490,6 +1491,28 @@ declare_clippy_lint! {\n     \"call to `filter_map` where `flatten` is sufficient\"\n }\n \n+declare_clippy_lint! {\n+    /// **What it does:** Checks for the use of `.bytes().nth()`.\n+    ///\n+    /// **Why is this bad?** `.as_bytes().get()` is more efficient and more\n+    /// readable.\n+    ///\n+    /// **Known problems:** None.\n+    ///\n+    /// **Example:**\n+    ///\n+    /// ```rust\n+    /// // Bad\n+    /// let _ = \"Hello\".bytes().nth(3);;\n+    ///\n+    /// // Good\n+    /// let _ = \"Hello\".as_bytes().get(3);\n+    /// ```\n+    pub BYTES_NTH,\n+    style,\n+    \"replace `.bytes().nth()` with `.as_bytes().get()`\"\n+}\n+\n pub struct Methods {\n     msrv: Option<RustcVersion>,\n }\n@@ -1537,6 +1560,7 @@ impl_lint_pass!(Methods => [\n     ITER_NEXT_SLICE,\n     ITER_NTH,\n     ITER_NTH_ZERO,\n+    BYTES_NTH,\n     ITER_SKIP_NEXT,\n     GET_UNWRAP,\n     STRING_EXTEND_CHARS,\n@@ -1614,6 +1638,7 @@ impl<'tcx> LateLintPass<'tcx> for Methods {\n             [\"extend\", ..] => lint_extend(cx, expr, arg_lists[0]),\n             [\"nth\", \"iter\"] => lint_iter_nth(cx, expr, &arg_lists, false),\n             [\"nth\", \"iter_mut\"] => lint_iter_nth(cx, expr, &arg_lists, true),\n+            [\"nth\", \"bytes\"] => bytes_nth::lints(cx, expr, &arg_lists[1]),\n             [\"nth\", ..] => lint_iter_nth_zero(cx, expr, arg_lists[0]),\n             [\"step_by\", ..] => lint_step_by(cx, expr, arg_lists[0]),\n             [\"next\", \"skip\"] => lint_iter_skip_next(cx, expr, arg_lists[1]),"}, {"sha": "36bf8660a34c0c41ea15231b06f98c42eea0d6b7", "filename": "tests/ui/bytes_nth.fixed", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/1c3033d5cf903d19d8f3dcdfc01ba1dc55debf71/tests%2Fui%2Fbytes_nth.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/1c3033d5cf903d19d8f3dcdfc01ba1dc55debf71/tests%2Fui%2Fbytes_nth.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbytes_nth.fixed?ref=1c3033d5cf903d19d8f3dcdfc01ba1dc55debf71", "patch": "@@ -0,0 +1,9 @@\n+// run-rustfix\n+\n+#![warn(clippy::bytes_nth)]\n+\n+fn main() {\n+    let _ = \"Hello\".as_bytes().get(3);\n+\n+    let _ = String::from(\"Hello\").as_bytes().get(3);\n+}"}, {"sha": "257344c2d32952e490ecdf08e1cc1af519136f9e", "filename": "tests/ui/bytes_nth.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/1c3033d5cf903d19d8f3dcdfc01ba1dc55debf71/tests%2Fui%2Fbytes_nth.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c3033d5cf903d19d8f3dcdfc01ba1dc55debf71/tests%2Fui%2Fbytes_nth.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbytes_nth.rs?ref=1c3033d5cf903d19d8f3dcdfc01ba1dc55debf71", "patch": "@@ -0,0 +1,9 @@\n+// run-rustfix\n+\n+#![warn(clippy::bytes_nth)]\n+\n+fn main() {\n+    let _ = \"Hello\".bytes().nth(3);\n+\n+    let _ = String::from(\"Hello\").bytes().nth(3);\n+}"}, {"sha": "b46a0736414b05d553a868bc20dd3a5b38f3f994", "filename": "tests/ui/bytes_nth.stderr", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/1c3033d5cf903d19d8f3dcdfc01ba1dc55debf71/tests%2Fui%2Fbytes_nth.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1c3033d5cf903d19d8f3dcdfc01ba1dc55debf71/tests%2Fui%2Fbytes_nth.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbytes_nth.stderr?ref=1c3033d5cf903d19d8f3dcdfc01ba1dc55debf71", "patch": "@@ -0,0 +1,16 @@\n+error: called `.byte().nth()` on a `str`\n+  --> $DIR/bytes_nth.rs:6:13\n+   |\n+LL |     let _ = \"Hello\".bytes().nth(3);\n+   |             ^^^^^^^^^^^^^^^^^^^^^^ help: try calling `.as_bytes().get()`: `\"Hello\".as_bytes().get(3)`\n+   |\n+   = note: `-D clippy::bytes-nth` implied by `-D warnings`\n+\n+error: called `.byte().nth()` on a `String`\n+  --> $DIR/bytes_nth.rs:8:13\n+   |\n+LL |     let _ = String::from(\"Hello\").bytes().nth(3);\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try calling `.as_bytes().get()`: `String::from(\"Hello\").as_bytes().get(3)`\n+\n+error: aborting due to 2 previous errors\n+"}]}