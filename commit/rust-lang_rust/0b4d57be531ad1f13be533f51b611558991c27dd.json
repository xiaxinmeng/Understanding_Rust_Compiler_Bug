{"sha": "0b4d57be531ad1f13be533f51b611558991c27dd", "node_id": "C_kwDOAAsO6NoAKDBiNGQ1N2JlNTMxYWQxZjEzYmU1MzNmNTFiNjExNTU4OTkxYzI3ZGQ", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-12-09T06:25:44Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-12-09T06:25:44Z"}, "message": "Rollup merge of #105245 - RalfJung:align_to, r=Amanieu\n\nattempt to clarify align_to docs\n\nThis is not intended the change the docs at all, but `@workingjubilee` said the current docs are incomprehensible to some people so this is an attempt to fix that. No idea if it helps, so -- feedback welcome.\n\n(Please let's not use this to discuss *changing* the spec. Whoever wants to change the spec should please make a separate PR for that.)", "tree": {"sha": "a7b7a74acc8c33becf39abcfc4af3001f98dbeeb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a7b7a74acc8c33becf39abcfc4af3001f98dbeeb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0b4d57be531ad1f13be533f51b611558991c27dd", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjktToCRBK7hj4Ov3rIwAA9fEIAIzXQGao3zYi1Ls6kK1D1jIg\n54jOJRbBi0jQIKeutT7bXqtSRw3SYICHvU+Nnu5CiGK58MF+bX2iOBoHxODfe0ce\nLpJWJWZXJd+mhtVViD3wmxSTa1SZXpM8GY2ScAk4suf6B7Rh8HmGZ0aPAsngyvWF\nuZDS7EZHaTrV+ToLPq5Okdn1VaKtsD3PrzRGNcWt0fFkpfQzc+/XNygYZr0heVoj\niznlSSWvKrYzWf5dnEmeB+ZzeYgv/GheP9t8GwfbnXAAS1FNjcax4UM1AGZEtCEn\n0gQPUnl7bAWkQz83fHYX52vpfgiAbLxOf7e8Uc/m6RYHWHaSnUV5MPAdOyNg9+o=\n=o1Ht\n-----END PGP SIGNATURE-----\n", "payload": "tree a7b7a74acc8c33becf39abcfc4af3001f98dbeeb\nparent 2b988588ce8f87ed2b7341014bd785ddb8babcd1\nparent ee21454e619fb7ab6122ee2349f9f40bb902bf5c\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1670567144 +0100\ncommitter GitHub <noreply@github.com> 1670567144 +0100\n\nRollup merge of #105245 - RalfJung:align_to, r=Amanieu\n\nattempt to clarify align_to docs\n\nThis is not intended the change the docs at all, but `@workingjubilee` said the current docs are incomprehensible to some people so this is an attempt to fix that. No idea if it helps, so -- feedback welcome.\n\n(Please let's not use this to discuss *changing* the spec. Whoever wants to change the spec should please make a separate PR for that.)\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0b4d57be531ad1f13be533f51b611558991c27dd", "html_url": "https://github.com/rust-lang/rust/commit/0b4d57be531ad1f13be533f51b611558991c27dd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0b4d57be531ad1f13be533f51b611558991c27dd/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2b988588ce8f87ed2b7341014bd785ddb8babcd1", "url": "https://api.github.com/repos/rust-lang/rust/commits/2b988588ce8f87ed2b7341014bd785ddb8babcd1", "html_url": "https://github.com/rust-lang/rust/commit/2b988588ce8f87ed2b7341014bd785ddb8babcd1"}, {"sha": "ee21454e619fb7ab6122ee2349f9f40bb902bf5c", "url": "https://api.github.com/repos/rust-lang/rust/commits/ee21454e619fb7ab6122ee2349f9f40bb902bf5c", "html_url": "https://github.com/rust-lang/rust/commit/ee21454e619fb7ab6122ee2349f9f40bb902bf5c"}], "stats": {"total": 18, "additions": 10, "deletions": 8}, "files": [{"sha": "3d7a7cfaf35fb5a13ee4d7ea4f4132dcdf152c3e", "filename": "library/core/src/slice/mod.rs", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/0b4d57be531ad1f13be533f51b611558991c27dd/library%2Fcore%2Fsrc%2Fslice%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b4d57be531ad1f13be533f51b611558991c27dd/library%2Fcore%2Fsrc%2Fslice%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fslice%2Fmod.rs?ref=0b4d57be531ad1f13be533f51b611558991c27dd", "patch": "@@ -3468,10 +3468,11 @@ impl<T> [T] {\n     /// maintained.\n     ///\n     /// This method splits the slice into three distinct slices: prefix, correctly aligned middle\n-    /// slice of a new type, and the suffix slice. The method may make the middle slice the greatest\n-    /// length possible for a given type and input slice, but only your algorithm's performance\n-    /// should depend on that, not its correctness. It is permissible for all of the input data to\n-    /// be returned as the prefix or suffix slice.\n+    /// slice of a new type, and the suffix slice. How exactly the slice is split up is not\n+    /// specified; the middle part may be smaller than necessary. However, if this fails to return a\n+    /// maximal middle part, that is because code is running in a context where performance does not\n+    /// matter, such as a sanitizer attempting to find alignment bugs. Regular code running\n+    /// in a default (debug or release) execution *will* return a maximal middle part.\n     ///\n     /// This method has no purpose when either input element `T` or output element `U` are\n     /// zero-sized and will return the original slice without splitting anything.\n@@ -3529,10 +3530,11 @@ impl<T> [T] {\n     /// types is maintained.\n     ///\n     /// This method splits the slice into three distinct slices: prefix, correctly aligned middle\n-    /// slice of a new type, and the suffix slice. The method may make the middle slice the greatest\n-    /// length possible for a given type and input slice, but only your algorithm's performance\n-    /// should depend on that, not its correctness. It is permissible for all of the input data to\n-    /// be returned as the prefix or suffix slice.\n+    /// slice of a new type, and the suffix slice. How exactly the slice is split up is not\n+    /// specified; the middle part may be smaller than necessary. However, if this fails to return a\n+    /// maximal middle part, that is because code is running in a context where performance does not\n+    /// matter, such as a sanitizer attempting to find alignment bugs. Regular code running\n+    /// in a default (debug or release) execution *will* return a maximal middle part.\n     ///\n     /// This method has no purpose when either input element `T` or output element `U` are\n     /// zero-sized and will return the original slice without splitting anything."}]}