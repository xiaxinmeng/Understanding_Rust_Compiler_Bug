{"sha": "fb7948e7c1aa0ff6ce4cbde45cde2384d1d1ba10", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZiNzk0OGU3YzFhYTBmZjZjZTRjYmRlNDVjZGUyMzg0ZDFkMWJhMTA=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-11-02T05:14:38Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-11-02T05:14:38Z"}, "message": "Rollup merge of #78627 - est31:total_cmp_no_superset, r=m-ou-se\n\nPoint out that total_cmp is no strict superset of partial comparison\n\nPartial comparison and total_cmp are not equal. This helps\npreventing the mistake of creating float wrappers that\nbase their Ord impl on total_cmp and their PartialOrd impl on\nthe PartialOrd impl of the float type. PartialOrd and Ord\n[are required to agree with each other](https://doc.rust-lang.org/std/cmp/trait.Ord.html#how-can-i-implement-ord).", "tree": {"sha": "92d3e9f2f78de13e4967a7300fd1cfbbe1527c4a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/92d3e9f2f78de13e4967a7300fd1cfbbe1527c4a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fb7948e7c1aa0ff6ce4cbde45cde2384d1d1ba10", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfn5W/CRBK7hj4Ov3rIwAAdHIIAJvcGt2eIwYwjlNrTqXCfyZ4\nhfVfc2FpDqQtbtOqbpxGHEdxCZEEzzFXoOXtr7fQTsR+xS+kTky2NgeuaWz+hia4\nX6FvZAFyW7SeyKvMAvyWWmHamxGPmwIjnyVGXmK9YO7l8XE4dlXJrda5Byoli/rG\nT1V7zlau3G/WIOprWbQnn5U5wpvd0/6dPZpjgOM5axrJ97efUr0eAhTyvA6tB+59\nfSE2Hw82e4Q+pA2VEIvdqtlmFS++G1+7wl+l6RXlJK8DzvnPgQrnckMPECW7BUlw\nXOkDT6uxKwUAHKgvQzn1TnNwOYS9s3ZZiXiHxz4vwzRz87here71xhMlxfk21NE=\n=jIXk\n-----END PGP SIGNATURE-----\n", "payload": "tree 92d3e9f2f78de13e4967a7300fd1cfbbe1527c4a\nparent 7baf48ffc0eb94f15165191d5b2808822995ac82\nparent a79059d42d8f6b1e2c2f109aa55a8ff98f4eb453\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1604294078 +0900\ncommitter GitHub <noreply@github.com> 1604294078 +0900\n\nRollup merge of #78627 - est31:total_cmp_no_superset, r=m-ou-se\n\nPoint out that total_cmp is no strict superset of partial comparison\n\nPartial comparison and total_cmp are not equal. This helps\npreventing the mistake of creating float wrappers that\nbase their Ord impl on total_cmp and their PartialOrd impl on\nthe PartialOrd impl of the float type. PartialOrd and Ord\n[are required to agree with each other](https://doc.rust-lang.org/std/cmp/trait.Ord.html#how-can-i-implement-ord).\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fb7948e7c1aa0ff6ce4cbde45cde2384d1d1ba10", "html_url": "https://github.com/rust-lang/rust/commit/fb7948e7c1aa0ff6ce4cbde45cde2384d1d1ba10", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fb7948e7c1aa0ff6ce4cbde45cde2384d1d1ba10/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7baf48ffc0eb94f15165191d5b2808822995ac82", "url": "https://api.github.com/repos/rust-lang/rust/commits/7baf48ffc0eb94f15165191d5b2808822995ac82", "html_url": "https://github.com/rust-lang/rust/commit/7baf48ffc0eb94f15165191d5b2808822995ac82"}, {"sha": "a79059d42d8f6b1e2c2f109aa55a8ff98f4eb453", "url": "https://api.github.com/repos/rust-lang/rust/commits/a79059d42d8f6b1e2c2f109aa55a8ff98f4eb453", "html_url": "https://github.com/rust-lang/rust/commit/a79059d42d8f6b1e2c2f109aa55a8ff98f4eb453"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "86e6352d132155340662a9dff6fc4a67da78688d", "filename": "library/core/src/num/f32.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fb7948e7c1aa0ff6ce4cbde45cde2384d1d1ba10/library%2Fcore%2Fsrc%2Fnum%2Ff32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb7948e7c1aa0ff6ce4cbde45cde2384d1d1ba10/library%2Fcore%2Fsrc%2Fnum%2Ff32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Ff32.rs?ref=fb7948e7c1aa0ff6ce4cbde45cde2384d1d1ba10", "patch": "@@ -876,6 +876,10 @@ impl f32 {\n     /// - Positive signaling NaN\n     /// - Positive quiet NaN\n     ///\n+    /// Note that this function does not always agree with the [`PartialOrd`]\n+    /// and [`PartialEq`] implementations of `f32`. In particular, they regard\n+    /// negative and positive zero as equal, while `total_cmp` doesn't.\n+    ///\n     /// # Example\n     /// ```\n     /// #![feature(total_cmp)]"}, {"sha": "9b1405b479f7c3d2b7766704d9cac04a7ff5dc89", "filename": "library/core/src/num/f64.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fb7948e7c1aa0ff6ce4cbde45cde2384d1d1ba10/library%2Fcore%2Fsrc%2Fnum%2Ff64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb7948e7c1aa0ff6ce4cbde45cde2384d1d1ba10/library%2Fcore%2Fsrc%2Fnum%2Ff64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Ff64.rs?ref=fb7948e7c1aa0ff6ce4cbde45cde2384d1d1ba10", "patch": "@@ -890,6 +890,10 @@ impl f64 {\n     /// - Positive signaling NaN\n     /// - Positive quiet NaN\n     ///\n+    /// Note that this function does not always agree with the [`PartialOrd`]\n+    /// and [`PartialEq`] implementations of `f64`. In particular, they regard\n+    /// negative and positive zero as equal, while `total_cmp` doesn't.\n+    ///\n     /// # Example\n     /// ```\n     /// #![feature(total_cmp)]"}]}