{"sha": "14c426da99b06c35aa820b2d6845134d09dbe2c3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE0YzQyNmRhOTliMDZjMzVhYTgyMGIyZDY4NDUxMzRkMDlkYmUyYzM=", "commit": {"author": {"name": "Sunjay Varma", "email": "varma.sunjay@gmail.com", "date": "2017-10-10T21:56:24Z"}, "committer": {"name": "Sunjay Varma", "email": "varma.sunjay@gmail.com", "date": "2017-10-18T02:14:14Z"}, "message": "Removed Generics from FnKind::ItemFn in libsyntax", "tree": {"sha": "50276e2ae888042839006101c2dd1405a4aa7925", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/50276e2ae888042839006101c2dd1405a4aa7925"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/14c426da99b06c35aa820b2d6845134d09dbe2c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/14c426da99b06c35aa820b2d6845134d09dbe2c3", "html_url": "https://github.com/rust-lang/rust/commit/14c426da99b06c35aa820b2d6845134d09dbe2c3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/14c426da99b06c35aa820b2d6845134d09dbe2c3/comments", "author": {"login": "sunjay", "id": 530939, "node_id": "MDQ6VXNlcjUzMDkzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/530939?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunjay", "html_url": "https://github.com/sunjay", "followers_url": "https://api.github.com/users/sunjay/followers", "following_url": "https://api.github.com/users/sunjay/following{/other_user}", "gists_url": "https://api.github.com/users/sunjay/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunjay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunjay/subscriptions", "organizations_url": "https://api.github.com/users/sunjay/orgs", "repos_url": "https://api.github.com/users/sunjay/repos", "events_url": "https://api.github.com/users/sunjay/events{/privacy}", "received_events_url": "https://api.github.com/users/sunjay/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sunjay", "id": 530939, "node_id": "MDQ6VXNlcjUzMDkzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/530939?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunjay", "html_url": "https://github.com/sunjay", "followers_url": "https://api.github.com/users/sunjay/followers", "following_url": "https://api.github.com/users/sunjay/following{/other_user}", "gists_url": "https://api.github.com/users/sunjay/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunjay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunjay/subscriptions", "organizations_url": "https://api.github.com/users/sunjay/orgs", "repos_url": "https://api.github.com/users/sunjay/repos", "events_url": "https://api.github.com/users/sunjay/events{/privacy}", "received_events_url": "https://api.github.com/users/sunjay/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "86ae34900f68903006913f374a7860e25c502057", "url": "https://api.github.com/repos/rust-lang/rust/commits/86ae34900f68903006913f374a7860e25c502057", "html_url": "https://github.com/rust-lang/rust/commit/86ae34900f68903006913f374a7860e25c502057"}], "stats": {"total": 15, "additions": 7, "deletions": 8}, "files": [{"sha": "884049532669e92e9f167d9dc3a1435eda10053f", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/14c426da99b06c35aa820b2d6845134d09dbe2c3/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14c426da99b06c35aa820b2d6845134d09dbe2c3/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=14c426da99b06c35aa820b2d6845134d09dbe2c3", "patch": "@@ -718,8 +718,7 @@ impl<'a, 'tcx> Visitor<'tcx> for Resolver<'a> {\n                 _: Span,\n                 node_id: NodeId) {\n         let rib_kind = match function_kind {\n-            FnKind::ItemFn(_, generics, ..) => {\n-                self.visit_generics(generics);\n+            FnKind::ItemFn(..) => {\n                 ItemRibKind\n             }\n             FnKind::Method(_, sig, _, _) => {"}, {"sha": "326f8cef6b3ea3e6b52b7b60ca65b9961f3c3169", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/14c426da99b06c35aa820b2d6845134d09dbe2c3/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14c426da99b06c35aa820b2d6845134d09dbe2c3/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=14c426da99b06c35aa820b2d6845134d09dbe2c3", "patch": "@@ -1526,7 +1526,7 @@ impl<'a> Visitor<'a> for PostExpansionVisitor<'a> {\n                 span: Span,\n                 _node_id: NodeId) {\n         // check for const fn declarations\n-        if let FnKind::ItemFn(_, _, _, Spanned { node: ast::Constness::Const, .. }, _, _, _) =\n+        if let FnKind::ItemFn(_, _, Spanned { node: ast::Constness::Const, .. }, _, _, _) =\n             fn_kind {\n             gate_feature_post!(&self, const_fn, span, \"const fn is unstable\");\n         }\n@@ -1536,7 +1536,7 @@ impl<'a> Visitor<'a> for PostExpansionVisitor<'a> {\n         // point.\n \n         match fn_kind {\n-            FnKind::ItemFn(_, _, _, _, abi, _, _) |\n+            FnKind::ItemFn(_, _, _, abi, _, _) |\n             FnKind::Method(_, &ast::MethodSig { abi, .. }, _, _) => {\n                 self.check_abi(abi, span);\n             }"}, {"sha": "078a63cba20b84ff072e715d60b09649af867143", "filename": "src/libsyntax/visit.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/14c426da99b06c35aa820b2d6845134d09dbe2c3/src%2Flibsyntax%2Fvisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14c426da99b06c35aa820b2d6845134d09dbe2c3/src%2Flibsyntax%2Fvisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fvisit.rs?ref=14c426da99b06c35aa820b2d6845134d09dbe2c3", "patch": "@@ -31,7 +31,7 @@ use codemap::Spanned;\n #[derive(Copy, Clone, PartialEq, Eq)]\n pub enum FnKind<'a> {\n     /// fn foo() or extern \"Abi\" fn foo()\n-    ItemFn(Ident, &'a Generics, Unsafety, Spanned<Constness>, Abi, &'a Visibility, &'a Block),\n+    ItemFn(Ident, Unsafety, Spanned<Constness>, Abi, &'a Visibility, &'a Block),\n \n     /// fn foo(&self)\n     Method(Ident, &'a MethodSig, Option<&'a Visibility>, &'a Block),\n@@ -247,7 +247,8 @@ pub fn walk_item<'a, V: Visitor<'a>>(visitor: &mut V, item: &'a Item) {\n             visitor.visit_expr(expr);\n         }\n         ItemKind::Fn(ref declaration, unsafety, constness, abi, ref generics, ref body) => {\n-            visitor.visit_fn(FnKind::ItemFn(item.ident, generics, unsafety,\n+            visitor.visit_generics(generics);\n+            visitor.visit_fn(FnKind::ItemFn(item.ident, unsafety,\n                                             constness, abi, &item.vis, body),\n                              declaration,\n                              item.span,\n@@ -538,8 +539,7 @@ pub fn walk_fn<'a, V>(visitor: &mut V, kind: FnKind<'a>, declaration: &'a FnDecl\n     where V: Visitor<'a>,\n {\n     match kind {\n-        FnKind::ItemFn(_, generics, _, _, _, _, body) => {\n-            visitor.visit_generics(generics);\n+        FnKind::ItemFn(_, _, _, _, _, body) => {\n             walk_fn_decl(visitor, declaration);\n             visitor.visit_block(body);\n         }"}]}