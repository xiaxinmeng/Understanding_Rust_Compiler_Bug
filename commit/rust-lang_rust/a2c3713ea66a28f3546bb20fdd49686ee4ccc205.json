{"sha": "a2c3713ea66a28f3546bb20fdd49686ee4ccc205", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEyYzM3MTNlYTY2YTI4ZjM1NDZiYjIwZmRkNDk2ODZlZTRjY2MyMDU=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-07-13T18:56:40Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-07-13T18:56:40Z"}, "message": "Rollup merge of #52003 - Kerollmops:option-replace, r=Kimundi\n\nImplement `Option::replace` in the core library\n\nHere is the implementation of the `Option::replace` method. The first step of [the tracking issue #51998](https://github.com/rust-lang/rust/issues/51998).", "tree": {"sha": "656619a587e51f93bd4743f8ed018995fade92f6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/656619a587e51f93bd4743f8ed018995fade92f6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a2c3713ea66a28f3546bb20fdd49686ee4ccc205", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbSPXoCRBK7hj4Ov3rIwAAdHIIAFfFbA2lF8NJx0lkgUOmrSzj\nGCE/QzM/x+rK4EKk8ClgBWldjBs1Y3ZdKKJMeRhq4bI7VpggOqplWBEPsCgW3Ioa\nw1nnRAim9qIKInPepdCtz2I1eivVfUVMzKOBCxTKzzhMlP8csFTNoziJUP9E7Htk\nYkkRle09CY3hiXtO91mQMcOFK7JE2Ogg3gpGf393mtB7ma1M2k+kRv5YyvOQv6eM\nBiONpdWQ4ZdryseKd1qaS7uLDYhY2lXpEtABORcjSScEnDg3+GGsmLD9Y3oWU498\n7KvXWJ/twXTsVsAR0r+M//w9IrNFsdYF+XwquC8AWX3KwsemUypcIECFqtYBbGg=\n=UV6S\n-----END PGP SIGNATURE-----\n", "payload": "tree 656619a587e51f93bd4743f8ed018995fade92f6\nparent d8b84027848772fb99d4abf0450781cfd0d0b786\nparent c8f0e6f210caccdaea7dc59fd970c81018ddfb00\nauthor kennytm <kennytm@gmail.com> 1531508200 +0800\ncommitter GitHub <noreply@github.com> 1531508200 +0800\n\nRollup merge of #52003 - Kerollmops:option-replace, r=Kimundi\n\nImplement `Option::replace` in the core library\n\nHere is the implementation of the `Option::replace` method. The first step of [the tracking issue #51998](https://github.com/rust-lang/rust/issues/51998).\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a2c3713ea66a28f3546bb20fdd49686ee4ccc205", "html_url": "https://github.com/rust-lang/rust/commit/a2c3713ea66a28f3546bb20fdd49686ee4ccc205", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a2c3713ea66a28f3546bb20fdd49686ee4ccc205/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d8b84027848772fb99d4abf0450781cfd0d0b786", "url": "https://api.github.com/repos/rust-lang/rust/commits/d8b84027848772fb99d4abf0450781cfd0d0b786", "html_url": "https://github.com/rust-lang/rust/commit/d8b84027848772fb99d4abf0450781cfd0d0b786"}, {"sha": "c8f0e6f210caccdaea7dc59fd970c81018ddfb00", "url": "https://api.github.com/repos/rust-lang/rust/commits/c8f0e6f210caccdaea7dc59fd970c81018ddfb00", "html_url": "https://github.com/rust-lang/rust/commit/c8f0e6f210caccdaea7dc59fd970c81018ddfb00"}], "stats": {"total": 43, "additions": 43, "deletions": 0}, "files": [{"sha": "f3e823670aaaba907d3871911e0aa39f1274363a", "filename": "src/libcore/option.rs", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/a2c3713ea66a28f3546bb20fdd49686ee4ccc205/src%2Flibcore%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2c3713ea66a28f3546bb20fdd49686ee4ccc205/src%2Flibcore%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Foption.rs?ref=a2c3713ea66a28f3546bb20fdd49686ee4ccc205", "patch": "@@ -845,6 +845,33 @@ impl<T> Option<T> {\n     pub fn take(&mut self) -> Option<T> {\n         mem::replace(self, None)\n     }\n+\n+    /// Replaces the actual value in the option by the value given in parameter,\n+    /// returning the old value if present,\n+    /// leaving a [`Some`] in its place without deinitializing either one.\n+    ///\n+    /// [`Some`]: #variant.Some\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// #![feature(option_replace)]\n+    ///\n+    /// let mut x = Some(2);\n+    /// let old = x.replace(5);\n+    /// assert_eq!(x, Some(5));\n+    /// assert_eq!(old, Some(2));\n+    ///\n+    /// let mut x = None;\n+    /// let old = x.replace(3);\n+    /// assert_eq!(x, Some(3));\n+    /// assert_eq!(old, None);\n+    /// ```\n+    #[inline]\n+    #[unstable(feature = \"option_replace\", issue = \"51998\")]\n+    pub fn replace(&mut self, value: T) -> Option<T> {\n+        mem::replace(self, Some(value))\n+    }\n }\n \n impl<'a, T: Clone> Option<&'a T> {"}, {"sha": "ca7db6e4639a522cd1b9c35b6f686f3fd1f261c4", "filename": "src/libcore/tests/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a2c3713ea66a28f3546bb20fdd49686ee4ccc205/src%2Flibcore%2Ftests%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2c3713ea66a28f3546bb20fdd49686ee4ccc205/src%2Flibcore%2Ftests%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftests%2Flib.rs?ref=a2c3713ea66a28f3546bb20fdd49686ee4ccc205", "patch": "@@ -44,6 +44,7 @@\n #![feature(reverse_bits)]\n #![feature(iterator_find_map)]\n #![feature(slice_internals)]\n+#![feature(option_replace)]\n \n extern crate core;\n extern crate test;"}, {"sha": "bc3e61a4f541f71f86d62aaee68119b9888d7102", "filename": "src/libcore/tests/option.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/a2c3713ea66a28f3546bb20fdd49686ee4ccc205/src%2Flibcore%2Ftests%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2c3713ea66a28f3546bb20fdd49686ee4ccc205/src%2Flibcore%2Ftests%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftests%2Foption.rs?ref=a2c3713ea66a28f3546bb20fdd49686ee4ccc205", "patch": "@@ -297,3 +297,18 @@ fn test_try() {\n     }\n     assert_eq!(try_option_err(), Err(NoneError));\n }\n+\n+#[test]\n+fn test_replace() {\n+    let mut x = Some(2);\n+    let old = x.replace(5);\n+\n+    assert_eq!(x, Some(5));\n+    assert_eq!(old, Some(2));\n+\n+    let mut x = None;\n+    let old = x.replace(3);\n+\n+    assert_eq!(x, Some(3));\n+    assert_eq!(old, None);\n+}"}]}