{"sha": "d708a4072a9fa35be3cb6a1e74557925507ba606", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ3MDhhNDA3MmE5ZmEzNWJlM2NiNmExZTc0NTU3OTI1NTA3YmE2MDY=", "commit": {"author": {"name": "James Miller", "email": "james@aatch.net", "date": "2017-02-08T09:19:22Z"}, "committer": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2017-03-10T00:55:39Z"}, "message": "Add extra methods to IndexVec and implement TypeFoldable for it\n\nAdds `get`/`get_mut` accessors and `drain`/`drain_enumerated` iterators\nto IndexVec.\n\nImplements TypeFoldable for IndexVec.", "tree": {"sha": "70c0bb012cf2547b7156f16a5b6ca09c7f7aa5c1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/70c0bb012cf2547b7156f16a5b6ca09c7f7aa5c1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d708a4072a9fa35be3cb6a1e74557925507ba606", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d708a4072a9fa35be3cb6a1e74557925507ba606", "html_url": "https://github.com/rust-lang/rust/commit/d708a4072a9fa35be3cb6a1e74557925507ba606", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d708a4072a9fa35be3cb6a1e74557925507ba606/comments", "author": {"login": "Aatch", "id": 342416, "node_id": "MDQ6VXNlcjM0MjQxNg==", "avatar_url": "https://avatars.githubusercontent.com/u/342416?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aatch", "html_url": "https://github.com/Aatch", "followers_url": "https://api.github.com/users/Aatch/followers", "following_url": "https://api.github.com/users/Aatch/following{/other_user}", "gists_url": "https://api.github.com/users/Aatch/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aatch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aatch/subscriptions", "organizations_url": "https://api.github.com/users/Aatch/orgs", "repos_url": "https://api.github.com/users/Aatch/repos", "events_url": "https://api.github.com/users/Aatch/events{/privacy}", "received_events_url": "https://api.github.com/users/Aatch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ec87925325c005922977ebf9b10dc9e98d8a6d40", "url": "https://api.github.com/repos/rust-lang/rust/commits/ec87925325c005922977ebf9b10dc9e98d8a6d40", "html_url": "https://github.com/rust-lang/rust/commit/ec87925325c005922977ebf9b10dc9e98d8a6d40"}], "stats": {"total": 35, "additions": 35, "deletions": 0}, "files": [{"sha": "49824e8a738d7a74e5a5204d31cfa1a5cbc6ef70", "filename": "src/librustc/ty/structural_impls.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/d708a4072a9fa35be3cb6a1e74557925507ba606/src%2Flibrustc%2Fty%2Fstructural_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d708a4072a9fa35be3cb6a1e74557925507ba606/src%2Flibrustc%2Fty%2Fstructural_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fstructural_impls.rs?ref=d708a4072a9fa35be3cb6a1e74557925507ba606", "patch": "@@ -12,6 +12,7 @@ use infer::type_variable;\n use ty::{self, Lift, Ty, TyCtxt};\n use ty::fold::{TypeFoldable, TypeFolder, TypeVisitor};\n use rustc_data_structures::accumulate_vec::AccumulateVec;\n+use rustc_data_structures::indexed_vec::{IndexVec, Idx};\n \n use std::rc::Rc;\n use syntax::abi;\n@@ -834,3 +835,13 @@ impl<'tcx, T: TypeFoldable<'tcx>> TypeFoldable<'tcx> for ty::error::ExpectedFoun\n         self.expected.visit_with(visitor) || self.found.visit_with(visitor)\n     }\n }\n+\n+impl<'tcx, T: TypeFoldable<'tcx>, I: Idx> TypeFoldable<'tcx> for IndexVec<I, T> {\n+    fn super_fold_with<'gcx: 'tcx, F: TypeFolder<'gcx, 'tcx>>(&self, folder: &mut F) -> Self {\n+        self.iter().map(|x| x.fold_with(folder)).collect()\n+    }\n+\n+    fn super_visit_with<V: TypeVisitor<'tcx>>(&self, visitor: &mut V) -> bool {\n+        self.iter().any(|t| t.visit_with(visitor))\n+    }\n+}"}, {"sha": "3f478d7c165d13b1b903e35e0f72f2b53678d5d6", "filename": "src/librustc_data_structures/indexed_vec.rs", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/d708a4072a9fa35be3cb6a1e74557925507ba606/src%2Flibrustc_data_structures%2Findexed_vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d708a4072a9fa35be3cb6a1e74557925507ba606/src%2Flibrustc_data_structures%2Findexed_vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Findexed_vec.rs?ref=d708a4072a9fa35be3cb6a1e74557925507ba606", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use std::collections::range::RangeArgument;\n use std::fmt::Debug;\n use std::iter::{self, FromIterator};\n use std::slice;\n@@ -145,6 +146,18 @@ impl<I: Idx, T> IndexVec<I, T> {\n         self.raw.iter_mut().enumerate().map(IntoIdx { _marker: PhantomData })\n     }\n \n+    #[inline]\n+    pub fn drain<'a, R: RangeArgument<usize>>(\n+        &'a mut self, range: R) -> impl Iterator<Item=T> + 'a {\n+        self.raw.drain(range)\n+    }\n+\n+    #[inline]\n+    pub fn drain_enumerated<'a, R: RangeArgument<usize>>(\n+        &'a mut self, range: R) -> impl Iterator<Item=(I, T)> + 'a {\n+        self.raw.drain(range).enumerate().map(IntoIdx { _marker: PhantomData })\n+    }\n+\n     #[inline]\n     pub fn last(&self) -> Option<I> {\n         self.len().checked_sub(1).map(I::new)\n@@ -164,6 +177,16 @@ impl<I: Idx, T> IndexVec<I, T> {\n     pub fn truncate(&mut self, a: usize) {\n         self.raw.truncate(a)\n     }\n+\n+    #[inline]\n+    pub fn get(&self, index: I) -> Option<&T> {\n+        self.raw.get(index.index())\n+    }\n+\n+    #[inline]\n+    pub fn get_mut(&mut self, index: I) -> Option<&mut T> {\n+        self.raw.get_mut(index.index())\n+    }\n }\n \n impl<I: Idx, T> Index<I> for IndexVec<I, T> {"}, {"sha": "f278325ebec74b81281a3ae5d0604b1a686b3366", "filename": "src/librustc_data_structures/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d708a4072a9fa35be3cb6a1e74557925507ba606/src%2Flibrustc_data_structures%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d708a4072a9fa35be3cb6a1e74557925507ba606/src%2Flibrustc_data_structures%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Flib.rs?ref=d708a4072a9fa35be3cb6a1e74557925507ba606", "patch": "@@ -38,6 +38,7 @@\n #![feature(associated_consts)]\n #![feature(unsize)]\n #![feature(i128_type)]\n+#![feature(conservative_impl_trait)]\n \n #![cfg_attr(unix, feature(libc))]\n #![cfg_attr(test, feature(test))]"}]}