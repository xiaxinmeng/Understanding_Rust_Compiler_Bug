{"sha": "12d141561dcd33d3074e09351df46c7129ce46ce", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEyZDE0MTU2MWRjZDMzZDMwNzRlMDkzNTFkZjQ2YzcxMjljZTQ2Y2U=", "commit": {"author": {"name": "gaurikholkar", "email": "f2013002@goa.bits-pilani.ac.in", "date": "2018-04-05T17:19:09Z"}, "committer": {"name": "gaurikholkar", "email": "f2013002@goa.bits-pilani.ac.in", "date": "2018-04-05T17:19:09Z"}, "message": "tidy fixes", "tree": {"sha": "788cd40695e6d618891008ef2ac701e79f46d1d1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/788cd40695e6d618891008ef2ac701e79f46d1d1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/12d141561dcd33d3074e09351df46c7129ce46ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/12d141561dcd33d3074e09351df46c7129ce46ce", "html_url": "https://github.com/rust-lang/rust/commit/12d141561dcd33d3074e09351df46c7129ce46ce", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/12d141561dcd33d3074e09351df46c7129ce46ce/comments", "author": {"login": "gaurikholkar", "id": 117768111, "node_id": "U_kgDOBwT_rw", "avatar_url": "https://avatars.githubusercontent.com/u/117768111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gaurikholkar", "html_url": "https://github.com/gaurikholkar", "followers_url": "https://api.github.com/users/gaurikholkar/followers", "following_url": "https://api.github.com/users/gaurikholkar/following{/other_user}", "gists_url": "https://api.github.com/users/gaurikholkar/gists{/gist_id}", "starred_url": "https://api.github.com/users/gaurikholkar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gaurikholkar/subscriptions", "organizations_url": "https://api.github.com/users/gaurikholkar/orgs", "repos_url": "https://api.github.com/users/gaurikholkar/repos", "events_url": "https://api.github.com/users/gaurikholkar/events{/privacy}", "received_events_url": "https://api.github.com/users/gaurikholkar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "gaurikholkar", "id": 117768111, "node_id": "U_kgDOBwT_rw", "avatar_url": "https://avatars.githubusercontent.com/u/117768111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gaurikholkar", "html_url": "https://github.com/gaurikholkar", "followers_url": "https://api.github.com/users/gaurikholkar/followers", "following_url": "https://api.github.com/users/gaurikholkar/following{/other_user}", "gists_url": "https://api.github.com/users/gaurikholkar/gists{/gist_id}", "starred_url": "https://api.github.com/users/gaurikholkar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gaurikholkar/subscriptions", "organizations_url": "https://api.github.com/users/gaurikholkar/orgs", "repos_url": "https://api.github.com/users/gaurikholkar/repos", "events_url": "https://api.github.com/users/gaurikholkar/events{/privacy}", "received_events_url": "https://api.github.com/users/gaurikholkar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c1192065ea02612989f71fe03808011323fd7378", "url": "https://api.github.com/repos/rust-lang/rust/commits/c1192065ea02612989f71fe03808011323fd7378", "html_url": "https://github.com/rust-lang/rust/commit/c1192065ea02612989f71fe03808011323fd7378"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "636909d096e186986e1b084b9ef31d0c2ba8967b", "filename": "src/librustc_mir/borrow_check/mod.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/12d141561dcd33d3074e09351df46c7129ce46ce/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/12d141561dcd33d3074e09351df46c7129ce46ce/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs?ref=12d141561dcd33d3074e09351df46c7129ce46ce", "patch": "@@ -1553,7 +1553,8 @@ impl<'cx, 'gcx, 'tcx> MirBorrowckCtxt<'cx, 'gcx, 'tcx> {\n \n                 if place != place_err {\n                     if let Some(name) = self.describe_place(place_err) {\n-                        err.note(&format!(\"the value which is causing this path not to be mutable is...: `{}`\", name));\n+                        err.note(&format!(\"the value which is causing this path not to be mutable \\\n+                                           is...: `{}`\", name));\n                     }\n                 }\n \n@@ -1580,7 +1581,8 @@ impl<'cx, 'gcx, 'tcx> MirBorrowckCtxt<'cx, 'gcx, 'tcx> {\n                                                 } else {\n                                                     self.get_main_error_message(place)\n                                                 };\n-                                                err_info = Some((self.mir.source_info(locations[0]).span,\n+                                                err_info = Some((\n+                                                    self.mir.source_info(locations[0]).span,\n                                                       \"consider changing this to be a \\\n                                                        mutable reference: `&mut`\", item_msg,\n                                                        \"cannot assign through `&`-reference\"));\n@@ -1608,8 +1610,8 @@ impl<'cx, 'gcx, 'tcx> MirBorrowckCtxt<'cx, 'gcx, 'tcx> {\n                         err.span_label(span, \"cannot mutate\");\n                         if place != place_err {\n                             if let Some(name) = self.describe_place(place_err) {\n-                                err.note(&format!(\"the value which is causing this path not to be mutable is...: `{}`\",\n-                                                  name));\n+                                err.note(&format!(\"the value which is causing this path not to be \\\n+                                                   mutable is...: `{}`\", name));\n                             }\n                         }\n                         err.emit();"}]}