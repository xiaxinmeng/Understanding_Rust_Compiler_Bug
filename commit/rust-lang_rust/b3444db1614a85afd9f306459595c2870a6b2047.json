{"sha": "b3444db1614a85afd9f306459595c2870a6b2047", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIzNDQ0ZGIxNjE0YTg1YWZkOWYzMDY0NTk1OTVjMjg3MGE2YjIwNDc=", "commit": {"author": {"name": "Kevin Cantu", "email": "me@kevincantu.org", "date": "2012-02-08T09:28:23Z"}, "committer": {"name": "Kevin Cantu", "email": "me@kevincantu.org", "date": "2012-02-12T00:39:19Z"}, "message": "core: added a rough char::is_ascii", "tree": {"sha": "f8b42167d36c821859ae564be3b45db2e1e8697a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f8b42167d36c821859ae564be3b45db2e1e8697a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b3444db1614a85afd9f306459595c2870a6b2047", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b3444db1614a85afd9f306459595c2870a6b2047", "html_url": "https://github.com/rust-lang/rust/commit/b3444db1614a85afd9f306459595c2870a6b2047", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b3444db1614a85afd9f306459595c2870a6b2047/comments", "author": {"login": "killerswan", "id": 195060, "node_id": "MDQ6VXNlcjE5NTA2MA==", "avatar_url": "https://avatars.githubusercontent.com/u/195060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/killerswan", "html_url": "https://github.com/killerswan", "followers_url": "https://api.github.com/users/killerswan/followers", "following_url": "https://api.github.com/users/killerswan/following{/other_user}", "gists_url": "https://api.github.com/users/killerswan/gists{/gist_id}", "starred_url": "https://api.github.com/users/killerswan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/killerswan/subscriptions", "organizations_url": "https://api.github.com/users/killerswan/orgs", "repos_url": "https://api.github.com/users/killerswan/repos", "events_url": "https://api.github.com/users/killerswan/events{/privacy}", "received_events_url": "https://api.github.com/users/killerswan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "killerswan", "id": 195060, "node_id": "MDQ6VXNlcjE5NTA2MA==", "avatar_url": "https://avatars.githubusercontent.com/u/195060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/killerswan", "html_url": "https://github.com/killerswan", "followers_url": "https://api.github.com/users/killerswan/followers", "following_url": "https://api.github.com/users/killerswan/following{/other_user}", "gists_url": "https://api.github.com/users/killerswan/gists{/gist_id}", "starred_url": "https://api.github.com/users/killerswan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/killerswan/subscriptions", "organizations_url": "https://api.github.com/users/killerswan/orgs", "repos_url": "https://api.github.com/users/killerswan/repos", "events_url": "https://api.github.com/users/killerswan/events{/privacy}", "received_events_url": "https://api.github.com/users/killerswan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4339307359eaca1ae1fd5de96eec746e96a90564", "url": "https://api.github.com/repos/rust-lang/rust/commits/4339307359eaca1ae1fd5de96eec746e96a90564", "html_url": "https://github.com/rust-lang/rust/commit/4339307359eaca1ae1fd5de96eec746e96a90564"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "2544550bd571653141ee110edb8e61a0a2d4da08", "filename": "src/libcore/char.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/b3444db1614a85afd9f306459595c2870a6b2047/src%2Flibcore%2Fchar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3444db1614a85afd9f306459595c2870a6b2047/src%2Flibcore%2Fchar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fchar.rs?ref=b3444db1614a85afd9f306459595c2870a6b2047", "patch": "@@ -37,6 +37,7 @@ export is_alphabetic,\n        is_XID_start, is_XID_continue,\n        is_lowercase, is_uppercase,\n        is_whitespace, is_alphanumeric,\n+       is_ascii,\n        to_digit, to_lower, to_upper, maybe_digit, cmp;\n \n import is_alphabetic = unicode::derived_property::Alphabetic;\n@@ -84,6 +85,9 @@ pure fn is_alphanumeric(c: char) -> bool {\n         unicode::general_category::No(c);\n }\n \n+pure fn is_ascii(c: char) -> bool {\n+   c - ('\\x7F' & c) == '\\x00'\n+}\n \n #[doc(\n   brief = \"Convert a char to the corresponding digit. \\\n@@ -221,3 +225,10 @@ fn test_to_upper() {\n     //assert (to_upper('\u00fc') == '\u00dc');\n     assert (to_upper('\u00df') == '\u00df');\n }\n+\n+#[test]\n+fn test_ascii() unsafe {\n+   assert str::all(\"banana\", char::is_ascii);\n+   assert ! str::all(\"\u0e1b\u0e23\u0e30\u0e40\u0e17\u0e28\u0e44\u0e17\u0e22\u4e2d\u534eVi\u1ec7t Nam\", char::is_ascii);\n+}\n+"}]}