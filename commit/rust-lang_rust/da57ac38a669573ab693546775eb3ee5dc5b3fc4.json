{"sha": "da57ac38a669573ab693546775eb3ee5dc5b3fc4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRhNTdhYzM4YTY2OTU3M2FiNjkzNTQ2Nzc1ZWIzZWU1ZGM1YjNmYzQ=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-05-22T06:16:46Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-05-24T18:50:21Z"}, "message": "Move diagnostic logic out of parser", "tree": {"sha": "fb2a898b18982a059ac94502dcb3263c3345da9d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fb2a898b18982a059ac94502dcb3263c3345da9d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/da57ac38a669573ab693546775eb3ee5dc5b3fc4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/da57ac38a669573ab693546775eb3ee5dc5b3fc4", "html_url": "https://github.com/rust-lang/rust/commit/da57ac38a669573ab693546775eb3ee5dc5b3fc4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/da57ac38a669573ab693546775eb3ee5dc5b3fc4/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a2f853a69108faab4d45a55cc4f6633a4a517c73", "url": "https://api.github.com/repos/rust-lang/rust/commits/a2f853a69108faab4d45a55cc4f6633a4a517c73", "html_url": "https://github.com/rust-lang/rust/commit/a2f853a69108faab4d45a55cc4f6633a4a517c73"}], "stats": {"total": 39, "additions": 20, "deletions": 19}, "files": [{"sha": "e93c0bdb8336ad4edb696968cc2f51663d6d6a9e", "filename": "src/libsyntax/parse/diagnostics.rs", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/da57ac38a669573ab693546775eb3ee5dc5b3fc4/src%2Flibsyntax%2Fparse%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da57ac38a669573ab693546775eb3ee5dc5b3fc4/src%2Flibsyntax%2Fparse%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fdiagnostics.rs?ref=da57ac38a669573ab693546775eb3ee5dc5b3fc4", "patch": "@@ -614,4 +614,23 @@ impl<'a> Parser<'a> {\n         }\n     }\n \n+    crate fn expected_expression_found(&self) -> DiagnosticBuilder<'a> {\n+        let (span, msg) = match (&self.token, self.subparser_name) {\n+            (&token::Token::Eof, Some(origin)) => {\n+                let sp = self.sess.source_map().next_point(self.span);\n+                (sp, format!( \"expected expression, found end of {}\", origin))\n+            }\n+            _ => (self.span, format!(\n+                \"expected expression, found {}\",\n+                self.this_token_descr(),\n+            )),\n+        };\n+        let mut err = self.struct_span_err(span, &msg);\n+        let sp = self.sess.source_map().start_point(self.span);\n+        if let Some(sp) = self.sess.ambiguous_block_expr_parse.borrow().get(&sp) {\n+            self.sess.expr_parentheses_needed(&mut err, *sp, None);\n+        }\n+        err.span_label(span, \"expected expression\");\n+        err\n+    }\n }"}, {"sha": "56951ae08012a5230d8ddd671c6cc40a7bd80401", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 1, "deletions": 19, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/da57ac38a669573ab693546775eb3ee5dc5b3fc4/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da57ac38a669573ab693546775eb3ee5dc5b3fc4/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=da57ac38a669573ab693546775eb3ee5dc5b3fc4", "patch": "@@ -2601,25 +2601,7 @@ impl<'a> Parser<'a> {\n                         }\n                         Err(mut err) => {\n                             self.cancel(&mut err);\n-                            let (span, msg) = match (&self.token, self.subparser_name) {\n-                                (&token::Token::Eof, Some(origin)) => {\n-                                    let sp = self.sess.source_map().next_point(self.span);\n-                                    (sp, format!( \"expected expression, found end of {}\", origin))\n-                                }\n-                                _ => (self.span, format!(\n-                                    \"expected expression, found {}\",\n-                                    self.this_token_descr(),\n-                                )),\n-                            };\n-                            let mut err = self.struct_span_err(span, &msg);\n-                            let sp = self.sess.source_map().start_point(self.span);\n-                            if let Some(sp) = self.sess.ambiguous_block_expr_parse.borrow()\n-                                .get(&sp)\n-                            {\n-                                self.sess.expr_parentheses_needed(&mut err, *sp, None);\n-                            }\n-                            err.span_label(span, \"expected expression\");\n-                            return Err(err);\n+                            return Err(self.expected_expression_found());\n                         }\n                     }\n                 }"}]}