{"sha": "171d29c9c5bb6fb7cc60702d9c24bee8558c622a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE3MWQyOWM5YzViYjZmYjdjYzYwNzAyZDljMjRiZWU4NTU4YzYyMmE=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-11-05T09:29:57Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-11-05T09:29:57Z"}, "message": "Rollup merge of #78739 - hameerabbasi:issue-78654, r=nikomatsakis\n\nFix ICE on type error in async function\n\nFixes #78654", "tree": {"sha": "0ee21a4fc751207a3d35a37fe2163fc30557b89d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0ee21a4fc751207a3d35a37fe2163fc30557b89d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/171d29c9c5bb6fb7cc60702d9c24bee8558c622a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfo8YWCRBK7hj4Ov3rIwAAdHIIAJ8TJycjmCnAtEilCmLx0wpb\nHuskeO5YLTFkpVcuAVFC1DN0Lm+CZ0fm43m6MlSIGjBbUDKHBxvJ4j4nQNyHNFm9\n18Iz7R+RtK/89xNoj92n4Y7cnyQXH6cjWKKL1uALl1F+6SBej+Ad8E1+cwOfesop\nQaq/XRQyAHfMaGv9j9ybwpnYOQzDOUsLLIFuXaIkLC24QA1U+ZlTtC5gmJhubRTU\ncWyAC6NJcIrtOLi/FEjJYwOWHYRMv6muq2osNJaaPCSUgf/wF1dzw3UtNRn3WuCe\np0GHbS3DsuPNmCw2XPUQzBLCJLoC/C3bo+ichN2XiTJH0mjPOmtjxmfRdcCZJ7k=\n=2JGH\n-----END PGP SIGNATURE-----\n", "payload": "tree 0ee21a4fc751207a3d35a37fe2163fc30557b89d\nparent 86e6afafe1a90ce021c724623fd17765996fc111\nparent a70e0c20c356d99f04a8e05acc402a4148615a38\nauthor Mara Bos <m-ou.se@m-ou.se> 1604568597 +0100\ncommitter GitHub <noreply@github.com> 1604568597 +0100\n\nRollup merge of #78739 - hameerabbasi:issue-78654, r=nikomatsakis\n\nFix ICE on type error in async function\n\nFixes #78654\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/171d29c9c5bb6fb7cc60702d9c24bee8558c622a", "html_url": "https://github.com/rust-lang/rust/commit/171d29c9c5bb6fb7cc60702d9c24bee8558c622a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/171d29c9c5bb6fb7cc60702d9c24bee8558c622a/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "86e6afafe1a90ce021c724623fd17765996fc111", "url": "https://api.github.com/repos/rust-lang/rust/commits/86e6afafe1a90ce021c724623fd17765996fc111", "html_url": "https://github.com/rust-lang/rust/commit/86e6afafe1a90ce021c724623fd17765996fc111"}, {"sha": "a70e0c20c356d99f04a8e05acc402a4148615a38", "url": "https://api.github.com/repos/rust-lang/rust/commits/a70e0c20c356d99f04a8e05acc402a4148615a38", "html_url": "https://github.com/rust-lang/rust/commit/a70e0c20c356d99f04a8e05acc402a4148615a38"}], "stats": {"total": 55, "additions": 55, "deletions": 0}, "files": [{"sha": "2ba05071c05000f5e046c10014c1fc356dd66a6f", "filename": "compiler/rustc_typeck/src/check/closure.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/171d29c9c5bb6fb7cc60702d9c24bee8558c622a/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fclosure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/171d29c9c5bb6fb7cc60702d9c24bee8558c622a/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fclosure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fclosure.rs?ref=171d29c9c5bb6fb7cc60702d9c24bee8558c622a", "patch": "@@ -605,6 +605,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         let ret_ty = self.inh.infcx.shallow_resolve(ret_ty);\n         let ret_vid = match *ret_ty.kind() {\n             ty::Infer(ty::TyVar(ret_vid)) => ret_vid,\n+            ty::Error(_) => return None,\n             _ => span_bug!(\n                 self.tcx.def_span(expr_def_id),\n                 \"async fn generator return type not an inference variable\""}, {"sha": "ff0260523db3b6665fdf283bd39c2e1b347ff646", "filename": "src/test/ui/async-await/issues/issue-78654.full.stderr", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/171d29c9c5bb6fb7cc60702d9c24bee8558c622a/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-78654.full.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/171d29c9c5bb6fb7cc60702d9c24bee8558c622a/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-78654.full.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-78654.full.stderr?ref=171d29c9c5bb6fb7cc60702d9c24bee8558c622a", "patch": "@@ -0,0 +1,19 @@\n+error[E0573]: expected type, found built-in attribute `feature`\n+  --> $DIR/issue-78654.rs:10:15\n+   |\n+LL | impl<const H: feature> Foo {\n+   |               ^^^^^^^ not a type\n+\n+error[E0207]: the const parameter `H` is not constrained by the impl trait, self type, or predicates\n+  --> $DIR/issue-78654.rs:10:12\n+   |\n+LL | impl<const H: feature> Foo {\n+   |            ^ unconstrained const parameter\n+   |\n+   = note: expressions using a const parameter must map each value to a distinct output value\n+   = note: proving the result of expressions other than the parameter are unique is not supported\n+\n+error: aborting due to 2 previous errors\n+\n+Some errors have detailed explanations: E0207, E0573.\n+For more information about an error, try `rustc --explain E0207`."}, {"sha": "ff0260523db3b6665fdf283bd39c2e1b347ff646", "filename": "src/test/ui/async-await/issues/issue-78654.min.stderr", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/171d29c9c5bb6fb7cc60702d9c24bee8558c622a/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-78654.min.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/171d29c9c5bb6fb7cc60702d9c24bee8558c622a/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-78654.min.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-78654.min.stderr?ref=171d29c9c5bb6fb7cc60702d9c24bee8558c622a", "patch": "@@ -0,0 +1,19 @@\n+error[E0573]: expected type, found built-in attribute `feature`\n+  --> $DIR/issue-78654.rs:10:15\n+   |\n+LL | impl<const H: feature> Foo {\n+   |               ^^^^^^^ not a type\n+\n+error[E0207]: the const parameter `H` is not constrained by the impl trait, self type, or predicates\n+  --> $DIR/issue-78654.rs:10:12\n+   |\n+LL | impl<const H: feature> Foo {\n+   |            ^ unconstrained const parameter\n+   |\n+   = note: expressions using a const parameter must map each value to a distinct output value\n+   = note: proving the result of expressions other than the parameter are unique is not supported\n+\n+error: aborting due to 2 previous errors\n+\n+Some errors have detailed explanations: E0207, E0573.\n+For more information about an error, try `rustc --explain E0207`."}, {"sha": "b57ed35f8e369c69b2cfe491bf8ad5801c26fe70", "filename": "src/test/ui/async-await/issues/issue-78654.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/171d29c9c5bb6fb7cc60702d9c24bee8558c622a/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-78654.rs", "raw_url": "https://github.com/rust-lang/rust/raw/171d29c9c5bb6fb7cc60702d9c24bee8558c622a/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-78654.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-78654.rs?ref=171d29c9c5bb6fb7cc60702d9c24bee8558c622a", "patch": "@@ -0,0 +1,16 @@\n+// edition:2018\n+// revisions: full min\n+\n+#![cfg_attr(full, feature(const_generics))]\n+#![cfg_attr(full, allow(incomplete_features))]\n+#![cfg_attr(min, feature(min_const_generics))]\n+\n+struct Foo;\n+\n+impl<const H: feature> Foo {\n+//~^ ERROR: expected type, found built-in attribute `feature`\n+//~^^ ERROR: the const parameter `H` is not constrained by the impl trait, self type, or predicates\n+    async fn biz() {}\n+}\n+\n+fn main() {}"}]}