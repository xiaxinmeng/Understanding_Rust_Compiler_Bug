{"sha": "91c155bcd7af54fba0b705de1a2c2d55fa9788fa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkxYzE1NWJjZDdhZjU0ZmJhMGI3MDVkZTFhMmMyZDU1ZmE5Nzg4ZmE=", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2018-11-27T14:15:27Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2018-12-30T13:47:12Z"}, "message": "Change return types and check return values in tests.\n\nThis allows to verify that we handle\ndifferent types as return types,\nand that we call the expected functions.", "tree": {"sha": "faa8e81cbd77754573b3e28e991e3698b53d5fdd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/faa8e81cbd77754573b3e28e991e3698b53d5fdd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/91c155bcd7af54fba0b705de1a2c2d55fa9788fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/91c155bcd7af54fba0b705de1a2c2d55fa9788fa", "html_url": "https://github.com/rust-lang/rust/commit/91c155bcd7af54fba0b705de1a2c2d55fa9788fa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/91c155bcd7af54fba0b705de1a2c2d55fa9788fa/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2530ce9fa63a756d655b8e0801b4542c74ec4cae", "url": "https://api.github.com/repos/rust-lang/rust/commits/2530ce9fa63a756d655b8e0801b4542c74ec4cae", "html_url": "https://github.com/rust-lang/rust/commit/2530ce9fa63a756d655b8e0801b4542c74ec4cae"}], "stats": {"total": 29, "additions": 20, "deletions": 9}, "files": [{"sha": "56378b59e3642cd986b4c56e25a2b052acea7b52", "filename": "src/test/run-pass/issue-18952.rs", "status": "renamed", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/91c155bcd7af54fba0b705de1a2c2d55fa9788fa/src%2Ftest%2Frun-pass%2Fissue-18952.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91c155bcd7af54fba0b705de1a2c2d55fa9788fa/src%2Ftest%2Frun-pass%2Fissue-18952.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-18952.rs?ref=91c155bcd7af54fba0b705de1a2c2d55fa9788fa", "patch": "@@ -9,41 +9,48 @@ struct Foo;\n impl Fn<(isize, isize)> for Foo {\n     extern \"rust-call\" fn call(&self, args: (isize, isize)) -> Self::Output {\n         println!(\"{:?}\", args);\n+        (args.0 + 1, args.1 + 1)\n     }\n }\n \n impl FnMut<(isize, isize)> for Foo {\n     extern \"rust-call\" fn call_mut(&mut self, args: (isize, isize)) -> Self::Output {\n         println!(\"{:?}\", args);\n+        (args.0 + 1, args.1 + 1)\n     }\n }\n \n impl FnOnce<(isize, isize)> for Foo {\n-    type Output = ();\n+    type Output = (isize, isize);\n     extern \"rust-call\" fn call_once(self, args: (isize, isize)) -> Self::Output {\n         println!(\"{:?}\", args);\n+        (args.0 + 1, args.1 + 1)\n     }\n }\n \n impl Fn<(isize, isize, isize)> for Foo {\n     extern \"rust-call\" fn call(&self, args: (isize, isize, isize)) -> Self::Output {\n         println!(\"{:?}\", args);\n+        (args.0 + 3, args.1 + 3, args.2 + 3)\n     }\n }\n \n impl FnMut<(isize, isize, isize)> for Foo {\n     extern \"rust-call\" fn call_mut(&mut self, args: (isize, isize, isize)) -> Self::Output {\n         println!(\"{:?}\", args);\n+        (args.0 + 3, args.1 + 3, args.2 + 3)\n     }\n }\n impl FnOnce<(isize, isize, isize)> for Foo {\n-    type Output = ();\n+    type Output = (isize, isize, isize);\n     extern \"rust-call\" fn call_once(self, args: (isize, isize, isize)) -> Self::Output {\n         println!(\"{:?}\", args);\n+        (args.0 + 3, args.1 + 3, args.2 + 3)\n     }\n }\n \n fn main() {\n     let foo = Foo;\n-    foo(1, 1);\n+    assert_eq!(foo(1, 1), (2, 2));\n+    assert_eq!(foo(1, 1, 1), (4, 4, 4));\n }", "previous_filename": "src/test/ui/issue-18952.rs"}, {"sha": "9e104ce6c4f30b8c1a438a9c1e7d055c393b932f", "filename": "src/test/run-pass/issue-45510.rs", "status": "renamed", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/91c155bcd7af54fba0b705de1a2c2d55fa9788fa/src%2Ftest%2Frun-pass%2Fissue-45510.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91c155bcd7af54fba0b705de1a2c2d55fa9788fa/src%2Ftest%2Frun-pass%2Fissue-45510.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-45510.rs?ref=91c155bcd7af54fba0b705de1a2c2d55fa9788fa", "patch": "@@ -4,25 +4,29 @@\n #![feature(fn_traits)]\n #![feature(unboxed_closures)]\n \n+#[derive(Debug, PartialEq, Eq)]\n struct Ishmael;\n+#[derive(Debug, PartialEq, Eq)]\n struct Maybe;\n struct CallMe;\n \n impl FnOnce<(Ishmael,)> for CallMe {\n-    type Output = ();\n-    extern \"rust-call\" fn call_once(self, _args: (Ishmael,)) -> () {\n+    type Output = Ishmael;\n+    extern \"rust-call\" fn call_once(self, _args: (Ishmael,)) -> Ishmael {\n         println!(\"Split your lungs with blood and thunder!\");\n+        Ishmael\n     }\n }\n \n impl FnOnce<(Maybe,)> for CallMe {\n-    type Output = ();\n-    extern \"rust-call\" fn call_once(self, _args: (Maybe,)) -> () {\n+    type Output = Maybe;\n+    extern \"rust-call\" fn call_once(self, _args: (Maybe,)) -> Maybe {\n         println!(\"So we just met, and this is crazy\");\n+        Maybe\n     }\n }\n \n fn main() {\n-    CallMe(Ishmael);\n-    CallMe(Maybe);\n+    assert_eq!(CallMe(Ishmael), Ishmael);\n+    assert_eq!(CallMe(Maybe), Maybe);\n }", "previous_filename": "src/test/ui/issue-45510.rs"}]}