{"sha": "bb7b844d7c47dfcac42a283140a60d2635d42178", "node_id": "C_kwDOAAsO6NoAKGJiN2I4NDRkN2M0N2RmY2FjNDJhMjgzMTQwYTYwZDI2MzVkNDIxNzg", "commit": {"author": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2022-04-09T21:14:35Z"}, "committer": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2022-05-12T00:16:25Z"}, "message": "Rename `unsigned_offset_from` to `sub_ptr`", "tree": {"sha": "d8faf90ecd4de7ea9aa910d6637dfdde6f187426", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d8faf90ecd4de7ea9aa910d6637dfdde6f187426"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bb7b844d7c47dfcac42a283140a60d2635d42178", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bb7b844d7c47dfcac42a283140a60d2635d42178", "html_url": "https://github.com/rust-lang/rust/commit/bb7b844d7c47dfcac42a283140a60d2635d42178", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bb7b844d7c47dfcac42a283140a60d2635d42178/comments", "author": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "06817d1bb34398718c501d67edd6ecc07ca1723e", "url": "https://api.github.com/repos/rust-lang/rust/commits/06817d1bb34398718c501d67edd6ecc07ca1723e", "html_url": "https://github.com/rust-lang/rust/commit/06817d1bb34398718c501d67edd6ecc07ca1723e"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "f7a83373e870bed0b8893c9e36e2a10484078913", "filename": "src/intrinsics/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bb7b844d7c47dfcac42a283140a60d2635d42178/src%2Fintrinsics%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb7b844d7c47dfcac42a283140a60d2635d42178/src%2Fintrinsics%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fintrinsics%2Fmod.rs?ref=bb7b844d7c47dfcac42a283140a60d2635d42178", "patch": "@@ -721,7 +721,7 @@ fn codegen_regular_intrinsic_call<'tcx>(\n             let diff_bytes = fx.bcx.ins().isub(ptr, base);\n             // FIXME this can be an exact division.\n             let diff = if intrinsic == sym::ptr_offset_from_unsigned {\n-                // Because diff_bytes ULT isize::MAX, this would be fine as signed,\n+                // Because diff_bytes ULE isize::MAX, this would be fine as signed,\n                 // but unsigned is slightly easier to codegen, so might as well.\n                 fx.bcx.ins().udiv_imm(diff_bytes, pointee_size as i64)\n             } else {"}]}