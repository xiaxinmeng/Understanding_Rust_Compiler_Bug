{"sha": "8a8a4d08ef6c695cce04f5e306fad83cc9abddcd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhhOGE0ZDA4ZWY2YzY5NWNjZTA0ZjVlMzA2ZmFkODNjYzlhYmRkY2Q=", "commit": {"author": {"name": "Veetaha", "email": "gerzoh1@gmail.com", "date": "2020-02-24T22:56:38Z"}, "committer": {"name": "Veetaha", "email": "gerzoh1@gmail.com", "date": "2020-02-24T22:56:38Z"}, "message": "vscode: migrate runnables to rust-analyzer-api.ts", "tree": {"sha": "7f6c79aaf8afbaa48f7048351d4b3dc82ab05fdb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7f6c79aaf8afbaa48f7048351d4b3dc82ab05fdb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8a8a4d08ef6c695cce04f5e306fad83cc9abddcd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8a8a4d08ef6c695cce04f5e306fad83cc9abddcd", "html_url": "https://github.com/rust-lang/rust/commit/8a8a4d08ef6c695cce04f5e306fad83cc9abddcd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8a8a4d08ef6c695cce04f5e306fad83cc9abddcd/comments", "author": null, "committer": null, "parents": [{"sha": "d6a96a90f417d48e6391d2233abf752988c04f1a", "url": "https://api.github.com/repos/rust-lang/rust/commits/d6a96a90f417d48e6391d2233abf752988c04f1a", "html_url": "https://github.com/rust-lang/rust/commit/d6a96a90f417d48e6391d2233abf752988c04f1a"}], "stats": {"total": 29, "additions": 7, "deletions": 22}, "files": [{"sha": "06b5134668649e12d565eba945efac5fe2c44cc5", "filename": "editors/code/src/commands/runnables.ts", "status": "modified", "additions": 7, "deletions": 22, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/8a8a4d08ef6c695cce04f5e306fad83cc9abddcd/editors%2Fcode%2Fsrc%2Fcommands%2Frunnables.ts", "raw_url": "https://github.com/rust-lang/rust/raw/8a8a4d08ef6c695cce04f5e306fad83cc9abddcd/editors%2Fcode%2Fsrc%2Fcommands%2Frunnables.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fcommands%2Frunnables.ts?ref=8a8a4d08ef6c695cce04f5e306fad83cc9abddcd", "patch": "@@ -1,5 +1,6 @@\n import * as vscode from 'vscode';\n import * as lc from 'vscode-languageclient';\n+import * as ra from '../rust-analyzer-api';\n \n import { Ctx, Cmd } from '../ctx';\n \n@@ -14,16 +15,13 @@ export function run(ctx: Ctx): Cmd {\n         const textDocument: lc.TextDocumentIdentifier = {\n             uri: editor.document.uri.toString(),\n         };\n-        const params: RunnablesParams = {\n+\n+        const runnables = await client.sendRequest(ra.runnables, {\n             textDocument,\n             position: client.code2ProtocolConverter.asPosition(\n                 editor.selection.active,\n             ),\n-        };\n-        const runnables = await client.sendRequest<Runnable[]>(\n-            'rust-analyzer/runnables',\n-            params,\n-        );\n+        });\n         const items: RunnableQuickPick[] = [];\n         if (prevRunnable) {\n             items.push(prevRunnable);\n@@ -48,7 +46,7 @@ export function run(ctx: Ctx): Cmd {\n }\n \n export function runSingle(ctx: Ctx): Cmd {\n-    return async (runnable: Runnable) => {\n+    return async (runnable: ra.Runnable) => {\n         const editor = ctx.activeRustEditor;\n         if (!editor) return;\n \n@@ -64,26 +62,13 @@ export function runSingle(ctx: Ctx): Cmd {\n     };\n }\n \n-interface RunnablesParams {\n-    textDocument: lc.TextDocumentIdentifier;\n-    position?: lc.Position;\n-}\n-\n-interface Runnable {\n-    label: string;\n-    bin: string;\n-    args: string[];\n-    env: { [index: string]: string };\n-    cwd?: string;\n-}\n-\n class RunnableQuickPick implements vscode.QuickPickItem {\n     public label: string;\n     public description?: string | undefined;\n     public detail?: string | undefined;\n     public picked?: boolean | undefined;\n \n-    constructor(public runnable: Runnable) {\n+    constructor(public runnable: ra.Runnable) {\n         this.label = runnable.label;\n     }\n }\n@@ -96,7 +81,7 @@ interface CargoTaskDefinition extends vscode.TaskDefinition {\n     env?: { [key: string]: string };\n }\n \n-function createTask(spec: Runnable): vscode.Task {\n+function createTask(spec: ra.Runnable): vscode.Task {\n     const TASK_SOURCE = 'Rust';\n     const definition: CargoTaskDefinition = {\n         type: 'cargo',"}]}