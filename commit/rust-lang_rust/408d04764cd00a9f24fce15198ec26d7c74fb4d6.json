{"sha": "408d04764cd00a9f24fce15198ec26d7c74fb4d6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQwOGQwNDc2NGNkMDBhOWYyNGZjZTE1MTk4ZWMyNmQ3Yzc0ZmI0ZDY=", "commit": {"author": {"name": "Yuki Kodama", "email": "endflow.net@gmail.com", "date": "2020-05-24T14:43:44Z"}, "committer": {"name": "Yuki Kodama", "email": "endflow.net@gmail.com", "date": "2020-05-25T16:06:25Z"}, "message": "Use built-in method", "tree": {"sha": "51261555a0a0a9b7e1799f27bcbf87cb10966937", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/51261555a0a0a9b7e1799f27bcbf87cb10966937"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/408d04764cd00a9f24fce15198ec26d7c74fb4d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/408d04764cd00a9f24fce15198ec26d7c74fb4d6", "html_url": "https://github.com/rust-lang/rust/commit/408d04764cd00a9f24fce15198ec26d7c74fb4d6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/408d04764cd00a9f24fce15198ec26d7c74fb4d6/comments", "author": {"login": "kuy", "id": 151614, "node_id": "MDQ6VXNlcjE1MTYxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/151614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kuy", "html_url": "https://github.com/kuy", "followers_url": "https://api.github.com/users/kuy/followers", "following_url": "https://api.github.com/users/kuy/following{/other_user}", "gists_url": "https://api.github.com/users/kuy/gists{/gist_id}", "starred_url": "https://api.github.com/users/kuy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kuy/subscriptions", "organizations_url": "https://api.github.com/users/kuy/orgs", "repos_url": "https://api.github.com/users/kuy/repos", "events_url": "https://api.github.com/users/kuy/events{/privacy}", "received_events_url": "https://api.github.com/users/kuy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kuy", "id": 151614, "node_id": "MDQ6VXNlcjE1MTYxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/151614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kuy", "html_url": "https://github.com/kuy", "followers_url": "https://api.github.com/users/kuy/followers", "following_url": "https://api.github.com/users/kuy/following{/other_user}", "gists_url": "https://api.github.com/users/kuy/gists{/gist_id}", "starred_url": "https://api.github.com/users/kuy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kuy/subscriptions", "organizations_url": "https://api.github.com/users/kuy/orgs", "repos_url": "https://api.github.com/users/kuy/repos", "events_url": "https://api.github.com/users/kuy/events{/privacy}", "received_events_url": "https://api.github.com/users/kuy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "378bfc3c8f1c63f44f972e11c9de00f9733b13c0", "url": "https://api.github.com/repos/rust-lang/rust/commits/378bfc3c8f1c63f44f972e11c9de00f9733b13c0", "html_url": "https://github.com/rust-lang/rust/commit/378bfc3c8f1c63f44f972e11c9de00f9733b13c0"}], "stats": {"total": 16, "additions": 5, "deletions": 11}, "files": [{"sha": "fabc78f14088c87de11680738f81d19cbc5feb9f", "filename": "crates/ra_ide/src/display/function_signature.rs", "status": "modified", "additions": 5, "deletions": 11, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/408d04764cd00a9f24fce15198ec26d7c74fb4d6/crates%2Fra_ide%2Fsrc%2Fdisplay%2Ffunction_signature.rs", "raw_url": "https://github.com/rust-lang/rust/raw/408d04764cd00a9f24fce15198ec26d7c74fb4d6/crates%2Fra_ide%2Fsrc%2Fdisplay%2Ffunction_signature.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fdisplay%2Ffunction_signature.rs?ref=408d04764cd00a9f24fce15198ec26d7c74fb4d6", "patch": "@@ -187,14 +187,6 @@ impl FunctionSignature {\n \n impl From<&'_ ast::FnDef> for FunctionSignature {\n     fn from(node: &ast::FnDef) -> FunctionSignature {\n-        fn strip_leading_underscore(name: String) -> String {\n-            if name.starts_with(\"_\") {\n-                name.get(1..).unwrap_or_default().to_string()\n-            } else {\n-                name\n-            }\n-        }\n-\n         fn param_list(node: &ast::FnDef) -> (bool, Vec<String>, Vec<String>) {\n             let mut res = vec![];\n             let mut res_types = vec![];\n@@ -238,15 +230,17 @@ impl From<&'_ ast::FnDef> for FunctionSignature {\n                     param_list\n                         .params()\n                         .map(|param| {\n-                            Some(strip_leading_underscore(\n+                            Some(\n                                 param\n                                     .pat()?\n                                     .syntax()\n                                     .descendants()\n                                     .find_map(ast::Name::cast)?\n                                     .text()\n-                                    .to_string(),\n-                            ))\n+                                    .to_string()\n+                                    .trim_start_matches('_')\n+                                    .into(),\n+                            )\n                         })\n                         .map(|param| param.unwrap_or_default()),\n                 );"}]}