{"sha": "19d7dceed302b254f21fd77084ff6b468305058a", "node_id": "C_kwDOAAsO6NoAKDE5ZDdkY2VlZDMwMmIyNTRmMjFmZDc3MDg0ZmY2YjQ2ODMwNTA1OGE", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-11-15T09:58:43Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-12-06T18:59:45Z"}, "message": "remove an unnecessary `?`", "tree": {"sha": "563054b8a2ef241107d4dffe6a834352e092f2bf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/563054b8a2ef241107d4dffe6a834352e092f2bf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/19d7dceed302b254f21fd77084ff6b468305058a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/19d7dceed302b254f21fd77084ff6b468305058a", "html_url": "https://github.com/rust-lang/rust/commit/19d7dceed302b254f21fd77084ff6b468305058a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/19d7dceed302b254f21fd77084ff6b468305058a/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9eb9176b08a4a61f7725e7da73558abc508404d9", "url": "https://api.github.com/repos/rust-lang/rust/commits/9eb9176b08a4a61f7725e7da73558abc508404d9", "html_url": "https://github.com/rust-lang/rust/commit/9eb9176b08a4a61f7725e7da73558abc508404d9"}], "stats": {"total": 3, "additions": 1, "deletions": 2}, "files": [{"sha": "ce5a91ef4a2c20c25d341c6e8b06479ad1832f03", "filename": "compiler/rustc_errors/src/emitter.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/19d7dceed302b254f21fd77084ff6b468305058a/compiler%2Frustc_errors%2Fsrc%2Femitter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19d7dceed302b254f21fd77084ff6b468305058a/compiler%2Frustc_errors%2Fsrc%2Femitter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_errors%2Fsrc%2Femitter.rs?ref=19d7dceed302b254f21fd77084ff6b468305058a", "patch": "@@ -1389,8 +1389,7 @@ impl EmitterWriter {\n         let primary_span = msp.primary_span().unwrap_or_default();\n         let (Some(sm), false) = (self.sm.as_ref(), primary_span.is_dummy()) else {\n             // If we don't have span information, emit and exit\n-            emit_to_destination(&buffer.render(), level, &mut self.dst, self.short_message)?;\n-            return Ok(());\n+            return emit_to_destination(&buffer.render(), level, &mut self.dst, self.short_message);\n         };\n         let primary_lo = sm.lookup_char_pos(primary_span.lo());\n         if let Ok(pos) ="}]}