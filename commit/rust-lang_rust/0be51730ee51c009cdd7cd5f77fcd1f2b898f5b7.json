{"sha": "0be51730ee51c009cdd7cd5f77fcd1f2b898f5b7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBiZTUxNzMwZWU1MWMwMDljZGQ3Y2Q1Zjc3ZmNkMWYyYjg5OGY1Yjc=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2018-01-19T21:16:34Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2018-01-19T21:16:34Z"}, "message": "Adjust language as per suggestions", "tree": {"sha": "cf82ec1dac9a3d764d7fa11bd2df5ce4a3fff1f2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cf82ec1dac9a3d764d7fa11bd2df5ce4a3fff1f2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0be51730ee51c009cdd7cd5f77fcd1f2b898f5b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0be51730ee51c009cdd7cd5f77fcd1f2b898f5b7", "html_url": "https://github.com/rust-lang/rust/commit/0be51730ee51c009cdd7cd5f77fcd1f2b898f5b7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0be51730ee51c009cdd7cd5f77fcd1f2b898f5b7/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "91668fbf230b388330da9591ba310c7e35ef9611", "url": "https://api.github.com/repos/rust-lang/rust/commits/91668fbf230b388330da9591ba310c7e35ef9611", "html_url": "https://github.com/rust-lang/rust/commit/91668fbf230b388330da9591ba310c7e35ef9611"}], "stats": {"total": 20, "additions": 11, "deletions": 9}, "files": [{"sha": "23fded0669a6fb1fdc1670399c6c1939d2d97397", "filename": "src/libcore/iter/iterator.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0be51730ee51c009cdd7cd5f77fcd1f2b898f5b7/src%2Flibcore%2Fiter%2Fiterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0be51730ee51c009cdd7cd5f77fcd1f2b898f5b7/src%2Flibcore%2Fiter%2Fiterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Fiterator.rs?ref=0be51730ee51c009cdd7cd5f77fcd1f2b898f5b7", "patch": "@@ -25,10 +25,6 @@ fn _assert_is_object_safe(_: &Iterator<Item=()>) {}\n /// generally, please see the [module-level documentation]. In particular, you\n /// may want to know how to [implement `Iterator`][impl].\n ///\n-/// Note: Methods on infinite iterators that generally require traversing every\n-/// element to produce a result may not terminate, even on traits for which a\n-/// result is determinable in finite time.\n-///\n /// [module-level documentation]: index.html\n /// [impl]: index.html#implementing-iterator\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -1430,6 +1426,10 @@ pub trait Iterator {\n     /// Folding is useful whenever you have a collection of something, and want\n     /// to produce a single value from it.\n     ///\n+    /// Note: `fold()`, and similar methods that traverse the entire iterator,\n+    /// may not terminate for infinite iterators, even on traits for which a\n+    /// result is determinable in finite time.\n+    ///\n     /// # Examples\n     ///\n     /// Basic usage:"}, {"sha": "d1fdedd1b235fcdf1b485861ff039066545f7752", "filename": "src/libcore/iter/mod.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/0be51730ee51c009cdd7cd5f77fcd1f2b898f5b7/src%2Flibcore%2Fiter%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0be51730ee51c009cdd7cd5f77fcd1f2b898f5b7/src%2Flibcore%2Fiter%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Fmod.rs?ref=0be51730ee51c009cdd7cd5f77fcd1f2b898f5b7", "patch": "@@ -299,15 +299,17 @@\n //! This will print the numbers `0` through `4`, each on their own line.\n //!\n //! Bear in mind that methods on infinite iterators, even those for which a\n-//! result can be computed in finite time, may not terminate. Specifically,\n-//! methods such as [`min`], which in the general case require traversing\n-//! every element in the iterator, are likely never to terminate for any\n-//! infinite iterators.\n+//! result can be determined mathematically in finite time, may not terminate.\n+//! Specifically, methods such as [`min`], which in the general case require\n+//! traversing every element in the iterator, are likely not to return\n+//! successfully for any infinite iterators.\n //!\n //! ```no_run\n //! let positives = 1..;\n //! let least = positives.min().unwrap(); // Oh no! An infinite loop!\n-//! // `positives.min` causes an infinite loop, so we won't reach this point!\n+//! // `positives.min` will either overflow and panic (in debug mode),\n+//! // or cause an infinite loop (in release mode), so we won't reach\n+//! // this point!\n //! println!(\"The least positive number is {}.\", least);\n //! ```\n //!"}]}