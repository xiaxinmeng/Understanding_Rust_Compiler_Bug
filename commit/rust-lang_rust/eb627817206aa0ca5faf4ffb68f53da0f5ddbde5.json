{"sha": "eb627817206aa0ca5faf4ffb68f53da0f5ddbde5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmViNjI3ODE3MjA2YWEwY2E1ZmFmNGZmYjY4ZjUzZGEwZjVkZGJkZTU=", "commit": {"author": {"name": "Philipp Br\u00fcschweiler", "email": "blei42@gmail.com", "date": "2013-06-05T19:40:49Z"}, "committer": {"name": "Philipp Br\u00fcschweiler", "email": "blei42@gmail.com", "date": "2013-06-05T20:21:25Z"}, "message": "rustc::back::link: redo symbol mangling\n\nHandle more characters that appear in types, most notably <>): were\nmissing. Also the new scheme takes care that no two different input\nstrings result in the same mangled string, which was not the case before.\n\nFixes #6921", "tree": {"sha": "58a1dbc99b3afdb214864942a44ffa903169acf6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/58a1dbc99b3afdb214864942a44ffa903169acf6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eb627817206aa0ca5faf4ffb68f53da0f5ddbde5", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eb627817206aa0ca5faf4ffb68f53da0f5ddbde5", "html_url": "https://github.com/rust-lang/rust/commit/eb627817206aa0ca5faf4ffb68f53da0f5ddbde5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eb627817206aa0ca5faf4ffb68f53da0f5ddbde5/comments", "author": {"login": "Blei", "id": 52674, "node_id": "MDQ6VXNlcjUyNjc0", "avatar_url": "https://avatars.githubusercontent.com/u/52674?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Blei", "html_url": "https://github.com/Blei", "followers_url": "https://api.github.com/users/Blei/followers", "following_url": "https://api.github.com/users/Blei/following{/other_user}", "gists_url": "https://api.github.com/users/Blei/gists{/gist_id}", "starred_url": "https://api.github.com/users/Blei/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Blei/subscriptions", "organizations_url": "https://api.github.com/users/Blei/orgs", "repos_url": "https://api.github.com/users/Blei/repos", "events_url": "https://api.github.com/users/Blei/events{/privacy}", "received_events_url": "https://api.github.com/users/Blei/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Blei", "id": 52674, "node_id": "MDQ6VXNlcjUyNjc0", "avatar_url": "https://avatars.githubusercontent.com/u/52674?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Blei", "html_url": "https://github.com/Blei", "followers_url": "https://api.github.com/users/Blei/followers", "following_url": "https://api.github.com/users/Blei/following{/other_user}", "gists_url": "https://api.github.com/users/Blei/gists{/gist_id}", "starred_url": "https://api.github.com/users/Blei/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Blei/subscriptions", "organizations_url": "https://api.github.com/users/Blei/orgs", "repos_url": "https://api.github.com/users/Blei/repos", "events_url": "https://api.github.com/users/Blei/events{/privacy}", "received_events_url": "https://api.github.com/users/Blei/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "de3000af8fa2aa9965453a2b8909c3f52244fb2e", "url": "https://api.github.com/repos/rust-lang/rust/commits/de3000af8fa2aa9965453a2b8909c3f52244fb2e", "html_url": "https://github.com/rust-lang/rust/commit/de3000af8fa2aa9965453a2b8909c3f52244fb2e"}], "stats": {"total": 41, "additions": 26, "deletions": 15}, "files": [{"sha": "451ce25be2ffe0e3a37c75e2e23ef0b82f4d02e2", "filename": "src/librustc/back/link.rs", "status": "modified", "additions": 26, "deletions": 15, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/eb627817206aa0ca5faf4ffb68f53da0f5ddbde5/src%2Flibrustc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb627817206aa0ca5faf4ffb68f53da0f5ddbde5/src%2Flibrustc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fback%2Flink.rs?ref=eb627817206aa0ca5faf4ffb68f53da0f5ddbde5", "patch": "@@ -633,26 +633,37 @@ pub fn get_symbol_hash(ccx: @CrateContext, t: ty::t) -> @str {\n \n // Name sanitation. LLVM will happily accept identifiers with weird names, but\n // gas doesn't!\n+// gas accepts the following characters in symbols: a-z, A-Z, 0-9, ., _, $\n pub fn sanitize(s: &str) -> ~str {\n     let mut result = ~\"\";\n     for str::each_char(s) |c| {\n         match c {\n-          '@' => result += \"_sbox_\",\n-          '~' => result += \"_ubox_\",\n-          '*' => result += \"_ptr_\",\n-          '&' => result += \"_ref_\",\n-          ',' => result += \"_\",\n-\n-          '{' | '(' => result += \"_of_\",\n-          'a' .. 'z'\n-          | 'A' .. 'Z'\n-          | '0' .. '9'\n-          | '_' => result.push_char(c),\n-          _ => {\n-            if c > 'z' && char::is_XID_continue(c) {\n-                result.push_char(c);\n+            // Escape these with $ sequences\n+            '@' => result += \"$SP$\",\n+            '~' => result += \"$UP$\",\n+            '*' => result += \"$RP$\",\n+            '&' => result += \"$BP$\",\n+            '<' => result += \"$LT$\",\n+            '>' => result += \"$GT$\",\n+            '(' => result += \"$LP$\",\n+            ')' => result += \"$RP$\",\n+            ',' => result += \"$C$\",\n+\n+            // '.' doesn't occur in types and functions, so reuse it\n+            // for ':'\n+            ':' => result.push_char('.'),\n+\n+            // These are legal symbols\n+            'a' .. 'z'\n+            | 'A' .. 'Z'\n+            | '0' .. '9'\n+            | '_' => result.push_char(c),\n+\n+            _ => {\n+                if c > 'z' && char::is_XID_continue(c) {\n+                    result.push_char(c);\n+                }\n             }\n-          }\n         }\n     }\n "}]}