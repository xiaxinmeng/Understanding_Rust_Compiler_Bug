{"sha": "8a49f937936e7c7a886fc859905bb40f53bc47e3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhhNDlmOTM3OTM2ZTdjN2E4ODZmYzg1OTkwNWJiNDBmNTNiYzQ3ZTM=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-07-23T10:36:33Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-07-23T10:36:33Z"}, "message": "Merge #5497\n\n5497: Store macro invocation parameters as text instead of tt r=jonas-schievink a=lnicola\n\nWe don't want to expand macros on every source change because it can be arbitrarily slow, but the token trees can be rather large. So instead we can cache the invocation parameters (as text).\n\nCo-authored-by: Lauren\u021biu Nicola <lnicola@dend.ro>", "tree": {"sha": "3b2de8ba1568c55067a644ee497c454518ed6007", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3b2de8ba1568c55067a644ee497c454518ed6007"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8a49f937936e7c7a886fc859905bb40f53bc47e3", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfGWgxCRBK7hj4Ov3rIwAAdHIIAFDMbsjJYy94rmc0vGwudD4q\nBWMc1qKonEhY4w0/TQBa1vj2ZE+OIA8cW0evlYVg07nyvcv6niygifVh+3Oqcevf\nVmbuVUQIqW/l9wbqt1K8fXNgAcfoD4FQw/w27nZ4f8+LYjnwGROQyi7AufpzZb2L\nV1ZZMfOqlsmChzsd6ag9+ZH8KiSAYyHx9u29HPSv2amX6hkcrbDkiZqd2jYQ/g+d\n5q1P+3aHozr+FxvIIooSxSKgufc0rGcPa0/cXUyv6VPIut4nTtc5pxFOpF+Mgmml\nVPqpFjUvQRnxWulVCEHPAZKben+nX/x1Z+cchbSikPTXfu6LsaSZWcHxkviYvow=\n=hg1L\n-----END PGP SIGNATURE-----\n", "payload": "tree 3b2de8ba1568c55067a644ee497c454518ed6007\nparent 085891d8855bb905c2ba12c1618bace410253926\nparent cb958cf5fec8b051d16833ac0890cace379ad765\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1595500593 +0000\ncommitter GitHub <noreply@github.com> 1595500593 +0000\n\nMerge #5497\n\n5497: Store macro invocation parameters as text instead of tt r=jonas-schievink a=lnicola\n\nWe don't want to expand macros on every source change because it can be arbitrarily slow, but the token trees can be rather large. So instead we can cache the invocation parameters (as text).\n\nCo-authored-by: Lauren\u021biu Nicola <lnicola@dend.ro>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8a49f937936e7c7a886fc859905bb40f53bc47e3", "html_url": "https://github.com/rust-lang/rust/commit/8a49f937936e7c7a886fc859905bb40f53bc47e3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8a49f937936e7c7a886fc859905bb40f53bc47e3/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "085891d8855bb905c2ba12c1618bace410253926", "url": "https://api.github.com/repos/rust-lang/rust/commits/085891d8855bb905c2ba12c1618bace410253926", "html_url": "https://github.com/rust-lang/rust/commit/085891d8855bb905c2ba12c1618bace410253926"}, {"sha": "cb958cf5fec8b051d16833ac0890cace379ad765", "url": "https://api.github.com/repos/rust-lang/rust/commits/cb958cf5fec8b051d16833ac0890cace379ad765", "html_url": "https://github.com/rust-lang/rust/commit/cb958cf5fec8b051d16833ac0890cace379ad765"}], "stats": {"total": 33, "additions": 20, "deletions": 13}, "files": [{"sha": "a2b9f3e35c035db49bf0210f8cd8ea253478ea2a", "filename": "crates/ra_hir/src/db.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8a49f937936e7c7a886fc859905bb40f53bc47e3/crates%2Fra_hir%2Fsrc%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a49f937936e7c7a886fc859905bb40f53bc47e3/crates%2Fra_hir%2Fsrc%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fdb.rs?ref=8a49f937936e7c7a886fc859905bb40f53bc47e3", "patch": "@@ -11,7 +11,7 @@ pub use hir_def::db::{\n };\n pub use hir_expand::db::{\n     AstDatabase, AstDatabaseStorage, AstIdMapQuery, InternEagerExpansionQuery, InternMacroQuery,\n-    MacroArgQuery, MacroDefQuery, MacroExpandQuery, ParseMacroQuery,\n+    MacroArgTextQuery, MacroDefQuery, MacroExpandQuery, ParseMacroQuery,\n };\n pub use hir_ty::db::{\n     AssociatedTyDataQuery, AssociatedTyValueQuery, CallableItemSignatureQuery, FieldTypesQuery,"}, {"sha": "e0ad1567f648792a61de591ab47467a96a3f2727", "filename": "crates/ra_hir_expand/src/db.rs", "status": "modified", "additions": 13, "deletions": 6, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/8a49f937936e7c7a886fc859905bb40f53bc47e3/crates%2Fra_hir_expand%2Fsrc%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a49f937936e7c7a886fc859905bb40f53bc47e3/crates%2Fra_hir_expand%2Fsrc%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_expand%2Fsrc%2Fdb.rs?ref=8a49f937936e7c7a886fc859905bb40f53bc47e3", "patch": "@@ -6,7 +6,7 @@ use mbe::{ExpandResult, MacroRules};\n use ra_db::{salsa, SourceDatabase};\n use ra_parser::FragmentKind;\n use ra_prof::profile;\n-use ra_syntax::{algo::diff, AstNode, Parse, SyntaxKind::*, SyntaxNode};\n+use ra_syntax::{algo::diff, AstNode, GreenNode, Parse, SyntaxKind::*, SyntaxNode};\n \n use crate::{\n     ast_id_map::AstIdMap, BuiltinDeriveExpander, BuiltinFnLikeExpander, EagerCallLoc, EagerMacroId,\n@@ -72,6 +72,8 @@ pub trait AstDatabase: SourceDatabase {\n \n     #[salsa::interned]\n     fn intern_macro(&self, macro_call: MacroCallLoc) -> LazyMacroId;\n+    fn macro_arg_text(&self, id: MacroCallId) -> Option<GreenNode>;\n+    #[salsa::transparent]\n     fn macro_arg(&self, id: MacroCallId) -> Option<Arc<(tt::Subtree, mbe::TokenMap)>>;\n     fn macro_def(&self, id: MacroDefId) -> Option<Arc<(TokenExpander, mbe::TokenMap)>>;\n     fn parse_macro(&self, macro_file: MacroFile)\n@@ -148,10 +150,7 @@ pub(crate) fn macro_def(\n     }\n }\n \n-pub(crate) fn macro_arg(\n-    db: &dyn AstDatabase,\n-    id: MacroCallId,\n-) -> Option<Arc<(tt::Subtree, mbe::TokenMap)>> {\n+pub(crate) fn macro_arg_text(db: &dyn AstDatabase, id: MacroCallId) -> Option<GreenNode> {\n     let id = match id {\n         MacroCallId::LazyMacro(id) => id,\n         MacroCallId::EagerMacro(_id) => {\n@@ -161,7 +160,15 @@ pub(crate) fn macro_arg(\n     };\n     let loc = db.lookup_intern_macro(id);\n     let arg = loc.kind.arg(db)?;\n-    let (tt, tmap) = mbe::syntax_node_to_token_tree(&arg)?;\n+    Some(arg.green().clone())\n+}\n+\n+pub(crate) fn macro_arg(\n+    db: &dyn AstDatabase,\n+    id: MacroCallId,\n+) -> Option<Arc<(tt::Subtree, mbe::TokenMap)>> {\n+    let arg = db.macro_arg_text(id)?;\n+    let (tt, tmap) = mbe::syntax_node_to_token_tree(&SyntaxNode::new_root(arg))?;\n     Some(Arc::new((tt, tmap)))\n }\n "}, {"sha": "32d9a8d1ffc5bb0f53dc6403aea55c55e64b0f67", "filename": "crates/ra_ide_db/src/change.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8a49f937936e7c7a886fc859905bb40f53bc47e3/crates%2Fra_ide_db%2Fsrc%2Fchange.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a49f937936e7c7a886fc859905bb40f53bc47e3/crates%2Fra_ide_db%2Fsrc%2Fchange.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_db%2Fsrc%2Fchange.rs?ref=8a49f937936e7c7a886fc859905bb40f53bc47e3", "patch": "@@ -151,7 +151,7 @@ impl RootDatabase {\n \n         // Macros do take significant space, but less then the syntax trees\n         // self.query(hir::db::MacroDefQuery).sweep(sweep);\n-        // self.query(hir::db::MacroArgQuery).sweep(sweep);\n+        // self.query(hir::db::MacroArgTextQuery).sweep(sweep);\n         // self.query(hir::db::MacroExpandQuery).sweep(sweep);\n \n         hir::db::AstIdMapQuery.in_db(self).sweep(sweep);\n@@ -199,7 +199,7 @@ impl RootDatabase {\n \n             // AstDatabase\n             hir::db::AstIdMapQuery\n-            hir::db::MacroArgQuery\n+            hir::db::MacroArgTextQuery\n             hir::db::MacroDefQuery\n             hir::db::ParseMacroQuery\n             hir::db::MacroExpandQuery"}, {"sha": "ac59455e74912c5548e6125e3bc48a660439163b", "filename": "crates/ra_syntax/src/lib.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8a49f937936e7c7a886fc859905bb40f53bc47e3/crates%2Fra_syntax%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a49f937936e7c7a886fc859905bb40f53bc47e3/crates%2Fra_syntax%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Flib.rs?ref=8a49f937936e7c7a886fc859905bb40f53bc47e3", "patch": "@@ -42,16 +42,14 @@ use std::{marker::PhantomData, sync::Arc};\n use ra_text_edit::Indel;\n use stdx::format_to;\n \n-use crate::syntax_node::GreenNode;\n-\n pub use crate::{\n     algo::InsertPosition,\n     ast::{AstNode, AstToken},\n     parsing::{lex_single_syntax_kind, lex_single_valid_syntax_kind, tokenize, Token},\n     ptr::{AstPtr, SyntaxNodePtr},\n     syntax_error::SyntaxError,\n     syntax_node::{\n-        Direction, NodeOrToken, SyntaxElement, SyntaxElementChildren, SyntaxNode,\n+        Direction, GreenNode, NodeOrToken, SyntaxElement, SyntaxElementChildren, SyntaxNode,\n         SyntaxNodeChildren, SyntaxToken, SyntaxTreeBuilder,\n     },\n };"}, {"sha": "a7dbdba7b115cae079246635aaa6c5483142734d", "filename": "crates/ra_syntax/src/syntax_node.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8a49f937936e7c7a886fc859905bb40f53bc47e3/crates%2Fra_syntax%2Fsrc%2Fsyntax_node.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a49f937936e7c7a886fc859905bb40f53bc47e3/crates%2Fra_syntax%2Fsrc%2Fsyntax_node.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fsyntax_node.rs?ref=8a49f937936e7c7a886fc859905bb40f53bc47e3", "patch": "@@ -10,7 +10,9 @@ use rowan::{GreenNodeBuilder, Language};\n \n use crate::{Parse, SmolStr, SyntaxError, SyntaxKind, TextSize};\n \n-pub(crate) use rowan::{GreenNode, GreenToken};\n+pub use rowan::GreenNode;\n+\n+pub(crate) use rowan::GreenToken;\n \n #[derive(Debug, Clone, Copy, PartialEq, Eq, PartialOrd, Ord, Hash)]\n pub enum RustLanguage {}"}]}