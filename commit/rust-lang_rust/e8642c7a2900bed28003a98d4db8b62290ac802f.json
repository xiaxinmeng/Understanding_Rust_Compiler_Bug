{"sha": "e8642c7a2900bed28003a98d4db8b62290ac802f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU4NjQyYzdhMjkwMGJlZDI4MDAzYTk4ZDRkYjhiNjIyOTBhYzgwMmY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-01-06T18:15:48Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-01-06T18:15:48Z"}, "message": "Auto merge of #5003 - JohnTitor:rustup, r=flip1995\n\nRustup to rust-lang/rust#67886\n\nchangelog: none", "tree": {"sha": "b16603d19f326d027dd3856663ae5389dc2e478b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b16603d19f326d027dd3856663ae5389dc2e478b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e8642c7a2900bed28003a98d4db8b62290ac802f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e8642c7a2900bed28003a98d4db8b62290ac802f", "html_url": "https://github.com/rust-lang/rust/commit/e8642c7a2900bed28003a98d4db8b62290ac802f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e8642c7a2900bed28003a98d4db8b62290ac802f/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "390eacff80142b7314940921245585a57455e474", "url": "https://api.github.com/repos/rust-lang/rust/commits/390eacff80142b7314940921245585a57455e474", "html_url": "https://github.com/rust-lang/rust/commit/390eacff80142b7314940921245585a57455e474"}, {"sha": "65d15340cd1f53b823d7c68333bc91f6c519be0b", "url": "https://api.github.com/repos/rust-lang/rust/commits/65d15340cd1f53b823d7c68333bc91f6c519be0b", "html_url": "https://github.com/rust-lang/rust/commit/65d15340cd1f53b823d7c68333bc91f6c519be0b"}], "stats": {"total": 447, "additions": 229, "deletions": 218}, "files": [{"sha": "e0b94b98dc42ec46db746679999a8e9edffcc598", "filename": "clippy_lints/src/approx_const.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fapprox_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fapprox_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fapprox_const.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -1,7 +1,7 @@\n use crate::utils::span_lint;\n use rustc::declare_lint_pass;\n-use rustc::hir::*;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc_hir::*;\n use rustc_session::declare_tool_lint;\n use rustc_span::symbol;\n use std::f64::consts as f64;"}, {"sha": "9638cb8fbada597e53eb637686e896b9fda3e64b", "filename": "clippy_lints/src/arithmetic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Farithmetic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Farithmetic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Farithmetic.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -1,8 +1,8 @@\n use crate::consts::constant_simple;\n use crate::utils::span_lint;\n-use rustc::hir;\n use rustc::impl_lint_pass;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc_hir as hir;\n use rustc_session::declare_tool_lint;\n use rustc_span::source_map::Span;\n "}, {"sha": "555825e484f82c7d021017ffcb1bfc2a2b566dbc", "filename": "clippy_lints/src/assertions_on_constants.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fassertions_on_constants.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fassertions_on_constants.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fassertions_on_constants.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -3,8 +3,8 @@ use crate::utils::paths;\n use crate::utils::{is_direct_expn_of, is_expn_of, match_function_call, snippet_opt, span_help_and_lint};\n use if_chain::if_chain;\n use rustc::declare_lint_pass;\n-use rustc::hir::*;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc_hir::*;\n use rustc_session::declare_tool_lint;\n use syntax::ast::LitKind;\n "}, {"sha": "f0a2ebfcf3c3449af95702a01112f84e08af816d", "filename": "clippy_lints/src/assign_ops.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fassign_ops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fassign_ops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fassign_ops.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -1,9 +1,9 @@\n use if_chain::if_chain;\n use rustc::declare_lint_pass;\n-use rustc::hir;\n use rustc::hir::intravisit::{walk_expr, NestedVisitorMap, Visitor};\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc_errors::Applicability;\n+use rustc_hir as hir;\n use rustc_session::declare_tool_lint;\n \n use crate::utils::{\n@@ -232,7 +232,7 @@ fn lint_misrefactored_assign_op(\n \n #[must_use]\n fn is_commutative(op: hir::BinOpKind) -> bool {\n-    use rustc::hir::BinOpKind::*;\n+    use rustc_hir::BinOpKind::*;\n     match op {\n         Add | Mul | And | Or | BitXor | BitAnd | BitOr | Eq | Ne => true,\n         Sub | Div | Rem | Shl | Shr | Lt | Le | Ge | Gt => false,"}, {"sha": "ff5688f5b7ca3bdd908bf5394d9e5a56fde900fc", "filename": "clippy_lints/src/attrs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fattrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fattrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fattrs.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -7,13 +7,13 @@ use crate::utils::{\n };\n use if_chain::if_chain;\n use rustc::declare_lint_pass;\n-use rustc::hir::*;\n use rustc::lint::{\n     in_external_macro, CheckLintNameResult, EarlyContext, EarlyLintPass, LateContext, LateLintPass, LintArray,\n     LintContext, LintPass,\n };\n use rustc::ty;\n use rustc_errors::Applicability;\n+use rustc_hir::*;\n use rustc_session::declare_tool_lint;\n use rustc_span::source_map::Span;\n use rustc_span::symbol::Symbol;"}, {"sha": "6f7efa08f19f117da5611ecf7a204c84dd0d6038", "filename": "clippy_lints/src/bit_mask.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fbit_mask.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fbit_mask.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fbit_mask.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -2,10 +2,10 @@ use crate::consts::{constant, Constant};\n use crate::utils::sugg::Sugg;\n use crate::utils::{span_lint, span_lint_and_then};\n use if_chain::if_chain;\n-use rustc::hir::*;\n use rustc::impl_lint_pass;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc_errors::Applicability;\n+use rustc_hir::*;\n use rustc_session::declare_tool_lint;\n use rustc_span::source_map::Span;\n use syntax::ast::LitKind;"}, {"sha": "44c058911ab3d8fd14fdf602b0d285c163964cfe", "filename": "clippy_lints/src/blacklisted_name.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fblacklisted_name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fblacklisted_name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fblacklisted_name.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -1,8 +1,8 @@\n use crate::utils::span_lint;\n-use rustc::hir::*;\n use rustc::impl_lint_pass;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc_data_structures::fx::FxHashSet;\n+use rustc_hir::*;\n use rustc_session::declare_tool_lint;\n \n declare_clippy_lint! {"}, {"sha": "2224054af3556bb9cf109cd3b32b6ccf83da6e42", "filename": "clippy_lints/src/block_in_if_condition.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fblock_in_if_condition.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fblock_in_if_condition.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fblock_in_if_condition.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -2,8 +2,8 @@ use crate::utils::*;\n use matches::matches;\n use rustc::declare_lint_pass;\n use rustc::hir::intravisit::{walk_expr, NestedVisitorMap, Visitor};\n-use rustc::hir::*;\n use rustc::lint::{in_external_macro, LateContext, LateLintPass, LintArray, LintContext, LintPass};\n+use rustc_hir::*;\n use rustc_session::declare_tool_lint;\n \n declare_clippy_lint! {\n@@ -78,7 +78,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for BlockInIfCondition {\n         }\n         if let Some((check, then, _)) = higher::if_block(&expr) {\n             if let ExprKind::Block(block, _) = &check.kind {\n-                if block.rules == DefaultBlock {\n+                if block.rules == BlockCheckMode::DefaultBlock {\n                     if block.stmts.is_empty() {\n                         if let Some(ex) = &block.expr {\n                             // don't dig into the expression here, just suggest that they remove"}, {"sha": "6d918b3cc4b4bb73aff24939cfde121639bbac8a", "filename": "clippy_lints/src/booleans.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fbooleans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fbooleans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fbooleans.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -4,10 +4,11 @@ use crate::utils::{\n };\n use if_chain::if_chain;\n use rustc::declare_lint_pass;\n+use rustc::hir::intravisit;\n use rustc::hir::intravisit::*;\n-use rustc::hir::*;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc_errors::Applicability;\n+use rustc_hir::*;\n use rustc_session::declare_tool_lint;\n use rustc_span::source_map::Span;\n use syntax::ast::LitKind;\n@@ -109,7 +110,7 @@ impl<'a, 'tcx, 'v> Hir2Qmm<'a, 'tcx, 'v> {\n         // prevent folding of `cfg!` macros and the like\n         if !e.span.from_expansion() {\n             match &e.kind {\n-                ExprKind::Unary(UnNot, inner) => return Ok(Bool::Not(box self.run(inner)?)),\n+                ExprKind::Unary(UnOp::UnNot, inner) => return Ok(Bool::Not(box self.run(inner)?)),\n                 ExprKind::Binary(binop, lhs, rhs) => match &binop.node {\n                     BinOpKind::Or => return Ok(Bool::Or(self.extract(BinOpKind::Or, &[lhs, rhs], Vec::new())?)),\n                     BinOpKind::And => return Ok(Bool::And(self.extract(BinOpKind::And, &[lhs, rhs], Vec::new())?)),\n@@ -445,7 +446,7 @@ impl<'a, 'tcx> Visitor<'tcx> for NonminimalBoolVisitor<'a, 'tcx> {\n             ExprKind::Binary(binop, _, _) if binop.node == BinOpKind::Or || binop.node == BinOpKind::And => {\n                 self.bool_expr(e)\n             },\n-            ExprKind::Unary(UnNot, inner) => {\n+            ExprKind::Unary(UnOp::UnNot, inner) => {\n                 if self.cx.tables.node_types()[inner.hir_id].is_bool() {\n                     self.bool_expr(e);\n                 } else {\n@@ -471,7 +472,7 @@ struct NotSimplificationVisitor<'a, 'tcx> {\n \n impl<'a, 'tcx> Visitor<'tcx> for NotSimplificationVisitor<'a, 'tcx> {\n     fn visit_expr(&mut self, expr: &'tcx Expr<'_>) {\n-        if let ExprKind::Unary(UnNot, inner) = &expr.kind {\n+        if let ExprKind::Unary(UnOp::UnNot, inner) = &expr.kind {\n             if let Some(suggestion) = simplify_not(self.cx, inner) {\n                 span_lint_and_sugg(\n                     self.cx,"}, {"sha": "e70f1f317c3074d160de18a4c0d739adef50068f", "filename": "clippy_lints/src/bytecount.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fbytecount.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fbytecount.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fbytecount.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -4,10 +4,10 @@ use crate::utils::{\n };\n use if_chain::if_chain;\n use rustc::declare_lint_pass;\n-use rustc::hir::*;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::ty;\n use rustc_errors::Applicability;\n+use rustc_hir::*;\n use rustc_session::declare_tool_lint;\n use syntax::ast::{Name, UintTy};\n "}, {"sha": "bc79688eef5bf343c06825f4da4b9996217c0e29", "filename": "clippy_lints/src/checked_conversions.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fchecked_conversions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fchecked_conversions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fchecked_conversions.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -2,9 +2,9 @@\n \n use if_chain::if_chain;\n use rustc::declare_lint_pass;\n-use rustc::hir::*;\n use rustc::lint::{in_external_macro, LateContext, LateLintPass, LintArray, LintContext, LintPass};\n use rustc_errors::Applicability;\n+use rustc_hir::*;\n use rustc_session::declare_tool_lint;\n use syntax::ast::LitKind;\n "}, {"sha": "ae293c76c090f4b6dfc3a0b37def90be7e5379cf", "filename": "clippy_lints/src/cognitive_complexity.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fcognitive_complexity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fcognitive_complexity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcognitive_complexity.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -1,9 +1,9 @@\n //! calculate cognitive complexity and warn about overly complex functions\n \n use rustc::hir::intravisit::{walk_expr, FnKind, NestedVisitorMap, Visitor};\n-use rustc::hir::*;\n use rustc::impl_lint_pass;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintContext, LintPass};\n+use rustc_hir::*;\n use rustc_session::declare_tool_lint;\n use rustc_span::source_map::Span;\n use rustc_span::BytePos;"}, {"sha": "4a239abfb50df4befcfb3a2dadc73931fe6d2a0c", "filename": "clippy_lints/src/comparison_chain.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fcomparison_chain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fcomparison_chain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcomparison_chain.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -2,8 +2,8 @@ use crate::utils::{\n     get_trait_def_id, if_sequence, implements_trait, parent_node_is_if_expr, paths, span_help_and_lint, SpanlessEq,\n };\n use rustc::declare_lint_pass;\n-use rustc::hir::*;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc_hir::*;\n use rustc_session::declare_tool_lint;\n \n declare_clippy_lint! {"}, {"sha": "86799fde8e6018bc071da9896504651f3e4645e9", "filename": "clippy_lints/src/consts.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fconsts.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -2,13 +2,13 @@\n \n use crate::utils::{clip, higher, sext, unsext};\n use if_chain::if_chain;\n-use rustc::hir::def::{DefKind, Res};\n-use rustc::hir::*;\n use rustc::lint::LateContext;\n use rustc::ty::subst::{Subst, SubstsRef};\n use rustc::ty::{self, Ty, TyCtxt};\n use rustc::{bug, span_bug};\n use rustc_data_structures::sync::Lrc;\n+use rustc_hir::def::{DefKind, Res};\n+use rustc_hir::*;\n use rustc_span::symbol::Symbol;\n use std::cmp::Ordering::{self, Equal};\n use std::cmp::PartialOrd;\n@@ -240,9 +240,9 @@ impl<'c, 'cc> ConstEvalLateContext<'c, 'cc> {\n                 self.expr(value).map(|v| Constant::Repeat(Box::new(v), n))\n             },\n             ExprKind::Unary(op, ref operand) => self.expr(operand).and_then(|o| match op {\n-                UnNot => self.constant_not(&o, self.tables.expr_ty(e)),\n-                UnNeg => self.constant_negate(&o, self.tables.expr_ty(e)),\n-                UnDeref => Some(o),\n+                UnOp::UnNot => self.constant_not(&o, self.tables.expr_ty(e)),\n+                UnOp::UnNeg => self.constant_negate(&o, self.tables.expr_ty(e)),\n+                UnOp::UnDeref => Some(o),\n             }),\n             ExprKind::Binary(op, ref left, ref right) => self.binop(op, left, right),\n             ExprKind::Call(ref callee, ref args) => {"}, {"sha": "c4778c6cf43abf3af9a96ca8e2efa5f277e7abea", "filename": "clippy_lints/src/copies.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fcopies.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fcopies.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcopies.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -1,10 +1,10 @@\n use crate::utils::{get_parent_expr, higher, if_sequence, same_tys, snippet, span_lint_and_then, span_note_and_lint};\n use crate::utils::{SpanlessEq, SpanlessHash};\n use rustc::declare_lint_pass;\n-use rustc::hir::*;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::ty::Ty;\n use rustc_data_structures::fx::FxHashMap;\n+use rustc_hir::*;\n use rustc_session::declare_tool_lint;\n use rustc_span::symbol::Symbol;\n use std::collections::hash_map::Entry;"}, {"sha": "d7863b0d9a9cc27cecec94ac4d8e071793c0cc3a", "filename": "clippy_lints/src/copy_iterator.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fcopy_iterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fcopy_iterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcopy_iterator.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -1,7 +1,7 @@\n use crate::utils::{is_copy, match_path, paths, span_note_and_lint};\n use rustc::declare_lint_pass;\n-use rustc::hir::{Item, ItemKind};\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc_hir::{Item, ItemKind};\n use rustc_session::declare_tool_lint;\n \n declare_clippy_lint! {"}, {"sha": "62f80ef7652b8110b00bd0c42a9649ddf058a534", "filename": "clippy_lints/src/default_trait_access.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fdefault_trait_access.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fdefault_trait_access.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdefault_trait_access.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -1,9 +1,9 @@\n use if_chain::if_chain;\n use rustc::declare_lint_pass;\n-use rustc::hir::*;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::ty;\n use rustc_errors::Applicability;\n+use rustc_hir::*;\n use rustc_session::declare_tool_lint;\n \n use crate::utils::{any_parent_is_automatically_derived, match_def_path, paths, span_lint_and_sugg};"}, {"sha": "c6215afbbd329a40ed6bf9f985a961c6e32ab728", "filename": "clippy_lints/src/derive.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fderive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fderive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fderive.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -2,9 +2,9 @@ use crate::utils::paths;\n use crate::utils::{is_automatically_derived, is_copy, match_path, span_lint_and_then};\n use if_chain::if_chain;\n use rustc::declare_lint_pass;\n-use rustc::hir::*;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::ty::{self, Ty};\n+use rustc_hir::*;\n use rustc_session::declare_tool_lint;\n use rustc_span::source_map::Span;\n "}, {"sha": "d7c232eec1a231c1534cbf4792a52b0c7e0cc30f", "filename": "clippy_lints/src/doc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdoc.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -1,9 +1,9 @@\n use crate::utils::{match_type, paths, return_ty, span_lint};\n use itertools::Itertools;\n-use rustc::hir;\n use rustc::impl_lint_pass;\n use rustc::lint::{in_external_macro, LateContext, LateLintPass, LintArray, LintPass};\n use rustc_data_structures::fx::FxHashSet;\n+use rustc_hir as hir;\n use rustc_session::declare_tool_lint;\n use rustc_span::source_map::{BytePos, MultiSpan, Span};\n use rustc_span::Pos;"}, {"sha": "d2ff544bd03478e597e5193bc0eeebd5025a066a", "filename": "clippy_lints/src/double_comparison.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fdouble_comparison.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fdouble_comparison.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdouble_comparison.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -1,9 +1,9 @@\n //! Lint on unnecessary double comparisons. Some examples:\n \n use rustc::declare_lint_pass;\n-use rustc::hir::*;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc_errors::Applicability;\n+use rustc_hir::*;\n use rustc_session::declare_tool_lint;\n use rustc_span::source_map::Span;\n "}, {"sha": "825f3b8de74ef369dede8a777a3d84b22a95ed2b", "filename": "clippy_lints/src/drop_bounds.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fdrop_bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fdrop_bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdrop_bounds.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -1,8 +1,8 @@\n use crate::utils::{match_def_path, paths, span_lint};\n use if_chain::if_chain;\n use rustc::declare_lint_pass;\n-use rustc::hir::*;\n use rustc::lint::{LateLintPass, LintArray, LintPass};\n+use rustc_hir::*;\n use rustc_session::declare_tool_lint;\n \n declare_clippy_lint! {"}, {"sha": "324c3f309a4ff0a1d33d072533f3f48d3b6ab275", "filename": "clippy_lints/src/drop_forget_ref.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fdrop_forget_ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fdrop_forget_ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdrop_forget_ref.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -1,9 +1,9 @@\n use crate::utils::{is_copy, match_def_path, paths, qpath_res, span_note_and_lint};\n use if_chain::if_chain;\n use rustc::declare_lint_pass;\n-use rustc::hir::*;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::ty;\n+use rustc_hir::*;\n use rustc_session::declare_tool_lint;\n \n declare_clippy_lint! {"}, {"sha": "0ec9cc9084ab1a0a11c7f93baf5977e88881ec41", "filename": "clippy_lints/src/duration_subsec.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fduration_subsec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fduration_subsec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fduration_subsec.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -1,8 +1,8 @@\n use if_chain::if_chain;\n use rustc::declare_lint_pass;\n-use rustc::hir::*;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc_errors::Applicability;\n+use rustc_hir::*;\n use rustc_session::declare_tool_lint;\n use rustc_span::source_map::Spanned;\n "}, {"sha": "f16a71fe63f0ab2a4774c20c66ac9742cf0ee567", "filename": "clippy_lints/src/empty_enum.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fempty_enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fempty_enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fempty_enum.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -2,8 +2,8 @@\n \n use crate::utils::span_lint_and_then;\n use rustc::declare_lint_pass;\n-use rustc::hir::*;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc_hir::*;\n use rustc_session::declare_tool_lint;\n \n declare_clippy_lint! {"}, {"sha": "44211f37e6440871317ec569e0aeb666e51a0d8a", "filename": "clippy_lints/src/entry.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fentry.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fentry.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fentry.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -4,9 +4,9 @@ use crate::utils::{snippet_with_applicability, span_lint_and_then, walk_ptrs_ty}\n use if_chain::if_chain;\n use rustc::declare_lint_pass;\n use rustc::hir::intravisit::{walk_expr, NestedVisitorMap, Visitor};\n-use rustc::hir::*;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc_errors::Applicability;\n+use rustc_hir::*;\n use rustc_session::declare_tool_lint;\n use rustc_span::source_map::Span;\n "}, {"sha": "e3f862dc2a37afc889457a0c7914a725074b2168", "filename": "clippy_lints/src/enum_clike.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fenum_clike.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fenum_clike.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fenum_clike.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -4,10 +4,10 @@\n use crate::consts::{miri_to_const, Constant};\n use crate::utils::span_lint;\n use rustc::declare_lint_pass;\n-use rustc::hir::*;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::ty;\n use rustc::ty::util::IntTypeExt;\n+use rustc_hir::*;\n use rustc_session::declare_tool_lint;\n use std::convert::TryFrom;\n use syntax::ast::{IntTy, UintTy};"}, {"sha": "6cd3e1c86b4713841127530569a1b911a921b179", "filename": "clippy_lints/src/enum_glob_use.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fenum_glob_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fenum_glob_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fenum_glob_use.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -2,9 +2,9 @@\n \n use crate::utils::span_lint;\n use rustc::declare_lint_pass;\n-use rustc::hir::def::{DefKind, Res};\n-use rustc::hir::*;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc_hir::def::{DefKind, Res};\n+use rustc_hir::*;\n use rustc_session::declare_tool_lint;\n use rustc_span::source_map::Span;\n "}, {"sha": "232a26790d0e681e750cb2b3f84e0dd4bff0e633", "filename": "clippy_lints/src/eq_op.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Feq_op.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Feq_op.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Feq_op.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -1,8 +1,8 @@\n use crate::utils::{implements_trait, is_copy, multispan_sugg, snippet, span_lint, span_lint_and_then, SpanlessEq};\n use rustc::declare_lint_pass;\n-use rustc::hir::*;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc_errors::Applicability;\n+use rustc_hir::*;\n use rustc_session::declare_tool_lint;\n \n declare_clippy_lint! {"}, {"sha": "6ff90315a97c1233605c385f4a6f917ea46979df", "filename": "clippy_lints/src/erasing_op.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Ferasing_op.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Ferasing_op.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ferasing_op.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -1,6 +1,6 @@\n use rustc::declare_lint_pass;\n-use rustc::hir::*;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc_hir::*;\n use rustc_session::declare_tool_lint;\n use rustc_span::source_map::Span;\n "}, {"sha": "5500df3db027bf07c80d5020131c62e1bab38f6d", "filename": "clippy_lints/src/escape.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fescape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fescape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fescape.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -1,10 +1,10 @@\n use rustc::hir::intravisit as visit;\n-use rustc::hir::HirIdSet;\n-use rustc::hir::{self, *};\n use rustc::impl_lint_pass;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::ty::layout::LayoutOf;\n use rustc::ty::{self, Ty};\n+use rustc_hir::HirIdSet;\n+use rustc_hir::{self, *};\n use rustc_session::declare_tool_lint;\n use rustc_span::source_map::Span;\n use rustc_typeck::expr_use_visitor::*;\n@@ -93,7 +93,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for BoxedLocal {\n }\n \n // TODO: Replace with Map::is_argument(..) when it's fixed\n-fn is_argument(map: &hir::map::Map<'_>, id: HirId) -> bool {\n+fn is_argument(map: &rustc::hir::map::Map<'_>, id: HirId) -> bool {\n     match map.find(id) {\n         Some(Node::Binding(_)) => (),\n         _ => return false,"}, {"sha": "486200fd3715ae0c090ccbf82e7abfe74b8cd2e3", "filename": "clippy_lints/src/eta_reduction.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Feta_reduction.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Feta_reduction.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Feta_reduction.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -1,10 +1,10 @@\n use if_chain::if_chain;\n use matches::matches;\n use rustc::declare_lint_pass;\n-use rustc::hir::*;\n use rustc::lint::{in_external_macro, LateContext, LateLintPass, LintArray, LintContext, LintPass};\n use rustc::ty::{self, Ty};\n use rustc_errors::Applicability;\n+use rustc_hir::*;\n use rustc_session::declare_tool_lint;\n \n use crate::utils::{"}, {"sha": "9c8b77992fe5ff28d05dcffe6a11becc8530deb4", "filename": "clippy_lints/src/eval_order_dependence.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Feval_order_dependence.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Feval_order_dependence.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Feval_order_dependence.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -2,9 +2,9 @@ use crate::utils::{get_parent_expr, span_lint, span_note_and_lint};\n use if_chain::if_chain;\n use rustc::declare_lint_pass;\n use rustc::hir::intravisit::{walk_expr, NestedVisitorMap, Visitor};\n-use rustc::hir::*;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::ty;\n+use rustc_hir::*;\n use rustc_session::declare_tool_lint;\n \n declare_clippy_lint! {"}, {"sha": "8c51538d35bef8a37f6b79b7b8a16215c7575519", "filename": "clippy_lints/src/excessive_precision.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fexcessive_precision.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fexcessive_precision.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fexcessive_precision.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -2,10 +2,10 @@ use crate::utils::span_lint_and_sugg;\n use crate::utils::sugg::format_numeric_literal;\n use if_chain::if_chain;\n use rustc::declare_lint_pass;\n-use rustc::hir;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::ty;\n use rustc_errors::Applicability;\n+use rustc_hir as hir;\n use rustc_session::declare_tool_lint;\n use rustc_span::symbol::Symbol;\n use std::f32;"}, {"sha": "13c44020363bec404f8ecb27820dff3eef5e2f79", "filename": "clippy_lints/src/exit.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fexit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fexit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fexit.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -1,8 +1,8 @@\n use crate::utils::{is_entrypoint_fn, match_def_path, paths, qpath_res, span_lint};\n use if_chain::if_chain;\n use rustc::declare_lint_pass;\n-use rustc::hir::{Expr, ExprKind, Item, ItemKind, Node};\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc_hir::{Expr, ExprKind, Item, ItemKind, Node};\n use rustc_session::declare_tool_lint;\n \n declare_clippy_lint! {"}, {"sha": "0a52e252de95dc4b541d186dd7b5a5a9254edc6f", "filename": "clippy_lints/src/explicit_write.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fexplicit_write.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fexplicit_write.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fexplicit_write.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -1,9 +1,9 @@\n use crate::utils::{is_expn_of, match_function_call, paths, span_lint, span_lint_and_sugg};\n use if_chain::if_chain;\n use rustc::declare_lint_pass;\n-use rustc::hir::*;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc_errors::Applicability;\n+use rustc_hir::*;\n use rustc_session::declare_tool_lint;\n use syntax::ast::LitKind;\n "}, {"sha": "6b6165ce18d19c8726210728735b32d776d52f77", "filename": "clippy_lints/src/fallible_impl_from.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Ffallible_impl_from.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Ffallible_impl_from.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ffallible_impl_from.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -2,9 +2,9 @@ use crate::utils::paths::{BEGIN_PANIC, BEGIN_PANIC_FMT, FROM_TRAIT, OPTION, RESU\n use crate::utils::{is_expn_of, match_def_path, method_chain_args, span_lint_and_then, walk_ptrs_ty};\n use if_chain::if_chain;\n use rustc::declare_lint_pass;\n-use rustc::hir;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::ty::{self, Ty};\n+use rustc_hir as hir;\n use rustc_session::declare_tool_lint;\n use rustc_span::Span;\n \n@@ -48,7 +48,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for FallibleImplFrom {\n \n fn lint_impl_body<'a, 'tcx>(cx: &LateContext<'a, 'tcx>, impl_span: Span, impl_items: &[hir::ImplItemRef<'_>]) {\n     use rustc::hir::intravisit::{self, NestedVisitorMap, Visitor};\n-    use rustc::hir::*;\n+    use rustc_hir::*;\n \n     struct FindPanicUnwrap<'a, 'tcx> {\n         lcx: &'a LateContext<'a, 'tcx>,"}, {"sha": "28b4760f05362649d672e3fbf0b5190ef4018307", "filename": "clippy_lints/src/format.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fformat.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -5,9 +5,9 @@ use crate::utils::{\n };\n use if_chain::if_chain;\n use rustc::declare_lint_pass;\n-use rustc::hir::*;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintContext, LintPass};\n use rustc_errors::Applicability;\n+use rustc_hir::*;\n use rustc_session::declare_tool_lint;\n use rustc_span::source_map::Span;\n use syntax::ast::LitKind;"}, {"sha": "98c6d901d1864b18febd13b30cb576d0a63da7d7", "filename": "clippy_lints/src/functions.rs", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Ffunctions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Ffunctions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ffunctions.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -4,12 +4,14 @@ use crate::utils::{\n     type_is_unsafe_function,\n };\n use matches::matches;\n-use rustc::hir::{self, def::Res, def_id::DefId, intravisit};\n+use rustc::hir::intravisit;\n use rustc::impl_lint_pass;\n use rustc::lint::{in_external_macro, LateContext, LateLintPass, LintArray, LintContext, LintPass};\n use rustc::ty::{self, Ty};\n use rustc_data_structures::fx::FxHashSet;\n use rustc_errors::Applicability;\n+use rustc_hir as hir;\n+use rustc_hir::{def::Res, def_id::DefId};\n use rustc_session::declare_tool_lint;\n use rustc_span::source_map::Span;\n use rustc_target::spec::abi::Abi;\n@@ -199,16 +201,16 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Functions {\n         };\n \n         let unsafety = match kind {\n-            hir::intravisit::FnKind::ItemFn(_, _, hir::FnHeader { unsafety, .. }, _, _) => unsafety,\n-            hir::intravisit::FnKind::Method(_, sig, _, _) => sig.header.unsafety,\n-            hir::intravisit::FnKind::Closure(_) => return,\n+            intravisit::FnKind::ItemFn(_, _, hir::FnHeader { unsafety, .. }, _, _) => unsafety,\n+            intravisit::FnKind::Method(_, sig, _, _) => sig.header.unsafety,\n+            intravisit::FnKind::Closure(_) => return,\n         };\n \n         // don't warn for implementations, it's not their fault\n         if !is_impl {\n             // don't lint extern functions decls, it's not their fault either\n             match kind {\n-                hir::intravisit::FnKind::Method(\n+                intravisit::FnKind::Method(\n                     _,\n                     &hir::FnSig {\n                         header: hir::FnHeader { abi: Abi::Rust, .. },\n@@ -217,7 +219,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Functions {\n                     _,\n                     _,\n                 )\n-                | hir::intravisit::FnKind::ItemFn(_, _, hir::FnHeader { abi: Abi::Rust, .. }, _, _) => {\n+                | intravisit::FnKind::ItemFn(_, _, hir::FnHeader { abi: Abi::Rust, .. }, _, _) => {\n                     self.check_arg_number(cx, decl, span.with_hi(decl.output.span().hi()))\n                 },\n                 _ => {},\n@@ -397,7 +399,7 @@ impl<'a, 'tcx> Functions {\n                     tables,\n                 };\n \n-                hir::intravisit::walk_expr(&mut v, expr);\n+                intravisit::walk_expr(&mut v, expr);\n             }\n         }\n     }\n@@ -557,7 +559,7 @@ impl<'a, 'tcx> intravisit::Visitor<'tcx> for DerefVisitor<'a, 'tcx> {\n                     }\n                 }\n             },\n-            hir::ExprKind::Unary(hir::UnDeref, ref ptr) => self.check_arg(ptr),\n+            hir::ExprKind::Unary(hir::UnOp::UnDeref, ref ptr) => self.check_arg(ptr),\n             _ => (),\n         }\n "}, {"sha": "c9939bc5d7c46e6cf8eb57dd6945781a7e8a881b", "filename": "clippy_lints/src/get_last_with_len.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fget_last_with_len.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fget_last_with_len.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fget_last_with_len.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -3,9 +3,9 @@\n use crate::utils::{is_type_diagnostic_item, snippet_with_applicability, span_lint_and_sugg, SpanlessEq};\n use if_chain::if_chain;\n use rustc::declare_lint_pass;\n-use rustc::hir::{BinOpKind, Expr, ExprKind};\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc_errors::Applicability;\n+use rustc_hir::{BinOpKind, Expr, ExprKind};\n use rustc_session::declare_tool_lint;\n use rustc_span::source_map::Spanned;\n use rustc_span::symbol::Symbol;"}, {"sha": "54cf499ae3bcdf6b087c7fa2e0acbc5350a4535a", "filename": "clippy_lints/src/identity_conversion.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fidentity_conversion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fidentity_conversion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fidentity_conversion.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -1,10 +1,10 @@\n use crate::utils::{\n     match_def_path, match_trait_method, paths, same_tys, snippet, snippet_with_macro_callsite, span_lint_and_then,\n };\n-use rustc::hir::*;\n use rustc::impl_lint_pass;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc_errors::Applicability;\n+use rustc_hir::*;\n use rustc_session::declare_tool_lint;\n \n declare_clippy_lint! {"}, {"sha": "b6d02ff9e76dc9d92bb5e761563331c251c2bbab", "filename": "clippy_lints/src/identity_op.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fidentity_op.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fidentity_op.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fidentity_op.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -1,7 +1,7 @@\n use rustc::declare_lint_pass;\n-use rustc::hir::*;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::ty;\n+use rustc_hir::*;\n use rustc_session::declare_tool_lint;\n use rustc_span::source_map::Span;\n "}, {"sha": "f5633d51aa4ebe045f1f6878b7f9e62ee2accb89", "filename": "clippy_lints/src/implicit_return.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fimplicit_return.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fimplicit_return.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fimplicit_return.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -6,10 +6,11 @@ use crate::utils::{\n use if_chain::if_chain;\n use rustc::{\n     declare_lint_pass,\n-    hir::{intravisit::FnKind, Body, Expr, ExprKind, FnDecl, HirId, MatchSource, StmtKind},\n+    hir::intravisit::FnKind,\n     lint::{LateContext, LateLintPass, LintArray, LintPass},\n };\n use rustc_errors::Applicability;\n+use rustc_hir::{Body, Expr, ExprKind, FnDecl, HirId, MatchSource, StmtKind};\n use rustc_session::declare_tool_lint;\n use rustc_span::source_map::Span;\n "}, {"sha": "9083f5823aad93632411524f3b0d102a0417d032", "filename": "clippy_lints/src/indexing_slicing.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Findexing_slicing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Findexing_slicing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Findexing_slicing.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -5,9 +5,9 @@ use crate::utils;\n use crate::utils::higher;\n use crate::utils::higher::Range;\n use rustc::declare_lint_pass;\n-use rustc::hir::*;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::ty;\n+use rustc_hir::*;\n use rustc_session::declare_tool_lint;\n use syntax::ast::RangeLimits;\n "}, {"sha": "c75aa8a30e49b1a402c59c3e34d20cb58d698d52", "filename": "clippy_lints/src/infallible_destructuring_match.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Finfallible_destructuring_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Finfallible_destructuring_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Finfallible_destructuring_match.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -1,9 +1,9 @@\n use super::utils::{get_arg_name, match_var, remove_blocks, snippet_with_applicability, span_lint_and_sugg};\n use if_chain::if_chain;\n use rustc::declare_lint_pass;\n-use rustc::hir::*;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc_errors::Applicability;\n+use rustc_hir::*;\n use rustc_session::declare_tool_lint;\n \n declare_clippy_lint! {"}, {"sha": "25c97d5af80e807607ef9e60f5d64c2aa61beac7", "filename": "clippy_lints/src/infinite_iter.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Finfinite_iter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Finfinite_iter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Finfinite_iter.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -1,6 +1,6 @@\n use rustc::declare_lint_pass;\n-use rustc::hir::*;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc_hir::*;\n use rustc_session::declare_tool_lint;\n \n use crate::utils::{get_trait_def_id, higher, implements_trait, match_qpath, match_type, paths, span_lint};"}, {"sha": "c162de3ad8c4f4184e142a01646211043f747408", "filename": "clippy_lints/src/inherent_impl.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Finherent_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Finherent_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Finherent_impl.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -1,10 +1,10 @@\n //! lint on inherent implementations\n \n use crate::utils::{in_macro, span_lint_and_then};\n-use rustc::hir::*;\n use rustc::impl_lint_pass;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc_data_structures::fx::FxHashMap;\n+use rustc_hir::*;\n use rustc_session::declare_tool_lint;\n use rustc_span::Span;\n "}, {"sha": "01e81762b4c1e6e1d03d59d4dfd61f3b32f53cd2", "filename": "clippy_lints/src/inherent_to_string.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Finherent_to_string.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Finherent_to_string.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Finherent_to_string.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -1,7 +1,7 @@\n use if_chain::if_chain;\n use rustc::declare_lint_pass;\n-use rustc::hir::{ImplItem, ImplItemKind};\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc_hir::{ImplItem, ImplItemKind};\n use rustc_session::declare_tool_lint;\n \n use crate::utils::{"}, {"sha": "4ffc45703edc3d33144fdc2bb51012ace28b8452", "filename": "clippy_lints/src/inline_fn_without_body.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Finline_fn_without_body.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Finline_fn_without_body.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Finline_fn_without_body.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -3,9 +3,9 @@\n use crate::utils::span_lint_and_then;\n use crate::utils::sugg::DiagnosticBuilderExt;\n use rustc::declare_lint_pass;\n-use rustc::hir::*;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc_errors::Applicability;\n+use rustc_hir::*;\n use rustc_session::declare_tool_lint;\n use syntax::ast::{Attribute, Name};\n "}, {"sha": "feb9fac93c9d937a1b94edb1c2d5cf7dc1fca8bf", "filename": "clippy_lints/src/integer_division.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Finteger_division.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Finteger_division.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Finteger_division.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -1,8 +1,8 @@\n use crate::utils::span_help_and_lint;\n use if_chain::if_chain;\n use rustc::declare_lint_pass;\n-use rustc::hir;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc_hir as hir;\n use rustc_session::declare_tool_lint;\n \n declare_clippy_lint! {"}, {"sha": "f2638d5987994f48448c81b21a55f28f2e705012", "filename": "clippy_lints/src/large_enum_variant.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Flarge_enum_variant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Flarge_enum_variant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flarge_enum_variant.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -1,11 +1,11 @@\n //! lint when there is a large size difference between variants on an enum\n \n use crate::utils::{snippet_opt, span_lint_and_then};\n-use rustc::hir::*;\n use rustc::impl_lint_pass;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::ty::layout::LayoutOf;\n use rustc_errors::Applicability;\n+use rustc_hir::*;\n use rustc_session::declare_tool_lint;\n \n declare_clippy_lint! {"}, {"sha": "86abf72e06d06caf858e4a0f99022f177d3f1dc6", "filename": "clippy_lints/src/large_stack_arrays.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Flarge_stack_arrays.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Flarge_stack_arrays.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flarge_stack_arrays.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -1,8 +1,8 @@\n-use rustc::hir::*;\n use rustc::impl_lint_pass;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::mir::interpret::ConstValue;\n use rustc::ty::{self, ConstKind};\n+use rustc_hir::*;\n use rustc_session::declare_tool_lint;\n \n use if_chain::if_chain;"}, {"sha": "653e82a23388803ffaedc8ad231168480fb19bd9", "filename": "clippy_lints/src/len_zero.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Flen_zero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Flen_zero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flen_zero.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -1,11 +1,11 @@\n use crate::utils::{get_item_name, snippet_with_applicability, span_lint, span_lint_and_sugg, walk_ptrs_ty};\n use rustc::declare_lint_pass;\n-use rustc::hir::def_id::DefId;\n-use rustc::hir::*;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::ty;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_errors::Applicability;\n+use rustc_hir::def_id::DefId;\n+use rustc_hir::*;\n use rustc_session::declare_tool_lint;\n use rustc_span::source_map::{Span, Spanned};\n use syntax::ast::{LitKind, Name};"}, {"sha": "b966c68e7cd2987145a02935553002253e5cda36", "filename": "clippy_lints/src/let_if_seq.rs", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Flet_if_seq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Flet_if_seq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flet_if_seq.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -1,11 +1,12 @@\n use crate::utils::{higher, qpath_res, snippet, span_lint_and_then};\n use if_chain::if_chain;\n use rustc::declare_lint_pass;\n-use rustc::hir;\n-use rustc::hir::def::Res;\n-use rustc::hir::BindingAnnotation;\n+use rustc::hir::intravisit;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc_errors::Applicability;\n+use rustc_hir as hir;\n+use rustc_hir::def::Res;\n+use rustc_hir::BindingAnnotation;\n use rustc_session::declare_tool_lint;\n \n declare_clippy_lint! {\n@@ -142,7 +143,7 @@ struct UsedVisitor<'a, 'tcx> {\n     used: bool,\n }\n \n-impl<'a, 'tcx> hir::intravisit::Visitor<'tcx> for UsedVisitor<'a, 'tcx> {\n+impl<'a, 'tcx> intravisit::Visitor<'tcx> for UsedVisitor<'a, 'tcx> {\n     fn visit_expr(&mut self, expr: &'tcx hir::Expr<'_>) {\n         if_chain! {\n             if let hir::ExprKind::Path(ref qpath) = expr.kind;\n@@ -153,10 +154,10 @@ impl<'a, 'tcx> hir::intravisit::Visitor<'tcx> for UsedVisitor<'a, 'tcx> {\n                 return;\n             }\n         }\n-        hir::intravisit::walk_expr(self, expr);\n+        intravisit::walk_expr(self, expr);\n     }\n-    fn nested_visit_map<'this>(&'this mut self) -> hir::intravisit::NestedVisitorMap<'this, 'tcx> {\n-        hir::intravisit::NestedVisitorMap::None\n+    fn nested_visit_map<'this>(&'this mut self) -> intravisit::NestedVisitorMap<'this, 'tcx> {\n+        intravisit::NestedVisitorMap::None\n     }\n }\n \n@@ -181,7 +182,7 @@ fn check_assign<'a, 'tcx>(\n             };\n \n             for s in block.stmts.iter().take(block.stmts.len()-1) {\n-                hir::intravisit::walk_stmt(&mut v, s);\n+                intravisit::walk_stmt(&mut v, s);\n \n                 if v.used {\n                     return None;\n@@ -197,6 +198,6 @@ fn check_assign<'a, 'tcx>(\n \n fn used_in_expr<'a, 'tcx>(cx: &LateContext<'a, 'tcx>, id: hir::HirId, expr: &'tcx hir::Expr<'_>) -> bool {\n     let mut v = UsedVisitor { cx, id, used: false };\n-    hir::intravisit::walk_expr(&mut v, expr);\n+    intravisit::walk_expr(&mut v, expr);\n     v.used\n }"}, {"sha": "f75711a28c3f3abae624c7f5e1f555e4caf07b9b", "filename": "clippy_lints/src/let_underscore.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Flet_underscore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Flet_underscore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flet_underscore.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -1,7 +1,7 @@\n use if_chain::if_chain;\n use rustc::declare_lint_pass;\n-use rustc::hir::*;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc_hir::*;\n use rustc_session::declare_tool_lint;\n \n use crate::utils::{is_must_use_func_call, is_must_use_ty, span_help_and_lint};"}, {"sha": "5b68ecf562bc246e1058ffb94695c79eee52183c", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -26,6 +26,8 @@ extern crate rustc_driver;\n #[allow(unused_extern_crates)]\n extern crate rustc_errors;\n #[allow(unused_extern_crates)]\n+extern crate rustc_hir;\n+#[allow(unused_extern_crates)]\n extern crate rustc_index;\n #[allow(unused_extern_crates)]\n extern crate rustc_lexer;"}, {"sha": "0c72c9c6aa04fab38cb56859ccb7befa6fe560e6", "filename": "clippy_lints/src/lifetimes.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Flifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Flifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flifetimes.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -1,10 +1,11 @@\n use matches::matches;\n use rustc::declare_lint_pass;\n-use rustc::hir::def::{DefKind, Res};\n use rustc::hir::intravisit::*;\n-use rustc::hir::*;\n use rustc::lint::{in_external_macro, LateContext, LateLintPass, LintArray, LintContext, LintPass};\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n+use rustc_hir::def::{DefKind, Res};\n+use rustc_hir::FunctionRetTy::Return;\n+use rustc_hir::*;\n use rustc_session::declare_tool_lint;\n use rustc_span::source_map::Span;\n use rustc_span::symbol::kw;"}, {"sha": "acff3e2f7409c81c616fc8d92885c3f8cac274d4", "filename": "clippy_lints/src/loops.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -2,12 +2,12 @@ use crate::reexport::*;\n use if_chain::if_chain;\n use itertools::Itertools;\n use rustc::declare_lint_pass;\n-use rustc::hir::def::{DefKind, Res};\n-use rustc::hir::def_id;\n use rustc::hir::intravisit::{walk_block, walk_expr, walk_pat, walk_stmt, NestedVisitorMap, Visitor};\n-use rustc::hir::*;\n use rustc::lint::{in_external_macro, LateContext, LateLintPass, LintArray, LintContext, LintPass};\n use rustc::middle::region;\n+use rustc_hir::def::{DefKind, Res};\n+use rustc_hir::def_id;\n+use rustc_hir::*;\n use rustc_session::declare_tool_lint;\n // use rustc::middle::region::CodeExtent;\n use crate::consts::{constant, Constant};"}, {"sha": "31b2dbf2ae4b94b786f88d65bd3794b76777a2cc", "filename": "clippy_lints/src/main_recursion.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fmain_recursion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fmain_recursion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmain_recursion.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -1,6 +1,6 @@\n-use rustc::hir::{Crate, Expr, ExprKind, QPath};\n use rustc::impl_lint_pass;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc_hir::{Crate, Expr, ExprKind, QPath};\n use rustc_session::declare_tool_lint;\n use rustc_span::symbol::sym;\n use syntax::ast::AttrKind;"}, {"sha": "0c66ce5dde55070c45d09c3ab8dae2d71651a66d", "filename": "clippy_lints/src/map_clone.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fmap_clone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fmap_clone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmap_clone.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -4,10 +4,10 @@ use crate::utils::{\n };\n use if_chain::if_chain;\n use rustc::declare_lint_pass;\n-use rustc::hir;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::ty;\n use rustc_errors::Applicability;\n+use rustc_hir as hir;\n use rustc_session::declare_tool_lint;\n use rustc_span::source_map::Span;\n use syntax::ast::Ident;"}, {"sha": "d0164e5e2907f10e9e7ee006864a39a4f1b2e105", "filename": "clippy_lints/src/map_unit_fn.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fmap_unit_fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fmap_unit_fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmap_unit_fn.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -2,10 +2,10 @@ use crate::utils::paths;\n use crate::utils::{iter_input_pats, match_type, method_chain_args, snippet, span_lint_and_then};\n use if_chain::if_chain;\n use rustc::declare_lint_pass;\n-use rustc::hir;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::ty::{self, Ty};\n use rustc_errors::Applicability;\n+use rustc_hir as hir;\n use rustc_session::declare_tool_lint;\n use rustc_span::source_map::Span;\n "}, {"sha": "476051500f56987d3e425f328a7e9ad522519636", "filename": "clippy_lints/src/matches.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fmatches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fmatches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmatches.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -7,11 +7,11 @@ use crate::utils::{\n };\n use if_chain::if_chain;\n use rustc::declare_lint_pass;\n-use rustc::hir::def::CtorKind;\n-use rustc::hir::*;\n use rustc::lint::{in_external_macro, LateContext, LateLintPass, LintArray, LintContext, LintPass};\n use rustc::ty::{self, Ty};\n use rustc_errors::Applicability;\n+use rustc_hir::def::CtorKind;\n+use rustc_hir::*;\n use rustc_session::declare_tool_lint;\n use rustc_span::source_map::Span;\n use std::cmp::Ordering;"}, {"sha": "22797c3b754cb0bd00dc5f5c8b896be60012dba4", "filename": "clippy_lints/src/mem_discriminant.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fmem_discriminant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fmem_discriminant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmem_discriminant.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -1,9 +1,9 @@\n use crate::utils::{match_def_path, paths, snippet, span_lint_and_then, walk_ptrs_ty_depth};\n use if_chain::if_chain;\n use rustc::declare_lint_pass;\n-use rustc::hir::{BorrowKind, Expr, ExprKind};\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc_errors::Applicability;\n+use rustc_hir::{BorrowKind, Expr, ExprKind};\n use rustc_session::declare_tool_lint;\n \n use std::iter;"}, {"sha": "974f6419ee693d83834045a7bc063858a3f46802", "filename": "clippy_lints/src/mem_forget.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fmem_forget.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fmem_forget.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmem_forget.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -1,7 +1,7 @@\n use crate::utils::{match_def_path, paths, qpath_res, span_lint};\n use rustc::declare_lint_pass;\n-use rustc::hir::{Expr, ExprKind};\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc_hir::{Expr, ExprKind};\n use rustc_session::declare_tool_lint;\n \n declare_clippy_lint! {"}, {"sha": "e6b50e546ad0734d1690dcaa9513f1b9dc8e53c7", "filename": "clippy_lints/src/mem_replace.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fmem_replace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fmem_replace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmem_replace.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -4,9 +4,9 @@ use crate::utils::{\n };\n use if_chain::if_chain;\n use rustc::declare_lint_pass;\n-use rustc::hir::{BorrowKind, Expr, ExprKind, Mutability, QPath};\n use rustc::lint::{in_external_macro, LateContext, LateLintPass, LintArray, LintPass};\n use rustc_errors::Applicability;\n+use rustc_hir::{BorrowKind, Expr, ExprKind, Mutability, QPath};\n use rustc_session::declare_tool_lint;\n use rustc_span::source_map::Span;\n "}, {"sha": "83c63ec752f9648278cd0324a64b4414757a979d", "filename": "clippy_lints/src/methods/inefficient_to_string.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fmethods%2Finefficient_to_string.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fmethods%2Finefficient_to_string.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Finefficient_to_string.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -1,10 +1,10 @@\n use super::INEFFICIENT_TO_STRING;\n use crate::utils::{match_def_path, paths, snippet_with_applicability, span_lint_and_then, walk_ptrs_ty_depth};\n use if_chain::if_chain;\n-use rustc::hir;\n use rustc::lint::LateContext;\n use rustc::ty::{self, Ty};\n use rustc_errors::Applicability;\n+use rustc_hir as hir;\n \n /// Checks for the `INEFFICIENT_TO_STRING` lint\n pub fn lint<'tcx>(cx: &LateContext<'_, 'tcx>, expr: &hir::Expr<'_>, arg: &hir::Expr<'_>, arg_ty: Ty<'tcx>) {"}, {"sha": "7f2152e294a7fad238f0384b0cb9a4fdb39321a1", "filename": "clippy_lints/src/methods/manual_saturating_arithmetic.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fmethods%2Fmanual_saturating_arithmetic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fmethods%2Fmanual_saturating_arithmetic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmanual_saturating_arithmetic.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -1,8 +1,8 @@\n use crate::utils::{match_qpath, snippet_with_applicability, span_lint_and_sugg};\n use if_chain::if_chain;\n-use rustc::hir;\n use rustc::lint::LateContext;\n use rustc_errors::Applicability;\n+use rustc_hir as hir;\n use rustc_target::abi::LayoutOf;\n use syntax::ast;\n \n@@ -146,7 +146,7 @@ fn is_min_or_max<'tcx>(cx: &LateContext<'_, 'tcx>, expr: &hir::Expr<'_>) -> Opti\n     }\n \n     if ty.is_signed() {\n-        if let hir::ExprKind::Unary(hir::UnNeg, val) = &expr.kind {\n+        if let hir::ExprKind::Unary(hir::UnOp::UnNeg, val) = &expr.kind {\n             return check_lit(val, true);\n         }\n     }\n@@ -161,7 +161,7 @@ enum Sign {\n }\n \n fn lit_sign(expr: &hir::Expr<'_>) -> Option<Sign> {\n-    if let hir::ExprKind::Unary(hir::UnNeg, inner) = &expr.kind {\n+    if let hir::ExprKind::Unary(hir::UnOp::UnNeg, inner) = &expr.kind {\n         if let hir::ExprKind::Lit(..) = &inner.kind {\n             return Some(Sign::Neg);\n         }"}, {"sha": "c33dae6c283d00c41c7105f0699b16298e595b7e", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -10,11 +10,11 @@ use std::iter;\n use if_chain::if_chain;\n use matches::matches;\n use rustc::declare_lint_pass;\n-use rustc::hir;\n use rustc::hir::intravisit::{self, Visitor};\n use rustc::lint::{in_external_macro, LateContext, LateLintPass, Lint, LintArray, LintContext, LintPass};\n use rustc::ty::{self, Predicate, Ty};\n use rustc_errors::Applicability;\n+use rustc_hir as hir;\n use rustc_session::declare_tool_lint;\n use rustc_span::source_map::Span;\n use rustc_span::symbol::{sym, Symbol, SymbolStr};\n@@ -3163,11 +3163,11 @@ impl OutType {\n     fn matches(self, cx: &LateContext<'_, '_>, ty: &hir::FunctionRetTy<'_>) -> bool {\n         let is_unit = |ty: &hir::Ty<'_>| SpanlessEq::new(cx).eq_ty_kind(&ty.kind, &hir::TyKind::Tup(&[]));\n         match (self, ty) {\n-            (Self::Unit, &hir::DefaultReturn(_)) => true,\n-            (Self::Unit, &hir::Return(ref ty)) if is_unit(ty) => true,\n-            (Self::Bool, &hir::Return(ref ty)) if is_bool(ty) => true,\n-            (Self::Any, &hir::Return(ref ty)) if !is_unit(ty) => true,\n-            (Self::Ref, &hir::Return(ref ty)) => matches!(ty.kind, hir::TyKind::Rptr(_, _)),\n+            (Self::Unit, &hir::FunctionRetTy::DefaultReturn(_)) => true,\n+            (Self::Unit, &hir::FunctionRetTy::Return(ref ty)) if is_unit(ty) => true,\n+            (Self::Bool, &hir::FunctionRetTy::Return(ref ty)) if is_bool(ty) => true,\n+            (Self::Any, &hir::FunctionRetTy::Return(ref ty)) if !is_unit(ty) => true,\n+            (Self::Ref, &hir::FunctionRetTy::Return(ref ty)) => matches!(ty.kind, hir::TyKind::Rptr(_, _)),\n             _ => false,\n         }\n     }"}, {"sha": "c9cb17e965ebb5c41fcc20b4f43cdcf4f2cadcb5", "filename": "clippy_lints/src/methods/option_map_unwrap_or.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fmethods%2Foption_map_unwrap_or.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fmethods%2Foption_map_unwrap_or.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Foption_map_unwrap_or.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -1,10 +1,10 @@\n use crate::utils::{differing_macro_contexts, paths, snippet_with_applicability, span_lint_and_then};\n use crate::utils::{is_copy, match_type};\n use rustc::hir::intravisit::{walk_path, NestedVisitorMap, Visitor};\n-use rustc::hir::{self, *};\n use rustc::lint::LateContext;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_errors::Applicability;\n+use rustc_hir::{self, *};\n use rustc_span::source_map::Span;\n use rustc_span::symbol::Symbol;\n \n@@ -13,9 +13,9 @@ use super::OPTION_MAP_UNWRAP_OR;\n /// lint use of `map().unwrap_or()` for `Option`s\n pub(super) fn lint<'a, 'tcx>(\n     cx: &LateContext<'a, 'tcx>,\n-    expr: &hir::Expr<'_>,\n-    map_args: &'tcx [hir::Expr<'_>],\n-    unwrap_args: &'tcx [hir::Expr<'_>],\n+    expr: &rustc_hir::Expr<'_>,\n+    map_args: &'tcx [rustc_hir::Expr<'_>],\n+    unwrap_args: &'tcx [rustc_hir::Expr<'_>],\n     map_span: Span,\n ) {\n     // lint if the caller of `map()` is an `Option`"}, {"sha": "b77a40c6fc03384db85c1090fdb4cc7ffadb34a6", "filename": "clippy_lints/src/methods/unnecessary_filter_map.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fmethods%2Funnecessary_filter_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fmethods%2Funnecessary_filter_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Funnecessary_filter_map.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -1,10 +1,10 @@\n use crate::utils::paths;\n use crate::utils::usage::mutated_variables;\n use crate::utils::{match_qpath, match_trait_method, span_lint};\n-use rustc::hir;\n-use rustc::hir::def::Res;\n use rustc::hir::intravisit::{walk_expr, NestedVisitorMap, Visitor};\n use rustc::lint::LateContext;\n+use rustc_hir as hir;\n+use rustc_hir::def::Res;\n \n use if_chain::if_chain;\n "}, {"sha": "4e2948620e2d55275d7a9d37aa48f1fa69fc216d", "filename": "clippy_lints/src/minmax.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fminmax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fminmax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fminmax.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -1,8 +1,8 @@\n use crate::consts::{constant_simple, Constant};\n use crate::utils::{match_def_path, paths, span_lint};\n use rustc::declare_lint_pass;\n-use rustc::hir::*;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc_hir::*;\n use rustc_session::declare_tool_lint;\n use std::cmp::Ordering;\n "}, {"sha": "202fb4cdcf7fefb9393c540167041f93c0234f02", "filename": "clippy_lints/src/misc.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fmisc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fmisc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmisc.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -2,10 +2,10 @@ use if_chain::if_chain;\n use matches::matches;\n use rustc::declare_lint_pass;\n use rustc::hir::intravisit::FnKind;\n-use rustc::hir::*;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::ty;\n use rustc_errors::Applicability;\n+use rustc_hir::*;\n use rustc_session::declare_tool_lint;\n use rustc_span::source_map::{ExpnKind, Span};\n use syntax::ast::LitKind;\n@@ -482,7 +482,7 @@ fn is_allowed<'a, 'tcx>(cx: &LateContext<'a, 'tcx>, expr: &'tcx Expr<'_>) -> boo\n // Return true if `expr` is the result of `signum()` invoked on a float value.\n fn is_signum(cx: &LateContext<'_, '_>, expr: &Expr<'_>) -> bool {\n     // The negation of a signum is still a signum\n-    if let ExprKind::Unary(UnNeg, ref child_expr) = expr.kind {\n+    if let ExprKind::Unary(UnOp::UnNeg, ref child_expr) = expr.kind {\n         return is_signum(cx, &child_expr);\n     }\n \n@@ -544,7 +544,7 @@ fn check_to_owned(cx: &LateContext<'_, '_>, expr: &Expr<'_>, other: &Expr<'_>) {\n     }\n \n     let other_gets_derefed = match other.kind {\n-        ExprKind::Unary(UnDeref, _) => true,\n+        ExprKind::Unary(UnOp::UnDeref, _) => true,\n         _ => false,\n     };\n "}, {"sha": "980812c9e0ca0cba90476981e44ce10448034b61", "filename": "clippy_lints/src/missing_const_for_fn.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fmissing_const_for_fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fmissing_const_for_fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmissing_const_for_fn.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -1,9 +1,9 @@\n use crate::utils::{has_drop, is_entrypoint_fn, span_lint, trait_ref_of_method};\n use rustc::declare_lint_pass;\n-use rustc::hir;\n use rustc::hir::intravisit::FnKind;\n-use rustc::hir::{Body, Constness, FnDecl, HirId};\n use rustc::lint::{in_external_macro, LateContext, LateLintPass, LintArray, LintPass};\n+use rustc_hir as hir;\n+use rustc_hir::{Body, Constness, FnDecl, HirId};\n use rustc_mir::transform::qualify_min_const_fn::is_min_const_fn;\n use rustc_session::declare_tool_lint;\n use rustc_span::Span;"}, {"sha": "e736e13deed8270f0f29c33184abd6bf8b225023", "filename": "clippy_lints/src/missing_doc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fmissing_doc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fmissing_doc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmissing_doc.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -7,10 +7,10 @@\n \n use crate::utils::span_lint;\n use if_chain::if_chain;\n-use rustc::hir;\n use rustc::impl_lint_pass;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintContext, LintPass};\n use rustc::ty;\n+use rustc_hir as hir;\n use rustc_session::declare_tool_lint;\n use rustc_span::source_map::Span;\n use syntax::ast::{self, MetaItem, MetaItemKind};"}, {"sha": "1ad3dff531dc6705085810707b70c2ab5896ae79", "filename": "clippy_lints/src/missing_inline.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fmissing_inline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fmissing_inline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmissing_inline.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -1,7 +1,7 @@\n use crate::utils::span_lint;\n use rustc::declare_lint_pass;\n-use rustc::hir;\n use rustc::lint::{self, LateContext, LateLintPass, LintArray, LintContext, LintPass};\n+use rustc_hir as hir;\n use rustc_session::declare_tool_lint;\n use rustc_span::source_map::Span;\n use syntax::ast;"}, {"sha": "82631257da8b926af15b3a1c01fe11bb858cc85b", "filename": "clippy_lints/src/modulo_arithmetic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fmodulo_arithmetic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fmodulo_arithmetic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmodulo_arithmetic.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -2,9 +2,9 @@ use crate::consts::{constant, Constant};\n use crate::utils::{sext, span_lint_and_then};\n use if_chain::if_chain;\n use rustc::declare_lint_pass;\n-use rustc::hir::*;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::ty::{self};\n+use rustc_hir::*;\n use rustc_session::declare_tool_lint;\n use std::fmt::Display;\n "}, {"sha": "1f4f0d53cccb1b916a41fd3337767f8faba6c6aa", "filename": "clippy_lints/src/mul_add.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fmul_add.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fmul_add.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmul_add.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -1,7 +1,7 @@\n use rustc::declare_lint_pass;\n-use rustc::hir::*;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc_errors::Applicability;\n+use rustc_hir::*;\n use rustc_session::declare_tool_lint;\n \n use crate::utils::*;"}, {"sha": "367f8638dc78839fa58078af5dc383b031b1a70d", "filename": "clippy_lints/src/mut_key.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fmut_key.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fmut_key.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmut_key.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -1,8 +1,8 @@\n use crate::utils::{match_def_path, paths, span_lint, trait_ref_of_method, walk_ptrs_ty};\n use rustc::declare_lint_pass;\n-use rustc::hir;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::ty::{Adt, Dynamic, Opaque, Param, RawPtr, Ref, Ty, TypeAndMut};\n+use rustc_hir as hir;\n use rustc_session::declare_tool_lint;\n use rustc_span::source_map::Span;\n "}, {"sha": "c2e99c3559d8a49105b7ef1bec72ad06cebf672e", "filename": "clippy_lints/src/mut_mut.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fmut_mut.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fmut_mut.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmut_mut.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -1,9 +1,9 @@\n use crate::utils::{higher, span_lint};\n use rustc::declare_lint_pass;\n-use rustc::hir;\n use rustc::hir::intravisit;\n use rustc::lint::{in_external_macro, LateContext, LateLintPass, LintArray, LintContext, LintPass};\n use rustc::ty;\n+use rustc_hir as hir;\n use rustc_session::declare_tool_lint;\n \n declare_clippy_lint! {"}, {"sha": "165b3a7c7e685e249ad7e9472e1ec2deedbaf815", "filename": "clippy_lints/src/mut_reference.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fmut_reference.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fmut_reference.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmut_reference.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -1,9 +1,9 @@\n use crate::utils::span_lint;\n use rustc::declare_lint_pass;\n-use rustc::hir::*;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::ty::subst::Subst;\n use rustc::ty::{self, Ty};\n+use rustc_hir::*;\n use rustc_session::declare_tool_lint;\n \n declare_clippy_lint! {"}, {"sha": "bbcfcd436135ecef1155859af1d912accadb6701", "filename": "clippy_lints/src/mutable_debug_assertion.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fmutable_debug_assertion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fmutable_debug_assertion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmutable_debug_assertion.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -2,9 +2,9 @@ use crate::utils::{is_direct_expn_of, span_lint};\n use if_chain::if_chain;\n use matches::matches;\n use rustc::hir::intravisit::{walk_expr, NestedVisitorMap, Visitor};\n-use rustc::hir::{BorrowKind, Expr, ExprKind, Mutability, StmtKind, UnOp};\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::{declare_lint_pass, ty};\n+use rustc_hir::{BorrowKind, Expr, ExprKind, Mutability, StmtKind, UnOp};\n use rustc_session::declare_tool_lint;\n use rustc_span::Span;\n "}, {"sha": "fb3c767caca59da49830bee17493155d63d274ea", "filename": "clippy_lints/src/mutex_atomic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fmutex_atomic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fmutex_atomic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmutex_atomic.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -4,9 +4,9 @@\n \n use crate::utils::{match_type, paths, span_lint};\n use rustc::declare_lint_pass;\n-use rustc::hir::Expr;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::ty::{self, Ty};\n+use rustc_hir::Expr;\n use rustc_session::declare_tool_lint;\n use syntax::ast;\n "}, {"sha": "c11e6bf25f4320bf4120bb0e89b367a0a0c7e7cb", "filename": "clippy_lints/src/needless_bool.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fneedless_bool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fneedless_bool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_bool.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -5,9 +5,9 @@\n use crate::utils::sugg::Sugg;\n use crate::utils::{higher, parent_node_is_if_expr, span_lint, span_lint_and_sugg};\n use rustc::declare_lint_pass;\n-use rustc::hir::*;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc_errors::Applicability;\n+use rustc_hir::*;\n use rustc_session::declare_tool_lint;\n use rustc_span::source_map::Spanned;\n use syntax::ast::LitKind;"}, {"sha": "985501472740459af401f8097c2a8b4f3f5be356", "filename": "clippy_lints/src/needless_borrow.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fneedless_borrow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fneedless_borrow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_borrow.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -4,12 +4,12 @@\n \n use crate::utils::{snippet_opt, span_lint_and_then};\n use if_chain::if_chain;\n-use rustc::hir::{BindingAnnotation, BorrowKind, Expr, ExprKind, HirId, Item, Mutability, Pat, PatKind};\n use rustc::impl_lint_pass;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::ty;\n use rustc::ty::adjustment::{Adjust, Adjustment};\n use rustc_errors::Applicability;\n+use rustc_hir::{BindingAnnotation, BorrowKind, Expr, ExprKind, HirId, Item, Mutability, Pat, PatKind};\n use rustc_session::declare_tool_lint;\n \n declare_clippy_lint! {"}, {"sha": "f05b47cf926cef99981da62cdb03fd0ee9f3a14c", "filename": "clippy_lints/src/needless_borrowed_ref.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fneedless_borrowed_ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fneedless_borrowed_ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_borrowed_ref.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -5,9 +5,9 @@\n use crate::utils::{snippet_with_applicability, span_lint_and_then};\n use if_chain::if_chain;\n use rustc::declare_lint_pass;\n-use rustc::hir::{BindingAnnotation, Mutability, Node, Pat, PatKind};\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc_errors::Applicability;\n+use rustc_hir::{BindingAnnotation, Mutability, Node, Pat, PatKind};\n use rustc_session::declare_tool_lint;\n \n declare_clippy_lint! {"}, {"sha": "c580715a1b2184ba36793222b030e609015b3201", "filename": "clippy_lints/src/needless_pass_by_value.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -7,12 +7,12 @@ use if_chain::if_chain;\n use matches::matches;\n use rustc::declare_lint_pass;\n use rustc::hir::intravisit::FnKind;\n-use rustc::hir::*;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::traits;\n use rustc::ty::{self, RegionKind, TypeFoldable};\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_errors::Applicability;\n+use rustc_hir::*;\n use rustc_session::declare_tool_lint;\n use rustc_span::{Span, Symbol};\n use rustc_target::spec::abi::Abi;"}, {"sha": "f122948893f5abe8509504550d9dc62772625600", "filename": "clippy_lints/src/needless_update.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fneedless_update.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fneedless_update.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_update.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -1,8 +1,8 @@\n use crate::utils::span_lint;\n use rustc::declare_lint_pass;\n-use rustc::hir::{Expr, ExprKind};\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::ty;\n+use rustc_hir::{Expr, ExprKind};\n use rustc_session::declare_tool_lint;\n \n declare_clippy_lint! {"}, {"sha": "1a556fff23f40c18971fbd6b98a18d3775452021", "filename": "clippy_lints/src/neg_cmp_op_on_partial_ord.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fneg_cmp_op_on_partial_ord.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fneg_cmp_op_on_partial_ord.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneg_cmp_op_on_partial_ord.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -1,7 +1,7 @@\n use if_chain::if_chain;\n use rustc::declare_lint_pass;\n-use rustc::hir::*;\n use rustc::lint::{in_external_macro, LateContext, LateLintPass, LintArray, LintContext, LintPass};\n+use rustc_hir::*;\n use rustc_session::declare_tool_lint;\n \n use crate::utils::{self, paths, span_lint};"}, {"sha": "9757d1c01b950a44892e1f9614e22716b23ed185", "filename": "clippy_lints/src/neg_multiply.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fneg_multiply.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fneg_multiply.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneg_multiply.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -1,7 +1,7 @@\n use if_chain::if_chain;\n use rustc::declare_lint_pass;\n-use rustc::hir::*;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc_hir::*;\n use rustc_session::declare_tool_lint;\n use rustc_span::source_map::Span;\n \n@@ -33,8 +33,8 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for NegMultiply {\n             if BinOpKind::Mul == op.node {\n                 match (&left.kind, &right.kind) {\n                     (&ExprKind::Unary(..), &ExprKind::Unary(..)) => {},\n-                    (&ExprKind::Unary(UnNeg, ref lit), _) => check_mul(cx, e.span, lit, right),\n-                    (_, &ExprKind::Unary(UnNeg, ref lit)) => check_mul(cx, e.span, lit, left),\n+                    (&ExprKind::Unary(UnOp::UnNeg, ref lit), _) => check_mul(cx, e.span, lit, right),\n+                    (_, &ExprKind::Unary(UnOp::UnNeg, ref lit)) => check_mul(cx, e.span, lit, left),\n                     _ => {},\n                 }\n             }"}, {"sha": "84aaa90428df1f842172a794e659a0f52b53680d", "filename": "clippy_lints/src/new_without_default.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fnew_without_default.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fnew_without_default.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fnew_without_default.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -2,13 +2,13 @@ use crate::utils::paths;\n use crate::utils::sugg::DiagnosticBuilderExt;\n use crate::utils::{get_trait_def_id, implements_trait, return_ty, same_tys, span_lint_hir_and_then};\n use if_chain::if_chain;\n-use rustc::hir;\n-use rustc::hir::def_id::DefId;\n-use rustc::hir::HirIdSet;\n use rustc::impl_lint_pass;\n use rustc::lint::{in_external_macro, LateContext, LateLintPass, LintArray, LintContext, LintPass};\n use rustc::ty::{self, Ty};\n use rustc_errors::Applicability;\n+use rustc_hir as hir;\n+use rustc_hir::def_id::DefId;\n+use rustc_hir::HirIdSet;\n use rustc_session::declare_tool_lint;\n use rustc_span::source_map::Span;\n "}, {"sha": "6a00d253c956ff318241d50e5368e75bd2e51fd4", "filename": "clippy_lints/src/no_effect.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fno_effect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fno_effect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fno_effect.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -1,9 +1,9 @@\n use crate::utils::{has_drop, qpath_res, snippet_opt, span_lint, span_lint_and_sugg};\n use rustc::declare_lint_pass;\n-use rustc::hir::def::{DefKind, Res};\n-use rustc::hir::{BinOpKind, BlockCheckMode, Expr, ExprKind, Stmt, StmtKind, UnsafeSource};\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc_errors::Applicability;\n+use rustc_hir::def::{DefKind, Res};\n+use rustc_hir::{BinOpKind, BlockCheckMode, Expr, ExprKind, Stmt, StmtKind, UnsafeSource};\n use rustc_session::declare_tool_lint;\n use std::ops::Deref;\n "}, {"sha": "039de766c086a91b6b3c093aad8dee5e14c1826f", "filename": "clippy_lints/src/non_copy_const.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fnon_copy_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fnon_copy_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fnon_copy_const.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -5,11 +5,11 @@\n use std::ptr;\n \n use rustc::declare_lint_pass;\n-use rustc::hir::def::{DefKind, Res};\n-use rustc::hir::*;\n use rustc::lint::{LateContext, LateLintPass, Lint, LintArray, LintPass};\n use rustc::ty::adjustment::Adjust;\n use rustc::ty::{Ty, TypeFlags};\n+use rustc_hir::def::{DefKind, Res};\n+use rustc_hir::*;\n use rustc_session::declare_tool_lint;\n use rustc_span::{InnerSpan, Span, DUMMY_SP};\n use rustc_typeck::hir_ty_to_ty;\n@@ -222,7 +222,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for NonCopyConst {\n                             needs_check_adjustment = false;\n                             break;\n                         },\n-                        ExprKind::Unary(UnDeref, _) => {\n+                        ExprKind::Unary(UnOp::UnDeref, _) => {\n                             // `*e` => desugared to `*Deref::deref(&e)`,\n                             // meaning `e` must be referenced.\n                             // no need to go further up since a method call is involved now."}, {"sha": "083f0ee2168d4e0e7afcea0b776d4d87e87e59d9", "filename": "clippy_lints/src/ok_if_let.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fok_if_let.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fok_if_let.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fok_if_let.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -1,8 +1,8 @@\n use crate::utils::{match_type, method_chain_args, paths, snippet, span_help_and_lint};\n use if_chain::if_chain;\n use rustc::declare_lint_pass;\n-use rustc::hir::*;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc_hir::*;\n use rustc_session::declare_tool_lint;\n \n declare_clippy_lint! {"}, {"sha": "7ae73edc0164f261e7809524def03678c07c9a13", "filename": "clippy_lints/src/open_options.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fopen_options.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fopen_options.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fopen_options.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -1,7 +1,7 @@\n use crate::utils::{match_type, paths, span_lint, walk_ptrs_ty};\n use rustc::declare_lint_pass;\n-use rustc::hir::{Expr, ExprKind};\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc_hir::{Expr, ExprKind};\n use rustc_session::declare_tool_lint;\n use rustc_span::source_map::{Span, Spanned};\n use syntax::ast::LitKind;"}, {"sha": "453ebb1c6e19349409d6e6facb22b60a356ce75b", "filename": "clippy_lints/src/overflow_check_conditional.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Foverflow_check_conditional.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Foverflow_check_conditional.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Foverflow_check_conditional.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -1,8 +1,8 @@\n use crate::utils::{span_lint, SpanlessEq};\n use if_chain::if_chain;\n use rustc::declare_lint_pass;\n-use rustc::hir::*;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc_hir::*;\n use rustc_session::declare_tool_lint;\n \n declare_clippy_lint! {"}, {"sha": "8677be55918380584fef975b51691fc80ed6dd5a", "filename": "clippy_lints/src/panic_unimplemented.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fpanic_unimplemented.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fpanic_unimplemented.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fpanic_unimplemented.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -1,8 +1,8 @@\n use crate::utils::{is_direct_expn_of, is_expn_of, match_function_call, paths, span_lint};\n use if_chain::if_chain;\n use rustc::declare_lint_pass;\n-use rustc::hir::*;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc_hir::*;\n use rustc_session::declare_tool_lint;\n use rustc_span::Span;\n use syntax::ast::LitKind;"}, {"sha": "7522b96e1cdedb0d7b093f0be4918c13a141f645", "filename": "clippy_lints/src/partialeq_ne_impl.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fpartialeq_ne_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fpartialeq_ne_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fpartialeq_ne_impl.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -1,8 +1,8 @@\n use crate::utils::{is_automatically_derived, span_lint_hir};\n use if_chain::if_chain;\n use rustc::declare_lint_pass;\n-use rustc::hir::*;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc_hir::*;\n use rustc_session::declare_tool_lint;\n \n declare_clippy_lint! {"}, {"sha": "2ae67d2e995f481764142911add4f59bd63d4f35", "filename": "clippy_lints/src/path_buf_push_overwrite.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fpath_buf_push_overwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fpath_buf_push_overwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fpath_buf_push_overwrite.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -1,9 +1,9 @@\n use crate::utils::{match_type, paths, span_lint_and_sugg, walk_ptrs_ty};\n use if_chain::if_chain;\n use rustc::declare_lint_pass;\n-use rustc::hir::*;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc_errors::Applicability;\n+use rustc_hir::*;\n use rustc_session::declare_tool_lint;\n use std::path::{Component, Path};\n use syntax::ast::LitKind;"}, {"sha": "87a487c3b9eb28d3aa7d2f2b6655c7c64062f5ee", "filename": "clippy_lints/src/ptr.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fptr.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -7,11 +7,11 @@ use crate::utils::{\n };\n use if_chain::if_chain;\n use rustc::declare_lint_pass;\n-use rustc::hir::QPath;\n-use rustc::hir::*;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::ty;\n use rustc_errors::Applicability;\n+use rustc_hir::QPath;\n+use rustc_hir::*;\n use rustc_session::declare_tool_lint;\n use rustc_span::source_map::Span;\n use rustc_span::{MultiSpan, Symbol};"}, {"sha": "129adbe5fed7bbd50c0e1736d07bb5e472e9b81a", "filename": "clippy_lints/src/ptr_offset_with_cast.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fptr_offset_with_cast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fptr_offset_with_cast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fptr_offset_with_cast.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -1,8 +1,8 @@\n use crate::utils;\n use rustc::declare_lint_pass;\n-use rustc::hir::{Expr, ExprKind};\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc_errors::Applicability;\n+use rustc_hir::{Expr, ExprKind};\n use rustc_session::declare_tool_lint;\n use std::fmt;\n "}, {"sha": "12d0197c3a00c9b7d728ebef195225a742ec3ad7", "filename": "clippy_lints/src/question_mark.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fquestion_mark.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fquestion_mark.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fquestion_mark.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -1,9 +1,9 @@\n use if_chain::if_chain;\n use rustc::declare_lint_pass;\n-use rustc::hir::def::{DefKind, Res};\n-use rustc::hir::*;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc_errors::Applicability;\n+use rustc_hir::def::{DefKind, Res};\n+use rustc_hir::*;\n use rustc_session::declare_tool_lint;\n \n use crate::utils::paths::*;"}, {"sha": "7787aa3266136a2c0a97f4b031cd6c9b65c1630a", "filename": "clippy_lints/src/ranges.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Franges.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Franges.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Franges.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -1,8 +1,8 @@\n use if_chain::if_chain;\n use rustc::declare_lint_pass;\n-use rustc::hir::*;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc_errors::Applicability;\n+use rustc_hir::*;\n use rustc_session::declare_tool_lint;\n use rustc_span::source_map::Spanned;\n use syntax::ast::RangeLimits;"}, {"sha": "12c99bc8f9bb9a509e4061737dbe3c1402446e2d", "filename": "clippy_lints/src/redundant_clone.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fredundant_clone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fredundant_clone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fredundant_clone.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -6,7 +6,6 @@ use if_chain::if_chain;\n use matches::matches;\n use rustc::declare_lint_pass;\n use rustc::hir::intravisit::FnKind;\n-use rustc::hir::{def_id, Body, FnDecl, HirId};\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::mir::{\n     self, traversal,\n@@ -15,6 +14,7 @@ use rustc::mir::{\n use rustc::ty::{self, fold::TypeVisitor, Ty};\n use rustc_data_structures::{fx::FxHashMap, transitive_relation::TransitiveRelation};\n use rustc_errors::Applicability;\n+use rustc_hir::{def_id, Body, FnDecl, HirId};\n use rustc_index::bit_set::{BitSet, HybridBitSet};\n use rustc_mir::dataflow::{\n     do_dataflow, BitDenotation, BottomValue, DataflowResults, DataflowResultsCursor, DebugFormatted, GenKillSet,"}, {"sha": "59e55e58398317df137105929a56aca75b5fe79d", "filename": "clippy_lints/src/redundant_pattern_matching.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fredundant_pattern_matching.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fredundant_pattern_matching.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fredundant_pattern_matching.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -1,8 +1,8 @@\n use crate::utils::{match_qpath, paths, snippet, span_lint_and_then};\n use rustc::declare_lint_pass;\n-use rustc::hir::*;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc_errors::Applicability;\n+use rustc_hir::*;\n use rustc_session::declare_tool_lint;\n use syntax::ast::LitKind;\n "}, {"sha": "188ff6d205f712b095c3088cad8d210dc8e034f8", "filename": "clippy_lints/src/regex.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fregex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fregex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fregex.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -1,10 +1,10 @@\n use crate::consts::{constant, Constant};\n use crate::utils::{is_expn_of, match_def_path, match_type, paths, span_help_and_lint, span_lint};\n use if_chain::if_chain;\n-use rustc::hir::*;\n use rustc::impl_lint_pass;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc_data_structures::fx::FxHashSet;\n+use rustc_hir::*;\n use rustc_session::declare_tool_lint;\n use rustc_span::source_map::{BytePos, Span};\n use std::convert::TryFrom;"}, {"sha": "26ce494245cf77f4026fde757d587282e374e1c6", "filename": "clippy_lints/src/replace_consts.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Freplace_consts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Freplace_consts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Freplace_consts.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -1,10 +1,10 @@\n use crate::utils::{match_def_path, span_lint_and_sugg};\n use if_chain::if_chain;\n use rustc::declare_lint_pass;\n-use rustc::hir::def::{DefKind, Res};\n-use rustc::hir::*;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc_errors::Applicability;\n+use rustc_hir::def::{DefKind, Res};\n+use rustc_hir::*;\n use rustc_session::declare_tool_lint;\n \n declare_clippy_lint! {"}, {"sha": "68c3cc70d2845247b17bb72f96665828d52d2b75", "filename": "clippy_lints/src/serde_api.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fserde_api.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fserde_api.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fserde_api.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -1,7 +1,7 @@\n use crate::utils::{get_trait_def_id, paths, span_lint};\n use rustc::declare_lint_pass;\n-use rustc::hir::*;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc_hir::*;\n use rustc_session::declare_tool_lint;\n \n declare_clippy_lint! {"}, {"sha": "6efb2c272f15e61532f743ec1c8529aa523505b1", "filename": "clippy_lints/src/shadow.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fshadow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fshadow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fshadow.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -2,9 +2,9 @@ use crate::reexport::*;\n use crate::utils::{contains_name, higher, iter_input_pats, snippet, span_lint_and_then};\n use rustc::declare_lint_pass;\n use rustc::hir::intravisit::FnKind;\n-use rustc::hir::*;\n use rustc::lint::{in_external_macro, LateContext, LateLintPass, LintArray, LintContext, LintPass};\n use rustc::ty;\n+use rustc_hir::*;\n use rustc_session::declare_tool_lint;\n use rustc_span::source_map::Span;\n \n@@ -371,7 +371,7 @@ fn is_self_shadow(name: Name, expr: &Expr<'_>) -> bool {\n         ExprKind::Block(ref block, _) => {\n             block.stmts.is_empty() && block.expr.as_ref().map_or(false, |e| is_self_shadow(name, e))\n         },\n-        ExprKind::Unary(op, ref inner) => (UnDeref == op) && is_self_shadow(name, inner),\n+        ExprKind::Unary(op, ref inner) => (UnOp::UnDeref == op) && is_self_shadow(name, inner),\n         ExprKind::Path(QPath::Resolved(_, ref path)) => path_eq_name(name, path),\n         _ => false,\n     }"}, {"sha": "65b88f51ce2786415336fd37d9a5927f03398ccd", "filename": "clippy_lints/src/slow_vector_initialization.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fslow_vector_initialization.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fslow_vector_initialization.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fslow_vector_initialization.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -3,9 +3,9 @@ use crate::utils::{get_enclosing_block, match_qpath, span_lint_and_then, Spanles\n use if_chain::if_chain;\n use rustc::declare_lint_pass;\n use rustc::hir::intravisit::{walk_block, walk_expr, walk_stmt, NestedVisitorMap, Visitor};\n-use rustc::hir::*;\n use rustc::lint::{LateContext, LateLintPass, Lint, LintArray, LintPass};\n use rustc_errors::Applicability;\n+use rustc_hir::*;\n use rustc_session::declare_tool_lint;\n use rustc_span::symbol::Symbol;\n use syntax::ast::LitKind;"}, {"sha": "e36dbbbe5f4279b2b698c6201d5dc9ef7c5adc7d", "filename": "clippy_lints/src/strings.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fstrings.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fstrings.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fstrings.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -1,7 +1,7 @@\n use rustc::declare_lint_pass;\n-use rustc::hir::*;\n use rustc::lint::{in_external_macro, LateContext, LateLintPass, LintArray, LintContext, LintPass};\n use rustc_errors::Applicability;\n+use rustc_hir::*;\n use rustc_session::declare_tool_lint;\n use rustc_span::source_map::Spanned;\n "}, {"sha": "4756ca364d923c2fdc115ee8543e26027d739bc9", "filename": "clippy_lints/src/suspicious_trait_impl.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fsuspicious_trait_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fsuspicious_trait_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fsuspicious_trait_impl.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -1,9 +1,9 @@\n use crate::utils::{get_trait_def_id, span_lint, trait_ref_of_method};\n use if_chain::if_chain;\n use rustc::declare_lint_pass;\n-use rustc::hir;\n use rustc::hir::intravisit::{walk_expr, NestedVisitorMap, Visitor};\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc_hir as hir;\n use rustc_session::declare_tool_lint;\n \n declare_clippy_lint! {"}, {"sha": "4b8fcbb63c50e4dc41097880a8a87d52e10bb4d9", "filename": "clippy_lints/src/swap.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fswap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fswap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fswap.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -6,10 +6,10 @@ use crate::utils::{\n use if_chain::if_chain;\n use matches::matches;\n use rustc::declare_lint_pass;\n-use rustc::hir::*;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::ty;\n use rustc_errors::Applicability;\n+use rustc_hir::*;\n use rustc_session::declare_tool_lint;\n use rustc_span::Symbol;\n "}, {"sha": "b5419c80341e4c904ca2208d849185b4f340ef8b", "filename": "clippy_lints/src/temporary_assignment.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Ftemporary_assignment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Ftemporary_assignment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftemporary_assignment.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -1,9 +1,9 @@\n use crate::utils::is_adjusted;\n use crate::utils::span_lint;\n use rustc::declare_lint_pass;\n-use rustc::hir::def::{DefKind, Res};\n-use rustc::hir::{Expr, ExprKind};\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc_hir::def::{DefKind, Res};\n+use rustc_hir::{Expr, ExprKind};\n use rustc_session::declare_tool_lint;\n \n declare_clippy_lint! {"}, {"sha": "3d5f3347eda2c78669839c61bde5fed558b2da39", "filename": "clippy_lints/src/to_digit_is_some.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fto_digit_is_some.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fto_digit_is_some.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fto_digit_is_some.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -1,10 +1,10 @@\n use crate::utils::{match_def_path, snippet_with_applicability, span_lint_and_sugg};\n use if_chain::if_chain;\n use rustc::declare_lint_pass;\n-use rustc::hir;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::ty;\n use rustc_errors::Applicability;\n+use rustc_hir as hir;\n use rustc_session::declare_tool_lint;\n \n declare_clippy_lint! {"}, {"sha": "476517362a1e08c003da9bb4fffddb1d8e051647", "filename": "clippy_lints/src/trait_bounds.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Ftrait_bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Ftrait_bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftrait_bounds.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -1,8 +1,8 @@\n use crate::utils::{in_macro, snippet, span_help_and_lint, SpanlessHash};\n-use rustc::hir::*;\n use rustc::impl_lint_pass;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc_data_structures::fx::FxHashMap;\n+use rustc_hir::*;\n use rustc_session::declare_tool_lint;\n \n #[derive(Copy, Clone)]"}, {"sha": "7e87a285eba975903e313734bbfccda33783ebe3", "filename": "clippy_lints/src/transmute.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Ftransmute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Ftransmute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftransmute.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -3,10 +3,10 @@ use crate::utils::{\n };\n use if_chain::if_chain;\n use rustc::declare_lint_pass;\n-use rustc::hir::*;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::ty::{self, Ty};\n use rustc_errors::Applicability;\n+use rustc_hir::*;\n use rustc_session::declare_tool_lint;\n use std::borrow::Cow;\n use syntax::ast;"}, {"sha": "3ecd45b580db5a2d07e33c7dd8a23e0f7f662a16", "filename": "clippy_lints/src/transmuting_null.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Ftransmuting_null.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Ftransmuting_null.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftransmuting_null.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -2,8 +2,8 @@ use crate::consts::{constant_context, Constant};\n use crate::utils::{match_qpath, paths, span_lint};\n use if_chain::if_chain;\n use rustc::declare_lint_pass;\n-use rustc::hir::{Expr, ExprKind};\n use rustc::lint::{in_external_macro, LateContext, LateLintPass, LintArray, LintContext, LintPass};\n+use rustc_hir::{Expr, ExprKind};\n use rustc_session::declare_tool_lint;\n use syntax::ast::LitKind;\n "}, {"sha": "f28527dc71fbca0c887f9275bf38518bdc4ed858", "filename": "clippy_lints/src/trivially_copy_pass_by_ref.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Ftrivially_copy_pass_by_ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Ftrivially_copy_pass_by_ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftrivially_copy_pass_by_ref.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -3,14 +3,14 @@ use std::cmp;\n use crate::utils::{is_copy, is_self_ty, snippet, span_lint_and_sugg};\n use if_chain::if_chain;\n use matches::matches;\n-use rustc::hir;\n use rustc::hir::intravisit::FnKind;\n-use rustc::hir::*;\n use rustc::impl_lint_pass;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::session::config::Config as SessionConfig;\n use rustc::ty;\n use rustc_errors::Applicability;\n+use rustc_hir as hir;\n+use rustc_hir::*;\n use rustc_session::declare_tool_lint;\n use rustc_span::Span;\n use rustc_target::abi::LayoutOf;"}, {"sha": "76c1decc611aa3ecb691d03e7b05ea09bfd64bb4", "filename": "clippy_lints/src/try_err.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Ftry_err.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Ftry_err.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftry_err.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -1,10 +1,10 @@\n use crate::utils::{match_qpath, paths, snippet, snippet_with_macro_callsite, span_lint_and_sugg};\n use if_chain::if_chain;\n use rustc::declare_lint_pass;\n-use rustc::hir::*;\n use rustc::lint::{in_external_macro, LateContext, LateLintPass, LintArray, LintPass};\n use rustc::ty::Ty;\n use rustc_errors::Applicability;\n+use rustc_hir::*;\n use rustc_session::declare_tool_lint;\n \n declare_clippy_lint! {"}, {"sha": "7d49b31d99f59afab14ad182231c0dc1b877aeb2", "filename": "clippy_lints/src/types.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftypes.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -5,14 +5,14 @@ use std::cmp::Ordering;\n use std::collections::BTreeMap;\n \n use if_chain::if_chain;\n-use rustc::hir;\n use rustc::hir::intravisit::{walk_body, walk_expr, walk_ty, FnKind, NestedVisitorMap, Visitor};\n-use rustc::hir::*;\n use rustc::lint::{in_external_macro, LateContext, LateLintPass, LintArray, LintContext, LintPass};\n use rustc::ty::layout::LayoutOf;\n use rustc::ty::{self, InferTy, Ty, TyCtxt, TypeckTables};\n use rustc::{declare_lint_pass, impl_lint_pass};\n use rustc_errors::Applicability;\n+use rustc_hir as hir;\n+use rustc_hir::*;\n use rustc_session::declare_tool_lint;\n use rustc_span::hygiene::{ExpnKind, MacroKind};\n use rustc_span::source_map::Span;\n@@ -1452,7 +1452,7 @@ impl<'a, 'tcx> TypeComplexity {\n         for arg in decl.inputs {\n             self.check_type(cx, arg);\n         }\n-        if let Return(ref ty) = decl.output {\n+        if let FunctionRetTy::Return(ref ty) = decl.output {\n             self.check_type(cx, ty);\n         }\n     }"}, {"sha": "ebef3c0faa811fc968c19404c4d3bac9fabd3c41", "filename": "clippy_lints/src/unicode.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Funicode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Funicode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funicode.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -1,8 +1,8 @@\n use crate::utils::{is_allowed, snippet, span_lint_and_sugg};\n use rustc::declare_lint_pass;\n-use rustc::hir::*;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc_errors::Applicability;\n+use rustc_hir::*;\n use rustc_session::declare_tool_lint;\n use rustc_span::source_map::Span;\n use syntax::ast::LitKind;"}, {"sha": "b51e13c3915040ddfc843abbadbecfeba0c2b100", "filename": "clippy_lints/src/unused_io_amount.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Funused_io_amount.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Funused_io_amount.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funused_io_amount.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -1,7 +1,7 @@\n use crate::utils::{is_try, match_qpath, match_trait_method, paths, span_lint};\n use rustc::declare_lint_pass;\n-use rustc::hir;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc_hir as hir;\n use rustc_session::declare_tool_lint;\n \n declare_clippy_lint! {"}, {"sha": "b698a4a228780df6e8b7aa93c04f7ced9b66561f", "filename": "clippy_lints/src/unused_self.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Funused_self.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Funused_self.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funused_self.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -1,9 +1,9 @@\n use if_chain::if_chain;\n use rustc::declare_lint_pass;\n-use rustc::hir::def::Res;\n use rustc::hir::intravisit::{walk_path, NestedVisitorMap, Visitor};\n-use rustc::hir::{AssocItemKind, HirId, ImplItemKind, ImplItemRef, Item, ItemKind, Path};\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc_hir::def::Res;\n+use rustc_hir::{AssocItemKind, HirId, ImplItemKind, ImplItemRef, Item, ItemKind, Path};\n use rustc_session::declare_tool_lint;\n \n use crate::utils::span_help_and_lint;"}, {"sha": "e9b4b1a5051a928d89b4427c52cbfd60d89c3a7c", "filename": "clippy_lints/src/unwrap.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Funwrap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Funwrap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funwrap.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -5,7 +5,7 @@ use rustc_session::declare_tool_lint;\n \n use crate::utils::{higher::if_block, match_type, paths, span_lint_and_then, usage::is_potentially_mutated};\n use rustc::hir::intravisit::*;\n-use rustc::hir::*;\n+use rustc_hir::*;\n use rustc_span::source_map::Span;\n \n declare_clippy_lint! {\n@@ -93,7 +93,7 @@ fn collect_unwrap_info<'a, 'tcx>(\n             },\n             _ => (),\n         }\n-    } else if let ExprKind::Unary(UnNot, expr) = &expr.kind {\n+    } else if let ExprKind::Unary(UnOp::UnNot, expr) = &expr.kind {\n         return collect_unwrap_info(cx, expr, !invert);\n     } else {\n         if_chain! {"}, {"sha": "d4addec306a5d38f3af76e6715360ee83bac37f8", "filename": "clippy_lints/src/use_self.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fuse_self.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fuse_self.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fuse_self.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -1,13 +1,13 @@\n use if_chain::if_chain;\n use rustc::declare_lint_pass;\n-use rustc::hir;\n-use rustc::hir::def::{DefKind, Res};\n use rustc::hir::intravisit::{walk_item, walk_path, walk_ty, NestedVisitorMap, Visitor};\n-use rustc::hir::*;\n use rustc::lint::{in_external_macro, LateContext, LateLintPass, LintArray, LintContext, LintPass};\n use rustc::ty;\n use rustc::ty::{DefIdTree, Ty};\n use rustc_errors::Applicability;\n+use rustc_hir as hir;\n+use rustc_hir::def::{DefKind, Res};\n+use rustc_hir::*;\n use rustc_session::declare_tool_lint;\n use rustc_span::symbol::kw;\n "}, {"sha": "173f3b84eed5a8937fbd7a5fd31f2c53275445c3", "filename": "clippy_lints/src/utils/author.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Futils%2Fauthor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Futils%2Fauthor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fauthor.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -3,12 +3,12 @@\n \n use crate::utils::{get_attr, higher};\n use rustc::declare_lint_pass;\n-use rustc::hir;\n use rustc::hir::intravisit::{NestedVisitorMap, Visitor};\n-use rustc::hir::{BindingAnnotation, Block, Expr, ExprKind, Pat, PatKind, QPath, Stmt, StmtKind, TyKind};\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintContext, LintPass};\n use rustc::session::Session;\n use rustc_data_structures::fx::FxHashMap;\n+use rustc_hir as hir;\n+use rustc_hir::{BindingAnnotation, Block, Expr, ExprKind, Pat, PatKind, QPath, Stmt, StmtKind, TyKind};\n use rustc_session::declare_tool_lint;\n use syntax::ast::{Attribute, LitFloatType, LitKind};\n "}, {"sha": "7a18d5e818fb1c607298209b6b344ef6a484021d", "filename": "clippy_lints/src/utils/comparisons.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Futils%2Fcomparisons.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Futils%2Fcomparisons.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fcomparisons.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -2,7 +2,7 @@\n \n #![deny(clippy::missing_docs_in_private_items)]\n \n-use rustc::hir::{BinOpKind, Expr};\n+use rustc_hir::{BinOpKind, Expr};\n \n #[derive(PartialEq, Eq, Debug, Copy, Clone)]\n /// Represent a normalized comparison operator."}, {"sha": "629dc0950dc33edd264e86243419f90c33921ee7", "filename": "clippy_lints/src/utils/diagnostics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Futils%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Futils%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fdiagnostics.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -1,8 +1,8 @@\n //! Clippy wrappers around rustc's diagnostic functions.\n \n-use rustc::hir::HirId;\n use rustc::lint::{LateContext, Lint, LintContext};\n use rustc_errors::{Applicability, CodeSuggestion, Substitution, SubstitutionPart, SuggestionStyle};\n+use rustc_hir::HirId;\n use rustc_span::source_map::{MultiSpan, Span};\n use std::env;\n use syntax::errors::DiagnosticBuilder;"}, {"sha": "804ba8ae88d9372f2723ff06c925c34065a83872", "filename": "clippy_lints/src/utils/higher.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Futils%2Fhigher.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Futils%2Fhigher.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fhigher.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -6,7 +6,8 @@\n use crate::utils::{is_expn_of, match_def_path, match_qpath, paths};\n use if_chain::if_chain;\n use rustc::lint::LateContext;\n-use rustc::{hir, ty};\n+use rustc::ty;\n+use rustc_hir as hir;\n use syntax::ast;\n \n /// Converts a hir binary operator to the corresponding `ast` type."}, {"sha": "13ea90cff59b8b1feccd05899ff2d71e1fafdab6", "filename": "clippy_lints/src/utils/hir_utils.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Futils%2Fhir_utils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Futils%2Fhir_utils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fhir_utils.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -1,10 +1,10 @@\n use crate::consts::{constant_context, constant_simple};\n use crate::utils::differing_macro_contexts;\n-use rustc::hir::*;\n use rustc::ich::StableHashingContextProvider;\n use rustc::lint::LateContext;\n use rustc::ty::TypeckTables;\n use rustc_data_structures::stable_hasher::{HashStable, StableHasher};\n+use rustc_hir::*;\n use std::hash::Hash;\n use syntax::ast::Name;\n "}, {"sha": "38bf6ee52396e2ca55e75cee180a6d86d88f89d3", "filename": "clippy_lints/src/utils/inspector.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Futils%2Finspector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Futils%2Finspector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Finspector.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -2,10 +2,10 @@\n \n use crate::utils::get_attr;\n use rustc::declare_lint_pass;\n-use rustc::hir;\n-use rustc::hir::print;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintContext, LintPass};\n use rustc::session::Session;\n+use rustc_hir as hir;\n+use rustc_hir::print;\n use rustc_session::declare_tool_lint;\n use syntax::ast::Attribute;\n "}, {"sha": "58552d08b32458e4b7af40f6abd8cd843260f966", "filename": "clippy_lints/src/utils/internal_lints.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Futils%2Finternal_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Futils%2Finternal_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Finternal_lints.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -3,14 +3,14 @@ use crate::utils::{\n     walk_ptrs_ty,\n };\n use if_chain::if_chain;\n-use rustc::hir;\n-use rustc::hir::def::{DefKind, Res};\n use rustc::hir::intravisit::{walk_expr, NestedVisitorMap, Visitor};\n-use rustc::hir::*;\n use rustc::lint::{EarlyContext, EarlyLintPass, LateContext, LateLintPass, LintArray, LintPass};\n use rustc::{declare_lint_pass, impl_lint_pass};\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_errors::Applicability;\n+use rustc_hir as hir;\n+use rustc_hir::def::{DefKind, Res};\n+use rustc_hir::*;\n use rustc_session::declare_tool_lint;\n use rustc_span::source_map::Span;\n use rustc_span::symbol::SymbolStr;"}, {"sha": "3c806cc7ea587fcd06b368621f8ccfa0524baa58", "filename": "clippy_lints/src/utils/mod.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fmod.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -25,12 +25,7 @@ use std::mem;\n \n use if_chain::if_chain;\n use matches::matches;\n-use rustc::hir;\n-use rustc::hir::def::{DefKind, Res};\n-use rustc::hir::def_id::{DefId, CRATE_DEF_INDEX, LOCAL_CRATE};\n use rustc::hir::intravisit::{NestedVisitorMap, Visitor};\n-use rustc::hir::Node;\n-use rustc::hir::*;\n use rustc::lint::{LateContext, Level, Lint, LintContext};\n use rustc::traits;\n use rustc::ty::{\n@@ -40,6 +35,11 @@ use rustc::ty::{\n     Binder, Ty, TyCtxt,\n };\n use rustc_errors::Applicability;\n+use rustc_hir as hir;\n+use rustc_hir::def::{DefKind, Res};\n+use rustc_hir::def_id::{DefId, CRATE_DEF_INDEX, LOCAL_CRATE};\n+use rustc_hir::Node;\n+use rustc_hir::*;\n use rustc_span::hygiene::ExpnKind;\n use rustc_span::source_map::{Span, DUMMY_SP};\n use rustc_span::symbol::{kw, Symbol};\n@@ -179,8 +179,8 @@ pub fn single_segment_path<'tcx>(path: &QPath<'tcx>) -> Option<&'tcx PathSegment\n \n /// Matches a `QPath` against a slice of segment string literals.\n ///\n-/// There is also `match_path` if you are dealing with a `rustc::hir::Path` instead of a\n-/// `rustc::hir::QPath`.\n+/// There is also `match_path` if you are dealing with a `rustc_hir::Path` instead of a\n+/// `rustc_hir::QPath`.\n ///\n /// # Examples\n /// ```rust,ignore\n@@ -202,8 +202,8 @@ pub fn match_qpath(path: &QPath<'_>, segments: &[&str]) -> bool {\n \n /// Matches a `Path` against a slice of segment string literals.\n ///\n-/// There is also `match_qpath` if you are dealing with a `rustc::hir::QPath` instead of a\n-/// `rustc::hir::Path`.\n+/// There is also `match_qpath` if you are dealing with a `rustc_hir::QPath` instead of a\n+/// `rustc_hir::Path`.\n ///\n /// # Examples\n ///"}, {"sha": "e32d5e3a4ed0b831426ca0bc2acd7c4394486c76", "filename": "clippy_lints/src/utils/ptr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Futils%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Futils%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fptr.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -1,7 +1,7 @@\n use crate::utils::{get_pat_name, match_var, snippet};\n use rustc::hir::intravisit::{walk_expr, NestedVisitorMap, Visitor};\n-use rustc::hir::*;\n use rustc::lint::LateContext;\n+use rustc_hir::*;\n use rustc_span::source_map::Span;\n use std::borrow::Cow;\n use syntax::ast::Name;"}, {"sha": "f14390ce3af6b145f722b338da2e941de09eb3a4", "filename": "clippy_lints/src/utils/sugg.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Futils%2Fsugg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Futils%2Fsugg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fsugg.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -3,9 +3,9 @@\n \n use crate::utils::{higher, snippet, snippet_opt, snippet_with_macro_callsite};\n use matches::matches;\n-use rustc::hir;\n use rustc::lint::{EarlyContext, LateContext, LintContext};\n use rustc_errors::Applicability;\n+use rustc_hir as hir;\n use rustc_span::source_map::{CharPos, Span};\n use rustc_span::{BytePos, Pos};\n use std::borrow::Cow;"}, {"sha": "623a12fbdafff92fbabd472ecf486d3c3b3c766d", "filename": "clippy_lints/src/utils/usage.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Futils%2Fusage.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Futils%2Fusage.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fusage.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -1,8 +1,8 @@\n-use rustc::hir::def::Res;\n-use rustc::hir::*;\n use rustc::lint::LateContext;\n use rustc::ty;\n use rustc_data_structures::fx::FxHashSet;\n+use rustc_hir::def::Res;\n+use rustc_hir::*;\n use rustc_typeck::expr_use_visitor::*;\n \n /// Returns a set of mutated local variable IDs, or `None` if mutations could not be determined."}, {"sha": "c5951dc1e78dadf61169aec4281433942405bf81", "filename": "clippy_lints/src/vec.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fvec.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -2,10 +2,10 @@ use crate::consts::constant;\n use crate::utils::{higher, is_copy, snippet_with_applicability, span_lint_and_sugg};\n use if_chain::if_chain;\n use rustc::declare_lint_pass;\n-use rustc::hir::*;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::ty::{self, Ty};\n use rustc_errors::Applicability;\n+use rustc_hir::*;\n use rustc_session::declare_tool_lint;\n use rustc_span::source_map::Span;\n "}, {"sha": "fc46da2c720b173e75aac9465372f43057a9b589", "filename": "clippy_lints/src/zero_div_zero.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fzero_div_zero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/clippy_lints%2Fsrc%2Fzero_div_zero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fzero_div_zero.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -2,8 +2,8 @@ use crate::consts::{constant_simple, Constant};\n use crate::utils::span_help_and_lint;\n use if_chain::if_chain;\n use rustc::declare_lint_pass;\n-use rustc::hir::*;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc_hir::*;\n use rustc_session::declare_tool_lint;\n \n declare_clippy_lint! {"}, {"sha": "070279e827933b838b23d7a9675c39cbe00694ae", "filename": "tests/ui/outer_expn_data.fixed", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/tests%2Fui%2Fouter_expn_data.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/tests%2Fui%2Fouter_expn_data.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fouter_expn_data.fixed?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -5,10 +5,11 @@\n \n #[macro_use]\n extern crate rustc;\n+extern crate rustc_hir;\n #[macro_use]\n extern crate rustc_session;\n-use rustc::hir::Expr;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc_hir::Expr;\n \n declare_lint! {\n     pub TEST_LINT,"}, {"sha": "5e173e7fd99f1f0e3de90c485860bdc5082168f2", "filename": "tests/ui/outer_expn_data.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/tests%2Fui%2Fouter_expn_data.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/tests%2Fui%2Fouter_expn_data.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fouter_expn_data.rs?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -5,10 +5,11 @@\n \n #[macro_use]\n extern crate rustc;\n+extern crate rustc_hir;\n #[macro_use]\n extern crate rustc_session;\n-use rustc::hir::Expr;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc_hir::Expr;\n \n declare_lint! {\n     pub TEST_LINT,"}, {"sha": "8d10d31d8a6dfedc56059e83e1f9f241747a78d7", "filename": "tests/ui/outer_expn_data.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8642c7a2900bed28003a98d4db8b62290ac802f/tests%2Fui%2Fouter_expn_data.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e8642c7a2900bed28003a98d4db8b62290ac802f/tests%2Fui%2Fouter_expn_data.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fouter_expn_data.stderr?ref=e8642c7a2900bed28003a98d4db8b62290ac802f", "patch": "@@ -1,5 +1,5 @@\n error: usage of `outer_expn().expn_data()`\n-  --> $DIR/outer_expn_data.rs:23:34\n+  --> $DIR/outer_expn_data.rs:24:34\n    |\n LL |         let _ = expr.span.ctxt().outer_expn().expn_data();\n    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `outer_expn_data()`"}]}