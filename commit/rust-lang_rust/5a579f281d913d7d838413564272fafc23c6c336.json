{"sha": "5a579f281d913d7d838413564272fafc23c6c336", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVhNTc5ZjI4MWQ5MTNkN2Q4Mzg0MTM1NjQyNzJmYWZjMjNjNmMzMzY=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-08-16T15:12:32Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-08-16T15:12:32Z"}, "message": "document -Zmiri-symbolic-alignment-check", "tree": {"sha": "a8016b6d61ae970c4211c8407cc8cfd37f26370c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a8016b6d61ae970c4211c8407cc8cfd37f26370c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5a579f281d913d7d838413564272fafc23c6c336", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5a579f281d913d7d838413564272fafc23c6c336", "html_url": "https://github.com/rust-lang/rust/commit/5a579f281d913d7d838413564272fafc23c6c336", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5a579f281d913d7d838413564272fafc23c6c336/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cb985670c1997534a0cd1cfee606e81e4fa136dc", "url": "https://api.github.com/repos/rust-lang/rust/commits/cb985670c1997534a0cd1cfee606e81e4fa136dc", "html_url": "https://github.com/rust-lang/rust/commit/cb985670c1997534a0cd1cfee606e81e4fa136dc"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "a189fd233f58823bc2d4edb393e99c9a6fa573d2", "filename": "README.md", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/5a579f281d913d7d838413564272fafc23c6c336/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/5a579f281d913d7d838413564272fafc23c6c336/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=5a579f281d913d7d838413564272fafc23c6c336", "patch": "@@ -189,6 +189,17 @@ Miri adds its own set of `-Z` flags:\n   entropy.  The default seed is 0.  **NOTE**: This entropy is not good enough\n   for cryptographic use!  Do not generate secret keys in Miri or perform other\n   kinds of cryptographic operations that rely on proper random numbers.\n+* `-Zmiri-symbolic-alignment-check` makes the alignment check more strict.  By\n+  default, alignment is checked by casting the pointer to an integer, and making\n+  sure that is a multiple of the alignment.  This can lead to cases where a\n+  program passes the alignment check by pure chance, because things \"happened to\n+  be\" sufficiently aligned.  To avoid such cases, the symbolic alignment check\n+  only takes into account the requested alignment of the relevant allocation,\n+  and the offset into that allocation.  This avoids such false negatives, but it\n+  also incurs some false positives when the code does manual integer arithmetic\n+  to ensure alignment.  (The standard library `align_to` method works fine in\n+  both modes; under symbolic alignment it only fills the middle slice when the\n+  allocation guarantees sufficient alignment.)\n * `-Zmiri-track-alloc-id=<id>` shows a backtrace when the given allocation is\n   being allocated or freed.  This helps in debugging memory leaks and\n   use after free bugs."}]}