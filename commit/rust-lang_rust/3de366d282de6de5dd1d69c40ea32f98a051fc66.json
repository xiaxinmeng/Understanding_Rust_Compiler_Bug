{"sha": "3de366d282de6de5dd1d69c40ea32f98a051fc66", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNkZTM2NmQyODJkZTZkZTVkZDFkNjljNDBlYTMyZjk4YTA1MWZjNjY=", "commit": {"author": {"name": "Ga\u00ebtan Cassiers", "email": "gaetan.cassiers@gmail.com", "date": "2015-07-01T19:13:10Z"}, "committer": {"name": "Ga\u00ebtan Cassiers", "email": "gaetan.cassiers@gmail.com", "date": "2015-07-03T09:12:21Z"}, "message": "Format modules into separate files", "tree": {"sha": "613436a1cacf9d061edeca905abd2c9ac9a20530", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/613436a1cacf9d061edeca905abd2c9ac9a20530"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3de366d282de6de5dd1d69c40ea32f98a051fc66", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3de366d282de6de5dd1d69c40ea32f98a051fc66", "html_url": "https://github.com/rust-lang/rust/commit/3de366d282de6de5dd1d69c40ea32f98a051fc66", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3de366d282de6de5dd1d69c40ea32f98a051fc66/comments", "author": {"login": "cassiersg", "id": 9348542, "node_id": "MDQ6VXNlcjkzNDg1NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/9348542?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cassiersg", "html_url": "https://github.com/cassiersg", "followers_url": "https://api.github.com/users/cassiersg/followers", "following_url": "https://api.github.com/users/cassiersg/following{/other_user}", "gists_url": "https://api.github.com/users/cassiersg/gists{/gist_id}", "starred_url": "https://api.github.com/users/cassiersg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cassiersg/subscriptions", "organizations_url": "https://api.github.com/users/cassiersg/orgs", "repos_url": "https://api.github.com/users/cassiersg/repos", "events_url": "https://api.github.com/users/cassiersg/events{/privacy}", "received_events_url": "https://api.github.com/users/cassiersg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cassiersg", "id": 9348542, "node_id": "MDQ6VXNlcjkzNDg1NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/9348542?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cassiersg", "html_url": "https://github.com/cassiersg", "followers_url": "https://api.github.com/users/cassiersg/followers", "following_url": "https://api.github.com/users/cassiersg/following{/other_user}", "gists_url": "https://api.github.com/users/cassiersg/gists{/gist_id}", "starred_url": "https://api.github.com/users/cassiersg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cassiersg/subscriptions", "organizations_url": "https://api.github.com/users/cassiersg/orgs", "repos_url": "https://api.github.com/users/cassiersg/repos", "events_url": "https://api.github.com/users/cassiersg/events{/privacy}", "received_events_url": "https://api.github.com/users/cassiersg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "83290f15ada755a71f3cfc0c66c3631a66d6b461", "url": "https://api.github.com/repos/rust-lang/rust/commits/83290f15ada755a71f3cfc0c66c3631a66d6b461", "html_url": "https://github.com/rust-lang/rust/commit/83290f15ada755a71f3cfc0c66c3631a66d6b461"}], "stats": {"total": 179, "additions": 167, "deletions": 12}, "files": [{"sha": "74ee088105c8bfc440f5dd1881fa9d5b6e8bfa24", "filename": "src/changes.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3de366d282de6de5dd1d69c40ea32f98a051fc66/src%2Fchanges.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3de366d282de6de5dd1d69c40ea32f98a051fc66/src%2Fchanges.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fchanges.rs?ref=3de366d282de6de5dd1d69c40ea32f98a051fc66", "patch": "@@ -213,6 +213,10 @@ impl<'a> ChangeSet<'a> {\n \n         Ok(None)\n     }\n+\n+    pub fn is_changed(&self, filename: &str) -> bool {\n+        self.file_map.get(filename).expect(\"Unknown filename\").len != 0\n+    }\n }\n \n // Iterates over each file in the ChangSet. Yields the filename and the changed"}, {"sha": "252b3ad05b71a1ea6eebd75915665a15b823a866", "filename": "src/lib.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/3de366d282de6de5dd1d69c40ea32f98a051fc66/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3de366d282de6de5dd1d69c40ea32f98a051fc66/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=3de366d282de6de5dd1d69c40ea32f98a051fc66", "patch": "@@ -167,11 +167,6 @@ impl fmt::Display for FormatReport {\n fn fmt_ast<'a>(krate: &ast::Crate, codemap: &'a CodeMap, config: &'a Config) -> ChangeSet<'a> {\n     let mut visitor = FmtVisitor::from_codemap(codemap, config);\n     visit::walk_crate(&mut visitor, krate);\n-    let files = codemap.files.borrow();\n-    if let Some(last) = files.last() {\n-        visitor.format_missing(last.end_pos);\n-    }\n-\n     visitor.changes\n }\n "}, {"sha": "ed5a5f5da1b774198dc899873cdef3cf35127ada", "filename": "src/visitor.rs", "status": "modified", "additions": 89, "deletions": 7, "changes": 96, "blob_url": "https://github.com/rust-lang/rust/blob/3de366d282de6de5dd1d69c40ea32f98a051fc66/src%2Fvisitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3de366d282de6de5dd1d69c40ea32f98a051fc66/src%2Fvisitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvisitor.rs?ref=3de366d282de6de5dd1d69c40ea32f98a051fc66", "patch": "@@ -11,9 +11,13 @@\n use syntax::ast;\n use syntax::codemap::{self, CodeMap, Span, BytePos};\n use syntax::visit;\n+use syntax::parse::token;\n+use syntax::attr;\n+use std::path::PathBuf;\n \n use utils;\n use config::Config;\n+use comment::FindUncommented;\n \n use changes::ChangeSet;\n use rewrite::{Rewrite, RewriteContext};\n@@ -197,7 +201,6 @@ impl<'a, 'v> visit::Visitor<'v> for FmtVisitor<'a> {\n                 visit::walk_item(self, item);\n             }\n             ast::Item_::ItemImpl(..) |\n-            ast::Item_::ItemMod(_) |\n             ast::Item_::ItemTrait(..) => {\n                 self.block_indent += self.config.tab_spaces;\n                 visit::walk_item(self, item);\n@@ -227,6 +230,10 @@ impl<'a, 'v> visit::Visitor<'v> for FmtVisitor<'a> {\n                                 item.span);\n                 self.last_pos = item.span.hi;\n             }\n+            ast::Item_::ItemMod(ref module) => {\n+                self.format_missing_with_indent(item.span.lo);\n+                self.format_mod(module, item.span, item.ident, &item.attrs);\n+            }\n             _ => {\n                 visit::walk_item(self, item);\n             }\n@@ -267,12 +274,9 @@ impl<'a, 'v> visit::Visitor<'v> for FmtVisitor<'a> {\n     }\n \n     fn visit_mod(&mut self, m: &'v ast::Mod, s: Span, _: ast::NodeId) {\n-        // Only visit inline mods here.\n-        if self.codemap.lookup_char_pos(s.lo).file.name !=\n-           self.codemap.lookup_char_pos(m.inner.lo).file.name {\n-            return;\n-        }\n-        visit::walk_mod(self, m);\n+        // This is only called for the root module\n+        let filename = self.codemap.span_to_filename(s);\n+        self.format_separate_mod(m, &filename);\n     }\n }\n \n@@ -352,4 +356,82 @@ impl<'a> FmtVisitor<'a> {\n \n         result\n     }\n+\n+    fn format_mod(&mut self, m: &ast::Mod, s: Span, ident: ast::Ident, attrs: &[ast::Attribute]) {\n+        debug!(\"FmtVisitor::format_mod: ident: {:?}, span: {:?}\", ident, s);\n+        // Decide whether this is an inline mod or an external mod.\n+        // There isn't any difference between inline and external mod in AST,\n+        // so we use the trick of searching for an opening brace.\n+        // We can't use the inner span of the mod since it is weird when it\n+        // is empty (no items).\n+        // FIXME Use the inner span once rust-lang/rust#26755 is fixed.\n+        let open_brace = self.codemap.span_to_snippet(s).unwrap().find_uncommented(\"{\");\n+        match open_brace {\n+            None => {\n+                debug!(\"FmtVisitor::format_mod: external mod\");\n+                let file_path = self.module_file(ident, attrs, s);\n+                let filename = file_path.to_str().unwrap();\n+                if self.changes.is_changed(filename) {\n+                    // The file has already been reformatted, do nothing\n+                } else {\n+                    self.format_separate_mod(m, filename);\n+                }\n+                // TODO Should rewrite properly `mod X;`\n+            }\n+            Some(open_brace) => {\n+                debug!(\"FmtVisitor::format_mod: internal mod\");\n+                debug!(\"... open_brace: {}, str: {:?}\", open_brace, self.codemap.span_to_snippet(s));\n+                // Format everything until opening brace\n+                // TODO Shoud rewrite properly\n+                self.format_missing(s.lo + BytePos(open_brace as u32));\n+                self.block_indent += self.config.tab_spaces;\n+                visit::walk_mod(self, m);\n+                debug!(\"... last_pos after: {:?}\", self.last_pos);\n+                self.block_indent -= self.config.tab_spaces;\n+            }\n+        }\n+        self.format_missing(s.hi);\n+        debug!(\"FmtVisitor::format_mod: exit\");\n+    }\n+\n+    /// Find the file corresponding to an external mod\n+    /// Same algorithm as syntax::parse::eval_src_mod\n+    fn module_file(&self, id: ast::Ident, outer_attrs: &[ast::Attribute], id_sp: Span) -> PathBuf {\n+        // FIXME use libsyntax once rust-lang/rust#26750 is merged\n+        let mut prefix = PathBuf::from(&self.codemap.span_to_filename(id_sp));\n+        prefix.pop();\n+        let mod_string = token::get_ident(id);\n+        match attr::first_attr_value_str_by_name(outer_attrs, \"path\") {\n+            Some(d) => prefix.join(&*d),\n+            None => {\n+                let default_path_str = format!(\"{}.rs\", mod_string);\n+                let secondary_path_str = format!(\"{}/mod.rs\", mod_string);\n+                let default_path = prefix.join(&default_path_str);\n+                let secondary_path = prefix.join(&secondary_path_str);\n+                let default_exists = self.codemap.file_exists(&default_path);\n+                let secondary_exists = self.codemap.file_exists(&secondary_path);\n+                if default_exists {\n+                    default_path\n+                } else if secondary_exists {\n+                    secondary_path\n+                } else {\n+                    // Should never appens since rustc parsed everything sucessfully\n+                    panic!(\"Didn't found module {}\", mod_string);\n+                }\n+            }\n+        }\n+    }\n+\n+    /// Format the content of a module into a separate file\n+    fn format_separate_mod(&mut self, m: &ast::Mod, filename: &str) {\n+        let last_pos = self.last_pos;\n+        let block_indent = self.block_indent;\n+        let filemap = self.codemap.get_filemap(filename);\n+        self.last_pos = filemap.start_pos;\n+        self.block_indent = 0;\n+        visit::walk_mod(self, m);\n+        self.format_missing(filemap.end_pos);\n+        self.last_pos = last_pos;\n+        self.block_indent = block_indent;\n+    }\n }"}, {"sha": "75b560ce93f9e7378c779cc62d251b54a7e96b48", "filename": "tests/source/mod-2.rs", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3de366d282de6de5dd1d69c40ea32f98a051fc66/tests%2Fsource%2Fmod-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3de366d282de6de5dd1d69c40ea32f98a051fc66/tests%2Fsource%2Fmod-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fmod-2.rs?ref=3de366d282de6de5dd1d69c40ea32f98a051fc66", "patch": "@@ -0,0 +1,3 @@\n+// Some nested mods\n+\n+mod nestedmod;"}, {"sha": "23dfa4442579baa88b5a9141c747891921f9d2e8", "filename": "tests/source/nestedmod/mod.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/3de366d282de6de5dd1d69c40ea32f98a051fc66/tests%2Fsource%2Fnestedmod%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3de366d282de6de5dd1d69c40ea32f98a051fc66/tests%2Fsource%2Fnestedmod%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fnestedmod%2Fmod.rs?ref=3de366d282de6de5dd1d69c40ea32f98a051fc66", "patch": "@@ -0,0 +1,12 @@\n+\n+mod mod2a;\n+mod mod2b;\n+\n+mod mymod1 {\n+          use mod2a::{Foo,Bar};\n+}\n+\n+#[path=\"mod2c.rs\"]\n+mod mymod2;\n+\n+mod submod2;"}, {"sha": "5df457a8316530d7e239fc48476768a4c7bf5b7c", "filename": "tests/source/nestedmod/mod2a.rs", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3de366d282de6de5dd1d69c40ea32f98a051fc66/tests%2Fsource%2Fnestedmod%2Fmod2a.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3de366d282de6de5dd1d69c40ea32f98a051fc66/tests%2Fsource%2Fnestedmod%2Fmod2a.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fnestedmod%2Fmod2a.rs?ref=3de366d282de6de5dd1d69c40ea32f98a051fc66", "patch": "@@ -0,0 +1,4 @@\n+// This is an empty file containing only\n+// comments\n+\n+// ..................."}, {"sha": "f128e2da6dbfb64eb890ec0325395e9219719a60", "filename": "tests/source/nestedmod/mod2b.rs", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3de366d282de6de5dd1d69c40ea32f98a051fc66/tests%2Fsource%2Fnestedmod%2Fmod2b.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3de366d282de6de5dd1d69c40ea32f98a051fc66/tests%2Fsource%2Fnestedmod%2Fmod2b.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fnestedmod%2Fmod2b.rs?ref=3de366d282de6de5dd1d69c40ea32f98a051fc66", "patch": "@@ -0,0 +1,3 @@\n+\n+#[path=\"mod2a.rs\"]\n+mod c;"}, {"sha": "eda6b233e4beabf4a6fe9e314d3889234828c549", "filename": "tests/source/nestedmod/mod2c.rs", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3de366d282de6de5dd1d69c40ea32f98a051fc66/tests%2Fsource%2Fnestedmod%2Fmod2c.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3de366d282de6de5dd1d69c40ea32f98a051fc66/tests%2Fsource%2Fnestedmod%2Fmod2c.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fnestedmod%2Fmod2c.rs?ref=3de366d282de6de5dd1d69c40ea32f98a051fc66", "patch": "@@ -0,0 +1,3 @@\n+// A standard mod\n+\n+fn a(   )     {}"}, {"sha": "0eaf08f0d2ca743c2708944abe29c2d5209054d2", "filename": "tests/source/nestedmod/submod2/a.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3de366d282de6de5dd1d69c40ea32f98a051fc66/tests%2Fsource%2Fnestedmod%2Fsubmod2%2Fa.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3de366d282de6de5dd1d69c40ea32f98a051fc66/tests%2Fsource%2Fnestedmod%2Fsubmod2%2Fa.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fnestedmod%2Fsubmod2%2Fa.rs?ref=3de366d282de6de5dd1d69c40ea32f98a051fc66", "patch": "@@ -0,0 +1,6 @@\n+// Yet Another mod\n+// Nested\n+\n+use c::a;\n+\n+fn foo(    ) {    }"}, {"sha": "52f8be910227ffbe03893778648fb6f331965248", "filename": "tests/source/nestedmod/submod2/mod.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/3de366d282de6de5dd1d69c40ea32f98a051fc66/tests%2Fsource%2Fnestedmod%2Fsubmod2%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3de366d282de6de5dd1d69c40ea32f98a051fc66/tests%2Fsource%2Fnestedmod%2Fsubmod2%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fnestedmod%2Fsubmod2%2Fmod.rs?ref=3de366d282de6de5dd1d69c40ea32f98a051fc66", "patch": "@@ -0,0 +1,5 @@\n+// Another mod\n+\n+mod a;\n+\n+use a::a;"}, {"sha": "75b560ce93f9e7378c779cc62d251b54a7e96b48", "filename": "tests/target/mod-2.rs", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3de366d282de6de5dd1d69c40ea32f98a051fc66/tests%2Ftarget%2Fmod-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3de366d282de6de5dd1d69c40ea32f98a051fc66/tests%2Ftarget%2Fmod-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fmod-2.rs?ref=3de366d282de6de5dd1d69c40ea32f98a051fc66", "patch": "@@ -0,0 +1,3 @@\n+// Some nested mods\n+\n+mod nestedmod;"}, {"sha": "be22f6d40377b099b75182e4626b254be43581a8", "filename": "tests/target/nestedmod/mod.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/3de366d282de6de5dd1d69c40ea32f98a051fc66/tests%2Ftarget%2Fnestedmod%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3de366d282de6de5dd1d69c40ea32f98a051fc66/tests%2Ftarget%2Fnestedmod%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fnestedmod%2Fmod.rs?ref=3de366d282de6de5dd1d69c40ea32f98a051fc66", "patch": "@@ -0,0 +1,12 @@\n+\n+mod mod2a;\n+mod mod2b;\n+\n+mod mymod1 {\n+    use mod2a::{Foo, Bar};\n+}\n+\n+#[path=\"mod2c.rs\"]\n+mod mymod2;\n+\n+mod submod2;"}, {"sha": "5df457a8316530d7e239fc48476768a4c7bf5b7c", "filename": "tests/target/nestedmod/mod2a.rs", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3de366d282de6de5dd1d69c40ea32f98a051fc66/tests%2Ftarget%2Fnestedmod%2Fmod2a.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3de366d282de6de5dd1d69c40ea32f98a051fc66/tests%2Ftarget%2Fnestedmod%2Fmod2a.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fnestedmod%2Fmod2a.rs?ref=3de366d282de6de5dd1d69c40ea32f98a051fc66", "patch": "@@ -0,0 +1,4 @@\n+// This is an empty file containing only\n+// comments\n+\n+// ..................."}, {"sha": "f128e2da6dbfb64eb890ec0325395e9219719a60", "filename": "tests/target/nestedmod/mod2b.rs", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3de366d282de6de5dd1d69c40ea32f98a051fc66/tests%2Ftarget%2Fnestedmod%2Fmod2b.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3de366d282de6de5dd1d69c40ea32f98a051fc66/tests%2Ftarget%2Fnestedmod%2Fmod2b.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fnestedmod%2Fmod2b.rs?ref=3de366d282de6de5dd1d69c40ea32f98a051fc66", "patch": "@@ -0,0 +1,3 @@\n+\n+#[path=\"mod2a.rs\"]\n+mod c;"}, {"sha": "9027adeb21223f1140b8a35f68902640be806acb", "filename": "tests/target/nestedmod/mod2c.rs", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3de366d282de6de5dd1d69c40ea32f98a051fc66/tests%2Ftarget%2Fnestedmod%2Fmod2c.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3de366d282de6de5dd1d69c40ea32f98a051fc66/tests%2Ftarget%2Fnestedmod%2Fmod2c.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fnestedmod%2Fmod2c.rs?ref=3de366d282de6de5dd1d69c40ea32f98a051fc66", "patch": "@@ -0,0 +1,4 @@\n+// A standard mod\n+\n+fn a() {\n+}"}, {"sha": "078a1d99f2cd30a1b0242e1ba9529856e1004409", "filename": "tests/target/nestedmod/submod2/a.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/3de366d282de6de5dd1d69c40ea32f98a051fc66/tests%2Ftarget%2Fnestedmod%2Fsubmod2%2Fa.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3de366d282de6de5dd1d69c40ea32f98a051fc66/tests%2Ftarget%2Fnestedmod%2Fsubmod2%2Fa.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fnestedmod%2Fsubmod2%2Fa.rs?ref=3de366d282de6de5dd1d69c40ea32f98a051fc66", "patch": "@@ -0,0 +1,7 @@\n+// Yet Another mod\n+// Nested\n+\n+use c::a;\n+\n+fn foo() {\n+}"}, {"sha": "52f8be910227ffbe03893778648fb6f331965248", "filename": "tests/target/nestedmod/submod2/mod.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/3de366d282de6de5dd1d69c40ea32f98a051fc66/tests%2Ftarget%2Fnestedmod%2Fsubmod2%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3de366d282de6de5dd1d69c40ea32f98a051fc66/tests%2Ftarget%2Fnestedmod%2Fsubmod2%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fnestedmod%2Fsubmod2%2Fmod.rs?ref=3de366d282de6de5dd1d69c40ea32f98a051fc66", "patch": "@@ -0,0 +1,5 @@\n+// Another mod\n+\n+mod a;\n+\n+use a::a;"}]}