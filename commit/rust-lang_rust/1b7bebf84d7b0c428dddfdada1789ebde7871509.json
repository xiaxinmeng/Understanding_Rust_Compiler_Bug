{"sha": "1b7bebf84d7b0c428dddfdada1789ebde7871509", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFiN2JlYmY4NGQ3YjBjNDI4ZGRkZmRhZGExNzg5ZWJkZTc4NzE1MDk=", "commit": {"author": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2016-07-06T23:13:07Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-07-06T23:13:07Z"}, "message": "Rollup merge of #34626 - sylvestre:master, r=Manishearth\n\nFix typos", "tree": {"sha": "06c7050de8a3b27b63df6694dddd8826632f2566", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/06c7050de8a3b27b63df6694dddd8826632f2566"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1b7bebf84d7b0c428dddfdada1789ebde7871509", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1b7bebf84d7b0c428dddfdada1789ebde7871509", "html_url": "https://github.com/rust-lang/rust/commit/1b7bebf84d7b0c428dddfdada1789ebde7871509", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1b7bebf84d7b0c428dddfdada1789ebde7871509/comments", "author": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "80e5672f7ed4980726e1b917ba5bfdd229b08fc5", "url": "https://api.github.com/repos/rust-lang/rust/commits/80e5672f7ed4980726e1b917ba5bfdd229b08fc5", "html_url": "https://github.com/rust-lang/rust/commit/80e5672f7ed4980726e1b917ba5bfdd229b08fc5"}, {"sha": "3fcb64927750b8c4bccd866ec137500de2e7aea3", "url": "https://api.github.com/repos/rust-lang/rust/commits/3fcb64927750b8c4bccd866ec137500de2e7aea3", "html_url": "https://github.com/rust-lang/rust/commit/3fcb64927750b8c4bccd866ec137500de2e7aea3"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "e8c88b7db0699d1ebe03b1827c29c4607aac3dd2", "filename": "src/doc/book/closures.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1b7bebf84d7b0c428dddfdada1789ebde7871509/src%2Fdoc%2Fbook%2Fclosures.md", "raw_url": "https://github.com/rust-lang/rust/raw/1b7bebf84d7b0c428dddfdada1789ebde7871509/src%2Fdoc%2Fbook%2Fclosures.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fclosures.md?ref=1b7bebf84d7b0c428dddfdada1789ebde7871509", "patch": "@@ -339,7 +339,7 @@ fn call_with_ref<'a, F>(some_closure:F) -> i32\n     where F: Fn(&'a 32) -> i32 {\n ```\n \n-However this presents a problem with in our case. When you specify the explict\n+However this presents a problem with in our case. When you specify the explicit\n lifetime on a function it binds that lifetime to the *entire* scope of the function\n instead of just the invocation scope of our closure. This means that the borrow checker\n will see a mutable reference in the same lifetime as our immutable reference and fail\n@@ -354,7 +354,7 @@ fn call_with_ref<F>(some_closure:F) -> i32\n ```\n \n This lets the Rust compiler find the minimum lifetime to invoke our closure and\n-satisfy the borrow checker's rules. Our function then compiles and excutes as we\n+satisfy the borrow checker's rules. Our function then compiles and executes as we\n expect.\n \n ```rust"}, {"sha": "86729147ed0652befde62ee0834f12ec2c095d1c", "filename": "src/doc/book/testing.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1b7bebf84d7b0c428dddfdada1789ebde7871509/src%2Fdoc%2Fbook%2Ftesting.md", "raw_url": "https://github.com/rust-lang/rust/raw/1b7bebf84d7b0c428dddfdada1789ebde7871509/src%2Fdoc%2Fbook%2Ftesting.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Ftesting.md?ref=1b7bebf84d7b0c428dddfdada1789ebde7871509", "patch": "@@ -431,7 +431,7 @@ one.\n \n Cargo will ignore files in subdirectories of the `tests/` directory.\n Therefore shared modules in integrations tests are possible.\n-For example `tests/common/mod.rs` is not seperatly compiled by cargo but can \n+For example `tests/common/mod.rs` is not separately compiled by cargo but can\n be imported in every test with `mod common;`\n \n That's all there is to the `tests` directory. The `tests` module isn't needed"}, {"sha": "096e1ecc9ffb6a33a67b1dceb84a2b8837dd1d26", "filename": "src/librustdoc/html/highlight.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1b7bebf84d7b0c428dddfdada1789ebde7871509/src%2Flibrustdoc%2Fhtml%2Fhighlight.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b7bebf84d7b0c428dddfdada1789ebde7871509/src%2Flibrustdoc%2Fhtml%2Fhighlight.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fhighlight.rs?ref=1b7bebf84d7b0c428dddfdada1789ebde7871509", "patch": "@@ -107,7 +107,7 @@ pub enum Class {\n ///\n /// The classifier will call into the `Writer` implementation as it finds spans\n /// of text to highlight. Exactly how that text should be highlighted is up to\n-/// the implemention.\n+/// the implementation.\n pub trait Writer {\n     /// Called when we start processing a span of text that should be highlighted.\n     /// The `Class` argument specifies how it should be highlighted."}, {"sha": "c263bcb04e9b6fc62b199100b5a65c6a47211598", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1b7bebf84d7b0c428dddfdada1789ebde7871509/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b7bebf84d7b0c428dddfdada1789ebde7871509/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=1b7bebf84d7b0c428dddfdada1789ebde7871509", "patch": "@@ -2716,7 +2716,7 @@ impl<'a> fmt::Display for Sidebar<'a> {\n         let parentlen = cx.current.len() - if it.is_mod() {1} else {0};\n \n         // the sidebar is designed to display sibling functions, modules and\n-        // other miscellaneous informations. since there are lots of sibling\n+        // other miscellaneous information. since there are lots of sibling\n         // items (and that causes quadratic growth in large modules),\n         // we refactor common parts into a shared JavaScript file per module.\n         // still, we don't move everything into JS because we want to preserve"}, {"sha": "a408b4378e19e6b14cdb0f68478adf628f527dc0", "filename": "src/libstd/memchr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1b7bebf84d7b0c428dddfdada1789ebde7871509/src%2Flibstd%2Fmemchr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b7bebf84d7b0c428dddfdada1789ebde7871509/src%2Flibstd%2Fmemchr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fmemchr.rs?ref=1b7bebf84d7b0c428dddfdada1789ebde7871509", "patch": "@@ -239,7 +239,7 @@ mod fallback {\n         text[..offset].iter().rposition(|elt| *elt == x)\n     }\n \n-    // test fallback implementations on all plattforms\n+    // test fallback implementations on all platforms\n     #[test]\n     fn matches_one() {\n         assert_eq!(Some(0), memchr(b'a', b\"a\"));"}]}