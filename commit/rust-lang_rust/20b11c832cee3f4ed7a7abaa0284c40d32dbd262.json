{"sha": "20b11c832cee3f4ed7a7abaa0284c40d32dbd262", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIwYjExYzgzMmNlZTNmNGVkN2E3YWJhYTAyODRjNDBkMzJkYmQyNjI=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-11-29T20:13:38Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-11-29T20:13:38Z"}, "message": "Add mut field to typeck.ty.", "tree": {"sha": "ac79e3a31d10bc101d7b2ab874877e0bce73442e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ac79e3a31d10bc101d7b2ab874877e0bce73442e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/20b11c832cee3f4ed7a7abaa0284c40d32dbd262", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/20b11c832cee3f4ed7a7abaa0284c40d32dbd262", "html_url": "https://github.com/rust-lang/rust/commit/20b11c832cee3f4ed7a7abaa0284c40d32dbd262", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/20b11c832cee3f4ed7a7abaa0284c40d32dbd262/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7be7c23b6b5ead25529814ccdbc0101d6b6d7683", "url": "https://api.github.com/repos/rust-lang/rust/commits/7be7c23b6b5ead25529814ccdbc0101d6b6d7683", "html_url": "https://github.com/rust-lang/rust/commit/7be7c23b6b5ead25529814ccdbc0101d6b6d7683"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "a0aec16f654da1bdff10de257ae857f9841f83a6", "filename": "src/comp/middle/typeck.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/20b11c832cee3f4ed7a7abaa0284c40d32dbd262/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/20b11c832cee3f4ed7a7abaa0284c40d32dbd262/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftypeck.rs?ref=20b11c832cee3f4ed7a7abaa0284c40d32dbd262", "patch": "@@ -28,7 +28,7 @@ type arg = rec(ast.mode mode, @ty ty);\n \n // NB: If you change this, you'll probably want to change the corresponding\n // AST structure in front/ast.rs as well.\n-type ty = rec(sty struct, option.t[str] cname);\n+type ty = rec(sty struct, bool mut, option.t[str] cname);\n tag sty {\n     ty_nil;\n     ty_bool;\n@@ -257,7 +257,7 @@ fn ast_ty_to_ty(ty_getter getter, &@ast.ty ast_ty) -> @ty {\n         }\n     }\n \n-    ret @rec(struct=sty, cname=cname);\n+    ret @rec(struct=sty, mut=false, cname=cname);\n }\n \n // A convenience function to use a crate_ctxt to resolve names for\n@@ -522,7 +522,7 @@ fn type_is_signed(@ty t) -> bool {\n }\n \n fn plain_ty(&sty st) -> @ty {\n-    ret @rec(struct=st, cname=none[str]);\n+    ret @rec(struct=st, mut=false, cname=none[str]);\n }\n \n fn ann_to_type(&ast.ann ann) -> @ty {\n@@ -1075,7 +1075,7 @@ fn check_expr(&fn_ctxt fcx, @ast.expr expr) -> @ast.expr {\n         }\n \n         case (ast.expr_name(?name, ?defopt, _)) {\n-            auto t = @rec(struct=ty_nil, cname=none[str]);\n+            auto t = plain_ty(ty_nil);\n             alt (option.get[ast.def](defopt)) {\n                 case (ast.def_arg(?id)) {\n                     check (fcx.locals.contains_key(id));"}]}