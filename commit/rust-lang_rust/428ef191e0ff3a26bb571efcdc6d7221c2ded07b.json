{"sha": "428ef191e0ff3a26bb571efcdc6d7221c2ded07b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQyOGVmMTkxZTBmZjNhMjZiYjU3MWVmY2RjNmQ3MjIxYzJkZWQwN2I=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2018-04-29T23:20:14Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2018-05-01T00:10:47Z"}, "message": "resolve (cleanup): Get rid of `Option` in `PerNS`", "tree": {"sha": "248c1fa7a930b694cee7487bd1ac2a727464976f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/248c1fa7a930b694cee7487bd1ac2a727464976f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/428ef191e0ff3a26bb571efcdc6d7221c2ded07b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/428ef191e0ff3a26bb571efcdc6d7221c2ded07b", "html_url": "https://github.com/rust-lang/rust/commit/428ef191e0ff3a26bb571efcdc6d7221c2ded07b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/428ef191e0ff3a26bb571efcdc6d7221c2ded07b/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "17841cc97ac950312355403b6cfe11b916e242a6", "url": "https://api.github.com/repos/rust-lang/rust/commits/17841cc97ac950312355403b6cfe11b916e242a6", "html_url": "https://github.com/rust-lang/rust/commit/17841cc97ac950312355403b6cfe11b916e242a6"}], "stats": {"total": 29, "additions": 15, "deletions": 14}, "files": [{"sha": "f4a5ace69dde6888373a070d618f82f40946bef1", "filename": "src/librustc_resolve/build_reduced_graph.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/428ef191e0ff3a26bb571efcdc6d7221c2ded07b/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/428ef191e0ff3a26bb571efcdc6d7221c2ded07b/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs?ref=428ef191e0ff3a26bb571efcdc6d7221c2ded07b", "patch": "@@ -17,7 +17,7 @@ use macros::{InvocationData, LegacyScope};\n use resolve_imports::ImportDirective;\n use resolve_imports::ImportDirectiveSubclass::{self, GlobImport, SingleImport};\n use {Module, ModuleData, ModuleKind, NameBinding, NameBindingKind, ToNameBinding};\n-use {Resolver, ResolverArenas};\n+use {PerNS, Resolver, ResolverArenas};\n use Namespace::{self, TypeNS, ValueNS, MacroNS};\n use {resolve_error, resolve_struct_error, ResolutionError};\n \n@@ -175,7 +175,11 @@ impl<'a> Resolver<'a> {\n                 let subclass = SingleImport {\n                     target: ident,\n                     source,\n-                    result: self.per_ns(|_, _| Cell::new(Err(Undetermined))),\n+                    result: PerNS {\n+                        type_ns: Cell::new(Err(Undetermined)),\n+                        value_ns: Cell::new(Err(Undetermined)),\n+                        macro_ns: Cell::new(Err(Undetermined)),\n+                    },\n                     type_ns_only,\n                 };\n                 self.add_import_directive("}, {"sha": "cb8c38b92b5f7f3f63b44ef88b347da9ed3eb965", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 9, "deletions": 12, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/428ef191e0ff3a26bb571efcdc6d7221c2ded07b/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/428ef191e0ff3a26bb571efcdc6d7221c2ded07b/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=428ef191e0ff3a26bb571efcdc6d7221c2ded07b", "patch": "@@ -700,7 +700,7 @@ pub enum Namespace {\n pub struct PerNS<T> {\n     value_ns: T,\n     type_ns: T,\n-    macro_ns: Option<T>,\n+    macro_ns: T,\n }\n \n impl<T> ::std::ops::Index<Namespace> for PerNS<T> {\n@@ -709,7 +709,7 @@ impl<T> ::std::ops::Index<Namespace> for PerNS<T> {\n         match ns {\n             ValueNS => &self.value_ns,\n             TypeNS => &self.type_ns,\n-            MacroNS => self.macro_ns.as_ref().unwrap(),\n+            MacroNS => &self.macro_ns,\n         }\n     }\n }\n@@ -719,7 +719,7 @@ impl<T> ::std::ops::IndexMut<Namespace> for PerNS<T> {\n         match ns {\n             ValueNS => &mut self.value_ns,\n             TypeNS => &mut self.type_ns,\n-            MacroNS => self.macro_ns.as_mut().unwrap(),\n+            MacroNS => &mut self.macro_ns,\n         }\n     }\n }\n@@ -1726,7 +1726,7 @@ impl<'a> Resolver<'a> {\n             ribs: PerNS {\n                 value_ns: vec![Rib::new(ModuleRibKind(graph_root))],\n                 type_ns: vec![Rib::new(ModuleRibKind(graph_root))],\n-                macro_ns: Some(vec![Rib::new(ModuleRibKind(graph_root))]),\n+                macro_ns: vec![Rib::new(ModuleRibKind(graph_root))],\n             },\n             label_ribs: Vec::new(),\n \n@@ -1806,14 +1806,11 @@ impl<'a> Resolver<'a> {\n     }\n \n     /// Runs the function on each namespace.\n-    fn per_ns<T, F: FnMut(&mut Self, Namespace) -> T>(&mut self, mut f: F) -> PerNS<T> {\n-        PerNS {\n-            type_ns: f(self, TypeNS),\n-            value_ns: f(self, ValueNS),\n-            macro_ns: match self.use_extern_macros {\n-                true => Some(f(self, MacroNS)),\n-                false => None,\n-            },\n+    fn per_ns<F: FnMut(&mut Self, Namespace)>(&mut self, mut f: F) {\n+        f(self, TypeNS);\n+        f(self, ValueNS);\n+        if self.use_extern_macros {\n+            f(self, MacroNS);\n         }\n     }\n "}]}