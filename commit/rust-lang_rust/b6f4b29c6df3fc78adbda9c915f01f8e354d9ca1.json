{"sha": "b6f4b29c6df3fc78adbda9c915f01f8e354d9ca1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI2ZjRiMjljNmRmM2ZjNzhhZGJkYTljOTE1ZjAxZjhlMzU0ZDljYTE=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2018-11-09T02:14:41Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2018-11-22T22:14:27Z"}, "message": "Point at the associated type's def span", "tree": {"sha": "96d3a90a5dd8f6e3d0358e77da7532a126f4cefc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/96d3a90a5dd8f6e3d0358e77da7532a126f4cefc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b6f4b29c6df3fc78adbda9c915f01f8e354d9ca1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b6f4b29c6df3fc78adbda9c915f01f8e354d9ca1", "html_url": "https://github.com/rust-lang/rust/commit/b6f4b29c6df3fc78adbda9c915f01f8e354d9ca1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b6f4b29c6df3fc78adbda9c915f01f8e354d9ca1/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "286f7ae1dde03478fc0f36b7d1f3dc97cb47b730", "url": "https://api.github.com/repos/rust-lang/rust/commits/286f7ae1dde03478fc0f36b7d1f3dc97cb47b730", "html_url": "https://github.com/rust-lang/rust/commit/286f7ae1dde03478fc0f36b7d1f3dc97cb47b730"}], "stats": {"total": 66, "additions": 66, "deletions": 0}, "files": [{"sha": "173f7ababe364031bd5abee4f4fc5836d17f5c94", "filename": "src/librustc_typeck/astconv.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b6f4b29c6df3fc78adbda9c915f01f8e354d9ca1/src%2Flibrustc_typeck%2Fastconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b6f4b29c6df3fc78adbda9c915f01f8e354d9ca1/src%2Flibrustc_typeck%2Fastconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fastconv.rs?ref=b6f4b29c6df3fc78adbda9c915f01f8e354d9ca1", "patch": "@@ -1053,6 +1053,10 @@ impl<'o, 'gcx: 'tcx, 'tcx> dyn AstConv<'gcx, 'tcx>+'o {\n                     span,\n                     format!(\"missing associated type `{}` value\", assoc_item.ident),\n                 );\n+                err.span_label(\n+                    tcx.def_span(item_def_id),\n+                    format!(\"`{}` defined here\", assoc_item.ident),\n+                );\n             }\n             err.emit();\n         }"}, {"sha": "726078f44a7ea572f9bf1dbc3e985a4570221995", "filename": "src/test/ui/associated-type/associated-type-projection-from-multiple-supertraits.stderr", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b6f4b29c6df3fc78adbda9c915f01f8e354d9ca1/src%2Ftest%2Fui%2Fassociated-type%2Fassociated-type-projection-from-multiple-supertraits.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b6f4b29c6df3fc78adbda9c915f01f8e354d9ca1/src%2Ftest%2Fui%2Fassociated-type%2Fassociated-type-projection-from-multiple-supertraits.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-type%2Fassociated-type-projection-from-multiple-supertraits.stderr?ref=b6f4b29c6df3fc78adbda9c915f01f8e354d9ca1", "patch": "@@ -25,6 +25,9 @@ LL | fn dent_object<COLOR>(c: BoxCar<Color=COLOR>) {\n error[E0191]: the value of the associated type `Color` (from the trait `Vehicle`) must be specified\n   --> $DIR/associated-type-projection-from-multiple-supertraits.rs:33:26\n    |\n+LL |     type Color;\n+   |     ----------- `Color` defined here\n+...\n LL | fn dent_object<COLOR>(c: BoxCar<Color=COLOR>) {\n    |                          ^^^^^^^^^^^^^^^^^^^ missing associated type `Color` value\n "}, {"sha": "933f059ebf483f76bc7746ddb390a5caafe4faf1", "filename": "src/test/ui/associated-types/associated-types-incomplete-object.stderr", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/b6f4b29c6df3fc78adbda9c915f01f8e354d9ca1/src%2Ftest%2Fui%2Fassociated-types%2Fassociated-types-incomplete-object.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b6f4b29c6df3fc78adbda9c915f01f8e354d9ca1/src%2Ftest%2Fui%2Fassociated-types%2Fassociated-types-incomplete-object.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-types%2Fassociated-types-incomplete-object.stderr?ref=b6f4b29c6df3fc78adbda9c915f01f8e354d9ca1", "patch": "@@ -1,18 +1,29 @@\n error[E0191]: the value of the associated type `B` (from the trait `Foo`) must be specified\n   --> $DIR/associated-types-incomplete-object.rs:33:26\n    |\n+LL |     type B;\n+   |     ------- `B` defined here\n+...\n LL |     let b = &42isize as &Foo<A=usize>;\n    |                          ^^^^^^^^^^^^ missing associated type `B` value\n \n error[E0191]: the value of the associated type `A` (from the trait `Foo`) must be specified\n   --> $DIR/associated-types-incomplete-object.rs:36:26\n    |\n+LL |     type A;\n+   |     ------- `A` defined here\n+...\n LL |     let c = &42isize as &Foo<B=char>;\n    |                          ^^^^^^^^^^^ missing associated type `A` value\n \n error[E0191]: the value of the associated types `A` (from the trait `Foo`), `B` (from the trait `Foo`) must be specified\n   --> $DIR/associated-types-incomplete-object.rs:39:26\n    |\n+LL |     type A;\n+   |     ------- `A` defined here\n+LL |     type B;\n+   |     ------- `B` defined here\n+...\n LL |     let d = &42isize as &Foo;\n    |                          ^^^\n    |                          |"}, {"sha": "1e8c683aff6a5f47e0b5f835dbd99ab1ecdb50f1", "filename": "src/test/ui/error-codes/E0107-b.stderr", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b6f4b29c6df3fc78adbda9c915f01f8e354d9ca1/src%2Ftest%2Fui%2Ferror-codes%2FE0107-b.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b6f4b29c6df3fc78adbda9c915f01f8e354d9ca1/src%2Ftest%2Fui%2Ferror-codes%2FE0107-b.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0107-b.stderr?ref=b6f4b29c6df3fc78adbda9c915f01f8e354d9ca1", "patch": "@@ -9,6 +9,12 @@ LL |  pub struct Foo { i: Box<T<usize, usize, usize, usize, B=usize>> }\n error[E0191]: the value of the associated types `A` (from the trait `T`), `C` (from the trait `T`) must be specified\n   --> $DIR/E0107-b.rs:6:26\n    |\n+LL |     type A;\n+   |     ------- `A` defined here\n+LL |     type B;\n+LL |     type C;\n+   |     ------- `C` defined here\n+LL | }\n LL |  pub struct Foo { i: Box<T<usize, usize, usize, usize, B=usize>> }\n    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |                          |"}, {"sha": "a1f7c935c4a45724095e5401915a7a2b7cf9c816", "filename": "src/test/ui/error-codes/E0191.stderr", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b6f4b29c6df3fc78adbda9c915f01f8e354d9ca1/src%2Ftest%2Fui%2Ferror-codes%2FE0191.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b6f4b29c6df3fc78adbda9c915f01f8e354d9ca1/src%2Ftest%2Fui%2Ferror-codes%2FE0191.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0191.stderr?ref=b6f4b29c6df3fc78adbda9c915f01f8e354d9ca1", "patch": "@@ -1,6 +1,9 @@\n error[E0191]: the value of the associated type `Bar` (from the trait `Trait`) must be specified\n   --> $DIR/E0191.rs:15:12\n    |\n+LL |     type Bar;\n+   |     --------- `Bar` defined here\n+...\n LL | type Foo = Trait; //~ ERROR E0191\n    |            ^^^^^ missing associated type `Bar` value\n "}, {"sha": "7ddd912d4f2bfed1b409adcde7bd9c57464c79f8", "filename": "src/test/ui/error-codes/E0220.stderr", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b6f4b29c6df3fc78adbda9c915f01f8e354d9ca1/src%2Ftest%2Fui%2Ferror-codes%2FE0220.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b6f4b29c6df3fc78adbda9c915f01f8e354d9ca1/src%2Ftest%2Fui%2Ferror-codes%2FE0220.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0220.stderr?ref=b6f4b29c6df3fc78adbda9c915f01f8e354d9ca1", "patch": "@@ -7,6 +7,9 @@ LL | type Foo = Trait<F=i32>; //~ ERROR E0220\n error[E0191]: the value of the associated type `Bar` (from the trait `Trait`) must be specified\n   --> $DIR/E0220.rs:15:12\n    |\n+LL |     type Bar;\n+   |     --------- `Bar` defined here\n+...\n LL | type Foo = Trait<F=i32>; //~ ERROR E0220\n    |            ^^^^^^^^^^^^ missing associated type `Bar` value\n "}, {"sha": "7e71b0bd2323bc74e3c9afa2f1e57d9fc5c8b094", "filename": "src/test/ui/issues/issue-19482.stderr", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b6f4b29c6df3fc78adbda9c915f01f8e354d9ca1/src%2Ftest%2Fui%2Fissues%2Fissue-19482.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b6f4b29c6df3fc78adbda9c915f01f8e354d9ca1/src%2Ftest%2Fui%2Fissues%2Fissue-19482.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-19482.stderr?ref=b6f4b29c6df3fc78adbda9c915f01f8e354d9ca1", "patch": "@@ -1,6 +1,9 @@\n error[E0191]: the value of the associated type `A` (from the trait `Foo`) must be specified\n   --> $DIR/issue-19482.rs:20:12\n    |\n+LL |     type A;\n+   |     ------- `A` defined here\n+...\n LL | fn bar(x: &Foo) {}\n    |            ^^^ missing associated type `A` value\n "}, {"sha": "3359225ab6dbd48bec7fc706cb3a217cb6a2feff", "filename": "src/test/ui/issues/issue-21950.stderr", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/b6f4b29c6df3fc78adbda9c915f01f8e354d9ca1/src%2Ftest%2Fui%2Fissues%2Fissue-21950.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b6f4b29c6df3fc78adbda9c915f01f8e354d9ca1/src%2Ftest%2Fui%2Fissues%2Fissue-21950.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-21950.stderr?ref=b6f4b29c6df3fc78adbda9c915f01f8e354d9ca1", "patch": "@@ -11,6 +11,11 @@ error[E0191]: the value of the associated type `Output` (from the trait `std::op\n    |\n LL |             &Add;\n    |              ^^^ missing associated type `Output` value\n+   | \n+  ::: $SRC_DIR/libcore/ops/arith.rs:LL:COL\n+   |\n+LL |     type Output;\n+   |     ------------ `Output` defined here\n \n error: aborting due to 2 previous errors\n "}, {"sha": "d951d57444d0ff18a2e0fbc4636550c7f10bb34d", "filename": "src/test/ui/issues/issue-22434.stderr", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b6f4b29c6df3fc78adbda9c915f01f8e354d9ca1/src%2Ftest%2Fui%2Fissues%2Fissue-22434.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b6f4b29c6df3fc78adbda9c915f01f8e354d9ca1/src%2Ftest%2Fui%2Fissues%2Fissue-22434.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-22434.stderr?ref=b6f4b29c6df3fc78adbda9c915f01f8e354d9ca1", "patch": "@@ -1,6 +1,9 @@\n error[E0191]: the value of the associated type `A` (from the trait `Foo`) must be specified\n   --> $DIR/issue-22434.rs:15:19\n    |\n+LL |     type A;\n+   |     ------- `A` defined here\n+...\n LL | type I<'a> = &'a (Foo + 'a);\n    |                   ^^^^^^^^ missing associated type `A` value\n "}, {"sha": "8f736aa03453750e5c46324102687f9994e47048", "filename": "src/test/ui/issues/issue-22560.stderr", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/b6f4b29c6df3fc78adbda9c915f01f8e354d9ca1/src%2Ftest%2Fui%2Fissues%2Fissue-22560.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b6f4b29c6df3fc78adbda9c915f01f8e354d9ca1/src%2Ftest%2Fui%2Fissues%2Fissue-22560.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-22560.stderr?ref=b6f4b29c6df3fc78adbda9c915f01f8e354d9ca1", "patch": "@@ -29,6 +29,11 @@ LL | |             //~^ ERROR E0393\n LL | |             //~| ERROR E0191\n LL | |             Sub;\n    | |_______________^ missing associated type `Output` value\n+   | \n+  ::: $SRC_DIR/libcore/ops/arith.rs:LL:COL\n+   |\n+LL |       type Output;\n+   |       ------------ `Output` defined here\n \n error: aborting due to 4 previous errors\n "}, {"sha": "8a493468dbf9cdee6893a8ef10cd0baa871839e5", "filename": "src/test/ui/issues/issue-23024.stderr", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/b6f4b29c6df3fc78adbda9c915f01f8e354d9ca1/src%2Ftest%2Fui%2Fissues%2Fissue-23024.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b6f4b29c6df3fc78adbda9c915f01f8e354d9ca1/src%2Ftest%2Fui%2Fissues%2Fissue-23024.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-23024.stderr?ref=b6f4b29c6df3fc78adbda9c915f01f8e354d9ca1", "patch": "@@ -17,6 +17,11 @@ error[E0191]: the value of the associated type `Output` (from the trait `std::op\n    |\n LL |     println!(\"{:?}\",(vfnfer[0] as Fn)(3));\n    |                                   ^^ missing associated type `Output` value\n+   | \n+  ::: $SRC_DIR/libcore/ops/function.rs:LL:COL\n+   |\n+LL |     type Output;\n+   |     ------------ `Output` defined here\n \n error: aborting due to 3 previous errors\n "}, {"sha": "67588ba46f2e5b0bdc8a97c56a752b7938aefbaf", "filename": "src/test/ui/issues/issue-28344.stderr", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b6f4b29c6df3fc78adbda9c915f01f8e354d9ca1/src%2Ftest%2Fui%2Fissues%2Fissue-28344.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b6f4b29c6df3fc78adbda9c915f01f8e354d9ca1/src%2Ftest%2Fui%2Fissues%2Fissue-28344.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-28344.stderr?ref=b6f4b29c6df3fc78adbda9c915f01f8e354d9ca1", "patch": "@@ -3,6 +3,11 @@ error[E0191]: the value of the associated type `Output` (from the trait `std::op\n    |\n LL |     let x: u8 = BitXor::bitor(0 as u8, 0 as u8);\n    |                 ^^^^^^^^^^^^^ missing associated type `Output` value\n+   | \n+  ::: $SRC_DIR/libcore/ops/bit.rs:LL:COL\n+   |\n+LL |     type Output;\n+   |     ------------ `Output` defined here\n \n error[E0599]: no function or associated item named `bitor` found for type `dyn std::ops::BitXor<_>` in the current scope\n   --> $DIR/issue-28344.rs:14:17\n@@ -17,6 +22,11 @@ error[E0191]: the value of the associated type `Output` (from the trait `std::op\n    |\n LL |     let g = BitXor::bitor;\n    |             ^^^^^^^^^^^^^ missing associated type `Output` value\n+   | \n+  ::: $SRC_DIR/libcore/ops/bit.rs:LL:COL\n+   |\n+LL |     type Output;\n+   |     ------------ `Output` defined here\n \n error[E0599]: no function or associated item named `bitor` found for type `dyn std::ops::BitXor<_>` in the current scope\n   --> $DIR/issue-28344.rs:18:13"}, {"sha": "0ae9b0b886419165f987113bd0e1d88323e9c69d", "filename": "src/test/ui/traits/trait-alias-object.stderr", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/b6f4b29c6df3fc78adbda9c915f01f8e354d9ca1/src%2Ftest%2Fui%2Ftraits%2Ftrait-alias-object.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b6f4b29c6df3fc78adbda9c915f01f8e354d9ca1/src%2Ftest%2Fui%2Ftraits%2Ftrait-alias-object.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Ftrait-alias-object.stderr?ref=b6f4b29c6df3fc78adbda9c915f01f8e354d9ca1", "patch": "@@ -11,6 +11,11 @@ error[E0191]: the value of the associated type `Item` (from the trait `std::iter\n    |\n LL |     let _: &dyn IteratorAlias = &vec![123].into_iter();\n    |             ^^^^^^^^^^^^^^^^^ missing associated type `Item` value\n+   | \n+  ::: $SRC_DIR/libcore/iter/iterator.rs:LL:COL\n+   |\n+LL |     type Item;\n+   |     ---------- `Item` defined here\n \n error: aborting due to 2 previous errors\n "}]}