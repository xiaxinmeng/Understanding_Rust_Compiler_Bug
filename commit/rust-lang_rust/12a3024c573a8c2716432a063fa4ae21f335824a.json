{"sha": "12a3024c573a8c2716432a063fa4ae21f335824a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEyYTMwMjRjNTczYThjMjcxNjQzMmEwNjNmYTRhZTIxZjMzNTgyNGE=", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2020-11-26T18:12:24Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2020-11-26T20:32:29Z"}, "message": "Use visitor for its very purpose.", "tree": {"sha": "b1d2832df4d27d6bf279338b03c8b603efeb2da6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b1d2832df4d27d6bf279338b03c8b603efeb2da6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/12a3024c573a8c2716432a063fa4ae21f335824a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/12a3024c573a8c2716432a063fa4ae21f335824a", "html_url": "https://github.com/rust-lang/rust/commit/12a3024c573a8c2716432a063fa4ae21f335824a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/12a3024c573a8c2716432a063fa4ae21f335824a/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "60c3bbd8447593b06fcab55ed9bd2f0f0af678fc", "url": "https://api.github.com/repos/rust-lang/rust/commits/60c3bbd8447593b06fcab55ed9bd2f0f0af678fc", "html_url": "https://github.com/rust-lang/rust/commit/60c3bbd8447593b06fcab55ed9bd2f0f0af678fc"}], "stats": {"total": 16, "additions": 3, "deletions": 13}, "files": [{"sha": "699c96bc49d5990645ef102f134d256f7c881d2b", "filename": "compiler/rustc_passes/src/diagnostic_items.rs", "status": "modified", "additions": 3, "deletions": 13, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/12a3024c573a8c2716432a063fa4ae21f335824a/compiler%2Frustc_passes%2Fsrc%2Fdiagnostic_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/12a3024c573a8c2716432a063fa4ae21f335824a/compiler%2Frustc_passes%2Fsrc%2Fdiagnostic_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fdiagnostic_items.rs?ref=12a3024c573a8c2716432a063fa4ae21f335824a", "patch": "@@ -38,7 +38,9 @@ impl<'v, 'tcx> ItemLikeVisitor<'v> for DiagnosticItemCollector<'tcx> {\n         self.observe_item(&impl_item.attrs, impl_item.hir_id);\n     }\n \n-    fn visit_foreign_item(&mut self, _foreign_item: &hir::ForeignItem<'_>) {}\n+    fn visit_foreign_item(&mut self, foreign_item: &hir::ForeignItem<'_>) {\n+        self.observe_item(foreign_item.attrs, foreign_item.hir_id);\n+    }\n }\n \n impl<'tcx> DiagnosticItemCollector<'tcx> {\n@@ -102,18 +104,6 @@ fn collect<'tcx>(tcx: TyCtxt<'tcx>) -> FxHashMap<Symbol, DefId> {\n \n     // Collect diagnostic items in this crate.\n     tcx.hir().krate().visit_all_item_likes(&mut collector);\n-    // FIXME(visit_all_item_likes): Foreign items are not visited\n-    // here, so we have to manually look at them for now.\n-    for (_, foreign_module) in tcx.foreign_modules(LOCAL_CRATE).iter() {\n-        for &foreign_item in foreign_module.foreign_items.iter() {\n-            match tcx.hir().get(tcx.hir().local_def_id_to_hir_id(foreign_item.expect_local())) {\n-                hir::Node::ForeignItem(item) => {\n-                    collector.observe_item(item.attrs, item.hir_id);\n-                }\n-                item => bug!(\"unexpected foreign item {:?}\", item),\n-            }\n-        }\n-    }\n \n     for m in tcx.hir().krate().exported_macros {\n         collector.observe_item(m.attrs, m.hir_id);"}]}