{"sha": "e231277ab2f1ebb3040457e89b92540e599dbb3e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUyMzEyNzdhYjJmMWViYjMwNDA0NTdlODliOTI1NDBlNTk5ZGJiM2U=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-03-26T11:13:17Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-03-26T11:13:17Z"}, "message": "make macro parsing a query", "tree": {"sha": "4056d1d2e6ad48530e12c3a5a67dcd82dd4f1680", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4056d1d2e6ad48530e12c3a5a67dcd82dd4f1680"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e231277ab2f1ebb3040457e89b92540e599dbb3e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e231277ab2f1ebb3040457e89b92540e599dbb3e", "html_url": "https://github.com/rust-lang/rust/commit/e231277ab2f1ebb3040457e89b92540e599dbb3e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e231277ab2f1ebb3040457e89b92540e599dbb3e/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e4646ce0d5bc232fb525a9330bc0c64d826fd241", "url": "https://api.github.com/repos/rust-lang/rust/commits/e4646ce0d5bc232fb525a9330bc0c64d826fd241", "html_url": "https://github.com/rust-lang/rust/commit/e4646ce0d5bc232fb525a9330bc0c64d826fd241"}], "stats": {"total": 13, "additions": 8, "deletions": 5}, "files": [{"sha": "492814cbbcbd19e42a2af40ca284f7025c5c77ae", "filename": "crates/ra_hir/src/db.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e231277ab2f1ebb3040457e89b92540e599dbb3e/crates%2Fra_hir%2Fsrc%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e231277ab2f1ebb3040457e89b92540e599dbb3e/crates%2Fra_hir%2Fsrc%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fdb.rs?ref=e231277ab2f1ebb3040457e89b92540e599dbb3e", "patch": "@@ -4,7 +4,7 @@ use ra_syntax::{SyntaxNode, TreeArc, SourceFile};\n use ra_db::{SourceDatabase, salsa};\n \n use crate::{\n-    HirFileId, SourceFileItems, SourceItemId, Crate, Module, HirInterner,\n+    HirFileId, MacroDefId, SourceFileItems, SourceItemId, Crate, Module, HirInterner,\n     Function, FnSignature, ExprScopes, TypeAlias,\n     Struct, Enum, StructField,\n     Const, ConstSignature, Static,\n@@ -19,6 +19,9 @@ use crate::{\n \n #[salsa::query_group(DefDatabaseStorage)]\n pub trait DefDatabase: SourceDatabase + AsRef<HirInterner> {\n+    #[salsa::invoke(crate::ids::macro_def_query)]\n+    fn macro_def(&self, macro_id: MacroDefId) -> Option<Arc<mbe::MacroRules>>;\n+\n     #[salsa::invoke(HirFileId::hir_parse)]\n     fn hir_parse(&self, file_id: HirFileId) -> TreeArc<SourceFile>;\n "}, {"sha": "bac7b9e46b9513b2bc2ab69518874ac66bf4f79f", "filename": "crates/ra_hir/src/ids.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e231277ab2f1ebb3040457e89b92540e599dbb3e/crates%2Fra_hir%2Fsrc%2Fids.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e231277ab2f1ebb3040457e89b92540e599dbb3e/crates%2Fra_hir%2Fsrc%2Fids.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fids.rs?ref=e231277ab2f1ebb3040457e89b92540e599dbb3e", "patch": "@@ -101,7 +101,7 @@ fn parse_macro(db: &impl DefDatabase, macro_call_id: MacroCallId) -> Option<Tree\n     let macro_call = ast::MacroCall::cast(&syntax).unwrap();\n     let (macro_arg, _) = macro_call.token_tree().and_then(mbe::ast_to_token_tree)?;\n \n-    let macro_rules = macro_def_query(db, loc.def)?;\n+    let macro_rules = db.macro_def(loc.def)?;\n     let tt = macro_rules.expand(&macro_arg).ok()?;\n     Some(mbe::token_tree_to_ast_item_list(&tt))\n }\n@@ -125,11 +125,11 @@ impl From<MacroCallId> for HirFileId {\n }\n \n #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]\n-pub(crate) enum MacroDefId {\n+pub enum MacroDefId {\n     MacroByExample { source_item_id: SourceItemId },\n }\n \n-fn macro_def_query(db: &impl DefDatabase, id: MacroDefId) -> Option<Arc<MacroRules>> {\n+pub(crate) fn macro_def_query(db: &impl DefDatabase, id: MacroDefId) -> Option<Arc<MacroRules>> {\n     let syntax_node = match id {\n         MacroDefId::MacroByExample { source_item_id } => db.file_item(source_item_id),\n     };"}, {"sha": "87bc8009d3603c419ff3a104a81a4ed0e411d6bb", "filename": "crates/ra_hir/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e231277ab2f1ebb3040457e89b92540e599dbb3e/crates%2Fra_hir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e231277ab2f1ebb3040457e89b92540e599dbb3e/crates%2Fra_hir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Flib.rs?ref=e231277ab2f1ebb3040457e89b92540e599dbb3e", "patch": "@@ -53,7 +53,7 @@ use crate::{\n pub use self::{\n     path::{Path, PathKind},\n     name::Name,\n-    ids::{HirFileId, MacroCallId, MacroCallLoc, HirInterner},\n+    ids::{HirFileId, MacroDefId, MacroCallId, MacroCallLoc, HirInterner},\n     nameres::{PerNs, Namespace},\n     ty::{Ty, ApplicationTy, TypeCtor, Substs, display::HirDisplay},\n     impl_block::{ImplBlock, ImplItem},"}]}