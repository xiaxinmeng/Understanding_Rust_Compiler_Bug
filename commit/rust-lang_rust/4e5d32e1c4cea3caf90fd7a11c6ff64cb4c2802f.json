{"sha": "4e5d32e1c4cea3caf90fd7a11c6ff64cb4c2802f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRlNWQzMmUxYzRjZWEzY2FmOTBmZDdhMTFjNmZmNjRjYjRjMjgwMmY=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-06-29T22:12:02Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-06-29T22:14:55Z"}, "message": "Add fast-check target that combines the stage2 run-pass suite into a single executable.", "tree": {"sha": "be530903dfc85c29c2cdef9bd192f6b06d2b95b8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/be530903dfc85c29c2cdef9bd192f6b06d2b95b8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4e5d32e1c4cea3caf90fd7a11c6ff64cb4c2802f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4e5d32e1c4cea3caf90fd7a11c6ff64cb4c2802f", "html_url": "https://github.com/rust-lang/rust/commit/4e5d32e1c4cea3caf90fd7a11c6ff64cb4c2802f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4e5d32e1c4cea3caf90fd7a11c6ff64cb4c2802f/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c796a8f24dfa94a1614da70fbf25b63d3709a116", "url": "https://api.github.com/repos/rust-lang/rust/commits/c796a8f24dfa94a1614da70fbf25b63d3709a116", "html_url": "https://github.com/rust-lang/rust/commit/c796a8f24dfa94a1614da70fbf25b63d3709a116"}], "stats": {"total": 102, "additions": 101, "deletions": 1}, "files": [{"sha": "49a5d2be55b0d73fb74dc8c28b0ee97966570f47", "filename": "mk/clean.mk", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4e5d32e1c4cea3caf90fd7a11c6ff64cb4c2802f/mk%2Fclean.mk", "raw_url": "https://github.com/rust-lang/rust/raw/4e5d32e1c4cea3caf90fd7a11c6ff64cb4c2802f/mk%2Fclean.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fclean.mk?ref=4e5d32e1c4cea3caf90fd7a11c6ff64cb4c2802f", "patch": "@@ -25,7 +25,9 @@ clean:\n \t$(Q)rm -Rf $(foreach ext,out out.tmp                      \\\n                              stage0$(X) stage1$(X) stage2$(X) \\\n                              bc o s exe dSYM,                 \\\n-                        $(wildcard test/*/*.$(ext) test/bench/*/*.$(ext)))\n+                        $(wildcard test/*.$(ext) \\\n+                                   test/*/*.$(ext) \\\n+                                   test/bench/*/*.$(ext)))\n \t$(Q)rm -Rf $(foreach ext, \\\n                  aux cp fn ky log pdf html pg toc tp vr cps, \\\n                  $(wildcard doc/*.$(ext)))"}, {"sha": "7f0c2731b3087fb989be733ade4ba597d599ea55", "filename": "mk/tests.mk", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/4e5d32e1c4cea3caf90fd7a11c6ff64cb4c2802f/mk%2Ftests.mk", "raw_url": "https://github.com/rust-lang/rust/raw/4e5d32e1c4cea3caf90fd7a11c6ff64cb4c2802f/mk%2Ftests.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Ftests.mk?ref=4e5d32e1c4cea3caf90fd7a11c6ff64cb4c2802f", "patch": "@@ -138,6 +138,13 @@ ALL_TEST_SOURCES := $(TEST_CFAIL_SOURCES_STAGE0) \\\n                     $(TEST_RFAIL_SOURCES_STAGE2) \\\n                     $(TEST_RPASS_SOURCES_STAGE2)\n \n+\n+FT := run_pass_stage2\n+FT_LIB := $(call CFG_LIB_NAME,$(FT))\n+FT_DRIVER := $(FT)_driver\n+GENERATED += test/$(FT).rc test/$(FT_DRIVER).rs\n+\n+\n check-nocompile: $(TEST_CFAIL_OUTS_STAGE0) \\\n                  $(TEST_CFAIL_OUTS_STAGE1) \\\n                  $(TEST_CFAIL_OUTS_STAGE2)\n@@ -165,6 +172,9 @@ check: tidy \\\n        $(TEST_RPASS_OUTS_STAGE2) $(TEST_RFAIL_OUTS_STAGE2) \\\n        $(TEST_CFAIL_OUTS_STAGE2)\n \n+fast-check: tidy \\\n+       test/$(FT_DRIVER).out\n+\n full-check: tidy \\\n        $(TEST_RPASS_EXES_STAGE0) $(TEST_RFAIL_EXES_STAGE0) \\\n        $(TEST_RPASS_OUTS_STAGE0) $(TEST_RFAIL_OUTS_STAGE0) \\\n@@ -182,6 +192,28 @@ compile-check: tidy \\\n        $(TEST_RPASS_EXES_STAGE2) $(TEST_RFAIL_EXES_STAGE2)\n \n \n+\n+######################################################################\n+# Fast-test rules\n+######################################################################\n+\n+test/$(FT).rc test/$(FT_DRIVER).rs: $(TEST_RPASS_SOURCES_STAGE2) \\\n+    $(S)src/etc/combine-tests.py\n+\t@$(call E, check: building combined stage2 test runner)\n+\t$(Q)$(S)src/etc/combine-tests.py\n+\n+stage2/lib/$(FT_LIB): test/$(FT).rc $(SREQ2)\n+\t@$(call E, compile_and_link: $@)\n+\t$(STAGE2) --shared -o $@ $<\n+\n+test/$(FT_DRIVER): test/$(FT_DRIVER).rs stage2/lib/$(FT_LIB) $(SREQ2)\n+\t@$(call E, compile_and_link: $@)\n+\t$(STAGE2) -o $@ $<\n+\n+test/$(FT_DRIVER).out: test/$(FT_DRIVER) $(SREQ2)\n+\t$(Q)$(call CFG_RUN_TEST, $<) | tee $@\n+\n+\n ######################################################################\n # Testing rules\n ######################################################################"}, {"sha": "8abbed8dd6ee69b3b0ab6f62518ab2b08df51b98", "filename": "src/etc/combine-tests.py", "status": "added", "additions": 66, "deletions": 0, "changes": 66, "blob_url": "https://github.com/rust-lang/rust/blob/4e5d32e1c4cea3caf90fd7a11c6ff64cb4c2802f/src%2Fetc%2Fcombine-tests.py", "raw_url": "https://github.com/rust-lang/rust/raw/4e5d32e1c4cea3caf90fd7a11c6ff64cb4c2802f/src%2Fetc%2Fcombine-tests.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fcombine-tests.py?ref=4e5d32e1c4cea3caf90fd7a11c6ff64cb4c2802f", "patch": "@@ -0,0 +1,66 @@\n+#!/usr/bin/env python\n+\n+# this combines all the working run-pass tests into a single large crate so we\n+# can run it \"fast\": spawning zillions of windows processes is our major build\n+# bottleneck (and it doesn't hurt to run faster on other platforms as well).\n+\n+import sys, os, re\n+\n+def scrub(b):\n+  if sys.version_info >= (3,) and type(b) == bytes:\n+    return b.decode('ascii')\n+  else:\n+    return b\n+\n+src_dir = scrub(os.getenv(\"CFG_SRC_DIR\"))\n+if not src_dir:\n+  raise Exception(\"missing env var CFG_SRC_DIR\")\n+\n+run_pass = os.path.join(src_dir, \"src\", \"test\", \"run-pass\")\n+stage2_tests = []\n+take_args = {}\n+\n+for t in os.listdir(run_pass):\n+    if t.endswith(\".rs\"):\n+        f = open(os.path.join(run_pass, t))\n+        s = f.read()\n+        if not (\"xfail-stage2\" in s):\n+            stage2_tests.append(t)\n+            if \"main(vec[str] args)\" in s:\n+                take_args[t] = True\n+        f.close()\n+\n+stage2_tests.sort()\n+\n+# add a .. prefix because we're about to write down into test/..\n+parent_run_pass = os.path.join(\"..\", run_pass);\n+\n+\n+c = open(\"test/run_pass_stage2.rc\", \"w\")\n+i = 0\n+c.write(\"// AUTO-GENERATED FILE: DO NOT EDIT\\n\")\n+c.write(\"#[link(name=\\\"run_pass_stage2\\\", vers=\\\"0.1\\\")];\\n\")\n+for t in stage2_tests:\n+    c.write(\"mod t_%d = \\\"%s\\\";\\n\"\n+            % (i, os.path.join(parent_run_pass, t)))\n+    i += 1\n+c.close()\n+\n+\n+d = open(\"test/run_pass_stage2_driver.rs\", \"w\")\n+d.write(\"// AUTO-GENERATED FILE: DO NOT EDIT\\n\")\n+d.write(\"use std;\\n\")\n+d.write(\"use run_pass_stage2;\\n\")\n+d.write(\"import run_pass_stage2::*;\\n\")\n+d.write(\"fn main() {\\n\");\n+d.write(\"    auto out = std::io::stdout();\\n\");\n+i = 0\n+for t in stage2_tests:\n+    d.write(\"    out.write_str(\\\"run-pass [stage2]: %s\\\\n\\\");\\n\"\n+            % os.path.join(\"test\", \"run-pass\", t))\n+    if t in take_args:\n+        d.write(\"    t_%d::main([\\\"arg0\\\"]);\\n\" % i)\n+    else:\n+        d.write(\"    t_%d::main();\\n\" % i)\n+    i += 1\n+d.write(\"}\\n\")"}]}