{"sha": "aff4f11cddadae56fe26980329b610066eb487b0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFmZjRmMTFjZGRhZGFlNTZmZTI2OTgwMzI5YjYxMDA2NmViNDg3YjA=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-10-19T23:32:07Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-10-19T23:32:07Z"}, "message": "auto merge of #18160 : koshlo/rust/to-source-fix, r=alexcrichton\n\nFix for issue #18091 \r\n\r\nThe problem seems to be that `ast_util::int_ty_to_string` takes unsigned number, and no one adds `-` to result string. I've fixed it by putting `-` before result string using `format!`.\r\n\r\nI've also added `test_signed_int_to_string()` to check if implementation is valid.", "tree": {"sha": "1585802a9faaf2ada99741fc8eb1cc5aed469295", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1585802a9faaf2ada99741fc8eb1cc5aed469295"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aff4f11cddadae56fe26980329b610066eb487b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aff4f11cddadae56fe26980329b610066eb487b0", "html_url": "https://github.com/rust-lang/rust/commit/aff4f11cddadae56fe26980329b610066eb487b0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aff4f11cddadae56fe26980329b610066eb487b0/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5cba29d3343ee17b28d39c8d675aa0980d0c5b9c", "url": "https://api.github.com/repos/rust-lang/rust/commits/5cba29d3343ee17b28d39c8d675aa0980d0c5b9c", "html_url": "https://github.com/rust-lang/rust/commit/5cba29d3343ee17b28d39c8d675aa0980d0c5b9c"}, {"sha": "49ec356c601b3c2fb6ff78df9e22786ec93d34f8", "url": "https://api.github.com/repos/rust-lang/rust/commits/49ec356c601b3c2fb6ff78df9e22786ec93d34f8", "html_url": "https://github.com/rust-lang/rust/commit/49ec356c601b3c2fb6ff78df9e22786ec93d34f8"}], "stats": {"total": 11, "additions": 10, "deletions": 1}, "files": [{"sha": "f654bc30680d5aff61432c3bf1f3392f0ac61a06", "filename": "src/libsyntax/print/pprust.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/aff4f11cddadae56fe26980329b610066eb487b0/src%2Flibsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aff4f11cddadae56fe26980329b610066eb487b0/src%2Flibsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpprust.rs?ref=aff4f11cddadae56fe26980329b610066eb487b0", "patch": "@@ -2680,8 +2680,9 @@ impl<'a> State<'a> {\n                              ast_util::int_ty_to_string(st, Some(i as i64)).as_slice())\n                     }\n                     ast::SignedIntLit(st, ast::Minus) => {\n+                        let istr = ast_util::int_ty_to_string(st, Some(-(i as i64)));\n                         word(&mut self.s,\n-                             ast_util::int_ty_to_string(st, Some(-(i as i64))).as_slice())\n+                             format!(\"-{}\", istr).as_slice())\n                     }\n                     ast::UnsignedIntLit(ut) => {\n                         word(&mut self.s, ast_util::uint_ty_to_string(ut, Some(i)).as_slice())\n@@ -2930,4 +2931,12 @@ mod test {\n         let varstr = variant_to_string(&var);\n         assert_eq!(&varstr,&\"pub principal_skinner\".to_string());\n     }\n+\n+    #[test]\n+    fn test_signed_int_to_string() {\n+        let pos_int = ast::LitInt(42, ast::SignedIntLit(ast::TyI32, ast::Plus));\n+        let neg_int = ast::LitInt((-42) as u64, ast::SignedIntLit(ast::TyI32, ast::Minus));\n+        assert_eq!(format!(\"-{}\", lit_to_string(&codemap::dummy_spanned(pos_int))),\n+                   lit_to_string(&codemap::dummy_spanned(neg_int)));\n+    }\n }"}]}