{"sha": "810cf71a3c4cfa88accb8334252fbba5305f7c76", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgxMGNmNzFhM2M0Y2ZhODhhY2NiODMzNDI1MmZiYmE1MzA1ZjdjNzY=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-10-06T16:35:53Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-10-06T16:35:53Z"}, "message": "make mir map available to later passes (currently unused)", "tree": {"sha": "153f35650f928ce870c1cf2d0ef738e93b08825a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/153f35650f928ce870c1cf2d0ef738e93b08825a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/810cf71a3c4cfa88accb8334252fbba5305f7c76", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/810cf71a3c4cfa88accb8334252fbba5305f7c76", "html_url": "https://github.com/rust-lang/rust/commit/810cf71a3c4cfa88accb8334252fbba5305f7c76", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/810cf71a3c4cfa88accb8334252fbba5305f7c76/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3099fd4617ec1b53bb63a5813a4ec1d3951b48f0", "url": "https://api.github.com/repos/rust-lang/rust/commits/3099fd4617ec1b53bb63a5813a4ec1d3951b48f0", "html_url": "https://github.com/rust-lang/rust/commit/3099fd4617ec1b53bb63a5813a4ec1d3951b48f0"}], "stats": {"total": 20, "additions": 13, "deletions": 7}, "files": [{"sha": "9cca37ce2c3d9230f2b30d5be31009afe95a8345", "filename": "src/librustc_driver/driver.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/810cf71a3c4cfa88accb8334252fbba5305f7c76/src%2Flibrustc_driver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/810cf71a3c4cfa88accb8334252fbba5305f7c76/src%2Flibrustc_driver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Fdriver.rs?ref=810cf71a3c4cfa88accb8334252fbba5305f7c76", "patch": "@@ -738,8 +738,9 @@ pub fn phase_3_run_analysis_passes<'tcx, F, R>(sess: Session,\n         time(time_passes, \"match checking\", ||\n             middle::check_match::check_crate(tcx));\n \n-        time(time_passes, \"MIR dump\", ||\n-             mir::dump::dump_crate(tcx));\n+        let _mir_map =\n+            time(time_passes, \"MIR dump\", ||\n+                 mir::dump::dump_crate(tcx));\n \n         time(time_passes, \"liveness checking\", ||\n             middle::liveness::check_crate(tcx));"}, {"sha": "7346771656de31619fa294684aea7c674978cf5b", "filename": "src/librustc_mir/dump.rs", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/810cf71a3c4cfa88accb8334252fbba5305f7c76/src%2Flibrustc_mir%2Fdump.rs", "raw_url": "https://github.com/rust-lang/rust/raw/810cf71a3c4cfa88accb8334252fbba5305f7c76/src%2Flibrustc_mir%2Fdump.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdump.rs?ref=810cf71a3c4cfa88accb8334252fbba5305f7c76", "patch": "@@ -37,18 +37,23 @@ use self::syntax::ast;\n use self::syntax::attr::AttrMetaMethods;\n use self::syntax::codemap::Span;\n \n-pub fn dump_crate(tcx: &ty::ctxt) {\n+pub type MirMap<'tcx> = NodeMap<Mir<'tcx>>;\n+\n+pub fn dump_crate<'tcx>(tcx: &ty::ctxt<'tcx>) -> MirMap<'tcx>{\n     let mut map = NodeMap();\n-    let mut dump = OuterDump { tcx: tcx, map: &mut map };\n-    visit::walk_crate(&mut dump, tcx.map.krate());\n+    {\n+        let mut dump = OuterDump { tcx: tcx, map: &mut map };\n+        visit::walk_crate(&mut dump, tcx.map.krate());\n+    }\n+    map\n }\n \n ///////////////////////////////////////////////////////////////////////////\n // OuterDump -- walks a crate, looking for fn items and methods to build MIR from\n \n struct OuterDump<'a,'tcx:'a> {\n     tcx: &'a ty::ctxt<'tcx>,\n-    map: &'a mut NodeMap<Mir<'tcx>>,\n+    map: &'a mut MirMap<'tcx>,\n }\n \n impl<'a, 'tcx> OuterDump<'a, 'tcx> {\n@@ -101,7 +106,7 @@ impl<'a, 'tcx> visit::Visitor<'tcx> for OuterDump<'a, 'tcx> {\n \n struct InnerDump<'a,'m,'tcx:'a+'m> {\n     tcx: &'a ty::ctxt<'tcx>,\n-    map: &'m mut NodeMap<Mir<'tcx>>,\n+    map: &'m mut MirMap<'tcx>,\n     attr: Option<&'a ast::Attribute>,\n }\n "}]}