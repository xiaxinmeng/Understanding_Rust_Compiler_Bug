{"sha": "b4524f8bf0650113f764b01918ff7a65601e0050", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI0NTI0ZjhiZjA2NTAxMTNmNzY0YjAxOTE4ZmY3YTY1NjAxZTAwNTA=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-06-02T17:06:23Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-06-02T17:06:23Z"}, "message": "Fix suggestion for removing &mut from &mut macro!().", "tree": {"sha": "d70152d78c30f0ad2d81ffecced2279dab21e449", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d70152d78c30f0ad2d81ffecced2279dab21e449"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b4524f8bf0650113f764b01918ff7a65601e0050", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b4524f8bf0650113f764b01918ff7a65601e0050", "html_url": "https://github.com/rust-lang/rust/commit/b4524f8bf0650113f764b01918ff7a65601e0050", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b4524f8bf0650113f764b01918ff7a65601e0050/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "716394d6581b60c75cfdd88b8e5b876f2db88b62", "url": "https://api.github.com/repos/rust-lang/rust/commits/716394d6581b60c75cfdd88b8e5b876f2db88b62", "html_url": "https://github.com/rust-lang/rust/commit/716394d6581b60c75cfdd88b8e5b876f2db88b62"}], "stats": {"total": 14, "additions": 11, "deletions": 3}, "files": [{"sha": "5b1f48bde0d7c8e4ca4a4e61670f3431286e0fbb", "filename": "compiler/rustc_typeck/src/check/demand.rs", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/b4524f8bf0650113f764b01918ff7a65601e0050/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fdemand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b4524f8bf0650113f764b01918ff7a65601e0050/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fdemand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fdemand.rs?ref=b4524f8bf0650113f764b01918ff7a65601e0050", "patch": "@@ -16,6 +16,7 @@ use rustc_span::Span;\n use super::method::probe;\n \n use std::fmt;\n+use std::iter;\n \n impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n     pub fn emit_coerce_suggestions(\n@@ -577,12 +578,19 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                 // We have `&T`, check if what was expected was `T`. If so,\n                 // we may want to suggest removing a `&`.\n                 if sm.is_imported(expr.span) {\n-                    if let Ok(src) = sm.span_to_snippet(sp) {\n-                        if let Some(src) = src.strip_prefix('&') {\n+                    // Go through the spans from which this span was expanded,\n+                    // and find the one that's pointing inside `sp`.\n+                    //\n+                    // E.g. for `&format!(\"\")`, where we want the span to the\n+                    // `format!()` invocation instead of its expansion.\n+                    if let Some(call_span) =\n+                        iter::successors(Some(expr.span), |s| s.parent()).find(|&s| sp.contains(s))\n+                    {\n+                        if let Ok(code) = sm.span_to_snippet(call_span) {\n                             return Some((\n                                 sp,\n                                 \"consider removing the borrow\",\n-                                src.to_string(),\n+                                code,\n                                 Applicability::MachineApplicable,\n                             ));\n                         }"}]}