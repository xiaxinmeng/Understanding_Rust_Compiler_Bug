{"sha": "5f592f4f58a6e1e1db0f920af34a2f569b65017c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVmNTkyZjRmNThhNmUxZTFkYjBmOTIwYWYzNGEyZjU2OWI2NTAxN2M=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-06-09T13:17:38Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-06-09T13:17:38Z"}, "message": "Merge #9191\n\n9191: fix: Don't descend MacroCall TokenTree delimiters r=jonas-schievink a=Veykril\n\nFixes #9190\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>", "tree": {"sha": "00417f2fa52662fd1525b695d2d07642f9c6ba7d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/00417f2fa52662fd1525b695d2d07642f9c6ba7d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5f592f4f58a6e1e1db0f920af34a2f569b65017c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgwL9yCRBK7hj4Ov3rIwAAA3UIAGvnVDCEWHYIWgs+09XQ+5Jt\nrFZW4Cda8JB0OQmiKHH5Br3+ntVhurla4MVlQFReWePHuQe/o9m9CRBCmeQxjAAq\nId6RYnr3kCgvbJUrtWQ1wH0Q+ga1D+KEd2Jrt6MOWukqjl6VpDbTjwhfp7/zl3qy\nYIgtmwKY9cCMIfuhvtMHVzGIWjYrwDXlmf3pwb8/pBPPbwGvgpZnEt0fI4baae/R\nL1FiF9waeo7dsy6bI35YOoWMbZKTLle+Wtra4EhbfFbEN9Y3pPjpTJRk1hOJpy2b\nh9Lt1z195JLKGrvT/n2JSC4Zcx8V2k3+F9OvZMPQ6qm/C9HrjevvNz7rWkevaj0=\n=4JmZ\n-----END PGP SIGNATURE-----\n", "payload": "tree 00417f2fa52662fd1525b695d2d07642f9c6ba7d\nparent cc7cfc5d3d7777524a9e8a94da3f5f2dd455fc0a\nparent 3c40b15d625df192eb17c34f15f7dbc23f5284b9\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1623244658 +0000\ncommitter GitHub <noreply@github.com> 1623244658 +0000\n\nMerge #9191\n\n9191: fix: Don't descend MacroCall TokenTree delimiters r=jonas-schievink a=Veykril\n\nFixes #9190\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5f592f4f58a6e1e1db0f920af34a2f569b65017c", "html_url": "https://github.com/rust-lang/rust/commit/5f592f4f58a6e1e1db0f920af34a2f569b65017c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5f592f4f58a6e1e1db0f920af34a2f569b65017c/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cc7cfc5d3d7777524a9e8a94da3f5f2dd455fc0a", "url": "https://api.github.com/repos/rust-lang/rust/commits/cc7cfc5d3d7777524a9e8a94da3f5f2dd455fc0a", "html_url": "https://github.com/rust-lang/rust/commit/cc7cfc5d3d7777524a9e8a94da3f5f2dd455fc0a"}, {"sha": "3c40b15d625df192eb17c34f15f7dbc23f5284b9", "url": "https://api.github.com/repos/rust-lang/rust/commits/3c40b15d625df192eb17c34f15f7dbc23f5284b9", "html_url": "https://github.com/rust-lang/rust/commit/3c40b15d625df192eb17c34f15f7dbc23f5284b9"}], "stats": {"total": 22, "additions": 20, "deletions": 2}, "files": [{"sha": "d522d5245a9509325c1eb0915431429213ccc7d7", "filename": "crates/hir/src/semantics.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/5f592f4f58a6e1e1db0f920af34a2f569b65017c/crates%2Fhir%2Fsrc%2Fsemantics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f592f4f58a6e1e1db0f920af34a2f569b65017c/crates%2Fhir%2Fsrc%2Fsemantics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Fsemantics.rs?ref=5f592f4f58a6e1e1db0f920af34a2f569b65017c", "patch": "@@ -17,7 +17,7 @@ use rustc_hash::{FxHashMap, FxHashSet};\n use syntax::{\n     algo::find_node_at_offset,\n     ast::{self, GenericParamsOwner, LoopBodyOwner},\n-    match_ast, AstNode, SyntaxNode, SyntaxNodePtr, SyntaxToken, TextSize,\n+    match_ast, AstNode, SyntaxNode, SyntaxNodePtr, SyntaxToken, TextRange, TextSize,\n };\n \n use crate::{\n@@ -395,7 +395,15 @@ impl<'db> SemanticsImpl<'db> {\n                     match node {\n                         ast::MacroCall(macro_call) => {\n                             let tt = macro_call.token_tree()?;\n-                            if !tt.syntax().text_range().contains_range(token.value.text_range()) {\n+                            let l_delim = match tt.left_delimiter_token() {\n+                                Some(it) => it.text_range().end(),\n+                                None => tt.syntax().text_range().start()\n+                            };\n+                            let r_delim = match tt.right_delimiter_token() {\n+                                Some(it) => it.text_range().start(),\n+                                None => tt.syntax().text_range().end()\n+                            };\n+                            if !TextRange::new(l_delim, r_delim).contains_range(token.value.text_range()) {\n                                 return None;\n                             }\n                             let file_id = sa.expand(self.db, token.with_value(&macro_call))?;"}, {"sha": "a7b5c3b895459d2534b7e52fc7e7ccdd264081d9", "filename": "crates/ide/src/syntax_highlighting/test_data/highlighting.html", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/5f592f4f58a6e1e1db0f920af34a2f569b65017c/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlighting.html", "raw_url": "https://github.com/rust-lang/rust/raw/5f592f4f58a6e1e1db0f920af34a2f569b65017c/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlighting.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlighting.html?ref=5f592f4f58a6e1e1db0f920af34a2f569b65017c", "patch": "@@ -148,6 +148,10 @@\n     <span class=\"brace\">}</span>\n <span class=\"brace\">}</span>\n \n+<span class=\"keyword\">macro_rules</span><span class=\"punctuation\">!</span> <span class=\"macro declaration\">dont_color_me_braces</span> <span class=\"brace\">{</span>\n+    <span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span> <span class=\"operator\">=</span><span class=\"angle\">&gt;</span> <span class=\"brace\">{</span><span class=\"numeric_literal\">0</span><span class=\"brace\">}</span>\n+<span class=\"brace\">}</span>\n+\n <span class=\"keyword\">macro_rules</span><span class=\"punctuation\">!</span> <span class=\"macro declaration\">noop</span> <span class=\"brace\">{</span>\n     <span class=\"parenthesis\">(</span><span class=\"punctuation\">$</span>expr<span class=\"colon\">:</span>expr<span class=\"parenthesis\">)</span> <span class=\"operator\">=</span><span class=\"angle\">&gt;</span> <span class=\"brace\">{</span>\n         <span class=\"punctuation\">$</span>expr\n@@ -171,6 +175,7 @@\n <span class=\"comment\">// comment</span>\n <span class=\"keyword\">fn</span> <span class=\"function declaration\">main</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span>\n     <span class=\"macro\">println!</span><span class=\"parenthesis\">(</span><span class=\"string_literal\">\"Hello, {}!\"</span><span class=\"comma\">,</span> <span class=\"numeric_literal\">92</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n+    <span class=\"macro\">dont_color_me_braces!</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n \n     <span class=\"keyword\">let</span> <span class=\"keyword\">mut</span> <span class=\"variable declaration mutable\">vec</span> <span class=\"operator\">=</span> <span class=\"unresolved_reference\">Vec</span><span class=\"operator\">::</span><span class=\"unresolved_reference\">new</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n     <span class=\"keyword control\">if</span> <span class=\"bool_literal\">true</span> <span class=\"brace\">{</span>"}, {"sha": "6ad2a362a64914e1416058561dc571fe61932178", "filename": "crates/ide/src/syntax_highlighting/tests.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/5f592f4f58a6e1e1db0f920af34a2f569b65017c/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f592f4f58a6e1e1db0f920af34a2f569b65017c/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs?ref=5f592f4f58a6e1e1db0f920af34a2f569b65017c", "patch": "@@ -122,6 +122,10 @@ def_fn! {\n     }\n }\n \n+macro_rules! dont_color_me_braces {\n+    () => {0}\n+}\n+\n macro_rules! noop {\n     ($expr:expr) => {\n         $expr\n@@ -145,6 +149,7 @@ macro without_args {\n // comment\n fn main() {\n     println!(\"Hello, {}!\", 92);\n+    dont_color_me_braces!();\n \n     let mut vec = Vec::new();\n     if true {"}]}