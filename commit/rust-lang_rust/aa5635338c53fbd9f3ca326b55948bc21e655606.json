{"sha": "aa5635338c53fbd9f3ca326b55948bc21e655606", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFhNTYzNTMzOGM1M2ZiZDlmM2NhMzI2YjU1OTQ4YmMyMWU2NTU2MDY=", "commit": {"author": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2018-05-18T22:40:44Z"}, "committer": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2018-05-18T22:40:44Z"}, "message": "Filter global bounds from ParamEnv again.", "tree": {"sha": "d43478a933acbbcd60a16450f711c8776970fab2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d43478a933acbbcd60a16450f711c8776970fab2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aa5635338c53fbd9f3ca326b55948bc21e655606", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aa5635338c53fbd9f3ca326b55948bc21e655606", "html_url": "https://github.com/rust-lang/rust/commit/aa5635338c53fbd9f3ca326b55948bc21e655606", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aa5635338c53fbd9f3ca326b55948bc21e655606/comments", "author": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ba64edb3edb9d54f24507255d6aaca5a567e2f40", "url": "https://api.github.com/repos/rust-lang/rust/commits/ba64edb3edb9d54f24507255d6aaca5a567e2f40", "html_url": "https://github.com/rust-lang/rust/commit/ba64edb3edb9d54f24507255d6aaca5a567e2f40"}], "stats": {"total": 107, "additions": 102, "deletions": 5}, "files": [{"sha": "43eca136861c0738e28962e9b1c62597e9af783b", "filename": "src/librustc/traits/mod.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/aa5635338c53fbd9f3ca326b55948bc21e655606/src%2Flibrustc%2Ftraits%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa5635338c53fbd9f3ca326b55948bc21e655606/src%2Flibrustc%2Ftraits%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fmod.rs?ref=aa5635338c53fbd9f3ca326b55948bc21e655606", "patch": "@@ -644,8 +644,13 @@ pub fn normalize_param_env_or_error<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n \n     let predicates: Vec<_> =\n         util::elaborate_predicates(tcx, unnormalized_env.caller_bounds.to_vec())\n+        .filter(|p| !p.is_global() || p.has_late_bound_regions()) // (*)\n         .collect();\n \n+    // (*) FIXME(#50825) This shouldn't be needed.\n+    // Removing the bounds here stopped them from being prefered in selection.\n+    // See the issue-50825 ui tests for examples\n+\n     debug!(\"normalize_param_env_or_error: elaborated-predicates={:?}\",\n            predicates);\n "}, {"sha": "e72b8782e50d59fcb3e441a8e71f43d66be723a1", "filename": "src/test/ui/feature-gate-trivial_bounds.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aa5635338c53fbd9f3ca326b55948bc21e655606/src%2Ftest%2Fui%2Ffeature-gate-trivial_bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa5635338c53fbd9f3ca326b55948bc21e655606/src%2Ftest%2Fui%2Ffeature-gate-trivial_bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gate-trivial_bounds.rs?ref=aa5635338c53fbd9f3ca326b55948bc21e655606", "patch": "@@ -28,7 +28,7 @@ union U where i32: Foo { f: i32 } //~ ERROR\n type Y where i32: Foo = (); // OK - bound is ignored\n \n impl Foo for () where i32: Foo { //~ ERROR\n-    fn test(&self) {\n+    fn test(&self) { //~ ERROR\n         3i32.test();\n         Foo::test(&4i32);\n         generic_function(5i32);\n@@ -60,6 +60,7 @@ struct Dst<X: ?Sized> {\n }\n \n struct TwoStrs(str, str) where str: Sized; //~ ERROR\n+//~^ ERROR\n \n fn unsized_local() where Dst<A>: Sized { //~ ERROR\n     let x: Dst<A> = *(Box::new(Dst { x: 1 }) as Box<Dst<A>>);"}, {"sha": "32b263119e5e266e0d2ee1607e71476bb9bc6045", "filename": "src/test/ui/feature-gate-trivial_bounds.stderr", "status": "modified", "additions": 29, "deletions": 4, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/aa5635338c53fbd9f3ca326b55948bc21e655606/src%2Ftest%2Fui%2Ffeature-gate-trivial_bounds.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aa5635338c53fbd9f3ca326b55948bc21e655606/src%2Ftest%2Fui%2Ffeature-gate-trivial_bounds.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gate-trivial_bounds.stderr?ref=aa5635338c53fbd9f3ca326b55948bc21e655606", "patch": "@@ -38,7 +38,7 @@ error[E0277]: the trait bound `i32: Foo` is not satisfied\n   --> $DIR/feature-gate-trivial_bounds.rs:30:1\n    |\n LL | / impl Foo for () where i32: Foo { //~ ERROR\n-LL | |     fn test(&self) {\n+LL | |     fn test(&self) { //~ ERROR\n LL | |         3i32.test();\n LL | |         Foo::test(&4i32);\n LL | |         generic_function(5i32);\n@@ -97,8 +97,17 @@ LL | struct TwoStrs(str, str) where str: Sized; //~ ERROR\n    = help: see issue #48214\n    = help: add #![feature(trivial_bounds)] to the crate attributes to enable\n \n+error[E0277]: the trait bound `str: std::marker::Sized` is not satisfied\n+  --> $DIR/feature-gate-trivial_bounds.rs:62:16\n+   |\n+LL | struct TwoStrs(str, str) where str: Sized; //~ ERROR\n+   |                ^^^ `str` does not have a constant size known at compile-time\n+   |\n+   = help: the trait `std::marker::Sized` is not implemented for `str`\n+   = note: only the last field of a struct may have a dynamically sized type\n+\n error[E0277]: the trait bound `A + 'static: std::marker::Sized` is not satisfied in `Dst<A + 'static>`\n-  --> $DIR/feature-gate-trivial_bounds.rs:64:1\n+  --> $DIR/feature-gate-trivial_bounds.rs:65:1\n    |\n LL | / fn unsized_local() where Dst<A>: Sized { //~ ERROR\n LL | |     let x: Dst<A> = *(Box::new(Dst { x: 1 }) as Box<Dst<A>>);\n@@ -111,7 +120,7 @@ LL | | }\n    = help: add #![feature(trivial_bounds)] to the crate attributes to enable\n \n error[E0277]: the trait bound `str: std::marker::Sized` is not satisfied\n-  --> $DIR/feature-gate-trivial_bounds.rs:68:1\n+  --> $DIR/feature-gate-trivial_bounds.rs:69:1\n    |\n LL | / fn return_str() -> str where str: Sized { //~ ERROR\n LL | |     *\"Sized\".to_string().into_boxed_str()\n@@ -122,6 +131,22 @@ LL | | }\n    = help: see issue #48214\n    = help: add #![feature(trivial_bounds)] to the crate attributes to enable\n \n-error: aborting due to 11 previous errors\n+error[E0277]: the trait bound `i32: Foo` is not satisfied\n+  --> $DIR/feature-gate-trivial_bounds.rs:31:5\n+   |\n+LL | /     fn test(&self) { //~ ERROR\n+LL | |         3i32.test();\n+LL | |         Foo::test(&4i32);\n+LL | |         generic_function(5i32);\n+LL | |     }\n+   | |_____^ the trait `Foo` is not implemented for `i32`\n+   |\n+note: required by `Foo`\n+  --> $DIR/feature-gate-trivial_bounds.rs:14:1\n+   |\n+LL | pub trait Foo {\n+   | ^^^^^^^^^^^^^\n+\n+error: aborting due to 13 previous errors\n \n For more information about this error, try `rustc --explain E0277`."}, {"sha": "d179530c01485cefca81e6594d455bb1c622d127", "filename": "src/test/ui/issue-50825-1.rs", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/aa5635338c53fbd9f3ca326b55948bc21e655606/src%2Ftest%2Fui%2Fissue-50825-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa5635338c53fbd9f3ca326b55948bc21e655606/src%2Ftest%2Fui%2Fissue-50825-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-50825-1.rs?ref=aa5635338c53fbd9f3ca326b55948bc21e655606", "patch": "@@ -0,0 +1,32 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// run-pass\n+// regression test for issue #50825\n+// Make sure that the `impl` bound (): X<T = ()> is prefered over\n+// the (): X bound in the where clause.\n+\n+trait X {\n+    type T;\n+}\n+\n+trait Y<U>: X {\n+    fn foo(x: &Self::T);\n+}\n+\n+impl X for () {\n+    type T = ();\n+}\n+\n+impl<T> Y<Vec<T>> for () where (): Y<T> {\n+    fn foo(_x: &()) {}\n+}\n+\n+fn main () {}"}, {"sha": "bc15760e77c5702ad7e9f452a3f08c54c4ce9ad1", "filename": "src/test/ui/issue-50825.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/aa5635338c53fbd9f3ca326b55948bc21e655606/src%2Ftest%2Fui%2Fissue-50825.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa5635338c53fbd9f3ca326b55948bc21e655606/src%2Ftest%2Fui%2Fissue-50825.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-50825.rs?ref=aa5635338c53fbd9f3ca326b55948bc21e655606", "patch": "@@ -0,0 +1,25 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// run-pass\n+// regression test for issue #50825\n+// Make sure that the built-in bound {integer}: Sized is prefered over\n+// the u64: Sized bound in the where clause.\n+\n+fn foo(y: &[()])\n+where\n+    u64: Sized,\n+{\n+    y[0]\n+}\n+\n+fn main () {\n+    foo(&[()]);\n+}"}, {"sha": "4cacbc2c91445d76d06ffb2df6e69035d0c70830", "filename": "src/test/ui/trivial-bounds-inconsistent-associated-functions.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/aa5635338c53fbd9f3ca326b55948bc21e655606/src%2Ftest%2Fui%2Ftrivial-bounds-inconsistent-associated-functions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa5635338c53fbd9f3ca326b55948bc21e655606/src%2Ftest%2Fui%2Ftrivial-bounds-inconsistent-associated-functions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftrivial-bounds-inconsistent-associated-functions.rs?ref=aa5635338c53fbd9f3ca326b55948bc21e655606", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// ignore-test FIXME(#50825)\n // run-pass\n // Inconsistent bounds with trait implementations\n "}, {"sha": "a743b4296980d44fc6c21d307923f9c741659f7c", "filename": "src/test/ui/trivial-bounds-inconsistent-copy-reborrow.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/aa5635338c53fbd9f3ca326b55948bc21e655606/src%2Ftest%2Fui%2Ftrivial-bounds-inconsistent-copy-reborrow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa5635338c53fbd9f3ca326b55948bc21e655606/src%2Ftest%2Fui%2Ftrivial-bounds-inconsistent-copy-reborrow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftrivial-bounds-inconsistent-copy-reborrow.rs?ref=aa5635338c53fbd9f3ca326b55948bc21e655606", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// ignore-test FIXME(#50825)\n // Check that reborrows are still illegal with Copy mutable references\n #![feature(trivial_bounds)]\n #![allow(unused)]"}, {"sha": "f73c96a002d43cd7f1292cf72b1e10c013ecd96d", "filename": "src/test/ui/trivial-bounds-inconsistent-copy.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/aa5635338c53fbd9f3ca326b55948bc21e655606/src%2Ftest%2Fui%2Ftrivial-bounds-inconsistent-copy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa5635338c53fbd9f3ca326b55948bc21e655606/src%2Ftest%2Fui%2Ftrivial-bounds-inconsistent-copy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftrivial-bounds-inconsistent-copy.rs?ref=aa5635338c53fbd9f3ca326b55948bc21e655606", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// ignore-test FIXME(#50825)\n // run-pass\n // Check tautalogically false `Copy` bounds\n #![feature(trivial_bounds)]"}, {"sha": "11f0080fbabf127c9aaf9b34bcad29de3c89a1b5", "filename": "src/test/ui/trivial-bounds-inconsistent-sized.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/aa5635338c53fbd9f3ca326b55948bc21e655606/src%2Ftest%2Fui%2Ftrivial-bounds-inconsistent-sized.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa5635338c53fbd9f3ca326b55948bc21e655606/src%2Ftest%2Fui%2Ftrivial-bounds-inconsistent-sized.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftrivial-bounds-inconsistent-sized.rs?ref=aa5635338c53fbd9f3ca326b55948bc21e655606", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// ignore-test FIXME(#50825)\n // run-pass\n // Check tautalogically false `Sized` bounds\n #![feature(trivial_bounds)]"}, {"sha": "a78ecdc8ff3d488cc8270a64bcc31b0624f9f43d", "filename": "src/test/ui/trivial-bounds-inconsistent-well-formed.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/aa5635338c53fbd9f3ca326b55948bc21e655606/src%2Ftest%2Fui%2Ftrivial-bounds-inconsistent-well-formed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa5635338c53fbd9f3ca326b55948bc21e655606/src%2Ftest%2Fui%2Ftrivial-bounds-inconsistent-well-formed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftrivial-bounds-inconsistent-well-formed.rs?ref=aa5635338c53fbd9f3ca326b55948bc21e655606", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// ignore-test FIXME(#50825)\n // run-pass\n // Test that inconsistent bounds are used in well-formedness checks\n #![feature(trivial_bounds)]"}, {"sha": "c8e8c320bc5ff4dcf3149c094eb953adf6ffea5c", "filename": "src/test/ui/trivial-bounds-inconsistent.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/aa5635338c53fbd9f3ca326b55948bc21e655606/src%2Ftest%2Fui%2Ftrivial-bounds-inconsistent.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa5635338c53fbd9f3ca326b55948bc21e655606/src%2Ftest%2Fui%2Ftrivial-bounds-inconsistent.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftrivial-bounds-inconsistent.rs?ref=aa5635338c53fbd9f3ca326b55948bc21e655606", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// ignore-test FIXME(#50825)\n // run-pass\n \n // Check that tautalogically false bounds are accepted, and are used"}, {"sha": "6f000006ca9b063168c97d8b5a41f1fbe1916ea6", "filename": "src/test/ui/trivial-bounds-leak-copy.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/aa5635338c53fbd9f3ca326b55948bc21e655606/src%2Ftest%2Fui%2Ftrivial-bounds-leak-copy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa5635338c53fbd9f3ca326b55948bc21e655606/src%2Ftest%2Fui%2Ftrivial-bounds-leak-copy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftrivial-bounds-leak-copy.rs?ref=aa5635338c53fbd9f3ca326b55948bc21e655606", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// ignore-test FIXME(#50825)\n // Check that false Copy bounds don't leak\n #![feature(trivial_bounds)]\n "}, {"sha": "15dee64f70e75ad7d6c232c49e740137f72dbad3", "filename": "src/test/ui/trivial-bounds-leak.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/aa5635338c53fbd9f3ca326b55948bc21e655606/src%2Ftest%2Fui%2Ftrivial-bounds-leak.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa5635338c53fbd9f3ca326b55948bc21e655606/src%2Ftest%2Fui%2Ftrivial-bounds-leak.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftrivial-bounds-leak.rs?ref=aa5635338c53fbd9f3ca326b55948bc21e655606", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// ignore-test FIXME(#50825)\n // Check that false bounds don't leak\n #![feature(trivial_bounds)]\n "}, {"sha": "e37600a653a90a5c8c9ec9c5a4f781ec0fbd1924", "filename": "src/test/ui/trivial-bounds-lint.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/aa5635338c53fbd9f3ca326b55948bc21e655606/src%2Ftest%2Fui%2Ftrivial-bounds-lint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa5635338c53fbd9f3ca326b55948bc21e655606/src%2Ftest%2Fui%2Ftrivial-bounds-lint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftrivial-bounds-lint.rs?ref=aa5635338c53fbd9f3ca326b55948bc21e655606", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// ignore-test FIXME(#50825)\n #![feature(trivial_bounds)]\n #![allow(unused)]\n #![deny(trivial_bounds)]"}]}