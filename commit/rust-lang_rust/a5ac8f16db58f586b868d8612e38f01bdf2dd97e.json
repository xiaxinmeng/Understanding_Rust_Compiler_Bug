{"sha": "a5ac8f16db58f586b868d8612e38f01bdf2dd97e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE1YWM4ZjE2ZGI1OGY1ODZiODY4ZDg2MTJlMzhmMDFiZGYyZGQ5N2U=", "commit": {"author": {"name": "Josh Matthews", "email": "josh@joshmatthews.net", "date": "2011-07-13T18:00:11Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-07-16T22:56:31Z"}, "message": "Use the actual start position of the file in the codemap rather than the position of the first newline.", "tree": {"sha": "ed1a5927eb48998cd90ce254a3c3b288a642cda8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ed1a5927eb48998cd90ce254a3c3b288a642cda8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a5ac8f16db58f586b868d8612e38f01bdf2dd97e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a5ac8f16db58f586b868d8612e38f01bdf2dd97e", "html_url": "https://github.com/rust-lang/rust/commit/a5ac8f16db58f586b868d8612e38f01bdf2dd97e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a5ac8f16db58f586b868d8612e38f01bdf2dd97e/comments", "author": {"login": "jdm", "id": 27658, "node_id": "MDQ6VXNlcjI3NjU4", "avatar_url": "https://avatars.githubusercontent.com/u/27658?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdm", "html_url": "https://github.com/jdm", "followers_url": "https://api.github.com/users/jdm/followers", "following_url": "https://api.github.com/users/jdm/following{/other_user}", "gists_url": "https://api.github.com/users/jdm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdm/subscriptions", "organizations_url": "https://api.github.com/users/jdm/orgs", "repos_url": "https://api.github.com/users/jdm/repos", "events_url": "https://api.github.com/users/jdm/events{/privacy}", "received_events_url": "https://api.github.com/users/jdm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "63598248e4a7db9b62ba4d36d18b2769044e1fa1", "url": "https://api.github.com/repos/rust-lang/rust/commits/63598248e4a7db9b62ba4d36d18b2769044e1fa1", "html_url": "https://github.com/rust-lang/rust/commit/63598248e4a7db9b62ba4d36d18b2769044e1fa1"}], "stats": {"total": 6, "additions": 2, "deletions": 4}, "files": [{"sha": "1a627619bd367879f2d7491ddee91f4600f820b9", "filename": "src/comp/syntax/codemap.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a5ac8f16db58f586b868d8612e38f01bdf2dd97e/src%2Fcomp%2Fsyntax%2Fcodemap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a5ac8f16db58f586b868d8612e38f01bdf2dd97e/src%2Fcomp%2Fsyntax%2Fcodemap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fcodemap.rs?ref=a5ac8f16db58f586b868d8612e38f01bdf2dd97e", "patch": "@@ -63,9 +63,7 @@ fn emit_diagnostic(&option::t[span] sp, &str msg, &str kind, u8 color,\n     alt (sp) {\n         case (some(?ssp)) {\n             ss = span_to_str(ssp, cm);\n-\n             maybe_lines = some(span_to_lines(ssp, cm));\n-\n         }\n         case (none) { }\n     }\n@@ -170,12 +168,12 @@ fn span_to_lines(span sp, codemap::codemap cm) -> @file_lines {\n }\n \n fn get_line(filemap fm, int line, &str file) -> str {\n-    let uint begin = fm.lines.(line) - fm.lines.(0);\n+    let uint begin = fm.lines.(line) - fm.start_pos;\n     let uint end;\n     if ((line as uint) + 1u >= ivec::len(fm.lines)) {\n         end = str::byte_len(file);\n     } else {\n-        end = fm.lines.(line + 1) - fm.lines.(0);\n+        end = fm.lines.(line + 1) - fm.start_pos;\n     }\n     ret str::slice(file, begin, end);\n }"}]}