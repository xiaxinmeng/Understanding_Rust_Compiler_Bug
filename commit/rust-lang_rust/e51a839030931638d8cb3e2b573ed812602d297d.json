{"sha": "e51a839030931638d8cb3e2b573ed812602d297d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU1MWE4MzkwMzA5MzE2MzhkOGNiM2UyYjU3M2VkODEyNjAyZDI5N2Q=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-08-11T07:23:54Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-08-11T07:23:54Z"}, "message": "Rollup merge of #75352 - estebank:incorrect-tuple-struct-pat, r=oli-obk\n\nTweak conditions for E0026 and E0769\n\nWhen we have a tuple struct used with struct we don't want to suggest using the (valid) struct syntax with numeric field names. Instead we want to suggest the expected syntax.\n\nGiven\n\n```rust\nfn main() {\n    match MyOption::MySome(42) {\n        MyOption::MySome { x: 42 } => (),\n        _ => (),\n    }\n}\n```\n\nWe now emit E0769 \"tuple variant `MyOption::MySome` written as struct variant\" instead of E0026 \"variant `MyOption::MySome` does not have a field named `x`\".", "tree": {"sha": "6cc980d390dcc496e2331c8d287c7a58063b41fc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6cc980d390dcc496e2331c8d287c7a58063b41fc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e51a839030931638d8cb3e2b573ed812602d297d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfMkeKCRBK7hj4Ov3rIwAAdHIIAJzkCl74pWZFd8m1CgaIEcFB\nqzaMLEk0S2Xu4WvrmVOEmlNC6V5162oweeJ+VjCeXnFSsroPVASPP+OYTJkiXwxW\nL64C/HAPCjwrAu42uwyexcRLsZY47FjRewz+Vgbw4UdMG0MK/GGxq3uJ5FkiMnwi\n0Xc8To5cff8axJFHD2QokL36BCYxePPXXkjd6KdER+YAtEth91AWGmnIYgvjx1V2\nWg6BAx8qHpK5HlguyXErV9cA44u6oa6XTc3xbdG+SySc4yBxTcyA+IHQ/3ozg5cM\niCxwRFO8Vsb6QuIauOaxvnrEIHUC4TD5rQZvonROrgSvGsqlAFVwpPPKdK+rlMU=\n=ylr0\n-----END PGP SIGNATURE-----\n", "payload": "tree 6cc980d390dcc496e2331c8d287c7a58063b41fc\nparent a75bdfa230c3ff410693580ddc0ce1a6f2075fe7\nparent 9149ec74db635751e204b9793e2ad3ffcad6a849\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1597130634 +0900\ncommitter GitHub <noreply@github.com> 1597130634 +0900\n\nRollup merge of #75352 - estebank:incorrect-tuple-struct-pat, r=oli-obk\n\nTweak conditions for E0026 and E0769\n\nWhen we have a tuple struct used with struct we don't want to suggest using the (valid) struct syntax with numeric field names. Instead we want to suggest the expected syntax.\n\nGiven\n\n```rust\nfn main() {\n    match MyOption::MySome(42) {\n        MyOption::MySome { x: 42 } => (),\n        _ => (),\n    }\n}\n```\n\nWe now emit E0769 \"tuple variant `MyOption::MySome` written as struct variant\" instead of E0026 \"variant `MyOption::MySome` does not have a field named `x`\".\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e51a839030931638d8cb3e2b573ed812602d297d", "html_url": "https://github.com/rust-lang/rust/commit/e51a839030931638d8cb3e2b573ed812602d297d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e51a839030931638d8cb3e2b573ed812602d297d/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a75bdfa230c3ff410693580ddc0ce1a6f2075fe7", "url": "https://api.github.com/repos/rust-lang/rust/commits/a75bdfa230c3ff410693580ddc0ce1a6f2075fe7", "html_url": "https://github.com/rust-lang/rust/commit/a75bdfa230c3ff410693580ddc0ce1a6f2075fe7"}, {"sha": "9149ec74db635751e204b9793e2ad3ffcad6a849", "url": "https://api.github.com/repos/rust-lang/rust/commits/9149ec74db635751e204b9793e2ad3ffcad6a849", "html_url": "https://github.com/rust-lang/rust/commit/9149ec74db635751e204b9793e2ad3ffcad6a849"}], "stats": {"total": 24, "additions": 14, "deletions": 10}, "files": [{"sha": "1c78bef98527a6b988e4fe3363834d51747522ae", "filename": "src/librustc_typeck/check/pat.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/e51a839030931638d8cb3e2b573ed812602d297d/src%2Flibrustc_typeck%2Fcheck%2Fpat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e51a839030931638d8cb3e2b573ed812602d297d/src%2Flibrustc_typeck%2Fcheck%2Fpat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fpat.rs?ref=e51a839030931638d8cb3e2b573ed812602d297d", "patch": "@@ -1229,8 +1229,15 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                         Applicability::MaybeIncorrect,\n                     );\n \n-                    // we don't want to throw `E0027` in case we have thrown `E0026` for them\n-                    unmentioned_fields.retain(|&x| x.name != suggested_name);\n+                    // When we have a tuple struct used with struct we don't want to suggest using\n+                    // the (valid) struct syntax with numeric field names. Instead we want to\n+                    // suggest the expected syntax. We infer that this is the case by parsing the\n+                    // `Ident` into an unsized integer. The suggestion will be emitted elsewhere in\n+                    // `smart_resolve_context_dependent_help`.\n+                    if suggested_name.to_ident_string().parse::<usize>().is_err() {\n+                        // We don't want to throw `E0027` in case we have thrown `E0026` for them.\n+                        unmentioned_fields.retain(|&x| x.name != suggested_name);\n+                    }\n                 }\n             }\n         }"}, {"sha": "5254f45d7c2de7cea3a35418c00b24c10b900e8c", "filename": "src/test/ui/issues/issue-17800.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e51a839030931638d8cb3e2b573ed812602d297d/src%2Ftest%2Fui%2Fissues%2Fissue-17800.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e51a839030931638d8cb3e2b573ed812602d297d/src%2Ftest%2Fui%2Fissues%2Fissue-17800.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-17800.rs?ref=e51a839030931638d8cb3e2b573ed812602d297d", "patch": "@@ -6,7 +6,7 @@ enum MyOption<T> {\n fn main() {\n     match MyOption::MySome(42) {\n         MyOption::MySome { x: 42 } => (),\n-        //~^ ERROR variant `MyOption::MySome` does not have a field named `x`\n+        //~^ ERROR tuple variant `MyOption::MySome` written as struct variant\n         _ => (),\n     }\n }"}, {"sha": "fc034a0cbf3b8120fd2f081a395fa3b3fcda5d66", "filename": "src/test/ui/issues/issue-17800.stderr", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/e51a839030931638d8cb3e2b573ed812602d297d/src%2Ftest%2Fui%2Fissues%2Fissue-17800.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e51a839030931638d8cb3e2b573ed812602d297d/src%2Ftest%2Fui%2Fissues%2Fissue-17800.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-17800.stderr?ref=e51a839030931638d8cb3e2b573ed812602d297d", "patch": "@@ -1,12 +1,9 @@\n-error[E0026]: variant `MyOption::MySome` does not have a field named `x`\n-  --> $DIR/issue-17800.rs:8:28\n+error[E0769]: tuple variant `MyOption::MySome` written as struct variant\n+  --> $DIR/issue-17800.rs:8:9\n    |\n LL |         MyOption::MySome { x: 42 } => (),\n-   |                            ^\n-   |                            |\n-   |                            variant `MyOption::MySome` does not have this field\n-   |                            help: a field with a similar name exists: `0`\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the tuple variant pattern syntax instead: `MyOption::MySome(42)`\n \n error: aborting due to previous error\n \n-For more information about this error, try `rustc --explain E0026`.\n+For more information about this error, try `rustc --explain E0769`."}]}