{"sha": "9fde2a54f47a84f34add6994c6c90100d83247fb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlmZGUyYTU0ZjQ3YTg0ZjM0YWRkNjk5NGM2YzkwMTAwZDgzMjQ3ZmI=", "commit": {"author": {"name": "Ted Horst", "email": "ted.horst@earthlink.net", "date": "2012-02-10T16:03:34Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-02-11T03:42:32Z"}, "message": "use task::spawn_sched to read stdout and stderr at the same time\n\nHopefully this addresses the root cause of the hangs when running make check on windows.", "tree": {"sha": "9ec6c1ce7c75d4790c445ddf9148d4cf5ddfc2c5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9ec6c1ce7c75d4790c445ddf9148d4cf5ddfc2c5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9fde2a54f47a84f34add6994c6c90100d83247fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9fde2a54f47a84f34add6994c6c90100d83247fb", "html_url": "https://github.com/rust-lang/rust/commit/9fde2a54f47a84f34add6994c6c90100d83247fb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9fde2a54f47a84f34add6994c6c90100d83247fb/comments", "author": {"login": "tedhorst", "id": 113629, "node_id": "MDQ6VXNlcjExMzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/113629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tedhorst", "html_url": "https://github.com/tedhorst", "followers_url": "https://api.github.com/users/tedhorst/followers", "following_url": "https://api.github.com/users/tedhorst/following{/other_user}", "gists_url": "https://api.github.com/users/tedhorst/gists{/gist_id}", "starred_url": "https://api.github.com/users/tedhorst/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tedhorst/subscriptions", "organizations_url": "https://api.github.com/users/tedhorst/orgs", "repos_url": "https://api.github.com/users/tedhorst/repos", "events_url": "https://api.github.com/users/tedhorst/events{/privacy}", "received_events_url": "https://api.github.com/users/tedhorst/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a7a1152db5b7f8cde82eaf3d994f93f024f4e803", "url": "https://api.github.com/repos/rust-lang/rust/commits/a7a1152db5b7f8cde82eaf3d994f93f024f4e803", "html_url": "https://github.com/rust-lang/rust/commit/a7a1152db5b7f8cde82eaf3d994f93f024f4e803"}], "stats": {"total": 29, "additions": 26, "deletions": 3}, "files": [{"sha": "9304e359321d514aeae83f220f4bb23bd580a94a", "filename": "src/compiletest/procsrv.rs", "status": "modified", "additions": 26, "deletions": 3, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/9fde2a54f47a84f34add6994c6c90100d83247fb/src%2Fcompiletest%2Fprocsrv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fde2a54f47a84f34add6994c6c90100d83247fb/src%2Fcompiletest%2Fprocsrv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcompiletest%2Fprocsrv.rs?ref=9fde2a54f47a84f34add6994c6c90100d83247fb", "patch": "@@ -52,10 +52,33 @@ fn run(lib_path: str, prog: str, args: [str],\n \n \n     writeclose(pipe_in.out, input);\n-    let errput = readclose(pipe_err.in);\n-    let output = readclose(pipe_out.in);\n+    let p = comm::port();\n+    let ch = comm::chan(p);\n+    task::spawn_sched(1u) {||\n+        let errput = readclose(pipe_err.in);\n+        comm::send(ch, (2, errput));\n+    };\n+    task::spawn_sched(1u) {||\n+        let output = readclose(pipe_out.in);\n+        comm::send(ch, (1, output));\n+    };\n     let status = run::waitpid(pid);\n-    ret {status: status, out: output, err: errput};\n+    let errs = \"\";\n+    let outs = \"\";\n+    let count = 2;\n+    while count > 0 {\n+        let stream = comm::recv(p);\n+        alt stream {\n+            (1, s) {\n+                outs = s;\n+            }\n+            (2, s) {\n+                errs = s;\n+            }\n+        };\n+        count -= 1;\n+    };\n+    ret {status: status, out: outs, err: errs};\n }\n \n fn writeclose(fd: fd_t, s: option<str>) {"}]}