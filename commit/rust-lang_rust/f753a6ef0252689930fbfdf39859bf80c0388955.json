{"sha": "f753a6ef0252689930fbfdf39859bf80c0388955", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY3NTNhNmVmMDI1MjY4OTkzMGZiZmRmMzk4NTliZjgwYzAzODg5NTU=", "commit": {"author": {"name": "est31", "email": "MTest31@outlook.com", "date": "2017-02-23T20:35:12Z"}, "committer": {"name": "est31", "email": "MTest31@outlook.com", "date": "2017-02-23T21:32:25Z"}, "message": "Feature gate", "tree": {"sha": "a63bd2d51e75698d2b0c4b913c17730492cf29b6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a63bd2d51e75698d2b0c4b913c17730492cf29b6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f753a6ef0252689930fbfdf39859bf80c0388955", "comment_count": 3, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f753a6ef0252689930fbfdf39859bf80c0388955", "html_url": "https://github.com/rust-lang/rust/commit/f753a6ef0252689930fbfdf39859bf80c0388955", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f753a6ef0252689930fbfdf39859bf80c0388955/comments", "author": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "committer": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1b9b32288369dbd13a9d721d6765ddc30d29e8c1", "url": "https://api.github.com/repos/rust-lang/rust/commits/1b9b32288369dbd13a9d721d6765ddc30d29e8c1", "html_url": "https://github.com/rust-lang/rust/commit/1b9b32288369dbd13a9d721d6765ddc30d29e8c1"}], "stats": {"total": 18, "additions": 17, "deletions": 1}, "files": [{"sha": "ab498b453dde10cd40df179d534d55d2051404a8", "filename": "src/librustc_typeck/check/coercion.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f753a6ef0252689930fbfdf39859bf80c0388955/src%2Flibrustc_typeck%2Fcheck%2Fcoercion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f753a6ef0252689930fbfdf39859bf80c0388955/src%2Flibrustc_typeck%2Fcheck%2Fcoercion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fcoercion.rs?ref=f753a6ef0252689930fbfdf39859bf80c0388955", "patch": "@@ -74,6 +74,7 @@ use rustc::ty::error::TypeError;\n use rustc::ty::relate::RelateResult;\n use syntax::ast::NodeId;\n use syntax::abi;\n+use syntax::feature_gate;\n use util::common::indent;\n \n use std::cell::RefCell;\n@@ -575,6 +576,14 @@ impl<'f, 'gcx, 'tcx> Coerce<'f, 'gcx, 'tcx> {\n         let node_id_a :NodeId = self.tcx.hir.as_local_node_id(def_id_a).unwrap();\n         match b.sty {\n             ty::TyFnPtr(_) if self.tcx.with_freevars(node_id_a, |v| v.is_empty()) => {\n+                if !self.tcx.sess.features.borrow().closure_to_fn_coercion {\n+                    feature_gate::emit_feature_err(&self.tcx.sess.parse_sess,\n+                                                   \"closure_to_fn_coercion\",\n+                                                   self.cause.span,\n+                                                   feature_gate::GateIssue::Language,\n+                                                   feature_gate::CLOSURE_TO_FN_COERCION);\n+                    return self.unify_and_identity(a, b);\n+                }\n                 // We coerce the closure, which has fn type\n                 //     `extern \"rust-call\" fn((arg0,arg1,...)) -> _`\n                 // to"}, {"sha": "2d3fd78867a2d110ccb4e2e57ad91106ac5d6558", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f753a6ef0252689930fbfdf39859bf80c0388955/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f753a6ef0252689930fbfdf39859bf80c0388955/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=f753a6ef0252689930fbfdf39859bf80c0388955", "patch": "@@ -323,6 +323,10 @@ declare_features! (\n     // `extern \"msp430-interrupt\" fn()`\n     (active, abi_msp430_interrupt, \"1.16.0\", Some(38487)),\n \n+    // Used to identify crates that contain sanitizer runtimes\n+    // rustc internal\n+    (active, closure_to_fn_coercion, \"1.17.0\", Some(39817)),\n+\n     // Used to identify crates that contain sanitizer runtimes\n     // rustc internal\n     (active, sanitizer_runtime, \"1.17.0\", None),\n@@ -977,6 +981,9 @@ pub const EXPLAIN_DERIVE_UNDERSCORE: &'static str =\n pub const EXPLAIN_PLACEMENT_IN: &'static str =\n     \"placement-in expression syntax is experimental and subject to change.\";\n \n+pub const CLOSURE_TO_FN_COERCION: &'static str =\n+    \"non-capturing closure to fn coercion is experimental\";\n+\n struct PostExpansionVisitor<'a> {\n     context: &'a Context<'a>,\n }"}, {"sha": "f3f0736041b545fe4530b5128af1403ff20aa166", "filename": "src/test/run-pass/closure-to-fn-coercion.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f753a6ef0252689930fbfdf39859bf80c0388955/src%2Ftest%2Frun-pass%2Fclosure-to-fn-coercion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f753a6ef0252689930fbfdf39859bf80c0388955/src%2Ftest%2Frun-pass%2Fclosure-to-fn-coercion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fclosure-to-fn-coercion.rs?ref=f753a6ef0252689930fbfdf39859bf80c0388955", "patch": "@@ -10,7 +10,7 @@\n \n // ignore-stage0: new feature, remove this when SNAP\n \n-// #![feature(closure_to_fn_coercion)]\n+#![feature(closure_to_fn_coercion)]\n \n const FOO :fn(u8) -> u8 = |v: u8| { v };\n "}]}