{"sha": "6c4b5a2bdbe2b7ea4590c4715b9ede4a95e665c5", "node_id": "C_kwDOAAsO6NoAKDZjNGI1YTJiZGJlMmI3ZWE0NTkwYzQ3MTViOWVkZTRhOTVlNjY1YzU", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-11-30T18:53:20Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-11-30T18:53:20Z"}, "message": "Rollup merge of #105081 - weiznich:regression_test_for_104322, r=compiler-errors\n\nAdd a regression test for #104322\n\nr? ``@compiler-errors``", "tree": {"sha": "fd73ee2af33392fe662c993dd8f7e2cf031c7e3e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fd73ee2af33392fe662c993dd8f7e2cf031c7e3e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6c4b5a2bdbe2b7ea4590c4715b9ede4a95e665c5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjh6agCRBK7hj4Ov3rIwAAuYoIAFZxmT0r6pOFR4thx+HDG2C5\nZaGbwGIs57fc0xbh9K9cRJDjDqVquTcA7R8TRp4pdBXhei5zoUaoF/inM/CU2pkp\nhO/v25mhEThp2By7wJ4Yf9DiKCDqvyQXL2Yrfhjo6+ItKB/U3o/4i9UoDobQ9/Wo\nEuY8spFoClYmG+uPgiyw2fd5FRB8dP6pcQtXCqQbnAKF1LeSMpQIx/73BQVSiqd6\nFKEOivoeOFb6Alyqd6AHqOrkNTru/dlufmIJBwifftPr/OgN/ZqTZE8CIV+wQQHK\ne3RwVvhlmiVqEEMK8JUjfnrGZUQQr5JvJu+q0e7kk9E/OWDXmCTensOhZRoUttw=\n=0Zmx\n-----END PGP SIGNATURE-----\n", "payload": "tree fd73ee2af33392fe662c993dd8f7e2cf031c7e3e\nparent c56c377183a0d5e35cb1b3fa59f6adf62a3e6280\nparent 42ff718d0fbc6f3c9a3386e65a16ab6c4ae89480\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1669834400 +0100\ncommitter GitHub <noreply@github.com> 1669834400 +0100\n\nRollup merge of #105081 - weiznich:regression_test_for_104322, r=compiler-errors\n\nAdd a regression test for #104322\n\nr? ``@compiler-errors``\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6c4b5a2bdbe2b7ea4590c4715b9ede4a95e665c5", "html_url": "https://github.com/rust-lang/rust/commit/6c4b5a2bdbe2b7ea4590c4715b9ede4a95e665c5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6c4b5a2bdbe2b7ea4590c4715b9ede4a95e665c5/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c56c377183a0d5e35cb1b3fa59f6adf62a3e6280", "url": "https://api.github.com/repos/rust-lang/rust/commits/c56c377183a0d5e35cb1b3fa59f6adf62a3e6280", "html_url": "https://github.com/rust-lang/rust/commit/c56c377183a0d5e35cb1b3fa59f6adf62a3e6280"}, {"sha": "42ff718d0fbc6f3c9a3386e65a16ab6c4ae89480", "url": "https://api.github.com/repos/rust-lang/rust/commits/42ff718d0fbc6f3c9a3386e65a16ab6c4ae89480", "html_url": "https://github.com/rust-lang/rust/commit/42ff718d0fbc6f3c9a3386e65a16ab6c4ae89480"}], "stats": {"total": 80, "additions": 80, "deletions": 0}, "files": [{"sha": "dcc27f1f03ae1531ca171a41582747377638513a", "filename": "src/test/ui/traits/issue-104322.rs", "status": "added", "additions": 80, "deletions": 0, "changes": 80, "blob_url": "https://github.com/rust-lang/rust/blob/6c4b5a2bdbe2b7ea4590c4715b9ede4a95e665c5/src%2Ftest%2Fui%2Ftraits%2Fissue-104322.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c4b5a2bdbe2b7ea4590c4715b9ede4a95e665c5/src%2Ftest%2Fui%2Ftraits%2Fissue-104322.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Fissue-104322.rs?ref=6c4b5a2bdbe2b7ea4590c4715b9ede4a95e665c5", "patch": "@@ -0,0 +1,80 @@\n+// build-pass\n+//\n+// Tests that overflows do not occur in certain situations\n+// related to generic diesel code\n+\n+use mini_diesel::*;\n+\n+pub trait HandleDelete<K> {}\n+\n+pub fn handle_delete<D, R>()\n+where\n+    R: HasTable,\n+    R::Table: HandleDelete<D> + 'static,\n+{\n+}\n+\n+impl<K, T> HandleDelete<K> for T\n+where\n+    T: Table + HasTable<Table = T> + 'static,\n+    K: 'static,\n+    &'static K: Identifiable<Table = T>,\n+    T::PrimaryKey: EqAll<<&'static K as Identifiable>::Id>,\n+    T::Query: FilterDsl<<T::PrimaryKey as EqAll<<&'static K as Identifiable>::Id>>::Output>,\n+    Filter<T::Query, <T::PrimaryKey as EqAll<<&'static K as Identifiable>::Id>>::Output>:\n+        IntoUpdateTarget<Table = T>,\n+{\n+}\n+\n+mod mini_diesel {\n+    pub trait HasTable {\n+        type Table: Table;\n+    }\n+\n+    pub trait Identifiable: HasTable {\n+        type Id;\n+    }\n+\n+    pub trait EqAll<Rhs> {\n+        type Output;\n+    }\n+\n+    pub trait IntoUpdateTarget: HasTable {\n+        type WhereClause;\n+    }\n+\n+    pub trait Query {\n+        type SqlType;\n+    }\n+\n+    pub trait AsQuery {\n+        type Query: Query;\n+    }\n+    impl<T: Query> AsQuery for T {\n+        type Query = Self;\n+    }\n+\n+    pub trait FilterDsl<Predicate> {\n+        type Output;\n+    }\n+\n+    impl<T, Predicate> FilterDsl<Predicate> for T\n+    where\n+        T: Table,\n+        T::Query: FilterDsl<Predicate>,\n+    {\n+        type Output = Filter<T::Query, Predicate>;\n+    }\n+\n+    pub trait QuerySource {\n+        type FromClause;\n+    }\n+\n+    pub trait Table: QuerySource + AsQuery + Sized {\n+        type PrimaryKey;\n+    }\n+\n+    pub type Filter<Source, Predicate> = <Source as FilterDsl<Predicate>>::Output;\n+}\n+\n+fn main() {}"}]}