{"sha": "0291331203e741b43eda016f8669f5dcdc807ed3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAyOTEzMzEyMDNlNzQxYjQzZWRhMDE2Zjg2NjlmNWRjZGM4MDdlZDM=", "commit": {"author": {"name": "David Wood", "email": "devel@dtwood.uk", "date": "2017-12-24T12:27:07Z"}, "committer": {"name": "David Wood", "email": "devel@dtwood.uk", "date": "2017-12-24T12:27:07Z"}, "message": "Add documentation to expr::SPECIAL_MACRO_WHITELIST", "tree": {"sha": "3f6074b1a29b91ccae0d2f4238828fc26298b459", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3f6074b1a29b91ccae0d2f4238828fc26298b459"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0291331203e741b43eda016f8669f5dcdc807ed3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0291331203e741b43eda016f8669f5dcdc807ed3", "html_url": "https://github.com/rust-lang/rust/commit/0291331203e741b43eda016f8669f5dcdc807ed3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0291331203e741b43eda016f8669f5dcdc807ed3/comments", "author": {"login": "dtwood", "id": 1207240, "node_id": "MDQ6VXNlcjEyMDcyNDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1207240?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtwood", "html_url": "https://github.com/dtwood", "followers_url": "https://api.github.com/users/dtwood/followers", "following_url": "https://api.github.com/users/dtwood/following{/other_user}", "gists_url": "https://api.github.com/users/dtwood/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtwood/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtwood/subscriptions", "organizations_url": "https://api.github.com/users/dtwood/orgs", "repos_url": "https://api.github.com/users/dtwood/repos", "events_url": "https://api.github.com/users/dtwood/events{/privacy}", "received_events_url": "https://api.github.com/users/dtwood/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dtwood", "id": 1207240, "node_id": "MDQ6VXNlcjEyMDcyNDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1207240?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtwood", "html_url": "https://github.com/dtwood", "followers_url": "https://api.github.com/users/dtwood/followers", "following_url": "https://api.github.com/users/dtwood/following{/other_user}", "gists_url": "https://api.github.com/users/dtwood/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtwood/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtwood/subscriptions", "organizations_url": "https://api.github.com/users/dtwood/orgs", "repos_url": "https://api.github.com/users/dtwood/repos", "events_url": "https://api.github.com/users/dtwood/events{/privacy}", "received_events_url": "https://api.github.com/users/dtwood/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3320b400aec227d01c3c09f7ef1f6a24beb976fe", "url": "https://api.github.com/repos/rust-lang/rust/commits/3320b400aec227d01c3c09f7ef1f6a24beb976fe", "html_url": "https://github.com/rust-lang/rust/commit/3320b400aec227d01c3c09f7ef1f6a24beb976fe"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "0c60ba5a201c5249769c650ab8195e7cade04359", "filename": "src/expr.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0291331203e741b43eda016f8669f5dcdc807ed3/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0291331203e741b43eda016f8669f5dcdc807ed3/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=0291331203e741b43eda016f8669f5dcdc807ed3", "patch": "@@ -1811,6 +1811,12 @@ fn rewrite_string_lit(context: &RewriteContext, span: Span, shape: Shape) -> Opt\n     )\n }\n \n+/// A list of `format!`-like macros, that take a long format string and a list of arguments to\n+/// format.\n+///\n+/// Organized as a list of `(&str, usize)` tuples, giving the name of the macro and the number of\n+/// arguments before the format string (none for `format!(\"format\", ...)`, one for `assert!(result,\n+/// \"format\", ...)`, two for `assert_eq!(left, right, \"format\", ...)`).\n const SPECIAL_MACRO_WHITELIST: &[(&str, usize)] = &[\n     // format! like macros\n     // From the Rust Standard Library."}]}