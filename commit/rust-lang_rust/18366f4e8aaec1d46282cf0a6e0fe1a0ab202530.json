{"sha": "18366f4e8aaec1d46282cf0a6e0fe1a0ab202530", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE4MzY2ZjRlOGFhZWMxZDQ2MjgyY2YwYTZlMGZlMWEwYWIyMDI1MzA=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-09-09T11:48:57Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-09-09T11:48:57Z"}, "message": "Auto merge of #44212 - eddyb:drop-const, r=nikomatsakis\n\nAllow Drop types in const's too, with #![feature(drop_types_in_const)].\n\nImplements the remaining amendment, see #33156. cc @SergioBenitez\n\nr? @nikomatsakis", "tree": {"sha": "5ad930aa865a44f897f8e23de3d696a2adfdebee", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5ad930aa865a44f897f8e23de3d696a2adfdebee"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/18366f4e8aaec1d46282cf0a6e0fe1a0ab202530", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/18366f4e8aaec1d46282cf0a6e0fe1a0ab202530", "html_url": "https://github.com/rust-lang/rust/commit/18366f4e8aaec1d46282cf0a6e0fe1a0ab202530", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/18366f4e8aaec1d46282cf0a6e0fe1a0ab202530/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "929b878262622292b76b8a27f09d3ccc646f9a46", "url": "https://api.github.com/repos/rust-lang/rust/commits/929b878262622292b76b8a27f09d3ccc646f9a46", "html_url": "https://github.com/rust-lang/rust/commit/929b878262622292b76b8a27f09d3ccc646f9a46"}, {"sha": "1d5c0ba75f5ca999396466b455dc07e45546e9a8", "url": "https://api.github.com/repos/rust-lang/rust/commits/1d5c0ba75f5ca999396466b455dc07e45546e9a8", "html_url": "https://github.com/rust-lang/rust/commit/1d5c0ba75f5ca999396466b455dc07e45546e9a8"}], "stats": {"total": 59, "additions": 44, "deletions": 15}, "files": [{"sha": "f891c991321c8a15ab2f9f8ce1cf267e98cc66f3", "filename": "src/librustc_mir/transform/qualify_consts.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/18366f4e8aaec1d46282cf0a6e0fe1a0ab202530/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18366f4e8aaec1d46282cf0a6e0fe1a0ab202530/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs?ref=18366f4e8aaec1d46282cf0a6e0fe1a0ab202530", "patch": "@@ -204,7 +204,7 @@ impl<'a, 'tcx> Qualifier<'a, 'tcx, 'tcx> {\n \n     /// Check for NEEDS_DROP (from an ADT or const fn call) and\n     /// error, unless we're in a function, or the feature-gate\n-    /// for globals with destructors is enabled.\n+    /// for constant with destructors is enabled.\n     fn deny_drop(&self) {\n         self.deny_drop_with_feature_gate_override(true);\n     }\n@@ -214,9 +214,9 @@ impl<'a, 'tcx> Qualifier<'a, 'tcx, 'tcx> {\n             return;\n         }\n \n-        // Static and const fn's allow destructors, but they're feature-gated.\n-        let msg = if allow_gate && self.mode != Mode::Const {\n-            // Feature-gate for globals with destructors is enabled.\n+        // Constants allow destructors, but they're feature-gated.\n+        let msg = if allow_gate {\n+            // Feature-gate for constant with destructors is enabled.\n             if self.tcx.sess.features.borrow().drop_types_in_const {\n                 return;\n             }\n@@ -236,11 +236,13 @@ impl<'a, 'tcx> Qualifier<'a, 'tcx, 'tcx> {\n         let mut err =\n             struct_span_err!(self.tcx.sess, self.span, E0493, \"{}\", msg);\n \n-        if allow_gate && self.mode != Mode::Const {\n+        if allow_gate {\n             help!(&mut err,\n                   \"in Nightly builds, add `#![feature(drop_types_in_const)]` \\\n                    to the crate attributes to enable\");\n         } else {\n+            // FIXME(eddyb) this looks up `self.mir.return_ty`.\n+            // We probably want the actual return type here, if at all.\n             self.find_drop_implementation_method_span()\n                 .map(|span| err.span_label(span, \"destructor defined here\"));\n "}, {"sha": "6c2eafe040a361bf32a3d9c12eab6ca486275cfe", "filename": "src/test/compile-fail/issue-17718-const-destructors.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/18366f4e8aaec1d46282cf0a6e0fe1a0ab202530/src%2Ftest%2Fcompile-fail%2Fissue-17718-const-destructors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18366f4e8aaec1d46282cf0a6e0fe1a0ab202530/src%2Ftest%2Fcompile-fail%2Fissue-17718-const-destructors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-17718-const-destructors.rs?ref=18366f4e8aaec1d46282cf0a6e0fe1a0ab202530", "patch": "@@ -14,6 +14,6 @@ impl Drop for A {\n }\n \n const FOO: A = A;\n-//~^ ERROR: constants are not allowed to have destructors\n+//~^ ERROR: destructors in constants are an unstable feature\n \n fn main() {}"}, {"sha": "f8fdf8c45cbdb08d1d959e74ec08b26cd6c37585", "filename": "src/test/compile-fail/static-drop-scope.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/18366f4e8aaec1d46282cf0a6e0fe1a0ab202530/src%2Ftest%2Fcompile-fail%2Fstatic-drop-scope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18366f4e8aaec1d46282cf0a6e0fe1a0ab202530/src%2Ftest%2Fcompile-fail%2Fstatic-drop-scope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fstatic-drop-scope.rs?ref=18366f4e8aaec1d46282cf0a6e0fe1a0ab202530", "patch": "@@ -16,11 +16,18 @@ impl Drop for WithDtor {\n     fn drop(&mut self) {}\n }\n \n-static FOO: Option<&'static WithDtor> = Some(&WithDtor);\n+static PROMOTION_FAIL_S: Option<&'static WithDtor> = Some(&WithDtor);\n //~^ ERROR statics are not allowed to have destructors\n //~| ERROR borrowed value does not live long enoug\n \n-static BAR: i32 = (WithDtor, 0).1;\n+const PROMOTION_FAIL_C: Option<&'static WithDtor> = Some(&WithDtor);\n+//~^ ERROR constants are not allowed to have destructors\n+//~| ERROR borrowed value does not live long enoug\n+\n+static EARLY_DROP_S: i32 = (WithDtor, 0).1;\n //~^ ERROR statics are not allowed to have destructors\n \n+const EARLY_DROP_C: i32 = (WithDtor, 0).1;\n+//~^ ERROR constants are not allowed to have destructors\n+\n fn main () {}"}, {"sha": "c085ee7d46ac33cf96c877287ba467266f15fd5f", "filename": "src/test/run-pass/issue-34053.rs", "status": "modified", "additions": 20, "deletions": 2, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/18366f4e8aaec1d46282cf0a6e0fe1a0ab202530/src%2Ftest%2Frun-pass%2Fissue-34053.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18366f4e8aaec1d46282cf0a6e0fe1a0ab202530/src%2Ftest%2Frun-pass%2Fissue-34053.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-34053.rs?ref=18366f4e8aaec1d46282cf0a6e0fe1a0ab202530", "patch": "@@ -10,14 +10,32 @@\n \n #![feature(drop_types_in_const)]\n \n+use std::sync::atomic::{AtomicUsize, ATOMIC_USIZE_INIT, Ordering};\n+\n+static DROP_COUNTER: AtomicUsize = ATOMIC_USIZE_INIT;\n+\n struct A(i32);\n \n impl Drop for A {\n-    fn drop(&mut self) {}\n+    fn drop(&mut self) {\n+        // update global drop count\n+        DROP_COUNTER.fetch_add(1, Ordering::SeqCst);\n+    }\n }\n \n static FOO: A = A(123);\n+const BAR: A = A(456);\n+\n+impl A {\n+    const BAZ: A = A(789);\n+}\n \n fn main() {\n-    println!(\"{}\", &FOO.0);\n+    assert_eq!(DROP_COUNTER.load(Ordering::SeqCst), 0);\n+    assert_eq!(&FOO.0, &123);\n+    assert_eq!(DROP_COUNTER.load(Ordering::SeqCst), 0);\n+    assert_eq!(BAR.0, 456);\n+    assert_eq!(DROP_COUNTER.load(Ordering::SeqCst), 1);\n+    assert_eq!(A::BAZ.0, 789);\n+    assert_eq!(DROP_COUNTER.load(Ordering::SeqCst), 2);\n }"}, {"sha": "eae871d2d4e46143207236c8c8c94c9276bad27c", "filename": "src/test/ui/span/E0493.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/18366f4e8aaec1d46282cf0a6e0fe1a0ab202530/src%2Ftest%2Fui%2Fspan%2FE0493.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18366f4e8aaec1d46282cf0a6e0fe1a0ab202530/src%2Ftest%2Fui%2Fspan%2FE0493.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2FE0493.rs?ref=18366f4e8aaec1d46282cf0a6e0fe1a0ab202530", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![feature(drop_types_in_const)]\n+\n struct Foo {\n     a: u32\n }\n@@ -24,7 +26,7 @@ impl Drop for Bar {\n     fn drop(&mut self) {}\n }\n \n-const F : Foo = Foo { a : 0 };\n+const F : Foo = (Foo { a : 0 }, Foo { a : 1 }).1;\n \n fn main() {\n }"}, {"sha": "8da11fefc177afcb18a14bbe56a2e7000b6d6f7f", "filename": "src/test/ui/span/E0493.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/18366f4e8aaec1d46282cf0a6e0fe1a0ab202530/src%2Ftest%2Fui%2Fspan%2FE0493.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/18366f4e8aaec1d46282cf0a6e0fe1a0ab202530/src%2Ftest%2Fui%2Fspan%2FE0493.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2FE0493.stderr?ref=18366f4e8aaec1d46282cf0a6e0fe1a0ab202530", "patch": "@@ -1,11 +1,11 @@\n error[E0493]: constants are not allowed to have destructors\n-  --> $DIR/E0493.rs:27:17\n+  --> $DIR/E0493.rs:29:17\n    |\n-16 |     fn drop(&mut self) {}\n+18 |     fn drop(&mut self) {}\n    |     --------------------- destructor defined here\n ...\n-27 | const F : Foo = Foo { a : 0 };\n-   |                 ^^^^^^^^^^^^^ constants cannot have destructors\n+29 | const F : Foo = (Foo { a : 0 }, Foo { a : 1 }).1;\n+   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ constants cannot have destructors\n \n error: aborting due to previous error\n "}]}