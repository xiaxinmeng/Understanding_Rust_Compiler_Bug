{"sha": "f76628d3904454241e41acb033f6ececfdd08b4c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY3NjYyOGQzOTA0NDU0MjQxZTQxYWNiMDMzZjZlY2VjZmRkMDhiNGM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-02-20T08:36:53Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-02-20T08:36:53Z"}, "message": "auto merge of #12396 : alexcrichton/rust/windows-env-var, r=huonw\n\nOn windows, the GetEnvironmentVariable function will return the necessary buffer\r\nsize if the buffer provided was too small. This case previously fell through the\r\nchecks inside of fill_utf16_buf_and_decode, tripping an assertion in the `slice`\r\nmethod.\r\n\r\nThis adds an extra case for when the return value is >= the buffer size, in\r\nwhich case we assume the return value as the new buffer size and try again.\r\n\r\nCloses #12376", "tree": {"sha": "209bc56e103f1518329622b8390d17c84ed5f84e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/209bc56e103f1518329622b8390d17c84ed5f84e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f76628d3904454241e41acb033f6ececfdd08b4c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f76628d3904454241e41acb033f6ececfdd08b4c", "html_url": "https://github.com/rust-lang/rust/commit/f76628d3904454241e41acb033f6ececfdd08b4c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f76628d3904454241e41acb033f6ececfdd08b4c/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b5e35736b0d62386081ccfb054fe44ae676a091b", "url": "https://api.github.com/repos/rust-lang/rust/commits/b5e35736b0d62386081ccfb054fe44ae676a091b", "html_url": "https://github.com/rust-lang/rust/commit/b5e35736b0d62386081ccfb054fe44ae676a091b"}, {"sha": "9347096d54a983d47996c5f8020dbec04fea81fa", "url": "https://api.github.com/repos/rust-lang/rust/commits/9347096d54a983d47996c5f8020dbec04fea81fa", "html_url": "https://github.com/rust-lang/rust/commit/9347096d54a983d47996c5f8020dbec04fea81fa"}], "stats": {"total": 14, "additions": 13, "deletions": 1}, "files": [{"sha": "458e31fd86f5fd131fe1493011ec79881a6417f3", "filename": "src/libstd/os.rs", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/f76628d3904454241e41acb033f6ececfdd08b4c/src%2Flibstd%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f76628d3904454241e41acb033f6ececfdd08b4c/src%2Flibstd%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fos.rs?ref=f76628d3904454241e41acb033f6ececfdd08b4c", "patch": "@@ -113,13 +113,15 @@ pub mod win32 {\n             let mut done = false;\n             while !done {\n                 let mut buf = vec::from_elem(n as uint, 0u16);\n-                let k = f(buf.as_mut_ptr(), TMPBUF_SZ as DWORD);\n+                let k = f(buf.as_mut_ptr(), n);\n                 if k == (0 as DWORD) {\n                     done = true;\n                 } else if k == n &&\n                           libc::GetLastError() ==\n                           libc::ERROR_INSUFFICIENT_BUFFER as DWORD {\n                     n *= (2 as DWORD);\n+                } else if k >= n {\n+                    n = k;\n                 } else {\n                     done = true;\n                 }\n@@ -1494,6 +1496,16 @@ mod tests {\n         }\n     }\n \n+    #[test]\n+    fn test_env_set_get_huge() {\n+        let n = make_rand_name();\n+        let s = \"x\".repeat(10000);\n+        setenv(n, s);\n+        assert_eq!(getenv(n), Some(s));\n+        unsetenv(n);\n+        assert_eq!(getenv(n), None);\n+    }\n+\n     #[test]\n     fn test_env_setenv() {\n         let n = make_rand_name();"}]}