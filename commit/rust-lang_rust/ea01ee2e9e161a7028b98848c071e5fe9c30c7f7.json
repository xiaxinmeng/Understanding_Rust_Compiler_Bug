{"sha": "ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVhMDFlZTJlOWUxNjFhNzAyOGI5ODg0OGMwNzFlNWZlOWMzMGM3Zjc=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-09-12T00:46:20Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-09-12T02:25:43Z"}, "message": "Convert 'use' to 'extern mod'. Remove old 'use' syntax", "tree": {"sha": "2d56840d3f626855e36fe824424453d228dcfdf3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2d56840d3f626855e36fe824424453d228dcfdf3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "html_url": "https://github.com/rust-lang/rust/commit/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fb851242b7b47546ae591b75642361a494536a53", "url": "https://api.github.com/repos/rust-lang/rust/commits/fb851242b7b47546ae591b75642361a494536a53", "html_url": "https://github.com/rust-lang/rust/commit/fb851242b7b47546ae591b75642361a494536a53"}], "stats": {"total": 624, "additions": 308, "deletions": 316}, "files": [{"sha": "5a1b399751f25df15fa32b96bae18ab68e10a8cf", "filename": "src/cargo/cargo.rc", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Fcargo%2Fcargo.rc", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Fcargo%2Fcargo.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcargo%2Fcargo.rc?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -21,10 +21,10 @@\n #[allow(vecs_implicitly_copyable,\n         non_implicitly_copyable_typarams)];\n \n-use core(vers = \"0.4\");\n-use std(vers = \"0.4\");\n-use rustc(vers = \"0.4\");\n-use syntax(vers = \"0.4\");\n+extern mod core(vers = \"0.4\");\n+extern mod std(vers = \"0.4\");\n+extern mod rustc(vers = \"0.4\");\n+extern mod syntax(vers = \"0.4\");\n \n use core::*;\n "}, {"sha": "5d2179e0f982dc8403303ae94f95defb7a05f59f", "filename": "src/compiletest/compiletest.rc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Fcompiletest%2Fcompiletest.rc", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Fcompiletest%2Fcompiletest.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcompiletest%2Fcompiletest.rc?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -4,8 +4,8 @@\n \n #[allow(vecs_implicitly_copyable)];\n \n-use core(vers = \"0.4\");\n-use std(vers = \"0.4\");\n+extern mod core(vers = \"0.4\");\n+extern mod std(vers = \"0.4\");\n \n use core::*;\n "}, {"sha": "b3a70b2c26b4e417fd85dc9cdc0e00a4b4129145", "filename": "src/fuzzer/fuzzer.rc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ffuzzer%2Ffuzzer.rc", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ffuzzer%2Ffuzzer.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ffuzzer%2Ffuzzer.rc?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -6,9 +6,9 @@\n \n #[allow(vecs_implicitly_copyable)];\n \n-use core(vers = \"0.4\");\n-use std(vers = \"0.4\");\n-use syntax(vers = \"0.4\");\n+extern mod core(vers = \"0.4\");\n+extern mod std(vers = \"0.4\");\n+extern mod syntax(vers = \"0.4\");\n \n use core::*;\n "}, {"sha": "3e9afb0203b2aa43022cba26c610252a88ee479e", "filename": "src/libcore/core.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Flibcore%2Fcore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Flibcore%2Fcore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fcore.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -58,7 +58,7 @@ export Add, Sub, Mul, Div, Modulo, Neg, BitAnd, BitOr, BitXor;\n export Shl, Shr, Index;\n \n #[cfg(test)]\n-use coreops(name = \"core\", vers = \"0.4\");\n+extern mod coreops(name = \"core\", vers = \"0.4\");\n \n #[cfg(test)]\n use coreops::ops::{Const, Copy, Send, Owned};\n@@ -96,7 +96,7 @@ mod core {\n // Similar to above. Some magic to make core testable.\n #[cfg(test)]\n mod std {\n-    use std(vers = \"0.4\");\n+    extern mod std(vers = \"0.4\");\n     use std::test;\n }\n "}, {"sha": "c43faa1fd6c31b9c40acc944d7727cdeb8773d2f", "filename": "src/libstd/std.rc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Flibstd%2Fstd.rc", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Flibstd%2Fstd.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fstd.rc?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -13,7 +13,7 @@\n #[allow(vecs_implicitly_copyable)];\n #[deny(non_camel_case_types)];\n \n-use core(vers = \"0.4\");\n+extern mod core(vers = \"0.4\");\n use core::*;\n \n export net, net_tcp, net_ip, net_url;"}, {"sha": "676610c66beb58ff29f3c67888f691222fce39af", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 3, "deletions": 11, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -3328,7 +3328,7 @@ impl parser {\n                                           visibility,\n                                           maybe_append(attrs, extra_attrs)));\n         } else if self.eat_keyword(~\"use\") {\n-            let view_item = self.parse_use(visibility);\n+            let view_item = self.parse_use();\n             self.expect(token::SEMI);\n             return iovi_view_item(@{\n                 node: view_item,\n@@ -3379,15 +3379,7 @@ impl parser {\n         }\n     }\n \n-    fn parse_use(vis: visibility) -> view_item_ {\n-        if vis != public && (self.look_ahead(1) == token::SEMI ||\n-                             self.look_ahead(1) == token::LPAREN) {\n-            // Old-style \"use\"; i.e. what we now call \"extern mod\".\n-            let ident = self.parse_ident();\n-            let metadata = self.parse_optional_meta();\n-            return view_item_use(ident, metadata, self.get_id());\n-        }\n-\n+    fn parse_use() -> view_item_ {\n         return view_item_import(self.parse_view_paths());\n     }\n \n@@ -3496,7 +3488,7 @@ impl parser {\n     fn parse_view_item(+attrs: ~[attribute]) -> @view_item {\n         let lo = self.span.lo, vis = self.parse_visibility();\n         let node = if self.eat_keyword(~\"use\") {\n-            self.parse_use(vis)\n+            self.parse_use()\n         } else if self.eat_keyword(~\"export\") {\n             view_item_export(self.parse_view_paths())\n         } else if self.eat_keyword(~\"extern\") {"}, {"sha": "46fbaed8b5dc981e8088c93e5f3f5f82efac9df8", "filename": "src/libsyntax/print/pprust.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Flibsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Flibsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpprust.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1747,7 +1747,7 @@ fn print_view_item(s: ps, item: @ast::view_item) {\n     print_outer_attributes(s, item.attrs);\n     match item.node {\n       ast::view_item_use(id, mta, _) => {\n-        head(s, ~\"use\");\n+        head(s, ~\"extern mod\");\n         print_ident(s, id);\n         if vec::len(mta) > 0u {\n             popen(s);"}, {"sha": "6af0c5b597ae437cf16825aba7fd55f16d1e8f9b", "filename": "src/libsyntax/syntax.rc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Flibsyntax%2Fsyntax.rc", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Flibsyntax%2Fsyntax.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fsyntax.rc?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -10,8 +10,8 @@\n \n #[allow(vecs_implicitly_copyable)];\n \n-use core(vers = \"0.4\");\n-use std(vers = \"0.4\");\n+extern mod core(vers = \"0.4\");\n+extern mod std(vers = \"0.4\");\n \n use core::*;\n "}, {"sha": "1ccd27c786b7a520f4e1dea155451b4b4cca4665", "filename": "src/rustc/driver/rustc.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Frustc%2Fdriver%2Frustc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Frustc%2Fdriver%2Frustc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fdriver%2Frustc.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,10 +1,10 @@\n #[no_core];\n #[allow(vecs_implicitly_copyable)];\n \n-use core(vers = \"0.4\");\n-use std(vers = \"0.4\");\n-use rustc(vers = \"0.4\");\n-use syntax(vers = \"0.4\");\n+extern mod core(vers = \"0.4\");\n+extern mod std(vers = \"0.4\");\n+extern mod rustc(vers = \"0.4\");\n+extern mod syntax(vers = \"0.4\");\n \n use core::*;\n "}, {"sha": "aff335ccc569c76b71e01e4ea291fe839cd568ef", "filename": "src/rustc/rustc.rc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Frustc%2Frustc.rc", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Frustc%2Frustc.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Frustc.rc?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -14,9 +14,9 @@\n #[allow(vecs_implicitly_copyable)];\n // #[warn(deprecated_pattern)];\n \n-use core(vers = \"0.4\");\n-use std(vers = \"0.4\");\n-use syntax(vers = \"0.4\");\n+extern mod core(vers = \"0.4\");\n+extern mod std(vers = \"0.4\");\n+extern mod syntax(vers = \"0.4\");\n \n use core::*;\n "}, {"sha": "5553251329c15b62c7aebb4ef35d2a67cba2d509", "filename": "src/rustdoc/rustdoc.rc", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Frustdoc%2Frustdoc.rc", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Frustdoc%2Frustdoc.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Frustdoc.rc?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -14,10 +14,10 @@\n #[allow(vecs_implicitly_copyable,\n         non_implicitly_copyable_typarams)];\n \n-use core(vers = \"0.4\");\n-use std(vers = \"0.4\");\n-use rustc(vers = \"0.4\");\n-use syntax(vers = \"0.4\");\n+extern mod core(vers = \"0.4\");\n+extern mod std(vers = \"0.4\");\n+extern mod rustc(vers = \"0.4\");\n+extern mod syntax(vers = \"0.4\");\n \n use core::*;\n use std::par;"}, {"sha": "8c71b5ad131399653105c19d1c3b31905a5df773", "filename": "src/test/auxiliary/crateresolve4b-1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fauxiliary%2Fcrateresolve4b-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fauxiliary%2Fcrateresolve4b-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fcrateresolve4b-1.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -3,6 +3,6 @@\n #[link(name = \"crateresolve4b\", vers = \"0.1\")];\n #[crate_type = \"lib\"];\n \n-use crateresolve4a(vers=\"0.2\");\n+extern mod crateresolve4a(vers=\"0.2\");\n \n fn f() -> int { crateresolve4a::g() }"}, {"sha": "3bb1bc23cc2fb845c083de6414834d343a8a5587", "filename": "src/test/auxiliary/crateresolve4b-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fauxiliary%2Fcrateresolve4b-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fauxiliary%2Fcrateresolve4b-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fcrateresolve4b-2.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -3,6 +3,6 @@\n #[link(name = \"crateresolve4b\", vers = \"0.2\")];\n #[crate_type = \"lib\"];\n \n-use crateresolve4a(vers=\"0.1\");\n+extern mod crateresolve4a(vers=\"0.1\");\n \n fn g() -> int { crateresolve4a::f() }"}, {"sha": "45a41581b3abcb9e683d25de7f68efac7f6b5dc3", "filename": "src/test/auxiliary/crateresolve7x.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fauxiliary%2Fcrateresolve7x.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fauxiliary%2Fcrateresolve7x.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fcrateresolve7x.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -4,11 +4,11 @@\n \n // These both have the same version but differ in other metadata\n mod a {\n-    use cr_1 (name = \"crateresolve_calories\", vers = \"0.1\", calories=\"100\");\n+    extern mod cr_1 (name = \"crateresolve_calories\", vers = \"0.1\", calories=\"100\");\n     fn f() -> int { cr_1::f() }\n }\n \n mod b {\n-    use cr_2 (name = \"crateresolve_calories\", vers = \"0.1\", calories=\"200\");\n+    extern mod cr_2 (name = \"crateresolve_calories\", vers = \"0.1\", calories=\"200\");\n     fn f() -> int { cr_2::f() }\n }"}, {"sha": "5d16a3093654241e23a361d076dc4429636007c1", "filename": "src/test/auxiliary/issue-2414-b.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fauxiliary%2Fissue-2414-b.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fauxiliary%2Fissue-2414-b.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fissue-2414-b.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -3,5 +3,5 @@\n #[link(name = \"b\", vers = \"0.1\")];\n #[crate_type = \"lib\"];\n \n-use a;\n+extern mod a;\n "}, {"sha": "8352c3163a2a8b3ada6502695146d11e94f7849d", "filename": "src/test/auxiliary/issue-2526.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fauxiliary%2Fissue-2526.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fauxiliary%2Fissue-2526.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fissue-2526.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -3,7 +3,7 @@\n        uuid = \"54cc1bc9-02b8-447c-a227-75ebc923bc29\")];\n #[crate_type = \"lib\"];\n \n-use std;\n+extern mod std;\n \n export context;\n "}, {"sha": "d2d8d7a28bd353b3f95abc8d01dd5debdd82eef2", "filename": "src/test/auxiliary/issue-2631-a.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fauxiliary%2Fissue-2631-a.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fauxiliary%2Fissue-2631-a.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fissue-2631-a.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,7 +1,7 @@\n #[link(name = \"req\")];\n #[crate_type = \"lib\"];\n \n-use std;\n+extern mod std;\n \n use dvec::*;\n use dvec::DVec;"}, {"sha": "001569f636aeb1c5dbcc06083fb96aff07238222", "filename": "src/test/auxiliary/issue_2242_b.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fauxiliary%2Fissue_2242_b.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fauxiliary%2Fissue_2242_b.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fissue_2242_b.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,7 +1,7 @@\n #[link(name = \"b\", vers = \"0.1\")];\n #[crate_type = \"lib\"];\n \n-use a;\n+extern mod a;\n use a::to_strz;\n \n impl int: to_strz {"}, {"sha": "0ee654fa82e6e37cb99be6478100c23d72abaddf", "filename": "src/test/auxiliary/issue_2242_c.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fauxiliary%2Fissue_2242_c.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fauxiliary%2Fissue_2242_c.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fissue_2242_c.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,7 +1,7 @@\n #[link(name = \"c\", vers = \"0.1\")];\n #[crate_type = \"lib\"];\n \n-use a;\n+extern mod a;\n \n use a::to_strz;\n "}, {"sha": "0e3057cbc78b3e08ec42422046077d59c9d1b48a", "filename": "src/test/auxiliary/issue_2316_b.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fauxiliary%2Fissue_2316_b.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fauxiliary%2Fissue_2316_b.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fissue_2316_b.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,4 +1,4 @@\n-use issue_2316_a;\n+extern mod issue_2316_a;\n \n mod cloth {\n "}, {"sha": "633e421ecf97a5442790047ae539762371751630", "filename": "src/test/bench/core-map.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fbench%2Fcore-map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fbench%2Fcore-map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fcore-map.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -4,7 +4,7 @@\n \n */\n \n-use std;\n+extern mod std;\n use std::map;\n use mutable::Mut;\n use send_map::linear::*;"}, {"sha": "8ab41b0e3631223ec5be2d25ccca1411fcd7dffe", "filename": "src/test/bench/core-std.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fbench%2Fcore-std.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fbench%2Fcore-std.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fcore-std.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,6 +1,6 @@\n // Microbenchmarks for various functions in core and std\n \n-use std;\n+extern mod std;\n \n use std::time::precise_time_s;\n use std::map;"}, {"sha": "2602389935c6ee9648c26b5c2a18112614e030f0", "filename": "src/test/bench/core-vec-append.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fbench%2Fcore-vec-append.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fbench%2Fcore-vec-append.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fcore-vec-append.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,6 +1,6 @@\n // A raw test of vector appending performance.\n \n-use std;\n+extern mod std;\n use dvec::DVec;\n use io::WriterUtil;\n "}, {"sha": "ddd900aa382e71e8ad35e0f2bb1af962d849a563", "filename": "src/test/bench/graph500-bfs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fbench%2Fgraph500-bfs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fbench%2Fgraph500-bfs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fgraph500-bfs.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -4,7 +4,7 @@ An implementation of the Graph500 Breadth First Search problem in Rust.\n \n */\n \n-use std;\n+extern mod std;\n use std::arc;\n use std::time;\n use std::map;"}, {"sha": "a8c51b2502bf3d27c66a0c04e661e941c87ceb32", "filename": "src/test/bench/msgsend-pipes-shared.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fbench%2Fmsgsend-pipes-shared.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fbench%2Fmsgsend-pipes-shared.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fmsgsend-pipes-shared.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -10,7 +10,7 @@\n \n // xfail-pretty\n \n-use std;\n+extern mod std;\n use io::Writer;\n use io::WriterUtil;\n "}, {"sha": "52a30861b62d36bca6e8b63b4940aa42b5e752c6", "filename": "src/test/bench/msgsend-pipes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fbench%2Fmsgsend-pipes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fbench%2Fmsgsend-pipes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fmsgsend-pipes.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -6,7 +6,7 @@\n \n // xfail-pretty\n \n-use std;\n+extern mod std;\n use io::Writer;\n use io::WriterUtil;\n "}, {"sha": "86ab3df63b8afb5a56ab458365f940896728ecb8", "filename": "src/test/bench/msgsend-ring-mutex-arcs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fbench%2Fmsgsend-ring-mutex-arcs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fbench%2Fmsgsend-ring-mutex-arcs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fmsgsend-ring-mutex-arcs.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -9,7 +9,7 @@\n \n use future::future;\n \n-use std;\n+extern mod std;\n use std::time;\n use std::arc;\n "}, {"sha": "4e873b0127ba45e0345aaef4d5d87b7372221df7", "filename": "src/test/bench/msgsend-ring-pipes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fbench%2Fmsgsend-ring-pipes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fbench%2Fmsgsend-ring-pipes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fmsgsend-ring-pipes.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -10,7 +10,7 @@\n \n use future::future;\n \n-use std;\n+extern mod std;\n use std::time;\n \n use pipes::recv;"}, {"sha": "d59a8dc47e83b86de2623b59ad6dfb1715a933d6", "filename": "src/test/bench/msgsend-ring-rw-arcs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fbench%2Fmsgsend-ring-rw-arcs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fbench%2Fmsgsend-ring-rw-arcs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fmsgsend-ring-rw-arcs.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -9,7 +9,7 @@\n \n use future::future;\n \n-use std;\n+extern mod std;\n use std::time;\n use std::arc;\n "}, {"sha": "f07b7e7fbde4371da716f7cd77fe3f6280c47272", "filename": "src/test/bench/msgsend-ring.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fbench%2Fmsgsend-ring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fbench%2Fmsgsend-ring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fmsgsend-ring.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -7,7 +7,7 @@\n use comm::*;\n use future::future;\n \n-use std;\n+extern mod std;\n use std::time;\n \n fn thread_ring(i: uint,"}, {"sha": "6006b30a689014b1ca58cf8a5a15e1727f20f8d7", "filename": "src/test/bench/msgsend.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fbench%2Fmsgsend.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fbench%2Fmsgsend.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fmsgsend.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -4,7 +4,7 @@\n //\n // I *think* it's the same, more or less.\n \n-use std;\n+extern mod std;\n use io::Writer;\n use io::WriterUtil;\n "}, {"sha": "3d1d4985ee0a817cfa11211395ddc7e6889318d3", "filename": "src/test/bench/pingpong.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fbench%2Fpingpong.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fbench%2Fpingpong.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fpingpong.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -2,7 +2,7 @@\n \n // xfail-pretty\n \n-use std;\n+extern mod std;\n \n use pipes::{spawn_service, recv};\n use std::time::precise_time_s;"}, {"sha": "3de75ee10abf7f0ce034cf762c0ff179e2e818b0", "filename": "src/test/bench/shootout-ackermann.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fbench%2Fshootout-ackermann.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fbench%2Fshootout-ackermann.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-ackermann.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,4 +1,4 @@\n-use std;\n+extern mod std;\n \n fn ack(m: int, n: int) -> int {\n     if m == 0 {"}, {"sha": "976c140ba8b01e1297fb615bea7aadb3f8cac4b5", "filename": "src/test/bench/shootout-binarytrees.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fbench%2Fshootout-binarytrees.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fbench%2Fshootout-binarytrees.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-binarytrees.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,4 +1,4 @@\n-use std;\n+extern mod std;\n use std::arena;\n use methods = std::arena::Arena;\n "}, {"sha": "785ad6fe767d15d46ade91a8393c2a762c36a583", "filename": "src/test/bench/shootout-chameneos-redux.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fbench%2Fshootout-chameneos-redux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fbench%2Fshootout-chameneos-redux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-chameneos-redux.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,6 +1,6 @@\n // chameneos\n \n-use std;\n+extern mod std;\n use std::map;\n use std::map::HashMap;\n use std::sort;"}, {"sha": "24a43ec0d9df213c996d3792735cc7dbf922fb69", "filename": "src/test/bench/shootout-fannkuchredux.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fbench%2Fshootout-fannkuchredux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fbench%2Fshootout-fannkuchredux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-fannkuchredux.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,5 +1,5 @@\n // Based on Isaac Gouy's fannkuchredux.csharp\n-use std;\n+extern mod std;\n \n fn fannkuch(n: int) -> int {\n     fn perm1init(i: uint) -> int { return i as int; }"}, {"sha": "f40b40b3aba28452b54f38292b90b3b3f0d64268", "filename": "src/test/bench/shootout-fasta.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fbench%2Fshootout-fasta.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fbench%2Fshootout-fasta.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-fasta.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -5,7 +5,7 @@\n  * Computer Language Benchmarks Game\n  * http://shootout.alioth.debian.org/\n  */\n-use std;\n+extern mod std;\n use io::WriterUtil;\n \n fn LINE_LENGTH() -> uint { return 60u; }"}, {"sha": "c007892fed4c7540be8523f0cc55de5ab8a03a45", "filename": "src/test/bench/shootout-fibo.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fbench%2Fshootout-fibo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fbench%2Fshootout-fibo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-fibo.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,4 +1,4 @@\n-use std;\n+extern mod std;\n \n fn fib(n: int) -> int {\n     if n < 2 {"}, {"sha": "239ad138ae0e73791f41d155e66b1e875bf686f8", "filename": "src/test/bench/shootout-k-nucleotide-pipes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fbench%2Fshootout-k-nucleotide-pipes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fbench%2Fshootout-k-nucleotide-pipes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-k-nucleotide-pipes.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -2,7 +2,7 @@\n \n // multi tasking k-nucleotide\n \n-use std;\n+extern mod std;\n use std::map;\n use std::map::HashMap;\n use std::sort;"}, {"sha": "2cd1ef0955899e8734570544e917b60d9810046f", "filename": "src/test/bench/shootout-k-nucleotide.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fbench%2Fshootout-k-nucleotide.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fbench%2Fshootout-k-nucleotide.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-k-nucleotide.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -2,7 +2,7 @@\n \n // multi tasking k-nucleotide\n \n-use std;\n+extern mod std;\n use std::map;\n use std::map::HashMap;\n use std::sort;"}, {"sha": "f4996f1cbc6d0446553f97b4ce98c679fbb3b8b0", "filename": "src/test/bench/shootout-mandelbrot.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fbench%2Fshootout-mandelbrot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fbench%2Fshootout-mandelbrot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-mandelbrot.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -12,7 +12,7 @@\n //\n //  writes pbm image to output path\n \n-use std;\n+extern mod std;\n use io::WriterUtil;\n use std::map::HashMap;\n "}, {"sha": "15b103ca99c3f995fa0532e40bf15cd725c3247a", "filename": "src/test/bench/shootout-nbody.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fbench%2Fshootout-nbody.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fbench%2Fshootout-nbody.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-nbody.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,7 +1,7 @@\n // based on:\n // http://shootout.alioth.debian.org/u32/benchmark.php?test=nbody&lang=java\n \n-use std;\n+extern mod std;\n \n // Using sqrt from the standard library is way slower than using libc\n // directly even though std just calls libc, I guess it must be"}, {"sha": "1b8158aef0ab3bddcdb50df29a66a9738118ebb9", "filename": "src/test/bench/shootout-pfib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fbench%2Fshootout-pfib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fbench%2Fshootout-pfib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-pfib.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -10,7 +10,7 @@\n \n */\n \n-use std;\n+extern mod std;\n \n use std::{time, getopts};\n use io::WriterUtil;"}, {"sha": "b73063464698d040b17c7dd7a59f71c958fceb8b", "filename": "src/test/bench/shootout-spectralnorm.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fbench%2Fshootout-spectralnorm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fbench%2Fshootout-spectralnorm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-spectralnorm.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,6 +1,6 @@\n // Based on spectalnorm.gcc by Sebastien Loisel\n \n-use std;\n+extern mod std;\n \n fn eval_A(i: uint, j: uint) -> float {\n     1.0/(((i+j)*(i+j+1u)/2u+i+1u) as float)"}, {"sha": "5b823edbc6ffcf3324ccac605302ab5a7dc0d2d4", "filename": "src/test/bench/shootout-threadring.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fbench%2Fshootout-threadring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fbench%2Fshootout-threadring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-threadring.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,5 +1,5 @@\n // Based on threadring.erlang by Jira Isa\n-use std;\n+extern mod std;\n \n const n_threads: int = 503;\n "}, {"sha": "6a19531f927e95c1ebcdc5d84cb59d635980ceff", "filename": "src/test/bench/std-smallintmap.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fbench%2Fstd-smallintmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fbench%2Fstd-smallintmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fstd-smallintmap.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,6 +1,6 @@\n // Microbenchmark for the smallintmap library\n \n-use std;\n+extern mod std;\n use std::smallintmap;\n use std::smallintmap::SmallIntMap;\n use io::WriterUtil;"}, {"sha": "c03db79e3d26faa34e3bce2da3871757f4f81d51", "filename": "src/test/bench/sudoku.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fbench%2Fsudoku.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fbench%2Fsudoku.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fsudoku.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,4 +1,4 @@\n-use std;\n+extern mod std;\n \n use std::bitv;\n use io::{ReaderUtil, WriterUtil};"}, {"sha": "f5b2bb1c1c378d6413fcb23877bb219aa4e2718b", "filename": "src/test/bench/task-perf-alloc-unwind.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fbench%2Ftask-perf-alloc-unwind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fbench%2Ftask-perf-alloc-unwind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Ftask-perf-alloc-unwind.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,6 +1,6 @@\n // xfail-win32\n \n-use std;\n+extern mod std;\n \n use std::list::{List, Cons, Nil};\n use std::time::precise_time_s;"}, {"sha": "3740788167402c7b81dde7cd17b44adaa40c4fc7", "filename": "src/test/bench/task-perf-word-count-generic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fbench%2Ftask-perf-word-count-generic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fbench%2Ftask-perf-word-count-generic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Ftask-perf-word-count-generic.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -10,7 +10,7 @@\n \n // xfail-pretty\n \n-use std;\n+extern mod std;\n \n use option = option;\n use option::Some;"}, {"sha": "091941680ee751ddc8a638ee2bb05cde3dffed9f", "filename": "src/test/compile-fail/ambig_impl_2_exe.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fcompile-fail%2Fambig_impl_2_exe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fcompile-fail%2Fambig_impl_2_exe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fambig_impl_2_exe.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,6 +1,6 @@\n // xfail-fast aux-build\n // aux-build:ambig_impl_2_lib.rs\n-use ambig_impl_2_lib;\n+extern mod ambig_impl_2_lib;\n use ambig_impl_2_lib::me;\n trait me {\n     fn me() -> uint;"}, {"sha": "1854b4b527b72e7d95837ff5930c4c785a946ff9", "filename": "src/test/compile-fail/arc-cant-nest-rw-arc-3177.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fcompile-fail%2Farc-cant-nest-rw-arc-3177.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fcompile-fail%2Farc-cant-nest-rw-arc-3177.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Farc-cant-nest-rw-arc-3177.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,6 +1,6 @@\n // xfail-test\n // error-pattern: instantiating a type parameter with an incompatible type\n-use std;\n+extern mod std;\n use std::arc::rw_arc;\n \n fn main() {"}, {"sha": "162bc32ee7ee4b0d8c47c904a953fe357ce8ed84", "filename": "src/test/compile-fail/arc-rw-cond-shouldnt-escape.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fcompile-fail%2Farc-rw-cond-shouldnt-escape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fcompile-fail%2Farc-rw-cond-shouldnt-escape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Farc-rw-cond-shouldnt-escape.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,5 +1,5 @@\n // error-pattern: reference is not valid outside of its lifetime\n-use std;\n+extern mod std;\n use std::arc;\n fn main() {\n     let x = ~arc::RWARC(1);"}, {"sha": "6e30b3ddd892f5f6daf998a21a62471af8ca24e7", "filename": "src/test/compile-fail/arc-rw-read-mode-shouldnt-escape.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fcompile-fail%2Farc-rw-read-mode-shouldnt-escape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fcompile-fail%2Farc-rw-read-mode-shouldnt-escape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Farc-rw-read-mode-shouldnt-escape.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,4 +1,4 @@\n-use std;\n+extern mod std;\n use std::arc;\n fn main() {\n     let x = ~arc::RWARC(1);"}, {"sha": "76dafb616c86cdea35979c26a58a1ff10226ae88", "filename": "src/test/compile-fail/arc-rw-state-shouldnt-escape.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fcompile-fail%2Farc-rw-state-shouldnt-escape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fcompile-fail%2Farc-rw-state-shouldnt-escape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Farc-rw-state-shouldnt-escape.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,5 +1,5 @@\n // error-pattern: reference is not valid outside of its lifetime\n-use std;\n+extern mod std;\n use std::arc;\n fn main() {\n     let x = ~arc::RWARC(1);"}, {"sha": "a107f264ec6b8c9d020c0d9aba1da4ac0cc042d7", "filename": "src/test/compile-fail/arc-rw-write-mode-cond-shouldnt-escape.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fcompile-fail%2Farc-rw-write-mode-cond-shouldnt-escape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fcompile-fail%2Farc-rw-write-mode-cond-shouldnt-escape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Farc-rw-write-mode-cond-shouldnt-escape.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,5 +1,5 @@\n // error-pattern: reference is not valid outside of its lifetime\n-use std;\n+extern mod std;\n use std::arc;\n fn main() {\n     let x = ~arc::RWARC(1);"}, {"sha": "071610dd51a0eacd01a0a6588e3ef05fdd9f4564", "filename": "src/test/compile-fail/arc-rw-write-mode-shouldnt-escape.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fcompile-fail%2Farc-rw-write-mode-shouldnt-escape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fcompile-fail%2Farc-rw-write-mode-shouldnt-escape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Farc-rw-write-mode-shouldnt-escape.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,5 +1,5 @@\n // error-pattern: reference is not valid outside of its lifetime\n-use std;\n+extern mod std;\n use std::arc;\n fn main() {\n     let x = ~arc::RWARC(1);"}, {"sha": "f0a7c21460413d9da80b5061e41f9dfb0d0ea85d", "filename": "src/test/compile-fail/borrowck-borrowed-uniq-rvalue.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fcompile-fail%2Fborrowck-borrowed-uniq-rvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fcompile-fail%2Fborrowck-borrowed-uniq-rvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-borrowed-uniq-rvalue.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,5 +1,5 @@\n //buggy.rs\n-use std;\n+extern mod std;\n use std::map::HashMap;\n use std::map;\n "}, {"sha": "8f6318baa39b422140337f65ea805847630136a1", "filename": "src/test/compile-fail/crateresolve1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fcompile-fail%2Fcrateresolve1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fcompile-fail%2Fcrateresolve1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fcrateresolve1.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -3,7 +3,7 @@\n // aux-build:crateresolve1-3.rs\n // error-pattern:multiple matching crates for `crateresolve1`\n \n-use crateresolve1;\n+extern mod crateresolve1;\n \n fn main() {\n }"}, {"sha": "9f23d30fdde58d99907169efd7e811d9b22fff08", "filename": "src/test/compile-fail/crateresolve2.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fcompile-fail%2Fcrateresolve2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fcompile-fail%2Fcrateresolve2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fcrateresolve2.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -3,10 +3,10 @@\n // aux-build:crateresolve2-3.rs\n // error-pattern:using multiple versions of crate `crateresolve2`\n \n-use crateresolve2(vers = \"0.1\");\n+extern mod crateresolve2(vers = \"0.1\");\n \n mod m {\n-    use crateresolve2(vers = \"0.2\");\n+    extern mod crateresolve2(vers = \"0.2\");\n }\n \n fn main() {"}, {"sha": "cdfaf14615349d7c86b0960cdd1e1c2a3a29be4c", "filename": "src/test/compile-fail/crateresolve5.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fcompile-fail%2Fcrateresolve5.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fcompile-fail%2Fcrateresolve5.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fcrateresolve5.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -3,8 +3,8 @@\n // aux-build:crateresolve5-2.rs\n // error-pattern:mismatched types\n \n-use cr5_1 (name = \"crateresolve5\", vers = \"0.1\");\n-use cr5_2 (name = \"crateresolve5\", vers = \"0.2\");\n+extern mod cr5_1 (name = \"crateresolve5\", vers = \"0.1\");\n+extern mod cr5_2 (name = \"crateresolve5\", vers = \"0.2\");\n \n fn main() {\n     // Nominal types from two multiple versions of a crate are different types"}, {"sha": "65c30189438710ef4df9535829c5dff393051e56", "filename": "src/test/compile-fail/extfmt-not-enough-args.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fcompile-fail%2Fextfmt-not-enough-args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fcompile-fail%2Fextfmt-not-enough-args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fextfmt-not-enough-args.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,5 +1,5 @@\n // error-pattern:not enough arguments\n \n-use std;\n+extern mod std;\n \n fn main() { let s = fmt!(\"%s%s%s\", \"test\", \"test\"); }"}, {"sha": "c1f00fda1cf8e42f1a6387b5671c970cafed9a83", "filename": "src/test/compile-fail/extfmt-too-many-args.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fcompile-fail%2Fextfmt-too-many-args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fcompile-fail%2Fextfmt-too-many-args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fextfmt-too-many-args.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,5 +1,5 @@\n // error-pattern:too many arguments\n \n-use std;\n+extern mod std;\n \n fn main() { let s = fmt!(\"%s\", \"test\", \"test\"); }"}, {"sha": "c81e4982273dba1d4c13211342dfc1c0cc7c87ff", "filename": "src/test/compile-fail/for-loop-decl.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fcompile-fail%2Ffor-loop-decl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fcompile-fail%2Ffor-loop-decl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffor-loop-decl.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,5 +1,5 @@\n // error-pattern: mismatched types\n-use std;\n+extern mod std;\n use std::map::HashMap;\n use std::bitv;\n "}, {"sha": "1fca75f23dc14d2a28f0ad979911aba6448d21f5", "filename": "src/test/compile-fail/issue-3021-b.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fcompile-fail%2Fissue-3021-b.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fcompile-fail%2Fissue-3021-b.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-3021-b.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,4 +1,4 @@\n-use std;\n+extern mod std;\n \n fn siphash(k0 : u64) {\n "}, {"sha": "11917e0a7b25b63d74db3d6d3523994eb98ee500", "filename": "src/test/compile-fail/issue-3021-c.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fcompile-fail%2Fissue-3021-c.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fcompile-fail%2Fissue-3021-c.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-3021-c.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,4 +1,4 @@\n-use std;\n+extern mod std;\n \n fn siphash<T>() {\n "}, {"sha": "5240871f3bd1b36f0c476dc0bef15371b9b39e5f", "filename": "src/test/compile-fail/issue-3021-d.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fcompile-fail%2Fissue-3021-d.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fcompile-fail%2Fissue-3021-d.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-3021-d.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,4 +1,4 @@\n-use std;\n+extern mod std;\n \n trait siphash {\n     fn result() -> u64;"}, {"sha": "cad4720dce23429ad3472a6d718a68a77b174bcc", "filename": "src/test/compile-fail/issue-3021.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fcompile-fail%2Fissue-3021.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fcompile-fail%2Fissue-3021.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-3021.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,4 +1,4 @@\n-use std;\n+extern mod std;\n \n trait siphash {\n     fn reset();"}, {"sha": "9fb642e0d6625172415ba5cb9d0d27968ccdcdd4", "filename": "src/test/compile-fail/issue-511.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fcompile-fail%2Fissue-511.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fcompile-fail%2Fissue-511.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-511.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,4 +1,4 @@\n-use std;\n+extern mod std;\n use cmp::Eq;\n \n fn f<T:Eq>(&o: Option<T>) {"}, {"sha": "03241f6d0755f30a83a24387c60b0c2f93342f87", "filename": "src/test/compile-fail/map-types.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fcompile-fail%2Fmap-types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fcompile-fail%2Fmap-types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmap-types.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,4 +1,4 @@\n-use std;\n+extern mod std;\n use std::map;\n use std::map::HashMap;\n use std::map::Map;"}, {"sha": "ecfbb9a1f08f6a3192157847cb9fa6f482f9d460", "filename": "src/test/compile-fail/mutable-huh-ptr-assign.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fcompile-fail%2Fmutable-huh-ptr-assign.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fcompile-fail%2Fmutable-huh-ptr-assign.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmutable-huh-ptr-assign.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,4 +1,4 @@\n-use std;\n+extern mod std;\n \n fn main() {\n     unsafe fn f(&&v: *const int) {"}, {"sha": "c96f3f624f18495ab73a824a7cd40e5b29a2946a", "filename": "src/test/compile-fail/mutable-huh-variance-ptr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fcompile-fail%2Fmutable-huh-variance-ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fcompile-fail%2Fmutable-huh-variance-ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmutable-huh-variance-ptr.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,6 +1,6 @@\n // error-pattern: mismatched types\n \n-use std;\n+extern mod std;\n \n fn main() {\n     let a = ~[0];"}, {"sha": "83c10a7ccecc90986765d6841d9ec779ec81e86f", "filename": "src/test/compile-fail/no-capture-arc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fcompile-fail%2Fno-capture-arc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fcompile-fail%2Fno-capture-arc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fno-capture-arc.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,6 +1,6 @@\n // error-pattern: copying a noncopyable value\n \n-use std;\n+extern mod std;\n use std::arc;\n use comm::*;\n "}, {"sha": "005196bdb315075f4f4635a4bcbb1fe0b9a015e8", "filename": "src/test/compile-fail/no-reuse-move-arc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fcompile-fail%2Fno-reuse-move-arc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fcompile-fail%2Fno-reuse-move-arc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fno-reuse-move-arc.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,4 +1,4 @@\n-use std;\n+extern mod std;\n use std::arc;\n use comm::*;\n "}, {"sha": "aec053f38130c432a62316660f61acd8f7a2620b", "filename": "src/test/compile-fail/noexporttypeexe.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fcompile-fail%2Fnoexporttypeexe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fcompile-fail%2Fnoexporttypeexe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fnoexporttypeexe.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,6 +1,6 @@\n // aux-build:noexporttypelib.rs\n \n-use noexporttypelib;\n+extern mod noexporttypelib;\n \n fn main() {\n     // Here, the type returned by foo() is not exported."}, {"sha": "36582c83a1eb334ce8d0a5afba998f3b5d8e7f1a", "filename": "src/test/compile-fail/pattern-tyvar-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fcompile-fail%2Fpattern-tyvar-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fcompile-fail%2Fpattern-tyvar-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fpattern-tyvar-2.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,6 +1,6 @@\n // -*- rust -*-\n \n-use std;\n+extern mod std;\n use option::Some;\n \n // error-pattern: mismatched types"}, {"sha": "2c10d95daefb4ae8b2b8f5f1baa60612951bf8df", "filename": "src/test/compile-fail/pattern-tyvar.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fcompile-fail%2Fpattern-tyvar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fcompile-fail%2Fpattern-tyvar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fpattern-tyvar.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,5 +1,5 @@\n // -*- rust -*-\n-use std;\n+extern mod std;\n use option::Some;\n \n // error-pattern: mismatched types"}, {"sha": "f21351699fd441ecf56df0a70292f0e99272a792", "filename": "src/test/compile-fail/private-struct-field-cross-crate.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fcompile-fail%2Fprivate-struct-field-cross-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fcompile-fail%2Fprivate-struct-field-cross-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fprivate-struct-field-cross-crate.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,6 +1,6 @@\n // xfail-fast\n // aux-build:cci_class.rs\n-use cci_class;\n+extern mod cci_class;\n use cci_class::kitties::*;\n \n fn main() {"}, {"sha": "344c87538819f86b1de6c785fcb7e0fd2d796d2e", "filename": "src/test/compile-fail/qquote-1.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fcompile-fail%2Fqquote-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fcompile-fail%2Fqquote-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fqquote-1.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,7 +1,7 @@\n // xfail-pretty\n \n-use std;\n-use syntax;\n+extern mod std;\n+extern mod syntax;\n \n use io::*;\n "}, {"sha": "656d75c5a40d11f61ba43a3523799cef16c5ae1c", "filename": "src/test/compile-fail/qquote-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fcompile-fail%2Fqquote-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fcompile-fail%2Fqquote-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fqquote-2.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,6 +1,6 @@\n // xfail-pretty\n \n-use std;\n+extern mod std;\n use syntax;\n \n use std::io::*;"}, {"sha": "d7f6d42c74ed005d6012dc2245d10f29a16a0061", "filename": "src/test/compile-fail/regions-glb-free-free.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fcompile-fail%2Fregions-glb-free-free.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fcompile-fail%2Fregions-glb-free-free.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fregions-glb-free-free.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,5 +1,5 @@\n mod argparse {\n-    use std;\n+    extern mod std;\n \n     use either::{Either, Left, Right};\n "}, {"sha": "645cbad7f0bdc87bd0b8769a760357ada647ad87", "filename": "src/test/compile-fail/seq-args.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fcompile-fail%2Fseq-args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fcompile-fail%2Fseq-args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fseq-args.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,4 +1,4 @@\n-use std;\n+extern mod std;\n fn main() {\n trait seq { }\n "}, {"sha": "46715405ca34fbde5213a64e90b77abe69bc1b4f", "filename": "src/test/compile-fail/spawn-non-nil-fn.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fcompile-fail%2Fspawn-non-nil-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fcompile-fail%2Fspawn-non-nil-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fspawn-non-nil-fn.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,5 +1,5 @@\n // error-pattern: mismatched types\n \n-use std;\n+extern mod std;\n \n fn main() { task::spawn(fn~() -> int { 10 }); }"}, {"sha": "5989af7ca83cf3abaa1828618557ee62f24387cf", "filename": "src/test/compile-fail/sync-cond-shouldnt-escape.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fcompile-fail%2Fsync-cond-shouldnt-escape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fcompile-fail%2Fsync-cond-shouldnt-escape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fsync-cond-shouldnt-escape.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,5 +1,5 @@\n // error-pattern: reference is not valid outside of its lifetime\n-use std;\n+extern mod std;\n use std::sync;\n \n fn main() {"}, {"sha": "346c5da1366384ac0646ab075232827094e8bfc2", "filename": "src/test/compile-fail/sync-rwlock-cond-shouldnt-escape.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fcompile-fail%2Fsync-rwlock-cond-shouldnt-escape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fcompile-fail%2Fsync-rwlock-cond-shouldnt-escape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fsync-rwlock-cond-shouldnt-escape.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,5 +1,5 @@\n // error-pattern: reference is not valid outside of its lifetime\n-use std;\n+extern mod std;\n use std::sync;\n fn main() {\n     let x = ~sync::RWlock();"}, {"sha": "b8fbba14e9c6a9aec00ca65d6d2ce56d7e0f7fea", "filename": "src/test/compile-fail/sync-rwlock-read-mode-shouldnt-escape.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fcompile-fail%2Fsync-rwlock-read-mode-shouldnt-escape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fcompile-fail%2Fsync-rwlock-read-mode-shouldnt-escape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fsync-rwlock-read-mode-shouldnt-escape.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,5 +1,5 @@\n // error-pattern: cannot infer an appropriate lifetime\n-use std;\n+extern mod std;\n use std::sync;\n fn main() {\n     let x = ~sync::RWlock();"}, {"sha": "ff280b4e201f6da5a331e8055dd9313b86024d18", "filename": "src/test/compile-fail/sync-rwlock-write-mode-cond-shouldnt-escape.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fcompile-fail%2Fsync-rwlock-write-mode-cond-shouldnt-escape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fcompile-fail%2Fsync-rwlock-write-mode-cond-shouldnt-escape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fsync-rwlock-write-mode-cond-shouldnt-escape.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,5 +1,5 @@\n // error-pattern: reference is not valid outside of its lifetime\n-use std;\n+extern mod std;\n use std::sync;\n fn main() {\n     let x = ~sync::RWlock();"}, {"sha": "883d32951219f0cd8cdcdce7edc94048479e543c", "filename": "src/test/compile-fail/sync-rwlock-write-mode-shouldnt-escape.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fcompile-fail%2Fsync-rwlock-write-mode-shouldnt-escape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fcompile-fail%2Fsync-rwlock-write-mode-shouldnt-escape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fsync-rwlock-write-mode-shouldnt-escape.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,5 +1,5 @@\n // error-pattern: reference is not valid outside of its lifetime\n-use std;\n+extern mod std;\n use std::sync;\n fn main() {\n     let x = ~sync::RWlock();"}, {"sha": "80a36945097cd82b7d6ad74a142747f38e3f6e19", "filename": "src/test/compile-fail/tag-that-dare-not-speak-its-name.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fcompile-fail%2Ftag-that-dare-not-speak-its-name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fcompile-fail%2Ftag-that-dare-not-speak-its-name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftag-that-dare-not-speak-its-name.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -3,7 +3,7 @@\n \n #[no_core];\n \n-use core;\n+extern mod core;\n \n fn last<T: Copy>(v: ~[const T]) -> core::Option<T> {\n     fail;"}, {"sha": "43fb743be4c9fb46ab11d36e1d19c05f20039170", "filename": "src/test/compile-fail/use-meta-dup.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fcompile-fail%2Fuse-meta-dup.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fcompile-fail%2Fuse-meta-dup.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fuse-meta-dup.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,5 +1,5 @@\n // error-pattern:duplicate meta item `name`\n \n-use std(name = \"std\", name = \"nonstd\");\n+extern mod std(name = \"std\", name = \"nonstd\");\n \n fn main() { }"}, {"sha": "114e90dbf775c2ae9537bbed13d7d5ed9d7c5d70", "filename": "src/test/compile-fail/use-meta-mismatch.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fcompile-fail%2Fuse-meta-mismatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fcompile-fail%2Fuse-meta-mismatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fuse-meta-mismatch.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,5 +1,5 @@\n // error-pattern:can't find crate for `std`\n \n-use std(complex(meta(item)));\n+extern mod std(complex(meta(item)));\n \n fn main() { }"}, {"sha": "1e9b0ff301ba5ded55ea268ed46a9e5947949203", "filename": "src/test/compile-fail/use-meta.rc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fcompile-fail%2Fuse-meta.rc", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fcompile-fail%2Fuse-meta.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fuse-meta.rc?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,4 +1,4 @@\n // error-pattern:can't find crate for `std`\n \n-use std (name = \"std\",\n+extern mod std (name = \"std\",\n          vers = \"bogus\");\n\\ No newline at end of file"}, {"sha": "5aa650f10502a241eab21f824708c501d40ae698", "filename": "src/test/compile-fail/view-items-at-top.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fcompile-fail%2Fview-items-at-top.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Fcompile-fail%2Fview-items-at-top.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fview-items-at-top.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,6 +1,6 @@\n // xfail-test\n \n-use std;\n+extern mod std;\n \n fn f() {\n }"}, {"sha": "5e105031b58825ac85965408ce07b33f1f3a905f", "filename": "src/test/run-fail/fail-main.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-fail%2Ffail-main.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-fail%2Ffail-main.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Ffail-main.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,3 +1,3 @@\n // error-pattern:moop\n-use std;\n+extern mod std;\n fn main() { fail ~\"moop\"; }"}, {"sha": "2f5738d0f746181f5cf7a6c3efe4866ea37913ea", "filename": "src/test/run-fail/fmt-fail.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-fail%2Ffmt-fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-fail%2Ffmt-fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Ffmt-fail.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,4 +1,4 @@\n // error-pattern:meh\n-use std;\n+extern mod std;\n \n fn main() { let str_var: ~str = ~\"meh\"; fail fmt!(\"%s\", str_var); }"}, {"sha": "5596acc93789c19c7ec47f3bfbcc1fb1337f249d", "filename": "src/test/run-fail/for-each-loop-fail.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-fail%2Ffor-each-loop-fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-fail%2Ffor-each-loop-fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Ffor-each-loop-fail.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,3 +1,3 @@\n // error-pattern:moop\n-use std;\n+extern mod std;\n fn main() { for uint::range(0u, 10u) |_i| { fail ~\"moop\"; } }"}, {"sha": "6b39e323c6e5d89b70037dfffe329fe14034e66d", "filename": "src/test/run-fail/issue-2156.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-fail%2Fissue-2156.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-fail%2Fissue-2156.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fissue-2156.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,6 +1,6 @@\n // error-pattern:explicit failure\n // Don't double free the string\n-use std;\n+extern mod std;\n use io::Reader;\n \n fn main() {"}, {"sha": "f0bbc9d1ac614e71c7306e4ca4bc5c2bafc7fde3", "filename": "src/test/run-fail/issue-2444.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-fail%2Fissue-2444.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-fail%2Fissue-2444.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fissue-2444.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,6 +1,6 @@\n // error-pattern:explicit failure\n \n-use std;\n+extern mod std;\n use std::arc;\n \n enum e<T: Const Send> { e(arc::ARC<T>) }"}, {"sha": "1e29f78aec5402eec13fecdf8f3ee097fa64ae3c", "filename": "src/test/run-fail/linked-failure.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-fail%2Flinked-failure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-fail%2Flinked-failure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Flinked-failure.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,7 +1,7 @@\n // -*- rust -*-\n \n // error-pattern:1 == 2\n-use std;\n+extern mod std;\n use comm::Port;\n use comm::recv;\n "}, {"sha": "e67f18107dc7d2cd8dd83daea3bb40a8add07134", "filename": "src/test/run-fail/linked-failure2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-fail%2Flinked-failure2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-fail%2Flinked-failure2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Flinked-failure2.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,7 +1,7 @@\n // -*- rust -*-\n \n // error-pattern:fail\n-use std;\n+extern mod std;\n use comm::Chan;\n use comm::Port;\n use comm::recv;"}, {"sha": "a3f5b6e4d37a8eeb3a093045878d4a845bfb183c", "filename": "src/test/run-fail/linked-failure3.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-fail%2Flinked-failure3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-fail%2Flinked-failure3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Flinked-failure3.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,7 +1,7 @@\n // -*- rust -*-\n \n // error-pattern:fail\n-use std;\n+extern mod std;\n use comm::Port;\n use comm::recv;\n "}, {"sha": "92ab06b73462c2af1f23773f950a9b5be3aa21aa", "filename": "src/test/run-fail/linked-failure4.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-fail%2Flinked-failure4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-fail%2Flinked-failure4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Flinked-failure4.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,6 +1,6 @@\n // -*- rust -*-\n // error-pattern:1 == 2\n-use std;\n+extern mod std;\n use comm::Chan;\n use comm::Port;\n use comm::recv;"}, {"sha": "83499baf0d005eef069c0de06f9335c92a47a1ba", "filename": "src/test/run-fail/morestack2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-fail%2Fmorestack2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-fail%2Fmorestack2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fmorestack2.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -5,7 +5,7 @@\n // See the hack in upcall_call_shim_on_c_stack where it messes\n // with the stack limit.\n \n-use std;\n+extern mod std;\n \n extern mod rustrt {\n     fn last_os_error() -> ~str;"}, {"sha": "120d70d9f928c55889363bcbe3bc53df7083e253", "filename": "src/test/run-fail/morestack3.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-fail%2Fmorestack3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-fail%2Fmorestack3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fmorestack3.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -2,7 +2,7 @@\n \n // Just testing unwinding\n \n-use std;\n+extern mod std;\n \n fn getbig_and_fail(&&i: int) {\n     let _r = and_then_get_big_again(5);"}, {"sha": "358e59a1265d0bc70ea08b70de7316efdd079145", "filename": "src/test/run-fail/morestack4.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-fail%2Fmorestack4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-fail%2Fmorestack4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fmorestack4.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -2,7 +2,7 @@\n \n // Just testing unwinding\n \n-use std;\n+extern mod std;\n \n fn getbig_and_fail(&&i: int) {\n     let r = and_then_get_big_again(5);"}, {"sha": "7ea778bd1907e0a3a1b9a3916f062507eeca393b", "filename": "src/test/run-fail/port-type.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-fail%2Fport-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-fail%2Fport-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fport-type.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,5 +1,5 @@\n // error-pattern:meep\n-use std;\n+extern mod std;\n use comm::Chan;\n use comm::Port;\n use comm::send;"}, {"sha": "5991f0921eab09507781f5c0af2a513eaac97c6f", "filename": "src/test/run-fail/run-unexported-tests.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-fail%2Frun-unexported-tests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-fail%2Frun-unexported-tests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Frun-unexported-tests.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,7 +1,7 @@\n // error-pattern:runned an unexported test\n // compile-flags:--test\n \n-use std;\n+extern mod std;\n \n mod m {\n     export exported;"}, {"sha": "4aabe92bdb10c5b490fa848aebc3c4d36a66c215", "filename": "src/test/run-fail/spawnfail.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-fail%2Fspawnfail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-fail%2Fspawnfail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fspawnfail.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,6 +1,6 @@\n // xfail-win32\n // error-pattern:explicit\n-use std;\n+extern mod std;\n \n // We don't want to see any invalid reads\n fn main() {"}, {"sha": "047b7bffd9bae81480082d62220fb5edcfa9a2b9", "filename": "src/test/run-fail/task-comm-recv-block.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-fail%2Ftask-comm-recv-block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-fail%2Ftask-comm-recv-block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Ftask-comm-recv-block.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,6 +1,6 @@\n // error-pattern:goodfail\n \n-use std;\n+extern mod std;\n \n fn goodfail() {\n     task::yield();"}, {"sha": "2a8d98602a0f4594f266ba9ad0dc8226638aad0f", "filename": "src/test/run-fail/unwind-misc-1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-fail%2Funwind-misc-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-fail%2Funwind-misc-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Funwind-misc-1.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,6 +1,6 @@\n // error-pattern:fail\n \n-use std;\n+extern mod std;\n use std::map;\n use std::map::HashMap;\n "}, {"sha": "4e97d2f903f51bcfcd2aaa7b7e3cfaf3e8c6cd60", "filename": "src/test/run-fail/zip-different-lengths.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-fail%2Fzip-different-lengths.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-fail%2Fzip-different-lengths.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fzip-different-lengths.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,7 +1,7 @@\n // In this case, the code should compile but\n // the assert should fail at runtime\n // error-pattern:Assertion same_length(chars, ints) failed\n-use std;\n+extern mod std;\n use vec::{same_length, zip};\n \n fn enum_chars(start: u8, end: u8) -> ~[char] {"}, {"sha": "afd9054c51f3c7698825cd8dc87edcfc86d5a2eb", "filename": "src/test/run-pass-fulldeps/qquote.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass-fulldeps%2Fqquote.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass-fulldeps%2Fqquote.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fqquote.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,7 +1,7 @@\n // xfail-pretty\n \n-use std;\n-use syntax;\n+extern mod std;\n+extern mod syntax;\n \n use io::*;\n "}, {"sha": "b9db2a960dd7e664463dcd588c30601de1365397", "filename": "src/test/run-pass/acyclic-unwind.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Facyclic-unwind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Facyclic-unwind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Facyclic-unwind.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,7 +1,7 @@\n // xfail-test\n // -*- rust -*-\n \n-use std;\n+extern mod std;\n \n fn f(c: comm::_chan<int>) {\n     type t = {_0: int, _1: int, _2: int};"}, {"sha": "e0a2abb90e126b6688ec4703dc8cfb1cfdb5dd2e", "filename": "src/test/run-pass/alias-uninit-value.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Falias-uninit-value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Falias-uninit-value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Falias-uninit-value.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,7 +1,7 @@\n \n \n // Regression test for issue #374\n-use std;\n+extern mod std;\n use option::None;\n \n enum sty { ty_nil, }"}, {"sha": "1625dd083a24518fafecebb1025fc302b84e6e34", "filename": "src/test/run-pass/alt-join.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Falt-join.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Falt-join.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Falt-join.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,5 +1,5 @@\n \n-use std;\n+extern mod std;\n \n fn foo<T>(y: Option<T>) {\n     let mut x: int;"}, {"sha": "470bd3ed5292976a6e68f5b28d4b13ccf43f1ed9", "filename": "src/test/run-pass/anon-extern-mod-cross-crate-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fanon-extern-mod-cross-crate-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fanon-extern-mod-cross-crate-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fanon-extern-mod-cross-crate-2.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,6 +1,6 @@\n // xfail-fast\n // aux-build:anon-extern-mod-cross-crate-1.rs\n-use anonexternmod;\n+extern mod anonexternmod;\n \n use anonexternmod::*;\n "}, {"sha": "3c0e5f6b4b5e7f276e3f2f3fa739684d00e2788b", "filename": "src/test/run-pass/attr-before-view-item.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fattr-before-view-item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fattr-before-view-item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fattr-before-view-item.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,7 +1,7 @@\n // error-pattern:expected item\n \n #[foo = \"bar\"]\n-use std;\n+extern mod std;\n \n fn main() {\n }"}, {"sha": "e34bcd1ed4470cfb6a6c075ebb95fd0e408f7b10", "filename": "src/test/run-pass/attr-before-view-item2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fattr-before-view-item2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fattr-before-view-item2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fattr-before-view-item2.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -2,7 +2,7 @@\n \n mod m {\n   #[foo = \"bar\"]\n-  use std;\n+  extern mod std;\n }\n \n fn main() {"}, {"sha": "fcb1adb95cbffbd07bdceaeffe7d540210f992e8", "filename": "src/test/run-pass/auto_serialize.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fauto_serialize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fauto_serialize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fauto_serialize.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,4 +1,4 @@\n-use std;\n+extern mod std;\n \n // These tests used to be separate files, but I wanted to refactor all\n // the common code."}, {"sha": "8f467e24e1b7ec253db540be0707c3c910804ef0", "filename": "src/test/run-pass/basic-1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fbasic-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fbasic-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbasic-1.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,6 +1,6 @@\n // -*- rust -*-\n \n-use std;\n+extern mod std;\n use comm::Chan;\n use comm::Port;\n use comm::send;"}, {"sha": "b5130a1002781f6035dcfbea9be5d07c368888c9", "filename": "src/test/run-pass/basic-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fbasic-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fbasic-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbasic-2.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,6 +1,6 @@\n // -*- rust -*-\n \n-use std;\n+extern mod std;\n use comm::Port;\n use comm::send;\n use comm::Chan;"}, {"sha": "a72c9058d106ed6d268c533360380a723d836c44", "filename": "src/test/run-pass/basic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fbasic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fbasic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbasic.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,6 +1,6 @@\n // -*- rust -*-\n \n-use std;\n+extern mod std;\n use comm::send;\n use comm::Chan;\n use comm::recv;"}, {"sha": "c3eab8e19006e07330615b40a873bceaeef721a8", "filename": "src/test/run-pass/bind-by-move.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fbind-by-move.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fbind-by-move.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbind-by-move.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,5 +1,5 @@\n // xfail-test\n-use std;\n+extern mod std;\n use std::arc;\n fn dispose(+_x: arc::ARC<bool>) unsafe { }\n "}, {"sha": "3b97d2e5598b0eb586193e7c32634ae6f49920c9", "filename": "src/test/run-pass/binops.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fbinops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fbinops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbinops.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,6 +1,6 @@\n // Binop corner cases\n \n-use std;\n+extern mod std;\n use unsafe::reinterpret_cast;\n \n fn test_nil() {"}, {"sha": "07efc67c7cfb74945abb1cf51bee89de0023b592", "filename": "src/test/run-pass/bitv-perf-test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fbitv-perf-test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fbitv-perf-test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbitv-perf-test.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,4 +1,4 @@\n-use std;\n+extern mod std;\n use std::bitv::*;\n \n fn bitv_test() -> bool {"}, {"sha": "6776129cc7de20cbd64b7321c224c614432cbcaa", "filename": "src/test/run-pass/block-arg-call-as.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fblock-arg-call-as.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fblock-arg-call-as.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fblock-arg-call-as.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,4 +1,4 @@\n-use std;\n+extern mod std;\n \n fn asSendfn( f : fn~()->uint ) -> uint {\n    return f();"}, {"sha": "332afc65f7202d96097b55336ae2caadf6624715", "filename": "src/test/run-pass/block-vec-map2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fblock-vec-map2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fblock-vec-map2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fblock-vec-map2.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,4 +1,4 @@\n-use std;\n+extern mod std;\n \n fn main() {\n     let v ="}, {"sha": "81c26f904862c93a0ec8d1e0864e3b96141a4c91", "filename": "src/test/run-pass/c-stack-returning-int64.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fc-stack-returning-int64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fc-stack-returning-int64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fc-stack-returning-int64.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,4 +1,4 @@\n-use std;\n+extern mod std;\n \n #[abi = \"cdecl\"]\n #[nolink]"}, {"sha": "0a9d91efb23da3ecfb06df4c295f747a14ff524c", "filename": "src/test/run-pass/cci_borrow.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fcci_borrow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fcci_borrow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcci_borrow.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,7 +1,7 @@\n // xfail-fast - check-fast doesn't understand aux-build\n // aux-build:cci_borrow_lib.rs\n \n-use cci_borrow_lib;\n+extern mod cci_borrow_lib;\n use cci_borrow_lib::foo;\n \n fn main() {"}, {"sha": "daef6e1b2b6aa89c288c5ddfd5226be1cbac90df", "filename": "src/test/run-pass/cci_capture_clause.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fcci_capture_clause.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fcci_capture_clause.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcci_capture_clause.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -4,7 +4,7 @@\n // This test makes sure we can do cross-crate inlining on functions\n // that use capture clauses.\n \n-use cci_capture_clause;\n+extern mod cci_capture_clause;\n \n use comm::recv;\n "}, {"sha": "5faaa50eb11d5b7f9209be17f39bb1867c80d18a", "filename": "src/test/run-pass/cci_impl_exe.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fcci_impl_exe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fcci_impl_exe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcci_impl_exe.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,7 +1,7 @@\n // xfail-fast - check-fast doesn't understand aux-build\n // aux-build:cci_impl_lib.rs\n \n-use cci_impl_lib;\n+extern mod cci_impl_lib;\n use cci_impl_lib::uint_helpers;\n \n fn main() {"}, {"sha": "973732b18c2cb67cc557aec4fef5fab22c154230", "filename": "src/test/run-pass/cci_iter_exe.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fcci_iter_exe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fcci_iter_exe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcci_iter_exe.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,7 +1,7 @@\n // xfail-fast - check-fast doesn't understand aux-build\n // aux-build:cci_iter_lib.rs\n \n-use cci_iter_lib;\n+extern mod cci_iter_lib;\n \n fn main() {\n     //let bt0 = sys::rusti::frame_address(1u32);"}, {"sha": "a5d62b9571293dc0a1ca82cd22912fe5a7e7bf8b", "filename": "src/test/run-pass/cci_nested_exe.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fcci_nested_exe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fcci_nested_exe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcci_nested_exe.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,7 +1,7 @@\n // xfail-fast - check-fast doesn't understand aux-build\n // aux-build:cci_nested_lib.rs\n \n-use cci_nested_lib;\n+extern mod cci_nested_lib;\n use cci_nested_lib::*;\n \n fn main() {"}, {"sha": "a4822f41ad45605557618f4b15472ddadeb12a03", "filename": "src/test/run-pass/cci_no_inline_exe.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fcci_no_inline_exe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fcci_no_inline_exe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcci_no_inline_exe.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,7 +1,7 @@\n // xfail-fast - check-fast doesn't understand aux-build\n // aux-build:cci_no_inline_lib.rs\n \n-use cci_no_inline_lib;\n+extern mod cci_no_inline_lib;\n use cci_no_inline_lib::iter;\n \n fn main() {"}, {"sha": "b0a27a9a97e5e90227be8d86467f3b3a2d12c24c", "filename": "src/test/run-pass/chan-leak.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fchan-leak.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fchan-leak.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fchan-leak.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,6 +1,6 @@\n // Issue #763\n \n-use std;\n+extern mod std;\n use comm::Chan;\n use comm::send;\n use comm::Port;"}, {"sha": "e25b91a5287a591c120df25c9aac89dfa723325b", "filename": "src/test/run-pass/child-outlives-parent.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fchild-outlives-parent.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fchild-outlives-parent.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fchild-outlives-parent.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,6 +1,6 @@\n // Reported as issue #126, child leaks the string.\n \n-use std;\n+extern mod std;\n \n fn child2(&&s: ~str) { }\n "}, {"sha": "2532e5191185817c34f68097b88eacdd2b11ca1f", "filename": "src/test/run-pass/class-cast-to-trait-cross-crate-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fclass-cast-to-trait-cross-crate-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fclass-cast-to-trait-cross-crate-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fclass-cast-to-trait-cross-crate-2.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,6 +1,6 @@\n // xfail-fast\n // aux-build:cci_class_cast.rs\n-use cci_class_cast;\n+extern mod cci_class_cast;\n use to_str::ToStr;\n use cci_class_cast::kitty::*;\n "}, {"sha": "8599f6f36f1318a9932572fefcc747bd965ee052", "filename": "src/test/run-pass/class-impl-parameterized-trait.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fclass-impl-parameterized-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fclass-impl-parameterized-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fclass-impl-parameterized-trait.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,7 +1,7 @@\n // xfail-test\n // xfail-fast\n \n-use std;\n+extern mod std;\n use std::map::*;\n \n class cat : map<int, bool> {"}, {"sha": "b304eb677a3448563e1e87a537ac5ac3af88383d", "filename": "src/test/run-pass/class-impl-very-parameterized-trait.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fclass-impl-very-parameterized-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fclass-impl-very-parameterized-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fclass-impl-very-parameterized-trait.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,4 +1,4 @@\n-use std;\n+extern mod std;\n use std::map::*;\n \n enum cat_type { tuxedo, tabby, tortoiseshell }"}, {"sha": "21ae24b70372690226fa35cac40d4698f6f54d71", "filename": "src/test/run-pass/class-implement-trait-cross-crate.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fclass-implement-trait-cross-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fclass-implement-trait-cross-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fclass-implement-trait-cross-crate.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,6 +1,6 @@\n // xfail-fast\n // aux-build:cci_class_trait.rs\n-use cci_class_trait;\n+extern mod cci_class_trait;\n use cci_class_trait::animals::*;\n \n struct cat {"}, {"sha": "5d27c1e721cf4b943c9854b897ad701ddceb4f55", "filename": "src/test/run-pass/class-implements-multiple-traits.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fclass-implements-multiple-traits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fclass-implements-multiple-traits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fclass-implements-multiple-traits.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,6 +1,6 @@\n // xfail-test\n \n-use std;\n+extern mod std;\n use std::map::*;\n use vec::*;\n use dvec::{dvec, extensions};"}, {"sha": "60a9af4c44c670c278881694892a68c79653c67b", "filename": "src/test/run-pass/class-method-cross-crate.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fclass-method-cross-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fclass-method-cross-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fclass-method-cross-crate.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,6 +1,6 @@\n // xfail-fast\n // aux-build:cci_class_2.rs\n-use cci_class_2;\n+extern mod cci_class_2;\n use cci_class_2::kitties::*;\n \n fn main() {"}, {"sha": "ed46963221aa9029c775807c79add696618d97ff", "filename": "src/test/run-pass/class-methods-cross-crate.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fclass-methods-cross-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fclass-methods-cross-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fclass-methods-cross-crate.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,6 +1,6 @@\n // xfail-fast\n // aux-build:cci_class_3.rs\n-use cci_class_3;\n+extern mod cci_class_3;\n use cci_class_3::kitties::*;\n \n fn main() {"}, {"sha": "2b5b347558924c06ed6870f2487f1c41087f3e51", "filename": "src/test/run-pass/class-poly-methods-cross-crate.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fclass-poly-methods-cross-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fclass-poly-methods-cross-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fclass-poly-methods-cross-crate.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,6 +1,6 @@\n // xfail-fast\n // aux-build:cci_class_6.rs\n-use cci_class_6;\n+extern mod cci_class_6;\n use cci_class_6::kitties::*;\n \n fn main() {"}, {"sha": "34c40550e07f97fde07aad4de905657a9f728877", "filename": "src/test/run-pass/class-trait-bounded-param.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fclass-trait-bounded-param.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fclass-trait-bounded-param.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fclass-trait-bounded-param.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,6 +1,6 @@\n // xfail-test\n \n-use std;\n+extern mod std;\n use std::map::{map, hashmap, int_hash};\n \n class keys<K: Copy, V: Copy, M: Copy map<K,V>>"}, {"sha": "242176fff94b8a09b1d2acb13df5a81a6bdb8c3f", "filename": "src/test/run-pass/classes-cross-crate.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fclasses-cross-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fclasses-cross-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fclasses-cross-crate.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,6 +1,6 @@\n // xfail-fast\n // aux-build:cci_class_4.rs\n-use cci_class_4;\n+extern mod cci_class_4;\n use cci_class_4::kitties::*;\n \n fn main() {"}, {"sha": "dc4830f63d206681ead68ef22d30f7140abe8cdf", "filename": "src/test/run-pass/classes-simple-cross-crate.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fclasses-simple-cross-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fclasses-simple-cross-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fclasses-simple-cross-crate.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,6 +1,6 @@\n // xfail-fast\n // aux-build:cci_class.rs\n-use cci_class;\n+extern mod cci_class;\n use cci_class::kitties::*;\n \n fn main() {"}, {"sha": "b4954577587ea184512df0cda088758a5c8efc7b", "filename": "src/test/run-pass/clone-with-exterior.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fclone-with-exterior.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fclone-with-exterior.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fclone-with-exterior.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,6 +1,6 @@\n //xfail-test\n \n-use std;\n+extern mod std;\n \n fn f(x : @{a:int, b:int}) {\n     assert (x.a == 10);"}, {"sha": "b41152f31588d9146d5633620704bbddfa691247", "filename": "src/test/run-pass/comm.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fcomm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fcomm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcomm.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,6 +1,6 @@\n // -*- rust -*-\n \n-use std;\n+extern mod std;\n use comm::Chan;\n use comm::send;\n use comm::recv;"}, {"sha": "89316d8ea77ef671e74c2c64d569b64b77c228e3", "filename": "src/test/run-pass/crateresolve1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fcrateresolve1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fcrateresolve1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcrateresolve1.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -3,7 +3,7 @@\n // aux-build:crateresolve1-2.rs\n // aux-build:crateresolve1-3.rs\n \n-use crateresolve1(vers = \"0.2\");\n+extern mod crateresolve1(vers = \"0.2\");\n \n fn main() {\n     assert crateresolve1::f() == 20;"}, {"sha": "c05254a80abddb5ede32d4177963850cb50d2543", "filename": "src/test/run-pass/crateresolve2.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fcrateresolve2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fcrateresolve2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcrateresolve2.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -4,17 +4,17 @@\n // aux-build:crateresolve2-3.rs\n \n mod a {\n-    use crateresolve2(vers = \"0.1\");\n+    extern mod crateresolve2(vers = \"0.1\");\n     fn f() { assert crateresolve2::f() == 10; }\n }\n \n mod b {\n-    use crateresolve2(vers = \"0.2\");\n+    extern mod crateresolve2(vers = \"0.2\");\n     fn f() { assert crateresolve2::f() == 20; }\n }\n \n mod c {\n-    use crateresolve2(vers = \"0.3\");\n+    extern mod crateresolve2(vers = \"0.3\");\n     fn f() { assert crateresolve2::f() == 30; }\n }\n "}, {"sha": "57b8c1bfed86be0141f1854d7171eba5e3f34229", "filename": "src/test/run-pass/crateresolve3.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fcrateresolve3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fcrateresolve3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcrateresolve3.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -6,12 +6,12 @@\n // as long as no name collision on invoked functions.\n \n mod a {\n-    use crateresolve3(vers = \"0.1\");\n+    extern mod crateresolve3(vers = \"0.1\");\n     fn f() { assert crateresolve3::f() == 10; }\n }\n \n mod b {\n-    use crateresolve3(vers = \"0.2\");\n+    extern mod crateresolve3(vers = \"0.2\");\n     fn f() { assert crateresolve3::g() == 20; }\n }\n "}, {"sha": "28512dc0bdb43f081c268f3f591c32ee6b5237ba", "filename": "src/test/run-pass/crateresolve4.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fcrateresolve4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fcrateresolve4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcrateresolve4.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -5,12 +5,12 @@\n // aux-build:crateresolve4b-2.rs\n \n mod a {\n-    use crateresolve4b(vers = \"0.1\");\n+    extern mod crateresolve4b(vers = \"0.1\");\n     fn f() { assert crateresolve4b::f() == 20; }\n }\n \n mod b {\n-    use crateresolve4b(vers = \"0.2\");\n+    extern mod crateresolve4b(vers = \"0.2\");\n     fn f() { assert crateresolve4b::g() == 10; }\n }\n "}, {"sha": "fa00dc63f9b11c0d9a6a7467e84d3cd6d142d465", "filename": "src/test/run-pass/crateresolve5.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fcrateresolve5.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fcrateresolve5.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcrateresolve5.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -2,8 +2,8 @@\n // aux-build:crateresolve5-1.rs\n // aux-build:crateresolve5-2.rs\n \n-use cr5_1 (name = \"crateresolve5\", vers = \"0.1\");\n-use cr5_2 (name = \"crateresolve5\", vers = \"0.2\");\n+extern mod cr5_1 (name = \"crateresolve5\", vers = \"0.1\");\n+extern mod cr5_2 (name = \"crateresolve5\", vers = \"0.2\");\n \n fn main() {\n     // Structural types can be used between two versions of the same crate"}, {"sha": "3bd6884ec1221db29a9f06cbb16aa727e0ae28f0", "filename": "src/test/run-pass/crateresolve6.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fcrateresolve6.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fcrateresolve6.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcrateresolve6.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -4,8 +4,8 @@\n // error-pattern:mismatched types\n \n // These both have the same version but differ in other metadata\n-use cr6_1 (name = \"crateresolve_calories\", vers = \"0.1\", calories=\"100\");\n-use cr6_2 (name = \"crateresolve_calories\", vers = \"0.1\", calories=\"200\");\n+extern mod cr6_1 (name = \"crateresolve_calories\", vers = \"0.1\", calories=\"100\");\n+extern mod cr6_2 (name = \"crateresolve_calories\", vers = \"0.1\", calories=\"200\");\n \n fn main() {\n     assert cr6_1::f() == 100;"}, {"sha": "a45a455beb045182300c2fe6936a0ba468bada17", "filename": "src/test/run-pass/crateresolve7.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fcrateresolve7.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fcrateresolve7.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcrateresolve7.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -3,7 +3,7 @@\n // aux-build:crateresolve_calories-2.rs\n // aux-build:crateresolve7x.rs\n \n-use crateresolve7x;\n+extern mod crateresolve7x;\n \n fn main() {\n     assert crateresolve7x::a::f() == 100;"}, {"sha": "07ce5cb63ac679a1fe991312a80fa361a890dbea", "filename": "src/test/run-pass/decl-with-recv.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fdecl-with-recv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fdecl-with-recv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fdecl-with-recv.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,6 +1,6 @@\n // -*- rust -*-\n \n-use std;\n+extern mod std;\n use comm::Port;\n use comm::Chan;\n use comm::send;"}, {"sha": "ec032506403b47a490d385d5dbf668f1ff5f7687", "filename": "src/test/run-pass/explicit-self-generic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fexplicit-self-generic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fexplicit-self-generic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fexplicit-self-generic.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,4 +1,4 @@\n-use std;\n+extern mod std;\n \n /**\n  * A function that returns a hash of a value"}, {"sha": "e508cd4007cd93bdc3e5bc0b6ab8f2e248fd2a97", "filename": "src/test/run-pass/extern-crosscrate.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fextern-crosscrate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fextern-crosscrate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fextern-crosscrate.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,7 +1,7 @@\n // xfail-fast\n //aux-build:extern-crosscrate-source.rs\n \n-use externcallback(vers = \"0.1\");\n+extern mod externcallback(vers = \"0.1\");\n \n fn fact(n: uint) -> uint {\n     debug!(\"n = %?\", n);"}, {"sha": "92313c650d4e9931665cc7eba5c5cd50cfa7eacd", "filename": "src/test/run-pass/float-nan.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Ffloat-nan.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Ffloat-nan.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ffloat-nan.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,4 +1,4 @@\n-use std;\n+extern mod std;\n \n fn main() {\n   let nan = float::NaN;"}, {"sha": "95a3afe316a294de951b91722814f79fae6e75fc", "filename": "src/test/run-pass/fn-bare-size.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Ffn-bare-size.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Ffn-bare-size.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ffn-bare-size.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,6 +1,6 @@\n // xfail-test\n \n-use std;\n+extern mod std;\n \n fn main() {\n     // Bare functions should just be a pointer"}, {"sha": "77cb6eaa74e1b7f64aab7d394be5eb31458e3a4f", "filename": "src/test/run-pass/foreign-fn-linkname.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fforeign-fn-linkname.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fforeign-fn-linkname.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fforeign-fn-linkname.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,4 +1,4 @@\n-use std;\n+extern mod std;\n \n \n #[nolink]"}, {"sha": "285c46f2d567e13e69a9bcf23cddf7dcab88d311", "filename": "src/test/run-pass/hashmap-memory.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fhashmap-memory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fhashmap-memory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fhashmap-memory.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -4,7 +4,7 @@\n    This originally came from the word-count benchmark.\n */\n \n-use std;\n+extern mod std;\n \n use option::Some;\n use option::None;"}, {"sha": "c1746a3d4446bce4b56703fba43204d0b1eeee10", "filename": "src/test/run-pass/import-glob-crate.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fimport-glob-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fimport-glob-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fimport-glob-crate.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,5 +1,5 @@\n \n-use std;\n+extern mod std;\n use vec::*;\n \n fn main() {"}, {"sha": "07b7e2111ef55dbb0e4a5372747c159fb88ce6f8", "filename": "src/test/run-pass/import-in-block.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fimport-in-block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fimport-in-block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fimport-in-block.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,4 +1,4 @@\n-use std;\n+extern mod std;\n \n fn main() {\n     use vec::to_mut;"}, {"sha": "fcc20fea9baeed656ba7d31621a965ef02fe60b4", "filename": "src/test/run-pass/infinite-loops.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Finfinite-loops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Finfinite-loops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Finfinite-loops.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -4,7 +4,7 @@\n */\n // xfail-test\n \n-use std;\n+extern mod std;\n use task::join;\n \n fn loop(n: int) {"}, {"sha": "207c196c3802e2532ac195aaaca69887fd58ec0c", "filename": "src/test/run-pass/intrinsic-atomics-cc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fintrinsic-atomics-cc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fintrinsic-atomics-cc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fintrinsic-atomics-cc.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,7 +1,7 @@\n // xfail-fast - check-fast doesn't understand aux-build\n // aux-build:cci_intrinsic.rs\n \n-use cci_intrinsic;\n+extern mod cci_intrinsic;\n use cci_intrinsic::atomic_xchg;\n \n fn main() {"}, {"sha": "a054077ad26c06d421d2a972018100e16696eeda", "filename": "src/test/run-pass/invoke-external-foreign.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Finvoke-external-foreign.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Finvoke-external-foreign.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Finvoke-external-foreign.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -5,7 +5,7 @@\n // successfully (and safely) invoke external, cdecl\n // functions from outside the crate.\n \n-use foreign_lib;\n+extern mod foreign_lib;\n \n fn main() {\n     let foo = foreign_lib::rustrt::last_os_error();"}, {"sha": "d4655280cddf45368b1655cd133aee7f79d13763", "filename": "src/test/run-pass/issue-1112.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fissue-1112.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fissue-1112.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-1112.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,7 +1,7 @@\n // Issue #1112\n // Alignment of interior pointers to dynamic-size types\n \n-use std;\n+extern mod std;\n use ptr::addr_of;\n \n type x<T> = {"}, {"sha": "d9d4cd27cf122364655657492d69af3a96e5ab2e", "filename": "src/test/run-pass/issue-1696.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fissue-1696.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fissue-1696.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-1696.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,4 +1,4 @@\n-use std;\n+extern mod std;\n use std::map;\n use std::map::HashMap;\n "}, {"sha": "0f98c6e97b3b49e1d8aa975c8ba1513353089f82", "filename": "src/test/run-pass/issue-2101.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fissue-2101.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fissue-2101.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-2101.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,5 +1,5 @@\n // xfail-test\n-use std;\n+extern mod std;\n use std::arena;\n use std::arena::Arena;\n "}, {"sha": "b663853d5bf95dd160bf2a868d86ae0c95ca95c8", "filename": "src/test/run-pass/issue-2242-d.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fissue-2242-d.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fissue-2242-d.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-2242-d.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -3,9 +3,9 @@\n // aux-build:issue_2242_b.rs\n // aux-build:issue_2242_c.rs\n \n-use a;\n-use b;\n-use c;\n+extern mod a;\n+extern mod b;\n+extern mod c;\n \n use a::to_strz;\n "}, {"sha": "22b9fb7ed2fc7d734a7399233dafef72d7184e0a", "filename": "src/test/run-pass/issue-2316-c.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fissue-2316-c.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fissue-2316-c.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-2316-c.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -2,7 +2,7 @@\n // aux-build:issue_2316_a.rs\n // aux-build:issue_2316_b.rs\n \n-use issue_2316_b;\n+extern mod issue_2316_b;\n use issue_2316_b::cloth;\n \n fn main() {"}, {"sha": "8f46756756c2ac6181c80f01f63cf2d21cd4848e", "filename": "src/test/run-pass/issue-2380-b.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fissue-2380-b.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fissue-2380-b.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-2380-b.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,7 +1,7 @@\n // xfail-fast\n // aux-build:issue-2380.rs\n \n-use a;\n+extern mod a;\n \n fn main() {\n     a::f::<()>();"}, {"sha": "5c56762dfa15f4b578e924238e9e41e35aeffade", "filename": "src/test/run-pass/issue-2383.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fissue-2383.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fissue-2383.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-2383.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,4 +1,4 @@\n-use std;\n+extern mod std;\n use std::deque;\n use std::deque::Deque;\n "}, {"sha": "d36108fed52fee933619c4c155fc3089b4b5b58a", "filename": "src/test/run-pass/issue-2414-c.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fissue-2414-c.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fissue-2414-c.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-2414-c.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -2,6 +2,6 @@\n // aux-build:issue-2414-a.rs\n // aux-build:issue-2414-b.rs\n \n-use b;\n+extern mod b;\n \n fn main() {}"}, {"sha": "5ff9004f4e9f252e2ec62ede4cb2d53c10d230b3", "filename": "src/test/run-pass/issue-2472.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fissue-2472.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fissue-2472.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-2472.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,7 +1,7 @@\n // aux-build:issue_2472_b.rs\n // xfail-fast\n \n-use issue_2472_b;\n+extern mod issue_2472_b;\n \n use issue_2472_b::{S, T};\n "}, {"sha": "0f6a307d9cc977b317b4f486e33e0207834ab5a2", "filename": "src/test/run-pass/issue-2526-a.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fissue-2526-a.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fissue-2526-a.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-2526-a.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,7 +1,7 @@\n // xfail-fast\n // aux-build:issue-2526.rs\n \n-use issue_2526;\n+extern mod issue_2526;\n use issue_2526::*;\n \n fn main() {}"}, {"sha": "a9bbca45070652b611b9f2c9d2b79884fd18099f", "filename": "src/test/run-pass/issue-2631-b.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fissue-2631-b.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fissue-2631-b.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-2631-b.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,8 +1,8 @@\n // xfail-fast\n // aux-build:issue-2631-a.rs\n \n-use req;\n-use std;\n+extern mod req;\n+extern mod std;\n \n use req::*;\n use std::map::*;"}, {"sha": "e1c038a48227d511f1cab638555495ca85d1807f", "filename": "src/test/run-pass/issue-2723-b.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fissue-2723-b.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fissue-2723-b.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-2723-b.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,7 +1,7 @@\n // xfail-fast: aux-build not compatible with fast\n // aux-build:issue_2723_a.rs\n \n-use issue_2723_a;\n+extern mod issue_2723_a;\n use issue_2723_a::*;\n \n fn main() unsafe {"}, {"sha": "a4e407f9990c825438bc9f1c9dd08635c9a352f0", "filename": "src/test/run-pass/issue-2804-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fissue-2804-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fissue-2804-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-2804-2.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,6 +1,6 @@\n // Minimized version of issue-2804.rs. Both check that callee IDs don't\n // clobber the previous node ID in a macro expr\n-use std;\n+extern mod std;\n use std::map::HashMap;\n \n fn add_interfaces(managed_ip: ~str, device: std::map::HashMap<~str, int>)  {"}, {"sha": "ff853dc687330e1f2b7a1fb34a5e1eb2f4def032", "filename": "src/test/run-pass/issue-2804.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fissue-2804.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fissue-2804.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-2804.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,4 +1,4 @@\n-use std;\n+extern mod std;\n use io::WriterUtil;\n use std::map::HashMap;\n "}, {"sha": "71ba9b65cef9a816501b1e1e511ccac872a822e8", "filename": "src/test/run-pass/issue-2904.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fissue-2904.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fissue-2904.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-2904.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,6 +1,6 @@\n /// Map representation\n \n-use std;\n+extern mod std;\n \n enum square {\n     bot,"}, {"sha": "0dd383e4039e97fb3d43cceb3edcb3262489a3e5", "filename": "src/test/run-pass/issue-2989.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fissue-2989.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fissue-2989.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-2989.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,4 +1,4 @@\n-use std;\n+extern mod std;\n \n trait methods {\n     fn to_bytes() -> ~[u8];"}, {"sha": "417e02dd5b51c88ee8f96ff7e44461cd2c858144", "filename": "src/test/run-pass/issue-3012-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fissue-3012-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fissue-3012-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-3012-2.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,6 +1,6 @@\n // xfail-fast\n // aux-build:issue-3012-1.rs\n-use socketlib;\n+extern mod socketlib;\n use socketlib::socket;\n \n fn main() {"}, {"sha": "730efcc9f34c922b09ee328ef46df940c285a84f", "filename": "src/test/run-pass/issue-506.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fissue-506.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fissue-506.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-506.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -4,7 +4,7 @@\n   Testing spawning foreign functions\n */\n \n-use std;\n+extern mod std;\n \n #[abi = \"cdecl\"]\n extern mod rustrt {"}, {"sha": "447a892f3390f70a44aa3f62ced5cca2a9e61350", "filename": "src/test/run-pass/issue-507.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fissue-507.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fissue-507.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-507.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -5,7 +5,7 @@\n    https://github.com/graydon/rust/issues/507\n */\n \n-use std;\n+extern mod std;\n \n use comm::Chan;\n use comm::send;"}, {"sha": "6d9dc8216e1ab74e995b93e713c1952e2b65b772", "filename": "src/test/run-pass/issue-687.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fissue-687.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fissue-687.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-687.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,4 +1,4 @@\n-use std;\n+extern mod std;\n use comm::Chan;\n use comm::Port;\n use comm::recv;"}, {"sha": "752101e651b9e62936c9accdb3f02fa44f7ff81d", "filename": "src/test/run-pass/issue-783.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fissue-783.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fissue-783.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-783.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,4 +1,4 @@\n-use std;\n+extern mod std;\n use comm::*;\n use task::*;\n "}, {"sha": "f7d808dacbeda7e03e7724823ad128daeef4ea4a", "filename": "src/test/run-pass/issue2170exe.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fissue2170exe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fissue2170exe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue2170exe.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,6 +1,6 @@\n // xfail-fast - check-fail fast doesn't under aux-build\n // aux-build:issue2170lib.rs\n-use issue2170lib;\n+extern mod issue2170lib;\n \n fn main() {\n    // let _ = issue2170lib::rsrc(2i32);"}, {"sha": "07f824f7ae664a5828e0f7c5d6d6f6aff267bafd", "filename": "src/test/run-pass/item-attributes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fitem-attributes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fitem-attributes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fitem-attributes.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -140,7 +140,7 @@ mod test_attr_inner_then_outer_multi {\n \n mod test_distinguish_syntax_ext {\n \n-    use std;\n+    extern mod std;\n \n     fn f() {\n         fmt!(\"test%s\", ~\"s\");"}, {"sha": "bfcba52790b3955745c771554757f27c3f49ef83", "filename": "src/test/run-pass/ivec-tag.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fivec-tag.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fivec-tag.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fivec-tag.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,4 +1,4 @@\n-use std;\n+extern mod std;\n \n use comm::Chan;\n use comm::Port;"}, {"sha": "1446ebc9493578a8ad4e107537d822d6b1205a0b", "filename": "src/test/run-pass/lazychan.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Flazychan.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Flazychan.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flazychan.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,6 +1,6 @@\n // -*- rust -*-\n \n-use std;\n+extern mod std;\n use comm::*;\n \n fn main() {"}, {"sha": "58efce90ff1aafe0f6c5afef83455150dd5167bf", "filename": "src/test/run-pass/leaky_comm.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fleaky_comm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fleaky_comm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fleaky_comm.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,7 +1,7 @@\n // xfail-fast\n // aux-build:test_comm.rs\n \n-use test_comm;\n+extern mod test_comm;\n \n fn main() {\n   let p = test_comm::port();"}, {"sha": "db71980ca43ad15431be477b52bc33a7588d7cc5", "filename": "src/test/run-pass/log-knows-the-names-of-variants-in-std.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Flog-knows-the-names-of-variants-in-std.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Flog-knows-the-names-of-variants-in-std.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flog-knows-the-names-of-variants-in-std.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,4 +1,4 @@\n-use std;\n+extern mod std;\n use std::list;\n \n enum foo {"}, {"sha": "85524e0591e8be10ada20becb5938282cb8f224e", "filename": "src/test/run-pass/lots-a-fail.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Flots-a-fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Flots-a-fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flots-a-fail.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,5 +1,5 @@\n // xfail-win32 leaks\n-use std;\n+extern mod std;\n \n fn die() {\n     fail;"}, {"sha": "2362f683e5e80ad0758d93a5c9df5216a3fb5aca", "filename": "src/test/run-pass/many.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fmany.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fmany.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmany.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,6 +1,6 @@\n // -*- rust -*-\n \n-use std;\n+extern mod std;\n \n fn sub(parent: comm::Chan<int>, id: int) {\n     if id == 0 {"}, {"sha": "0fcb95fb73ba518790e174be8acdb337d3219619", "filename": "src/test/run-pass/mlist-cycle.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fmlist-cycle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fmlist-cycle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmlist-cycle.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,6 +1,6 @@\n // xfail-test\n // -*- rust -*-\n-use std;\n+extern mod std;\n \n type cell = {mut c: @list};\n "}, {"sha": "c771249c9ed6ba426ae5cd79131603dadf955ec7", "filename": "src/test/run-pass/monomorphized-callees-with-ty-params-3314.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fmonomorphized-callees-with-ty-params-3314.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fmonomorphized-callees-with-ty-params-3314.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmonomorphized-callees-with-ty-params-3314.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,4 +1,4 @@\n-use std;\n+extern mod std;\n \n trait Serializer {\n }"}, {"sha": "3431d6b396312671d0bb58325a14c5bf4207a9e3", "filename": "src/test/run-pass/morestack5.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fmorestack5.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fmorestack5.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmorestack5.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,6 +1,6 @@\n // This test will call __morestack with various minimum stack sizes\n \n-use std;\n+extern mod std;\n \n fn getbig(&&i: int) {\n     if i != 0 {"}, {"sha": "5353ba191cd022308d879e258a727488a43633c1", "filename": "src/test/run-pass/move-3-unique.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fmove-3-unique.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fmove-3-unique.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmove-3-unique.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,4 +1,4 @@\n-use std;\n+extern mod std;\n \n fn test(x: bool, foo: ~{x: int, y: int, z: int}) -> int {\n     let bar = foo;"}, {"sha": "784fa068d4d8b77f798a00f10dc1f5e4b908857c", "filename": "src/test/run-pass/move-3.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fmove-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fmove-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmove-3.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,4 +1,4 @@\n-use std;\n+extern mod std;\n \n fn test(x: bool, foo: @{x: int, y: int, z: int}) -> int {\n     let bar = foo;"}, {"sha": "5bea6f8134d7700855ffc8e496a237dc0315873c", "filename": "src/test/run-pass/move-4-unique.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fmove-4-unique.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fmove-4-unique.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmove-4-unique.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,4 +1,4 @@\n-use std;\n+extern mod std;\n \n fn test(foo: ~{a: int, b: int, c: int}) -> ~{a: int, b: int, c: int} {\n     let foo = foo;"}, {"sha": "987d5e299d21768653bf63455d96529e882f1052", "filename": "src/test/run-pass/move-4.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fmove-4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fmove-4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmove-4.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,5 +1,5 @@\n \n-use std;\n+extern mod std;\n \n fn test(foo: @{a: int, b: int, c: int}) -> @{a: int, b: int, c: int} {\n     let foo = foo;"}, {"sha": "e54197ccc6b5d2a6541237c40797846c3aabd1cb", "filename": "src/test/run-pass/mutable-alias-vec.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fmutable-alias-vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fmutable-alias-vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmutable-alias-vec.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,7 +1,7 @@\n \n \n // -*- rust -*-\n-use std;\n+extern mod std;\n \n fn grow(&v: ~[int]) { v += ~[1]; }\n "}, {"sha": "a712f1c45e680b720cedc3af07184ba43b415b51", "filename": "src/test/run-pass/nested-pattern.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fnested-pattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fnested-pattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fnested-pattern.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,7 +1,7 @@\n \n \n // a bug was causing this to complain about leaked memory on exit\n-use std;\n+extern mod std;\n use option::Some;\n use option::None;\n "}, {"sha": "e029a6b50e1c803da6a4967c9e86aec6ded194b7", "filename": "src/test/run-pass/non-boolean-pure-fns.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fnon-boolean-pure-fns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fnon-boolean-pure-fns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fnon-boolean-pure-fns.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,4 +1,4 @@\n-use std;\n+extern mod std;\n \n use std::list::*;\n "}, {"sha": "93c12449f2eb4a17d415e0ff85f617ccaf7898a7", "filename": "src/test/run-pass/pipe-detect-term.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fpipe-detect-term.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fpipe-detect-term.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fpipe-detect-term.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -3,7 +3,7 @@\n // xfail-pretty\n // xfail-win32\n \n-use std;\n+extern mod std;\n use std::timer::sleep;\n use std::uv;\n "}, {"sha": "e8b2aa1a791a3ebd9cb7e5c43d3077d8b35fb388", "filename": "src/test/run-pass/pipe-peek.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fpipe-peek.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fpipe-peek.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fpipe-peek.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,6 +1,6 @@\n // xfail-pretty\n \n-use std;\n+extern mod std;\n use std::timer::sleep;\n use std::uv;\n "}, {"sha": "4d70eb62e94813950fba1769a215b1d01d2d93c8", "filename": "src/test/run-pass/pipe-select.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fpipe-select.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fpipe-select.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fpipe-select.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,7 +1,7 @@\n // xfail-pretty\n // xfail-win32\n \n-use std;\n+extern mod std;\n use std::timer::sleep;\n use std::uv;\n "}, {"sha": "4e901c69d29dedb6acbe5b827956952b0fee6a19", "filename": "src/test/run-pass/pipe-sleep.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fpipe-sleep.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fpipe-sleep.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fpipe-sleep.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,6 +1,6 @@\n // xfail-pretty\n \n-use std;\n+extern mod std;\n use std::timer::sleep;\n use std::uv;\n use pipes::recv;"}, {"sha": "7735ef86ac13e182710b9fdcff86dc424b44a521", "filename": "src/test/run-pass/placement-new-arena.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fplacement-new-arena.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fplacement-new-arena.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fplacement-new-arena.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,4 +1,4 @@\n-use std;\n+extern mod std;\n use std::arena;\n \n fn main() {"}, {"sha": "f84a65f7e018ad3ccb2958bdcc825bff6e708717", "filename": "src/test/run-pass/regions-mock-trans-impls.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fregions-mock-trans-impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fregions-mock-trans-impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fregions-mock-trans-impls.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,4 +1,4 @@\n-use std;\n+extern mod std;\n use libc, sys, unsafe;\n use std::arena::Arena;\n "}, {"sha": "2f5245f7bc4c6455ca723f49cb509d8d76d14d5f", "filename": "src/test/run-pass/rt-circular-buffer.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Frt-circular-buffer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Frt-circular-buffer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Frt-circular-buffer.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -2,7 +2,7 @@\n \n // Regression tests for circular_buffer when using a unit\n // that has a size that is not a power of two\n-use std;\n+extern mod std;\n use comm::Port;\n use comm::Chan;\n use comm::send;"}, {"sha": "9e369d819d415244d35e2f2acb48a01e23dccb73", "filename": "src/test/run-pass/send-iloop.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fsend-iloop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fsend-iloop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsend-iloop.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,5 +1,5 @@\n // xfail-win32\n-use std;\n+extern mod std;\n \n fn die() {\n     fail;"}, {"sha": "4f0b9667524f2872f98b5a65643df60293f6c2c5", "filename": "src/test/run-pass/send-type-inference.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fsend-type-inference.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fsend-type-inference.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsend-type-inference.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,4 +1,4 @@\n-use std;\n+extern mod std;\n use comm::Chan;\n use comm::send;\n use comm::Port;"}, {"sha": "6003c2768acf6a9d144be20c05c3b98d3fad94db", "filename": "src/test/run-pass/sendfn-deep-copy.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fsendfn-deep-copy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fsendfn-deep-copy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsendfn-deep-copy.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,4 +1,4 @@\n-use std;\n+extern mod std;\n \n use comm::Chan;\n use comm::send;"}, {"sha": "194c3ada9ac0c42061b3b0e5f76ebc43524430fb", "filename": "src/test/run-pass/sendfn-generic-fn.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fsendfn-generic-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fsendfn-generic-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsendfn-generic-fn.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,4 +1,4 @@\n-use std;\n+extern mod std;\n \n use comm::Chan;\n use comm::send;"}, {"sha": "67d7607f0b97df8d5f0343212aec60a49e4429ad", "filename": "src/test/run-pass/sendfn-spawn-with-fn-arg.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fsendfn-spawn-with-fn-arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fsendfn-spawn-with-fn-arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsendfn-spawn-with-fn-arg.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,4 +1,4 @@\n-use std;\n+extern mod std;\n \n use comm::Chan;\n use comm::send;"}, {"sha": "1eb80950f9f5de377ff61eb72c89b9cefb933a37", "filename": "src/test/run-pass/shape_intrinsic_tag_then_rec.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fshape_intrinsic_tag_then_rec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fshape_intrinsic_tag_then_rec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fshape_intrinsic_tag_then_rec.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -2,7 +2,7 @@\n // on x86_64: when there is a enum embedded in an\n // interior record which is then itself interior to\n // something else, shape calculations were off.\n-use std;\n+extern mod std;\n use std::list;\n use std::list::list;\n "}, {"sha": "aa065a9875c974812214970c7455dddd8ffb1b5d", "filename": "src/test/run-pass/spawn-fn.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fspawn-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fspawn-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fspawn-fn.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,6 +1,6 @@\n // -*- rust -*-\n \n-use std;\n+extern mod std;\n use task::yield;\n \n fn x(s: ~str, n: int) {"}, {"sha": "22c20ed7e5e6037b057cc5fa979fe194b5de86f0", "filename": "src/test/run-pass/spawn-types.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fspawn-types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fspawn-types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fspawn-types.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -4,7 +4,7 @@\n   Arnold.\n  */\n \n-use std;\n+extern mod std;\n \n \n type ctx = comm::Chan<int>;"}, {"sha": "ab8aea17895e69ce1f7d4882119ee996a030a282", "filename": "src/test/run-pass/spawn.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fspawn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fspawn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fspawn.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,6 +1,6 @@\n // -*- rust -*-\n \n-use std;\n+extern mod std;\n \n \n fn main() {"}, {"sha": "242e77a3e469dc9a0e53715cefc228d420389e1c", "filename": "src/test/run-pass/spawn2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fspawn2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fspawn2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fspawn2.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,6 +1,6 @@\n // -*- rust -*-\n \n-use std;\n+extern mod std;\n use task::spawn;\n \n fn main() { spawn(|| child((10, 20, 30, 40, 50, 60, 70, 80, 90)) ); }"}, {"sha": "e178a3a13046b904d57921a35512043ee8a4563f", "filename": "src/test/run-pass/static-method-xcrate.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fstatic-method-xcrate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fstatic-method-xcrate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fstatic-method-xcrate.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,7 +1,7 @@\n // xfail-fast\n // aux-build:static-methods-crate.rs\n \n-use static_methods_crate;\n+extern mod static_methods_crate;\n use static_methods_crate::read;\n use readMaybeRenamed = static_methods_crate::readMaybe;\n "}, {"sha": "16e670b08b7628d7997c25831e26d6ad83c57e0d", "filename": "src/test/run-pass/str-append.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fstr-append.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fstr-append.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fstr-append.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,7 +1,7 @@\n \n \n // -*- rust -*-\n-use std;\n+extern mod std;\n \n fn test1() {\n     let mut s: ~str = ~\"hello\";"}, {"sha": "a11d7ef48744a9833ab51aecf368ee890d2d3649", "filename": "src/test/run-pass/str-multiline.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fstr-multiline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fstr-multiline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fstr-multiline.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,7 +1,7 @@\n \n \n // -*- rust -*-\n-use std;\n+extern mod std;\n \n fn main() {\n     let a: ~str = ~\"this \\"}, {"sha": "a8be417c9555a89f4fb886182a251c6985fecb81", "filename": "src/test/run-pass/string-self-append.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fstring-self-append.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fstring-self-append.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fstring-self-append.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,4 +1,4 @@\n-use std;\n+extern mod std;\n \n fn main() {\n     // Make sure we properly handle repeated self-appends."}, {"sha": "fe197cb6df0282f55a234dffd18fa83a1911d26a", "filename": "src/test/run-pass/syntax-extension-fmt.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fsyntax-extension-fmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fsyntax-extension-fmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsyntax-extension-fmt.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,4 +1,4 @@\n-use std;\n+extern mod std;\n \n fn test(actual: ~str, expected: ~str) {\n     log(debug, actual);"}, {"sha": "406c08cd3fb14e78541149cc78e1f1874f430e07", "filename": "src/test/run-pass/task-comm-0.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Ftask-comm-0.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Ftask-comm-0.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-0.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,4 +1,4 @@\n-use std;\n+extern mod std;\n \n use pipes::Chan;\n use pipes::Port;"}, {"sha": "9b52172cfc5f255cca16ac3ad9209c72c2e98352", "filename": "src/test/run-pass/task-comm-10.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Ftask-comm-10.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Ftask-comm-10.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-10.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,4 +1,4 @@\n-use std;\n+extern mod std;\n \n fn start(c: pipes::Chan<pipes::Chan<~str>>) {\n     let (ch, p) = pipes::stream();"}, {"sha": "b90f8fed40027ce8d85398f89ced6ba3b9b7d792", "filename": "src/test/run-pass/task-comm-11.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Ftask-comm-11.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Ftask-comm-11.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-11.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,4 +1,4 @@\n-use std;\n+extern mod std;\n \n fn start(c: pipes::Chan<pipes::Chan<int>>) {\n     let (ch, p) = pipes::stream();"}, {"sha": "c0f97c85bce2fa90a952aee7ec41da9b3ed2f08d", "filename": "src/test/run-pass/task-comm-12.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Ftask-comm-12.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Ftask-comm-12.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-12.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,4 +1,4 @@\n-use std;\n+extern mod std;\n \n fn main() { test00(); }\n "}, {"sha": "267d16852b92edb49d2c74fc11129a22ed8751a3", "filename": "src/test/run-pass/task-comm-13.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Ftask-comm-13.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Ftask-comm-13.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-13.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,4 +1,4 @@\n-use std;\n+extern mod std;\n use pipes::send;\n \n fn start(c: pipes::Chan<int>, start: int, number_of_messages: int) {"}, {"sha": "15ed2d26aa2c7e3b5cb92f72a1ad97b13cdab354", "filename": "src/test/run-pass/task-comm-15.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Ftask-comm-15.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Ftask-comm-15.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-15.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,5 +1,5 @@\n // xfail-win32\n-use std;\n+extern mod std;\n \n fn start(c: pipes::Chan<int>, i0: int) {\n     let mut i = i0;"}, {"sha": "9b7d05488de8ffde631c1c11b3c9b5fccdf83b39", "filename": "src/test/run-pass/task-comm-16.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Ftask-comm-16.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Ftask-comm-16.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-16.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,6 +1,6 @@\n // -*- rust -*-\n \n-use std;\n+extern mod std;\n use pipes::send;\n use pipes::Port;\n use pipes::recv;"}, {"sha": "d1c4e064b4d75b7dcce715d948c62ce510f159cd", "filename": "src/test/run-pass/task-comm-17.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Ftask-comm-17.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Ftask-comm-17.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-17.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -2,7 +2,7 @@\n \n // This test is specifically about spawning temporary closures.\n \n-use std;\n+extern mod std;\n \n fn f() {\n }"}, {"sha": "f232e9bf8c815ee7823ec8ff3e14df680bcc942d", "filename": "src/test/run-pass/task-comm-3.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Ftask-comm-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Ftask-comm-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-3.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,4 +1,4 @@\n-use std;\n+extern mod std;\n use pipes::Chan;\n use pipes::send;\n use pipes::recv;"}, {"sha": "0abc74a09d5f0664f1721fcb276a44aa2ae7da0b", "filename": "src/test/run-pass/task-comm-4.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Ftask-comm-4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Ftask-comm-4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-4.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,4 +1,4 @@\n-use std;\n+extern mod std;\n use pipes::send;\n \n fn main() { test00(); }"}, {"sha": "cfed858b3288af6fe2cd20b5e985553b4114a63b", "filename": "src/test/run-pass/task-comm-5.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Ftask-comm-5.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Ftask-comm-5.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-5.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,4 +1,4 @@\n-use std;\n+extern mod std;\n \n fn main() { test00(); }\n "}, {"sha": "815cb520b5496811ecd1042d58f6c073851bfe0e", "filename": "src/test/run-pass/task-comm-6.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Ftask-comm-6.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Ftask-comm-6.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-6.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,4 +1,4 @@\n-use std;\n+extern mod std;\n use pipes::send;\n use pipes::Chan;\n use pipes::recv;"}, {"sha": "f5778fcb6e3d760a56a02b35f6136c4967624964", "filename": "src/test/run-pass/task-comm-7.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Ftask-comm-7.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Ftask-comm-7.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-7.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,4 +1,4 @@\n-use std;\n+extern mod std;\n \n fn main() { test00(); }\n "}, {"sha": "eefc745296987adeba3381c20088e3d08396346e", "filename": "src/test/run-pass/task-comm-9.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Ftask-comm-9.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Ftask-comm-9.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-9.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,4 +1,4 @@\n-use std;\n+extern mod std;\n \n fn main() { test00(); }\n "}, {"sha": "7149f3079630d524ac74bdf93966b8e4c70d93aa", "filename": "src/test/run-pass/task-comm-chan-cleanup.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Ftask-comm-chan-cleanup.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Ftask-comm-chan-cleanup.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-chan-cleanup.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,4 +1,4 @@\n-use std;\n+extern mod std;\n \n fn main() {\n     let p = comm::Port();"}, {"sha": "7149f3079630d524ac74bdf93966b8e4c70d93aa", "filename": "src/test/run-pass/task-comm-chan-cleanup2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Ftask-comm-chan-cleanup2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Ftask-comm-chan-cleanup2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-chan-cleanup2.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,4 +1,4 @@\n-use std;\n+extern mod std;\n \n fn main() {\n     let p = comm::Port();"}, {"sha": "4dc10f86716970d3e13125fa5a9791865b0dfe5f", "filename": "src/test/run-pass/task-comm-chan-cleanup3.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Ftask-comm-chan-cleanup3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Ftask-comm-chan-cleanup3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-chan-cleanup3.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,4 +1,4 @@\n-use std;\n+extern mod std;\n \n fn main() {\n     let c = {"}, {"sha": "215843fbac712d139a759cae2577524ed7bc0382", "filename": "src/test/run-pass/task-comm-chan-cleanup4.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Ftask-comm-chan-cleanup4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Ftask-comm-chan-cleanup4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-chan-cleanup4.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,4 +1,4 @@\n-use std;\n+extern mod std;\n \n // We're trying to trigger a race between send and port destruction that\n // results in the string not being freed"}, {"sha": "87b91889356db052b8f1c194051a9179b75348de", "filename": "src/test/run-pass/task-comm-chan-nil.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Ftask-comm-chan-nil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Ftask-comm-chan-nil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-chan-nil.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,6 +1,6 @@\n // -*- rust -*-\n \n-use std;\n+extern mod std;\n \n // rustboot can't transmit nils across channels because they don't have\n // any size, but rustc currently can because they do have size. Whether"}, {"sha": "4b6ea2c16032eb7c5b37e87671b306a5a2734575", "filename": "src/test/run-pass/task-comm.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Ftask-comm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Ftask-comm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,4 +1,4 @@\n-use std;\n+extern mod std;\n \n use task::task;\n use comm::Chan;"}, {"sha": "652d131584f79235fca8fe83491223dd086102b3", "filename": "src/test/run-pass/task-compare.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Ftask-compare.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Ftask-compare.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-compare.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -5,7 +5,7 @@\n // FIXME: This won't work until we can compare resources (#2601)\n // xfail-test\n \n-use std;\n+extern mod std;\n use task::join;\n \n fn child() { }"}, {"sha": "98d5193c86d60d610ba725d32caca7046a552bba", "filename": "src/test/run-pass/task-killjoin-rsrc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Ftask-killjoin-rsrc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Ftask-killjoin-rsrc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-killjoin-rsrc.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -3,7 +3,7 @@\n // A port of task-killjoin to use a class with a dtor to manage\n // the join.\n \n-use std;\n+extern mod std;\n \n struct notify {\n     ch: comm::Chan<bool>, v: @mut bool,"}, {"sha": "3521287141dca319e832cebd1dbc401aa017aea6", "filename": "src/test/run-pass/task-killjoin.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Ftask-killjoin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Ftask-killjoin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-killjoin.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -5,7 +5,7 @@\n // task will kill the supervising task, waking it up. The supervising task no\n // longer needs to be wakened when the supervised task exits.\n \n-use std;\n+extern mod std;\n \n fn supervised() {\n     // Yield to make sure the supervisor joins before we fail. This is"}, {"sha": "d3190334bf0334a19b47844697c20441e01872c1", "filename": "src/test/run-pass/task-life-0.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Ftask-life-0.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Ftask-life-0.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-life-0.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,4 +1,4 @@\n-use std;\n+extern mod std;\n fn main() {\n     task::spawn(|| child(~\"Hello\") );\n }"}, {"sha": "6e0dedf07f8a2253c7d904dd3ab7bb1f7c94fde0", "filename": "src/test/run-pass/terminate-in-initializer.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fterminate-in-initializer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fterminate-in-initializer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fterminate-in-initializer.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -2,7 +2,7 @@\n // Issue #787\n // Don't try to clean up uninitialized locals\n \n-use std;\n+extern mod std;\n \n fn test_break() { loop { let x: @int = break; } }\n "}, {"sha": "0baabecb0ab9179bb09d5efffbc7902a6a7f1b87", "filename": "src/test/run-pass/test-ignore-cfg.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Ftest-ignore-cfg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Ftest-ignore-cfg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftest-ignore-cfg.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -2,7 +2,7 @@\n // xfail-fast\n // xfail-pretty\n \n-use std;\n+extern mod std;\n \n #[test]\n #[ignore(cfg(ignorecfg))]"}, {"sha": "2b5370e010c9cdedec4593db0dba58681c66e9b3", "filename": "src/test/run-pass/test-runner-hides-main.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Ftest-runner-hides-main.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Ftest-runner-hides-main.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftest-runner-hides-main.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,7 +1,7 @@\n // compile-flags:--test\n // xfail-fast\n \n-use std;\n+extern mod std;\n \n // Building as a test runner means that a synthetic main will be run,\n // not ours"}, {"sha": "d0cf650d308caa7a5826aa11144f0c22675d2430", "filename": "src/test/run-pass/threads.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fthreads.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fthreads.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fthreads.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,6 +1,6 @@\n // -*- rust -*-\n \n-use std;\n+extern mod std;\n \n fn main() {\n     let mut i = 10;"}, {"sha": "14ca4df66a0fa527a3aa34a3782c5d85c249bf90", "filename": "src/test/run-pass/trait-to-str.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Ftrait-to-str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Ftrait-to-str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftrait-to-str.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -2,7 +2,7 @@\n \n #[no_core];\n \n-use core;\n+extern mod core;\n \n use core::{str, int, vec};\n "}, {"sha": "edec7ea6d90a26303fb1e1935467629b08f6faea", "filename": "src/test/run-pass/type-sizes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Ftype-sizes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Ftype-sizes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftype-sizes.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,6 +1,6 @@\n // xfail-test\n use sys::rustrt::size_of;\n-use std;\n+extern mod std;\n \n fn main() {\n     assert (size_of::<u8>() == 1 as uint);"}, {"sha": "687c5747be7c270efecbef779933c4eb056a7f3d", "filename": "src/test/run-pass/unify-return-ty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Funify-return-ty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Funify-return-ty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funify-return-ty.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,7 +1,7 @@\n // Tests that the tail expr in null() has its type\n // unified with the type *T, and so the type variable\n // in that type gets resolved.\n-use std;\n+extern mod std;\n \n fn null<T>() -> *T unsafe { unsafe::reinterpret_cast(&0) }\n "}, {"sha": "e0ea3e6c0a316b8411e7640151f9d580d3499d6c", "filename": "src/test/run-pass/unique-copy-box.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Funique-copy-box.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Funique-copy-box.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funique-copy-box.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,4 +1,4 @@\n-use std;\n+extern mod std;\n use sys::refcount;\n \n fn main() unsafe {"}, {"sha": "73cd7adc034ee6e8ac2bc2e30efb822fbef539cc", "filename": "src/test/run-pass/unique-send-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Funique-send-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Funique-send-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funique-send-2.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,4 +1,4 @@\n-use std;\n+extern mod std;\n \n fn child(c: comm::Chan<~uint>, i: uint) {\n     comm::send(c, ~i);"}, {"sha": "3acaa1b59f6e5e5634af68f926cb8b0597a8a351", "filename": "src/test/run-pass/unique-send.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Funique-send.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Funique-send.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funique-send.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,4 +1,4 @@\n-use std;\n+extern mod std;\n \n fn main() {\n     let p = comm::Port();"}, {"sha": "528270c9f9fee5e6ab606a58212a67c46331b7d6", "filename": "src/test/run-pass/unwind-box.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Funwind-box.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Funwind-box.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funwind-box.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,5 +1,5 @@\n // xfail-win32\n-use std;\n+extern mod std;\n \n fn f() {\n     let a = @0;"}, {"sha": "08d6af273d2195479e16307fc3724345b42b2527", "filename": "src/test/run-pass/unwind-resource.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Funwind-resource.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Funwind-resource.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funwind-resource.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,5 +1,5 @@\n // xfail-win32\n-use std;\n+extern mod std;\n \n struct complainer {\n   c: comm::Chan<bool>,"}, {"sha": "bd73825a4eb725e79d78cfaff031528bfd989d43", "filename": "src/test/run-pass/unwind-resource2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Funwind-resource2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Funwind-resource2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funwind-resource2.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,5 +1,5 @@\n // xfail-win32\n-use std;\n+extern mod std;\n \n struct complainer {\n   c: @int,"}, {"sha": "3fa5492939e1a5c6a2fa4e2e04577cb347ef096c", "filename": "src/test/run-pass/unwind-unique.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Funwind-unique.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Funwind-unique.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funwind-unique.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,5 +1,5 @@\n // xfail-win32\n-use std;\n+extern mod std;\n \n fn f() {\n     let a = ~0;"}, {"sha": "c6e9dbd4938db0058a78d07d7895a9996db5d2c7", "filename": "src/test/run-pass/use-crate-name-alias.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fuse-crate-name-alias.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fuse-crate-name-alias.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fuse-crate-name-alias.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,4 +1,4 @@\n // Issue #1706\n-use stdlib(name=\"std\");\n+extern mod stdlib(name=\"std\");\n \n fn main() {}"}, {"sha": "8d2357cca73fcda858aff8989154aeff681b0a41", "filename": "src/test/run-pass/use.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fuse.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fuse.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fuse.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,7 +1,7 @@\n #[no_core];\n-use core;\n-use zed(name = \"core\");\n-use bar(name = \"core\", vers = \"0.4\");\n+extern mod core;\n+extern mod zed(name = \"core\");\n+extern mod bar(name = \"core\", vers = \"0.4\");\n \n \n use core::str;"}, {"sha": "aacf5a99cbe5edb65b16c1072ee9d7c113437af6", "filename": "src/test/run-pass/utf8_chars.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Futf8_chars.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Futf8_chars.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Futf8_chars.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,4 +1,4 @@\n-use std;\n+extern mod std;\n \n fn main() {\n     // Chars of 1, 2, 3, and 4 bytes"}, {"sha": "1b0475a72cfa50dd559c1fd0a208b8258891bafd", "filename": "src/test/run-pass/vec-self-append.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fvec-self-append.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fvec-self-append.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fvec-self-append.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,4 +1,4 @@\n-use std;\n+extern mod std;\n \n fn test_heap_to_heap() {\n     // a spills onto the heap"}, {"sha": "f9c2ad2547d66ef5454ad66cb4587cca5717aedb", "filename": "src/test/run-pass/yield.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fyield.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fyield.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fyield.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,5 +1,5 @@\n // -*- rust -*-\n-use std;\n+extern mod std;\n use task::*;\n \n fn main() {"}, {"sha": "05c5e833babfb12c132e89e9d9537ef6e93a6eaa", "filename": "src/test/run-pass/yield1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fyield1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fyield1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fyield1.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,5 +1,5 @@\n // -*- rust -*-\n-use std;\n+extern mod std;\n use task::*;\n \n fn main() {"}, {"sha": "9b7763514e5ec633056c00de069b0ca59951af08", "filename": "src/test/run-pass/yield2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fyield2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fyield2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fyield2.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,5 +1,5 @@\n // -*- rust -*-\n-use std;\n+extern mod std;\n \n fn main() {\n     let mut i: int = 0;"}, {"sha": "61e359129fe89b90aa204d6360ef84d6cfcf7775", "filename": "src/test/run-pass/zip-same-length.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fzip-same-length.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea01ee2e9e161a7028b98848c071e5fe9c30c7f7/src%2Ftest%2Frun-pass%2Fzip-same-length.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fzip-same-length.rs?ref=ea01ee2e9e161a7028b98848c071e5fe9c30c7f7", "patch": "@@ -1,6 +1,6 @@\n // In this case, the code should compile and should\n // succeed at runtime\n-use std;\n+extern mod std;\n use vec::{head, is_not_empty, last, same_length, zip};\n \n fn enum_chars(start: u8, end: u8) -> ~[char] {"}]}