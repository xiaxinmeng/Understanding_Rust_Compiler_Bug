{"sha": "bb7ab8242a2b17d90ab7735efbbf2c5b905e196e", "node_id": "C_kwDOAAsO6NoAKGJiN2FiODI0MmEyYjE3ZDkwYWI3NzM1ZWZiYmYyYzViOTA1ZTE5NmU", "commit": {"author": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2023-01-13T12:52:29Z"}, "committer": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2023-01-13T12:52:29Z"}, "message": "Remove a lot of redundant rustc arguments for tests", "tree": {"sha": "25dd236094a4738aeb4a259690b2e732224db400", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/25dd236094a4738aeb4a259690b2e732224db400"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bb7ab8242a2b17d90ab7735efbbf2c5b905e196e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bb7ab8242a2b17d90ab7735efbbf2c5b905e196e", "html_url": "https://github.com/rust-lang/rust/commit/bb7ab8242a2b17d90ab7735efbbf2c5b905e196e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bb7ab8242a2b17d90ab7735efbbf2c5b905e196e/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f311ef5a2ebbb520da3fb1333a1df70b31b9a66a", "url": "https://api.github.com/repos/rust-lang/rust/commits/f311ef5a2ebbb520da3fb1333a1df70b31b9a66a", "html_url": "https://github.com/rust-lang/rust/commit/f311ef5a2ebbb520da3fb1333a1df70b31b9a66a"}], "stats": {"total": 141, "additions": 19, "deletions": 122}, "files": [{"sha": "364c4d93e4f3cac39e6e36ab3f7715181da1fc5d", "filename": "build_system/tests.rs", "status": "modified", "additions": 19, "deletions": 122, "changes": 141, "blob_url": "https://github.com/rust-lang/rust/blob/bb7ab8242a2b17d90ab7735efbbf2c5b905e196e/build_system%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb7ab8242a2b17d90ab7735efbbf2c5b905e196e/build_system%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build_system%2Ftests.rs?ref=bb7ab8242a2b17d90ab7735efbbf2c5b905e196e", "patch": "@@ -26,24 +26,10 @@ impl TestCase {\n \n const NO_SYSROOT_SUITE: &[TestCase] = &[\n     TestCase::new(\"build.mini_core\", &|runner| {\n-        runner.run_rustc([\n-            \"example/mini_core.rs\",\n-            \"--crate-name\",\n-            \"mini_core\",\n-            \"--crate-type\",\n-            \"lib,dylib\",\n-            \"--target\",\n-            &runner.target_compiler.triple,\n-        ]);\n+        runner.run_rustc([\"example/mini_core.rs\", \"--crate-type\", \"lib,dylib\"]);\n     }),\n     TestCase::new(\"build.example\", &|runner| {\n-        runner.run_rustc([\n-            \"example/example.rs\",\n-            \"--crate-type\",\n-            \"lib\",\n-            \"--target\",\n-            &runner.target_compiler.triple,\n-        ]);\n+        runner.run_rustc([\"example/example.rs\", \"--crate-type\", \"lib\"]);\n     }),\n     TestCase::new(\"jit.mini_core_hello_world\", &|runner| {\n         let mut jit_cmd = runner.rustc_command([\n@@ -53,8 +39,6 @@ const NO_SYSROOT_SUITE: &[TestCase] = &[\n             \"example/mini_core_hello_world.rs\",\n             \"--cfg\",\n             \"jit\",\n-            \"--target\",\n-            &runner.target_compiler.triple,\n         ]);\n         jit_cmd.env(\"CG_CLIF_JIT_ARGS\", \"abc bcd\");\n         spawn_and_wait(jit_cmd);\n@@ -67,69 +51,30 @@ const NO_SYSROOT_SUITE: &[TestCase] = &[\n             \"example/mini_core_hello_world.rs\",\n             \"--cfg\",\n             \"jit\",\n-            \"--target\",\n-            &runner.target_compiler.triple,\n         ]);\n         jit_cmd.env(\"CG_CLIF_JIT_ARGS\", \"abc bcd\");\n         spawn_and_wait(jit_cmd);\n     }),\n     TestCase::new(\"aot.mini_core_hello_world\", &|runner| {\n-        runner.run_rustc([\n-            \"example/mini_core_hello_world.rs\",\n-            \"--crate-name\",\n-            \"mini_core_hello_world\",\n-            \"--crate-type\",\n-            \"bin\",\n-            \"-g\",\n-            \"--target\",\n-            &runner.target_compiler.triple,\n-        ]);\n+        runner.run_rustc([\"example/mini_core_hello_world.rs\"]);\n         runner.run_out_command(\"mini_core_hello_world\", [\"abc\", \"bcd\"]);\n     }),\n ];\n \n const BASE_SYSROOT_SUITE: &[TestCase] = &[\n     TestCase::new(\"aot.arbitrary_self_types_pointers_and_wrappers\", &|runner| {\n-        runner.run_rustc([\n-            \"example/arbitrary_self_types_pointers_and_wrappers.rs\",\n-            \"--crate-name\",\n-            \"arbitrary_self_types_pointers_and_wrappers\",\n-            \"--crate-type\",\n-            \"bin\",\n-            \"--target\",\n-            &runner.target_compiler.triple,\n-        ]);\n+        runner.run_rustc([\"example/arbitrary_self_types_pointers_and_wrappers.rs\"]);\n         runner.run_out_command(\"arbitrary_self_types_pointers_and_wrappers\", []);\n     }),\n     TestCase::new(\"aot.issue_91827_extern_types\", &|runner| {\n-        runner.run_rustc([\n-            \"example/issue-91827-extern-types.rs\",\n-            \"--crate-name\",\n-            \"issue_91827_extern_types\",\n-            \"--crate-type\",\n-            \"bin\",\n-            \"--target\",\n-            &runner.target_compiler.triple,\n-        ]);\n-        runner.run_out_command(\"issue_91827_extern_types\", []);\n+        runner.run_rustc([\"example/issue-91827-extern-types.rs\"]);\n+        runner.run_out_command(\"issue-91827-extern-types\", []);\n     }),\n     TestCase::new(\"build.alloc_system\", &|runner| {\n-        runner.run_rustc([\n-            \"example/alloc_system.rs\",\n-            \"--crate-type\",\n-            \"lib\",\n-            \"--target\",\n-            &runner.target_compiler.triple,\n-        ]);\n+        runner.run_rustc([\"example/alloc_system.rs\", \"--crate-type\", \"lib\"]);\n     }),\n     TestCase::new(\"aot.alloc_example\", &|runner| {\n-        runner.run_rustc([\n-            \"example/alloc_example.rs\",\n-            \"--crate-type\",\n-            \"bin\",\n-            \"--target\",\n-            &runner.target_compiler.triple,\n-        ]);\n+        runner.run_rustc([\"example/alloc_example.rs\"]);\n         runner.run_out_command(\"alloc_example\", []);\n     }),\n     TestCase::new(\"jit.std_example\", &|runner| {\n@@ -138,8 +83,6 @@ const BASE_SYSROOT_SUITE: &[TestCase] = &[\n             \"-Cllvm-args=mode=jit\",\n             \"-Cprefer-dynamic\",\n             \"example/std_example.rs\",\n-            \"--target\",\n-            &runner.target_compiler.triple,\n         ]);\n \n         eprintln!(\"[JIT-lazy] std_example\");\n@@ -148,83 +91,34 @@ const BASE_SYSROOT_SUITE: &[TestCase] = &[\n             \"-Cllvm-args=mode=jit-lazy\",\n             \"-Cprefer-dynamic\",\n             \"example/std_example.rs\",\n-            \"--target\",\n-            &runner.target_compiler.triple,\n         ]);\n     }),\n     TestCase::new(\"aot.std_example\", &|runner| {\n-        runner.run_rustc([\n-            \"example/std_example.rs\",\n-            \"--crate-type\",\n-            \"bin\",\n-            \"--target\",\n-            &runner.target_compiler.triple,\n-        ]);\n+        runner.run_rustc([\"example/std_example.rs\"]);\n         runner.run_out_command(\"std_example\", [\"arg\"]);\n     }),\n     TestCase::new(\"aot.dst_field_align\", &|runner| {\n-        runner.run_rustc([\n-            \"example/dst-field-align.rs\",\n-            \"--crate-name\",\n-            \"dst_field_align\",\n-            \"--crate-type\",\n-            \"bin\",\n-            \"--target\",\n-            &runner.target_compiler.triple,\n-        ]);\n-        runner.run_out_command(\"dst_field_align\", []);\n+        runner.run_rustc([\"example/dst-field-align.rs\"]);\n+        runner.run_out_command(\"dst-field-align\", []);\n     }),\n     TestCase::new(\"aot.subslice-patterns-const-eval\", &|runner| {\n-        runner.run_rustc([\n-            \"example/subslice-patterns-const-eval.rs\",\n-            \"--crate-type\",\n-            \"bin\",\n-            \"-Cpanic=abort\",\n-            \"--target\",\n-            &runner.target_compiler.triple,\n-        ]);\n+        runner.run_rustc([\"example/subslice-patterns-const-eval.rs\"]);\n         runner.run_out_command(\"subslice-patterns-const-eval\", []);\n     }),\n     TestCase::new(\"aot.track-caller-attribute\", &|runner| {\n-        runner.run_rustc([\n-            \"example/track-caller-attribute.rs\",\n-            \"--crate-type\",\n-            \"bin\",\n-            \"-Cpanic=abort\",\n-            \"--target\",\n-            &runner.target_compiler.triple,\n-        ]);\n+        runner.run_rustc([\"example/track-caller-attribute.rs\"]);\n         runner.run_out_command(\"track-caller-attribute\", []);\n     }),\n     TestCase::new(\"aot.float-minmax-pass\", &|runner| {\n-        runner.run_rustc([\n-            \"example/float-minmax-pass.rs\",\n-            \"--crate-type\",\n-            \"bin\",\n-            \"-Cpanic=abort\",\n-            \"--target\",\n-            &runner.target_compiler.triple,\n-        ]);\n+        runner.run_rustc([\"example/float-minmax-pass.rs\"]);\n         runner.run_out_command(\"float-minmax-pass\", []);\n     }),\n     TestCase::new(\"aot.mod_bench\", &|runner| {\n-        runner.run_rustc([\n-            \"example/mod_bench.rs\",\n-            \"--crate-type\",\n-            \"bin\",\n-            \"--target\",\n-            &runner.target_compiler.triple,\n-        ]);\n+        runner.run_rustc([\"example/mod_bench.rs\"]);\n         runner.run_out_command(\"mod_bench\", []);\n     }),\n     TestCase::new(\"aot.issue-72793\", &|runner| {\n-        runner.run_rustc([\n-            \"example/issue-72793.rs\",\n-            \"--crate-type\",\n-            \"bin\",\n-            \"--target\",\n-            &runner.target_compiler.triple,\n-        ]);\n+        runner.run_rustc([\"example/issue-72793.rs\"]);\n         runner.run_out_command(\"issue-72793\", []);\n     }),\n ];\n@@ -501,6 +395,9 @@ impl TestRunner {\n         cmd.arg(\"--out-dir\");\n         cmd.arg(format!(\"{}\", BUILD_EXAMPLE_OUT_DIR.to_path(&self.dirs).display()));\n         cmd.arg(\"-Cdebuginfo=2\");\n+        cmd.arg(\"--target\");\n+        cmd.arg(&self.target_compiler.triple);\n+        cmd.arg(\"-Cpanic=abort\");\n         cmd.args(args);\n         cmd\n     }"}]}