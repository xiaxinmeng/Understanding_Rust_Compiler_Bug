{"sha": "17581a79adb7b1c064222defa94a5a3d79f5bfb2", "node_id": "C_kwDOAAsO6NoAKDE3NTgxYTc5YWRiN2IxYzA2NDIyMmRlZmE5NGE1YTNkNzlmNWJmYjI", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-07-04T15:59:44Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-07-04T15:59:44Z"}, "message": "Auto merge of #98573 - krasimirgg:nlmb-llvm-nm, r=nikic\n\nadapt native-link-modifier-bundle test to use llvm-nm\n\nNo functional changes intended.\n\nThis updates the test case to use `llvm-nm` as an alternative to https://github.com/rust-lang/rust/pull/98424.\n\nThis fixes a test failure over at the experimental build of rustc with HEAD LLVM:\nhttps://buildkite.com/llvm-project/rust-llvm-integrate-prototype/builds/11144#01814d0f-a46a-4c19-91cf-41e720edb6f9/684-691.\n\nThe issue is that this test uses the system nm, which may not be recent\nenough to understand the bitcode produced by rustc when compiled against HEAD LLVM.\n\nSimilar to what we did for another test in https://github.com/rust-lang/rust/pull/94023.", "tree": {"sha": "11c705ee21cb979ae33c54157496da4d10687ce0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/11c705ee21cb979ae33c54157496da4d10687ce0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/17581a79adb7b1c064222defa94a5a3d79f5bfb2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/17581a79adb7b1c064222defa94a5a3d79f5bfb2", "html_url": "https://github.com/rust-lang/rust/commit/17581a79adb7b1c064222defa94a5a3d79f5bfb2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/17581a79adb7b1c064222defa94a5a3d79f5bfb2/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d2074cbeeceb8b28fb6249a9aa3c937fe1c0bb92", "url": "https://api.github.com/repos/rust-lang/rust/commits/d2074cbeeceb8b28fb6249a9aa3c937fe1c0bb92", "html_url": "https://github.com/rust-lang/rust/commit/d2074cbeeceb8b28fb6249a9aa3c937fe1c0bb92"}, {"sha": "aa4c8f6fab6dd2dc3ed997815a7e6813dc6968e8", "url": "https://api.github.com/repos/rust-lang/rust/commits/aa4c8f6fab6dd2dc3ed997815a7e6813dc6968e8", "html_url": "https://github.com/rust-lang/rust/commit/aa4c8f6fab6dd2dc3ed997815a7e6813dc6968e8"}], "stats": {"total": 24, "additions": 14, "deletions": 10}, "files": [{"sha": "e4b0f74ac26ac00df92b796a91feba6b48067dde", "filename": "src/test/run-make/native-link-modifier-bundle/Makefile", "status": "modified", "additions": 14, "deletions": 10, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/17581a79adb7b1c064222defa94a5a3d79f5bfb2/src%2Ftest%2Frun-make%2Fnative-link-modifier-bundle%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/17581a79adb7b1c064222defa94a5a3d79f5bfb2/src%2Ftest%2Frun-make%2Fnative-link-modifier-bundle%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fnative-link-modifier-bundle%2FMakefile?ref=17581a79adb7b1c064222defa94a5a3d79f5bfb2", "patch": "@@ -3,27 +3,31 @@\n \n -include ../../run-make-fulldeps/tools.mk\n \n+# We're using the llvm-nm instead of the system nm to ensure it is compatible\n+# with the LLVM bitcode generated by rustc.\n+NM = \"$(LLVM_BIN_DIR)\"/llvm-nm\n+\n all: $(call NATIVE_STATICLIB,native-staticlib)\n \t# Build a staticlib and a rlib, the `native_func` symbol will be bundled into them\n \t$(RUSTC) bundled.rs --crate-type=staticlib --crate-type=rlib\n-\tnm $(TMPDIR)/libbundled.a | $(CGREP) -e \"T _*native_func\"\n-\tnm $(TMPDIR)/libbundled.a | $(CGREP) -e \"U _*native_func\"\n-\tnm $(TMPDIR)/libbundled.rlib | $(CGREP) -e \"T _*native_func\"\n-\tnm $(TMPDIR)/libbundled.rlib | $(CGREP) -e \"U _*native_func\"\n+\t$(NM) $(TMPDIR)/libbundled.a | $(CGREP) -e \"T _*native_func\"\n+\t$(NM) $(TMPDIR)/libbundled.a | $(CGREP) -e \"U _*native_func\"\n+\t$(NM) $(TMPDIR)/libbundled.rlib | $(CGREP) -e \"T _*native_func\"\n+\t$(NM) $(TMPDIR)/libbundled.rlib | $(CGREP) -e \"U _*native_func\"\n \n \t# Build a staticlib and a rlib, the `native_func` symbol will not be bundled into it\n \t$(RUSTC) non-bundled.rs --crate-type=staticlib --crate-type=rlib\n-\tnm $(TMPDIR)/libnon_bundled.a | $(CGREP) -ve \"T _*native_func\"\n-\tnm $(TMPDIR)/libnon_bundled.a | $(CGREP) -e \"U _*native_func\"\n-\tnm $(TMPDIR)/libnon_bundled.rlib | $(CGREP) -ve \"T _*native_func\"\n-\tnm $(TMPDIR)/libnon_bundled.rlib | $(CGREP) -e \"U _*native_func\"\n+\t$(NM) $(TMPDIR)/libnon_bundled.a | $(CGREP) -ve \"T _*native_func\"\n+\t$(NM) $(TMPDIR)/libnon_bundled.a | $(CGREP) -e \"U _*native_func\"\n+\t$(NM) $(TMPDIR)/libnon_bundled.rlib | $(CGREP) -ve \"T _*native_func\"\n+\t$(NM) $(TMPDIR)/libnon_bundled.rlib | $(CGREP) -e \"U _*native_func\"\n \n \t# Build a cdylib, `native-staticlib` will not appear on the linker line because it was bundled previously\n \t# The cdylib will contain the `native_func` symbol in the end\n \t$(RUSTC) cdylib-bundled.rs --crate-type=cdylib --print link-args | $(CGREP) -ve '-l[\" ]*native-staticlib'\n-\tnm $(call DYLIB,cdylib_bundled) | $(CGREP) -e \"[Tt] _*native_func\"\n+\t$(NM) $(call DYLIB,cdylib_bundled) | $(CGREP) -e \"[Tt] _*native_func\"\n \n \t# Build a cdylib, `native-staticlib` will appear on the linker line because it was not bundled previously\n \t# The cdylib will contain the `native_func` symbol in the end\n \t$(RUSTC) cdylib-non-bundled.rs --crate-type=cdylib --print link-args | $(CGREP) -e '-l[\" ]*native-staticlib'\n-\tnm $(call DYLIB,cdylib_non_bundled) | $(CGREP) -e \"[Tt] _*native_func\"\n+\t$(NM) $(call DYLIB,cdylib_non_bundled) | $(CGREP) -e \"[Tt] _*native_func\""}]}