{"sha": "7d078cfb94fa75e5dee699535f3f9781d3a1d47d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdkMDc4Y2ZiOTRmYTc1ZTVkZWU2OTk1MzVmM2Y5NzgxZDNhMWQ0N2Q=", "commit": {"author": {"name": "Folyd", "email": "lyshuhow@gmail.com", "date": "2020-09-27T12:32:40Z"}, "committer": {"name": "Folyd", "email": "lyshuhow@gmail.com", "date": "2021-01-30T06:11:47Z"}, "message": "Simplify binary search logic to full branch code to let CPU guessing branch more precisely", "tree": {"sha": "86fd305801ad06220c91474be985b9784ffee318", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/86fd305801ad06220c91474be985b9784ffee318"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7d078cfb94fa75e5dee699535f3f9781d3a1d47d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7d078cfb94fa75e5dee699535f3f9781d3a1d47d", "html_url": "https://github.com/rust-lang/rust/commit/7d078cfb94fa75e5dee699535f3f9781d3a1d47d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7d078cfb94fa75e5dee699535f3f9781d3a1d47d/comments", "author": {"login": "Folyd", "id": 3369694, "node_id": "MDQ6VXNlcjMzNjk2OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3369694?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Folyd", "html_url": "https://github.com/Folyd", "followers_url": "https://api.github.com/users/Folyd/followers", "following_url": "https://api.github.com/users/Folyd/following{/other_user}", "gists_url": "https://api.github.com/users/Folyd/gists{/gist_id}", "starred_url": "https://api.github.com/users/Folyd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Folyd/subscriptions", "organizations_url": "https://api.github.com/users/Folyd/orgs", "repos_url": "https://api.github.com/users/Folyd/repos", "events_url": "https://api.github.com/users/Folyd/events{/privacy}", "received_events_url": "https://api.github.com/users/Folyd/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Folyd", "id": 3369694, "node_id": "MDQ6VXNlcjMzNjk2OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3369694?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Folyd", "html_url": "https://github.com/Folyd", "followers_url": "https://api.github.com/users/Folyd/followers", "following_url": "https://api.github.com/users/Folyd/following{/other_user}", "gists_url": "https://api.github.com/users/Folyd/gists{/gist_id}", "starred_url": "https://api.github.com/users/Folyd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Folyd/subscriptions", "organizations_url": "https://api.github.com/users/Folyd/orgs", "repos_url": "https://api.github.com/users/Folyd/repos", "events_url": "https://api.github.com/users/Folyd/events{/privacy}", "received_events_url": "https://api.github.com/users/Folyd/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "18e44a1be4d8aecf41d0b904d63f6c72f51d6b0d", "url": "https://api.github.com/repos/rust-lang/rust/commits/18e44a1be4d8aecf41d0b904d63f6c72f51d6b0d", "html_url": "https://github.com/rust-lang/rust/commit/18e44a1be4d8aecf41d0b904d63f6c72f51d6b0d"}], "stats": {"total": 39, "additions": 17, "deletions": 22}, "files": [{"sha": "c7dd000f71f309907bbc5d2c63a9d813054d205e", "filename": "library/core/src/slice/mod.rs", "status": "modified", "additions": 16, "deletions": 21, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/7d078cfb94fa75e5dee699535f3f9781d3a1d47d/library%2Fcore%2Fsrc%2Fslice%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d078cfb94fa75e5dee699535f3f9781d3a1d47d/library%2Fcore%2Fsrc%2Fslice%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fslice%2Fmod.rs?ref=7d078cfb94fa75e5dee699535f3f9781d3a1d47d", "patch": "@@ -8,7 +8,7 @@\n \n #![stable(feature = \"rust1\", since = \"1.0.0\")]\n \n-use crate::cmp::Ordering::{self, Equal, Greater, Less};\n+use crate::cmp::Ordering::{self, Greater, Less};\n use crate::marker::Copy;\n use crate::mem;\n use crate::num::NonZeroUsize;\n@@ -2154,29 +2154,24 @@ impl<T> [T] {\n     where\n         F: FnMut(&'a T) -> Ordering,\n     {\n-        let s = self;\n-        let mut size = s.len();\n-        if size == 0 {\n-            return Err(0);\n-        }\n-        let mut base = 0usize;\n-        while size > 1 {\n-            let half = size / 2;\n-            let mid = base + half;\n-            // SAFETY: the call is made safe by the following inconstants:\n-            // - `mid >= 0`: by definition\n-            // - `mid < size`: `mid = size / 2 + size / 4 + size / 8 ...`\n-            let cmp = f(unsafe { s.get_unchecked(mid) });\n-            if cmp == Equal {\n+        let mut left = 0;\n+        let mut right = self.len();\n+        while left < right {\n+            // never overflow because `slice::len()` max is `isize::MAX`.\n+            let mid = (left + right) / 2;\n+            // SAFETY: the call is made safe by the following invariants:\n+            // - `mid >= 0`\n+            // - `mid < size`: `mid` is limited by `[left; right)` bound.\n+            let cmp = f(unsafe { self.get_unchecked(mid) });\n+            if cmp == Less {\n+                left = mid + 1;\n+            } else if cmp == Greater {\n+                right = mid;\n+            } else {\n                 return Ok(mid);\n-            } else if cmp == Less {\n-                base = mid\n             }\n-            size -= half;\n         }\n-        // SAFETY: base is always in [0, size) because base <= mid.\n-        let cmp = f(unsafe { s.get_unchecked(base) });\n-        if cmp == Equal { Ok(base) } else { Err(base + (cmp == Less) as usize) }\n+        Err(left)\n     }\n \n     /// Binary searches this sorted slice with a key extraction function."}, {"sha": "390066359f68b673fa25564b08c594769512a4af", "filename": "library/core/tests/slice.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7d078cfb94fa75e5dee699535f3f9781d3a1d47d/library%2Fcore%2Ftests%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d078cfb94fa75e5dee699535f3f9781d3a1d47d/library%2Fcore%2Ftests%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Fslice.rs?ref=7d078cfb94fa75e5dee699535f3f9781d3a1d47d", "patch": "@@ -76,7 +76,7 @@ fn test_binary_search_implementation_details() {\n     assert_eq!(b.binary_search(&3), Ok(5));\n     let b = [1, 1, 1, 1, 1, 3, 3, 3, 3];\n     assert_eq!(b.binary_search(&1), Ok(4));\n-    assert_eq!(b.binary_search(&3), Ok(6));\n+    assert_eq!(b.binary_search(&3), Ok(7));\n     let b = [1, 1, 1, 1, 3, 3, 3, 3, 3];\n     assert_eq!(b.binary_search(&1), Ok(2));\n     assert_eq!(b.binary_search(&3), Ok(4));"}]}