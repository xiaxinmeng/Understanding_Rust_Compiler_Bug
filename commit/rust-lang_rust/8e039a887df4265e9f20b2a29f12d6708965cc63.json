{"sha": "8e039a887df4265e9f20b2a29f12d6708965cc63", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhlMDM5YTg4N2RmNDI2NWU5ZjIwYjJhMjlmMTJkNjcwODk2NWNjNjM=", "commit": {"author": {"name": "Ms2ger", "email": "ms2ger@gmail.com", "date": "2015-05-22T13:25:42Z"}, "committer": {"name": "Ms2ger", "email": "ms2ger@gmail.com", "date": "2015-05-24T15:30:42Z"}, "message": "Introduce TaggedDocsIterator and use it to implement reader::tagged_docs.", "tree": {"sha": "8d867d8d8f3b98f0acc56e0b43d25597ff639bf5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8d867d8d8f3b98f0acc56e0b43d25597ff639bf5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8e039a887df4265e9f20b2a29f12d6708965cc63", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8e039a887df4265e9f20b2a29f12d6708965cc63", "html_url": "https://github.com/rust-lang/rust/commit/8e039a887df4265e9f20b2a29f12d6708965cc63", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8e039a887df4265e9f20b2a29f12d6708965cc63/comments", "author": {"login": "Ms2ger", "id": 111161, "node_id": "MDQ6VXNlcjExMTE2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/111161?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ms2ger", "html_url": "https://github.com/Ms2ger", "followers_url": "https://api.github.com/users/Ms2ger/followers", "following_url": "https://api.github.com/users/Ms2ger/following{/other_user}", "gists_url": "https://api.github.com/users/Ms2ger/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ms2ger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ms2ger/subscriptions", "organizations_url": "https://api.github.com/users/Ms2ger/orgs", "repos_url": "https://api.github.com/users/Ms2ger/repos", "events_url": "https://api.github.com/users/Ms2ger/events{/privacy}", "received_events_url": "https://api.github.com/users/Ms2ger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Ms2ger", "id": 111161, "node_id": "MDQ6VXNlcjExMTE2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/111161?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ms2ger", "html_url": "https://github.com/Ms2ger", "followers_url": "https://api.github.com/users/Ms2ger/followers", "following_url": "https://api.github.com/users/Ms2ger/following{/other_user}", "gists_url": "https://api.github.com/users/Ms2ger/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ms2ger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ms2ger/subscriptions", "organizations_url": "https://api.github.com/users/Ms2ger/orgs", "repos_url": "https://api.github.com/users/Ms2ger/repos", "events_url": "https://api.github.com/users/Ms2ger/events{/privacy}", "received_events_url": "https://api.github.com/users/Ms2ger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ba0e1cd8147d452c356aacb29fb87568ca26f111", "url": "https://api.github.com/repos/rust-lang/rust/commits/ba0e1cd8147d452c356aacb29fb87568ca26f111", "html_url": "https://github.com/rust-lang/rust/commit/ba0e1cd8147d452c356aacb29fb87568ca26f111"}], "stats": {"total": 32, "additions": 20, "deletions": 12}, "files": [{"sha": "0ee322b06c1c0a3c1ae951b4d40811ab788c5038", "filename": "src/librbml/lib.rs", "status": "modified", "additions": 20, "deletions": 12, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/8e039a887df4265e9f20b2a29f12d6708965cc63/src%2Flibrbml%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e039a887df4265e9f20b2a29f12d6708965cc63/src%2Flibrbml%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrbml%2Flib.rs?ref=8e039a887df4265e9f20b2a29f12d6708965cc63", "patch": "@@ -436,23 +436,31 @@ pub mod reader {\n         }\n     }\n \n-    pub fn tagged_docs<F>(d: Doc, tg: usize, mut it: F) -> bool where\n+    pub fn tagged_docs<F>(d: Doc, tg: usize, it: F) -> bool where\n         F: FnMut(Doc) -> bool,\n     {\n-        let mut pos = d.start;\n-        while pos < d.end {\n-            let elt_tag = try_or!(tag_at(d.data, pos), false);\n-            let elt_size = try_or!(tag_len_at(d.data, elt_tag), false);\n-            pos = elt_size.next + elt_size.val;\n-            if elt_tag.val == tg {\n-                let doc = Doc { data: d.data, start: elt_size.next,\n-                                end: pos };\n-                if !it(doc) {\n-                    return false;\n+        TaggedDocsIterator {\n+            iter: docs(d),\n+            tag: tg,\n+        }.all(it)\n+    }\n+\n+    pub struct TaggedDocsIterator<'a> {\n+        iter: DocsIterator<'a>,\n+        tag: usize,\n+    }\n+\n+    impl<'a> Iterator for TaggedDocsIterator<'a> {\n+        type Item = Doc<'a>;\n+\n+        fn next(&mut self) -> Option<Doc<'a>> {\n+            while let Some((tag, doc)) = self.iter.next() {\n+                if tag == self.tag {\n+                    return Some(doc);\n                 }\n             }\n+            None\n         }\n-        return true;\n     }\n \n     pub fn with_doc_data<T, F>(d: Doc, f: F) -> T where"}]}