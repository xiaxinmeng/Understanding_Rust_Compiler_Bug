{"sha": "e73ee41241240f740afc10a6fc16521215759ed7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU3M2VlNDEyNDEyNDBmNzQwYWZjMTBhNmZjMTY1MjEyMTU3NTllZDc=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-05-04T09:29:16Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-05-10T09:48:46Z"}, "message": "rebase fallout", "tree": {"sha": "9e760fdc7da2fb20ee98e598f2d3116637900282", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9e760fdc7da2fb20ee98e598f2d3116637900282"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e73ee41241240f740afc10a6fc16521215759ed7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e73ee41241240f740afc10a6fc16521215759ed7", "html_url": "https://github.com/rust-lang/rust/commit/e73ee41241240f740afc10a6fc16521215759ed7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e73ee41241240f740afc10a6fc16521215759ed7/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a06740cbea6c821d0aab3bf9f4882ed3716d0a36", "url": "https://api.github.com/repos/rust-lang/rust/commits/a06740cbea6c821d0aab3bf9f4882ed3716d0a36", "html_url": "https://github.com/rust-lang/rust/commit/a06740cbea6c821d0aab3bf9f4882ed3716d0a36"}], "stats": {"total": 8, "additions": 3, "deletions": 5}, "files": [{"sha": "06fb27bcff86620b429cdd60a7c24216f8e87723", "filename": "src/test/ui/consts/miri_unleashed/mutable_references_err.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e73ee41241240f740afc10a6fc16521215759ed7/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fmutable_references_err.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e73ee41241240f740afc10a6fc16521215759ed7/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fmutable_references_err.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fmutable_references_err.rs?ref=e73ee41241240f740afc10a6fc16521215759ed7", "patch": "@@ -4,7 +4,7 @@\n \n use std::cell::UnsafeCell;\n \n-// this test ICEs to ensure that our mutability story is sound\n+// this test ensures that our mutability story is sound\n \n struct Meh {\n     x: &'static UnsafeCell<i32>,"}, {"sha": "cabd754e01ac30165070cf962f2994c8e8cb173e", "filename": "src/test/ui/consts/miri_unleashed/raw_mutable_const.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e73ee41241240f740afc10a6fc16521215759ed7/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fraw_mutable_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e73ee41241240f740afc10a6fc16521215759ed7/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fraw_mutable_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fraw_mutable_const.rs?ref=e73ee41241240f740afc10a6fc16521215759ed7", "patch": "@@ -1,7 +1,5 @@\n // compile-flags: -Zunleash-the-miri-inside-of-you\n \n-#![feature(const_raw_ptr_deref)]\n-#![feature(const_mut_refs)]\n #![allow(const_err)]\n \n use std::cell::UnsafeCell;"}, {"sha": "b5b5a965295a720fe7b4d2dc826cc469146d4240", "filename": "src/test/ui/consts/miri_unleashed/raw_mutable_const.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e73ee41241240f740afc10a6fc16521215759ed7/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fraw_mutable_const.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e73ee41241240f740afc10a6fc16521215759ed7/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fraw_mutable_const.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fraw_mutable_const.stderr?ref=e73ee41241240f740afc10a6fc16521215759ed7", "patch": "@@ -1,13 +1,13 @@\n error: untyped pointers are not allowed in constant\n-  --> $DIR/raw_mutable_const.rs:9:1\n+  --> $DIR/raw_mutable_const.rs:7:1\n    |\n LL | const MUTABLE_BEHIND_RAW: *mut i32 = &UnsafeCell::new(42) as *const _ as *mut _;\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: skipping const checks\n    |\n help: skipping check that does not even have a feature gate\n-  --> $DIR/raw_mutable_const.rs:9:38\n+  --> $DIR/raw_mutable_const.rs:7:38\n    |\n LL | const MUTABLE_BEHIND_RAW: *mut i32 = &UnsafeCell::new(42) as *const _ as *mut _;\n    |                                      ^^^^^^^^^^^^^^^^^^^^"}]}