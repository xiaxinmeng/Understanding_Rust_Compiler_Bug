{"sha": "d7428944c20ab212a05d4e855fd233ed7e09e4a9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ3NDI4OTQ0YzIwYWIyMTJhMDVkNGU4NTVmZDIzM2VkN2UwOWU0YTk=", "commit": {"author": {"name": "Jonathan Turner", "email": "jturner@mozilla.com", "date": "2016-09-15T17:12:56Z"}, "committer": {"name": "Jonathan Turner", "email": "jturner@mozilla.com", "date": "2016-09-15T17:12:56Z"}, "message": "Fix wording for out-of-crate macro error", "tree": {"sha": "db694449ce842bc555e73d38815d95aab47166dd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/db694449ce842bc555e73d38815d95aab47166dd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d7428944c20ab212a05d4e855fd233ed7e09e4a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d7428944c20ab212a05d4e855fd233ed7e09e4a9", "html_url": "https://github.com/rust-lang/rust/commit/d7428944c20ab212a05d4e855fd233ed7e09e4a9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d7428944c20ab212a05d4e855fd233ed7e09e4a9/comments", "author": null, "committer": null, "parents": [{"sha": "e2c64d16906dbb29763d6cbf022164a09247ef9f", "url": "https://api.github.com/repos/rust-lang/rust/commits/e2c64d16906dbb29763d6cbf022164a09247ef9f", "html_url": "https://github.com/rust-lang/rust/commit/e2c64d16906dbb29763d6cbf022164a09247ef9f"}], "stats": {"total": 15, "additions": 8, "deletions": 7}, "files": [{"sha": "6456b72dfb56cbe5b5bc78c9bd5bc811bbb0b81a", "filename": "src/librustc_errors/emitter.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d7428944c20ab212a05d4e855fd233ed7e09e4a9/src%2Flibrustc_errors%2Femitter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7428944c20ab212a05d4e855fd233ed7e09e4a9/src%2Flibrustc_errors%2Femitter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Femitter.rs?ref=d7428944c20ab212a05d4e855fd233ed7e09e4a9", "patch": "@@ -473,7 +473,8 @@ impl EmitterWriter {\n         if spans_updated {\n             children.push(SubDiagnostic {\n                 level: Level::Note,\n-                message: \"this error originates in a macro from the standard library\".to_string(),\n+                message:\"this error originates in a macro outside of the current \\\n+                         crate\".to_string(),\n                 span: MultiSpan::new(),\n                 render_span: None\n             });"}, {"sha": "87255dfe7747673b7be9b215df55da55c16fb64c", "filename": "src/test/ui/codemap_tests/bad-format-args.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d7428944c20ab212a05d4e855fd233ed7e09e4a9/src%2Ftest%2Fui%2Fcodemap_tests%2Fbad-format-args.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d7428944c20ab212a05d4e855fd233ed7e09e4a9/src%2Ftest%2Fui%2Fcodemap_tests%2Fbad-format-args.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcodemap_tests%2Fbad-format-args.stderr?ref=d7428944c20ab212a05d4e855fd233ed7e09e4a9", "patch": "@@ -4,23 +4,23 @@ error: requires at least a format string argument\n 12 |     format!();\n    |     ^^^^^^^^^^\n    |\n-   = note: this error originates in a macro from the standard library\n+   = note: this error originates in a macro outside of the current crate\n \n error: expected token: `,`\n   --> $DIR/bad-format-args.rs:13:5\n    |\n 13 |     format!(\"\" 1);\n    |     ^^^^^^^^^^^^^^\n    |\n-   = note: this error originates in a macro from the standard library\n+   = note: this error originates in a macro outside of the current crate\n \n error: expected token: `,`\n   --> $DIR/bad-format-args.rs:14:5\n    |\n 14 |     format!(\"\", 1 1);\n    |     ^^^^^^^^^^^^^^^^^\n    |\n-   = note: this error originates in a macro from the standard library\n+   = note: this error originates in a macro outside of the current crate\n \n error: aborting due to 3 previous errors\n "}, {"sha": "d65b34f3f4164cf8dd7b912d4c777155240b9813", "filename": "src/test/ui/codemap_tests/issue-28308.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d7428944c20ab212a05d4e855fd233ed7e09e4a9/src%2Ftest%2Fui%2Fcodemap_tests%2Fissue-28308.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d7428944c20ab212a05d4e855fd233ed7e09e4a9/src%2Ftest%2Fui%2Fcodemap_tests%2Fissue-28308.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcodemap_tests%2Fissue-28308.stderr?ref=d7428944c20ab212a05d4e855fd233ed7e09e4a9", "patch": "@@ -4,7 +4,7 @@ error: cannot apply unary operator `!` to type `&'static str`\n 12 |     assert!(\"foo\");\n    |     ^^^^^^^^^^^^^^^\n    |\n-   = note: this error originates in a macro from the standard library\n+   = note: this error originates in a macro outside of the current crate\n \n error: aborting due to previous error\n "}, {"sha": "73a1c5bae85e274aa663a52cbf9673edc829a00d", "filename": "src/test/ui/codemap_tests/repair_span_std_macros.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d7428944c20ab212a05d4e855fd233ed7e09e4a9/src%2Ftest%2Fui%2Fcodemap_tests%2Frepair_span_std_macros.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d7428944c20ab212a05d4e855fd233ed7e09e4a9/src%2Ftest%2Fui%2Fcodemap_tests%2Frepair_span_std_macros.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcodemap_tests%2Frepair_span_std_macros.stderr?ref=d7428944c20ab212a05d4e855fd233ed7e09e4a9", "patch": "@@ -5,7 +5,7 @@ error[E0282]: unable to infer enough type information about `_`\n    |             ^^^^^^ cannot infer type for `_`\n    |\n    = note: type annotations or generic parameter binding required\n-   = note: this error originates in a macro from the standard library\n+   = note: this error originates in a macro outside of the current crate\n \n error: aborting due to previous error\n "}, {"sha": "84db85ac092dbfbf3d199d7d489ca97983da83db", "filename": "src/test/ui/cross-crate-macro-backtrace/main.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d7428944c20ab212a05d4e855fd233ed7e09e4a9/src%2Ftest%2Fui%2Fcross-crate-macro-backtrace%2Fmain.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d7428944c20ab212a05d4e855fd233ed7e09e4a9/src%2Ftest%2Fui%2Fcross-crate-macro-backtrace%2Fmain.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcross-crate-macro-backtrace%2Fmain.stderr?ref=d7428944c20ab212a05d4e855fd233ed7e09e4a9", "patch": "@@ -4,7 +4,7 @@ error: invalid reference to argument `0` (no arguments given)\n 16 |     myprintln!(\"{}\"); //~ ERROR in this macro\n    |     ^^^^^^^^^^^^^^^^^\n    |\n-   = note: this error originates in a macro from the standard library\n+   = note: this error originates in a macro outside of the current crate\n \n error: aborting due to previous error\n "}]}