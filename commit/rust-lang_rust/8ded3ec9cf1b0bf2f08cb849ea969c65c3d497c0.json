{"sha": "8ded3ec9cf1b0bf2f08cb849ea969c65c3d497c0", "node_id": "C_kwDOAAsO6NoAKDhkZWQzZWM5Y2YxYjBiZjJmMDhjYjg0OWVhOTY5YzY1YzNkNDk3YzA", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-03-03T21:50:43Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-03-03T21:53:03Z"}, "message": "fix: Fix semantic highlighting breaking for lifetimes in macros", "tree": {"sha": "b1fe4c3ae94b544b63967503d04e85cb3c3460f6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b1fe4c3ae94b544b63967503d04e85cb3c3460f6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8ded3ec9cf1b0bf2f08cb849ea969c65c3d497c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8ded3ec9cf1b0bf2f08cb849ea969c65c3d497c0", "html_url": "https://github.com/rust-lang/rust/commit/8ded3ec9cf1b0bf2f08cb849ea969c65c3d497c0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8ded3ec9cf1b0bf2f08cb849ea969c65c3d497c0/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "59088d8066000ba1c6d263463b1c038fb43d739c", "url": "https://api.github.com/repos/rust-lang/rust/commits/59088d8066000ba1c6d263463b1c038fb43d739c", "html_url": "https://github.com/rust-lang/rust/commit/59088d8066000ba1c6d263463b1c038fb43d739c"}], "stats": {"total": 82, "additions": 82, "deletions": 0}, "files": [{"sha": "59d16966182195fca57630d9c28aa3886a6e9376", "filename": "crates/ide/src/syntax_highlighting.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8ded3ec9cf1b0bf2f08cb849ea969c65c3d497c0/crates%2Fide%2Fsrc%2Fsyntax_highlighting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ded3ec9cf1b0bf2f08cb849ea969c65c3d497c0/crates%2Fide%2Fsrc%2Fsyntax_highlighting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting.rs?ref=8ded3ec9cf1b0bf2f08cb849ea969c65c3d497c0", "patch": "@@ -323,6 +323,7 @@ fn traverse(\n                         (T![ident], NAME | NAME_REF) => parent.into(),\n                         (T![self] | T![super] | T![crate], NAME_REF) => parent.into(),\n                         (INT_NUMBER, NAME_REF) => parent.into(),\n+                        (LIFETIME_IDENT, LIFETIME) => parent.into(),\n                         _ => token.into(),\n                     }\n                 }"}, {"sha": "a9fcf8d2b1b27b394d4a2f370fc8664a2ec9fd03", "filename": "crates/ide/src/syntax_highlighting/test_data/highlight_lifetimes.html", "status": "added", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/rust-lang/rust/blob/8ded3ec9cf1b0bf2f08cb849ea969c65c3d497c0/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_lifetimes.html", "raw_url": "https://github.com/rust-lang/rust/raw/8ded3ec9cf1b0bf2f08cb849ea969c65c3d497c0/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_lifetimes.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_lifetimes.html?ref=8ded3ec9cf1b0bf2f08cb849ea969c65c3d497c0", "patch": "@@ -0,0 +1,57 @@\n+\n+<style>\n+body                { margin: 0; }\n+pre                 { color: #DCDCCC; background: #3F3F3F; font-size: 22px; padding: 0.4em; }\n+\n+.lifetime           { color: #DFAF8F; font-style: italic; }\n+.label              { color: #DFAF8F; font-style: italic; }\n+.comment            { color: #7F9F7F; }\n+.documentation      { color: #629755; }\n+.intra_doc_link     { font-style: italic; }\n+.injected           { opacity: 0.65 ; }\n+.struct, .enum      { color: #7CB8BB; }\n+.enum_variant       { color: #BDE0F3; }\n+.string_literal     { color: #CC9393; }\n+.field              { color: #94BFF3; }\n+.function           { color: #93E0E3; }\n+.function.unsafe    { color: #BC8383; }\n+.trait.unsafe       { color: #BC8383; }\n+.operator.unsafe    { color: #BC8383; }\n+.mutable.unsafe     { color: #BC8383; text-decoration: underline; }\n+.keyword.unsafe     { color: #BC8383; font-weight: bold; }\n+.parameter          { color: #94BFF3; }\n+.text               { color: #DCDCCC; }\n+.type               { color: #7CB8BB; }\n+.builtin_type       { color: #8CD0D3; }\n+.type_param         { color: #DFAF8F; }\n+.attribute          { color: #94BFF3; }\n+.numeric_literal    { color: #BFEBBF; }\n+.bool_literal       { color: #BFE6EB; }\n+.macro              { color: #94BFF3; }\n+.derive             { color: #94BFF3; font-style: italic; }\n+.module             { color: #AFD8AF; }\n+.value_param        { color: #DCDCCC; }\n+.variable           { color: #DCDCCC; }\n+.format_specifier   { color: #CC696B; }\n+.mutable            { text-decoration: underline; }\n+.escape_sequence    { color: #94BFF3; }\n+.keyword            { color: #F0DFAF; font-weight: bold; }\n+.control            { font-style: italic; }\n+.reference          { font-style: italic; font-weight: bold; }\n+\n+.unresolved_reference { color: #FC5555; text-decoration: wavy underline; }\n+</style>\n+<pre><code>\n+<span class=\"attribute_bracket attribute\">#</span><span class=\"attribute_bracket attribute\">[</span><span class=\"attribute attribute default_library library\">derive</span><span class=\"parenthesis attribute\">(</span><span class=\"parenthesis attribute\">)</span><span class=\"attribute_bracket attribute\">]</span>\n+<span class=\"keyword\">struct</span> <span class=\"struct declaration\">Foo</span><span class=\"angle\">&lt;</span><span class=\"lifetime declaration\">'a</span><span class=\"comma\">,</span> <span class=\"lifetime declaration\">'b</span><span class=\"comma\">,</span> <span class=\"lifetime declaration\">'c</span><span class=\"angle\">&gt;</span> <span class=\"keyword\">where</span> <span class=\"lifetime\">'a</span><span class=\"colon\">:</span> <span class=\"lifetime\">'a</span><span class=\"comma\">,</span> <span class=\"lifetime\">'static</span><span class=\"colon\">:</span> <span class=\"lifetime\">'static</span> <span class=\"brace\">{</span>\n+    <span class=\"field declaration\">field</span><span class=\"colon\">:</span> <span class=\"operator\">&</span><span class=\"lifetime\">'a</span> <span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span><span class=\"comma\">,</span>\n+    <span class=\"field declaration\">field2</span><span class=\"colon\">:</span> <span class=\"operator\">&</span><span class=\"lifetime\">'static</span> <span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span><span class=\"comma\">,</span>\n+<span class=\"brace\">}</span>\n+<span class=\"keyword\">impl</span><span class=\"angle\">&lt;</span><span class=\"lifetime declaration\">'a</span><span class=\"angle\">&gt;</span> <span class=\"struct\">Foo</span><span class=\"angle\">&lt;</span><span class=\"lifetime\">'_</span><span class=\"comma\">,</span> <span class=\"lifetime\">'a</span><span class=\"comma\">,</span> <span class=\"lifetime\">'static</span><span class=\"angle\">&gt;</span>\n+<span class=\"keyword\">where</span>\n+    <span class=\"lifetime\">'a</span><span class=\"colon\">:</span> <span class=\"lifetime\">'a</span><span class=\"comma\">,</span>\n+    <span class=\"lifetime\">'static</span><span class=\"colon\">:</span> <span class=\"lifetime\">'static</span>\n+<span class=\"brace\">{</span>\n+\n+<span class=\"brace\">}</span>\n+</code></pre>\n\\ No newline at end of file"}, {"sha": "874eaf8cf76a1d5ec64f4c286e5bd1036c24be98", "filename": "crates/ide/src/syntax_highlighting/tests.rs", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/8ded3ec9cf1b0bf2f08cb849ea969c65c3d497c0/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ded3ec9cf1b0bf2f08cb849ea969c65c3d497c0/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs?ref=8ded3ec9cf1b0bf2f08cb849ea969c65c3d497c0", "patch": "@@ -312,6 +312,30 @@ macro_rules! die {\n     );\n }\n \n+#[test]\n+fn test_lifetime_highlighting() {\n+    check_highlighting(\n+        r#\"\n+//- minicore: derive\n+\n+#[derive()]\n+struct Foo<'a, 'b, 'c> where 'a: 'a, 'static: 'static {\n+    field: &'a (),\n+    field2: &'static (),\n+}\n+impl<'a> Foo<'_, 'a, 'static>\n+where\n+    'a: 'a,\n+    'static: 'static\n+{\n+\n+}\n+\"#,\n+        expect_file![\"./test_data/highlight_lifetimes.html\"],\n+        false,\n+    );\n+}\n+\n #[test]\n fn test_string_highlighting() {\n     // The format string detection is based on macro-expansion,"}]}