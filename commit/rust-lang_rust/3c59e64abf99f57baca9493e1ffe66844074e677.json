{"sha": "3c59e64abf99f57baca9493e1ffe66844074e677", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNjNTllNjRhYmY5OWY1N2JhY2E5NDkzZTFmZmU2Njg0NDA3NGU2Nzc=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2021-02-14T13:47:55Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2021-02-23T20:58:17Z"}, "message": "* Fix some typo\n* Improve documentation\n* Add a test to ensure that spotlighted traits from dependencies are taken into account as expected", "tree": {"sha": "d0499f0be2ce87aff3adbd220a89176d973ad638", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d0499f0be2ce87aff3adbd220a89176d973ad638"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3c59e64abf99f57baca9493e1ffe66844074e677", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3c59e64abf99f57baca9493e1ffe66844074e677", "html_url": "https://github.com/rust-lang/rust/commit/3c59e64abf99f57baca9493e1ffe66844074e677", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3c59e64abf99f57baca9493e1ffe66844074e677/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b5c8eea55d160f524305d09ad45c0d79493537b4", "url": "https://api.github.com/repos/rust-lang/rust/commits/b5c8eea55d160f524305d09ad45c0d79493537b4", "html_url": "https://github.com/rust-lang/rust/commit/b5c8eea55d160f524305d09ad45c0d79493537b4"}], "stats": {"total": 41, "additions": 31, "deletions": 10}, "files": [{"sha": "0089a3838f423d3e2ab41bee9692d95ee713a6fe", "filename": "src/librustdoc/clean/utils.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/3c59e64abf99f57baca9493e1ffe66844074e677/src%2Flibrustdoc%2Fclean%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c59e64abf99f57baca9493e1ffe66844074e677/src%2Flibrustdoc%2Fclean%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Futils.rs?ref=3c59e64abf99f57baca9493e1ffe66844074e677", "patch": "@@ -521,14 +521,15 @@ crate fn find_nearest_parent_module(tcx: TyCtxt<'_>, def_id: DefId) -> Option<De\n     }\n }\n \n-/// Checks that one attribute is `doc`. For example:\n+/// Checks for the existence of `hidden` in the attribute below if `flag` is `sym::hidden`:\n ///\n-/// ```text\n-/// #[doc(spotlight)]\n+/// ```\n+/// #[doc(hidden)]\n+/// pub fn foo() {}\n /// ```\n ///\n-/// This function has to exists because it runs on `hir::Attributes` whereas the other runs on\n-/// `clean::Attributes`.\n+/// This function exists because it runs on `hir::Attributes` whereas the other is a\n+/// `clean::Attributes` method.\n crate fn has_doc_flag(attrs: Attributes<'_>, flag: Symbol) -> bool {\n     attrs.iter().any(|attr| {\n         attr.has_name(sym::doc)"}, {"sha": "e9c5dd50d59a82df5cd47de3f5b5bfd759b8fd35", "filename": "src/librustdoc/formats/cache.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3c59e64abf99f57baca9493e1ffe66844074e677/src%2Flibrustdoc%2Fformats%2Fcache.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c59e64abf99f57baca9493e1ffe66844074e677/src%2Flibrustdoc%2Fformats%2Fcache.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fformats%2Fcache.rs?ref=3c59e64abf99f57baca9493e1ffe66844074e677", "patch": "@@ -245,16 +245,12 @@ impl<'a, 'tcx> DocFolder for CacheBuilder<'a, 'tcx> {\n             }\n         }\n \n-        let tcx = self.tcx;\n         // Propagate a trait method's documentation to all implementors of the\n         // trait.\n         if let clean::TraitItem(ref t) = *item.kind {\n             self.cache.traits.entry(item.def_id).or_insert_with(|| clean::TraitWithExtraInfo {\n                 trait_: t.clone(),\n-                is_spotlight: clean::utils::has_doc_flag(\n-                    tcx.get_attrs(item.def_id),\n-                    sym::spotlight,\n-                ),\n+                is_spotlight: item.attrs.has_doc_flag(sym::spotlight),\n             });\n         }\n "}, {"sha": "ed42c43594540df4f990a6943212f2cb47754a02", "filename": "src/test/rustdoc/spotlight-from-dependency.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/3c59e64abf99f57baca9493e1ffe66844074e677/src%2Ftest%2Frustdoc%2Fspotlight-from-dependency.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c59e64abf99f57baca9493e1ffe66844074e677/src%2Ftest%2Frustdoc%2Fspotlight-from-dependency.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fspotlight-from-dependency.rs?ref=3c59e64abf99f57baca9493e1ffe66844074e677", "patch": "@@ -0,0 +1,24 @@\n+#![crate_name = \"foo\"]\n+\n+use std::iter::Iterator;\n+\n+// @has foo/struct.Odd.html\n+// @has - '//h4[@id=\"method.new\"]//span[@class=\"notable-traits\"]//code/span' 'impl Iterator for Odd'\n+pub struct Odd {\n+    current: usize,\n+}\n+\n+impl Odd {\n+    pub fn new() -> Odd {\n+        Odd { current: 1 }\n+    }\n+}\n+\n+impl Iterator for Odd {\n+    type Item = usize;\n+\n+    fn next(&mut self) -> Option<Self::Item> {\n+        self.current += 2;\n+        Some(self.current - 2)\n+    }\n+}"}]}