{"sha": "6c7be6cd84e17932473ab036d38b73821ddc6be6", "node_id": "C_kwDOAAsO6NoAKDZjN2JlNmNkODRlMTc5MzI0NzNhYjAzNmQzOGI3MzgyMWRkYzZiZTY", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-11-16T11:27:11Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-11-16T11:27:11Z"}, "message": "Merge #10734\n\n10734: fix: add generic parameters in convert to manual impl assist r=Veykril a=TheDoctor314\n\nFixes #10041.\n\nCo-authored-by: TheDoctor314 <64731940+TheDoctor314@users.noreply.github.com>", "tree": {"sha": "e60a9853b09b95d2c361d0752cb21f46e11dccfa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e60a9853b09b95d2c361d0752cb21f46e11dccfa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6c7be6cd84e17932473ab036d38b73821ddc6be6", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhk5WPCRBK7hj4Ov3rIwAAakEIAGPBkwYUXgIB2I5dn5FPNxzD\n9XXQyu/wSUhAfu7SUpwBpjd3UC31ju5cSge0Zo4o6jqmbEt9Ny2QahUu2JC9kdn9\nRwuHaRNnqPRgs4CnmuekeoPD6duepAuxLSdpbwpHrZvubiw/jczzaOnJvNm4dOMI\nh7Zrw624luHkmSjuSJSLg0XmOO9qUBbC2dDRgZC3lBPQhfqfsaWsZk/yF4zvBmfN\ny9SGK8Uz03NM4UDz16f4V5bkEGocCJEr1kmDWAXLhGigBrchh3mBNC6zApOYNx5m\n2bUMs1NFz4SxYeTSyHEaarMv14fd580SCqwPv0Q923k3T8oD97z7319+tNNmK+c=\n=FCsU\n-----END PGP SIGNATURE-----\n", "payload": "tree e60a9853b09b95d2c361d0752cb21f46e11dccfa\nparent 7e756acb36ec3bfeda0c9679763508932a613840\nparent 58a24de7d85e6427885913e06d7e2587cbfb9a4f\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1637062031 +0000\ncommitter GitHub <noreply@github.com> 1637062031 +0000\n\nMerge #10734\n\n10734: fix: add generic parameters in convert to manual impl assist r=Veykril a=TheDoctor314\n\nFixes #10041.\n\nCo-authored-by: TheDoctor314 <64731940+TheDoctor314@users.noreply.github.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6c7be6cd84e17932473ab036d38b73821ddc6be6", "html_url": "https://github.com/rust-lang/rust/commit/6c7be6cd84e17932473ab036d38b73821ddc6be6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6c7be6cd84e17932473ab036d38b73821ddc6be6/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7e756acb36ec3bfeda0c9679763508932a613840", "url": "https://api.github.com/repos/rust-lang/rust/commits/7e756acb36ec3bfeda0c9679763508932a613840", "html_url": "https://github.com/rust-lang/rust/commit/7e756acb36ec3bfeda0c9679763508932a613840"}, {"sha": "58a24de7d85e6427885913e06d7e2587cbfb9a4f", "url": "https://api.github.com/repos/rust-lang/rust/commits/58a24de7d85e6427885913e06d7e2587cbfb9a4f", "html_url": "https://github.com/rust-lang/rust/commit/58a24de7d85e6427885913e06d7e2587cbfb9a4f"}], "stats": {"total": 78, "additions": 74, "deletions": 4}, "files": [{"sha": "5ba045d3c8f193d8cfb9260143890800c73f3b55", "filename": "crates/ide_assists/src/handlers/replace_derive_with_manual_impl.rs", "status": "modified", "additions": 67, "deletions": 2, "changes": 69, "blob_url": "https://github.com/rust-lang/rust/blob/6c7be6cd84e17932473ab036d38b73821ddc6be6/crates%2Fide_assists%2Fsrc%2Fhandlers%2Freplace_derive_with_manual_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c7be6cd84e17932473ab036d38b73821ddc6be6/crates%2Fide_assists%2Fsrc%2Fhandlers%2Freplace_derive_with_manual_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Freplace_derive_with_manual_impl.rs?ref=6c7be6cd84e17932473ab036d38b73821ddc6be6", "patch": "@@ -160,8 +160,25 @@ fn impl_def_from_trait(\n     if trait_items.is_empty() {\n         return None;\n     }\n-    let impl_def =\n-        make::impl_trait(trait_path.clone(), make::ext::ident_path(&annotated_name.text()));\n+    let impl_def = {\n+        use syntax::ast::Impl;\n+        let text = generate_trait_impl_text(adt, trait_path.to_string().as_str(), \"\");\n+        let parse = syntax::SourceFile::parse(&text);\n+        let node = match parse.tree().syntax().descendants().find_map(Impl::cast) {\n+            Some(it) => it,\n+            None => {\n+                panic!(\n+                    \"Failed to make ast node `{}` from text {}\",\n+                    std::any::type_name::<Impl>(),\n+                    text\n+                )\n+            }\n+        };\n+        let node = node.clone_subtree();\n+        assert_eq!(node.syntax().text_range().start(), 0.into());\n+        node\n+    };\n+\n     let (impl_def, first_assoc_item) =\n         add_trait_assoc_items_to_impl(sema, trait_items, trait_, impl_def, target_scope);\n \n@@ -1048,6 +1065,54 @@ impl Debug for Foo {\n         )\n     }\n \n+    #[test]\n+    fn add_custom_impl_default_generic_record_struct() {\n+        check_assist(\n+            replace_derive_with_manual_impl,\n+            r#\"\n+//- minicore: default\n+#[derive(Defau$0lt)]\n+struct Foo<T, U> {\n+    foo: T,\n+    bar: U,\n+}\n+\"#,\n+            r#\"\n+struct Foo<T, U> {\n+    foo: T,\n+    bar: U,\n+}\n+\n+impl<T, U> Default for Foo<T, U> {\n+    $0fn default() -> Self {\n+        Self { foo: Default::default(), bar: Default::default() }\n+    }\n+}\n+\"#,\n+        )\n+    }\n+\n+    #[test]\n+    fn add_custom_impl_clone_generic_tuple_struct_with_bounds() {\n+        check_assist(\n+            replace_derive_with_manual_impl,\n+            r#\"\n+//- minicore: clone\n+#[derive(Clo$0ne)]\n+struct Foo<T: Clone>(T, usize);\n+\"#,\n+            r#\"\n+struct Foo<T: Clone>(T, usize);\n+\n+impl<T: Clone> Clone for Foo<T> {\n+    $0fn clone(&self) -> Self {\n+        Self(self.0.clone(), self.1.clone())\n+    }\n+}\n+\"#,\n+        )\n+    }\n+\n     #[test]\n     fn test_ignore_derive_macro_without_input() {\n         check_assist_not_applicable("}, {"sha": "e1938307cf36eb7559eae80857214b9a442a5690", "filename": "crates/syntax/src/ast/make.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/6c7be6cd84e17932473ab036d38b73821ddc6be6/crates%2Fsyntax%2Fsrc%2Fast%2Fmake.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c7be6cd84e17932473ab036d38b73821ddc6be6/crates%2Fsyntax%2Fsrc%2Fast%2Fmake.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Fsrc%2Fast%2Fmake.rs?ref=6c7be6cd84e17932473ab036d38b73821ddc6be6", "patch": "@@ -149,8 +149,13 @@ pub fn impl_(\n     ast_from_text(&format!(\"impl{} {}{} {{}}\", params, ty, ty_params))\n }\n \n-pub fn impl_trait(trait_: ast::Path, ty: ast::Path) -> ast::Impl {\n-    ast_from_text(&format!(\"impl {} for {} {{}}\", trait_, ty))\n+pub fn impl_trait(\n+    trait_: ast::Path,\n+    ty: ast::Path,\n+    ty_params: Option<ast::GenericParamList>,\n+) -> ast::Impl {\n+    let ty_params = ty_params.map_or_else(String::new, |params| params.to_string());\n+    ast_from_text(&format!(\"impl{2} {} for {}{2} {{}}\", trait_, ty, ty_params))\n }\n \n pub(crate) fn generic_arg_list() -> ast::GenericArgList {"}]}