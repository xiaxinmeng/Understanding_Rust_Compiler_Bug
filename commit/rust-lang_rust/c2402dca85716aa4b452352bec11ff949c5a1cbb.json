{"sha": "c2402dca85716aa4b452352bec11ff949c5a1cbb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMyNDAyZGNhODU3MTZhYTRiNDUyMzUyYmVjMTFmZjk0OWM1YTFjYmI=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2018-12-18T22:58:49Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2018-12-18T22:58:49Z"}, "message": "Replace \"native pointer\" in error message with \"raw pointer\"", "tree": {"sha": "9ebb2bfd0c9f4286f1417e5e8453f0cba3c094b8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9ebb2bfd0c9f4286f1417e5e8453f0cba3c094b8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c2402dca85716aa4b452352bec11ff949c5a1cbb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c2402dca85716aa4b452352bec11ff949c5a1cbb", "html_url": "https://github.com/rust-lang/rust/commit/c2402dca85716aa4b452352bec11ff949c5a1cbb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c2402dca85716aa4b452352bec11ff949c5a1cbb/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d99a320cba42f661aebfa1293b7b2ec3603dda75", "url": "https://api.github.com/repos/rust-lang/rust/commits/d99a320cba42f661aebfa1293b7b2ec3603dda75", "html_url": "https://github.com/rust-lang/rust/commit/d99a320cba42f661aebfa1293b7b2ec3603dda75"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "cb14078fb93ca013b67ec708a90fdb721ccc0533", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2402dca85716aa4b452352bec11ff949c5a1cbb/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2402dca85716aa4b452352bec11ff949c5a1cbb/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=c2402dca85716aa4b452352bec11ff949c5a1cbb", "patch": "@@ -3387,7 +3387,7 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                     }\n                     ty::RawPtr(..) => {\n                         let base = self.tcx.hir().node_to_pretty_string(base.id);\n-                        let msg = format!(\"`{}` is a native pointer; try dereferencing it\", base);\n+                        let msg = format!(\"`{}` is a raw pointer; try dereferencing it\", base);\n                         let suggestion = format!(\"(*{}).{}\", base, field);\n                         err.span_suggestion_with_applicability(\n                             field.span,"}, {"sha": "46b4c4bdba20125a593706ecd0c9f09db2a4dcea", "filename": "src/test/ui/issues/issue-11004.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c2402dca85716aa4b452352bec11ff949c5a1cbb/src%2Ftest%2Fui%2Fissues%2Fissue-11004.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c2402dca85716aa4b452352bec11ff949c5a1cbb/src%2Ftest%2Fui%2Fissues%2Fissue-11004.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-11004.stderr?ref=c2402dca85716aa4b452352bec11ff949c5a1cbb", "patch": "@@ -2,13 +2,13 @@ error[E0609]: no field `x` on type `*mut A`\n   --> $DIR/issue-11004.rs:17:21\n    |\n LL |     let x : i32 = n.x; //~ no field `x` on type `*mut A`\n-   |                     ^ help: `n` is a native pointer; try dereferencing it: `(*n).x`\n+   |                     ^ help: `n` is a raw pointer; try dereferencing it: `(*n).x`\n \n error[E0609]: no field `y` on type `*mut A`\n   --> $DIR/issue-11004.rs:18:21\n    |\n LL |     let y : f64 = n.y; //~ no field `y` on type `*mut A`\n-   |                     ^ help: `n` is a native pointer; try dereferencing it: `(*n).y`\n+   |                     ^ help: `n` is a raw pointer; try dereferencing it: `(*n).y`\n \n error: aborting due to 2 previous errors\n "}, {"sha": "81f15b2931df36ce8396c25652906a0863c92988", "filename": "src/test/ui/unsafe/unsafe-fn-autoderef.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2402dca85716aa4b452352bec11ff949c5a1cbb/src%2Ftest%2Fui%2Funsafe%2Funsafe-fn-autoderef.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c2402dca85716aa4b452352bec11ff949c5a1cbb/src%2Ftest%2Fui%2Funsafe%2Funsafe-fn-autoderef.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funsafe%2Funsafe-fn-autoderef.stderr?ref=c2402dca85716aa4b452352bec11ff949c5a1cbb", "patch": "@@ -2,7 +2,7 @@ error[E0609]: no field `f` on type `*const Rec`\n   --> $DIR/unsafe-fn-autoderef.rs:29:14\n    |\n LL |     return p.f; //~ ERROR no field `f` on type `*const Rec`\n-   |              ^ help: `p` is a native pointer; try dereferencing it: `(*p).f`\n+   |              ^ help: `p` is a raw pointer; try dereferencing it: `(*p).f`\n \n error: aborting due to previous error\n "}]}