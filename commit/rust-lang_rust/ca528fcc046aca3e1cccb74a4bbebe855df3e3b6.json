{"sha": "ca528fcc046aca3e1cccb74a4bbebe855df3e3b6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNhNTI4ZmNjMDQ2YWNhM2UxY2NjYjc0YTRiYmViZTg1NWRmM2UzYjY=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-22T01:40:07Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-12-22T01:40:07Z"}, "message": "Rollup merge of #67504 - Mark-Simulacrum:note-data-offset, r=Centril\n\nWarn against relying on ?Sized being last\n\nFixes #62522", "tree": {"sha": "3500405d97633983e4fa3013a7d95e39bdecd74a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3500405d97633983e4fa3013a7d95e39bdecd74a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ca528fcc046aca3e1cccb74a4bbebe855df3e3b6", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJd/sl3CRBK7hj4Ov3rIwAAdHIIAEbOZQ4NbUPPhyy/jcjccQCR\nuwFmJ3geWJ2IOIeCC+cqRyJtlWF6Eres7BhS9+fi4cUAE5EQt9PM/HEiVBmZT/Km\nJWOKFrmC4sVtYhvFhuRf54K+scDXbFO8zWnV8oE1Iti2GCsbyTsSTI082Mof8FRg\nxqAQ1IlOXqhtWt/Rpk49lsBpGl72yCLSHAdmRwcBroDBNV4fczph0IVnG/m87Xpy\n/hzOdesUHxaqWyssxWw41cpd1/XWTuNhZYylOJgTkh/Vn21ZOWKILf24vXdLTL7A\nz5SUmmPpMLETQXkh/Po4fCSbU1ATwgUH+f4cS1LKJU50QpqzGHX1qwnej4LFxgc=\n=ymxE\n-----END PGP SIGNATURE-----\n", "payload": "tree 3500405d97633983e4fa3013a7d95e39bdecd74a\nparent c35546383f89aa7255679f40094c9ad113c63dd6\nparent a34c2677afeee2747d680536f302a8c5665a65f4\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1576978807 +0100\ncommitter GitHub <noreply@github.com> 1576978807 +0100\n\nRollup merge of #67504 - Mark-Simulacrum:note-data-offset, r=Centril\n\nWarn against relying on ?Sized being last\n\nFixes #62522\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ca528fcc046aca3e1cccb74a4bbebe855df3e3b6", "html_url": "https://github.com/rust-lang/rust/commit/ca528fcc046aca3e1cccb74a4bbebe855df3e3b6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ca528fcc046aca3e1cccb74a4bbebe855df3e3b6/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c35546383f89aa7255679f40094c9ad113c63dd6", "url": "https://api.github.com/repos/rust-lang/rust/commits/c35546383f89aa7255679f40094c9ad113c63dd6", "html_url": "https://github.com/rust-lang/rust/commit/c35546383f89aa7255679f40094c9ad113c63dd6"}, {"sha": "a34c2677afeee2747d680536f302a8c5665a65f4", "url": "https://api.github.com/repos/rust-lang/rust/commits/a34c2677afeee2747d680536f302a8c5665a65f4", "html_url": "https://github.com/rust-lang/rust/commit/a34c2677afeee2747d680536f302a8c5665a65f4"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "fd26621051981a83636b2029367d2349a7e6d5ef", "filename": "src/liballoc/rc.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca528fcc046aca3e1cccb74a4bbebe855df3e3b6/src%2Fliballoc%2Frc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca528fcc046aca3e1cccb74a4bbebe855df3e3b6/src%2Fliballoc%2Frc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Frc.rs?ref=ca528fcc046aca3e1cccb74a4bbebe855df3e3b6", "patch": "@@ -2106,6 +2106,8 @@ impl<T: ?Sized> Unpin for Rc<T> { }\n unsafe fn data_offset<T: ?Sized>(ptr: *const T) -> isize {\n     // Align the unsized value to the end of the `RcBox`.\n     // Because it is ?Sized, it will always be the last field in memory.\n+    // Note: This is a detail of the current implementation of the compiler,\n+    // and is not a guaranteed language detail. Do not rely on it outside of std.\n     data_offset_align(align_of_val(&*ptr))\n }\n "}, {"sha": "3343384754f518ee068f161454ad7c1505d1e9a4", "filename": "src/liballoc/sync.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca528fcc046aca3e1cccb74a4bbebe855df3e3b6/src%2Fliballoc%2Fsync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca528fcc046aca3e1cccb74a4bbebe855df3e3b6/src%2Fliballoc%2Fsync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fsync.rs?ref=ca528fcc046aca3e1cccb74a4bbebe855df3e3b6", "patch": "@@ -2161,6 +2161,8 @@ impl<T: ?Sized> Unpin for Arc<T> { }\n unsafe fn data_offset<T: ?Sized>(ptr: *const T) -> isize {\n     // Align the unsized value to the end of the `ArcInner`.\n     // Because it is `?Sized`, it will always be the last field in memory.\n+    // Note: This is a detail of the current implementation of the compiler,\n+    // and is not a guaranteed language detail. Do not rely on it outside of std.\n     data_offset_align(align_of_val(&*ptr))\n }\n "}]}