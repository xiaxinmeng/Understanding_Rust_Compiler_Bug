{"sha": "10a759130e763206bb961deb4c9da6e0466c71a1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEwYTc1OTEzMGU3NjMyMDZiYjk2MWRlYjRjOWRhNmUwNDY2YzcxYTE=", "commit": {"author": {"name": "Marco A L Barbosa", "email": "malbarbo@gmail.com", "date": "2018-01-03T11:39:21Z"}, "committer": {"name": "Marco A L Barbosa", "email": "malbarbo@gmail.com", "date": "2018-01-03T15:49:13Z"}, "message": "ci: use musl shared script in dist-various-1 (for arm targets)\n\nUpdate libunwind to 39. This is necessary to build the arm targets", "tree": {"sha": "0edfac5baca802779b7197209fe0a1b555d6dcd1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0edfac5baca802779b7197209fe0a1b555d6dcd1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/10a759130e763206bb961deb4c9da6e0466c71a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/10a759130e763206bb961deb4c9da6e0466c71a1", "html_url": "https://github.com/rust-lang/rust/commit/10a759130e763206bb961deb4c9da6e0466c71a1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/10a759130e763206bb961deb4c9da6e0466c71a1/comments", "author": {"login": "malbarbo", "id": 1678126, "node_id": "MDQ6VXNlcjE2NzgxMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1678126?v=4", "gravatar_id": "", "url": "https://api.github.com/users/malbarbo", "html_url": "https://github.com/malbarbo", "followers_url": "https://api.github.com/users/malbarbo/followers", "following_url": "https://api.github.com/users/malbarbo/following{/other_user}", "gists_url": "https://api.github.com/users/malbarbo/gists{/gist_id}", "starred_url": "https://api.github.com/users/malbarbo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/malbarbo/subscriptions", "organizations_url": "https://api.github.com/users/malbarbo/orgs", "repos_url": "https://api.github.com/users/malbarbo/repos", "events_url": "https://api.github.com/users/malbarbo/events{/privacy}", "received_events_url": "https://api.github.com/users/malbarbo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "malbarbo", "id": 1678126, "node_id": "MDQ6VXNlcjE2NzgxMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1678126?v=4", "gravatar_id": "", "url": "https://api.github.com/users/malbarbo", "html_url": "https://github.com/malbarbo", "followers_url": "https://api.github.com/users/malbarbo/followers", "following_url": "https://api.github.com/users/malbarbo/following{/other_user}", "gists_url": "https://api.github.com/users/malbarbo/gists{/gist_id}", "starred_url": "https://api.github.com/users/malbarbo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/malbarbo/subscriptions", "organizations_url": "https://api.github.com/users/malbarbo/orgs", "repos_url": "https://api.github.com/users/malbarbo/repos", "events_url": "https://api.github.com/users/malbarbo/events{/privacy}", "received_events_url": "https://api.github.com/users/malbarbo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ca0499d73685f084d8fd77417411d6f5162cc593", "url": "https://api.github.com/repos/rust-lang/rust/commits/ca0499d73685f084d8fd77417411d6f5162cc593", "html_url": "https://github.com/rust-lang/rust/commit/ca0499d73685f084d8fd77417411d6f5162cc593"}], "stats": {"total": 237, "additions": 66, "deletions": 171}, "files": [{"sha": "0f08bcddd388fe28c0785ed1f4d01f432d91674e", "filename": "src/ci/docker/dist-various-1/Dockerfile", "status": "modified", "additions": 29, "deletions": 13, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/10a759130e763206bb961deb4c9da6e0466c71a1/src%2Fci%2Fdocker%2Fdist-various-1%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/10a759130e763206bb961deb4c9da6e0466c71a1/src%2Fci%2Fdocker%2Fdist-various-1%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-various-1%2FDockerfile?ref=10a759130e763206bb961deb4c9da6e0466c71a1", "patch": "@@ -22,23 +22,39 @@ RUN apt-get update && apt-get install -y --no-install-recommends \\\n   libssl-dev \\\n   pkg-config\n \n-WORKDIR /tmp\n+WORKDIR /build\n \n-COPY dist-various-1/build-rumprun.sh /tmp/\n+COPY dist-various-1/build-rumprun.sh /build\n RUN ./build-rumprun.sh\n \n-COPY dist-various-1/build-arm-musl.sh /tmp/\n-RUN ./build-arm-musl.sh\n+COPY dist-various-1/install-x86_64-redox.sh /build\n+RUN ./install-x86_64-redox.sh\n+\n+COPY scripts/musl.sh /build\n+RUN env \\\n+    CC=arm-linux-gnueabi-gcc CFLAGS=\"-march=armv6 -marm\" \\\n+    CXX=arm-linux-gnueabi-g++ CXXFLAGS=\"-march=armv6 -marm\" \\\n+    bash musl.sh arm && \\\n+    env \\\n+    CC=arm-linux-gnueabihf-gcc CFLAGS=\"-march=armv6 -marm\" \\\n+    CXX=arm-linux-gnueabihf-g++ CXXFLAGS=\"-march=armv6 -marm\" \\\n+    bash musl.sh armhf && \\\n+    env \\\n+    CC=arm-linux-gnueabihf-gcc CFLAGS=\"-march=armv7-a\" \\\n+    CXX=arm-linux-gnueabihf-g++ CXXFLAGS=\"-march=armv7-a\" \\\n+    bash musl.sh armv7 && \\\n+    env \\\n+    CC=aarch64-linux-gnu-gcc \\\n+    CXX=aarch64-linux-gnu-g++ \\\n+    bash musl.sh aarch64 && \\\n+    rm -rf /build/*\n \n-COPY dist-various-1/install-mips-musl.sh /tmp/\n+COPY dist-various-1/install-mips-musl.sh /build\n RUN ./install-mips-musl.sh\n \n-COPY dist-various-1/install-mipsel-musl.sh /tmp/\n+COPY dist-various-1/install-mipsel-musl.sh /build\n RUN ./install-mipsel-musl.sh\n \n-COPY dist-various-1/install-x86_64-redox.sh /tmp/\n-RUN ./install-x86_64-redox.sh\n-\n ENV TARGETS=asmjs-unknown-emscripten\n ENV TARGETS=$TARGETS,wasm32-unknown-emscripten\n ENV TARGETS=$TARGETS,x86_64-rumprun-netbsd\n@@ -67,10 +83,10 @@ ENV STAGING_DIR=/tmp\n ENV RUST_CONFIGURE_ARGS \\\n       --enable-extended \\\n       --target=$TARGETS \\\n-      --musl-root-arm=/usr/local/arm-linux-musleabi \\\n-      --musl-root-armhf=/usr/local/arm-linux-musleabihf \\\n-      --musl-root-armv7=/usr/local/armv7-linux-musleabihf \\\n-      --musl-root-aarch64=/usr/local/aarch64-linux-musl\n+      --musl-root-arm=/musl-arm \\\n+      --musl-root-armhf=/musl-armhf \\\n+      --musl-root-armv7=/musl-armv7 \\\n+      --musl-root-aarch64=/musl-aarch64\n ENV SCRIPT python2.7 ../x.py dist --target $TARGETS\n \n # sccache"}, {"sha": "f9444a35a8b7918225c6dff98f0540790e9d5c5a", "filename": "src/ci/docker/dist-various-1/build-arm-musl.sh", "status": "removed", "additions": 0, "deletions": 147, "changes": 147, "blob_url": "https://github.com/rust-lang/rust/blob/ca0499d73685f084d8fd77417411d6f5162cc593/src%2Fci%2Fdocker%2Fdist-various-1%2Fbuild-arm-musl.sh", "raw_url": "https://github.com/rust-lang/rust/raw/ca0499d73685f084d8fd77417411d6f5162cc593/src%2Fci%2Fdocker%2Fdist-various-1%2Fbuild-arm-musl.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-various-1%2Fbuild-arm-musl.sh?ref=ca0499d73685f084d8fd77417411d6f5162cc593", "patch": "@@ -1,147 +0,0 @@\n-#!/usr/bin/env bash\n-# Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n-\n-set -ex\n-\n-MUSL=1.1.17\n-\n-hide_output() {\n-  set +x\n-  on_err=\"\n-echo ERROR: An error was encountered with the build.\n-cat /tmp/build.log\n-exit 1\n-\"\n-  trap \"$on_err\" ERR\n-  bash -c \"while true; do sleep 30; echo \\$(date) - building ...; done\" &\n-  PING_LOOP_PID=$!\n-  $@ &> /tmp/build.log\n-  trap - ERR\n-  kill $PING_LOOP_PID\n-  rm /tmp/build.log\n-  set -x\n-}\n-\n-curl -O https://www.musl-libc.org/releases/musl-$MUSL.tar.gz\n-tar xf musl-$MUSL.tar.gz\n-cd musl-$MUSL\n-CC=arm-linux-gnueabi-gcc \\\n-CFLAGS=\"-march=armv6 -marm\" \\\n-    hide_output ./configure \\\n-        --prefix=/usr/local/arm-linux-musleabi \\\n-        --enable-wrapper=gcc\n-hide_output make -j$(nproc)\n-hide_output make install\n-cd ..\n-rm -rf musl-$MUSL\n-\n-tar xf musl-$MUSL.tar.gz\n-cd musl-$MUSL\n-CC=arm-linux-gnueabihf-gcc \\\n-CFLAGS=\"-march=armv6 -marm\" \\\n-    hide_output ./configure \\\n-        --prefix=/usr/local/arm-linux-musleabihf \\\n-        --enable-wrapper=gcc\n-hide_output make -j$(nproc)\n-hide_output make install\n-cd ..\n-rm -rf musl-$MUSL\n-\n-tar xf musl-$MUSL.tar.gz\n-cd musl-$MUSL\n-CC=arm-linux-gnueabihf-gcc \\\n-CFLAGS=\"-march=armv7-a\" \\\n-    hide_output ./configure \\\n-        --prefix=/usr/local/armv7-linux-musleabihf \\\n-        --enable-wrapper=gcc\n-hide_output make -j$(nproc)\n-hide_output make install\n-cd ..\n-rm -rf musl-$MUSL\n-\n-tar xf musl-$MUSL.tar.gz\n-cd musl-$MUSL\n-CC=aarch64-linux-gnu-gcc \\\n-CFLAGS=\"\" \\\n-    hide_output ./configure \\\n-        --prefix=/usr/local/aarch64-linux-musl \\\n-        --enable-wrapper=gcc\n-hide_output make -j$(nproc)\n-hide_output make install\n-cd ..\n-rm -rf musl-$MUSL*\n-\n-ln -nsf ../arm-linux-musleabi/bin/musl-gcc /usr/local/bin/arm-linux-musleabi-gcc\n-ln -nsf ../arm-linux-musleabihf/bin/musl-gcc /usr/local/bin/arm-linux-musleabihf-gcc\n-ln -nsf ../armv7-linux-musleabihf/bin/musl-gcc /usr/local/bin/armv7-linux-musleabihf-gcc\n-ln -nsf ../aarch64-linux-musl/bin/musl-gcc /usr/local/bin/aarch64-unknown-linux-musl-gcc\n-\n-curl -L https://github.com/llvm-mirror/llvm/archive/release_39.tar.gz | tar xzf -\n-curl -L https://github.com/llvm-mirror/libunwind/archive/release_39.tar.gz | tar xzf -\n-\n-mkdir libunwind-build\n-cd libunwind-build\n-cmake ../libunwind-release_39 \\\n-          -DLLVM_PATH=/tmp/llvm-release_39 \\\n-          -DLIBUNWIND_ENABLE_SHARED=0 \\\n-          -DCMAKE_C_COMPILER=arm-linux-gnueabi-gcc \\\n-          -DCMAKE_CXX_COMPILER=arm-linux-gnueabi-g++ \\\n-          -DCMAKE_C_FLAGS=\"-march=armv6 -marm\" \\\n-          -DCMAKE_CXX_FLAGS=\"-march=armv6 -marm\"\n-make -j$(nproc)\n-cp lib/libunwind.a /usr/local/arm-linux-musleabi/lib\n-cd ..\n-rm -rf libunwind-build\n-\n-mkdir libunwind-build\n-cd libunwind-build\n-cmake ../libunwind-release_39 \\\n-          -DLLVM_PATH=/tmp/llvm-release_39 \\\n-          -DLIBUNWIND_ENABLE_SHARED=0 \\\n-          -DCMAKE_C_COMPILER=arm-linux-gnueabihf-gcc \\\n-          -DCMAKE_CXX_COMPILER=arm-linux-gnueabihf-g++ \\\n-          -DCMAKE_C_FLAGS=\"-march=armv6 -marm\" \\\n-          -DCMAKE_CXX_FLAGS=\"-march=armv6 -marm\"\n-make -j$(nproc)\n-cp lib/libunwind.a /usr/local/arm-linux-musleabihf/lib\n-cd ..\n-rm -rf libunwind-build\n-\n-mkdir libunwind-build\n-cd libunwind-build\n-cmake ../libunwind-release_39 \\\n-          -DLLVM_PATH=/tmp/llvm-release_39 \\\n-          -DLIBUNWIND_ENABLE_SHARED=0 \\\n-          -DCMAKE_C_COMPILER=arm-linux-gnueabihf-gcc \\\n-          -DCMAKE_CXX_COMPILER=arm-linux-gnueabihf-g++ \\\n-          -DCMAKE_C_FLAGS=\"-march=armv7-a\" \\\n-          -DCMAKE_CXX_FLAGS=\"-march=armv7-a\"\n-make -j$(nproc)\n-cp lib/libunwind.a /usr/local/armv7-linux-musleabihf/lib\n-cd ..\n-rm -rf libunwind-build\n-\n-mkdir libunwind-build\n-cd libunwind-build\n-cmake ../libunwind-release_39 \\\n-          -DLLVM_PATH=/tmp/llvm-release_39 \\\n-          -DLIBUNWIND_ENABLE_SHARED=0 \\\n-          -DCMAKE_C_COMPILER=aarch64-linux-gnu-gcc \\\n-          -DCMAKE_CXX_COMPILER=aarch64-linux-gnu-g++ \\\n-          -DCMAKE_C_FLAGS=\"\" \\\n-          -DCMAKE_CXX_FLAGS=\"\"\n-make -j$(nproc)\n-cp lib/libunwind.a /usr/local/aarch64-linux-musl/lib\n-cd ..\n-rm -rf libunwind-build\n-\n-rm -rf libunwind-release_39\n-rm -rf llvm-release_39"}, {"sha": "dad0e8e2c2bb1f722644a3909a59b93ba74435d0", "filename": "src/ci/docker/scripts/musl.sh", "status": "modified", "additions": 37, "deletions": 11, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/10a759130e763206bb961deb4c9da6e0466c71a1/src%2Fci%2Fdocker%2Fscripts%2Fmusl.sh", "raw_url": "https://github.com/rust-lang/rust/raw/10a759130e763206bb961deb4c9da6e0466c71a1/src%2Fci%2Fdocker%2Fscripts%2Fmusl.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fscripts%2Fmusl.sh?ref=10a759130e763206bb961deb4c9da6e0466c71a1", "patch": "@@ -1,4 +1,3 @@\n-#!/bin/sh\n # Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n # file at the top-level directory of this distribution and at\n # http://rust-lang.org/COPYRIGHT.\n@@ -11,31 +10,58 @@\n \n set -ex\n \n+hide_output() {\n+  set +x\n+  on_err=\"\n+echo ERROR: An error was encountered with the build.\n+cat /tmp/build.log\n+exit 1\n+\"\n+  trap \"$on_err\" ERR\n+  bash -c \"while true; do sleep 30; echo \\$(date) - building ...; done\" &\n+  PING_LOOP_PID=$!\n+  $@ &> /tmp/build.log\n+  trap - ERR\n+  kill $PING_LOOP_PID\n+  rm /tmp/build.log\n+  set -x\n+}\n+\n TAG=$1\n shift\n \n MUSL=musl-1.1.17\n-curl https://www.musl-libc.org/releases/$MUSL.tar.gz | tar xzf -\n+\n+# may have been downloaded in a previous run\n+if [ ! -d $MUSL ]; then\n+  curl https://www.musl-libc.org/releases/$MUSL.tar.gz | tar xzf -\n+fi\n+\n cd $MUSL\n ./configure --disable-shared --prefix=/musl-$TAG $@\n-make -j10\n-make install\n+hide_output make -j$(nproc)\n+hide_output make install\n+hide_output make clean\n \n cd ..\n-rm -rf $MUSL\n \n-# To build MUSL we're going to need a libunwind lying around, so acquire that\n-# here and build it.\n-curl -L https://github.com/llvm-mirror/llvm/archive/release_37.tar.gz | tar xzf -\n-curl -L https://github.com/llvm-mirror/libunwind/archive/release_37.tar.gz | tar xzf -\n+LLVM=39\n+# may have been downloaded in a previous run\n+if [ ! -d libunwind-release_$LLVM ]; then\n+  curl -L https://github.com/llvm-mirror/llvm/archive/release_$LLVM.tar.gz | tar xzf -\n+  curl -L https://github.com/llvm-mirror/libunwind/archive/release_$LLVM.tar.gz | tar xzf -\n+fi\n \n mkdir libunwind-build\n cd libunwind-build\n-cmake ../libunwind-release_37 -DLLVM_PATH=/build/llvm-release_37 \\\n+cmake ../libunwind-release_$LLVM \\\n+          -DLLVM_PATH=/build/llvm-release_$LLVM \\\n           -DLIBUNWIND_ENABLE_SHARED=0 \\\n           -DCMAKE_C_COMPILER=$CC \\\n           -DCMAKE_CXX_COMPILER=$CXX \\\n           -DCMAKE_C_FLAGS=\"$CFLAGS\" \\\n           -DCMAKE_CXX_FLAGS=\"$CXXFLAGS\"\n-make -j10\n+\n+hide_output make -j$(nproc)\n cp lib/libunwind.a /musl-$TAG/lib\n+cd ../ && rm -rf libunwind-build"}]}