{"sha": "d8f6e9f23736f6a12dfa028d22557d1360648234", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ4ZjZlOWYyMzczNmY2YTEyZGZhMDI4ZDIyNTU3ZDEzNjA2NDgyMzQ=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-09-23T23:08:30Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-09-23T23:12:04Z"}, "message": "Add let destructuring for unique boxes\n\nIssue #409", "tree": {"sha": "96a6db27f9ad5abeb2b8226d5a929fd2034e8777", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/96a6db27f9ad5abeb2b8226d5a929fd2034e8777"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d8f6e9f23736f6a12dfa028d22557d1360648234", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d8f6e9f23736f6a12dfa028d22557d1360648234", "html_url": "https://github.com/rust-lang/rust/commit/d8f6e9f23736f6a12dfa028d22557d1360648234", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d8f6e9f23736f6a12dfa028d22557d1360648234/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "122f714fdefe325471049b434730a9020b4fff34", "url": "https://api.github.com/repos/rust-lang/rust/commits/122f714fdefe325471049b434730a9020b4fff34", "html_url": "https://github.com/rust-lang/rust/commit/122f714fdefe325471049b434730a9020b4fff34"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "52d9755108fa84b40ad673e2c4442ab33f5062e8", "filename": "src/comp/middle/check_alt.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d8f6e9f23736f6a12dfa028d22557d1360648234/src%2Fcomp%2Fmiddle%2Fcheck_alt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d8f6e9f23736f6a12dfa028d22557d1360648234/src%2Fcomp%2Fmiddle%2Fcheck_alt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fcheck_alt.rs?ref=d8f6e9f23736f6a12dfa028d22557d1360648234", "patch": "@@ -120,6 +120,7 @@ fn is_refutable(tcx: ty::ctxt, pat: @pat) -> bool {\n       pat_wild. | pat_bind(_) { ret false; }\n       pat_lit(_) { ret true; }\n       pat_box(sub) { ret is_refutable(tcx, sub); }\n+      pat_uniq(sub) { ret is_refutable(tcx, sub); }\n       pat_rec(fields, _) {\n         for field: field_pat in fields {\n             if is_refutable(tcx, field.pat) { ret true; }"}, {"sha": "9afc3f6819c1c2ef4a68427dbf99f1e1a0ea1b76", "filename": "src/comp/middle/trans_alt.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d8f6e9f23736f6a12dfa028d22557d1360648234/src%2Fcomp%2Fmiddle%2Ftrans_alt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d8f6e9f23736f6a12dfa028d22557d1360648234/src%2Fcomp%2Fmiddle%2Ftrans_alt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans_alt.rs?ref=d8f6e9f23736f6a12dfa028d22557d1360648234", "patch": "@@ -656,6 +656,10 @@ fn bind_irrefutable_pat(bcx: @block_ctxt, pat: @ast::pat, val: ValueRef,\n                         [C_int(0), C_int(back::abi::box_rc_field_body)]);\n         bcx = bind_irrefutable_pat(bcx, inner, unboxed, table, true);\n       }\n+      ast::pat_uniq(inner) {\n+        let val = Load(bcx, val);\n+        bcx = bind_irrefutable_pat(bcx, inner, val, table, true);\n+      }\n       ast::pat_wild. | ast::pat_lit(_) { }\n     }\n     ret bcx;"}, {"sha": "5c1a0c473bf66e3e9b50e1395094956eaae114bf", "filename": "src/test/run-pass/unique-destructure.rs", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d8f6e9f23736f6a12dfa028d22557d1360648234/src%2Ftest%2Frun-pass%2Funique-destructure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d8f6e9f23736f6a12dfa028d22557d1360648234/src%2Ftest%2Frun-pass%2Funique-destructure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funique-destructure.rs?ref=d8f6e9f23736f6a12dfa028d22557d1360648234", "patch": "@@ -0,0 +1,4 @@\n+fn main() {\n+    let ~{a, b} = ~{a: 100, b: 200};\n+    assert a + b == 300;\n+}\n\\ No newline at end of file"}]}