{"sha": "1af6275f204fa5a0ec35f3dca96476bcf5112175", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFhZjYyNzVmMjA0ZmE1YTBlYzM1ZjNkY2E5NjQ3NmJjZjUxMTIxNzU=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-10-16T12:53:10Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-10-16T12:53:10Z"}, "message": "Merge #6246\n\n6246: Follow symlinks when walking project trees r=lnicola a=dfoxfranke\n\nFixes #3691.\r\n\r\n~~WIP pending further testing~~:\r\n\r\n- [X] Verify that symlinked files get indexed.\r\n- [x] Verify that files in symlinked directories get indexed.\r\n- [x] Verify that inotify events are properly received and handled when the target of a symlink resides outside the project tree.\n\nCo-authored-by: Daniel Fox Franke <dfoxfranke@gmail.com>", "tree": {"sha": "5927fa10a8fea590d1d48777e524f3ffa8f85286", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5927fa10a8fea590d1d48777e524f3ffa8f85286"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1af6275f204fa5a0ec35f3dca96476bcf5112175", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfiZe2CRBK7hj4Ov3rIwAAdHIIAHfpL1nTXi+Mt2+6AL8eiuBQ\nDgtxgJ0fug0rbLagUnbcsU1dmoBi1oDc4lpDcrEMYPwbnOkMRl/qnAahCxzQhiGF\nGiSgXY01DsRSsrhyWiejrpmtdb6RWiFshvMorBxjGtem7/WWTjJjhz5b0dxKGGAM\nktBCDJcSRYRGtvsZbAw4VTM2LgkXzi5A4K9stHDSLTAr+Fp5eLduO2p7JYmwsy65\nwFGrR7Zi19TGA9fxSXca33sicSF8cXnJ5Pn7rQ78jzJoekrDgMuPebT8xd7wcHcE\neZJ54mg+OFZW2F/K5VcG2j4IM8/IsLSmvzumuSkxPVLZdZOaPVCjsJRoaverx/o=\n=1Z47\n-----END PGP SIGNATURE-----\n", "payload": "tree 5927fa10a8fea590d1d48777e524f3ffa8f85286\nparent fb2d332f5f6aa45eb282aebdd01de4bc0ef8a39e\nparent e821aa842bd3f8beeda6b0c9f18db87af0de8adc\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1602852790 +0000\ncommitter GitHub <noreply@github.com> 1602852790 +0000\n\nMerge #6246\n\n6246: Follow symlinks when walking project trees r=lnicola a=dfoxfranke\n\nFixes #3691.\r\n\r\n~~WIP pending further testing~~:\r\n\r\n- [X] Verify that symlinked files get indexed.\r\n- [x] Verify that files in symlinked directories get indexed.\r\n- [x] Verify that inotify events are properly received and handled when the target of a symlink resides outside the project tree.\n\nCo-authored-by: Daniel Fox Franke <dfoxfranke@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1af6275f204fa5a0ec35f3dca96476bcf5112175", "html_url": "https://github.com/rust-lang/rust/commit/1af6275f204fa5a0ec35f3dca96476bcf5112175", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1af6275f204fa5a0ec35f3dca96476bcf5112175/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fb2d332f5f6aa45eb282aebdd01de4bc0ef8a39e", "url": "https://api.github.com/repos/rust-lang/rust/commits/fb2d332f5f6aa45eb282aebdd01de4bc0ef8a39e", "html_url": "https://github.com/rust-lang/rust/commit/fb2d332f5f6aa45eb282aebdd01de4bc0ef8a39e"}, {"sha": "e821aa842bd3f8beeda6b0c9f18db87af0de8adc", "url": "https://api.github.com/repos/rust-lang/rust/commits/e821aa842bd3f8beeda6b0c9f18db87af0de8adc", "html_url": "https://github.com/rust-lang/rust/commit/e821aa842bd3f8beeda6b0c9f18db87af0de8adc"}], "stats": {"total": 17, "additions": 9, "deletions": 8}, "files": [{"sha": "c605bcf3c825ff195790e9ea839a535af44e3084", "filename": "crates/vfs-notify/src/lib.rs", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/1af6275f204fa5a0ec35f3dca96476bcf5112175/crates%2Fvfs-notify%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1af6275f204fa5a0ec35f3dca96476bcf5112175/crates%2Fvfs-notify%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fvfs-notify%2Fsrc%2Flib.rs?ref=1af6275f204fa5a0ec35f3dca96476bcf5112175", "patch": "@@ -165,14 +165,15 @@ impl NotifyActor {\n                 let mut res = Vec::new();\n \n                 for root in dirs.include.iter() {\n-                    let walkdir = WalkDir::new(root).into_iter().filter_entry(|entry| {\n-                        if !entry.file_type().is_dir() {\n-                            return true;\n-                        }\n-                        let path = AbsPath::assert(entry.path());\n-                        root == path\n-                            || dirs.exclude.iter().chain(&dirs.include).all(|it| it != path)\n-                    });\n+                    let walkdir =\n+                        WalkDir::new(root).follow_links(true).into_iter().filter_entry(|entry| {\n+                            if !entry.file_type().is_dir() {\n+                                return true;\n+                            }\n+                            let path = AbsPath::assert(entry.path());\n+                            root == path\n+                                || dirs.exclude.iter().chain(&dirs.include).all(|it| it != path)\n+                        });\n \n                     let files = walkdir.filter_map(|it| it.ok()).filter_map(|entry| {\n                         let is_dir = entry.file_type().is_dir();"}]}