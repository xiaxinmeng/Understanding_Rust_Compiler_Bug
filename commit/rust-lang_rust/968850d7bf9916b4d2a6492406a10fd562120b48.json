{"sha": "968850d7bf9916b4d2a6492406a10fd562120b48", "node_id": "C_kwDOAAsO6NoAKDk2ODg1MGQ3YmY5OTE2YjRkMmE2NDkyNDA2YTEwZmQ1NjIxMjBiNDg", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2023-04-26T08:20:59Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2023-04-26T09:44:11Z"}, "message": "Deduplicate crates when extending crate graphs", "tree": {"sha": "5f24b8f96d3dac38da3f2e438770d1bae2c366cf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5f24b8f96d3dac38da3f2e438770d1bae2c366cf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/968850d7bf9916b4d2a6492406a10fd562120b48", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/968850d7bf9916b4d2a6492406a10fd562120b48", "html_url": "https://github.com/rust-lang/rust/commit/968850d7bf9916b4d2a6492406a10fd562120b48", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/968850d7bf9916b4d2a6492406a10fd562120b48/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "943d2a8a1ca15e8b28a1f51f5a5c135e3728da04", "url": "https://api.github.com/repos/rust-lang/rust/commits/943d2a8a1ca15e8b28a1f51f5a5c135e3728da04", "html_url": "https://github.com/rust-lang/rust/commit/943d2a8a1ca15e8b28a1f51f5a5c135e3728da04"}], "stats": {"total": 22352, "additions": 20834, "deletions": 1518}, "files": [{"sha": "e6d265df675d11ea43997028f44f8c326ed13206", "filename": "crates/base-db/src/input.rs", "status": "modified", "additions": 42, "deletions": 22, "changes": 64, "blob_url": "https://github.com/rust-lang/rust/blob/968850d7bf9916b4d2a6492406a10fd562120b48/crates%2Fbase-db%2Fsrc%2Finput.rs", "raw_url": "https://github.com/rust-lang/rust/raw/968850d7bf9916b4d2a6492406a10fd562120b48/crates%2Fbase-db%2Fsrc%2Finput.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fbase-db%2Fsrc%2Finput.rs?ref=968850d7bf9916b4d2a6492406a10fd562120b48", "patch": "@@ -9,7 +9,7 @@\n use std::{fmt, mem, ops, panic::RefUnwindSafe, str::FromStr, sync::Arc};\n \n use cfg::CfgOptions;\n-use la_arena::{Arena, Idx, RawIdx};\n+use la_arena::{Arena, Idx};\n use rustc_hash::{FxHashMap, FxHashSet};\n use syntax::SmolStr;\n use tt::token_id::Subtree;\n@@ -534,28 +534,46 @@ impl CrateGraph {\n         Some(crate_id)\n     }\n \n+    pub fn sort_deps(&mut self) {\n+        self.arena\n+            .iter_mut()\n+            .for_each(|(_, data)| data.dependencies.sort_by_key(|dep| dep.crate_id));\n+    }\n+\n     /// Extends this crate graph by adding a complete disjoint second crate\n     /// graph and adjust the ids in the [`ProcMacroPaths`] accordingly.\n     ///\n-    /// The ids of the crates in the `other` graph are shifted by the return\n-    /// amount.\n-    pub fn extend(&mut self, other: CrateGraph, proc_macros: &mut ProcMacroPaths) -> u32 {\n-        let start = self.arena.len() as u32;\n-        self.arena.extend(other.arena.into_iter().map(|(_, mut data)| {\n-            for dep in &mut data.dependencies {\n-                dep.crate_id =\n-                    CrateId::from_raw(RawIdx::from(u32::from(dep.crate_id.into_raw()) + start));\n+    /// This will deduplicate the crates of the graph where possible.\n+    /// Note that for deduplication to fully work, `self`'s crate dependencies must be sorted by crate id.\n+    /// If the crate dependencies were sorted, the resulting graph from this `extend` call will also have the crate dependencies sorted.\n+    pub fn extend(&mut self, mut other: CrateGraph, proc_macros: &mut ProcMacroPaths) {\n+        let topo = other.crates_in_topological_order();\n+        let mut id_map: FxHashMap<CrateId, CrateId> = FxHashMap::default();\n+\n+        for topo in topo {\n+            let crate_data = &mut other.arena[topo];\n+            crate_data.dependencies.iter_mut().for_each(|dep| dep.crate_id = id_map[&dep.crate_id]);\n+            crate_data.dependencies.sort_by_key(|dep| dep.crate_id);\n+\n+            let res = self.arena.iter().find_map(\n+                |(id, data)| {\n+                    if data == crate_data {\n+                        Some(id)\n+                    } else {\n+                        None\n+                    }\n+                },\n+            );\n+            if let Some(res) = res {\n+                id_map.insert(topo, res);\n+            } else {\n+                let id = self.arena.alloc(crate_data.clone());\n+                id_map.insert(topo, id);\n             }\n-            data\n-        }));\n+        }\n \n-        *proc_macros = mem::take(proc_macros)\n-            .into_iter()\n-            .map(|(id, macros)| {\n-                (CrateId::from_raw(RawIdx::from(u32::from(id.into_raw()) + start)), macros)\n-            })\n-            .collect();\n-        start\n+        *proc_macros =\n+            mem::take(proc_macros).into_iter().map(|(id, macros)| (id_map[&id], macros)).collect();\n     }\n \n     fn find_path(\n@@ -586,8 +604,10 @@ impl CrateGraph {\n     // Work around for https://github.com/rust-lang/rust-analyzer/issues/6038.\n     // As hacky as it gets.\n     pub fn patch_cfg_if(&mut self) -> bool {\n-        let cfg_if = self.hacky_find_crate(\"cfg_if\");\n-        let std = self.hacky_find_crate(\"std\");\n+        // we stupidly max by version in an attempt to have all duplicated std's depend on the same cfg_if so that deduplication still works\n+        let cfg_if =\n+            self.hacky_find_crate(\"cfg_if\").max_by_key(|&it| self.arena[it].version.clone());\n+        let std = self.hacky_find_crate(\"std\").next();\n         match (cfg_if, std) {\n             (Some(cfg_if), Some(std)) => {\n                 self.arena[cfg_if].dependencies.clear();\n@@ -600,8 +620,8 @@ impl CrateGraph {\n         }\n     }\n \n-    fn hacky_find_crate(&self, display_name: &str) -> Option<CrateId> {\n-        self.iter().find(|it| self[*it].display_name.as_deref() == Some(display_name))\n+    fn hacky_find_crate<'a>(&'a self, display_name: &'a str) -> impl Iterator<Item = CrateId> + 'a {\n+        self.iter().filter(move |it| self[*it].display_name.as_deref() == Some(display_name))\n     }\n }\n "}, {"sha": "9acf60bf4a87ec1fe064ef2d8b54255867396770", "filename": "crates/project-model/src/tests.rs", "status": "modified", "additions": 66, "deletions": 1496, "changes": 1562, "blob_url": "https://github.com/rust-lang/rust/blob/968850d7bf9916b4d2a6492406a10fd562120b48/crates%2Fproject-model%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/968850d7bf9916b4d2a6492406a10fd562120b48/crates%2Fproject-model%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproject-model%2Fsrc%2Ftests.rs?ref=968850d7bf9916b4d2a6492406a10fd562120b48", "patch": "@@ -5,8 +5,9 @@ use std::{\n \n use base_db::{CrateGraph, FileId, ProcMacroPaths};\n use cfg::{CfgAtom, CfgDiff};\n-use expect_test::{expect, Expect};\n+use expect_test::{expect_file, ExpectFile};\n use paths::{AbsPath, AbsPathBuf};\n+use rustc_hash::FxHashMap;\n use serde::de::DeserializeOwned;\n \n use crate::{\n@@ -37,6 +38,33 @@ fn load_cargo_with_overrides(\n     to_crate_graph(project_workspace)\n }\n \n+fn load_cargo_with_sysroot(\n+    file_map: &mut FxHashMap<AbsPathBuf, FileId>,\n+    file: &str,\n+) -> (CrateGraph, ProcMacroPaths) {\n+    let meta = get_test_json_file(file);\n+    let cargo_workspace = CargoWorkspace::new(meta);\n+    let project_workspace = ProjectWorkspace::Cargo {\n+        cargo: cargo_workspace,\n+        build_scripts: WorkspaceBuildScripts::default(),\n+        sysroot: Ok(get_fake_sysroot()),\n+        rustc: Err(None),\n+        rustc_cfg: Vec::new(),\n+        cfg_overrides: Default::default(),\n+        toolchain: None,\n+        target_layout: Err(\"target_data_layout not loaded\".into()),\n+    };\n+    project_workspace.to_crate_graph(\n+        &mut {\n+            |path| {\n+                let len = file_map.len();\n+                Some(*file_map.entry(path.to_path_buf()).or_insert(FileId(len as u32)))\n+            }\n+        },\n+        &Default::default(),\n+    )\n+}\n+\n fn load_rust_project(file: &str) -> (CrateGraph, ProcMacroPaths) {\n     let data = get_test_json_file(file);\n     let project = rooted_project_json(data);\n@@ -109,7 +137,7 @@ fn to_crate_graph(project_workspace: ProjectWorkspace) -> (CrateGraph, ProcMacro\n     )\n }\n \n-fn check_crate_graph(crate_graph: CrateGraph, expect: Expect) {\n+fn check_crate_graph(crate_graph: CrateGraph, expect: ExpectFile) {\n     let mut crate_graph = format!(\"{crate_graph:#?}\");\n     replace_root(&mut crate_graph, false);\n     expect.assert_eq(&crate_graph);\n@@ -124,347 +152,9 @@ fn cargo_hello_world_project_model_with_wildcard_overrides() {\n         load_cargo_with_overrides(\"hello-world-metadata.json\", cfg_overrides);\n     check_crate_graph(\n         crate_graph,\n-        expect![[r#\"\n-            {\n-                0: CrateData {\n-                    root_file_id: FileId(\n-                        1,\n-                    ),\n-                    edition: Edition2018,\n-                    version: Some(\n-                        \"0.1.0\",\n-                    ),\n-                    display_name: Some(\n-                        CrateDisplayName {\n-                            crate_name: CrateName(\n-                                \"hello_world\",\n-                            ),\n-                            canonical_name: \"hello-world\",\n-                        },\n-                    ),\n-                    cfg_options: CfgOptions(\n-                        [\n-                            \"debug_assertions\",\n-                        ],\n-                    ),\n-                    potential_cfg_options: None,\n-                    env: Env {\n-                        entries: {\n-                            \"CARGO_PKG_LICENSE\": \"\",\n-                            \"CARGO_PKG_VERSION_MAJOR\": \"0\",\n-                            \"CARGO_MANIFEST_DIR\": \"$ROOT$hello-world\",\n-                            \"CARGO_PKG_VERSION\": \"0.1.0\",\n-                            \"CARGO_PKG_AUTHORS\": \"\",\n-                            \"CARGO_CRATE_NAME\": \"hello_world\",\n-                            \"CARGO_PKG_LICENSE_FILE\": \"\",\n-                            \"CARGO_PKG_HOMEPAGE\": \"\",\n-                            \"CARGO_PKG_DESCRIPTION\": \"\",\n-                            \"CARGO_PKG_NAME\": \"hello-world\",\n-                            \"CARGO_PKG_VERSION_PATCH\": \"0\",\n-                            \"CARGO\": \"cargo\",\n-                            \"CARGO_PKG_REPOSITORY\": \"\",\n-                            \"CARGO_PKG_VERSION_MINOR\": \"1\",\n-                            \"CARGO_PKG_VERSION_PRE\": \"\",\n-                        },\n-                    },\n-                    dependencies: [\n-                        Dependency {\n-                            crate_id: Idx::<CrateData>(4),\n-                            name: CrateName(\n-                                \"libc\",\n-                            ),\n-                            prelude: true,\n-                        },\n-                    ],\n-                    origin: Local {\n-                        repo: None,\n-                        name: Some(\n-                            \"hello-world\",\n-                        ),\n-                    },\n-                    is_proc_macro: false,\n-                    target_layout: Err(\n-                        \"target_data_layout not loaded\",\n-                    ),\n-                    channel: None,\n-                },\n-                1: CrateData {\n-                    root_file_id: FileId(\n-                        2,\n-                    ),\n-                    edition: Edition2018,\n-                    version: Some(\n-                        \"0.1.0\",\n-                    ),\n-                    display_name: Some(\n-                        CrateDisplayName {\n-                            crate_name: CrateName(\n-                                \"hello_world\",\n-                            ),\n-                            canonical_name: \"hello-world\",\n-                        },\n-                    ),\n-                    cfg_options: CfgOptions(\n-                        [\n-                            \"debug_assertions\",\n-                        ],\n-                    ),\n-                    potential_cfg_options: None,\n-                    env: Env {\n-                        entries: {\n-                            \"CARGO_PKG_LICENSE\": \"\",\n-                            \"CARGO_PKG_VERSION_MAJOR\": \"0\",\n-                            \"CARGO_MANIFEST_DIR\": \"$ROOT$hello-world\",\n-                            \"CARGO_PKG_VERSION\": \"0.1.0\",\n-                            \"CARGO_PKG_AUTHORS\": \"\",\n-                            \"CARGO_CRATE_NAME\": \"hello_world\",\n-                            \"CARGO_PKG_LICENSE_FILE\": \"\",\n-                            \"CARGO_PKG_HOMEPAGE\": \"\",\n-                            \"CARGO_PKG_DESCRIPTION\": \"\",\n-                            \"CARGO_PKG_NAME\": \"hello-world\",\n-                            \"CARGO_PKG_VERSION_PATCH\": \"0\",\n-                            \"CARGO\": \"cargo\",\n-                            \"CARGO_PKG_REPOSITORY\": \"\",\n-                            \"CARGO_PKG_VERSION_MINOR\": \"1\",\n-                            \"CARGO_PKG_VERSION_PRE\": \"\",\n-                        },\n-                    },\n-                    dependencies: [\n-                        Dependency {\n-                            crate_id: Idx::<CrateData>(0),\n-                            name: CrateName(\n-                                \"hello_world\",\n-                            ),\n-                            prelude: true,\n-                        },\n-                        Dependency {\n-                            crate_id: Idx::<CrateData>(4),\n-                            name: CrateName(\n-                                \"libc\",\n-                            ),\n-                            prelude: true,\n-                        },\n-                    ],\n-                    origin: Local {\n-                        repo: None,\n-                        name: Some(\n-                            \"hello-world\",\n-                        ),\n-                    },\n-                    is_proc_macro: false,\n-                    target_layout: Err(\n-                        \"target_data_layout not loaded\",\n-                    ),\n-                    channel: None,\n-                },\n-                2: CrateData {\n-                    root_file_id: FileId(\n-                        3,\n-                    ),\n-                    edition: Edition2018,\n-                    version: Some(\n-                        \"0.1.0\",\n-                    ),\n-                    display_name: Some(\n-                        CrateDisplayName {\n-                            crate_name: CrateName(\n-                                \"an_example\",\n-                            ),\n-                            canonical_name: \"an-example\",\n-                        },\n-                    ),\n-                    cfg_options: CfgOptions(\n-                        [\n-                            \"debug_assertions\",\n-                        ],\n-                    ),\n-                    potential_cfg_options: None,\n-                    env: Env {\n-                        entries: {\n-                            \"CARGO_PKG_LICENSE\": \"\",\n-                            \"CARGO_PKG_VERSION_MAJOR\": \"0\",\n-                            \"CARGO_MANIFEST_DIR\": \"$ROOT$hello-world\",\n-                            \"CARGO_PKG_VERSION\": \"0.1.0\",\n-                            \"CARGO_PKG_AUTHORS\": \"\",\n-                            \"CARGO_CRATE_NAME\": \"hello_world\",\n-                            \"CARGO_PKG_LICENSE_FILE\": \"\",\n-                            \"CARGO_PKG_HOMEPAGE\": \"\",\n-                            \"CARGO_PKG_DESCRIPTION\": \"\",\n-                            \"CARGO_PKG_NAME\": \"hello-world\",\n-                            \"CARGO_PKG_VERSION_PATCH\": \"0\",\n-                            \"CARGO\": \"cargo\",\n-                            \"CARGO_PKG_REPOSITORY\": \"\",\n-                            \"CARGO_PKG_VERSION_MINOR\": \"1\",\n-                            \"CARGO_PKG_VERSION_PRE\": \"\",\n-                        },\n-                    },\n-                    dependencies: [\n-                        Dependency {\n-                            crate_id: Idx::<CrateData>(0),\n-                            name: CrateName(\n-                                \"hello_world\",\n-                            ),\n-                            prelude: true,\n-                        },\n-                        Dependency {\n-                            crate_id: Idx::<CrateData>(4),\n-                            name: CrateName(\n-                                \"libc\",\n-                            ),\n-                            prelude: true,\n-                        },\n-                    ],\n-                    origin: Local {\n-                        repo: None,\n-                        name: Some(\n-                            \"hello-world\",\n-                        ),\n-                    },\n-                    is_proc_macro: false,\n-                    target_layout: Err(\n-                        \"target_data_layout not loaded\",\n-                    ),\n-                    channel: None,\n-                },\n-                3: CrateData {\n-                    root_file_id: FileId(\n-                        4,\n-                    ),\n-                    edition: Edition2018,\n-                    version: Some(\n-                        \"0.1.0\",\n-                    ),\n-                    display_name: Some(\n-                        CrateDisplayName {\n-                            crate_name: CrateName(\n-                                \"it\",\n-                            ),\n-                            canonical_name: \"it\",\n-                        },\n-                    ),\n-                    cfg_options: CfgOptions(\n-                        [\n-                            \"debug_assertions\",\n-                        ],\n-                    ),\n-                    potential_cfg_options: None,\n-                    env: Env {\n-                        entries: {\n-                            \"CARGO_PKG_LICENSE\": \"\",\n-                            \"CARGO_PKG_VERSION_MAJOR\": \"0\",\n-                            \"CARGO_MANIFEST_DIR\": \"$ROOT$hello-world\",\n-                            \"CARGO_PKG_VERSION\": \"0.1.0\",\n-                            \"CARGO_PKG_AUTHORS\": \"\",\n-                            \"CARGO_CRATE_NAME\": \"hello_world\",\n-                            \"CARGO_PKG_LICENSE_FILE\": \"\",\n-                            \"CARGO_PKG_HOMEPAGE\": \"\",\n-                            \"CARGO_PKG_DESCRIPTION\": \"\",\n-                            \"CARGO_PKG_NAME\": \"hello-world\",\n-                            \"CARGO_PKG_VERSION_PATCH\": \"0\",\n-                            \"CARGO\": \"cargo\",\n-                            \"CARGO_PKG_REPOSITORY\": \"\",\n-                            \"CARGO_PKG_VERSION_MINOR\": \"1\",\n-                            \"CARGO_PKG_VERSION_PRE\": \"\",\n-                        },\n-                    },\n-                    dependencies: [\n-                        Dependency {\n-                            crate_id: Idx::<CrateData>(0),\n-                            name: CrateName(\n-                                \"hello_world\",\n-                            ),\n-                            prelude: true,\n-                        },\n-                        Dependency {\n-                            crate_id: Idx::<CrateData>(4),\n-                            name: CrateName(\n-                                \"libc\",\n-                            ),\n-                            prelude: true,\n-                        },\n-                    ],\n-                    origin: Local {\n-                        repo: None,\n-                        name: Some(\n-                            \"hello-world\",\n-                        ),\n-                    },\n-                    is_proc_macro: false,\n-                    target_layout: Err(\n-                        \"target_data_layout not loaded\",\n-                    ),\n-                    channel: None,\n-                },\n-                4: CrateData {\n-                    root_file_id: FileId(\n-                        5,\n-                    ),\n-                    edition: Edition2015,\n-                    version: Some(\n-                        \"0.2.98\",\n-                    ),\n-                    display_name: Some(\n-                        CrateDisplayName {\n-                            crate_name: CrateName(\n-                                \"libc\",\n-                            ),\n-                            canonical_name: \"libc\",\n-                        },\n-                    ),\n-                    cfg_options: CfgOptions(\n-                        [\n-                            \"debug_assertions\",\n-                            \"feature=default\",\n-                            \"feature=std\",\n-                        ],\n-                    ),\n-                    potential_cfg_options: Some(\n-                        CfgOptions(\n-                            [\n-                                \"debug_assertions\",\n-                                \"feature=align\",\n-                                \"feature=const-extern-fn\",\n-                                \"feature=default\",\n-                                \"feature=extra_traits\",\n-                                \"feature=rustc-dep-of-std\",\n-                                \"feature=std\",\n-                                \"feature=use_std\",\n-                            ],\n-                        ),\n-                    ),\n-                    env: Env {\n-                        entries: {\n-                            \"CARGO_PKG_LICENSE\": \"\",\n-                            \"CARGO_PKG_VERSION_MAJOR\": \"0\",\n-                            \"CARGO_MANIFEST_DIR\": \"$ROOT$.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.98\",\n-                            \"CARGO_PKG_VERSION\": \"0.2.98\",\n-                            \"CARGO_PKG_AUTHORS\": \"\",\n-                            \"CARGO_CRATE_NAME\": \"libc\",\n-                            \"CARGO_PKG_LICENSE_FILE\": \"\",\n-                            \"CARGO_PKG_HOMEPAGE\": \"\",\n-                            \"CARGO_PKG_DESCRIPTION\": \"\",\n-                            \"CARGO_PKG_NAME\": \"libc\",\n-                            \"CARGO_PKG_VERSION_PATCH\": \"98\",\n-                            \"CARGO\": \"cargo\",\n-                            \"CARGO_PKG_REPOSITORY\": \"\",\n-                            \"CARGO_PKG_VERSION_MINOR\": \"2\",\n-                            \"CARGO_PKG_VERSION_PRE\": \"\",\n-                        },\n-                    },\n-                    dependencies: [],\n-                    origin: Library {\n-                        repo: Some(\n-                            \"https://github.com/rust-lang/libc\",\n-                        ),\n-                        name: \"libc\",\n-                    },\n-                    is_proc_macro: false,\n-                    target_layout: Err(\n-                        \"target_data_layout not loaded\",\n-                    ),\n-                    channel: None,\n-                },\n-            }\"#]],\n+        expect_file![\n+            \"../test_data/output/cargo_hello_world_project_model_with_wildcard_overrides.txt\"\n+        ],\n     )\n }\n \n@@ -483,351 +173,9 @@ fn cargo_hello_world_project_model_with_selective_overrides() {\n         load_cargo_with_overrides(\"hello-world-metadata.json\", cfg_overrides);\n     check_crate_graph(\n         crate_graph,\n-        expect![[r#\"\n-            {\n-                0: CrateData {\n-                    root_file_id: FileId(\n-                        1,\n-                    ),\n-                    edition: Edition2018,\n-                    version: Some(\n-                        \"0.1.0\",\n-                    ),\n-                    display_name: Some(\n-                        CrateDisplayName {\n-                            crate_name: CrateName(\n-                                \"hello_world\",\n-                            ),\n-                            canonical_name: \"hello-world\",\n-                        },\n-                    ),\n-                    cfg_options: CfgOptions(\n-                        [\n-                            \"debug_assertions\",\n-                            \"test\",\n-                        ],\n-                    ),\n-                    potential_cfg_options: None,\n-                    env: Env {\n-                        entries: {\n-                            \"CARGO_PKG_LICENSE\": \"\",\n-                            \"CARGO_PKG_VERSION_MAJOR\": \"0\",\n-                            \"CARGO_MANIFEST_DIR\": \"$ROOT$hello-world\",\n-                            \"CARGO_PKG_VERSION\": \"0.1.0\",\n-                            \"CARGO_PKG_AUTHORS\": \"\",\n-                            \"CARGO_CRATE_NAME\": \"hello_world\",\n-                            \"CARGO_PKG_LICENSE_FILE\": \"\",\n-                            \"CARGO_PKG_HOMEPAGE\": \"\",\n-                            \"CARGO_PKG_DESCRIPTION\": \"\",\n-                            \"CARGO_PKG_NAME\": \"hello-world\",\n-                            \"CARGO_PKG_VERSION_PATCH\": \"0\",\n-                            \"CARGO\": \"cargo\",\n-                            \"CARGO_PKG_REPOSITORY\": \"\",\n-                            \"CARGO_PKG_VERSION_MINOR\": \"1\",\n-                            \"CARGO_PKG_VERSION_PRE\": \"\",\n-                        },\n-                    },\n-                    dependencies: [\n-                        Dependency {\n-                            crate_id: Idx::<CrateData>(4),\n-                            name: CrateName(\n-                                \"libc\",\n-                            ),\n-                            prelude: true,\n-                        },\n-                    ],\n-                    origin: Local {\n-                        repo: None,\n-                        name: Some(\n-                            \"hello-world\",\n-                        ),\n-                    },\n-                    is_proc_macro: false,\n-                    target_layout: Err(\n-                        \"target_data_layout not loaded\",\n-                    ),\n-                    channel: None,\n-                },\n-                1: CrateData {\n-                    root_file_id: FileId(\n-                        2,\n-                    ),\n-                    edition: Edition2018,\n-                    version: Some(\n-                        \"0.1.0\",\n-                    ),\n-                    display_name: Some(\n-                        CrateDisplayName {\n-                            crate_name: CrateName(\n-                                \"hello_world\",\n-                            ),\n-                            canonical_name: \"hello-world\",\n-                        },\n-                    ),\n-                    cfg_options: CfgOptions(\n-                        [\n-                            \"debug_assertions\",\n-                            \"test\",\n-                        ],\n-                    ),\n-                    potential_cfg_options: None,\n-                    env: Env {\n-                        entries: {\n-                            \"CARGO_PKG_LICENSE\": \"\",\n-                            \"CARGO_PKG_VERSION_MAJOR\": \"0\",\n-                            \"CARGO_MANIFEST_DIR\": \"$ROOT$hello-world\",\n-                            \"CARGO_PKG_VERSION\": \"0.1.0\",\n-                            \"CARGO_PKG_AUTHORS\": \"\",\n-                            \"CARGO_CRATE_NAME\": \"hello_world\",\n-                            \"CARGO_PKG_LICENSE_FILE\": \"\",\n-                            \"CARGO_PKG_HOMEPAGE\": \"\",\n-                            \"CARGO_PKG_DESCRIPTION\": \"\",\n-                            \"CARGO_PKG_NAME\": \"hello-world\",\n-                            \"CARGO_PKG_VERSION_PATCH\": \"0\",\n-                            \"CARGO\": \"cargo\",\n-                            \"CARGO_PKG_REPOSITORY\": \"\",\n-                            \"CARGO_PKG_VERSION_MINOR\": \"1\",\n-                            \"CARGO_PKG_VERSION_PRE\": \"\",\n-                        },\n-                    },\n-                    dependencies: [\n-                        Dependency {\n-                            crate_id: Idx::<CrateData>(0),\n-                            name: CrateName(\n-                                \"hello_world\",\n-                            ),\n-                            prelude: true,\n-                        },\n-                        Dependency {\n-                            crate_id: Idx::<CrateData>(4),\n-                            name: CrateName(\n-                                \"libc\",\n-                            ),\n-                            prelude: true,\n-                        },\n-                    ],\n-                    origin: Local {\n-                        repo: None,\n-                        name: Some(\n-                            \"hello-world\",\n-                        ),\n-                    },\n-                    is_proc_macro: false,\n-                    target_layout: Err(\n-                        \"target_data_layout not loaded\",\n-                    ),\n-                    channel: None,\n-                },\n-                2: CrateData {\n-                    root_file_id: FileId(\n-                        3,\n-                    ),\n-                    edition: Edition2018,\n-                    version: Some(\n-                        \"0.1.0\",\n-                    ),\n-                    display_name: Some(\n-                        CrateDisplayName {\n-                            crate_name: CrateName(\n-                                \"an_example\",\n-                            ),\n-                            canonical_name: \"an-example\",\n-                        },\n-                    ),\n-                    cfg_options: CfgOptions(\n-                        [\n-                            \"debug_assertions\",\n-                            \"test\",\n-                        ],\n-                    ),\n-                    potential_cfg_options: None,\n-                    env: Env {\n-                        entries: {\n-                            \"CARGO_PKG_LICENSE\": \"\",\n-                            \"CARGO_PKG_VERSION_MAJOR\": \"0\",\n-                            \"CARGO_MANIFEST_DIR\": \"$ROOT$hello-world\",\n-                            \"CARGO_PKG_VERSION\": \"0.1.0\",\n-                            \"CARGO_PKG_AUTHORS\": \"\",\n-                            \"CARGO_CRATE_NAME\": \"hello_world\",\n-                            \"CARGO_PKG_LICENSE_FILE\": \"\",\n-                            \"CARGO_PKG_HOMEPAGE\": \"\",\n-                            \"CARGO_PKG_DESCRIPTION\": \"\",\n-                            \"CARGO_PKG_NAME\": \"hello-world\",\n-                            \"CARGO_PKG_VERSION_PATCH\": \"0\",\n-                            \"CARGO\": \"cargo\",\n-                            \"CARGO_PKG_REPOSITORY\": \"\",\n-                            \"CARGO_PKG_VERSION_MINOR\": \"1\",\n-                            \"CARGO_PKG_VERSION_PRE\": \"\",\n-                        },\n-                    },\n-                    dependencies: [\n-                        Dependency {\n-                            crate_id: Idx::<CrateData>(0),\n-                            name: CrateName(\n-                                \"hello_world\",\n-                            ),\n-                            prelude: true,\n-                        },\n-                        Dependency {\n-                            crate_id: Idx::<CrateData>(4),\n-                            name: CrateName(\n-                                \"libc\",\n-                            ),\n-                            prelude: true,\n-                        },\n-                    ],\n-                    origin: Local {\n-                        repo: None,\n-                        name: Some(\n-                            \"hello-world\",\n-                        ),\n-                    },\n-                    is_proc_macro: false,\n-                    target_layout: Err(\n-                        \"target_data_layout not loaded\",\n-                    ),\n-                    channel: None,\n-                },\n-                3: CrateData {\n-                    root_file_id: FileId(\n-                        4,\n-                    ),\n-                    edition: Edition2018,\n-                    version: Some(\n-                        \"0.1.0\",\n-                    ),\n-                    display_name: Some(\n-                        CrateDisplayName {\n-                            crate_name: CrateName(\n-                                \"it\",\n-                            ),\n-                            canonical_name: \"it\",\n-                        },\n-                    ),\n-                    cfg_options: CfgOptions(\n-                        [\n-                            \"debug_assertions\",\n-                            \"test\",\n-                        ],\n-                    ),\n-                    potential_cfg_options: None,\n-                    env: Env {\n-                        entries: {\n-                            \"CARGO_PKG_LICENSE\": \"\",\n-                            \"CARGO_PKG_VERSION_MAJOR\": \"0\",\n-                            \"CARGO_MANIFEST_DIR\": \"$ROOT$hello-world\",\n-                            \"CARGO_PKG_VERSION\": \"0.1.0\",\n-                            \"CARGO_PKG_AUTHORS\": \"\",\n-                            \"CARGO_CRATE_NAME\": \"hello_world\",\n-                            \"CARGO_PKG_LICENSE_FILE\": \"\",\n-                            \"CARGO_PKG_HOMEPAGE\": \"\",\n-                            \"CARGO_PKG_DESCRIPTION\": \"\",\n-                            \"CARGO_PKG_NAME\": \"hello-world\",\n-                            \"CARGO_PKG_VERSION_PATCH\": \"0\",\n-                            \"CARGO\": \"cargo\",\n-                            \"CARGO_PKG_REPOSITORY\": \"\",\n-                            \"CARGO_PKG_VERSION_MINOR\": \"1\",\n-                            \"CARGO_PKG_VERSION_PRE\": \"\",\n-                        },\n-                    },\n-                    dependencies: [\n-                        Dependency {\n-                            crate_id: Idx::<CrateData>(0),\n-                            name: CrateName(\n-                                \"hello_world\",\n-                            ),\n-                            prelude: true,\n-                        },\n-                        Dependency {\n-                            crate_id: Idx::<CrateData>(4),\n-                            name: CrateName(\n-                                \"libc\",\n-                            ),\n-                            prelude: true,\n-                        },\n-                    ],\n-                    origin: Local {\n-                        repo: None,\n-                        name: Some(\n-                            \"hello-world\",\n-                        ),\n-                    },\n-                    is_proc_macro: false,\n-                    target_layout: Err(\n-                        \"target_data_layout not loaded\",\n-                    ),\n-                    channel: None,\n-                },\n-                4: CrateData {\n-                    root_file_id: FileId(\n-                        5,\n-                    ),\n-                    edition: Edition2015,\n-                    version: Some(\n-                        \"0.2.98\",\n-                    ),\n-                    display_name: Some(\n-                        CrateDisplayName {\n-                            crate_name: CrateName(\n-                                \"libc\",\n-                            ),\n-                            canonical_name: \"libc\",\n-                        },\n-                    ),\n-                    cfg_options: CfgOptions(\n-                        [\n-                            \"debug_assertions\",\n-                            \"feature=default\",\n-                            \"feature=std\",\n-                        ],\n-                    ),\n-                    potential_cfg_options: Some(\n-                        CfgOptions(\n-                            [\n-                                \"debug_assertions\",\n-                                \"feature=align\",\n-                                \"feature=const-extern-fn\",\n-                                \"feature=default\",\n-                                \"feature=extra_traits\",\n-                                \"feature=rustc-dep-of-std\",\n-                                \"feature=std\",\n-                                \"feature=use_std\",\n-                            ],\n-                        ),\n-                    ),\n-                    env: Env {\n-                        entries: {\n-                            \"CARGO_PKG_LICENSE\": \"\",\n-                            \"CARGO_PKG_VERSION_MAJOR\": \"0\",\n-                            \"CARGO_MANIFEST_DIR\": \"$ROOT$.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.98\",\n-                            \"CARGO_PKG_VERSION\": \"0.2.98\",\n-                            \"CARGO_PKG_AUTHORS\": \"\",\n-                            \"CARGO_CRATE_NAME\": \"libc\",\n-                            \"CARGO_PKG_LICENSE_FILE\": \"\",\n-                            \"CARGO_PKG_HOMEPAGE\": \"\",\n-                            \"CARGO_PKG_DESCRIPTION\": \"\",\n-                            \"CARGO_PKG_NAME\": \"libc\",\n-                            \"CARGO_PKG_VERSION_PATCH\": \"98\",\n-                            \"CARGO\": \"cargo\",\n-                            \"CARGO_PKG_REPOSITORY\": \"\",\n-                            \"CARGO_PKG_VERSION_MINOR\": \"2\",\n-                            \"CARGO_PKG_VERSION_PRE\": \"\",\n-                        },\n-                    },\n-                    dependencies: [],\n-                    origin: Library {\n-                        repo: Some(\n-                            \"https://github.com/rust-lang/libc\",\n-                        ),\n-                        name: \"libc\",\n-                    },\n-                    is_proc_macro: false,\n-                    target_layout: Err(\n-                        \"target_data_layout not loaded\",\n-                    ),\n-                    channel: None,\n-                },\n-            }\"#]],\n+        expect_file![\n+            \"../test_data/output/cargo_hello_world_project_model_with_selective_overrides.txt\"\n+        ],\n     )\n }\n \n@@ -836,351 +184,7 @@ fn cargo_hello_world_project_model() {\n     let (crate_graph, _proc_macros) = load_cargo(\"hello-world-metadata.json\");\n     check_crate_graph(\n         crate_graph,\n-        expect![[r#\"\n-            {\n-                0: CrateData {\n-                    root_file_id: FileId(\n-                        1,\n-                    ),\n-                    edition: Edition2018,\n-                    version: Some(\n-                        \"0.1.0\",\n-                    ),\n-                    display_name: Some(\n-                        CrateDisplayName {\n-                            crate_name: CrateName(\n-                                \"hello_world\",\n-                            ),\n-                            canonical_name: \"hello-world\",\n-                        },\n-                    ),\n-                    cfg_options: CfgOptions(\n-                        [\n-                            \"debug_assertions\",\n-                            \"test\",\n-                        ],\n-                    ),\n-                    potential_cfg_options: None,\n-                    env: Env {\n-                        entries: {\n-                            \"CARGO_PKG_LICENSE\": \"\",\n-                            \"CARGO_PKG_VERSION_MAJOR\": \"0\",\n-                            \"CARGO_MANIFEST_DIR\": \"$ROOT$hello-world\",\n-                            \"CARGO_PKG_VERSION\": \"0.1.0\",\n-                            \"CARGO_PKG_AUTHORS\": \"\",\n-                            \"CARGO_CRATE_NAME\": \"hello_world\",\n-                            \"CARGO_PKG_LICENSE_FILE\": \"\",\n-                            \"CARGO_PKG_HOMEPAGE\": \"\",\n-                            \"CARGO_PKG_DESCRIPTION\": \"\",\n-                            \"CARGO_PKG_NAME\": \"hello-world\",\n-                            \"CARGO_PKG_VERSION_PATCH\": \"0\",\n-                            \"CARGO\": \"cargo\",\n-                            \"CARGO_PKG_REPOSITORY\": \"\",\n-                            \"CARGO_PKG_VERSION_MINOR\": \"1\",\n-                            \"CARGO_PKG_VERSION_PRE\": \"\",\n-                        },\n-                    },\n-                    dependencies: [\n-                        Dependency {\n-                            crate_id: Idx::<CrateData>(4),\n-                            name: CrateName(\n-                                \"libc\",\n-                            ),\n-                            prelude: true,\n-                        },\n-                    ],\n-                    origin: Local {\n-                        repo: None,\n-                        name: Some(\n-                            \"hello-world\",\n-                        ),\n-                    },\n-                    is_proc_macro: false,\n-                    target_layout: Err(\n-                        \"target_data_layout not loaded\",\n-                    ),\n-                    channel: None,\n-                },\n-                1: CrateData {\n-                    root_file_id: FileId(\n-                        2,\n-                    ),\n-                    edition: Edition2018,\n-                    version: Some(\n-                        \"0.1.0\",\n-                    ),\n-                    display_name: Some(\n-                        CrateDisplayName {\n-                            crate_name: CrateName(\n-                                \"hello_world\",\n-                            ),\n-                            canonical_name: \"hello-world\",\n-                        },\n-                    ),\n-                    cfg_options: CfgOptions(\n-                        [\n-                            \"debug_assertions\",\n-                            \"test\",\n-                        ],\n-                    ),\n-                    potential_cfg_options: None,\n-                    env: Env {\n-                        entries: {\n-                            \"CARGO_PKG_LICENSE\": \"\",\n-                            \"CARGO_PKG_VERSION_MAJOR\": \"0\",\n-                            \"CARGO_MANIFEST_DIR\": \"$ROOT$hello-world\",\n-                            \"CARGO_PKG_VERSION\": \"0.1.0\",\n-                            \"CARGO_PKG_AUTHORS\": \"\",\n-                            \"CARGO_CRATE_NAME\": \"hello_world\",\n-                            \"CARGO_PKG_LICENSE_FILE\": \"\",\n-                            \"CARGO_PKG_HOMEPAGE\": \"\",\n-                            \"CARGO_PKG_DESCRIPTION\": \"\",\n-                            \"CARGO_PKG_NAME\": \"hello-world\",\n-                            \"CARGO_PKG_VERSION_PATCH\": \"0\",\n-                            \"CARGO\": \"cargo\",\n-                            \"CARGO_PKG_REPOSITORY\": \"\",\n-                            \"CARGO_PKG_VERSION_MINOR\": \"1\",\n-                            \"CARGO_PKG_VERSION_PRE\": \"\",\n-                        },\n-                    },\n-                    dependencies: [\n-                        Dependency {\n-                            crate_id: Idx::<CrateData>(0),\n-                            name: CrateName(\n-                                \"hello_world\",\n-                            ),\n-                            prelude: true,\n-                        },\n-                        Dependency {\n-                            crate_id: Idx::<CrateData>(4),\n-                            name: CrateName(\n-                                \"libc\",\n-                            ),\n-                            prelude: true,\n-                        },\n-                    ],\n-                    origin: Local {\n-                        repo: None,\n-                        name: Some(\n-                            \"hello-world\",\n-                        ),\n-                    },\n-                    is_proc_macro: false,\n-                    target_layout: Err(\n-                        \"target_data_layout not loaded\",\n-                    ),\n-                    channel: None,\n-                },\n-                2: CrateData {\n-                    root_file_id: FileId(\n-                        3,\n-                    ),\n-                    edition: Edition2018,\n-                    version: Some(\n-                        \"0.1.0\",\n-                    ),\n-                    display_name: Some(\n-                        CrateDisplayName {\n-                            crate_name: CrateName(\n-                                \"an_example\",\n-                            ),\n-                            canonical_name: \"an-example\",\n-                        },\n-                    ),\n-                    cfg_options: CfgOptions(\n-                        [\n-                            \"debug_assertions\",\n-                            \"test\",\n-                        ],\n-                    ),\n-                    potential_cfg_options: None,\n-                    env: Env {\n-                        entries: {\n-                            \"CARGO_PKG_LICENSE\": \"\",\n-                            \"CARGO_PKG_VERSION_MAJOR\": \"0\",\n-                            \"CARGO_MANIFEST_DIR\": \"$ROOT$hello-world\",\n-                            \"CARGO_PKG_VERSION\": \"0.1.0\",\n-                            \"CARGO_PKG_AUTHORS\": \"\",\n-                            \"CARGO_CRATE_NAME\": \"hello_world\",\n-                            \"CARGO_PKG_LICENSE_FILE\": \"\",\n-                            \"CARGO_PKG_HOMEPAGE\": \"\",\n-                            \"CARGO_PKG_DESCRIPTION\": \"\",\n-                            \"CARGO_PKG_NAME\": \"hello-world\",\n-                            \"CARGO_PKG_VERSION_PATCH\": \"0\",\n-                            \"CARGO\": \"cargo\",\n-                            \"CARGO_PKG_REPOSITORY\": \"\",\n-                            \"CARGO_PKG_VERSION_MINOR\": \"1\",\n-                            \"CARGO_PKG_VERSION_PRE\": \"\",\n-                        },\n-                    },\n-                    dependencies: [\n-                        Dependency {\n-                            crate_id: Idx::<CrateData>(0),\n-                            name: CrateName(\n-                                \"hello_world\",\n-                            ),\n-                            prelude: true,\n-                        },\n-                        Dependency {\n-                            crate_id: Idx::<CrateData>(4),\n-                            name: CrateName(\n-                                \"libc\",\n-                            ),\n-                            prelude: true,\n-                        },\n-                    ],\n-                    origin: Local {\n-                        repo: None,\n-                        name: Some(\n-                            \"hello-world\",\n-                        ),\n-                    },\n-                    is_proc_macro: false,\n-                    target_layout: Err(\n-                        \"target_data_layout not loaded\",\n-                    ),\n-                    channel: None,\n-                },\n-                3: CrateData {\n-                    root_file_id: FileId(\n-                        4,\n-                    ),\n-                    edition: Edition2018,\n-                    version: Some(\n-                        \"0.1.0\",\n-                    ),\n-                    display_name: Some(\n-                        CrateDisplayName {\n-                            crate_name: CrateName(\n-                                \"it\",\n-                            ),\n-                            canonical_name: \"it\",\n-                        },\n-                    ),\n-                    cfg_options: CfgOptions(\n-                        [\n-                            \"debug_assertions\",\n-                            \"test\",\n-                        ],\n-                    ),\n-                    potential_cfg_options: None,\n-                    env: Env {\n-                        entries: {\n-                            \"CARGO_PKG_LICENSE\": \"\",\n-                            \"CARGO_PKG_VERSION_MAJOR\": \"0\",\n-                            \"CARGO_MANIFEST_DIR\": \"$ROOT$hello-world\",\n-                            \"CARGO_PKG_VERSION\": \"0.1.0\",\n-                            \"CARGO_PKG_AUTHORS\": \"\",\n-                            \"CARGO_CRATE_NAME\": \"hello_world\",\n-                            \"CARGO_PKG_LICENSE_FILE\": \"\",\n-                            \"CARGO_PKG_HOMEPAGE\": \"\",\n-                            \"CARGO_PKG_DESCRIPTION\": \"\",\n-                            \"CARGO_PKG_NAME\": \"hello-world\",\n-                            \"CARGO_PKG_VERSION_PATCH\": \"0\",\n-                            \"CARGO\": \"cargo\",\n-                            \"CARGO_PKG_REPOSITORY\": \"\",\n-                            \"CARGO_PKG_VERSION_MINOR\": \"1\",\n-                            \"CARGO_PKG_VERSION_PRE\": \"\",\n-                        },\n-                    },\n-                    dependencies: [\n-                        Dependency {\n-                            crate_id: Idx::<CrateData>(0),\n-                            name: CrateName(\n-                                \"hello_world\",\n-                            ),\n-                            prelude: true,\n-                        },\n-                        Dependency {\n-                            crate_id: Idx::<CrateData>(4),\n-                            name: CrateName(\n-                                \"libc\",\n-                            ),\n-                            prelude: true,\n-                        },\n-                    ],\n-                    origin: Local {\n-                        repo: None,\n-                        name: Some(\n-                            \"hello-world\",\n-                        ),\n-                    },\n-                    is_proc_macro: false,\n-                    target_layout: Err(\n-                        \"target_data_layout not loaded\",\n-                    ),\n-                    channel: None,\n-                },\n-                4: CrateData {\n-                    root_file_id: FileId(\n-                        5,\n-                    ),\n-                    edition: Edition2015,\n-                    version: Some(\n-                        \"0.2.98\",\n-                    ),\n-                    display_name: Some(\n-                        CrateDisplayName {\n-                            crate_name: CrateName(\n-                                \"libc\",\n-                            ),\n-                            canonical_name: \"libc\",\n-                        },\n-                    ),\n-                    cfg_options: CfgOptions(\n-                        [\n-                            \"debug_assertions\",\n-                            \"feature=default\",\n-                            \"feature=std\",\n-                        ],\n-                    ),\n-                    potential_cfg_options: Some(\n-                        CfgOptions(\n-                            [\n-                                \"debug_assertions\",\n-                                \"feature=align\",\n-                                \"feature=const-extern-fn\",\n-                                \"feature=default\",\n-                                \"feature=extra_traits\",\n-                                \"feature=rustc-dep-of-std\",\n-                                \"feature=std\",\n-                                \"feature=use_std\",\n-                            ],\n-                        ),\n-                    ),\n-                    env: Env {\n-                        entries: {\n-                            \"CARGO_PKG_LICENSE\": \"\",\n-                            \"CARGO_PKG_VERSION_MAJOR\": \"0\",\n-                            \"CARGO_MANIFEST_DIR\": \"$ROOT$.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.98\",\n-                            \"CARGO_PKG_VERSION\": \"0.2.98\",\n-                            \"CARGO_PKG_AUTHORS\": \"\",\n-                            \"CARGO_CRATE_NAME\": \"libc\",\n-                            \"CARGO_PKG_LICENSE_FILE\": \"\",\n-                            \"CARGO_PKG_HOMEPAGE\": \"\",\n-                            \"CARGO_PKG_DESCRIPTION\": \"\",\n-                            \"CARGO_PKG_NAME\": \"libc\",\n-                            \"CARGO_PKG_VERSION_PATCH\": \"98\",\n-                            \"CARGO\": \"cargo\",\n-                            \"CARGO_PKG_REPOSITORY\": \"\",\n-                            \"CARGO_PKG_VERSION_MINOR\": \"2\",\n-                            \"CARGO_PKG_VERSION_PRE\": \"\",\n-                        },\n-                    },\n-                    dependencies: [],\n-                    origin: Library {\n-                        repo: Some(\n-                            \"https://github.com/rust-lang/libc\",\n-                        ),\n-                        name: \"libc\",\n-                    },\n-                    is_proc_macro: false,\n-                    target_layout: Err(\n-                        \"target_data_layout not loaded\",\n-                    ),\n-                    channel: None,\n-                },\n-            }\"#]],\n+        expect_file![\"../test_data/output/cargo_hello_world_project_model.txt\"],\n     )\n }\n \n@@ -1189,469 +193,7 @@ fn rust_project_hello_world_project_model() {\n     let (crate_graph, _proc_macros) = load_rust_project(\"hello-world-project.json\");\n     check_crate_graph(\n         crate_graph,\n-        expect![[r#\"\n-            {\n-                0: CrateData {\n-                    root_file_id: FileId(\n-                        1,\n-                    ),\n-                    edition: Edition2021,\n-                    version: None,\n-                    display_name: Some(\n-                        CrateDisplayName {\n-                            crate_name: CrateName(\n-                                \"alloc\",\n-                            ),\n-                            canonical_name: \"alloc\",\n-                        },\n-                    ),\n-                    cfg_options: CfgOptions(\n-                        [],\n-                    ),\n-                    potential_cfg_options: None,\n-                    env: Env {\n-                        entries: {},\n-                    },\n-                    dependencies: [\n-                        Dependency {\n-                            crate_id: Idx::<CrateData>(1),\n-                            name: CrateName(\n-                                \"core\",\n-                            ),\n-                            prelude: true,\n-                        },\n-                    ],\n-                    origin: Lang(\n-                        Alloc,\n-                    ),\n-                    is_proc_macro: false,\n-                    target_layout: Err(\n-                        \"rust-project.json projects have no target layout set\",\n-                    ),\n-                    channel: None,\n-                },\n-                1: CrateData {\n-                    root_file_id: FileId(\n-                        2,\n-                    ),\n-                    edition: Edition2021,\n-                    version: None,\n-                    display_name: Some(\n-                        CrateDisplayName {\n-                            crate_name: CrateName(\n-                                \"core\",\n-                            ),\n-                            canonical_name: \"core\",\n-                        },\n-                    ),\n-                    cfg_options: CfgOptions(\n-                        [],\n-                    ),\n-                    potential_cfg_options: None,\n-                    env: Env {\n-                        entries: {},\n-                    },\n-                    dependencies: [],\n-                    origin: Lang(\n-                        Core,\n-                    ),\n-                    is_proc_macro: false,\n-                    target_layout: Err(\n-                        \"rust-project.json projects have no target layout set\",\n-                    ),\n-                    channel: None,\n-                },\n-                2: CrateData {\n-                    root_file_id: FileId(\n-                        3,\n-                    ),\n-                    edition: Edition2021,\n-                    version: None,\n-                    display_name: Some(\n-                        CrateDisplayName {\n-                            crate_name: CrateName(\n-                                \"panic_abort\",\n-                            ),\n-                            canonical_name: \"panic_abort\",\n-                        },\n-                    ),\n-                    cfg_options: CfgOptions(\n-                        [],\n-                    ),\n-                    potential_cfg_options: None,\n-                    env: Env {\n-                        entries: {},\n-                    },\n-                    dependencies: [],\n-                    origin: Lang(\n-                        Other,\n-                    ),\n-                    is_proc_macro: false,\n-                    target_layout: Err(\n-                        \"rust-project.json projects have no target layout set\",\n-                    ),\n-                    channel: None,\n-                },\n-                3: CrateData {\n-                    root_file_id: FileId(\n-                        4,\n-                    ),\n-                    edition: Edition2021,\n-                    version: None,\n-                    display_name: Some(\n-                        CrateDisplayName {\n-                            crate_name: CrateName(\n-                                \"panic_unwind\",\n-                            ),\n-                            canonical_name: \"panic_unwind\",\n-                        },\n-                    ),\n-                    cfg_options: CfgOptions(\n-                        [],\n-                    ),\n-                    potential_cfg_options: None,\n-                    env: Env {\n-                        entries: {},\n-                    },\n-                    dependencies: [],\n-                    origin: Lang(\n-                        Other,\n-                    ),\n-                    is_proc_macro: false,\n-                    target_layout: Err(\n-                        \"rust-project.json projects have no target layout set\",\n-                    ),\n-                    channel: None,\n-                },\n-                4: CrateData {\n-                    root_file_id: FileId(\n-                        5,\n-                    ),\n-                    edition: Edition2021,\n-                    version: None,\n-                    display_name: Some(\n-                        CrateDisplayName {\n-                            crate_name: CrateName(\n-                                \"proc_macro\",\n-                            ),\n-                            canonical_name: \"proc_macro\",\n-                        },\n-                    ),\n-                    cfg_options: CfgOptions(\n-                        [],\n-                    ),\n-                    potential_cfg_options: None,\n-                    env: Env {\n-                        entries: {},\n-                    },\n-                    dependencies: [\n-                        Dependency {\n-                            crate_id: Idx::<CrateData>(6),\n-                            name: CrateName(\n-                                \"std\",\n-                            ),\n-                            prelude: true,\n-                        },\n-                        Dependency {\n-                            crate_id: Idx::<CrateData>(1),\n-                            name: CrateName(\n-                                \"core\",\n-                            ),\n-                            prelude: true,\n-                        },\n-                    ],\n-                    origin: Lang(\n-                        Other,\n-                    ),\n-                    is_proc_macro: false,\n-                    target_layout: Err(\n-                        \"rust-project.json projects have no target layout set\",\n-                    ),\n-                    channel: None,\n-                },\n-                5: CrateData {\n-                    root_file_id: FileId(\n-                        6,\n-                    ),\n-                    edition: Edition2021,\n-                    version: None,\n-                    display_name: Some(\n-                        CrateDisplayName {\n-                            crate_name: CrateName(\n-                                \"profiler_builtins\",\n-                            ),\n-                            canonical_name: \"profiler_builtins\",\n-                        },\n-                    ),\n-                    cfg_options: CfgOptions(\n-                        [],\n-                    ),\n-                    potential_cfg_options: None,\n-                    env: Env {\n-                        entries: {},\n-                    },\n-                    dependencies: [],\n-                    origin: Lang(\n-                        Other,\n-                    ),\n-                    is_proc_macro: false,\n-                    target_layout: Err(\n-                        \"rust-project.json projects have no target layout set\",\n-                    ),\n-                    channel: None,\n-                },\n-                6: CrateData {\n-                    root_file_id: FileId(\n-                        7,\n-                    ),\n-                    edition: Edition2021,\n-                    version: None,\n-                    display_name: Some(\n-                        CrateDisplayName {\n-                            crate_name: CrateName(\n-                                \"std\",\n-                            ),\n-                            canonical_name: \"std\",\n-                        },\n-                    ),\n-                    cfg_options: CfgOptions(\n-                        [],\n-                    ),\n-                    potential_cfg_options: None,\n-                    env: Env {\n-                        entries: {},\n-                    },\n-                    dependencies: [\n-                        Dependency {\n-                            crate_id: Idx::<CrateData>(0),\n-                            name: CrateName(\n-                                \"alloc\",\n-                            ),\n-                            prelude: true,\n-                        },\n-                        Dependency {\n-                            crate_id: Idx::<CrateData>(3),\n-                            name: CrateName(\n-                                \"panic_unwind\",\n-                            ),\n-                            prelude: true,\n-                        },\n-                        Dependency {\n-                            crate_id: Idx::<CrateData>(2),\n-                            name: CrateName(\n-                                \"panic_abort\",\n-                            ),\n-                            prelude: true,\n-                        },\n-                        Dependency {\n-                            crate_id: Idx::<CrateData>(1),\n-                            name: CrateName(\n-                                \"core\",\n-                            ),\n-                            prelude: true,\n-                        },\n-                        Dependency {\n-                            crate_id: Idx::<CrateData>(5),\n-                            name: CrateName(\n-                                \"profiler_builtins\",\n-                            ),\n-                            prelude: true,\n-                        },\n-                        Dependency {\n-                            crate_id: Idx::<CrateData>(9),\n-                            name: CrateName(\n-                                \"unwind\",\n-                            ),\n-                            prelude: true,\n-                        },\n-                        Dependency {\n-                            crate_id: Idx::<CrateData>(7),\n-                            name: CrateName(\n-                                \"std_detect\",\n-                            ),\n-                            prelude: true,\n-                        },\n-                        Dependency {\n-                            crate_id: Idx::<CrateData>(8),\n-                            name: CrateName(\n-                                \"test\",\n-                            ),\n-                            prelude: true,\n-                        },\n-                    ],\n-                    origin: Lang(\n-                        Std,\n-                    ),\n-                    is_proc_macro: false,\n-                    target_layout: Err(\n-                        \"rust-project.json projects have no target layout set\",\n-                    ),\n-                    channel: None,\n-                },\n-                7: CrateData {\n-                    root_file_id: FileId(\n-                        8,\n-                    ),\n-                    edition: Edition2021,\n-                    version: None,\n-                    display_name: Some(\n-                        CrateDisplayName {\n-                            crate_name: CrateName(\n-                                \"std_detect\",\n-                            ),\n-                            canonical_name: \"std_detect\",\n-                        },\n-                    ),\n-                    cfg_options: CfgOptions(\n-                        [],\n-                    ),\n-                    potential_cfg_options: None,\n-                    env: Env {\n-                        entries: {},\n-                    },\n-                    dependencies: [],\n-                    origin: Lang(\n-                        Other,\n-                    ),\n-                    is_proc_macro: false,\n-                    target_layout: Err(\n-                        \"rust-project.json projects have no target layout set\",\n-                    ),\n-                    channel: None,\n-                },\n-                8: CrateData {\n-                    root_file_id: FileId(\n-                        9,\n-                    ),\n-                    edition: Edition2021,\n-                    version: None,\n-                    display_name: Some(\n-                        CrateDisplayName {\n-                            crate_name: CrateName(\n-                                \"test\",\n-                            ),\n-                            canonical_name: \"test\",\n-                        },\n-                    ),\n-                    cfg_options: CfgOptions(\n-                        [],\n-                    ),\n-                    potential_cfg_options: None,\n-                    env: Env {\n-                        entries: {},\n-                    },\n-                    dependencies: [],\n-                    origin: Lang(\n-                        Test,\n-                    ),\n-                    is_proc_macro: false,\n-                    target_layout: Err(\n-                        \"rust-project.json projects have no target layout set\",\n-                    ),\n-                    channel: None,\n-                },\n-                9: CrateData {\n-                    root_file_id: FileId(\n-                        10,\n-                    ),\n-                    edition: Edition2021,\n-                    version: None,\n-                    display_name: Some(\n-                        CrateDisplayName {\n-                            crate_name: CrateName(\n-                                \"unwind\",\n-                            ),\n-                            canonical_name: \"unwind\",\n-                        },\n-                    ),\n-                    cfg_options: CfgOptions(\n-                        [],\n-                    ),\n-                    potential_cfg_options: None,\n-                    env: Env {\n-                        entries: {},\n-                    },\n-                    dependencies: [],\n-                    origin: Lang(\n-                        Other,\n-                    ),\n-                    is_proc_macro: false,\n-                    target_layout: Err(\n-                        \"rust-project.json projects have no target layout set\",\n-                    ),\n-                    channel: None,\n-                },\n-                10: CrateData {\n-                    root_file_id: FileId(\n-                        11,\n-                    ),\n-                    edition: Edition2018,\n-                    version: None,\n-                    display_name: Some(\n-                        CrateDisplayName {\n-                            crate_name: CrateName(\n-                                \"hello_world\",\n-                            ),\n-                            canonical_name: \"hello_world\",\n-                        },\n-                    ),\n-                    cfg_options: CfgOptions(\n-                        [],\n-                    ),\n-                    potential_cfg_options: None,\n-                    env: Env {\n-                        entries: {},\n-                    },\n-                    dependencies: [\n-                        Dependency {\n-                            crate_id: Idx::<CrateData>(1),\n-                            name: CrateName(\n-                                \"core\",\n-                            ),\n-                            prelude: true,\n-                        },\n-                        Dependency {\n-                            crate_id: Idx::<CrateData>(0),\n-                            name: CrateName(\n-                                \"alloc\",\n-                            ),\n-                            prelude: true,\n-                        },\n-                        Dependency {\n-                            crate_id: Idx::<CrateData>(6),\n-                            name: CrateName(\n-                                \"std\",\n-                            ),\n-                            prelude: true,\n-                        },\n-                        Dependency {\n-                            crate_id: Idx::<CrateData>(8),\n-                            name: CrateName(\n-                                \"test\",\n-                            ),\n-                            prelude: false,\n-                        },\n-                        Dependency {\n-                            crate_id: Idx::<CrateData>(4),\n-                            name: CrateName(\n-                                \"proc_macro\",\n-                            ),\n-                            prelude: false,\n-                        },\n-                    ],\n-                    origin: Local {\n-                        repo: None,\n-                        name: Some(\n-                            \"hello_world\",\n-                        ),\n-                    },\n-                    is_proc_macro: false,\n-                    target_layout: Err(\n-                        \"rust-project.json projects have no target layout set\",\n-                    ),\n-                    channel: None,\n-                },\n-            }\"#]],\n+        expect_file![\"../test_data/output/rust_project_hello_world_project_model.txt\"],\n     );\n }\n \n@@ -1666,3 +208,31 @@ fn rust_project_is_proc_macro_has_proc_macro_dep() {\n     // on the proc_macro sysroot crate.\n     crate_data.dependencies.iter().find(|&dep| dep.name.deref() == \"proc_macro\").unwrap();\n }\n+\n+#[test]\n+fn crate_graph_dedup_identical() {\n+    let (mut crate_graph, proc_macros) =\n+        load_cargo_with_sysroot(&mut Default::default(), \"regex-metadata.json\");\n+    crate_graph.sort_deps();\n+\n+    let (d_crate_graph, mut d_proc_macros) = (crate_graph.clone(), proc_macros.clone());\n+\n+    crate_graph.extend(d_crate_graph.clone(), &mut d_proc_macros);\n+    assert!(crate_graph.iter().eq(d_crate_graph.iter()));\n+    assert_eq!(proc_macros, d_proc_macros);\n+}\n+\n+#[test]\n+fn crate_graph_dedup() {\n+    let path_map = &mut Default::default();\n+    let (mut crate_graph, _proc_macros) =\n+        load_cargo_with_sysroot(path_map, \"ripgrep-metadata.json\");\n+    assert_eq!(crate_graph.iter().count(), 81);\n+    crate_graph.sort_deps();\n+    let (regex_crate_graph, mut regex_proc_macros) =\n+        load_cargo_with_sysroot(path_map, \"regex-metadata.json\");\n+    assert_eq!(regex_crate_graph.iter().count(), 60);\n+\n+    crate_graph.extend(regex_crate_graph, &mut regex_proc_macros);\n+    assert_eq!(crate_graph.iter().count(), 118);\n+}"}, {"sha": "e595cd827293e7795fa0c876be6a1cf77b35d5ec", "filename": "crates/project-model/test_data/output/cargo_hello_world_project_model.txt", "status": "added", "additions": 344, "deletions": 0, "changes": 344, "blob_url": "https://github.com/rust-lang/rust/blob/968850d7bf9916b4d2a6492406a10fd562120b48/crates%2Fproject-model%2Ftest_data%2Foutput%2Fcargo_hello_world_project_model.txt", "raw_url": "https://github.com/rust-lang/rust/raw/968850d7bf9916b4d2a6492406a10fd562120b48/crates%2Fproject-model%2Ftest_data%2Foutput%2Fcargo_hello_world_project_model.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproject-model%2Ftest_data%2Foutput%2Fcargo_hello_world_project_model.txt?ref=968850d7bf9916b4d2a6492406a10fd562120b48", "patch": "@@ -0,0 +1,344 @@\n+{\n+    0: CrateData {\n+        root_file_id: FileId(\n+            1,\n+        ),\n+        edition: Edition2018,\n+        version: Some(\n+            \"0.1.0\",\n+        ),\n+        display_name: Some(\n+            CrateDisplayName {\n+                crate_name: CrateName(\n+                    \"hello_world\",\n+                ),\n+                canonical_name: \"hello-world\",\n+            },\n+        ),\n+        cfg_options: CfgOptions(\n+            [\n+                \"debug_assertions\",\n+                \"test\",\n+            ],\n+        ),\n+        potential_cfg_options: None,\n+        env: Env {\n+            entries: {\n+                \"CARGO_PKG_LICENSE\": \"\",\n+                \"CARGO_PKG_VERSION_MAJOR\": \"0\",\n+                \"CARGO_MANIFEST_DIR\": \"$ROOT$hello-world\",\n+                \"CARGO_PKG_VERSION\": \"0.1.0\",\n+                \"CARGO_PKG_AUTHORS\": \"\",\n+                \"CARGO_CRATE_NAME\": \"hello_world\",\n+                \"CARGO_PKG_LICENSE_FILE\": \"\",\n+                \"CARGO_PKG_HOMEPAGE\": \"\",\n+                \"CARGO_PKG_DESCRIPTION\": \"\",\n+                \"CARGO_PKG_NAME\": \"hello-world\",\n+                \"CARGO_PKG_VERSION_PATCH\": \"0\",\n+                \"CARGO\": \"cargo\",\n+                \"CARGO_PKG_REPOSITORY\": \"\",\n+                \"CARGO_PKG_VERSION_MINOR\": \"1\",\n+                \"CARGO_PKG_VERSION_PRE\": \"\",\n+            },\n+        },\n+        dependencies: [\n+            Dependency {\n+                crate_id: Idx::<CrateData>(4),\n+                name: CrateName(\n+                    \"libc\",\n+                ),\n+                prelude: true,\n+            },\n+        ],\n+        origin: Local {\n+            repo: None,\n+            name: Some(\n+                \"hello-world\",\n+            ),\n+        },\n+        is_proc_macro: false,\n+        target_layout: Err(\n+            \"target_data_layout not loaded\",\n+        ),\n+        channel: None,\n+    },\n+    1: CrateData {\n+        root_file_id: FileId(\n+            2,\n+        ),\n+        edition: Edition2018,\n+        version: Some(\n+            \"0.1.0\",\n+        ),\n+        display_name: Some(\n+            CrateDisplayName {\n+                crate_name: CrateName(\n+                    \"hello_world\",\n+                ),\n+                canonical_name: \"hello-world\",\n+            },\n+        ),\n+        cfg_options: CfgOptions(\n+            [\n+                \"debug_assertions\",\n+                \"test\",\n+            ],\n+        ),\n+        potential_cfg_options: None,\n+        env: Env {\n+            entries: {\n+                \"CARGO_PKG_LICENSE\": \"\",\n+                \"CARGO_PKG_VERSION_MAJOR\": \"0\",\n+                \"CARGO_MANIFEST_DIR\": \"$ROOT$hello-world\",\n+                \"CARGO_PKG_VERSION\": \"0.1.0\",\n+                \"CARGO_PKG_AUTHORS\": \"\",\n+                \"CARGO_CRATE_NAME\": \"hello_world\",\n+                \"CARGO_PKG_LICENSE_FILE\": \"\",\n+                \"CARGO_PKG_HOMEPAGE\": \"\",\n+                \"CARGO_PKG_DESCRIPTION\": \"\",\n+                \"CARGO_PKG_NAME\": \"hello-world\",\n+                \"CARGO_PKG_VERSION_PATCH\": \"0\",\n+                \"CARGO\": \"cargo\",\n+                \"CARGO_PKG_REPOSITORY\": \"\",\n+                \"CARGO_PKG_VERSION_MINOR\": \"1\",\n+                \"CARGO_PKG_VERSION_PRE\": \"\",\n+            },\n+        },\n+        dependencies: [\n+            Dependency {\n+                crate_id: Idx::<CrateData>(0),\n+                name: CrateName(\n+                    \"hello_world\",\n+                ),\n+                prelude: true,\n+            },\n+            Dependency {\n+                crate_id: Idx::<CrateData>(4),\n+                name: CrateName(\n+                    \"libc\",\n+                ),\n+                prelude: true,\n+            },\n+        ],\n+        origin: Local {\n+            repo: None,\n+            name: Some(\n+                \"hello-world\",\n+            ),\n+        },\n+        is_proc_macro: false,\n+        target_layout: Err(\n+            \"target_data_layout not loaded\",\n+        ),\n+        channel: None,\n+    },\n+    2: CrateData {\n+        root_file_id: FileId(\n+            3,\n+        ),\n+        edition: Edition2018,\n+        version: Some(\n+            \"0.1.0\",\n+        ),\n+        display_name: Some(\n+            CrateDisplayName {\n+                crate_name: CrateName(\n+                    \"an_example\",\n+                ),\n+                canonical_name: \"an-example\",\n+            },\n+        ),\n+        cfg_options: CfgOptions(\n+            [\n+                \"debug_assertions\",\n+                \"test\",\n+            ],\n+        ),\n+        potential_cfg_options: None,\n+        env: Env {\n+            entries: {\n+                \"CARGO_PKG_LICENSE\": \"\",\n+                \"CARGO_PKG_VERSION_MAJOR\": \"0\",\n+                \"CARGO_MANIFEST_DIR\": \"$ROOT$hello-world\",\n+                \"CARGO_PKG_VERSION\": \"0.1.0\",\n+                \"CARGO_PKG_AUTHORS\": \"\",\n+                \"CARGO_CRATE_NAME\": \"hello_world\",\n+                \"CARGO_PKG_LICENSE_FILE\": \"\",\n+                \"CARGO_PKG_HOMEPAGE\": \"\",\n+                \"CARGO_PKG_DESCRIPTION\": \"\",\n+                \"CARGO_PKG_NAME\": \"hello-world\",\n+                \"CARGO_PKG_VERSION_PATCH\": \"0\",\n+                \"CARGO\": \"cargo\",\n+                \"CARGO_PKG_REPOSITORY\": \"\",\n+                \"CARGO_PKG_VERSION_MINOR\": \"1\",\n+                \"CARGO_PKG_VERSION_PRE\": \"\",\n+            },\n+        },\n+        dependencies: [\n+            Dependency {\n+                crate_id: Idx::<CrateData>(0),\n+                name: CrateName(\n+                    \"hello_world\",\n+                ),\n+                prelude: true,\n+            },\n+            Dependency {\n+                crate_id: Idx::<CrateData>(4),\n+                name: CrateName(\n+                    \"libc\",\n+                ),\n+                prelude: true,\n+            },\n+        ],\n+        origin: Local {\n+            repo: None,\n+            name: Some(\n+                \"hello-world\",\n+            ),\n+        },\n+        is_proc_macro: false,\n+        target_layout: Err(\n+            \"target_data_layout not loaded\",\n+        ),\n+        channel: None,\n+    },\n+    3: CrateData {\n+        root_file_id: FileId(\n+            4,\n+        ),\n+        edition: Edition2018,\n+        version: Some(\n+            \"0.1.0\",\n+        ),\n+        display_name: Some(\n+            CrateDisplayName {\n+                crate_name: CrateName(\n+                    \"it\",\n+                ),\n+                canonical_name: \"it\",\n+            },\n+        ),\n+        cfg_options: CfgOptions(\n+            [\n+                \"debug_assertions\",\n+                \"test\",\n+            ],\n+        ),\n+        potential_cfg_options: None,\n+        env: Env {\n+            entries: {\n+                \"CARGO_PKG_LICENSE\": \"\",\n+                \"CARGO_PKG_VERSION_MAJOR\": \"0\",\n+                \"CARGO_MANIFEST_DIR\": \"$ROOT$hello-world\",\n+                \"CARGO_PKG_VERSION\": \"0.1.0\",\n+                \"CARGO_PKG_AUTHORS\": \"\",\n+                \"CARGO_CRATE_NAME\": \"hello_world\",\n+                \"CARGO_PKG_LICENSE_FILE\": \"\",\n+                \"CARGO_PKG_HOMEPAGE\": \"\",\n+                \"CARGO_PKG_DESCRIPTION\": \"\",\n+                \"CARGO_PKG_NAME\": \"hello-world\",\n+                \"CARGO_PKG_VERSION_PATCH\": \"0\",\n+                \"CARGO\": \"cargo\",\n+                \"CARGO_PKG_REPOSITORY\": \"\",\n+                \"CARGO_PKG_VERSION_MINOR\": \"1\",\n+                \"CARGO_PKG_VERSION_PRE\": \"\",\n+            },\n+        },\n+        dependencies: [\n+            Dependency {\n+                crate_id: Idx::<CrateData>(0),\n+                name: CrateName(\n+                    \"hello_world\",\n+                ),\n+                prelude: true,\n+            },\n+            Dependency {\n+                crate_id: Idx::<CrateData>(4),\n+                name: CrateName(\n+                    \"libc\",\n+                ),\n+                prelude: true,\n+            },\n+        ],\n+        origin: Local {\n+            repo: None,\n+            name: Some(\n+                \"hello-world\",\n+            ),\n+        },\n+        is_proc_macro: false,\n+        target_layout: Err(\n+            \"target_data_layout not loaded\",\n+        ),\n+        channel: None,\n+    },\n+    4: CrateData {\n+        root_file_id: FileId(\n+            5,\n+        ),\n+        edition: Edition2015,\n+        version: Some(\n+            \"0.2.98\",\n+        ),\n+        display_name: Some(\n+            CrateDisplayName {\n+                crate_name: CrateName(\n+                    \"libc\",\n+                ),\n+                canonical_name: \"libc\",\n+            },\n+        ),\n+        cfg_options: CfgOptions(\n+            [\n+                \"debug_assertions\",\n+                \"feature=default\",\n+                \"feature=std\",\n+            ],\n+        ),\n+        potential_cfg_options: Some(\n+            CfgOptions(\n+                [\n+                    \"debug_assertions\",\n+                    \"feature=align\",\n+                    \"feature=const-extern-fn\",\n+                    \"feature=default\",\n+                    \"feature=extra_traits\",\n+                    \"feature=rustc-dep-of-std\",\n+                    \"feature=std\",\n+                    \"feature=use_std\",\n+                ],\n+            ),\n+        ),\n+        env: Env {\n+            entries: {\n+                \"CARGO_PKG_LICENSE\": \"\",\n+                \"CARGO_PKG_VERSION_MAJOR\": \"0\",\n+                \"CARGO_MANIFEST_DIR\": \"$ROOT$.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.98\",\n+                \"CARGO_PKG_VERSION\": \"0.2.98\",\n+                \"CARGO_PKG_AUTHORS\": \"\",\n+                \"CARGO_CRATE_NAME\": \"libc\",\n+                \"CARGO_PKG_LICENSE_FILE\": \"\",\n+                \"CARGO_PKG_HOMEPAGE\": \"\",\n+                \"CARGO_PKG_DESCRIPTION\": \"\",\n+                \"CARGO_PKG_NAME\": \"libc\",\n+                \"CARGO_PKG_VERSION_PATCH\": \"98\",\n+                \"CARGO\": \"cargo\",\n+                \"CARGO_PKG_REPOSITORY\": \"\",\n+                \"CARGO_PKG_VERSION_MINOR\": \"2\",\n+                \"CARGO_PKG_VERSION_PRE\": \"\",\n+            },\n+        },\n+        dependencies: [],\n+        origin: Library {\n+            repo: Some(\n+                \"https://github.com/rust-lang/libc\",\n+            ),\n+            name: \"libc\",\n+        },\n+        is_proc_macro: false,\n+        target_layout: Err(\n+            \"target_data_layout not loaded\",\n+        ),\n+        channel: None,\n+    },\n+}\n\\ No newline at end of file"}, {"sha": "e595cd827293e7795fa0c876be6a1cf77b35d5ec", "filename": "crates/project-model/test_data/output/cargo_hello_world_project_model_with_selective_overrides.txt", "status": "added", "additions": 344, "deletions": 0, "changes": 344, "blob_url": "https://github.com/rust-lang/rust/blob/968850d7bf9916b4d2a6492406a10fd562120b48/crates%2Fproject-model%2Ftest_data%2Foutput%2Fcargo_hello_world_project_model_with_selective_overrides.txt", "raw_url": "https://github.com/rust-lang/rust/raw/968850d7bf9916b4d2a6492406a10fd562120b48/crates%2Fproject-model%2Ftest_data%2Foutput%2Fcargo_hello_world_project_model_with_selective_overrides.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproject-model%2Ftest_data%2Foutput%2Fcargo_hello_world_project_model_with_selective_overrides.txt?ref=968850d7bf9916b4d2a6492406a10fd562120b48", "patch": "@@ -0,0 +1,344 @@\n+{\n+    0: CrateData {\n+        root_file_id: FileId(\n+            1,\n+        ),\n+        edition: Edition2018,\n+        version: Some(\n+            \"0.1.0\",\n+        ),\n+        display_name: Some(\n+            CrateDisplayName {\n+                crate_name: CrateName(\n+                    \"hello_world\",\n+                ),\n+                canonical_name: \"hello-world\",\n+            },\n+        ),\n+        cfg_options: CfgOptions(\n+            [\n+                \"debug_assertions\",\n+                \"test\",\n+            ],\n+        ),\n+        potential_cfg_options: None,\n+        env: Env {\n+            entries: {\n+                \"CARGO_PKG_LICENSE\": \"\",\n+                \"CARGO_PKG_VERSION_MAJOR\": \"0\",\n+                \"CARGO_MANIFEST_DIR\": \"$ROOT$hello-world\",\n+                \"CARGO_PKG_VERSION\": \"0.1.0\",\n+                \"CARGO_PKG_AUTHORS\": \"\",\n+                \"CARGO_CRATE_NAME\": \"hello_world\",\n+                \"CARGO_PKG_LICENSE_FILE\": \"\",\n+                \"CARGO_PKG_HOMEPAGE\": \"\",\n+                \"CARGO_PKG_DESCRIPTION\": \"\",\n+                \"CARGO_PKG_NAME\": \"hello-world\",\n+                \"CARGO_PKG_VERSION_PATCH\": \"0\",\n+                \"CARGO\": \"cargo\",\n+                \"CARGO_PKG_REPOSITORY\": \"\",\n+                \"CARGO_PKG_VERSION_MINOR\": \"1\",\n+                \"CARGO_PKG_VERSION_PRE\": \"\",\n+            },\n+        },\n+        dependencies: [\n+            Dependency {\n+                crate_id: Idx::<CrateData>(4),\n+                name: CrateName(\n+                    \"libc\",\n+                ),\n+                prelude: true,\n+            },\n+        ],\n+        origin: Local {\n+            repo: None,\n+            name: Some(\n+                \"hello-world\",\n+            ),\n+        },\n+        is_proc_macro: false,\n+        target_layout: Err(\n+            \"target_data_layout not loaded\",\n+        ),\n+        channel: None,\n+    },\n+    1: CrateData {\n+        root_file_id: FileId(\n+            2,\n+        ),\n+        edition: Edition2018,\n+        version: Some(\n+            \"0.1.0\",\n+        ),\n+        display_name: Some(\n+            CrateDisplayName {\n+                crate_name: CrateName(\n+                    \"hello_world\",\n+                ),\n+                canonical_name: \"hello-world\",\n+            },\n+        ),\n+        cfg_options: CfgOptions(\n+            [\n+                \"debug_assertions\",\n+                \"test\",\n+            ],\n+        ),\n+        potential_cfg_options: None,\n+        env: Env {\n+            entries: {\n+                \"CARGO_PKG_LICENSE\": \"\",\n+                \"CARGO_PKG_VERSION_MAJOR\": \"0\",\n+                \"CARGO_MANIFEST_DIR\": \"$ROOT$hello-world\",\n+                \"CARGO_PKG_VERSION\": \"0.1.0\",\n+                \"CARGO_PKG_AUTHORS\": \"\",\n+                \"CARGO_CRATE_NAME\": \"hello_world\",\n+                \"CARGO_PKG_LICENSE_FILE\": \"\",\n+                \"CARGO_PKG_HOMEPAGE\": \"\",\n+                \"CARGO_PKG_DESCRIPTION\": \"\",\n+                \"CARGO_PKG_NAME\": \"hello-world\",\n+                \"CARGO_PKG_VERSION_PATCH\": \"0\",\n+                \"CARGO\": \"cargo\",\n+                \"CARGO_PKG_REPOSITORY\": \"\",\n+                \"CARGO_PKG_VERSION_MINOR\": \"1\",\n+                \"CARGO_PKG_VERSION_PRE\": \"\",\n+            },\n+        },\n+        dependencies: [\n+            Dependency {\n+                crate_id: Idx::<CrateData>(0),\n+                name: CrateName(\n+                    \"hello_world\",\n+                ),\n+                prelude: true,\n+            },\n+            Dependency {\n+                crate_id: Idx::<CrateData>(4),\n+                name: CrateName(\n+                    \"libc\",\n+                ),\n+                prelude: true,\n+            },\n+        ],\n+        origin: Local {\n+            repo: None,\n+            name: Some(\n+                \"hello-world\",\n+            ),\n+        },\n+        is_proc_macro: false,\n+        target_layout: Err(\n+            \"target_data_layout not loaded\",\n+        ),\n+        channel: None,\n+    },\n+    2: CrateData {\n+        root_file_id: FileId(\n+            3,\n+        ),\n+        edition: Edition2018,\n+        version: Some(\n+            \"0.1.0\",\n+        ),\n+        display_name: Some(\n+            CrateDisplayName {\n+                crate_name: CrateName(\n+                    \"an_example\",\n+                ),\n+                canonical_name: \"an-example\",\n+            },\n+        ),\n+        cfg_options: CfgOptions(\n+            [\n+                \"debug_assertions\",\n+                \"test\",\n+            ],\n+        ),\n+        potential_cfg_options: None,\n+        env: Env {\n+            entries: {\n+                \"CARGO_PKG_LICENSE\": \"\",\n+                \"CARGO_PKG_VERSION_MAJOR\": \"0\",\n+                \"CARGO_MANIFEST_DIR\": \"$ROOT$hello-world\",\n+                \"CARGO_PKG_VERSION\": \"0.1.0\",\n+                \"CARGO_PKG_AUTHORS\": \"\",\n+                \"CARGO_CRATE_NAME\": \"hello_world\",\n+                \"CARGO_PKG_LICENSE_FILE\": \"\",\n+                \"CARGO_PKG_HOMEPAGE\": \"\",\n+                \"CARGO_PKG_DESCRIPTION\": \"\",\n+                \"CARGO_PKG_NAME\": \"hello-world\",\n+                \"CARGO_PKG_VERSION_PATCH\": \"0\",\n+                \"CARGO\": \"cargo\",\n+                \"CARGO_PKG_REPOSITORY\": \"\",\n+                \"CARGO_PKG_VERSION_MINOR\": \"1\",\n+                \"CARGO_PKG_VERSION_PRE\": \"\",\n+            },\n+        },\n+        dependencies: [\n+            Dependency {\n+                crate_id: Idx::<CrateData>(0),\n+                name: CrateName(\n+                    \"hello_world\",\n+                ),\n+                prelude: true,\n+            },\n+            Dependency {\n+                crate_id: Idx::<CrateData>(4),\n+                name: CrateName(\n+                    \"libc\",\n+                ),\n+                prelude: true,\n+            },\n+        ],\n+        origin: Local {\n+            repo: None,\n+            name: Some(\n+                \"hello-world\",\n+            ),\n+        },\n+        is_proc_macro: false,\n+        target_layout: Err(\n+            \"target_data_layout not loaded\",\n+        ),\n+        channel: None,\n+    },\n+    3: CrateData {\n+        root_file_id: FileId(\n+            4,\n+        ),\n+        edition: Edition2018,\n+        version: Some(\n+            \"0.1.0\",\n+        ),\n+        display_name: Some(\n+            CrateDisplayName {\n+                crate_name: CrateName(\n+                    \"it\",\n+                ),\n+                canonical_name: \"it\",\n+            },\n+        ),\n+        cfg_options: CfgOptions(\n+            [\n+                \"debug_assertions\",\n+                \"test\",\n+            ],\n+        ),\n+        potential_cfg_options: None,\n+        env: Env {\n+            entries: {\n+                \"CARGO_PKG_LICENSE\": \"\",\n+                \"CARGO_PKG_VERSION_MAJOR\": \"0\",\n+                \"CARGO_MANIFEST_DIR\": \"$ROOT$hello-world\",\n+                \"CARGO_PKG_VERSION\": \"0.1.0\",\n+                \"CARGO_PKG_AUTHORS\": \"\",\n+                \"CARGO_CRATE_NAME\": \"hello_world\",\n+                \"CARGO_PKG_LICENSE_FILE\": \"\",\n+                \"CARGO_PKG_HOMEPAGE\": \"\",\n+                \"CARGO_PKG_DESCRIPTION\": \"\",\n+                \"CARGO_PKG_NAME\": \"hello-world\",\n+                \"CARGO_PKG_VERSION_PATCH\": \"0\",\n+                \"CARGO\": \"cargo\",\n+                \"CARGO_PKG_REPOSITORY\": \"\",\n+                \"CARGO_PKG_VERSION_MINOR\": \"1\",\n+                \"CARGO_PKG_VERSION_PRE\": \"\",\n+            },\n+        },\n+        dependencies: [\n+            Dependency {\n+                crate_id: Idx::<CrateData>(0),\n+                name: CrateName(\n+                    \"hello_world\",\n+                ),\n+                prelude: true,\n+            },\n+            Dependency {\n+                crate_id: Idx::<CrateData>(4),\n+                name: CrateName(\n+                    \"libc\",\n+                ),\n+                prelude: true,\n+            },\n+        ],\n+        origin: Local {\n+            repo: None,\n+            name: Some(\n+                \"hello-world\",\n+            ),\n+        },\n+        is_proc_macro: false,\n+        target_layout: Err(\n+            \"target_data_layout not loaded\",\n+        ),\n+        channel: None,\n+    },\n+    4: CrateData {\n+        root_file_id: FileId(\n+            5,\n+        ),\n+        edition: Edition2015,\n+        version: Some(\n+            \"0.2.98\",\n+        ),\n+        display_name: Some(\n+            CrateDisplayName {\n+                crate_name: CrateName(\n+                    \"libc\",\n+                ),\n+                canonical_name: \"libc\",\n+            },\n+        ),\n+        cfg_options: CfgOptions(\n+            [\n+                \"debug_assertions\",\n+                \"feature=default\",\n+                \"feature=std\",\n+            ],\n+        ),\n+        potential_cfg_options: Some(\n+            CfgOptions(\n+                [\n+                    \"debug_assertions\",\n+                    \"feature=align\",\n+                    \"feature=const-extern-fn\",\n+                    \"feature=default\",\n+                    \"feature=extra_traits\",\n+                    \"feature=rustc-dep-of-std\",\n+                    \"feature=std\",\n+                    \"feature=use_std\",\n+                ],\n+            ),\n+        ),\n+        env: Env {\n+            entries: {\n+                \"CARGO_PKG_LICENSE\": \"\",\n+                \"CARGO_PKG_VERSION_MAJOR\": \"0\",\n+                \"CARGO_MANIFEST_DIR\": \"$ROOT$.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.98\",\n+                \"CARGO_PKG_VERSION\": \"0.2.98\",\n+                \"CARGO_PKG_AUTHORS\": \"\",\n+                \"CARGO_CRATE_NAME\": \"libc\",\n+                \"CARGO_PKG_LICENSE_FILE\": \"\",\n+                \"CARGO_PKG_HOMEPAGE\": \"\",\n+                \"CARGO_PKG_DESCRIPTION\": \"\",\n+                \"CARGO_PKG_NAME\": \"libc\",\n+                \"CARGO_PKG_VERSION_PATCH\": \"98\",\n+                \"CARGO\": \"cargo\",\n+                \"CARGO_PKG_REPOSITORY\": \"\",\n+                \"CARGO_PKG_VERSION_MINOR\": \"2\",\n+                \"CARGO_PKG_VERSION_PRE\": \"\",\n+            },\n+        },\n+        dependencies: [],\n+        origin: Library {\n+            repo: Some(\n+                \"https://github.com/rust-lang/libc\",\n+            ),\n+            name: \"libc\",\n+        },\n+        is_proc_macro: false,\n+        target_layout: Err(\n+            \"target_data_layout not loaded\",\n+        ),\n+        channel: None,\n+    },\n+}\n\\ No newline at end of file"}, {"sha": "f10c55d0462a252f51f859fd9b9e2c2889d26fc4", "filename": "crates/project-model/test_data/output/cargo_hello_world_project_model_with_wildcard_overrides.txt", "status": "added", "additions": 340, "deletions": 0, "changes": 340, "blob_url": "https://github.com/rust-lang/rust/blob/968850d7bf9916b4d2a6492406a10fd562120b48/crates%2Fproject-model%2Ftest_data%2Foutput%2Fcargo_hello_world_project_model_with_wildcard_overrides.txt", "raw_url": "https://github.com/rust-lang/rust/raw/968850d7bf9916b4d2a6492406a10fd562120b48/crates%2Fproject-model%2Ftest_data%2Foutput%2Fcargo_hello_world_project_model_with_wildcard_overrides.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproject-model%2Ftest_data%2Foutput%2Fcargo_hello_world_project_model_with_wildcard_overrides.txt?ref=968850d7bf9916b4d2a6492406a10fd562120b48", "patch": "@@ -0,0 +1,340 @@\n+{\n+    0: CrateData {\n+        root_file_id: FileId(\n+            1,\n+        ),\n+        edition: Edition2018,\n+        version: Some(\n+            \"0.1.0\",\n+        ),\n+        display_name: Some(\n+            CrateDisplayName {\n+                crate_name: CrateName(\n+                    \"hello_world\",\n+                ),\n+                canonical_name: \"hello-world\",\n+            },\n+        ),\n+        cfg_options: CfgOptions(\n+            [\n+                \"debug_assertions\",\n+            ],\n+        ),\n+        potential_cfg_options: None,\n+        env: Env {\n+            entries: {\n+                \"CARGO_PKG_LICENSE\": \"\",\n+                \"CARGO_PKG_VERSION_MAJOR\": \"0\",\n+                \"CARGO_MANIFEST_DIR\": \"$ROOT$hello-world\",\n+                \"CARGO_PKG_VERSION\": \"0.1.0\",\n+                \"CARGO_PKG_AUTHORS\": \"\",\n+                \"CARGO_CRATE_NAME\": \"hello_world\",\n+                \"CARGO_PKG_LICENSE_FILE\": \"\",\n+                \"CARGO_PKG_HOMEPAGE\": \"\",\n+                \"CARGO_PKG_DESCRIPTION\": \"\",\n+                \"CARGO_PKG_NAME\": \"hello-world\",\n+                \"CARGO_PKG_VERSION_PATCH\": \"0\",\n+                \"CARGO\": \"cargo\",\n+                \"CARGO_PKG_REPOSITORY\": \"\",\n+                \"CARGO_PKG_VERSION_MINOR\": \"1\",\n+                \"CARGO_PKG_VERSION_PRE\": \"\",\n+            },\n+        },\n+        dependencies: [\n+            Dependency {\n+                crate_id: Idx::<CrateData>(4),\n+                name: CrateName(\n+                    \"libc\",\n+                ),\n+                prelude: true,\n+            },\n+        ],\n+        origin: Local {\n+            repo: None,\n+            name: Some(\n+                \"hello-world\",\n+            ),\n+        },\n+        is_proc_macro: false,\n+        target_layout: Err(\n+            \"target_data_layout not loaded\",\n+        ),\n+        channel: None,\n+    },\n+    1: CrateData {\n+        root_file_id: FileId(\n+            2,\n+        ),\n+        edition: Edition2018,\n+        version: Some(\n+            \"0.1.0\",\n+        ),\n+        display_name: Some(\n+            CrateDisplayName {\n+                crate_name: CrateName(\n+                    \"hello_world\",\n+                ),\n+                canonical_name: \"hello-world\",\n+            },\n+        ),\n+        cfg_options: CfgOptions(\n+            [\n+                \"debug_assertions\",\n+            ],\n+        ),\n+        potential_cfg_options: None,\n+        env: Env {\n+            entries: {\n+                \"CARGO_PKG_LICENSE\": \"\",\n+                \"CARGO_PKG_VERSION_MAJOR\": \"0\",\n+                \"CARGO_MANIFEST_DIR\": \"$ROOT$hello-world\",\n+                \"CARGO_PKG_VERSION\": \"0.1.0\",\n+                \"CARGO_PKG_AUTHORS\": \"\",\n+                \"CARGO_CRATE_NAME\": \"hello_world\",\n+                \"CARGO_PKG_LICENSE_FILE\": \"\",\n+                \"CARGO_PKG_HOMEPAGE\": \"\",\n+                \"CARGO_PKG_DESCRIPTION\": \"\",\n+                \"CARGO_PKG_NAME\": \"hello-world\",\n+                \"CARGO_PKG_VERSION_PATCH\": \"0\",\n+                \"CARGO\": \"cargo\",\n+                \"CARGO_PKG_REPOSITORY\": \"\",\n+                \"CARGO_PKG_VERSION_MINOR\": \"1\",\n+                \"CARGO_PKG_VERSION_PRE\": \"\",\n+            },\n+        },\n+        dependencies: [\n+            Dependency {\n+                crate_id: Idx::<CrateData>(0),\n+                name: CrateName(\n+                    \"hello_world\",\n+                ),\n+                prelude: true,\n+            },\n+            Dependency {\n+                crate_id: Idx::<CrateData>(4),\n+                name: CrateName(\n+                    \"libc\",\n+                ),\n+                prelude: true,\n+            },\n+        ],\n+        origin: Local {\n+            repo: None,\n+            name: Some(\n+                \"hello-world\",\n+            ),\n+        },\n+        is_proc_macro: false,\n+        target_layout: Err(\n+            \"target_data_layout not loaded\",\n+        ),\n+        channel: None,\n+    },\n+    2: CrateData {\n+        root_file_id: FileId(\n+            3,\n+        ),\n+        edition: Edition2018,\n+        version: Some(\n+            \"0.1.0\",\n+        ),\n+        display_name: Some(\n+            CrateDisplayName {\n+                crate_name: CrateName(\n+                    \"an_example\",\n+                ),\n+                canonical_name: \"an-example\",\n+            },\n+        ),\n+        cfg_options: CfgOptions(\n+            [\n+                \"debug_assertions\",\n+            ],\n+        ),\n+        potential_cfg_options: None,\n+        env: Env {\n+            entries: {\n+                \"CARGO_PKG_LICENSE\": \"\",\n+                \"CARGO_PKG_VERSION_MAJOR\": \"0\",\n+                \"CARGO_MANIFEST_DIR\": \"$ROOT$hello-world\",\n+                \"CARGO_PKG_VERSION\": \"0.1.0\",\n+                \"CARGO_PKG_AUTHORS\": \"\",\n+                \"CARGO_CRATE_NAME\": \"hello_world\",\n+                \"CARGO_PKG_LICENSE_FILE\": \"\",\n+                \"CARGO_PKG_HOMEPAGE\": \"\",\n+                \"CARGO_PKG_DESCRIPTION\": \"\",\n+                \"CARGO_PKG_NAME\": \"hello-world\",\n+                \"CARGO_PKG_VERSION_PATCH\": \"0\",\n+                \"CARGO\": \"cargo\",\n+                \"CARGO_PKG_REPOSITORY\": \"\",\n+                \"CARGO_PKG_VERSION_MINOR\": \"1\",\n+                \"CARGO_PKG_VERSION_PRE\": \"\",\n+            },\n+        },\n+        dependencies: [\n+            Dependency {\n+                crate_id: Idx::<CrateData>(0),\n+                name: CrateName(\n+                    \"hello_world\",\n+                ),\n+                prelude: true,\n+            },\n+            Dependency {\n+                crate_id: Idx::<CrateData>(4),\n+                name: CrateName(\n+                    \"libc\",\n+                ),\n+                prelude: true,\n+            },\n+        ],\n+        origin: Local {\n+            repo: None,\n+            name: Some(\n+                \"hello-world\",\n+            ),\n+        },\n+        is_proc_macro: false,\n+        target_layout: Err(\n+            \"target_data_layout not loaded\",\n+        ),\n+        channel: None,\n+    },\n+    3: CrateData {\n+        root_file_id: FileId(\n+            4,\n+        ),\n+        edition: Edition2018,\n+        version: Some(\n+            \"0.1.0\",\n+        ),\n+        display_name: Some(\n+            CrateDisplayName {\n+                crate_name: CrateName(\n+                    \"it\",\n+                ),\n+                canonical_name: \"it\",\n+            },\n+        ),\n+        cfg_options: CfgOptions(\n+            [\n+                \"debug_assertions\",\n+            ],\n+        ),\n+        potential_cfg_options: None,\n+        env: Env {\n+            entries: {\n+                \"CARGO_PKG_LICENSE\": \"\",\n+                \"CARGO_PKG_VERSION_MAJOR\": \"0\",\n+                \"CARGO_MANIFEST_DIR\": \"$ROOT$hello-world\",\n+                \"CARGO_PKG_VERSION\": \"0.1.0\",\n+                \"CARGO_PKG_AUTHORS\": \"\",\n+                \"CARGO_CRATE_NAME\": \"hello_world\",\n+                \"CARGO_PKG_LICENSE_FILE\": \"\",\n+                \"CARGO_PKG_HOMEPAGE\": \"\",\n+                \"CARGO_PKG_DESCRIPTION\": \"\",\n+                \"CARGO_PKG_NAME\": \"hello-world\",\n+                \"CARGO_PKG_VERSION_PATCH\": \"0\",\n+                \"CARGO\": \"cargo\",\n+                \"CARGO_PKG_REPOSITORY\": \"\",\n+                \"CARGO_PKG_VERSION_MINOR\": \"1\",\n+                \"CARGO_PKG_VERSION_PRE\": \"\",\n+            },\n+        },\n+        dependencies: [\n+            Dependency {\n+                crate_id: Idx::<CrateData>(0),\n+                name: CrateName(\n+                    \"hello_world\",\n+                ),\n+                prelude: true,\n+            },\n+            Dependency {\n+                crate_id: Idx::<CrateData>(4),\n+                name: CrateName(\n+                    \"libc\",\n+                ),\n+                prelude: true,\n+            },\n+        ],\n+        origin: Local {\n+            repo: None,\n+            name: Some(\n+                \"hello-world\",\n+            ),\n+        },\n+        is_proc_macro: false,\n+        target_layout: Err(\n+            \"target_data_layout not loaded\",\n+        ),\n+        channel: None,\n+    },\n+    4: CrateData {\n+        root_file_id: FileId(\n+            5,\n+        ),\n+        edition: Edition2015,\n+        version: Some(\n+            \"0.2.98\",\n+        ),\n+        display_name: Some(\n+            CrateDisplayName {\n+                crate_name: CrateName(\n+                    \"libc\",\n+                ),\n+                canonical_name: \"libc\",\n+            },\n+        ),\n+        cfg_options: CfgOptions(\n+            [\n+                \"debug_assertions\",\n+                \"feature=default\",\n+                \"feature=std\",\n+            ],\n+        ),\n+        potential_cfg_options: Some(\n+            CfgOptions(\n+                [\n+                    \"debug_assertions\",\n+                    \"feature=align\",\n+                    \"feature=const-extern-fn\",\n+                    \"feature=default\",\n+                    \"feature=extra_traits\",\n+                    \"feature=rustc-dep-of-std\",\n+                    \"feature=std\",\n+                    \"feature=use_std\",\n+                ],\n+            ),\n+        ),\n+        env: Env {\n+            entries: {\n+                \"CARGO_PKG_LICENSE\": \"\",\n+                \"CARGO_PKG_VERSION_MAJOR\": \"0\",\n+                \"CARGO_MANIFEST_DIR\": \"$ROOT$.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.98\",\n+                \"CARGO_PKG_VERSION\": \"0.2.98\",\n+                \"CARGO_PKG_AUTHORS\": \"\",\n+                \"CARGO_CRATE_NAME\": \"libc\",\n+                \"CARGO_PKG_LICENSE_FILE\": \"\",\n+                \"CARGO_PKG_HOMEPAGE\": \"\",\n+                \"CARGO_PKG_DESCRIPTION\": \"\",\n+                \"CARGO_PKG_NAME\": \"libc\",\n+                \"CARGO_PKG_VERSION_PATCH\": \"98\",\n+                \"CARGO\": \"cargo\",\n+                \"CARGO_PKG_REPOSITORY\": \"\",\n+                \"CARGO_PKG_VERSION_MINOR\": \"2\",\n+                \"CARGO_PKG_VERSION_PRE\": \"\",\n+            },\n+        },\n+        dependencies: [],\n+        origin: Library {\n+            repo: Some(\n+                \"https://github.com/rust-lang/libc\",\n+            ),\n+            name: \"libc\",\n+        },\n+        is_proc_macro: false,\n+        target_layout: Err(\n+            \"target_data_layout not loaded\",\n+        ),\n+        channel: None,\n+    },\n+}\n\\ No newline at end of file"}, {"sha": "fb3f5933b178ce2f4a895653d67b8f7117b64379", "filename": "crates/project-model/test_data/output/rust_project_hello_world_project_model.txt", "status": "added", "additions": 462, "deletions": 0, "changes": 462, "blob_url": "https://github.com/rust-lang/rust/blob/968850d7bf9916b4d2a6492406a10fd562120b48/crates%2Fproject-model%2Ftest_data%2Foutput%2Frust_project_hello_world_project_model.txt", "raw_url": "https://github.com/rust-lang/rust/raw/968850d7bf9916b4d2a6492406a10fd562120b48/crates%2Fproject-model%2Ftest_data%2Foutput%2Frust_project_hello_world_project_model.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproject-model%2Ftest_data%2Foutput%2Frust_project_hello_world_project_model.txt?ref=968850d7bf9916b4d2a6492406a10fd562120b48", "patch": "@@ -0,0 +1,462 @@\n+{\n+    0: CrateData {\n+        root_file_id: FileId(\n+            1,\n+        ),\n+        edition: Edition2021,\n+        version: None,\n+        display_name: Some(\n+            CrateDisplayName {\n+                crate_name: CrateName(\n+                    \"alloc\",\n+                ),\n+                canonical_name: \"alloc\",\n+            },\n+        ),\n+        cfg_options: CfgOptions(\n+            [],\n+        ),\n+        potential_cfg_options: None,\n+        env: Env {\n+            entries: {},\n+        },\n+        dependencies: [\n+            Dependency {\n+                crate_id: Idx::<CrateData>(1),\n+                name: CrateName(\n+                    \"core\",\n+                ),\n+                prelude: true,\n+            },\n+        ],\n+        origin: Lang(\n+            Alloc,\n+        ),\n+        is_proc_macro: false,\n+        target_layout: Err(\n+            \"rust-project.json projects have no target layout set\",\n+        ),\n+        channel: None,\n+    },\n+    1: CrateData {\n+        root_file_id: FileId(\n+            2,\n+        ),\n+        edition: Edition2021,\n+        version: None,\n+        display_name: Some(\n+            CrateDisplayName {\n+                crate_name: CrateName(\n+                    \"core\",\n+                ),\n+                canonical_name: \"core\",\n+            },\n+        ),\n+        cfg_options: CfgOptions(\n+            [],\n+        ),\n+        potential_cfg_options: None,\n+        env: Env {\n+            entries: {},\n+        },\n+        dependencies: [],\n+        origin: Lang(\n+            Core,\n+        ),\n+        is_proc_macro: false,\n+        target_layout: Err(\n+            \"rust-project.json projects have no target layout set\",\n+        ),\n+        channel: None,\n+    },\n+    2: CrateData {\n+        root_file_id: FileId(\n+            3,\n+        ),\n+        edition: Edition2021,\n+        version: None,\n+        display_name: Some(\n+            CrateDisplayName {\n+                crate_name: CrateName(\n+                    \"panic_abort\",\n+                ),\n+                canonical_name: \"panic_abort\",\n+            },\n+        ),\n+        cfg_options: CfgOptions(\n+            [],\n+        ),\n+        potential_cfg_options: None,\n+        env: Env {\n+            entries: {},\n+        },\n+        dependencies: [],\n+        origin: Lang(\n+            Other,\n+        ),\n+        is_proc_macro: false,\n+        target_layout: Err(\n+            \"rust-project.json projects have no target layout set\",\n+        ),\n+        channel: None,\n+    },\n+    3: CrateData {\n+        root_file_id: FileId(\n+            4,\n+        ),\n+        edition: Edition2021,\n+        version: None,\n+        display_name: Some(\n+            CrateDisplayName {\n+                crate_name: CrateName(\n+                    \"panic_unwind\",\n+                ),\n+                canonical_name: \"panic_unwind\",\n+            },\n+        ),\n+        cfg_options: CfgOptions(\n+            [],\n+        ),\n+        potential_cfg_options: None,\n+        env: Env {\n+            entries: {},\n+        },\n+        dependencies: [],\n+        origin: Lang(\n+            Other,\n+        ),\n+        is_proc_macro: false,\n+        target_layout: Err(\n+            \"rust-project.json projects have no target layout set\",\n+        ),\n+        channel: None,\n+    },\n+    4: CrateData {\n+        root_file_id: FileId(\n+            5,\n+        ),\n+        edition: Edition2021,\n+        version: None,\n+        display_name: Some(\n+            CrateDisplayName {\n+                crate_name: CrateName(\n+                    \"proc_macro\",\n+                ),\n+                canonical_name: \"proc_macro\",\n+            },\n+        ),\n+        cfg_options: CfgOptions(\n+            [],\n+        ),\n+        potential_cfg_options: None,\n+        env: Env {\n+            entries: {},\n+        },\n+        dependencies: [\n+            Dependency {\n+                crate_id: Idx::<CrateData>(6),\n+                name: CrateName(\n+                    \"std\",\n+                ),\n+                prelude: true,\n+            },\n+            Dependency {\n+                crate_id: Idx::<CrateData>(1),\n+                name: CrateName(\n+                    \"core\",\n+                ),\n+                prelude: true,\n+            },\n+        ],\n+        origin: Lang(\n+            Other,\n+        ),\n+        is_proc_macro: false,\n+        target_layout: Err(\n+            \"rust-project.json projects have no target layout set\",\n+        ),\n+        channel: None,\n+    },\n+    5: CrateData {\n+        root_file_id: FileId(\n+            6,\n+        ),\n+        edition: Edition2021,\n+        version: None,\n+        display_name: Some(\n+            CrateDisplayName {\n+                crate_name: CrateName(\n+                    \"profiler_builtins\",\n+                ),\n+                canonical_name: \"profiler_builtins\",\n+            },\n+        ),\n+        cfg_options: CfgOptions(\n+            [],\n+        ),\n+        potential_cfg_options: None,\n+        env: Env {\n+            entries: {},\n+        },\n+        dependencies: [],\n+        origin: Lang(\n+            Other,\n+        ),\n+        is_proc_macro: false,\n+        target_layout: Err(\n+            \"rust-project.json projects have no target layout set\",\n+        ),\n+        channel: None,\n+    },\n+    6: CrateData {\n+        root_file_id: FileId(\n+            7,\n+        ),\n+        edition: Edition2021,\n+        version: None,\n+        display_name: Some(\n+            CrateDisplayName {\n+                crate_name: CrateName(\n+                    \"std\",\n+                ),\n+                canonical_name: \"std\",\n+            },\n+        ),\n+        cfg_options: CfgOptions(\n+            [],\n+        ),\n+        potential_cfg_options: None,\n+        env: Env {\n+            entries: {},\n+        },\n+        dependencies: [\n+            Dependency {\n+                crate_id: Idx::<CrateData>(0),\n+                name: CrateName(\n+                    \"alloc\",\n+                ),\n+                prelude: true,\n+            },\n+            Dependency {\n+                crate_id: Idx::<CrateData>(3),\n+                name: CrateName(\n+                    \"panic_unwind\",\n+                ),\n+                prelude: true,\n+            },\n+            Dependency {\n+                crate_id: Idx::<CrateData>(2),\n+                name: CrateName(\n+                    \"panic_abort\",\n+                ),\n+                prelude: true,\n+            },\n+            Dependency {\n+                crate_id: Idx::<CrateData>(1),\n+                name: CrateName(\n+                    \"core\",\n+                ),\n+                prelude: true,\n+            },\n+            Dependency {\n+                crate_id: Idx::<CrateData>(5),\n+                name: CrateName(\n+                    \"profiler_builtins\",\n+                ),\n+                prelude: true,\n+            },\n+            Dependency {\n+                crate_id: Idx::<CrateData>(9),\n+                name: CrateName(\n+                    \"unwind\",\n+                ),\n+                prelude: true,\n+            },\n+            Dependency {\n+                crate_id: Idx::<CrateData>(7),\n+                name: CrateName(\n+                    \"std_detect\",\n+                ),\n+                prelude: true,\n+            },\n+            Dependency {\n+                crate_id: Idx::<CrateData>(8),\n+                name: CrateName(\n+                    \"test\",\n+                ),\n+                prelude: true,\n+            },\n+        ],\n+        origin: Lang(\n+            Std,\n+        ),\n+        is_proc_macro: false,\n+        target_layout: Err(\n+            \"rust-project.json projects have no target layout set\",\n+        ),\n+        channel: None,\n+    },\n+    7: CrateData {\n+        root_file_id: FileId(\n+            8,\n+        ),\n+        edition: Edition2021,\n+        version: None,\n+        display_name: Some(\n+            CrateDisplayName {\n+                crate_name: CrateName(\n+                    \"std_detect\",\n+                ),\n+                canonical_name: \"std_detect\",\n+            },\n+        ),\n+        cfg_options: CfgOptions(\n+            [],\n+        ),\n+        potential_cfg_options: None,\n+        env: Env {\n+            entries: {},\n+        },\n+        dependencies: [],\n+        origin: Lang(\n+            Other,\n+        ),\n+        is_proc_macro: false,\n+        target_layout: Err(\n+            \"rust-project.json projects have no target layout set\",\n+        ),\n+        channel: None,\n+    },\n+    8: CrateData {\n+        root_file_id: FileId(\n+            9,\n+        ),\n+        edition: Edition2021,\n+        version: None,\n+        display_name: Some(\n+            CrateDisplayName {\n+                crate_name: CrateName(\n+                    \"test\",\n+                ),\n+                canonical_name: \"test\",\n+            },\n+        ),\n+        cfg_options: CfgOptions(\n+            [],\n+        ),\n+        potential_cfg_options: None,\n+        env: Env {\n+            entries: {},\n+        },\n+        dependencies: [],\n+        origin: Lang(\n+            Test,\n+        ),\n+        is_proc_macro: false,\n+        target_layout: Err(\n+            \"rust-project.json projects have no target layout set\",\n+        ),\n+        channel: None,\n+    },\n+    9: CrateData {\n+        root_file_id: FileId(\n+            10,\n+        ),\n+        edition: Edition2021,\n+        version: None,\n+        display_name: Some(\n+            CrateDisplayName {\n+                crate_name: CrateName(\n+                    \"unwind\",\n+                ),\n+                canonical_name: \"unwind\",\n+            },\n+        ),\n+        cfg_options: CfgOptions(\n+            [],\n+        ),\n+        potential_cfg_options: None,\n+        env: Env {\n+            entries: {},\n+        },\n+        dependencies: [],\n+        origin: Lang(\n+            Other,\n+        ),\n+        is_proc_macro: false,\n+        target_layout: Err(\n+            \"rust-project.json projects have no target layout set\",\n+        ),\n+        channel: None,\n+    },\n+    10: CrateData {\n+        root_file_id: FileId(\n+            11,\n+        ),\n+        edition: Edition2018,\n+        version: None,\n+        display_name: Some(\n+            CrateDisplayName {\n+                crate_name: CrateName(\n+                    \"hello_world\",\n+                ),\n+                canonical_name: \"hello_world\",\n+            },\n+        ),\n+        cfg_options: CfgOptions(\n+            [],\n+        ),\n+        potential_cfg_options: None,\n+        env: Env {\n+            entries: {},\n+        },\n+        dependencies: [\n+            Dependency {\n+                crate_id: Idx::<CrateData>(1),\n+                name: CrateName(\n+                    \"core\",\n+                ),\n+                prelude: true,\n+            },\n+            Dependency {\n+                crate_id: Idx::<CrateData>(0),\n+                name: CrateName(\n+                    \"alloc\",\n+                ),\n+                prelude: true,\n+            },\n+            Dependency {\n+                crate_id: Idx::<CrateData>(6),\n+                name: CrateName(\n+                    \"std\",\n+                ),\n+                prelude: true,\n+            },\n+            Dependency {\n+                crate_id: Idx::<CrateData>(8),\n+                name: CrateName(\n+                    \"test\",\n+                ),\n+                prelude: false,\n+            },\n+            Dependency {\n+                crate_id: Idx::<CrateData>(4),\n+                name: CrateName(\n+                    \"proc_macro\",\n+                ),\n+                prelude: false,\n+            },\n+        ],\n+        origin: Local {\n+            repo: None,\n+            name: Some(\n+                \"hello_world\",\n+            ),\n+        },\n+        is_proc_macro: false,\n+        target_layout: Err(\n+            \"rust-project.json projects have no target layout set\",\n+        ),\n+        channel: None,\n+    },\n+}\n\\ No newline at end of file"}, {"sha": "371464dd20aa1055402e5e2a6bf1d623ec1fbe00", "filename": "crates/project-model/test_data/regex-metadata.json", "status": "added", "additions": 6420, "deletions": 0, "changes": 6420, "blob_url": "https://github.com/rust-lang/rust/blob/968850d7bf9916b4d2a6492406a10fd562120b48/crates%2Fproject-model%2Ftest_data%2Fregex-metadata.json", "raw_url": "https://github.com/rust-lang/rust/raw/968850d7bf9916b4d2a6492406a10fd562120b48/crates%2Fproject-model%2Ftest_data%2Fregex-metadata.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproject-model%2Ftest_data%2Fregex-metadata.json?ref=968850d7bf9916b4d2a6492406a10fd562120b48"}, {"sha": "131ff5dd71571e326e5d0c2acd47c0f545fc5160", "filename": "crates/project-model/test_data/ripgrep-metadata.json", "status": "added", "additions": 12816, "deletions": 0, "changes": 12816, "blob_url": "https://github.com/rust-lang/rust/blob/968850d7bf9916b4d2a6492406a10fd562120b48/crates%2Fproject-model%2Ftest_data%2Fripgrep-metadata.json", "raw_url": "https://github.com/rust-lang/rust/raw/968850d7bf9916b4d2a6492406a10fd562120b48/crates%2Fproject-model%2Ftest_data%2Fripgrep-metadata.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproject-model%2Ftest_data%2Fripgrep-metadata.json?ref=968850d7bf9916b4d2a6492406a10fd562120b48"}]}