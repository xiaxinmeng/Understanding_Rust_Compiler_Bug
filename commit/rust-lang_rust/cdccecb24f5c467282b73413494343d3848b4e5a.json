{"sha": "cdccecb24f5c467282b73413494343d3848b4e5a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNkY2NlY2IyNGY1YzQ2NzI4MmI3MzQxMzQ5NDM0M2QzODQ4YjRlNWE=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-06-25T00:51:02Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-06-25T01:57:01Z"}, "message": "Test fixes from the rollup\n\nCloses #14482 (std: Bring back half of Add on String)\nCloses #15026 (librustc: Remove the fallback to `int` from typechecking.)\nCloses #15119 (Add more description to c_str::unwrap().)\nCloses #15120 (Add tests for #12470 and #14285)\nCloses #15122 (Remove the cheat sheet.)\nCloses #15126 (rustc: Always include the morestack library)\nCloses #15127 (Improve ambiguous pronoun.)\nCloses #15130 (Fix #15129)\nCloses #15131 (Add the Guide, add warning to tutorial.)\nCloses #15134 (Xfailed tests for hygiene, etc.)\nCloses #15135 (core: Add stability attributes to Clone)\nCloses #15136 (Some minor improvements to core::bool)\nCloses #15137 (std: Add stability attributes to primitive numeric modules)\nCloses #15141 (Fix grammar in tutorial)\nCloses #15143 (Remove few FIXMEs)\nCloses #15145 (Avoid unnecessary temporary on assignments)\nCloses #15147 (Small improvements for metaprogramming)\nCloses #15153 (librustc: Check function argument patterns for legality of by-move)\nCloses #15154 (test: Add a test for regions, traits, and variance.)\nCloses #15159 (rustc: Don't register syntax crates twice)\nCloses #13816 (Stabilize version output for rustc and rustdoc)", "tree": {"sha": "45fd08bfce0007e8e32453b94fd3229d1a13fba3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/45fd08bfce0007e8e32453b94fd3229d1a13fba3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cdccecb24f5c467282b73413494343d3848b4e5a", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cdccecb24f5c467282b73413494343d3848b4e5a", "html_url": "https://github.com/rust-lang/rust/commit/cdccecb24f5c467282b73413494343d3848b4e5a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cdccecb24f5c467282b73413494343d3848b4e5a/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d6a4c431f4ea819ffffed987167319f14e809955", "url": "https://api.github.com/repos/rust-lang/rust/commits/d6a4c431f4ea819ffffed987167319f14e809955", "html_url": "https://github.com/rust-lang/rust/commit/d6a4c431f4ea819ffffed987167319f14e809955"}], "stats": {"total": 20, "additions": 13, "deletions": 7}, "files": [{"sha": "9b3c9d29cc74a193a0d3e98200beb0ebc0d7b075", "filename": "src/libstd/num/int_macros.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cdccecb24f5c467282b73413494343d3848b4e5a/src%2Flibstd%2Fnum%2Fint_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cdccecb24f5c467282b73413494343d3848b4e5a/src%2Flibstd%2Fnum%2Fint_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnum%2Fint_macros.rs?ref=cdccecb24f5c467282b73413494343d3848b4e5a", "patch": "@@ -59,6 +59,8 @@ impl FromStrRadix for $T {\n /// # Examples\n ///\n /// ```\n+/// #![allow(deprecated)]\n+///\n /// std::int::to_str_bytes(123, 10, |v| {\n ///     assert!(v == \"123\".as_bytes());\n /// });"}, {"sha": "19e45b292fbb5f731e06eb9f20154022f7ccb877", "filename": "src/libstd/num/uint_macros.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cdccecb24f5c467282b73413494343d3848b4e5a/src%2Flibstd%2Fnum%2Fuint_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cdccecb24f5c467282b73413494343d3848b4e5a/src%2Flibstd%2Fnum%2Fuint_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnum%2Fuint_macros.rs?ref=cdccecb24f5c467282b73413494343d3848b4e5a", "patch": "@@ -60,6 +60,8 @@ impl FromStrRadix for $T {\n /// # Examples\n ///\n /// ```\n+/// #![allow(deprecated)]\n+///\n /// std::uint::to_str_bytes(123, 10, |v| {\n ///     assert!(v == \"123\".as_bytes());\n /// });"}, {"sha": "c62685d0088fe070c3ee4440339780b722973295", "filename": "src/test/compile-fail/repeat_count.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cdccecb24f5c467282b73413494343d3848b4e5a/src%2Ftest%2Fcompile-fail%2Frepeat_count.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cdccecb24f5c467282b73413494343d3848b4e5a/src%2Ftest%2Fcompile-fail%2Frepeat_count.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Frepeat_count.rs?ref=cdccecb24f5c467282b73413494343d3848b4e5a", "patch": "@@ -14,9 +14,13 @@ fn main() {\n     let n = 1;\n     let a = [0, ..n]; //~ ERROR expected constant integer for repeat count but found variable\n     let b = [0, ..()]; //~ ERROR expected positive integer for repeat count but found ()\n+    //~^ ERROR: expected `uint` but found `()`\n     let c = [0, ..true]; //~ ERROR expected positive integer for repeat count but found boolean\n+    //~^ ERROR: expected `uint` but found `bool`\n     let d = [0, ..0.5]; //~ ERROR expected positive integer for repeat count but found float\n+    //~^ ERROR: expected `uint` but found `<generic float #0>`\n     let e = [0, ..\"foo\"]; //~ ERROR expected positive integer for repeat count but found string\n+    //~^ ERROR: expected `uint` but found `&'static str`\n     let f = [0, ..-4];\n     //~^ ERROR expected positive integer for repeat count but found negative integer\n }"}, {"sha": "1777c168d9b9a49989252854e0be1ada323e98a1", "filename": "src/test/debuginfo/generic-function.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/cdccecb24f5c467282b73413494343d3848b4e5a/src%2Ftest%2Fdebuginfo%2Fgeneric-function.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cdccecb24f5c467282b73413494343d3848b4e5a/src%2Ftest%2Fdebuginfo%2Fgeneric-function.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fgeneric-function.rs?ref=cdccecb24f5c467282b73413494343d3848b4e5a", "patch": "@@ -55,9 +55,9 @@ fn dup_tup<T0: Clone, T1: Clone>(t0: &T0, t1: &T1) -> ((T0, T1), (T1, T0)) {\n \n fn main() {\n \n-    let _ = dup_tup(&1, &2.5);\n-    let _ = dup_tup(&3.5, &4_u16);\n-    let _ = dup_tup(&5, &Struct { a: 6, b: 7.5 });\n+    let _ = dup_tup(&1i, &2.5f64);\n+    let _ = dup_tup(&3.5f64, &4_u16);\n+    let _ = dup_tup(&5i, &Struct { a: 6, b: 7.5 });\n }\n \n fn zzz() {()}"}, {"sha": "d9b20a84cddf42ef9d9d6436c23f5e02c966c23b", "filename": "src/test/debuginfo/generic-functions-nested.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cdccecb24f5c467282b73413494343d3848b4e5a/src%2Ftest%2Fdebuginfo%2Fgeneric-functions-nested.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cdccecb24f5c467282b73413494343d3848b4e5a/src%2Ftest%2Fdebuginfo%2Fgeneric-functions-nested.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fgeneric-functions-nested.rs?ref=cdccecb24f5c467282b73413494343d3848b4e5a", "patch": "@@ -52,8 +52,8 @@ fn outer<TA: Clone>(a: TA) {\n }\n \n fn main() {\n-    outer(-1);\n-    outer(-2.5);\n+    outer(-1i);\n+    outer(-2.5f64);\n }\n \n fn zzz() {()}"}, {"sha": "8ae3d072362ed6b5db81a00be3becce691926a7f", "filename": "src/test/run-pass/issue-15108.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cdccecb24f5c467282b73413494343d3848b4e5a/src%2Ftest%2Frun-pass%2Fissue-15108.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cdccecb24f5c467282b73413494343d3848b4e5a/src%2Ftest%2Frun-pass%2Fissue-15108.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-15108.rs?ref=cdccecb24f5c467282b73413494343d3848b4e5a", "patch": "@@ -8,6 +8,4 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// compile-flags:-O\n-\n fn main() {}"}]}