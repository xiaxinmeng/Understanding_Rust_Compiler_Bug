{"sha": "fba23d01d16db8b83b2415bc538d2a850fcf24da", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZiYTIzZDAxZDE2ZGI4YjgzYjI0MTViYzUzOGQyYTg1MGZjZjI0ZGE=", "commit": {"author": {"name": "Emilio Cobos \u00c1lvarez", "email": "emilio@crisal.io", "date": "2018-12-16T18:59:42Z"}, "committer": {"name": "Emilio Cobos \u00c1lvarez", "email": "emilio@crisal.io", "date": "2018-12-16T19:06:53Z"}, "message": "Disable field reordering for repr(int).", "tree": {"sha": "ec17db48f0c62b4fc1aa63e8888360a032f69d6f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ec17db48f0c62b4fc1aa63e8888360a032f69d6f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fba23d01d16db8b83b2415bc538d2a850fcf24da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fba23d01d16db8b83b2415bc538d2a850fcf24da", "html_url": "https://github.com/rust-lang/rust/commit/fba23d01d16db8b83b2415bc538d2a850fcf24da", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fba23d01d16db8b83b2415bc538d2a850fcf24da/comments", "author": {"login": "emilio", "id": 1323194, "node_id": "MDQ6VXNlcjEzMjMxOTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1323194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emilio", "html_url": "https://github.com/emilio", "followers_url": "https://api.github.com/users/emilio/followers", "following_url": "https://api.github.com/users/emilio/following{/other_user}", "gists_url": "https://api.github.com/users/emilio/gists{/gist_id}", "starred_url": "https://api.github.com/users/emilio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emilio/subscriptions", "organizations_url": "https://api.github.com/users/emilio/orgs", "repos_url": "https://api.github.com/users/emilio/repos", "events_url": "https://api.github.com/users/emilio/events{/privacy}", "received_events_url": "https://api.github.com/users/emilio/received_events", "type": "User", "site_admin": false}, "committer": {"login": "emilio", "id": 1323194, "node_id": "MDQ6VXNlcjEzMjMxOTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1323194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emilio", "html_url": "https://github.com/emilio", "followers_url": "https://api.github.com/users/emilio/followers", "following_url": "https://api.github.com/users/emilio/following{/other_user}", "gists_url": "https://api.github.com/users/emilio/gists{/gist_id}", "starred_url": "https://api.github.com/users/emilio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emilio/subscriptions", "organizations_url": "https://api.github.com/users/emilio/orgs", "repos_url": "https://api.github.com/users/emilio/repos", "events_url": "https://api.github.com/users/emilio/events{/privacy}", "received_events_url": "https://api.github.com/users/emilio/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "748d354af3145d4292ea84142f73bb8114e3db12", "url": "https://api.github.com/repos/rust-lang/rust/commits/748d354af3145d4292ea84142f73bb8114e3db12", "html_url": "https://github.com/rust-lang/rust/commit/748d354af3145d4292ea84142f73bb8114e3db12"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "634df0194b08f5ae8234c7f5729f0bfc0bc285d8", "filename": "src/librustc/ty/mod.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/fba23d01d16db8b83b2415bc538d2a850fcf24da/src%2Flibrustc%2Fty%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fba23d01d16db8b83b2415bc538d2a850fcf24da/src%2Flibrustc%2Fty%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fmod.rs?ref=fba23d01d16db8b83b2415bc538d2a850fcf24da", "patch": "@@ -2059,9 +2059,10 @@ impl ReprOptions {\n     }\n \n     /// Returns `true` if this `#[repr()]` should inhibit struct field reordering\n-    /// optimizations, such as with repr(C) or repr(packed(1)).\n+    /// optimizations, such as with repr(C), repr(packed(1)), or repr(<int>).\n     pub fn inhibit_struct_field_reordering_opt(&self) -> bool {\n-        !(self.flags & ReprFlags::IS_UNOPTIMISABLE).is_empty() || (self.pack == 1)\n+        self.flags.intersects(ReprFlags::IS_UNOPTIMISABLE) || self.pack == 1 ||\n+            self.int.is_some()\n     }\n \n     /// Returns true if this `#[repr()]` should inhibit union abi optimisations"}]}