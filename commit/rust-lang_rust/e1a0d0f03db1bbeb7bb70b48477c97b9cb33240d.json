{"sha": "e1a0d0f03db1bbeb7bb70b48477c97b9cb33240d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUxYTBkMGYwM2RiMWJiZWI3YmI3MGI0ODQ3N2M5N2I5Y2IzMzI0MGQ=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2012-01-05T06:01:58Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2012-01-05T18:44:38Z"}, "message": "fix pretty printer to correctly insert parens for disamb", "tree": {"sha": "8bdf012b761bcc500ed5b5c636d2411b9a045af6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8bdf012b761bcc500ed5b5c636d2411b9a045af6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e1a0d0f03db1bbeb7bb70b48477c97b9cb33240d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e1a0d0f03db1bbeb7bb70b48477c97b9cb33240d", "html_url": "https://github.com/rust-lang/rust/commit/e1a0d0f03db1bbeb7bb70b48477c97b9cb33240d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e1a0d0f03db1bbeb7bb70b48477c97b9cb33240d/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "810927824ce13a56bc80d47a7a71802777dde7d5", "url": "https://api.github.com/repos/rust-lang/rust/commits/810927824ce13a56bc80d47a7a71802777dde7d5", "html_url": "https://github.com/rust-lang/rust/commit/810927824ce13a56bc80d47a7a71802777dde7d5"}], "stats": {"total": 47, "additions": 11, "deletions": 36}, "files": [{"sha": "e1a0151a627186302bce163c2a28c5e4087e058d", "filename": "src/comp/syntax/print/pprust.rs", "status": "modified", "additions": 5, "deletions": 35, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/e1a0d0f03db1bbeb7bb70b48477c97b9cb33240d/src%2Fcomp%2Fsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1a0d0f03db1bbeb7bb70b48477c97b9cb33240d/src%2Fcomp%2Fsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fprint%2Fpprust.rs?ref=e1a0d0f03db1bbeb7bb70b48477c97b9cb33240d", "patch": "@@ -567,11 +567,11 @@ fn print_stmt(s: ps, st: ast::stmt) {\n       }\n       ast::stmt_expr(expr, _) {\n         space_if_not_bol(s);\n-        print_tl_expr(s, expr);\n+        print_expr(s, expr);\n       }\n       ast::stmt_semi(expr, _) {\n         space_if_not_bol(s);\n-        print_tl_expr(s, expr);\n+        print_expr(s, expr);\n         word(s.s, \";\");\n       }\n     }\n@@ -609,7 +609,7 @@ fn print_possibly_embedded_block(s: ps, blk: ast::blk, embedded: embed_type,\n     alt blk.node.expr {\n       some(expr) {\n         space_if_not_bol(s);\n-        print_tl_expr(s, expr);\n+        print_expr(s, expr);\n         maybe_print_trailing_comment(s, expr.span, some(blk.span.hi));\n       }\n       _ { }\n@@ -697,37 +697,6 @@ fn print_mac(s: ps, m: ast::mac) {\n     }\n }\n \n-// An expression that begins with a dual-form statement/expression like `{\n-// ... }-10` would be parsed as `{ ... };-10` unless parentheses are used (ie,\n-// `({...}-10)`).  These parentheses are not, however, preserved by the\n-// parser. This function specifies whether parentheses must be inserted.\n-fn print_tl_expr(s: ps, &&expr: @ast::expr) {\n-    fn stmt_expr_requires_parens(ex: @ast::expr) -> bool {\n-        fn helper(ex: @ast::expr, inner: bool) -> bool {\n-            log(debug, (\"helper\", ex, inner));\n-            if inner && !parse::parser::expr_requires_semi_to_be_stmt(ex) {\n-                ret true;\n-            }\n-            alt ex.node {\n-              ast::expr_call(subex, _, _) | ast::expr_binary(_, subex, _) {\n-                be helper(subex, true);\n-              }\n-              _ { ret false; }\n-            }\n-        }\n-        ret helper(ex, false);\n-    }\n-\n-    #debug(\"print_tl_expr %s\", expr_to_str(expr));\n-    if stmt_expr_requires_parens(expr) {\n-        popen(s);\n-        print_expr(s, expr);\n-        pclose(s);\n-    } else {\n-        print_expr(s, expr);\n-    }\n-}\n-\n fn print_expr(s: ps, &&expr: @ast::expr) {\n     maybe_print_comment(s, expr.span.lo);\n     ibox(s, indent_unit);\n@@ -1062,6 +1031,7 @@ fn print_expr_parens_if_not_bot(s: ps, ex: @ast::expr) {\n       ast::expr_copy(_) | ast::expr_assign(_, _) | ast::expr_be(_) |\n       ast::expr_assign_op(_, _, _) | ast::expr_swap(_, _) |\n       ast::expr_log(_, _, _) | ast::expr_assert(_) |\n+      ast::expr_call(_, _, true) |\n       ast::expr_check(_, _) { true }\n       _ { false }\n     };\n@@ -1404,7 +1374,7 @@ fn need_parens(expr: @ast::expr, outer_prec: int) -> bool {\n       ast::expr_assert(_) { true }\n       ast::expr_check(_, _) { true }\n       ast::expr_log(_, _, _) { true }\n-      _ { false }\n+      _ { !parse::parser::expr_requires_semi_to_be_stmt(expr) }\n     }\n }\n "}, {"sha": "288e01dcc531f5c676cb96ee7567b7a82378cf12", "filename": "src/test/pretty/block-arg-disambig.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e1a0d0f03db1bbeb7bb70b48477c97b9cb33240d/src%2Ftest%2Fpretty%2Fblock-arg-disambig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1a0d0f03db1bbeb7bb70b48477c97b9cb33240d/src%2Ftest%2Fpretty%2Fblock-arg-disambig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fpretty%2Fblock-arg-disambig.rs?ref=e1a0d0f03db1bbeb7bb70b48477c97b9cb33240d", "patch": "@@ -0,0 +1,5 @@\n+fn blk1(b: block()) -> fn@() { ret fn@() { }; }\n+\n+fn test1() { (blk1 {|| #debug[\"hi\"]; })(); }\n+\n+fn test2() { (blk1 {|| #debug[\"hi\"]; }) {|| #debug[\"ho\"]; }; }"}, {"sha": "4f4bf6ff51267b6b43e7d77b959decc62d9a4afe", "filename": "src/test/pretty/disamb-stmt-expr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e1a0d0f03db1bbeb7bb70b48477c97b9cb33240d/src%2Ftest%2Fpretty%2Fdisamb-stmt-expr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1a0d0f03db1bbeb7bb70b48477c97b9cb33240d/src%2Ftest%2Fpretty%2Fdisamb-stmt-expr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fpretty%2Fdisamb-stmt-expr.rs?ref=e1a0d0f03db1bbeb7bb70b48477c97b9cb33240d", "patch": "@@ -4,5 +4,5 @@\n // preserved.  They are needed to disambiguate `{ret n+1}; - 0` from\n // `({ret n+1}-0)`.\n \n-fn wsucc(n: int) -> int { ({ ret n + 1 } - 0); }\n+fn wsucc(n: int) -> int { ({ ret n + 1 }) - 0; }\n fn main() { }"}]}