{"sha": "b54e7e45069a84e9e9ee6ef3431f733d96d93586", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI1NGU3ZTQ1MDY5YTg0ZTllOWVlNmVmMzQzMWY3MzNkOTZkOTM1ODY=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-08-08T22:53:31Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-08-08T22:53:41Z"}, "message": "Add new arg-passing mode 'move' denoted with '-T'. Translate as pass-by-value, doesn't deinit source yet nor get proper analysis in typestate, alias passes.", "tree": {"sha": "67ec4b8273da05a6f16ff6255fdb5422219631d6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/67ec4b8273da05a6f16ff6255fdb5422219631d6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b54e7e45069a84e9e9ee6ef3431f733d96d93586", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b54e7e45069a84e9e9ee6ef3431f733d96d93586", "html_url": "https://github.com/rust-lang/rust/commit/b54e7e45069a84e9e9ee6ef3431f733d96d93586", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b54e7e45069a84e9e9ee6ef3431f733d96d93586/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3dda9aabf217d59881970f847b06338d417f6f6f", "url": "https://api.github.com/repos/rust-lang/rust/commits/3dda9aabf217d59881970f847b06338d417f6f6f", "html_url": "https://github.com/rust-lang/rust/commit/3dda9aabf217d59881970f847b06338d417f6f6f"}], "stats": {"total": 45, "additions": 39, "deletions": 6}, "files": [{"sha": "093c2a7bebab0e71041fb50829145e3b944c8331", "filename": "src/comp/metadata/tydecode.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b54e7e45069a84e9e9ee6ef3431f733d96d93586/src%2Fcomp%2Fmetadata%2Ftydecode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b54e7e45069a84e9e9ee6ef3431f733d96d93586/src%2Fcomp%2Fmetadata%2Ftydecode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmetadata%2Ftydecode.rs?ref=b54e7e45069a84e9e9ee6ef3431f733d96d93586", "patch": "@@ -381,6 +381,9 @@ fn parse_ty_fn(st: @pstate, sd: str_def) ->\n                 mode = ty::mo_alias(true);\n                 st.pos += 1u;\n             }\n+        } else if peek(st) as char == '-' {\n+            mode = ty::mo_move;\n+            st.pos += 1u;\n         }\n         inputs += ~[{mode: mode, ty: parse_ty(st, sd)}];\n     }"}, {"sha": "2781a7dc6a30accde8a1c064badf79d79893e43b", "filename": "src/comp/metadata/tyencode.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b54e7e45069a84e9e9ee6ef3431f733d96d93586/src%2Fcomp%2Fmetadata%2Ftyencode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b54e7e45069a84e9e9ee6ef3431f733d96d93586/src%2Fcomp%2Fmetadata%2Ftyencode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmetadata%2Ftyencode.rs?ref=b54e7e45069a84e9e9ee6ef3431f733d96d93586", "patch": "@@ -208,6 +208,9 @@ fn enc_ty_fn(w: &ioivec::writer, cx: &@ctxt, args: &ty::arg[], out: &ty::t,\n             w.write_char('&');\n             if mut { w.write_char('m'); }\n           }\n+          ty::mo_move. {\n+            w.write_char('-');\n+          }\n           ty::mo_val. { }\n         }\n         enc_ty(w, cx, arg.ty);"}, {"sha": "e4f4aef7d9d7616e13c37cd159722c184f8bbe81", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b54e7e45069a84e9e9ee6ef3431f733d96d93586/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b54e7e45069a84e9e9ee6ef3431f733d96d93586/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=b54e7e45069a84e9e9ee6ef3431f733d96d93586", "patch": "@@ -95,6 +95,7 @@ fn type_of_explicit_args(cx: &@crate_ctxt, sp: &span, inputs: &ty::arg[]) ->\n         let t: TypeRef = type_of_inner(cx, sp, arg.ty);\n         t = alt arg.mode {\n           ty::mo_alias(_) { T_ptr(t) }\n+          ty::mo_move. { T_ptr(t) }\n           _ { t }\n         };\n         atys += ~[t];"}, {"sha": "eba4d8ccc60c4598996b12cb058ff65b290d548d", "filename": "src/comp/middle/ty.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b54e7e45069a84e9e9ee6ef3431f733d96d93586/src%2Fcomp%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b54e7e45069a84e9e9ee6ef3431f733d96d93586/src%2Fcomp%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fty.rs?ref=b54e7e45069a84e9e9ee6ef3431f733d96d93586", "patch": "@@ -95,6 +95,7 @@ export mk_iter_body_fn;\n export mode;\n export mo_val;\n export mo_alias;\n+export mo_move;\n export mt;\n export node_type_table;\n export pat_ty;\n@@ -187,7 +188,7 @@ export walk_ty;\n export occurs_check_fails;\n \n // Data types\n-tag mode { mo_val; mo_alias(bool); }\n+tag mode { mo_val; mo_alias(bool); mo_move; }\n \n type arg = {mode: mode, ty: t};\n "}, {"sha": "b88f761deded2e88757dad83b896a830ca246ede", "filename": "src/comp/middle/typeck.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b54e7e45069a84e9e9ee6ef3431f733d96d93586/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b54e7e45069a84e9e9ee6ef3431f733d96d93586/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftypeck.rs?ref=b54e7e45069a84e9e9ee6ef3431f733d96d93586", "patch": "@@ -21,6 +21,7 @@ import middle::ty::field;\n import middle::ty::method;\n import middle::ty::mo_val;\n import middle::ty::mo_alias;\n+import middle::ty::mo_move;\n import middle::ty::node_type_table;\n import middle::ty::pat_ty;\n import middle::ty::ty_param_substs_opt_and_ty;\n@@ -204,12 +205,11 @@ fn instantiate_path(fcx: &@fn_ctxt, pth: &ast::path,\n }\n \n fn ast_mode_to_mode(mode: ast::mode) -> ty::mode {\n-    let ty_mode;\n     alt mode {\n-      ast::val. { ty_mode = mo_val; }\n-      ast::alias(mut) { ty_mode = mo_alias(mut); }\n+      ast::val. { mo_val }\n+      ast::alias(mut) { mo_alias(mut) }\n+      ast::move. { mo_move }\n     }\n-    ret ty_mode;\n }\n \n "}, {"sha": "be27e9c2dec47a0fae03f4c2d769b27074542a24", "filename": "src/comp/syntax/ast.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b54e7e45069a84e9e9ee6ef3431f733d96d93586/src%2Fcomp%2Fsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b54e7e45069a84e9e9ee6ef3431f733d96d93586/src%2Fcomp%2Fsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fast.rs?ref=b54e7e45069a84e9e9ee6ef3431f733d96d93586", "patch": "@@ -249,7 +249,7 @@ fn unop_to_str(op: unop) -> str {\n     }\n }\n \n-tag mode { val; alias(bool); }\n+tag mode { val; alias(bool); move; }\n \n type stmt = spanned[stmt_];\n "}, {"sha": "133b3c41bc7abf12e1e6fa08947d9d2e53f0e48a", "filename": "src/comp/syntax/parse/parser.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b54e7e45069a84e9e9ee6ef3431f733d96d93586/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b54e7e45069a84e9e9ee6ef3431f733d96d93586/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs?ref=b54e7e45069a84e9e9ee6ef3431f733d96d93586", "patch": "@@ -597,6 +597,8 @@ fn parse_arg(p: &parser) -> ast::arg {\n     expect(p, token::COLON);\n     if eat(p, token::BINOP(token::AND)) {\n         m = ast::alias(eat_word(p, \"mutable\"));\n+    } else if eat(p, token::BINOP(token::MINUS)) {\n+        m = ast::move;\n     }\n     let t: @ast::ty = parse_ty(p);\n     ret {mode: m, ty: t, ident: i, id: p.get_id()};"}, {"sha": "79fe8a9f8a43199b01e9f02530e1ac6fea4b37a1", "filename": "src/comp/syntax/print/pprust.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b54e7e45069a84e9e9ee6ef3431f733d96d93586/src%2Fcomp%2Fsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b54e7e45069a84e9e9ee6ef3431f733d96d93586/src%2Fcomp%2Fsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fprint%2Fpprust.rs?ref=b54e7e45069a84e9e9ee6ef3431f733d96d93586", "patch": "@@ -1191,6 +1191,7 @@ fn print_alias(s: &ps, m: ast::mode) {\n     alt m {\n       ast::alias(true) { word_space(s, \"&mutable\"); }\n       ast::alias(false) { word(s.s, \"&\"); }\n+      ast::move. { word(s.s, \"-\"); }\n       ast::val. { }\n     }\n }"}, {"sha": "1b174ea64c6ed763f2f964d7a57e931d2af43284", "filename": "src/test/compile-fail/move-arg.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/b54e7e45069a84e9e9ee6ef3431f733d96d93586/src%2Ftest%2Fcompile-fail%2Fmove-arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b54e7e45069a84e9e9ee6ef3431f733d96d93586/src%2Ftest%2Fcompile-fail%2Fmove-arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmove-arg.rs?ref=b54e7e45069a84e9e9ee6ef3431f733d96d93586", "patch": "@@ -0,0 +1,14 @@\n+// xfail-stage0\n+// xfail-stage1\n+// xfail-stage2\n+// xfail-stage3\n+// error-pattern: Unsatisfied precondition constraint\n+fn test(foo: -int) {\n+    assert (foo == 10);\n+}\n+\n+fn main() {\n+    let x = 10;\n+    test(x);\n+    log x;\n+}\n\\ No newline at end of file"}, {"sha": "131f69558eac40e56dc6023f7be199e78bb9c5f9", "filename": "src/test/run-pass/move-arg.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b54e7e45069a84e9e9ee6ef3431f733d96d93586/src%2Ftest%2Frun-pass%2Fmove-arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b54e7e45069a84e9e9ee6ef3431f733d96d93586/src%2Ftest%2Frun-pass%2Fmove-arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmove-arg.rs?ref=b54e7e45069a84e9e9ee6ef3431f733d96d93586", "patch": "@@ -0,0 +1,8 @@\n+fn test(foo: -int) {\n+    assert (foo == 10);\n+}\n+\n+fn main() {\n+    let x = 10;\n+    test(x);\n+}\n\\ No newline at end of file"}]}