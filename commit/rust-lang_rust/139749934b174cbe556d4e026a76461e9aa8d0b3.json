{"sha": "139749934b174cbe556d4e026a76461e9aa8d0b3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEzOTc0OTkzNGIxNzRjYmU1NTZkNGUwMjZhNzY0NjFlOWFhOGQwYjM=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2021-04-25T21:15:16Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-04-25T21:15:16Z"}, "message": "Rollup merge of #84520 - hameerabbasi:fn-as-ty, r=lcnr\n\nImprove diagnostics for function passed when a type was expected.\n\nThis PR improves diagnostics, it provides more information when a function is passed where a type is expected.\n\nr? `@lcnr`", "tree": {"sha": "88aec737f399f4e93d62b8224fa6b222f00f246f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/88aec737f399f4e93d62b8224fa6b222f00f246f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/139749934b174cbe556d4e026a76461e9aa8d0b3", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJghdvkCRBK7hj4Ov3rIwAAl/UIADvPwhR6x1RTA3VhobeL+gOu\n6kuMU+BbB3TP/49yymQSz/wl2XLDBOcXezjE/ADG69oILAG0Ak8PLHOzVsylgowB\nebDZ2uRQ1kmXMDtNyDrI3hBKYQDGErD+KVza8l2VD3jCtRU8cj0BkTgRLC4SZ/dK\nJAmloSuI0jLx03qajJ1au0gGhn3mO5tyXIlO+IaCpltX23D78l0Ae7a/YUN3fX6F\n3IQ0ITskaCIGDHhezgor6+uekxxsFpINYjyS17MaQ6JQvwfUewhn4e+yUAI7pzSJ\nPAnhCDtPMj4GVnmnylvrmJS7bhOCEzSB9QkyVQpVIiBZM5MO5OCQqsNEdn2UfOA=\n=b+aw\n-----END PGP SIGNATURE-----\n", "payload": "tree 88aec737f399f4e93d62b8224fa6b222f00f246f\nparent ad3389a6dfa5c239df8db7e55e4a341bdd6d5f66\nparent e558ddbb3aa8a787aac030969af7575aceed63cb\nauthor Dylan DPC <dylan.dpc@gmail.com> 1619385316 +0200\ncommitter GitHub <noreply@github.com> 1619385316 +0200\n\nRollup merge of #84520 - hameerabbasi:fn-as-ty, r=lcnr\n\nImprove diagnostics for function passed when a type was expected.\n\nThis PR improves diagnostics, it provides more information when a function is passed where a type is expected.\n\nr? `@lcnr`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/139749934b174cbe556d4e026a76461e9aa8d0b3", "html_url": "https://github.com/rust-lang/rust/commit/139749934b174cbe556d4e026a76461e9aa8d0b3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/139749934b174cbe556d4e026a76461e9aa8d0b3/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ad3389a6dfa5c239df8db7e55e4a341bdd6d5f66", "url": "https://api.github.com/repos/rust-lang/rust/commits/ad3389a6dfa5c239df8db7e55e4a341bdd6d5f66", "html_url": "https://github.com/rust-lang/rust/commit/ad3389a6dfa5c239df8db7e55e4a341bdd6d5f66"}, {"sha": "e558ddbb3aa8a787aac030969af7575aceed63cb", "url": "https://api.github.com/repos/rust-lang/rust/commits/e558ddbb3aa8a787aac030969af7575aceed63cb", "html_url": "https://github.com/rust-lang/rust/commit/e558ddbb3aa8a787aac030969af7575aceed63cb"}], "stats": {"total": 41, "additions": 41, "deletions": 0}, "files": [{"sha": "a3804e468da2da74b0e159948fe23ca8f74cc180", "filename": "compiler/rustc_typeck/src/astconv/generics.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/139749934b174cbe556d4e026a76461e9aa8d0b3/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fgenerics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/139749934b174cbe556d4e026a76461e9aa8d0b3/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fgenerics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fgenerics.rs?ref=139749934b174cbe556d4e026a76461e9aa8d0b3", "patch": "@@ -109,6 +109,20 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n                     );\n                 }\n             }\n+            (GenericArg::Const(cnst), GenericParamDefKind::Type { .. }) => {\n+                let body = tcx.hir().body(cnst.value.body);\n+                if let rustc_hir::ExprKind::Path(rustc_hir::QPath::Resolved(_, path)) =\n+                    body.value.kind\n+                {\n+                    if let Res::Def(DefKind::Fn { .. }, id) = path.res {\n+                        err.help(&format!(\n+                            \"`{}` is a function item, not a type\",\n+                            tcx.item_name(id)\n+                        ));\n+                        err.help(\"function item types cannot be named directly\");\n+                    }\n+                }\n+            }\n             _ => {}\n         }\n "}, {"sha": "e1b0578cadbe96d32ea3e2c03c6ee774c24405cb", "filename": "src/test/ui/generics/generic-function-item-where-type.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/139749934b174cbe556d4e026a76461e9aa8d0b3/src%2Ftest%2Fui%2Fgenerics%2Fgeneric-function-item-where-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/139749934b174cbe556d4e026a76461e9aa8d0b3/src%2Ftest%2Fui%2Fgenerics%2Fgeneric-function-item-where-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerics%2Fgeneric-function-item-where-type.rs?ref=139749934b174cbe556d4e026a76461e9aa8d0b3", "patch": "@@ -0,0 +1,6 @@\n+fn foo<U>() {}\n+\n+fn main() {\n+    foo::<main>()\n+    //~^ ERROR constant provided when a type was expected\n+}"}, {"sha": "88594129caabac4ca6591b2301dfa3751f48dc2b", "filename": "src/test/ui/generics/generic-function-item-where-type.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/139749934b174cbe556d4e026a76461e9aa8d0b3/src%2Ftest%2Fui%2Fgenerics%2Fgeneric-function-item-where-type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/139749934b174cbe556d4e026a76461e9aa8d0b3/src%2Ftest%2Fui%2Fgenerics%2Fgeneric-function-item-where-type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerics%2Fgeneric-function-item-where-type.stderr?ref=139749934b174cbe556d4e026a76461e9aa8d0b3", "patch": "@@ -0,0 +1,12 @@\n+error[E0747]: constant provided when a type was expected\n+  --> $DIR/generic-function-item-where-type.rs:4:11\n+   |\n+LL |     foo::<main>()\n+   |           ^^^^\n+   |\n+   = help: `main` is a function item, not a type\n+   = help: function item types cannot be named directly\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0747`."}, {"sha": "d09a8aae7480108eee0c477cc6e7493bdbd71d3c", "filename": "src/test/ui/privacy/privacy-ns1.stderr", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/139749934b174cbe556d4e026a76461e9aa8d0b3/src%2Ftest%2Fui%2Fprivacy%2Fprivacy-ns1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/139749934b174cbe556d4e026a76461e9aa8d0b3/src%2Ftest%2Fui%2Fprivacy%2Fprivacy-ns1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Fprivacy-ns1.stderr?ref=139749934b174cbe556d4e026a76461e9aa8d0b3", "patch": "@@ -57,6 +57,9 @@ error[E0747]: constant provided when a type was expected\n    |\n LL |     let _x: Box<Bar>;\n    |                 ^^^\n+   |\n+   = help: `Bar` is a function item, not a type\n+   = help: function item types cannot be named directly\n \n error: aborting due to 4 previous errors\n "}, {"sha": "fdf0549cf50bc5fd5dcf4318b9a1f7a28d581fb1", "filename": "src/test/ui/privacy/privacy-ns2.stderr", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/139749934b174cbe556d4e026a76461e9aa8d0b3/src%2Ftest%2Fui%2Fprivacy%2Fprivacy-ns2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/139749934b174cbe556d4e026a76461e9aa8d0b3/src%2Ftest%2Fui%2Fprivacy%2Fprivacy-ns2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Fprivacy-ns2.stderr?ref=139749934b174cbe556d4e026a76461e9aa8d0b3", "patch": "@@ -83,12 +83,18 @@ error[E0747]: constant provided when a type was expected\n    |\n LL |     let _x : Box<Bar>;\n    |                  ^^^\n+   |\n+   = help: `Bar` is a function item, not a type\n+   = help: function item types cannot be named directly\n \n error[E0747]: constant provided when a type was expected\n   --> $DIR/privacy-ns2.rs:48:17\n    |\n LL |     let _x: Box<Bar>;\n    |                 ^^^\n+   |\n+   = help: `Bar` is a function item, not a type\n+   = help: function item types cannot be named directly\n \n error: aborting due to 8 previous errors\n "}]}