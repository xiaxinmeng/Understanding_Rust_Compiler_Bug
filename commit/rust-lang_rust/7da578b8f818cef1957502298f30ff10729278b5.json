{"sha": "7da578b8f818cef1957502298f30ff10729278b5", "node_id": "C_kwDOAAsO6NoAKDdkYTU3OGI4ZjgxOGNlZjE5NTc1MDIyOThmMzBmZjEwNzI5Mjc4YjU", "commit": {"author": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-07-28T15:33:10Z"}, "committer": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-07-28T16:15:24Z"}, "message": "--bless tests", "tree": {"sha": "f630900e76d95b235ca4f309bf2520fea9b0a9a2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f630900e76d95b235ca4f309bf2520fea9b0a9a2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7da578b8f818cef1957502298f30ff10729278b5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7da578b8f818cef1957502298f30ff10729278b5", "html_url": "https://github.com/rust-lang/rust/commit/7da578b8f818cef1957502298f30ff10729278b5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7da578b8f818cef1957502298f30ff10729278b5/comments", "author": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "620b0f1935404828a145cc341dc1f95da67cd111", "url": "https://api.github.com/repos/rust-lang/rust/commits/620b0f1935404828a145cc341dc1f95da67cd111", "html_url": "https://github.com/rust-lang/rust/commit/620b0f1935404828a145cc341dc1f95da67cd111"}], "stats": {"total": 182, "additions": 119, "deletions": 63}, "files": [{"sha": "1a0a5fdf4eb233c5bebdf316be4e738ad7295a6d", "filename": "src/test/ui/anonymous-higher-ranked-lifetime.stderr", "status": "modified", "additions": 44, "deletions": 22, "changes": 66, "blob_url": "https://github.com/rust-lang/rust/blob/7da578b8f818cef1957502298f30ff10729278b5/src%2Ftest%2Fui%2Fanonymous-higher-ranked-lifetime.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7da578b8f818cef1957502298f30ff10729278b5/src%2Ftest%2Fui%2Fanonymous-higher-ranked-lifetime.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fanonymous-higher-ranked-lifetime.stderr?ref=7da578b8f818cef1957502298f30ff10729278b5", "patch": "@@ -2,10 +2,12 @@ error[E0631]: type mismatch in closure arguments\n   --> $DIR/anonymous-higher-ranked-lifetime.rs:2:5\n    |\n LL |     f1(|_: (), _: ()| {});\n-   |     ^^ -------------- found signature of `fn((), ()) -> _`\n+   |     ^^ -------------- found signature defined here\n    |     |\n-   |     expected signature of `for<'r, 's> fn(&'r (), &'s ()) -> _`\n+   |     expected due to this\n    |\n+   = note: expected closure signature `for<'r, 's> fn(&'r (), &'s ()) -> _`\n+              found closure signature `fn((), ()) -> _`\n note: required by a bound in `f1`\n   --> $DIR/anonymous-higher-ranked-lifetime.rs:16:25\n    |\n@@ -16,10 +18,12 @@ error[E0631]: type mismatch in closure arguments\n   --> $DIR/anonymous-higher-ranked-lifetime.rs:3:5\n    |\n LL |     f2(|_: (), _: ()| {});\n-   |     ^^ -------------- found signature of `fn((), ()) -> _`\n+   |     ^^ -------------- found signature defined here\n    |     |\n-   |     expected signature of `for<'a, 'r> fn(&'a (), &'r ()) -> _`\n+   |     expected due to this\n    |\n+   = note: expected closure signature `for<'a, 'r> fn(&'a (), &'r ()) -> _`\n+              found closure signature `fn((), ()) -> _`\n note: required by a bound in `f2`\n   --> $DIR/anonymous-higher-ranked-lifetime.rs:17:25\n    |\n@@ -30,10 +34,12 @@ error[E0631]: type mismatch in closure arguments\n   --> $DIR/anonymous-higher-ranked-lifetime.rs:4:5\n    |\n LL |     f3(|_: (), _: ()| {});\n-   |     ^^ -------------- found signature of `fn((), ()) -> _`\n+   |     ^^ -------------- found signature defined here\n    |     |\n-   |     expected signature of `for<'r> fn(&(), &'r ()) -> _`\n+   |     expected due to this\n    |\n+   = note: expected closure signature `for<'r> fn(&(), &'r ()) -> _`\n+              found closure signature `fn((), ()) -> _`\n note: required by a bound in `f3`\n   --> $DIR/anonymous-higher-ranked-lifetime.rs:18:29\n    |\n@@ -44,10 +50,12 @@ error[E0631]: type mismatch in closure arguments\n   --> $DIR/anonymous-higher-ranked-lifetime.rs:5:5\n    |\n LL |     f4(|_: (), _: ()| {});\n-   |     ^^ -------------- found signature of `fn((), ()) -> _`\n+   |     ^^ -------------- found signature defined here\n    |     |\n-   |     expected signature of `for<'s, 'r> fn(&'s (), &'r ()) -> _`\n+   |     expected due to this\n    |\n+   = note: expected closure signature `for<'r, 's> fn(&'s (), &'r ()) -> _`\n+              found closure signature `fn((), ()) -> _`\n note: required by a bound in `f4`\n   --> $DIR/anonymous-higher-ranked-lifetime.rs:19:25\n    |\n@@ -58,10 +66,12 @@ error[E0631]: type mismatch in closure arguments\n   --> $DIR/anonymous-higher-ranked-lifetime.rs:6:5\n    |\n LL |     f5(|_: (), _: ()| {});\n-   |     ^^ -------------- found signature of `fn((), ()) -> _`\n+   |     ^^ -------------- found signature defined here\n    |     |\n-   |     expected signature of `for<'r> fn(&'r (), &'r ()) -> _`\n+   |     expected due to this\n    |\n+   = note: expected closure signature `for<'r> fn(&'r (), &'r ()) -> _`\n+              found closure signature `fn((), ()) -> _`\n note: required by a bound in `f5`\n   --> $DIR/anonymous-higher-ranked-lifetime.rs:20:25\n    |\n@@ -72,10 +82,12 @@ error[E0631]: type mismatch in closure arguments\n   --> $DIR/anonymous-higher-ranked-lifetime.rs:7:5\n    |\n LL |     g1(|_: (), _: ()| {});\n-   |     ^^ -------------- found signature of `fn((), ()) -> _`\n+   |     ^^ -------------- found signature defined here\n    |     |\n-   |     expected signature of `for<'r> fn(&'r (), Box<(dyn for<'s> Fn(&'s ()) + 'static)>) -> _`\n+   |     expected due to this\n    |\n+   = note: expected closure signature `for<'r> fn(&'r (), Box<(dyn for<'r> Fn(&'r ()) + 'static)>) -> _`\n+              found closure signature `fn((), ()) -> _`\n note: required by a bound in `g1`\n   --> $DIR/anonymous-higher-ranked-lifetime.rs:23:25\n    |\n@@ -86,10 +98,12 @@ error[E0631]: type mismatch in closure arguments\n   --> $DIR/anonymous-higher-ranked-lifetime.rs:8:5\n    |\n LL |     g2(|_: (), _: ()| {});\n-   |     ^^ -------------- found signature of `fn((), ()) -> _`\n+   |     ^^ -------------- found signature defined here\n    |     |\n-   |     expected signature of `for<'r> fn(&'r (), for<'s> fn(&'s ())) -> _`\n+   |     expected due to this\n    |\n+   = note: expected closure signature `for<'r> fn(&'r (), for<'r> fn(&'r ())) -> _`\n+              found closure signature `fn((), ()) -> _`\n note: required by a bound in `g2`\n   --> $DIR/anonymous-higher-ranked-lifetime.rs:24:25\n    |\n@@ -100,10 +114,12 @@ error[E0631]: type mismatch in closure arguments\n   --> $DIR/anonymous-higher-ranked-lifetime.rs:9:5\n    |\n LL |     g3(|_: (), _: ()| {});\n-   |     ^^ -------------- found signature of `fn((), ()) -> _`\n+   |     ^^ -------------- found signature defined here\n    |     |\n-   |     expected signature of `for<'s> fn(&'s (), Box<(dyn for<'r> Fn(&'r ()) + 'static)>) -> _`\n+   |     expected due to this\n    |\n+   = note: expected closure signature `for<'s> fn(&'s (), Box<(dyn for<'r> Fn(&'r ()) + 'static)>) -> _`\n+              found closure signature `fn((), ()) -> _`\n note: required by a bound in `g3`\n   --> $DIR/anonymous-higher-ranked-lifetime.rs:25:25\n    |\n@@ -114,10 +130,12 @@ error[E0631]: type mismatch in closure arguments\n   --> $DIR/anonymous-higher-ranked-lifetime.rs:10:5\n    |\n LL |     g4(|_: (), _: ()| {});\n-   |     ^^ -------------- found signature of `fn((), ()) -> _`\n+   |     ^^ -------------- found signature defined here\n    |     |\n-   |     expected signature of `for<'s> fn(&'s (), for<'r> fn(&'r ())) -> _`\n+   |     expected due to this\n    |\n+   = note: expected closure signature `for<'s> fn(&'s (), for<'r> fn(&'r ())) -> _`\n+              found closure signature `fn((), ()) -> _`\n note: required by a bound in `g4`\n   --> $DIR/anonymous-higher-ranked-lifetime.rs:26:25\n    |\n@@ -128,10 +146,12 @@ error[E0631]: type mismatch in closure arguments\n   --> $DIR/anonymous-higher-ranked-lifetime.rs:11:5\n    |\n LL |     h1(|_: (), _: (), _: (), _: ()| {});\n-   |     ^^ ---------------------------- found signature of `fn((), (), (), ()) -> _`\n+   |     ^^ ---------------------------- found signature defined here\n    |     |\n-   |     expected signature of `for<'r, 's> fn(&'r (), Box<(dyn for<'t0> Fn(&'t0 ()) + 'static)>, &'s (), for<'t0, 't1> fn(&'t0 (), &'t1 ())) -> _`\n+   |     expected due to this\n    |\n+   = note: expected closure signature `for<'r, 's> fn(&'r (), Box<(dyn for<'r> Fn(&'r ()) + 'static)>, &'s (), for<'r, 's> fn(&'r (), &'s ())) -> _`\n+              found closure signature `fn((), (), (), ()) -> _`\n note: required by a bound in `h1`\n   --> $DIR/anonymous-higher-ranked-lifetime.rs:29:25\n    |\n@@ -142,10 +162,12 @@ error[E0631]: type mismatch in closure arguments\n   --> $DIR/anonymous-higher-ranked-lifetime.rs:12:5\n    |\n LL |     h2(|_: (), _: (), _: (), _: ()| {});\n-   |     ^^ ---------------------------- found signature of `fn((), (), (), ()) -> _`\n+   |     ^^ ---------------------------- found signature defined here\n    |     |\n-   |     expected signature of `for<'r, 't0> fn(&'r (), Box<(dyn for<'s> Fn(&'s ()) + 'static)>, &'t0 (), for<'s, 't1> fn(&'s (), &'t1 ())) -> _`\n+   |     expected due to this\n    |\n+   = note: expected closure signature `for<'t0, 'r> fn(&'r (), Box<(dyn for<'r> Fn(&'r ()) + 'static)>, &'t0 (), for<'r, 's> fn(&'r (), &'s ())) -> _`\n+              found closure signature `fn((), (), (), ()) -> _`\n note: required by a bound in `h2`\n   --> $DIR/anonymous-higher-ranked-lifetime.rs:30:25\n    |"}, {"sha": "8dccf929b2bd1fd73727cecaf062d7b485c2c60b", "filename": "src/test/ui/closure-expected-type/expect-infer-var-appearing-twice.stderr", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7da578b8f818cef1957502298f30ff10729278b5/src%2Ftest%2Fui%2Fclosure-expected-type%2Fexpect-infer-var-appearing-twice.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7da578b8f818cef1957502298f30ff10729278b5/src%2Ftest%2Fui%2Fclosure-expected-type%2Fexpect-infer-var-appearing-twice.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosure-expected-type%2Fexpect-infer-var-appearing-twice.stderr?ref=7da578b8f818cef1957502298f30ff10729278b5", "patch": "@@ -2,10 +2,12 @@ error[E0631]: type mismatch in closure arguments\n   --> $DIR/expect-infer-var-appearing-twice.rs:14:5\n    |\n LL |     with_closure(|x: u32, y: i32| {\n-   |     ^^^^^^^^^^^^ ---------------- found signature of `fn(u32, i32) -> _`\n+   |     ^^^^^^^^^^^^ ---------------- found signature defined here\n    |     |\n-   |     expected signature of `fn(_, _) -> _`\n+   |     expected due to this\n    |\n+   = note: expected closure signature `fn(_, _) -> _`\n+              found closure signature `fn(u32, i32) -> _`\n note: required by a bound in `with_closure`\n   --> $DIR/expect-infer-var-appearing-twice.rs:2:14\n    |"}, {"sha": "1d9377bcef4de4e7b47418731b81d3001cc92746", "filename": "src/test/ui/generator/issue-88653.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7da578b8f818cef1957502298f30ff10729278b5/src%2Ftest%2Fui%2Fgenerator%2Fissue-88653.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7da578b8f818cef1957502298f30ff10729278b5/src%2Ftest%2Fui%2Fgenerator%2Fissue-88653.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerator%2Fissue-88653.rs?ref=7da578b8f818cef1957502298f30ff10729278b5", "patch": "@@ -7,10 +7,12 @@ use std::ops::Generator;\n \n fn foo(bar: bool) -> impl Generator<(bool,)> {\n     //~^ ERROR: type mismatch in generator arguments [E0631]\n-    //~| NOTE: expected signature of `fn((bool,)) -> _`\n+    //~| NOTE: expected due to this\n+    //~| NOTE: expected generator signature `fn((bool,)) -> _`\n+    //~| NOTE: in this expansion of desugaring of `impl Trait`\n     //~| NOTE: in this expansion of desugaring of `impl Trait`\n     |bar| {\n-        //~^ NOTE: found signature of `fn(bool) -> _`\n+        //~^ NOTE: found signature defined here\n         if bar {\n             yield bar;\n         }"}, {"sha": "b742c6e2f1c08b1c40c569c4f34e195d933a1ef6", "filename": "src/test/ui/generator/issue-88653.stderr", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/7da578b8f818cef1957502298f30ff10729278b5/src%2Ftest%2Fui%2Fgenerator%2Fissue-88653.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7da578b8f818cef1957502298f30ff10729278b5/src%2Ftest%2Fui%2Fgenerator%2Fissue-88653.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerator%2Fissue-88653.stderr?ref=7da578b8f818cef1957502298f30ff10729278b5", "patch": "@@ -2,10 +2,13 @@ error[E0631]: type mismatch in generator arguments\n   --> $DIR/issue-88653.rs:8:22\n    |\n LL | fn foo(bar: bool) -> impl Generator<(bool,)> {\n-   |                      ^^^^^^^^^^^^^^^^^^^^^^^ expected signature of `fn((bool,)) -> _`\n+   |                      ^^^^^^^^^^^^^^^^^^^^^^^ expected due to this\n ...\n LL |     |bar| {\n-   |     ----- found signature of `fn(bool) -> _`\n+   |     ----- found signature defined here\n+   |\n+   = note: expected generator signature `fn((bool,)) -> _`\n+              found generator signature `fn(bool) -> _`\n \n error: aborting due to previous error\n "}, {"sha": "7210895b79bc331ebc65fbb3b3fa22a788a74a59", "filename": "src/test/ui/generic-associated-types/bugs/issue-88382.stderr", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7da578b8f818cef1957502298f30ff10729278b5/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fbugs%2Fissue-88382.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7da578b8f818cef1957502298f30ff10729278b5/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fbugs%2Fissue-88382.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fbugs%2Fissue-88382.stderr?ref=7da578b8f818cef1957502298f30ff10729278b5", "patch": "@@ -2,13 +2,15 @@ error[E0631]: type mismatch in function arguments\n   --> $DIR/issue-88382.rs:28:40\n    |\n LL |     do_something(SomeImplementation(), test);\n-   |     ------------                       ^^^^ expected signature of `for<'r> fn(&'r mut std::iter::Empty<usize>) -> _`\n+   |     ------------                       ^^^^ expected due to this\n    |     |\n    |     required by a bound introduced by this call\n ...\n LL | fn test<'a, I: Iterable>(_: &mut I::Iterator<'a>) {}\n-   | ------------------------------------------------- found signature of `for<'r, 'a> fn(&'r mut <_ as Iterable>::Iterator<'a>) -> _`\n+   | ------------------------------------------------- found signature defined here\n    |\n+   = note: expected function signature `for<'r> fn(&'r mut std::iter::Empty<usize>) -> _`\n+              found function signature `for<'a, 'r> fn(&'r mut <_ as Iterable>::Iterator<'a>) -> _`\n note: required by a bound in `do_something`\n   --> $DIR/issue-88382.rs:22:48\n    |"}, {"sha": "24be028a97a79c83a28b04d3b51f33a1f02f1fa5", "filename": "src/test/ui/intrinsics/const-eval-select-bad.stderr", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7da578b8f818cef1957502298f30ff10729278b5/src%2Ftest%2Fui%2Fintrinsics%2Fconst-eval-select-bad.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7da578b8f818cef1957502298f30ff10729278b5/src%2Ftest%2Fui%2Fintrinsics%2Fconst-eval-select-bad.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fintrinsics%2Fconst-eval-select-bad.stderr?ref=7da578b8f818cef1957502298f30ff10729278b5", "patch": "@@ -67,13 +67,15 @@ error[E0631]: type mismatch in function arguments\n   --> $DIR/const-eval-select-bad.rs:34:32\n    |\n LL | const fn foo(n: i32) -> i32 {\n-   | --------------------------- found signature of `fn(i32) -> _`\n+   | --------------------------- found signature defined here\n ...\n LL |     const_eval_select((true,), foo, baz);\n-   |     -----------------          ^^^ expected signature of `fn(bool) -> _`\n+   |     -----------------          ^^^ expected due to this\n    |     |\n    |     required by a bound introduced by this call\n    |\n+   = note: expected function signature `fn(bool) -> _`\n+              found function signature `fn(i32) -> _`\n note: required by a bound in `const_eval_select`\n   --> $SRC_DIR/core/src/intrinsics.rs:LL:COL\n    |"}, {"sha": "4d673d45559a9758fed9c8d02d3076a979ed6f93", "filename": "src/test/ui/mismatched_types/E0631.stderr", "status": "modified", "additions": 16, "deletions": 8, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/7da578b8f818cef1957502298f30ff10729278b5/src%2Ftest%2Fui%2Fmismatched_types%2FE0631.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7da578b8f818cef1957502298f30ff10729278b5/src%2Ftest%2Fui%2Fmismatched_types%2FE0631.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2FE0631.stderr?ref=7da578b8f818cef1957502298f30ff10729278b5", "patch": "@@ -2,10 +2,12 @@ error[E0631]: type mismatch in closure arguments\n   --> $DIR/E0631.rs:7:5\n    |\n LL |     foo(|_: isize| {});\n-   |     ^^^ ---------- found signature of `fn(isize) -> _`\n+   |     ^^^ ---------- found signature defined here\n    |     |\n-   |     expected signature of `fn(usize) -> _`\n+   |     expected due to this\n    |\n+   = note: expected closure signature `fn(usize) -> _`\n+              found closure signature `fn(isize) -> _`\n note: required by a bound in `foo`\n   --> $DIR/E0631.rs:3:11\n    |\n@@ -16,10 +18,12 @@ error[E0631]: type mismatch in closure arguments\n   --> $DIR/E0631.rs:8:5\n    |\n LL |     bar(|_: isize| {});\n-   |     ^^^ ---------- found signature of `fn(isize) -> _`\n+   |     ^^^ ---------- found signature defined here\n    |     |\n-   |     expected signature of `fn(usize) -> _`\n+   |     expected due to this\n    |\n+   = note: expected closure signature `fn(usize) -> _`\n+              found closure signature `fn(isize) -> _`\n note: required by a bound in `bar`\n   --> $DIR/E0631.rs:4:11\n    |\n@@ -30,13 +34,15 @@ error[E0631]: type mismatch in function arguments\n   --> $DIR/E0631.rs:9:9\n    |\n LL |     fn f(_: u64) {}\n-   |     ------------ found signature of `fn(u64) -> _`\n+   |     ------------ found signature defined here\n ...\n LL |     foo(f);\n-   |     --- ^ expected signature of `fn(usize) -> _`\n+   |     --- ^ expected due to this\n    |     |\n    |     required by a bound introduced by this call\n    |\n+   = note: expected function signature `fn(usize) -> _`\n+              found function signature `fn(u64) -> _`\n note: required by a bound in `foo`\n   --> $DIR/E0631.rs:3:11\n    |\n@@ -47,13 +53,15 @@ error[E0631]: type mismatch in function arguments\n   --> $DIR/E0631.rs:10:9\n    |\n LL |     fn f(_: u64) {}\n-   |     ------------ found signature of `fn(u64) -> _`\n+   |     ------------ found signature defined here\n ...\n LL |     bar(f);\n-   |     --- ^ expected signature of `fn(usize) -> _`\n+   |     --- ^ expected due to this\n    |     |\n    |     required by a bound introduced by this call\n    |\n+   = note: expected function signature `fn(usize) -> _`\n+              found function signature `fn(u64) -> _`\n note: required by a bound in `bar`\n   --> $DIR/E0631.rs:4:11\n    |"}, {"sha": "71469bfec2d393a5419740b319aef973033d2c56", "filename": "src/test/ui/mismatched_types/closure-arg-type-mismatch.stderr", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/7da578b8f818cef1957502298f30ff10729278b5/src%2Ftest%2Fui%2Fmismatched_types%2Fclosure-arg-type-mismatch.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7da578b8f818cef1957502298f30ff10729278b5/src%2Ftest%2Fui%2Fmismatched_types%2Fclosure-arg-type-mismatch.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Fclosure-arg-type-mismatch.stderr?ref=7da578b8f818cef1957502298f30ff10729278b5", "patch": "@@ -2,10 +2,12 @@ error[E0631]: type mismatch in closure arguments\n   --> $DIR/closure-arg-type-mismatch.rs:3:14\n    |\n LL |     a.iter().map(|_: (u32, u32)| 45);\n-   |              ^^^ --------------- found signature of `fn((u32, u32)) -> _`\n+   |              ^^^ --------------- found signature defined here\n    |              |\n-   |              expected signature of `fn(&(u32, u32)) -> _`\n+   |              expected due to this\n    |\n+   = note: expected closure signature `fn(&(u32, u32)) -> _`\n+              found closure signature `fn((u32, u32)) -> _`\n note: required by a bound in `map`\n   --> $SRC_DIR/core/src/iter/traits/iterator.rs:LL:COL\n    |\n@@ -16,10 +18,12 @@ error[E0631]: type mismatch in closure arguments\n   --> $DIR/closure-arg-type-mismatch.rs:4:14\n    |\n LL |     a.iter().map(|_: &(u16, u16)| 45);\n-   |              ^^^ ---------------- found signature of `for<'r> fn(&'r (u16, u16)) -> _`\n+   |              ^^^ ---------------- found signature defined here\n    |              |\n-   |              expected signature of `fn(&(u32, u32)) -> _`\n+   |              expected due to this\n    |\n+   = note: expected closure signature `fn(&(u32, u32)) -> _`\n+              found closure signature `for<'r> fn(&'r (u16, u16)) -> _`\n note: required by a bound in `map`\n   --> $SRC_DIR/core/src/iter/traits/iterator.rs:LL:COL\n    |\n@@ -30,10 +34,12 @@ error[E0631]: type mismatch in closure arguments\n   --> $DIR/closure-arg-type-mismatch.rs:5:14\n    |\n LL |     a.iter().map(|_: (u16, u16)| 45);\n-   |              ^^^ --------------- found signature of `fn((u16, u16)) -> _`\n+   |              ^^^ --------------- found signature defined here\n    |              |\n-   |              expected signature of `fn(&(u32, u32)) -> _`\n+   |              expected due to this\n    |\n+   = note: expected closure signature `fn(&(u32, u32)) -> _`\n+              found closure signature `fn((u16, u16)) -> _`\n note: required by a bound in `map`\n   --> $SRC_DIR/core/src/iter/traits/iterator.rs:LL:COL\n    |"}, {"sha": "eec6d83fe223cf7a81502eb51f416e08eae6a372", "filename": "src/test/ui/mismatched_types/fn-variance-1.stderr", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/7da578b8f818cef1957502298f30ff10729278b5/src%2Ftest%2Fui%2Fmismatched_types%2Ffn-variance-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7da578b8f818cef1957502298f30ff10729278b5/src%2Ftest%2Fui%2Fmismatched_types%2Ffn-variance-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Ffn-variance-1.stderr?ref=7da578b8f818cef1957502298f30ff10729278b5", "patch": "@@ -2,13 +2,15 @@ error[E0631]: type mismatch in function arguments\n   --> $DIR/fn-variance-1.rs:11:15\n    |\n LL | fn takes_mut(x: &mut isize) { }\n-   | --------------------------- found signature of `for<'r> fn(&'r mut isize) -> _`\n+   | --------------------------- found signature defined here\n ...\n LL |     apply(&3, takes_mut);\n-   |     -----     ^^^^^^^^^ expected signature of `fn(&{integer}) -> _`\n+   |     -----     ^^^^^^^^^ expected due to this\n    |     |\n    |     required by a bound introduced by this call\n    |\n+   = note: expected function signature `fn(&{integer}) -> _`\n+              found function signature `for<'r> fn(&'r mut isize) -> _`\n note: required by a bound in `apply`\n   --> $DIR/fn-variance-1.rs:5:37\n    |\n@@ -19,13 +21,15 @@ error[E0631]: type mismatch in function arguments\n   --> $DIR/fn-variance-1.rs:15:19\n    |\n LL | fn takes_imm(x: &isize) { }\n-   | ----------------------- found signature of `for<'r> fn(&'r isize) -> _`\n+   | ----------------------- found signature defined here\n ...\n LL |     apply(&mut 3, takes_imm);\n-   |     -----         ^^^^^^^^^ expected signature of `fn(&mut {integer}) -> _`\n+   |     -----         ^^^^^^^^^ expected due to this\n    |     |\n    |     required by a bound introduced by this call\n    |\n+   = note: expected function signature `fn(&mut {integer}) -> _`\n+              found function signature `for<'r> fn(&'r isize) -> _`\n note: required by a bound in `apply`\n   --> $DIR/fn-variance-1.rs:5:37\n    |"}, {"sha": "b11ea97d160be12b8866bf99577bc1f06ca2efec", "filename": "src/test/ui/mismatched_types/issue-36053-2.stderr", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7da578b8f818cef1957502298f30ff10729278b5/src%2Ftest%2Fui%2Fmismatched_types%2Fissue-36053-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7da578b8f818cef1957502298f30ff10729278b5/src%2Ftest%2Fui%2Fmismatched_types%2Fissue-36053-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Fissue-36053-2.stderr?ref=7da578b8f818cef1957502298f30ff10729278b5", "patch": "@@ -2,10 +2,12 @@ error[E0631]: type mismatch in closure arguments\n   --> $DIR/issue-36053-2.rs:7:32\n    |\n LL |     once::<&str>(\"str\").fuse().filter(|a: &str| true).count();\n-   |                                ^^^^^^ --------- found signature of `for<'r> fn(&'r str) -> _`\n+   |                                ^^^^^^ --------- found signature defined here\n    |                                |\n-   |                                expected signature of `for<'r> fn(&'r &str) -> _`\n+   |                                expected due to this\n    |\n+   = note: expected closure signature `for<'r> fn(&'r &str) -> _`\n+              found closure signature `for<'r> fn(&'r str) -> _`\n note: required by a bound in `filter`\n   --> $SRC_DIR/core/src/iter/traits/iterator.rs:LL:COL\n    |"}, {"sha": "8dbe3472ea893d9d03b7f783a0001ec8333d120e", "filename": "src/test/ui/mismatched_types/unboxed-closures-vtable-mismatch.rs", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/7da578b8f818cef1957502298f30ff10729278b5/src%2Ftest%2Fui%2Fmismatched_types%2Funboxed-closures-vtable-mismatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7da578b8f818cef1957502298f30ff10729278b5/src%2Ftest%2Fui%2Fmismatched_types%2Funboxed-closures-vtable-mismatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Funboxed-closures-vtable-mismatch.rs?ref=7da578b8f818cef1957502298f30ff10729278b5", "patch": "@@ -2,20 +2,21 @@\n \n use std::ops::FnMut;\n \n-fn to_fn_mut<A,F:FnMut<A>>(f: F) -> F { f }\n+fn to_fn_mut<A, F: FnMut<A>>(f: F) -> F { f }\n \n-fn call_it<F:FnMut(isize,isize)->isize>(y: isize, mut f: F) -> isize {\n-//~^ NOTE required by this bound in `call_it`\n-//~| NOTE required by a bound in `call_it`\n+fn call_it<F: FnMut(isize, isize) -> isize>(y: isize, mut f: F) -> isize {\n+    //~^ NOTE required by this bound in `call_it`\n+    //~| NOTE required by a bound in `call_it`\n     f(2, y)\n }\n \n pub fn main() {\n     let f = to_fn_mut(|x: usize, y: isize| -> isize { (x as isize) + y });\n-    //~^ NOTE found signature of `fn(usize, isize) -> _`\n+    //~^ NOTE found signature defined here\n     let z = call_it(3, f);\n     //~^ ERROR type mismatch\n-    //~| NOTE expected signature of `fn(isize, isize) -> _`\n+    //~| NOTE expected due to this\n+    //~| NOTE expected closure signature `fn(isize, _) -> _`\n     //~| NOTE required by a bound introduced by this call\n     println!(\"{}\", z);\n }"}, {"sha": "54b2200652746fb2d0bc3afe0d5074f01362f3bc", "filename": "src/test/ui/mismatched_types/unboxed-closures-vtable-mismatch.stderr", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/7da578b8f818cef1957502298f30ff10729278b5/src%2Ftest%2Fui%2Fmismatched_types%2Funboxed-closures-vtable-mismatch.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7da578b8f818cef1957502298f30ff10729278b5/src%2Ftest%2Fui%2Fmismatched_types%2Funboxed-closures-vtable-mismatch.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Funboxed-closures-vtable-mismatch.stderr?ref=7da578b8f818cef1957502298f30ff10729278b5", "patch": "@@ -2,18 +2,20 @@ error[E0631]: type mismatch in closure arguments\n   --> $DIR/unboxed-closures-vtable-mismatch.rs:16:24\n    |\n LL |     let f = to_fn_mut(|x: usize, y: isize| -> isize { (x as isize) + y });\n-   |                       ----------------------------- found signature of `fn(usize, isize) -> _`\n+   |                       ----------------------------- found signature defined here\n LL |\n LL |     let z = call_it(3, f);\n-   |             -------    ^ expected signature of `fn(isize, isize) -> _`\n+   |             -------    ^ expected due to this\n    |             |\n    |             required by a bound introduced by this call\n    |\n+   = note: expected closure signature `fn(isize, _) -> _`\n+              found closure signature `fn(usize, _) -> _`\n note: required by a bound in `call_it`\n-  --> $DIR/unboxed-closures-vtable-mismatch.rs:7:14\n+  --> $DIR/unboxed-closures-vtable-mismatch.rs:7:15\n    |\n-LL | fn call_it<F:FnMut(isize,isize)->isize>(y: isize, mut f: F) -> isize {\n-   |              ^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `call_it`\n+LL | fn call_it<F: FnMut(isize, isize) -> isize>(y: isize, mut f: F) -> isize {\n+   |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `call_it`\n \n error: aborting due to previous error\n "}]}