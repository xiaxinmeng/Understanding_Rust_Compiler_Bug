{"sha": "75d24552aad0f13c77cdb421c1c93cf53cd4b7bd", "node_id": "C_kwDOAAsO6NoAKDc1ZDI0NTUyYWFkMGYxM2M3N2NkYjQyMWMxYzkzY2Y1M2NkNGI3YmQ", "commit": {"author": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2022-09-15T12:53:37Z"}, "committer": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2022-09-15T12:53:37Z"}, "message": "Sync from rust 00fcc82df204ab81cd887da7d04c023a201afd5b", "tree": {"sha": "ed00a34379689453ce636271e888a471bfcc0bd2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ed00a34379689453ce636271e888a471bfcc0bd2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/75d24552aad0f13c77cdb421c1c93cf53cd4b7bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/75d24552aad0f13c77cdb421c1c93cf53cd4b7bd", "html_url": "https://github.com/rust-lang/rust/commit/75d24552aad0f13c77cdb421c1c93cf53cd4b7bd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/75d24552aad0f13c77cdb421c1c93cf53cd4b7bd/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "107f9d88137955cbddb341d1feb1582d3f965c25", "url": "https://api.github.com/repos/rust-lang/rust/commits/107f9d88137955cbddb341d1feb1582d3f965c25", "html_url": "https://github.com/rust-lang/rust/commit/107f9d88137955cbddb341d1feb1582d3f965c25"}, {"sha": "e4d2f94a834f0679d18ae03ef47bddb59a2ac042", "url": "https://api.github.com/repos/rust-lang/rust/commits/e4d2f94a834f0679d18ae03ef47bddb59a2ac042", "html_url": "https://github.com/rust-lang/rust/commit/e4d2f94a834f0679d18ae03ef47bddb59a2ac042"}], "stats": {"total": 13, "additions": 9, "deletions": 4}, "files": [{"sha": "399474d79e3b6c30d20f0d8f3921af1185bbf987", "filename": "src/base.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/75d24552aad0f13c77cdb421c1c93cf53cd4b7bd/src%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75d24552aad0f13c77cdb421c1c93cf53cd4b7bd/src%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbase.rs?ref=75d24552aad0f13c77cdb421c1c93cf53cd4b7bd", "patch": "@@ -701,6 +701,10 @@ fn codegen_stmt<'tcx>(\n                     let operand = codegen_operand(fx, operand);\n                     operand.unsize_value(fx, lval);\n                 }\n+                Rvalue::Cast(CastKind::DynStar, _, _) => {\n+                    // FIXME(dyn-star)\n+                    unimplemented!()\n+                }\n                 Rvalue::Discriminant(place) => {\n                     let place = codegen_place(fx, place);\n                     let value = place.to_cvalue(fx);"}, {"sha": "463de6a91c74c62f620eaa69c715133b8707f3ad", "filename": "src/debuginfo/line_info.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/75d24552aad0f13c77cdb421c1c93cf53cd4b7bd/src%2Fdebuginfo%2Fline_info.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75d24552aad0f13c77cdb421c1c93cf53cd4b7bd/src%2Fdebuginfo%2Fline_info.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdebuginfo%2Fline_info.rs?ref=75d24552aad0f13c77cdb421c1c93cf53cd4b7bd", "patch": "@@ -68,9 +68,9 @@ impl DebugContext {\n     ) -> (Lrc<SourceFile>, u64, u64) {\n         // Based on https://github.com/rust-lang/rust/blob/e369d87b015a84653343032833d65d0545fd3f26/src/librustc_codegen_ssa/mir/mod.rs#L116-L131\n         // In order to have a good line stepping behavior in debugger, we overwrite debug\n-        // locations of macro expansions with that of the outermost expansion site\n-        // (unless the crate is being compiled with `-Z debug-macros`).\n-        let span = if !span.from_expansion() || tcx.sess.opts.unstable_opts.debug_macros {\n+        // locations of macro expansions with that of the outermost expansion site (when the macro is\n+        // annotated with `#[collapse_debuginfo]` or when `-Zdebug-macros` is provided).\n+        let span = if tcx.should_collapse_debuginfo(span) {\n             span\n         } else {\n             // Walk up the macro expansion chain until we reach a non-expanded span."}, {"sha": "cfaadca9491079bca03a5390a70cca0c8d604083", "filename": "src/value_and_place.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/75d24552aad0f13c77cdb421c1c93cf53cd4b7bd/src%2Fvalue_and_place.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75d24552aad0f13c77cdb421c1c93cf53cd4b7bd/src%2Fvalue_and_place.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvalue_and_place.rs?ref=75d24552aad0f13c77cdb421c1c93cf53cd4b7bd", "patch": "@@ -815,7 +815,8 @@ pub(crate) fn assert_assignable<'tcx>(\n             );\n             // fn(&T) -> for<'l> fn(&'l T) is allowed\n         }\n-        (&ty::Dynamic(from_traits, _), &ty::Dynamic(to_traits, _)) => {\n+        (&ty::Dynamic(from_traits, _, _from_kind), &ty::Dynamic(to_traits, _, _to_kind)) => {\n+            // FIXME(dyn-star): Do the right thing with DynKinds\n             for (from, to) in from_traits.iter().zip(to_traits) {\n                 let from =\n                     fx.tcx.normalize_erasing_late_bound_regions(ParamEnv::reveal_all(), from);"}]}