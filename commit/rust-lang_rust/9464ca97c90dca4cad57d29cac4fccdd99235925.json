{"sha": "9464ca97c90dca4cad57d29cac4fccdd99235925", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk0NjRjYTk3YzkwZGNhNGNhZDU3ZDI5Y2FjNGZjY2RkOTkyMzU5MjU=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-02-28T13:47:33Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-02-28T13:47:33Z"}, "message": "Fix highlighting test", "tree": {"sha": "d641e2d869b10c8f92423427228d5c55351efb3b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d641e2d869b10c8f92423427228d5c55351efb3b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9464ca97c90dca4cad57d29cac4fccdd99235925", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9464ca97c90dca4cad57d29cac4fccdd99235925", "html_url": "https://github.com/rust-lang/rust/commit/9464ca97c90dca4cad57d29cac4fccdd99235925", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9464ca97c90dca4cad57d29cac4fccdd99235925/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "701cf436063590c710cd7783032b5e7c3c41af22", "url": "https://api.github.com/repos/rust-lang/rust/commits/701cf436063590c710cd7783032b5e7c3c41af22", "html_url": "https://github.com/rust-lang/rust/commit/701cf436063590c710cd7783032b5e7c3c41af22"}], "stats": {"total": 104, "additions": 55, "deletions": 49}, "files": [{"sha": "8c372ad2700b667b11e2dd6333093f2d51ab0a14", "filename": "crates/ra_ide/src/snapshots/highlighting.html", "status": "modified", "additions": 28, "deletions": 26, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/9464ca97c90dca4cad57d29cac4fccdd99235925/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Fhighlighting.html", "raw_url": "https://github.com/rust-lang/rust/raw/9464ca97c90dca4cad57d29cac4fccdd99235925/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Fhighlighting.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Fhighlighting.html?ref=9464ca97c90dca4cad57d29cac4fccdd99235925", "patch": "@@ -3,70 +3,72 @@\n body                { margin: 0; }\n pre                 { color: #DCDCCC; background: #3F3F3F; font-size: 22px; padding: 0.4em; }\n \n+\n .comment            { color: #7F9F7F; }\n-.string             { color: #CC9393; }\n+.struct, .enum      { color: #7CB8BB; }\n+.enum_variant       { color: #BDE0F3; }\n+.string_literal     { color: #CC9393; }\n .field              { color: #94BFF3; }\n .function           { color: #93E0E3; }\n .parameter          { color: #94BFF3; }\n .text               { color: #DCDCCC; }\n .type               { color: #7CB8BB; }\n-.type.builtin       { color: #8CD0D3; }\n-.type.param         { color: #20999D; }\n+.builtin_type       { color: #8CD0D3; }\n+.type_param         { color: #DFAF8F; }\n .attribute          { color: #94BFF3; }\n-.literal            { color: #BFEBBF; }\n-.literal.numeric    { color: #6A8759; }\n+.numeric_literal    { color: #BFEBBF; }\n .macro              { color: #94BFF3; }\n .module             { color: #AFD8AF; }\n .variable           { color: #DCDCCC; }\n-.variable.mut       { color: #DCDCCC; text-decoration: underline; }\n+.mutable            { text-decoration: underline; }\n \n-.keyword            { color: #F0DFAF; }\n-.keyword.unsafe     { color: #DFAF8F; }\n-.keyword.control    { color: #F0DFAF; font-weight: bold; }\n+.keyword            { color: #F0DFAF; font-weight: bold; }\n+.keyword.unsafe     { color: #BC8383; font-weight: bold; }\n+.control            { font-style: italic; }\n </style>\n <pre><code><span class=\"attribute\">#</span><span class=\"attribute\">[</span><span class=\"attribute\">derive</span><span class=\"attribute\">(</span><span class=\"attribute\">Clone</span><span class=\"attribute\">,</span><span class=\"attribute\"> </span><span class=\"attribute\">Debug</span><span class=\"attribute\">)</span><span class=\"attribute\">]</span>\n-<span class=\"keyword\">struct</span> <span class=\"type\">Foo</span> {\n-    <span class=\"keyword\">pub</span> <span class=\"field\">x</span>: <span class=\"type builtin\">i32</span>,\n-    <span class=\"keyword\">pub</span> <span class=\"field\">y</span>: <span class=\"type builtin\">i32</span>,\n+<span class=\"keyword\">struct</span> <span class=\"struct\">Foo</span> {\n+    <span class=\"keyword\">pub</span> <span class=\"field\">x</span>: <span class=\"builtin_type\">i32</span>,\n+    <span class=\"keyword\">pub</span> <span class=\"field\">y</span>: <span class=\"builtin_type\">i32</span>,\n }\n \n-<span class=\"keyword\">fn</span> <span class=\"function\">foo</span>&lt;<span class=\"type param\">T</span>&gt;() -&gt; <span class=\"type param\">T</span> {\n+<span class=\"keyword\">fn</span> <span class=\"function\">foo</span>&lt;<span class=\"type_param\">T</span>&gt;() -&gt; <span class=\"type_param\">T</span> {\n     <span class=\"macro\">unimplemented</span><span class=\"macro\">!</span>();\n-    <span class=\"function\">foo</span>::&lt;<span class=\"type builtin\">i32</span>&gt;();\n+    <span class=\"function\">foo</span>::&lt;<span class=\"builtin_type\">i32</span>&gt;();\n }\n \n <span class=\"macro\">macro_rules</span><span class=\"macro\">!</span> def_fn {\n     ($($tt:tt)*) =&gt; {$($tt)*}\n }\n \n-<span class=\"macro\">def_fn</span><span class=\"macro\">!</span>{\n-    <span class=\"keyword\">fn</span> <span class=\"function\">bar</span>() -&gt; <span class=\"type builtin\">u32</span> {\n-        <span class=\"literal numeric\">100</span>\n+<span class=\"macro\">def_fn</span><span class=\"macro\">!</span> {\n+    <span class=\"keyword\">fn</span> <span class=\"function\">bar</span>() -&gt; <span class=\"builtin_type\">u32</span> {\n+        <span class=\"numeric_literal\">100</span>\n     }\n }\n \n <span class=\"comment\">// comment</span>\n <span class=\"keyword\">fn</span> <span class=\"function\">main</span>() {\n-    <span class=\"macro\">println</span><span class=\"macro\">!</span>(<span class=\"string\">\"Hello, {}!\"</span>, <span class=\"literal numeric\">92</span>);\n+    <span class=\"macro\">println</span><span class=\"macro\">!</span>(<span class=\"string_literal\">\"Hello, {}!\"</span>, <span class=\"numeric_literal\">92</span>);\n \n     <span class=\"keyword\">let</span> <span class=\"keyword\">mut</span> <span class=\"variable mutable\">vec</span> = Vec::new();\n     <span class=\"keyword control\">if</span> <span class=\"keyword\">true</span> {\n-        <span class=\"keyword\">let</span> <span class=\"variable\">x</span> = <span class=\"literal numeric\">92</span>;\n-        <span class=\"variable mutable\">vec</span>.push(<span class=\"type\">Foo</span> { <span class=\"field\">x</span>, <span class=\"field\">y</span>: <span class=\"literal numeric\">1</span> });\n+        <span class=\"keyword\">let</span> <span class=\"variable\">x</span> = <span class=\"numeric_literal\">92</span>;\n+        <span class=\"variable mutable\">vec</span>.push(<span class=\"struct\">Foo</span> { <span class=\"field\">x</span>, <span class=\"field\">y</span>: <span class=\"numeric_literal\">1</span> });\n     }\n-    <span class=\"keyword unsafe\">unsafe</span> { <span class=\"variable mutable\">vec</span>.set_len(<span class=\"literal numeric\">0</span>); }\n+    <span class=\"keyword unsafe\">unsafe</span> { <span class=\"variable mutable\">vec</span>.set_len(<span class=\"numeric_literal\">0</span>); }\n \n-    <span class=\"keyword\">let</span> <span class=\"keyword\">mut</span> <span class=\"variable mutable\">x</span> = <span class=\"literal numeric\">42</span>;\n+    <span class=\"keyword\">let</span> <span class=\"keyword\">mut</span> <span class=\"variable mutable\">x</span> = <span class=\"numeric_literal\">42</span>;\n     <span class=\"keyword\">let</span> <span class=\"variable mutable\">y</span> = &<span class=\"keyword\">mut</span> <span class=\"variable mutable\">x</span>;\n     <span class=\"keyword\">let</span> <span class=\"variable\">z</span> = &<span class=\"variable mutable\">y</span>;\n \n     <span class=\"variable mutable\">y</span>;\n }\n \n-<span class=\"keyword\">enum</span> <span class=\"type\">E</span>&lt;<span class=\"type param\">X</span>&gt; {\n-    <span class=\"constant\">V</span>(<span class=\"type param\">X</span>)\n+<span class=\"keyword\">enum</span> <span class=\"enum\">E</span>&lt;<span class=\"type_param\">X</span>&gt; {\n+    <span class=\"enum_variant\">V</span>(<span class=\"type_param\">X</span>)\n }\n \n-<span class=\"keyword\">impl</span>&lt;<span class=\"type param\">X</span>&gt; <span class=\"type\">E</span>&lt;<span class=\"type param\">X</span>&gt; {\n-    <span class=\"keyword\">fn</span> <span class=\"function\">new</span>&lt;<span class=\"type param\">T</span>&gt;() -&gt; <span class=\"type\">E</span>&lt;<span class=\"type param\">T</span>&gt; {}\n+<span class=\"keyword\">impl</span>&lt;<span class=\"type_param\">X</span>&gt; <span class=\"enum\">E</span>&lt;<span class=\"type_param\">X</span>&gt; {\n+    <span class=\"keyword\">fn</span> <span class=\"function\">new</span>&lt;<span class=\"type_param\">T</span>&gt;() -&gt; <span class=\"enum\">E</span>&lt;<span class=\"type_param\">T</span>&gt; {}\n }</code></pre>\n\\ No newline at end of file"}, {"sha": "f63e64b6d1f7791ca19808e4d1b04628e5aaca10", "filename": "crates/ra_ide/src/snapshots/rainbow_highlighting.html", "status": "modified", "additions": 14, "deletions": 12, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/9464ca97c90dca4cad57d29cac4fccdd99235925/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Frainbow_highlighting.html", "raw_url": "https://github.com/rust-lang/rust/raw/9464ca97c90dca4cad57d29cac4fccdd99235925/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Frainbow_highlighting.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Frainbow_highlighting.html?ref=9464ca97c90dca4cad57d29cac4fccdd99235925", "patch": "@@ -3,36 +3,38 @@\n body                { margin: 0; }\n pre                 { color: #DCDCCC; background: #3F3F3F; font-size: 22px; padding: 0.4em; }\n \n+\n .comment            { color: #7F9F7F; }\n-.string             { color: #CC9393; }\n+.struct, .enum      { color: #7CB8BB; }\n+.enum_variant       { color: #BDE0F3; }\n+.string_literal     { color: #CC9393; }\n .field              { color: #94BFF3; }\n .function           { color: #93E0E3; }\n .parameter          { color: #94BFF3; }\n .text               { color: #DCDCCC; }\n .type               { color: #7CB8BB; }\n-.type.builtin       { color: #8CD0D3; }\n-.type.param         { color: #20999D; }\n+.builtin_type       { color: #8CD0D3; }\n+.type_param         { color: #DFAF8F; }\n .attribute          { color: #94BFF3; }\n-.literal            { color: #BFEBBF; }\n-.literal.numeric    { color: #6A8759; }\n+.numeric_literal    { color: #BFEBBF; }\n .macro              { color: #94BFF3; }\n .module             { color: #AFD8AF; }\n .variable           { color: #DCDCCC; }\n-.variable.mut       { color: #DCDCCC; text-decoration: underline; }\n+.mutable            { text-decoration: underline; }\n \n-.keyword            { color: #F0DFAF; }\n-.keyword.unsafe     { color: #DFAF8F; }\n-.keyword.control    { color: #F0DFAF; font-weight: bold; }\n+.keyword            { color: #F0DFAF; font-weight: bold; }\n+.keyword.unsafe     { color: #BC8383; font-weight: bold; }\n+.control            { font-style: italic; }\n </style>\n <pre><code><span class=\"keyword\">fn</span> <span class=\"function\">main</span>() {\n-    <span class=\"keyword\">let</span> <span class=\"variable\" data-binding-hash=\"8121853618659664005\" style=\"color: hsl(261,57%,61%);\">hello</span> = <span class=\"string\">\"hello\"</span>;\n+    <span class=\"keyword\">let</span> <span class=\"variable\" data-binding-hash=\"8121853618659664005\" style=\"color: hsl(261,57%,61%);\">hello</span> = <span class=\"string_literal\">\"hello\"</span>;\n     <span class=\"keyword\">let</span> <span class=\"variable\" data-binding-hash=\"2705725358298919760\" style=\"color: hsl(17,51%,74%);\">x</span> = <span class=\"variable\" data-binding-hash=\"8121853618659664005\" style=\"color: hsl(261,57%,61%);\">hello</span>.to_string();\n     <span class=\"keyword\">let</span> <span class=\"variable\" data-binding-hash=\"3365759661443752373\" style=\"color: hsl(127,76%,66%);\">y</span> = <span class=\"variable\" data-binding-hash=\"8121853618659664005\" style=\"color: hsl(261,57%,61%);\">hello</span>.to_string();\n \n-    <span class=\"keyword\">let</span> <span class=\"variable\" data-binding-hash=\"794745962933817518\" style=\"color: hsl(19,74%,76%);\">x</span> = <span class=\"string\">\"other color please!\"</span>;\n+    <span class=\"keyword\">let</span> <span class=\"variable\" data-binding-hash=\"794745962933817518\" style=\"color: hsl(19,74%,76%);\">x</span> = <span class=\"string_literal\">\"other color please!\"</span>;\n     <span class=\"keyword\">let</span> <span class=\"variable\" data-binding-hash=\"6717528807933952652\" style=\"color: hsl(85,49%,84%);\">y</span> = <span class=\"variable\" data-binding-hash=\"794745962933817518\" style=\"color: hsl(19,74%,76%);\">x</span>.to_string();\n }\n \n <span class=\"keyword\">fn</span> <span class=\"function\">bar</span>() {\n-    <span class=\"keyword\">let</span> <span class=\"keyword\">mut</span> <span class=\"variable mutable\" data-binding-hash=\"8121853618659664005\" style=\"color: hsl(261,57%,61%);\">hello</span> = <span class=\"string\">\"hello\"</span>;\n+    <span class=\"keyword\">let</span> <span class=\"keyword\">mut</span> <span class=\"variable mutable\" data-binding-hash=\"8121853618659664005\" style=\"color: hsl(261,57%,61%);\">hello</span> = <span class=\"string_literal\">\"hello\"</span>;\n }</code></pre>\n\\ No newline at end of file"}, {"sha": "54678c278dff547add2a5ac8c09744366bd64f48", "filename": "crates/ra_ide/src/syntax_highlighting/html.rs", "status": "modified", "additions": 11, "deletions": 9, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/9464ca97c90dca4cad57d29cac4fccdd99235925/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Fhtml.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9464ca97c90dca4cad57d29cac4fccdd99235925/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Fhtml.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Fhtml.rs?ref=9464ca97c90dca4cad57d29cac4fccdd99235925", "patch": "@@ -80,25 +80,27 @@ const STYLE: &str = \"\n body                { margin: 0; }\n pre                 { color: #DCDCCC; background: #3F3F3F; font-size: 22px; padding: 0.4em; }\n \n+\n .comment            { color: #7F9F7F; }\n-.string             { color: #CC9393; }\n+.struct, .enum      { color: #7CB8BB; }\n+.enum_variant       { color: #BDE0F3; }\n+.string_literal     { color: #CC9393; }\n .field              { color: #94BFF3; }\n .function           { color: #93E0E3; }\n .parameter          { color: #94BFF3; }\n .text               { color: #DCDCCC; }\n .type               { color: #7CB8BB; }\n-.type.builtin       { color: #8CD0D3; }\n-.type.param         { color: #20999D; }\n+.builtin_type       { color: #8CD0D3; }\n+.type_param         { color: #DFAF8F; }\n .attribute          { color: #94BFF3; }\n-.literal            { color: #BFEBBF; }\n-.literal.numeric    { color: #6A8759; }\n+.numeric_literal    { color: #BFEBBF; }\n .macro              { color: #94BFF3; }\n .module             { color: #AFD8AF; }\n .variable           { color: #DCDCCC; }\n-.variable.mut       { color: #DCDCCC; text-decoration: underline; }\n+.mutable            { text-decoration: underline; }\n \n-.keyword            { color: #F0DFAF; }\n-.keyword.unsafe     { color: #DFAF8F; }\n-.keyword.control    { color: #F0DFAF; font-weight: bold; }\n+.keyword            { color: #F0DFAF; font-weight: bold; }\n+.keyword.unsafe     { color: #BC8383; font-weight: bold; }\n+.control            { font-style: italic; }\n </style>\n \";"}, {"sha": "9da80823cc5d4f8106b257e2a5229537cf3ddc76", "filename": "crates/ra_ide/src/syntax_highlighting/tags.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9464ca97c90dca4cad57d29cac4fccdd99235925/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Ftags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9464ca97c90dca4cad57d29cac4fccdd99235925/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Ftags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Ftags.rs?ref=9464ca97c90dca4cad57d29cac4fccdd99235925", "patch": "@@ -72,7 +72,7 @@ impl HighlightTag {\n             HighlightTag::NumericLiteral => \"numeric_literal\",\n             HighlightTag::SelfType => \"self_type\",\n             HighlightTag::Static => \"static\",\n-            HighlightTag::StringLiteral => \"string\",\n+            HighlightTag::StringLiteral => \"string_literal\",\n             HighlightTag::Struct => \"struct\",\n             HighlightTag::Trait => \"trait\",\n             HighlightTag::TypeAlias => \"type_alias\","}, {"sha": "2d90a072f298ddfb9212fae8be4df349ea474efd", "filename": "crates/ra_ide/src/syntax_highlighting/tests.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9464ca97c90dca4cad57d29cac4fccdd99235925/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9464ca97c90dca4cad57d29cac4fccdd99235925/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs?ref=9464ca97c90dca4cad57d29cac4fccdd99235925", "patch": "@@ -26,7 +26,7 @@ macro_rules! def_fn {\n     ($($tt:tt)*) => {$($tt)*}\n }\n \n-def_fn!{\n+def_fn! {\n     fn bar() -> u32 {\n         100\n     }"}]}