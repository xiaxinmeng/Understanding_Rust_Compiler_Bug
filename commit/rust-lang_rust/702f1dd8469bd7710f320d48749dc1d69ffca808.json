{"sha": "702f1dd8469bd7710f320d48749dc1d69ffca808", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcwMmYxZGQ4NDY5YmQ3NzEwZjMyMGQ0ODc0OWRjMWQ2OWZmY2E4MDg=", "commit": {"author": {"name": "Kyle Stachowicz", "email": "kylestach99@gmail.com", "date": "2018-05-18T00:32:05Z"}, "committer": {"name": "Kyle Stachowicz", "email": "kylestach99@gmail.com", "date": "2018-05-18T23:57:16Z"}, "message": "Add tests for new labeled blocks for `unused_labels`", "tree": {"sha": "10c9932fcc9b0ad1727fb8164cdeebf37179b325", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/10c9932fcc9b0ad1727fb8164cdeebf37179b325"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/702f1dd8469bd7710f320d48749dc1d69ffca808", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/702f1dd8469bd7710f320d48749dc1d69ffca808", "html_url": "https://github.com/rust-lang/rust/commit/702f1dd8469bd7710f320d48749dc1d69ffca808", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/702f1dd8469bd7710f320d48749dc1d69ffca808/comments", "author": {"login": "kylestach", "id": 9097872, "node_id": "MDQ6VXNlcjkwOTc4NzI=", "avatar_url": "https://avatars.githubusercontent.com/u/9097872?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kylestach", "html_url": "https://github.com/kylestach", "followers_url": "https://api.github.com/users/kylestach/followers", "following_url": "https://api.github.com/users/kylestach/following{/other_user}", "gists_url": "https://api.github.com/users/kylestach/gists{/gist_id}", "starred_url": "https://api.github.com/users/kylestach/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kylestach/subscriptions", "organizations_url": "https://api.github.com/users/kylestach/orgs", "repos_url": "https://api.github.com/users/kylestach/repos", "events_url": "https://api.github.com/users/kylestach/events{/privacy}", "received_events_url": "https://api.github.com/users/kylestach/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kylestach", "id": 9097872, "node_id": "MDQ6VXNlcjkwOTc4NzI=", "avatar_url": "https://avatars.githubusercontent.com/u/9097872?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kylestach", "html_url": "https://github.com/kylestach", "followers_url": "https://api.github.com/users/kylestach/followers", "following_url": "https://api.github.com/users/kylestach/following{/other_user}", "gists_url": "https://api.github.com/users/kylestach/gists{/gist_id}", "starred_url": "https://api.github.com/users/kylestach/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kylestach/subscriptions", "organizations_url": "https://api.github.com/users/kylestach/orgs", "repos_url": "https://api.github.com/users/kylestach/repos", "events_url": "https://api.github.com/users/kylestach/events{/privacy}", "received_events_url": "https://api.github.com/users/kylestach/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "88f4063c8320f8c0b6a9cc047887b63da1490ffb", "url": "https://api.github.com/repos/rust-lang/rust/commits/88f4063c8320f8c0b6a9cc047887b63da1490ffb", "html_url": "https://github.com/rust-lang/rust/commit/88f4063c8320f8c0b6a9cc047887b63da1490ffb"}], "stats": {"total": 49, "additions": 34, "deletions": 15}, "files": [{"sha": "4a505dff3d467c4be00465cf886717ece79ba5ef", "filename": "src/test/ui/label_break_value_continue.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/702f1dd8469bd7710f320d48749dc1d69ffca808/src%2Ftest%2Fui%2Flabel_break_value_continue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/702f1dd8469bd7710f320d48749dc1d69ffca808/src%2Ftest%2Fui%2Flabel_break_value_continue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flabel_break_value_continue.rs?ref=702f1dd8469bd7710f320d48749dc1d69ffca808", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n #![feature(label_break_value)]\n+#![allow(unused_labels)]\n \n // Simple continue pointing to an unlabeled break should yield in an error\n fn continue_simple() {"}, {"sha": "12a21a8a59441ab9dca819786245c139e09843d4", "filename": "src/test/ui/label_break_value_continue.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/702f1dd8469bd7710f320d48749dc1d69ffca808/src%2Ftest%2Fui%2Flabel_break_value_continue.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/702f1dd8469bd7710f320d48749dc1d69ffca808/src%2Ftest%2Fui%2Flabel_break_value_continue.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flabel_break_value_continue.stderr?ref=702f1dd8469bd7710f320d48749dc1d69ffca808", "patch": "@@ -1,25 +1,25 @@\n error[E0695]: unlabeled `continue` inside of a labeled block\n-  --> $DIR/label_break_value_continue.rs:16:9\n+  --> $DIR/label_break_value_continue.rs:17:9\n    |\n LL |         continue; //~ ERROR unlabeled `continue` inside of a labeled block\n    |         ^^^^^^^^ `continue` statements that would diverge to or through a labeled block need to bear a label\n \n error[E0696]: `continue` pointing to a labeled block\n-  --> $DIR/label_break_value_continue.rs:23:9\n+  --> $DIR/label_break_value_continue.rs:24:9\n    |\n LL |         continue 'b; //~ ERROR `continue` pointing to a labeled block\n    |         ^^^^^^^^^^^ labeled blocks cannot be `continue`'d\n    |\n note: labeled block the continue points to\n-  --> $DIR/label_break_value_continue.rs:22:5\n+  --> $DIR/label_break_value_continue.rs:23:5\n    |\n LL | /     'b: {\n LL | |         continue 'b; //~ ERROR `continue` pointing to a labeled block\n LL | |     }\n    | |_____^\n \n error[E0695]: unlabeled `continue` inside of a labeled block\n-  --> $DIR/label_break_value_continue.rs:31:13\n+  --> $DIR/label_break_value_continue.rs:32:13\n    |\n LL |             continue; //~ ERROR unlabeled `continue` inside of a labeled block\n    |             ^^^^^^^^ `continue` statements that would diverge to or through a labeled block need to bear a label"}, {"sha": "454ebd4c6cf6d7bb555cfeb640b7209ab8aa1fe9", "filename": "src/test/ui/label_break_value_unlabeled_break.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/702f1dd8469bd7710f320d48749dc1d69ffca808/src%2Ftest%2Fui%2Flabel_break_value_unlabeled_break.rs", "raw_url": "https://github.com/rust-lang/rust/raw/702f1dd8469bd7710f320d48749dc1d69ffca808/src%2Ftest%2Fui%2Flabel_break_value_unlabeled_break.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flabel_break_value_unlabeled_break.rs?ref=702f1dd8469bd7710f320d48749dc1d69ffca808", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n #![feature(label_break_value)]\n+#![allow(unused_labels)]\n \n // Simple unlabeled break should yield in an error\n fn unlabeled_break_simple() {"}, {"sha": "62c4a12231baf9d85f0c44bf54518346084c806c", "filename": "src/test/ui/label_break_value_unlabeled_break.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/702f1dd8469bd7710f320d48749dc1d69ffca808/src%2Ftest%2Fui%2Flabel_break_value_unlabeled_break.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/702f1dd8469bd7710f320d48749dc1d69ffca808/src%2Ftest%2Fui%2Flabel_break_value_unlabeled_break.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flabel_break_value_unlabeled_break.stderr?ref=702f1dd8469bd7710f320d48749dc1d69ffca808", "patch": "@@ -1,11 +1,11 @@\n error[E0695]: unlabeled `break` inside of a labeled block\n-  --> $DIR/label_break_value_unlabeled_break.rs:16:9\n+  --> $DIR/label_break_value_unlabeled_break.rs:17:9\n    |\n LL |         break; //~ ERROR unlabeled `break` inside of a labeled block\n    |         ^^^^^ `break` statements that would diverge to or through a labeled block need to bear a label\n \n error[E0695]: unlabeled `break` inside of a labeled block\n-  --> $DIR/label_break_value_unlabeled_break.rs:24:13\n+  --> $DIR/label_break_value_unlabeled_break.rs:25:13\n    |\n LL |             break; //~ ERROR unlabeled `break` inside of a labeled block\n    |             ^^^^^ `break` statements that would diverge to or through a labeled block need to bear a label"}, {"sha": "22b7ad4e6a7c9b2be74160cde7fead7bcc5058af", "filename": "src/test/ui/lint/unused_labels.rs", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/702f1dd8469bd7710f320d48749dc1d69ffca808/src%2Ftest%2Fui%2Flint%2Funused_labels.rs", "raw_url": "https://github.com/rust-lang/rust/raw/702f1dd8469bd7710f320d48749dc1d69ffca808/src%2Ftest%2Fui%2Flint%2Funused_labels.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Funused_labels.rs?ref=702f1dd8469bd7710f320d48749dc1d69ffca808", "patch": "@@ -14,6 +14,8 @@\n \n // compile-pass\n \n+#![feature(label_break_value)]\n+\n fn main() {\n     'unused_while_label: while 0 == 0 {\n         //~^ WARN unused label\n@@ -67,9 +69,18 @@ fn main() {\n         }\n     }\n \n-    // This is diverging, so put it at the end so we don't get\n-    // unreachable_code errors everywhere else\n     'unused_loop_label: loop {\n         //~^ WARN unused label\n+        break;\n+    }\n+\n+    // Make sure unused block labels give warnings...\n+    'unused_block_label: {\n+        //~^ WARN unused label\n+    }\n+\n+    // ...and that used ones don't:\n+    'used_block_label: {\n+        break 'used_block_label;\n     }\n }"}, {"sha": "d09209853e3a3d3be6fa9ce73b7d7bb5d3ff1706", "filename": "src/test/ui/lint/unused_labels.stderr", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/702f1dd8469bd7710f320d48749dc1d69ffca808/src%2Ftest%2Fui%2Flint%2Funused_labels.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/702f1dd8469bd7710f320d48749dc1d69ffca808/src%2Ftest%2Fui%2Flint%2Funused_labels.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Funused_labels.stderr?ref=702f1dd8469bd7710f320d48749dc1d69ffca808", "patch": "@@ -1,37 +1,37 @@\n warning: unused label\n-  --> $DIR/unused_labels.rs:18:5\n+  --> $DIR/unused_labels.rs:20:5\n    |\n LL |     'unused_while_label: while 0 == 0 {\n    |     ^^^^^^^^^^^^^^^^^^^\n    |\n    = note: #[warn(unused_labels)] on by default\n \n warning: unused label\n-  --> $DIR/unused_labels.rs:23:5\n+  --> $DIR/unused_labels.rs:25:5\n    |\n LL |     'unused_while_let_label: while let Some(_) = opt {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused label\n-  --> $DIR/unused_labels.rs:27:5\n+  --> $DIR/unused_labels.rs:29:5\n    |\n LL |     'unused_for_label: for _ in 0..10 {\n    |     ^^^^^^^^^^^^^^^^^\n \n warning: unused label\n-  --> $DIR/unused_labels.rs:43:9\n+  --> $DIR/unused_labels.rs:45:9\n    |\n LL |         'unused_loop_label_inner_2: for _ in 0..10 {\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused label\n-  --> $DIR/unused_labels.rs:49:5\n+  --> $DIR/unused_labels.rs:51:5\n    |\n LL |     'unused_loop_label_outer_3: for _ in 0..10 {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused label\n-  --> $DIR/unused_labels.rs:58:5\n+  --> $DIR/unused_labels.rs:60:5\n    |\n LL |     'many_used_shadowed: for _ in 0..10 {\n    |     ^^^^^^^^^^^^^^^^^^^\n@@ -42,8 +42,14 @@ warning: unused label\n LL |     'unused_loop_label: loop {\n    |     ^^^^^^^^^^^^^^^^^^\n \n+warning: unused label\n+  --> $DIR/unused_labels.rs:78:5\n+   |\n+LL |     'unused_block_label: {\n+   |     ^^^^^^^^^^^^^^^^^^^\n+\n warning: label name `'many_used_shadowed` shadows a label name that is already in scope\n-  --> $DIR/unused_labels.rs:60:9\n+  --> $DIR/unused_labels.rs:62:9\n    |\n LL |     'many_used_shadowed: for _ in 0..10 {\n    |     ------------------- first declared here"}]}