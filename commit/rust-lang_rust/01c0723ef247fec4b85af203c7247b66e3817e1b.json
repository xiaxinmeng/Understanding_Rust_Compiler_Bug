{"sha": "01c0723ef247fec4b85af203c7247b66e3817e1b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAxYzA3MjNlZjI0N2ZlYzRiODVhZjIwM2M3MjQ3YjY2ZTM4MTdlMWI=", "commit": {"author": {"name": "Alex Burka", "email": "aburka@seas.upenn.edu", "date": "2016-03-05T19:51:24Z"}, "committer": {"name": "Alex Burka", "email": "aburka@seas.upenn.edu", "date": "2016-03-27T05:25:46Z"}, "message": "add #[derive(Hash)] test for #21714", "tree": {"sha": "200bb155ea27e7404a2a768d9097ba34b1e97dfa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/200bb155ea27e7404a2a768d9097ba34b1e97dfa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/01c0723ef247fec4b85af203c7247b66e3817e1b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/01c0723ef247fec4b85af203c7247b66e3817e1b", "html_url": "https://github.com/rust-lang/rust/commit/01c0723ef247fec4b85af203c7247b66e3817e1b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/01c0723ef247fec4b85af203c7247b66e3817e1b/comments", "author": {"login": "durka", "id": 47007, "node_id": "MDQ6VXNlcjQ3MDA3", "avatar_url": "https://avatars.githubusercontent.com/u/47007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/durka", "html_url": "https://github.com/durka", "followers_url": "https://api.github.com/users/durka/followers", "following_url": "https://api.github.com/users/durka/following{/other_user}", "gists_url": "https://api.github.com/users/durka/gists{/gist_id}", "starred_url": "https://api.github.com/users/durka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/durka/subscriptions", "organizations_url": "https://api.github.com/users/durka/orgs", "repos_url": "https://api.github.com/users/durka/repos", "events_url": "https://api.github.com/users/durka/events{/privacy}", "received_events_url": "https://api.github.com/users/durka/received_events", "type": "User", "site_admin": false}, "committer": {"login": "durka", "id": 47007, "node_id": "MDQ6VXNlcjQ3MDA3", "avatar_url": "https://avatars.githubusercontent.com/u/47007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/durka", "html_url": "https://github.com/durka", "followers_url": "https://api.github.com/users/durka/followers", "following_url": "https://api.github.com/users/durka/following{/other_user}", "gists_url": "https://api.github.com/users/durka/gists{/gist_id}", "starred_url": "https://api.github.com/users/durka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/durka/subscriptions", "organizations_url": "https://api.github.com/users/durka/orgs", "repos_url": "https://api.github.com/users/durka/repos", "events_url": "https://api.github.com/users/durka/events{/privacy}", "received_events_url": "https://api.github.com/users/durka/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "68de28b309b38c5143b3c27f3db0d57f4373729e", "url": "https://api.github.com/repos/rust-lang/rust/commits/68de28b309b38c5143b3c27f3db0d57f4373729e", "html_url": "https://github.com/rust-lang/rust/commit/68de28b309b38c5143b3c27f3db0d57f4373729e"}], "stats": {"total": 26, "additions": 26, "deletions": 0}, "files": [{"sha": "91bfc2f9201b7796cbf713117c3e6618b295ffb3", "filename": "src/test/run-pass/deriving-hash.rs", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/01c0723ef247fec4b85af203c7247b66e3817e1b/src%2Ftest%2Frun-pass%2Fderiving-hash.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01c0723ef247fec4b85af203c7247b66e3817e1b/src%2Ftest%2Frun-pass%2Fderiving-hash.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fderiving-hash.rs?ref=01c0723ef247fec4b85af203c7247b66e3817e1b", "patch": "@@ -12,6 +12,7 @@\n #![feature(hash_default)]\n \n use std::hash::{Hash, SipHasher, Hasher};\n+use std::mem::size_of;\n \n #[derive(Hash)]\n struct Person {\n@@ -24,12 +25,30 @@ struct Person {\n #[derive(Hash)] struct __H__H;\n #[derive(Hash)] enum Collision<__H> { __H { __H__H: __H } }\n \n+#[derive(Hash)]\n+enum E { A=1, B }\n+\n fn hash<T: Hash>(t: &T) -> u64 {\n     let mut s = SipHasher::new_with_keys(0, 0);\n     t.hash(&mut s);\n     s.finish()\n }\n \n+struct FakeHasher<'a>(&'a mut Vec<u8>);\n+impl<'a> Hasher for FakeHasher<'a> {\n+    fn finish(&self) -> u64 {\n+        unimplemented!()\n+    }\n+\n+    fn write(&mut self, bytes: &[u8]) {\n+        self.0.extend(bytes);\n+    }\n+}\n+\n+fn fake_hash(v: &mut Vec<u8>, e: E) {\n+    e.hash(&mut FakeHasher(v));\n+}\n+\n fn main() {\n     let person1 = Person {\n         id: 5,\n@@ -43,4 +62,11 @@ fn main() {\n     };\n     assert_eq!(hash(&person1), hash(&person1));\n     assert!(hash(&person1) != hash(&person2));\n+\n+    // test #21714\n+    let mut va = vec![];\n+    let mut vb = vec![];\n+    fake_hash(&mut va, E::A);\n+    fake_hash(&mut vb, E::B);\n+    assert!(va != vb);\n }"}]}