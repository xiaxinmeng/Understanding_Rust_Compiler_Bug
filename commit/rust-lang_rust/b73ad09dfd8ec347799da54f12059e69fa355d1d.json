{"sha": "b73ad09dfd8ec347799da54f12059e69fa355d1d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI3M2FkMDlkZmQ4ZWMzNDc3OTlkYTU0ZjEyMDU5ZTY5ZmEzNTVkMWQ=", "commit": {"author": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2021-05-03T21:32:06Z"}, "committer": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2021-05-03T21:32:06Z"}, "message": "Remove SpanInterner::get\n\n- It's used exactly once, so it's trivial to replace\n- It doesn't match the normal convention for containers: normally\n`get()` returns and option and indexing panics. Instead `get()` panicked\n  and there's no indexing operation available.", "tree": {"sha": "07f37ca9f6ba09ea3eb97526a17caec7b53dce94", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/07f37ca9f6ba09ea3eb97526a17caec7b53dce94"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b73ad09dfd8ec347799da54f12059e69fa355d1d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b73ad09dfd8ec347799da54f12059e69fa355d1d", "html_url": "https://github.com/rust-lang/rust/commit/b73ad09dfd8ec347799da54f12059e69fa355d1d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b73ad09dfd8ec347799da54f12059e69fa355d1d/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "716394d6581b60c75cfdd88b8e5b876f2db88b62", "url": "https://api.github.com/repos/rust-lang/rust/commits/716394d6581b60c75cfdd88b8e5b876f2db88b62", "html_url": "https://github.com/rust-lang/rust/commit/716394d6581b60c75cfdd88b8e5b876f2db88b62"}], "stats": {"total": 7, "additions": 1, "deletions": 6}, "files": [{"sha": "5ea39b343b5c18910b39a23be1a3f04a34e6c076", "filename": "compiler/rustc_span/src/span_encoding.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/b73ad09dfd8ec347799da54f12059e69fa355d1d/compiler%2Frustc_span%2Fsrc%2Fspan_encoding.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b73ad09dfd8ec347799da54f12059e69fa355d1d/compiler%2Frustc_span%2Fsrc%2Fspan_encoding.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Fspan_encoding.rs?ref=b73ad09dfd8ec347799da54f12059e69fa355d1d", "patch": "@@ -102,7 +102,7 @@ impl Span {\n             // Interned format.\n             debug_assert!(self.ctxt_or_zero == 0);\n             let index = self.base_or_index;\n-            with_span_interner(|interner| *interner.get(index))\n+            with_span_interner(|interner| interner.spans[index as usize])\n         }\n     }\n }\n@@ -117,11 +117,6 @@ impl SpanInterner {\n         let (index, _) = self.spans.insert_full(*span_data);\n         index as u32\n     }\n-\n-    #[inline]\n-    fn get(&self, index: u32) -> &SpanData {\n-        &self.spans[index as usize]\n-    }\n }\n \n // If an interner exists, return it. Otherwise, prepare a fresh one."}]}