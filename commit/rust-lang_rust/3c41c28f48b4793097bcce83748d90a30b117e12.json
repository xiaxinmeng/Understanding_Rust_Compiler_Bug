{"sha": "3c41c28f48b4793097bcce83748d90a30b117e12", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNjNDFjMjhmNDhiNDc5MzA5N2JjY2U4Mzc0OGQ5MGEzMGIxMTdlMTI=", "commit": {"author": {"name": "Badel2", "email": "2badel2@gmail.com", "date": "2017-11-04T23:46:41Z"}, "committer": {"name": "Badel2", "email": "2badel2@gmail.com", "date": "2017-11-06T19:33:51Z"}, "message": "Using `...` in expressions is now an error", "tree": {"sha": "1ab6e6ce660031fade466fe5d14886555d99c023", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1ab6e6ce660031fade466fe5d14886555d99c023"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3c41c28f48b4793097bcce83748d90a30b117e12", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3c41c28f48b4793097bcce83748d90a30b117e12", "html_url": "https://github.com/rust-lang/rust/commit/3c41c28f48b4793097bcce83748d90a30b117e12", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3c41c28f48b4793097bcce83748d90a30b117e12/comments", "author": {"login": "Badel2", "id": 15879619, "node_id": "MDQ6VXNlcjE1ODc5NjE5", "avatar_url": "https://avatars.githubusercontent.com/u/15879619?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Badel2", "html_url": "https://github.com/Badel2", "followers_url": "https://api.github.com/users/Badel2/followers", "following_url": "https://api.github.com/users/Badel2/following{/other_user}", "gists_url": "https://api.github.com/users/Badel2/gists{/gist_id}", "starred_url": "https://api.github.com/users/Badel2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Badel2/subscriptions", "organizations_url": "https://api.github.com/users/Badel2/orgs", "repos_url": "https://api.github.com/users/Badel2/repos", "events_url": "https://api.github.com/users/Badel2/events{/privacy}", "received_events_url": "https://api.github.com/users/Badel2/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Badel2", "id": 15879619, "node_id": "MDQ6VXNlcjE1ODc5NjE5", "avatar_url": "https://avatars.githubusercontent.com/u/15879619?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Badel2", "html_url": "https://github.com/Badel2", "followers_url": "https://api.github.com/users/Badel2/followers", "following_url": "https://api.github.com/users/Badel2/following{/other_user}", "gists_url": "https://api.github.com/users/Badel2/gists{/gist_id}", "starred_url": "https://api.github.com/users/Badel2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Badel2/subscriptions", "organizations_url": "https://api.github.com/users/Badel2/orgs", "repos_url": "https://api.github.com/users/Badel2/repos", "events_url": "https://api.github.com/users/Badel2/events{/privacy}", "received_events_url": "https://api.github.com/users/Badel2/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4bd6be9dc6055d0cf0d36b1d6bcd8bfef545698f", "url": "https://api.github.com/repos/rust-lang/rust/commits/4bd6be9dc6055d0cf0d36b1d6bcd8bfef545698f", "html_url": "https://github.com/rust-lang/rust/commit/4bd6be9dc6055d0cf0d36b1d6bcd8bfef545698f"}], "stats": {"total": 37, "additions": 21, "deletions": 16}, "files": [{"sha": "65d1e34be8a1e388222fab712ab98ba8dda35a7f", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 18, "deletions": 14, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/3c41c28f48b4793097bcce83748d90a30b117e12/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c41c28f48b4793097bcce83748d90a30b117e12/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=3c41c28f48b4793097bcce83748d90a30b117e12", "patch": "@@ -2784,10 +2784,11 @@ impl<'a> Parser<'a> {\n             if op.precedence() < min_prec {\n                 break;\n             }\n-            // Warn about deprecated ... syntax (until SNAP)\n-            if self.token == token::DotDotDot {\n-                self.warn_dotdoteq(self.span);\n+            // Check for deprecated `...` syntax\n+            if self.token == token::DotDotDot && op == AssocOp::DotDotEq {\n+                self.err_dotdotdot_syntax(self.span);\n             }\n+\n             self.bump();\n             if op.is_comparison() {\n                 self.check_no_chained_comparison(&lhs, &op);\n@@ -2820,7 +2821,6 @@ impl<'a> Parser<'a> {\n                 //\n                 // We have 2 alternatives here: `x..y`/`x..=y` and `x..`/`x..=` The other\n                 // two variants are handled with `parse_prefix_range_expr` call above.\n-                // (and `x...y`/`x...` until SNAP)\n                 let rhs = if self.is_at_start_of_range_notation_rhs() {\n                     Some(self.parse_assoc_expr_with(op.precedence() + 1,\n                                                     LhsExpr::NotYetParsed)?)\n@@ -3008,22 +3008,22 @@ impl<'a> Parser<'a> {\n         }\n     }\n \n-    /// Parse prefix-forms of range notation: `..expr`, `..`, `..=expr` (and `...expr` until SNAP)\n+    /// Parse prefix-forms of range notation: `..expr`, `..`, `..=expr`\n     fn parse_prefix_range_expr(&mut self,\n                                already_parsed_attrs: Option<ThinVec<Attribute>>)\n                                -> PResult<'a, P<Expr>> {\n-        // SNAP remove DotDotDot\n+        // Check for deprecated `...` syntax\n+        if self.token == token::DotDotDot {\n+            self.err_dotdotdot_syntax(self.span);\n+        }\n+\n         debug_assert!([token::DotDot, token::DotDotDot, token::DotDotEq].contains(&self.token),\n-                      \"parse_prefix_range_expr: token {:?} is not DotDot/DotDotDot/DotDotEq\",\n+                      \"parse_prefix_range_expr: token {:?} is not DotDot/DotDotEq\",\n                       self.token);\n         let tok = self.token.clone();\n         let attrs = self.parse_or_use_outer_attributes(already_parsed_attrs)?;\n         let lo = self.span;\n         let mut hi = self.span;\n-        // Warn about deprecated ... syntax (until SNAP)\n-        if tok == token::DotDotDot {\n-            self.warn_dotdoteq(self.span);\n-        }\n         self.bump();\n         let opt_end = if self.is_at_start_of_range_notation_rhs() {\n             // RHS must be parsed with more associativity than the dots.\n@@ -4271,9 +4271,13 @@ impl<'a> Parser<'a> {\n         }).emit();\n     }\n \n-    fn warn_dotdoteq(&self, span: Span) {\n-        self.diagnostic().struct_span_warn(span, {\n-            \"`...` is being replaced by `..=`\"\n+    fn err_dotdotdot_syntax(&self, span: Span) {\n+        self.diagnostic().struct_span_err(span, {\n+            \"`...` syntax cannot be used in expressions\"\n+        }).help({\n+            \"Use `..` if you need an exclusive range (a < b)\"\n+        }).help({\n+            \"or `..=` if you need an inclusive range (a <= b)\"\n         }).emit();\n     }\n "}, {"sha": "f83343bf9afa51fe1785c2a0163699e3cc157467", "filename": "src/libsyntax/parse/token.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3c41c28f48b4793097bcce83748d90a30b117e12/src%2Flibsyntax%2Fparse%2Ftoken.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c41c28f48b4793097bcce83748d90a30b117e12/src%2Flibsyntax%2Fparse%2Ftoken.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Ftoken.rs?ref=3c41c28f48b4793097bcce83748d90a30b117e12", "patch": "@@ -222,8 +222,8 @@ impl Token {\n             BinOp(Or) | OrOr                  | // closure\n             BinOp(And)                        | // reference\n             AndAnd                            | // double reference\n+            // DotDotDot is no longer supported, but we need some way to display the error\n             DotDot | DotDotDot | DotDotEq     | // range notation\n-                // SNAP remove DotDotDot\n             Lt | BinOp(Shl)                   | // associated path\n             ModSep                            | // global path\n             Pound                             => true, // expression attributes"}, {"sha": "6014ec5aa92a5b36daac1cbf5a6349ee31bcdc6a", "filename": "src/libsyntax/util/parser.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3c41c28f48b4793097bcce83748d90a30b117e12/src%2Flibsyntax%2Futil%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c41c28f48b4793097bcce83748d90a30b117e12/src%2Flibsyntax%2Futil%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Futil%2Fparser.rs?ref=3c41c28f48b4793097bcce83748d90a30b117e12", "patch": "@@ -106,7 +106,8 @@ impl AssocOp {\n             Token::OrOr => Some(LOr),\n             Token::DotDot => Some(DotDot),\n             Token::DotDotEq => Some(DotDotEq),\n-            Token::DotDotDot => Some(DotDotEq), // remove this after SNAP\n+            // DotDotDot is no longer supported, but we need some way to display the error\n+            Token::DotDotDot => Some(DotDotEq),\n             Token::Colon => Some(Colon),\n             _ if t.is_keyword(keywords::As) => Some(As),\n             _ => None"}]}