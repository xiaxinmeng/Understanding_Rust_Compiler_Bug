{"sha": "fee0a9fa5a3dd84400108b33a1e8225dc364a9fa", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZlZTBhOWZhNWEzZGQ4NDQwMDEwOGIzM2ExZTgyMjVkYzM2NGE5ZmE=", "commit": {"author": {"name": "vsrs", "email": "vit@conrlab.com", "date": "2020-05-11T15:00:15Z"}, "committer": {"name": "vsrs", "email": "vit@conrlab.com", "date": "2020-05-11T15:04:49Z"}, "message": "\"rust-analyzer.newDebugConfig\" command", "tree": {"sha": "ba411eddbb324a6e882b8fc653db17dc58c5ce2a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ba411eddbb324a6e882b8fc653db17dc58c5ce2a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fee0a9fa5a3dd84400108b33a1e8225dc364a9fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fee0a9fa5a3dd84400108b33a1e8225dc364a9fa", "html_url": "https://github.com/rust-lang/rust/commit/fee0a9fa5a3dd84400108b33a1e8225dc364a9fa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fee0a9fa5a3dd84400108b33a1e8225dc364a9fa/comments", "author": {"login": "vsrs", "id": 62505555, "node_id": "MDQ6VXNlcjYyNTA1NTU1", "avatar_url": "https://avatars.githubusercontent.com/u/62505555?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vsrs", "html_url": "https://github.com/vsrs", "followers_url": "https://api.github.com/users/vsrs/followers", "following_url": "https://api.github.com/users/vsrs/following{/other_user}", "gists_url": "https://api.github.com/users/vsrs/gists{/gist_id}", "starred_url": "https://api.github.com/users/vsrs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vsrs/subscriptions", "organizations_url": "https://api.github.com/users/vsrs/orgs", "repos_url": "https://api.github.com/users/vsrs/repos", "events_url": "https://api.github.com/users/vsrs/events{/privacy}", "received_events_url": "https://api.github.com/users/vsrs/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vsrs", "id": 62505555, "node_id": "MDQ6VXNlcjYyNTA1NTU1", "avatar_url": "https://avatars.githubusercontent.com/u/62505555?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vsrs", "html_url": "https://github.com/vsrs", "followers_url": "https://api.github.com/users/vsrs/followers", "following_url": "https://api.github.com/users/vsrs/following{/other_user}", "gists_url": "https://api.github.com/users/vsrs/gists{/gist_id}", "starred_url": "https://api.github.com/users/vsrs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vsrs/subscriptions", "organizations_url": "https://api.github.com/users/vsrs/orgs", "repos_url": "https://api.github.com/users/vsrs/repos", "events_url": "https://api.github.com/users/vsrs/events{/privacy}", "received_events_url": "https://api.github.com/users/vsrs/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "155f0601421620086a256c9e313568d5bd7391e0", "url": "https://api.github.com/repos/rust-lang/rust/commits/155f0601421620086a256c9e313568d5bd7391e0", "html_url": "https://github.com/rust-lang/rust/commit/155f0601421620086a256c9e313568d5bd7391e0"}], "stats": {"total": 39, "additions": 36, "deletions": 3}, "files": [{"sha": "ec325ad3f58c4b1c19358673e5bc951ac613363b", "filename": "editors/code/package.json", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/fee0a9fa5a3dd84400108b33a1e8225dc364a9fa/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/fee0a9fa5a3dd84400108b33a1e8225dc364a9fa/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=fee0a9fa5a3dd84400108b33a1e8225dc364a9fa", "patch": "@@ -125,6 +125,11 @@\n                 \"title\": \"Debug\",\n                 \"category\": \"Rust Analyzer\"\n             },\n+            {\n+                \"command\": \"rust-analyzer.newDebugConfig\",\n+                \"title\": \"Generate launch configuration\",\n+                \"category\": \"Rust Analyzer\"\n+            },\n             {\n                 \"command\": \"rust-analyzer.analyzerStatus\",\n                 \"title\": \"Status\","}, {"sha": "5e88eeae0f20c6b440d907d4b76a6778eb834266", "filename": "editors/code/src/commands/runnables.ts", "status": "modified", "additions": 29, "deletions": 1, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/fee0a9fa5a3dd84400108b33a1e8225dc364a9fa/editors%2Fcode%2Fsrc%2Fcommands%2Frunnables.ts", "raw_url": "https://github.com/rust-lang/rust/raw/fee0a9fa5a3dd84400108b33a1e8225dc364a9fa/editors%2Fcode%2Fsrc%2Fcommands%2Frunnables.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fcommands%2Frunnables.ts?ref=fee0a9fa5a3dd84400108b33a1e8225dc364a9fa", "patch": "@@ -3,7 +3,7 @@ import * as lc from 'vscode-languageclient';\n import * as ra from '../rust-analyzer-api';\n \n import { Ctx, Cmd } from '../ctx';\n-import { startDebugSession } from '../debug';\n+import { startDebugSession, getDebugConfiguration } from '../debug';\n \n async function selectRunnable(ctx: Ctx, prevRunnable: RunnableQuickPick | undefined): Promise<RunnableQuickPick | undefined> {\n     const editor = ctx.activeRustEditor;\n@@ -86,6 +86,34 @@ export function debugSingle(ctx: Ctx): Cmd {\n     };\n }\n \n+export function newDebugConfig(ctx: Ctx): Cmd {\n+    return async () => {\n+        const scope = ctx.activeRustEditor?.document.uri;\n+        if (!scope) return;\n+\n+        const item = await selectRunnable(ctx, undefined);\n+        if (!item) return;\n+\n+        const debugConfig = await getDebugConfiguration(ctx, item.runnable);\n+        if (!debugConfig) return;\n+\n+        const wsLaunchSection = vscode.workspace.getConfiguration(\"launch\", scope);\n+        const configurations = wsLaunchSection.get<any[]>(\"configurations\") || [];\n+\n+        const index = configurations.findIndex(c => c.name === debugConfig.name);\n+        if (index !== -1) {\n+            const answer = await vscode.window.showErrorMessage(`Launch configuration '${debugConfig.name}' already exists!`, 'Cancel', 'Update');\n+            if (answer === \"Cancel\") return;\n+\n+            configurations[index] = debugConfig;\n+        } else {\n+            configurations.push(debugConfig);\n+        }\n+\n+        await wsLaunchSection.update(\"configurations\", configurations);\n+    };\n+}\n+\n class RunnableQuickPick implements vscode.QuickPickItem {\n     public label: string;\n     public description?: string | undefined;"}, {"sha": "228a7ab75c0987f522f0a41220b5894c14ad8707", "filename": "editors/code/src/debug.ts", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/fee0a9fa5a3dd84400108b33a1e8225dc364a9fa/editors%2Fcode%2Fsrc%2Fdebug.ts", "raw_url": "https://github.com/rust-lang/rust/raw/fee0a9fa5a3dd84400108b33a1e8225dc364a9fa/editors%2Fcode%2Fsrc%2Fdebug.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fdebug.ts?ref=fee0a9fa5a3dd84400108b33a1e8225dc364a9fa", "patch": "@@ -57,8 +57,7 @@ export async function getDebugConfiguration(ctx: Ctx, config: ra.Runnable): Prom\n             debugEngine = vscode.extensions.getExtension(engineId);\n             if (debugEngine) break;\n         }\n-    }\n-    else {\n+    } else {\n         debugEngine = vscode.extensions.getExtension(debugOptions.engine);\n     }\n "}, {"sha": "c015460b88390226a063a85b41731a5e5115a952", "filename": "editors/code/src/main.ts", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fee0a9fa5a3dd84400108b33a1e8225dc364a9fa/editors%2Fcode%2Fsrc%2Fmain.ts", "raw_url": "https://github.com/rust-lang/rust/raw/fee0a9fa5a3dd84400108b33a1e8225dc364a9fa/editors%2Fcode%2Fsrc%2Fmain.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fmain.ts?ref=fee0a9fa5a3dd84400108b33a1e8225dc364a9fa", "patch": "@@ -78,6 +78,7 @@ export async function activate(context: vscode.ExtensionContext) {\n     ctx.registerCommand('expandMacro', commands.expandMacro);\n     ctx.registerCommand('run', commands.run);\n     ctx.registerCommand('debug', commands.debug);\n+    ctx.registerCommand('newDebugConfig', commands.newDebugConfig);\n \n     defaultOnEnter.dispose();\n     ctx.registerCommand('onEnter', commands.onEnter);"}]}