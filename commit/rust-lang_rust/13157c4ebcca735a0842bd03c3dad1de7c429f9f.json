{"sha": "13157c4ebcca735a0842bd03c3dad1de7c429f9f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEzMTU3YzRlYmNjYTczNWEwODQyYmQwM2MzZGFkMWRlN2M0MjlmOWY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-07-07T18:42:14Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-07-07T18:42:14Z"}, "message": "Auto merge of #42809 - seanmonstar:stable-associated-consts, r=nikomatsakis\n\nremove associated_consts feature gate\n\nCurrently struggling to run tests locally (something about jemalloc target missing).\n\ncc #29646", "tree": {"sha": "f19fcd32fb92b89f0a3c5a8efadb07557bf3d9dc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f19fcd32fb92b89f0a3c5a8efadb07557bf3d9dc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/13157c4ebcca735a0842bd03c3dad1de7c429f9f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/13157c4ebcca735a0842bd03c3dad1de7c429f9f", "html_url": "https://github.com/rust-lang/rust/commit/13157c4ebcca735a0842bd03c3dad1de7c429f9f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/13157c4ebcca735a0842bd03c3dad1de7c429f9f/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c0ec385caca94e0940ae1680a5504acd12835657", "url": "https://api.github.com/repos/rust-lang/rust/commits/c0ec385caca94e0940ae1680a5504acd12835657", "html_url": "https://github.com/rust-lang/rust/commit/c0ec385caca94e0940ae1680a5504acd12835657"}, {"sha": "74b2d693589add69cf03588ae0eb336c1be7d52b", "url": "https://api.github.com/repos/rust-lang/rust/commits/74b2d693589add69cf03588ae0eb336c1be7d52b", "html_url": "https://github.com/rust-lang/rust/commit/74b2d693589add69cf03588ae0eb336c1be7d52b"}], "stats": {"total": 330, "additions": 64, "deletions": 266}, "files": [{"sha": "d661108e7d95ed7517cdaecb67e8deab12c1eccb", "filename": "src/doc/unstable-book/src/language-features/associated-consts.md", "status": "removed", "additions": 0, "deletions": 85, "changes": 85, "blob_url": "https://github.com/rust-lang/rust/blob/c0ec385caca94e0940ae1680a5504acd12835657/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fassociated-consts.md", "raw_url": "https://github.com/rust-lang/rust/raw/c0ec385caca94e0940ae1680a5504acd12835657/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fassociated-consts.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fassociated-consts.md?ref=c0ec385caca94e0940ae1680a5504acd12835657", "patch": "@@ -1,85 +0,0 @@\n-# `associated_consts`\n-\n-The tracking issue for this feature is: [#29646]\n-\n-[#29646]: https://github.com/rust-lang/rust/issues/29646\n-\n-------------------------\n-\n-With the `associated_consts` feature, you can define constants like this:\n-\n-```rust\n-#![feature(associated_consts)]\n-\n-trait Foo {\n-    const ID: i32;\n-}\n-\n-impl Foo for i32 {\n-    const ID: i32 = 1;\n-}\n-\n-fn main() {\n-    assert_eq!(1, i32::ID);\n-}\n-```\n-\n-Any implementor of `Foo` will have to define `ID`. Without the definition:\n-\n-```rust,ignore\n-#![feature(associated_consts)]\n-\n-trait Foo {\n-    const ID: i32;\n-}\n-\n-impl Foo for i32 {\n-}\n-```\n-\n-gives\n-\n-```text\n-error: not all trait items implemented, missing: `ID` [E0046]\n-     impl Foo for i32 {\n-     }\n-```\n-\n-A default value can be implemented as well:\n-\n-```rust\n-#![feature(associated_consts)]\n-\n-trait Foo {\n-    const ID: i32 = 1;\n-}\n-\n-impl Foo for i32 {\n-}\n-\n-impl Foo for i64 {\n-    const ID: i32 = 5;\n-}\n-\n-fn main() {\n-    assert_eq!(1, i32::ID);\n-    assert_eq!(5, i64::ID);\n-}\n-```\n-\n-As you can see, when implementing `Foo`, you can leave it unimplemented, as\n-with `i32`. It will then use the default value. But, as in `i64`, we can also\n-add our own definition.\n-\n-Associated constants don\u2019t have to be associated with a trait. An `impl` block\n-for a `struct` or an `enum` works fine too:\n-\n-```rust\n-#![feature(associated_consts)]\n-\n-struct Foo;\n-\n-impl Foo {\n-    const FOO: u32 = 3;\n-}\n-```"}, {"sha": "e8e31ffea0b98d0d85c01d77feea00641cd9e723", "filename": "src/libcore/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Flibcore%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Flibcore%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Flib.rs?ref=13157c4ebcca735a0842bd03c3dad1de7c429f9f", "patch": "@@ -70,7 +70,6 @@\n #![feature(allow_internal_unstable)]\n #![feature(asm)]\n #![feature(associated_type_defaults)]\n-#![feature(associated_consts)]\n #![feature(cfg_target_feature)]\n #![feature(cfg_target_has_atomic)]\n #![feature(concat_idents)]\n@@ -94,6 +93,8 @@\n #![feature(untagged_unions)]\n #![feature(unwind_attributes)]\n \n+#![cfg_attr(stage0, feature(associated_consts))]\n+\n #[prelude_import]\n #[allow(unused)]\n use prelude::v1::*;"}, {"sha": "e0317e5e7f8a7a821df05e2738e21c5fea357821", "filename": "src/librustc/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Flibrustc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Flibrustc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flib.rs?ref=13157c4ebcca735a0842bd03c3dad1de7c429f9f", "patch": "@@ -22,7 +22,6 @@\n        html_root_url = \"https://doc.rust-lang.org/nightly/\")]\n #![deny(warnings)]\n \n-#![feature(associated_consts)]\n #![feature(box_patterns)]\n #![feature(box_syntax)]\n #![feature(conservative_impl_trait)]\n@@ -42,6 +41,8 @@\n #![feature(trace_macros)]\n #![feature(test)]\n \n+#![cfg_attr(stage0, feature(associated_consts))]\n+\n #![recursion_limit=\"256\"]\n \n extern crate arena;"}, {"sha": "83660714af78d5771ae391c18b518beecdd38ee3", "filename": "src/librustc_bitflags/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Flibrustc_bitflags%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Flibrustc_bitflags%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_bitflags%2Flib.rs?ref=13157c4ebcca735a0842bd03c3dad1de7c429f9f", "patch": "@@ -10,11 +10,12 @@\n \n \n #![crate_name = \"rustc_bitflags\"]\n-#![feature(associated_consts)]\n #![crate_type = \"rlib\"]\n #![no_std]\n #![deny(warnings)]\n \n+#![cfg_attr(stage0, feature(associated_consts))]\n+\n //! A typesafe bitmask flag generator.\n \n #[cfg(test)]\n@@ -31,7 +32,6 @@ extern crate std;\n ///\n /// ```{.rust}\n /// #![feature(rustc_private)]\n-/// #![feature(associated_consts)]\n /// #[macro_use] extern crate rustc_bitflags;\n ///\n /// bitflags! {"}, {"sha": "723df564419a40712a8e0c8d376e1842d49dde2c", "filename": "src/librustc_borrowck/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Flibrustc_borrowck%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Flibrustc_borrowck%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Flib.rs?ref=13157c4ebcca735a0842bd03c3dad1de7c429f9f", "patch": "@@ -20,7 +20,8 @@\n \n #![feature(quote)]\n #![feature(rustc_diagnostic_macros)]\n-#![feature(associated_consts)]\n+\n+#![cfg_attr(stage0, feature(associated_consts))]\n \n #[macro_use] extern crate log;\n #[macro_use] extern crate syntax;"}, {"sha": "5d856597cad53744db6565cda6a40fad20eff267", "filename": "src/librustc_data_structures/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Flibrustc_data_structures%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Flibrustc_data_structures%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Flib.rs?ref=13157c4ebcca735a0842bd03c3dad1de7c429f9f", "patch": "@@ -29,14 +29,14 @@\n #![feature(nonzero)]\n #![feature(unboxed_closures)]\n #![feature(fn_traits)]\n-#![feature(associated_consts)]\n #![feature(unsize)]\n #![feature(i128_type)]\n #![feature(conservative_impl_trait)]\n #![feature(discriminant_value)]\n #![feature(specialization)]\n #![feature(manually_drop)]\n \n+#![cfg_attr(stage0, feature(associated_consts))]\n #![cfg_attr(stage0, feature(struct_field_attributes))]\n \n #![cfg_attr(unix, feature(libc))]"}, {"sha": "947e433fdb936c7ea6a3adeb9b110163528b7b8c", "filename": "src/librustc_llvm/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Flibrustc_llvm%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Flibrustc_llvm%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_llvm%2Flib.rs?ref=13157c4ebcca735a0842bd03c3dad1de7c429f9f", "patch": "@@ -21,13 +21,14 @@\n        html_root_url = \"https://doc.rust-lang.org/nightly/\")]\n #![deny(warnings)]\n \n-#![feature(associated_consts)]\n #![feature(box_syntax)]\n #![feature(concat_idents)]\n #![feature(libc)]\n #![feature(link_args)]\n #![feature(static_nobundle)]\n \n+#![cfg_attr(stage0, feature(associated_consts))]\n+\n extern crate libc;\n #[macro_use]\n #[no_link]"}, {"sha": "bb1767773327c5a1ea86a2c2c1086da1ad9858c7", "filename": "src/librustc_mir/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Flibrustc_mir%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Flibrustc_mir%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Flib.rs?ref=13157c4ebcca735a0842bd03c3dad1de7c429f9f", "patch": "@@ -19,7 +19,6 @@ Rust MIR: a lowered representation of Rust. Also: an experiment!\n #![crate_type = \"dylib\"]\n #![deny(warnings)]\n \n-#![feature(associated_consts)]\n #![feature(box_patterns)]\n #![feature(box_syntax)]\n #![feature(i128_type)]\n@@ -28,6 +27,8 @@ Rust MIR: a lowered representation of Rust. Also: an experiment!\n #![feature(collection_placement)]\n #![feature(nonzero)]\n \n+#![cfg_attr(stage0, feature(associated_consts))]\n+\n #[macro_use] extern crate log;\n extern crate graphviz as dot;\n #[macro_use]"}, {"sha": "28b5b7c440cfd7aa56403f5d4a1224b1e2592692", "filename": "src/librustc_resolve/diagnostics.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Flibrustc_resolve%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Flibrustc_resolve%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fdiagnostics.rs?ref=13157c4ebcca735a0842bd03c3dad1de7c429f9f", "patch": "@@ -1320,8 +1320,6 @@ match the name of any associated constant in the trait.\n Erroneous code example:\n \n ```compile_fail,E0438\n-#![feature(associated_consts)]\n-\n trait Foo {}\n \n impl Foo for i32 {"}, {"sha": "b60a8df407f7bd0f563664c9f3c6afc07e953158", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=13157c4ebcca735a0842bd03c3dad1de7c429f9f", "patch": "@@ -16,9 +16,10 @@\n       html_root_url = \"https://doc.rust-lang.org/nightly/\")]\n #![deny(warnings)]\n \n-#![feature(associated_consts)]\n #![feature(rustc_diagnostic_macros)]\n \n+#![cfg_attr(stage0, feature(associated_consts))]\n+\n #[macro_use]\n extern crate log;\n #[macro_use]"}, {"sha": "3038c7d6c782edf43c40c4e41f63aa70fc55b44e", "filename": "src/librustc_trans/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Flibrustc_trans%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Flibrustc_trans%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Flib.rs?ref=13157c4ebcca735a0842bd03c3dad1de7c429f9f", "patch": "@@ -22,7 +22,6 @@\n       html_root_url = \"https://doc.rust-lang.org/nightly/\")]\n #![deny(warnings)]\n \n-#![feature(associated_consts)]\n #![feature(box_patterns)]\n #![feature(box_syntax)]\n #![feature(const_fn)]\n@@ -35,6 +34,8 @@\n #![feature(slice_patterns)]\n #![feature(conservative_impl_trait)]\n \n+#![cfg_attr(stage0, feature(associated_consts))]\n+\n use rustc::dep_graph::WorkProduct;\n use syntax_pos::symbol::Symbol;\n "}, {"sha": "368fada511b9fe392de2eb098c3b00056c18a2f1", "filename": "src/librustc_typeck/diagnostics.rs", "status": "modified", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Flibrustc_typeck%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Flibrustc_typeck%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fdiagnostics.rs?ref=13157c4ebcca735a0842bd03c3dad1de7c429f9f", "patch": "@@ -2777,8 +2777,6 @@ An associated const was implemented when another trait item was expected.\n Erroneous code example:\n \n ```compile_fail,E0323\n-#![feature(associated_consts)]\n-\n trait Foo {\n     type N;\n }\n@@ -2810,8 +2808,6 @@ impl Foo for Bar {\n Or:\n \n ```\n-#![feature(associated_consts)]\n-\n struct Bar;\n \n trait Foo {\n@@ -2829,8 +2825,6 @@ A method was implemented when another trait item was expected. Erroneous\n code example:\n \n ```compile_fail,E0324\n-#![feature(associated_consts)]\n-\n struct Bar;\n \n trait Foo {\n@@ -2850,8 +2844,6 @@ To fix this error, please verify that the method name wasn't misspelled and\n verify that you are indeed implementing the correct trait items. Example:\n \n ```\n-#![feature(associated_consts)]\n-\n struct Bar;\n \n trait Foo {\n@@ -2873,8 +2865,6 @@ An associated type was implemented when another trait item was expected.\n Erroneous code example:\n \n ```compile_fail,E0325\n-#![feature(associated_consts)]\n-\n struct Bar;\n \n trait Foo {\n@@ -2906,8 +2896,6 @@ impl Foo for Bar {\n Or:\n \n ```\n-#![feature(associated_consts)]\n-\n struct Bar;\n \n trait Foo {\n@@ -2927,8 +2915,6 @@ types in the trait definition. This error indicates that there was a mismatch.\n Here's an example of this error:\n \n ```compile_fail,E0326\n-#![feature(associated_consts)]\n-\n trait Foo {\n     const BAR: bool;\n }\n@@ -2991,8 +2977,6 @@ type parameter or `Self`. This is not supported yet. An example causing this\n error is shown below:\n \n ```\n-#![feature(associated_consts)]\n-\n trait Foo {\n     const BAR: f64;\n }\n@@ -3012,8 +2996,6 @@ Currently, the value of `BAR` for a particular type can only be accessed\n through a concrete type, as shown below:\n \n ```\n-#![feature(associated_consts)]\n-\n trait Foo {\n     const BAR: f64;\n }"}, {"sha": "2fc107c663bb41e9557a25545f614dd293900ad5", "filename": "src/libstd/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Flibstd%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Flibstd%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flib.rs?ref=13157c4ebcca735a0842bd03c3dad1de7c429f9f", "patch": "@@ -245,7 +245,6 @@\n #![feature(allocator_internals)]\n #![feature(allow_internal_unstable)]\n #![feature(asm)]\n-#![feature(associated_consts)]\n #![feature(box_syntax)]\n #![feature(cfg_target_has_atomic)]\n #![feature(cfg_target_thread_local)]\n@@ -320,6 +319,7 @@\n #![cfg_attr(test, feature(float_bits_conv))]\n \n #![cfg_attr(not(stage0), default_lib_allocator)]\n+#![cfg_attr(stage0, feature(associated_consts))]\n \n // Explicitly import the prelude. The compiler uses this same unstable attribute\n // to import the prelude implicitly when building crates that depend on std."}, {"sha": "9adba7f50ccaf3aca50684243987e097980b6842", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 3, "deletions": 14, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=13157c4ebcca735a0842bd03c3dad1de7c429f9f", "patch": "@@ -198,10 +198,6 @@ declare_features! (\n     // #23121. Array patterns have some hazards yet.\n     (active, slice_patterns, \"1.0.0\", Some(23121)),\n \n-    // Allows the definition of associated constants in `trait` or `impl`\n-    // blocks.\n-    (active, associated_consts, \"1.0.0\", Some(29646)),\n-\n     // Allows the definition of `const fn` functions.\n     (active, const_fn, \"1.2.0\", Some(24111)),\n \n@@ -446,6 +442,9 @@ declare_features! (\n     (accepted, closure_to_fn_coercion, \"1.19.0\", Some(39817)),\n     // Allows attributes on struct literal fields.\n     (accepted, struct_field_attributes, \"1.20.0\", Some(38814)),\n+    // Allows the definition of associated constants in `trait` or `impl`\n+    // blocks.\n+    (accepted, associated_consts, \"1.20.0\", Some(29646)),\n );\n \n // If you change this, please modify src/doc/unstable-book as well. You must\n@@ -1405,11 +1404,6 @@ impl<'a> Visitor<'a> for PostExpansionVisitor<'a> {\n \n     fn visit_trait_item(&mut self, ti: &'a ast::TraitItem) {\n         match ti.node {\n-            ast::TraitItemKind::Const(..) => {\n-                gate_feature_post!(&self, associated_consts,\n-                                  ti.span,\n-                                  \"associated constants are experimental\")\n-            }\n             ast::TraitItemKind::Method(ref sig, ref block) => {\n                 if block.is_none() {\n                     self.check_abi(sig.abi, ti.span);\n@@ -1435,11 +1429,6 @@ impl<'a> Visitor<'a> for PostExpansionVisitor<'a> {\n         }\n \n         match ii.node {\n-            ast::ImplItemKind::Const(..) => {\n-                gate_feature_post!(&self, associated_consts,\n-                                  ii.span,\n-                                  \"associated constants are experimental\")\n-            }\n             ast::ImplItemKind::Method(ref sig, _) => {\n                 if sig.constness.node == ast::Constness::Const {\n                     gate_feature_post!(&self, const_fn, ii.span, \"const fn is unstable\");"}, {"sha": "9a6d176d0887b8d026dc41fa5406345f9cdf5abb", "filename": "src/test/compile-fail-fulldeps/auxiliary/use_from_trait_xc.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Fcompile-fail-fulldeps%2Fauxiliary%2Fuse_from_trait_xc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Fcompile-fail-fulldeps%2Fauxiliary%2Fuse_from_trait_xc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail-fulldeps%2Fauxiliary%2Fuse_from_trait_xc.rs?ref=13157c4ebcca735a0842bd03c3dad1de7c429f9f", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(associated_consts)]\n \n pub use self::sub::{Bar, Baz};\n "}, {"sha": "cf6cf15115ac0a1dd88b027143557150a9a02d8b", "filename": "src/test/compile-fail/E0164.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Fcompile-fail%2FE0164.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Fcompile-fail%2FE0164.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0164.rs?ref=13157c4ebcca735a0842bd03c3dad1de7c429f9f", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(associated_consts)]\n \n enum Foo {}\n "}, {"sha": "99e0dbbcea804b5abc920dc89a84912397f0a84e", "filename": "src/test/compile-fail/E0438.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Fcompile-fail%2FE0438.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Fcompile-fail%2FE0438.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0438.rs?ref=13157c4ebcca735a0842bd03c3dad1de7c429f9f", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(associated_consts)]\n \n trait Bar {}\n "}, {"sha": "5051e78d1ba178b07f318479a85bc99c4f6c372f", "filename": "src/test/compile-fail/associated-const-ambiguity-report.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Fcompile-fail%2Fassociated-const-ambiguity-report.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Fcompile-fail%2Fassociated-const-ambiguity-report.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fassociated-const-ambiguity-report.rs?ref=13157c4ebcca735a0842bd03c3dad1de7c429f9f", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(associated_consts)]\n \n trait Foo {\n     const ID: i32;"}, {"sha": "2cc10f0f956b7105a8d9346403c52aa5a69cf1f7", "filename": "src/test/compile-fail/associated-const-array-len.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Fcompile-fail%2Fassociated-const-array-len.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Fcompile-fail%2Fassociated-const-array-len.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fassociated-const-array-len.rs?ref=13157c4ebcca735a0842bd03c3dad1de7c429f9f", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(associated_consts)]\n \n trait Foo {\n     const ID: usize;"}, {"sha": "42db13f4f3bd4423260a5a9e76c376310c0afdfe", "filename": "src/test/compile-fail/associated-const-dead-code.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Fcompile-fail%2Fassociated-const-dead-code.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Fcompile-fail%2Fassociated-const-dead-code.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fassociated-const-dead-code.rs?ref=13157c4ebcca735a0842bd03c3dad1de7c429f9f", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(associated_consts)]\n #![deny(dead_code)]\n \n struct MyFoo;"}, {"sha": "45f53418dca50d7e538ba2e592dfeb243beee7ce", "filename": "src/test/compile-fail/associated-const-generic-obligations.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Fcompile-fail%2Fassociated-const-generic-obligations.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Fcompile-fail%2Fassociated-const-generic-obligations.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fassociated-const-generic-obligations.rs?ref=13157c4ebcca735a0842bd03c3dad1de7c429f9f", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(associated_consts)]\n \n trait Foo {\n     type Out: Sized;"}, {"sha": "51681a4bb880b54e176f9095d6d92b98759d8aae", "filename": "src/test/compile-fail/associated-const-impl-wrong-lifetime.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Fcompile-fail%2Fassociated-const-impl-wrong-lifetime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Fcompile-fail%2Fassociated-const-impl-wrong-lifetime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fassociated-const-impl-wrong-lifetime.rs?ref=13157c4ebcca735a0842bd03c3dad1de7c429f9f", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(associated_consts)]\n \n trait Foo {\n     const NAME: &'static str;"}, {"sha": "e38851ccd6ff6f023790eb22a17e8bb0b974bf70", "filename": "src/test/compile-fail/associated-const-impl-wrong-type.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Fcompile-fail%2Fassociated-const-impl-wrong-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Fcompile-fail%2Fassociated-const-impl-wrong-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fassociated-const-impl-wrong-type.rs?ref=13157c4ebcca735a0842bd03c3dad1de7c429f9f", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(associated_consts)]\n \n trait Foo {\n     const BAR: u32; //~ NOTE type in trait"}, {"sha": "f9a57cd6d75ef39da232bde135858ad63793d3ae", "filename": "src/test/compile-fail/associated-const-no-item.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Fcompile-fail%2Fassociated-const-no-item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Fcompile-fail%2Fassociated-const-no-item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fassociated-const-no-item.rs?ref=13157c4ebcca735a0842bd03c3dad1de7c429f9f", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(associated_consts)]\n \n trait Foo {\n     const ID: i32;"}, {"sha": "b5accfff5bbf545808901a1ceb6a66ea4794ff93", "filename": "src/test/compile-fail/associated-const-private-impl.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Fcompile-fail%2Fassociated-const-private-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Fcompile-fail%2Fassociated-const-private-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fassociated-const-private-impl.rs?ref=13157c4ebcca735a0842bd03c3dad1de7c429f9f", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(associated_consts)]\n \n mod bar1 {\n     pub use self::bar2::Foo;"}, {"sha": "52bb4a1b463b4b7f75709c567bdb0481aef7d439", "filename": "src/test/compile-fail/associated-const-type-parameter-arms.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Fcompile-fail%2Fassociated-const-type-parameter-arms.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Fcompile-fail%2Fassociated-const-type-parameter-arms.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fassociated-const-type-parameter-arms.rs?ref=13157c4ebcca735a0842bd03c3dad1de7c429f9f", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(associated_consts)]\n \n pub enum EFoo { A, B, C, D }\n "}, {"sha": "d196cf2215601b4389e772cc72b5092abf8055a7", "filename": "src/test/compile-fail/associated-const-type-parameter-arrays-2.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Fcompile-fail%2Fassociated-const-type-parameter-arrays-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Fcompile-fail%2Fassociated-const-type-parameter-arrays-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fassociated-const-type-parameter-arrays-2.rs?ref=13157c4ebcca735a0842bd03c3dad1de7c429f9f", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(associated_consts)]\n \n pub trait Foo {\n     const Y: usize;"}, {"sha": "0b24cab2a681cc6c6138b320c23ca8a799178deb", "filename": "src/test/compile-fail/associated-const-type-parameter-arrays.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Fcompile-fail%2Fassociated-const-type-parameter-arrays.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Fcompile-fail%2Fassociated-const-type-parameter-arrays.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fassociated-const-type-parameter-arrays.rs?ref=13157c4ebcca735a0842bd03c3dad1de7c429f9f", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(associated_consts)]\n \n pub trait Foo {\n     const Y: usize;"}, {"sha": "497ff426b2fae5f8d8939895032c6ec2ec155d17", "filename": "src/test/compile-fail/associated-const-upper-case-lint.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Fcompile-fail%2Fassociated-const-upper-case-lint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Fcompile-fail%2Fassociated-const-upper-case-lint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fassociated-const-upper-case-lint.rs?ref=13157c4ebcca735a0842bd03c3dad1de7c429f9f", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(associated_consts)]\n #![deny(non_upper_case_globals)]\n #![allow(dead_code)]\n "}, {"sha": "85ea949b9c8da28603ecca4bfb991f1f6a10a48f", "filename": "src/test/compile-fail/associated-item-duplicate-names-2.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Fcompile-fail%2Fassociated-item-duplicate-names-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Fcompile-fail%2Fassociated-item-duplicate-names-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fassociated-item-duplicate-names-2.rs?ref=13157c4ebcca735a0842bd03c3dad1de7c429f9f", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(associated_consts)]\n \n struct Foo;\n "}, {"sha": "a2fc1bc01776771db2655ff034febde660eef7cd", "filename": "src/test/compile-fail/associated-item-duplicate-names.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Fcompile-fail%2Fassociated-item-duplicate-names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Fcompile-fail%2Fassociated-item-duplicate-names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fassociated-item-duplicate-names.rs?ref=13157c4ebcca735a0842bd03c3dad1de7c429f9f", "patch": "@@ -10,7 +10,6 @@\n \n // Test for issue #23969\n \n-#![feature(associated_consts)]\n \n trait Foo {\n     type Ty;"}, {"sha": "946a4b2f73ac4ff82ddaa845267d21ff0328d554", "filename": "src/test/compile-fail/associated-types-overridden-default.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Fcompile-fail%2Fassociated-types-overridden-default.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Fcompile-fail%2Fassociated-types-overridden-default.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fassociated-types-overridden-default.rs?ref=13157c4ebcca735a0842bd03c3dad1de7c429f9f", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(associated_consts)]\n #![feature(associated_type_defaults)]\n \n pub trait Tr {"}, {"sha": "5a6db789282733319c8dbe7f1835bdf5bd4f2c98", "filename": "src/test/compile-fail/auxiliary/issue_41549.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Fcompile-fail%2Fauxiliary%2Fissue_41549.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Fcompile-fail%2Fauxiliary%2Fissue_41549.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fauxiliary%2Fissue_41549.rs?ref=13157c4ebcca735a0842bd03c3dad1de7c429f9f", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(associated_consts)]\n \n pub trait Trait {\n     const CONST: u32;"}, {"sha": "9a6d176d0887b8d026dc41fa5406345f9cdf5abb", "filename": "src/test/compile-fail/auxiliary/use_from_trait_xc.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Fcompile-fail%2Fauxiliary%2Fuse_from_trait_xc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Fcompile-fail%2Fauxiliary%2Fuse_from_trait_xc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fauxiliary%2Fuse_from_trait_xc.rs?ref=13157c4ebcca735a0842bd03c3dad1de7c429f9f", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(associated_consts)]\n \n pub use self::sub::{Bar, Baz};\n "}, {"sha": "ee4422faf3a24f3e0176488567a30e760c75e7db", "filename": "src/test/compile-fail/gated-associated_consts.rs", "status": "removed", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/c0ec385caca94e0940ae1680a5504acd12835657/src%2Ftest%2Fcompile-fail%2Fgated-associated_consts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0ec385caca94e0940ae1680a5504acd12835657/src%2Ftest%2Fcompile-fail%2Fgated-associated_consts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fgated-associated_consts.rs?ref=c0ec385caca94e0940ae1680a5504acd12835657", "patch": "@@ -1,23 +0,0 @@\n-// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// gate-test-associated_consts\n-\n-trait MyTrait {\n-    const C: bool;\n-    //~^ associated constants are experimental\n-}\n-\n-struct Foo;\n-\n-impl Foo {\n-    const C: bool = true;\n-    //~^ associated constants are experimental\n-}"}, {"sha": "536784508b77b7ffa1764f12ba0b81fb32a28075", "filename": "src/test/compile-fail/issue-28992-empty.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Fcompile-fail%2Fissue-28992-empty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Fcompile-fail%2Fissue-28992-empty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-28992-empty.rs?ref=13157c4ebcca735a0842bd03c3dad1de7c429f9f", "patch": "@@ -10,7 +10,6 @@\n \n // Can't use constants as tuple struct patterns\n \n-#![feature(associated_consts)]\n \n const C1: i32 = 0;\n "}, {"sha": "7524049c5df3d73bee295eb1b8a884a2d7603662", "filename": "src/test/compile-fail/issue-31910.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Fcompile-fail%2Fissue-31910.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Fcompile-fail%2Fissue-31910.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-31910.rs?ref=13157c4ebcca735a0842bd03c3dad1de7c429f9f", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(associated_consts)]\n \n enum Enum<T: Trait> {\n     X = Trait::Number,"}, {"sha": "67be194c8ed2a76fd03b9b8dc69a07f3fc753a41", "filename": "src/test/compile-fail/issue-41549.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Fcompile-fail%2Fissue-41549.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Fcompile-fail%2Fissue-41549.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-41549.rs?ref=13157c4ebcca735a0842bd03c3dad1de7c429f9f", "patch": "@@ -10,7 +10,6 @@\n \n // aux-build:issue_41549.rs\n \n-#![feature(associated_consts)]\n \n extern crate issue_41549;\n "}, {"sha": "ebb52face06ac516d3221d8d75afd4cf5877a965", "filename": "src/test/compile-fail/object-safety-associated-consts.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Fcompile-fail%2Fobject-safety-associated-consts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Fcompile-fail%2Fobject-safety-associated-consts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fobject-safety-associated-consts.rs?ref=13157c4ebcca735a0842bd03c3dad1de7c429f9f", "patch": "@@ -11,7 +11,6 @@\n // Check that we correctly prevent users from making trait objects\n // from traits with associated consts.\n \n-#![feature(associated_consts)]\n \n trait Bar {\n     const X: usize;"}, {"sha": "933ec3837dfc712a2ab2b0dd3abce3aa95438e8e", "filename": "src/test/compile-fail/privacy-sanity.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Fcompile-fail%2Fprivacy-sanity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Fcompile-fail%2Fprivacy-sanity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fprivacy-sanity.rs?ref=13157c4ebcca735a0842bd03c3dad1de7c429f9f", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(associated_consts)]\n #![feature(optin_builtin_traits)]\n \n trait MarkerTr {}"}, {"sha": "f030012b172f0ac18fb815b3edbdea70593b38ae", "filename": "src/test/compile-fail/private-in-public-warn.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Fcompile-fail%2Fprivate-in-public-warn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Fcompile-fail%2Fprivate-in-public-warn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fprivate-in-public-warn.rs?ref=13157c4ebcca735a0842bd03c3dad1de7c429f9f", "patch": "@@ -11,7 +11,6 @@\n // Private types and traits are not allowed in public interfaces.\n // This test also ensures that the checks are performed even inside private modules.\n \n-#![feature(associated_consts)]\n #![feature(associated_type_defaults)]\n #![deny(private_in_public)]\n #![allow(unused)]"}, {"sha": "b865e391d29c17b2b240daa5a14f4f38fde2eba2", "filename": "src/test/compile-fail/private-in-public.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Fcompile-fail%2Fprivate-in-public.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Fcompile-fail%2Fprivate-in-public.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fprivate-in-public.rs?ref=13157c4ebcca735a0842bd03c3dad1de7c429f9f", "patch": "@@ -11,7 +11,6 @@\n // Private types and traits are not allowed in public interfaces.\n // This test also ensures that the checks are performed even inside private modules.\n \n-#![feature(associated_consts)]\n #![feature(associated_type_defaults)]\n \n mod types {"}, {"sha": "d8626dfd39ee805897b89fecc2b8ff5a57060249", "filename": "src/test/compile-fail/stmt_expr_attrs_no_feature.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Fcompile-fail%2Fstmt_expr_attrs_no_feature.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Fcompile-fail%2Fstmt_expr_attrs_no_feature.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fstmt_expr_attrs_no_feature.rs?ref=13157c4ebcca735a0842bd03c3dad1de7c429f9f", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n #![feature(custom_attribute)]\n-#![feature(associated_consts)]\n \n macro_rules! stmt_mac {\n     () => {"}, {"sha": "cc143a6209d41e759021cfc62bb9d5d0496b5983", "filename": "src/test/compile-fail/trait-impl-can-not-have-untraitful-items.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Fcompile-fail%2Ftrait-impl-can-not-have-untraitful-items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Fcompile-fail%2Ftrait-impl-can-not-have-untraitful-items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftrait-impl-can-not-have-untraitful-items.rs?ref=13157c4ebcca735a0842bd03c3dad1de7c429f9f", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(associated_consts)]\n \n trait A { }\n "}, {"sha": "b8d83e5adf23da1f72c8ec6bc07c62aa26276b61", "filename": "src/test/compile-fail/trait-item-privacy.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Fcompile-fail%2Ftrait-item-privacy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Fcompile-fail%2Ftrait-item-privacy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftrait-item-privacy.rs?ref=13157c4ebcca735a0842bd03c3dad1de7c429f9f", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(associated_consts)]\n #![feature(associated_type_defaults)]\n \n struct S;"}, {"sha": "33adc2b5bfe5a8abcf05fccb46a27c341869972e", "filename": "src/test/compile-fail/use-from-trait.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Fcompile-fail%2Fuse-from-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Fcompile-fail%2Fuse-from-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fuse-from-trait.rs?ref=13157c4ebcca735a0842bd03c3dad1de7c429f9f", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(associated_consts)]\n \n use Trait::foo;\n //~^ ERROR `foo` is not directly importable"}, {"sha": "e47556a790b62652835cc525e652fb5e69536da2", "filename": "src/test/incremental/hashes/trait_defs.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Fincremental%2Fhashes%2Ftrait_defs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Fincremental%2Fhashes%2Ftrait_defs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Ftrait_defs.rs?ref=13157c4ebcca735a0842bd03c3dad1de7c429f9f", "patch": "@@ -30,7 +30,6 @@\n #![crate_type=\"rlib\"]\n #![feature(associated_type_defaults)]\n #![feature(intrinsics)]\n-#![feature(associated_consts)]\n \n \n // Change trait visibility --------------------------------------------------------"}, {"sha": "9c36a42527f1250e4e6a4c9dca5d2ee19db000cd", "filename": "src/test/run-pass/associated-const-const-eval.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Frun-pass%2Fassociated-const-const-eval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Frun-pass%2Fassociated-const-const-eval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fassociated-const-const-eval.rs?ref=13157c4ebcca735a0842bd03c3dad1de7c429f9f", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(associated_consts)]\n \n trait Foo {\n     const NUM: usize;"}, {"sha": "c2758b1aed77f175732911fbcc2812f3c4f8a161", "filename": "src/test/run-pass/associated-const-cross-crate-const-eval.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Frun-pass%2Fassociated-const-cross-crate-const-eval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Frun-pass%2Fassociated-const-cross-crate-const-eval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fassociated-const-cross-crate-const-eval.rs?ref=13157c4ebcca735a0842bd03c3dad1de7c429f9f", "patch": "@@ -10,7 +10,6 @@\n \n // aux-build:associated-const-cc-lib.rs\n \n-#![feature(associated_consts)]\n \n extern crate associated_const_cc_lib as foolib;\n "}, {"sha": "084c448ba2ab16028e4de867f8df0230cc3ae97c", "filename": "src/test/run-pass/associated-const-cross-crate-defaults.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Frun-pass%2Fassociated-const-cross-crate-defaults.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Frun-pass%2Fassociated-const-cross-crate-defaults.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fassociated-const-cross-crate-defaults.rs?ref=13157c4ebcca735a0842bd03c3dad1de7c429f9f", "patch": "@@ -10,7 +10,6 @@\n \n // aux-build:associated-const-cc-lib.rs\n \n-#![feature(associated_consts)]\n \n extern crate associated_const_cc_lib as foolib;\n "}, {"sha": "a882d6ae23d8a3bb9e5549758ea2e8f429a2a3e2", "filename": "src/test/run-pass/associated-const-cross-crate.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Frun-pass%2Fassociated-const-cross-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Frun-pass%2Fassociated-const-cross-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fassociated-const-cross-crate.rs?ref=13157c4ebcca735a0842bd03c3dad1de7c429f9f", "patch": "@@ -10,7 +10,6 @@\n \n // aux-build:associated-const-cc-lib.rs\n \n-#![feature(associated_consts)]\n \n extern crate associated_const_cc_lib as foolib;\n "}, {"sha": "b7fb4d73259b32d476c1ea1a9837f1966e8e266e", "filename": "src/test/run-pass/associated-const-in-global-const.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Frun-pass%2Fassociated-const-in-global-const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Frun-pass%2Fassociated-const-in-global-const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fassociated-const-in-global-const.rs?ref=13157c4ebcca735a0842bd03c3dad1de7c429f9f", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(associated_consts)]\n \n struct Foo;\n "}, {"sha": "86454a4a09117fd4160413e327d306a16f0ee735", "filename": "src/test/run-pass/associated-const-inherent-impl.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Frun-pass%2Fassociated-const-inherent-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Frun-pass%2Fassociated-const-inherent-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fassociated-const-inherent-impl.rs?ref=13157c4ebcca735a0842bd03c3dad1de7c429f9f", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(associated_consts)]\n \n struct Foo;\n "}, {"sha": "bfeb78ddfe5c726fb23ea087464cee199b9959d8", "filename": "src/test/run-pass/associated-const-marks-live-code.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Frun-pass%2Fassociated-const-marks-live-code.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Frun-pass%2Fassociated-const-marks-live-code.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fassociated-const-marks-live-code.rs?ref=13157c4ebcca735a0842bd03c3dad1de7c429f9f", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(associated_consts)]\n \n #![deny(dead_code)]\n "}, {"sha": "54603e6e0d9aaacd566f1b792723238f381d0098", "filename": "src/test/run-pass/associated-const-match-patterns.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Frun-pass%2Fassociated-const-match-patterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Frun-pass%2Fassociated-const-match-patterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fassociated-const-match-patterns.rs?ref=13157c4ebcca735a0842bd03c3dad1de7c429f9f", "patch": "@@ -10,7 +10,6 @@\n \n // aux-build:empty-struct.rs\n \n-#![feature(associated_consts)]\n \n extern crate empty_struct;\n use empty_struct::XEmpty2 as XFoo;"}, {"sha": "987c64dbff562ab99627092ba8e9040af0803f4d", "filename": "src/test/run-pass/associated-const-outer-ty-refs.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Frun-pass%2Fassociated-const-outer-ty-refs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Frun-pass%2Fassociated-const-outer-ty-refs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fassociated-const-outer-ty-refs.rs?ref=13157c4ebcca735a0842bd03c3dad1de7c429f9f", "patch": "@@ -7,7 +7,6 @@\n // <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n-#![feature(associated_consts)]\n \n trait Lattice {\n     const BOTTOM: Self;"}, {"sha": "bb594cfa0f9739dcf3835f22954ea737bddd1697", "filename": "src/test/run-pass/associated-const-overwrite-default.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Frun-pass%2Fassociated-const-overwrite-default.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Frun-pass%2Fassociated-const-overwrite-default.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fassociated-const-overwrite-default.rs?ref=13157c4ebcca735a0842bd03c3dad1de7c429f9f", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(associated_consts)]\n \n trait Foo {\n     const ID: i32 = 2;"}, {"sha": "5ff363844a124ac07f2a4c79c476a1b130b46e01", "filename": "src/test/run-pass/associated-const-public-impl.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Frun-pass%2Fassociated-const-public-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Frun-pass%2Fassociated-const-public-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fassociated-const-public-impl.rs?ref=13157c4ebcca735a0842bd03c3dad1de7c429f9f", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(associated_consts)]\n \n mod bar1 {\n     pub use self::bar2::Foo;"}, {"sha": "d72e1efc4d74ce08cf449c47065b005781e16b59", "filename": "src/test/run-pass/associated-const-range-match-patterns.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Frun-pass%2Fassociated-const-range-match-patterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Frun-pass%2Fassociated-const-range-match-patterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fassociated-const-range-match-patterns.rs?ref=13157c4ebcca735a0842bd03c3dad1de7c429f9f", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(associated_consts)]\n \n struct Foo;\n "}, {"sha": "5fa49b48200dbef1b1738c83481b254d15059bbf", "filename": "src/test/run-pass/associated-const-resolution-order.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Frun-pass%2Fassociated-const-resolution-order.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Frun-pass%2Fassociated-const-resolution-order.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fassociated-const-resolution-order.rs?ref=13157c4ebcca735a0842bd03c3dad1de7c429f9f", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(associated_consts)]\n \n struct MyType;\n "}, {"sha": "16ccb5b39552c9747620cbe229ff6ed9a73f09bb", "filename": "src/test/run-pass/associated-const-self-type.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Frun-pass%2Fassociated-const-self-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Frun-pass%2Fassociated-const-self-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fassociated-const-self-type.rs?ref=13157c4ebcca735a0842bd03c3dad1de7c429f9f", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(associated_consts)]\n \n trait MyInt {\n     const ONE: Self;"}, {"sha": "7859a87e014b0f15c3885a8b84be7935f3cbe790", "filename": "src/test/run-pass/associated-const-type-parameters.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Frun-pass%2Fassociated-const-type-parameters.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Frun-pass%2Fassociated-const-type-parameters.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fassociated-const-type-parameters.rs?ref=13157c4ebcca735a0842bd03c3dad1de7c429f9f", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(associated_consts)]\n \n trait Foo {\n     const X: i32;"}, {"sha": "b22630678249fd70e48c6b4203cdb66c582cb06b", "filename": "src/test/run-pass/associated-const-ufcs-infer-trait.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Frun-pass%2Fassociated-const-ufcs-infer-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Frun-pass%2Fassociated-const-ufcs-infer-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fassociated-const-ufcs-infer-trait.rs?ref=13157c4ebcca735a0842bd03c3dad1de7c429f9f", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(associated_consts)]\n \n trait Foo {\n     const ID: i32;"}, {"sha": "5ed9a6dea3dd7580291f8516752111d4339d1a34", "filename": "src/test/run-pass/associated-const-use-default.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Frun-pass%2Fassociated-const-use-default.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Frun-pass%2Fassociated-const-use-default.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fassociated-const-use-default.rs?ref=13157c4ebcca735a0842bd03c3dad1de7c429f9f", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(associated_consts)]\n \n trait Foo {\n     const ID: i32 = 1;"}, {"sha": "986f160f3cbd037d0fe11ffbfd77176427d68d8b", "filename": "src/test/run-pass/associated-const-use-impl-of-same-trait.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Frun-pass%2Fassociated-const-use-impl-of-same-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Frun-pass%2Fassociated-const-use-impl-of-same-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fassociated-const-use-impl-of-same-trait.rs?ref=13157c4ebcca735a0842bd03c3dad1de7c429f9f", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(associated_consts)]\n \n // The main purpose of this test is to ensure that different impls of the same\n // trait can refer to each other without setting off the static recursion check"}, {"sha": "3c84f4a833530f99c71c38a1ede3d2eafaf528b6", "filename": "src/test/run-pass/associated-const.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Frun-pass%2Fassociated-const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Frun-pass%2Fassociated-const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fassociated-const.rs?ref=13157c4ebcca735a0842bd03c3dad1de7c429f9f", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(associated_consts)]\n \n trait Foo {\n     const ID: i32;"}, {"sha": "e4cada40db3c99c800dd8f90c9eac5656167e380", "filename": "src/test/run-pass/auxiliary/associated-const-cc-lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Frun-pass%2Fauxiliary%2Fassociated-const-cc-lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Frun-pass%2Fauxiliary%2Fassociated-const-cc-lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fauxiliary%2Fassociated-const-cc-lib.rs?ref=13157c4ebcca735a0842bd03c3dad1de7c429f9f", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(associated_consts)]\n \n #![crate_type=\"lib\"]\n "}, {"sha": "1435a1b5d387838e484f975baf0c83695a309d7d", "filename": "src/test/run-pass/issue-23808.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Frun-pass%2Fissue-23808.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Frun-pass%2Fissue-23808.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-23808.rs?ref=13157c4ebcca735a0842bd03c3dad1de7c429f9f", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(associated_consts)]\n #![deny(dead_code)]\n \n // use different types / traits to test all combinations"}, {"sha": "19a364a93fd792c218e14f25a37c45947176e9e4", "filename": "src/test/run-pass/issue-24947.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Frun-pass%2Fissue-24947.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Frun-pass%2Fissue-24947.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-24947.rs?ref=13157c4ebcca735a0842bd03c3dad1de7c429f9f", "patch": "@@ -10,7 +10,6 @@\n \n // #24947 ICE using a trait-associated const in an array size\n \n-#![feature(associated_consts)]\n \n struct Foo;\n "}, {"sha": "d5d23012e040bb47912c3f48488e2ee36665072c", "filename": "src/test/run-pass/issue-25145.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Frun-pass%2Fissue-25145.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Frun-pass%2Fissue-25145.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-25145.rs?ref=13157c4ebcca735a0842bd03c3dad1de7c429f9f", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(associated_consts)]\n \n struct S;\n "}, {"sha": "9d8d9c3ff2e3b3e16d4e3245d4bcbf0e5beef920", "filename": "src/test/run-pass/issue-26095.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Frun-pass%2Fissue-26095.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Frun-pass%2Fissue-26095.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-26095.rs?ref=13157c4ebcca735a0842bd03c3dad1de7c429f9f", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(associated_consts)]\n \n trait HasNumber<T> {\n     const Number: usize;"}, {"sha": "06ab310f6d21fd81b4d98f89f328b34bee08114a", "filename": "src/test/run-pass/issue-31267-additional.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Frun-pass%2Fissue-31267-additional.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Frun-pass%2Fissue-31267-additional.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-31267-additional.rs?ref=13157c4ebcca735a0842bd03c3dad1de7c429f9f", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(associated_consts)]\n \n #[derive(Clone, Copy, Debug)]\n struct Bar;"}, {"sha": "9cbdde4049164005eeca97a48a892e9a01a8d04c", "filename": "src/test/run-pass/issue-31267.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Frun-pass%2Fissue-31267.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Frun-pass%2Fissue-31267.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-31267.rs?ref=13157c4ebcca735a0842bd03c3dad1de7c429f9f", "patch": "@@ -10,7 +10,6 @@\n \n // Regression test for issue #31267\n \n-#![feature(associated_consts)]\n \n struct Foo;\n "}, {"sha": "488754af06fb81b37c18d5044fe9a72a39bbc453", "filename": "src/test/run-pass/issue-40136.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Frun-pass%2Fissue-40136.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Frun-pass%2Fissue-40136.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-40136.rs?ref=13157c4ebcca735a0842bd03c3dad1de7c429f9f", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(associated_consts)]\n \n macro_rules! m { () => { 0 } }\n "}, {"sha": "2edf61288f588544a882bd7d430bfd6343b41a7b", "filename": "src/test/rustdoc/assoc-consts.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Frustdoc%2Fassoc-consts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Frustdoc%2Fassoc-consts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fassoc-consts.rs?ref=13157c4ebcca735a0842bd03c3dad1de7c429f9f", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(associated_consts)]\n \n pub trait Foo {\n     // @has assoc_consts/trait.Foo.html '//*[@class=\"rust trait\"]' \\"}, {"sha": "6611cc428b0e14b27f0c7084106515b31e8fa95f", "filename": "src/test/rustdoc/auxiliary/issue-36031.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Frustdoc%2Fauxiliary%2Fissue-36031.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Frustdoc%2Fauxiliary%2Fissue-36031.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fauxiliary%2Fissue-36031.rs?ref=13157c4ebcca735a0842bd03c3dad1de7c429f9f", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(associated_consts)]\n \n pub trait Foo {\n     const FOO: usize;"}, {"sha": "9884e3d2c199536d7144ebf55f34ac6d7875d8dd", "filename": "src/test/rustdoc/const-doc.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Frustdoc%2Fconst-doc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Frustdoc%2Fconst-doc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fconst-doc.rs?ref=13157c4ebcca735a0842bd03c3dad1de7c429f9f", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(associated_consts)]\n \n use std::marker::PhantomData;\n "}, {"sha": "c1141cb031e4fcae1a0d2e5576dd1777a85947b1", "filename": "src/test/rustdoc/issue-28478.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Frustdoc%2Fissue-28478.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Frustdoc%2Fissue-28478.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-28478.rs?ref=13157c4ebcca735a0842bd03c3dad1de7c429f9f", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n #![feature(associated_type_defaults)]\n-#![feature(associated_consts)]\n \n // @has issue_28478/trait.Bar.html\n pub trait Bar {"}, {"sha": "20105babfd92d987c0b896e70f57eb59dded40aa", "filename": "src/test/rustdoc/issue-31808.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Frustdoc%2Fissue-31808.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Frustdoc%2Fissue-31808.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-31808.rs?ref=13157c4ebcca735a0842bd03c3dad1de7c429f9f", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(associated_consts, associated_types)]\n-\n // Test that associated item impls on primitive types don't crash rustdoc\n \n pub trait Foo {"}, {"sha": "a6ff001b96fb31282d712fc4ab97b6e1308db7b7", "filename": "src/test/rustdoc/issue-33302.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Frustdoc%2Fissue-33302.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Frustdoc%2Fissue-33302.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-33302.rs?ref=13157c4ebcca735a0842bd03c3dad1de7c429f9f", "patch": "@@ -11,7 +11,6 @@\n // Ensure constant and array length values are not taken from source\n // code, which wreaks havoc with macros.\n \n-#![feature(associated_consts)]\n \n macro_rules! make {\n     ($n:expr) => {"}, {"sha": "49fc586d6b52f7ba4abe978c1c36d47f40a4623b", "filename": "src/test/ui/missing-items/auxiliary/m1.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Fui%2Fmissing-items%2Fauxiliary%2Fm1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Fui%2Fmissing-items%2Fauxiliary%2Fm1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmissing-items%2Fauxiliary%2Fm1.rs?ref=13157c4ebcca735a0842bd03c3dad1de7c429f9f", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(associated_consts)]\n \n pub trait X {\n     const CONSTANT: u32;"}, {"sha": "ffd7ff7f4323d989b72fe5339497a5bfa3960acd", "filename": "src/test/ui/missing-items/m2.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Fui%2Fmissing-items%2Fm2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Fui%2Fmissing-items%2Fm2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmissing-items%2Fm2.rs?ref=13157c4ebcca735a0842bd03c3dad1de7c429f9f", "patch": "@@ -10,7 +10,6 @@\n \n // aux-build:m1.rs\n \n-#![feature(associated_consts)]\n \n extern crate m1;\n "}, {"sha": "ce061bd167a88c322179b80c5bd11c82bb22b010", "filename": "src/test/ui/missing-items/m2.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Fui%2Fmissing-items%2Fm2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Fui%2Fmissing-items%2Fm2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmissing-items%2Fm2.stderr?ref=13157c4ebcca735a0842bd03c3dad1de7c429f9f", "patch": "@@ -1,10 +1,10 @@\n error[E0601]: main function not found\n \n error[E0046]: not all trait items implemented, missing: `CONSTANT`, `Type`, `method`\n-  --> $DIR/m2.rs:20:1\n+  --> $DIR/m2.rs:19:1\n    |\n-20 | / impl m1::X for X {\n-21 | | }\n+19 | / impl m1::X for X {\n+20 | | }\n    | |_^ missing `CONSTANT`, `Type`, `method` in implementation\n    |\n    = note: `CONSTANT` from trait: `const CONSTANT: u32;`"}, {"sha": "091df1d5dc898852fa5fa115dc7e176439ad99b0", "filename": "src/test/ui/span/impl-wrong-item-for-trait.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Fui%2Fspan%2Fimpl-wrong-item-for-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Fui%2Fspan%2Fimpl-wrong-item-for-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fimpl-wrong-item-for-trait.rs?ref=13157c4ebcca735a0842bd03c3dad1de7c429f9f", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(associated_consts)]\n \n use std::fmt::Debug;\n "}, {"sha": "5812cab0d050a300d21bcb9ec0d4d87635267a8a", "filename": "src/test/ui/span/impl-wrong-item-for-trait.stderr", "status": "modified", "additions": 38, "deletions": 38, "changes": 76, "blob_url": "https://github.com/rust-lang/rust/blob/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Fui%2Fspan%2Fimpl-wrong-item-for-trait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Fui%2Fspan%2Fimpl-wrong-item-for-trait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fimpl-wrong-item-for-trait.stderr?ref=13157c4ebcca735a0842bd03c3dad1de7c429f9f", "patch": "@@ -1,86 +1,86 @@\n error[E0437]: type `bar` is not a member of trait `Foo`\n-  --> $DIR/impl-wrong-item-for-trait.rs:47:5\n+  --> $DIR/impl-wrong-item-for-trait.rs:46:5\n    |\n-47 |     type bar = u64;\n+46 |     type bar = u64;\n    |     ^^^^^^^^^^^^^^^ not a member of trait `Foo`\n \n error[E0323]: item `bar` is an associated const, which doesn't match its trait `Foo`\n-  --> $DIR/impl-wrong-item-for-trait.rs:25:5\n+  --> $DIR/impl-wrong-item-for-trait.rs:24:5\n    |\n-16 |     fn bar(&self);\n+15 |     fn bar(&self);\n    |     -------------- item in trait\n ...\n-25 |     const bar: u64 = 1;\n+24 |     const bar: u64 = 1;\n    |     ^^^^^^^^^^^^^^^^^^^ does not match trait\n \n error[E0046]: not all trait items implemented, missing: `bar`\n-  --> $DIR/impl-wrong-item-for-trait.rs:22:1\n+  --> $DIR/impl-wrong-item-for-trait.rs:21:1\n    |\n-16 |       fn bar(&self);\n+15 |       fn bar(&self);\n    |       -------------- `bar` from trait\n ...\n-22 | / impl Foo for FooConstForMethod {\n-23 | |     //~^ ERROR E0046\n-24 | |     //~| NOTE missing `bar` in implementation\n-25 | |     const bar: u64 = 1;\n+21 | / impl Foo for FooConstForMethod {\n+22 | |     //~^ ERROR E0046\n+23 | |     //~| NOTE missing `bar` in implementation\n+24 | |     const bar: u64 = 1;\n ...  |\n-28 | |     const MY_CONST: u32 = 1;\n-29 | | }\n+27 | |     const MY_CONST: u32 = 1;\n+28 | | }\n    | |_^ missing `bar` in implementation\n \n error[E0324]: item `MY_CONST` is an associated method, which doesn't match its trait `Foo`\n-  --> $DIR/impl-wrong-item-for-trait.rs:37:5\n+  --> $DIR/impl-wrong-item-for-trait.rs:36:5\n    |\n-17 |     const MY_CONST: u32;\n+16 |     const MY_CONST: u32;\n    |     -------------------- item in trait\n ...\n-37 |     fn MY_CONST() {}\n+36 |     fn MY_CONST() {}\n    |     ^^^^^^^^^^^^^^^^ does not match trait\n \n error[E0046]: not all trait items implemented, missing: `MY_CONST`\n-  --> $DIR/impl-wrong-item-for-trait.rs:33:1\n+  --> $DIR/impl-wrong-item-for-trait.rs:32:1\n    |\n-17 |       const MY_CONST: u32;\n+16 |       const MY_CONST: u32;\n    |       -------------------- `MY_CONST` from trait\n ...\n-33 | / impl Foo for FooMethodForConst {\n-34 | |     //~^ ERROR E0046\n-35 | |     //~| NOTE missing `MY_CONST` in implementation\n-36 | |     fn bar(&self) {}\n+32 | / impl Foo for FooMethodForConst {\n+33 | |     //~^ ERROR E0046\n+34 | |     //~| NOTE missing `MY_CONST` in implementation\n+35 | |     fn bar(&self) {}\n ...  |\n-39 | |     //~| NOTE does not match trait\n-40 | | }\n+38 | |     //~| NOTE does not match trait\n+39 | | }\n    | |_^ missing `MY_CONST` in implementation\n \n error[E0325]: item `bar` is an associated type, which doesn't match its trait `Foo`\n-  --> $DIR/impl-wrong-item-for-trait.rs:47:5\n+  --> $DIR/impl-wrong-item-for-trait.rs:46:5\n    |\n-16 |     fn bar(&self);\n+15 |     fn bar(&self);\n    |     -------------- item in trait\n ...\n-47 |     type bar = u64;\n+46 |     type bar = u64;\n    |     ^^^^^^^^^^^^^^^ does not match trait\n \n error[E0046]: not all trait items implemented, missing: `bar`\n-  --> $DIR/impl-wrong-item-for-trait.rs:44:1\n+  --> $DIR/impl-wrong-item-for-trait.rs:43:1\n    |\n-16 |       fn bar(&self);\n+15 |       fn bar(&self);\n    |       -------------- `bar` from trait\n ...\n-44 | / impl Foo for FooTypeForMethod {\n-45 | |     //~^ ERROR E0046\n-46 | |     //~| NOTE missing `bar` in implementation\n-47 | |     type bar = u64;\n+43 | / impl Foo for FooTypeForMethod {\n+44 | |     //~^ ERROR E0046\n+45 | |     //~| NOTE missing `bar` in implementation\n+46 | |     type bar = u64;\n ...  |\n-50 | |     const MY_CONST: u32 = 1;\n-51 | | }\n+49 | |     const MY_CONST: u32 = 1;\n+50 | | }\n    | |_^ missing `bar` in implementation\n \n error[E0046]: not all trait items implemented, missing: `fmt`\n-  --> $DIR/impl-wrong-item-for-trait.rs:53:1\n+  --> $DIR/impl-wrong-item-for-trait.rs:52:1\n    |\n-53 | / impl Debug for FooTypeForMethod {\n-54 | | }\n+52 | / impl Debug for FooTypeForMethod {\n+53 | | }\n    | |_^ missing `fmt` in implementation\n    |\n    = note: `fmt` from trait: `fn(&Self, &mut std::fmt::Formatter<'_>) -> std::result::Result<(), std::fmt::Error>`"}, {"sha": "ed7f2d1a92e75525d56a30ce51ef638415006218", "filename": "src/test/ui/span/issue-29595.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Fui%2Fspan%2Fissue-29595.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Fui%2Fspan%2Fissue-29595.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-29595.rs?ref=13157c4ebcca735a0842bd03c3dad1de7c429f9f", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(associated_consts)]\n \n trait Tr {\n     const C: Self;"}, {"sha": "81ba0057d717341dbc4dd8f75984f62d20370545", "filename": "src/test/ui/span/issue-29595.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Fui%2Fspan%2Fissue-29595.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/13157c4ebcca735a0842bd03c3dad1de7c429f9f/src%2Ftest%2Fui%2Fspan%2Fissue-29595.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-29595.stderr?ref=13157c4ebcca735a0842bd03c3dad1de7c429f9f", "patch": "@@ -1,7 +1,7 @@\n error[E0277]: the trait bound `u8: Tr` is not satisfied\n-  --> $DIR/issue-29595.rs:18:17\n+  --> $DIR/issue-29595.rs:17:17\n    |\n-18 |     let a: u8 = Tr::C; //~ ERROR the trait bound `u8: Tr` is not satisfied\n+17 |     let a: u8 = Tr::C; //~ ERROR the trait bound `u8: Tr` is not satisfied\n    |                 ^^^^^ the trait `Tr` is not implemented for `u8`\n    |\n    = note: required by `Tr::C`"}]}