{"sha": "b09a02b41588b2348fcce89c37c4a2cdc614d350", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIwOWEwMmI0MTU4OGIyMzQ4ZmNjZTg5YzM3YzRhMmNkYzYxNGQzNTA=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-08-06T10:26:30Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-08-06T10:26:30Z"}, "message": "auto merge of #16263 : brson/rust/morestack, r=alexcrichton", "tree": {"sha": "924fb3e16c9259cb88d475fa8da71182e02724e2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/924fb3e16c9259cb88d475fa8da71182e02724e2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b09a02b41588b2348fcce89c37c4a2cdc614d350", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b09a02b41588b2348fcce89c37c4a2cdc614d350", "html_url": "https://github.com/rust-lang/rust/commit/b09a02b41588b2348fcce89c37c4a2cdc614d350", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b09a02b41588b2348fcce89c37c4a2cdc614d350/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "84782c4e2681496d57f1ac91468d21df085b7782", "url": "https://api.github.com/repos/rust-lang/rust/commits/84782c4e2681496d57f1ac91468d21df085b7782", "html_url": "https://github.com/rust-lang/rust/commit/84782c4e2681496d57f1ac91468d21df085b7782"}, {"sha": "140825218dc18662565645988d75f5122aa8b61a", "url": "https://api.github.com/repos/rust-lang/rust/commits/140825218dc18662565645988d75f5122aa8b61a", "html_url": "https://github.com/rust-lang/rust/commit/140825218dc18662565645988d75f5122aa8b61a"}], "stats": {"total": 504, "additions": 0, "deletions": 504}, "files": [{"sha": "6b9432f0b39dbb6b93a52baf611aa4bb353db301", "filename": "src/test/run-fail/morestack1.rs", "status": "removed", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/84782c4e2681496d57f1ac91468d21df085b7782/src%2Ftest%2Frun-fail%2Fmorestack1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84782c4e2681496d57f1ac91468d21df085b7782/src%2Ftest%2Frun-fail%2Fmorestack1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fmorestack1.rs?ref=84782c4e2681496d57f1ac91468d21df085b7782", "patch": "@@ -1,23 +0,0 @@\n-// Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// ignore-test newsched transition\n-// error-pattern:fail\n-fn getbig(i: int) {\n-    if i != 0 {\n-        getbig(i - 1);\n-    } else {\n-        fail!();\n-    }\n-}\n-\n-fn main() {\n-    getbig(100000);\n-}"}, {"sha": "671530425908ac3fd91a3ad71257ea2f88a1aef8", "filename": "src/test/run-fail/morestack2.rs", "status": "removed", "additions": 0, "deletions": 67, "changes": 67, "blob_url": "https://github.com/rust-lang/rust/blob/84782c4e2681496d57f1ac91468d21df085b7782/src%2Ftest%2Frun-fail%2Fmorestack2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84782c4e2681496d57f1ac91468d21df085b7782/src%2Ftest%2Frun-fail%2Fmorestack2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fmorestack2.rs?ref=84782c4e2681496d57f1ac91468d21df085b7782", "patch": "@@ -1,67 +0,0 @@\n-// Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// ignore-test newsched transition\n-// error-pattern:explicit failure\n-\n-// This time we're testing that the stack limits are restored\n-// correctly after calling into the C stack and unwinding.\n-// See the hack in upcall_call_shim_on_c_stack where it messes\n-// with the stack limit.\n-\n-extern crate libc;\n-use std::task;\n-\n-mod rustrt {\n-    extern crate libc;\n-\n-    extern {\n-        pub fn rust_get_argc() -> libc::c_int;\n-    }\n-}\n-\n-fn getbig_call_c_and_fail(i: int) {\n-    if i != 0 {\n-        getbig_call_c_and_fail(i - 1);\n-    } else {\n-        unsafe {\n-            rustrt::rust_get_argc();\n-            fail!();\n-        }\n-    }\n-}\n-\n-struct and_then_get_big_again {\n-  x:int,\n-}\n-\n-impl Drop for and_then_get_big_again {\n-    fn drop(&mut self) {\n-        fn getbig(i: int) {\n-            if i != 0 {\n-                getbig(i - 1);\n-            }\n-        }\n-        getbig(10000);\n-    }\n-}\n-\n-fn and_then_get_big_again(x:int) -> and_then_get_big_again {\n-    and_then_get_big_again {\n-        x: x\n-    }\n-}\n-\n-fn main() {\n-    task::spawn(proc() {\n-        let r = and_then_get_big_again(4);\n-        getbig_call_c_and_fail(10000);\n-    });\n-}"}, {"sha": "2e4aafb9b0d19d0b72c4ebb59daead410e627b7f", "filename": "src/test/run-fail/morestack3.rs", "status": "removed", "additions": 0, "deletions": 52, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/84782c4e2681496d57f1ac91468d21df085b7782/src%2Ftest%2Frun-fail%2Fmorestack3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84782c4e2681496d57f1ac91468d21df085b7782/src%2Ftest%2Frun-fail%2Fmorestack3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fmorestack3.rs?ref=84782c4e2681496d57f1ac91468d21df085b7782", "patch": "@@ -1,52 +0,0 @@\n-// Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// ignore-test newsched transition\n-// error-pattern:explicit failure\n-\n-// Just testing unwinding\n-\n-use std::task;\n-\n-fn getbig_and_fail(i: int) {\n-    let _r = and_then_get_big_again(5);\n-    if i != 0 {\n-        getbig_and_fail(i - 1);\n-    } else {\n-        fail!();\n-    }\n-}\n-\n-struct and_then_get_big_again {\n-  x:int,\n-}\n-\n-impl Drop for and_then_get_big_again {\n-    fn drop(&mut self) {\n-        fn getbig(i: int) {\n-            if i != 0 {\n-                getbig(i - 1);\n-            }\n-        }\n-        getbig(100);\n-    }\n-}\n-\n-fn and_then_get_big_again(x:int) -> and_then_get_big_again {\n-    and_then_get_big_again {\n-        x: x\n-    }\n-}\n-\n-fn main() {\n-    task::spawn(proc() {\n-        getbig_and_fail(400);\n-    });\n-}"}, {"sha": "6d326779ca2ed71bf6427d4527dd7c097ca44ab3", "filename": "src/test/run-fail/morestack4.rs", "status": "removed", "additions": 0, "deletions": 45, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/84782c4e2681496d57f1ac91468d21df085b7782/src%2Ftest%2Frun-fail%2Fmorestack4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84782c4e2681496d57f1ac91468d21df085b7782/src%2Ftest%2Frun-fail%2Fmorestack4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fmorestack4.rs?ref=84782c4e2681496d57f1ac91468d21df085b7782", "patch": "@@ -1,45 +0,0 @@\n-// Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// ignore-test newsched transition\n-// error-pattern:explicit failure\n-\n-// Just testing unwinding\n-\n-use std::task;\n-\n-fn getbig_and_fail(i: int) {\n-    let r = and_then_get_big_again(5);\n-    if i != 0 {\n-        getbig_and_fail(i - 1);\n-    } else {\n-        fail!();\n-    }\n-}\n-\n-struct and_then_get_big_again {\n-  x:int,\n-}\n-\n-impl Drop for and_then_get_big_again {\n-    fn drop(&mut self) {}\n-}\n-\n-fn and_then_get_big_again(x:int) -> and_then_get_big_again {\n-    and_then_get_big_again {\n-        x: x\n-    }\n-}\n-\n-fn main() {\n-    task::spawn(proc() {\n-        getbig_and_fail(1);\n-    });\n-}"}, {"sha": "fc955d738fd3003f7e85f9e52b7c78904fbfb0a0", "filename": "src/test/run-pass/morestack1.rs", "status": "removed", "additions": 0, "deletions": 21, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/84782c4e2681496d57f1ac91468d21df085b7782/src%2Ftest%2Frun-pass%2Fmorestack1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84782c4e2681496d57f1ac91468d21df085b7782/src%2Ftest%2Frun-pass%2Fmorestack1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmorestack1.rs?ref=84782c4e2681496d57f1ac91468d21df085b7782", "patch": "@@ -1,21 +0,0 @@\n-// Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// ignore-test newsched transition\n-\n-fn getbig(i: int) {\n-    if i != 0 {\n-        getbig(i - 1);\n-    }\n-}\n-\n-pub fn main() {\n-    getbig(100000);\n-}"}, {"sha": "2390dd3101dc9c36e1de126111281ed03f2c445f", "filename": "src/test/run-pass/morestack2.rs", "status": "removed", "additions": 0, "deletions": 26, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/84782c4e2681496d57f1ac91468d21df085b7782/src%2Ftest%2Frun-pass%2Fmorestack2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84782c4e2681496d57f1ac91468d21df085b7782/src%2Ftest%2Frun-pass%2Fmorestack2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmorestack2.rs?ref=84782c4e2681496d57f1ac91468d21df085b7782", "patch": "@@ -1,26 +0,0 @@\n-// Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// ignore-test newsched transition\n-\n-fn getbig(i: int) -> int {\n-    let m = if i >= 0 {\n-        let j = getbig(i - 1);\n-        let k = getbig(j - 1);\n-        k\n-    } else {\n-        0\n-    };\n-    m\n-}\n-\n-pub fn main() {\n-    getbig(10000);\n-}"}, {"sha": "02b9fec1c6555120bd70ae3c571f837c2485c247", "filename": "src/test/run-pass/morestack3.rs", "status": "removed", "additions": 0, "deletions": 54, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/84782c4e2681496d57f1ac91468d21df085b7782/src%2Ftest%2Frun-pass%2Fmorestack3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84782c4e2681496d57f1ac91468d21df085b7782/src%2Ftest%2Frun-pass%2Fmorestack3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmorestack3.rs?ref=84782c4e2681496d57f1ac91468d21df085b7782", "patch": "@@ -1,54 +0,0 @@\n-// Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// ignore-test newsched transition\n-\n-// Here we're testing that all of the argument registers, argument\n-// stack slots, and return value are preserved across split stacks.\n-fn getbig(a0: int,\n-          a1: int,\n-          a2: int,\n-          a3: int,\n-          a4: int,\n-          a5: int,\n-          a6: int,\n-          a7: int,\n-          a8: int,\n-          a9: int) -> int {\n-\n-    assert_eq!(a0 + 1, a1);\n-    assert_eq!(a1 + 1, a2);\n-    assert_eq!(a2 + 1, a3);\n-    assert_eq!(a3 + 1, a4);\n-    assert_eq!(a4 + 1, a5);\n-    assert_eq!(a5 + 1, a6);\n-    assert_eq!(a6 + 1, a7);\n-    assert_eq!(a7 + 1, a8);\n-    assert_eq!(a8 + 1, a9);\n-    if a0 != 0 {\n-        let j = getbig(a0 - 1,\n-                       a1 - 1,\n-                       a2 - 1,\n-                       a3 - 1,\n-                       a4 - 1,\n-                       a5 - 1,\n-                       a6 - 1,\n-                       a7 - 1,\n-                       a8 - 1,\n-                       a9 - 1);\n-        assert_eq!(j, a0 - 1);\n-    }\n-    return a0;\n-}\n-\n-pub fn main() {\n-    let a = 1000;\n-    getbig(a, a+1, a+2, a+3, a+4, a+5, a+6, a+7, a+8, a+9);\n-}"}, {"sha": "d5c4b04af8872e9b98200088f31f421728291868", "filename": "src/test/run-pass/morestack4.rs", "status": "removed", "additions": 0, "deletions": 109, "changes": 109, "blob_url": "https://github.com/rust-lang/rust/blob/84782c4e2681496d57f1ac91468d21df085b7782/src%2Ftest%2Frun-pass%2Fmorestack4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84782c4e2681496d57f1ac91468d21df085b7782/src%2Ftest%2Frun-pass%2Fmorestack4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmorestack4.rs?ref=84782c4e2681496d57f1ac91468d21df085b7782", "patch": "@@ -1,109 +0,0 @@\n-// Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// ignore-test newsched transition\n-\n-// This is testing for stack frames greater than 256 bytes,\n-// for which function prologues are generated differently\n-\n-struct Biggy {\n-    a00: u64,\n-    a01: u64,\n-    a02: u64,\n-    a03: u64,\n-    a04: u64,\n-    a05: u64,\n-    a06: u64,\n-    a07: u64,\n-    a08: u64,\n-    a09: u64,\n-    a10: u64,\n-    a11: u64,\n-    a12: u64,\n-    a13: u64,\n-    a14: u64,\n-    a15: u64,\n-    a16: u64,\n-    a17: u64,\n-    a18: u64,\n-    a19: u64,\n-    a20: u64,\n-    a21: u64,\n-    a22: u64,\n-    a23: u64,\n-    a24: u64,\n-    a25: u64,\n-    a26: u64,\n-    a27: u64,\n-    a28: u64,\n-    a29: u64,\n-    a30: u64,\n-    a31: u64,\n-    a32: u64,\n-    a33: u64,\n-    a34: u64,\n-    a35: u64,\n-    a36: u64,\n-    a37: u64,\n-    a38: u64,\n-    a39: u64,\n-}\n-\n-\n-fn getbig(i: Biggy) {\n-    if i.a00 != 0u64 {\n-        getbig(Biggy{a00: i.a00 - 1u64,.. i});\n-    }\n-}\n-\n-pub fn main() {\n-    getbig(Biggy {\n-        a00: 10000u64,\n-        a01: 10000u64,\n-        a02: 10000u64,\n-        a03: 10000u64,\n-        a04: 10000u64,\n-        a05: 10000u64,\n-        a06: 10000u64,\n-        a07: 10000u64,\n-        a08: 10000u64,\n-        a09: 10000u64,\n-        a10: 10000u64,\n-        a11: 10000u64,\n-        a12: 10000u64,\n-        a13: 10000u64,\n-        a14: 10000u64,\n-        a15: 10000u64,\n-        a16: 10000u64,\n-        a17: 10000u64,\n-        a18: 10000u64,\n-        a19: 10000u64,\n-        a20: 10000u64,\n-        a21: 10000u64,\n-        a22: 10000u64,\n-        a23: 10000u64,\n-        a24: 10000u64,\n-        a25: 10000u64,\n-        a26: 10000u64,\n-        a27: 10000u64,\n-        a28: 10000u64,\n-        a29: 10000u64,\n-        a30: 10000u64,\n-        a31: 10000u64,\n-        a32: 10000u64,\n-        a33: 10000u64,\n-        a34: 10000u64,\n-        a35: 10000u64,\n-        a36: 10000u64,\n-        a37: 10000u64,\n-        a38: 10000u64,\n-        a39: 10000u64,\n-    });\n-}"}, {"sha": "65dabba191bc820f845e36a41a63ef1419e78896", "filename": "src/test/run-pass/morestack5.rs", "status": "removed", "additions": 0, "deletions": 29, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/84782c4e2681496d57f1ac91468d21df085b7782/src%2Ftest%2Frun-pass%2Fmorestack5.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84782c4e2681496d57f1ac91468d21df085b7782/src%2Ftest%2Frun-pass%2Fmorestack5.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmorestack5.rs?ref=84782c4e2681496d57f1ac91468d21df085b7782", "patch": "@@ -1,29 +0,0 @@\n-// Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// ignore-test newsched transition\n-\n-// This test will call __morestack with various minimum stack sizes\n-\n-use std::task;\n-\n-fn getbig(i: int) {\n-    if i != 0 {\n-        getbig(i - 1);\n-    }\n-}\n-\n-pub fn main() {\n-    let mut sz = 400u;\n-    while sz < 500u {\n-        task::try(|| getbig(200) );\n-        sz += 1u;\n-    }\n-}"}, {"sha": "f1ba95b5efe90d26998327917f801e705906432e", "filename": "src/test/run-pass/morestack6.rs", "status": "removed", "additions": 0, "deletions": 78, "changes": 78, "blob_url": "https://github.com/rust-lang/rust/blob/84782c4e2681496d57f1ac91468d21df085b7782/src%2Ftest%2Frun-pass%2Fmorestack6.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84782c4e2681496d57f1ac91468d21df085b7782/src%2Ftest%2Frun-pass%2Fmorestack6.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmorestack6.rs?ref=84782c4e2681496d57f1ac91468d21df085b7782", "patch": "@@ -1,78 +0,0 @@\n-// Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// ignore-test newsched transition\n-\n-// This test attempts to force the dynamic linker to resolve\n-// external symbols as close to the red zone as possible.\n-\n-extern crate rand;\n-\n-use std::task;\n-\n-mod rustrt {\n-    extern crate libc;\n-\n-    extern {\n-        pub fn debug_get_stk_seg() -> *u8;\n-\n-        pub fn rust_get_sched_id() -> libc::intptr_t;\n-        pub fn rust_get_argc() -> libc::c_int;\n-        pub fn get_task_id() -> libc::intptr_t;\n-        pub fn rust_get_task();\n-    }\n-}\n-\n-fn calllink01() { unsafe { rustrt::rust_get_sched_id(); } }\n-fn calllink02() { unsafe { rustrt::rust_get_argc(); } }\n-fn calllink08() { unsafe { rustrt::get_task_id(); } }\n-fn calllink10() { unsafe { rustrt::rust_get_task(); } }\n-\n-fn runtest(f: extern fn(), frame_backoff: u32) {\n-    runtest2(f, frame_backoff, 0 as *u8);\n-}\n-\n-fn runtest2(f: extern fn(), frame_backoff: u32, last_stk: *u8) -> u32 {\n-    unsafe {\n-        let curr_stk = rustrt::debug_get_stk_seg();\n-        if (last_stk != curr_stk && last_stk != 0 as *u8) {\n-            // We switched stacks, go back and try to hit the dynamic linker\n-            frame_backoff\n-        } else {\n-            let frame_backoff = runtest2(f, frame_backoff, curr_stk);\n-            if frame_backoff > 1u32 {\n-                frame_backoff - 1u32\n-            } else if frame_backoff == 1u32 {\n-                f();\n-                0u32\n-            } else {\n-                0u32\n-            }\n-        }\n-    }\n-}\n-\n-pub fn main() {\n-    use rand::Rng;\n-    let fns = vec!(\n-        calllink01,\n-        calllink02,\n-        calllink08,\n-        calllink10\n-    );\n-    let mut rng = rand::task_rng();\n-\n-    for f in fns.iter() {\n-        let f = *f;\n-        let sz = rng.gen::<u32>() % 256u32 + 256u32;\n-        let frame_backoff = rng.gen::<u32>() % 10u32 + 1u32;\n-        task::try(|| runtest(f, frame_backoff) );\n-    }\n-}"}]}