{"sha": "96bdb398f9429fca79821cfe8aab828f52f8b710", "node_id": "C_kwDOAAsO6NoAKDk2YmRiMzk4Zjk0MjlmY2E3OTgyMWNmZThhYWI4MjhmNTJmOGI3MTA", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-07-05T09:36:29Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-07-05T09:36:29Z"}, "message": "Auto merge of #96862 - oli-obk:enum_cast_mir, r=RalfJung\n\nChange enum->int casts to not go through MIR casts.\n\nfollow-up to https://github.com/rust-lang/rust/pull/96814\n\nthis simplifies all backends and even gives LLVM more information about the return value of `Rvalue::Discriminant`, enabling optimizations in more cases.", "tree": {"sha": "493af06441dba429028135b3857d005ab6f57fdc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/493af06441dba429028135b3857d005ab6f57fdc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/96bdb398f9429fca79821cfe8aab828f52f8b710", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/96bdb398f9429fca79821cfe8aab828f52f8b710", "html_url": "https://github.com/rust-lang/rust/commit/96bdb398f9429fca79821cfe8aab828f52f8b710", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/96bdb398f9429fca79821cfe8aab828f52f8b710/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a71e691e74e06d0f3d50daee7510ce240f2b1783", "url": "https://api.github.com/repos/rust-lang/rust/commits/a71e691e74e06d0f3d50daee7510ce240f2b1783", "html_url": "https://github.com/rust-lang/rust/commit/a71e691e74e06d0f3d50daee7510ce240f2b1783"}, {"sha": "846eecb1a40210b287b92ea1750aedcf478067ae", "url": "https://api.github.com/repos/rust-lang/rust/commits/846eecb1a40210b287b92ea1750aedcf478067ae", "html_url": "https://github.com/rust-lang/rust/commit/846eecb1a40210b287b92ea1750aedcf478067ae"}], "stats": {"total": 23, "additions": 0, "deletions": 23}, "files": [{"sha": "f71d749df629cfd811854f0d44a5a40e9f2d220e", "filename": "src/base.rs", "status": "modified", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/96bdb398f9429fca79821cfe8aab828f52f8b710/src%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96bdb398f9429fca79821cfe8aab828f52f8b710/src%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbase.rs?ref=96bdb398f9429fca79821cfe8aab828f52f8b710", "patch": "@@ -635,29 +635,6 @@ fn codegen_stmt<'tcx>(\n                             let (ptr, _extra) = operand.load_scalar_pair(fx);\n                             lval.write_cvalue(fx, CValue::by_val(ptr, dest_layout))\n                         }\n-                    } else if let ty::Adt(adt_def, _substs) = from_ty.kind() {\n-                        // enum -> discriminant value\n-                        assert!(adt_def.is_enum());\n-                        match to_ty.kind() {\n-                            ty::Uint(_) | ty::Int(_) => {}\n-                            _ => unreachable!(\"cast adt {} -> {}\", from_ty, to_ty),\n-                        }\n-                        let to_clif_ty = fx.clif_type(to_ty).unwrap();\n-\n-                        let discriminant = crate::discriminant::codegen_get_discriminant(\n-                            fx,\n-                            operand,\n-                            fx.layout_of(operand.layout().ty.discriminant_ty(fx.tcx)),\n-                        )\n-                        .load_scalar(fx);\n-\n-                        let res = crate::cast::clif_intcast(\n-                            fx,\n-                            discriminant,\n-                            to_clif_ty,\n-                            to_ty.is_signed(),\n-                        );\n-                        lval.write_cvalue(fx, CValue::by_val(res, dest_layout));\n                     } else {\n                         let to_clif_ty = fx.clif_type(to_ty).unwrap();\n                         let from = operand.load_scalar(fx);"}]}