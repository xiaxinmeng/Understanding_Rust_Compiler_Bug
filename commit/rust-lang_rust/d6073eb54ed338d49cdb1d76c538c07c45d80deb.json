{"sha": "d6073eb54ed338d49cdb1d76c538c07c45d80deb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ2MDczZWI1NGVkMzM4ZDQ5Y2RiMWQ3NmM1MzhjMDdjNDVkODBkZWI=", "commit": {"author": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-04-14T19:24:46Z"}, "committer": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-04-14T20:07:14Z"}, "message": "Fix regex tests", "tree": {"sha": "b59b6ef0792f57f607e86934afb7354e432728e3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b59b6ef0792f57f607e86934afb7354e432728e3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d6073eb54ed338d49cdb1d76c538c07c45d80deb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d6073eb54ed338d49cdb1d76c538c07c45d80deb", "html_url": "https://github.com/rust-lang/rust/commit/d6073eb54ed338d49cdb1d76c538c07c45d80deb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d6073eb54ed338d49cdb1d76c538c07c45d80deb/comments", "author": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a878916ad54eba5e92a3e6f0906e5099b26815d1", "url": "https://api.github.com/repos/rust-lang/rust/commits/a878916ad54eba5e92a3e6f0906e5099b26815d1", "html_url": "https://github.com/rust-lang/rust/commit/a878916ad54eba5e92a3e6f0906e5099b26815d1"}], "stats": {"total": 21, "additions": 13, "deletions": 8}, "files": [{"sha": "1bc48b0b002435a3f86151e4acdfad74ccaac955", "filename": ".travis.yml", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/d6073eb54ed338d49cdb1d76c538c07c45d80deb/.travis.yml", "raw_url": "https://github.com/rust-lang/rust/raw/d6073eb54ed338d49cdb1d76c538c07c45d80deb/.travis.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.travis.yml?ref=d6073eb54ed338d49cdb1d76c538c07c45d80deb", "patch": "@@ -13,8 +13,13 @@ script:\n  - rm -rf target/ Cargo.lock\n  - cargo test --features debugging\n \n- # only test regex_macros if it compiles\n- - if [[ \"$(cargo build --features 'debugging test-regex_macros')\" = 101 ]]; then cargo test --features 'debugging test-regex_macros'; fi\n+ - # only test regex_macros if it compiles\n+ - |\n+    #!/bin/bash\n+    cargo test --no-run --features 'debugging test-regex_macros'\n+    if [ \"$?\" = 101 ]; then\n+        cargo test --features 'debugging test-regex_macros'\n+    fi\n \n # trigger rebuild of the clippy-service, to keep it up to date with clippy itself\n after_success:"}, {"sha": "6dcd1ff052459e64c9d74a3671366973b4b3615a", "filename": "tests/compile-test.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/d6073eb54ed338d49cdb1d76c538c07c45d80deb/tests%2Fcompile-test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6073eb54ed338d49cdb1d76c538c07c45d80deb/tests%2Fcompile-test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-test.rs?ref=d6073eb54ed338d49cdb1d76c538c07c45d80deb", "patch": "@@ -3,7 +3,7 @@ extern crate compiletest_rs as compiletest;\n use std::path::PathBuf;\n use std::env::var;\n \n-fn run_mode(mode: &'static str) {\n+fn run_mode(dir: &'static str, mode: &'static str) {\n     let mut config = compiletest::default_config();\n \n     let cfg_mode = mode.parse().ok().expect(\"Invalid mode\");\n@@ -14,21 +14,21 @@ fn run_mode(mode: &'static str) {\n     }\n \n     config.mode = cfg_mode;\n-    config.src_base = PathBuf::from(format!(\"tests/{}\", mode));\n+    config.src_base = PathBuf::from(format!(\"tests/{}\", dir));\n \n     compiletest::run_tests(&config);\n }\n \n #[test]\n #[cfg(not(feature = \"test-regex_macros\"))]\n fn compile_test() {\n-    run_mode(\"run-pass\");\n-    run_mode(\"compile-fail\");\n+    run_mode(\"run-pass\", \"run-pass\");\n+    run_mode(\"compile-fail\", \"compile-fail\");\n }\n \n #[test]\n #[cfg(feature = \"test-regex_macros\")]\n fn compile_test() {\n-    run_mode(\"run-pass-regex_macros\");\n-    run_mode(\"compile-fail-regex_macros\");\n+    run_mode(\"run-pass-regex_macros\", \"run-pass\");\n+    run_mode(\"compile-fail-regex_macros\", \"compile-fail\");\n }"}]}