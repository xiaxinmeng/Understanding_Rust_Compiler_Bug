{"sha": "ebc3a87fb45b37e0016a0e85210b55fca97e2cdd", "node_id": "MDY6Q29tbWl0NzI0NzEyOmViYzNhODdmYjQ1YjM3ZTAwMTZhMGU4NTIxMGI1NWZjYTk3ZTJjZGQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-08-04T03:51:32Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-08-04T03:51:32Z"}, "message": "Auto merge of #27500 - michaelwoerister:bring-gdb-pp-tests-back, r=alexcrichton\n\nThis test case has been removed a while ago because it allegedly was broken. But I don't think it is (at least I couldn't reproduce any failure on Linux). Let's give it another chance `:)`", "tree": {"sha": "0cf5d03bbb5fb2d9fe17ca604bb39e7de546df1f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0cf5d03bbb5fb2d9fe17ca604bb39e7de546df1f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ebc3a87fb45b37e0016a0e85210b55fca97e2cdd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ebc3a87fb45b37e0016a0e85210b55fca97e2cdd", "html_url": "https://github.com/rust-lang/rust/commit/ebc3a87fb45b37e0016a0e85210b55fca97e2cdd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ebc3a87fb45b37e0016a0e85210b55fca97e2cdd/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "38517944f0360c139dc9db89164361a909c0a180", "url": "https://api.github.com/repos/rust-lang/rust/commits/38517944f0360c139dc9db89164361a909c0a180", "html_url": "https://github.com/rust-lang/rust/commit/38517944f0360c139dc9db89164361a909c0a180"}, {"sha": "354cf4b56b8e2af67cc68965eb816deec0e79e4b", "url": "https://api.github.com/repos/rust-lang/rust/commits/354cf4b56b8e2af67cc68965eb816deec0e79e4b", "html_url": "https://github.com/rust-lang/rust/commit/354cf4b56b8e2af67cc68965eb816deec0e79e4b"}], "stats": {"total": 188, "additions": 188, "deletions": 0}, "files": [{"sha": "56a973fa59f668398eff78903937e9d810046630", "filename": "src/test/debuginfo/gdb-pretty-struct-and-enums.rs", "status": "added", "additions": 188, "deletions": 0, "changes": 188, "blob_url": "https://github.com/rust-lang/rust/blob/ebc3a87fb45b37e0016a0e85210b55fca97e2cdd/src%2Ftest%2Fdebuginfo%2Fgdb-pretty-struct-and-enums.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ebc3a87fb45b37e0016a0e85210b55fca97e2cdd/src%2Ftest%2Fdebuginfo%2Fgdb-pretty-struct-and-enums.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fgdb-pretty-struct-and-enums.rs?ref=ebc3a87fb45b37e0016a0e85210b55fca97e2cdd", "patch": "@@ -0,0 +1,188 @@\n+// Copyright 2013-2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// ignore-windows failing on win32 bot\n+// ignore-freebsd: output doesn't match\n+// ignore-tidy-linelength\n+// ignore-lldb\n+// ignore-android: FIXME(#10381)\n+// compile-flags:-g\n+\n+// This test uses some GDB Python API features (e.g. accessing anonymous fields)\n+// which are only available in newer GDB version. The following directive will\n+// case the test runner to ignore this test if an older GDB version is used:\n+// min-gdb-version 7.7\n+\n+// gdb-command: run\n+\n+// gdb-command: print regular_struct\n+// gdb-check:$1 = RegularStruct = {the_first_field = 101, the_second_field = 102.5, the_third_field = false, the_fourth_field = \"I'm so pretty, oh so pretty...\"}\n+\n+// gdb-command: print tuple\n+// gdb-check:$2 = {true, 103, \"blub\"}\n+\n+// gdb-command: print tuple_struct\n+// gdb-check:$3 = TupleStruct = {-104.5, 105}\n+\n+// gdb-command: print empty_struct\n+// gdb-check:$4 = EmptyStruct\n+\n+// gdb-command: print c_style_enum1\n+// gdb-check:$5 = CStyleEnumVar1\n+\n+// gdb-command: print c_style_enum2\n+// gdb-check:$6 = CStyleEnumVar2\n+\n+// gdb-command: print c_style_enum3\n+// gdb-check:$7 = CStyleEnumVar3\n+\n+// gdb-command: print mixed_enum_c_style_var\n+// gdb-check:$8 = MixedEnumCStyleVar\n+\n+// gdb-command: print mixed_enum_tuple_var\n+// gdb-check:$9 = MixedEnumTupleVar = {106, 107, false}\n+\n+// gdb-command: print mixed_enum_struct_var\n+// gdb-check:$10 = MixedEnumStructVar = {field1 = 108.5, field2 = 109}\n+\n+// gdb-command: print some\n+// gdb-check:$11 = Some = {110}\n+\n+// gdb-command: print none\n+// gdb-check:$12 = None\n+\n+// gdb-command: print some_fat\n+// gdb-check:$13 = Some = {\"abc\"}\n+\n+// gdb-command: print none_fat\n+// gdb-check:$14 = None\n+\n+// gdb-command: print nested_variant1\n+// gdb-check:$15 = NestedVariant1 = {NestedStruct = {regular_struct = RegularStruct = {the_first_field = 111, the_second_field = 112.5, the_third_field = true, the_fourth_field = \"NestedStructString1\"}, tuple_struct = TupleStruct = {113.5, 114}, empty_struct = EmptyStruct, c_style_enum = CStyleEnumVar2, mixed_enum = MixedEnumTupleVar = {115, 116, false}}}\n+\n+// gdb-command: print nested_variant2\n+// gdb-check:$16 = NestedVariant2 = {abc = NestedStruct = {regular_struct = RegularStruct = {the_first_field = 117, the_second_field = 118.5, the_third_field = false, the_fourth_field = \"NestedStructString10\"}, tuple_struct = TupleStruct = {119.5, 120}, empty_struct = EmptyStruct, c_style_enum = CStyleEnumVar3, mixed_enum = MixedEnumStructVar = {field1 = 121.5, field2 = -122}}}\n+\n+// gdb-command: print none_check1\n+// gdb-check:$17 = None\n+\n+// gdb-command: print none_check2\n+// gdb-check:$18 = None\n+\n+#![allow(dead_code, unused_variables)]\n+\n+use self::CStyleEnum::{CStyleEnumVar1, CStyleEnumVar2, CStyleEnumVar3};\n+use self::MixedEnum::{MixedEnumCStyleVar, MixedEnumTupleVar, MixedEnumStructVar};\n+use self::NestedEnum::{NestedVariant1, NestedVariant2};\n+\n+struct RegularStruct {\n+    the_first_field: isize,\n+    the_second_field: f64,\n+    the_third_field: bool,\n+    the_fourth_field: &'static str,\n+}\n+\n+struct TupleStruct(f64, i16);\n+\n+struct EmptyStruct;\n+\n+enum CStyleEnum {\n+    CStyleEnumVar1,\n+    CStyleEnumVar2,\n+    CStyleEnumVar3,\n+}\n+\n+enum MixedEnum {\n+    MixedEnumCStyleVar,\n+    MixedEnumTupleVar(u32, u16, bool),\n+    MixedEnumStructVar { field1: f64, field2: i32 }\n+}\n+\n+struct NestedStruct {\n+    regular_struct: RegularStruct,\n+    tuple_struct: TupleStruct,\n+    empty_struct: EmptyStruct,\n+    c_style_enum: CStyleEnum,\n+    mixed_enum: MixedEnum,\n+}\n+\n+enum NestedEnum {\n+    NestedVariant1(NestedStruct),\n+    NestedVariant2 { abc: NestedStruct }\n+}\n+\n+fn main() {\n+\n+    let regular_struct = RegularStruct {\n+        the_first_field: 101,\n+        the_second_field: 102.5,\n+        the_third_field: false,\n+        the_fourth_field: \"I'm so pretty, oh so pretty...\"\n+    };\n+\n+    let tuple = ( true, 103u32, \"blub\" );\n+\n+    let tuple_struct = TupleStruct(-104.5, 105);\n+\n+    let empty_struct = EmptyStruct;\n+\n+    let c_style_enum1 = CStyleEnumVar1;\n+    let c_style_enum2 = CStyleEnumVar2;\n+    let c_style_enum3 = CStyleEnumVar3;\n+\n+    let mixed_enum_c_style_var = MixedEnumCStyleVar;\n+    let mixed_enum_tuple_var = MixedEnumTupleVar(106, 107, false);\n+    let mixed_enum_struct_var = MixedEnumStructVar { field1: 108.5, field2: 109 };\n+\n+    let some = Some(110_usize);\n+    let none: Option<isize> = None;\n+    let some_fat = Some(\"abc\");\n+    let none_fat: Option<&'static str> = None;\n+\n+    let nested_variant1 = NestedVariant1(\n+        NestedStruct {\n+            regular_struct: RegularStruct {\n+                the_first_field: 111,\n+                the_second_field: 112.5,\n+                the_third_field: true,\n+                the_fourth_field: \"NestedStructString1\",\n+            },\n+            tuple_struct: TupleStruct(113.5, 114),\n+            empty_struct: EmptyStruct,\n+            c_style_enum: CStyleEnumVar2,\n+            mixed_enum: MixedEnumTupleVar(115, 116, false)\n+        }\n+    );\n+\n+    let nested_variant2 = NestedVariant2 {\n+        abc: NestedStruct {\n+            regular_struct: RegularStruct {\n+                the_first_field: 117,\n+                the_second_field: 118.5,\n+                the_third_field: false,\n+                the_fourth_field: \"NestedStructString10\",\n+            },\n+            tuple_struct: TupleStruct(119.5, 120),\n+            empty_struct: EmptyStruct,\n+            c_style_enum: CStyleEnumVar3,\n+            mixed_enum: MixedEnumStructVar {\n+                field1: 121.5,\n+                field2: -122\n+            }\n+        }\n+    };\n+\n+    let none_check1: Option<(usize, Vec<usize>)> = None;\n+    let none_check2: Option<String> = None;\n+\n+    zzz(); // #break\n+}\n+\n+fn zzz() { () }"}]}