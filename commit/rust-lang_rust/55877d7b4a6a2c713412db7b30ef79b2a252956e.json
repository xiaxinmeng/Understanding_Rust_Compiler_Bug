{"sha": "55877d7b4a6a2c713412db7b30ef79b2a252956e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU1ODc3ZDdiNGE2YTJjNzEzNDEyZGI3YjMwZWY3OWIyYTI1Mjk1NmU=", "commit": {"author": {"name": "Robert Sedlacek", "email": "rs@474.at", "date": "2020-02-09T16:57:35Z"}, "committer": {"name": "Robert Sedlacek", "email": "rs@474.at", "date": "2020-07-03T16:12:29Z"}, "message": "span_help_and_lint -> span_lint_and_help", "tree": {"sha": "7ad25d24e81ae1e74ef646cde50677645d72477f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7ad25d24e81ae1e74ef646cde50677645d72477f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/55877d7b4a6a2c713412db7b30ef79b2a252956e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/55877d7b4a6a2c713412db7b30ef79b2a252956e", "html_url": "https://github.com/rust-lang/rust/commit/55877d7b4a6a2c713412db7b30ef79b2a252956e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/55877d7b4a6a2c713412db7b30ef79b2a252956e/comments", "author": {"login": "phaylon", "id": 41822, "node_id": "MDQ6VXNlcjQxODIy", "avatar_url": "https://avatars.githubusercontent.com/u/41822?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phaylon", "html_url": "https://github.com/phaylon", "followers_url": "https://api.github.com/users/phaylon/followers", "following_url": "https://api.github.com/users/phaylon/following{/other_user}", "gists_url": "https://api.github.com/users/phaylon/gists{/gist_id}", "starred_url": "https://api.github.com/users/phaylon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phaylon/subscriptions", "organizations_url": "https://api.github.com/users/phaylon/orgs", "repos_url": "https://api.github.com/users/phaylon/repos", "events_url": "https://api.github.com/users/phaylon/events{/privacy}", "received_events_url": "https://api.github.com/users/phaylon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "phaylon", "id": 41822, "node_id": "MDQ6VXNlcjQxODIy", "avatar_url": "https://avatars.githubusercontent.com/u/41822?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phaylon", "html_url": "https://github.com/phaylon", "followers_url": "https://api.github.com/users/phaylon/followers", "following_url": "https://api.github.com/users/phaylon/following{/other_user}", "gists_url": "https://api.github.com/users/phaylon/gists{/gist_id}", "starred_url": "https://api.github.com/users/phaylon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phaylon/subscriptions", "organizations_url": "https://api.github.com/users/phaylon/orgs", "repos_url": "https://api.github.com/users/phaylon/repos", "events_url": "https://api.github.com/users/phaylon/events{/privacy}", "received_events_url": "https://api.github.com/users/phaylon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c3c402783f1d12852982f9dc734cc4c07b9fce33", "url": "https://api.github.com/repos/rust-lang/rust/commits/c3c402783f1d12852982f9dc734cc4c07b9fce33", "html_url": "https://github.com/rust-lang/rust/commit/c3c402783f1d12852982f9dc734cc4c07b9fce33"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "d3f65db1916e75cac3978d622d02490188d73444", "filename": "clippy_lints/src/pattern_type_mismatch.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/55877d7b4a6a2c713412db7b30ef79b2a252956e/clippy_lints%2Fsrc%2Fpattern_type_mismatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55877d7b4a6a2c713412db7b30ef79b2a252956e/clippy_lints%2Fsrc%2Fpattern_type_mismatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fpattern_type_mismatch.rs?ref=55877d7b4a6a2c713412db7b30ef79b2a252956e", "patch": "@@ -1,4 +1,4 @@\n-use crate::utils::{last_path_segment, span_help_and_lint};\n+use crate::utils::{last_path_segment, span_lint_and_help};\n use rustc::lint::in_external_macro;\n use rustc::ty::subst::SubstsRef;\n use rustc::ty::{AdtDef, FieldDef, Ty, TyKind, VariantDef};\n@@ -115,7 +115,7 @@ fn apply_lint<'a, 'tcx>(\n ) -> bool {\n     let maybe_mismatch = find_first_mismatch(cx, pat, expr_ty, Level::Top);\n     if let Some((span, mutability, level)) = maybe_mismatch {\n-        span_help_and_lint(\n+        span_lint_and_help(\n             cx,\n             PATTERN_TYPE_MISMATCH,\n             span,"}]}