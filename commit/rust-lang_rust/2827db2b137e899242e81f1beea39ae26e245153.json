{"sha": "2827db2b137e899242e81f1beea39ae26e245153", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI4MjdkYjJiMTM3ZTg5OTI0MmU4MWYxYmVlYTM5YWUyNmUyNDUxNTM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-08-01T19:04:37Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-08-01T19:04:37Z"}, "message": "Auto merge of #87622 - pietroalbini:bump-bootstrap, r=Mark-Simulacrum\n\nBump bootstrap compiler to 1.55\n\nChanging the cfgs for stdarch is missing, but my understanding is that we don't need to do it as part of this PR?\n\nr? `@Mark-Simulacrum`", "tree": {"sha": "efa56d39851a4bf021de1868b5403842bc1e854a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/efa56d39851a4bf021de1868b5403842bc1e854a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2827db2b137e899242e81f1beea39ae26e245153", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2827db2b137e899242e81f1beea39ae26e245153", "html_url": "https://github.com/rust-lang/rust/commit/2827db2b137e899242e81f1beea39ae26e245153", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2827db2b137e899242e81f1beea39ae26e245153/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4e21ef2a4eca12180e24a345d66066fc1e4e36da", "url": "https://api.github.com/repos/rust-lang/rust/commits/4e21ef2a4eca12180e24a345d66066fc1e4e36da", "html_url": "https://github.com/rust-lang/rust/commit/4e21ef2a4eca12180e24a345d66066fc1e4e36da"}, {"sha": "24f9de5a44478116bfabca5ebeca53981cc28146", "url": "https://api.github.com/repos/rust-lang/rust/commits/24f9de5a44478116bfabca5ebeca53981cc28146", "html_url": "https://github.com/rust-lang/rust/commit/24f9de5a44478116bfabca5ebeca53981cc28146"}], "stats": {"total": 30, "additions": 6, "deletions": 24}, "files": [{"sha": "85e990bde86dc0d2f842e8d86516587766a9f1ba", "filename": "compiler/rustc_macros/src/symbols.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2827db2b137e899242e81f1beea39ae26e245153/compiler%2Frustc_macros%2Fsrc%2Fsymbols.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2827db2b137e899242e81f1beea39ae26e245153/compiler%2Frustc_macros%2Fsrc%2Fsymbols.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_macros%2Fsrc%2Fsymbols.rs?ref=2827db2b137e899242e81f1beea39ae26e245153", "patch": "@@ -207,7 +207,6 @@ fn symbols_with_errors(input: TokenStream) -> (TokenStream, Vec<syn::Error>) {\n             #keyword_stream\n         }\n \n-        #[cfg_attr(bootstrap, allow(rustc::default_hash_types))]\n         #[allow(non_upper_case_globals)]\n         #[doc(hidden)]\n         pub mod sym_generated {"}, {"sha": "a882d18b1514ccecfda19f66a71c51b26610304c", "filename": "library/core/src/array/equality.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2827db2b137e899242e81f1beea39ae26e245153/library%2Fcore%2Fsrc%2Farray%2Fequality.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2827db2b137e899242e81f1beea39ae26e245153/library%2Fcore%2Fsrc%2Farray%2Fequality.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Farray%2Fequality.rs?ref=2827db2b137e899242e81f1beea39ae26e245153", "patch": "@@ -125,11 +125,6 @@ impl<T: PartialEq<Other>, Other, const N: usize> SpecArrayEq<Other, N> for T {\n }\n \n impl<T: PartialEq<U> + IsRawEqComparable<U>, U, const N: usize> SpecArrayEq<U, N> for T {\n-    #[cfg(bootstrap)]\n-    fn spec_eq(a: &[T; N], b: &[U; N]) -> bool {\n-        a[..] == b[..]\n-    }\n-    #[cfg(not(bootstrap))]\n     fn spec_eq(a: &[T; N], b: &[U; N]) -> bool {\n         // SAFETY: This is why `IsRawEqComparable` is an `unsafe trait`.\n         unsafe {"}, {"sha": "6400a9b8595677ea3d660092ed4db05dab0d2220", "filename": "library/core/src/default.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2827db2b137e899242e81f1beea39ae26e245153/library%2Fcore%2Fsrc%2Fdefault.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2827db2b137e899242e81f1beea39ae26e245153/library%2Fcore%2Fsrc%2Fdefault.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fdefault.rs?ref=2827db2b137e899242e81f1beea39ae26e245153", "patch": "@@ -161,8 +161,7 @@ pub fn default<T: Default>() -> T {\n }\n \n /// Derive macro generating an impl of the trait `Default`.\n-#[cfg_attr(not(bootstrap), rustc_builtin_macro(Default, attributes(default)))]\n-#[cfg_attr(bootstrap, rustc_builtin_macro)]\n+#[rustc_builtin_macro(Default, attributes(default))]\n #[stable(feature = \"builtin_macro_prelude\", since = \"1.38.0\")]\n #[allow_internal_unstable(core_intrinsics)]\n pub macro Default($item:item) {"}, {"sha": "d15ac89668fa397c5ce123daa2cda8a4ee3c5ae4", "filename": "library/core/src/intrinsics.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2827db2b137e899242e81f1beea39ae26e245153/library%2Fcore%2Fsrc%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2827db2b137e899242e81f1beea39ae26e245153/library%2Fcore%2Fsrc%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fintrinsics.rs?ref=2827db2b137e899242e81f1beea39ae26e245153", "patch": "@@ -1931,7 +1931,6 @@ extern \"rust-intrinsic\" {\n     ///\n     /// (The implementation is allowed to branch on the results of comparisons,\n     /// which is UB if any of their inputs are `undef`.)\n-    #[cfg(not(bootstrap))]\n     #[rustc_const_unstable(feature = \"const_intrinsic_raw_eq\", issue = \"none\")]\n     pub fn raw_eq<T>(a: &T, b: &T) -> bool;\n }"}, {"sha": "25970722c2dadc8766086f567ad5c41b1ee0133d", "filename": "library/core/src/lib.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2827db2b137e899242e81f1beea39ae26e245153/library%2Fcore%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2827db2b137e899242e81f1beea39ae26e245153/library%2Fcore%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Flib.rs?ref=2827db2b137e899242e81f1beea39ae26e245153", "patch": "@@ -170,8 +170,7 @@\n #![feature(no_niche)] // rust-lang/rust#68303\n #![feature(no_coverage)] // rust-lang/rust#84605\n #![deny(unsafe_op_in_unsafe_fn)]\n-#![cfg_attr(bootstrap, deny(or_patterns_back_compat))]\n-#![cfg_attr(not(bootstrap), deny(rust_2021_incompatible_or_patterns))]\n+#![deny(rust_2021_incompatible_or_patterns)]\n \n // allow using `core::` in intra-doc links\n #[allow(unused_extern_crates)]"}, {"sha": "8380116010b4979a8a2ba9ece0566deead588060", "filename": "library/core/src/macros/mod.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2827db2b137e899242e81f1beea39ae26e245153/library%2Fcore%2Fsrc%2Fmacros%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2827db2b137e899242e81f1beea39ae26e245153/library%2Fcore%2Fsrc%2Fmacros%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fmacros%2Fmod.rs?ref=2827db2b137e899242e81f1beea39ae26e245153", "patch": "@@ -1,7 +1,6 @@\n #[doc = include_str!(\"panic.md\")]\n #[macro_export]\n-#[cfg_attr(bootstrap, rustc_builtin_macro = \"core_panic\")]\n-#[cfg_attr(not(bootstrap), rustc_builtin_macro(core_panic))]\n+#[rustc_builtin_macro(core_panic)]\n #[allow_internal_unstable(edition_panic)]\n #[stable(feature = \"core\", since = \"1.6.0\")]\n #[rustc_diagnostic_item = \"core_panic_macro\"]"}, {"sha": "261b9a3feb739dd2918846c740efec21bf4d9a76", "filename": "library/core/src/slice/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2827db2b137e899242e81f1beea39ae26e245153/library%2Fcore%2Fsrc%2Fslice%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2827db2b137e899242e81f1beea39ae26e245153/library%2Fcore%2Fsrc%2Fslice%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fslice%2Fmod.rs?ref=2827db2b137e899242e81f1beea39ae26e245153", "patch": "@@ -95,7 +95,7 @@ impl<T> [T] {\n     /// let a = [1, 2, 3];\n     /// assert_eq!(a.len(), 3);\n     /// ```\n-    #[cfg_attr(not(bootstrap), lang = \"slice_len_fn\")]\n+    #[lang = \"slice_len_fn\"]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[rustc_const_stable(feature = \"const_slice_len\", since = \"1.39.0\")]\n     #[inline]"}, {"sha": "5dc75d32ec885788d9ac3c82b1074a293aae1a5c", "filename": "library/std/src/macros.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2827db2b137e899242e81f1beea39ae26e245153/library%2Fstd%2Fsrc%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2827db2b137e899242e81f1beea39ae26e245153/library%2Fstd%2Fsrc%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fmacros.rs?ref=2827db2b137e899242e81f1beea39ae26e245153", "patch": "@@ -6,8 +6,7 @@\n \n #[doc = include_str!(\"../../core/src/macros/panic.md\")]\n #[macro_export]\n-#[cfg_attr(bootstrap, rustc_builtin_macro = \"std_panic\")]\n-#[cfg_attr(not(bootstrap), rustc_builtin_macro(std_panic))]\n+#[rustc_builtin_macro(std_panic)]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n #[allow_internal_unstable(edition_panic)]\n #[cfg_attr(not(test), rustc_diagnostic_item = \"std_panic_macro\")]"}, {"sha": "ba432ec54941ce3140c3a2b58e50418ea6e8280a", "filename": "library/std/src/sys/unix/weak.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2827db2b137e899242e81f1beea39ae26e245153/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fweak.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2827db2b137e899242e81f1beea39ae26e245153/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fweak.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fweak.rs?ref=2827db2b137e899242e81f1beea39ae26e245153", "patch": "@@ -26,8 +26,6 @@ use crate::marker;\n use crate::mem;\n use crate::sync::atomic::{self, AtomicUsize, Ordering};\n \n-// Temporary null documentation to work around #57569 until the fix is beta\n-#[cfg_attr(bootstrap, doc = \"\")]\n pub(crate) macro weak {\n     (fn $name:ident($($t:ty),*) -> $ret:ty) => (\n         #[allow(non_upper_case_globals)]\n@@ -103,8 +101,6 @@ unsafe fn fetch(name: &str) -> usize {\n     libc::dlsym(libc::RTLD_DEFAULT, name.as_ptr()) as usize\n }\n \n-// Temporary null documentation to work around #57569 until the fix is beta\n-#[cfg_attr(bootstrap, doc = \"\")]\n #[cfg(not(any(target_os = \"linux\", target_os = \"android\")))]\n pub(crate) macro syscall {\n     (fn $name:ident($($arg_name:ident: $t:ty),*) -> $ret:ty) => (\n@@ -123,7 +119,6 @@ pub(crate) macro syscall {\n     )\n }\n \n-#[cfg_attr(bootstrap, doc = \"\")]\n #[cfg(any(target_os = \"linux\", target_os = \"android\"))]\n pub(crate) macro syscall {\n     (fn $name:ident($($arg_name:ident: $t:ty),*) -> $ret:ty) => ("}, {"sha": "6b1507e36503688eaea1fff9cdf869a3670c2706", "filename": "src/stage0.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2827db2b137e899242e81f1beea39ae26e245153/src%2Fstage0.txt", "raw_url": "https://github.com/rust-lang/rust/raw/2827db2b137e899242e81f1beea39ae26e245153/src%2Fstage0.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fstage0.txt?ref=2827db2b137e899242e81f1beea39ae26e245153", "patch": "@@ -12,7 +12,7 @@\n # stable release's version number. `date` is the date where the release we're\n # bootstrapping off was released.\n \n-date: 2021-06-23\n+date: 2021-07-29\n rustc: beta\n \n # We use a nightly rustfmt to format the source because it solves some"}, {"sha": "fcc43cce6ce4b9568c43c9f6a3c19a9ca82e0e33", "filename": "src/tools/clippy/clippy_lints/src/implicit_hasher.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2827db2b137e899242e81f1beea39ae26e245153/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fimplicit_hasher.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2827db2b137e899242e81f1beea39ae26e245153/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fimplicit_hasher.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fimplicit_hasher.rs?ref=2827db2b137e899242e81f1beea39ae26e245153", "patch": "@@ -1,5 +1,3 @@\n-#![cfg_attr(bootstrap, allow(rustc::default_hash_types))]\n-\n use std::borrow::Cow;\n use std::collections::BTreeMap;\n "}]}