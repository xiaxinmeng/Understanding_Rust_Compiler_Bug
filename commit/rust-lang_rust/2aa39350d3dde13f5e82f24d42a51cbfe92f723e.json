{"sha": "2aa39350d3dde13f5e82f24d42a51cbfe92f723e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJhYTM5MzUwZDNkZGUxM2Y1ZTgyZjI0ZDQyYTUxY2JmZTkyZjcyM2U=", "commit": {"author": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2020-02-14T05:30:10Z"}, "committer": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2020-02-14T05:30:10Z"}, "message": "Use more descriptive name to get `InitializationData` state", "tree": {"sha": "bd2ec04041dfea8d9f1a5a0840732d433d4394b9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bd2ec04041dfea8d9f1a5a0840732d433d4394b9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2aa39350d3dde13f5e82f24d42a51cbfe92f723e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2aa39350d3dde13f5e82f24d42a51cbfe92f723e", "html_url": "https://github.com/rust-lang/rust/commit/2aa39350d3dde13f5e82f24d42a51cbfe92f723e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2aa39350d3dde13f5e82f24d42a51cbfe92f723e/comments", "author": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f0260ae196b62f27c64738d52519efb424724915", "url": "https://api.github.com/repos/rust-lang/rust/commits/f0260ae196b62f27c64738d52519efb424724915", "html_url": "https://github.com/rust-lang/rust/commit/f0260ae196b62f27c64738d52519efb424724915"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "a4531e53ce178e582c930ed494d2f05a30d8dda6", "filename": "src/librustc_mir/transform/elaborate_drops.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/2aa39350d3dde13f5e82f24d42a51cbfe92f723e/src%2Flibrustc_mir%2Ftransform%2Felaborate_drops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2aa39350d3dde13f5e82f24d42a51cbfe92f723e/src%2Flibrustc_mir%2Ftransform%2Felaborate_drops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Felaborate_drops.rs?ref=2aa39350d3dde13f5e82f24d42a51cbfe92f723e", "patch": "@@ -129,7 +129,7 @@ impl InitializationData<'_, '_> {\n         self.uninits.seek_before(loc);\n     }\n \n-    fn state(&self, path: MovePathIndex) -> (bool, bool) {\n+    fn maybe_live_dead(&self, path: MovePathIndex) -> (bool, bool) {\n         (self.inits.contains(path), self.uninits.contains(path))\n     }\n }\n@@ -165,13 +165,13 @@ impl<'a, 'b, 'tcx> DropElaborator<'a, 'tcx> for Elaborator<'a, 'b, 'tcx> {\n \n     fn drop_style(&self, path: Self::Path, mode: DropFlagMode) -> DropStyle {\n         let ((maybe_live, maybe_dead), multipart) = match mode {\n-            DropFlagMode::Shallow => (self.ctxt.init_data.state(path), false),\n+            DropFlagMode::Shallow => (self.ctxt.init_data.maybe_live_dead(path), false),\n             DropFlagMode::Deep => {\n                 let mut some_live = false;\n                 let mut some_dead = false;\n                 let mut children_count = 0;\n                 on_all_drop_children_bits(self.tcx(), self.body(), self.ctxt.env, path, |child| {\n-                    let (live, dead) = self.ctxt.init_data.state(child);\n+                    let (live, dead) = self.ctxt.init_data.maybe_live_dead(child);\n                     debug!(\"elaborate_drop: state({:?}) = {:?}\", child, (live, dead));\n                     some_live |= live;\n                     some_dead |= dead;\n@@ -303,7 +303,7 @@ impl<'b, 'tcx> ElaborateDropsCtxt<'b, 'tcx> {\n                 LookupResult::Exact(e) => e,\n                 LookupResult::Parent(None) => continue,\n                 LookupResult::Parent(Some(parent)) => {\n-                    let (_maybe_live, maybe_dead) = self.init_data.state(parent);\n+                    let (_maybe_live, maybe_dead) = self.init_data.maybe_live_dead(parent);\n                     if maybe_dead {\n                         span_bug!(\n                             terminator.source_info.span,\n@@ -318,7 +318,7 @@ impl<'b, 'tcx> ElaborateDropsCtxt<'b, 'tcx> {\n             };\n \n             on_all_drop_children_bits(self.tcx, self.body, self.env, path, |child| {\n-                let (maybe_live, maybe_dead) = self.init_data.state(child);\n+                let (maybe_live, maybe_dead) = self.init_data.maybe_live_dead(child);\n                 debug!(\n                     \"collect_drop_flags: collecting {:?} from {:?}@{:?} - {:?}\",\n                     child,"}]}