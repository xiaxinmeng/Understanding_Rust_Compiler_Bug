{"sha": "4e1172ebbd44b826b795c05dcecdd8c5557ecff6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRlMTE3MmViYmQ0NGI4MjZiNzk1YzA1ZGNlY2RkOGM1NTU3ZWNmZjY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-03-17T00:01:54Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-03-17T00:01:54Z"}, "message": "auto merge of #12937 : sinistersnare/rust/method-error-message, r=huonw\n\nits a common (yet easily fixable) error to just forget parens at the end of getter-like methods without any arguments.\r\n\r\nThe current error message for that case asks for an anonymous function, this patch adds a note asking for either an anonymous function, or for trailing parens.\r\n\r\nThis is my first contribution! do i need to do anything else?", "tree": {"sha": "e42e67facbe288da0388562c5370be0b92978b69", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e42e67facbe288da0388562c5370be0b92978b69"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4e1172ebbd44b826b795c05dcecdd8c5557ecff6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4e1172ebbd44b826b795c05dcecdd8c5557ecff6", "html_url": "https://github.com/rust-lang/rust/commit/4e1172ebbd44b826b795c05dcecdd8c5557ecff6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4e1172ebbd44b826b795c05dcecdd8c5557ecff6/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9e89ffc60e4a72dd0e6e9b1930111235b18e595e", "url": "https://api.github.com/repos/rust-lang/rust/commits/9e89ffc60e4a72dd0e6e9b1930111235b18e595e", "html_url": "https://github.com/rust-lang/rust/commit/9e89ffc60e4a72dd0e6e9b1930111235b18e595e"}, {"sha": "8b6592ef1a29360716e49545cff42d7103366b02", "url": "https://api.github.com/repos/rust-lang/rust/commits/8b6592ef1a29360716e49545cff42d7103366b02", "html_url": "https://github.com/rust-lang/rust/commit/8b6592ef1a29360716e49545cff42d7103366b02"}], "stats": {"total": 40, "additions": 38, "deletions": 2}, "files": [{"sha": "f4a04d824adfd7f98c1d72311d1bf2c992b92a14", "filename": "src/librustc/middle/typeck/check/mod.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4e1172ebbd44b826b795c05dcecdd8c5557ecff6/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e1172ebbd44b826b795c05dcecdd8c5557ecff6/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs?ref=4e1172ebbd44b826b795c05dcecdd8c5557ecff6", "patch": "@@ -2317,11 +2317,13 @@ fn check_expr_with_unifier(fcx: @FnCtxt,\n                 fcx.type_error_message(\n                     expr.span,\n                     |actual| {\n-                        format!(\"attempted to take value of method `{}` on type `{}` \\\n-                                 (try writing an anonymous function)\",\n+                        format!(\"attempted to take value of method `{}` on type `{}`\",\n                                 token::get_name(field), actual)\n                     },\n                     expr_t, None);\n+\n+                tcx.sess.span_note(expr.span,\n+                    \"maybe a missing `()` to call it? If not, try an anonymous function.\");\n             }\n \n             None => {"}, {"sha": "55a178af961acf81b80e7609354432131e8a283c", "filename": "src/test/compile-fail/method-missing-call.rs", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/4e1172ebbd44b826b795c05dcecdd8c5557ecff6/src%2Ftest%2Fcompile-fail%2Fmethod-missing-call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e1172ebbd44b826b795c05dcecdd8c5557ecff6/src%2Ftest%2Fcompile-fail%2Fmethod-missing-call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmethod-missing-call.rs?ref=4e1172ebbd44b826b795c05dcecdd8c5557ecff6", "patch": "@@ -0,0 +1,34 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Tests to make sure that parens are needed for method calls without arguments.\n+// outputs text to make sure either an anonymous function is provided or\n+// open-close '()' parens are given\n+\n+\n+struct Point {\n+    x: int,\n+    y: int\n+}\n+impl Point {\n+    fn new() -> Point {\n+        Point{x:0, y:0}\n+    }\n+    fn get_x(&self) -> int {\n+        self.x\n+    }\n+}\n+\n+fn main() {\n+    let point: Point = Point::new();\n+    let px: int =  point.get_x;//~ ERROR attempted to take value of method `get_x` on type `Point`\n+    //~^ NOTE maybe a missing `()` to call it? If not, try an anonymous function.\n+}\n+"}]}