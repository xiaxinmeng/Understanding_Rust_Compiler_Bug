{"sha": "b24433f36dbc6ac8540e5b961fafdbb4fa155298", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIyNDQzM2YzNmRiYzZhYzg1NDBlNWI5NjFmYWZkYmI0ZmExNTUyOTg=", "commit": {"author": {"name": "llogiq", "email": "bogusandre@gmail.com", "date": "2015-05-08T04:01:41Z"}, "committer": {"name": "llogiq", "email": "bogusandre@gmail.com", "date": "2015-05-08T04:01:41Z"}, "message": "added test for issue #31", "tree": {"sha": "78773e3ad8b04f800db31b252551d4b0d9df0e80", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/78773e3ad8b04f800db31b252551d4b0d9df0e80"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b24433f36dbc6ac8540e5b961fafdbb4fa155298", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b24433f36dbc6ac8540e5b961fafdbb4fa155298", "html_url": "https://github.com/rust-lang/rust/commit/b24433f36dbc6ac8540e5b961fafdbb4fa155298", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b24433f36dbc6ac8540e5b961fafdbb4fa155298/comments", "author": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "committer": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4ea4c292f20bfc363b8627ea0489642890b93da2", "url": "https://api.github.com/repos/rust-lang/rust/commits/4ea4c292f20bfc363b8627ea0489642890b93da2", "html_url": "https://github.com/rust-lang/rust/commit/4ea4c292f20bfc363b8627ea0489642890b93da2"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "51d21f5537aaa21ac261ab224d6e084efb0ac2dd", "filename": "tests/compile-fail/box_vec.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/b24433f36dbc6ac8540e5b961fafdbb4fa155298/tests%2Fcompile-fail%2Fbox_vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b24433f36dbc6ac8540e5b961fafdbb4fa155298/tests%2Fcompile-fail%2Fbox_vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fbox_vec.rs?ref=b24433f36dbc6ac8540e5b961fafdbb4fa155298", "patch": "@@ -7,6 +7,11 @@ pub fn test(foo: Box<Vec<bool>>) { //~ ERROR You seem to be trying to use Box<Ve\n     println!(\"{:?}\", foo.get(0))\n }\n \n+pub fn test2(foo: Box<Fn(Vec<u32>)>) { // pass if #31 is fixed\n+\tfoo(vec![1, 2, 3])\n+}\n+\n fn main(){\n     test(Box::new(Vec::new()));\n-}\n\\ No newline at end of file\n+    test2(Box::new(|v| println!(\"{:?}\", v)));\n+}"}]}