{"sha": "4baef7120a934b79f87dbe5d09591d781c1c81f7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRiYWVmNzEyMGE5MzRiNzlmODdkYmU1ZDA5NTkxZDc4MWMxYzgxZjc=", "commit": {"author": {"name": "Christian Poveda", "email": "christianpoveda@protonmail.com", "date": "2019-11-13T19:45:00Z"}, "committer": {"name": "Christian Poveda", "email": "christianpoveda@protonmail.com", "date": "2019-11-13T19:45:00Z"}, "message": "Fix maximum `isize` value for target", "tree": {"sha": "bbdaed1151fb46061a2bd2c40a7222a5d4ea5f2f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bbdaed1151fb46061a2bd2c40a7222a5d4ea5f2f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4baef7120a934b79f87dbe5d09591d781c1c81f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4baef7120a934b79f87dbe5d09591d781c1c81f7", "html_url": "https://github.com/rust-lang/rust/commit/4baef7120a934b79f87dbe5d09591d781c1c81f7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4baef7120a934b79f87dbe5d09591d781c1c81f7/comments", "author": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "edd0157069b09e3fceb8036cabbdba96972cb2f7", "url": "https://api.github.com/repos/rust-lang/rust/commits/edd0157069b09e3fceb8036cabbdba96972cb2f7", "html_url": "https://github.com/rust-lang/rust/commit/edd0157069b09e3fceb8036cabbdba96972cb2f7"}], "stats": {"total": 7, "additions": 3, "deletions": 4}, "files": [{"sha": "4de59ad32ff59dc2ae2b9478a07870e394622c69", "filename": "src/shims/fs.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/4baef7120a934b79f87dbe5d09591d781c1c81f7/src%2Fshims%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4baef7120a934b79f87dbe5d09591d781c1c81f7/src%2Fshims%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Ffs.rs?ref=4baef7120a934b79f87dbe5d09591d781c1c81f7", "patch": "@@ -173,7 +173,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n         let count = this\n             .read_scalar(count_op)?\n             .to_machine_usize(&*this.tcx)?\n-            .min(1 << (ptr_size - 1))\n+            .min((1 << (ptr_size - 1)) - 1) // max value of target `isize`\n             .min(isize::max_value() as u64);\n         // Reading zero bytes should not change `buf`.\n         if count == 0 {\n@@ -193,8 +193,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n             let result = handle\n                 .file\n                 .read(&mut bytes)\n-                // `File::read` never returns a value larger than `i64::max_value()`, so this\n-                // unwrap cannot fail.\n+                // `File::read` never returns a value larger than `count`, so this cannot fail.\n                 .map(|c| i64::try_from(c).unwrap());\n \n             match result {\n@@ -230,7 +229,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n         let count = this\n             .read_scalar(count_op)?\n             .to_machine_usize(&*this.tcx)?\n-            .min(1 << (ptr_size - 1))\n+            .min((1 << (ptr_size - 1)) - 1) // max value of target `isize`\n             .min(isize::max_value() as u64);\n         // Writing zero bytes should not change `buf`.\n         if count == 0 {"}]}