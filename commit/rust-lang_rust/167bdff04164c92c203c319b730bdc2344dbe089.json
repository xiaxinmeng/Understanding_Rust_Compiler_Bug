{"sha": "167bdff04164c92c203c319b730bdc2344dbe089", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE2N2JkZmYwNDE2NGM5MmMyMDNjMzE5YjczMGJkYzIzNDRkYmUwODk=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-08-05T04:55:52Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-08-05T04:56:48Z"}, "message": "std::rt: Schedule more scheduler callbacks to avoid dropping messages", "tree": {"sha": "0b5c5de0ac1b00bf888d20c7268c241dca1d2ea9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0b5c5de0ac1b00bf888d20c7268c241dca1d2ea9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/167bdff04164c92c203c319b730bdc2344dbe089", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/167bdff04164c92c203c319b730bdc2344dbe089", "html_url": "https://github.com/rust-lang/rust/commit/167bdff04164c92c203c319b730bdc2344dbe089", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/167bdff04164c92c203c319b730bdc2344dbe089/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d123df26ff1796f4712b10290a3b6647d754a6e3", "url": "https://api.github.com/repos/rust-lang/rust/commits/d123df26ff1796f4712b10290a3b6647d754a6e3", "html_url": "https://github.com/rust-lang/rust/commit/d123df26ff1796f4712b10290a3b6647d754a6e3"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "1a75f2569b59ea073303e18ca98451ac2cae0004", "filename": "src/libstd/rt/sched.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/167bdff04164c92c203c319b730bdc2344dbe089/src%2Flibstd%2Frt%2Fsched.rs", "raw_url": "https://github.com/rust-lang/rust/raw/167bdff04164c92c203c319b730bdc2344dbe089/src%2Flibstd%2Frt%2Fsched.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fsched.rs?ref=167bdff04164c92c203c319b730bdc2344dbe089", "patch": "@@ -339,8 +339,8 @@ impl Scheduler {\n         let mut this = self;\n         match this.message_queue.pop() {\n             Some(PinnedTask(task)) => {\n-                let mut task = task;\n                 this.event_loop.callback(Scheduler::run_sched_once);\n+                let mut task = task;\n                 task.give_home(Sched(this.make_handle()));\n                 this.resume_task_immediately(task);\n                 return None;\n@@ -351,10 +351,12 @@ impl Scheduler {\n                 return this.sched_schedule_task(task);\n             }\n             Some(Wake) => {\n+                this.event_loop.callback(Scheduler::run_sched_once);\n                 this.sleepy = false;\n                 return Some(this);\n             }\n             Some(Shutdown) => {\n+                this.event_loop.callback(Scheduler::run_sched_once);\n                 if this.sleepy {\n                     // There may be an outstanding handle on the\n                     // sleeper list.  Pop them all to make sure that's"}]}