{"sha": "f2dc3467f4ac64f2c5bfa999c52173bdd5e2f111", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYyZGMzNDY3ZjRhYzY0ZjJjNWJmYTk5OWM1MjE3M2JkZDVlMmYxMTE=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-10-08T13:45:31Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-10-08T13:45:31Z"}, "message": "Rollup merge of #65162 - Mark-Simulacrum:no-cache-loading-map, r=michaelwoerister\n\nRemove loaded_from_cache map from DepGraph\n\nIt's now unused, even with -Zquery-dep-graph\n\nFrom https://github.com/rust-lang/rust/pull/63756/files#r316039379 -- it'll simplify that PR to get this landed separately so we can just remove some of the code that it touches.\n\nr? @Zoxc or @michaelwoerister", "tree": {"sha": "8dfa8a490377e5b73972bec9fe533b56321cd273", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8dfa8a490377e5b73972bec9fe533b56321cd273"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f2dc3467f4ac64f2c5bfa999c52173bdd5e2f111", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdnJL7CRBK7hj4Ov3rIwAAdHIIAKT1z30HTYxI7modWKsxK/jI\niOBaLq6bsrfLB8B4RfMM+FiJ4DfyQUVP05L7y4hnKdZqGK2uqpBlVxGoZnx6qySr\nJrlGhH8668gAv2jOGh1/eMXhWEU/mx6NcOuPq+waFgb1rqmV0aZp1B2j+ahbzCNh\nmVdvr2uCSEWs+ZRM1rI5J7tQAatgkJtkAPonjMXgTGypvzCLGY8QuMkHlnifaZ8y\nI31wMHh3tXn0t5R7XjxqCoYh/Qo6jrAOKUA5crqByQ9866vbyVr2Y1Fmh9mII9Vh\njxmbr5OSKiP7IiyZkCNabJd1/MACzYWBtbiQvrgpS0/oAnvumHmHtuxj2zgcgKQ=\n=UH35\n-----END PGP SIGNATURE-----\n", "payload": "tree 8dfa8a490377e5b73972bec9fe533b56321cd273\nparent 58bfe3b0ec973c27fad86e0d8435c237206834e8\nparent 4c32d475a8bd2c68f82120af9182c41730a81a82\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1570542331 +0200\ncommitter GitHub <noreply@github.com> 1570542331 +0200\n\nRollup merge of #65162 - Mark-Simulacrum:no-cache-loading-map, r=michaelwoerister\n\nRemove loaded_from_cache map from DepGraph\n\nIt's now unused, even with -Zquery-dep-graph\n\nFrom https://github.com/rust-lang/rust/pull/63756/files#r316039379 -- it'll simplify that PR to get this landed separately so we can just remove some of the code that it touches.\n\nr? @Zoxc or @michaelwoerister\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f2dc3467f4ac64f2c5bfa999c52173bdd5e2f111", "html_url": "https://github.com/rust-lang/rust/commit/f2dc3467f4ac64f2c5bfa999c52173bdd5e2f111", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f2dc3467f4ac64f2c5bfa999c52173bdd5e2f111/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "58bfe3b0ec973c27fad86e0d8435c237206834e8", "url": "https://api.github.com/repos/rust-lang/rust/commits/58bfe3b0ec973c27fad86e0d8435c237206834e8", "html_url": "https://github.com/rust-lang/rust/commit/58bfe3b0ec973c27fad86e0d8435c237206834e8"}, {"sha": "4c32d475a8bd2c68f82120af9182c41730a81a82", "url": "https://api.github.com/repos/rust-lang/rust/commits/4c32d475a8bd2c68f82120af9182c41730a81a82", "html_url": "https://github.com/rust-lang/rust/commit/4c32d475a8bd2c68f82120af9182c41730a81a82"}], "stats": {"total": 31, "additions": 0, "deletions": 31}, "files": [{"sha": "08c456547cec34ee06fb039277b737f057a537cd", "filename": "src/librustc/dep_graph/graph.rs", "status": "modified", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/f2dc3467f4ac64f2c5bfa999c52173bdd5e2f111/src%2Flibrustc%2Fdep_graph%2Fgraph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2dc3467f4ac64f2c5bfa999c52173bdd5e2f111/src%2Flibrustc%2Fdep_graph%2Fgraph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdep_graph%2Fgraph.rs?ref=f2dc3467f4ac64f2c5bfa999c52173bdd5e2f111", "patch": "@@ -75,9 +75,6 @@ struct DepGraphData {\n     previous_work_products: FxHashMap<WorkProductId, WorkProduct>,\n \n     dep_node_debug: Lock<FxHashMap<DepNode, String>>,\n-\n-    // Used for testing, only populated when -Zquery-dep-graph is specified.\n-    loaded_from_cache: Lock<FxHashMap<DepNodeIndex, bool>>,\n }\n \n pub fn hash_result<R>(hcx: &mut StableHashingContext<'_>, result: &R) -> Option<Fingerprint>\n@@ -104,7 +101,6 @@ impl DepGraph {\n                 emitting_diagnostics_cond_var: Condvar::new(),\n                 previous: prev_graph,\n                 colors: DepNodeColorMap::new(prev_graph_node_count),\n-                loaded_from_cache: Default::default(),\n             })),\n         }\n     }\n@@ -874,25 +870,6 @@ impl DepGraph {\n             }\n         }\n     }\n-\n-    pub fn mark_loaded_from_cache(&self, dep_node_index: DepNodeIndex, state: bool) {\n-        debug!(\"mark_loaded_from_cache({:?}, {})\",\n-               self.data.as_ref().unwrap().current.borrow().data[dep_node_index].node,\n-               state);\n-\n-        self.data\n-            .as_ref()\n-            .unwrap()\n-            .loaded_from_cache\n-            .borrow_mut()\n-            .insert(dep_node_index, state);\n-    }\n-\n-    pub fn was_loaded_from_cache(&self, dep_node: &DepNode) -> Option<bool> {\n-        let data = self.data.as_ref().unwrap();\n-        let dep_node_index = data.current.borrow().node_to_node_index[dep_node];\n-        data.loaded_from_cache.borrow().get(&dep_node_index).cloned()\n-    }\n }\n \n /// A \"work product\" is an intermediate result that we save into the"}, {"sha": "7cab8fe60ee6ae10d2c2a84fffc1ae72785f71e2", "filename": "src/librustc/ty/query/plumbing.rs", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f2dc3467f4ac64f2c5bfa999c52173bdd5e2f111/src%2Flibrustc%2Fty%2Fquery%2Fplumbing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2dc3467f4ac64f2c5bfa999c52173bdd5e2f111/src%2Flibrustc%2Fty%2Fquery%2Fplumbing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fquery%2Fplumbing.rs?ref=f2dc3467f4ac64f2c5bfa999c52173bdd5e2f111", "patch": "@@ -489,10 +489,6 @@ impl<'tcx> TyCtxt<'tcx> {\n             self.incremental_verify_ich::<Q>(&result, dep_node, dep_node_index);\n         }\n \n-        if unlikely!(self.sess.opts.debugging_opts.query_dep_graph) {\n-            self.dep_graph.mark_loaded_from_cache(dep_node_index, true);\n-        }\n-\n         result\n     }\n \n@@ -570,10 +566,6 @@ impl<'tcx> TyCtxt<'tcx> {\n         drop(prof_timer);\n         profq_msg!(self, ProfileQueriesMsg::ProviderEnd);\n \n-        if unlikely!(self.sess.opts.debugging_opts.query_dep_graph) {\n-            self.dep_graph.mark_loaded_from_cache(dep_node_index, false);\n-        }\n-\n         if unlikely!(!diagnostics.is_empty()) {\n             if dep_node.kind != crate::dep_graph::DepKind::Null {\n                 self.queries.on_disk_cache"}]}