{"sha": "18d5085bff5680fcd1027722ebaf71703384eb33", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE4ZDUwODViZmY1NjgwZmNkMTAyNzcyMmViYWY3MTcwMzM4NGViMzM=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2019-05-31T21:30:44Z"}, "committer": {"name": "Alexander Regueiro", "email": "alexreg@me.com", "date": "2019-06-05T20:18:13Z"}, "message": "more comments", "tree": {"sha": "ee3e5964d3bf16d51830a1350ebabc3e9d104a07", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ee3e5964d3bf16d51830a1350ebabc3e9d104a07"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/18d5085bff5680fcd1027722ebaf71703384eb33", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/18d5085bff5680fcd1027722ebaf71703384eb33", "html_url": "https://github.com/rust-lang/rust/commit/18d5085bff5680fcd1027722ebaf71703384eb33", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/18d5085bff5680fcd1027722ebaf71703384eb33/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexreg", "id": 67036, "node_id": "MDQ6VXNlcjY3MDM2", "avatar_url": "https://avatars.githubusercontent.com/u/67036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexreg", "html_url": "https://github.com/alexreg", "followers_url": "https://api.github.com/users/alexreg/followers", "following_url": "https://api.github.com/users/alexreg/following{/other_user}", "gists_url": "https://api.github.com/users/alexreg/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexreg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexreg/subscriptions", "organizations_url": "https://api.github.com/users/alexreg/orgs", "repos_url": "https://api.github.com/users/alexreg/repos", "events_url": "https://api.github.com/users/alexreg/events{/privacy}", "received_events_url": "https://api.github.com/users/alexreg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "83078f0b37fd944f09bcfce4f8d476814b936aae", "url": "https://api.github.com/repos/rust-lang/rust/commits/83078f0b37fd944f09bcfce4f8d476814b936aae", "html_url": "https://github.com/rust-lang/rust/commit/83078f0b37fd944f09bcfce4f8d476814b936aae"}], "stats": {"total": 34, "additions": 31, "deletions": 3}, "files": [{"sha": "5873d0fe8229f336fe173b7772764a83e3ecf1cb", "filename": "src/librustc_typeck/astconv.rs", "status": "modified", "additions": 31, "deletions": 3, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/18d5085bff5680fcd1027722ebaf71703384eb33/src%2Flibrustc_typeck%2Fastconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18d5085bff5680fcd1027722ebaf71703384eb33/src%2Flibrustc_typeck%2Fastconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fastconv.rs?ref=18d5085bff5680fcd1027722ebaf71703384eb33", "patch": "@@ -929,6 +929,21 @@ impl<'o, 'gcx: 'tcx, 'tcx> dyn AstConv<'gcx, 'tcx> + 'o {\n         true\n     }\n \n+    /// This helper takes a *converted* parameter type (`param_ty`)\n+    /// and an *unconverted* list of bounds:\n+    ///\n+    /// ```\n+    /// fn foo<T: Debug>\n+    ///        ^  ^^^^^ `ast_bounds` parameter, in HIR form\n+    ///        |\n+    ///        `param_ty`, in ty form\n+    /// ```\n+    ///\n+    /// It adds these `ast_bounds` into the `bounds` structure.\n+    ///\n+    /// **A note on binders:** There is an implied binder around\n+    /// `param_ty` and `ast_bounds`. See `instantiate_poly_trait_ref`\n+    /// for more details.\n     fn add_bounds(&self,\n         param_ty: Ty<'tcx>,\n         ast_bounds: &[hir::GenericBound],\n@@ -962,9 +977,22 @@ impl<'o, 'gcx: 'tcx, 'tcx> dyn AstConv<'gcx, 'tcx> + 'o {\n         );\n     }\n \n-    /// Translates the AST's notion of ty param bounds (which are an enum consisting of a newtyped\n-    /// `Ty` or a region) to ty's notion of ty param bounds (which can either be user-defined traits\n-    /// or the built-in trait `Sized`).\n+    /// Translates a list of bounds from the HIR into the `Bounds` data structure.\n+    /// The self-type for the bounds is given by `param_ty`.\n+    ///\n+    /// Example:\n+    ///\n+    /// ```\n+    /// fn foo<T: Bar + Baz>() { }\n+    ///        ^  ^^^^^^^^^ ast_bounds\n+    ///        param_ty\n+    /// ```\n+    ///\n+    /// The `sized_by_default` parameter indicates if, in this context, the `param_ty` should be\n+    /// considered `Sized` unless there is an explicit `?Sized` bound.  This would be true in the\n+    /// example above, but is not true in supertrait listings like `trait Foo: Bar + Baz`.\n+    ///\n+    /// `span` should be the declaration size of the parameter.\n     pub fn compute_bounds(&self,\n         param_ty: Ty<'tcx>,\n         ast_bounds: &[hir::GenericBound],"}]}