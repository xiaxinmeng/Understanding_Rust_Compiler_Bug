{"sha": "f12d32d307d53a8f7851ce8dd1b4fbd7a4f0b50a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYxMmQzMmQzMDdkNTNhOGY3ODUxY2U4ZGQxYjRmYmQ3YTRmMGI1MGE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-02-05T10:58:52Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-02-05T10:58:52Z"}, "message": "Auto merge of #31389 - mitaa:schars, r=nrc\n\nA span spanning only a single character would render like `^~`\ninstead of just `^`.\n\nr? @nrc", "tree": {"sha": "67e51c5fb0c513f3db02322a30120a461b83b590", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/67e51c5fb0c513f3db02322a30120a461b83b590"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f12d32d307d53a8f7851ce8dd1b4fbd7a4f0b50a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f12d32d307d53a8f7851ce8dd1b4fbd7a4f0b50a", "html_url": "https://github.com/rust-lang/rust/commit/f12d32d307d53a8f7851ce8dd1b4fbd7a4f0b50a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f12d32d307d53a8f7851ce8dd1b4fbd7a4f0b50a/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "06fac8298f9c5c0d7cb91b4fcc15170e12169142", "url": "https://api.github.com/repos/rust-lang/rust/commits/06fac8298f9c5c0d7cb91b4fcc15170e12169142", "html_url": "https://github.com/rust-lang/rust/commit/06fac8298f9c5c0d7cb91b4fcc15170e12169142"}, {"sha": "1fcdedb8fb1725c8f1dafa6badb890ca8181699f", "url": "https://api.github.com/repos/rust-lang/rust/commits/1fcdedb8fb1725c8f1dafa6badb890ca8181699f", "html_url": "https://github.com/rust-lang/rust/commit/1fcdedb8fb1725c8f1dafa6badb890ca8181699f"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "4272f281edb4405514d33535051f7fac3d6a929b", "filename": "src/libsyntax/errors/emitter.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/f12d32d307d53a8f7851ce8dd1b4fbd7a4f0b50a/src%2Flibsyntax%2Ferrors%2Femitter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f12d32d307d53a8f7851ce8dd1b4fbd7a4f0b50a/src%2Flibsyntax%2Ferrors%2Femitter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ferrors%2Femitter.rs?ref=f12d32d307d53a8f7851ce8dd1b4fbd7a4f0b50a", "patch": "@@ -410,7 +410,7 @@ impl EmitterWriter {\n                         chars.next();\n                     }\n                 }\n-                if (col - col_ptr) > 1 {\n+                if (col - col_ptr) > 0 {\n                     // One extra squiggly is replaced by a \"^\"\n                     s.pop();\n                 }\n@@ -962,7 +962,7 @@ mod test {\n                    _____\\n\\\n                    ddd__eee_\\n\\\n                    elided\\n\\\n-                   _ff_gg\";\n+                   __f_gg\";\n         let file = cm.new_filemap_and_lines(\"dummy.txt\", inp);\n \n         let span = |lo, hi, (off_lo, off_hi)| {\n@@ -976,7 +976,7 @@ mod test {\n         let sp1 = span(0, 6, (0, 5));\n         let sp2 = span(8, 8, (0, 3));\n         let sp3 = span(8, 8, (5, 8));\n-        let sp4 = span(10, 10, (1, 3));\n+        let sp4 = span(10, 10, (2, 3));\n         let sp5 = span(10, 10, (4, 6));\n \n         let expect0 = \"dummy.txt: 5 ccccc\\n\\\n@@ -986,8 +986,8 @@ mod test {\n                        dummy.txt: 9 ddd__eee_\\n\\\n                     \\x20            ^~~  ^~~\\n\\\n                     \\x20            ...\\n\\\n-                       dummy.txt:11 _ff_gg\\n\\\n-                    \\x20             ^~ ^~\\n\";\n+                       dummy.txt:11 __f_gg\\n\\\n+                    \\x20              ^ ^~\\n\";\n \n         let expect = \"dummy.txt: 1 aaaaa\\n\\\n                       dummy.txt: 2 aaaaa\\n\\\n@@ -1008,8 +1008,8 @@ mod test {\n         let expect2 = \"dummy.txt: 9 ddd__eee_\\n\\\n                     \\x20            ^~~  ^~~\\n\\\n                     \\x20            ...\\n\\\n-                       dummy.txt:11 _ff_gg\\n\\\n-                    \\x20             ^~ ^~\\n\";\n+                       dummy.txt:11 __f_gg\\n\\\n+                    \\x20              ^ ^~\\n\";\n \n \n         let expect_end = \"dummy.txt: 1 aaaaa\\n\\\n@@ -1020,7 +1020,7 @@ mod test {\n                           dummy.txt: 9 ddd__eee_\\n\\\n                        \\x20              ^    ^\\n\\\n                        \\x20            ...\\n\\\n-                          dummy.txt:11 _ff_gg\\n\\\n+                          dummy.txt:11 __f_gg\\n\\\n                        \\x20              ^  ^\\n\";\n \n         let expect0_end = \"dummy.txt: 5 ccccc\\n\\\n@@ -1031,7 +1031,7 @@ mod test {\n                            dummy.txt: 9 ddd__eee_\\n\\\n                         \\x20              ^    ^\\n\\\n                         \\x20            ...\\n\\\n-                           dummy.txt:11 _ff_gg\\n\\\n+                           dummy.txt:11 __f_gg\\n\\\n                         \\x20              ^  ^\\n\";\n \n         let expect_end_g1 = \"dummy.txt:1 aaaaa\\n\\\n@@ -1042,7 +1042,7 @@ mod test {\n         let expect2_end = \"dummy.txt: 9 ddd__eee_\\n\\\n                         \\x20              ^    ^\\n\\\n                         \\x20            ...\\n\\\n-                           dummy.txt:11 _ff_gg\\n\\\n+                           dummy.txt:11 __f_gg\\n\\\n                         \\x20              ^  ^\\n\";\n \n         let expect_groups = [expect2, expect_g1];"}]}