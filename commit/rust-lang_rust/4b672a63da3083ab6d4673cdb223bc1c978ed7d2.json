{"sha": "4b672a63da3083ab6d4673cdb223bc1c978ed7d2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRiNjcyYTYzZGEzMDgzYWI2ZDQ2NzNjZGIyMjNiYzFjOTc4ZWQ3ZDI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-06-16T17:01:56Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-06-16T17:01:56Z"}, "message": "auto merge of #14877 : Seldaek/rust/commdocs, r=alexcrichton\n\nFinally what I promised to do in #13862 /cc @alexcrichton", "tree": {"sha": "0bad01e7f25a06cf5e97481c1dfbc1b9159218f2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0bad01e7f25a06cf5e97481c1dfbc1b9159218f2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4b672a63da3083ab6d4673cdb223bc1c978ed7d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4b672a63da3083ab6d4673cdb223bc1c978ed7d2", "html_url": "https://github.com/rust-lang/rust/commit/4b672a63da3083ab6d4673cdb223bc1c978ed7d2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4b672a63da3083ab6d4673cdb223bc1c978ed7d2/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0b32d42a5da84c1f23a2b50b9a6741eea69773c4", "url": "https://api.github.com/repos/rust-lang/rust/commits/0b32d42a5da84c1f23a2b50b9a6741eea69773c4", "html_url": "https://github.com/rust-lang/rust/commit/0b32d42a5da84c1f23a2b50b9a6741eea69773c4"}, {"sha": "5412fdacaf273bf3ce3230a078ff8ad156cc61a2", "url": "https://api.github.com/repos/rust-lang/rust/commits/5412fdacaf273bf3ce3230a078ff8ad156cc61a2", "html_url": "https://github.com/rust-lang/rust/commit/5412fdacaf273bf3ce3230a078ff8ad156cc61a2"}], "stats": {"total": 46, "additions": 46, "deletions": 0}, "files": [{"sha": "842743657a6e4ac8886f08a02e3b3a7fff95ee45", "filename": "src/libsync/comm/mod.rs", "status": "modified", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/4b672a63da3083ab6d4673cdb223bc1c978ed7d2/src%2Flibsync%2Fcomm%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b672a63da3083ab6d4673cdb223bc1c978ed7d2/src%2Flibsync%2Fcomm%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsync%2Fcomm%2Fmod.rs?ref=4b672a63da3083ab6d4673cdb223bc1c978ed7d2", "patch": "@@ -120,6 +120,52 @@\n //! });\n //! rx.recv();\n //! ```\n+//!\n+//! Reading from a channel with a timeout requires to use a Timer together\n+//! with the channel. You can use the select! macro to select either and\n+//! handle the timeout case. This first example will break out of the loop\n+//! after 10 seconds no matter what:\n+//!\n+//! ```no_run\n+//! use std::io::timer::Timer;\n+//!\n+//! let (tx, rx) = channel::<int>();\n+//! let mut timer = Timer::new().unwrap();\n+//! let timeout = timer.oneshot(10000);\n+//!\n+//! loop {\n+//!     select! {\n+//!         val = rx.recv() => println!(\"Received {}\", val),\n+//!         () = timeout.recv() => {\n+//!             println!(\"timed out, total time was more than 10 seconds\")\n+//!             break;\n+//!         }\n+//!     }\n+//! }\n+//! ```\n+//!\n+//! This second example is more costly since it allocates a new timer every\n+//! time a message is received, but it allows you to timeout after the channel\n+//! has been inactive for 5 seconds:\n+//!\n+//! ```no_run\n+//! use std::io::timer::Timer;\n+//!\n+//! let (tx, rx) = channel::<int>();\n+//! let mut timer = Timer::new().unwrap();\n+//!\n+//! loop {\n+//!     let timeout = timer.oneshot(5000);\n+//!\n+//!     select! {\n+//!         val = rx.recv() => println!(\"Received {}\", val),\n+//!         () = timeout.recv() => {\n+//!             println!(\"timed out, no message received in 5 seconds\")\n+//!             break;\n+//!         }\n+//!     }\n+//! }\n+//! ```\n \n // A description of how Rust's channel implementation works\n //"}]}