{"sha": "0068358ba4dd3869936b60ef4044f4d65378d431", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAwNjgzNThiYTRkZDM4Njk5MzZiNjBlZjQwNDRmNGQ2NTM3OGQ0MzE=", "commit": {"author": {"name": "Ashley Mannix", "email": "kodraus@hey.com", "date": "2021-01-18T11:53:41Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-01-18T11:53:41Z"}, "message": "Rollup merge of #81142 - wcampbell0x2a:replace-Some-with-is-some, r=jonas-schievink\n\nReplace let Some(..) = with .is_some()", "tree": {"sha": "5392763d6c8c152da3d06fb907c0f7df6ffb07e8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5392763d6c8c152da3d06fb907c0f7df6ffb07e8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0068358ba4dd3869936b60ef4044f4d65378d431", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgBXbGCRBK7hj4Ov3rIwAAdHIIAIRMsd4CxKZw5lHrNd6ob4Cv\nZhB+RgAAZpTBzHi278ZQzXQjXXEgh92XsozLg3vx1UgBVMxSs2Lc32Axh1wR0919\nCCYCCBjt4bU+iMLrqYbs3M67sLkI3o0L8wE6sOw0lIWKPk1l7VajfbFeCn9kDvWJ\nPL6k5PSYz23USPYInfvUFgTSpKtmA7pDQ9UK8GGSCnzjcvYiK/u8Kb+zNb5VYr7b\nUVC1rtG0q3QTQDMZE2JsnETDknle9/GL3C9mgI8ArgIrMrqA+ooznXU0ocKAjCyK\nC1Q5ghhPoqEnqf7KGxDTzoDHYzv6sevD92RDuoOdEqFnBJny7qz40M6vwzGeTlk=\n=X24F\n-----END PGP SIGNATURE-----\n", "payload": "tree 5392763d6c8c152da3d06fb907c0f7df6ffb07e8\nparent d3cc598a026deca592d3d2c99f93ad0406b88543\nparent e23acc341c2e71484683e237d62ea37b4aa63115\nauthor Ashley Mannix <kodraus@hey.com> 1610970821 +1000\ncommitter GitHub <noreply@github.com> 1610970821 +1000\n\nRollup merge of #81142 - wcampbell0x2a:replace-Some-with-is-some, r=jonas-schievink\n\nReplace let Some(..) = with .is_some()\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0068358ba4dd3869936b60ef4044f4d65378d431", "html_url": "https://github.com/rust-lang/rust/commit/0068358ba4dd3869936b60ef4044f4d65378d431", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0068358ba4dd3869936b60ef4044f4d65378d431/comments", "author": {"login": "KodrAus", "id": 6721458, "node_id": "MDQ6VXNlcjY3MjE0NTg=", "avatar_url": "https://avatars.githubusercontent.com/u/6721458?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KodrAus", "html_url": "https://github.com/KodrAus", "followers_url": "https://api.github.com/users/KodrAus/followers", "following_url": "https://api.github.com/users/KodrAus/following{/other_user}", "gists_url": "https://api.github.com/users/KodrAus/gists{/gist_id}", "starred_url": "https://api.github.com/users/KodrAus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KodrAus/subscriptions", "organizations_url": "https://api.github.com/users/KodrAus/orgs", "repos_url": "https://api.github.com/users/KodrAus/repos", "events_url": "https://api.github.com/users/KodrAus/events{/privacy}", "received_events_url": "https://api.github.com/users/KodrAus/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d3cc598a026deca592d3d2c99f93ad0406b88543", "url": "https://api.github.com/repos/rust-lang/rust/commits/d3cc598a026deca592d3d2c99f93ad0406b88543", "html_url": "https://github.com/rust-lang/rust/commit/d3cc598a026deca592d3d2c99f93ad0406b88543"}, {"sha": "e23acc341c2e71484683e237d62ea37b4aa63115", "url": "https://api.github.com/repos/rust-lang/rust/commits/e23acc341c2e71484683e237d62ea37b4aa63115", "html_url": "https://github.com/rust-lang/rust/commit/e23acc341c2e71484683e237d62ea37b4aa63115"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "4dcbe4831be275935f8ba1db3a6e3734e0ebaef0", "filename": "compiler/rustc_ast/src/attr/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0068358ba4dd3869936b60ef4044f4d65378d431/compiler%2Frustc_ast%2Fsrc%2Fattr%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0068358ba4dd3869936b60ef4044f4d65378d431/compiler%2Frustc_ast%2Fsrc%2Fattr%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast%2Fsrc%2Fattr%2Fmod.rs?ref=0068358ba4dd3869936b60ef4044f4d65378d431", "patch": "@@ -526,7 +526,7 @@ impl MetaItemKind {\n     fn list_from_tokens(tokens: TokenStream) -> Option<MetaItemKind> {\n         let mut tokens = tokens.into_trees().peekable();\n         let mut result = Vec::new();\n-        while let Some(..) = tokens.peek() {\n+        while tokens.peek().is_some() {\n             let item = NestedMetaItem::from_tokens(&mut tokens)?;\n             result.push(item);\n             match tokens.next() {"}, {"sha": "b740dfaca328d195af00fd950ef9c21f5dfdc0ff", "filename": "compiler/rustc_mir/src/shim.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0068358ba4dd3869936b60ef4044f4d65378d431/compiler%2Frustc_mir%2Fsrc%2Fshim.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0068358ba4dd3869936b60ef4044f4d65378d431/compiler%2Frustc_mir%2Fsrc%2Fshim.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Fshim.rs?ref=0068358ba4dd3869936b60ef4044f4d65378d431", "patch": "@@ -165,7 +165,7 @@ fn build_drop_shim<'tcx>(tcx: TyCtxt<'tcx>, def_id: DefId, ty: Option<Ty<'tcx>>)\n     let mut body =\n         new_body(source, blocks, local_decls_for_sig(&sig, span), sig.inputs().len(), span);\n \n-    if let Some(..) = ty {\n+    if ty.is_some() {\n         // The first argument (index 0), but add 1 for the return value.\n         let dropee_ptr = Place::from(Local::new(1 + 0));\n         if tcx.sess.opts.debugging_opts.mir_emit_retag {"}]}