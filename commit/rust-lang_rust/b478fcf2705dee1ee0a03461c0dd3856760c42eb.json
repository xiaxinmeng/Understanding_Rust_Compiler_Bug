{"sha": "b478fcf2705dee1ee0a03461c0dd3856760c42eb", "node_id": "C_kwDOAAsO6NoAKGI0NzhmY2YyNzA1ZGVlMWVlMGEwMzQ2MWMwZGQzODU2NzYwYzQyZWI", "commit": {"author": {"name": "Jannis Christopher K\u00f6hl", "email": "mail@koehl.dev", "date": "2022-10-26T12:46:27Z"}, "committer": {"name": "Jannis Christopher K\u00f6hl", "email": "mail@koehl.dev", "date": "2022-11-07T09:35:26Z"}, "message": "Use new cast methods", "tree": {"sha": "27f93526c36fed8286cbe66c34ca312dadc97d94", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/27f93526c36fed8286cbe66c34ca312dadc97d94"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b478fcf2705dee1ee0a03461c0dd3856760c42eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b478fcf2705dee1ee0a03461c0dd3856760c42eb", "html_url": "https://github.com/rust-lang/rust/commit/b478fcf2705dee1ee0a03461c0dd3856760c42eb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b478fcf2705dee1ee0a03461c0dd3856760c42eb/comments", "author": {"login": "jachris", "id": 30163784, "node_id": "MDQ6VXNlcjMwMTYzNzg0", "avatar_url": "https://avatars.githubusercontent.com/u/30163784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jachris", "html_url": "https://github.com/jachris", "followers_url": "https://api.github.com/users/jachris/followers", "following_url": "https://api.github.com/users/jachris/following{/other_user}", "gists_url": "https://api.github.com/users/jachris/gists{/gist_id}", "starred_url": "https://api.github.com/users/jachris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jachris/subscriptions", "organizations_url": "https://api.github.com/users/jachris/orgs", "repos_url": "https://api.github.com/users/jachris/repos", "events_url": "https://api.github.com/users/jachris/events{/privacy}", "received_events_url": "https://api.github.com/users/jachris/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jachris", "id": 30163784, "node_id": "MDQ6VXNlcjMwMTYzNzg0", "avatar_url": "https://avatars.githubusercontent.com/u/30163784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jachris", "html_url": "https://github.com/jachris", "followers_url": "https://api.github.com/users/jachris/followers", "following_url": "https://api.github.com/users/jachris/following{/other_user}", "gists_url": "https://api.github.com/users/jachris/gists{/gist_id}", "starred_url": "https://api.github.com/users/jachris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jachris/subscriptions", "organizations_url": "https://api.github.com/users/jachris/orgs", "repos_url": "https://api.github.com/users/jachris/repos", "events_url": "https://api.github.com/users/jachris/events{/privacy}", "received_events_url": "https://api.github.com/users/jachris/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "630e17d3e41dbe338b209effb6091471314798c1", "url": "https://api.github.com/repos/rust-lang/rust/commits/630e17d3e41dbe338b209effb6091471314798c1", "html_url": "https://github.com/rust-lang/rust/commit/630e17d3e41dbe338b209effb6091471314798c1"}], "stats": {"total": 27, "additions": 15, "deletions": 12}, "files": [{"sha": "acb0f7b95abc86da86ba03d06bc1d39bf95d7c34", "filename": "compiler/rustc_mir_transform/src/dataflow_const_prop.rs", "status": "modified", "additions": 15, "deletions": 12, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/b478fcf2705dee1ee0a03461c0dd3856760c42eb/compiler%2Frustc_mir_transform%2Fsrc%2Fdataflow_const_prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b478fcf2705dee1ee0a03461c0dd3856760c42eb/compiler%2Frustc_mir_transform%2Fsrc%2Fdataflow_const_prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fdataflow_const_prop.rs?ref=b478fcf2705dee1ee0a03461c0dd3856760c42eb", "patch": "@@ -128,23 +128,26 @@ impl<'tcx> ValueAnalysis<'tcx> for ConstAnalysis<'tcx> {\n     ) -> ValueOrPlaceOrRef<Self::Value> {\n         match rvalue {\n             Rvalue::Cast(\n-                CastKind::IntToInt\n+                kind @ (CastKind::IntToInt\n                 | CastKind::FloatToInt\n                 | CastKind::FloatToFloat\n-                | CastKind::IntToFloat,\n+                | CastKind::IntToFloat),\n                 operand,\n                 ty,\n-            ) => {\n-                let operand = self.eval_operand(operand, state);\n-                match operand {\n-                    FlatSet::Elem(operand) => self\n-                        .ecx\n-                        .misc_cast(&operand, *ty)\n-                        .map(|result| ValueOrPlaceOrRef::Value(self.wrap_immediate(result, *ty)))\n-                        .unwrap_or(ValueOrPlaceOrRef::top()),\n-                    _ => ValueOrPlaceOrRef::top(),\n+            ) => match self.eval_operand(operand, state) {\n+                FlatSet::Elem(op) => match kind {\n+                    CastKind::IntToInt | CastKind::IntToFloat => {\n+                        self.ecx.int_to_int_or_float(&op, *ty)\n+                    }\n+                    CastKind::FloatToInt | CastKind::FloatToFloat => {\n+                        self.ecx.float_to_float_or_int(&op, *ty)\n+                    }\n+                    _ => unreachable!(),\n                 }\n-            }\n+                .map(|result| ValueOrPlaceOrRef::Value(self.wrap_immediate(result, *ty)))\n+                .unwrap_or(ValueOrPlaceOrRef::top()),\n+                _ => ValueOrPlaceOrRef::top(),\n+            },\n             Rvalue::BinaryOp(op, box (left, right)) => {\n                 // Overflows must be ignored here.\n                 let (val, _overflow) = self.binary_op(state, *op, left, right);"}]}