{"sha": "236666138fa15fdd48b1c12180b2c9dc936441b4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIzNjY2NjEzOGZhMTVmZGQ0OGIxYzEyMTgwYjJjOWRjOTM2NDQxYjQ=", "commit": {"author": {"name": "Philipp Krones", "email": "hello@philkrones.com", "date": "2019-08-28T11:00:52Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-08-28T11:00:52Z"}, "message": "Rollup merge of #4460 - JohnTitor:fix-inherent-to-string, r=flip1995\n\nFix `inherent_to_string` false positive\n\nFixes #4457\n\nchangelog: fixes `inherent_to_string` false positive", "tree": {"sha": "2b4db20bf664096cc6d7c7120cdf66d0229f46a8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2b4db20bf664096cc6d7c7120cdf66d0229f46a8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/236666138fa15fdd48b1c12180b2c9dc936441b4", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdZl7kCRBK7hj4Ov3rIwAAdHIIAEkvfdi5BUjwVVdf2doQCN+d\nq5oc8ijjWw/E0jp83sowTdKN6H3S+mKubc4gkKqQJ0Bajnq/S6Npev7h36nHUFNU\nS7RCjjP9LI3U0r6a/trh4lDC41cc509zR221xJ0QhQc5MmoNgqwm4LE2SSQXmBlh\nI76qq2wly+jZZdlUlL67EfZoprcuK7G3euAcsEXBKnien6WP5eyvyPLQhiK8oHXj\nmqMWeGOWb+1CVrTOkOurPrxOIAk/f5Mya+hg+UsKCBWovk08llR648fN+hWqW3DN\nmfmsDrsPC/3vhw5g56+QLVBOckp25EVdsfSDiFoIOg3f8RZ3dZQx+oULbXML79M=\n=IzYJ\n-----END PGP SIGNATURE-----\n", "payload": "tree 2b4db20bf664096cc6d7c7120cdf66d0229f46a8\nparent ad43d68ea26dcff9ca11358edf7fb390358743cf\nparent 1dca950ac4c608263dbf208d923c426e5c1ea500\nauthor Philipp Krones <hello@philkrones.com> 1566990052 +0200\ncommitter GitHub <noreply@github.com> 1566990052 +0200\n\nRollup merge of #4460 - JohnTitor:fix-inherent-to-string, r=flip1995\n\nFix `inherent_to_string` false positive\n\nFixes #4457\n\nchangelog: fixes `inherent_to_string` false positive\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/236666138fa15fdd48b1c12180b2c9dc936441b4", "html_url": "https://github.com/rust-lang/rust/commit/236666138fa15fdd48b1c12180b2c9dc936441b4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/236666138fa15fdd48b1c12180b2c9dc936441b4/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ad43d68ea26dcff9ca11358edf7fb390358743cf", "url": "https://api.github.com/repos/rust-lang/rust/commits/ad43d68ea26dcff9ca11358edf7fb390358743cf", "html_url": "https://github.com/rust-lang/rust/commit/ad43d68ea26dcff9ca11358edf7fb390358743cf"}, {"sha": "1dca950ac4c608263dbf208d923c426e5c1ea500", "url": "https://api.github.com/repos/rust-lang/rust/commits/1dca950ac4c608263dbf208d923c426e5c1ea500", "html_url": "https://github.com/rust-lang/rust/commit/1dca950ac4c608263dbf208d923c426e5c1ea500"}], "stats": {"total": 17, "additions": 15, "deletions": 2}, "files": [{"sha": "26b9657589f38eee3870d25162190ee7fda6e6ea", "filename": "clippy_lints/src/inherent_to_string.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/236666138fa15fdd48b1c12180b2c9dc936441b4/clippy_lints%2Fsrc%2Finherent_to_string.rs", "raw_url": "https://github.com/rust-lang/rust/raw/236666138fa15fdd48b1c12180b2c9dc936441b4/clippy_lints%2Fsrc%2Finherent_to_string.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Finherent_to_string.rs?ref=236666138fa15fdd48b1c12180b2c9dc936441b4", "patch": "@@ -104,6 +104,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for InherentToString {\n             if impl_item.ident.name.as_str() == \"to_string\";\n             let decl = &signature.decl;\n             if decl.implicit_self.has_implicit_self();\n+            if decl.inputs.len() == 1;\n \n             // Check if return type is String\n             if match_type(cx, return_ty(cx, impl_item.hir_id), &paths::STRING);"}, {"sha": "e6cf337d1bb1baa932b13f3665cdc8d7764395ee", "filename": "tests/ui/inherent_to_string.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/236666138fa15fdd48b1c12180b2c9dc936441b4/tests%2Fui%2Finherent_to_string.rs", "raw_url": "https://github.com/rust-lang/rust/raw/236666138fa15fdd48b1c12180b2c9dc936441b4/tests%2Fui%2Finherent_to_string.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finherent_to_string.rs?ref=236666138fa15fdd48b1c12180b2c9dc936441b4", "patch": "@@ -1,5 +1,6 @@\n #![warn(clippy::inherent_to_string)]\n #![deny(clippy::inherent_to_string_shadow_display)]\n+#![allow(clippy::many_single_char_names)]\n \n use std::fmt;\n \n@@ -12,6 +13,7 @@ struct B;\n struct C;\n struct D;\n struct E;\n+struct F;\n \n impl A {\n     // Should be detected; emit warning\n@@ -64,6 +66,13 @@ impl E {\n     }\n }\n \n+impl F {\n+    // Should not be detected, as it does not match the function signature\n+    fn to_string(&self, _i: i32) -> String {\n+        \"F.to_string()\".to_string()\n+    }\n+}\n+\n fn main() {\n     let a = A;\n     a.to_string();\n@@ -81,4 +90,7 @@ fn main() {\n     d.to_string();\n \n     E::to_string();\n+\n+    let f = F;\n+    f.to_string(1);\n }"}, {"sha": "76d1bb873ebebd18fdd909324a71e1d49ccdf65d", "filename": "tests/ui/inherent_to_string.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/236666138fa15fdd48b1c12180b2c9dc936441b4/tests%2Fui%2Finherent_to_string.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/236666138fa15fdd48b1c12180b2c9dc936441b4/tests%2Fui%2Finherent_to_string.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finherent_to_string.stderr?ref=236666138fa15fdd48b1c12180b2c9dc936441b4", "patch": "@@ -1,5 +1,5 @@\n error: implementation of inherent method `to_string(&self) -> String` for type `A`\n-  --> $DIR/inherent_to_string.rs:18:5\n+  --> $DIR/inherent_to_string.rs:20:5\n    |\n LL | /     fn to_string(&self) -> String {\n LL | |         \"A.to_string()\".to_string()\n@@ -10,7 +10,7 @@ LL | |     }\n    = help: implement trait `Display` for type `A` instead\n \n error: type `C` implements inherent method `to_string(&self) -> String` which shadows the implementation of `Display`\n-  --> $DIR/inherent_to_string.rs:42:5\n+  --> $DIR/inherent_to_string.rs:44:5\n    |\n LL | /     fn to_string(&self) -> String {\n LL | |         \"C.to_string()\".to_string()"}]}