{"sha": "72ad8f716bc2591fba72d7107a9938952214f485", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcyYWQ4ZjcxNmJjMjU5MWZiYTcyZDcxMDdhOTkzODk1MjIxNGY0ODU=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-10-14T15:25:50Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-10-14T15:25:50Z"}, "message": "syntax: use `PatKind::Wild` as our `::Err` equivalent.", "tree": {"sha": "b13459bb42dda447f6227810057e6041979365f9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b13459bb42dda447f6227810057e6041979365f9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/72ad8f716bc2591fba72d7107a9938952214f485", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/72ad8f716bc2591fba72d7107a9938952214f485", "html_url": "https://github.com/rust-lang/rust/commit/72ad8f716bc2591fba72d7107a9938952214f485", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/72ad8f716bc2591fba72d7107a9938952214f485/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a77a8aaa2e55c0591ee766f3ff2142a67439d243", "url": "https://api.github.com/repos/rust-lang/rust/commits/a77a8aaa2e55c0591ee766f3ff2142a67439d243", "html_url": "https://github.com/rust-lang/rust/commit/a77a8aaa2e55c0591ee766f3ff2142a67439d243"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "55c534e56ceb61005239d58a23bfed4f00174bcd", "filename": "src/libsyntax/parse/parser/pat.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/72ad8f716bc2591fba72d7107a9938952214f485/src%2Flibsyntax%2Fparse%2Fparser%2Fpat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72ad8f716bc2591fba72d7107a9938952214f485/src%2Flibsyntax%2Fparse%2Fparser%2Fpat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser%2Fpat.rs?ref=72ad8f716bc2591fba72d7107a9938952214f485", "patch": "@@ -421,18 +421,18 @@ impl<'a> Parser<'a> {\n                 .span_label(rhs.span, \"binding on the right, should be to the left\")\n                 .span_suggestion(sp, \"switch the order\", pprust::pat_to_string(&rhs), applicability)\n                 .emit();\n-\n-            rhs.span = sp;\n-            return Ok(rhs);\n+        } else {\n+            // The special case above doesn't apply so we may have e.g. `A(x) @ B(y)`.\n+            rhs.kind = PatKind::Wild;\n+            self.struct_span_err(sp, \"left-hand side of `@` must be a binding pattern\")\n+                .span_label(lhs.span, \"interpreted as a pattern, not a binding\")\n+                .span_label(rhs.span, \"also a pattern\")\n+                .note(\"bindings are `x`, `mut x`, `ref x`, and `ref mut x`\")\n+                .emit();\n         }\n \n-        // The special case above doesn't apply so we may have e.g. `A(x) @ B(y)`.\n-        let mut err = self.struct_span_err(sp, \"left-hand side of `@` must be a binding pattern\");\n-        err.span_label(lhs.span, \"interpreted as a pattern, not a binding\")\n-            .span_label(rhs.span, \"also a pattern\")\n-            .note(\"bindings are `x`, `mut x`, `ref x`, and `ref mut x`\");\n-        // FIXME(Centril): Introduce `PatKind::Err` and use that instead.\n-        Err(err)\n+        rhs.span = sp;\n+        Ok(rhs)\n     }\n \n     /// Ban a range pattern if it has an ambiguous interpretation."}]}