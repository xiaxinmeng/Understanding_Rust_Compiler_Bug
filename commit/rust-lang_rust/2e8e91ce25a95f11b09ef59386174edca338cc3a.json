{"sha": "2e8e91ce25a95f11b09ef59386174edca338cc3a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJlOGU5MWNlMjVhOTVmMTFiMDllZjU5Mzg2MTc0ZWRjYTMzOGNjM2E=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-05-11T08:17:25Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-05-12T14:15:30Z"}, "message": "add check that simd_shuffle arguments are constants", "tree": {"sha": "f46057141d0a0b1f9459ef9ee28aa6ca705b8226", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f46057141d0a0b1f9459ef9ee28aa6ca705b8226"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2e8e91ce25a95f11b09ef59386174edca338cc3a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2e8e91ce25a95f11b09ef59386174edca338cc3a", "html_url": "https://github.com/rust-lang/rust/commit/2e8e91ce25a95f11b09ef59386174edca338cc3a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2e8e91ce25a95f11b09ef59386174edca338cc3a/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "44a8e8d7455cd8f8ec3b3f2d5d4ef80693608f63", "url": "https://api.github.com/repos/rust-lang/rust/commits/44a8e8d7455cd8f8ec3b3f2d5d4ef80693608f63", "html_url": "https://github.com/rust-lang/rust/commit/44a8e8d7455cd8f8ec3b3f2d5d4ef80693608f63"}], "stats": {"total": 16, "additions": 15, "deletions": 1}, "files": [{"sha": "6d7e4cdb1c6efcd282c64f293a03aadb97de9167", "filename": "compiler/rustc_mir/src/transform/lower_intrinsics.rs", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/2e8e91ce25a95f11b09ef59386174edca338cc3a/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Flower_intrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e8e91ce25a95f11b09ef59386174edca338cc3a/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Flower_intrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Flower_intrinsics.rs?ref=2e8e91ce25a95f11b09ef59386174edca338cc3a", "patch": "@@ -5,6 +5,7 @@ use rustc_middle::mir::*;\n use rustc_middle::ty::subst::SubstsRef;\n use rustc_middle::ty::{self, Ty, TyCtxt};\n use rustc_span::symbol::{sym, Symbol};\n+use rustc_span::Span;\n use rustc_target::spec::abi::Abi;\n \n pub struct LowerIntrinsics;\n@@ -119,6 +120,9 @@ impl<'tcx> MirPass<'tcx> for LowerIntrinsics {\n                             terminator.kind = TerminatorKind::Goto { target };\n                         }\n                     }\n+                    _ if intrinsic_name.as_str().starts_with(\"simd_shuffle\") => {\n+                        validate_simd_shuffle(tcx, args, terminator.source_info.span);\n+                    }\n                     _ => {}\n                 }\n             }\n@@ -132,9 +136,19 @@ fn resolve_rust_intrinsic(\n ) -> Option<(Symbol, SubstsRef<'tcx>)> {\n     if let ty::FnDef(def_id, substs) = *func_ty.kind() {\n         let fn_sig = func_ty.fn_sig(tcx);\n-        if fn_sig.abi() == Abi::RustIntrinsic {\n+        if let Abi::RustIntrinsic | Abi::PlatformIntrinsic = fn_sig.abi() {\n             return Some((tcx.item_name(def_id), substs));\n         }\n     }\n     None\n }\n+\n+fn validate_simd_shuffle(tcx: TyCtxt<'tcx>, args: &[Operand<'tcx>], span: Span) {\n+    match &args[2] {\n+        Operand::Constant(_) => {} // all good\n+        _ => {\n+            let msg = format!(\"last argument of `simd_shuffle` is required to be a `const` item\");\n+            tcx.sess.span_err(span, &msg);\n+        }\n+    }\n+}"}]}