{"sha": "2a5254c106df41dc53c34508e9f5ba77243b7a51", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJhNTI1NGMxMDZkZjQxZGM1M2MzNDUwOGU5ZjViYTc3MjQzYjdhNTE=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-10-29T12:25:46Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-10-29T12:25:46Z"}, "message": "reduce visibility", "tree": {"sha": "23ba452140afc9d3305c741bad0f823aaf6f3c32", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/23ba452140afc9d3305c741bad0f823aaf6f3c32"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2a5254c106df41dc53c34508e9f5ba77243b7a51", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2a5254c106df41dc53c34508e9f5ba77243b7a51", "html_url": "https://github.com/rust-lang/rust/commit/2a5254c106df41dc53c34508e9f5ba77243b7a51", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2a5254c106df41dc53c34508e9f5ba77243b7a51/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d095d9273eb2c03d1c28e0122c21fccf4099660e", "url": "https://api.github.com/repos/rust-lang/rust/commits/d095d9273eb2c03d1c28e0122c21fccf4099660e", "html_url": "https://github.com/rust-lang/rust/commit/d095d9273eb2c03d1c28e0122c21fccf4099660e"}], "stats": {"total": 29, "additions": 9, "deletions": 20}, "files": [{"sha": "227e931833fc3594c1081116d4be8fa371e86a4e", "filename": "crates/ra_hir/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2a5254c106df41dc53c34508e9f5ba77243b7a51/crates%2Fra_hir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2a5254c106df41dc53c34508e9f5ba77243b7a51/crates%2Fra_hir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Flib.rs?ref=2a5254c106df41dc53c34508e9f5ba77243b7a51", "patch": "@@ -80,7 +80,7 @@ pub use self::{\n     path::{Path, PathKind},\n     resolve::ScopeDef,\n     source_binder::{PathResolution, ScopeEntryWithSyntax, SourceAnalyzer},\n-    source_id::{AstIdMap, ErasedFileAstId},\n+    source_id::AstIdMap,\n     ty::{\n         display::HirDisplay, ApplicationTy, CallableDef, Substs, TraitRef, Ty, TypeCtor, TypeWalk,\n     },"}, {"sha": "463b1d45352e5c48d671ddb0dcf632b87df39bdb", "filename": "crates/ra_hir/src/source_id.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2a5254c106df41dc53c34508e9f5ba77243b7a51/crates%2Fra_hir%2Fsrc%2Fsource_id.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2a5254c106df41dc53c34508e9f5ba77243b7a51/crates%2Fra_hir%2Fsrc%2Fsource_id.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fsource_id.rs?ref=2a5254c106df41dc53c34508e9f5ba77243b7a51", "patch": "@@ -1,6 +1,6 @@\n //! FIXME: write short doc here\n \n pub use hir_expand::{\n-    ast_id_map::{AstIdMap, ErasedFileAstId, FileAstId},\n+    ast_id_map::{AstIdMap, FileAstId},\n     AstId,\n };"}, {"sha": "919ede0a03d5345eaa90d2afcbf44f5db6a08a2e", "filename": "crates/ra_hir_expand/src/ast_id_map.rs", "status": "modified", "additions": 6, "deletions": 16, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/2a5254c106df41dc53c34508e9f5ba77243b7a51/crates%2Fra_hir_expand%2Fsrc%2Fast_id_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2a5254c106df41dc53c34508e9f5ba77243b7a51/crates%2Fra_hir_expand%2Fsrc%2Fast_id_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_expand%2Fsrc%2Fast_id_map.rs?ref=2a5254c106df41dc53c34508e9f5ba77243b7a51", "patch": "@@ -8,11 +8,10 @@\n use std::{\n     hash::{Hash, Hasher},\n     marker::PhantomData,\n-    ops,\n };\n \n use ra_arena::{impl_arena_id, Arena, RawId};\n-use ra_syntax::{ast, AstNode, SyntaxNode, SyntaxNodePtr};\n+use ra_syntax::{ast, AstNode, AstPtr, SyntaxNode, SyntaxNodePtr};\n \n /// `AstId` points to an AST node in a specific file.\n #[derive(Debug)]\n@@ -40,14 +39,8 @@ impl<N: AstNode> Hash for FileAstId<N> {\n     }\n }\n \n-impl<N: AstNode> From<FileAstId<N>> for ErasedFileAstId {\n-    fn from(id: FileAstId<N>) -> Self {\n-        id.raw\n-    }\n-}\n-\n #[derive(Debug, Clone, Copy, PartialEq, Eq, PartialOrd, Ord, Hash)]\n-pub struct ErasedFileAstId(RawId);\n+struct ErasedFileAstId(RawId);\n impl_arena_id!(ErasedFileAstId);\n \n /// Maps items' `SyntaxNode`s to `ErasedFileAstId`s and back.\n@@ -90,15 +83,12 @@ impl AstIdMap {\n         }\n     }\n \n-    fn alloc(&mut self, item: &SyntaxNode) -> ErasedFileAstId {\n-        self.arena.alloc(SyntaxNodePtr::new(item))\n+    pub fn get<N: AstNode>(&self, id: FileAstId<N>) -> AstPtr<N> {\n+        self.arena[id.raw].cast::<N>().unwrap()\n     }\n-}\n \n-impl ops::Index<ErasedFileAstId> for AstIdMap {\n-    type Output = SyntaxNodePtr;\n-    fn index(&self, index: ErasedFileAstId) -> &SyntaxNodePtr {\n-        &self.arena[index]\n+    fn alloc(&mut self, item: &SyntaxNode) -> ErasedFileAstId {\n+        self.arena.alloc(SyntaxNodePtr::new(item))\n     }\n }\n "}, {"sha": "a31b9fa4cdd292b1588eebf7faafe0090c534217", "filename": "crates/ra_hir_expand/src/lib.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2a5254c106df41dc53c34508e9f5ba77243b7a51/crates%2Fra_hir_expand%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2a5254c106df41dc53c34508e9f5ba77243b7a51/crates%2Fra_hir_expand%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_expand%2Fsrc%2Flib.rs?ref=2a5254c106df41dc53c34508e9f5ba77243b7a51", "patch": "@@ -172,7 +172,6 @@ impl<N: AstNode> AstId<N> {\n \n     pub fn to_node(&self, db: &impl AstDatabase) -> N {\n         let root = db.parse_or_expand(self.file_id).unwrap();\n-        let node = db.ast_id_map(self.file_id)[self.file_ast_id.into()].to_node(&root);\n-        N::cast(node).unwrap()\n+        db.ast_id_map(self.file_id).get(self.file_ast_id).to_node(&root)\n     }\n }"}]}