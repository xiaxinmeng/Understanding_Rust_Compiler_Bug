{"sha": "a172439f29301d7c34645406f439f064edc58d69", "node_id": "C_kwDOAAsO6NoAKGExNzI0MzlmMjkzMDFkN2MzNDY0NTQwNmY0MzlmMDY0ZWRjNThkNjk", "commit": {"author": {"name": "hotate29", "email": "hotate_oc@yahoo.co.jp", "date": "2021-12-21T12:45:55Z"}, "committer": {"name": "hotate29", "email": "hotate_oc@yahoo.co.jp", "date": "2021-12-24T17:24:31Z"}, "message": "Change to enclose both sides of Range in parentheses.", "tree": {"sha": "2f56f0a0e7ddb1270a1754072fbe541a8b2771de", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2f56f0a0e7ddb1270a1754072fbe541a8b2771de"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a172439f29301d7c34645406f439f064edc58d69", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEaFZ9ibIIMdUY9nqJ23IOcqY4C1oFAmHGAlAACgkQ23IOcqY4\nC1pB+g//fwh5kZS4MMnvtwVCIe2OL+S/eqxlK7Fyi0Ct13vW3nxNIWaArpc74v6F\nDS6CnarbGKvPf6ug7Sw7sFLiNEy73TSwdH+eojojf46cd6oEDMr6wcUiw3LqhM0x\nt0giWFcaRWm/QKfuQzTuAtM1PrberYGMpzXCoK7fc0mfGvf70WNda/1xcai/o+Vo\nI1KaDLQf1Xkm78LKRHkMOzTHfrWm1f4lMZccruLvPZdlG8sFwU6mA1cDGMO9Jlxr\nNNffmocM4UrfwWG1kaBQHaPctTyfi/VUbtXIhY+QAEh0++Px67G0BEAC9earzJqH\nd0plMHpPFdIyxnR5vO2l0hY6DNyqiAc+zbBYJt8xHlk0Kd04LaPOgxi4JVEbe20K\nsX3ZQh4xDr0X17FqF2zTvBpd76Ifuy4VYPWNkDTKzljSfjM1aNOzhyYmWUMnLbrO\nK3F1Wh1EwerEWeWA1bYoVFRnUESg+fe2l17feqz/GFdfy90SUtKeM1r0R/jvFLsx\nVmr3izh1mRepb4nHuLo8HpmWdzKIxK/UnSSTyZvtytPTiuIYdPoWC7NybbKrTHd0\ni8lNke2b7Co1X/CVz0h7AM02KFpFbBCQdi0No7/CmLkTcTFh9FQA8oh2J2eIvFK4\nyCWNEqmBpmpRqk/mwptUwmV/JvSwxWXV/lIr2EonDC95sbInhM4=\n=Fbd9\n-----END PGP SIGNATURE-----", "payload": "tree 2f56f0a0e7ddb1270a1754072fbe541a8b2771de\nparent 07b6927180915ed6a8379c8cc9bec069d13ff0dc\nauthor hotate29 <hotate_oc@yahoo.co.jp> 1640090755 +0900\ncommitter hotate29 <hotate_oc@yahoo.co.jp> 1640366671 +0900\n\nChange to enclose both sides of Range in parentheses.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a172439f29301d7c34645406f439f064edc58d69", "html_url": "https://github.com/rust-lang/rust/commit/a172439f29301d7c34645406f439f064edc58d69", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a172439f29301d7c34645406f439f064edc58d69/comments", "author": {"login": "hotate29", "id": 44938840, "node_id": "MDQ6VXNlcjQ0OTM4ODQw", "avatar_url": "https://avatars.githubusercontent.com/u/44938840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hotate29", "html_url": "https://github.com/hotate29", "followers_url": "https://api.github.com/users/hotate29/followers", "following_url": "https://api.github.com/users/hotate29/following{/other_user}", "gists_url": "https://api.github.com/users/hotate29/gists{/gist_id}", "starred_url": "https://api.github.com/users/hotate29/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hotate29/subscriptions", "organizations_url": "https://api.github.com/users/hotate29/orgs", "repos_url": "https://api.github.com/users/hotate29/repos", "events_url": "https://api.github.com/users/hotate29/events{/privacy}", "received_events_url": "https://api.github.com/users/hotate29/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hotate29", "id": 44938840, "node_id": "MDQ6VXNlcjQ0OTM4ODQw", "avatar_url": "https://avatars.githubusercontent.com/u/44938840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hotate29", "html_url": "https://github.com/hotate29", "followers_url": "https://api.github.com/users/hotate29/followers", "following_url": "https://api.github.com/users/hotate29/following{/other_user}", "gists_url": "https://api.github.com/users/hotate29/gists{/gist_id}", "starred_url": "https://api.github.com/users/hotate29/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hotate29/subscriptions", "organizations_url": "https://api.github.com/users/hotate29/orgs", "repos_url": "https://api.github.com/users/hotate29/repos", "events_url": "https://api.github.com/users/hotate29/events{/privacy}", "received_events_url": "https://api.github.com/users/hotate29/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "07b6927180915ed6a8379c8cc9bec069d13ff0dc", "url": "https://api.github.com/repos/rust-lang/rust/commits/07b6927180915ed6a8379c8cc9bec069d13ff0dc", "html_url": "https://github.com/rust-lang/rust/commit/07b6927180915ed6a8379c8cc9bec069d13ff0dc"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "a1e67c33abf14668e0b207a94eb482866d12c4f6", "filename": "clippy_lints/src/ranges.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a172439f29301d7c34645406f439f064edc58d69/clippy_lints%2Fsrc%2Franges.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a172439f29301d7c34645406f439f064edc58d69/clippy_lints%2Fsrc%2Franges.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Franges.rs?ref=a172439f29301d7c34645406f439f064edc58d69", "patch": "@@ -378,8 +378,8 @@ fn check_exclusive_range_plus_one(cx: &LateContext<'_>, expr: &Expr<'_>) {\n                 span,\n                 \"an inclusive range would be more readable\",\n                 |diag| {\n-                    let start = start.map_or(String::new(), |x| Sugg::hir(cx, x, \"x\").to_string());\n-                    let end = Sugg::hir(cx, y, \"y\");\n+                    let start = start.map_or(String::new(), |x| Sugg::hir(cx, x, \"x\").maybe_par().to_string());\n+                    let end = Sugg::hir(cx, y, \"y\").maybe_par();\n                     if let Some(is_wrapped) = &snippet_opt(cx, span) {\n                         if is_wrapped.starts_with('(') && is_wrapped.ends_with(')') {\n                             diag.span_suggestion(\n@@ -415,8 +415,8 @@ fn check_inclusive_range_minus_one(cx: &LateContext<'_>, expr: &Expr<'_>) {\n                 expr.span,\n                 \"an exclusive range would be more readable\",\n                 |diag| {\n-                    let start = start.map_or(String::new(), |x| Sugg::hir(cx, x, \"x\").to_string());\n-                    let end = Sugg::hir(cx, y, \"y\");\n+                    let start = start.map_or(String::new(), |x| Sugg::hir(cx, x, \"x\").maybe_par().to_string());\n+                    let end = Sugg::hir(cx, y, \"y\").maybe_par();\n                     diag.span_suggestion(\n                         expr.span,\n                         \"use\","}]}