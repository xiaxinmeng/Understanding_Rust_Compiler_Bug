{"sha": "10fa9c595ab6cae7420eb879cabadc30db4d6d7e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEwZmE5YzU5NWFiNmNhZTc0MjBlYjg3OWNhYmFkYzMwZGI0ZDZkN2U=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-11-17T13:07:13Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-11-17T13:33:30Z"}, "message": "Simplify", "tree": {"sha": "6e68e2c7390cc319c72cd430859f325feb644e4e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6e68e2c7390cc319c72cd430859f325feb644e4e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/10fa9c595ab6cae7420eb879cabadc30db4d6d7e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/10fa9c595ab6cae7420eb879cabadc30db4d6d7e", "html_url": "https://github.com/rust-lang/rust/commit/10fa9c595ab6cae7420eb879cabadc30db4d6d7e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/10fa9c595ab6cae7420eb879cabadc30db4d6d7e/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8dd0b7d2b59cffda0aa788c5d3016fe75d31a2ff", "url": "https://api.github.com/repos/rust-lang/rust/commits/8dd0b7d2b59cffda0aa788c5d3016fe75d31a2ff", "html_url": "https://github.com/rust-lang/rust/commit/8dd0b7d2b59cffda0aa788c5d3016fe75d31a2ff"}], "stats": {"total": 4, "additions": 1, "deletions": 3}, "files": [{"sha": "a3ef33520f420cfbdaa2a04b5bb88c7945969054", "filename": "crates/assists/src/handlers/unwrap_block.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/10fa9c595ab6cae7420eb879cabadc30db4d6d7e/crates%2Fassists%2Fsrc%2Fhandlers%2Funwrap_block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/10fa9c595ab6cae7420eb879cabadc30db4d6d7e/crates%2Fassists%2Fsrc%2Fhandlers%2Funwrap_block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fassists%2Fsrc%2Fhandlers%2Funwrap_block.rs?ref=10fa9c595ab6cae7420eb879cabadc30db4d6d7e", "patch": "@@ -31,6 +31,7 @@ pub(crate) fn unwrap_block(acc: &mut Assists, ctx: &AssistContext) -> Option<()>\n \n     let l_curly_token = ctx.find_token_syntax_at_offset(T!['{'])?;\n     let mut block = ast::BlockExpr::cast(l_curly_token.parent())?;\n+    let target = block.syntax().text_range();\n     let mut parent = block.syntax().parent()?;\n     if ast::MatchArm::can_cast(parent.kind()) {\n         parent = parent.ancestors().find(|it| ast::MatchExpr::can_cast(it.kind()))?\n@@ -48,7 +49,6 @@ pub(crate) fn unwrap_block(acc: &mut Assists, ctx: &AssistContext) -> Option<()>\n                     // For `else if` blocks\n                     let ancestor_then_branch = ancestor.then_branch()?;\n \n-                    let target = then_branch.syntax().text_range();\n                     return acc.add(assist_id, assist_label, target, |edit| {\n                         let range_to_del_else_if = TextRange::new(\n                             ancestor_then_branch.syntax().text_range().end(),\n@@ -68,7 +68,6 @@ pub(crate) fn unwrap_block(acc: &mut Assists, ctx: &AssistContext) -> Option<()>\n                     });\n                 }\n             } else {\n-                let target = block.syntax().text_range();\n                 return acc.add(assist_id, assist_label, target, |edit| {\n                     let range_to_del = TextRange::new(\n                         then_branch.syntax().text_range().end(),\n@@ -83,7 +82,6 @@ pub(crate) fn unwrap_block(acc: &mut Assists, ctx: &AssistContext) -> Option<()>\n         _ => return None,\n     };\n \n-    let target = block.syntax().text_range();\n     let unwrapped = unwrap_trivial_block(block);\n     acc.add(assist_id, assist_label, target, |builder| {\n         builder.replace("}]}