{"sha": "4700e1188f66fdb4086b7593416b678b8fe935f4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ3MDBlMTE4OGY2NmZkYjQwODZiNzU5MzQxNmI2NzhiOGZlOTM1ZjQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-07-11T00:37:25Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-07-11T00:37:25Z"}, "message": "Auto merge of #52232 - arielb1:ill-adjusted-tuples, r=pnkfelix\n\n use the adjusted type for cat_pattern in tuple patterns\n\nThis looks like a typo introduced in #51686.\n\nFixes #52213.\n\nr? @pnkfelix\n\nbeta + stable nominating because regression + unsoundness.", "tree": {"sha": "fdcfdac9cb1b52826f0bd34957853c64984eef50", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fdcfdac9cb1b52826f0bd34957853c64984eef50"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4700e1188f66fdb4086b7593416b678b8fe935f4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4700e1188f66fdb4086b7593416b678b8fe935f4", "html_url": "https://github.com/rust-lang/rust/commit/4700e1188f66fdb4086b7593416b678b8fe935f4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4700e1188f66fdb4086b7593416b678b8fe935f4/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b9f1a0762a7c08c71f485fa4b152ed2477b07560", "url": "https://api.github.com/repos/rust-lang/rust/commits/b9f1a0762a7c08c71f485fa4b152ed2477b07560", "html_url": "https://github.com/rust-lang/rust/commit/b9f1a0762a7c08c71f485fa4b152ed2477b07560"}, {"sha": "4c044537ce11b5e291e341d90ee112a70b92b040", "url": "https://api.github.com/repos/rust-lang/rust/commits/4c044537ce11b5e291e341d90ee112a70b92b040", "html_url": "https://github.com/rust-lang/rust/commit/4c044537ce11b5e291e341d90ee112a70b92b040"}], "stats": {"total": 35, "additions": 31, "deletions": 4}, "files": [{"sha": "3b89a9d2de512fbdabf268db97fc85ec1a162b7e", "filename": "src/librustc/middle/mem_categorization.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4700e1188f66fdb4086b7593416b678b8fe935f4/src%2Flibrustc%2Fmiddle%2Fmem_categorization.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4700e1188f66fdb4086b7593416b678b8fe935f4/src%2Flibrustc%2Fmiddle%2Fmem_categorization.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fmem_categorization.rs?ref=4700e1188f66fdb4086b7593416b678b8fe935f4", "patch": "@@ -1347,7 +1347,7 @@ impl<'a, 'gcx, 'tcx> MemCategorizationContext<'a, 'gcx, 'tcx> {\n                 ref ty => span_bug!(pat.span, \"tuple pattern unexpected type {:?}\", ty),\n             };\n             for (i, subpat) in subpats.iter().enumerate_and_adjust(expected_len, ddpos) {\n-                let subpat_ty = self.pat_ty_unadjusted(&subpat)?; // see (*2)\n+                let subpat_ty = self.pat_ty_adjusted(&subpat)?; // see (*2)\n                 let interior = InteriorField(FieldIndex(i, Name::intern(&i.to_string())));\n                 let subcmt = Rc::new(self.cat_imm_interior(pat, cmt.clone(), subpat_ty, interior));\n                 self.cat_pattern_(subcmt, &subpat, op)?;"}, {"sha": "79ee322d1095a5c4f7e5113e18a591534cf39578", "filename": "src/librustc_typeck/check/regionck.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/4700e1188f66fdb4086b7593416b678b8fe935f4/src%2Flibrustc_typeck%2Fcheck%2Fregionck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4700e1188f66fdb4086b7593416b678b8fe935f4/src%2Flibrustc_typeck%2Fcheck%2Fregionck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fregionck.rs?ref=4700e1188f66fdb4086b7593416b678b8fe935f4", "patch": "@@ -105,7 +105,10 @@ use rustc::hir::{self, PatKind};\n \n // a variation on try that just returns unit\n macro_rules! ignore_err {\n-    ($e:expr) => (match $e { Ok(e) => e, Err(_) => return () })\n+    ($e:expr) => (match $e { Ok(e) => e, Err(_) => {\n+        debug!(\"ignoring mem-categorization error!\");\n+        return ()\n+    }})\n }\n \n ///////////////////////////////////////////////////////////////////////////\n@@ -1034,7 +1037,7 @@ impl<'a, 'gcx, 'tcx> RegionCtxt<'a, 'gcx, 'tcx> {\n         debug!(\"link_pattern(discr_cmt={:?}, root_pat={:?})\",\n                discr_cmt,\n                root_pat);\n-        let _ = self.with_mc(|mc| {\n+        ignore_err!(self.with_mc(|mc| {\n             mc.cat_pattern(discr_cmt, root_pat, |sub_cmt, sub_pat| {\n                 match sub_pat.node {\n                     // `ref x` pattern\n@@ -1051,7 +1054,7 @@ impl<'a, 'gcx, 'tcx> RegionCtxt<'a, 'gcx, 'tcx> {\n                     _ => {}\n                 }\n             })\n-        });\n+        }));\n     }\n \n     /// Link lifetime of borrowed pointer resulting from autoref to lifetimes in the value being"}, {"sha": "810379c63d3e1e49b3ac000a311578b7054c72b6", "filename": "src/test/compile-fail/issue-52213.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/4700e1188f66fdb4086b7593416b678b8fe935f4/src%2Ftest%2Fcompile-fail%2Fissue-52213.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4700e1188f66fdb4086b7593416b678b8fe935f4/src%2Ftest%2Fcompile-fail%2Fissue-52213.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-52213.rs?ref=4700e1188f66fdb4086b7593416b678b8fe935f4", "patch": "@@ -0,0 +1,24 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn transmute_lifetime<'a, 'b, T>(t: &'a (T,)) -> &'b T {\n+    match (&t,) { //~ ERROR cannot infer an appropriate lifetime\n+        ((u,),) => u,\n+    }\n+}\n+\n+fn main() {\n+    let x = {\n+        let y = Box::new((42,));\n+        transmute_lifetime(&y)\n+    };\n+\n+    println!(\"{}\", x);\n+}"}]}