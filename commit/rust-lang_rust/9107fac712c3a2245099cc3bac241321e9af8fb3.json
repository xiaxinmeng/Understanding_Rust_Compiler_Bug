{"sha": "9107fac712c3a2245099cc3bac241321e9af8fb3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkxMDdmYWM3MTJjM2EyMjQ1MDk5Y2MzYmFjMjQxMzIxZTlhZjhmYjM=", "commit": {"author": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2015-12-23T20:32:44Z"}, "committer": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2015-12-23T20:32:44Z"}, "message": "Merge pull request #719 from matklad/ignore-child-mods\n\nadd option to ignore out of line modules", "tree": {"sha": "be8cac69ead841323835ee377caf3d7a8c3319bb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/be8cac69ead841323835ee377caf3d7a8c3319bb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9107fac712c3a2245099cc3bac241321e9af8fb3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9107fac712c3a2245099cc3bac241321e9af8fb3", "html_url": "https://github.com/rust-lang/rust/commit/9107fac712c3a2245099cc3bac241321e9af8fb3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9107fac712c3a2245099cc3bac241321e9af8fb3/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "47f473dbd9af430e427ac63a636c360e4c358064", "url": "https://api.github.com/repos/rust-lang/rust/commits/47f473dbd9af430e427ac63a636c360e4c358064", "html_url": "https://github.com/rust-lang/rust/commit/47f473dbd9af430e427ac63a636c360e4c358064"}, {"sha": "a70b621607d62f11f9e9daa51e795bf26d6a6531", "url": "https://api.github.com/repos/rust-lang/rust/commits/a70b621607d62f11f9e9daa51e795bf26d6a6531", "html_url": "https://github.com/rust-lang/rust/commit/a70b621607d62f11f9e9daa51e795bf26d6a6531"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "3e369e1ef234edbeddf5c58a112fa8cc378af0d3", "filename": "src/bin/rustfmt.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9107fac712c3a2245099cc3bac241321e9af8fb3/src%2Fbin%2Frustfmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9107fac712c3a2245099cc3bac241321e9af8fb3/src%2Fbin%2Frustfmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Frustfmt.rs?ref=9107fac712c3a2245099cc3bac241321e9af8fb3", "patch": "@@ -79,6 +79,7 @@ fn lookup_and_read_project_file(input_file: &Path) -> io::Result<(PathBuf, Strin\n \n fn update_config(config: &mut Config, matches: &Matches) {\n     config.verbose = matches.opt_present(\"verbose\");\n+    config.skip_children = matches.opt_present(\"skip-children\");\n }\n \n fn execute() -> i32 {\n@@ -90,6 +91,7 @@ fn execute() -> i32 {\n                 \"write-mode\",\n                 \"mode to write in (not usable when piping from stdin)\",\n                 \"[replace|overwrite|display|diff|coverage]\");\n+    opts.optflag(\"\", \"skip-children\", \"don't reformat child modules\");\n \n     opts.optflag(\"\",\n                  \"config-help\","}, {"sha": "804ace83c6d47ab2c6b3e5c24157cafb0dc6704d", "filename": "src/config.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9107fac712c3a2245099cc3bac241321e9af8fb3/src%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9107fac712c3a2245099cc3bac241321e9af8fb3/src%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconfig.rs?ref=9107fac712c3a2245099cc3bac241321e9af8fb3", "patch": "@@ -259,6 +259,7 @@ macro_rules! create_config {\n \n create_config! {\n     verbose: bool, false, \"Use verbose output\";\n+    skip_children: bool, false, \"Don't reformat out of line modules\";\n     max_width: usize, 100, \"Maximum width of each line\";\n     ideal_width: usize, 80, \"Ideal width of each line\";\n     tab_spaces: usize, 4, \"Number of spaces per tab\";"}, {"sha": "bae42ed44fdc7c704769e9715302234496f0dd55", "filename": "src/lib.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9107fac712c3a2245099cc3bac241321e9af8fb3/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9107fac712c3a2245099cc3bac241321e9af8fb3/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=9107fac712c3a2245099cc3bac241321e9af8fb3", "patch": "@@ -298,11 +298,15 @@ impl fmt::Display for FormatReport {\n // Formatting which depends on the AST.\n fn fmt_ast(krate: &ast::Crate,\n            parse_session: &ParseSess,\n+           main_file: &Path,\n            config: &Config,\n            mode: WriteMode)\n            -> FileMap {\n     let mut file_map = FileMap::new();\n     for (path, module) in modules::list_files(krate, parse_session.codemap()) {\n+        if config.skip_children && path.as_path() != main_file {\n+            continue;\n+        }\n         let path = path.to_str().unwrap();\n         if config.verbose {\n             println!(\"Formatting {}\", path);\n@@ -431,7 +435,7 @@ pub fn format(file: &Path, config: &Config, mode: WriteMode) -> FileMap {\n     let emitter = Box::new(EmitterWriter::new(Box::new(Vec::new()), None));\n     parse_session.span_diagnostic.handler = Handler::with_emitter(false, emitter);\n \n-    let mut file_map = fmt_ast(&krate, &parse_session, config, mode);\n+    let mut file_map = fmt_ast(&krate, &parse_session, file, config, mode);\n \n     // For some reason, the codemap does not include terminating\n     // newlines so we must add one on for each file. This is sad."}]}