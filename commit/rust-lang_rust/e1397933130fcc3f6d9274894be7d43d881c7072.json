{"sha": "e1397933130fcc3f6d9274894be7d43d881c7072", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUxMzk3OTMzMTMwZmNjM2Y2ZDkyNzQ4OTRiZTdkNDNkODgxYzcwNzI=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2012-05-14T15:40:51Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2012-05-15T18:49:11Z"}, "message": "purge unused loop_cont field", "tree": {"sha": "2edef23f6962a4575b3359749e9bebd5adc460d6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2edef23f6962a4575b3359749e9bebd5adc460d6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e1397933130fcc3f6d9274894be7d43d881c7072", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e1397933130fcc3f6d9274894be7d43d881c7072", "html_url": "https://github.com/rust-lang/rust/commit/e1397933130fcc3f6d9274894be7d43d881c7072", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e1397933130fcc3f6d9274894be7d43d881c7072/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "efa2252cfcabe6aec34861d06fa10d0c174b8556", "url": "https://api.github.com/repos/rust-lang/rust/commits/efa2252cfcabe6aec34861d06fa10d0c174b8556", "html_url": "https://github.com/rust-lang/rust/commit/efa2252cfcabe6aec34861d06fa10d0c174b8556"}], "stats": {"total": 25, "additions": 8, "deletions": 17}, "files": [{"sha": "a5efe57d6ba54fef2beb6a67cfc63758c8be9b56", "filename": "src/rustc/middle/trans/base.rs", "status": "modified", "additions": 7, "deletions": 14, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/e1397933130fcc3f6d9274894be7d43d881c7072/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1397933130fcc3f6d9274894be7d43d881c7072/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs?ref=e1397933130fcc3f6d9274894be7d43d881c7072", "patch": "@@ -1783,8 +1783,7 @@ fn trans_while(cx: block, cond: @ast::expr, body: ast::blk)\n     -> block {\n     let _icx = cx.insn_ctxt(\"trans_while\");\n     let next_cx = sub_block(cx, \"while next\");\n-    let loop_cx = loop_scope_block(cx, cont_self, next_cx,\n-                                   \"while loop\", body.span);\n+    let loop_cx = loop_scope_block(cx, next_cx, \"`while`\", body.span);\n     let cond_cx = scope_block(loop_cx, \"while loop cond\");\n     let body_cx = scope_block(loop_cx, \"while loop body\");\n     Br(cx, loop_cx.llbb);\n@@ -1800,9 +1799,7 @@ fn trans_while(cx: block, cond: @ast::expr, body: ast::blk)\n fn trans_loop(cx:block, body: ast::blk) -> block {\n     let _icx = cx.insn_ctxt(\"trans_loop\");\n     let next_cx = sub_block(cx, \"next\");\n-    let body_cx =\n-        loop_scope_block(cx, cont_self, next_cx,\n-                                  \"infinite loop body\", body.span);\n+    let body_cx = loop_scope_block(cx, next_cx, \"`loop`\", body.span);\n     let body_end = trans_block(body_cx, body, ignore);\n     cleanup_and_Br(body_end, body_cx, body_cx.llbb);\n     Br(cx, body_cx.llbb);\n@@ -3567,14 +3564,11 @@ fn trans_break_cont(bcx: block, to_end: bool)\n     let mut target = bcx;\n     loop {\n         alt unwind.kind {\n-          block_scope({is_loop: some({cnt, brk}), _}) {\n+          block_scope({loop_break: some(brk), _}) {\n             target = if to_end {\n                 brk\n             } else {\n-                alt cnt {\n-                  cont_other(o) { o }\n-                  cont_self { unwind }\n-                }\n+                unwind\n             };\n             break;\n           }\n@@ -3755,7 +3749,7 @@ fn new_block(cx: fn_ctxt, parent: block_parent, kind: block_kind,\n }\n \n fn simple_block_scope() -> block_kind {\n-    block_scope({is_loop: none, mut cleanups: [],\n+    block_scope({loop_break: none, mut cleanups: [],\n                  mut cleanup_paths: [], mut landing_pad: none})\n }\n \n@@ -3770,11 +3764,10 @@ fn scope_block(bcx: block, n: str) -> block {\n                   n, none);\n }\n \n-fn loop_scope_block(bcx: block, _cont: loop_cont,\n-                    _break: block, n: str, sp: span)\n+fn loop_scope_block(bcx: block, loop_break: block, n: str, sp: span)\n     -> block {\n     ret new_block(bcx.fcx, parent_some(bcx), block_scope({\n-        is_loop: some({cnt: _cont, brk: _break}),\n+        loop_break: some(loop_break),\n         mut cleanups: [],\n         mut cleanup_paths: [],\n         mut landing_pad: none"}, {"sha": "fe84d36dfd57f2961997da5f607d80c5d8519add", "filename": "src/rustc/middle/trans/common.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e1397933130fcc3f6d9274894be7d43d881c7072/src%2Frustc%2Fmiddle%2Ftrans%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1397933130fcc3f6d9274894be7d43d881c7072/src%2Frustc%2Fmiddle%2Ftrans%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftrans%2Fcommon.rs?ref=e1397933130fcc3f6d9274894be7d43d881c7072", "patch": "@@ -300,10 +300,8 @@ enum block_kind {\n     block_non_scope,\n }\n \n-enum loop_cont { cont_self, cont_other(block), }\n-\n type scope_info = {\n-    is_loop: option<{cnt: loop_cont, brk: block}>,\n+    loop_break: option<block>,\n     // A list of functions that must be run at when leaving this\n     // block, cleaning up any variables that were introduced in the\n     // block."}]}