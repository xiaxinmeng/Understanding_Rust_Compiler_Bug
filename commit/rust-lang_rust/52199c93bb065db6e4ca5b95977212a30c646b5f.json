{"sha": "52199c93bb065db6e4ca5b95977212a30c646b5f", "node_id": "C_kwDOAAsO6NoAKDUyMTk5YzkzYmIwNjVkYjZlNGNhNWI5NTk3NzIxMmEzMGM2NDZiNWY", "commit": {"author": {"name": "5225225", "email": "5225225@mailbox.org", "date": "2021-11-13T12:46:22Z"}, "committer": {"name": "5225225", "email": "5225225@mailbox.org", "date": "2021-11-16T08:06:30Z"}, "message": "Suggest removing the non-printing characters", "tree": {"sha": "38d909d603262a245ea62b4a98dfa70cb0a761f1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/38d909d603262a245ea62b4a98dfa70cb0a761f1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/52199c93bb065db6e4ca5b95977212a30c646b5f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/52199c93bb065db6e4ca5b95977212a30c646b5f", "html_url": "https://github.com/rust-lang/rust/commit/52199c93bb065db6e4ca5b95977212a30c646b5f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/52199c93bb065db6e4ca5b95977212a30c646b5f/comments", "author": {"login": "5225225", "id": 8584210, "node_id": "MDQ6VXNlcjg1ODQyMTA=", "avatar_url": "https://avatars.githubusercontent.com/u/8584210?v=4", "gravatar_id": "", "url": "https://api.github.com/users/5225225", "html_url": "https://github.com/5225225", "followers_url": "https://api.github.com/users/5225225/followers", "following_url": "https://api.github.com/users/5225225/following{/other_user}", "gists_url": "https://api.github.com/users/5225225/gists{/gist_id}", "starred_url": "https://api.github.com/users/5225225/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/5225225/subscriptions", "organizations_url": "https://api.github.com/users/5225225/orgs", "repos_url": "https://api.github.com/users/5225225/repos", "events_url": "https://api.github.com/users/5225225/events{/privacy}", "received_events_url": "https://api.github.com/users/5225225/received_events", "type": "User", "site_admin": false}, "committer": {"login": "5225225", "id": 8584210, "node_id": "MDQ6VXNlcjg1ODQyMTA=", "avatar_url": "https://avatars.githubusercontent.com/u/8584210?v=4", "gravatar_id": "", "url": "https://api.github.com/users/5225225", "html_url": "https://github.com/5225225", "followers_url": "https://api.github.com/users/5225225/followers", "following_url": "https://api.github.com/users/5225225/following{/other_user}", "gists_url": "https://api.github.com/users/5225225/gists{/gist_id}", "starred_url": "https://api.github.com/users/5225225/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/5225225/subscriptions", "organizations_url": "https://api.github.com/users/5225225/orgs", "repos_url": "https://api.github.com/users/5225225/repos", "events_url": "https://api.github.com/users/5225225/events{/privacy}", "received_events_url": "https://api.github.com/users/5225225/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "de05d3ec31f22b1f3afaf8b5ceddf224492c4aaa", "url": "https://api.github.com/repos/rust-lang/rust/commits/de05d3ec31f22b1f3afaf8b5ceddf224492c4aaa", "html_url": "https://github.com/rust-lang/rust/commit/de05d3ec31f22b1f3afaf8b5ceddf224492c4aaa"}], "stats": {"total": 33, "additions": 24, "deletions": 9}, "files": [{"sha": "aa7ab4a953ca29c906adfd6e7dc16f8388b3ddfd", "filename": "compiler/rustc_parse/src/lexer/unescape_error_reporting.rs", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/52199c93bb065db6e4ca5b95977212a30c646b5f/compiler%2Frustc_parse%2Fsrc%2Flexer%2Funescape_error_reporting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52199c93bb065db6e4ca5b95977212a30c646b5f/compiler%2Frustc_parse%2Fsrc%2Flexer%2Funescape_error_reporting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Flexer%2Funescape_error_reporting.rs?ref=52199c93bb065db6e4ca5b95977212a30c646b5f", "patch": "@@ -7,6 +7,10 @@ use rustc_errors::{pluralize, Applicability, Handler};\n use rustc_lexer::unescape::{EscapeError, Mode};\n use rustc_span::{BytePos, Span};\n \n+fn printing(ch: char) -> bool {\n+    unicode_width::UnicodeWidthChar::width(ch).unwrap_or(0) != 0 && !ch.is_whitespace()\n+}\n+\n pub(crate) fn emit_unescape_error(\n     handler: &Handler,\n     // interior part of the literal, without quotes\n@@ -83,14 +87,25 @@ pub(crate) fn emit_unescape_error(\n                     );\n                 }\n             } else {\n-                if lit.chars().filter(|x| x.is_whitespace() || x.is_control()).count() >= 1 {\n+                let printable: Vec<char> = lit.chars().filter(|x| printing(*x)).collect();\n+\n+                if let [ch] = printable.as_slice() {\n+                    has_help = true;\n+\n                     handler.span_note(\n                         span,\n                         &format!(\n                             \"there are non-printing characters, the full sequence is `{}`\",\n                             lit.escape_default(),\n                         ),\n                     );\n+\n+                    handler.span_suggestion(\n+                        span,\n+                        \"consider removing the non-printing characters\",\n+                        ch.to_string(),\n+                        Applicability::MaybeIncorrect,\n+                    );\n                 }\n             }\n "}, {"sha": "de5e09204b46298027efc90efd86a72f3899bf9c", "filename": "src/test/ui/parser/char/whitespace-character-literal.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/52199c93bb065db6e4ca5b95977212a30c646b5f/src%2Ftest%2Fui%2Fparser%2Fchar%2Fwhitespace-character-literal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52199c93bb065db6e4ca5b95977212a30c646b5f/src%2Ftest%2Fui%2Fparser%2Fchar%2Fwhitespace-character-literal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fchar%2Fwhitespace-character-literal.rs?ref=52199c93bb065db6e4ca5b95977212a30c646b5f", "patch": "@@ -2,8 +2,9 @@\n // characters in it contains a note about non-printing characters.\n \n fn main() {\n-    // <hair space>x<zero width space>\n     let _hair_space_around = '\u200ax\u200b';\n     //~^ ERROR: character literal may only contain one codepoint\n     //~| NOTE: there are non-printing characters, the full sequence is `\\u{200a}x\\u{200b}`\n+    //~| HELP: consider removing the non-printing characters\n+    //~| SUGGESTION: x\n }"}, {"sha": "aa4fe4cf01f6475a105a369d2864664745514198", "filename": "src/test/ui/parser/char/whitespace-character-literal.stderr", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/52199c93bb065db6e4ca5b95977212a30c646b5f/src%2Ftest%2Fui%2Fparser%2Fchar%2Fwhitespace-character-literal.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/52199c93bb065db6e4ca5b95977212a30c646b5f/src%2Ftest%2Fui%2Fparser%2Fchar%2Fwhitespace-character-literal.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fchar%2Fwhitespace-character-literal.stderr?ref=52199c93bb065db6e4ca5b95977212a30c646b5f", "patch": "@@ -1,18 +1,17 @@\n+['x']\n error: character literal may only contain one codepoint\n-  --> $DIR/whitespace-character-literal.rs:6:30\n+  --> $DIR/whitespace-character-literal.rs:5:30\n    |\n LL |     let _hair_space_around = '\u200ax\u200b';\n-   |                              ^^^^\n+   |                              ^--^\n+   |                               |\n+   |                               help: consider removing the non-printing characters: `x`\n    |\n note: there are non-printing characters, the full sequence is `\\u{200a}x\\u{200b}`\n-  --> $DIR/whitespace-character-literal.rs:6:31\n+  --> $DIR/whitespace-character-literal.rs:5:31\n    |\n LL |     let _hair_space_around = '\u200ax\u200b';\n    |                               ^^\n-help: if you meant to write a `str` literal, use double quotes\n-   |\n-LL |     let _hair_space_around = \"\u200ax\u200b\";\n-   |                              ~~~~\n \n error: aborting due to previous error\n "}]}