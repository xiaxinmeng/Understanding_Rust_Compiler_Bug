{"sha": "16d5aaa96217555f4cba76e03b60ca7d1aaad935", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE2ZDVhYWE5NjIxNzU1NWY0Y2JhNzZlMDNiNjBjYTdkMWFhYWQ5MzU=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-09-28T08:41:19Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-09-28T08:41:19Z"}, "message": "Wait with registering cleanups for locals until after the init code ran\n\nFixes a double-cleanup that was breaking unwind-tup.rs under valgrind.", "tree": {"sha": "9f97930c668ee0275d2c041e3f2257ad82792463", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9f97930c668ee0275d2c041e3f2257ad82792463"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/16d5aaa96217555f4cba76e03b60ca7d1aaad935", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/16d5aaa96217555f4cba76e03b60ca7d1aaad935", "html_url": "https://github.com/rust-lang/rust/commit/16d5aaa96217555f4cba76e03b60ca7d1aaad935", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/16d5aaa96217555f4cba76e03b60ca7d1aaad935/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e3626c940524c49d51d586b13375f64a52d44666", "url": "https://api.github.com/repos/rust-lang/rust/commits/e3626c940524c49d51d586b13375f64a52d44666", "html_url": "https://github.com/rust-lang/rust/commit/e3626c940524c49d51d586b13375f64a52d44666"}], "stats": {"total": 9, "additions": 4, "deletions": 5}, "files": [{"sha": "d31fd6cbf3ceb0a5caf9b218afab329aa73e244b", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/16d5aaa96217555f4cba76e03b60ca7d1aaad935/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16d5aaa96217555f4cba76e03b60ca7d1aaad935/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=16d5aaa96217555f4cba76e03b60ca7d1aaad935", "patch": "@@ -4676,8 +4676,6 @@ fn trans_be(cx: @block_ctxt, e: @ast::expr) : ast_util::is_call_expr(e) ->\n fn init_local(bcx: @block_ctxt, local: @ast::local) -> @block_ctxt {\n     let ty = node_id_type(bcx_ccx(bcx), local.node.id);\n     let llptr = bcx.fcx.lllocals.get(local.node.id);\n-    // Make a note to drop this slot on the way out.\n-    add_clean(bcx, llptr, ty);\n \n     if must_zero(bcx_ccx(bcx), local) {\n         bcx = zero_alloca(bcx, llptr, ty);\n@@ -4698,9 +4696,10 @@ fn init_local(bcx: @block_ctxt, local: @ast::local) -> @block_ctxt {\n       }\n       _ { }\n     }\n-    bcx =\n-        trans_alt::bind_irrefutable_pat(bcx, local.node.pat, llptr,\n-                                        bcx.fcx.lllocals, false);\n+    // Make a note to drop this slot on the way out.\n+    add_clean(bcx, llptr, ty);\n+    bcx = trans_alt::bind_irrefutable_pat(bcx, local.node.pat, llptr,\n+                                          bcx.fcx.lllocals, false);\n     ret bcx;\n \n     fn must_zero(ccx: @crate_ctxt, local: @ast::local) -> bool {"}]}