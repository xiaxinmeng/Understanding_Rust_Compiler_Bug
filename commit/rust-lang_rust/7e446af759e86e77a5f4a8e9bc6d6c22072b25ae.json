{"sha": "7e446af759e86e77a5f4a8e9bc6d6c22072b25ae", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdlNDQ2YWY3NTllODZlNzdhNWY0YThlOWJjNmQ2YzIyMDcyYjI1YWU=", "commit": {"author": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2014-01-06T14:45:10Z"}, "committer": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2014-01-07T13:31:24Z"}, "message": "std::trie: make lower_bound and upper_bound about 15% faster.\n\nI believe this is mainly due to code-size reduction.\n\nBefore:\n\n    test [...]::bench_lower_bound ... bench:       818 ns/iter (+/- 100)\n    test [...]::bench_upper_bound ... bench:       939 ns/iter (+/- 34)\n\nAfter:\n\n    test [...]::bench_lower_bound ... bench:       698 ns/iter (+/- 60)\n    test [...]::bench_upper_bound ... bench:       817 ns/iter (+/- 20)", "tree": {"sha": "5dbc7014b5635fb8576bf69e49fd7c45075363be", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5dbc7014b5635fb8576bf69e49fd7c45075363be"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7e446af759e86e77a5f4a8e9bc6d6c22072b25ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7e446af759e86e77a5f4a8e9bc6d6c22072b25ae", "html_url": "https://github.com/rust-lang/rust/commit/7e446af759e86e77a5f4a8e9bc6d6c22072b25ae", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7e446af759e86e77a5f4a8e9bc6d6c22072b25ae/comments", "author": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3395f9d6a10aa912ab88de2e8d5b4f7de407413a", "url": "https://api.github.com/repos/rust-lang/rust/commits/3395f9d6a10aa912ab88de2e8d5b4f7de407413a", "html_url": "https://github.com/rust-lang/rust/commit/3395f9d6a10aa912ab88de2e8d5b4f7de407413a"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "d864cde2953ea1ad30760455cbce86f14a803d85", "filename": "src/libstd/trie.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/7e446af759e86e77a5f4a8e9bc6d6c22072b25ae/src%2Flibstd%2Ftrie.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e446af759e86e77a5f4a8e9bc6d6c22072b25ae/src%2Flibstd%2Ftrie.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ftrie.rs?ref=7e446af759e86e77a5f4a8e9bc6d6c22072b25ae", "patch": "@@ -198,24 +198,24 @@ macro_rules! bound {\n             addr!(loop {\n                     let children = unsafe {addr!(& $($mut_)* (*node).children)};\n                     let child_id = chunk(key, idx);\n-                    match children[child_id] {\n+                    let (slice_idx, ret) = match children[child_id] {\n                         Internal(ref $($mut_)* n) => {\n                             node = addr!(& $($mut_)* **n as * $($mut_)* TrieNode<T>);\n+                            (child_id + 1, false)\n                         }\n                         External(stored, _) => {\n-                            if stored < key || ($upper && stored == key) {\n-                                it.stack.push(children.$slice_from(child_id + 1).$iter());\n+                            (if stored < key || ($upper && stored == key) {\n+                                child_id + 1\n                             } else {\n-                                it.stack.push(children.$slice_from(child_id).$iter());\n-                            }\n-                            return it;\n+                                child_id\n+                            }, true)\n                         }\n                         Nothing => {\n-                            it.stack.push(children.$slice_from(child_id + 1).$iter());\n-                            return it\n+                            (child_id + 1, true)\n                         }\n-                    }\n-                    it.stack.push(children.$slice_from(child_id + 1).$iter());\n+                    };\n+                    it.stack.push(children.$slice_from(slice_idx).$iter());\n+                    if ret { return it }\n                     idx += 1;\n                 })\n         }"}]}