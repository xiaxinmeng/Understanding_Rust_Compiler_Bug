{"sha": "3a0791e68080297fe7b8d622f037037108e67148", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNhMDc5MWU2ODA4MDI5N2ZlN2I4ZDYyMmYwMzcwMzcxMDhlNjcxNDg=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-03-24T15:11:38Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-03-29T08:45:45Z"}, "message": "make sure `a < b` and `a >= b` are considered equal by SpanlessEq", "tree": {"sha": "8c1465e3ac645fe016970dcc534cca9cb99cb726", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8c1465e3ac645fe016970dcc534cca9cb99cb726"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3a0791e68080297fe7b8d622f037037108e67148", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3a0791e68080297fe7b8d622f037037108e67148", "html_url": "https://github.com/rust-lang/rust/commit/3a0791e68080297fe7b8d622f037037108e67148", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3a0791e68080297fe7b8d622f037037108e67148/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "25bbde091a9cf1f903b9dc418de2920c1a099c1f", "url": "https://api.github.com/repos/rust-lang/rust/commits/25bbde091a9cf1f903b9dc418de2920c1a099c1f", "html_url": "https://github.com/rust-lang/rust/commit/25bbde091a9cf1f903b9dc418de2920c1a099c1f"}], "stats": {"total": 37, "additions": 35, "deletions": 2}, "files": [{"sha": "0659e26d0f27fe85d726bb14fa974cea482d5154", "filename": "src/utils/hir.rs", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/3a0791e68080297fe7b8d622f037037108e67148/src%2Futils%2Fhir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a0791e68080297fe7b8d622f037037108e67148/src%2Futils%2Fhir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Futils%2Fhir.rs?ref=3a0791e68080297fe7b8d622f037037108e67148", "patch": "@@ -75,7 +75,8 @@ impl<'a, 'tcx: 'a> SpanlessEq<'a, 'tcx> {\n             }\n             (&ExprBlock(ref l), &ExprBlock(ref r)) => self.eq_block(l, r),\n             (&ExprBinary(l_op, ref ll, ref lr), &ExprBinary(r_op, ref rl, ref rr)) => {\n-                l_op.node == r_op.node && self.eq_expr(ll, rl) && self.eq_expr(lr, rr)\n+                l_op.node == r_op.node && self.eq_expr(ll, rl) && self.eq_expr(lr, rr) ||\n+                swap_binop(l_op.node, ll, lr).map_or(false, |(l_op, ll, lr)| l_op == r_op.node && self.eq_expr(ll, rl) && self.eq_expr(lr, rr))\n             }\n             (&ExprBreak(li), &ExprBreak(ri)) => both(&li, &ri, |l, r| l.node.name.as_str() == r.node.name.as_str()),\n             (&ExprBox(ref l), &ExprBox(ref r)) => self.eq_expr(l, r),\n@@ -197,6 +198,23 @@ impl<'a, 'tcx: 'a> SpanlessEq<'a, 'tcx> {\n     }\n }\n \n+fn swap_binop<'a>(binop: BinOp_, lhs: &'a Expr, rhs: &'a Expr) -> Option<(BinOp_, &'a Expr, &'a Expr)> {\n+    match binop {\n+        BiAdd |\n+        BiMul |\n+        BiBitXor |\n+        BiBitAnd |\n+        BiEq |\n+        BiNe |\n+        BiBitOr => Some((binop, rhs, lhs)),\n+        BiLt => Some((BiGt, rhs, lhs)),\n+        BiLe => Some((BiGe, rhs, lhs)),\n+        BiGe => Some((BiLe, rhs, lhs)),\n+        BiGt => Some((BiLt, rhs, lhs)),\n+        BiShl | BiShr | BiRem | BiSub | BiDiv | BiAnd | BiOr => None,\n+    }\n+}\n+\n /// Check if the two `Option`s are both `None` or some equal values as per `eq_fn`.\n fn both<X, F>(l: &Option<X>, r: &Option<X>, mut eq_fn: F) -> bool\n     where F: FnMut(&X, &X) -> bool"}, {"sha": "43528f5c5dfcd2f46e613afd54b5ebb90df42d3c", "filename": "tests/compile-fail/booleans.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3a0791e68080297fe7b8d622f037037108e67148/tests%2Fcompile-fail%2Fbooleans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a0791e68080297fe7b8d622f037037108e67148/tests%2Fcompile-fail%2Fbooleans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fbooleans.rs?ref=3a0791e68080297fe7b8d622f037037108e67148", "patch": "@@ -58,6 +58,9 @@ fn equality_stuff() {\n     let _ = a == b && c == 5 && a == b; //~ ERROR this boolean expression can be simplified\n     //|~ HELP for further information visit\n     //|~ SUGGESTION let _ = c == 5 && a == b;\n+    let _ = a == b && c == 5 && b == a; //~ ERROR this boolean expression can be simplified\n+    //|~ HELP for further information visit\n+    //|~ SUGGESTION let _ = c == 5 && a == b;\n     let _ = a < b && a >= b;\n     let _ = a > b && a <= b;\n     let _ = a > b && a == b;"}, {"sha": "443bbbaacd3670344e545b932334472bfd69dfca", "filename": "tests/compile-fail/eq_op.rs", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/3a0791e68080297fe7b8d622f037037108e67148/tests%2Fcompile-fail%2Feq_op.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a0791e68080297fe7b8d622f037037108e67148/tests%2Fcompile-fail%2Feq_op.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Feq_op.rs?ref=3a0791e68080297fe7b8d622f037037108e67148", "patch": "@@ -3,7 +3,7 @@\n \n #[deny(eq_op)]\n #[allow(identity_op)]\n-#[allow(no_effect)]\n+#[allow(no_effect, unused_variables)]\n #[deny(nonminimal_bool)]\n fn main() {\n     // simple values and comparisons\n@@ -43,6 +43,18 @@ fn main() {\n     true || true; //~ERROR equal expressions\n     //~|ERROR this boolean expression can be simplified\n \n+    let a: u32 = unimplemented!();\n+    let b: u32 = unimplemented!();\n+\n+    a == b && b == a; //~ERROR equal expressions\n+    //~|ERROR this boolean expression can be simplified\n+    a != b && b != a; //~ERROR equal expressions\n+    //~|ERROR this boolean expression can be simplified\n+    a < b && b > a; //~ERROR equal expressions\n+    //~|ERROR this boolean expression can be simplified\n+    a <= b && b >= a; //~ERROR equal expressions\n+    //~|ERROR this boolean expression can be simplified\n+\n     let mut a = vec![1];\n     a == a; //~ERROR equal expressions\n     2*a.len() == 2*a.len(); // ok, functions"}]}