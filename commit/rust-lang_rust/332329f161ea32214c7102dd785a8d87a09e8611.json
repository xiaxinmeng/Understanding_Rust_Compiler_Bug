{"sha": "332329f161ea32214c7102dd785a8d87a09e8611", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMzMjMyOWYxNjFlYTMyMjE0YzcxMDJkZDc4NWE4ZDg3YTA5ZTg2MTE=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2012-03-09T16:55:39Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2012-03-15T09:22:46Z"}, "message": "Don't pass an undef retptr to generic intrinsics\n\nIt leads to segfaults", "tree": {"sha": "9bc479ce5d0c6ab856ed2ea167a520a4de625f65", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9bc479ce5d0c6ab856ed2ea167a520a4de625f65"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/332329f161ea32214c7102dd785a8d87a09e8611", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/332329f161ea32214c7102dd785a8d87a09e8611", "html_url": "https://github.com/rust-lang/rust/commit/332329f161ea32214c7102dd785a8d87a09e8611", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/332329f161ea32214c7102dd785a8d87a09e8611/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b6ad34bef4f0b3613d51557cd327055a2c5311fd", "url": "https://api.github.com/repos/rust-lang/rust/commits/b6ad34bef4f0b3613d51557cd327055a2c5311fd", "html_url": "https://github.com/rust-lang/rust/commit/b6ad34bef4f0b3613d51557cd327055a2c5311fd"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "5c8e8344971a79852fc6d1f9da45a0a7c7ee280c", "filename": "src/rustc/middle/trans/base.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/332329f161ea32214c7102dd785a8d87a09e8611/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/332329f161ea32214c7102dd785a8d87a09e8611/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs?ref=332329f161ea32214c7102dd785a8d87a09e8611", "patch": "@@ -2671,9 +2671,8 @@ fn trans_arg_expr(cx: block, arg: ty::arg, lldestty: TypeRef, e: @ast::expr,\n //  - new_fn_ctxt\n //  - trans_args\n fn trans_args(cx: block, llenv: ValueRef, es: [@ast::expr], fn_ty: ty::t,\n-              dest: dest) -> {bcx: block,\n-                              args: [ValueRef],\n-                              retslot: ValueRef} {\n+              dest: dest, generic_intrinsic: bool)\n+    -> {bcx: block, args: [ValueRef], retslot: ValueRef} {\n \n     let temp_cleanups = [];\n     let args = ty::ty_fn_args(fn_ty);\n@@ -2686,7 +2685,7 @@ fn trans_args(cx: block, llenv: ValueRef, es: [@ast::expr], fn_ty: ty::t,\n     // Arg 0: Output pointer.\n     let llretslot = alt dest {\n       ignore {\n-        if ty::type_is_nil(retty) {\n+        if ty::type_is_nil(retty) && !generic_intrinsic {\n             llvm::LLVMGetUndef(T_ptr(T_nil()))\n         } else {\n             let {bcx: cx, val} = alloc_ty(bcx, retty);\n@@ -2770,7 +2769,8 @@ fn trans_call_inner(in_cx: block, fn_expr_ty: ty::t,\n         };\n \n         let ret_ty = node_id_type(bcx, id);\n-        let args_res = trans_args(bcx, llenv, args, fn_expr_ty, dest);\n+        let args_res = trans_args(bcx, llenv, args, fn_expr_ty, dest,\n+                                  option::is_some(f_res.tds));\n         bcx = args_res.bcx;\n         let llargs = args_res.args;\n         option::may(f_res.tds) {|vals|"}]}