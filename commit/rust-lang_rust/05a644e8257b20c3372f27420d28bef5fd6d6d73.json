{"sha": "05a644e8257b20c3372f27420d28bef5fd6d6d73", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA1YTY0NGU4MjU3YjIwYzMzNzJmMjc0MjBkMjhiZWY1ZmQ2ZDZkNzM=", "commit": {"author": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2019-07-04T13:51:55Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-10-11T08:43:54Z"}, "message": "Update src/librustc_typeck/check/mod.rs\n\nCo-Authored-By: Mazdak Farrokhzad <twingoow@gmail.com>", "tree": {"sha": "a8e8e4abe795bfac601b45ce07a47dcd06e40320", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a8e8e4abe795bfac601b45ce07a47dcd06e40320"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/05a644e8257b20c3372f27420d28bef5fd6d6d73", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/05a644e8257b20c3372f27420d28bef5fd6d6d73", "html_url": "https://github.com/rust-lang/rust/commit/05a644e8257b20c3372f27420d28bef5fd6d6d73", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/05a644e8257b20c3372f27420d28bef5fd6d6d73/comments", "author": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e247a40a1c5f37cf76ca41d5bbee09985a809529", "url": "https://api.github.com/repos/rust-lang/rust/commits/e247a40a1c5f37cf76ca41d5bbee09985a809529", "html_url": "https://github.com/rust-lang/rust/commit/e247a40a1c5f37cf76ca41d5bbee09985a809529"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "294d1992b9d9def76765f26fc6468abb5262c04a", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/05a644e8257b20c3372f27420d28bef5fd6d6d73/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/05a644e8257b20c3372f27420d28bef5fd6d6d73/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=05a644e8257b20c3372f27420d28bef5fd6d6d73", "patch": "@@ -1402,7 +1402,7 @@ fn check_union_fields<'tcx>(tcx: TyCtxt<'tcx>, _sp: Span, item_def_id: DefId) ->\n             let fields = &def.non_enum_variant().fields;\n             for field in fields {\n                 let field_ty = field.ty(tcx, substs);\n-                // We are currently checking the type this field came from, so it must be local\n+                // We are currently checking the type this field came from, so it must be local.\n                 let field_span = tcx.hir().span_if_local(field.did).unwrap();\n                 let param_env = tcx.param_env(field.did);\n                 if field_ty.needs_drop(tcx, param_env) {"}]}