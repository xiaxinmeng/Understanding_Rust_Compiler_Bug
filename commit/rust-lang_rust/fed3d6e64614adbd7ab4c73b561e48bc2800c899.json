{"sha": "fed3d6e64614adbd7ab4c73b561e48bc2800c899", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZlZDNkNmU2NDYxNGFkYmQ3YWI0YzczYjU2MWU0OGJjMjgwMGM4OTk=", "commit": {"author": {"name": "Tim Diekmann", "email": "tim.diekmann@3dvision.de", "date": "2020-03-25T18:12:06Z"}, "committer": {"name": "Tim Diekmann", "email": "tim.diekmann@3dvision.de", "date": "2020-03-26T16:13:47Z"}, "message": "Fix safety section of `RawVec::into_box`", "tree": {"sha": "c39c5fadf6b6c0cebae2e3040c02de7917a56c0b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c39c5fadf6b6c0cebae2e3040c02de7917a56c0b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fed3d6e64614adbd7ab4c73b561e48bc2800c899", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fed3d6e64614adbd7ab4c73b561e48bc2800c899", "html_url": "https://github.com/rust-lang/rust/commit/fed3d6e64614adbd7ab4c73b561e48bc2800c899", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fed3d6e64614adbd7ab4c73b561e48bc2800c899/comments", "author": {"login": "TimDiekmann", "id": 21277928, "node_id": "MDQ6VXNlcjIxMjc3OTI4", "avatar_url": "https://avatars.githubusercontent.com/u/21277928?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TimDiekmann", "html_url": "https://github.com/TimDiekmann", "followers_url": "https://api.github.com/users/TimDiekmann/followers", "following_url": "https://api.github.com/users/TimDiekmann/following{/other_user}", "gists_url": "https://api.github.com/users/TimDiekmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/TimDiekmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TimDiekmann/subscriptions", "organizations_url": "https://api.github.com/users/TimDiekmann/orgs", "repos_url": "https://api.github.com/users/TimDiekmann/repos", "events_url": "https://api.github.com/users/TimDiekmann/events{/privacy}", "received_events_url": "https://api.github.com/users/TimDiekmann/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TimDiekmann", "id": 21277928, "node_id": "MDQ6VXNlcjIxMjc3OTI4", "avatar_url": "https://avatars.githubusercontent.com/u/21277928?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TimDiekmann", "html_url": "https://github.com/TimDiekmann", "followers_url": "https://api.github.com/users/TimDiekmann/followers", "following_url": "https://api.github.com/users/TimDiekmann/following{/other_user}", "gists_url": "https://api.github.com/users/TimDiekmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/TimDiekmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TimDiekmann/subscriptions", "organizations_url": "https://api.github.com/users/TimDiekmann/orgs", "repos_url": "https://api.github.com/users/TimDiekmann/repos", "events_url": "https://api.github.com/users/TimDiekmann/events{/privacy}", "received_events_url": "https://api.github.com/users/TimDiekmann/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cbbdca059404a102db9daf2fa50ca8c1c9fc5ad2", "url": "https://api.github.com/repos/rust-lang/rust/commits/cbbdca059404a102db9daf2fa50ca8c1c9fc5ad2", "html_url": "https://github.com/rust-lang/rust/commit/cbbdca059404a102db9daf2fa50ca8c1c9fc5ad2"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "baa642580579ec89bf55903d0358a2845ff53ed2", "filename": "src/liballoc/raw_vec.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/fed3d6e64614adbd7ab4c73b561e48bc2800c899/src%2Fliballoc%2Fraw_vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fed3d6e64614adbd7ab4c73b561e48bc2800c899/src%2Fliballoc%2Fraw_vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fraw_vec.rs?ref=fed3d6e64614adbd7ab4c73b561e48bc2800c899", "patch": "@@ -574,7 +574,8 @@ impl<T> RawVec<T, Global> {\n     ///\n     /// # Safety\n     ///\n-    /// * `len` must be smaller than or equal to `self.capacity()`\n+    /// `shrink_to_fit(len)` must be called immediately prior to calling this function. This\n+    /// implies, that `len` must be smaller than or equal to `self.capacity()`.\n     pub unsafe fn into_box(self, len: usize) -> Box<[MaybeUninit<T>]> {\n         debug_assert!(\n             len <= self.capacity(),"}]}