{"sha": "e4ab4ee020479d9312560e29056313ee9836c6d2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU0YWI0ZWUwMjA0NzlkOTMxMjU2MGUyOTA1NjMxM2VlOTgzNmM2ZDI=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2020-04-23T11:24:50Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2020-04-23T13:56:26Z"}, "message": "Update src/librustc_mir/interpret/memory.rs\n\nCo-Authored-By: Ralf Jung <post@ralfj.de>", "tree": {"sha": "df4604438f80667e40802d7235a7b2826bdea731", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/df4604438f80667e40802d7235a7b2826bdea731"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e4ab4ee020479d9312560e29056313ee9836c6d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e4ab4ee020479d9312560e29056313ee9836c6d2", "html_url": "https://github.com/rust-lang/rust/commit/e4ab4ee020479d9312560e29056313ee9836c6d2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e4ab4ee020479d9312560e29056313ee9836c6d2/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "af44cdf04fddf4d18efee49c0c683cb4bbce71fa", "url": "https://api.github.com/repos/rust-lang/rust/commits/af44cdf04fddf4d18efee49c0c683cb4bbce71fa", "html_url": "https://github.com/rust-lang/rust/commit/af44cdf04fddf4d18efee49c0c683cb4bbce71fa"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "6f8b0c1445a16391419d5b4c0a554a3a367c055c", "filename": "src/librustc_mir/interpret/memory.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e4ab4ee020479d9312560e29056313ee9836c6d2/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e4ab4ee020479d9312560e29056313ee9836c6d2/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs?ref=e4ab4ee020479d9312560e29056313ee9836c6d2", "patch": "@@ -404,7 +404,9 @@ impl<'mir, 'tcx, M: Machine<'mir, 'tcx>> Memory<'mir, 'tcx, M> {\n                     // We may be reading from a static.\n                     // In order to ensure that `static FOO: Type = FOO;` causes a cycle error\n                     // instead of magically pulling *any* ZST value from the ether, we need to\n-                    // trigger a read here.\n+                    // actually access the referenced allocation. The caller is likely\n+                    // to short-circuit on `None`, so we trigger the access here to\n+                    // make sure it happens.\n                     self.get_raw(ptr.alloc_id)?;\n                     None\n                 } else {"}]}