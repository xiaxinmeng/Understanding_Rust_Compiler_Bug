{"sha": "60e304c7b6f56b389c9f3ca723f206d9c3f3e735", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYwZTMwNGM3YjZmNTZiMzg5YzlmM2NhNzIzZjIwNmQ5YzNmM2U3MzU=", "commit": {"author": {"name": "mahdi-frms", "email": "mahdif1380@outlook.com", "date": "2021-07-05T16:22:34Z"}, "committer": {"name": "mahdi-frms", "email": "mahdif1380@outlook.com", "date": "2021-07-05T17:07:17Z"}, "message": "refactor logger flushing", "tree": {"sha": "b3aac9d7575673149e1842922d16f9f6e6743aa4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b3aac9d7575673149e1842922d16f9f6e6743aa4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/60e304c7b6f56b389c9f3ca723f206d9c3f3e735", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/60e304c7b6f56b389c9f3ca723f206d9c3f3e735", "html_url": "https://github.com/rust-lang/rust/commit/60e304c7b6f56b389c9f3ca723f206d9c3f3e735", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/60e304c7b6f56b389c9f3ca723f206d9c3f3e735/comments", "author": {"login": "mahdifrmz", "id": 62165556, "node_id": "MDQ6VXNlcjYyMTY1NTU2", "avatar_url": "https://avatars.githubusercontent.com/u/62165556?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mahdifrmz", "html_url": "https://github.com/mahdifrmz", "followers_url": "https://api.github.com/users/mahdifrmz/followers", "following_url": "https://api.github.com/users/mahdifrmz/following{/other_user}", "gists_url": "https://api.github.com/users/mahdifrmz/gists{/gist_id}", "starred_url": "https://api.github.com/users/mahdifrmz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mahdifrmz/subscriptions", "organizations_url": "https://api.github.com/users/mahdifrmz/orgs", "repos_url": "https://api.github.com/users/mahdifrmz/repos", "events_url": "https://api.github.com/users/mahdifrmz/events{/privacy}", "received_events_url": "https://api.github.com/users/mahdifrmz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mahdifrmz", "id": 62165556, "node_id": "MDQ6VXNlcjYyMTY1NTU2", "avatar_url": "https://avatars.githubusercontent.com/u/62165556?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mahdifrmz", "html_url": "https://github.com/mahdifrmz", "followers_url": "https://api.github.com/users/mahdifrmz/followers", "following_url": "https://api.github.com/users/mahdifrmz/following{/other_user}", "gists_url": "https://api.github.com/users/mahdifrmz/gists{/gist_id}", "starred_url": "https://api.github.com/users/mahdifrmz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mahdifrmz/subscriptions", "organizations_url": "https://api.github.com/users/mahdifrmz/orgs", "repos_url": "https://api.github.com/users/mahdifrmz/repos", "events_url": "https://api.github.com/users/mahdifrmz/events{/privacy}", "received_events_url": "https://api.github.com/users/mahdifrmz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "799ec79f18e627f8d14d3520f2e1abff265c1abe", "url": "https://api.github.com/repos/rust-lang/rust/commits/799ec79f18e627f8d14d3520f2e1abff265c1abe", "html_url": "https://github.com/rust-lang/rust/commit/799ec79f18e627f8d14d3520f2e1abff265c1abe"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "f8f57b2aa7ce956465a39acfe84a47130b7a2939", "filename": "crates/rust-analyzer/src/bin/logger.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/60e304c7b6f56b389c9f3ca723f206d9c3f3e735/crates%2Frust-analyzer%2Fsrc%2Fbin%2Flogger.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60e304c7b6f56b389c9f3ca723f206d9c3f3e735/crates%2Frust-analyzer%2Fsrc%2Fbin%2Flogger.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fbin%2Flogger.rs?ref=60e304c7b6f56b389c9f3ca723f206d9c3f3e735", "patch": "@@ -50,16 +50,17 @@ impl Log for Logger {\n \n         match &self.file {\n             Some(w) => {\n+                let mut writer = w.lock();\n                 let _ = writeln!(\n-                    w.lock(),\n+                    writer,\n                     \"[{} {}] {}\",\n                     record.level(),\n                     record.module_path().unwrap_or_default(),\n                     record.args(),\n                 );\n \n                 if self.no_buffering {\n-                    self.flush();\n+                    let _ = writer.flush();\n                 }\n             }\n             None => {"}]}