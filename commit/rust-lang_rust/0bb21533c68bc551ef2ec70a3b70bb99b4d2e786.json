{"sha": "0bb21533c68bc551ef2ec70a3b70bb99b4d2e786", "node_id": "C_kwDOAAsO6NoAKDBiYjIxNTMzYzY4YmM1NTFlZjJlYzcwYTNiNzBiYjk5YjRkMmU3ODY", "commit": {"author": {"name": "Ariel Davis", "email": "ariel.z.davis@icloud.com", "date": "2023-05-06T07:52:11Z"}, "committer": {"name": "Ariel Davis", "email": "ariel.z.davis@icloud.com", "date": "2023-05-06T07:52:11Z"}, "message": "Tweak comments, swap", "tree": {"sha": "8f793ed5a7dbc83600b3111b42d8b65e4c18878d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8f793ed5a7dbc83600b3111b42d8b65e4c18878d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0bb21533c68bc551ef2ec70a3b70bb99b4d2e786", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0bb21533c68bc551ef2ec70a3b70bb99b4d2e786", "html_url": "https://github.com/rust-lang/rust/commit/0bb21533c68bc551ef2ec70a3b70bb99b4d2e786", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0bb21533c68bc551ef2ec70a3b70bb99b4d2e786/comments", "author": {"login": "azdavis", "id": 6496454, "node_id": "MDQ6VXNlcjY0OTY0NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6496454?v=4", "gravatar_id": "", "url": "https://api.github.com/users/azdavis", "html_url": "https://github.com/azdavis", "followers_url": "https://api.github.com/users/azdavis/followers", "following_url": "https://api.github.com/users/azdavis/following{/other_user}", "gists_url": "https://api.github.com/users/azdavis/gists{/gist_id}", "starred_url": "https://api.github.com/users/azdavis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/azdavis/subscriptions", "organizations_url": "https://api.github.com/users/azdavis/orgs", "repos_url": "https://api.github.com/users/azdavis/repos", "events_url": "https://api.github.com/users/azdavis/events{/privacy}", "received_events_url": "https://api.github.com/users/azdavis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "azdavis", "id": 6496454, "node_id": "MDQ6VXNlcjY0OTY0NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6496454?v=4", "gravatar_id": "", "url": "https://api.github.com/users/azdavis", "html_url": "https://github.com/azdavis", "followers_url": "https://api.github.com/users/azdavis/followers", "following_url": "https://api.github.com/users/azdavis/following{/other_user}", "gists_url": "https://api.github.com/users/azdavis/gists{/gist_id}", "starred_url": "https://api.github.com/users/azdavis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/azdavis/subscriptions", "organizations_url": "https://api.github.com/users/azdavis/orgs", "repos_url": "https://api.github.com/users/azdavis/repos", "events_url": "https://api.github.com/users/azdavis/events{/privacy}", "received_events_url": "https://api.github.com/users/azdavis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "594a41e7bfd0692c03e0a26f78a24388edd4332b", "url": "https://api.github.com/repos/rust-lang/rust/commits/594a41e7bfd0692c03e0a26f78a24388edd4332b", "html_url": "https://github.com/rust-lang/rust/commit/594a41e7bfd0692c03e0a26f78a24388edd4332b"}], "stats": {"total": 20, "additions": 11, "deletions": 9}, "files": [{"sha": "91b7faa78adc2d3ba18f4bffdc3f5c339ab7ba76", "filename": "lib/line-index/src/lib.rs", "status": "modified", "additions": 11, "deletions": 9, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/0bb21533c68bc551ef2ec70a3b70bb99b4d2e786/lib%2Fline-index%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bb21533c68bc551ef2ec70a3b70bb99b4d2e786/lib%2Fline-index%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/lib%2Fline-index%2Fsrc%2Flib.rs?ref=0bb21533c68bc551ef2ec70a3b70bb99b4d2e786", "patch": "@@ -9,8 +9,8 @@ use nohash_hasher::IntMap;\n \n pub use text_size::{TextRange, TextSize};\n \n-/// Line/Column information in native, utf8 format.\n-#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n+/// `(line, column)` information in the native, UTF-8 encoding.\n+#[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]\n pub struct LineCol {\n     /// Zero-based.\n     pub line: u32,\n@@ -19,7 +19,7 @@ pub struct LineCol {\n }\n \n /// A kind of wide character encoding.\n-#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n+#[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]\n #[non_exhaustive]\n pub enum WideEncoding {\n     /// UTF-16.\n@@ -29,7 +29,7 @@ pub enum WideEncoding {\n }\n \n impl WideEncoding {\n-    /// Returns the number of units it takes to encode `text` in this encoding.\n+    /// Returns the number of code units it takes to encode `text` in this encoding.\n     pub fn measure(&self, text: &str) -> usize {\n         match self {\n             WideEncoding::Utf16 => text.encode_utf16().count(),\n@@ -38,22 +38,24 @@ impl WideEncoding {\n     }\n }\n \n-/// Line/Column information in legacy encodings.\n+/// `(line, column)` information in wide encodings.\n+///\n+/// See [`WideEncoding`] for the kinds of wide encodings available.\n //\n // Deliberately not a generic type and different from `LineCol`.\n-#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n+#[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]\n pub struct WideLineCol {\n     /// Zero-based.\n     pub line: u32,\n     /// Zero-based.\n     pub col: u32,\n }\n \n-#[derive(Clone, Debug, Hash, PartialEq, Eq)]\n+#[derive(Debug, Clone, Copy, PartialEq, Eq)]\n struct WideChar {\n-    /// Start offset of a character inside a line, zero-based\n+    /// Start offset of a character inside a line, zero-based.\n     start: TextSize,\n-    /// End offset of a character inside a line, zero-based\n+    /// End offset of a character inside a line, zero-based.\n     end: TextSize,\n }\n "}]}