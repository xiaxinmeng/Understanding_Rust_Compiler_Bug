{"sha": "6ac286b518c8a0db9753ffd188326234457a4719", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZhYzI4NmI1MThjOGEwZGI5NzUzZmZkMTg4MzI2MjM0NDU3YTQ3MTk=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-19T02:46:40Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-26T21:01:25Z"}, "message": "librustc: De-`@mut` `CrateDebugContext::created_files`", "tree": {"sha": "673cf5f496a08793befeb22e5018c88f55a30c9b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/673cf5f496a08793befeb22e5018c88f55a30c9b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6ac286b518c8a0db9753ffd188326234457a4719", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6ac286b518c8a0db9753ffd188326234457a4719", "html_url": "https://github.com/rust-lang/rust/commit/6ac286b518c8a0db9753ffd188326234457a4719", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6ac286b518c8a0db9753ffd188326234457a4719/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fc92f92572c0b87e17eb4c3b289a0d47c0a7bf8f", "url": "https://api.github.com/repos/rust-lang/rust/commits/fc92f92572c0b87e17eb4c3b289a0d47c0a7bf8f", "html_url": "https://github.com/rust-lang/rust/commit/fc92f92572c0b87e17eb4c3b289a0d47c0a7bf8f"}], "stats": {"total": 17, "additions": 11, "deletions": 6}, "files": [{"sha": "e06980cbc3895dd572ee17334fbdd0c7ef991c08", "filename": "src/librustc/middle/trans/debuginfo.rs", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/6ac286b518c8a0db9753ffd188326234457a4719/src%2Flibrustc%2Fmiddle%2Ftrans%2Fdebuginfo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ac286b518c8a0db9753ffd188326234457a4719/src%2Flibrustc%2Fmiddle%2Ftrans%2Fdebuginfo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fdebuginfo.rs?ref=6ac286b518c8a0db9753ffd188326234457a4719", "patch": "@@ -142,6 +142,7 @@ use middle::pat_util;\n use util::ppaux;\n \n use std::c_str::ToCStr;\n+use std::cell::RefCell;\n use std::hashmap::HashMap;\n use std::hashmap::HashSet;\n use std::libc::{c_uint, c_ulonglong, c_longlong};\n@@ -175,7 +176,7 @@ pub struct CrateDebugContext {\n     priv llcontext: ContextRef,\n     priv builder: DIBuilderRef,\n     priv current_debug_location: DebugLocation,\n-    priv created_files: HashMap<~str, DIFile>,\n+    priv created_files: RefCell<HashMap<~str, DIFile>>,\n     priv created_types: HashMap<uint, DIType>,\n     priv namespace_map: HashMap<~[ast::Ident], @NamespaceTreeNode>,\n     // This collection is used to assert that composite types (structs, enums, ...) have their\n@@ -194,7 +195,7 @@ impl CrateDebugContext {\n             llcontext: llcontext,\n             builder: builder,\n             current_debug_location: UnknownLocation,\n-            created_files: HashMap::new(),\n+            created_files: RefCell::new(HashMap::new()),\n             created_types: HashMap::new(),\n             namespace_map: HashMap::new(),\n             composite_types_completed: HashSet::new(),\n@@ -1031,9 +1032,12 @@ fn declare_local(bcx: @Block,\n }\n \n fn file_metadata(cx: &mut CrateContext, full_path: &str) -> DIFile {\n-    match debug_context(cx).created_files.find_equiv(&full_path) {\n-        Some(file_metadata) => return *file_metadata,\n-        None => ()\n+    {\n+        let created_files = debug_context(cx).created_files.borrow();\n+        match created_files.get().find_equiv(&full_path) {\n+            Some(file_metadata) => return *file_metadata,\n+            None => ()\n+        }\n     }\n \n     debug!(\"file_metadata: {}\", full_path);\n@@ -1056,7 +1060,8 @@ fn file_metadata(cx: &mut CrateContext, full_path: &str) -> DIFile {\n             })\n         });\n \n-    debug_context(cx).created_files.insert(full_path.to_owned(), file_metadata);\n+    let mut created_files = debug_context(cx).created_files.borrow_mut();\n+    created_files.get().insert(full_path.to_owned(), file_metadata);\n     return file_metadata;\n }\n "}]}