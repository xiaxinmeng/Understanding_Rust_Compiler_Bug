{"sha": "c603839d5f8050cf050b18d7e2c14f48e78d2382", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM2MDM4MzlkNWY4MDUwY2YwNTBiMThkN2UyYzE0ZjQ4ZTc4ZDIzODI=", "commit": {"author": {"name": "Jimmy Cuadra", "email": "jimmy@jimmycuadra.com", "date": "2017-02-11T12:16:13Z"}, "committer": {"name": "Jimmy Cuadra", "email": "jimmy@jimmycuadra.com", "date": "2017-02-11T12:16:13Z"}, "message": "rustdoc: Only include a stability span if needed.", "tree": {"sha": "5eca68248bc2dbf41b9277fb6636923b18f45f8e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5eca68248bc2dbf41b9277fb6636923b18f45f8e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c603839d5f8050cf050b18d7e2c14f48e78d2382", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c603839d5f8050cf050b18d7e2c14f48e78d2382", "html_url": "https://github.com/rust-lang/rust/commit/c603839d5f8050cf050b18d7e2c14f48e78d2382", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c603839d5f8050cf050b18d7e2c14f48e78d2382/comments", "author": {"login": "jimmycuadra", "id": 122457, "node_id": "MDQ6VXNlcjEyMjQ1Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/122457?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jimmycuadra", "html_url": "https://github.com/jimmycuadra", "followers_url": "https://api.github.com/users/jimmycuadra/followers", "following_url": "https://api.github.com/users/jimmycuadra/following{/other_user}", "gists_url": "https://api.github.com/users/jimmycuadra/gists{/gist_id}", "starred_url": "https://api.github.com/users/jimmycuadra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jimmycuadra/subscriptions", "organizations_url": "https://api.github.com/users/jimmycuadra/orgs", "repos_url": "https://api.github.com/users/jimmycuadra/repos", "events_url": "https://api.github.com/users/jimmycuadra/events{/privacy}", "received_events_url": "https://api.github.com/users/jimmycuadra/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jimmycuadra", "id": 122457, "node_id": "MDQ6VXNlcjEyMjQ1Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/122457?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jimmycuadra", "html_url": "https://github.com/jimmycuadra", "followers_url": "https://api.github.com/users/jimmycuadra/followers", "following_url": "https://api.github.com/users/jimmycuadra/following{/other_user}", "gists_url": "https://api.github.com/users/jimmycuadra/gists{/gist_id}", "starred_url": "https://api.github.com/users/jimmycuadra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jimmycuadra/subscriptions", "organizations_url": "https://api.github.com/users/jimmycuadra/orgs", "repos_url": "https://api.github.com/users/jimmycuadra/repos", "events_url": "https://api.github.com/users/jimmycuadra/events{/privacy}", "received_events_url": "https://api.github.com/users/jimmycuadra/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bae454edc5e18e81b831baf4a7647bf2dda620a8", "url": "https://api.github.com/repos/rust-lang/rust/commits/bae454edc5e18e81b831baf4a7647bf2dda620a8", "html_url": "https://github.com/rust-lang/rust/commit/bae454edc5e18e81b831baf4a7647bf2dda620a8"}], "stats": {"total": 47, "additions": 32, "deletions": 15}, "files": [{"sha": "4a6e86224601094238d733d886dabe9bcf088401", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 20, "deletions": 10, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/c603839d5f8050cf050b18d7e2c14f48e78d2382/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c603839d5f8050cf050b18d7e2c14f48e78d2382/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=c603839d5f8050cf050b18d7e2c14f48e78d2382", "patch": "@@ -327,17 +327,27 @@ impl Item {\n         }\n     }\n \n-    pub fn stability_class(&self) -> String {\n-        self.stability.as_ref().map(|ref s| {\n-            let mut base = match s.level {\n-                stability::Unstable => \"unstable\".to_string(),\n-                stability::Stable => String::new(),\n-            };\n-            if !s.deprecated_since.is_empty() {\n-                base.push_str(\" deprecated\");\n+    pub fn stability_class(&self) -> Option<String> {\n+        match self.stability {\n+            Some(ref s) => {\n+                let mut classes = Vec::with_capacity(2);\n+\n+                if s.level == stability::Unstable {\n+                    classes.push(\"unstable\");\n+                }\n+\n+                if !s.deprecated_since.is_empty() {\n+                    classes.push(\"deprecated\");\n+                }\n+\n+                if classes.len() != 0 {\n+                    Some(classes.join(\" \"))\n+                } else {\n+                    None\n+                }\n             }\n-            base\n-        }).unwrap_or(String::new())\n+            None => None,\n+        }\n     }\n \n     pub fn stable_since(&self) -> Option<&str> {"}, {"sha": "fc1597469b1cd53cea80960b813a02379bdad54f", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/c603839d5f8050cf050b18d7e2c14f48e78d2382/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c603839d5f8050cf050b18d7e2c14f48e78d2382/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=c603839d5f8050cf050b18d7e2c14f48e78d2382", "patch": "@@ -1827,7 +1827,7 @@ fn item_module(w: &mut fmt::Formatter, cx: &Context,\n                        stab_docs = stab_docs,\n                        docs = shorter(Some(&Markdown(doc_value).to_string())),\n                        class = myitem.type_(),\n-                       stab = myitem.stability_class(),\n+                       stab = myitem.stability_class().unwrap_or(\"\".to_string()),\n                        unsafety_flag = unsafety_flag,\n                        href = item_path(myitem.type_(), myitem.name.as_ref().unwrap()),\n                        title = full_path(cx, myitem))?;\n@@ -2369,13 +2369,16 @@ fn item_struct(w: &mut fmt::Formatter, cx: &Context, it: &clean::Item,\n                 write!(w, \"<span id='{id}' class='{item_type}'>\n                            <span id='{ns_id}' class='invisible'>\n                            <code>{name}: {ty}</code>\n-                           </span></span><span class='stab {stab}'></span>\",\n+                           </span></span>\",\n                        item_type = ItemType::StructField,\n                        id = id,\n                        ns_id = ns_id,\n-                       stab = field.stability_class(),\n                        name = field.name.as_ref().unwrap(),\n                        ty = ty)?;\n+                if let Some(stability_class) = field.stability_class() {\n+                    write!(w, \"<span class='stab {stab}'></span>\",\n+                        stab = stability_class)?;\n+                }\n                 document(w, cx, field)?;\n             }\n         }\n@@ -2406,11 +2409,15 @@ fn item_union(w: &mut fmt::Formatter, cx: &Context, it: &clean::Item,\n         write!(w, \"<h2 class='fields'>Fields</h2>\")?;\n         for (field, ty) in fields {\n             write!(w, \"<span id='{shortty}.{name}' class='{shortty}'><code>{name}: {ty}</code>\n-                       </span><span class='stab {stab}'></span>\",\n+                       </span>\",\n                    shortty = ItemType::StructField,\n-                   stab = field.stability_class(),\n                    name = field.name.as_ref().unwrap(),\n                    ty = ty)?;\n+            if let Some(stability_class) = field.stability_class() {\n+                write!(w, \"<span class='stab {stab}'></span>\",\n+                    stab = stability_class)?;\n+            }\n+            write!(w, \"</span>\")?;\n             document(w, cx, field)?;\n         }\n     }"}]}