{"sha": "775328c290599a05f42ee2fd7ed0a414847995fc", "node_id": "C_kwDOAAsO6NoAKDc3NTMyOGMyOTA1OTlhMDVmNDJlZTJmZDdlZDBhNDE0ODQ3OTk1ZmM", "commit": {"author": {"name": "Byron Zhong", "email": "byronzhong@cs.uchicago.edu", "date": "2022-10-25T22:29:29Z"}, "committer": {"name": "Byron Zhong", "email": "byronzhong@cs.uchicago.edu", "date": "2022-10-26T03:08:41Z"}, "message": "Modify check to output 'you might have meant' for indirect reference", "tree": {"sha": "4e78e3affd9527ad7ba2c90f06d68c038c8fdea1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4e78e3affd9527ad7ba2c90f06d68c038c8fdea1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/775328c290599a05f42ee2fd7ed0a414847995fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/775328c290599a05f42ee2fd7ed0a414847995fc", "html_url": "https://github.com/rust-lang/rust/commit/775328c290599a05f42ee2fd7ed0a414847995fc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/775328c290599a05f42ee2fd7ed0a414847995fc/comments", "author": {"login": "zbyrn", "id": 34432561, "node_id": "MDQ6VXNlcjM0NDMyNTYx", "avatar_url": "https://avatars.githubusercontent.com/u/34432561?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zbyrn", "html_url": "https://github.com/zbyrn", "followers_url": "https://api.github.com/users/zbyrn/followers", "following_url": "https://api.github.com/users/zbyrn/following{/other_user}", "gists_url": "https://api.github.com/users/zbyrn/gists{/gist_id}", "starred_url": "https://api.github.com/users/zbyrn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zbyrn/subscriptions", "organizations_url": "https://api.github.com/users/zbyrn/orgs", "repos_url": "https://api.github.com/users/zbyrn/repos", "events_url": "https://api.github.com/users/zbyrn/events{/privacy}", "received_events_url": "https://api.github.com/users/zbyrn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "zbyrn", "id": 34432561, "node_id": "MDQ6VXNlcjM0NDMyNTYx", "avatar_url": "https://avatars.githubusercontent.com/u/34432561?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zbyrn", "html_url": "https://github.com/zbyrn", "followers_url": "https://api.github.com/users/zbyrn/followers", "following_url": "https://api.github.com/users/zbyrn/following{/other_user}", "gists_url": "https://api.github.com/users/zbyrn/gists{/gist_id}", "starred_url": "https://api.github.com/users/zbyrn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zbyrn/subscriptions", "organizations_url": "https://api.github.com/users/zbyrn/orgs", "repos_url": "https://api.github.com/users/zbyrn/repos", "events_url": "https://api.github.com/users/zbyrn/events{/privacy}", "received_events_url": "https://api.github.com/users/zbyrn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0b936d2da702848a4d537e745921636490e93060", "url": "https://api.github.com/repos/rust-lang/rust/commits/0b936d2da702848a4d537e745921636490e93060", "html_url": "https://github.com/rust-lang/rust/commit/0b936d2da702848a4d537e745921636490e93060"}], "stats": {"total": 17, "additions": 15, "deletions": 2}, "files": [{"sha": "dea025310d3ca99290102d57434f62bbd71ef622", "filename": "compiler/rustc_resolve/src/late/diagnostics.rs", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/775328c290599a05f42ee2fd7ed0a414847995fc/compiler%2Frustc_resolve%2Fsrc%2Flate%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/775328c290599a05f42ee2fd7ed0a414847995fc/compiler%2Frustc_resolve%2Fsrc%2Flate%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flate%2Fdiagnostics.rs?ref=775328c290599a05f42ee2fd7ed0a414847995fc", "patch": "@@ -691,8 +691,21 @@ impl<'a: 'ast, 'ast> LateResolutionVisitor<'a, '_, 'ast> {\n         let is_expected = &|res| source.is_expected(res);\n         let ident_span = path.last().map_or(span, |ident| ident.ident.span);\n         let typo_sugg = self.lookup_typo_candidate(path, source.namespace(), is_expected);\n-        let is_local = &|res: Res| res.opt_def_id().map_or(false, |id| id.is_local());\n-        if let TypoCandidate::Shadowed(res, Some(sugg_span)) = typo_sugg && is_local(res) {\n+        let is_in_same_file = &|sp1, sp2| {\n+            let source_map = self.r.session.source_map();\n+            let file1 = source_map.span_to_filename(sp1);\n+            let file2 = source_map.span_to_filename(sp2);\n+            file1 == file2\n+        };\n+        // print 'you might have meant' if the candidate is (1) is a shadowed name with\n+        // accessible definition and (2) either defined in the same crate as the typo\n+        // (could be in a different file) or introduced in the same file as the typo\n+        // (could belong to a different crate)\n+        if let TypoCandidate::Shadowed(res, Some(sugg_span)) = typo_sugg\n+            && res\n+                .opt_def_id()\n+                .map_or(false, |id| id.is_local() || is_in_same_file(span, sugg_span))\n+        {\n             err.span_label(\n                 sugg_span,\n                 format!(\"you might have meant to refer to this {}\", res.descr()),"}]}