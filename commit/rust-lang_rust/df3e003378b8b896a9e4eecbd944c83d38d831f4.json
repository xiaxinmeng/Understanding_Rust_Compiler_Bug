{"sha": "df3e003378b8b896a9e4eecbd944c83d38d831f4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRmM2UwMDMzNzhiOGI4OTZhOWU0ZWVjYmQ5NDRjODNkMzhkODMxZjQ=", "commit": {"author": {"name": "Smitty", "email": "me@smitop.com", "date": "2021-05-25T14:35:24Z"}, "committer": {"name": "Smitty", "email": "me@smitop.com", "date": "2021-07-09T17:51:30Z"}, "message": "Don't stub out part of test", "tree": {"sha": "ca91fdcae1c7f84461109d99efdab200160bea4c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ca91fdcae1c7f84461109d99efdab200160bea4c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/df3e003378b8b896a9e4eecbd944c83d38d831f4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/df3e003378b8b896a9e4eecbd944c83d38d831f4", "html_url": "https://github.com/rust-lang/rust/commit/df3e003378b8b896a9e4eecbd944c83d38d831f4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/df3e003378b8b896a9e4eecbd944c83d38d831f4/comments", "author": {"login": "syvb", "id": 10530973, "node_id": "MDQ6VXNlcjEwNTMwOTcz", "avatar_url": "https://avatars.githubusercontent.com/u/10530973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/syvb", "html_url": "https://github.com/syvb", "followers_url": "https://api.github.com/users/syvb/followers", "following_url": "https://api.github.com/users/syvb/following{/other_user}", "gists_url": "https://api.github.com/users/syvb/gists{/gist_id}", "starred_url": "https://api.github.com/users/syvb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/syvb/subscriptions", "organizations_url": "https://api.github.com/users/syvb/orgs", "repos_url": "https://api.github.com/users/syvb/repos", "events_url": "https://api.github.com/users/syvb/events{/privacy}", "received_events_url": "https://api.github.com/users/syvb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "syvb", "id": 10530973, "node_id": "MDQ6VXNlcjEwNTMwOTcz", "avatar_url": "https://avatars.githubusercontent.com/u/10530973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/syvb", "html_url": "https://github.com/syvb", "followers_url": "https://api.github.com/users/syvb/followers", "following_url": "https://api.github.com/users/syvb/following{/other_user}", "gists_url": "https://api.github.com/users/syvb/gists{/gist_id}", "starred_url": "https://api.github.com/users/syvb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/syvb/subscriptions", "organizations_url": "https://api.github.com/users/syvb/orgs", "repos_url": "https://api.github.com/users/syvb/repos", "events_url": "https://api.github.com/users/syvb/events{/privacy}", "received_events_url": "https://api.github.com/users/syvb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "74d0d74dae5ddde15de0201d689d56b794aa0e86", "url": "https://api.github.com/repos/rust-lang/rust/commits/74d0d74dae5ddde15de0201d689d56b794aa0e86", "html_url": "https://github.com/rust-lang/rust/commit/74d0d74dae5ddde15de0201d689d56b794aa0e86"}], "stats": {"total": 17, "additions": 12, "deletions": 5}, "files": [{"sha": "305f482e8c21def2ee306dbe25e310e2bb2d53ad", "filename": "src/test/ui/issues/issue-47412.mir.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/df3e003378b8b896a9e4eecbd944c83d38d831f4/src%2Ftest%2Fui%2Fissues%2Fissue-47412.mir.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/df3e003378b8b896a9e4eecbd944c83d38d831f4/src%2Ftest%2Fui%2Fissues%2Fissue-47412.mir.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-47412.mir.stderr?ref=df3e003378b8b896a9e4eecbd944c83d38d831f4", "patch": "@@ -7,7 +7,7 @@ LL |     match u.void {}\n    = note: the field may not be properly initialized: using uninitialized data will cause undefined behavior\n \n error[E0133]: dereference of raw pointer is unsafe and requires unsafe function or block\n-  --> $DIR/issue-47412.rs:21:11\n+  --> $DIR/issue-47412.rs:20:11\n    |\n LL |     match *ptr {}\n    |           ^^^^ dereference of raw pointer"}, {"sha": "df6d6e4222e8201b4054a4229bafb42281217ab1", "filename": "src/test/ui/issues/issue-47412.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/df3e003378b8b896a9e4eecbd944c83d38d831f4/src%2Ftest%2Fui%2Fissues%2Fissue-47412.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df3e003378b8b896a9e4eecbd944c83d38d831f4/src%2Ftest%2Fui%2Fissues%2Fissue-47412.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-47412.rs?ref=df3e003378b8b896a9e4eecbd944c83d38d831f4", "patch": "@@ -12,8 +12,7 @@ fn union_field() {\n     union Union { unit: (), void: Void }\n     let u = Union { unit: () };\n     match u.void {}\n-    //[mir]~^ ERROR access to union field is unsafe\n-    // FIXME(thir-unsafeck): AccessToUnionField unimplemented\n+    //~^ ERROR access to union field is unsafe\n }\n \n fn raw_ptr_deref() {"}, {"sha": "305f482e8c21def2ee306dbe25e310e2bb2d53ad", "filename": "src/test/ui/issues/issue-47412.thir.stderr", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/df3e003378b8b896a9e4eecbd944c83d38d831f4/src%2Ftest%2Fui%2Fissues%2Fissue-47412.thir.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/df3e003378b8b896a9e4eecbd944c83d38d831f4/src%2Ftest%2Fui%2Fissues%2Fissue-47412.thir.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-47412.thir.stderr?ref=df3e003378b8b896a9e4eecbd944c83d38d831f4", "patch": "@@ -1,11 +1,19 @@\n+error[E0133]: access to union field is unsafe and requires unsafe function or block\n+  --> $DIR/issue-47412.rs:14:11\n+   |\n+LL |     match u.void {}\n+   |           ^^^^^^ access to union field\n+   |\n+   = note: the field may not be properly initialized: using uninitialized data will cause undefined behavior\n+\n error[E0133]: dereference of raw pointer is unsafe and requires unsafe function or block\n-  --> $DIR/issue-47412.rs:21:11\n+  --> $DIR/issue-47412.rs:20:11\n    |\n LL |     match *ptr {}\n    |           ^^^^ dereference of raw pointer\n    |\n    = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior\n \n-error: aborting due to previous error\n+error: aborting due to 2 previous errors\n \n For more information about this error, try `rustc --explain E0133`."}]}