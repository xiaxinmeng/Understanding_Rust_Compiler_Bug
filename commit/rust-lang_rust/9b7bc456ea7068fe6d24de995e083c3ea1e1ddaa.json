{"sha": "9b7bc456ea7068fe6d24de995e083c3ea1e1ddaa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjliN2JjNDU2ZWE3MDY4ZmU2ZDI0ZGU5OTVlMDgzYzNlYTFlMWRkYWE=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-01-15T22:11:55Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-01-15T22:11:55Z"}, "message": "rollup merge of #21144: nagisa/asm-str-fix\n\nFixes #21045", "tree": {"sha": "779763cb0fc6c9365f1ad46c7436facda387ce8e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/779763cb0fc6c9365f1ad46c7436facda387ce8e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9b7bc456ea7068fe6d24de995e083c3ea1e1ddaa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9b7bc456ea7068fe6d24de995e083c3ea1e1ddaa", "html_url": "https://github.com/rust-lang/rust/commit/9b7bc456ea7068fe6d24de995e083c3ea1e1ddaa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9b7bc456ea7068fe6d24de995e083c3ea1e1ddaa/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b86a84867a31a04b9e9c35efc313b2961312def2", "url": "https://api.github.com/repos/rust-lang/rust/commits/b86a84867a31a04b9e9c35efc313b2961312def2", "html_url": "https://github.com/rust-lang/rust/commit/b86a84867a31a04b9e9c35efc313b2961312def2"}, {"sha": "31261fd629265aead5f0bdb45774067966896b1b", "url": "https://api.github.com/repos/rust-lang/rust/commits/31261fd629265aead5f0bdb45774067966896b1b", "html_url": "https://github.com/rust-lang/rust/commit/31261fd629265aead5f0bdb45774067966896b1b"}], "stats": {"total": 22, "additions": 22, "deletions": 0}, "files": [{"sha": "4258eb32fdf0f671b47295596944f12a8f20d567", "filename": "src/libsyntax/ext/asm.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9b7bc456ea7068fe6d24de995e083c3ea1e1ddaa/src%2Flibsyntax%2Fext%2Fasm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9b7bc456ea7068fe6d24de995e083c3ea1e1ddaa/src%2Flibsyntax%2Fext%2Fasm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fasm.rs?ref=9b7bc456ea7068fe6d24de995e083c3ea1e1ddaa", "patch": "@@ -63,6 +63,12 @@ pub fn expand_asm<'cx>(cx: &'cx mut ExtCtxt, sp: Span, tts: &[ast::TokenTree])\n     'statement: loop {\n         match state {\n             Asm => {\n+                if asm_str_style.is_some() {\n+                    // If we already have a string with instructions,\n+                    // ending up in Asm state again is an error.\n+                    cx.span_err(sp, \"malformed inline assembly\");\n+                    return DummyResult::expr(sp);\n+                }\n                 let (s, style) = match expr_to_string(cx, p.parse_expr(),\n                                                    \"inline assembly must be a string literal\") {\n                     Some((s, st)) => (s, st),"}, {"sha": "134240f8c8aa3ecd052a5ce7a7104ddd56c65ee5", "filename": "src/test/compile-fail/issue-21045.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/9b7bc456ea7068fe6d24de995e083c3ea1e1ddaa/src%2Ftest%2Fcompile-fail%2Fissue-21045.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9b7bc456ea7068fe6d24de995e083c3ea1e1ddaa/src%2Ftest%2Fcompile-fail%2Fissue-21045.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-21045.rs?ref=9b7bc456ea7068fe6d24de995e083c3ea1e1ddaa", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+#![feature(asm)]\n+\n+fn main() {\n+    let a;\n+    asm!(\"nop\" \"nop\"); //~ ERROR malformed inline assembly\n+    asm!(\"nop\" \"nop\" : \"=r\"(a)); //~ ERROR malformed inline assembly\n+}"}]}