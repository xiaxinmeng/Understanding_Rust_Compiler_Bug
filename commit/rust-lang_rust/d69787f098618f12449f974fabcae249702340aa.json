{"sha": "d69787f098618f12449f974fabcae249702340aa", "node_id": "C_kwDOAAsO6NoAKGQ2OTc4N2YwOTg2MThmMTI0NDlmOTc0ZmFiY2FlMjQ5NzAyMzQwYWE", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-05-24T07:49:53Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-05-24T07:49:53Z"}, "message": "Auto merge of #111195 - GuillaumeGomez:fix-ice-intra-doc-link, r=petrochenkov\n\nPrevent crash when a path is not resolved in intra-doc link\n\nFixes https://github.com/rust-lang/rust/issues/111189.\n\ncc `@petrochenkov`\nr? `@notriddle`", "tree": {"sha": "b5e3c5b2cd4e6131c637a90cd122f2deca716d1c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b5e3c5b2cd4e6131c637a90cd122f2deca716d1c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d69787f098618f12449f974fabcae249702340aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d69787f098618f12449f974fabcae249702340aa", "html_url": "https://github.com/rust-lang/rust/commit/d69787f098618f12449f974fabcae249702340aa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d69787f098618f12449f974fabcae249702340aa/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "82faf5ed60c37dbd7d6eac2901b4410035776d3f", "url": "https://api.github.com/repos/rust-lang/rust/commits/82faf5ed60c37dbd7d6eac2901b4410035776d3f", "html_url": "https://github.com/rust-lang/rust/commit/82faf5ed60c37dbd7d6eac2901b4410035776d3f"}, {"sha": "bcdfda1b6b1af042008feaf8f23bf90773b976f4", "url": "https://api.github.com/repos/rust-lang/rust/commits/bcdfda1b6b1af042008feaf8f23bf90773b976f4", "html_url": "https://github.com/rust-lang/rust/commit/bcdfda1b6b1af042008feaf8f23bf90773b976f4"}], "stats": {"total": 48, "additions": 40, "deletions": 8}, "files": [{"sha": "e0611907613c4064ad23330e8f22c690354d4110", "filename": "compiler/rustc_resolve/src/late.rs", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/d69787f098618f12449f974fabcae249702340aa/compiler%2Frustc_resolve%2Fsrc%2Flate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d69787f098618f12449f974fabcae249702340aa/compiler%2Frustc_resolve%2Fsrc%2Flate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flate.rs?ref=d69787f098618f12449f974fabcae249702340aa", "patch": "@@ -17,7 +17,7 @@ use rustc_ast::*;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet, FxIndexMap};\n use rustc_errors::{Applicability, DiagnosticArgValue, DiagnosticId, IntoDiagnosticArg};\n use rustc_hir::def::Namespace::{self, *};\n-use rustc_hir::def::{self, CtorKind, DefKind, LifetimeRes, PartialRes, PerNS};\n+use rustc_hir::def::{self, CtorKind, DefKind, LifetimeRes, NonMacroAttrKind, PartialRes, PerNS};\n use rustc_hir::def_id::{DefId, LocalDefId, CRATE_DEF_ID, LOCAL_CRATE};\n use rustc_hir::{BindingAnnotation, PrimTy, TraitCandidate};\n use rustc_middle::middle::resolve_bound_vars::Set1;\n@@ -4287,12 +4287,12 @@ impl<'a: 'ast, 'b, 'ast, 'tcx> LateResolutionVisitor<'a, 'b, 'ast, 'tcx> {\n         }\n     }\n \n-    fn resolve_and_cache_rustdoc_path(&mut self, path_str: &str, ns: Namespace) -> bool {\n+    fn resolve_and_cache_rustdoc_path(&mut self, path_str: &str, ns: Namespace) -> Option<Res> {\n         // FIXME: This caching may be incorrect in case of multiple `macro_rules`\n         // items with the same name in the same module.\n         // Also hygiene is not considered.\n         let mut doc_link_resolutions = std::mem::take(&mut self.r.doc_link_resolutions);\n-        let res = doc_link_resolutions\n+        let res = *doc_link_resolutions\n             .entry(self.parent_scope.module.nearest_parent_mod().expect_local())\n             .or_default()\n             .entry((Symbol::intern(path_str), ns))\n@@ -4307,8 +4307,7 @@ impl<'a: 'ast, 'b, 'ast, 'tcx> LateResolutionVisitor<'a, 'b, 'ast, 'tcx> {\n                     return None;\n                 }\n                 res\n-            })\n-            .is_some();\n+            });\n         self.r.doc_link_resolutions = doc_link_resolutions;\n         res\n     }\n@@ -4343,8 +4342,10 @@ impl<'a: 'ast, 'b, 'ast, 'tcx> LateResolutionVisitor<'a, 'b, 'ast, 'tcx> {\n             let mut any_resolved = false;\n             let mut need_assoc = false;\n             for ns in [TypeNS, ValueNS, MacroNS] {\n-                if self.resolve_and_cache_rustdoc_path(&path_str, ns) {\n-                    any_resolved = true;\n+                if let Some(res) = self.resolve_and_cache_rustdoc_path(&path_str, ns) {\n+                    // Rustdoc ignores tool attribute resolutions and attempts\n+                    // to resolve their prefixes for diagnostics.\n+                    any_resolved = !matches!(res, Res::NonMacroAttr(NonMacroAttrKind::Tool));\n                 } else if ns != MacroNS {\n                     need_assoc = true;\n                 }"}, {"sha": "9e6894a77dfa038d3854bc9f5e1fcae8f0c656cb", "filename": "src/librustdoc/passes/collect_intra_doc_links.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d69787f098618f12449f974fabcae249702340aa/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d69787f098618f12449f974fabcae249702340aa/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs?ref=d69787f098618f12449f974fabcae249702340aa", "patch": "@@ -149,7 +149,7 @@ impl TryFrom<ResolveRes> for Res {\n             Def(kind, id) => Ok(Res::Def(kind, id)),\n             PrimTy(prim) => Ok(Res::Primitive(PrimitiveType::from_hir(prim))),\n             // e.g. `#[derive]`\n-            NonMacroAttr(..) | Err => Result::Err(()),\n+            ToolMod | NonMacroAttr(..) | Err => Result::Err(()),\n             other => bug!(\"unrecognized res {:?}\", other),\n         }\n     }"}, {"sha": "4e74278dc7b386eda27c75e59a297be90e99c4f6", "filename": "tests/rustdoc-ui/intra-doc/issue-111189-resolution-ice.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/d69787f098618f12449f974fabcae249702340aa/tests%2Frustdoc-ui%2Fintra-doc%2Fissue-111189-resolution-ice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d69787f098618f12449f974fabcae249702340aa/tests%2Frustdoc-ui%2Fintra-doc%2Fissue-111189-resolution-ice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fintra-doc%2Fissue-111189-resolution-ice.rs?ref=d69787f098618f12449f974fabcae249702340aa", "patch": "@@ -0,0 +1,10 @@\n+// Regression test for <https://github.com/rust-lang/rust/issues/111189>.\n+// This test ensures that it doesn't crash.\n+\n+#![deny(warnings)]\n+\n+/// #[rustfmt::skip]\n+//~^ ERROR unresolved link to `rustfmt::skip`\n+/// #[clippy::whatever]\n+//~^ ERROR unresolved link to `clippy::whatever`\n+pub fn foo() {}"}, {"sha": "edd3dfa7d7ed4ea4f1f3a53dfba354d043f9b1d0", "filename": "tests/rustdoc-ui/intra-doc/issue-111189-resolution-ice.stderr", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/d69787f098618f12449f974fabcae249702340aa/tests%2Frustdoc-ui%2Fintra-doc%2Fissue-111189-resolution-ice.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d69787f098618f12449f974fabcae249702340aa/tests%2Frustdoc-ui%2Fintra-doc%2Fissue-111189-resolution-ice.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fintra-doc%2Fissue-111189-resolution-ice.stderr?ref=d69787f098618f12449f974fabcae249702340aa", "patch": "@@ -0,0 +1,21 @@\n+error: unresolved link to `rustfmt::skip`\n+  --> $DIR/issue-111189-resolution-ice.rs:6:7\n+   |\n+LL | /// #[rustfmt::skip]\n+   |       ^^^^^^^^^^^^^ no item named `rustfmt` in scope\n+   |\n+note: the lint level is defined here\n+  --> $DIR/issue-111189-resolution-ice.rs:4:9\n+   |\n+LL | #![deny(warnings)]\n+   |         ^^^^^^^^\n+   = note: `#[deny(rustdoc::broken_intra_doc_links)]` implied by `#[deny(warnings)]`\n+\n+error: unresolved link to `clippy::whatever`\n+  --> $DIR/issue-111189-resolution-ice.rs:8:7\n+   |\n+LL | /// #[clippy::whatever]\n+   |       ^^^^^^^^^^^^^^^^ no item named `clippy` in scope\n+\n+error: aborting due to 2 previous errors\n+"}]}