{"sha": "656a0fa9f99298123d7dcee8c65a8a5ed7043bc4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY1NmEwZmE5Zjk5Mjk4MTIzZDdkY2VlOGM2NWE4YTVlZDcwNDNiYzQ=", "commit": {"author": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2019-06-10T17:18:32Z"}, "committer": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2019-06-10T17:18:32Z"}, "message": "Simpliy hover on ast::name", "tree": {"sha": "331fe1559a1c6fb293f9d68a4d5d5b08565c7afb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/331fe1559a1c6fb293f9d68a4d5d5b08565c7afb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/656a0fa9f99298123d7dcee8c65a8a5ed7043bc4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/656a0fa9f99298123d7dcee8c65a8a5ed7043bc4", "html_url": "https://github.com/rust-lang/rust/commit/656a0fa9f99298123d7dcee8c65a8a5ed7043bc4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/656a0fa9f99298123d7dcee8c65a8a5ed7043bc4/comments", "author": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "committer": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "34322ea9a3bc9ca2be4724447ca61e8bd9d09e30", "url": "https://api.github.com/repos/rust-lang/rust/commits/34322ea9a3bc9ca2be4724447ca61e8bd9d09e30", "html_url": "https://github.com/rust-lang/rust/commit/34322ea9a3bc9ca2be4724447ca61e8bd9d09e30"}], "stats": {"total": 52, "additions": 35, "deletions": 17}, "files": [{"sha": "8825188382d63a6610190f87caa5f5a79369adcc", "filename": "crates/ra_ide_api/src/display.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/656a0fa9f99298123d7dcee8c65a8a5ed7043bc4/crates%2Fra_ide_api%2Fsrc%2Fdisplay.rs", "raw_url": "https://github.com/rust-lang/rust/raw/656a0fa9f99298123d7dcee8c65a8a5ed7043bc4/crates%2Fra_ide_api%2Fsrc%2Fdisplay.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fdisplay.rs?ref=656a0fa9f99298123d7dcee8c65a8a5ed7043bc4", "patch": "@@ -73,13 +73,3 @@ where\n         format!(\"```rust\\n{}\\n```\", val.as_ref())\n     }\n }\n-\n-// FIXME: this should not really use navigation target. Rather, approximately\n-// resolved symbol should return a `DefId`.\n-pub(crate) fn doc_text_for(nav: NavigationTarget) -> Option<String> {\n-    match (nav.description(), nav.docs()) {\n-        (Some(desc), docs) => Some(rust_code_markup_with_doc(desc, docs)),\n-        (None, Some(docs)) => Some(docs.to_string()),\n-        _ => None,\n-    }\n-}"}, {"sha": "fbabeb194e4a13d783f66e4f24bd6954f6a1242d", "filename": "crates/ra_ide_api/src/hover.rs", "status": "modified", "additions": 35, "deletions": 7, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/656a0fa9f99298123d7dcee8c65a8a5ed7043bc4/crates%2Fra_ide_api%2Fsrc%2Fhover.rs", "raw_url": "https://github.com/rust-lang/rust/raw/656a0fa9f99298123d7dcee8c65a8a5ed7043bc4/crates%2Fra_ide_api%2Fsrc%2Fhover.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fhover.rs?ref=656a0fa9f99298123d7dcee8c65a8a5ed7043bc4", "patch": "@@ -1,14 +1,14 @@\n use ra_db::SourceDatabase;\n use ra_syntax::{\n     AstNode, ast::{self, DocCommentsOwner},\n-    algo::{find_covering_element, find_node_at_offset, ancestors_at_offset},\n+    algo::{find_covering_element, find_node_at_offset, ancestors_at_offset, visit::{visitor, Visitor}},\n };\n use hir::HirDisplay;\n \n use crate::{\n     db::RootDatabase,\n     RangeInfo, FilePosition, FileRange,\n-    display::{rust_code_markup, doc_text_for, rust_code_markup_with_doc, ShortLabel, docs_from_symbol, description_from_symbol},\n+    display::{rust_code_markup, rust_code_markup_with_doc, ShortLabel, docs_from_symbol, description_from_symbol},\n     name_ref_kind::{NameRefKind::*, classify_name_ref},\n };\n \n@@ -216,11 +216,39 @@ pub(crate) fn hover(db: &RootDatabase, position: FilePosition) -> Option<RangeIn\n             range = Some(name_ref.syntax().range())\n         }\n     } else if let Some(name) = find_node_at_offset::<ast::Name>(file.syntax(), position.offset) {\n-        let navs = crate::goto_definition::name_definition(db, position.file_id, name);\n-\n-        if let Some(navs) = navs {\n-            for nav in navs {\n-                res.extend(doc_text_for(nav))\n+        if let Some(parent) = name.syntax().parent() {\n+            let text = visitor()\n+                .visit(|node: &ast::StructDef| {\n+                    hover_text(node.doc_comment_text(), node.short_label())\n+                })\n+                .visit(|node: &ast::EnumDef| {\n+                    hover_text(node.doc_comment_text(), node.short_label())\n+                })\n+                .visit(|node: &ast::EnumVariant| {\n+                    hover_text(node.doc_comment_text(), node.short_label())\n+                })\n+                .visit(|node: &ast::FnDef| hover_text(node.doc_comment_text(), node.short_label()))\n+                .visit(|node: &ast::TypeAliasDef| {\n+                    hover_text(node.doc_comment_text(), node.short_label())\n+                })\n+                .visit(|node: &ast::ConstDef| {\n+                    hover_text(node.doc_comment_text(), node.short_label())\n+                })\n+                .visit(|node: &ast::StaticDef| {\n+                    hover_text(node.doc_comment_text(), node.short_label())\n+                })\n+                .visit(|node: &ast::TraitDef| {\n+                    hover_text(node.doc_comment_text(), node.short_label())\n+                })\n+                .visit(|node: &ast::NamedFieldDef| {\n+                    hover_text(node.doc_comment_text(), node.short_label())\n+                })\n+                .visit(|node: &ast::Module| hover_text(node.doc_comment_text(), node.short_label()))\n+                .visit(|node: &ast::MacroCall| hover_text(node.doc_comment_text(), None))\n+                .accept(parent);\n+\n+            if let Some(text) = text {\n+                res.extend(text);\n             }\n         }\n "}]}