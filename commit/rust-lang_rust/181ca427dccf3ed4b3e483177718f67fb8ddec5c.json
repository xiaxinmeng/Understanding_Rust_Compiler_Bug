{"sha": "181ca427dccf3ed4b3e483177718f67fb8ddec5c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE4MWNhNDI3ZGNjZjNlZDRiM2U0ODMxNzc3MThmNjdmYjhkZGVjNWM=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2019-01-27T12:01:12Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2019-01-28T14:05:42Z"}, "message": "Use the same rule with macro and function calls with a single chain", "tree": {"sha": "5d58655c60f28e527e31c24c21a6242dc4880582", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5d58655c60f28e527e31c24c21a6242dc4880582"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/181ca427dccf3ed4b3e483177718f67fb8ddec5c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/181ca427dccf3ed4b3e483177718f67fb8ddec5c", "html_url": "https://github.com/rust-lang/rust/commit/181ca427dccf3ed4b3e483177718f67fb8ddec5c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/181ca427dccf3ed4b3e483177718f67fb8ddec5c/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5df0a18849b11baf33f9a5ee0cc58e6f3be7e518", "url": "https://api.github.com/repos/rust-lang/rust/commits/5df0a18849b11baf33f9a5ee0cc58e6f3be7e518", "html_url": "https://github.com/rust-lang/rust/commit/5df0a18849b11baf33f9a5ee0cc58e6f3be7e518"}], "stats": {"total": 69, "additions": 69, "deletions": 0}, "files": [{"sha": "344fb28620b01a0bfcdf9c2df5b92f331237bf37", "filename": "src/overflow.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/181ca427dccf3ed4b3e483177718f67fb8ddec5c/src%2Foverflow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/181ca427dccf3ed4b3e483177718f67fb8ddec5c/src%2Foverflow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Foverflow.rs?ref=181ca427dccf3ed4b3e483177718f67fb8ddec5c", "patch": "@@ -467,6 +467,13 @@ impl<'a> Context<'a> {\n                 {\n                     self.context.force_one_line_chain.replace(true);\n                 }\n+                Some(OverflowableItem::MacroArg(MacroArg::Expr(expr)))\n+                    if !combine_arg_with_callee\n+                        && is_method_call(expr)\n+                        && self.context.config.version() == Version::Two =>\n+                {\n+                    self.context.force_one_line_chain.replace(true);\n+                }\n                 _ => (),\n             }\n             let result = last_item_shape("}, {"sha": "f4c1b7c992bf1f3435ddf630a5f45ae8080791ad", "filename": "tests/source/issue-3272/v1.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/181ca427dccf3ed4b3e483177718f67fb8ddec5c/tests%2Fsource%2Fissue-3272%2Fv1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/181ca427dccf3ed4b3e483177718f67fb8ddec5c/tests%2Fsource%2Fissue-3272%2Fv1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fissue-3272%2Fv1.rs?ref=181ca427dccf3ed4b3e483177718f67fb8ddec5c", "patch": "@@ -0,0 +1,15 @@\n+// rustfmt-version: One\n+\n+fn main() {\n+    assert!(HAYSTACK\n+            .par_iter()\n+            .find_any(|&&x| x[0] % 1000 == 999)\n+            .is_some());\n+\n+    assert(\n+        HAYSTACK\n+            .par_iter()\n+            .find_any(|&&x| x[0] % 1000 == 999)\n+            .is_some(),\n+    );\n+}"}, {"sha": "0148368edc8ede095fb2aa22f12ea777443a0c15", "filename": "tests/source/issue-3272/v2.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/181ca427dccf3ed4b3e483177718f67fb8ddec5c/tests%2Fsource%2Fissue-3272%2Fv2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/181ca427dccf3ed4b3e483177718f67fb8ddec5c/tests%2Fsource%2Fissue-3272%2Fv2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fissue-3272%2Fv2.rs?ref=181ca427dccf3ed4b3e483177718f67fb8ddec5c", "patch": "@@ -0,0 +1,15 @@\n+// rustfmt-version: Two\n+\n+fn main() {\n+    assert!(HAYSTACK\n+            .par_iter()\n+            .find_any(|&&x| x[0] % 1000 == 999)\n+            .is_some());\n+\n+    assert(\n+        HAYSTACK\n+            .par_iter()\n+            .find_any(|&&x| x[0] % 1000 == 999)\n+            .is_some(),\n+    );\n+}"}, {"sha": "aab201027d56117369f26f59040e86a286860d44", "filename": "tests/target/issue-3272/v1.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/181ca427dccf3ed4b3e483177718f67fb8ddec5c/tests%2Ftarget%2Fissue-3272%2Fv1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/181ca427dccf3ed4b3e483177718f67fb8ddec5c/tests%2Ftarget%2Fissue-3272%2Fv1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fissue-3272%2Fv1.rs?ref=181ca427dccf3ed4b3e483177718f67fb8ddec5c", "patch": "@@ -0,0 +1,15 @@\n+// rustfmt-version: One\n+\n+fn main() {\n+    assert!(HAYSTACK\n+        .par_iter()\n+        .find_any(|&&x| x[0] % 1000 == 999)\n+        .is_some());\n+\n+    assert(\n+        HAYSTACK\n+            .par_iter()\n+            .find_any(|&&x| x[0] % 1000 == 999)\n+            .is_some(),\n+    );\n+}"}, {"sha": "a42a2fccd5b0f7c9baa5c7839dac10b9d7c463ba", "filename": "tests/target/issue-3272/v2.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/181ca427dccf3ed4b3e483177718f67fb8ddec5c/tests%2Ftarget%2Fissue-3272%2Fv2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/181ca427dccf3ed4b3e483177718f67fb8ddec5c/tests%2Ftarget%2Fissue-3272%2Fv2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fissue-3272%2Fv2.rs?ref=181ca427dccf3ed4b3e483177718f67fb8ddec5c", "patch": "@@ -0,0 +1,17 @@\n+// rustfmt-version: Two\n+\n+fn main() {\n+    assert!(\n+        HAYSTACK\n+            .par_iter()\n+            .find_any(|&&x| x[0] % 1000 == 999)\n+            .is_some()\n+    );\n+\n+    assert(\n+        HAYSTACK\n+            .par_iter()\n+            .find_any(|&&x| x[0] % 1000 == 999)\n+            .is_some(),\n+    );\n+}"}]}