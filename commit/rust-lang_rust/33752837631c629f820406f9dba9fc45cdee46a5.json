{"sha": "33752837631c629f820406f9dba9fc45cdee46a5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMzNzUyODM3NjMxYzYyOWY4MjA0MDZmOWRiYTlmYzQ1Y2RlZTQ2YTU=", "commit": {"author": {"name": "L\u00e9o Lanteri Thauvin", "email": "leseulartichaut@gmail.com", "date": "2021-08-25T13:48:55Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-08-25T13:48:55Z"}, "message": "Rollup merge of #88273 - jhpratt:update-iterator-docs, r=jyn514\n\nFix references to `ControlFlow` in docs\n\nThe `Iterator::for_each` method previously stated that it was not possible to use `break` and `continue` in it \u2014 this has been updated to acknowledge the stabilization of `ControlFlow`. Additionally, `ControlFlow` was referred to as `crate::ops::ControlFlow` which is not the correct path for an end user.\n\nr? `@jyn514`", "tree": {"sha": "ea5cf6d421cf4d8cb591490766754184052cb3c6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ea5cf6d421cf4d8cb591490766754184052cb3c6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/33752837631c629f820406f9dba9fc45cdee46a5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhJkpICRBK7hj4Ov3rIwAAm+QIAJ7NZ9PjmJIY8xnEmA6F1yxo\nYg5UfKipuU1VcAj9Hy8+uAsHnxyE2L9qYlmU0AqHFRXM+L2E2W3a7Wq+1ju9XgRF\n4W+hU1glpzOxXOQsVnd9CICVWW87/FE97vJJygQNrwpB9D+sby6vL7ilRlnDI3J1\nSC/sa/aGgTOAV9Hqj7HDl7EgfFzK4b/vhA7dHvPs5B4sFM1IoL9ui5T960X3rB0W\naXj/Nx3exAOJJjziyNAvShdy9cweCBC68xwj/mcz+DOBR3A6tUo1KhaOpzVvkLLK\n4gBWHRatGeYtrSz/nNmW9qbC8uMhQrCJ8YkHypJzQzfp7l+svBlF1LcikMRuTrE=\n=Z9gy\n-----END PGP SIGNATURE-----\n", "payload": "tree ea5cf6d421cf4d8cb591490766754184052cb3c6\nparent 069330633ec243b49f1da1b546667306044d8bc9\nparent bc33861c2240c966e01d6f3e0431d192c9c720c1\nauthor L\u00e9o Lanteri Thauvin <leseulartichaut@gmail.com> 1629899335 +0200\ncommitter GitHub <noreply@github.com> 1629899335 +0200\n\nRollup merge of #88273 - jhpratt:update-iterator-docs, r=jyn514\n\nFix references to `ControlFlow` in docs\n\nThe `Iterator::for_each` method previously stated that it was not possible to use `break` and `continue` in it \u2014 this has been updated to acknowledge the stabilization of `ControlFlow`. Additionally, `ControlFlow` was referred to as `crate::ops::ControlFlow` which is not the correct path for an end user.\n\nr? `@jyn514`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/33752837631c629f820406f9dba9fc45cdee46a5", "html_url": "https://github.com/rust-lang/rust/commit/33752837631c629f820406f9dba9fc45cdee46a5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/33752837631c629f820406f9dba9fc45cdee46a5/comments", "author": {"login": "LeSeulArtichaut", "id": 38361244, "node_id": "MDQ6VXNlcjM4MzYxMjQ0", "avatar_url": "https://avatars.githubusercontent.com/u/38361244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LeSeulArtichaut", "html_url": "https://github.com/LeSeulArtichaut", "followers_url": "https://api.github.com/users/LeSeulArtichaut/followers", "following_url": "https://api.github.com/users/LeSeulArtichaut/following{/other_user}", "gists_url": "https://api.github.com/users/LeSeulArtichaut/gists{/gist_id}", "starred_url": "https://api.github.com/users/LeSeulArtichaut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LeSeulArtichaut/subscriptions", "organizations_url": "https://api.github.com/users/LeSeulArtichaut/orgs", "repos_url": "https://api.github.com/users/LeSeulArtichaut/repos", "events_url": "https://api.github.com/users/LeSeulArtichaut/events{/privacy}", "received_events_url": "https://api.github.com/users/LeSeulArtichaut/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "069330633ec243b49f1da1b546667306044d8bc9", "url": "https://api.github.com/repos/rust-lang/rust/commits/069330633ec243b49f1da1b546667306044d8bc9", "html_url": "https://github.com/rust-lang/rust/commit/069330633ec243b49f1da1b546667306044d8bc9"}, {"sha": "bc33861c2240c966e01d6f3e0431d192c9c720c1", "url": "https://api.github.com/repos/rust-lang/rust/commits/bc33861c2240c966e01d6f3e0431d192c9c720c1", "html_url": "https://github.com/rust-lang/rust/commit/bc33861c2240c966e01d6f3e0431d192c9c720c1"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "850435b53cc7e3ebfb7502d54826700515babbeb", "filename": "library/core/src/iter/traits/iterator.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/33752837631c629f820406f9dba9fc45cdee46a5/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fiterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33752837631c629f820406f9dba9fc45cdee46a5/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fiterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fiterator.rs?ref=33752837631c629f820406f9dba9fc45cdee46a5", "patch": "@@ -1957,8 +1957,8 @@ pub trait Iterator {\n     /// assert_eq!(it.next(), Some(&40));\n     /// ```\n     ///\n-    /// While you cannot `break` from a closure, the [`crate::ops::ControlFlow`]\n-    /// type allows a similar idea:\n+    /// While you cannot `break` from a closure, the [`ControlFlow`] type allows\n+    /// a similar idea:\n     ///\n     /// ```\n     /// use std::ops::ControlFlow;\n@@ -2024,8 +2024,8 @@ pub trait Iterator {\n     /// assert_eq!(it.next(), Some(\"stale_bread.json\"));\n     /// ```\n     ///\n-    /// The [`crate::ops::ControlFlow`] type can be used with this method for the\n-    /// situations in which you'd use `break` and `continue` in a normal loop:\n+    /// The [`ControlFlow`] type can be used with this method for the situations\n+    /// in which you'd use `break` and `continue` in a normal loop:\n     ///\n     /// ```\n     /// use std::ops::ControlFlow;"}]}