{"sha": "6ffabf3c8f2ed81d0248c54365445f28bd9507e5", "node_id": "C_kwDOAAsO6NoAKDZmZmFiZjNjOGYyZWQ4MWQwMjQ4YzU0MzY1NDQ1ZjI4YmQ5NTA3ZTU", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-02-25T03:01:40Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-02-25T03:01:40Z"}, "message": "Auto merge of #107638 - zhangyunhao116:pdqsort-rand, r=cuviper\n\nOptimize break patterns\n\nUse `wyrand` instead of calling `XORSHIFT` 2 times in break patterns for the 64-bit platform. The new PRNG is 2x faster than the previous one.\n\nBench result(via https://gist.github.com/zhangyunhao116/11ef41a150f5c23bb47d86255fbeba89):\n```\nold                     time:   [1.3258 ns 1.3262 ns 1.3266 ns]\n                        change: [+0.5901% +0.6731% +0.7791%] (p = 0.00 < 0.05)\n                        Change within noise threshold.\nFound 13 outliers among 100 measurements (13.00%)\n  7 (7.00%) high mild\n  6 (6.00%) high severe\n\nnew                     time:   [657.65 ps 657.89 ps 658.18 ps]\n                        change: [-1.6910% -1.6110% -1.5256%] (p = 0.00 < 0.05)\n                        Performance has improved.\nFound 6 outliers among 100 measurements (6.00%)\n  2 (2.00%) high mild\n  4 (4.00%) high severe\n```", "tree": {"sha": "ddb8ffa096ea639edf748dad3b95925d10f26488", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ddb8ffa096ea639edf748dad3b95925d10f26488"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6ffabf3c8f2ed81d0248c54365445f28bd9507e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6ffabf3c8f2ed81d0248c54365445f28bd9507e5", "html_url": "https://github.com/rust-lang/rust/commit/6ffabf3c8f2ed81d0248c54365445f28bd9507e5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6ffabf3c8f2ed81d0248c54365445f28bd9507e5/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f0bc76ac41a0a832c9ee621e31aaf1f515d3d6a5", "url": "https://api.github.com/repos/rust-lang/rust/commits/f0bc76ac41a0a832c9ee621e31aaf1f515d3d6a5", "html_url": "https://github.com/rust-lang/rust/commit/f0bc76ac41a0a832c9ee621e31aaf1f515d3d6a5"}, {"sha": "e107ca0f0b6dff35efdefc2c6bdaec75b13c1109", "url": "https://api.github.com/repos/rust-lang/rust/commits/e107ca0f0b6dff35efdefc2c6bdaec75b13c1109", "html_url": "https://github.com/rust-lang/rust/commit/e107ca0f0b6dff35efdefc2c6bdaec75b13c1109"}], "stats": {"total": 24, "additions": 14, "deletions": 10}, "files": [{"sha": "7b8062c431e0a7dc21c3cb9ef33caed82b047228", "filename": "library/core/src/slice/sort.rs", "status": "modified", "additions": 14, "deletions": 10, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/6ffabf3c8f2ed81d0248c54365445f28bd9507e5/library%2Fcore%2Fsrc%2Fslice%2Fsort.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ffabf3c8f2ed81d0248c54365445f28bd9507e5/library%2Fcore%2Fsrc%2Fslice%2Fsort.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fslice%2Fsort.rs?ref=6ffabf3c8f2ed81d0248c54365445f28bd9507e5", "patch": "@@ -673,19 +673,23 @@ where\n fn break_patterns<T>(v: &mut [T]) {\n     let len = v.len();\n     if len >= 8 {\n-        // Pseudorandom number generator from the \"Xorshift RNGs\" paper by George Marsaglia.\n-        let mut random = len as u32;\n-        let mut gen_u32 = || {\n-            random ^= random << 13;\n-            random ^= random >> 17;\n-            random ^= random << 5;\n-            random\n-        };\n+        let mut seed = len;\n         let mut gen_usize = || {\n+            // Pseudorandom number generator from the \"Xorshift RNGs\" paper by George Marsaglia.\n             if usize::BITS <= 32 {\n-                gen_u32() as usize\n+                let mut r = seed as u32;\n+                r ^= r << 13;\n+                r ^= r >> 17;\n+                r ^= r << 5;\n+                seed = r as usize;\n+                seed\n             } else {\n-                (((gen_u32() as u64) << 32) | (gen_u32() as u64)) as usize\n+                let mut r = seed as u64;\n+                r ^= r << 13;\n+                r ^= r >> 7;\n+                r ^= r << 17;\n+                seed = r as usize;\n+                seed\n             }\n         };\n "}]}