{"sha": "ad04cce61c366968098e2adc8594e21e91c578e0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFkMDRjY2U2MWMzNjY5NjgwOThlMmFkYzg1OTRlMjFlOTFjNTc4ZTA=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-02-24T20:57:31Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-02-24T20:57:31Z"}, "message": "Auto merge of #22530 - rprichard:master, r=dotdash\n\nFixes #22525\r\n\r\nI wasn't sure if I should reuse `write::get_llvm_opt_level` or not.  It returns an `llvm::CodeGenOptLevel`, which is the Rust binding for `CodeGenOpt::Level`. `lto.rs` is passing an optlevel to LLVM's `PassManagerBuilder`, which takes an unsigned int.  `PassManagerBuilder`'s optlevel uses essentially the same enumeration (i.e. 0-3 with 2 as default), but it's implicit.", "tree": {"sha": "de38e1b758a52aa0d0e402932525f936d6880820", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/de38e1b758a52aa0d0e402932525f936d6880820"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ad04cce61c366968098e2adc8594e21e91c578e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ad04cce61c366968098e2adc8594e21e91c578e0", "html_url": "https://github.com/rust-lang/rust/commit/ad04cce61c366968098e2adc8594e21e91c578e0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ad04cce61c366968098e2adc8594e21e91c578e0/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0bd15657d93c932611f3aee351b6521cdfa77731", "url": "https://api.github.com/repos/rust-lang/rust/commits/0bd15657d93c932611f3aee351b6521cdfa77731", "html_url": "https://github.com/rust-lang/rust/commit/0bd15657d93c932611f3aee351b6521cdfa77731"}, {"sha": "9167c62c1adf7effb48cd1cc66ab45f7751d0d6c", "url": "https://api.github.com/repos/rust-lang/rust/commits/9167c62c1adf7effb48cd1cc66ab45f7751d0d6c", "html_url": "https://github.com/rust-lang/rust/commit/9167c62c1adf7effb48cd1cc66ab45f7751d0d6c"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "d8a296bf0410cdde29e5c64362037ecc5b009937", "filename": "src/librustc_trans/back/lto.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ad04cce61c366968098e2adc8594e21e91c578e0/src%2Flibrustc_trans%2Fback%2Flto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad04cce61c366968098e2adc8594e21e91c578e0/src%2Flibrustc_trans%2Fback%2Flto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fback%2Flto.rs?ref=ad04cce61c366968098e2adc8594e21e91c578e0", "patch": "@@ -167,7 +167,12 @@ pub fn run(sess: &session::Session, llmod: ModuleRef,\n         llvm::LLVMRustAddAnalysisPasses(tm, pm, llmod);\n         llvm::LLVMRustAddPass(pm, \"verify\\0\".as_ptr() as *const _);\n \n-        let opt = sess.opts.cg.opt_level.unwrap_or(0) as libc::c_uint;\n+        let opt = match sess.opts.optimize {\n+            config::No => 0,\n+            config::Less => 1,\n+            config::Default => 2,\n+            config::Aggressive => 3,\n+        };\n \n         let builder = llvm::LLVMPassManagerBuilderCreate();\n         llvm::LLVMPassManagerBuilderSetOptLevel(builder, opt);"}, {"sha": "b159b128333f0e39aea8386d3c20679d53825240", "filename": "src/test/run-pass/sepcomp-lib-lto.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ad04cce61c366968098e2adc8594e21e91c578e0/src%2Ftest%2Frun-pass%2Fsepcomp-lib-lto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad04cce61c366968098e2adc8594e21e91c578e0/src%2Ftest%2Frun-pass%2Fsepcomp-lib-lto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsepcomp-lib-lto.rs?ref=ad04cce61c366968098e2adc8594e21e91c578e0", "patch": "@@ -14,6 +14,7 @@\n // aux-build:sepcomp_lib.rs\n // compile-flags: -C lto\n // no-prefer-dynamic\n+// ignore-android FIXME #18800\n \n extern crate sepcomp_lib;\n use sepcomp_lib::a::one;"}]}