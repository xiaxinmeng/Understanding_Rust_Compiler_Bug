{"sha": "6fbb7ffdbdfc3ea45eb913f9d6644fe5020f21d7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZmYmI3ZmZkYmRmYzNlYTQ1ZWI5MTNmOWQ2NjQ0ZmU1MDIwZjIxZDc=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-08-10T02:01:15Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-08-10T02:01:15Z"}, "message": "rt: Stub code for polymorphic log", "tree": {"sha": "1c9cc24d542beb9547f3a6c981d544c7760f50f9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1c9cc24d542beb9547f3a6c981d544c7760f50f9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6fbb7ffdbdfc3ea45eb913f9d6644fe5020f21d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6fbb7ffdbdfc3ea45eb913f9d6644fe5020f21d7", "html_url": "https://github.com/rust-lang/rust/commit/6fbb7ffdbdfc3ea45eb913f9d6644fe5020f21d7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6fbb7ffdbdfc3ea45eb913f9d6644fe5020f21d7/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8e6e6f5f896e1dbc2fb124e7dad8750d8b9112ef", "url": "https://api.github.com/repos/rust-lang/rust/commits/8e6e6f5f896e1dbc2fb124e7dad8750d8b9112ef", "html_url": "https://github.com/rust-lang/rust/commit/8e6e6f5f896e1dbc2fb124e7dad8750d8b9112ef"}], "stats": {"total": 47, "additions": 45, "deletions": 2}, "files": [{"sha": "d7d5d50081733189df4270c8be1fbf7def179c2e", "filename": "src/rt/rust_shape.cpp", "status": "modified", "additions": 45, "deletions": 2, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/6fbb7ffdbdfc3ea45eb913f9d6644fe5020f21d7/src%2Frt%2Frust_shape.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/6fbb7ffdbdfc3ea45eb913f9d6644fe5020f21d7/src%2Frt%2Frust_shape.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_shape.cpp?ref=6fbb7ffdbdfc3ea45eb913f9d6644fe5020f21d7", "patch": "@@ -2,6 +2,7 @@\n // actions, such as copying, freeing, comparing, and so on.\n \n #include <algorithm>\n+#include <iostream>\n #include <utility>\n #include <cassert>\n #include <cstdio>\n@@ -1085,11 +1086,11 @@ class cmp : public data<cmp,ptr_pair> {\n       result(0) {}\n \n     void walk_evec(bool align, bool is_pod, uint16_t sp_size) {\n-        return walk_vec(align, is_pod, get_evec_data_range(dp));\n+        walk_vec(align, is_pod, get_evec_data_range(dp));\n     }\n \n     void walk_ivec(bool align, bool is_pod, size_align &elem_sa) {\n-        return walk_vec(align, is_pod, get_ivec_data_range(dp));\n+        walk_vec(align, is_pod, get_ivec_data_range(dp));\n     }\n \n     void walk_fn(bool align) { return cmp_two_pointers(align); }\n@@ -1183,6 +1184,48 @@ cmp::walk_variant(bool align, tag_info &tinfo, uint32_t variant_id,\n     }\n }\n \n+\n+// Polymorphic logging, for convenience\n+\n+class log : public data<log,uint8_t *> {\n+    friend class data<log,uint8_t *>;\n+\n+private:\n+    std::ostream &out;\n+    bool in_string;\n+\n+    void walk_evec(bool align, bool is_pod, uint16_t sp_size) {\n+        walk_vec(align, is_pod, get_evec_data_range(dp));\n+    }\n+\n+    void walk_ivec(bool align, bool is_pod, size_align &elem_sa) {\n+        walk_vec(align, is_pod, get_ivec_data_range(dp));\n+    }\n+\n+    void walk_vec(bool align, bool is_pod,\n+                  const std::pair<uint8_t *,uint8_t *> &data);\n+\n+    template<typename T>\n+    void walk_number() { out << get_dp<T>(dp); }\n+\n+public:\n+    log(rust_task *in_task,\n+        const uint8_t *in_sp,\n+        const type_param *in_params,\n+        const rust_shape_tables *in_tables,\n+        uint8_t *in_data,\n+        std::ostream &in_out)\n+    : data<log,uint8_t *>(in_task, in_sp, in_params, in_tables, in_data),\n+      out(in_out) {}\n+};\n+\n+void\n+log::walk_vec(bool align, bool is_pod,\n+              const std::pair<uint8_t *,uint8_t *> &data) {\n+    // TODO: Check to see whether this is a string (contains u8). If so,\n+    // write the vector \"\"-style; otherwise [ ... , ... ] style.\n+}\n+\n } // end namespace shape\n \n extern \"C\" void"}]}