{"sha": "cf483a130cdfa1e72678fd98c74b11fedb3ae8dd", "node_id": "C_kwDOAAsO6NoAKGNmNDgzYTEzMGNkZmExZTcyNjc4ZmQ5OGM3NGIxMWZlZGIzYWU4ZGQ", "commit": {"author": {"name": "Joshua Nelson", "email": "jnelson@cloudflare.com", "date": "2022-05-27T14:39:54Z"}, "committer": {"name": "Joshua Nelson", "email": "jnelson@cloudflare.com", "date": "2022-06-22T04:03:58Z"}, "message": "`impl<T: AsFd> AsFd for {Arc,Box}<T>`", "tree": {"sha": "928f20752862e496670022b2387f7e0d518c4a87", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/928f20752862e496670022b2387f7e0d518c4a87"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cf483a130cdfa1e72678fd98c74b11fedb3ae8dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cf483a130cdfa1e72678fd98c74b11fedb3ae8dd", "html_url": "https://github.com/rust-lang/rust/commit/cf483a130cdfa1e72678fd98c74b11fedb3ae8dd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cf483a130cdfa1e72678fd98c74b11fedb3ae8dd/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ed1e3512dc5e0b25c693b95f39281c97c7bd3819", "url": "https://api.github.com/repos/rust-lang/rust/commits/ed1e3512dc5e0b25c693b95f39281c97c7bd3819", "html_url": "https://github.com/rust-lang/rust/commit/ed1e3512dc5e0b25c693b95f39281c97c7bd3819"}], "stats": {"total": 36, "additions": 33, "deletions": 3}, "files": [{"sha": "d661a13edc5e57a464a33c133e06690717de02f5", "filename": "library/std/src/os/fd/owned.rs", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/cf483a130cdfa1e72678fd98c74b11fedb3ae8dd/library%2Fstd%2Fsrc%2Fos%2Ffd%2Fowned.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf483a130cdfa1e72678fd98c74b11fedb3ae8dd/library%2Fstd%2Fsrc%2Fos%2Ffd%2Fowned.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Ffd%2Fowned.rs?ref=cf483a130cdfa1e72678fd98c74b11fedb3ae8dd", "patch": "@@ -355,3 +355,34 @@ impl From<OwnedFd> for crate::net::UdpSocket {\n         ))))\n     }\n }\n+\n+#[stable(feature = \"io_safety\", since = \"1.63.0\")]\n+/// This impl allows implementing traits that require `AsFd` on Arc.\n+/// ```\n+/// # #[cfg(any(unix, target_os = \"wasi\"))] mod group_cfg {\n+/// # #[cfg(target_os = \"wasi\")]\n+/// # use std::os::wasi::io::AsFd;\n+/// # #[cfg(unix)]\n+/// # use std::os::unix::io::AsFd;\n+/// use std::net::UdpSocket;\n+/// use std::sync::Arc;\n+///\n+/// trait MyTrait: AsFd {}\n+/// impl MyTrait for Arc<UdpSocket> {}\n+/// impl MyTrait for Box<UdpSocket> {}\n+/// # }\n+/// ```\n+impl<T: AsFd> AsFd for crate::sync::Arc<T> {\n+    #[inline]\n+    fn as_fd(&self) -> BorrowedFd<'_> {\n+        (**self).as_fd()\n+    }\n+}\n+\n+#[stable(feature = \"io_safety\", since = \"1.63.0\")]\n+impl<T: AsFd> AsFd for Box<T> {\n+    #[inline]\n+    fn as_fd(&self) -> BorrowedFd<'_> {\n+        (**self).as_fd()\n+    }\n+}"}, {"sha": "345beb1824dfafdb1e209c64d6eb4f42c1cd65a2", "filename": "library/std/src/os/fd/raw.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/cf483a130cdfa1e72678fd98c74b11fedb3ae8dd/library%2Fstd%2Fsrc%2Fos%2Ffd%2Fraw.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf483a130cdfa1e72678fd98c74b11fedb3ae8dd/library%2Fstd%2Fsrc%2Fos%2Ffd%2Fraw.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Ffd%2Fraw.rs?ref=cf483a130cdfa1e72678fd98c74b11fedb3ae8dd", "patch": "@@ -223,8 +223,7 @@ impl<'a> AsRawFd for io::StderrLock<'a> {\n     }\n }\n \n-#[stable(feature = \"asraw_ptrs\", since = \"1.63.0\")]\n-/// This blanket impl allows implementing custom traits that require `AsRawFd` on Arc.\n+/// This impl allows implementing traits that require `AsRawFd` on Arc.\n /// ```\n /// # #[cfg(any(unix, target_os = \"wasi\"))] mod group_cfg {\n /// # #[cfg(target_os = \"wasi\")]\n@@ -247,7 +246,7 @@ impl<T: AsRawFd> AsRawFd for crate::sync::Arc<T> {\n     }\n }\n \n-#[stable(feature = \"asraw_ptrs\", since = \"1.63.0\")]\n+#[stable(feature = \"asrawfd_ptrs\", since = \"1.63.0\")]\n impl<T: AsRawFd> AsRawFd for Box<T> {\n     #[inline]\n     fn as_raw_fd(&self) -> RawFd {"}]}