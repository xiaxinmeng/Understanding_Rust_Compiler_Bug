{"sha": "760f2ff58dc2a5b734012548db8b39614b94223a", "node_id": "C_kwDOAAsO6NoAKDc2MGYyZmY1OGRjMmE1YjczNDAxMjU0OGRiOGIzOTYxNGI5NDIyM2E", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-01-18T19:31:21Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-01-18T19:31:21Z"}, "message": "Auto merge of #13980 - Veykril:checkOnSaveConfigPatch, r=Veykril\n\nFix checkOnSave to check config patching not always working\n\nThis early return was missed in the initial PR, so if we aren't patching the `completion_addCallArgumentSnippets` `completion_addCallParenthesis` configs we won't be patching the checkOnSave ones...", "tree": {"sha": "99ef32c256067f5541d3ecc7d8a0f8f3b3c8db11", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/99ef32c256067f5541d3ecc7d8a0f8f3b3c8db11"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/760f2ff58dc2a5b734012548db8b39614b94223a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/760f2ff58dc2a5b734012548db8b39614b94223a", "html_url": "https://github.com/rust-lang/rust/commit/760f2ff58dc2a5b734012548db8b39614b94223a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/760f2ff58dc2a5b734012548db8b39614b94223a/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3a7271336536f2cd558498755254ae8c0e73baa7", "url": "https://api.github.com/repos/rust-lang/rust/commits/3a7271336536f2cd558498755254ae8c0e73baa7", "html_url": "https://github.com/rust-lang/rust/commit/3a7271336536f2cd558498755254ae8c0e73baa7"}, {"sha": "1e4a1829543c3d0dcee91d775239d16384db7821", "url": "https://api.github.com/repos/rust-lang/rust/commits/1e4a1829543c3d0dcee91d775239d16384db7821", "html_url": "https://github.com/rust-lang/rust/commit/1e4a1829543c3d0dcee91d775239d16384db7821"}], "stats": {"total": 42, "additions": 32, "deletions": 10}, "files": [{"sha": "73d2ed329845a72b5d18fada085eb35e9e9ff9e8", "filename": "crates/rust-analyzer/src/config/patch_old_style.rs", "status": "modified", "additions": 32, "deletions": 10, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/760f2ff58dc2a5b734012548db8b39614b94223a/crates%2Frust-analyzer%2Fsrc%2Fconfig%2Fpatch_old_style.rs", "raw_url": "https://github.com/rust-lang/rust/raw/760f2ff58dc2a5b734012548db8b39614b94223a/crates%2Frust-analyzer%2Fsrc%2Fconfig%2Fpatch_old_style.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fconfig%2Fpatch_old_style.rs?ref=760f2ff58dc2a5b734012548db8b39614b94223a", "patch": "@@ -114,16 +114,18 @@ pub(super) fn patch_json_for_outdated_configs(json: &mut Value) {\n     }\n \n     // completion_addCallArgumentSnippets completion_addCallParenthesis -> completion_callable_snippets\n-    let res = match (\n-        copy.pointer(\"/completion/addCallArgumentSnippets\"),\n-        copy.pointer(\"/completion/addCallParenthesis\"),\n-    ) {\n-        (Some(Value::Bool(true)), Some(Value::Bool(true))) => json!(\"fill_arguments\"),\n-        (_, Some(Value::Bool(true))) => json!(\"add_parentheses\"),\n-        (Some(Value::Bool(false)), Some(Value::Bool(false))) => json!(\"none\"),\n-        (_, _) => return,\n-    };\n-    merge(json, json!({ \"completion\": { \"callable\": {\"snippets\": res }} }));\n+    'completion: {\n+        let res = match (\n+            copy.pointer(\"/completion/addCallArgumentSnippets\"),\n+            copy.pointer(\"/completion/addCallParenthesis\"),\n+        ) {\n+            (Some(Value::Bool(true)), Some(Value::Bool(true))) => json!(\"fill_arguments\"),\n+            (_, Some(Value::Bool(true))) => json!(\"add_parentheses\"),\n+            (Some(Value::Bool(false)), Some(Value::Bool(false))) => json!(\"none\"),\n+            (_, _) => break 'completion,\n+        };\n+        merge(json, json!({ \"completion\": { \"callable\": {\"snippets\": res }} }));\n+    }\n \n     // We need to do this due to the checkOnSave_enable -> checkOnSave change, as that key now can either be an object or a bool\n     // checkOnSave_* -> check_*\n@@ -146,3 +148,23 @@ fn merge(dst: &mut Value, src: Value) {\n         (dst, src) => *dst = src,\n     }\n }\n+\n+#[test]\n+fn check_on_save_patching() {\n+    let mut json = json!({ \"checkOnSave\": { \"overrideCommand\": \"foo\" }});\n+    patch_json_for_outdated_configs(&mut json);\n+    assert_eq!(\n+        json,\n+        json!({ \"checkOnSave\": { \"overrideCommand\": \"foo\" }, \"check\": { \"overrideCommand\": \"foo\" }})\n+    );\n+}\n+\n+#[test]\n+fn check_on_save_patching_enable() {\n+    let mut json = json!({ \"checkOnSave\": { \"enable\": true, \"overrideCommand\": \"foo\" }});\n+    patch_json_for_outdated_configs(&mut json);\n+    assert_eq!(\n+        json,\n+        json!({ \"checkOnSave\": true, \"check\": { \"enable\": true, \"overrideCommand\": \"foo\" }})\n+    );\n+}"}]}