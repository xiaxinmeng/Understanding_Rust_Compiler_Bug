{"sha": "f99e152e5a02d75e5df1a10b33d4e8592cd25fee", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY5OWUxNTJlNWEwMmQ3NWU1ZGYxYTEwYjMzZDRlODU5MmNkMjVmZWU=", "commit": {"author": {"name": "Aman Arora", "email": "me@aman-arora.com", "date": "2021-02-13T06:59:35Z"}, "committer": {"name": "Aman Arora", "email": "me@aman-arora.com", "date": "2021-02-16T03:00:40Z"}, "message": "Use iter::position in truncate_capture_for_move", "tree": {"sha": "a0a5cd7249358f39de114caea5b8d86f0a064880", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a0a5cd7249358f39de114caea5b8d86f0a064880"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f99e152e5a02d75e5df1a10b33d4e8592cd25fee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f99e152e5a02d75e5df1a10b33d4e8592cd25fee", "html_url": "https://github.com/rust-lang/rust/commit/f99e152e5a02d75e5df1a10b33d4e8592cd25fee", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f99e152e5a02d75e5df1a10b33d4e8592cd25fee/comments", "author": {"login": "arora-aman", "id": 4193035, "node_id": "MDQ6VXNlcjQxOTMwMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4193035?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arora-aman", "html_url": "https://github.com/arora-aman", "followers_url": "https://api.github.com/users/arora-aman/followers", "following_url": "https://api.github.com/users/arora-aman/following{/other_user}", "gists_url": "https://api.github.com/users/arora-aman/gists{/gist_id}", "starred_url": "https://api.github.com/users/arora-aman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arora-aman/subscriptions", "organizations_url": "https://api.github.com/users/arora-aman/orgs", "repos_url": "https://api.github.com/users/arora-aman/repos", "events_url": "https://api.github.com/users/arora-aman/events{/privacy}", "received_events_url": "https://api.github.com/users/arora-aman/received_events", "type": "User", "site_admin": false}, "committer": {"login": "arora-aman", "id": 4193035, "node_id": "MDQ6VXNlcjQxOTMwMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4193035?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arora-aman", "html_url": "https://github.com/arora-aman", "followers_url": "https://api.github.com/users/arora-aman/followers", "following_url": "https://api.github.com/users/arora-aman/following{/other_user}", "gists_url": "https://api.github.com/users/arora-aman/gists{/gist_id}", "starred_url": "https://api.github.com/users/arora-aman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arora-aman/subscriptions", "organizations_url": "https://api.github.com/users/arora-aman/orgs", "repos_url": "https://api.github.com/users/arora-aman/repos", "events_url": "https://api.github.com/users/arora-aman/events{/privacy}", "received_events_url": "https://api.github.com/users/arora-aman/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1b86ad8485a1937ecd16b2dd5d9c5feb4eac93ec", "url": "https://api.github.com/repos/rust-lang/rust/commits/1b86ad8485a1937ecd16b2dd5d9c5feb4eac93ec", "html_url": "https://github.com/rust-lang/rust/commit/1b86ad8485a1937ecd16b2dd5d9c5feb4eac93ec"}], "stats": {"total": 14, "additions": 4, "deletions": 10}, "files": [{"sha": "69c09528662d37d5c2f7535679e6be9935670461", "filename": "compiler/rustc_typeck/src/check/upvar.rs", "status": "modified", "additions": 4, "deletions": 10, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/f99e152e5a02d75e5df1a10b33d4e8592cd25fee/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fupvar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f99e152e5a02d75e5df1a10b33d4e8592cd25fee/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fupvar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fupvar.rs?ref=f99e152e5a02d75e5df1a10b33d4e8592cd25fee", "patch": "@@ -1461,16 +1461,10 @@ fn restrict_capture_precision<'tcx>(mut place: Place<'tcx>) -> Place<'tcx> {\n \n /// Truncates a place so that the resultant capture doesn't move data out of a reference\n fn truncate_capture_for_move(mut place: Place<'tcx>) -> Place<'tcx> {\n-    for (i, proj) in place.projections.iter().enumerate() {\n-        match proj.kind {\n-            ProjectionKind::Deref => {\n-                // We only drop Derefs in case of move closures\n-                // There might be an index projection or raw ptr ahead, so we don't stop here.\n-                place.projections.truncate(i);\n-                return place;\n-            }\n-            _ => {}\n-        }\n+    if let Some(i) = place.projections.iter().position(|proj| proj.kind == ProjectionKind::Deref) {\n+        // We only drop Derefs in case of move closures\n+        // There might be an index projection or raw ptr ahead, so we don't stop here.\n+        place.projections.truncate(i);\n     }\n \n     place"}]}