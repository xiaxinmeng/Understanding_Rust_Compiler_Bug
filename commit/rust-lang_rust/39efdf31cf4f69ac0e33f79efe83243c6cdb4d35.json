{"sha": "39efdf31cf4f69ac0e33f79efe83243c6cdb4d35", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM5ZWZkZjMxY2Y0ZjY5YWMwZTMzZjc5ZWZlODMyNDNjNmNkYjRkMzU=", "commit": {"author": {"name": "Vytautas Astrauskas", "email": "astrauv@amazon.com", "date": "2020-04-26T21:56:31Z"}, "committer": {"name": "Vytautas Astrauskas", "email": "astrauv@amazon.com", "date": "2020-04-27T21:26:36Z"}, "message": "Move prctl test to the same file as other libc tests.", "tree": {"sha": "f712f8cfd57b08c02d3474b7f3b0bf75452ededb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f712f8cfd57b08c02d3474b7f3b0bf75452ededb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/39efdf31cf4f69ac0e33f79efe83243c6cdb4d35", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/39efdf31cf4f69ac0e33f79efe83243c6cdb4d35", "html_url": "https://github.com/rust-lang/rust/commit/39efdf31cf4f69ac0e33f79efe83243c6cdb4d35", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/39efdf31cf4f69ac0e33f79efe83243c6cdb4d35/comments", "author": null, "committer": null, "parents": [{"sha": "60cd8aa4b0dadaf5e32bcf86ee6cbddb93c69c01", "url": "https://api.github.com/repos/rust-lang/rust/commits/60cd8aa4b0dadaf5e32bcf86ee6cbddb93c69c01", "html_url": "https://github.com/rust-lang/rust/commit/60cd8aa4b0dadaf5e32bcf86ee6cbddb93c69c01"}], "stats": {"total": 35, "additions": 17, "deletions": 18}, "files": [{"sha": "b8ba27b3a89545115fbb66032fcbb8562a282c95", "filename": "tests/run-pass/concurrency/libc_prctl_thread_name.rs", "status": "removed", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/60cd8aa4b0dadaf5e32bcf86ee6cbddb93c69c01/tests%2Frun-pass%2Fconcurrency%2Flibc_prctl_thread_name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60cd8aa4b0dadaf5e32bcf86ee6cbddb93c69c01/tests%2Frun-pass%2Fconcurrency%2Flibc_prctl_thread_name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fconcurrency%2Flibc_prctl_thread_name.rs?ref=60cd8aa4b0dadaf5e32bcf86ee6cbddb93c69c01", "patch": "@@ -1,18 +0,0 @@\n-// ignore-windows: No libc on Windows\n-// ignore-macos: No prctl on MacOS\n-\n-#![feature(rustc_private)]\n-\n-extern crate libc;\n-\n-use std::ffi::CString;\n-\n-fn main() {\n-    unsafe {\n-        let thread_name = CString::new(\"hello\").expect(\"CString::new failed\");\n-        assert_eq!(libc::prctl(libc::PR_SET_NAME, thread_name.as_ptr() as libc::c_long, 0 as libc::c_long, 0 as libc::c_long, 0 as libc::c_long), 0);\n-        let mut buf = [0; 6];\n-        assert_eq!(libc::prctl(libc::PR_GET_NAME, buf.as_mut_ptr() as libc::c_long, 0 as libc::c_long, 0 as libc::c_long, 0 as libc::c_long), 0);\n-        assert_eq!(thread_name.as_bytes_with_nul(), buf);\n-    }\n-}"}, {"sha": "5873d429695002789469d8bbd031db673226e290", "filename": "tests/run-pass/libc.rs", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/39efdf31cf4f69ac0e33f79efe83243c6cdb4d35/tests%2Frun-pass%2Flibc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/39efdf31cf4f69ac0e33f79efe83243c6cdb4d35/tests%2Frun-pass%2Flibc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Flibc.rs?ref=39efdf31cf4f69ac0e33f79efe83243c6cdb4d35", "patch": "@@ -141,6 +141,20 @@ fn test_rwlock_libc_static_initializer() {\n     }\n }\n \n+/// Test whether the `prctl` shim correctly sets the thread name.\n+///\n+/// Note: `prctl` exists only on Linux.\n+fn test_prctl_thread_name() {\n+    use std::ffi::CString;\n+    unsafe {\n+        let thread_name = CString::new(\"hello\").expect(\"CString::new failed\");\n+        assert_eq!(libc::prctl(libc::PR_SET_NAME, thread_name.as_ptr() as libc::c_long, 0 as libc::c_long, 0 as libc::c_long, 0 as libc::c_long), 0);\n+        let mut buf = [0; 6];\n+        assert_eq!(libc::prctl(libc::PR_GET_NAME, buf.as_mut_ptr() as libc::c_long, 0 as libc::c_long, 0 as libc::c_long, 0 as libc::c_long), 0);\n+        assert_eq!(thread_name.as_bytes_with_nul(), buf);\n+    }\n+}\n+\n fn main() {\n     #[cfg(target_os = \"linux\")]\n     test_posix_fadvise();\n@@ -152,4 +166,7 @@ fn main() {\n \n     #[cfg(target_os = \"linux\")]\n     test_mutex_libc_static_initializer_recursive();\n+\n+    #[cfg(target_os = \"linux\")]\n+    test_prctl_thread_name();\n }"}]}