{"sha": "586bd3f735a7ec8c0ee03ab3515dfd8a89a31ff4", "node_id": "C_kwDOAAsO6NoAKDU4NmJkM2Y3MzVhN2VjOGMwZWUwM2FiMzUxNWRmZDhhODlhMzFmZjQ", "commit": {"author": {"name": "kraktus", "email": "kraktus@users.noreply.github.com", "date": "2022-10-23T12:00:44Z"}, "committer": {"name": "kraktus", "email": "kraktus@users.noreply.github.com", "date": "2022-11-07T18:49:43Z"}, "message": "refactor to avoid potential ICE", "tree": {"sha": "79c48c110c7ef017626b09d408fe8bcfe4f66f91", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/79c48c110c7ef017626b09d408fe8bcfe4f66f91"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/586bd3f735a7ec8c0ee03ab3515dfd8a89a31ff4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/586bd3f735a7ec8c0ee03ab3515dfd8a89a31ff4", "html_url": "https://github.com/rust-lang/rust/commit/586bd3f735a7ec8c0ee03ab3515dfd8a89a31ff4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/586bd3f735a7ec8c0ee03ab3515dfd8a89a31ff4/comments", "author": {"login": "kraktus", "id": 56031107, "node_id": "MDQ6VXNlcjU2MDMxMTA3", "avatar_url": "https://avatars.githubusercontent.com/u/56031107?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kraktus", "html_url": "https://github.com/kraktus", "followers_url": "https://api.github.com/users/kraktus/followers", "following_url": "https://api.github.com/users/kraktus/following{/other_user}", "gists_url": "https://api.github.com/users/kraktus/gists{/gist_id}", "starred_url": "https://api.github.com/users/kraktus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kraktus/subscriptions", "organizations_url": "https://api.github.com/users/kraktus/orgs", "repos_url": "https://api.github.com/users/kraktus/repos", "events_url": "https://api.github.com/users/kraktus/events{/privacy}", "received_events_url": "https://api.github.com/users/kraktus/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kraktus", "id": 56031107, "node_id": "MDQ6VXNlcjU2MDMxMTA3", "avatar_url": "https://avatars.githubusercontent.com/u/56031107?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kraktus", "html_url": "https://github.com/kraktus", "followers_url": "https://api.github.com/users/kraktus/followers", "following_url": "https://api.github.com/users/kraktus/following{/other_user}", "gists_url": "https://api.github.com/users/kraktus/gists{/gist_id}", "starred_url": "https://api.github.com/users/kraktus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kraktus/subscriptions", "organizations_url": "https://api.github.com/users/kraktus/orgs", "repos_url": "https://api.github.com/users/kraktus/repos", "events_url": "https://api.github.com/users/kraktus/events{/privacy}", "received_events_url": "https://api.github.com/users/kraktus/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cca9938694eff5a2f4c2731966a9dd8ce4b118e7", "url": "https://api.github.com/repos/rust-lang/rust/commits/cca9938694eff5a2f4c2731966a9dd8ce4b118e7", "html_url": "https://github.com/rust-lang/rust/commit/cca9938694eff5a2f4c2731966a9dd8ce4b118e7"}], "stats": {"total": 11, "additions": 5, "deletions": 6}, "files": [{"sha": "e1911449242df4d8a54ccc4a88097ac9cb40e200", "filename": "clippy_lints/src/excessive_bools.rs", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/586bd3f735a7ec8c0ee03ab3515dfd8a89a31ff4/clippy_lints%2Fsrc%2Fexcessive_bools.rs", "raw_url": "https://github.com/rust-lang/rust/raw/586bd3f735a7ec8c0ee03ab3515dfd8a89a31ff4/clippy_lints%2Fsrc%2Fexcessive_bools.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fexcessive_bools.rs?ref=586bd3f735a7ec8c0ee03ab3515dfd8a89a31ff4", "patch": "@@ -141,23 +141,22 @@ impl EarlyLintPass for ExcessiveBools {\n                     return;\n                 }\n \n-                let struct_bools = variant_data\n+                if let Ok(struct_bools) = variant_data\n                     .fields()\n                     .iter()\n                     .filter(|field| is_bool_ty(&field.ty))\n                     .count()\n-                    .try_into()\n-                    .unwrap();\n-                if self.max_struct_bools < struct_bools {\n+                    .try_into() && self.max_struct_bools < struct_bools\n+                    {\n                     span_lint_and_help(\n                         cx,\n                         STRUCT_EXCESSIVE_BOOLS,\n                         item.span,\n                         &format!(\"more than {} bools in a struct\", self.max_struct_bools),\n                         None,\n                         \"consider using a state machine or refactoring bools into two-variant enums\",\n-                    );\n-                }\n+                    )\n+                    }\n             },\n             ItemKind::Impl(box Impl {\n                 of_trait: None, items, .."}]}