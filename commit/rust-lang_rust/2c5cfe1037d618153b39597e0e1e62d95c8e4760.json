{"sha": "2c5cfe1037d618153b39597e0e1e62d95c8e4760", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJjNWNmZTEwMzdkNjE4MTUzYjM5NTk3ZTBlMWU2MmQ5NWM4ZTQ3NjA=", "commit": {"author": {"name": "Eric Reed", "email": "ereed@mozilla.com", "date": "2013-06-25T23:02:51Z"}, "committer": {"name": "Eric Reed", "email": "ereed@mozilla.com", "date": "2013-06-25T23:02:51Z"}, "message": "removed obsolete FIXMEs. formatting changes.", "tree": {"sha": "21dac10aed3920cc52c4344bbf83d3a5686bd485", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/21dac10aed3920cc52c4344bbf83d3a5686bd485"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2c5cfe1037d618153b39597e0e1e62d95c8e4760", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2c5cfe1037d618153b39597e0e1e62d95c8e4760", "html_url": "https://github.com/rust-lang/rust/commit/2c5cfe1037d618153b39597e0e1e62d95c8e4760", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2c5cfe1037d618153b39597e0e1e62d95c8e4760/comments", "author": null, "committer": null, "parents": [{"sha": "f202713b73559941ad64c539dc10b71655879403", "url": "https://api.github.com/repos/rust-lang/rust/commits/f202713b73559941ad64c539dc10b71655879403", "html_url": "https://github.com/rust-lang/rust/commit/f202713b73559941ad64c539dc10b71655879403"}], "stats": {"total": 78, "additions": 24, "deletions": 54}, "files": [{"sha": "7035cb6a5e80fb31a9c75ec4fb371e73ed2723d3", "filename": "src/libstd/rt/uv/uvll.rs", "status": "modified", "additions": 24, "deletions": 54, "changes": 78, "blob_url": "https://github.com/rust-lang/rust/blob/2c5cfe1037d618153b39597e0e1e62d95c8e4760/src%2Flibstd%2Frt%2Fuv%2Fuvll.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c5cfe1037d618153b39597e0e1e62d95c8e4760/src%2Flibstd%2Frt%2Fuv%2Fuvll.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fuv%2Fuvll.rs?ref=2c5cfe1037d618153b39597e0e1e62d95c8e4760", "patch": "@@ -235,27 +235,20 @@ pub unsafe fn tcp_init(loop_handle: *c_void, handle: *uv_tcp_t) -> c_int {\n     return rust_uv_tcp_init(loop_handle, handle);\n }\n \n-// FIXME ref #2064\n-pub unsafe fn tcp_connect(connect_ptr: *uv_connect_t,\n-                          tcp_handle_ptr: *uv_tcp_t,\n-                          addr_ptr: *sockaddr_in,\n-                          after_connect_cb: *u8) -> c_int {\n-    return rust_uv_tcp_connect(connect_ptr, tcp_handle_ptr,\n-                                       after_connect_cb, addr_ptr);\n-}\n-// FIXME ref #2064\n-pub unsafe fn tcp_connect6(connect_ptr: *uv_connect_t,\n-                           tcp_handle_ptr: *uv_tcp_t,\n-                           addr_ptr: *sockaddr_in6,\n-                           after_connect_cb: *u8) -> c_int {\n-    return rust_uv_tcp_connect6(connect_ptr, tcp_handle_ptr,\n-                                        after_connect_cb, addr_ptr);\n-}\n-// FIXME ref #2064\n+pub unsafe fn tcp_connect(connect_ptr: *uv_connect_t, tcp_handle_ptr: *uv_tcp_t,\n+                          addr_ptr: *sockaddr_in, after_connect_cb: *u8) -> c_int {\n+    return rust_uv_tcp_connect(connect_ptr, tcp_handle_ptr, after_connect_cb, addr_ptr);\n+}\n+\n+pub unsafe fn tcp_connect6(connect_ptr: *uv_connect_t, tcp_handle_ptr: *uv_tcp_t,\n+                           addr_ptr: *sockaddr_in6, after_connect_cb: *u8) -> c_int {\n+    return rust_uv_tcp_connect6(connect_ptr, tcp_handle_ptr, after_connect_cb, addr_ptr);\n+}\n+\n pub unsafe fn tcp_bind(tcp_server_ptr: *uv_tcp_t, addr_ptr: *sockaddr_in) -> c_int {\n     return rust_uv_tcp_bind(tcp_server_ptr, addr_ptr);\n }\n-// FIXME ref #2064\n+\n pub unsafe fn tcp_bind6(tcp_server_ptr: *uv_tcp_t, addr_ptr: *sockaddr_in6) -> c_int {\n     return rust_uv_tcp_bind6(tcp_server_ptr, addr_ptr);\n }\n@@ -444,16 +437,11 @@ extern {\n     fn rust_uv_idle_stop(handle: *uv_idle_t) -> c_int;\n \n     fn rust_uv_async_send(handle: *uv_async_t);\n-    fn rust_uv_async_init(loop_handle: *c_void,\n-                          async_handle: *uv_async_t,\n-                          cb: *u8) -> c_int;\n+    fn rust_uv_async_init(loop_handle: *c_void, async_handle: *uv_async_t, cb: *u8) -> c_int;\n     fn rust_uv_tcp_init(loop_handle: *c_void, handle_ptr: *uv_tcp_t) -> c_int;\n-    // FIXME ref #2604 .. ?\n     fn rust_uv_buf_init(out_buf: *uv_buf_t, base: *u8, len: size_t);\n     fn rust_uv_last_error(loop_handle: *c_void) -> uv_err_t;\n-    // FIXME ref #2064\n     fn rust_uv_strerror(err: *uv_err_t) -> *c_char;\n-    // FIXME ref #2064\n     fn rust_uv_err_name(err: *uv_err_t) -> *c_char;\n     fn rust_uv_ip4_addrp(ip: *u8, port: c_int) -> *sockaddr_in;\n     fn rust_uv_ip6_addrp(ip: *u8, port: c_int) -> *sockaddr_in6;\n@@ -463,52 +451,34 @@ extern {\n     fn rust_uv_ip6_name(src: *sockaddr_in6, dst: *u8, size: size_t) -> c_int;\n     fn rust_uv_ip4_port(src: *sockaddr_in) -> c_uint;\n     fn rust_uv_ip6_port(src: *sockaddr_in6) -> c_uint;\n-    // FIXME ref #2064\n-    fn rust_uv_tcp_connect(connect_ptr: *uv_connect_t,\n-                           tcp_handle_ptr: *uv_tcp_t,\n-                           after_cb: *u8,\n+    fn rust_uv_tcp_connect(connect_ptr: *uv_connect_t, tcp_handle_ptr: *uv_tcp_t, after_cb: *u8,\n                            addr: *sockaddr_in) -> c_int;\n-    // FIXME ref #2064\n     fn rust_uv_tcp_bind(tcp_server: *uv_tcp_t, addr: *sockaddr_in) -> c_int;\n-    // FIXME ref #2064\n-    fn rust_uv_tcp_connect6(connect_ptr: *uv_connect_t,\n-                            tcp_handle_ptr: *uv_tcp_t,\n-                            after_cb: *u8,\n+    fn rust_uv_tcp_connect6(connect_ptr: *uv_connect_t, tcp_handle_ptr: *uv_tcp_t, after_cb: *u8,\n                             addr: *sockaddr_in6) -> c_int;\n-    // FIXME ref #2064\n     fn rust_uv_tcp_bind6(tcp_server: *uv_tcp_t, addr: *sockaddr_in6) -> c_int;\n-    fn rust_uv_tcp_getpeername(tcp_handle_ptr: *uv_tcp_t,\n-                               name: *sockaddr_in) -> c_int;\n-    fn rust_uv_tcp_getpeername6(tcp_handle_ptr: *uv_tcp_t,\n-                                name: *sockaddr_in6) ->c_int;\n+    fn rust_uv_tcp_getpeername(tcp_handle_ptr: *uv_tcp_t, name: *sockaddr_in) -> c_int;\n+    fn rust_uv_tcp_getpeername6(tcp_handle_ptr: *uv_tcp_t, name: *sockaddr_in6) ->c_int;\n \n     fn rust_uv_udp_init(loop_handle: *uv_loop_t, handle_ptr: *uv_udp_t) -> c_int;\n     fn rust_uv_udp_bind(server: *uv_udp_t, addr: *sockaddr_in, flags: c_uint) -> c_int;\n     fn rust_uv_udp_bind6(server: *uv_udp_t, addr: *sockaddr_in6, flags: c_uint) -> c_int;\n-    fn rust_uv_udp_send(req: *uv_udp_send_t, handle: *uv_udp_t, buf_in: *uv_buf_t,\n-                        buf_cnt: c_int, addr: *sockaddr_in, cb: *u8) -> c_int;\n-    fn rust_uv_udp_send6(req: *uv_udp_send_t, handle: *uv_udp_t, buf_in: *uv_buf_t,\n-                         buf_cnt: c_int, addr: *sockaddr_in6, cb: *u8) -> c_int;\n+    fn rust_uv_udp_send(req: *uv_udp_send_t, handle: *uv_udp_t, buf_in: *uv_buf_t, buf_cnt: c_int,\n+                        addr: *sockaddr_in, cb: *u8) -> c_int;\n+    fn rust_uv_udp_send6(req: *uv_udp_send_t, handle: *uv_udp_t, buf_in: *uv_buf_t, buf_cnt: c_int,\n+                         addr: *sockaddr_in6, cb: *u8) -> c_int;\n     fn rust_uv_udp_recv_start(server: *uv_udp_t, on_alloc: *u8, on_recv: *u8) -> c_int;\n     fn rust_uv_udp_recv_stop(server: *uv_udp_t) -> c_int;\n     fn rust_uv_get_udp_handle_from_send_req(req: *uv_udp_send_t) -> *uv_udp_t;\n \n     fn rust_uv_listen(stream: *c_void, backlog: c_int, cb: *u8) -> c_int;\n     fn rust_uv_accept(server: *c_void, client: *c_void) -> c_int;\n-    fn rust_uv_write(req: *c_void,\n-                     stream: *c_void,\n-                     buf_in: *uv_buf_t,\n-                     buf_cnt: c_int,\n+    fn rust_uv_write(req: *c_void, stream: *c_void, buf_in: *uv_buf_t, buf_cnt: c_int,\n                      cb: *u8) -> c_int;\n-    fn rust_uv_read_start(stream: *c_void,\n-                          on_alloc: *u8,\n-                          on_read: *u8) -> c_int;\n+    fn rust_uv_read_start(stream: *c_void, on_alloc: *u8, on_read: *u8) -> c_int;\n     fn rust_uv_read_stop(stream: *c_void) -> c_int;\n-    fn rust_uv_timer_init(loop_handle: *c_void,\n-                          timer_handle: *uv_timer_t) -> c_int;\n-    fn rust_uv_timer_start(timer_handle: *uv_timer_t,\n-                           cb: *u8,\n-                           timeout: libc::uint64_t,\n+    fn rust_uv_timer_init(loop_handle: *c_void, timer_handle: *uv_timer_t) -> c_int;\n+    fn rust_uv_timer_start(timer_handle: *uv_timer_t, cb: *u8, timeout: libc::uint64_t,\n                            repeat: libc::uint64_t) -> c_int;\n     fn rust_uv_timer_stop(handle: *uv_timer_t) -> c_int;\n "}]}