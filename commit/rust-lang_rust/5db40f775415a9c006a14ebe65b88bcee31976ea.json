{"sha": "5db40f775415a9c006a14ebe65b88bcee31976ea", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVkYjQwZjc3NTQxNWE5YzAwNmExNGViZTY1Yjg4YmNlZTMxOTc2ZWE=", "commit": {"author": {"name": "QuietMisdreavus", "email": "grey@quietmisdreavus.net", "date": "2017-12-21T21:15:07Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2018-01-22T09:51:28Z"}, "message": "add RenderType to DocContext", "tree": {"sha": "178a9526856db0375fb873ec6205d50c51f6e46e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/178a9526856db0375fb873ec6205d50c51f6e46e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5db40f775415a9c006a14ebe65b88bcee31976ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5db40f775415a9c006a14ebe65b88bcee31976ea", "html_url": "https://github.com/rust-lang/rust/commit/5db40f775415a9c006a14ebe65b88bcee31976ea", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5db40f775415a9c006a14ebe65b88bcee31976ea/comments", "author": {"login": "QuietMisdreavus", "id": 5217170, "node_id": "MDQ6VXNlcjUyMTcxNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/5217170?v=4", "gravatar_id": "", "url": "https://api.github.com/users/QuietMisdreavus", "html_url": "https://github.com/QuietMisdreavus", "followers_url": "https://api.github.com/users/QuietMisdreavus/followers", "following_url": "https://api.github.com/users/QuietMisdreavus/following{/other_user}", "gists_url": "https://api.github.com/users/QuietMisdreavus/gists{/gist_id}", "starred_url": "https://api.github.com/users/QuietMisdreavus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/QuietMisdreavus/subscriptions", "organizations_url": "https://api.github.com/users/QuietMisdreavus/orgs", "repos_url": "https://api.github.com/users/QuietMisdreavus/repos", "events_url": "https://api.github.com/users/QuietMisdreavus/events{/privacy}", "received_events_url": "https://api.github.com/users/QuietMisdreavus/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "473fcfd49a1bdb3981e7354165f98af04f847df1", "url": "https://api.github.com/repos/rust-lang/rust/commits/473fcfd49a1bdb3981e7354165f98af04f847df1", "html_url": "https://github.com/rust-lang/rust/commit/473fcfd49a1bdb3981e7354165f98af04f847df1"}], "stats": {"total": 14, "additions": 12, "deletions": 2}, "files": [{"sha": "6cbbe1fdf44fae5d7d1e9f04afbde74cb74a0266", "filename": "src/librustdoc/core.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/5db40f775415a9c006a14ebe65b88bcee31976ea/src%2Flibrustdoc%2Fcore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5db40f775415a9c006a14ebe65b88bcee31976ea/src%2Flibrustdoc%2Fcore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fcore.rs?ref=5db40f775415a9c006a14ebe65b88bcee31976ea", "patch": "@@ -35,6 +35,7 @@ use std::path::PathBuf;\n use visit_ast::RustdocVisitor;\n use clean;\n use clean::Clean;\n+use html::markdown::RenderType;\n use html::render::RenderInfo;\n \n pub use rustc::session::config::Input;\n@@ -54,6 +55,8 @@ pub struct DocContext<'a, 'tcx: 'a> {\n     pub renderinfo: RefCell<RenderInfo>,\n     /// Later on moved through `clean::Crate` into `html::render::CACHE_KEY`\n     pub external_traits: RefCell<FxHashMap<DefId, clean::Trait>>,\n+    /// Which markdown renderer to use when extracting links.\n+    pub render_type: RenderType,\n \n     // The current set of type and lifetime substitutions,\n     // for expanding type aliases at the HIR level:\n@@ -104,7 +107,8 @@ pub fn run_core(search_paths: SearchPaths,\n                 triple: Option<String>,\n                 maybe_sysroot: Option<PathBuf>,\n                 allow_warnings: bool,\n-                force_unstable_if_unmarked: bool) -> (clean::Crate, RenderInfo)\n+                force_unstable_if_unmarked: bool,\n+                render_type: RenderType) -> (clean::Crate, RenderInfo)\n {\n     // Parse, resolve, and typecheck the given crate.\n \n@@ -207,6 +211,7 @@ pub fn run_core(search_paths: SearchPaths,\n             access_levels: RefCell::new(access_levels),\n             external_traits: Default::default(),\n             renderinfo: Default::default(),\n+            render_type,\n             ty_substs: Default::default(),\n             lt_substs: Default::default(),\n         };"}, {"sha": "01c2a5620da25af332a813e9b8857f01b3c72f8a", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/5db40f775415a9c006a14ebe65b88bcee31976ea/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5db40f775415a9c006a14ebe65b88bcee31976ea/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=5db40f775415a9c006a14ebe65b88bcee31976ea", "patch": "@@ -503,6 +503,11 @@ where R: 'static + Send, F: 'static + Send + FnOnce(Output) -> R {\n     let crate_name = matches.opt_str(\"crate-name\");\n     let crate_version = matches.opt_str(\"crate-version\");\n     let plugin_path = matches.opt_str(\"plugin-path\");\n+    let render_type = if matches.opt_present(\"enable-commonmark\") {\n+        RenderType::Pulldown\n+    } else {\n+        RenderType::Hoedown\n+    };\n \n     info!(\"starting to run rustc\");\n     let display_warnings = matches.opt_present(\"display-warnings\");\n@@ -517,7 +522,7 @@ where R: 'static + Send, F: 'static + Send + FnOnce(Output) -> R {\n \n         let (mut krate, renderinfo) =\n             core::run_core(paths, cfgs, externs, Input::File(cratefile), triple, maybe_sysroot,\n-                           display_warnings, force_unstable_if_unmarked);\n+                           display_warnings, force_unstable_if_unmarked, render_type);\n \n         info!(\"finished with rustc\");\n "}]}