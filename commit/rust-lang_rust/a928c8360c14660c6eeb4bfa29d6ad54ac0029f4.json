{"sha": "a928c8360c14660c6eeb4bfa29d6ad54ac0029f4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE5MjhjODM2MGMxNDY2MGM2ZWViNGJmYTI5ZDZhZDU0YWMwMDI5ZjQ=", "commit": {"author": {"name": "Alex Burka", "email": "aburka@seas.upenn.edu", "date": "2016-03-04T23:57:22Z"}, "committer": {"name": "Alex Burka", "email": "aburka@seas.upenn.edu", "date": "2016-03-04T23:57:22Z"}, "message": "add underflow/overflow tests", "tree": {"sha": "dbcc675a96c8acdc62936bcf0b778f7242bd6dce", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dbcc675a96c8acdc62936bcf0b778f7242bd6dce"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a928c8360c14660c6eeb4bfa29d6ad54ac0029f4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a928c8360c14660c6eeb4bfa29d6ad54ac0029f4", "html_url": "https://github.com/rust-lang/rust/commit/a928c8360c14660c6eeb4bfa29d6ad54ac0029f4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a928c8360c14660c6eeb4bfa29d6ad54ac0029f4/comments", "author": {"login": "durka", "id": 47007, "node_id": "MDQ6VXNlcjQ3MDA3", "avatar_url": "https://avatars.githubusercontent.com/u/47007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/durka", "html_url": "https://github.com/durka", "followers_url": "https://api.github.com/users/durka/followers", "following_url": "https://api.github.com/users/durka/following{/other_user}", "gists_url": "https://api.github.com/users/durka/gists{/gist_id}", "starred_url": "https://api.github.com/users/durka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/durka/subscriptions", "organizations_url": "https://api.github.com/users/durka/orgs", "repos_url": "https://api.github.com/users/durka/repos", "events_url": "https://api.github.com/users/durka/events{/privacy}", "received_events_url": "https://api.github.com/users/durka/received_events", "type": "User", "site_admin": false}, "committer": {"login": "durka", "id": 47007, "node_id": "MDQ6VXNlcjQ3MDA3", "avatar_url": "https://avatars.githubusercontent.com/u/47007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/durka", "html_url": "https://github.com/durka", "followers_url": "https://api.github.com/users/durka/followers", "following_url": "https://api.github.com/users/durka/following{/other_user}", "gists_url": "https://api.github.com/users/durka/gists{/gist_id}", "starred_url": "https://api.github.com/users/durka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/durka/subscriptions", "organizations_url": "https://api.github.com/users/durka/orgs", "repos_url": "https://api.github.com/users/durka/repos", "events_url": "https://api.github.com/users/durka/events{/privacy}", "received_events_url": "https://api.github.com/users/durka/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "003120aa191845c1e57467dc4a2cb6140e5689a2", "url": "https://api.github.com/repos/rust-lang/rust/commits/003120aa191845c1e57467dc4a2cb6140e5689a2", "html_url": "https://github.com/rust-lang/rust/commit/003120aa191845c1e57467dc4a2cb6140e5689a2"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "07233a43b88e29308b81c84ad0ecba3ca52e9ee9", "filename": "src/test/run-pass/range_inclusive.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a928c8360c14660c6eeb4bfa29d6ad54ac0029f4/src%2Ftest%2Frun-pass%2Frange_inclusive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a928c8360c14660c6eeb4bfa29d6ad54ac0029f4/src%2Ftest%2Frun-pass%2Frange_inclusive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Frange_inclusive.rs?ref=a928c8360c14660c6eeb4bfa29d6ad54ac0029f4", "patch": "@@ -103,6 +103,14 @@ pub fn main() {\n     let mut narrow = 1...0;\n     assert_eq!(narrow.next_back(), None);\n     assert_eq!(narrow, RangeInclusive::Empty { at: 0 });\n+    let mut zero = 0u8...0;\n+    assert_eq!(zero.next_back(), Some(0));\n+    assert_eq!(zero.next_back(), None);\n+    assert_eq!(zero, RangeInclusive::Empty { at: 0 });\n+    let mut high = 255u8...255;\n+    assert_eq!(high.next_back(), Some(255));\n+    assert_eq!(high.next_back(), None);\n+    assert_eq!(high, RangeInclusive::Empty { at: 255 });\n \n     // what happens if you have a nonsense range?\n     let mut nonsense = 10...5;"}]}