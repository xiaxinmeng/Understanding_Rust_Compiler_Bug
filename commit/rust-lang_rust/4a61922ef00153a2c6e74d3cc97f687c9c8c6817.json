{"sha": "4a61922ef00153a2c6e74d3cc97f687c9c8c6817", "node_id": "C_kwDOAAsO6NoAKDRhNjE5MjJlZjAwMTUzYTJjNmU3NGQzY2M5N2Y2ODdjOWM4YzY4MTc", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2023-02-22T14:47:59Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2023-03-13T13:31:55Z"}, "message": "metadata/resolve: Minor refactoring to \"tcx -> cstore\" conversions", "tree": {"sha": "2c802176721c3b34224afaf0c8b05b59c833e539", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2c802176721c3b34224afaf0c8b05b59c833e539"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4a61922ef00153a2c6e74d3cc97f687c9c8c6817", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4a61922ef00153a2c6e74d3cc97f687c9c8c6817", "html_url": "https://github.com/rust-lang/rust/commit/4a61922ef00153a2c6e74d3cc97f687c9c8c6817", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4a61922ef00153a2c6e74d3cc97f687c9c8c6817/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "98cce8191788de9103231b1892195e27500aa1f5", "url": "https://api.github.com/repos/rust-lang/rust/commits/98cce8191788de9103231b1892195e27500aa1f5", "html_url": "https://github.com/rust-lang/rust/commit/98cce8191788de9103231b1892195e27500aa1f5"}], "stats": {"total": 23, "additions": 14, "deletions": 9}, "files": [{"sha": "f870a1db82d9ca19bca3f38e635e9afcfc3db1ce", "filename": "compiler/rustc_metadata/src/creader.rs", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/4a61922ef00153a2c6e74d3cc97f687c9c8c6817/compiler%2Frustc_metadata%2Fsrc%2Fcreader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4a61922ef00153a2c6e74d3cc97f687c9c8c6817/compiler%2Frustc_metadata%2Fsrc%2Fcreader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Fcreader.rs?ref=4a61922ef00153a2c6e74d3cc97f687c9c8c6817", "patch": "@@ -8,7 +8,7 @@ use rustc_ast::expand::allocator::AllocatorKind;\n use rustc_ast::{self as ast, *};\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_data_structures::svh::Svh;\n-use rustc_data_structures::sync::MappedReadGuard;\n+use rustc_data_structures::sync::{MappedReadGuard, MappedWriteGuard, ReadGuard, WriteGuard};\n use rustc_expand::base::SyntaxExtension;\n use rustc_hir::def_id::{CrateNum, LocalDefId, StableCrateId, LOCAL_CRATE};\n use rustc_hir::definitions::Definitions;\n@@ -133,8 +133,14 @@ impl<'a> std::fmt::Debug for CrateDump<'a> {\n \n impl CStore {\n     pub fn from_tcx(tcx: TyCtxt<'_>) -> MappedReadGuard<'_, CStore> {\n-        MappedReadGuard::map(tcx.cstore_untracked(), |c| {\n-            c.as_any().downcast_ref::<CStore>().expect(\"`tcx.cstore` is not a `CStore`\")\n+        ReadGuard::map(tcx.untracked().cstore.read(), |cstore| {\n+            cstore.as_any().downcast_ref::<CStore>().expect(\"`tcx.cstore` is not a `CStore`\")\n+        })\n+    }\n+\n+    pub fn from_tcx_mut(tcx: TyCtxt<'_>) -> MappedWriteGuard<'_, CStore> {\n+        WriteGuard::map(tcx.untracked().cstore.write(), |cstore| {\n+            cstore.untracked_as_any().downcast_mut().expect(\"`tcx.cstore` is not a `CStore`\")\n         })\n     }\n \n@@ -268,9 +274,6 @@ impl<'a, 'tcx> CrateLoader<'a, 'tcx> {\n     ) -> Self {\n         CrateLoader { tcx, cstore, used_extern_options }\n     }\n-    pub fn cstore(&self) -> &CStore {\n-        &self.cstore\n-    }\n \n     fn existing_match(&self, name: Symbol, hash: Option<Svh>, kind: PathKind) -> Option<CrateNum> {\n         for (cnum, data) in self.cstore.iter_crate_data() {"}, {"sha": "cd90fd3ef84d882ffb0d9a5faa18a7402056e281", "filename": "compiler/rustc_resolve/src/lib.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4a61922ef00153a2c6e74d3cc97f687c9c8c6817/compiler%2Frustc_resolve%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4a61922ef00153a2c6e74d3cc97f687c9c8c6817/compiler%2Frustc_resolve%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flib.rs?ref=4a61922ef00153a2c6e74d3cc97f687c9c8c6817", "patch": "@@ -1431,9 +1431,11 @@ impl<'a, 'tcx> Resolver<'a, 'tcx> {\n     }\n \n     fn crate_loader<T>(&mut self, f: impl FnOnce(&mut CrateLoader<'_, '_>) -> T) -> T {\n-        let mut cstore = self.tcx.untracked().cstore.write();\n-        let cstore = cstore.untracked_as_any().downcast_mut().unwrap();\n-        f(&mut CrateLoader::new(self.tcx, &mut *cstore, &mut self.used_extern_options))\n+        f(&mut CrateLoader::new(\n+            self.tcx,\n+            &mut CStore::from_tcx_mut(self.tcx),\n+            &mut self.used_extern_options,\n+        ))\n     }\n \n     fn cstore(&self) -> MappedReadGuard<'_, CStore> {"}]}