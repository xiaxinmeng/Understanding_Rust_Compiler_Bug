{"sha": "c402b007a3272efada7924fce4eecf698b98968b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM0MDJiMDA3YTMyNzJlZmFkYTc5MjRmY2U0ZWVjZjY5OGI5ODk2OGI=", "commit": {"author": {"name": "DJMcNab", "email": "36049421+DJMcNab@users.noreply.github.com", "date": "2018-12-30T18:14:55Z"}, "committer": {"name": "DJMcNab", "email": "36049421+DJMcNab@users.noreply.github.com", "date": "2018-12-30T18:14:55Z"}, "message": "Move renames into ra_analysis", "tree": {"sha": "eea606837139333d511468d5127d2c20d806930f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eea606837139333d511468d5127d2c20d806930f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c402b007a3272efada7924fce4eecf698b98968b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c402b007a3272efada7924fce4eecf698b98968b", "html_url": "https://github.com/rust-lang/rust/commit/c402b007a3272efada7924fce4eecf698b98968b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c402b007a3272efada7924fce4eecf698b98968b/comments", "author": {"login": "DJMcNab", "id": 36049421, "node_id": "MDQ6VXNlcjM2MDQ5NDIx", "avatar_url": "https://avatars.githubusercontent.com/u/36049421?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DJMcNab", "html_url": "https://github.com/DJMcNab", "followers_url": "https://api.github.com/users/DJMcNab/followers", "following_url": "https://api.github.com/users/DJMcNab/following{/other_user}", "gists_url": "https://api.github.com/users/DJMcNab/gists{/gist_id}", "starred_url": "https://api.github.com/users/DJMcNab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DJMcNab/subscriptions", "organizations_url": "https://api.github.com/users/DJMcNab/orgs", "repos_url": "https://api.github.com/users/DJMcNab/repos", "events_url": "https://api.github.com/users/DJMcNab/events{/privacy}", "received_events_url": "https://api.github.com/users/DJMcNab/received_events", "type": "User", "site_admin": false}, "committer": {"login": "DJMcNab", "id": 36049421, "node_id": "MDQ6VXNlcjM2MDQ5NDIx", "avatar_url": "https://avatars.githubusercontent.com/u/36049421?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DJMcNab", "html_url": "https://github.com/DJMcNab", "followers_url": "https://api.github.com/users/DJMcNab/followers", "following_url": "https://api.github.com/users/DJMcNab/following{/other_user}", "gists_url": "https://api.github.com/users/DJMcNab/gists{/gist_id}", "starred_url": "https://api.github.com/users/DJMcNab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DJMcNab/subscriptions", "organizations_url": "https://api.github.com/users/DJMcNab/orgs", "repos_url": "https://api.github.com/users/DJMcNab/repos", "events_url": "https://api.github.com/users/DJMcNab/events{/privacy}", "received_events_url": "https://api.github.com/users/DJMcNab/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0f95d8523e0646aac8fb69c61f7b0d7a8efe42bb", "url": "https://api.github.com/repos/rust-lang/rust/commits/0f95d8523e0646aac8fb69c61f7b0d7a8efe42bb", "html_url": "https://github.com/rust-lang/rust/commit/0f95d8523e0646aac8fb69c61f7b0d7a8efe42bb"}], "stats": {"total": 54, "additions": 39, "deletions": 15}, "files": [{"sha": "5ed374c7916e76697b6ae9f99fa881b37ac60403", "filename": "crates/ra_analysis/src/imp.rs", "status": "modified", "additions": 24, "deletions": 2, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/c402b007a3272efada7924fce4eecf698b98968b/crates%2Fra_analysis%2Fsrc%2Fimp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c402b007a3272efada7924fce4eecf698b98968b/crates%2Fra_analysis%2Fsrc%2Fimp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fimp.rs?ref=c402b007a3272efada7924fce4eecf698b98968b", "patch": "@@ -288,7 +288,11 @@ impl AnalysisImpl {\n             Some(it) => it,\n         };\n \n-        let mut ret = vec![(position.file_id, binding.syntax().range())];\n+        let mut ret = binding\n+            .name()\n+            .into_iter()\n+            .map(|name| (position.file_id, name.syntax().range()))\n+            .collect::<Vec<_>>();\n         ret.extend(\n             descr\n                 .scopes(&*self.db)\n@@ -505,7 +509,25 @@ impl AnalysisImpl {\n         let infer = function.infer(&*self.db)?;\n         Ok(infer.type_of_node(node).map(|t| t.to_string()))\n     }\n-\n+    pub fn rename(\n+        &self,\n+        position: FilePosition,\n+        new_name: &str,\n+    ) -> Cancelable<Vec<SourceFileEdit>> {\n+        let res = self\n+            .find_all_refs(position)?\n+            .iter()\n+            .map(|(file_id, text_range)| SourceFileEdit {\n+                file_id: *file_id,\n+                edit: {\n+                    let mut builder = ra_text_edit::TextEditBuilder::new();\n+                    builder.replace(*text_range, new_name.into());\n+                    builder.finish()\n+                },\n+            })\n+            .collect::<Vec<_>>();\n+        Ok(res)\n+    }\n     fn index_resolve(&self, name_ref: ast::NameRef) -> Cancelable<Vec<(FileId, FileSymbol)>> {\n         let name = name_ref.text();\n         let mut query = Query::new(name.to_string());"}, {"sha": "e5616851000537f7be1cf8c35386e27b4615808c", "filename": "crates/ra_analysis/src/lib.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/c402b007a3272efada7924fce4eecf698b98968b/crates%2Fra_analysis%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c402b007a3272efada7924fce4eecf698b98968b/crates%2Fra_analysis%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Flib.rs?ref=c402b007a3272efada7924fce4eecf698b98968b", "patch": "@@ -367,6 +367,13 @@ impl Analysis {\n     pub fn type_of(&self, frange: FileRange) -> Cancelable<Option<String>> {\n         self.imp.type_of(frange)\n     }\n+    pub fn rename(\n+        &self,\n+        position: FilePosition,\n+        new_name: &str,\n+    ) -> Cancelable<Vec<SourceFileEdit>> {\n+        self.imp.rename(position, new_name)\n+    }\n }\n \n pub struct LibraryData {"}, {"sha": "3b7a14a5c0239864e357a140107455d097f30c48", "filename": "crates/ra_lsp_server/src/main_loop/handlers.rs", "status": "modified", "additions": 8, "deletions": 13, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/c402b007a3272efada7924fce4eecf698b98968b/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c402b007a3272efada7924fce4eecf698b98968b/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs?ref=c402b007a3272efada7924fce4eecf698b98968b", "patch": "@@ -557,24 +557,19 @@ pub fn handle_rename(world: ServerWorld, params: RenameParams) -> Result<Option<\n         .into());\n     }\n \n-    let refs = world\n+    let renames = world\n         .analysis()\n-        .find_all_refs(FilePosition { file_id, offset })?;\n-    if refs.is_empty() {\n+        .rename(FilePosition { file_id, offset }, &*params.new_name)?;\n+    if renames.is_empty() {\n         return Ok(None);\n     }\n \n     let mut changes = HashMap::new();\n-    for r in refs {\n-        if let Ok(loc) = to_location(r.0, r.1, &world, &line_index) {\n-            changes\n-                .entry(loc.uri)\n-                .or_insert_with(Vec::new)\n-                .push(TextEdit {\n-                    range: loc.range,\n-                    new_text: params.new_name.clone(),\n-                });\n-        }\n+    for edit in renames {\n+        changes\n+            .entry(file_id.try_conv_with(&world)?)\n+            .or_insert_with(Vec::new)\n+            .extend(edit.edit.conv_with(&line_index));\n     }\n \n     Ok(Some(WorkspaceEdit {"}]}