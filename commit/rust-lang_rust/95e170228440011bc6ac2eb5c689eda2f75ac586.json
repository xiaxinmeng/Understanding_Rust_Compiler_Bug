{"sha": "95e170228440011bc6ac2eb5c689eda2f75ac586", "node_id": "C_kwDOAAsO6NoAKDk1ZTE3MDIyODQ0MDAxMWJjNmFjMmViNWM2ODllZGEyZjc1YWM1ODY", "commit": {"author": {"name": "Dan Gohman", "email": "dev@sunfishcode.online", "date": "2022-03-20T22:37:31Z"}, "committer": {"name": "Dan Gohman", "email": "dev@sunfishcode.online", "date": "2022-03-20T22:37:31Z"}, "message": "Preserve the Windows `GetLastError` error in `HandleOrInvalid`.\n\nIn the `TryFrom<HandleOrInvalid> for OwnedHandle` and\n`TryFrom<HandleOrNull> for OwnedHandle` implemenations, `forget` the\nowned handle on the error path, to avoid calling `CloseHandle` on an\ninvalid handle. It's harmless, except that it may overwrite the\nthread's `GetLastError` error.", "tree": {"sha": "df7e301abf4f6806f434b3117906cd7bcff2ed9d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/df7e301abf4f6806f434b3117906cd7bcff2ed9d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/95e170228440011bc6ac2eb5c689eda2f75ac586", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/95e170228440011bc6ac2eb5c689eda2f75ac586", "html_url": "https://github.com/rust-lang/rust/commit/95e170228440011bc6ac2eb5c689eda2f75ac586", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/95e170228440011bc6ac2eb5c689eda2f75ac586/comments", "author": {"login": "sunfishcode", "id": 4503403, "node_id": "MDQ6VXNlcjQ1MDM0MDM=", "avatar_url": "https://avatars.githubusercontent.com/u/4503403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunfishcode", "html_url": "https://github.com/sunfishcode", "followers_url": "https://api.github.com/users/sunfishcode/followers", "following_url": "https://api.github.com/users/sunfishcode/following{/other_user}", "gists_url": "https://api.github.com/users/sunfishcode/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunfishcode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunfishcode/subscriptions", "organizations_url": "https://api.github.com/users/sunfishcode/orgs", "repos_url": "https://api.github.com/users/sunfishcode/repos", "events_url": "https://api.github.com/users/sunfishcode/events{/privacy}", "received_events_url": "https://api.github.com/users/sunfishcode/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sunfishcode", "id": 4503403, "node_id": "MDQ6VXNlcjQ1MDM0MDM=", "avatar_url": "https://avatars.githubusercontent.com/u/4503403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunfishcode", "html_url": "https://github.com/sunfishcode", "followers_url": "https://api.github.com/users/sunfishcode/followers", "following_url": "https://api.github.com/users/sunfishcode/following{/other_user}", "gists_url": "https://api.github.com/users/sunfishcode/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunfishcode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunfishcode/subscriptions", "organizations_url": "https://api.github.com/users/sunfishcode/orgs", "repos_url": "https://api.github.com/users/sunfishcode/repos", "events_url": "https://api.github.com/users/sunfishcode/events{/privacy}", "received_events_url": "https://api.github.com/users/sunfishcode/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c84f39e6c08397d4ab9b51b472002a8bfc3b5b59", "url": "https://api.github.com/repos/rust-lang/rust/commits/c84f39e6c08397d4ab9b51b472002a8bfc3b5b59", "html_url": "https://github.com/rust-lang/rust/commit/c84f39e6c08397d4ab9b51b472002a8bfc3b5b59"}], "stats": {"total": 20, "additions": 18, "deletions": 2}, "files": [{"sha": "120af9f99dd9b063f0e4e7583ca3538224320b57", "filename": "library/std/src/os/windows/io/handle.rs", "status": "modified", "additions": 18, "deletions": 2, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/95e170228440011bc6ac2eb5c689eda2f75ac586/library%2Fstd%2Fsrc%2Fos%2Fwindows%2Fio%2Fhandle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95e170228440011bc6ac2eb5c689eda2f75ac586/library%2Fstd%2Fsrc%2Fos%2Fwindows%2Fio%2Fhandle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Fwindows%2Fio%2Fhandle.rs?ref=95e170228440011bc6ac2eb5c689eda2f75ac586", "patch": "@@ -147,7 +147,15 @@ impl TryFrom<HandleOrNull> for OwnedHandle {\n     #[inline]\n     fn try_from(handle_or_null: HandleOrNull) -> Result<Self, ()> {\n         let owned_handle = handle_or_null.0;\n-        if owned_handle.handle.is_null() { Err(()) } else { Ok(owned_handle) }\n+        if owned_handle.handle.is_null() {\n+            // Don't call `CloseHandle`; it'd be harmless, except that it could\n+            // overwrite the `GetLastError` error.\n+            forget(owned_handle);\n+\n+            Err(())\n+        } else {\n+            Ok(owned_handle)\n+        }\n     }\n }\n \n@@ -197,7 +205,15 @@ impl TryFrom<HandleOrInvalid> for OwnedHandle {\n     #[inline]\n     fn try_from(handle_or_invalid: HandleOrInvalid) -> Result<Self, ()> {\n         let owned_handle = handle_or_invalid.0;\n-        if owned_handle.handle == c::INVALID_HANDLE_VALUE { Err(()) } else { Ok(owned_handle) }\n+        if owned_handle.handle == c::INVALID_HANDLE_VALUE {\n+            // Don't call `CloseHandle`; it'd be harmless, except that it could\n+            // overwrite the `GetLastError` error.\n+            forget(owned_handle);\n+\n+            Err(())\n+        } else {\n+            Ok(owned_handle)\n+        }\n     }\n }\n "}]}