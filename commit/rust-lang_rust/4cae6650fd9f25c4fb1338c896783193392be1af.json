{"sha": "4cae6650fd9f25c4fb1338c896783193392be1af", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRjYWU2NjUwZmQ5ZjI1YzRmYjEzMzhjODk2NzgzMTkzMzkyYmUxYWY=", "commit": {"author": {"name": "Andre Bogus", "email": "bogusandre@gmail.com", "date": "2018-08-13T21:17:45Z"}, "committer": {"name": "Andre Bogus", "email": "bogusandre@gmail.com", "date": "2018-08-15T11:54:47Z"}, "message": "Two small improvements\n\nIn `librustc_apfloat/ieee.rs`, use the iterator.[r]find methods to\nsimplify the code. In `libserialize/json.rs`, make use of the fact\nthat `Vec.last` on an empty `Vec` returns `None` to simplify the\ncode to a single match.", "tree": {"sha": "c933b4557c6144e2366d1171c6b1aab67267d13f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c933b4557c6144e2366d1171c6b1aab67267d13f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4cae6650fd9f25c4fb1338c896783193392be1af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4cae6650fd9f25c4fb1338c896783193392be1af", "html_url": "https://github.com/rust-lang/rust/commit/4cae6650fd9f25c4fb1338c896783193392be1af", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4cae6650fd9f25c4fb1338c896783193392be1af/comments", "author": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "committer": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "81cfaad030435aae447d73c66123b3df856c09cb", "url": "https://api.github.com/repos/rust-lang/rust/commits/81cfaad030435aae447d73c66123b3df856c09cb", "html_url": "https://github.com/rust-lang/rust/commit/81cfaad030435aae447d73c66123b3df856c09cb"}], "stats": {"total": 25, "additions": 7, "deletions": 18}, "files": [{"sha": "87d59d2e763cbe89743452e59379e8888f639f3a", "filename": "src/librustc_apfloat/ieee.rs", "status": "modified", "additions": 4, "deletions": 14, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/4cae6650fd9f25c4fb1338c896783193392be1af/src%2Flibrustc_apfloat%2Fieee.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4cae6650fd9f25c4fb1338c896783193392be1af/src%2Flibrustc_apfloat%2Fieee.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_apfloat%2Fieee.rs?ref=4cae6650fd9f25c4fb1338c896783193392be1af", "patch": "@@ -2306,24 +2306,14 @@ mod sig {\n \n     /// One, not zero, based LSB. That is, returns 0 for a zeroed significand.\n     pub(super) fn olsb(limbs: &[Limb]) -> usize {\n-        for (i, &limb) in limbs.iter().enumerate() {\n-            if limb != 0 {\n-                return i * LIMB_BITS + limb.trailing_zeros() as usize + 1;\n-            }\n-        }\n-\n-        0\n+        limbs.iter().enumerate().find(|(_, &limb)| limb != 0).map_or(0,\n+            |(i, limb)| i * LIMB_BITS + limb.trailing_zeros() as usize + 1)\n     }\n \n     /// One, not zero, based MSB. That is, returns 0 for a zeroed significand.\n     pub(super) fn omsb(limbs: &[Limb]) -> usize {\n-        for (i, &limb) in limbs.iter().enumerate().rev() {\n-            if limb != 0 {\n-                return (i + 1) * LIMB_BITS - limb.leading_zeros() as usize;\n-            }\n-        }\n-\n-        0\n+        limbs.iter().enumerate().rfind(|(_, &limb)| limb != 0).map_or(0,\n+            |(i, limb)| (i + 1) * LIMB_BITS - limb.leading_zeros() as usize)\n     }\n \n     /// Comparison (unsigned) of two significands."}, {"sha": "45e678a49297fd18628b3fcbb8a04a51cbab5f2f", "filename": "src/libserialize/json.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/4cae6650fd9f25c4fb1338c896783193392be1af/src%2Flibserialize%2Fjson.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4cae6650fd9f25c4fb1338c896783193392be1af/src%2Flibserialize%2Fjson.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibserialize%2Fjson.rs?ref=4cae6650fd9f25c4fb1338c896783193392be1af", "patch": "@@ -1387,10 +1387,9 @@ impl Stack {\n \n     // Used by Parser to test whether the top-most element is an index.\n     fn last_is_index(&self) -> bool {\n-        if let Some(InternalIndex(_)) = self.stack.last() {\n-            true\n-        } else {\n-            false\n+        match self.stack.last() {\n+            Some(InternalIndex(_)) => true,\n+            _ => false,\n         }\n     }\n "}]}