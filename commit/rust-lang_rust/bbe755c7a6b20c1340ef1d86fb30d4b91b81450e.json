{"sha": "bbe755c7a6b20c1340ef1d86fb30d4b91b81450e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJiZTc1NWM3YTZiMjBjMTM0MGVmMWQ4NmZiMzBkNGI5MWI4MTQ1MGU=", "commit": {"author": {"name": "Michael Hewson", "email": "michael@michaelhewson.ca", "date": "2017-11-08T13:28:36Z"}, "committer": {"name": "Michael Hewson", "email": "michael@michaelhewson.ca", "date": "2017-11-08T13:28:36Z"}, "message": "Switch from using At::eq to InferCtxt::can_eq and demand_eqtype_with_origin\n\nI doubt this changes anything, I was just trying to fix an issue with\nerror messages and ended up doing this along with other things.\nCommitting it separately so I can undo it easily.", "tree": {"sha": "90b13b06ec9bfc2875b9c076f3745dbbc2d3af24", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/90b13b06ec9bfc2875b9c076f3745dbbc2d3af24"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bbe755c7a6b20c1340ef1d86fb30d4b91b81450e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bbe755c7a6b20c1340ef1d86fb30d4b91b81450e", "html_url": "https://github.com/rust-lang/rust/commit/bbe755c7a6b20c1340ef1d86fb30d4b91b81450e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bbe755c7a6b20c1340ef1d86fb30d4b91b81450e/comments", "author": {"login": "mikeyhew", "id": 6751033, "node_id": "MDQ6VXNlcjY3NTEwMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/6751033?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikeyhew", "html_url": "https://github.com/mikeyhew", "followers_url": "https://api.github.com/users/mikeyhew/followers", "following_url": "https://api.github.com/users/mikeyhew/following{/other_user}", "gists_url": "https://api.github.com/users/mikeyhew/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikeyhew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikeyhew/subscriptions", "organizations_url": "https://api.github.com/users/mikeyhew/orgs", "repos_url": "https://api.github.com/users/mikeyhew/repos", "events_url": "https://api.github.com/users/mikeyhew/events{/privacy}", "received_events_url": "https://api.github.com/users/mikeyhew/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mikeyhew", "id": 6751033, "node_id": "MDQ6VXNlcjY3NTEwMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/6751033?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikeyhew", "html_url": "https://github.com/mikeyhew", "followers_url": "https://api.github.com/users/mikeyhew/followers", "following_url": "https://api.github.com/users/mikeyhew/following{/other_user}", "gists_url": "https://api.github.com/users/mikeyhew/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikeyhew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikeyhew/subscriptions", "organizations_url": "https://api.github.com/users/mikeyhew/orgs", "repos_url": "https://api.github.com/users/mikeyhew/repos", "events_url": "https://api.github.com/users/mikeyhew/events{/privacy}", "received_events_url": "https://api.github.com/users/mikeyhew/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "236974619f79661e4f58669c385279f46c6830cf", "url": "https://api.github.com/repos/rust-lang/rust/commits/236974619f79661e4f58669c385279f46c6830cf", "html_url": "https://github.com/rust-lang/rust/commit/236974619f79661e4f58669c385279f46c6830cf"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "9366c33bffb9c41adb2422c42c562aa71620d410", "filename": "src/librustc_typeck/check/wfcheck.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/bbe755c7a6b20c1340ef1d86fb30d4b91b81450e/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbe755c7a6b20c1340ef1d86fb30d4b91b81450e/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs?ref=bbe755c7a6b20c1340ef1d86fb30d4b91b81450e", "patch": "@@ -12,7 +12,6 @@ use check::{Inherited, FnCtxt};\n use constrained_type_params::{identify_constrained_type_params, Parameter};\n \n use hir::def_id::DefId;\n-use rustc::infer::InferOk;\n use rustc::traits::{self, ObligationCauseCode};\n use rustc::ty::{self, Ty, TyCtxt};\n use rustc::ty::util::ExplicitSelf;\n@@ -478,7 +477,6 @@ impl<'a, 'gcx> CheckTypeWellFormedVisitor<'a, 'gcx> {\n         let self_arg_ty = sig.inputs()[0];\n \n         let cause = fcx.cause(span, ObligationCauseCode::MethodReceiver);\n-        let eq = |expected, actual| fcx.at(&cause, fcx.param_env).eq(expected, actual);\n         let self_arg_ty = fcx.normalize_associated_types_in(span, &self_arg_ty);\n         let self_arg_ty = fcx.liberate_late_bound_regions(\n             method.def_id,\n@@ -491,9 +489,11 @@ impl<'a, 'gcx> CheckTypeWellFormedVisitor<'a, 'gcx> {\n             if let Some((potential_self_ty, _)) = autoderef.next() {\n                 debug!(\"check_method_receiver: potential self type `{:?}` to match `{:?}`\", potential_self_ty, self_ty);\n \n-                if let Ok(InferOk { obligations, value: () }) = eq(self_ty, potential_self_ty) {\n-                    fcx.register_predicates(obligations);\n+                if fcx.infcx.can_eq(fcx.param_env, self_ty, potential_self_ty).is_ok() {\n                     autoderef.finalize();\n+                    if let Some(mut err) = fcx.demand_eqtype_with_origin(&cause, self_ty, potential_self_ty) {\n+                        err.emit();\n+                    }\n                     break\n                 }\n             } else {"}]}