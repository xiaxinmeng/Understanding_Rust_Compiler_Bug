{"sha": "f03bac6c3acea5492160558dd731d77341e1cf22", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYwM2JhYzZjM2FjZWE1NDkyMTYwNTU4ZGQ3MzFkNzczNDFlMWNmMjI=", "commit": {"author": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-10-02T00:47:23Z"}, "committer": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-10-02T00:47:53Z"}, "message": "Remove a useless method", "tree": {"sha": "ff9eef567ecc9d4274eec9a2fc4bed9958e069f1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ff9eef567ecc9d4274eec9a2fc4bed9958e069f1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f03bac6c3acea5492160558dd731d77341e1cf22", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIcBAABCAAGBQJX8Fk6AAoJEF5CfHlMukXo238P/2x6MDk51ugcgo9OecdX8rBu\ngOrkFOV2wffwr05aS1uSJUe3AXMngHQN18zBhvjk1OZQXnzaaqeR257kG30DId1r\nWWPUckZ5WBSSH12fgxkw3/KVEDYG5rPtKQAyCjvgVZtFHylDA7uoUw0UodQgdogf\nCDbW3mN9k+9iK4NLysAk5Www5fdES5/MU6BHE+YHMagj6eEcCOn+JNvecOPsxEK3\n1Qj+MpUO9vOZaXNMR5EUbqv0Pt42sGEQ1fp29W02qs191ex2jrlxSMXbc4Ub+z6P\ntiMelSbfx0w1SaMFRx3uHHO5zf3F+67B8GyRLy/qPcKJMZ+gcdL+iPDzxD7RMkWN\nu8Bc0jjF00o8VeQgQ1NOITzCKO8mukux1NUonZkGAb10iVJCJc3gNPV6yxie2xfe\n6Yt2izSh8YJ9kxm8v0+hAimyJPnuPfZ+14SwyOLaPfv6797C976bGgHMfrLCzanx\nk9b0VkpBixvFfWqrvLuawQO+JuPM1O+xjdBwbGvYNwZwYZDI4kHtuigRqsWXxBk0\nTiqjnOh55ZmNPW9ig7EQKpK1zfqiK6LdUDJrwT6amx4xpQoomFDEWA0SnwWJRhVy\nNdnb9+D+fO/Z+C3ZzBvv6iamV55IS6IK0aUfIMVHVrL6VzDqRcbIviQy6rg8MiIg\nOK4hfq0AhdirpnMxZ8Lp\n=N693\n-----END PGP SIGNATURE-----", "payload": "tree ff9eef567ecc9d4274eec9a2fc4bed9958e069f1\nparent e50cfa7e779e4df57419c4a64d977e08e105deac\nauthor mcarton <cartonmartin+git@gmail.com> 1475369243 +0200\ncommitter mcarton <cartonmartin+git@gmail.com> 1475369273 +0200\n\nRemove a useless method\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f03bac6c3acea5492160558dd731d77341e1cf22", "html_url": "https://github.com/rust-lang/rust/commit/f03bac6c3acea5492160558dd731d77341e1cf22", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f03bac6c3acea5492160558dd731d77341e1cf22/comments", "author": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e50cfa7e779e4df57419c4a64d977e08e105deac", "url": "https://api.github.com/repos/rust-lang/rust/commits/e50cfa7e779e4df57419c4a64d977e08e105deac", "html_url": "https://github.com/rust-lang/rust/commit/e50cfa7e779e4df57419c4a64d977e08e105deac"}], "stats": {"total": 19, "additions": 4, "deletions": 15}, "files": [{"sha": "19149671e5b07b3dfdd571355024ec4b4e51a61e", "filename": "clippy_lints/src/consts.rs", "status": "modified", "additions": 4, "deletions": 15, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/f03bac6c3acea5492160558dd731d77341e1cf22/clippy_lints%2Fsrc%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f03bac6c3acea5492160558dd731d77341e1cf22/clippy_lints%2Fsrc%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fconsts.rs?ref=f03bac6c3acea5492160558dd731d77341e1cf22", "patch": "@@ -54,27 +54,16 @@ pub enum Constant {\n }\n \n impl Constant {\n-    /// convert to u64 if possible\n+    /// Convert to `u64` if possible.\n     ///\n     /// # panics\n     ///\n-    /// if the constant could not be converted to u64 losslessly\n+    /// If the constant could not be converted to `u64` losslessly.\n     fn as_u64(&self) -> u64 {\n         if let Constant::Int(val) = *self {\n-            val.to_u64().expect(\"negative constant can't be casted to u64\")\n+            val.to_u64().expect(\"negative constant can't be casted to `u64`\")\n         } else {\n-            panic!(\"Could not convert a {:?} to u64\", self);\n-        }\n-    }\n-\n-    /// convert this constant to a f64, if possible\n-    #[allow(cast_precision_loss, cast_possible_wrap)]\n-    pub fn as_float(&self) -> Option<f64> {\n-        match *self {\n-            Constant::Float(ref s, _) => s.parse().ok(),\n-            Constant::Int(i) if i.is_negative() => Some(i.to_u64_unchecked() as i64 as f64),\n-            Constant::Int(i) => Some(i.to_u64_unchecked() as f64),\n-            _ => None,\n+            panic!(\"Could not convert a `{:?}` to `u64`\", self);\n         }\n     }\n }"}]}