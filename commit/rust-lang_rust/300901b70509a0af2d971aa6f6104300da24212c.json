{"sha": "300901b70509a0af2d971aa6f6104300da24212c", "node_id": "C_kwDOAAsO6NoAKDMwMDkwMWI3MDUwOWEwYWYyZDk3MWFhNmY2MTA0MzAwZGEyNDIxMmM", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2023-03-15T15:44:23Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2023-04-04T09:01:44Z"}, "message": "Use new iteration helpers instead of manually rolling them", "tree": {"sha": "1b5587d11d2fb350eb90a539154350eb02fc8bf7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1b5587d11d2fb350eb90a539154350eb02fc8bf7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/300901b70509a0af2d971aa6f6104300da24212c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/300901b70509a0af2d971aa6f6104300da24212c", "html_url": "https://github.com/rust-lang/rust/commit/300901b70509a0af2d971aa6f6104300da24212c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/300901b70509a0af2d971aa6f6104300da24212c/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a1d20cf7a20eb69b7a48c9897dfd8e9a3e4b6360", "url": "https://api.github.com/repos/rust-lang/rust/commits/a1d20cf7a20eb69b7a48c9897dfd8e9a3e4b6360", "html_url": "https://github.com/rust-lang/rust/commit/a1d20cf7a20eb69b7a48c9897dfd8e9a3e4b6360"}], "stats": {"total": 5, "additions": 1, "deletions": 4}, "files": [{"sha": "002ae1e3165ac3d3a5fa227d86dca25be35e6d36", "filename": "compiler/rustc_session/src/parse.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/300901b70509a0af2d971aa6f6104300da24212c/compiler%2Frustc_session%2Fsrc%2Fparse.rs", "raw_url": "https://github.com/rust-lang/rust/raw/300901b70509a0af2d971aa6f6104300da24212c/compiler%2Frustc_session%2Fsrc%2Fparse.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Fparse.rs?ref=300901b70509a0af2d971aa6f6104300da24212c", "patch": "@@ -330,10 +330,7 @@ impl ParseSess {\n     pub fn proc_macro_quoted_spans(&self) -> impl Iterator<Item = (usize, Span)> + '_ {\n         // This is equivalent to `.iter().copied().enumerate()`, but that isn't possible for\n         // AppendOnlyVec, so we resort to this scheme.\n-        (0..)\n-            .map(|i| (i, self.proc_macro_quoted_spans.get(i)))\n-            .take_while(|(_, o)| o.is_some())\n-            .filter_map(|(i, o)| Some((i, o?)))\n+        self.proc_macro_quoted_spans.iter_enumerated()\n     }\n \n     #[track_caller]"}]}