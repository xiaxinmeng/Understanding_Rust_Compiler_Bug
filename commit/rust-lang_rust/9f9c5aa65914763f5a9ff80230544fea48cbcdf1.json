{"sha": "9f9c5aa65914763f5a9ff80230544fea48cbcdf1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlmOWM1YWE2NTkxNDc2M2Y1YTlmZjgwMjMwNTQ0ZmVhNDhjYmNkZjE=", "commit": {"author": {"name": "Evgenii P", "email": "eupn@protonmail.com", "date": "2019-08-04T01:45:14Z"}, "committer": {"name": "Evgenii P", "email": "eupn@protonmail.com", "date": "2019-08-04T01:45:14Z"}, "message": "rustfmt", "tree": {"sha": "9b4cf51a153190292719d86856516bc6ca471c5c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9b4cf51a153190292719d86856516bc6ca471c5c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9f9c5aa65914763f5a9ff80230544fea48cbcdf1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9f9c5aa65914763f5a9ff80230544fea48cbcdf1", "html_url": "https://github.com/rust-lang/rust/commit/9f9c5aa65914763f5a9ff80230544fea48cbcdf1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9f9c5aa65914763f5a9ff80230544fea48cbcdf1/comments", "author": {"login": "eupn", "id": 36292692, "node_id": "MDQ6VXNlcjM2MjkyNjky", "avatar_url": "https://avatars.githubusercontent.com/u/36292692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eupn", "html_url": "https://github.com/eupn", "followers_url": "https://api.github.com/users/eupn/followers", "following_url": "https://api.github.com/users/eupn/following{/other_user}", "gists_url": "https://api.github.com/users/eupn/gists{/gist_id}", "starred_url": "https://api.github.com/users/eupn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eupn/subscriptions", "organizations_url": "https://api.github.com/users/eupn/orgs", "repos_url": "https://api.github.com/users/eupn/repos", "events_url": "https://api.github.com/users/eupn/events{/privacy}", "received_events_url": "https://api.github.com/users/eupn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eupn", "id": 36292692, "node_id": "MDQ6VXNlcjM2MjkyNjky", "avatar_url": "https://avatars.githubusercontent.com/u/36292692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eupn", "html_url": "https://github.com/eupn", "followers_url": "https://api.github.com/users/eupn/followers", "following_url": "https://api.github.com/users/eupn/following{/other_user}", "gists_url": "https://api.github.com/users/eupn/gists{/gist_id}", "starred_url": "https://api.github.com/users/eupn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eupn/subscriptions", "organizations_url": "https://api.github.com/users/eupn/orgs", "repos_url": "https://api.github.com/users/eupn/repos", "events_url": "https://api.github.com/users/eupn/events{/privacy}", "received_events_url": "https://api.github.com/users/eupn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8597af8ed4ebed2e86e379a5a440b37373ace76d", "url": "https://api.github.com/repos/rust-lang/rust/commits/8597af8ed4ebed2e86e379a5a440b37373ace76d", "html_url": "https://github.com/rust-lang/rust/commit/8597af8ed4ebed2e86e379a5a440b37373ace76d"}], "stats": {"total": 4, "additions": 1, "deletions": 3}, "files": [{"sha": "e86716d74c8e40789d73add65eea311d74b5cabc", "filename": "crates/ra_hir/src/source_binder.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9f9c5aa65914763f5a9ff80230544fea48cbcdf1/crates%2Fra_hir%2Fsrc%2Fsource_binder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f9c5aa65914763f5a9ff80230544fea48cbcdf1/crates%2Fra_hir%2Fsrc%2Fsource_binder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fsource_binder.rs?ref=9f9c5aa65914763f5a9ff80230544fea48cbcdf1", "patch": "@@ -427,9 +427,7 @@ impl SourceAnalyzer {\n \n         let std_future_trait =\n             match self.resolver.resolve_path_segments(db, &std_future_path).into_fully_resolved() {\n-                PerNs { types: Some(Resolution::Def(ModuleDef::Trait(trait_))), .. } => {\n-                    trait_\n-                }\n+                PerNs { types: Some(Resolution::Def(ModuleDef::Trait(trait_))), .. } => trait_,\n                 _ => return false,\n             };\n "}]}