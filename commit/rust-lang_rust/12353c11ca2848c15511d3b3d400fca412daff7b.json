{"sha": "12353c11ca2848c15511d3b3d400fca412daff7b", "node_id": "C_kwDOAAsO6NoAKDEyMzUzYzExY2EyODQ4YzE1NTExZDNiM2Q0MDBmY2E0MTJkYWZmN2I", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-08-29T02:49:04Z"}, "committer": {"name": "Eric Holk", "email": "ericholk@microsoft.com", "date": "2022-09-12T23:55:58Z"}, "message": "Use principal of cast target as dyn-star trait ref in codegen", "tree": {"sha": "61817581b218bacfbab19e370809804d29d55c11", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/61817581b218bacfbab19e370809804d29d55c11"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/12353c11ca2848c15511d3b3d400fca412daff7b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/12353c11ca2848c15511d3b3d400fca412daff7b", "html_url": "https://github.com/rust-lang/rust/commit/12353c11ca2848c15511d3b3d400fca412daff7b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/12353c11ca2848c15511d3b3d400fca412daff7b/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ef7062dad6300a42b8a13e86ff5743a1d926a5d9", "url": "https://api.github.com/repos/rust-lang/rust/commits/ef7062dad6300a42b8a13e86ff5743a1d926a5d9", "html_url": "https://github.com/rust-lang/rust/commit/ef7062dad6300a42b8a13e86ff5743a1d926a5d9"}], "stats": {"total": 13, "additions": 6, "deletions": 7}, "files": [{"sha": "d41817d7b65c002e6f227215a93dd4497cd61a43", "filename": "compiler/rustc_codegen_ssa/src/mir/rvalue.rs", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/12353c11ca2848c15511d3b3d400fca412daff7b/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Frvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/12353c11ca2848c15511d3b3d400fca412daff7b/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Frvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Frvalue.rs?ref=12353c11ca2848c15511d3b3d400fca412daff7b", "patch": "@@ -12,7 +12,6 @@ use rustc_middle::mir;\n use rustc_middle::mir::Operand;\n use rustc_middle::ty::cast::{CastTy, IntTy};\n use rustc_middle::ty::layout::{HasTyCtxt, LayoutOf};\n-use rustc_middle::ty::TraitObjectRepresentation;\n use rustc_middle::ty::{self, adjustment::PointerCast, Instance, Ty, TyCtxt};\n use rustc_span::source_map::{Span, DUMMY_SP};\n \n@@ -279,12 +278,12 @@ impl<'a, 'tcx, Bx: BuilderMethods<'a, 'tcx>> FunctionCx<'a, 'tcx, Bx> {\n                             OperandValue::Immediate(v) => v,\n                             OperandValue::Pair(_, _) => todo!(),\n                         };\n-                        // FIXME: find the real vtable!\n-                        let trait_ref = if let ty::Dynamic(data, _, TraitObjectRepresentation::Sized) = cast.ty.kind() {\n-                            data.principal()\n-                        } else {\n-                            bug!(\"Only valid to do a DynStar cast into a DynStar type\")\n-                        };\n+                        let trait_ref =\n+                            if let ty::Dynamic(data, _, ty::TraitObjectRepresentation::Sized) = cast.ty.kind() {\n+                                data.principal()\n+                            } else {\n+                                bug!(\"Only valid to do a DynStar cast into a DynStar type\")\n+                            };\n                         let vtable = get_vtable(bx.cx(), source.ty(self.mir, bx.tcx()), trait_ref);\n                         OperandValue::Pair(data, vtable)\n                     }"}]}