{"sha": "74d53ab9129e33708fcaf11d560c7d4aa282ffd2", "node_id": "C_kwDOAAsO6NoAKDc0ZDUzYWI5MTI5ZTMzNzA4ZmNhZjExZDU2MGM3ZDRhYTI4MmZmZDI", "commit": {"author": {"name": "Jannis Christopher K\u00f6hl", "email": "mail@koehl.dev", "date": "2022-11-12T14:24:23Z"}, "committer": {"name": "Jannis Christopher K\u00f6hl", "email": "mail@koehl.dev", "date": "2022-11-12T14:24:23Z"}, "message": "Require -Zmir-opt-level >= 3 for now", "tree": {"sha": "bed642e0402c21074ae84dc56211cfe142bc34de", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bed642e0402c21074ae84dc56211cfe142bc34de"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/74d53ab9129e33708fcaf11d560c7d4aa282ffd2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/74d53ab9129e33708fcaf11d560c7d4aa282ffd2", "html_url": "https://github.com/rust-lang/rust/commit/74d53ab9129e33708fcaf11d560c7d4aa282ffd2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/74d53ab9129e33708fcaf11d560c7d4aa282ffd2/comments", "author": {"login": "jachris", "id": 30163784, "node_id": "MDQ6VXNlcjMwMTYzNzg0", "avatar_url": "https://avatars.githubusercontent.com/u/30163784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jachris", "html_url": "https://github.com/jachris", "followers_url": "https://api.github.com/users/jachris/followers", "following_url": "https://api.github.com/users/jachris/following{/other_user}", "gists_url": "https://api.github.com/users/jachris/gists{/gist_id}", "starred_url": "https://api.github.com/users/jachris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jachris/subscriptions", "organizations_url": "https://api.github.com/users/jachris/orgs", "repos_url": "https://api.github.com/users/jachris/repos", "events_url": "https://api.github.com/users/jachris/events{/privacy}", "received_events_url": "https://api.github.com/users/jachris/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jachris", "id": 30163784, "node_id": "MDQ6VXNlcjMwMTYzNzg0", "avatar_url": "https://avatars.githubusercontent.com/u/30163784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jachris", "html_url": "https://github.com/jachris", "followers_url": "https://api.github.com/users/jachris/followers", "following_url": "https://api.github.com/users/jachris/following{/other_user}", "gists_url": "https://api.github.com/users/jachris/gists{/gist_id}", "starred_url": "https://api.github.com/users/jachris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jachris/subscriptions", "organizations_url": "https://api.github.com/users/jachris/orgs", "repos_url": "https://api.github.com/users/jachris/repos", "events_url": "https://api.github.com/users/jachris/events{/privacy}", "received_events_url": "https://api.github.com/users/jachris/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2e034dc68cb4d593f564f5ff8c444be5d12fc95b", "url": "https://api.github.com/repos/rust-lang/rust/commits/2e034dc68cb4d593f564f5ff8c444be5d12fc95b", "html_url": "https://github.com/rust-lang/rust/commit/2e034dc68cb4d593f564f5ff8c444be5d12fc95b"}], "stats": {"total": 30, "additions": 8, "deletions": 22}, "files": [{"sha": "085977dac8369536675a0db56e265e656153fa24", "filename": "compiler/rustc_mir_transform/src/dataflow_const_prop.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/74d53ab9129e33708fcaf11d560c7d4aa282ffd2/compiler%2Frustc_mir_transform%2Fsrc%2Fdataflow_const_prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74d53ab9129e33708fcaf11d560c7d4aa282ffd2/compiler%2Frustc_mir_transform%2Fsrc%2Fdataflow_const_prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fdataflow_const_prop.rs?ref=74d53ab9129e33708fcaf11d560c7d4aa282ffd2", "patch": "@@ -21,7 +21,7 @@ pub struct DataflowConstProp;\n \n impl<'tcx> MirPass<'tcx> for DataflowConstProp {\n     fn is_enabled(&self, sess: &rustc_session::Session) -> bool {\n-        sess.mir_opt_level() >= 1\n+        sess.mir_opt_level() >= 3\n     }\n \n     #[instrument(skip_all level = \"debug\")]"}, {"sha": "58f97347fa2ff86d4886fb4a3dacc5bb09874690", "filename": "src/test/ui/const-ptr/forbidden_slices.64bit.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/74d53ab9129e33708fcaf11d560c7d4aa282ffd2/src%2Ftest%2Fui%2Fconst-ptr%2Fforbidden_slices.64bit.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/74d53ab9129e33708fcaf11d560c7d4aa282ffd2/src%2Ftest%2Fui%2Fconst-ptr%2Fforbidden_slices.64bit.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-ptr%2Fforbidden_slices.64bit.stderr?ref=74d53ab9129e33708fcaf11d560c7d4aa282ffd2", "patch": "@@ -164,7 +164,7 @@ LL | pub static R4: &[u8] = unsafe {\n    |\n    = note: The rules on what exactly is undefined behavior aren't clear, so this check might be overzealous. Please open an issue on the rustc repository if you believe it should not be considered undefined behavior.\n    = note: the raw bytes of the constant (size: 16, align: 8) {\n-               \u257e\u2500\u2500\u2500\u2500\u2500\u2500ALLOC_ID\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u257c 01 00 00 00 00 00 00 00 \u2502 \u257e\u2500\u2500\u2500\u2500\u2500\u2500\u257c........\n+               \u257e\u2500\u2500\u2500\u2500\u2500\u2500\u2500ALLOC_ID\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u257c 01 00 00 00 00 00 00 00 \u2502 \u257e\u2500\u2500\u2500\u2500\u2500\u2500\u257c........\n            }\n \n error[E0080]: it is undefined behavior to use this value"}, {"sha": "9c6108292b5278ac950b29f64f3bc4b29ad74374", "filename": "src/test/ui/consts/const-eval/issue-50814.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/74d53ab9129e33708fcaf11d560c7d4aa282ffd2/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-50814.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74d53ab9129e33708fcaf11d560c7d4aa282ffd2/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-50814.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-50814.rs?ref=74d53ab9129e33708fcaf11d560c7d4aa282ffd2", "patch": "@@ -14,13 +14,11 @@ struct Sum<A, B>(A, B);\n impl<A: Unsigned, B: Unsigned> Unsigned for Sum<A, B> {\n     const MAX: u8 = A::MAX + B::MAX;\n     //~^ ERROR evaluation of `<Sum<U8, U8> as Unsigned>::MAX` failed\n-    //~| ERROR evaluation of `<Sum<U8, U8> as Unsigned>::MAX` failed\n }\n \n fn foo<T>(_: T) -> &'static u8 {\n     &Sum::<U8, U8>::MAX\n     //~^ ERROR evaluation of `foo::<i32>` failed [E0080]\n-    //~| ERROR evaluation of `foo::<T>` failed [E0080]\n }\n \n fn main() {"}, {"sha": "38e9dc36ee98f0e58700c97c4e7ca32acb12898f", "filename": "src/test/ui/consts/const-eval/issue-50814.stderr", "status": "modified", "additions": 3, "deletions": 15, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/74d53ab9129e33708fcaf11d560c7d4aa282ffd2/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-50814.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/74d53ab9129e33708fcaf11d560c7d4aa282ffd2/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-50814.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-50814.stderr?ref=74d53ab9129e33708fcaf11d560c7d4aa282ffd2", "patch": "@@ -4,30 +4,18 @@ error[E0080]: evaluation of `<Sum<U8, U8> as Unsigned>::MAX` failed\n LL |     const MAX: u8 = A::MAX + B::MAX;\n    |                     ^^^^^^^^^^^^^^^ attempt to compute `u8::MAX + u8::MAX`, which would overflow\n \n-error[E0080]: evaluation of `foo::<T>` failed\n-  --> $DIR/issue-50814.rs:21:6\n-   |\n-LL |     &Sum::<U8, U8>::MAX\n-   |      ^^^^^^^^^^^^^^^^^^ referenced constant has errors\n-\n-error[E0080]: evaluation of `<Sum<U8, U8> as Unsigned>::MAX` failed\n-  --> $DIR/issue-50814.rs:15:21\n-   |\n-LL |     const MAX: u8 = A::MAX + B::MAX;\n-   |                     ^^^^^^^^^^^^^^^ attempt to compute `u8::MAX + u8::MAX`, which would overflow\n-\n error[E0080]: evaluation of `foo::<i32>` failed\n-  --> $DIR/issue-50814.rs:21:6\n+  --> $DIR/issue-50814.rs:20:6\n    |\n LL |     &Sum::<U8, U8>::MAX\n    |      ^^^^^^^^^^^^^^^^^^ referenced constant has errors\n \n note: the above error was encountered while instantiating `fn foo::<i32>`\n-  --> $DIR/issue-50814.rs:27:5\n+  --> $DIR/issue-50814.rs:25:5\n    |\n LL |     foo(0);\n    |     ^^^^^^\n \n-error: aborting due to 4 previous errors\n+error: aborting due to 2 previous errors\n \n For more information about this error, try `rustc --explain E0080`."}, {"sha": "ada0bc8ddaee77602acf475e22cac2e0220ab787", "filename": "src/test/ui/consts/offset_from_ub.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/74d53ab9129e33708fcaf11d560c7d4aa282ffd2/src%2Ftest%2Fui%2Fconsts%2Foffset_from_ub.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/74d53ab9129e33708fcaf11d560c7d4aa282ffd2/src%2Ftest%2Fui%2Fconsts%2Foffset_from_ub.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Foffset_from_ub.stderr?ref=74d53ab9129e33708fcaf11d560c7d4aa282ffd2", "patch": "@@ -40,19 +40,19 @@ error[E0080]: evaluation of constant value failed\n   --> $DIR/offset_from_ub.rs:53:14\n    |\n LL |     unsafe { ptr_offset_from(end_ptr, start_ptr) }\n-   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ out-of-bounds offset_from: alloc18 has size 4, so pointer to 10 bytes starting at offset 0 is out-of-bounds\n+   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ out-of-bounds offset_from: alloc17 has size 4, so pointer to 10 bytes starting at offset 0 is out-of-bounds\n \n error[E0080]: evaluation of constant value failed\n   --> $DIR/offset_from_ub.rs:62:14\n    |\n LL |     unsafe { ptr_offset_from(start_ptr, end_ptr) }\n-   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ out-of-bounds offset_from: alloc21 has size 4, so pointer to 10 bytes starting at offset 0 is out-of-bounds\n+   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ out-of-bounds offset_from: alloc20 has size 4, so pointer to 10 bytes starting at offset 0 is out-of-bounds\n \n error[E0080]: evaluation of constant value failed\n   --> $DIR/offset_from_ub.rs:70:14\n    |\n LL |     unsafe { ptr_offset_from(end_ptr, end_ptr) }\n-   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ out-of-bounds offset_from: alloc24 has size 4, so pointer at offset 10 is out-of-bounds\n+   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ out-of-bounds offset_from: alloc23 has size 4, so pointer at offset 10 is out-of-bounds\n \n error[E0080]: evaluation of constant value failed\n   --> $DIR/offset_from_ub.rs:79:14"}]}