{"sha": "cf475e6b107224e7c6dc7c6c16e4626abb1c9a86", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNmNDc1ZTZiMTA3MjI0ZTdjNmRjN2M2YzE2ZTQ2MjZhYmIxYzlhODY=", "commit": {"author": {"name": "David Creswick", "email": "dcrewi@gyrae.net", "date": "2015-02-11T03:32:00Z"}, "committer": {"name": "David Creswick", "email": "dcrewi@gyrae.net", "date": "2015-02-11T23:03:48Z"}, "message": "implement missing iterator traits for slice::Windows\n\n- DoubleEndedIterator\n- ExactSizeIterator\n- RandomAccessIterator", "tree": {"sha": "31e5a23503f2ce81d36a661a420afda59c578d73", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/31e5a23503f2ce81d36a661a420afda59c578d73"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cf475e6b107224e7c6dc7c6c16e4626abb1c9a86", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cf475e6b107224e7c6dc7c6c16e4626abb1c9a86", "html_url": "https://github.com/rust-lang/rust/commit/cf475e6b107224e7c6dc7c6c16e4626abb1c9a86", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cf475e6b107224e7c6dc7c6c16e4626abb1c9a86/comments", "author": {"login": "dcrewi", "id": 1852207, "node_id": "MDQ6VXNlcjE4NTIyMDc=", "avatar_url": "https://avatars.githubusercontent.com/u/1852207?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dcrewi", "html_url": "https://github.com/dcrewi", "followers_url": "https://api.github.com/users/dcrewi/followers", "following_url": "https://api.github.com/users/dcrewi/following{/other_user}", "gists_url": "https://api.github.com/users/dcrewi/gists{/gist_id}", "starred_url": "https://api.github.com/users/dcrewi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dcrewi/subscriptions", "organizations_url": "https://api.github.com/users/dcrewi/orgs", "repos_url": "https://api.github.com/users/dcrewi/repos", "events_url": "https://api.github.com/users/dcrewi/events{/privacy}", "received_events_url": "https://api.github.com/users/dcrewi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dcrewi", "id": 1852207, "node_id": "MDQ6VXNlcjE4NTIyMDc=", "avatar_url": "https://avatars.githubusercontent.com/u/1852207?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dcrewi", "html_url": "https://github.com/dcrewi", "followers_url": "https://api.github.com/users/dcrewi/followers", "following_url": "https://api.github.com/users/dcrewi/following{/other_user}", "gists_url": "https://api.github.com/users/dcrewi/gists{/gist_id}", "starred_url": "https://api.github.com/users/dcrewi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dcrewi/subscriptions", "organizations_url": "https://api.github.com/users/dcrewi/orgs", "repos_url": "https://api.github.com/users/dcrewi/repos", "events_url": "https://api.github.com/users/dcrewi/events{/privacy}", "received_events_url": "https://api.github.com/users/dcrewi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a954663db66fc8efb1889beaf7bd1771ecbb9b21", "url": "https://api.github.com/repos/rust-lang/rust/commits/a954663db66fc8efb1889beaf7bd1771ecbb9b21", "html_url": "https://github.com/rust-lang/rust/commit/a954663db66fc8efb1889beaf7bd1771ecbb9b21"}], "stats": {"total": 50, "additions": 48, "deletions": 2}, "files": [{"sha": "b3f398b9cdf498fa6809e171b3a53ec634df960a", "filename": "src/libcollections/slice.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/cf475e6b107224e7c6dc7c6c16e4626abb1c9a86/src%2Flibcollections%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf475e6b107224e7c6dc7c6c16e4626abb1c9a86/src%2Flibcollections%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fslice.rs?ref=cf475e6b107224e7c6dc7c6c16e4626abb1c9a86", "patch": "@@ -2508,6 +2508,18 @@ mod tests {\n         let wins: &[&[_]] = &[&[1,2,3], &[2,3,4]];\n         assert_eq!(v.windows(3).collect::<Vec<_>>(), wins);\n         assert!(v.windows(6).next().is_none());\n+\n+        let wins: &[&[_]] = &[&[3,4], &[2,3], &[1,2]];\n+        assert_eq!(v.windows(2).rev().collect::<Vec<&[_]>>(), wins);\n+        let mut it = v.windows(2);\n+        assert_eq!(it.indexable(), 3);\n+        let win: &[_] = &[1,2];\n+        assert_eq!(it.idx(0).unwrap(), win);\n+        let win: &[_] = &[2,3];\n+        assert_eq!(it.idx(1).unwrap(), win);\n+        let win: &[_] = &[3,4];\n+        assert_eq!(it.idx(2).unwrap(), win);\n+        assert_eq!(it.idx(3), None);\n     }\n \n     #[test]"}, {"sha": "061531ac1010b051418b1d67fad2438af3a6482b", "filename": "src/libcore/slice.rs", "status": "modified", "additions": 36, "deletions": 2, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/cf475e6b107224e7c6dc7c6c16e4626abb1c9a86/src%2Flibcore%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf475e6b107224e7c6dc7c6c16e4626abb1c9a86/src%2Flibcore%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fslice.rs?ref=cf475e6b107224e7c6dc7c6c16e4626abb1c9a86", "patch": "@@ -1179,8 +1179,42 @@ impl<'a, T> Iterator for Windows<'a, T> {\n         if self.size > self.v.len() {\n             (0, Some(0))\n         } else {\n-            let x = self.v.len() - self.size;\n-            (x.saturating_add(1), x.checked_add(1))\n+            let size = self.v.len() - self.size + 1;\n+            (size, Some(size))\n+        }\n+    }\n+}\n+\n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n+impl<'a, T> DoubleEndedIterator for Windows<'a, T> {\n+    #[inline]\n+    fn next_back(&mut self) -> Option<&'a [T]> {\n+        if self.size > self.v.len() {\n+            None\n+        } else {\n+            let ret = Some(&self.v[self.v.len()-self.size..]);\n+            self.v = &self.v[..self.v.len()-1];\n+            ret\n+        }\n+    }\n+}\n+\n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n+impl<'a, T> ExactSizeIterator for Windows<'a, T> {}\n+\n+#[unstable(feature = \"core\", reason = \"trait is experimental\")]\n+impl<'a, T> RandomAccessIterator for Windows<'a, T> {\n+    #[inline]\n+    fn indexable(&self) -> uint {\n+        self.size_hint().0\n+    }\n+\n+    #[inline]\n+    fn idx(&mut self, index: uint) -> Option<&'a [T]> {\n+        if index + self.size > self.v.len() {\n+            None\n+        } else {\n+            Some(&self.v[index .. index+self.size])\n         }\n     }\n }"}]}