{"sha": "760bb29feb90d30329de4394591ec2d02666735c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc2MGJiMjlmZWI5MGQzMDMyOWRlNDM5NDU5MWVjMmQwMjY2NjczNWM=", "commit": {"author": {"name": "Caleb Cartwright", "email": "caleb.cartwright@outlook.com", "date": "2020-02-09T04:54:37Z"}, "committer": {"name": "Caleb Cartwright", "email": "caleb.cartwright@outlook.com", "date": "2020-02-09T04:54:37Z"}, "message": "chore: fix compile warnings", "tree": {"sha": "4c8707340e377bee8a7b3257f6ba76fd8c55d49a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4c8707340e377bee8a7b3257f6ba76fd8c55d49a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/760bb29feb90d30329de4394591ec2d02666735c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/760bb29feb90d30329de4394591ec2d02666735c", "html_url": "https://github.com/rust-lang/rust/commit/760bb29feb90d30329de4394591ec2d02666735c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/760bb29feb90d30329de4394591ec2d02666735c/comments", "author": {"login": "calebcartwright", "id": 13042488, "node_id": "MDQ6VXNlcjEzMDQyNDg4", "avatar_url": "https://avatars.githubusercontent.com/u/13042488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebcartwright", "html_url": "https://github.com/calebcartwright", "followers_url": "https://api.github.com/users/calebcartwright/followers", "following_url": "https://api.github.com/users/calebcartwright/following{/other_user}", "gists_url": "https://api.github.com/users/calebcartwright/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebcartwright/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebcartwright/subscriptions", "organizations_url": "https://api.github.com/users/calebcartwright/orgs", "repos_url": "https://api.github.com/users/calebcartwright/repos", "events_url": "https://api.github.com/users/calebcartwright/events{/privacy}", "received_events_url": "https://api.github.com/users/calebcartwright/received_events", "type": "User", "site_admin": false}, "committer": {"login": "calebcartwright", "id": 13042488, "node_id": "MDQ6VXNlcjEzMDQyNDg4", "avatar_url": "https://avatars.githubusercontent.com/u/13042488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebcartwright", "html_url": "https://github.com/calebcartwright", "followers_url": "https://api.github.com/users/calebcartwright/followers", "following_url": "https://api.github.com/users/calebcartwright/following{/other_user}", "gists_url": "https://api.github.com/users/calebcartwright/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebcartwright/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebcartwright/subscriptions", "organizations_url": "https://api.github.com/users/calebcartwright/orgs", "repos_url": "https://api.github.com/users/calebcartwright/repos", "events_url": "https://api.github.com/users/calebcartwright/events{/privacy}", "received_events_url": "https://api.github.com/users/calebcartwright/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e72f307f15138a8bb4fd1ae9ef3256fe1fa9dd94", "url": "https://api.github.com/repos/rust-lang/rust/commits/e72f307f15138a8bb4fd1ae9ef3256fe1fa9dd94", "html_url": "https://github.com/rust-lang/rust/commit/e72f307f15138a8bb4fd1ae9ef3256fe1fa9dd94"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "84f01f2a1a9f2ca2bfc7cb49ffa258781f0d73f6", "filename": "src/expr.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/760bb29feb90d30329de4394591ec2d02666735c/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/760bb29feb90d30329de4394591ec2d02666735c/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=760bb29feb90d30329de4394591ec2d02666735c", "patch": "@@ -1148,10 +1148,10 @@ pub(crate) fn is_simple_block(\n     attrs: Option<&[ast::Attribute]>,\n     source_map: &SourceMap,\n ) -> bool {\n-    (block.stmts.len() == 1\n+    block.stmts.len() == 1\n         && stmt_is_expr(&block.stmts[0])\n         && !block_contains_comment(block, source_map)\n-        && attrs.map_or(true, |a| a.is_empty()))\n+        && attrs.map_or(true, |a| a.is_empty())\n }\n \n /// Checks whether a block contains at most one statement or expression, and no"}, {"sha": "0316dc6f0c249f80c6b74a1a4d2d115fc9df5c3d", "filename": "src/items.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/760bb29feb90d30329de4394591ec2d02666735c/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/760bb29feb90d30329de4394591ec2d02666735c/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=760bb29feb90d30329de4394591ec2d02666735c", "patch": "@@ -2585,7 +2585,7 @@ fn compute_budgets_for_params(\n     ret_str_len: usize,\n     fn_brace_style: FnBraceStyle,\n     force_vertical_layout: bool,\n-) -> Option<((usize, usize, Indent))> {\n+) -> Option<(usize, usize, Indent)> {\n     debug!(\n         \"compute_budgets_for_params {} {:?}, {}, {:?}\",\n         result.len(),"}, {"sha": "e7a2e21179d4bef7ca2cb64cf818e0eb9290c69c", "filename": "src/modules.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/760bb29feb90d30329de4394591ec2d02666735c/src%2Fmodules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/760bb29feb90d30329de4394591ec2d02666735c/src%2Fmodules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmodules.rs?ref=760bb29feb90d30329de4394591ec2d02666735c", "patch": "@@ -2,7 +2,7 @@ use std::borrow::Cow;\n use std::collections::BTreeMap;\n use std::path::{Path, PathBuf};\n \n-use rustc_errors::{Diagnostic, PResult};\n+use rustc_errors::PResult;\n use rustc_parse::{new_sub_parser_from_file, parser, DirectoryOwnership};\n use rustc_session::parse::ParseSess;\n use rustc_span::symbol::{sym, Symbol};"}]}