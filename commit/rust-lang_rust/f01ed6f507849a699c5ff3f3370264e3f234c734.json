{"sha": "f01ed6f507849a699c5ff3f3370264e3f234c734", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYwMWVkNmY1MDc4NDlhNjk5YzVmZjNmMzM3MDI2NGUzZjIzNGM3MzQ=", "commit": {"author": {"name": "Kevin Yeh", "email": "kevinyeah@utexas.edu", "date": "2016-01-22T19:40:26Z"}, "committer": {"name": "Kevin Yeh", "email": "kevinyeah@utexas.edu", "date": "2016-01-22T19:43:18Z"}, "message": "Format item macros", "tree": {"sha": "046bc1cffb762c95744dcad07a575779ad1ad289", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/046bc1cffb762c95744dcad07a575779ad1ad289"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f01ed6f507849a699c5ff3f3370264e3f234c734", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f01ed6f507849a699c5ff3f3370264e3f234c734", "html_url": "https://github.com/rust-lang/rust/commit/f01ed6f507849a699c5ff3f3370264e3f234c734", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f01ed6f507849a699c5ff3f3370264e3f234c734/comments", "author": {"login": "kyeah", "id": 2308368, "node_id": "MDQ6VXNlcjIzMDgzNjg=", "avatar_url": "https://avatars.githubusercontent.com/u/2308368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kyeah", "html_url": "https://github.com/kyeah", "followers_url": "https://api.github.com/users/kyeah/followers", "following_url": "https://api.github.com/users/kyeah/following{/other_user}", "gists_url": "https://api.github.com/users/kyeah/gists{/gist_id}", "starred_url": "https://api.github.com/users/kyeah/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kyeah/subscriptions", "organizations_url": "https://api.github.com/users/kyeah/orgs", "repos_url": "https://api.github.com/users/kyeah/repos", "events_url": "https://api.github.com/users/kyeah/events{/privacy}", "received_events_url": "https://api.github.com/users/kyeah/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kyeah", "id": 2308368, "node_id": "MDQ6VXNlcjIzMDgzNjg=", "avatar_url": "https://avatars.githubusercontent.com/u/2308368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kyeah", "html_url": "https://github.com/kyeah", "followers_url": "https://api.github.com/users/kyeah/followers", "following_url": "https://api.github.com/users/kyeah/following{/other_user}", "gists_url": "https://api.github.com/users/kyeah/gists{/gist_id}", "starred_url": "https://api.github.com/users/kyeah/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kyeah/subscriptions", "organizations_url": "https://api.github.com/users/kyeah/orgs", "repos_url": "https://api.github.com/users/kyeah/repos", "events_url": "https://api.github.com/users/kyeah/events{/privacy}", "received_events_url": "https://api.github.com/users/kyeah/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "81516fe8ca6fb30cba2127685d3870fee31d81ea", "url": "https://api.github.com/repos/rust-lang/rust/commits/81516fe8ca6fb30cba2127685d3870fee31d81ea", "html_url": "https://github.com/rust-lang/rust/commit/81516fe8ca6fb30cba2127685d3870fee31d81ea"}], "stats": {"total": 46, "additions": 21, "deletions": 25}, "files": [{"sha": "84a7e18bd856990fdd1fd8d2d4747b15e98c7139", "filename": "src/macros.rs", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/f01ed6f507849a699c5ff3f3370264e3f234c734/src%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f01ed6f507849a699c5ff3f3370264e3f234c734/src%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmacros.rs?ref=f01ed6f507849a699c5ff3f3370264e3f234c734", "patch": "@@ -33,7 +33,7 @@ use utils::{wrap_str, span_after};\n static FORCED_BRACKET_MACROS: &'static [&'static str] = &[\"vec!\"];\n \n // FIXME: use the enum from libsyntax?\n-#[derive(Clone, Copy)]\n+#[derive(Clone, Copy, PartialEq, Eq)]\n enum MacroStyle {\n     Parens,\n     Brackets,\n@@ -63,9 +63,7 @@ pub fn rewrite_macro(mac: &ast::Mac,\n         original_style\n     };\n \n-    if let MacroStyle::Braces = style {\n-        return None;\n-    } else if mac.node.tts.is_empty() {\n+    if mac.node.tts.is_empty() {\n         return if let MacroStyle::Parens = style {\n             Some(format!(\"{}()\", macro_name))\n         } else {\n@@ -76,22 +74,24 @@ pub fn rewrite_macro(mac: &ast::Mac,\n     let mut parser = tts_to_parser(context.parse_session, mac.node.tts.clone(), Vec::new());\n     let mut expr_vec = Vec::new();\n \n-    loop {\n-        expr_vec.push(match parser.parse_expr() {\n-            Ok(expr) => expr,\n-            Err(..) => return None,\n-        });\n+    if MacroStyle::Braces != style {\n+        loop {\n+            expr_vec.push(match parser.parse_expr() {\n+                Ok(expr) => expr,\n+                Err(..) => return None,\n+            });\n \n-        match parser.token {\n-            Token::Eof => break,\n-            Token::Comma => (),\n-            _ => return None,\n-        }\n+            match parser.token {\n+                Token::Eof => break,\n+                Token::Comma => (),\n+                _ => return None,\n+            }\n \n-        let _ = parser.bump();\n+            let _ = parser.bump();\n \n-        if parser.token == Token::Eof {\n-            return None;\n+            if parser.token == Token::Eof {\n+                return None;\n+            }\n         }\n     }\n "}, {"sha": "569bacc1300e6f747540ff0606b0cd990e321d3b", "filename": "src/visitor.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f01ed6f507849a699c5ff3f3370264e3f234c734/src%2Fvisitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f01ed6f507849a699c5ff3f3370264e3f234c734/src%2Fvisitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvisitor.rs?ref=f01ed6f507849a699c5ff3f3370264e3f234c734", "patch": "@@ -253,13 +253,9 @@ impl<'a> FmtVisitor<'a> {\n                 self.format_missing_with_indent(item.span.lo);\n                 self.format_mod(module, item.vis, item.span, item.ident);\n             }\n-            ast::Item_::ItemMac(..) => {\n+            ast::Item_::ItemMac(ref mac) => {\n                 self.format_missing_with_indent(item.span.lo);\n-                let snippet = self.snippet(item.span);\n-                self.buffer.push_str(&snippet);\n-                self.last_pos = item.span.hi;\n-                // FIXME: we cannot format these yet, because of a bad span.\n-                // See rust lang issue #28424.\n+                self.visit_mac(mac);\n             }\n             ast::Item_::ItemForeignMod(ref foreign_mod) => {\n                 self.format_missing_with_indent(item.span.lo);"}, {"sha": "a16038ccabb93c3375d53cea458b28a5520a388e", "filename": "tests/source/macros.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f01ed6f507849a699c5ff3f3370264e3f234c734/tests%2Fsource%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f01ed6f507849a699c5ff3f3370264e3f234c734/tests%2Fsource%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fmacros.rs?ref=f01ed6f507849a699c5ff3f3370264e3f234c734", "patch": "@@ -1,4 +1,4 @@\n-itemmacro!(this, is.not() .formatted(yet));\n+itemmacro!(this, is.now() .formatted(yay));\n \n fn main() {\n     foo! ( );"}, {"sha": "9307c8720cd5ad7892bb7b76f801d384825f2e02", "filename": "tests/target/macros.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f01ed6f507849a699c5ff3f3370264e3f234c734/tests%2Ftarget%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f01ed6f507849a699c5ff3f3370264e3f234c734/tests%2Ftarget%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fmacros.rs?ref=f01ed6f507849a699c5ff3f3370264e3f234c734", "patch": "@@ -1,4 +1,4 @@\n-itemmacro!(this, is.not() .formatted(yet));\n+itemmacro!(this, is.now().formatted(yay));\n \n fn main() {\n     foo!();"}]}