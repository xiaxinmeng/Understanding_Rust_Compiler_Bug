{"sha": "fba241fc6690527a3aad4bee98aca00a7c0907ad", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZiYTI0MWZjNjY5MDUyN2EzYWFkNGJlZTk4YWNhMDBhN2MwOTA3YWQ=", "commit": {"author": {"name": "Markus Westerlind", "email": "markus.westerlind@distilnetworks.com", "date": "2020-03-03T09:23:04Z"}, "committer": {"name": "Markus Westerlind", "email": "markus.westerlind@distilnetworks.com", "date": "2020-05-05T09:25:12Z"}, "message": "refactor: simplify", "tree": {"sha": "743417f7a3ad4d82e5dfa246dd52cb043d803b73", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/743417f7a3ad4d82e5dfa246dd52cb043d803b73"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fba241fc6690527a3aad4bee98aca00a7c0907ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fba241fc6690527a3aad4bee98aca00a7c0907ad", "html_url": "https://github.com/rust-lang/rust/commit/fba241fc6690527a3aad4bee98aca00a7c0907ad", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fba241fc6690527a3aad4bee98aca00a7c0907ad/comments", "author": null, "committer": null, "parents": [{"sha": "729d16f0104887a0b37b8e5bb9f0f495e4efdd10", "url": "https://api.github.com/repos/rust-lang/rust/commits/729d16f0104887a0b37b8e5bb9f0f495e4efdd10", "html_url": "https://github.com/rust-lang/rust/commit/729d16f0104887a0b37b8e5bb9f0f495e4efdd10"}], "stats": {"total": 29, "additions": 14, "deletions": 15}, "files": [{"sha": "ccc4a73d40f67fdfa54c410722664b28afadab7f", "filename": "src/librustc_infer/infer/fudge.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/fba241fc6690527a3aad4bee98aca00a7c0907ad/src%2Flibrustc_infer%2Finfer%2Ffudge.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fba241fc6690527a3aad4bee98aca00a7c0907ad/src%2Flibrustc_infer%2Finfer%2Ffudge.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Ffudge.rs?ref=fba241fc6690527a3aad4bee98aca00a7c0907ad", "patch": "@@ -24,9 +24,9 @@ where\n \n fn const_vars_since_snapshot<'tcx>(\n     table: &mut UnificationTable<'_, 'tcx, ConstVid<'tcx>>,\n-    snapshot: usize,\n+    snapshot_var_len: usize,\n ) -> (Range<ConstVid<'tcx>>, Vec<ConstVariableOrigin>) {\n-    let range = vars_since_snapshot(table, snapshot);\n+    let range = vars_since_snapshot(table, snapshot_var_len);\n     (\n         range.start..range.end,\n         (range.start.index..range.end.index)\n@@ -98,18 +98,18 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n                         inner.type_variables().vars_since_snapshot(&snapshot.type_snapshot);\n                     let int_vars = vars_since_snapshot(\n                         &mut inner.int_unification_table(),\n-                        snapshot.int_snapshot,\n+                        snapshot.int_var_len,\n                     );\n                     let float_vars = vars_since_snapshot(\n                         &mut inner.float_unification_table(),\n-                        snapshot.float_snapshot,\n+                        snapshot.float_var_len,\n                     );\n                     let region_vars = inner\n                         .unwrap_region_constraints()\n                         .vars_since_snapshot(&snapshot.region_constraints_snapshot);\n                     let const_vars = const_vars_since_snapshot(\n                         &mut inner.const_unification_table(),\n-                        snapshot.const_snapshot,\n+                        snapshot.const_var_len,\n                     );\n \n                     let fudger = InferenceFudger {"}, {"sha": "1210d561311621afd560586d5490d3e2edcab06e", "filename": "src/librustc_infer/infer/mod.rs", "status": "modified", "additions": 9, "deletions": 10, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/fba241fc6690527a3aad4bee98aca00a7c0907ad/src%2Flibrustc_infer%2Finfer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fba241fc6690527a3aad4bee98aca00a7c0907ad/src%2Flibrustc_infer%2Finfer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Fmod.rs?ref=fba241fc6690527a3aad4bee98aca00a7c0907ad", "patch": "@@ -39,7 +39,6 @@ use rustc_span::Span;\n use std::cell::{Cell, Ref, RefCell};\n use std::collections::BTreeMap;\n use std::fmt;\n-use std::marker::PhantomData;\n \n use self::combine::CombineFields;\n use self::free_regions::RegionRelations;\n@@ -241,7 +240,7 @@ impl<'tcx> InferCtxtInner<'tcx> {\n             &mut InferCtxtUndoLogs<'tcx>,\n         >,\n     > {\n-        ut::UnificationTable::with_log(&mut self.int_unification_table, &mut self.undo_log)\n+        self.int_unification_table.with_log(&mut self.undo_log)\n     }\n \n     fn float_unification_table(\n@@ -253,7 +252,7 @@ impl<'tcx> InferCtxtInner<'tcx> {\n             &mut InferCtxtUndoLogs<'tcx>,\n         >,\n     > {\n-        ut::UnificationTable::with_log(&mut self.float_unification_table, &mut self.undo_log)\n+        self.float_unification_table.with_log(&mut self.undo_log)\n     }\n \n     fn const_unification_table(\n@@ -265,7 +264,7 @@ impl<'tcx> InferCtxtInner<'tcx> {\n             &mut InferCtxtUndoLogs<'tcx>,\n         >,\n     > {\n-        ut::UnificationTable::with_log(&mut self.const_unification_table, &mut self.undo_log)\n+        self.const_unification_table.with_log(&mut self.undo_log)\n     }\n \n     pub fn unwrap_region_constraints(&mut self) -> RegionConstraintCollector<'tcx, '_> {\n@@ -711,9 +710,9 @@ pub struct FullSnapshot<'a, 'tcx> {\n     snapshot: CombinedSnapshot<'a, 'tcx>,\n     region_constraints_snapshot: RegionSnapshot,\n     type_snapshot: type_variable::Snapshot<'tcx>,\n-    const_snapshot: usize,\n-    int_snapshot: usize,\n-    float_snapshot: usize,\n+    const_var_len: usize,\n+    int_var_len: usize,\n+    float_var_len: usize,\n }\n \n #[must_use = \"once you start a snapshot, you should always consume it\"]\n@@ -837,9 +836,9 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n         FullSnapshot {\n             snapshot,\n             type_snapshot: inner.type_variables().snapshot(),\n-            const_snapshot: inner.const_unification_table().len(),\n-            int_snapshot: inner.int_unification_table().len(),\n-            float_snapshot: inner.float_unification_table().len(),\n+            const_var_len: inner.const_unification_table().len(),\n+            int_var_len: inner.int_unification_table().len(),\n+            float_var_len: inner.float_unification_table().len(),\n             region_constraints_snapshot: inner.unwrap_region_constraints().start_snapshot(),\n         }\n     }"}]}