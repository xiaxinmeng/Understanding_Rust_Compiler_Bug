{"sha": "920e9f0c4b1aa0921d4dd5e22ea727a31dd8e2cc", "node_id": "C_kwDOAAsO6NoAKDkyMGU5ZjBjNGIxYWEwOTIxZDRkZDVlMjJlYTcyN2EzMWRkOGUyY2M", "commit": {"author": {"name": "Cameron Steffen", "email": "cam.steffen94@gmail.com", "date": "2022-01-10T21:27:00Z"}, "committer": {"name": "Cameron Steffen", "email": "cam.steffen94@gmail.com", "date": "2022-01-10T23:08:22Z"}, "message": "Move workspace test", "tree": {"sha": "25602d4369e0e0d27e69dc9b2f9fc2e9ea4c283c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/25602d4369e0e0d27e69dc9b2f9fc2e9ea4c283c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/920e9f0c4b1aa0921d4dd5e22ea727a31dd8e2cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/920e9f0c4b1aa0921d4dd5e22ea727a31dd8e2cc", "html_url": "https://github.com/rust-lang/rust/commit/920e9f0c4b1aa0921d4dd5e22ea727a31dd8e2cc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/920e9f0c4b1aa0921d4dd5e22ea727a31dd8e2cc/comments", "author": {"login": "camsteffen", "id": 5565418, "node_id": "MDQ6VXNlcjU1NjU0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5565418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camsteffen", "html_url": "https://github.com/camsteffen", "followers_url": "https://api.github.com/users/camsteffen/followers", "following_url": "https://api.github.com/users/camsteffen/following{/other_user}", "gists_url": "https://api.github.com/users/camsteffen/gists{/gist_id}", "starred_url": "https://api.github.com/users/camsteffen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camsteffen/subscriptions", "organizations_url": "https://api.github.com/users/camsteffen/orgs", "repos_url": "https://api.github.com/users/camsteffen/repos", "events_url": "https://api.github.com/users/camsteffen/events{/privacy}", "received_events_url": "https://api.github.com/users/camsteffen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camsteffen", "id": 5565418, "node_id": "MDQ6VXNlcjU1NjU0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5565418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camsteffen", "html_url": "https://github.com/camsteffen", "followers_url": "https://api.github.com/users/camsteffen/followers", "following_url": "https://api.github.com/users/camsteffen/following{/other_user}", "gists_url": "https://api.github.com/users/camsteffen/gists{/gist_id}", "starred_url": "https://api.github.com/users/camsteffen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camsteffen/subscriptions", "organizations_url": "https://api.github.com/users/camsteffen/orgs", "repos_url": "https://api.github.com/users/camsteffen/repos", "events_url": "https://api.github.com/users/camsteffen/events{/privacy}", "received_events_url": "https://api.github.com/users/camsteffen/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "51dbbf3c4c67446e3ae81e2488f48bfce8dac59f", "url": "https://api.github.com/repos/rust-lang/rust/commits/51dbbf3c4c67446e3ae81e2488f48bfce8dac59f", "html_url": "https://github.com/rust-lang/rust/commit/51dbbf3c4c67446e3ae81e2488f48bfce8dac59f"}], "stats": {"total": 237, "additions": 109, "deletions": 128}, "files": [{"sha": "116ae031bb719d7b8a6b62223308a01289c09e1a", "filename": ".github/workflows/clippy.yml", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/920e9f0c4b1aa0921d4dd5e22ea727a31dd8e2cc/.github%2Fworkflows%2Fclippy.yml", "raw_url": "https://github.com/rust-lang/rust/raw/920e9f0c4b1aa0921d4dd5e22ea727a31dd8e2cc/.github%2Fworkflows%2Fclippy.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fworkflows%2Fclippy.yml?ref=920e9f0c4b1aa0921d4dd5e22ea727a31dd8e2cc", "patch": "@@ -70,14 +70,6 @@ jobs:\n       run: cargo test --features deny-warnings\n       working-directory: clippy_dev\n \n-    - name: Test cargo-clippy\n-      run: ../target/debug/cargo-clippy\n-      working-directory: clippy_workspace_tests\n-\n-    - name: Test cargo-clippy --fix\n-      run: ../target/debug/cargo-clippy clippy --fix\n-      working-directory: clippy_workspace_tests\n-\n     - name: Test clippy-driver\n       run: bash .github/driver.sh\n       env:"}, {"sha": "fe02d9cfc8499a273fb5fc90c99c172626bc2020", "filename": ".github/workflows/clippy_bors.yml", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/920e9f0c4b1aa0921d4dd5e22ea727a31dd8e2cc/.github%2Fworkflows%2Fclippy_bors.yml", "raw_url": "https://github.com/rust-lang/rust/raw/920e9f0c4b1aa0921d4dd5e22ea727a31dd8e2cc/.github%2Fworkflows%2Fclippy_bors.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fworkflows%2Fclippy_bors.yml?ref=920e9f0c4b1aa0921d4dd5e22ea727a31dd8e2cc", "patch": "@@ -133,14 +133,6 @@ jobs:\n       run: cargo test --features deny-warnings\n       working-directory: clippy_dev\n \n-    - name: Test cargo-clippy\n-      run: ../target/debug/cargo-clippy\n-      working-directory: clippy_workspace_tests\n-\n-    - name: Test cargo-clippy --fix\n-      run: ../target/debug/cargo-clippy clippy --fix\n-      working-directory: clippy_workspace_tests\n-\n     - name: Test clippy-driver\n       run: bash .github/driver.sh\n       env:"}, {"sha": "3e50c45a9b63ec8922446ef907cb10e220a33772", "filename": ".gitignore", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/920e9f0c4b1aa0921d4dd5e22ea727a31dd8e2cc/.gitignore", "raw_url": "https://github.com/rust-lang/rust/raw/920e9f0c4b1aa0921d4dd5e22ea727a31dd8e2cc/.gitignore", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.gitignore?ref=920e9f0c4b1aa0921d4dd5e22ea727a31dd8e2cc", "patch": "@@ -19,7 +19,6 @@ out\n /target\n /clippy_lints/target\n /clippy_utils/target\n-/clippy_workspace_tests/target\n /clippy_dev/target\n /lintcheck/target\n /rustc_tools_util/target"}, {"sha": "6665bb21784b8516fbc6193be6cedf7135013304", "filename": "tests/dogfood.rs", "status": "modified", "additions": 1, "deletions": 110, "changes": 111, "blob_url": "https://github.com/rust-lang/rust/blob/920e9f0c4b1aa0921d4dd5e22ea727a31dd8e2cc/tests%2Fdogfood.rs", "raw_url": "https://github.com/rust-lang/rust/raw/920e9f0c4b1aa0921d4dd5e22ea727a31dd8e2cc/tests%2Fdogfood.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdogfood.rs?ref=920e9f0c4b1aa0921d4dd5e22ea727a31dd8e2cc", "patch": "@@ -47,102 +47,6 @@ fn dogfood_clippy() {\n     assert!(output.status.success());\n }\n \n-fn test_no_deps_ignores_path_deps_in_workspaces() {\n-    if IS_RUSTC_TEST_SUITE {\n-        return;\n-    }\n-    let root = PathBuf::from(env!(\"CARGO_MANIFEST_DIR\"));\n-    let target_dir = root.join(\"target\").join(\"dogfood\");\n-    let cwd = root.join(\"clippy_workspace_tests\");\n-\n-    // Make sure we start with a clean state\n-    Command::new(\"cargo\")\n-        .current_dir(&cwd)\n-        .env(\"CARGO_TARGET_DIR\", &target_dir)\n-        .arg(\"clean\")\n-        .args(&[\"-p\", \"subcrate\"])\n-        .args(&[\"-p\", \"path_dep\"])\n-        .output()\n-        .unwrap();\n-\n-    // `path_dep` is a path dependency of `subcrate` that would trigger a denied lint.\n-    // Make sure that with the `--no-deps` argument Clippy does not run on `path_dep`.\n-    let output = Command::new(&*CARGO_CLIPPY_PATH)\n-        .current_dir(&cwd)\n-        .env(\"CARGO_INCREMENTAL\", \"0\")\n-        .arg(\"clippy\")\n-        .args(&[\"-p\", \"subcrate\"])\n-        .arg(\"--no-deps\")\n-        .arg(\"--\")\n-        .arg(\"-Cdebuginfo=0\") // disable debuginfo to generate less data in the target dir\n-        .args(&[\"--cfg\", r#\"feature=\"primary_package_test\"\"#])\n-        .output()\n-        .unwrap();\n-    println!(\"status: {}\", output.status);\n-    println!(\"stdout: {}\", String::from_utf8_lossy(&output.stdout));\n-    println!(\"stderr: {}\", String::from_utf8_lossy(&output.stderr));\n-\n-    assert!(output.status.success());\n-\n-    let lint_path_dep = || {\n-        // Test that without the `--no-deps` argument, `path_dep` is linted.\n-        let output = Command::new(&*CARGO_CLIPPY_PATH)\n-            .current_dir(&cwd)\n-            .env(\"CARGO_INCREMENTAL\", \"0\")\n-            .arg(\"clippy\")\n-            .args(&[\"-p\", \"subcrate\"])\n-            .arg(\"--\")\n-            .arg(\"-Cdebuginfo=0\") // disable debuginfo to generate less data in the target dir\n-            .args(&[\"--cfg\", r#\"feature=\"primary_package_test\"\"#])\n-            .output()\n-            .unwrap();\n-        println!(\"status: {}\", output.status);\n-        println!(\"stdout: {}\", String::from_utf8_lossy(&output.stdout));\n-        println!(\"stderr: {}\", String::from_utf8_lossy(&output.stderr));\n-\n-        assert!(!output.status.success());\n-        assert!(\n-            String::from_utf8(output.stderr)\n-                .unwrap()\n-                .contains(\"error: empty `loop {}` wastes CPU cycles\")\n-        );\n-    };\n-\n-    // Make sure Cargo is aware of the removal of `--no-deps`.\n-    lint_path_dep();\n-\n-    let successful_build = || {\n-        let output = Command::new(&*CARGO_CLIPPY_PATH)\n-            .current_dir(&cwd)\n-            .env(\"CARGO_INCREMENTAL\", \"0\")\n-            .arg(\"clippy\")\n-            .args(&[\"-p\", \"subcrate\"])\n-            .arg(\"--\")\n-            .arg(\"-Cdebuginfo=0\") // disable debuginfo to generate less data in the target dir\n-            .output()\n-            .unwrap();\n-        println!(\"status: {}\", output.status);\n-        println!(\"stdout: {}\", String::from_utf8_lossy(&output.stdout));\n-        println!(\"stderr: {}\", String::from_utf8_lossy(&output.stderr));\n-\n-        assert!(output.status.success());\n-\n-        output\n-    };\n-\n-    // Trigger a sucessful build, so Cargo would like to cache the build result.\n-    successful_build();\n-\n-    // Make sure there's no spurious rebuild when nothing changes.\n-    let stderr = String::from_utf8(successful_build().stderr).unwrap();\n-    assert!(!stderr.contains(\"Compiling\"));\n-    assert!(!stderr.contains(\"Checking\"));\n-    assert!(stderr.contains(\"Finished\"));\n-\n-    // Make sure Cargo is aware of the new `--cfg` flag.\n-    lint_path_dep();\n-}\n-\n #[test]\n fn dogfood_subprojects() {\n     // run clippy on remaining subprojects and fail the test if lint warnings are reported\n@@ -151,22 +55,9 @@ fn dogfood_subprojects() {\n     }\n \n     // NOTE: `path_dep` crate is omitted on purpose here\n-    for project in &[\n-        \"clippy_workspace_tests\",\n-        \"clippy_workspace_tests/src\",\n-        \"clippy_workspace_tests/subcrate\",\n-        \"clippy_workspace_tests/subcrate/src\",\n-        \"clippy_dev\",\n-        \"clippy_lints\",\n-        \"clippy_utils\",\n-        \"rustc_tools_util\",\n-    ] {\n+    for project in &[\"clippy_dev\", \"clippy_lints\", \"clippy_utils\", \"rustc_tools_util\"] {\n         run_clippy_for_project(project);\n     }\n-\n-    // NOTE: Since tests run in parallel we can't run cargo commands on the same workspace at the\n-    // same time, so we test this immediately after the dogfood for workspaces.\n-    test_no_deps_ignores_path_deps_in_workspaces();\n }\n \n #[test]"}, {"sha": "677b4a4d569994598398bb9dc0b1a13f54ab1b4b", "filename": "tests/workspace.rs", "status": "added", "additions": 107, "deletions": 0, "changes": 107, "blob_url": "https://github.com/rust-lang/rust/blob/920e9f0c4b1aa0921d4dd5e22ea727a31dd8e2cc/tests%2Fworkspace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/920e9f0c4b1aa0921d4dd5e22ea727a31dd8e2cc/tests%2Fworkspace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fworkspace.rs?ref=920e9f0c4b1aa0921d4dd5e22ea727a31dd8e2cc", "patch": "@@ -0,0 +1,107 @@\n+#![feature(once_cell)]\n+\n+use std::path::PathBuf;\n+use std::process::Command;\n+use test_utils::{CARGO_CLIPPY_PATH, IS_RUSTC_TEST_SUITE};\n+\n+mod test_utils;\n+\n+#[test]\n+fn test_no_deps_ignores_path_deps_in_workspaces() {\n+    if IS_RUSTC_TEST_SUITE {\n+        return;\n+    }\n+    let root = PathBuf::from(env!(\"CARGO_MANIFEST_DIR\"));\n+    let target_dir = root.join(\"target\").join(\"workspace_test\");\n+    let cwd = root.join(\"tests/workspace_test\");\n+\n+    // Make sure we start with a clean state\n+    Command::new(\"cargo\")\n+        .current_dir(&cwd)\n+        .env(\"CARGO_TARGET_DIR\", &target_dir)\n+        .arg(\"clean\")\n+        .args(&[\"-p\", \"subcrate\"])\n+        .args(&[\"-p\", \"path_dep\"])\n+        .output()\n+        .unwrap();\n+\n+    // `path_dep` is a path dependency of `subcrate` that would trigger a denied lint.\n+    // Make sure that with the `--no-deps` argument Clippy does not run on `path_dep`.\n+    let output = Command::new(&*CARGO_CLIPPY_PATH)\n+        .current_dir(&cwd)\n+        .env(\"CARGO_INCREMENTAL\", \"0\")\n+        .env(\"CARGO_TARGET_DIR\", &target_dir)\n+        .arg(\"clippy\")\n+        .args(&[\"-p\", \"subcrate\"])\n+        .arg(\"--no-deps\")\n+        .arg(\"--\")\n+        .arg(\"-Cdebuginfo=0\") // disable debuginfo to generate less data in the target dir\n+        .args(&[\"--cfg\", r#\"feature=\"primary_package_test\"\"#])\n+        .output()\n+        .unwrap();\n+    println!(\"status: {}\", output.status);\n+    println!(\"stdout: {}\", String::from_utf8_lossy(&output.stdout));\n+    println!(\"stderr: {}\", String::from_utf8_lossy(&output.stderr));\n+\n+    assert!(output.status.success());\n+\n+    let lint_path_dep = || {\n+        // Test that without the `--no-deps` argument, `path_dep` is linted.\n+        let output = Command::new(&*CARGO_CLIPPY_PATH)\n+            .current_dir(&cwd)\n+            .env(\"CARGO_INCREMENTAL\", \"0\")\n+            .env(\"CARGO_TARGET_DIR\", &target_dir)\n+            .arg(\"clippy\")\n+            .args(&[\"-p\", \"subcrate\"])\n+            .arg(\"--\")\n+            .arg(\"-Cdebuginfo=0\") // disable debuginfo to generate less data in the target dir\n+            .args(&[\"--cfg\", r#\"feature=\"primary_package_test\"\"#])\n+            .output()\n+            .unwrap();\n+        println!(\"status: {}\", output.status);\n+        println!(\"stdout: {}\", String::from_utf8_lossy(&output.stdout));\n+        println!(\"stderr: {}\", String::from_utf8_lossy(&output.stderr));\n+\n+        assert!(!output.status.success());\n+        assert!(\n+            String::from_utf8(output.stderr)\n+                .unwrap()\n+                .contains(\"error: empty `loop {}` wastes CPU cycles\")\n+        );\n+    };\n+\n+    // Make sure Cargo is aware of the removal of `--no-deps`.\n+    lint_path_dep();\n+\n+    let successful_build = || {\n+        let output = Command::new(&*CARGO_CLIPPY_PATH)\n+            .current_dir(&cwd)\n+            .env(\"CARGO_INCREMENTAL\", \"0\")\n+            .env(\"CARGO_TARGET_DIR\", &target_dir)\n+            .arg(\"clippy\")\n+            .args(&[\"-p\", \"subcrate\"])\n+            .arg(\"--\")\n+            .arg(\"-Cdebuginfo=0\") // disable debuginfo to generate less data in the target dir\n+            .output()\n+            .unwrap();\n+        println!(\"status: {}\", output.status);\n+        println!(\"stdout: {}\", String::from_utf8_lossy(&output.stdout));\n+        println!(\"stderr: {}\", String::from_utf8_lossy(&output.stderr));\n+\n+        assert!(output.status.success());\n+\n+        output\n+    };\n+\n+    // Trigger a sucessful build, so Cargo would like to cache the build result.\n+    successful_build();\n+\n+    // Make sure there's no spurious rebuild when nothing changes.\n+    let stderr = String::from_utf8(successful_build().stderr).unwrap();\n+    assert!(!stderr.contains(\"Compiling\"));\n+    assert!(!stderr.contains(\"Checking\"));\n+    assert!(stderr.contains(\"Finished\"));\n+\n+    // Make sure Cargo is aware of the new `--cfg` flag.\n+    lint_path_dep();\n+}"}, {"sha": "bf5b4ca5288a4193f3934a02207c5813dee2b4b4", "filename": "tests/workspace_test/Cargo.toml", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/920e9f0c4b1aa0921d4dd5e22ea727a31dd8e2cc/tests%2Fworkspace_test%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/920e9f0c4b1aa0921d4dd5e22ea727a31dd8e2cc/tests%2Fworkspace_test%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fworkspace_test%2FCargo.toml?ref=920e9f0c4b1aa0921d4dd5e22ea727a31dd8e2cc", "patch": "@@ -1,5 +1,5 @@\n [package]\n-name = \"clippy_workspace_tests\"\n+name = \"workspace_test\"\n version = \"0.1.0\"\n edition = \"2018\"\n ", "previous_filename": "clippy_workspace_tests/Cargo.toml"}, {"sha": "3507168a3a96452abe013ab42094028e10d8db6a", "filename": "tests/workspace_test/build.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/920e9f0c4b1aa0921d4dd5e22ea727a31dd8e2cc/tests%2Fworkspace_test%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/920e9f0c4b1aa0921d4dd5e22ea727a31dd8e2cc/tests%2Fworkspace_test%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fworkspace_test%2Fbuild.rs?ref=920e9f0c4b1aa0921d4dd5e22ea727a31dd8e2cc", "previous_filename": "clippy_workspace_tests/build.rs"}, {"sha": "85a91cd2decd59ffdad366977375be13f2fe52a5", "filename": "tests/workspace_test/path_dep/Cargo.toml", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/920e9f0c4b1aa0921d4dd5e22ea727a31dd8e2cc/tests%2Fworkspace_test%2Fpath_dep%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/920e9f0c4b1aa0921d4dd5e22ea727a31dd8e2cc/tests%2Fworkspace_test%2Fpath_dep%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fworkspace_test%2Fpath_dep%2FCargo.toml?ref=920e9f0c4b1aa0921d4dd5e22ea727a31dd8e2cc", "previous_filename": "clippy_workspace_tests/path_dep/Cargo.toml"}, {"sha": "35ce524f2b10c367c0b3d71e4449f05458542261", "filename": "tests/workspace_test/path_dep/src/lib.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/920e9f0c4b1aa0921d4dd5e22ea727a31dd8e2cc/tests%2Fworkspace_test%2Fpath_dep%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/920e9f0c4b1aa0921d4dd5e22ea727a31dd8e2cc/tests%2Fworkspace_test%2Fpath_dep%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fworkspace_test%2Fpath_dep%2Fsrc%2Flib.rs?ref=920e9f0c4b1aa0921d4dd5e22ea727a31dd8e2cc", "previous_filename": "clippy_workspace_tests/path_dep/src/lib.rs"}, {"sha": "b322eca1db51d2cf71da534d254f47be4213c6d1", "filename": "tests/workspace_test/src/main.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/920e9f0c4b1aa0921d4dd5e22ea727a31dd8e2cc/tests%2Fworkspace_test%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/920e9f0c4b1aa0921d4dd5e22ea727a31dd8e2cc/tests%2Fworkspace_test%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fworkspace_test%2Fsrc%2Fmain.rs?ref=920e9f0c4b1aa0921d4dd5e22ea727a31dd8e2cc", "previous_filename": "clippy_workspace_tests/src/main.rs"}, {"sha": "45362c11b856e3615cfa77348c12b251d127526b", "filename": "tests/workspace_test/subcrate/Cargo.toml", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/920e9f0c4b1aa0921d4dd5e22ea727a31dd8e2cc/tests%2Fworkspace_test%2Fsubcrate%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/920e9f0c4b1aa0921d4dd5e22ea727a31dd8e2cc/tests%2Fworkspace_test%2Fsubcrate%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fworkspace_test%2Fsubcrate%2FCargo.toml?ref=920e9f0c4b1aa0921d4dd5e22ea727a31dd8e2cc", "previous_filename": "clippy_workspace_tests/subcrate/Cargo.toml"}, {"sha": "8b137891791fe96927ad78e64b0aad7bded08bdc", "filename": "tests/workspace_test/subcrate/src/lib.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/920e9f0c4b1aa0921d4dd5e22ea727a31dd8e2cc/tests%2Fworkspace_test%2Fsubcrate%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/920e9f0c4b1aa0921d4dd5e22ea727a31dd8e2cc/tests%2Fworkspace_test%2Fsubcrate%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fworkspace_test%2Fsubcrate%2Fsrc%2Flib.rs?ref=920e9f0c4b1aa0921d4dd5e22ea727a31dd8e2cc", "previous_filename": "clippy_workspace_tests/subcrate/src/lib.rs"}]}