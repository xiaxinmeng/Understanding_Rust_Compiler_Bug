{"sha": "df0e4bf911aecfa660dc2ad90573734dcd485e43", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRmMGU0YmY5MTFhZWNmYTY2MGRjMmFkOTA1NzM3MzRkY2Q0ODVlNDM=", "commit": {"author": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-09-26T11:24:10Z"}, "committer": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-09-26T11:24:10Z"}, "message": "Move `ensure_complete_parse` into `expand.rs`.", "tree": {"sha": "a2a017e1edd842be00a10a3ead8010e39131afaf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a2a017e1edd842be00a10a3ead8010e39131afaf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/df0e4bf911aecfa660dc2ad90573734dcd485e43", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/df0e4bf911aecfa660dc2ad90573734dcd485e43", "html_url": "https://github.com/rust-lang/rust/commit/df0e4bf911aecfa660dc2ad90573734dcd485e43", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/df0e4bf911aecfa660dc2ad90573734dcd485e43/comments", "author": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b90ceddcee2e7f4ed4236e6c52ddf8e585f3df6a", "url": "https://api.github.com/repos/rust-lang/rust/commits/b90ceddcee2e7f4ed4236e6c52ddf8e585f3df6a", "html_url": "https://github.com/rust-lang/rust/commit/b90ceddcee2e7f4ed4236e6c52ddf8e585f3df6a"}], "stats": {"total": 26, "additions": 12, "deletions": 14}, "files": [{"sha": "7c43f1f3076988afb454cea4d6b27cb09cbb4c2c", "filename": "src/libsyntax/ext/expand.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/df0e4bf911aecfa660dc2ad90573734dcd485e43/src%2Flibsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df0e4bf911aecfa660dc2ad90573734dcd485e43/src%2Flibsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fexpand.rs?ref=df0e4bf911aecfa660dc2ad90573734dcd485e43", "patch": "@@ -500,6 +500,18 @@ impl<'a> Parser<'a> {\n             ExpansionKind::Pat => Expansion::Pat(self.parse_pat()?),\n         })\n     }\n+\n+    pub fn ensure_complete_parse(&mut self, macro_name: ast::Name, kind_name: &str, span: Span) {\n+        if self.token != token::Eof {\n+            let msg = format!(\"macro expansion ignores token `{}` and any following\",\n+                              self.this_token_to_string());\n+            let mut err = self.diagnostic().struct_span_err(self.span, &msg);\n+            let msg = format!(\"caused by the macro expansion here; the usage \\\n+                               of `{}!` is likely invalid in {} context\",\n+                               macro_name, kind_name);\n+            err.span_note(span, &msg).emit();\n+        }\n+    }\n }\n \n struct InvocationCollector<'a, 'b: 'a> {"}, {"sha": "e83d003ab74dc04097d8884cdacd8feea53dd298", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/df0e4bf911aecfa660dc2ad90573734dcd485e43/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df0e4bf911aecfa660dc2ad90573734dcd485e43/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=df0e4bf911aecfa660dc2ad90573734dcd485e43", "patch": "@@ -6171,18 +6171,4 @@ impl<'a> Parser<'a> {\n             _ =>  Err(self.fatal(\"expected string literal\"))\n         }\n     }\n-\n-    pub fn ensure_complete_parse(&mut self, macro_name: ast::Name, kind_name: &str, span: Span) {\n-        if self.token == token::Eof {\n-            return\n-        }\n-\n-        let msg = format!(\"macro expansion ignores token `{}` and any following\",\n-                          self.this_token_to_string());\n-        let mut err = self.diagnostic().struct_span_err(self.span, &msg);\n-        let msg = format!(\"caused by the macro expansion here; the usage \\\n-                           of `{}!` is likely invalid in {} context\",\n-                           macro_name, kind_name);\n-        err.span_note(span, &msg).emit();\n-    }\n }"}]}