{"sha": "7c8ef301cabbbd74eba5342b7c5bb3a880869428", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdjOGVmMzAxY2FiYmJkNzRlYmE1MzQyYjdjNWJiM2E4ODA4Njk0Mjg=", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-07-01T19:32:35Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-07-01T19:32:35Z"}, "message": "Add ModuleOrItem guess to import granularity guessing", "tree": {"sha": "f5a7a50cdb54de8fc8d62edb13d2d8aea22fb66f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f5a7a50cdb54de8fc8d62edb13d2d8aea22fb66f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7c8ef301cabbbd74eba5342b7c5bb3a880869428", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7c8ef301cabbbd74eba5342b7c5bb3a880869428", "html_url": "https://github.com/rust-lang/rust/commit/7c8ef301cabbbd74eba5342b7c5bb3a880869428", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7c8ef301cabbbd74eba5342b7c5bb3a880869428/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3d2490ca97a038e97678f55a008627b4a395a8f7", "url": "https://api.github.com/repos/rust-lang/rust/commits/3d2490ca97a038e97678f55a008627b4a395a8f7", "html_url": "https://github.com/rust-lang/rust/commit/3d2490ca97a038e97678f55a008627b4a395a8f7"}], "stats": {"total": 33, "additions": 25, "deletions": 8}, "files": [{"sha": "226b9f8e9cbe2c0e233b137f0c68d3a9091486f2", "filename": "crates/ide_db/src/helpers/insert_use.rs", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/7c8ef301cabbbd74eba5342b7c5bb3a880869428/crates%2Fide_db%2Fsrc%2Fhelpers%2Finsert_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c8ef301cabbbd74eba5342b7c5bb3a880869428/crates%2Fide_db%2Fsrc%2Fhelpers%2Finsert_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Fhelpers%2Finsert_use.rs?ref=7c8ef301cabbbd74eba5342b7c5bb3a880869428", "patch": "@@ -145,14 +145,18 @@ impl ImportScope {\n                             let prefix_c = prev_prefix.qualifiers().count();\n                             let curr_c = curr_path.qualifiers().count() - prefix_c;\n                             let prev_c = prev_path.qualifiers().count() - prefix_c;\n-                            if curr_c <= 1 || prev_c <= 1 {\n-                                // Same prefix but no use tree lists so this has to be of item style.\n-                                break ImportGranularityGuess::Item; // this overwrites CrateOrModule, technically the file doesn't adhere to anything here.\n+                            if curr_c == 1 && prev_c == 1 {\n+                                // Same prefix, only differing in the last segment and no use tree lists so this has to be of item style.\n+                                break ImportGranularityGuess::Item;\n+                            } else {\n+                                // Same prefix and no use tree list but differs in more than one segment at the end. This might be module style still.\n+                                res = ImportGranularityGuess::ModuleOrItem;\n                             }\n+                        } else {\n+                            // Same prefix with item tree lists, has to be module style as it\n+                            // can't be crate style since the trees wouldn't share a prefix then.\n+                            break ImportGranularityGuess::Module;\n                         }\n-                        // Same prefix with item tree lists, has to be module style as it\n-                        // can't be crate style since the trees wouldn't share a prefix then.\n-                        break ImportGranularityGuess::Module;\n                     }\n                 }\n             }\n@@ -168,6 +172,7 @@ enum ImportGranularityGuess {\n     Unknown,\n     Item,\n     Module,\n+    ModuleOrItem,\n     Crate,\n     CrateOrModule,\n }\n@@ -186,6 +191,7 @@ pub fn insert_use<'a>(scope: &ImportScope, path: ast::Path, cfg: &InsertUseConfi\n             ImportGranularityGuess::Unknown => mb,\n             ImportGranularityGuess::Item => None,\n             ImportGranularityGuess::Module => Some(MergeBehavior::Module),\n+            ImportGranularityGuess::ModuleOrItem => mb.and(Some(MergeBehavior::Module)),\n             ImportGranularityGuess::Crate => Some(MergeBehavior::Crate),\n             ImportGranularityGuess::CrateOrModule => mb.or(Some(MergeBehavior::Crate)),\n         };"}, {"sha": "2e0153a180d5c4688c253910fddc54a90a0418e6", "filename": "crates/ide_db/src/helpers/insert_use/tests.rs", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/7c8ef301cabbbd74eba5342b7c5bb3a880869428/crates%2Fide_db%2Fsrc%2Fhelpers%2Finsert_use%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c8ef301cabbbd74eba5342b7c5bb3a880869428/crates%2Fide_db%2Fsrc%2Fhelpers%2Finsert_use%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Fhelpers%2Finsert_use%2Ftests.rs?ref=7c8ef301cabbbd74eba5342b7c5bb3a880869428", "patch": "@@ -743,12 +743,23 @@ use foo::bar::qux;\n \",\n         ImportGranularityGuess::Item,\n     );\n+}\n+\n+#[test]\n+fn guess_module_or_item() {\n     check_guess(\n         r\"\n use foo::bar::Bar;\n-use foo::baz;\n+use foo::qux;\n \",\n-        ImportGranularityGuess::Item,\n+        ImportGranularityGuess::ModuleOrItem,\n+    );\n+    check_guess(\n+        r\"\n+use foo::bar::Bar;\n+use foo::bar;\n+\",\n+        ImportGranularityGuess::ModuleOrItem,\n     );\n }\n "}]}