{"sha": "742d450783cb9c9e7faef0f2dc3f09c72f7ff217", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc0MmQ0NTA3ODNjYjljOWU3ZmFlZjBmMmRjM2YwOWM3MmY3ZmYyMTc=", "commit": {"author": {"name": "Michael Watzko", "email": "michael@watzko.de", "date": "2021-08-19T08:08:58Z"}, "committer": {"name": "Michael Watzko", "email": "michael@watzko.de", "date": "2021-08-19T08:08:58Z"}, "message": "Add and use saturating_div instead of impl inside Saturating", "tree": {"sha": "3539cc8293a1c6858887e316f2d95a5c08212558", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3539cc8293a1c6858887e316f2d95a5c08212558"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/742d450783cb9c9e7faef0f2dc3f09c72f7ff217", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/742d450783cb9c9e7faef0f2dc3f09c72f7ff217", "html_url": "https://github.com/rust-lang/rust/commit/742d450783cb9c9e7faef0f2dc3f09c72f7ff217", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/742d450783cb9c9e7faef0f2dc3f09c72f7ff217/comments", "author": {"login": "kellerkindt", "id": 1133787, "node_id": "MDQ6VXNlcjExMzM3ODc=", "avatar_url": "https://avatars.githubusercontent.com/u/1133787?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kellerkindt", "html_url": "https://github.com/kellerkindt", "followers_url": "https://api.github.com/users/kellerkindt/followers", "following_url": "https://api.github.com/users/kellerkindt/following{/other_user}", "gists_url": "https://api.github.com/users/kellerkindt/gists{/gist_id}", "starred_url": "https://api.github.com/users/kellerkindt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kellerkindt/subscriptions", "organizations_url": "https://api.github.com/users/kellerkindt/orgs", "repos_url": "https://api.github.com/users/kellerkindt/repos", "events_url": "https://api.github.com/users/kellerkindt/events{/privacy}", "received_events_url": "https://api.github.com/users/kellerkindt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kellerkindt", "id": 1133787, "node_id": "MDQ6VXNlcjExMzM3ODc=", "avatar_url": "https://avatars.githubusercontent.com/u/1133787?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kellerkindt", "html_url": "https://github.com/kellerkindt", "followers_url": "https://api.github.com/users/kellerkindt/followers", "following_url": "https://api.github.com/users/kellerkindt/following{/other_user}", "gists_url": "https://api.github.com/users/kellerkindt/gists{/gist_id}", "starred_url": "https://api.github.com/users/kellerkindt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kellerkindt/subscriptions", "organizations_url": "https://api.github.com/users/kellerkindt/orgs", "repos_url": "https://api.github.com/users/kellerkindt/repos", "events_url": "https://api.github.com/users/kellerkindt/events{/privacy}", "received_events_url": "https://api.github.com/users/kellerkindt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8049230852676cda16fe4fb443b4e2b99be87cf8", "url": "https://api.github.com/repos/rust-lang/rust/commits/8049230852676cda16fe4fb443b4e2b99be87cf8", "html_url": "https://github.com/rust-lang/rust/commit/8049230852676cda16fe4fb443b4e2b99be87cf8"}], "stats": {"total": 37, "additions": 27, "deletions": 10}, "files": [{"sha": "f5966a53ed26ecde0072e208341902a04f00da57", "filename": "library/core/src/num/int_macros.rs", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/742d450783cb9c9e7faef0f2dc3f09c72f7ff217/library%2Fcore%2Fsrc%2Fnum%2Fint_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/742d450783cb9c9e7faef0f2dc3f09c72f7ff217/library%2Fcore%2Fsrc%2Fnum%2Fint_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Fint_macros.rs?ref=742d450783cb9c9e7faef0f2dc3f09c72f7ff217", "patch": "@@ -918,6 +918,32 @@ macro_rules! int_impl {\n             }\n         }\n \n+        /// Saturating integer division. Computes `self / rhs`, saturating at the\n+        /// numeric bounds instead of overflowing.\n+        ///\n+        /// # Examples\n+        ///\n+        /// Basic usage:\n+        ///\n+        /// ```\n+        ///\n+        /// ```\n+        #[unstable(feature = \"saturating_int_impl\", issue = \"87920\")]\n+        #[rustc_const_unstable(feature = \"saturating_int_impl\", issue = \"87920\")]\n+        #[must_use = \"this returns the result of the operation, \\\n+                      without modifying the original\"]\n+        #[inline]\n+        pub const fn saturating_div(self, rhs: Self) -> Self {\n+            match self.checked_div(rhs) {\n+                Some(x) => x,\n+                None => if (self < 0) == (rhs < 0) {\n+                    Self::MAX\n+                } else {\n+                    Self::MIN\n+                }\n+            }\n+        }\n+\n         /// Saturating integer exponentiation. Computes `self.pow(exp)`,\n         /// saturating at the numeric bounds instead of overflowing.\n         ///"}, {"sha": "4b346409ebf0ba9ab2553b92b7f2885340863c8c", "filename": "library/core/src/num/saturating.rs", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/742d450783cb9c9e7faef0f2dc3f09c72f7ff217/library%2Fcore%2Fsrc%2Fnum%2Fsaturating.rs", "raw_url": "https://github.com/rust-lang/rust/raw/742d450783cb9c9e7faef0f2dc3f09c72f7ff217/library%2Fcore%2Fsrc%2Fnum%2Fsaturating.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Fsaturating.rs?ref=742d450783cb9c9e7faef0f2dc3f09c72f7ff217", "patch": "@@ -871,16 +871,7 @@ macro_rules! saturating_int_impl_signed {\n \n             #[inline]\n             fn div(self, other: Saturating<$t>) -> Saturating<$t> {\n-                let expected_signum = self.0.signum() * other.0.signum();\n-                let (result, overflowed) = self.0.overflowing_div(other.0);\n-\n-                if !overflowed {\n-                    Saturating(result)\n-                } else if expected_signum < 0 {\n-                    Saturating(<$t>::MIN)\n-                } else {\n-                    Saturating(<$t>::MAX)\n-                }\n+                Saturating(self.0.saturating_div(other.0))\n             }\n         }\n         forward_ref_binop! { impl Div, div for Saturating<$t>, Saturating<$t>,"}]}