{"sha": "7bfec89cf969aa630f184f7d4a66e8e12a423d2f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdiZmVjODljZjk2OWFhNjMwZjE4NGY3ZDRhNjZlOGUxMmE0MjNkMmY=", "commit": {"author": {"name": "Nick Spain", "email": "nicholas.spain@stileeducation.com", "date": "2021-01-01T06:26:39Z"}, "committer": {"name": "Nick Spain", "email": "nicholas.spain@stileeducation.com", "date": "2021-01-02T10:53:52Z"}, "message": "Make the result of Const, FunctionRender and TypeAliasRender constructors optional\n\nThey use source() which now returns an Option so they need to too.", "tree": {"sha": "33ec5670269ef176c903db752aaadb16314ecb9a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/33ec5670269ef176c903db752aaadb16314ecb9a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7bfec89cf969aa630f184f7d4a66e8e12a423d2f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7bfec89cf969aa630f184f7d4a66e8e12a423d2f", "html_url": "https://github.com/rust-lang/rust/commit/7bfec89cf969aa630f184f7d4a66e8e12a423d2f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7bfec89cf969aa630f184f7d4a66e8e12a423d2f/comments", "author": {"login": "nick96", "id": 9591268, "node_id": "MDQ6VXNlcjk1OTEyNjg=", "avatar_url": "https://avatars.githubusercontent.com/u/9591268?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nick96", "html_url": "https://github.com/nick96", "followers_url": "https://api.github.com/users/nick96/followers", "following_url": "https://api.github.com/users/nick96/following{/other_user}", "gists_url": "https://api.github.com/users/nick96/gists{/gist_id}", "starred_url": "https://api.github.com/users/nick96/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nick96/subscriptions", "organizations_url": "https://api.github.com/users/nick96/orgs", "repos_url": "https://api.github.com/users/nick96/repos", "events_url": "https://api.github.com/users/nick96/events{/privacy}", "received_events_url": "https://api.github.com/users/nick96/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nick96", "id": 9591268, "node_id": "MDQ6VXNlcjk1OTEyNjg=", "avatar_url": "https://avatars.githubusercontent.com/u/9591268?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nick96", "html_url": "https://github.com/nick96", "followers_url": "https://api.github.com/users/nick96/followers", "following_url": "https://api.github.com/users/nick96/following{/other_user}", "gists_url": "https://api.github.com/users/nick96/gists{/gist_id}", "starred_url": "https://api.github.com/users/nick96/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nick96/subscriptions", "organizations_url": "https://api.github.com/users/nick96/orgs", "repos_url": "https://api.github.com/users/nick96/repos", "events_url": "https://api.github.com/users/nick96/events{/privacy}", "received_events_url": "https://api.github.com/users/nick96/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3f1b3df65bee923e5de0652ea4b676530da29127", "url": "https://api.github.com/repos/rust-lang/rust/commits/3f1b3df65bee923e5de0652ea4b676530da29127", "html_url": "https://github.com/rust-lang/rust/commit/3f1b3df65bee923e5de0652ea4b676530da29127"}], "stats": {"total": 37, "additions": 17, "deletions": 20}, "files": [{"sha": "00c9e76f038e1871ccc3f2b86bc0623e3cf08fde", "filename": "crates/completion/src/completions.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/7bfec89cf969aa630f184f7d4a66e8e12a423d2f/crates%2Fcompletion%2Fsrc%2Fcompletions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bfec89cf969aa630f184f7d4a66e8e12a423d2f/crates%2Fcompletion%2Fsrc%2Fcompletions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcompletion%2Fsrc%2Fcompletions.rs?ref=7bfec89cf969aa630f184f7d4a66e8e12a423d2f", "patch": "@@ -106,8 +106,9 @@ impl Completions {\n         func: hir::Function,\n         local_name: Option<String>,\n     ) {\n-        let item = render_fn(RenderContext::new(ctx), None, local_name, func);\n-        self.add(item)\n+        if let Some(item) = render_fn(RenderContext::new(ctx), None, local_name, func) {\n+            self.add(item)\n+        }\n     }\n \n     pub(crate) fn add_variant_pat("}, {"sha": "ac0b2a5139ec4c8cfd9e0b3c11cf7e83abf5b8c9", "filename": "crates/completion/src/render.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7bfec89cf969aa630f184f7d4a66e8e12a423d2f/crates%2Fcompletion%2Fsrc%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bfec89cf969aa630f184f7d4a66e8e12a423d2f/crates%2Fcompletion%2Fsrc%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcompletion%2Fsrc%2Frender.rs?ref=7bfec89cf969aa630f184f7d4a66e8e12a423d2f", "patch": "@@ -157,8 +157,7 @@ impl<'a> Render<'a> {\n \n         let kind = match resolution {\n             ScopeDef::ModuleDef(Function(func)) => {\n-                let item = render_fn(self.ctx, import_to_add, Some(local_name), *func);\n-                return Some(item);\n+                return render_fn(self.ctx, import_to_add, Some(local_name), *func);\n             }\n             ScopeDef::ModuleDef(Variant(_))\n                 if self.ctx.completion.is_pat_binding_or_const"}, {"sha": "ce924f309526885c016b5f01a32b6109fc16411e", "filename": "crates/completion/src/render/const_.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/7bfec89cf969aa630f184f7d4a66e8e12a423d2f/crates%2Fcompletion%2Fsrc%2Frender%2Fconst_.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bfec89cf969aa630f184f7d4a66e8e12a423d2f/crates%2Fcompletion%2Fsrc%2Frender%2Fconst_.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcompletion%2Fsrc%2Frender%2Fconst_.rs?ref=7bfec89cf969aa630f184f7d4a66e8e12a423d2f", "patch": "@@ -15,7 +15,7 @@ pub(crate) fn render_const<'a>(\n     ctx: RenderContext<'a>,\n     const_: hir::Const,\n ) -> Option<CompletionItem> {\n-    ConstRender::new(ctx, const_).render()\n+    ConstRender::new(ctx, const_)?.render()\n }\n \n #[derive(Debug)]\n@@ -26,10 +26,9 @@ struct ConstRender<'a> {\n }\n \n impl<'a> ConstRender<'a> {\n-    fn new(ctx: RenderContext<'a>, const_: hir::Const) -> ConstRender<'a> {\n-        #[allow(deprecated)]\n-        let ast_node = const_.source_old(ctx.db()).value;\n-        ConstRender { ctx, const_, ast_node }\n+    fn new(ctx: RenderContext<'a>, const_: hir::Const) -> Option<ConstRender<'a>> {\n+        let ast_node = const_.source(ctx.db())?.value;\n+        Some(ConstRender { ctx, const_, ast_node })\n     }\n \n     fn render(self) -> Option<CompletionItem> {"}, {"sha": "081be14f4eb3b31203a950683e5fc2a08661e4a2", "filename": "crates/completion/src/render/function.rs", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/7bfec89cf969aa630f184f7d4a66e8e12a423d2f/crates%2Fcompletion%2Fsrc%2Frender%2Ffunction.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bfec89cf969aa630f184f7d4a66e8e12a423d2f/crates%2Fcompletion%2Fsrc%2Frender%2Ffunction.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcompletion%2Fsrc%2Frender%2Ffunction.rs?ref=7bfec89cf969aa630f184f7d4a66e8e12a423d2f", "patch": "@@ -14,9 +14,9 @@ pub(crate) fn render_fn<'a>(\n     import_to_add: Option<ImportEdit>,\n     local_name: Option<String>,\n     fn_: hir::Function,\n-) -> CompletionItem {\n+) -> Option<CompletionItem> {\n     let _p = profile::span(\"render_fn\");\n-    FunctionRender::new(ctx, local_name, fn_).render(import_to_add)\n+    Some(FunctionRender::new(ctx, local_name, fn_)?.render(import_to_add))\n }\n \n #[derive(Debug)]\n@@ -32,12 +32,11 @@ impl<'a> FunctionRender<'a> {\n         ctx: RenderContext<'a>,\n         local_name: Option<String>,\n         fn_: hir::Function,\n-    ) -> FunctionRender<'a> {\n+    ) -> Option<FunctionRender<'a>> {\n         let name = local_name.unwrap_or_else(|| fn_.name(ctx.db()).to_string());\n-        #[allow(deprecated)]\n-        let ast_node = fn_.source_old(ctx.db()).value;\n+        let ast_node = fn_.source(ctx.db())?.value;\n \n-        FunctionRender { ctx, name, func: fn_, ast_node }\n+        Some(FunctionRender { ctx, name, func: fn_, ast_node })\n     }\n \n     fn render(self, import_to_add: Option<ImportEdit>) -> CompletionItem {"}, {"sha": "69b445b9c69de6793e0f3b817e1f73746b9cbe1f", "filename": "crates/completion/src/render/type_alias.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/7bfec89cf969aa630f184f7d4a66e8e12a423d2f/crates%2Fcompletion%2Fsrc%2Frender%2Ftype_alias.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bfec89cf969aa630f184f7d4a66e8e12a423d2f/crates%2Fcompletion%2Fsrc%2Frender%2Ftype_alias.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcompletion%2Fsrc%2Frender%2Ftype_alias.rs?ref=7bfec89cf969aa630f184f7d4a66e8e12a423d2f", "patch": "@@ -15,7 +15,7 @@ pub(crate) fn render_type_alias<'a>(\n     ctx: RenderContext<'a>,\n     type_alias: hir::TypeAlias,\n ) -> Option<CompletionItem> {\n-    TypeAliasRender::new(ctx, type_alias).render()\n+    TypeAliasRender::new(ctx, type_alias)?.render()\n }\n \n #[derive(Debug)]\n@@ -26,10 +26,9 @@ struct TypeAliasRender<'a> {\n }\n \n impl<'a> TypeAliasRender<'a> {\n-    fn new(ctx: RenderContext<'a>, type_alias: hir::TypeAlias) -> TypeAliasRender<'a> {\n-        #[allow(deprecated)]\n-        let ast_node = type_alias.source_old(ctx.db()).value;\n-        TypeAliasRender { ctx, type_alias, ast_node }\n+    fn new(ctx: RenderContext<'a>, type_alias: hir::TypeAlias) -> Option<TypeAliasRender<'a>> {\n+        let ast_node = type_alias.source(ctx.db())?.value;\n+        Some(TypeAliasRender { ctx, type_alias, ast_node })\n     }\n \n     fn render(self) -> Option<CompletionItem> {"}]}