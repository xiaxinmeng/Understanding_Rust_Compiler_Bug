{"sha": "425736dc976f786ea1da6eb4e18064477f88c5bc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQyNTczNmRjOTc2Zjc4NmVhMWRhNmViNGUxODA2NDQ3N2Y4OGM1YmM=", "commit": {"author": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2019-06-03T03:08:15Z"}, "committer": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2019-06-04T21:43:15Z"}, "message": "Add a useful comment about this file.", "tree": {"sha": "82288ffd0bc5ca755136dcd35d1dc3e3ae838676", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/82288ffd0bc5ca755136dcd35d1dc3e3ae838676"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/425736dc976f786ea1da6eb4e18064477f88c5bc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/425736dc976f786ea1da6eb4e18064477f88c5bc", "html_url": "https://github.com/rust-lang/rust/commit/425736dc976f786ea1da6eb4e18064477f88c5bc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/425736dc976f786ea1da6eb4e18064477f88c5bc/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dc807a9f7ec02d425b4e3350a87b29f6cf7fa4ff", "url": "https://api.github.com/repos/rust-lang/rust/commits/dc807a9f7ec02d425b4e3350a87b29f6cf7fa4ff", "html_url": "https://github.com/rust-lang/rust/commit/dc807a9f7ec02d425b4e3350a87b29f6cf7fa4ff"}], "stats": {"total": 20, "additions": 20, "deletions": 0}, "files": [{"sha": "62a2d93a52e41875a7acf6b0ba1df798c9811c4c", "filename": "src/libsyntax_pos/hygiene.rs", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/425736dc976f786ea1da6eb4e18064477f88c5bc/src%2Flibsyntax_pos%2Fhygiene.rs", "raw_url": "https://github.com/rust-lang/rust/raw/425736dc976f786ea1da6eb4e18064477f88c5bc/src%2Flibsyntax_pos%2Fhygiene.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_pos%2Fhygiene.rs?ref=425736dc976f786ea1da6eb4e18064477f88c5bc", "patch": "@@ -5,6 +5,26 @@\n //! and definition contexts*. J. Funct. Program. 22, 2 (March 2012), 181-216.\n //! DOI=10.1017/S0956796812000093 <https://doi.org/10.1017/S0956796812000093>\n \n+// Hygiene data is stored in a global variable and accessed via TLS, which\n+// means that accesses are somewhat expensive. (`HygieneData::with`\n+// encapsulates a single access.) Therefore, on hot code paths it is worth\n+// ensuring that multiple HygieneData accesses are combined into a single\n+// `HygieneData::with`.\n+//\n+// This explains why `HygieneData`, `SyntaxContext` and `Mark` have interfaces\n+// with a certain amount of redundancy in them. For example,\n+// `SyntaxContext::outer_expn_info` combines `SyntaxContext::outer` and\n+// `Mark::expn_info` so that two `HygieneData` accesses can be performed within\n+// a single `HygieneData::with` call.\n+//\n+// It also explains why many functions appear in `HygieneData` and again in\n+// `SyntaxContext` or `Mark`. For example, `HygieneData::outer` and\n+// `SyntaxContext::outer` do the same thing, but the former is for use within a\n+// `HygieneData::with` call while the latter is for use outside such a call.\n+// When modifying this file it is important to understand this distinction,\n+// because getting it wrong can lead to nested `HygieneData::with` calls that\n+// trigger runtime aborts. (Fortunately these are obvious and easy to fix.)\n+\n use crate::GLOBALS;\n use crate::Span;\n use crate::edition::Edition;"}]}