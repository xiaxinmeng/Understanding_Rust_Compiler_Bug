{"sha": "07a704e31cf74deb28a15859b5adfe65ed709bf4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA3YTcwNGUzMWNmNzRkZWIyOGExNTg1OWI1YWRmZTY1ZWQ3MDliZjQ=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-09-12T19:18:57Z"}, "committer": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-09-12T19:18:57Z"}, "message": "Implement box pattern inference", "tree": {"sha": "ad9f3491f4a80bfff853b4ce89023cd40f62bbf7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ad9f3491f4a80bfff853b4ce89023cd40f62bbf7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/07a704e31cf74deb28a15859b5adfe65ed709bf4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/07a704e31cf74deb28a15859b5adfe65ed709bf4", "html_url": "https://github.com/rust-lang/rust/commit/07a704e31cf74deb28a15859b5adfe65ed709bf4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/07a704e31cf74deb28a15859b5adfe65ed709bf4/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2de6eb7bc852d096d2f09b7efe2469317bd86c9c", "url": "https://api.github.com/repos/rust-lang/rust/commits/2de6eb7bc852d096d2f09b7efe2469317bd86c9c", "html_url": "https://github.com/rust-lang/rust/commit/2de6eb7bc852d096d2f09b7efe2469317bd86c9c"}], "stats": {"total": 22, "additions": 20, "deletions": 2}, "files": [{"sha": "9ea3d529153b2df0046e4590441747fc846f3690", "filename": "crates/hir_def/src/body/lower.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/07a704e31cf74deb28a15859b5adfe65ed709bf4/crates%2Fhir_def%2Fsrc%2Fbody%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07a704e31cf74deb28a15859b5adfe65ed709bf4/crates%2Fhir_def%2Fsrc%2Fbody%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fbody%2Flower.rs?ref=07a704e31cf74deb28a15859b5adfe65ed709bf4", "patch": "@@ -835,8 +835,12 @@ impl ExprCollector<'_> {\n \n                 Pat::Missing\n             }\n+            ast::Pat::BoxPat(boxpat) => {\n+                let inner = self.collect_pat_opt(boxpat.pat());\n+                Pat::Box { inner }\n+            }\n             // FIXME: implement\n-            ast::Pat::BoxPat(_) | ast::Pat::RangePat(_) | ast::Pat::MacroPat(_) => Pat::Missing,\n+            ast::Pat::RangePat(_) | ast::Pat::MacroPat(_) => Pat::Missing,\n         };\n         let ptr = AstPtr::new(&pat);\n         self.alloc_pat(pattern, Either::Left(ptr))"}, {"sha": "dc975d42f825ddcb26aaadd249964f8eb7ebfe8d", "filename": "crates/hir_def/src/expr.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/07a704e31cf74deb28a15859b5adfe65ed709bf4/crates%2Fhir_def%2Fsrc%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07a704e31cf74deb28a15859b5adfe65ed709bf4/crates%2Fhir_def%2Fsrc%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fexpr.rs?ref=07a704e31cf74deb28a15859b5adfe65ed709bf4", "patch": "@@ -395,6 +395,7 @@ pub enum Pat {\n     Bind { mode: BindingAnnotation, name: Name, subpat: Option<PatId> },\n     TupleStruct { path: Option<Path>, args: Vec<PatId>, ellipsis: Option<usize> },\n     Ref { pat: PatId, mutability: Mutability },\n+    Box { inner: PatId },\n }\n \n impl Pat {\n@@ -415,6 +416,7 @@ impl Pat {\n             Pat::Record { args, .. } => {\n                 args.iter().map(|f| f.pat).for_each(f);\n             }\n+            Pat::Box { inner } => f(*inner),\n         }\n     }\n }"}, {"sha": "cde2ab82b6516068e55d534c6d580b0942ea5f72", "filename": "crates/hir_ty/src/infer/pat.rs", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/07a704e31cf74deb28a15859b5adfe65ed709bf4/crates%2Fhir_ty%2Fsrc%2Finfer%2Fpat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07a704e31cf74deb28a15859b5adfe65ed709bf4/crates%2Fhir_ty%2Fsrc%2Finfer%2Fpat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Finfer%2Fpat.rs?ref=07a704e31cf74deb28a15859b5adfe65ed709bf4", "patch": "@@ -209,6 +209,18 @@ impl<'a> InferenceContext<'a> {\n                 end_ty\n             }\n             Pat::Lit(expr) => self.infer_expr(*expr, &Expectation::has_type(expected.clone())),\n+            Pat::Box { inner } => match self.resolve_boxed_box() {\n+                Some(box_adt) => {\n+                    let inner_expected = match expected.as_adt() {\n+                        Some((adt, substs)) if adt == box_adt => substs.as_single(),\n+                        _ => &Ty::Unknown,\n+                    };\n+\n+                    let inner_ty = self.infer_pat(*inner, inner_expected, default_bm);\n+                    Ty::apply_one(TypeCtor::Adt(box_adt), inner_ty)\n+                }\n+                None => Ty::Unknown,\n+            },\n             Pat::Missing => Ty::Unknown,\n         };\n         // use a new type variable if we got Ty::Unknown here\n@@ -236,6 +248,6 @@ fn is_non_ref_pat(body: &hir_def::body::Body, pat: PatId) -> bool {\n             Expr::Literal(Literal::String(..)) => false,\n             _ => true,\n         },\n-        Pat::Wild | Pat::Bind { .. } | Pat::Ref { .. } | Pat::Missing => false,\n+        Pat::Wild | Pat::Bind { .. } | Pat::Ref { .. } | Pat::Box { .. } | Pat::Missing => false,\n     }\n }"}]}