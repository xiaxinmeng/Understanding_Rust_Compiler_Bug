{"sha": "f8ab649dfd8866e35e3281e04534fe024e4095f7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY4YWI2NDlkZmQ4ODY2ZTM1ZTMyODFlMDQ1MzRmZTAyNGU0MDk1Zjc=", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-01-19T19:02:05Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-02-13T20:14:58Z"}, "message": "Introduce query_storage.", "tree": {"sha": "d3b738f7d33e214f4d99dcfefe37c63daec1c32f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d3b738f7d33e214f4d99dcfefe37c63daec1c32f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f8ab649dfd8866e35e3281e04534fe024e4095f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f8ab649dfd8866e35e3281e04534fe024e4095f7", "html_url": "https://github.com/rust-lang/rust/commit/f8ab649dfd8866e35e3281e04534fe024e4095f7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f8ab649dfd8866e35e3281e04534fe024e4095f7/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4b42a6d90b850eb697a56bddb9e3239d7e5c72fb", "url": "https://api.github.com/repos/rust-lang/rust/commits/4b42a6d90b850eb697a56bddb9e3239d7e5c72fb", "html_url": "https://github.com/rust-lang/rust/commit/4b42a6d90b850eb697a56bddb9e3239d7e5c72fb"}], "stats": {"total": 15, "additions": 9, "deletions": 6}, "files": [{"sha": "dcfc116585b9ebb14b50038d0cdd9347df2f18f2", "filename": "compiler/rustc_middle/src/ty/query/plumbing.rs", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/f8ab649dfd8866e35e3281e04534fe024e4095f7/compiler%2Frustc_middle%2Fsrc%2Fty%2Fquery%2Fplumbing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8ab649dfd8866e35e3281e04534fe024e4095f7/compiler%2Frustc_middle%2Fsrc%2Fty%2Fquery%2Fplumbing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fquery%2Fplumbing.rs?ref=f8ab649dfd8866e35e3281e04534fe024e4095f7", "patch": "@@ -343,13 +343,16 @@ macro_rules! define_queries {\n             $(pub type $name<$tcx> = $V;)*\n         }\n         #[allow(nonstandard_style, unused_lifetimes)]\n+        pub mod query_storage {\n+            use super::*;\n+\n+            $(pub type $name<$tcx> = query_storage!([$($modifiers)*][$($K)*, $V]);)*\n+        }\n+        #[allow(nonstandard_style, unused_lifetimes)]\n         pub mod query_stored {\n             use super::*;\n \n-            $(pub type $name<$tcx> = <\n-                query_storage!([$($modifiers)*][$($K)*, $V])\n-                as QueryStorage\n-            >::Stored;)*\n+            $(pub type $name<$tcx> = <query_storage::$name<$tcx> as QueryStorage>::Stored;)*\n         }\n \n         $(impl<$tcx> QueryConfig for queries::$name<$tcx> {\n@@ -364,7 +367,7 @@ macro_rules! define_queries {\n             const EVAL_ALWAYS: bool = is_eval_always!([$($modifiers)*]);\n             const DEP_KIND: dep_graph::DepKind = dep_graph::DepKind::$name;\n \n-            type Cache = query_storage!([$($modifiers)*][$($K)*, $V]);\n+            type Cache = query_storage::$name<$tcx>;\n \n             #[inline(always)]\n             fn query_state<'a>(tcx: TyCtxt<$tcx>) -> &'a QueryState<crate::dep_graph::DepKind, <TyCtxt<$tcx> as QueryContext>::Query, Self::Cache> {\n@@ -523,7 +526,7 @@ macro_rules! define_queries_struct {\n             $($(#[$attr])*  $name: QueryState<\n                 crate::dep_graph::DepKind,\n                 <TyCtxt<$tcx> as QueryContext>::Query,\n-                <queries::$name<$tcx> as QueryAccessors<TyCtxt<'tcx>>>::Cache,\n+                query_storage::$name<$tcx>,\n             >,)*\n         }\n "}]}