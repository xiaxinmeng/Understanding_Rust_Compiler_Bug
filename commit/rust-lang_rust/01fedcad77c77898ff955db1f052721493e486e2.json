{"sha": "01fedcad77c77898ff955db1f052721493e486e2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAxZmVkY2FkNzdjNzc4OThmZjk1NWRiMWYwNTI3MjE0OTNlNDg2ZTI=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-16T06:07:23Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-16T09:07:42Z"}, "message": "rustdoc: Change parse_fn to take a vector of attributes", "tree": {"sha": "9e77fd482b9eb2a85204273390c5dfd9c494a317", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9e77fd482b9eb2a85204273390c5dfd9c494a317"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/01fedcad77c77898ff955db1f052721493e486e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/01fedcad77c77898ff955db1f052721493e486e2", "html_url": "https://github.com/rust-lang/rust/commit/01fedcad77c77898ff955db1f052721493e486e2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/01fedcad77c77898ff955db1f052721493e486e2/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d85fa7c8dc0af57b12c2e7f16e74e50412556d51", "url": "https://api.github.com/repos/rust-lang/rust/commits/d85fa7c8dc0af57b12c2e7f16e74e50412556d51", "html_url": "https://github.com/rust-lang/rust/commit/d85fa7c8dc0af57b12c2e7f16e74e50412556d51"}], "stats": {"total": 74, "additions": 40, "deletions": 34}, "files": [{"sha": "26d5849d2e521241969c6b2d1014e846539530fc", "filename": "src/rustdoc/attr_parser.rs", "status": "modified", "additions": 39, "deletions": 1, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/01fedcad77c77898ff955db1f052721493e486e2/src%2Frustdoc%2Fattr_parser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01fedcad77c77898ff955db1f052721493e486e2/src%2Frustdoc%2Fattr_parser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fattr_parser.rs?ref=01fedcad77c77898ff955db1f052721493e486e2", "patch": "@@ -1,5 +1,43 @@\n export parse_fn;\n \n+fn parse_fn(attrs: [ast::attribute]) -> doc::fndoc {\n+    let noargdocs = map::new_str_hash::<str>();\n+    let _fndoc = none;\n+    for attr: ast::attribute in attrs {\n+        alt attr.node.value.node {\n+            ast::meta_name_value(\n+                \"doc\", {node: ast::lit_str(value), span: _}) {\n+                _fndoc = some(~{\n+                    name: \"todo\",\n+                    brief: value,\n+                    desc: none,\n+                    return: none,\n+                    args: noargdocs\n+                });\n+            }\n+            ast::meta_list(\"doc\", docs) {\n+                _fndoc = some(\n+                    parse_fn_(docs));\n+            }\n+        }\n+    }\n+\n+    let _fndoc0 = alt _fndoc {\n+        some(_d) { _d }\n+        none. {\n+          ~{\n+              name: \"todo\",\n+              brief: \"_undocumented_\",\n+              desc: none,\n+              return: none,\n+              args: noargdocs\n+          }\n+        }\n+    };\n+\n+    ret _fndoc0;\n+}\n+\n #[doc(\n   brief = \"Parses function docs from a complex #[doc] attribute.\",\n   desc = \"Supported attributes:\n@@ -12,7 +50,7 @@ export parse_fn;\n   args(items = \"Doc attribute contents\"),\n   return = \"Parsed function docs.\"\n )]\n-fn parse_fn(items: [@ast::meta_item]) -> doc::fndoc {\n+fn parse_fn_(items: [@ast::meta_item]) -> doc::fndoc {\n     let brief = none;\n     let desc = none;\n     let return = none;"}, {"sha": "2f8f4b4991b0a12a935367434a740fd1782a227b", "filename": "src/rustdoc/rustdoc.rs", "status": "modified", "additions": 1, "deletions": 33, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/01fedcad77c77898ff955db1f052721493e486e2/src%2Frustdoc%2Frustdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01fedcad77c77898ff955db1f052721493e486e2/src%2Frustdoc%2Frustdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Frustdoc.rs?ref=01fedcad77c77898ff955db1f052721493e486e2", "patch": "@@ -28,39 +28,7 @@ type rustdoc = {\n        item = \"AST item to document\")\n )]\n fn doc_item(rd: rustdoc, item: @ast::item) {\n-    let _fndoc = none;\n-    let noargdocs = map::new_str_hash::<str>();\n-    for attr: ast::attribute in item.attrs {\n-        alt attr.node.value.node {\n-            ast::meta_name_value(\n-                \"doc\", {node: ast::lit_str(value), span: _}) {\n-                _fndoc = some(~{\n-                    name: \"todo\",\n-                    brief: value,\n-                    desc: none,\n-                    return: none,\n-                    args: noargdocs\n-                });\n-            }\n-            ast::meta_list(\"doc\", docs) {\n-                _fndoc = some(\n-                    attr_parser::parse_fn(docs));\n-            }\n-        }\n-    }\n-\n-    let _fndoc0 = alt _fndoc {\n-        some(_d) { _d }\n-        none. {\n-          ~{\n-              name: \"todo\",\n-              brief: \"_undocumented_\",\n-              desc: none,\n-              return: none,\n-              args: noargdocs\n-          }\n-        }\n-    };\n+    let _fndoc0 = attr_parser::parse_fn(item.attrs);\n \n     alt item.node {\n         ast::item_const(ty, expr) { }"}]}