{"sha": "5a374dc813c8c6a1d10b3c6cc7fdeaa9aafbcc65", "node_id": "C_kwDOAAsO6NoAKDVhMzc0ZGM4MTNjOGM2YTFkMTBiM2M2Y2M3ZmRlYWE5YWFmYmNjNjU", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-01-26T17:20:48Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-02-02T15:40:11Z"}, "message": "Add some tests to show what happens when you compare two opaque types that are both within the defining scope", "tree": {"sha": "886688e9b1f1a0ccea355e4dbb7336f584659a64", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/886688e9b1f1a0ccea355e4dbb7336f584659a64"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5a374dc813c8c6a1d10b3c6cc7fdeaa9aafbcc65", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5a374dc813c8c6a1d10b3c6cc7fdeaa9aafbcc65", "html_url": "https://github.com/rust-lang/rust/commit/5a374dc813c8c6a1d10b3c6cc7fdeaa9aafbcc65", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5a374dc813c8c6a1d10b3c6cc7fdeaa9aafbcc65/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cbfd7362924a97caef6e29dd5db7569764c8d507", "url": "https://api.github.com/repos/rust-lang/rust/commits/cbfd7362924a97caef6e29dd5db7569764c8d507", "html_url": "https://github.com/rust-lang/rust/commit/cbfd7362924a97caef6e29dd5db7569764c8d507"}], "stats": {"total": 64, "additions": 64, "deletions": 0}, "files": [{"sha": "eb8d24832eb43802d110658c225bc8dca7f79b93", "filename": "src/test/ui/impl-trait/two_tait_defining_each_other.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/5a374dc813c8c6a1d10b3c6cc7fdeaa9aafbcc65/src%2Ftest%2Fui%2Fimpl-trait%2Ftwo_tait_defining_each_other.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a374dc813c8c6a1d10b3c6cc7fdeaa9aafbcc65/src%2Ftest%2Fui%2Fimpl-trait%2Ftwo_tait_defining_each_other.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Ftwo_tait_defining_each_other.rs?ref=5a374dc813c8c6a1d10b3c6cc7fdeaa9aafbcc65", "patch": "@@ -0,0 +1,20 @@\n+#![feature(type_alias_impl_trait)]\n+\n+// check-pass\n+\n+type A = impl Foo;\n+type B = impl Foo;\n+\n+trait Foo {}\n+\n+fn muh(x: A) -> B {\n+    if false {\n+        return Bar; // B's hidden type is Bar\n+    }\n+    x // A's hidden type is `Bar`, because all the hidden types of `B` are compared with each other\n+}\n+\n+struct Bar;\n+impl Foo for Bar {}\n+\n+fn main() {}"}, {"sha": "88a76089b82d12d7025cfe64a0da7b1aca30b2a9", "filename": "src/test/ui/impl-trait/two_tait_defining_each_other2.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/5a374dc813c8c6a1d10b3c6cc7fdeaa9aafbcc65/src%2Ftest%2Fui%2Fimpl-trait%2Ftwo_tait_defining_each_other2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a374dc813c8c6a1d10b3c6cc7fdeaa9aafbcc65/src%2Ftest%2Fui%2Fimpl-trait%2Ftwo_tait_defining_each_other2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Ftwo_tait_defining_each_other2.rs?ref=5a374dc813c8c6a1d10b3c6cc7fdeaa9aafbcc65", "patch": "@@ -0,0 +1,16 @@\n+#![feature(type_alias_impl_trait)]\n+\n+type A = impl Foo;\n+//~^ ERROR could not find defining uses\n+type B = impl Foo;\n+\n+trait Foo {}\n+\n+fn muh(x: A) -> B {\n+    x // B's hidden type is A (opaquely)\n+}\n+\n+struct Bar;\n+impl Foo for Bar {}\n+\n+fn main() {}"}, {"sha": "5a0cff527b6e9655a497b96c54858955297f6c6d", "filename": "src/test/ui/impl-trait/two_tait_defining_each_other2.stderr", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5a374dc813c8c6a1d10b3c6cc7fdeaa9aafbcc65/src%2Ftest%2Fui%2Fimpl-trait%2Ftwo_tait_defining_each_other2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5a374dc813c8c6a1d10b3c6cc7fdeaa9aafbcc65/src%2Ftest%2Fui%2Fimpl-trait%2Ftwo_tait_defining_each_other2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Ftwo_tait_defining_each_other2.stderr?ref=5a374dc813c8c6a1d10b3c6cc7fdeaa9aafbcc65", "patch": "@@ -0,0 +1,8 @@\n+error: could not find defining uses\n+  --> $DIR/two_tait_defining_each_other2.rs:3:10\n+   |\n+LL | type A = impl Foo;\n+   |          ^^^^^^^^\n+\n+error: aborting due to previous error\n+"}, {"sha": "c289b43c4259f04e974a4b3462e18d5b2adf074c", "filename": "src/test/ui/impl-trait/two_tait_defining_each_other3.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/5a374dc813c8c6a1d10b3c6cc7fdeaa9aafbcc65/src%2Ftest%2Fui%2Fimpl-trait%2Ftwo_tait_defining_each_other3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a374dc813c8c6a1d10b3c6cc7fdeaa9aafbcc65/src%2Ftest%2Fui%2Fimpl-trait%2Ftwo_tait_defining_each_other3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Ftwo_tait_defining_each_other3.rs?ref=5a374dc813c8c6a1d10b3c6cc7fdeaa9aafbcc65", "patch": "@@ -0,0 +1,20 @@\n+#![feature(type_alias_impl_trait)]\n+\n+// check-pass\n+\n+type A = impl Foo;\n+type B = impl Foo;\n+\n+trait Foo {}\n+\n+fn muh(x: A) -> B {\n+    if false {\n+        return x;  // B's hidden type is A (opaquely)\n+    }\n+    Bar // A's hidden type is `Bar`, because all the return types are compared with each other\n+}\n+\n+struct Bar;\n+impl Foo for Bar {}\n+\n+fn main() {}"}]}