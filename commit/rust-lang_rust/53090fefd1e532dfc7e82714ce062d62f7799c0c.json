{"sha": "53090fefd1e532dfc7e82714ce062d62f7799c0c", "node_id": "C_kwDOAAsO6NoAKDUzMDkwZmVmZDFlNTMyZGZjN2U4MjcxNGNlMDYyZDYyZjc3OTljMGM", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-06-12T10:14:30Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-06-12T10:14:30Z"}, "message": "Rollup merge of #98012 - compiler-errors:poly-trait-refs-are-traits, r=cjgillot\n\n`ValuePairs::PolyTraitRefs` should be called \"trait\"s in type error diagnostics\n\nPretty simple, we already do this for `ValuePairs::TraitRefs`...", "tree": {"sha": "de706dd27f442cd8d7c5748c4f491c5b33870a41", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/de706dd27f442cd8d7c5748c4f491c5b33870a41"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/53090fefd1e532dfc7e82714ce062d62f7799c0c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJipbyGCRBK7hj4Ov3rIwAAWgUIAHh2ZkDuVtNvqSqQpoOd2JcH\nQ1dBa0/HVnUjahgLgR/UOJJnWhgxw7lYVHQv01fg7Yz+7hswMIXVHV2dppld3Tq2\n/iPgdY9riDd1xFbNJWpUmqsZ8EAiS1saaJ/ep+oBt5p41GqKE++mj2eXUfB+a2eD\n5D/ARFfnowDgMKBJHpTxE1te0kyT37DFAxdLa8p3NjhgVwL4u5J0kAtLk25ECasr\ntzDysnYbQLiLzO6xL3G4wcy0RboSlnhMGq/8WnTRBvgW9eVLlJvV/JQyFDGICx9b\ntqsntel5eHbmDfRVzhxznJqJgWlL4mmNTHuS/ZZsR8C9Nl7oprYwITvachjhAlg=\n=wRws\n-----END PGP SIGNATURE-----\n", "payload": "tree de706dd27f442cd8d7c5748c4f491c5b33870a41\nparent a24ca036601f0bba22cb73fa9e90893f26779b26\nparent acab4464f62e6c3ae3e93651c3f8e6baf725904c\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1655028870 +0200\ncommitter GitHub <noreply@github.com> 1655028870 +0200\n\nRollup merge of #98012 - compiler-errors:poly-trait-refs-are-traits, r=cjgillot\n\n`ValuePairs::PolyTraitRefs` should be called \"trait\"s in type error diagnostics\n\nPretty simple, we already do this for `ValuePairs::TraitRefs`...\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/53090fefd1e532dfc7e82714ce062d62f7799c0c", "html_url": "https://github.com/rust-lang/rust/commit/53090fefd1e532dfc7e82714ce062d62f7799c0c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/53090fefd1e532dfc7e82714ce062d62f7799c0c/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a24ca036601f0bba22cb73fa9e90893f26779b26", "url": "https://api.github.com/repos/rust-lang/rust/commits/a24ca036601f0bba22cb73fa9e90893f26779b26", "html_url": "https://github.com/rust-lang/rust/commit/a24ca036601f0bba22cb73fa9e90893f26779b26"}, {"sha": "acab4464f62e6c3ae3e93651c3f8e6baf725904c", "url": "https://api.github.com/repos/rust-lang/rust/commits/acab4464f62e6c3ae3e93651c3f8e6baf725904c", "html_url": "https://github.com/rust-lang/rust/commit/acab4464f62e6c3ae3e93651c3f8e6baf725904c"}], "stats": {"total": 60, "additions": 31, "deletions": 29}, "files": [{"sha": "3eeea7fdb13e22bfd09f37b664b60bc307b2ce45", "filename": "compiler/rustc_infer/src/infer/error_reporting/mod.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/53090fefd1e532dfc7e82714ce062d62f7799c0c/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/53090fefd1e532dfc7e82714ce062d62f7799c0c/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs?ref=53090fefd1e532dfc7e82714ce062d62f7799c0c", "patch": "@@ -1588,7 +1588,9 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n                             Mismatch::Variable(infer::ExpectedFound { expected, found }),\n                         )\n                     }\n-                    ValuePairs::TraitRefs(_) => (false, Mismatch::Fixed(\"trait\")),\n+                    ValuePairs::TraitRefs(_) | ValuePairs::PolyTraitRefs(_) => {\n+                        (false, Mismatch::Fixed(\"trait\"))\n+                    }\n                     _ => (false, Mismatch::Fixed(\"type\")),\n                 };\n                 let vals = match self.values_str(values) {"}, {"sha": "34ee4036cc56c8392940f9a0278359d8b81ca4dc", "filename": "src/test/ui/generator/resume-arg-late-bound.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/53090fefd1e532dfc7e82714ce062d62f7799c0c/src%2Ftest%2Fui%2Fgenerator%2Fresume-arg-late-bound.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/53090fefd1e532dfc7e82714ce062d62f7799c0c/src%2Ftest%2Fui%2Fgenerator%2Fresume-arg-late-bound.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerator%2Fresume-arg-late-bound.stderr?ref=53090fefd1e532dfc7e82714ce062d62f7799c0c", "patch": "@@ -4,8 +4,8 @@ error[E0308]: mismatched types\n LL |     test(gen);\n    |     ^^^^^^^^^ one type is more general than the other\n    |\n-   = note: expected type `for<'a> Generator<&'a mut bool>`\n-              found type `Generator<&mut bool>`\n+   = note: expected trait `for<'a> Generator<&'a mut bool>`\n+              found trait `Generator<&mut bool>`\n note: the lifetime requirement is introduced here\n   --> $DIR/resume-arg-late-bound.rs:8:17\n    |"}, {"sha": "1e2575116a85a4128084c755f182c3e79f245dfa", "filename": "src/test/ui/higher-rank-trait-bounds/normalize-under-binder/issue-71955.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/53090fefd1e532dfc7e82714ce062d62f7799c0c/src%2Ftest%2Fui%2Fhigher-rank-trait-bounds%2Fnormalize-under-binder%2Fissue-71955.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/53090fefd1e532dfc7e82714ce062d62f7799c0c/src%2Ftest%2Fui%2Fhigher-rank-trait-bounds%2Fnormalize-under-binder%2Fissue-71955.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhigher-rank-trait-bounds%2Fnormalize-under-binder%2Fissue-71955.stderr?ref=53090fefd1e532dfc7e82714ce062d62f7799c0c", "patch": "@@ -4,8 +4,8 @@ error[E0308]: mismatched types\n LL |     foo(bar, \"string\", |s| s.len() == 5);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ one type is more general than the other\n    |\n-   = note: expected type `for<'r, 's> FnOnce<(&'r &'s str,)>`\n-              found type `for<'r> FnOnce<(&'r &str,)>`\n+   = note: expected trait `for<'r, 's> FnOnce<(&'r &'s str,)>`\n+              found trait `for<'r> FnOnce<(&'r &str,)>`\n note: this closure does not fulfill the lifetime requirements\n   --> $DIR/issue-71955.rs:45:24\n    |\n@@ -23,8 +23,8 @@ error[E0308]: mismatched types\n LL |     foo(bar, \"string\", |s| s.len() == 5);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ one type is more general than the other\n    |\n-   = note: expected type `FnOnce<(&&str,)>`\n-              found type `for<'r> FnOnce<(&'r &str,)>`\n+   = note: expected trait `FnOnce<(&&str,)>`\n+              found trait `for<'r> FnOnce<(&'r &str,)>`\n note: this closure does not fulfill the lifetime requirements\n   --> $DIR/issue-71955.rs:45:24\n    |\n@@ -42,8 +42,8 @@ error[E0308]: mismatched types\n LL |     foo(baz, \"string\", |s| s.0.len() == 5);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ one type is more general than the other\n    |\n-   = note: expected type `for<'r, 's> FnOnce<(&'r Wrapper<'s>,)>`\n-              found type `for<'r> FnOnce<(&'r Wrapper<'_>,)>`\n+   = note: expected trait `for<'r, 's> FnOnce<(&'r Wrapper<'s>,)>`\n+              found trait `for<'r> FnOnce<(&'r Wrapper<'_>,)>`\n note: this closure does not fulfill the lifetime requirements\n   --> $DIR/issue-71955.rs:48:24\n    |\n@@ -61,8 +61,8 @@ error[E0308]: mismatched types\n LL |     foo(baz, \"string\", |s| s.0.len() == 5);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ one type is more general than the other\n    |\n-   = note: expected type `FnOnce<(&Wrapper<'_>,)>`\n-              found type `for<'r> FnOnce<(&'r Wrapper<'_>,)>`\n+   = note: expected trait `FnOnce<(&Wrapper<'_>,)>`\n+              found trait `for<'r> FnOnce<(&'r Wrapper<'_>,)>`\n note: this closure does not fulfill the lifetime requirements\n   --> $DIR/issue-71955.rs:48:24\n    |"}, {"sha": "7ea9345a668a84feb69f4655dab028c293462d6c", "filename": "src/test/ui/issues/issue-27942.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/53090fefd1e532dfc7e82714ce062d62f7799c0c/src%2Ftest%2Fui%2Fissues%2Fissue-27942.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/53090fefd1e532dfc7e82714ce062d62f7799c0c/src%2Ftest%2Fui%2Fissues%2Fissue-27942.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-27942.stderr?ref=53090fefd1e532dfc7e82714ce062d62f7799c0c", "patch": "@@ -4,8 +4,8 @@ error[E0308]: mismatched types\n LL |     fn select(&self) -> BufferViewHandle<R>;\n    |                         ^^^^^^^^^^^^^^^^^^^ lifetime mismatch\n    |\n-   = note: expected type `Resources<'_>`\n-              found type `Resources<'a>`\n+   = note: expected trait `Resources<'_>`\n+              found trait `Resources<'a>`\n note: the anonymous lifetime defined here...\n   --> $DIR/issue-27942.rs:5:15\n    |\n@@ -23,8 +23,8 @@ error[E0308]: mismatched types\n LL |     fn select(&self) -> BufferViewHandle<R>;\n    |                         ^^^^^^^^^^^^^^^^^^^ lifetime mismatch\n    |\n-   = note: expected type `Resources<'_>`\n-              found type `Resources<'a>`\n+   = note: expected trait `Resources<'_>`\n+              found trait `Resources<'a>`\n note: the lifetime `'a` as defined here...\n   --> $DIR/issue-27942.rs:3:18\n    |"}, {"sha": "6d8f2f5668321072fbfc30822ffa7836c0939cbe", "filename": "src/test/ui/lifetimes/issue-79187-2.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/53090fefd1e532dfc7e82714ce062d62f7799c0c/src%2Ftest%2Fui%2Flifetimes%2Fissue-79187-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/53090fefd1e532dfc7e82714ce062d62f7799c0c/src%2Ftest%2Fui%2Flifetimes%2Fissue-79187-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetimes%2Fissue-79187-2.stderr?ref=53090fefd1e532dfc7e82714ce062d62f7799c0c", "patch": "@@ -31,8 +31,8 @@ error[E0308]: mismatched types\n LL |     take_foo(|a| a);\n    |     ^^^^^^^^^^^^^^^ one type is more general than the other\n    |\n-   = note: expected type `for<'r> Fn<(&'r i32,)>`\n-              found type `Fn<(&i32,)>`\n+   = note: expected trait `for<'r> Fn<(&'r i32,)>`\n+              found trait `Fn<(&i32,)>`\n note: this closure does not fulfill the lifetime requirements\n   --> $DIR/issue-79187-2.rs:8:14\n    |"}, {"sha": "1d89d4dac5ed3a265ead3b3b6f0cb28533dfa308", "filename": "src/test/ui/lifetimes/issue-79187.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/53090fefd1e532dfc7e82714ce062d62f7799c0c/src%2Ftest%2Fui%2Flifetimes%2Fissue-79187.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/53090fefd1e532dfc7e82714ce062d62f7799c0c/src%2Ftest%2Fui%2Flifetimes%2Fissue-79187.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetimes%2Fissue-79187.stderr?ref=53090fefd1e532dfc7e82714ce062d62f7799c0c", "patch": "@@ -4,8 +4,8 @@ error[E0308]: mismatched types\n LL |     thing(f);\n    |     ^^^^^^^^ one type is more general than the other\n    |\n-   = note: expected type `for<'r> FnOnce<(&'r u32,)>`\n-              found type `FnOnce<(&u32,)>`\n+   = note: expected trait `for<'r> FnOnce<(&'r u32,)>`\n+              found trait `FnOnce<(&u32,)>`\n note: this closure does not fulfill the lifetime requirements\n   --> $DIR/issue-79187.rs:4:13\n    |"}, {"sha": "d82b2684cce58396bea267452aacb073a23640d5", "filename": "src/test/ui/lifetimes/lifetime-errors/issue_74400.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/53090fefd1e532dfc7e82714ce062d62f7799c0c/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fissue_74400.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/53090fefd1e532dfc7e82714ce062d62f7799c0c/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fissue_74400.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fissue_74400.stderr?ref=53090fefd1e532dfc7e82714ce062d62f7799c0c", "patch": "@@ -15,8 +15,8 @@ error[E0308]: mismatched types\n LL |     f(data, identity)\n    |     ^^^^^^^^^^^^^^^^^ one type is more general than the other\n    |\n-   = note: expected type `for<'r> Fn<(&'r T,)>`\n-              found type `Fn<(&T,)>`\n+   = note: expected trait `for<'r> Fn<(&'r T,)>`\n+              found trait `Fn<(&T,)>`\n note: the lifetime requirement is introduced here\n   --> $DIR/issue_74400.rs:8:34\n    |"}, {"sha": "c1a29dfc9339f140040ee2f74f9c07aed91f0409", "filename": "src/test/ui/mismatched_types/closure-mismatch.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/53090fefd1e532dfc7e82714ce062d62f7799c0c/src%2Ftest%2Fui%2Fmismatched_types%2Fclosure-mismatch.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/53090fefd1e532dfc7e82714ce062d62f7799c0c/src%2Ftest%2Fui%2Fmismatched_types%2Fclosure-mismatch.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Fclosure-mismatch.stderr?ref=53090fefd1e532dfc7e82714ce062d62f7799c0c", "patch": "@@ -13,8 +13,8 @@ error[E0308]: mismatched types\n LL |     baz(|_| ());\n    |     ^^^^^^^^^^^ one type is more general than the other\n    |\n-   = note: expected type `for<'r> Fn<(&'r (),)>`\n-              found type `Fn<(&(),)>`\n+   = note: expected trait `for<'r> Fn<(&'r (),)>`\n+              found trait `Fn<(&(),)>`\n note: this closure does not fulfill the lifetime requirements\n   --> $DIR/closure-mismatch.rs:8:9\n    |"}, {"sha": "b15a4cb110b7364e774055648d7456aba2dda4c4", "filename": "src/test/ui/rfc1623.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/53090fefd1e532dfc7e82714ce062d62f7799c0c/src%2Ftest%2Fui%2Frfc1623.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/53090fefd1e532dfc7e82714ce062d62f7799c0c/src%2Ftest%2Fui%2Frfc1623.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc1623.stderr?ref=53090fefd1e532dfc7e82714ce062d62f7799c0c", "patch": "@@ -4,17 +4,17 @@ error[E0308]: mismatched types\n LL |     f: &id,\n    |        ^^^ one type is more general than the other\n    |\n-   = note: expected type `for<'a, 'b> Fn<(&'a Foo<'b>,)>`\n-              found type `Fn<(&Foo<'_>,)>`\n+   = note: expected trait `for<'a, 'b> Fn<(&'a Foo<'b>,)>`\n+              found trait `Fn<(&Foo<'_>,)>`\n \n error[E0308]: mismatched types\n   --> $DIR/rfc1623.rs:28:8\n    |\n LL |     f: &id,\n    |        ^^^ one type is more general than the other\n    |\n-   = note: expected type `for<'a, 'b> Fn<(&'a Foo<'b>,)>`\n-              found type `Fn<(&Foo<'_>,)>`\n+   = note: expected trait `for<'a, 'b> Fn<(&'a Foo<'b>,)>`\n+              found trait `Fn<(&Foo<'_>,)>`\n \n error: implementation of `FnOnce` is not general enough\n   --> $DIR/rfc1623.rs:28:8"}, {"sha": "ed1cf1852e76ad632b6bc9f2caa5bce2e9dcf64b", "filename": "src/test/ui/type-alias-impl-trait/issue-57611-trait-alias.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/53090fefd1e532dfc7e82714ce062d62f7799c0c/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-57611-trait-alias.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/53090fefd1e532dfc7e82714ce062d62f7799c0c/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-57611-trait-alias.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-57611-trait-alias.stderr?ref=53090fefd1e532dfc7e82714ce062d62f7799c0c", "patch": "@@ -4,8 +4,8 @@ error[E0308]: mismatched types\n LL |         |x| x\n    |         ^^^^^ one type is more general than the other\n    |\n-   = note: expected type `for<'r> Fn<(&'r X,)>`\n-              found type `Fn<(&X,)>`\n+   = note: expected trait `for<'r> Fn<(&'r X,)>`\n+              found trait `Fn<(&X,)>`\n note: this closure does not fulfill the lifetime requirements\n   --> $DIR/issue-57611-trait-alias.rs:21:9\n    |"}]}