{"sha": "e8ab64e424a377cdb5d6373b10d4d6ed68e38f13", "node_id": "C_kwDOAAsO6NoAKGU4YWI2NGU0MjRhMzc3Y2RiNWQ2MzczYjEwZDRkNmVkNjhlMzhmMTM", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-07-17T03:44:37Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-07-17T12:18:55Z"}, "message": "make unused flags work like they used to", "tree": {"sha": "92976a88fbc9fc4aeb333769c98179454a85705d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/92976a88fbc9fc4aeb333769c98179454a85705d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e8ab64e424a377cdb5d6373b10d4d6ed68e38f13", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e8ab64e424a377cdb5d6373b10d4d6ed68e38f13", "html_url": "https://github.com/rust-lang/rust/commit/e8ab64e424a377cdb5d6373b10d4d6ed68e38f13", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e8ab64e424a377cdb5d6373b10d4d6ed68e38f13/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9782b7b039ce1fb585c933d8ce64610256399c59", "url": "https://api.github.com/repos/rust-lang/rust/commits/9782b7b039ce1fb585c933d8ce64610256399c59", "html_url": "https://github.com/rust-lang/rust/commit/9782b7b039ce1fb585c933d8ce64610256399c59"}], "stats": {"total": 18, "additions": 5, "deletions": 13}, "files": [{"sha": "5b39f2a48aae91981e0cbaee73453010383b4786", "filename": "src/shims/backtrace.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e8ab64e424a377cdb5d6373b10d4d6ed68e38f13/src%2Fshims%2Fbacktrace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8ab64e424a377cdb5d6373b10d4d6ed68e38f13/src%2Fshims%2Fbacktrace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fbacktrace.rs?ref=e8ab64e424a377cdb5d6373b10d4d6ed68e38f13", "patch": "@@ -104,8 +104,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n                 for (i, ptr) in ptrs.into_iter().enumerate() {\n                     let offset = ptr_layout.size * i.try_into().unwrap();\n \n-                    let op_place =\n-                        buf_place.offset(offset, ptr_layout, this)?;\n+                    let op_place = buf_place.offset(offset, ptr_layout, this)?;\n \n                     this.write_pointer(ptr, &op_place.into())?;\n                 }"}, {"sha": "28e60a68048cc98fcee322dac23bc220123ff85f", "filename": "src/shims/windows/foreign_items.rs", "status": "modified", "additions": 2, "deletions": 10, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e8ab64e424a377cdb5d6373b10d4d6ed68e38f13/src%2Fshims%2Fwindows%2Fforeign_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8ab64e424a377cdb5d6373b10d4d6ed68e38f13/src%2Fshims%2Fwindows%2Fforeign_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fwindows%2Fforeign_items.rs?ref=e8ab64e424a377cdb5d6373b10d4d6ed68e38f13", "patch": "@@ -152,21 +152,13 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n                     .collect();\n \n                 // Set page size.\n-                let page_size = system_info.offset(\n-                    field_offsets[2],\n-                    dword_layout,\n-                    &this.tcx,\n-                )?;\n+                let page_size = system_info.offset(field_offsets[2], dword_layout, &this.tcx)?;\n                 this.write_scalar(\n                     Scalar::from_int(PAGE_SIZE, dword_layout.size),\n                     &page_size.into(),\n                 )?;\n                 // Set number of processors.\n-                let num_cpus = system_info.offset(\n-                    field_offsets[6],\n-                    dword_layout,\n-                    &this.tcx,\n-                )?;\n+                let num_cpus = system_info.offset(field_offsets[6], dword_layout, &this.tcx)?;\n                 this.write_scalar(Scalar::from_int(NUM_CPUS, dword_layout.size), &num_cpus.into())?;\n             }\n "}, {"sha": "ec49e80ca9633b22d1bec076bd52296a3099d0f6", "filename": "tests/compiletest.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e8ab64e424a377cdb5d6373b10d4d6ed68e38f13/tests%2Fcompiletest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8ab64e424a377cdb5d6373b10d4d6ed68e38f13/tests%2Fcompiletest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompiletest.rs?ref=e8ab64e424a377cdb5d6373b10d4d6ed68e38f13", "patch": "@@ -19,9 +19,10 @@ fn run_tests(mode: Mode, path: &str, target: Option<String>) -> Result<()> {\n         // Less aggressive warnings to make the rustc toolstate management less painful.\n         // (We often get warnings when e.g. a feature gets stabilized or some lint gets added/improved.)\n         flags.push(\"-Astable-features\".to_owned());\n+        flags.push(\"-Aunused\".to_owned());\n     } else {\n         flags.push(\"-Dwarnings\".to_owned());\n-        flags.push(\"-Dunused\".to_owned()); // overwrite the -Aunused in compiletest-rs\n+        flags.push(\"-Dunused\".to_owned());\n     }\n     if let Ok(sysroot) = env::var(\"MIRI_SYSROOT\") {\n         flags.push(\"--sysroot\".to_string());"}]}