{"sha": "a1e94cdcd509779163eff165bd346f7f40607542", "node_id": "MDY6Q29tbWl0NzI0NzEyOmExZTk0Y2RjZDUwOTc3OTE2M2VmZjE2NWJkMzQ2ZjdmNDA2MDc1NDI=", "commit": {"author": {"name": "Daiki Ihara", "email": "sasurau4@gmail.com", "date": "2020-12-02T15:23:01Z"}, "committer": {"name": "Daiki Ihara", "email": "sasurau4@gmail.com", "date": "2020-12-04T13:17:06Z"}, "message": "Add long explanation for E0212\n\nUpdate compiler/rustc_error_codes/src/error_codes/E0212.md\n\nCo-authored-by: Joshua Nelson <joshua@yottadb.com>", "tree": {"sha": "6ef913d2af35792cd666a46c9571d1f75d0b03c3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6ef913d2af35792cd666a46c9571d1f75d0b03c3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a1e94cdcd509779163eff165bd346f7f40607542", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a1e94cdcd509779163eff165bd346f7f40607542", "html_url": "https://github.com/rust-lang/rust/commit/a1e94cdcd509779163eff165bd346f7f40607542", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a1e94cdcd509779163eff165bd346f7f40607542/comments", "author": {"login": "sasurau4", "id": 13580199, "node_id": "MDQ6VXNlcjEzNTgwMTk5", "avatar_url": "https://avatars.githubusercontent.com/u/13580199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sasurau4", "html_url": "https://github.com/sasurau4", "followers_url": "https://api.github.com/users/sasurau4/followers", "following_url": "https://api.github.com/users/sasurau4/following{/other_user}", "gists_url": "https://api.github.com/users/sasurau4/gists{/gist_id}", "starred_url": "https://api.github.com/users/sasurau4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sasurau4/subscriptions", "organizations_url": "https://api.github.com/users/sasurau4/orgs", "repos_url": "https://api.github.com/users/sasurau4/repos", "events_url": "https://api.github.com/users/sasurau4/events{/privacy}", "received_events_url": "https://api.github.com/users/sasurau4/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sasurau4", "id": 13580199, "node_id": "MDQ6VXNlcjEzNTgwMTk5", "avatar_url": "https://avatars.githubusercontent.com/u/13580199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sasurau4", "html_url": "https://github.com/sasurau4", "followers_url": "https://api.github.com/users/sasurau4/followers", "following_url": "https://api.github.com/users/sasurau4/following{/other_user}", "gists_url": "https://api.github.com/users/sasurau4/gists{/gist_id}", "starred_url": "https://api.github.com/users/sasurau4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sasurau4/subscriptions", "organizations_url": "https://api.github.com/users/sasurau4/orgs", "repos_url": "https://api.github.com/users/sasurau4/repos", "events_url": "https://api.github.com/users/sasurau4/events{/privacy}", "received_events_url": "https://api.github.com/users/sasurau4/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "36363e535a6efb56cc7ef57e5231f526843d3c68", "url": "https://api.github.com/repos/rust-lang/rust/commits/36363e535a6efb56cc7ef57e5231f526843d3c68", "html_url": "https://github.com/rust-lang/rust/commit/36363e535a6efb56cc7ef57e5231f526843d3c68"}], "stats": {"total": 37, "additions": 36, "deletions": 1}, "files": [{"sha": "fef6602b9ccbbc44664c343b092dafe3db417b8b", "filename": "compiler/rustc_error_codes/src/error_codes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a1e94cdcd509779163eff165bd346f7f40607542/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a1e94cdcd509779163eff165bd346f7f40607542/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes.rs?ref=a1e94cdcd509779163eff165bd346f7f40607542", "patch": "@@ -111,6 +111,7 @@ E0206: include_str!(\"./error_codes/E0206.md\"),\n E0207: include_str!(\"./error_codes/E0207.md\"),\n E0210: include_str!(\"./error_codes/E0210.md\"),\n E0211: include_str!(\"./error_codes/E0211.md\"),\n+E0212: include_str!(\"./error_codes/E0212.md\"),\n E0214: include_str!(\"./error_codes/E0214.md\"),\n E0220: include_str!(\"./error_codes/E0220.md\"),\n E0221: include_str!(\"./error_codes/E0221.md\"),\n@@ -503,7 +504,6 @@ E0779: include_str!(\"./error_codes/E0779.md\"),\n //  E0196, // cannot determine a type for this closure\n     E0208,\n //  E0209, // builtin traits can only be implemented on structs or enums\n-    E0212, // cannot extract an associated type from a higher-ranked trait bound\n //  E0213, // associated types are not accepted in this context\n //  E0215, // angle-bracket notation is not stable with `Fn`\n //  E0216, // parenthetical notation is only stable with `Fn`"}, {"sha": "17465414650b393f2e714f516a67e237561c18ce", "filename": "compiler/rustc_error_codes/src/error_codes/E0212.md", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/a1e94cdcd509779163eff165bd346f7f40607542/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0212.md", "raw_url": "https://github.com/rust-lang/rust/raw/a1e94cdcd509779163eff165bd346f7f40607542/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0212.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0212.md?ref=a1e94cdcd509779163eff165bd346f7f40607542", "patch": "@@ -0,0 +1,35 @@\n+Cannot use the associated type of\n+a trait with uninferred generic parameters.\n+\n+Erroneous code example:\n+\n+```compile_fail,E0212\n+pub trait Foo<T> {\n+    type A;\n+\n+    fn get(&self, t: T) -> Self::A;\n+}\n+\n+fn foo2<I : for<'x> Foo<&'x isize>>(\n+    field: I::A) {} // error!\n+```\n+\n+In this example, we have to instantiate `'x`, and\n+we don't know what lifetime to instantiate it with.\n+To fix this, spell out the precise lifetimes involved.\n+Example:\n+\n+```\n+pub trait Foo<T> {\n+    type A;\n+\n+    fn get(&self, t: T) -> Self::A;\n+}\n+\n+fn foo3<I : for<'x> Foo<&'x isize>>(\n+    x: <I as Foo<&isize>>::A) {} // ok!\n+\n+\n+fn foo4<'a, I : for<'x> Foo<&'x isize>>(\n+    x: <I as Foo<&'a isize>>::A) {} // ok!\n+```"}]}