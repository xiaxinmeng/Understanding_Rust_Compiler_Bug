{"sha": "78efb23586407878606e6582b7a23486c099d35e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc4ZWZiMjM1ODY0MDc4Nzg2MDZlNjU4MmI3YTIzNDg2YzA5OWQzNWU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-08-08T22:14:12Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-08-08T22:14:12Z"}, "message": "Auto merge of #43691 - GuillaumeGomez:fix-rustdoc, r=QuietMisdreavus\n\nFix rustdoc\n\nFixes #43625.\n\nr? @rust-lang/dev-tools\n\ncc @rust-lang/docs", "tree": {"sha": "af4574732a3344327b7ffad9cd9517e93a344c6b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/af4574732a3344327b7ffad9cd9517e93a344c6b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/78efb23586407878606e6582b7a23486c099d35e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/78efb23586407878606e6582b7a23486c099d35e", "html_url": "https://github.com/rust-lang/rust/commit/78efb23586407878606e6582b7a23486c099d35e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/78efb23586407878606e6582b7a23486c099d35e/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "215e0b10eac17e43f0132971f4e2dd018fc33d43", "url": "https://api.github.com/repos/rust-lang/rust/commits/215e0b10eac17e43f0132971f4e2dd018fc33d43", "html_url": "https://github.com/rust-lang/rust/commit/215e0b10eac17e43f0132971f4e2dd018fc33d43"}, {"sha": "ec0ca3a7c64c08dab44eb30f11b2b0870c4583ea", "url": "https://api.github.com/repos/rust-lang/rust/commits/ec0ca3a7c64c08dab44eb30f11b2b0870c4583ea", "html_url": "https://github.com/rust-lang/rust/commit/ec0ca3a7c64c08dab44eb30f11b2b0870c4583ea"}], "stats": {"total": 34, "additions": 25, "deletions": 9}, "files": [{"sha": "735c9d8af7a8a65ef5ad1440ffedb4c35041aac8", "filename": "src/librustdoc/html/markdown.rs", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/78efb23586407878606e6582b7a23486c099d35e/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78efb23586407878606e6582b7a23486c099d35e/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs?ref=78efb23586407878606e6582b7a23486c099d35e", "patch": "@@ -32,7 +32,6 @@ use std::ascii::AsciiExt;\n use std::cell::RefCell;\n use std::collections::{HashMap, VecDeque};\n use std::default::Default;\n-use std::ffi::CString;\n use std::fmt::{self, Write};\n use std::str;\n use syntax::feature_gate::UnstableFeatures;\n@@ -529,8 +528,8 @@ extern {\n     fn hoedown_document_free(md: *mut hoedown_document);\n \n     fn hoedown_buffer_new(unit: libc::size_t) -> *mut hoedown_buffer;\n-    fn hoedown_buffer_puts(b: *mut hoedown_buffer, c: *const libc::c_char);\n     fn hoedown_buffer_free(b: *mut hoedown_buffer);\n+    fn hoedown_buffer_put(b: *mut hoedown_buffer, c: *const u8, len: libc::size_t);\n }\n \n impl hoedown_buffer {\n@@ -620,8 +619,7 @@ pub fn render(w: &mut fmt::Formatter,\n                                Some(\"rust-example-rendered\"),\n                                None,\n                                playground_button.as_ref().map(String::as_str)));\n-                let output = CString::new(s).unwrap();\n-                hoedown_buffer_puts(ob, output.as_ptr());\n+                hoedown_buffer_put(ob, s.as_ptr(), s.len());\n             })\n         }\n     }\n@@ -630,7 +628,7 @@ pub fn render(w: &mut fmt::Formatter,\n                      level: libc::c_int, data: *const hoedown_renderer_data,\n                      _: libc::size_t) {\n         // hoedown does this, we may as well too\n-        unsafe { hoedown_buffer_puts(ob, \"\\n\\0\".as_ptr() as *const _); }\n+        unsafe { hoedown_buffer_put(ob, \"\\n\".as_ptr(), 1); }\n \n         // Extract the text provided\n         let s = if text.is_null() {\n@@ -681,8 +679,7 @@ pub fn render(w: &mut fmt::Formatter,\n                            <a href='#{id}'>{sec}{}</a></h{lvl}>\",\n                            s, lvl = level, id = id, sec = sec);\n \n-        let text = CString::new(text).unwrap();\n-        unsafe { hoedown_buffer_puts(ob, text.as_ptr()) }\n+        unsafe { hoedown_buffer_put(ob, text.as_ptr(), text.len()); }\n     }\n \n     extern fn codespan(\n@@ -700,8 +697,9 @@ pub fn render(w: &mut fmt::Formatter,\n         };\n \n         let content = format!(\"<code>{}</code>\", Escape(&content));\n-        let element = CString::new(content).unwrap();\n-        unsafe { hoedown_buffer_puts(ob, element.as_ptr()); }\n+        unsafe {\n+            hoedown_buffer_put(ob, content.as_ptr(), content.len());\n+        }\n         // Return anything except 0, which would mean \"also print the code span verbatim\".\n         1\n     }"}, {"sha": "2c9d07f190d265a537189c195b175c8733d14216", "filename": "src/test/rustdoc/nul-error.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/78efb23586407878606e6582b7a23486c099d35e/src%2Ftest%2Frustdoc%2Fnul-error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78efb23586407878606e6582b7a23486c099d35e/src%2Ftest%2Frustdoc%2Fnul-error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fnul-error.rs?ref=78efb23586407878606e6582b7a23486c099d35e", "patch": "@@ -0,0 +1,18 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// build-aux-docs\n+// ignore-cross-compile\n+\n+#![crate_name = \"foo\"]\n+\n+// @has foo/fn.foo.html '//code' ''\n+#[doc = \"Attempted to pass a string containing `\\0`\"]\n+pub fn foo() {}"}]}