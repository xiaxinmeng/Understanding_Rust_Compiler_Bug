{"sha": "9a2c8783d91624261317316f996d8d2d09b7b6a4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlhMmM4NzgzZDkxNjI0MjYxMzE3MzE2Zjk5NmQ4ZDJkMDliN2I2YTQ=", "commit": {"author": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-08-22T19:47:38Z"}, "committer": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-08-24T22:12:48Z"}, "message": "Use `#[prelude_import]` in `libstd`.", "tree": {"sha": "cb3ba15345b67689d4cbb5e62c441960611e5de1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cb3ba15345b67689d4cbb5e62c441960611e5de1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9a2c8783d91624261317316f996d8d2d09b7b6a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9a2c8783d91624261317316f996d8d2d09b7b6a4", "html_url": "https://github.com/rust-lang/rust/commit/9a2c8783d91624261317316f996d8d2d09b7b6a4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9a2c8783d91624261317316f996d8d2d09b7b6a4/comments", "author": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e2ad3be1787cdd36d52fcd2355225156f5460dc4", "url": "https://api.github.com/repos/rust-lang/rust/commits/e2ad3be1787cdd36d52fcd2355225156f5460dc4", "html_url": "https://github.com/rust-lang/rust/commit/e2ad3be1787cdd36d52fcd2355225156f5460dc4"}], "stats": {"total": 216, "additions": 11, "deletions": 205}, "files": [{"sha": "a063b85646809f3e2c89c7b58b24bf9c0699b8c5", "filename": "src/libstd/ascii.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fascii.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fascii.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fascii.rs?ref=9a2c8783d91624261317316f996d8d2d09b7b6a4", "patch": "@@ -12,8 +12,6 @@\n \n #![stable(feature = \"rust1\", since = \"1.0.0\")]\n \n-use prelude::v1::*;\n-\n use mem;\n use ops::Range;\n use iter::FusedIterator;\n@@ -454,7 +452,6 @@ static ASCII_UPPERCASE_MAP: [u8; 256] = [\n \n #[cfg(test)]\n mod tests {\n-    use prelude::v1::*;\n     use super::*;\n     use char::from_u32;\n "}, {"sha": "14da36ca4834e272dce558e8fdb2f49bbe0e44ac", "filename": "src/libstd/collections/hash/map.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs?ref=9a2c8783d91624261317316f996d8d2d09b7b6a4", "patch": "@@ -2059,8 +2059,6 @@ fn assert_covariance() {\n \n #[cfg(test)]\n mod test_map {\n-    use prelude::v1::*;\n-\n     use super::HashMap;\n     use super::Entry::{Occupied, Vacant};\n     use cell::RefCell;"}, {"sha": "ca5137e957362993a3ca3adc36bf0bab3c8fb91b", "filename": "src/libstd/collections/hash/set.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fcollections%2Fhash%2Fset.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fcollections%2Fhash%2Fset.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcollections%2Fhash%2Fset.rs?ref=9a2c8783d91624261317316f996d8d2d09b7b6a4", "patch": "@@ -1067,8 +1067,6 @@ fn assert_covariance() {\n \n #[cfg(test)]\n mod test_set {\n-    use prelude::v1::*;\n-\n     use super::HashSet;\n \n     #[test]"}, {"sha": "7a94c39621808865c513bf52a589a3f22ee87fd6", "filename": "src/libstd/env.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fenv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fenv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fenv.rs?ref=9a2c8783d91624261317316f996d8d2d09b7b6a4", "patch": "@@ -16,8 +16,6 @@\n \n #![stable(feature = \"env\", since = \"1.0.0\")]\n \n-use prelude::v1::*;\n-\n use error::Error;\n use ffi::{OsStr, OsString};\n use fmt;\n@@ -950,7 +948,6 @@ mod arch {\n \n #[cfg(test)]\n mod tests {\n-    use prelude::v1::*;\n     use super::*;\n \n     use iter::repeat;"}, {"sha": "44595361fb57c504cf7460f8f85e90e11534f6a8", "filename": "src/libstd/error.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ferror.rs?ref=9a2c8783d91624261317316f996d8d2d09b7b6a4", "patch": "@@ -48,16 +48,15 @@\n // reconsider what crate these items belong in.\n \n use any::TypeId;\n-use boxed::Box;\n use cell;\n use char;\n use fmt::{self, Debug, Display};\n-use marker::{Send, Sync, Reflect};\n+use marker::Reflect;\n use mem::transmute;\n use num;\n use raw::TraitObject;\n use str;\n-use string::{self, String};\n+use string;\n \n /// Base functionality for all errors in Rust.\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -454,7 +453,6 @@ impl Error + Send + Sync {\n \n #[cfg(test)]\n mod tests {\n-    use prelude::v1::*;\n     use super::Error;\n     use fmt;\n "}, {"sha": "38222c014f61b165d5eec6f1f159f477a158479a", "filename": "src/libstd/ffi/c_str.rs", "status": "modified", "additions": 2, "deletions": 10, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fffi%2Fc_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fffi%2Fc_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fffi%2Fc_str.rs?ref=9a2c8783d91624261317316f996d8d2d09b7b6a4", "patch": "@@ -9,25 +9,18 @@\n // except according to those terms.\n \n use ascii;\n-use borrow::{Cow, ToOwned, Borrow};\n-use boxed::Box;\n-use convert::{Into, From};\n-use cmp::{PartialEq, Eq, PartialOrd, Ord, Ordering};\n+use borrow::{Cow, Borrow};\n+use cmp::Ordering;\n use error::Error;\n use fmt::{self, Write};\n use io;\n-use iter::Iterator;\n use libc;\n use mem;\n use memchr;\n use ops;\n-use option::Option::{self, Some, None};\n use os::raw::c_char;\n-use result::Result::{self, Ok, Err};\n use slice;\n use str::{self, Utf8Error};\n-use string::String;\n-use vec::Vec;\n \n /// A type representing an owned C-compatible string\n ///\n@@ -700,7 +693,6 @@ impl AsRef<CStr> for CString {\n \n #[cfg(test)]\n mod tests {\n-    use prelude::v1::*;\n     use super::*;\n     use os::raw::c_char;\n     use borrow::Cow::{Borrowed, Owned};"}, {"sha": "36cf4ef758d8e40d7d1d512d11ab7176f67d0216", "filename": "src/libstd/ffi/os_str.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fffi%2Fos_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fffi%2Fos_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fffi%2Fos_str.rs?ref=9a2c8783d91624261317316f996d8d2d09b7b6a4", "patch": "@@ -8,14 +8,12 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use borrow::{Borrow, Cow, ToOwned};\n+use borrow::{Borrow, Cow};\n use fmt::{self, Debug};\n use mem;\n-use string::String;\n use ops;\n use cmp;\n use hash::{Hash, Hasher};\n-use vec::Vec;\n \n use sys::os_str::{Buf, Slice};\n use sys_common::{AsInner, IntoInner, FromInner};"}, {"sha": "f2374e722c1e38013f527544e630a2c6068eb424", "filename": "src/libstd/fs.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ffs.rs?ref=9a2c8783d91624261317316f996d8d2d09b7b6a4", "patch": "@@ -23,7 +23,6 @@ use io::{self, SeekFrom, Seek, Read, Write};\n use path::{Path, PathBuf};\n use sys::fs as fs_imp;\n use sys_common::{AsInnerMut, FromInner, AsInner, IntoInner};\n-use vec::Vec;\n use time::SystemTime;\n \n /// A reference to an open file on the filesystem.\n@@ -1677,7 +1676,6 @@ impl AsInnerMut<fs_imp::DirBuilder> for DirBuilder {\n \n #[cfg(test)]\n mod tests {\n-    use prelude::v1::*;\n     use io::prelude::*;\n \n     use fs::{self, File, OpenOptions};"}, {"sha": "a26a932ad2de6c076f9d3d0720ce4135802aebf1", "filename": "src/libstd/io/buffered.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fio%2Fbuffered.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fio%2Fbuffered.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fbuffered.rs?ref=9a2c8783d91624261317316f996d8d2d09b7b6a4", "patch": "@@ -10,7 +10,6 @@\n \n //! Buffering wrappers for I/O traits\n \n-use prelude::v1::*;\n use io::prelude::*;\n \n use marker::Reflect;\n@@ -788,7 +787,6 @@ impl<W: Write> fmt::Debug for LineWriter<W> where W: fmt::Debug {\n \n #[cfg(test)]\n mod tests {\n-    use prelude::v1::*;\n     use io::prelude::*;\n     use io::{self, BufReader, BufWriter, LineWriter, SeekFrom};\n     use sync::atomic::{AtomicUsize, Ordering};"}, {"sha": "1b836b745372f00ed8189a6b4e2b956b1c5e5e12", "filename": "src/libstd/io/cursor.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fio%2Fcursor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fio%2Fcursor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fcursor.rs?ref=9a2c8783d91624261317316f996d8d2d09b7b6a4", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use prelude::v1::*;\n use io::prelude::*;\n \n use cmp;\n@@ -284,7 +283,6 @@ impl Write for Cursor<Box<[u8]>> {\n mod tests {\n     use io::prelude::*;\n     use io::{Cursor, SeekFrom};\n-    use vec::Vec;\n \n     #[test]\n     fn test_vec_writer() {"}, {"sha": "d90be2e08a9fc6dec04ea0f7a2ca4f03cf486924", "filename": "src/libstd/io/error.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fio%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fio%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Ferror.rs?ref=9a2c8783d91624261317316f996d8d2d09b7b6a4", "patch": "@@ -8,12 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use boxed::Box;\n-use convert::Into;\n use error;\n use fmt;\n-use marker::{Send, Sync};\n-use option::Option::{self, Some, None};\n use result;\n use sys;\n \n@@ -522,7 +518,6 @@ fn _assert_error_is_sync_send() {\n \n #[cfg(test)]\n mod test {\n-    use prelude::v1::*;\n     use super::{Error, ErrorKind};\n     use error;\n     use fmt;"}, {"sha": "cd05e6b5de9d25262a13d6d16a943967c86bd3f5", "filename": "src/libstd/io/impls.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fio%2Fimpls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fio%2Fimpls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fimpls.rs?ref=9a2c8783d91624261317316f996d8d2d09b7b6a4", "patch": "@@ -8,13 +8,10 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use boxed::Box;\n use cmp;\n use io::{self, SeekFrom, Read, Write, Seek, BufRead, Error, ErrorKind};\n use fmt;\n use mem;\n-use string::String;\n-use vec::Vec;\n \n // =============================================================================\n // Forwarding implementations\n@@ -228,7 +225,6 @@ impl Write for Vec<u8> {\n #[cfg(test)]\n mod tests {\n     use io::prelude::*;\n-    use vec::Vec;\n     use test;\n \n     #[bench]"}, {"sha": "ce205c3b11ca5ee14542e5c208189320152d20c1", "filename": "src/libstd/io/lazy.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fio%2Flazy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fio%2Flazy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Flazy.rs?ref=9a2c8783d91624261317316f996d8d2d09b7b6a4", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use prelude::v1::*;\n-\n use cell::Cell;\n use ptr;\n use sync::Arc;"}, {"sha": "1053792cd439bc4ef414f507a66973451f4ec51d", "filename": "src/libstd/io/mod.rs", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fio%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fio%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fmod.rs?ref=9a2c8783d91624261317316f996d8d2d09b7b6a4", "patch": "@@ -253,15 +253,8 @@ use cmp;\n use rustc_unicode::str as core_str;\n use error as std_error;\n use fmt;\n-use iter::{Iterator};\n-use marker::Sized;\n-use ops::{Drop, FnOnce};\n-use option::Option::{self, Some, None};\n-use result::Result::{Ok, Err};\n use result;\n-use string::String;\n use str;\n-use vec::Vec;\n use memchr;\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -1734,7 +1727,6 @@ impl<B: BufRead> Iterator for Lines<B> {\n \n #[cfg(test)]\n mod tests {\n-    use prelude::v1::*;\n     use io::prelude::*;\n     use io;\n     use super::Cursor;"}, {"sha": "9a782e95f6e5f994fd2cabe77cd59512a99ef90f", "filename": "src/libstd/io/stdio.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fio%2Fstdio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fio%2Fstdio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fstdio.rs?ref=9a2c8783d91624261317316f996d8d2d09b7b6a4", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use prelude::v1::*;\n use io::prelude::*;\n \n use cell::{RefCell, BorrowState};"}, {"sha": "2c6880281b5e60088b36c6497ba747056b19fab9", "filename": "src/libstd/io/util.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fio%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fio%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Futil.rs?ref=9a2c8783d91624261317316f996d8d2d09b7b6a4", "patch": "@@ -167,8 +167,6 @@ impl Write for Sink {\n \n #[cfg(test)]\n mod tests {\n-    use prelude::v1::*;\n-\n     use io::prelude::*;\n     use io::{copy, sink, empty, repeat};\n "}, {"sha": "9a8cd0c712f0620bde91f425ba5bcd48c6b1b058", "filename": "src/libstd/lib.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flib.rs?ref=9a2c8783d91624261317316f996d8d2d09b7b6a4", "patch": "@@ -252,6 +252,7 @@\n #![feature(optin_builtin_traits)]\n #![feature(panic_unwind)]\n #![feature(placement_in_syntax)]\n+#![feature(prelude_import)]\n #![feature(question_mark)]\n #![feature(rand)]\n #![feature(raw)]\n@@ -292,6 +293,10 @@\n #![allow(unused_features)] // std may use features in a platform-specific way\n #![cfg_attr(not(stage0), deny(warnings))]\n \n+#[prelude_import]\n+#[allow(unused)]\n+use prelude::v1::*;\n+\n #[cfg(test)] extern crate test;\n \n // We want to reexport a few macros from core but libcore has already been"}, {"sha": "d0b59b42c1798a73a2ca56e75d553849ea5a9672", "filename": "src/libstd/net/addr.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fnet%2Faddr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fnet%2Faddr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnet%2Faddr.rs?ref=9a2c8783d91624261317316f996d8d2d09b7b6a4", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use prelude::v1::*;\n-\n use fmt;\n use hash;\n use io;\n@@ -523,7 +521,6 @@ impl<'a, T: ToSocketAddrs + ?Sized> ToSocketAddrs for &'a T {\n \n #[cfg(test)]\n mod tests {\n-    use prelude::v1::*;\n     use net::*;\n     use net::test::{tsa, sa6, sa4};\n "}, {"sha": "c6a7a77e68a6b369c4cfd06f33e1cb67d7a95d1a", "filename": "src/libstd/net/ip.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fnet%2Fip.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fnet%2Fip.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnet%2Fip.rs?ref=9a2c8783d91624261317316f996d8d2d09b7b6a4", "patch": "@@ -653,7 +653,6 @@ impl From<[u8; 16]> for Ipv6Addr {\n // Tests for this module\n #[cfg(test)]\n mod tests {\n-    use prelude::v1::*;\n     use net::*;\n     use net::Ipv6MulticastScope::*;\n     use net::test::{tsa, sa6, sa4};"}, {"sha": "2a78afa85f7f03ff9ce7cbe7b3ffa59c307ee6fd", "filename": "src/libstd/net/mod.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fnet%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fnet%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnet%2Fmod.rs?ref=9a2c8783d91624261317316f996d8d2d09b7b6a4", "patch": "@@ -12,8 +12,6 @@\n \n #![stable(feature = \"rust1\", since = \"1.0.0\")]\n \n-use prelude::v1::*;\n-\n use io::{self, Error, ErrorKind};\n use sys_common::net as net_imp;\n "}, {"sha": "854d87c4cbead7114f36996d18db46c8bf1c4bf9", "filename": "src/libstd/net/parser.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fnet%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fnet%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnet%2Fparser.rs?ref=9a2c8783d91624261317316f996d8d2d09b7b6a4", "patch": "@@ -13,8 +13,6 @@\n //! This module is \"publicly exported\" through the `FromStr` implementations\n //! below.\n \n-use prelude::v1::*;\n-\n use error::Error;\n use fmt;\n use net::{IpAddr, Ipv4Addr, Ipv6Addr, SocketAddr, SocketAddrV4, SocketAddrV6};"}, {"sha": "dcd3652af876b43d61881ee95f627cb8115d781d", "filename": "src/libstd/net/tcp.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fnet%2Ftcp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fnet%2Ftcp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnet%2Ftcp.rs?ref=9a2c8783d91624261317316f996d8d2d09b7b6a4", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use prelude::v1::*;\n use io::prelude::*;\n \n use fmt;\n@@ -438,8 +437,6 @@ impl fmt::Debug for TcpListener {\n \n #[cfg(test)]\n mod tests {\n-    use prelude::v1::*;\n-\n     use io::ErrorKind;\n     use io::prelude::*;\n     use net::*;"}, {"sha": "98ac61f6461132d94f320d11ba31b7bb516803c4", "filename": "src/libstd/net/test.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fnet%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fnet%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnet%2Ftest.rs?ref=9a2c8783d91624261317316f996d8d2d09b7b6a4", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use prelude::v1::*;\n-\n use env;\n use net::{SocketAddr, SocketAddrV4, SocketAddrV6, Ipv4Addr, Ipv6Addr, ToSocketAddrs};\n use sync::atomic::{AtomicUsize, Ordering};"}, {"sha": "781f026c12c7795e1b2c82fae0506c5b40d8b566", "filename": "src/libstd/net/udp.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fnet%2Fudp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fnet%2Fudp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnet%2Fudp.rs?ref=9a2c8783d91624261317316f996d8d2d09b7b6a4", "patch": "@@ -355,8 +355,6 @@ impl fmt::Debug for UdpSocket {\n \n #[cfg(test)]\n mod tests {\n-    use prelude::v1::*;\n-\n     use io::ErrorKind;\n     use net::*;\n     use net::test::{next_test_ip4, next_test_ip6};"}, {"sha": "d1c2fc3d3fce9371a3584bf88f07f120834f139c", "filename": "src/libstd/num/mod.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fnum%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fnum%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnum%2Fmod.rs?ref=9a2c8783d91624261317316f996d8d2d09b7b6a4", "patch": "@@ -24,9 +24,7 @@ pub use core::num::{FpCategory, ParseIntError, ParseFloatError, TryFromIntError}\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub use core::num::Wrapping;\n \n-#[cfg(test)] use cmp::PartialEq;\n #[cfg(test)] use fmt;\n-#[cfg(test)] use marker::Copy;\n #[cfg(test)] use ops::{Add, Sub, Mul, Div, Rem};\n \n /// Helper function for testing numeric operations\n@@ -52,7 +50,6 @@ mod tests {\n     use u32;\n     use u64;\n     use usize;\n-    use string::ToString;\n     use ops::Mul;\n \n     #[test]\n@@ -287,7 +284,6 @@ mod tests {\n mod bench {\n     extern crate test;\n     use self::test::Bencher;\n-    use prelude::v1::*;\n \n     #[bench]\n     fn bench_pow_function(b: &mut Bencher) {"}, {"sha": "47f594a9b0c1efe0494e15098d8848f89433a164", "filename": "src/libstd/panic.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fpanic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fpanic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fpanic.rs?ref=9a2c8783d91624261317316f996d8d2d09b7b6a4", "patch": "@@ -13,7 +13,6 @@\n #![stable(feature = \"std_panic\", since = \"1.9.0\")]\n \n use any::Any;\n-use boxed::Box;\n use cell::UnsafeCell;\n use ops::{Deref, DerefMut};\n use panicking;"}, {"sha": "0c10dcbdad6463c613cacaf6d378b5f37c132823", "filename": "src/libstd/panicking.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fpanicking.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fpanicking.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fpanicking.rs?ref=9a2c8783d91624261317316f996d8d2d09b7b6a4", "patch": "@@ -17,7 +17,6 @@\n //! * Executing a panic up to doing the actual implementation\n //! * Shims around \"try\"\n \n-use prelude::v1::*;\n use io::prelude::*;\n \n use any::Any;"}, {"sha": "67219b6fd1b9c1479466f8b099d2cdb55d9381b3", "filename": "src/libstd/path.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fpath.rs?ref=9a2c8783d91624261317316f996d8d2d09b7b6a4", "patch": "@@ -100,7 +100,7 @@\n #![stable(feature = \"rust1\", since = \"1.0.0\")]\n \n use ascii::*;\n-use borrow::{Borrow, ToOwned, Cow};\n+use borrow::{Borrow, Cow};\n use cmp;\n use error::Error;\n use fmt;\n@@ -110,8 +110,6 @@ use io;\n use iter::{self, FusedIterator};\n use mem;\n use ops::{self, Deref};\n-use string::String;\n-use vec::Vec;\n \n use ffi::{OsStr, OsString};\n \n@@ -2152,8 +2150,6 @@ impl Error for StripPrefixError {\n #[cfg(test)]\n mod tests {\n     use super::*;\n-    use string::{ToString, String};\n-    use vec::Vec;\n \n     macro_rules! t(\n         ($path:expr, iter: $iter:expr) => ("}, {"sha": "f0c4443070074aa3318f11605b11ba8abebf8b97", "filename": "src/libstd/process.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fprocess.rs?ref=9a2c8783d91624261317316f996d8d2d09b7b6a4", "patch": "@@ -12,7 +12,6 @@\n \n #![stable(feature = \"process\", since = \"1.0.0\")]\n \n-use prelude::v1::*;\n use io::prelude::*;\n \n use ffi::OsStr;\n@@ -810,7 +809,6 @@ pub fn exit(code: i32) -> ! {\n \n #[cfg(test)]\n mod tests {\n-    use prelude::v1::*;\n     use io::prelude::*;\n \n     use io::ErrorKind;"}, {"sha": "e3de1efaa31e3051457741b68523d92c37a3ea53", "filename": "src/libstd/rt.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Frt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Frt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt.rs?ref=9a2c8783d91624261317316f996d8d2d09b7b6a4", "patch": "@@ -30,7 +30,6 @@ pub use panicking::{begin_panic, begin_panic_fmt, update_panic_count};\n #[cfg(not(test))]\n #[lang = \"start\"]\n fn lang_start(main: *const u8, argc: isize, argv: *const *const u8) -> isize {\n-    use borrow::ToOwned;\n     use mem;\n     use panic;\n     use sys;"}, {"sha": "ac0f400379e3cabf3504a10b496426774e2c0659", "filename": "src/libstd/sync/barrier.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsync%2Fbarrier.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsync%2Fbarrier.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Fbarrier.rs?ref=9a2c8783d91624261317316f996d8d2d09b7b6a4", "patch": "@@ -113,8 +113,6 @@ impl BarrierWaitResult {\n \n #[cfg(test)]\n mod tests {\n-    use prelude::v1::*;\n-\n     use sync::{Arc, Barrier};\n     use sync::mpsc::{channel, TryRecvError};\n     use thread;"}, {"sha": "1f480f6d4a987e09ac6dc429e3f454579472ec11", "filename": "src/libstd/sync/condvar.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsync%2Fcondvar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsync%2Fcondvar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Fcondvar.rs?ref=9a2c8783d91624261317316f996d8d2d09b7b6a4", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use prelude::v1::*;\n-\n use sync::atomic::{AtomicUsize, Ordering};\n use sync::{mutex, MutexGuard, PoisonError};\n use sys_common::condvar as sys;\n@@ -245,8 +243,6 @@ impl Drop for Condvar {\n \n #[cfg(test)]\n mod tests {\n-    use prelude::v1::*;\n-\n     use sync::mpsc::channel;\n     use sync::{Condvar, Mutex, Arc};\n     use thread;"}, {"sha": "0f9ef6fabb005eb06f6f5fb307fed95c38b6a300", "filename": "src/libstd/sync/mpsc/blocking.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsync%2Fmpsc%2Fblocking.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsync%2Fmpsc%2Fblocking.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Fmpsc%2Fblocking.rs?ref=9a2c8783d91624261317316f996d8d2d09b7b6a4", "patch": "@@ -13,9 +13,7 @@\n use thread::{self, Thread};\n use sync::atomic::{AtomicBool, Ordering};\n use sync::Arc;\n-use marker::{Sync, Send};\n use mem;\n-use clone::Clone;\n use time::Instant;\n \n struct Inner {"}, {"sha": "3d9f81413dc734202b1e8a6df174ed35703b2d2b", "filename": "src/libstd/sync/mpsc/mod.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsync%2Fmpsc%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsync%2Fmpsc%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Fmpsc%2Fmod.rs?ref=9a2c8783d91624261317316f996d8d2d09b7b6a4", "patch": "@@ -1270,8 +1270,6 @@ impl error::Error for TryRecvError {\n \n #[cfg(test)]\n mod tests {\n-    use prelude::v1::*;\n-\n     use env;\n     use super::*;\n     use thread;\n@@ -1946,8 +1944,6 @@ mod tests {\n \n #[cfg(test)]\n mod sync_tests {\n-    use prelude::v1::*;\n-\n     use env;\n     use thread;\n     use super::*;"}, {"sha": "d926043fbbcd074e37fae9807f07b6a34cbfcce8", "filename": "src/libstd/sync/mpsc/mpsc_queue.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsync%2Fmpsc%2Fmpsc_queue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsync%2Fmpsc%2Fmpsc_queue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Fmpsc%2Fmpsc_queue.rs?ref=9a2c8783d91624261317316f996d8d2d09b7b6a4", "patch": "@@ -148,8 +148,6 @@ impl<T> Drop for Queue<T> {\n \n #[cfg(test)]\n mod tests {\n-    use prelude::v1::*;\n-\n     use sync::mpsc::channel;\n     use super::{Queue, Data, Empty, Inconsistent};\n     use sync::Arc;"}, {"sha": "677544d335e7a6d21df49c81402042a5a85374fc", "filename": "src/libstd/sync/mpsc/select.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsync%2Fmpsc%2Fselect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsync%2Fmpsc%2Fselect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Fmpsc%2Fselect.rs?ref=9a2c8783d91624261317316f996d8d2d09b7b6a4", "patch": "@@ -369,8 +369,6 @@ impl<'rx, T:Send+'rx> fmt::Debug for Handle<'rx, T> {\n #[cfg(test)]\n #[allow(unused_imports)]\n mod tests {\n-    use prelude::v1::*;\n-\n     use thread;\n     use sync::mpsc::*;\n "}, {"sha": "724d7b1be730d59953620950ffa5ca20f55b5172", "filename": "src/libstd/sync/mpsc/spsc_queue.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsync%2Fmpsc%2Fspsc_queue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsync%2Fmpsc%2Fspsc_queue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Fmpsc%2Fspsc_queue.rs?ref=9a2c8783d91624261317316f996d8d2d09b7b6a4", "patch": "@@ -233,8 +233,6 @@ impl<T> Drop for Queue<T> {\n \n #[cfg(test)]\n mod tests {\n-    use prelude::v1::*;\n-\n     use sync::Arc;\n     use super::Queue;\n     use thread;"}, {"sha": "9985daaba8f69a2eac4772cf2c91e11517b0f077", "filename": "src/libstd/sync/mpsc/sync.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsync%2Fmpsc%2Fsync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsync%2Fmpsc%2Fsync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Fmpsc%2Fsync.rs?ref=9a2c8783d91624261317316f996d8d2d09b7b6a4", "patch": "@@ -36,7 +36,6 @@\n pub use self::Failure::*;\n use self::Blocker::*;\n \n-use vec::Vec;\n use core::mem;\n use core::ptr;\n "}, {"sha": "c8ae88c233106461b12dd1f161c1c4af738d1244", "filename": "src/libstd/sync/mutex.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsync%2Fmutex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsync%2Fmutex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Fmutex.rs?ref=9a2c8783d91624261317316f996d8d2d09b7b6a4", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use prelude::v1::*;\n-\n use cell::UnsafeCell;\n use fmt;\n use marker;\n@@ -355,8 +353,6 @@ pub fn guard_poison<'a, T: ?Sized>(guard: &MutexGuard<'a, T>) -> &'a poison::Fla\n \n #[cfg(test)]\n mod tests {\n-    use prelude::v1::*;\n-\n     use sync::mpsc::channel;\n     use sync::{Arc, Mutex, Condvar};\n     use sync::atomic::{AtomicUsize, Ordering};"}, {"sha": "86d2986959c999abee5e10c3761f16f4fa0253fc", "filename": "src/libstd/sync/once.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsync%2Fonce.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsync%2Fonce.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Fonce.rs?ref=9a2c8783d91624261317316f996d8d2d09b7b6a4", "patch": "@@ -369,8 +369,6 @@ impl OnceState {\n \n #[cfg(test)]\n mod tests {\n-    use prelude::v1::*;\n-\n     use panic;\n     use sync::mpsc::channel;\n     use thread;"}, {"sha": "4801bcffd081c69751c652c42e316229acb79a9f", "filename": "src/libstd/sync/rwlock.rs", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsync%2Frwlock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsync%2Frwlock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Frwlock.rs?ref=9a2c8783d91624261317316f996d8d2d09b7b6a4", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use prelude::v1::*;\n-\n use cell::UnsafeCell;\n use fmt;\n use marker;\n@@ -385,8 +383,6 @@ impl<'a, T: ?Sized> Drop for RwLockWriteGuard<'a, T> {\n mod tests {\n     #![allow(deprecated)] // rand\n \n-    use prelude::v1::*;\n-\n     use rand::{self, Rng};\n     use sync::mpsc::channel;\n     use thread;\n@@ -552,8 +548,6 @@ mod tests {\n \n     #[test]\n     fn test_rwlock_try_write() {\n-        use mem::drop;\n-\n         let lock = RwLock::new(0isize);\n         let read_guard = lock.read().unwrap();\n "}, {"sha": "fad2c277da417f8f27fa1fe9687e2d949d2929d9", "filename": "src/libstd/sys/common/args.rs", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsys%2Fcommon%2Fargs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsys%2Fcommon%2Fargs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fcommon%2Fargs.rs?ref=9a2c8783d91624261317316f996d8d2d09b7b6a4", "patch": "@@ -21,8 +21,6 @@\n \n #![allow(dead_code)] // different code on OSX/linux/etc\n \n-use vec::Vec;\n-\n /// One-time global initialization.\n pub unsafe fn init(argc: isize, argv: *const *const u8) { imp::init(argc, argv) }\n \n@@ -42,8 +40,6 @@ pub fn clone() -> Option<Vec<Vec<u8>>> { imp::clone() }\n           target_os = \"solaris\",\n           target_os = \"emscripten\"))]\n mod imp {\n-    use prelude::v1::*;\n-\n     use libc::c_char;\n     use mem;\n     use ffi::CStr;\n@@ -91,8 +87,6 @@ mod imp {\n           target_os = \"ios\",\n           target_os = \"windows\"))]\n mod imp {\n-    use vec::Vec;\n-\n     pub unsafe fn init(_argc: isize, _argv: *const *const u8) {\n     }\n "}, {"sha": "ce6fd4cb0754b1cc9297b4a97394b08aebc1356c", "filename": "src/libstd/sys/common/at_exit_imp.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsys%2Fcommon%2Fat_exit_imp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsys%2Fcommon%2Fat_exit_imp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fcommon%2Fat_exit_imp.rs?ref=9a2c8783d91624261317316f996d8d2d09b7b6a4", "patch": "@@ -13,10 +13,8 @@\n //! Documentation can be found on the `rt::at_exit` function.\n \n use alloc::boxed::FnBox;\n-use boxed::Box;\n use ptr;\n use sys_common::mutex::Mutex;\n-use vec::Vec;\n \n type Queue = Vec<Box<FnBox()>>;\n "}, {"sha": "c1d1792363d7073cecc8bcc70225db09ff1e7019", "filename": "src/libstd/sys/common/backtrace.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsys%2Fcommon%2Fbacktrace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsys%2Fcommon%2Fbacktrace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fcommon%2Fbacktrace.rs?ref=9a2c8783d91624261317316f996d8d2d09b7b6a4", "patch": "@@ -191,7 +191,6 @@ pub fn demangle(writer: &mut Write, s: &str) -> io::Result<()> {\n \n #[cfg(test)]\n mod tests {\n-    use prelude::v1::*;\n     use sys_common;\n     macro_rules! t { ($a:expr, $b:expr) => ({\n         let mut m = Vec::new();"}, {"sha": "3cd70eddb858c1d0f8566855ff2fb0aca5fa478c", "filename": "src/libstd/sys/common/io.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsys%2Fcommon%2Fio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsys%2Fcommon%2Fio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fcommon%2Fio.rs?ref=9a2c8783d91624261317316f996d8d2d09b7b6a4", "patch": "@@ -7,7 +7,6 @@\n // <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n-use prelude::v1::*;\n use io;\n use io::ErrorKind;\n use io::Read;\n@@ -53,7 +52,6 @@ pub unsafe fn read_to_end_uninitialized(r: &mut Read, buf: &mut Vec<u8>) -> io::\n \n #[cfg(test)]\n pub mod test {\n-    use prelude::v1::*;\n     use path::{Path, PathBuf};\n     use env;\n     use rand::{self, Rng};\n@@ -93,7 +91,6 @@ pub mod test {\n \n #[cfg(test)]\n mod tests {\n-    use prelude::v1::*;\n     use io::prelude::*;\n     use super::*;\n     use io;"}, {"sha": "d1ca676510714d1548ae005c08fc4e10d523f90f", "filename": "src/libstd/sys/common/mod.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsys%2Fcommon%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsys%2Fcommon%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fcommon%2Fmod.rs?ref=9a2c8783d91624261317316f996d8d2d09b7b6a4", "patch": "@@ -10,7 +10,6 @@\n \n #![allow(missing_docs)]\n \n-use boxed::Box;\n use sync::Once;\n use sys;\n "}, {"sha": "d1a738770d3893fb66189c036009fd62375984db", "filename": "src/libstd/sys/common/mutex.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsys%2Fcommon%2Fmutex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsys%2Fcommon%2Fmutex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fcommon%2Fmutex.rs?ref=9a2c8783d91624261317316f996d8d2d09b7b6a4", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use marker::Sync;\n use sys::mutex as imp;\n \n /// An OS-based mutual exclusion lock."}, {"sha": "a777cfe35e56d4125a9a565584ae96ebc1fca11a", "filename": "src/libstd/sys/common/net.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsys%2Fcommon%2Fnet.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsys%2Fcommon%2Fnet.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fcommon%2Fnet.rs?ref=9a2c8783d91624261317316f996d8d2d09b7b6a4", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use prelude::v1::*;\n-\n use cmp;\n use ffi::CString;\n use fmt;\n@@ -608,8 +606,6 @@ impl fmt::Debug for UdpSocket {\n \n #[cfg(test)]\n mod tests {\n-    use prelude::v1::*;\n-\n     use super::*;\n     use collections::HashMap;\n "}, {"sha": "cbdeaad7f6bd3acfbff16c2cb7fa25ab688f904a", "filename": "src/libstd/sys/common/remutex.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsys%2Fcommon%2Fremutex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsys%2Fcommon%2Fremutex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fcommon%2Fremutex.rs?ref=9a2c8783d91624261317316f996d8d2d09b7b6a4", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use prelude::v1::*;\n-\n use fmt;\n use marker;\n use ops::Deref;\n@@ -160,7 +158,6 @@ impl<'a, T> Drop for ReentrantMutexGuard<'a, T> {\n \n #[cfg(test)]\n mod tests {\n-    use prelude::v1::*;\n     use sys_common::remutex::{ReentrantMutex, ReentrantMutexGuard};\n     use cell::RefCell;\n     use sync::Arc;"}, {"sha": "3ee160da5fa5b7876ab1a2c957b77c9cc3aa75f8", "filename": "src/libstd/sys/common/thread.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsys%2Fcommon%2Fthread.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsys%2Fcommon%2Fthread.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fcommon%2Fthread.rs?ref=9a2c8783d91624261317316f996d8d2d09b7b6a4", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use prelude::v1::*;\n-\n use alloc::boxed::FnBox;\n use libc;\n use sys::stack_overflow;"}, {"sha": "95d8b6cc9516d2e3e5573863d9287ed65d70e105", "filename": "src/libstd/sys/common/thread_info.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsys%2Fcommon%2Fthread_info.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsys%2Fcommon%2Fthread_info.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fcommon%2Fthread_info.rs?ref=9a2c8783d91624261317316f996d8d2d09b7b6a4", "patch": "@@ -11,7 +11,6 @@\n #![allow(dead_code)] // stack_guard isn't used right now on all platforms\n \n use cell::RefCell;\n-use string::String;\n use thread::Thread;\n use thread::LocalKeyState;\n "}, {"sha": "25a9d5720d9338bfb14ed8dba43bd03edaf36362", "filename": "src/libstd/sys/common/thread_local.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsys%2Fcommon%2Fthread_local.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsys%2Fcommon%2Fthread_local.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fcommon%2Fthread_local.rs?ref=9a2c8783d91624261317316f996d8d2d09b7b6a4", "patch": "@@ -233,7 +233,6 @@ impl Drop for Key {\n \n #[cfg(test)]\n mod tests {\n-    use prelude::v1::*;\n     use super::{Key, StaticKey};\n \n     fn assert_sync<T: Sync>() {}"}, {"sha": "8d357aa78c9e93568b91f508ea373052a523b58d", "filename": "src/libstd/sys/common/wtf8.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsys%2Fcommon%2Fwtf8.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsys%2Fcommon%2Fwtf8.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fcommon%2Fwtf8.rs?ref=9a2c8783d91624261317316f996d8d2d09b7b6a4", "patch": "@@ -37,9 +37,7 @@ use mem;\n use ops;\n use slice;\n use str;\n-use string::String;\n use sys_common::AsInner;\n-use vec::Vec;\n \n const UTF8_REPLACEMENT_CHARACTER: &'static [u8] = b\"\\xEF\\xBF\\xBD\";\n \n@@ -807,7 +805,6 @@ impl AsciiExt for Wtf8 {\n \n #[cfg(test)]\n mod tests {\n-    use prelude::v1::*;\n     use borrow::Cow;\n     use super::*;\n "}, {"sha": "d59b4fc0b70b8032a961d9123da86e7b5c2276ac", "filename": "src/libstd/sys/unix/ext/ffi.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsys%2Funix%2Fext%2Fffi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsys%2Funix%2Fext%2Fffi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fext%2Fffi.rs?ref=9a2c8783d91624261317316f996d8d2d09b7b6a4", "patch": "@@ -14,7 +14,6 @@\n \n use ffi::{OsStr, OsString};\n use mem;\n-use prelude::v1::*;\n use sys::os_str::Buf;\n use sys_common::{FromInner, IntoInner, AsInner};\n "}, {"sha": "3f93fce1935611f236f611d3eb5ed9652617d851", "filename": "src/libstd/sys/unix/ext/net.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsys%2Funix%2Fext%2Fnet.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsys%2Funix%2Fext%2Fnet.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fext%2Fnet.rs?ref=9a2c8783d91624261317316f996d8d2d09b7b6a4", "patch": "@@ -14,7 +14,6 @@\n \n use libc;\n \n-use prelude::v1::*;\n use ascii;\n use ffi::OsStr;\n use fmt;\n@@ -789,7 +788,6 @@ impl IntoRawFd for UnixDatagram {\n \n #[cfg(test)]\n mod test {\n-    use prelude::v1::*;\n     use thread;\n     use io;\n     use io::prelude::*;"}, {"sha": "5bd92f2eb574d7a85281000626fb72bcd1baf99c", "filename": "src/libstd/sys/unix/ext/process.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsys%2Funix%2Fext%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsys%2Funix%2Fext%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fext%2Fprocess.rs?ref=9a2c8783d91624261317316f996d8d2d09b7b6a4", "patch": "@@ -12,8 +12,6 @@\n \n #![stable(feature = \"rust1\", since = \"1.0.0\")]\n \n-use prelude::v1::*;\n-\n use io;\n use os::unix::io::{FromRawFd, RawFd, AsRawFd, IntoRawFd};\n use process;"}, {"sha": "b2b1f16f20a9aed7b5542f283718aa43b6f34fe0", "filename": "src/libstd/sys/unix/fd.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsys%2Funix%2Ffd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsys%2Funix%2Ffd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Ffd.rs?ref=9a2c8783d91624261317316f996d8d2d09b7b6a4", "patch": "@@ -10,8 +10,6 @@\n \n #![unstable(reason = \"not public\", issue = \"0\", feature = \"fd\")]\n \n-use prelude::v1::*;\n-\n use io::{self, Read};\n use libc::{self, c_int, size_t, c_void};\n use mem;"}, {"sha": "e6fe3eb112a6093ea038044132736d8bdb5ef40e", "filename": "src/libstd/sys/unix/fs.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsys%2Funix%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsys%2Funix%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Ffs.rs?ref=9a2c8783d91624261317316f996d8d2d09b7b6a4", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use prelude::v1::*;\n use os::unix::prelude::*;\n \n use ffi::{CString, CStr, OsString, OsStr};\n@@ -534,7 +533,6 @@ impl fmt::Debug for File {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n         #[cfg(target_os = \"linux\")]\n         fn get_path(fd: c_int) -> Option<PathBuf> {\n-            use string::ToString;\n             let mut p = PathBuf::from(\"/proc/self/fd\");\n             p.push(&fd.to_string());\n             readlink(&p).ok()"}, {"sha": "3f77abd7f44d8f4f56be637a66781da946f300a6", "filename": "src/libstd/sys/unix/net.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsys%2Funix%2Fnet.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsys%2Funix%2Fnet.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fnet.rs?ref=9a2c8783d91624261317316f996d8d2d09b7b6a4", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use prelude::v1::*;\n-\n use ffi::CStr;\n use io;\n use libc::{self, c_int, size_t, sockaddr, socklen_t};"}, {"sha": "e61804efd50f6882d5f6e698e935bd8163f5b569", "filename": "src/libstd/sys/unix/os.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsys%2Funix%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsys%2Funix%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fos.rs?ref=9a2c8783d91624261317316f996d8d2d09b7b6a4", "patch": "@@ -12,7 +12,6 @@\n \n #![allow(unused_imports)] // lots of cfg code here\n \n-use prelude::v1::*;\n use os::unix::prelude::*;\n \n use error::Error as StdError;"}, {"sha": "5a733c0cb87637f7a235782b0bc3a415d60c4aca", "filename": "src/libstd/sys/unix/os_str.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsys%2Funix%2Fos_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsys%2Funix%2Fos_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fos_str.rs?ref=9a2c8783d91624261317316f996d8d2d09b7b6a4", "patch": "@@ -13,9 +13,7 @@\n \n use borrow::Cow;\n use fmt::{self, Debug};\n-use vec::Vec;\n use str;\n-use string::String;\n use mem;\n use sys_common::{AsInner, IntoInner};\n "}, {"sha": "ffe8032e46055e9f6af9e63491e26d463117a4ab", "filename": "src/libstd/sys/unix/pipe.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsys%2Funix%2Fpipe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsys%2Funix%2Fpipe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fpipe.rs?ref=9a2c8783d91624261317316f996d8d2d09b7b6a4", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use prelude::v1::*;\n-\n use cmp;\n use io;\n use libc::{self, c_int};"}, {"sha": "50014f51f6cf46420fbaaa2a3e2e68db15933f3e", "filename": "src/libstd/sys/unix/process.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsys%2Funix%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsys%2Funix%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fprocess.rs?ref=9a2c8783d91624261317316f996d8d2d09b7b6a4", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use prelude::v1::*;\n use os::unix::prelude::*;\n \n use collections::hash_map::{HashMap, Entry};\n@@ -593,7 +592,6 @@ impl Process {\n #[cfg(test)]\n mod tests {\n     use super::*;\n-    use prelude::v1::*;\n \n     use ffi::OsStr;\n     use mem;"}, {"sha": "972bdbc38186b06eab0373222b9b492e41e1d137", "filename": "src/libstd/sys/unix/stdio.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsys%2Funix%2Fstdio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsys%2Funix%2Fstdio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fstdio.rs?ref=9a2c8783d91624261317316f996d8d2d09b7b6a4", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use prelude::v1::*;\n-\n use io;\n use libc;\n use sys::fd::FileDesc;"}, {"sha": "5db7086e42752b1387227bba79c10a30818b70aa", "filename": "src/libstd/sys/unix/thread.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsys%2Funix%2Fthread.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsys%2Funix%2Fthread.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fthread.rs?ref=9a2c8783d91624261317316f996d8d2d09b7b6a4", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use prelude::v1::*;\n-\n use alloc::boxed::FnBox;\n use cmp;\n use ffi::CStr;\n@@ -193,8 +191,6 @@ pub mod guard {\n           target_os = \"solaris\"))]\n #[cfg_attr(test, allow(dead_code))]\n pub mod guard {\n-    use prelude::v1::*;\n-\n     use libc;\n     use libc::mmap;\n     use libc::{PROT_NONE, MAP_PRIVATE, MAP_ANON, MAP_FAILED, MAP_FIXED};"}, {"sha": "cd42b7d05ee384d4ec7b9b918d2c5def938b9420", "filename": "src/libstd/sys/windows/compat.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsys%2Fwindows%2Fcompat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsys%2Fwindows%2Fcompat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fcompat.rs?ref=9a2c8783d91624261317316f996d8d2d09b7b6a4", "patch": "@@ -21,8 +21,6 @@\n //! manner we pay a semi-large one-time cost up front for detecting whether a\n //! function is available but afterwards it's just a load and a jump.\n \n-use prelude::v1::*;\n-\n use ffi::CString;\n use sync::atomic::{AtomicUsize, Ordering};\n use sys::c;"}, {"sha": "5227280808f5bdfa9fba3bfd056a2840b8e32b6e", "filename": "src/libstd/sys/windows/dynamic_lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsys%2Fwindows%2Fdynamic_lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsys%2Fwindows%2Fdynamic_lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fdynamic_lib.rs?ref=9a2c8783d91624261317316f996d8d2d09b7b6a4", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use prelude::v1::*;\n use os::windows::prelude::*;\n \n use ffi::{CString, OsStr};"}, {"sha": "fe448cdd78feb9ee71ad2ff6011b06622e1ed36c", "filename": "src/libstd/sys/windows/fs.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsys%2Fwindows%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsys%2Fwindows%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Ffs.rs?ref=9a2c8783d91624261317316f996d8d2d09b7b6a4", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use prelude::v1::*;\n use os::windows::prelude::*;\n \n use ffi::OsString;"}, {"sha": "97e746ee345763cc75e3723c5fbfb6f0d7a4deb5", "filename": "src/libstd/sys/windows/handle.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsys%2Fwindows%2Fhandle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsys%2Fwindows%2Fhandle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fhandle.rs?ref=9a2c8783d91624261317316f996d8d2d09b7b6a4", "patch": "@@ -10,8 +10,6 @@\n \n #![unstable(issue = \"0\", feature = \"windows_handle\")]\n \n-use prelude::v1::*;\n-\n use cmp;\n use io::{ErrorKind, Read};\n use io;"}, {"sha": "9741a704e8fe51e1ab5667157fe37be52b3cac07", "filename": "src/libstd/sys/windows/mod.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsys%2Fwindows%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsys%2Fwindows%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fmod.rs?ref=9a2c8783d91624261317316f996d8d2d09b7b6a4", "patch": "@@ -10,8 +10,6 @@\n \n #![allow(missing_docs, bad_style)]\n \n-use prelude::v1::*;\n-\n use ffi::{OsStr, OsString};\n use io::{self, ErrorKind};\n use os::windows::ffi::{OsStrExt, OsStringExt};"}, {"sha": "855603685905958de4bf5494a677bc4bc23e4497", "filename": "src/libstd/sys/windows/mutex.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsys%2Fwindows%2Fmutex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsys%2Fwindows%2Fmutex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fmutex.rs?ref=9a2c8783d91624261317316f996d8d2d09b7b6a4", "patch": "@@ -29,8 +29,6 @@\n //! CriticalSection is used and we keep track of who's holding the mutex to\n //! detect recursive locks.\n \n-use prelude::v1::*;\n-\n use cell::UnsafeCell;\n use mem;\n use sync::atomic::{AtomicUsize, Ordering};"}, {"sha": "aca6994503ff8aa46495e32747fda5c7c1e8a127", "filename": "src/libstd/sys/windows/net.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsys%2Fwindows%2Fnet.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsys%2Fwindows%2Fnet.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fnet.rs?ref=9a2c8783d91624261317316f996d8d2d09b7b6a4", "patch": "@@ -10,8 +10,6 @@\n \n #![unstable(issue = \"0\", feature = \"windows_net\")]\n \n-use prelude::v1::*;\n-\n use cmp;\n use io::{self, Read};\n use libc::{c_int, c_void, c_ulong};"}, {"sha": "260fc3c4db62ef8371929b95cdcb36e1b1754930", "filename": "src/libstd/sys/windows/os.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsys%2Fwindows%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsys%2Fwindows%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fos.rs?ref=9a2c8783d91624261317316f996d8d2d09b7b6a4", "patch": "@@ -12,7 +12,6 @@\n \n #![allow(bad_style)]\n \n-use prelude::v1::*;\n use os::windows::prelude::*;\n \n use error::Error as StdError;"}, {"sha": "a065c7a7fd013e3f4f1e7a2f4fd95583d6c63271", "filename": "src/libstd/sys/windows/os_str.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsys%2Fwindows%2Fos_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsys%2Fwindows%2Fos_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fos_str.rs?ref=9a2c8783d91624261317316f996d8d2d09b7b6a4", "patch": "@@ -14,9 +14,6 @@\n use borrow::Cow;\n use fmt::{self, Debug};\n use sys_common::wtf8::{Wtf8, Wtf8Buf};\n-use string::String;\n-use result::Result;\n-use option::Option;\n use mem;\n use sys_common::{AsInner, IntoInner};\n "}, {"sha": "ed7e88e72cd5609d69fa296ab0e811bd733db231", "filename": "src/libstd/sys/windows/pipe.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsys%2Fwindows%2Fpipe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsys%2Fwindows%2Fpipe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fpipe.rs?ref=9a2c8783d91624261317316f996d8d2d09b7b6a4", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use prelude::v1::*;\n use os::windows::prelude::*;\n \n use ffi::OsStr;"}, {"sha": "d371714ff0e690822d7af30d78cf9948224c5ba9", "filename": "src/libstd/sys/windows/process.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsys%2Fwindows%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsys%2Fwindows%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fprocess.rs?ref=9a2c8783d91624261317316f996d8d2d09b7b6a4", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use prelude::v1::*;\n-\n use ascii::*;\n use collections::HashMap;\n use collections;\n@@ -491,7 +489,6 @@ fn make_dirp(d: Option<&OsString>) -> io::Result<(*const u16, Vec<u16>)> {\n \n #[cfg(test)]\n mod tests {\n-    use prelude::v1::*;\n     use ffi::{OsStr, OsString};\n     use super::make_command_line;\n "}, {"sha": "01249f05f620252134d8c53d5a4c7ea1edca267a", "filename": "src/libstd/sys/windows/stdio.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsys%2Fwindows%2Fstdio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsys%2Fwindows%2Fstdio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fstdio.rs?ref=9a2c8783d91624261317316f996d8d2d09b7b6a4", "patch": "@@ -10,7 +10,6 @@\n \n #![unstable(issue = \"0\", feature = \"windows_stdio\")]\n \n-use prelude::v1::*;\n use io::prelude::*;\n \n use cmp;"}, {"sha": "5a376a867ee6448288bac2cd1c534a7bb56e77a9", "filename": "src/libstd/sys/windows/thread.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsys%2Fwindows%2Fthread.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsys%2Fwindows%2Fthread.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fthread.rs?ref=9a2c8783d91624261317316f996d8d2d09b7b6a4", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use prelude::v1::*;\n-\n use alloc::boxed::FnBox;\n use io;\n use ffi::CStr;"}, {"sha": "5d3084094fbddd4f02b375b724303fd8734ac157", "filename": "src/libstd/sys/windows/thread_local.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsys%2Fwindows%2Fthread_local.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fsys%2Fwindows%2Fthread_local.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fthread_local.rs?ref=9a2c8783d91624261317316f996d8d2d09b7b6a4", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use prelude::v1::*;\n-\n use ptr;\n use sys::c;\n use sys_common::mutex::Mutex;"}, {"sha": "c44dee49f14a69373eed7cbcf6952358b701f8e5", "filename": "src/libstd/thread/local.rs", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fthread%2Flocal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fthread%2Flocal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fthread%2Flocal.rs?ref=9a2c8783d91624261317316f996d8d2d09b7b6a4", "patch": "@@ -369,7 +369,6 @@ pub mod elf {\n     // Due to rust-lang/rust#18804, make sure this is not generic!\n     #[cfg(target_os = \"linux\")]\n     unsafe fn register_dtor(t: *mut u8, dtor: unsafe extern fn(*mut u8)) {\n-        use prelude::v1::*;\n         use mem;\n         use libc;\n         use sys_common::thread_local as os;\n@@ -460,8 +459,6 @@ pub mod elf {\n \n #[doc(hidden)]\n pub mod os {\n-    use prelude::v1::*;\n-\n     use cell::{Cell, UnsafeCell};\n     use marker;\n     use ptr;\n@@ -529,8 +526,6 @@ pub mod os {\n \n #[cfg(test)]\n mod tests {\n-    use prelude::v1::*;\n-\n     use sync::mpsc::{channel, Sender};\n     use cell::{Cell, UnsafeCell};\n     use super::LocalKeyState;\n@@ -693,8 +688,6 @@ mod tests {\n \n #[cfg(test)]\n mod dynamic_tests {\n-    use prelude::v1::*;\n-\n     use cell::RefCell;\n     use collections::HashMap;\n "}, {"sha": "f3e1710f50b0d8ec3e50b6f7dff215ce1d71df22", "filename": "src/libstd/thread/mod.rs", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fthread%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a2c8783d91624261317316f996d8d2d09b7b6a4/src%2Flibstd%2Fthread%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fthread%2Fmod.rs?ref=9a2c8783d91624261317316f996d8d2d09b7b6a4", "patch": "@@ -161,8 +161,6 @@\n \n #![stable(feature = \"rust1\", since = \"1.0.0\")]\n \n-use prelude::v1::*;\n-\n use any::Any;\n use cell::UnsafeCell;\n use ffi::{CStr, CString};\n@@ -732,8 +730,6 @@ fn _assert_sync_and_send() {\n \n #[cfg(test)]\n mod tests {\n-    use prelude::v1::*;\n-\n     use any::Any;\n     use sync::mpsc::{channel, Sender};\n     use result;\n@@ -786,8 +782,6 @@ mod tests {\n \n     #[test]\n     fn test_spawn_sched() {\n-        use clone::Clone;\n-\n         let (tx, rx) = channel();\n \n         fn f(i: i32, tx: Sender<()>) {"}]}