{"sha": "c1a7dbc0e3511b144f7051a065b9467871ad6ef9", "node_id": "C_kwDOAAsO6NoAKGMxYTdkYmMwZTM1MTFiMTQ0ZjcwNTFhMDY1Yjk0Njc4NzFhZDZlZjk", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-01-13T22:12:06Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-01-13T22:43:17Z"}, "message": "Rebase conflicts", "tree": {"sha": "dbad3a201a813400eac0b15568705cad242f4935", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dbad3a201a813400eac0b15568705cad242f4935"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c1a7dbc0e3511b144f7051a065b9467871ad6ef9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c1a7dbc0e3511b144f7051a065b9467871ad6ef9", "html_url": "https://github.com/rust-lang/rust/commit/c1a7dbc0e3511b144f7051a065b9467871ad6ef9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c1a7dbc0e3511b144f7051a065b9467871ad6ef9/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b2df88bae1318689c86c69655268ca2d2afc0f81", "url": "https://api.github.com/repos/rust-lang/rust/commits/b2df88bae1318689c86c69655268ca2d2afc0f81", "html_url": "https://github.com/rust-lang/rust/commit/b2df88bae1318689c86c69655268ca2d2afc0f81"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "5211f873a1e3b845e62c6f0b26fb4d1c091685a1", "filename": "compiler/rustc_trait_selection/src/traits/error_reporting/suggestions.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/c1a7dbc0e3511b144f7051a065b9467871ad6ef9/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c1a7dbc0e3511b144f7051a065b9467871ad6ef9/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs?ref=c1a7dbc0e3511b144f7051a065b9467871ad6ef9", "patch": "@@ -885,6 +885,12 @@ impl<'tcx> TypeErrCtxtExt<'tcx> for TypeErrCtxt<'_, 'tcx> {\n         err: &mut Diagnostic,\n         trait_pred: ty::PolyTraitPredicate<'tcx>,\n     ) -> bool {\n+        // It doesn't make sense to make this suggestion outside of typeck...\n+        // (also autoderef will ICE...)\n+        if self.typeck_results.is_none() {\n+            return false;\n+        }\n+\n         if let ty::PredicateKind::Clause(ty::Clause::Trait(trait_pred)) = obligation.predicate.kind().skip_binder()\n             && Some(trait_pred.def_id()) == self.tcx.lang_items().sized_trait()\n         {\n@@ -1104,13 +1110,7 @@ impl<'tcx> TypeErrCtxtExt<'tcx> for TypeErrCtxt<'_, 'tcx> {\n         found: Ty<'tcx>,\n     ) -> Option<(DefIdOrName, Ty<'tcx>, Vec<Ty<'tcx>>)> {\n         // Autoderef is useful here because sometimes we box callables, etc.\n-        let Some((def_id_or_name, output, inputs)) = Autoderef::new(\n-            self,\n-            param_env,\n-            hir_id,\n-            DUMMY_SP,\n-            found,\n-        ).silence_errors().find_map(|(found, _)| {\n+        let Some((def_id_or_name, output, inputs)) = (self.autoderef_steps)(found).into_iter().find_map(|(found, _)| {\n             match *found.kind() {\n                 ty::FnPtr(fn_sig) =>\n                     Some((DefIdOrName::Name(\"function pointer\"), fn_sig.output(), fn_sig.inputs())),"}]}