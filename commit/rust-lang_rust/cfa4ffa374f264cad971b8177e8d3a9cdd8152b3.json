{"sha": "cfa4ffa374f264cad971b8177e8d3a9cdd8152b3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNmYTRmZmEzNzRmMjY0Y2FkOTcxYjgxNzdlOGQzYTljZGQ4MTUyYjM=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-12-20T09:26:54Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-12-20T19:38:13Z"}, "message": "document and tweak the nll, use_mir, etc helpers\n\nIn particular, -Znll might as well imply -Zborrowck=mir by default,\njust like `#![feature(nll)]` does.\n\nAlso, if NLL is in use, no reason to emit end regions. The NLL pass\njust strips them out anyway.", "tree": {"sha": "3b6dd238b98b15fec2db38dc74d6a5541a6b02d5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3b6dd238b98b15fec2db38dc74d6a5541a6b02d5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cfa4ffa374f264cad971b8177e8d3a9cdd8152b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cfa4ffa374f264cad971b8177e8d3a9cdd8152b3", "html_url": "https://github.com/rust-lang/rust/commit/cfa4ffa374f264cad971b8177e8d3a9cdd8152b3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cfa4ffa374f264cad971b8177e8d3a9cdd8152b3/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e980fb8befe789cd6db13ffff38f7a0901cbc57c", "url": "https://api.github.com/repos/rust-lang/rust/commits/e980fb8befe789cd6db13ffff38f7a0901cbc57c", "html_url": "https://github.com/rust-lang/rust/commit/e980fb8befe789cd6db13ffff38f7a0901cbc57c"}], "stats": {"total": 35, "additions": 28, "deletions": 7}, "files": [{"sha": "60a218500ca78b15761b7a448dc22b602c4e37b0", "filename": "src/librustc/session/mod.rs", "status": "modified", "additions": 27, "deletions": 3, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/cfa4ffa374f264cad971b8177e8d3a9cdd8152b3/src%2Flibrustc%2Fsession%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cfa4ffa374f264cad971b8177e8d3a9cdd8152b3/src%2Flibrustc%2Fsession%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fmod.rs?ref=cfa4ffa374f264cad971b8177e8d3a9cdd8152b3", "patch": "@@ -437,25 +437,42 @@ impl Session {\n     pub fn print_llvm_passes(&self) -> bool {\n         self.opts.debugging_opts.print_llvm_passes\n     }\n+\n+    /// If true, we should use NLL-style region checking instead of\n+    /// lexical style.\n     pub fn nll(&self) -> bool {\n         self.features.borrow().nll || self.opts.debugging_opts.nll\n     }\n+\n+    /// If true, we should use the MIR-based borrowck (we may *also* use\n+    /// the AST-based borrowck).\n     pub fn use_mir(&self) -> bool {\n-        self.features.borrow().nll || self.opts.borrowck_mode.use_mir()\n+        self.borrowck_mode().use_mir()\n     }\n+\n+    /// If true, we should gather causal information during NLL\n+    /// checking. This will eventually be the normal thing, but right\n+    /// now it is too unoptimized.\n     pub fn nll_dump_cause(&self) -> bool {\n         self.opts.debugging_opts.nll_dump_cause\n     }\n+\n+    /// If true, we should enable two-phase borrows checks. This is\n+    /// done with either `-Ztwo-phase-borrows` or with\n+    /// `#![feature(nll)]`.\n     pub fn two_phase_borrows(&self) -> bool {\n         self.features.borrow().nll || self.opts.debugging_opts.two_phase_borrows\n     }\n+\n+    /// What mode(s) of borrowck should we run? AST? MIR? both?\n+    /// (Also considers the `#![feature(nll)]` setting.)\n     pub fn borrowck_mode(&self) -> BorrowckMode {\n         match self.opts.borrowck_mode {\n             mode @ BorrowckMode::Mir |\n             mode @ BorrowckMode::Compare => mode,\n \n             mode @ BorrowckMode::Ast => {\n-                if self.features.borrow().nll {\n+                if self.nll() {\n                     BorrowckMode::Mir\n                 } else {\n                     mode\n@@ -464,11 +481,18 @@ impl Session {\n \n         }\n     }\n+\n+    /// Should we emit EndRegion MIR statements? These are consumed by\n+    /// MIR borrowck, but not when NLL is used. They are also consumed\n+    /// by the validation stuff.\n     pub fn emit_end_regions(&self) -> bool {\n+        // FIXME(#46875) -- we should not emit end regions when NLL is enabled,\n+        // but for now we can't stop doing so because it causes false positives\n         self.opts.debugging_opts.emit_end_regions ||\n-            (self.opts.debugging_opts.mir_emit_validate > 0) ||\n+            self.opts.debugging_opts.mir_emit_validate > 0 ||\n             self.use_mir()\n     }\n+\n     pub fn lto(&self) -> bool {\n         self.opts.cg.lto || self.target.target.options.requires_lto\n     }"}, {"sha": "c907c97d6d3ed58b7942b3c4bdf7acf39321cd2d", "filename": "src/librustc_mir/borrow_check/mod.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/cfa4ffa374f264cad971b8177e8d3a9cdd8152b3/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cfa4ffa374f264cad971b8177e8d3a9cdd8152b3/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs?ref=cfa4ffa374f264cad971b8177e8d3a9cdd8152b3", "patch": "@@ -72,10 +72,7 @@ fn mir_borrowck<'a, 'tcx>(\n     let input_mir = tcx.mir_validated(def_id);\n     debug!(\"run query mir_borrowck: {}\", tcx.item_path_str(def_id));\n \n-    if {\n-        !tcx.has_attr(def_id, \"rustc_mir_borrowck\") && !tcx.sess.use_mir()\n-            && !tcx.sess.nll()\n-    } {\n+    if !tcx.has_attr(def_id, \"rustc_mir_borrowck\") && !tcx.sess.use_mir() {\n         return None;\n     }\n "}]}