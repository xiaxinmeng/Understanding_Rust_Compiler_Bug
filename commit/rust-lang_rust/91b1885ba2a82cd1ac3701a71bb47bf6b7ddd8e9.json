{"sha": "91b1885ba2a82cd1ac3701a71bb47bf6b7ddd8e9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkxYjE4ODViYTJhODJjZDFhYzM3MDFhNzFiYjQ3YmY2YjdkZGQ4ZTk=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2010-11-05T20:44:08Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2010-11-05T20:44:37Z"}, "message": "rustboot: Report mismatched effect qualifiers", "tree": {"sha": "b9f6e212a989a300440025ca6fbcf0cfb8621cf5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b9f6e212a989a300440025ca6fbcf0cfb8621cf5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/91b1885ba2a82cd1ac3701a71bb47bf6b7ddd8e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/91b1885ba2a82cd1ac3701a71bb47bf6b7ddd8e9", "html_url": "https://github.com/rust-lang/rust/commit/91b1885ba2a82cd1ac3701a71bb47bf6b7ddd8e9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/91b1885ba2a82cd1ac3701a71bb47bf6b7ddd8e9/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "199ff196aa1c90c865a40c96438335f84a00de4c", "url": "https://api.github.com/repos/rust-lang/rust/commits/199ff196aa1c90c865a40c96438335f84a00de4c", "html_url": "https://github.com/rust-lang/rust/commit/199ff196aa1c90c865a40c96438335f84a00de4c"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "9a5cee15de66906e2fd63859305e45ad8b7a2942", "filename": "src/boot/me/semant.ml", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/91b1885ba2a82cd1ac3701a71bb47bf6b7ddd8e9/src%2Fboot%2Fme%2Fsemant.ml", "raw_url": "https://github.com/rust-lang/rust/raw/91b1885ba2a82cd1ac3701a71bb47bf6b7ddd8e9/src%2Fboot%2Fme%2Fsemant.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fme%2Fsemant.ml?ref=91b1885ba2a82cd1ac3701a71bb47bf6b7ddd8e9", "patch": "@@ -997,16 +997,19 @@ let rec pretty_ty_str (cx:ctxt) (fallback:(Ast.ty -> string)) (ty:Ast.ty) =\n           in\n           let fields = Array.to_list (Array.map format_field fields) in\n           \"rec(\" ^ (String.concat \", \" fields) ^ \")\"\n-      | Ast.TY_fn (fnsig, _) ->\n+      | Ast.TY_fn (fnsig, aux) ->\n           let format_slot slot =\n             match slot.Ast.slot_ty with\n                 None -> Common.bug () \"no ty in slot\"\n               | Some ty' -> pretty_ty_str cx fallback ty'\n           in\n+          let effect = aux.Ast.fn_effect in\n+          let qual = Fmt.sprintf_fmt Ast.fmt_effect_qual () effect in\n+          let keyword = if aux.Ast.fn_is_iter then \"iter\" else \"fn\" in\n           let fn_args = Array.map format_slot fnsig.Ast.sig_input_slots in\n           let fn_args_str = String.concat \", \" (Array.to_list fn_args) in\n           let fn_rv_str = format_slot fnsig.Ast.sig_output_slot in\n-          Printf.sprintf \"fn(%s) -> %s\" fn_args_str fn_rv_str\n+          Printf.sprintf \"%s%s(%s) -> %s\" qual keyword fn_args_str fn_rv_str\n       | Ast.TY_tag { Ast.tag_id = tag_id; Ast.tag_args = _ }\n               when Hashtbl.mem cx.ctxt_user_tag_names tag_id ->\n           let name = Hashtbl.find cx.ctxt_user_tag_names tag_id in"}]}