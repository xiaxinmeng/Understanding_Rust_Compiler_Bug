{"sha": "edb2c2d291811f9b21ed8bd1499648a0614f6fc8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVkYjJjMmQyOTE4MTFmOWIyMWVkOGJkMTQ5OTY0OGEwNjE0ZjZmYzg=", "commit": {"author": {"name": "Nikolai Vazquez", "email": "nvazquez1297@gmail.com", "date": "2017-09-27T01:16:59Z"}, "committer": {"name": "Nikolai Vazquez", "email": "nvazquez1297@gmail.com", "date": "2017-09-27T01:16:59Z"}, "message": "Remove uses of mem::transmute in Box methods\n\nMakes use of conversions via Unique.", "tree": {"sha": "c5344458cddddb73bf31c7dc629442722b5546d1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c5344458cddddb73bf31c7dc629442722b5546d1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/edb2c2d291811f9b21ed8bd1499648a0614f6fc8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/edb2c2d291811f9b21ed8bd1499648a0614f6fc8", "html_url": "https://github.com/rust-lang/rust/commit/edb2c2d291811f9b21ed8bd1499648a0614f6fc8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/edb2c2d291811f9b21ed8bd1499648a0614f6fc8/comments", "author": {"login": "nvzqz", "id": 10367662, "node_id": "MDQ6VXNlcjEwMzY3NjYy", "avatar_url": "https://avatars.githubusercontent.com/u/10367662?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nvzqz", "html_url": "https://github.com/nvzqz", "followers_url": "https://api.github.com/users/nvzqz/followers", "following_url": "https://api.github.com/users/nvzqz/following{/other_user}", "gists_url": "https://api.github.com/users/nvzqz/gists{/gist_id}", "starred_url": "https://api.github.com/users/nvzqz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nvzqz/subscriptions", "organizations_url": "https://api.github.com/users/nvzqz/orgs", "repos_url": "https://api.github.com/users/nvzqz/repos", "events_url": "https://api.github.com/users/nvzqz/events{/privacy}", "received_events_url": "https://api.github.com/users/nvzqz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nvzqz", "id": 10367662, "node_id": "MDQ6VXNlcjEwMzY3NjYy", "avatar_url": "https://avatars.githubusercontent.com/u/10367662?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nvzqz", "html_url": "https://github.com/nvzqz", "followers_url": "https://api.github.com/users/nvzqz/followers", "following_url": "https://api.github.com/users/nvzqz/following{/other_user}", "gists_url": "https://api.github.com/users/nvzqz/gists{/gist_id}", "starred_url": "https://api.github.com/users/nvzqz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nvzqz/subscriptions", "organizations_url": "https://api.github.com/users/nvzqz/orgs", "repos_url": "https://api.github.com/users/nvzqz/repos", "events_url": "https://api.github.com/users/nvzqz/events{/privacy}", "received_events_url": "https://api.github.com/users/nvzqz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1c4510adc81bd7623bc2993b42ee7d87320f1f2b", "url": "https://api.github.com/repos/rust-lang/rust/commits/1c4510adc81bd7623bc2993b42ee7d87320f1f2b", "html_url": "https://github.com/rust-lang/rust/commit/1c4510adc81bd7623bc2993b42ee7d87320f1f2b"}], "stats": {"total": 8, "additions": 5, "deletions": 3}, "files": [{"sha": "512c7194fe3ff3340645db1dcd06da7bbb1657e6", "filename": "src/liballoc/boxed.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/edb2c2d291811f9b21ed8bd1499648a0614f6fc8/src%2Fliballoc%2Fboxed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/edb2c2d291811f9b21ed8bd1499648a0614f6fc8/src%2Fliballoc%2Fboxed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fboxed.rs?ref=edb2c2d291811f9b21ed8bd1499648a0614f6fc8", "patch": "@@ -269,7 +269,7 @@ impl<T: ?Sized> Box<T> {\n     #[stable(feature = \"box_raw\", since = \"1.4.0\")]\n     #[inline]\n     pub unsafe fn from_raw(raw: *mut T) -> Self {\n-        mem::transmute(raw)\n+        Box(Unique::new_unchecked(raw))\n     }\n \n     /// Consumes the `Box`, returning the wrapped raw pointer.\n@@ -295,7 +295,7 @@ impl<T: ?Sized> Box<T> {\n     #[stable(feature = \"box_raw\", since = \"1.4.0\")]\n     #[inline]\n     pub fn into_raw(b: Box<T>) -> *mut T {\n-        unsafe { mem::transmute(b) }\n+        Box::into_unique(b).as_ptr()\n     }\n \n     /// Consumes the `Box`, returning the wrapped pointer as `Unique<T>`.\n@@ -326,7 +326,9 @@ impl<T: ?Sized> Box<T> {\n                issue = \"27730\")]\n     #[inline]\n     pub fn into_unique(b: Box<T>) -> Unique<T> {\n-        unsafe { mem::transmute(b) }\n+        let u = b.0;\n+        mem::forget(b);\n+        u\n     }\n }\n "}]}