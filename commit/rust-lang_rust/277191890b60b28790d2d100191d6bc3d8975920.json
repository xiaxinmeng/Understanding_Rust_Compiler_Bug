{"sha": "277191890b60b28790d2d100191d6bc3d8975920", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI3NzE5MTg5MGI2MGIyODc5MGQyZDEwMDE5MWQ2YmMzZDg5NzU5MjA=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-10-07T04:58:13Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-10-07T04:58:13Z"}, "message": "Auto merge of #6120 - phansch:replace-lazy-static, r=Manishearth\n\nReplace some lazy_static usage with once_cell feature\n\nThis replaces some `lazy_static` usage with [`SyncLazy`](https://doc.rust-lang.org/nightly/std/lazy/struct.SyncLazy.html) of the unstable `once_cell` feature.\n\nchangelog: none", "tree": {"sha": "77a7bcdba5ddb1847d3cb9259a2e1535c89b1214", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/77a7bcdba5ddb1847d3cb9259a2e1535c89b1214"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/277191890b60b28790d2d100191d6bc3d8975920", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/277191890b60b28790d2d100191d6bc3d8975920", "html_url": "https://github.com/rust-lang/rust/commit/277191890b60b28790d2d100191d6bc3d8975920", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/277191890b60b28790d2d100191d6bc3d8975920/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "14e72696a693ef6618a236062cce8b16f8ee1383", "url": "https://api.github.com/repos/rust-lang/rust/commits/14e72696a693ef6618a236062cce8b16f8ee1383", "html_url": "https://github.com/rust-lang/rust/commit/14e72696a693ef6618a236062cce8b16f8ee1383"}, {"sha": "da57a16872297de5b6bb7754f722381631d4dca4", "url": "https://api.github.com/repos/rust-lang/rust/commits/da57a16872297de5b6bb7754f722381631d4dca4", "html_url": "https://github.com/rust-lang/rust/commit/da57a16872297de5b6bb7754f722381631d4dca4"}], "stats": {"total": 102, "additions": 51, "deletions": 51}, "files": [{"sha": "d745000eac7c700f01d2256a76e1fe58720a4b01", "filename": "clippy_dev/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/277191890b60b28790d2d100191d6bc3d8975920/clippy_dev%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/277191890b60b28790d2d100191d6bc3d8975920/clippy_dev%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2FCargo.toml?ref=277191890b60b28790d2d100191d6bc3d8975920", "patch": "@@ -9,7 +9,6 @@ bytecount = \"0.6\"\n clap = \"2.33\"\n itertools = \"0.9\"\n regex = \"1\"\n-lazy_static = \"1.0\"\n shell-escape = \"0.1\"\n walkdir = \"2\"\n "}, {"sha": "567831354f58ab5c7c17ebf154a125195e871487", "filename": "clippy_dev/src/lib.rs", "status": "modified", "additions": 23, "deletions": 19, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/277191890b60b28790d2d100191d6bc3d8975920/clippy_dev%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/277191890b60b28790d2d100191d6bc3d8975920/clippy_dev%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2Fsrc%2Flib.rs?ref=277191890b60b28790d2d100191d6bc3d8975920", "patch": "@@ -1,11 +1,12 @@\n #![cfg_attr(feature = \"deny-warnings\", deny(warnings))]\n+#![feature(once_cell)]\n \n use itertools::Itertools;\n-use lazy_static::lazy_static;\n use regex::Regex;\n use std::collections::HashMap;\n use std::ffi::OsStr;\n use std::fs;\n+use std::lazy::SyncLazy;\n use std::path::{Path, PathBuf};\n use walkdir::WalkDir;\n \n@@ -15,28 +16,31 @@ pub mod ra_setup;\n pub mod stderr_length_check;\n pub mod update_lints;\n \n-lazy_static! {\n-    static ref DEC_CLIPPY_LINT_RE: Regex = Regex::new(\n+static DEC_CLIPPY_LINT_RE: SyncLazy<Regex> = SyncLazy::new(|| {\n+    Regex::new(\n         r#\"(?x)\n-        declare_clippy_lint!\\s*[\\{(]\n-        (?:\\s+///.*)*\n-        \\s+pub\\s+(?P<name>[A-Z_][A-Z_0-9]*)\\s*,\\s*\n-        (?P<cat>[a-z_]+)\\s*,\\s*\n-        \"(?P<desc>(?:[^\"\\\\]+|\\\\(?s).(?-s))*)\"\\s*[})]\n-    \"#\n+    declare_clippy_lint!\\s*[\\{(]\n+    (?:\\s+///.*)*\n+    \\s+pub\\s+(?P<name>[A-Z_][A-Z_0-9]*)\\s*,\\s*\n+    (?P<cat>[a-z_]+)\\s*,\\s*\n+    \"(?P<desc>(?:[^\"\\\\]+|\\\\(?s).(?-s))*)\"\\s*[})]\n+\"#,\n     )\n-    .unwrap();\n-    static ref DEC_DEPRECATED_LINT_RE: Regex = Regex::new(\n+    .unwrap()\n+});\n+\n+static DEC_DEPRECATED_LINT_RE: SyncLazy<Regex> = SyncLazy::new(|| {\n+    Regex::new(\n         r#\"(?x)\n-        declare_deprecated_lint!\\s*[{(]\\s*\n-        (?:\\s+///.*)*\n-        \\s+pub\\s+(?P<name>[A-Z_][A-Z_0-9]*)\\s*,\\s*\n-        \"(?P<desc>(?:[^\"\\\\]+|\\\\(?s).(?-s))*)\"\\s*[})]\n-    \"#\n+    declare_deprecated_lint!\\s*[{(]\\s*\n+    (?:\\s+///.*)*\n+    \\s+pub\\s+(?P<name>[A-Z_][A-Z_0-9]*)\\s*,\\s*\n+    \"(?P<desc>(?:[^\"\\\\]+|\\\\(?s).(?-s))*)\"\\s*[})]\n+\"#,\n     )\n-    .unwrap();\n-    static ref NL_ESCAPE_RE: Regex = Regex::new(r#\"\\\\\\n\\s*\"#).unwrap();\n-}\n+    .unwrap()\n+});\n+static NL_ESCAPE_RE: SyncLazy<Regex> = SyncLazy::new(|| Regex::new(r#\"\\\\\\n\\s*\"#).unwrap());\n \n pub static DOCS_LINK: &str = \"https://rust-lang.github.io/rust-clippy/master/index.html\";\n "}, {"sha": "fcf817b82c89ef95f9785d75ba9e8015d467e67a", "filename": "clippy_lints/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/277191890b60b28790d2d100191d6bc3d8975920/clippy_lints%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/277191890b60b28790d2d100191d6bc3d8975920/clippy_lints%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2FCargo.toml?ref=277191890b60b28790d2d100191d6bc3d8975920", "patch": "@@ -20,7 +20,6 @@ edition = \"2018\"\n cargo_metadata = \"0.11.1\"\n if_chain = \"1.0.0\"\n itertools = \"0.9\"\n-lazy_static = \"1.0.2\"\n pulldown-cmark = { version = \"0.8\", default-features = false }\n quine-mc_cluskey = \"0.2.2\"\n regex-syntax = \"0.6\""}, {"sha": "826a059f92abeeb7fe6f4d5adb97f0a1a7571af6", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/277191890b60b28790d2d100191d6bc3d8975920/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/277191890b60b28790d2d100191d6bc3d8975920/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=277191890b60b28790d2d100191d6bc3d8975920", "patch": "@@ -7,6 +7,7 @@\n #![feature(crate_visibility_modifier)]\n #![feature(drain_filter)]\n #![feature(in_band_lifetimes)]\n+#![feature(once_cell)]\n #![feature(or_patterns)]\n #![feature(rustc_private)]\n #![feature(stmt_expr_attributes)]"}, {"sha": "b4b4b3dc18d51a290feee50ee8a917b8849bb800", "filename": "clippy_lints/src/macro_use.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/277191890b60b28790d2d100191d6bc3d8975920/clippy_lints%2Fsrc%2Fmacro_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/277191890b60b28790d2d100191d6bc3d8975920/clippy_lints%2Fsrc%2Fmacro_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmacro_use.rs?ref=277191890b60b28790d2d100191d6bc3d8975920", "patch": "@@ -18,9 +18,9 @@ declare_clippy_lint! {\n     /// **Known problems:** None.\n     ///\n     /// **Example:**\n-    /// ```rust\n+    /// ```rust,ignore\n     /// #[macro_use]\n-    /// use lazy_static;\n+    /// use some_macro;\n     /// ```\n     pub MACRO_USE_IMPORTS,\n     pedantic,"}, {"sha": "dd2fd0bb445fec5345ff6ed7a898ac067d22f095", "filename": "clippy_lints/src/utils/conf.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/277191890b60b28790d2d100191d6bc3d8975920/clippy_lints%2Fsrc%2Futils%2Fconf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/277191890b60b28790d2d100191d6bc3d8975920/clippy_lints%2Fsrc%2Futils%2Fconf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fconf.rs?ref=277191890b60b28790d2d100191d6bc3d8975920", "patch": "@@ -2,10 +2,10 @@\n \n #![deny(clippy::missing_docs_in_private_items)]\n \n-use lazy_static::lazy_static;\n use rustc_ast::ast::{LitKind, MetaItemKind, NestedMetaItem};\n use rustc_span::source_map;\n use source_map::Span;\n+use std::lazy::SyncLazy;\n use std::path::{Path, PathBuf};\n use std::sync::Mutex;\n use std::{env, fmt, fs, io};\n@@ -54,9 +54,8 @@ impl From<io::Error> for Error {\n     }\n }\n \n-lazy_static! {\n-    static ref ERRORS: Mutex<Vec<Error>> = Mutex::new(Vec::new());\n-}\n+/// Vec of errors that might be collected during config toml parsing\n+static ERRORS: SyncLazy<Mutex<Vec<Error>>> = SyncLazy::new(|| Mutex::new(Vec::new()));\n \n macro_rules! define_Conf {\n     ($(#[$doc:meta] ($config:ident, $config_str:literal: $Ty:ty, $default:expr),)+) => {\n@@ -82,6 +81,7 @@ macro_rules! define_Conf {\n                     use serde::Deserialize;\n                     pub fn deserialize<'de, D: serde::Deserializer<'de>>(deserializer: D) -> Result<$Ty, D::Error> {\n                         use super::super::{ERRORS, Error};\n+\n                         Ok(\n                             <$Ty>::deserialize(deserializer).unwrap_or_else(|e| {\n                                 ERRORS"}, {"sha": "a8f3e3145f64d723de26b9729b5375c21fd28a0b", "filename": "tests/cargo/mod.rs", "status": "modified", "additions": 17, "deletions": 20, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/277191890b60b28790d2d100191d6bc3d8975920/tests%2Fcargo%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/277191890b60b28790d2d100191d6bc3d8975920/tests%2Fcargo%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcargo%2Fmod.rs?ref=277191890b60b28790d2d100191d6bc3d8975920", "patch": "@@ -1,27 +1,24 @@\n-use lazy_static::lazy_static;\n use std::env;\n+use std::lazy::SyncLazy;\n use std::path::PathBuf;\n \n-lazy_static! {\n-    pub static ref CARGO_TARGET_DIR: PathBuf = {\n-        match env::var_os(\"CARGO_TARGET_DIR\") {\n-            Some(v) => v.into(),\n-            None => env::current_dir().unwrap().join(\"target\"),\n-        }\n-    };\n-    pub static ref TARGET_LIB: PathBuf = {\n-        if let Some(path) = option_env!(\"TARGET_LIBS\") {\n-            path.into()\n-        } else {\n-            let mut dir = CARGO_TARGET_DIR.clone();\n-            if let Some(target) = env::var_os(\"CARGO_BUILD_TARGET\") {\n-                dir.push(target);\n-            }\n-            dir.push(env!(\"PROFILE\"));\n-            dir\n+pub static CARGO_TARGET_DIR: SyncLazy<PathBuf> = SyncLazy::new(|| match env::var_os(\"CARGO_TARGET_DIR\") {\n+    Some(v) => v.into(),\n+    None => env::current_dir().unwrap().join(\"target\"),\n+});\n+\n+pub static TARGET_LIB: SyncLazy<PathBuf> = SyncLazy::new(|| {\n+    if let Some(path) = option_env!(\"TARGET_LIBS\") {\n+        path.into()\n+    } else {\n+        let mut dir = CARGO_TARGET_DIR.clone();\n+        if let Some(target) = env::var_os(\"CARGO_BUILD_TARGET\") {\n+            dir.push(target);\n         }\n-    };\n-}\n+        dir.push(env!(\"PROFILE\"));\n+        dir\n+    }\n+});\n \n #[must_use]\n pub fn is_rustc_test_suite() -> bool {"}, {"sha": "0e8f7683103d61296a99190414cc52ae4e3a5ec6", "filename": "tests/compile-test.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/277191890b60b28790d2d100191d6bc3d8975920/tests%2Fcompile-test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/277191890b60b28790d2d100191d6bc3d8975920/tests%2Fcompile-test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-test.rs?ref=277191890b60b28790d2d100191d6bc3d8975920", "patch": "@@ -1,4 +1,5 @@\n #![feature(test)] // compiletest_rs requires this attribute\n+#![feature(once_cell)]\n \n use compiletest_rs as compiletest;\n use compiletest_rs::common::Mode as TestMode;"}, {"sha": "48e0478f16992275309baa6505e88395c32b143c", "filename": "tests/dogfood.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/277191890b60b28790d2d100191d6bc3d8975920/tests%2Fdogfood.rs", "raw_url": "https://github.com/rust-lang/rust/raw/277191890b60b28790d2d100191d6bc3d8975920/tests%2Fdogfood.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdogfood.rs?ref=277191890b60b28790d2d100191d6bc3d8975920", "patch": "@@ -1,15 +1,14 @@\n // Dogfood cannot run on Windows\n #![cfg(not(windows))]\n+#![feature(once_cell)]\n \n-use lazy_static::lazy_static;\n+use std::lazy::SyncLazy;\n use std::path::PathBuf;\n use std::process::Command;\n \n mod cargo;\n \n-lazy_static! {\n-    static ref CLIPPY_PATH: PathBuf = cargo::TARGET_LIB.join(\"cargo-clippy\");\n-}\n+static CLIPPY_PATH: SyncLazy<PathBuf> = SyncLazy::new(|| cargo::TARGET_LIB.join(\"cargo-clippy\"));\n \n #[test]\n fn dogfood_clippy() {"}]}