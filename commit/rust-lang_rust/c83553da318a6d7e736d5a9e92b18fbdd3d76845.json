{"sha": "c83553da318a6d7e736d5a9e92b18fbdd3d76845", "node_id": "C_kwDOAAsO6NoAKGM4MzU1M2RhMzE4YTZkN2U3MzZkNWE5ZTkyYjE4ZmJkZDNkNzY4NDU", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2023-02-22T15:51:17Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2023-03-02T19:46:44Z"}, "message": "rustc_middle: Remove trait `DefIdTree`\n\nThis trait was a way to generalize over both `TyCtxt` and `Resolver`, but now `Resolver` has access to `TyCtxt`, so this trait is no longer necessary.", "tree": {"sha": "fdcaaf2e033da029ce2834e96a071915dbdc5655", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fdcaaf2e033da029ce2834e96a071915dbdc5655"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c83553da318a6d7e736d5a9e92b18fbdd3d76845", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c83553da318a6d7e736d5a9e92b18fbdd3d76845", "html_url": "https://github.com/rust-lang/rust/commit/c83553da318a6d7e736d5a9e92b18fbdd3d76845", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c83553da318a6d7e736d5a9e92b18fbdd3d76845/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7e966bcd03f6d0fae41f58cf80bcb10566ab971a", "url": "https://api.github.com/repos/rust-lang/rust/commits/7e966bcd03f6d0fae41f58cf80bcb10566ab971a", "html_url": "https://github.com/rust-lang/rust/commit/7e966bcd03f6d0fae41f58cf80bcb10566ab971a"}], "stats": {"total": 272, "additions": 118, "deletions": 154}, "files": [{"sha": "debe0acb04ef6005f79bc93069a1becd81256985", "filename": "compiler/rustc_ast_lowering/src/item.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_ast_lowering%2Fsrc%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_ast_lowering%2Fsrc%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_lowering%2Fsrc%2Fitem.rs?ref=c83553da318a6d7e736d5a9e92b18fbdd3d76845", "patch": "@@ -13,7 +13,7 @@ use rustc_hir::def::{DefKind, Res};\n use rustc_hir::def_id::{LocalDefId, CRATE_DEF_ID};\n use rustc_hir::PredicateOrigin;\n use rustc_index::vec::{Idx, IndexVec};\n-use rustc_middle::ty::{DefIdTree, ResolverAstLowering, TyCtxt};\n+use rustc_middle::ty::{ResolverAstLowering, TyCtxt};\n use rustc_span::edit_distance::find_best_match_for_name;\n use rustc_span::source_map::DesugaringKind;\n use rustc_span::symbol::{kw, sym, Ident};"}, {"sha": "538c02b8000cdbc545bcce44441312d99d393af9", "filename": "compiler/rustc_borrowck/src/diagnostics/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fmod.rs?ref=c83553da318a6d7e736d5a9e92b18fbdd3d76845", "patch": "@@ -13,7 +13,7 @@ use rustc_middle::mir::{\n     Place, PlaceRef, ProjectionElem, Rvalue, Statement, StatementKind, Terminator, TerminatorKind,\n };\n use rustc_middle::ty::print::Print;\n-use rustc_middle::ty::{self, DefIdTree, Instance, Ty, TyCtxt};\n+use rustc_middle::ty::{self, Instance, Ty, TyCtxt};\n use rustc_mir_dataflow::move_paths::{InitLocation, LookupResult};\n use rustc_span::def_id::LocalDefId;\n use rustc_span::{symbol::sym, Span, Symbol, DUMMY_SP};"}, {"sha": "cc5a1f5ab122d4af2e21699e1cdec868ca7ba5b7", "filename": "compiler/rustc_borrowck/src/diagnostics/region_name.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fregion_name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fregion_name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fregion_name.rs?ref=c83553da318a6d7e736d5a9e92b18fbdd3d76845", "patch": "@@ -6,7 +6,7 @@ use rustc_hir as hir;\n use rustc_hir::def::{DefKind, Res};\n use rustc_middle::ty::print::RegionHighlightMode;\n use rustc_middle::ty::subst::{GenericArgKind, SubstsRef};\n-use rustc_middle::ty::{self, DefIdTree, RegionVid, Ty};\n+use rustc_middle::ty::{self, RegionVid, Ty};\n use rustc_span::symbol::{kw, sym, Ident, Symbol};\n use rustc_span::{Span, DUMMY_SP};\n "}, {"sha": "76d0b8754248e2965518e3b133264fd756176c15", "filename": "compiler/rustc_borrowck/src/universal_regions.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_borrowck%2Fsrc%2Funiversal_regions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_borrowck%2Fsrc%2Funiversal_regions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Funiversal_regions.rs?ref=c83553da318a6d7e736d5a9e92b18fbdd3d76845", "patch": "@@ -22,9 +22,7 @@ use rustc_hir::BodyOwnerKind;\n use rustc_index::vec::{Idx, IndexVec};\n use rustc_infer::infer::NllRegionVariableOrigin;\n use rustc_middle::ty::fold::TypeFoldable;\n-use rustc_middle::ty::{\n-    self, DefIdTree, InlineConstSubsts, InlineConstSubstsParts, RegionVid, Ty, TyCtxt,\n-};\n+use rustc_middle::ty::{self, InlineConstSubsts, InlineConstSubstsParts, RegionVid, Ty, TyCtxt};\n use rustc_middle::ty::{InternalSubsts, SubstsRef};\n use rustc_span::Symbol;\n use std::iter;"}, {"sha": "6bcd3e5bf58f3030e0f164681fc2780df3c8e7d1", "filename": "compiler/rustc_codegen_llvm/src/debuginfo/utils.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_codegen_llvm%2Fsrc%2Fdebuginfo%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_codegen_llvm%2Fsrc%2Fdebuginfo%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fdebuginfo%2Futils.rs?ref=c83553da318a6d7e736d5a9e92b18fbdd3d76845", "patch": "@@ -5,7 +5,7 @@ use super::CodegenUnitDebugContext;\n \n use rustc_hir::def_id::DefId;\n use rustc_middle::ty::layout::{HasParamEnv, LayoutOf};\n-use rustc_middle::ty::{self, DefIdTree, Ty};\n+use rustc_middle::ty::{self, Ty};\n use trace;\n \n use crate::common::CodegenCx;"}, {"sha": "fd81b1c6fe1e5184cce5cde6bc9d9d18746bd6c3", "filename": "compiler/rustc_codegen_ssa/src/back/symbol_export.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Fsymbol_export.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Fsymbol_export.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Fsymbol_export.rs?ref=c83553da318a6d7e736d5a9e92b18fbdd3d76845", "patch": "@@ -11,7 +11,7 @@ use rustc_middle::middle::exported_symbols::{\n use rustc_middle::ty::query::{ExternProviders, Providers};\n use rustc_middle::ty::subst::{GenericArgKind, SubstsRef};\n use rustc_middle::ty::Instance;\n-use rustc_middle::ty::{self, DefIdTree, SymbolName, TyCtxt};\n+use rustc_middle::ty::{self, SymbolName, TyCtxt};\n use rustc_session::config::{CrateType, OomStrategy};\n use rustc_target::spec::SanitizerSet;\n "}, {"sha": "9f9a4ac40586dee7073eac93fa5c51361ac120ce", "filename": "compiler/rustc_codegen_ssa/src/codegen_attrs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_codegen_ssa%2Fsrc%2Fcodegen_attrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_codegen_ssa%2Fsrc%2Fcodegen_attrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fcodegen_attrs.rs?ref=c83553da318a6d7e736d5a9e92b18fbdd3d76845", "patch": "@@ -8,7 +8,7 @@ use rustc_hir::{lang_items, weak_lang_items::WEAK_LANG_ITEMS, LangItem};\n use rustc_middle::middle::codegen_fn_attrs::{CodegenFnAttrFlags, CodegenFnAttrs};\n use rustc_middle::mir::mono::Linkage;\n use rustc_middle::ty::query::Providers;\n-use rustc_middle::ty::{self as ty, DefIdTree, TyCtxt};\n+use rustc_middle::ty::{self as ty, TyCtxt};\n use rustc_session::{lint, parse::feature_err};\n use rustc_span::{sym, Span};\n use rustc_target::spec::{abi, SanitizerSet};"}, {"sha": "4301e4fe69bedd371382f15edae007a6e9541cb3", "filename": "compiler/rustc_codegen_ssa/src/target_features.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_codegen_ssa%2Fsrc%2Ftarget_features.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_codegen_ssa%2Fsrc%2Ftarget_features.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Ftarget_features.rs?ref=c83553da318a6d7e736d5a9e92b18fbdd3d76845", "patch": "@@ -8,7 +8,7 @@ use rustc_hir::def_id::DefId;\n use rustc_hir::def_id::LocalDefId;\n use rustc_hir::def_id::LOCAL_CRATE;\n use rustc_middle::ty::query::Providers;\n-use rustc_middle::ty::{DefIdTree, TyCtxt};\n+use rustc_middle::ty::TyCtxt;\n use rustc_session::parse::feature_err;\n use rustc_session::Session;\n use rustc_span::symbol::sym;"}, {"sha": "04c90f285516ae2fa41e12105f6c3048e6e9ea79", "filename": "compiler/rustc_const_eval/src/const_eval/fn_queries.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_const_eval%2Fsrc%2Fconst_eval%2Ffn_queries.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_const_eval%2Fsrc%2Fconst_eval%2Ffn_queries.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Fconst_eval%2Ffn_queries.rs?ref=c83553da318a6d7e736d5a9e92b18fbdd3d76845", "patch": "@@ -2,7 +2,7 @@ use rustc_hir as hir;\n use rustc_hir::def::DefKind;\n use rustc_hir::def_id::{DefId, LocalDefId};\n use rustc_middle::ty::query::Providers;\n-use rustc_middle::ty::{DefIdTree, TyCtxt};\n+use rustc_middle::ty::TyCtxt;\n use rustc_span::symbol::Symbol;\n \n /// Whether the `def_id` is an unstable const fn and what feature gate is necessary to enable it"}, {"sha": "e586720a0d0886de922c5020440762c1de206ed9", "filename": "compiler/rustc_const_eval/src/transform/check_consts/ops.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fcheck_consts%2Fops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fcheck_consts%2Fops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fcheck_consts%2Fops.rs?ref=c83553da318a6d7e736d5a9e92b18fbdd3d76845", "patch": "@@ -12,9 +12,7 @@ use rustc_infer::traits::{ImplSource, Obligation, ObligationCause};\n use rustc_middle::mir;\n use rustc_middle::ty::print::with_no_trimmed_paths;\n use rustc_middle::ty::subst::{GenericArgKind, SubstsRef};\n-use rustc_middle::ty::{\n-    suggest_constraining_type_param, Adt, Closure, DefIdTree, FnDef, FnPtr, Param, Ty,\n-};\n+use rustc_middle::ty::{suggest_constraining_type_param, Adt, Closure, FnDef, FnPtr, Param, Ty};\n use rustc_middle::ty::{Binder, TraitRef};\n use rustc_session::parse::feature_err;\n use rustc_span::symbol::sym;"}, {"sha": "899029d98e0c472d3498688b61935eac940a3968", "filename": "compiler/rustc_hir_analysis/src/astconv/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_hir_analysis%2Fsrc%2Fastconv%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_hir_analysis%2Fsrc%2Fastconv%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fastconv%2Fmod.rs?ref=c83553da318a6d7e736d5a9e92b18fbdd3d76845", "patch": "@@ -35,7 +35,7 @@ use rustc_middle::middle::stability::AllowUnstable;\n use rustc_middle::ty::subst::{self, GenericArgKind, InternalSubsts, SubstsRef};\n use rustc_middle::ty::DynKind;\n use rustc_middle::ty::GenericParamDefKind;\n-use rustc_middle::ty::{self, Const, DefIdTree, IsSuggestable, Ty, TyCtxt, TypeVisitableExt};\n+use rustc_middle::ty::{self, Const, IsSuggestable, Ty, TyCtxt, TypeVisitableExt};\n use rustc_session::lint::builtin::{AMBIGUOUS_ASSOCIATED_ITEMS, BARE_TRAIT_OBJECTS};\n use rustc_span::edit_distance::find_best_match_for_name;\n use rustc_span::edition::Edition;"}, {"sha": "9693a59defbb014da5eb7ee75c92231620692bdd", "filename": "compiler/rustc_hir_analysis/src/check/check.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fcheck.rs?ref=c83553da318a6d7e736d5a9e92b18fbdd3d76845", "patch": "@@ -22,8 +22,7 @@ use rustc_middle::ty::layout::{LayoutError, MAX_SIMD_LANES};\n use rustc_middle::ty::subst::GenericArgKind;\n use rustc_middle::ty::util::{Discr, IntTypeExt};\n use rustc_middle::ty::{\n-    self, AdtDef, DefIdTree, ParamEnv, Ty, TyCtxt, TypeSuperVisitable, TypeVisitable,\n-    TypeVisitableExt,\n+    self, AdtDef, ParamEnv, Ty, TyCtxt, TypeSuperVisitable, TypeVisitable, TypeVisitableExt,\n };\n use rustc_session::lint::builtin::{UNINHABITED_STATIC, UNSUPPORTED_CALLING_CONVENTIONS};\n use rustc_span::symbol::sym;"}, {"sha": "b2e4850df6089bf1db00e9be635438981c72fa65", "filename": "compiler/rustc_hir_analysis/src/check/compare_impl_item.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fcompare_impl_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fcompare_impl_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fcompare_impl_item.rs?ref=c83553da318a6d7e736d5a9e92b18fbdd3d76845", "patch": "@@ -16,8 +16,7 @@ use rustc_infer::traits::util;\n use rustc_middle::ty::error::{ExpectedFound, TypeError};\n use rustc_middle::ty::util::ExplicitSelf;\n use rustc_middle::ty::{\n-    self, DefIdTree, InternalSubsts, Ty, TypeFoldable, TypeFolder, TypeSuperFoldable,\n-    TypeVisitableExt,\n+    self, InternalSubsts, Ty, TypeFoldable, TypeFolder, TypeSuperFoldable, TypeVisitableExt,\n };\n use rustc_middle::ty::{GenericParamDefKind, ToPredicate, TyCtxt};\n use rustc_span::Span;"}, {"sha": "6f6f993f727170c4487b12db29a9b68f2cdfdcad", "filename": "compiler/rustc_hir_analysis/src/collect/item_bounds.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_hir_analysis%2Fsrc%2Fcollect%2Fitem_bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_hir_analysis%2Fsrc%2Fcollect%2Fitem_bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcollect%2Fitem_bounds.rs?ref=c83553da318a6d7e736d5a9e92b18fbdd3d76845", "patch": "@@ -3,7 +3,7 @@ use crate::astconv::AstConv;\n use rustc_hir as hir;\n use rustc_infer::traits::util;\n use rustc_middle::ty::subst::InternalSubsts;\n-use rustc_middle::ty::{self, DefIdTree, TyCtxt};\n+use rustc_middle::ty::{self, TyCtxt};\n use rustc_span::def_id::DefId;\n use rustc_span::Span;\n "}, {"sha": "9e48c078468d59743c56069b97dae9bfcb235b57", "filename": "compiler/rustc_hir_analysis/src/collect/resolve_bound_vars.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_hir_analysis%2Fsrc%2Fcollect%2Fresolve_bound_vars.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_hir_analysis%2Fsrc%2Fcollect%2Fresolve_bound_vars.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcollect%2Fresolve_bound_vars.rs?ref=c83553da318a6d7e736d5a9e92b18fbdd3d76845", "patch": "@@ -17,7 +17,7 @@ use rustc_hir::{GenericArg, GenericParam, GenericParamKind, HirIdMap, LifetimeNa\n use rustc_middle::bug;\n use rustc_middle::hir::nested_filter;\n use rustc_middle::middle::resolve_bound_vars::*;\n-use rustc_middle::ty::{self, DefIdTree, TyCtxt, TypeSuperVisitable, TypeVisitor};\n+use rustc_middle::ty::{self, TyCtxt, TypeSuperVisitable, TypeVisitor};\n use rustc_session::lint;\n use rustc_span::def_id::DefId;\n use rustc_span::symbol::{sym, Ident};"}, {"sha": "acd9f8a5c8eebc97127e76b68657f4f749fb4f78", "filename": "compiler/rustc_hir_analysis/src/collect/type_of.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_hir_analysis%2Fsrc%2Fcollect%2Ftype_of.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_hir_analysis%2Fsrc%2Fcollect%2Ftype_of.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcollect%2Ftype_of.rs?ref=c83553da318a6d7e736d5a9e92b18fbdd3d76845", "patch": "@@ -9,7 +9,7 @@ use rustc_middle::ty::print::with_forced_trimmed_paths;\n use rustc_middle::ty::subst::InternalSubsts;\n use rustc_middle::ty::util::IntTypeExt;\n use rustc_middle::ty::{\n-    self, DefIdTree, IsSuggestable, Ty, TyCtxt, TypeFolder, TypeSuperFoldable, TypeVisitableExt,\n+    self, IsSuggestable, Ty, TyCtxt, TypeFolder, TypeSuperFoldable, TypeVisitableExt,\n };\n use rustc_span::symbol::Ident;\n use rustc_span::{Span, DUMMY_SP};"}, {"sha": "d53c429ca15ca7fc6effa28ce37dea8d9879a588", "filename": "compiler/rustc_hir_analysis/src/outlives/implicit_infer.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_hir_analysis%2Fsrc%2Foutlives%2Fimplicit_infer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_hir_analysis%2Fsrc%2Foutlives%2Fimplicit_infer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Foutlives%2Fimplicit_infer.rs?ref=c83553da318a6d7e736d5a9e92b18fbdd3d76845", "patch": "@@ -1,7 +1,7 @@\n use rustc_data_structures::fx::FxHashMap;\n use rustc_hir::def::DefKind;\n use rustc_hir::def_id::DefId;\n-use rustc_middle::ty::{self, DefIdTree, Ty, TyCtxt};\n+use rustc_middle::ty::{self, Ty, TyCtxt};\n use rustc_middle::ty::{GenericArg, GenericArgKind};\n use rustc_span::Span;\n "}, {"sha": "a8b7699b66750a1658781316be4f1837475c9379", "filename": "compiler/rustc_hir_analysis/src/variance/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_hir_analysis%2Fsrc%2Fvariance%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_hir_analysis%2Fsrc%2Fvariance%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fvariance%2Fmod.rs?ref=c83553da318a6d7e736d5a9e92b18fbdd3d76845", "patch": "@@ -8,7 +8,7 @@ use rustc_hir::def::DefKind;\n use rustc_hir::def_id::{DefId, LocalDefId};\n use rustc_middle::ty::query::Providers;\n use rustc_middle::ty::{self, CrateVariancesMap, SubstsRef, Ty, TyCtxt};\n-use rustc_middle::ty::{DefIdTree, TypeSuperVisitable, TypeVisitable};\n+use rustc_middle::ty::{TypeSuperVisitable, TypeVisitable};\n use std::ops::ControlFlow;\n \n /// Defines the `TermsContext` basically houses an arena where we can"}, {"sha": "a8f8121153fafe8bee80d44f136a482a06c6353f", "filename": "compiler/rustc_hir_typeck/src/fn_ctxt/_impl.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_hir_typeck%2Fsrc%2Ffn_ctxt%2F_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_hir_typeck%2Fsrc%2Ffn_ctxt%2F_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Ffn_ctxt%2F_impl.rs?ref=c83553da318a6d7e736d5a9e92b18fbdd3d76845", "patch": "@@ -25,7 +25,7 @@ use rustc_middle::ty::error::TypeError;\n use rustc_middle::ty::fold::TypeFoldable;\n use rustc_middle::ty::visit::{TypeVisitable, TypeVisitableExt};\n use rustc_middle::ty::{\n-    self, AdtKind, CanonicalUserType, DefIdTree, GenericParamDefKind, Ty, TyCtxt, UserType,\n+    self, AdtKind, CanonicalUserType, GenericParamDefKind, Ty, TyCtxt, UserType,\n };\n use rustc_middle::ty::{GenericArgKind, SubstsRef, UserSelfTy, UserSubsts};\n use rustc_session::lint;"}, {"sha": "dfc14958c3ee12b268637535fde6ea99d91d17cc", "filename": "compiler/rustc_hir_typeck/src/fn_ctxt/adjust_fulfillment_errors.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_hir_typeck%2Fsrc%2Ffn_ctxt%2Fadjust_fulfillment_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_hir_typeck%2Fsrc%2Ffn_ctxt%2Fadjust_fulfillment_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Ffn_ctxt%2Fadjust_fulfillment_errors.rs?ref=c83553da318a6d7e736d5a9e92b18fbdd3d76845", "patch": "@@ -3,9 +3,7 @@ use rustc_hir as hir;\n use rustc_hir::def::Res;\n use rustc_hir::def_id::DefId;\n use rustc_infer::traits::ObligationCauseCode;\n-use rustc_middle::ty::{\n-    self, DefIdTree, Ty, TyCtxt, TypeSuperVisitable, TypeVisitable, TypeVisitor,\n-};\n+use rustc_middle::ty::{self, Ty, TyCtxt, TypeSuperVisitable, TypeVisitable, TypeVisitor};\n use rustc_span::{self, Span};\n use rustc_trait_selection::traits;\n "}, {"sha": "84286344a13d0605e60b0b00f0cddd51a5a91b85", "filename": "compiler/rustc_hir_typeck/src/fn_ctxt/checks.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_hir_typeck%2Fsrc%2Ffn_ctxt%2Fchecks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_hir_typeck%2Fsrc%2Ffn_ctxt%2Fchecks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Ffn_ctxt%2Fchecks.rs?ref=c83553da318a6d7e736d5a9e92b18fbdd3d76845", "patch": "@@ -28,7 +28,7 @@ use rustc_infer::infer::InferOk;\n use rustc_infer::infer::TypeTrace;\n use rustc_middle::ty::adjustment::AllowTwoPhase;\n use rustc_middle::ty::visit::TypeVisitableExt;\n-use rustc_middle::ty::{self, DefIdTree, IsSuggestable, Ty};\n+use rustc_middle::ty::{self, IsSuggestable, Ty};\n use rustc_session::Session;\n use rustc_span::symbol::{kw, Ident};\n use rustc_span::{self, sym, Span};"}, {"sha": "c77251a156fc099f0c7458bfa2019b0b08507372", "filename": "compiler/rustc_hir_typeck/src/fn_ctxt/suggestions.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_hir_typeck%2Fsrc%2Ffn_ctxt%2Fsuggestions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_hir_typeck%2Fsrc%2Ffn_ctxt%2Fsuggestions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Ffn_ctxt%2Fsuggestions.rs?ref=c83553da318a6d7e736d5a9e92b18fbdd3d76845", "patch": "@@ -16,7 +16,7 @@ use rustc_infer::traits::{self, StatementAsExpression};\n use rustc_middle::lint::in_external_macro;\n use rustc_middle::ty::print::with_no_trimmed_paths;\n use rustc_middle::ty::{\n-    self, suggest_constraining_type_params, Binder, DefIdTree, IsSuggestable, ToPredicate, Ty,\n+    self, suggest_constraining_type_params, Binder, IsSuggestable, ToPredicate, Ty,\n     TypeVisitableExt,\n };\n use rustc_session::errors::ExprParenthesesNeeded;"}, {"sha": "4f4779d1543953374228bd92ea74aa411b1efde1", "filename": "compiler/rustc_hir_typeck/src/method/suggest.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_hir_typeck%2Fsrc%2Fmethod%2Fsuggest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_hir_typeck%2Fsrc%2Fmethod%2Fsuggest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Fmethod%2Fsuggest.rs?ref=c83553da318a6d7e736d5a9e92b18fbdd3d76845", "patch": "@@ -27,7 +27,7 @@ use rustc_middle::traits::util::supertraits;\n use rustc_middle::ty::fast_reject::DeepRejectCtxt;\n use rustc_middle::ty::fast_reject::{simplify_type, TreatParams};\n use rustc_middle::ty::print::{with_crate_prefix, with_forced_trimmed_paths};\n-use rustc_middle::ty::{self, DefIdTree, GenericArgKind, Ty, TyCtxt, TypeVisitableExt};\n+use rustc_middle::ty::{self, GenericArgKind, Ty, TyCtxt, TypeVisitableExt};\n use rustc_middle::ty::{IsSuggestable, ToPolyTraitRef};\n use rustc_span::symbol::{kw, sym, Ident};\n use rustc_span::Symbol;"}, {"sha": "0c199babc46826b98909977dceeb0f30eea59af8", "filename": "compiler/rustc_hir_typeck/src/op.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_hir_typeck%2Fsrc%2Fop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_hir_typeck%2Fsrc%2Fop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Fop.rs?ref=c83553da318a6d7e736d5a9e92b18fbdd3d76845", "patch": "@@ -13,7 +13,7 @@ use rustc_middle::ty::adjustment::{\n };\n use rustc_middle::ty::print::with_no_trimmed_paths;\n use rustc_middle::ty::{\n-    self, DefIdTree, IsSuggestable, Ty, TyCtxt, TypeFolder, TypeSuperFoldable, TypeVisitableExt,\n+    self, IsSuggestable, Ty, TyCtxt, TypeFolder, TypeSuperFoldable, TypeVisitableExt,\n };\n use rustc_session::errors::ExprParenthesesNeeded;\n use rustc_span::source_map::Spanned;"}, {"sha": "a3151d2d3657776124dffd0d129a85334df84e50", "filename": "compiler/rustc_infer/src/infer/error_reporting/need_type_info.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fneed_type_info.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fneed_type_info.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fneed_type_info.rs?ref=c83553da318a6d7e736d5a9e92b18fbdd3d76845", "patch": "@@ -17,7 +17,7 @@ use rustc_middle::hir::nested_filter;\n use rustc_middle::infer::unify_key::{ConstVariableOrigin, ConstVariableOriginKind};\n use rustc_middle::ty::adjustment::{Adjust, Adjustment, AutoBorrow};\n use rustc_middle::ty::print::{FmtPrinter, PrettyPrinter, Print, Printer};\n-use rustc_middle::ty::{self, DefIdTree, InferConst};\n+use rustc_middle::ty::{self, InferConst};\n use rustc_middle::ty::{GenericArg, GenericArgKind, SubstsRef};\n use rustc_middle::ty::{IsSuggestable, Ty, TyCtxt, TypeckResults};\n use rustc_span::symbol::{kw, sym, Ident};"}, {"sha": "c5ef48fe3da251c814fbbf217964faedf1c7020f", "filename": "compiler/rustc_infer/src/infer/error_reporting/nice_region_error/util.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fnice_region_error%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fnice_region_error%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fnice_region_error%2Futil.rs?ref=c83553da318a6d7e736d5a9e92b18fbdd3d76845", "patch": "@@ -5,7 +5,7 @@ use crate::infer::error_reporting::nice_region_error::NiceRegionError;\n use crate::infer::TyCtxt;\n use rustc_hir as hir;\n use rustc_hir::def_id::LocalDefId;\n-use rustc_middle::ty::{self, Binder, DefIdTree, Region, Ty, TypeVisitable};\n+use rustc_middle::ty::{self, Binder, Region, Ty, TypeVisitable};\n use rustc_span::Span;\n \n /// Information about the anonymous region we are searching for."}, {"sha": "7ca50f5a2db707a692dfd3488a6c76b89eafe5c2", "filename": "compiler/rustc_lint/src/types.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_lint%2Fsrc%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_lint%2Fsrc%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Ftypes.rs?ref=c83553da318a6d7e736d5a9e92b18fbdd3d76845", "patch": "@@ -17,7 +17,7 @@ use rustc_hir::{is_range_literal, Expr, ExprKind, Node};\n use rustc_middle::ty::layout::{IntegerExt, LayoutOf, SizeSkeleton};\n use rustc_middle::ty::subst::SubstsRef;\n use rustc_middle::ty::{\n-    self, AdtKind, DefIdTree, Ty, TyCtxt, TypeSuperVisitable, TypeVisitable, TypeVisitableExt,\n+    self, AdtKind, Ty, TyCtxt, TypeSuperVisitable, TypeVisitable, TypeVisitableExt,\n };\n use rustc_span::def_id::LocalDefId;\n use rustc_span::source_map;"}, {"sha": "c43162f63258b5027ea66eb4fcb703b0c3b95967", "filename": "compiler/rustc_lint/src/unused.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_lint%2Fsrc%2Funused.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_lint%2Fsrc%2Funused.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Funused.rs?ref=c83553da318a6d7e736d5a9e92b18fbdd3d76845", "patch": "@@ -14,7 +14,7 @@ use rustc_hir::def::{DefKind, Res};\n use rustc_hir::def_id::DefId;\n use rustc_infer::traits::util::elaborate_predicates_with_span;\n use rustc_middle::ty::adjustment;\n-use rustc_middle::ty::{self, DefIdTree, Ty};\n+use rustc_middle::ty::{self, Ty};\n use rustc_span::symbol::Symbol;\n use rustc_span::symbol::{kw, sym};\n use rustc_span::{BytePos, Span};"}, {"sha": "43eef1c770c96fe6e8d7809c256f7c6cc85c192a", "filename": "compiler/rustc_middle/src/hir/map/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fmap%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fmap%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fmap%2Fmod.rs?ref=c83553da318a6d7e736d5a9e92b18fbdd3d76845", "patch": "@@ -1,5 +1,5 @@\n use crate::hir::{ModuleItems, Owner};\n-use crate::ty::{DefIdTree, TyCtxt};\n+use crate::ty::TyCtxt;\n use rustc_ast as ast;\n use rustc_data_structures::fingerprint::Fingerprint;\n use rustc_data_structures::stable_hasher::{HashStable, StableHasher};"}, {"sha": "6706b9db3f5449f844d11becdf47741fd0cce497", "filename": "compiler/rustc_middle/src/hir/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fmod.rs?ref=c83553da318a6d7e736d5a9e92b18fbdd3d76845", "patch": "@@ -7,7 +7,7 @@ pub mod nested_filter;\n pub mod place;\n \n use crate::ty::query::Providers;\n-use crate::ty::{DefIdTree, ImplSubject, TyCtxt};\n+use crate::ty::{ImplSubject, TyCtxt};\n use rustc_data_structures::fingerprint::Fingerprint;\n use rustc_data_structures::stable_hasher::{HashStable, StableHasher};\n use rustc_data_structures::sync::{par_for_each_in, Send, Sync};"}, {"sha": "171cf1c1ab1739ae466033fc529bf6f3b6abce98", "filename": "compiler/rustc_middle/src/middle/privacy.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_middle%2Fsrc%2Fmiddle%2Fprivacy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_middle%2Fsrc%2Fmiddle%2Fprivacy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmiddle%2Fprivacy.rs?ref=c83553da318a6d7e736d5a9e92b18fbdd3d76845", "patch": "@@ -1,7 +1,7 @@\n //! A pass that checks to make sure private fields and methods aren't used\n //! outside their scopes. This pass will also generate a set of exported items\n //! which are available for use externally when compiled as a library.\n-use crate::ty::{DefIdTree, TyCtxt, Visibility};\n+use crate::ty::{TyCtxt, Visibility};\n use rustc_data_structures::fx::FxHashMap;\n use rustc_data_structures::stable_hasher::{HashStable, StableHasher};\n use rustc_macros::HashStable;\n@@ -112,7 +112,7 @@ impl EffectiveVisibilities {\n         &mut self,\n         def_id: LocalDefId,\n         eff_vis: &EffectiveVisibility,\n-        tree: impl DefIdTree,\n+        tcx: TyCtxt<'_>,\n     ) {\n         use std::collections::hash_map::Entry;\n         match self.map.entry(def_id) {\n@@ -122,7 +122,7 @@ impl EffectiveVisibilities {\n                     let vis_at_level = eff_vis.at_level(l);\n                     let old_vis_at_level = old_eff_vis.at_level_mut(l);\n                     if vis_at_level != old_vis_at_level\n-                        && vis_at_level.is_at_least(*old_vis_at_level, tree)\n+                        && vis_at_level.is_at_least(*old_vis_at_level, tcx)\n                     {\n                         *old_vis_at_level = *vis_at_level\n                     }\n@@ -219,7 +219,7 @@ impl<Id: Eq + Hash> EffectiveVisibilities<Id> {\n         lazy_private_vis: impl FnOnce() -> Visibility,\n         inherited_effective_vis: EffectiveVisibility,\n         level: Level,\n-        tree: impl DefIdTree,\n+        tcx: TyCtxt<'_>,\n     ) -> bool {\n         let mut changed = false;\n         let mut current_effective_vis = self\n@@ -240,7 +240,7 @@ impl<Id: Eq + Hash> EffectiveVisibilities<Id> {\n                     && level != l)\n                 {\n                     calculated_effective_vis =\n-                        if nominal_vis.is_at_least(inherited_effective_vis_at_level, tree) {\n+                        if nominal_vis.is_at_least(inherited_effective_vis_at_level, tcx) {\n                             inherited_effective_vis_at_level\n                         } else {\n                             nominal_vis\n@@ -249,7 +249,7 @@ impl<Id: Eq + Hash> EffectiveVisibilities<Id> {\n                 // effective visibility can't be decreased at next update call for the\n                 // same id\n                 if *current_effective_vis_at_level != calculated_effective_vis\n-                    && calculated_effective_vis.is_at_least(*current_effective_vis_at_level, tree)\n+                    && calculated_effective_vis.is_at_least(*current_effective_vis_at_level, tcx)\n                 {\n                     changed = true;\n                     *current_effective_vis_at_level = calculated_effective_vis;"}, {"sha": "b61f7806b7a993cbab4801dc0f868cb532507582", "filename": "compiler/rustc_middle/src/middle/stability.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_middle%2Fsrc%2Fmiddle%2Fstability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_middle%2Fsrc%2Fmiddle%2Fstability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmiddle%2Fstability.rs?ref=c83553da318a6d7e736d5a9e92b18fbdd3d76845", "patch": "@@ -3,7 +3,7 @@\n \n pub use self::StabilityLevel::*;\n \n-use crate::ty::{self, DefIdTree, TyCtxt};\n+use crate::ty::{self, TyCtxt};\n use rustc_ast::NodeId;\n use rustc_attr::{self as attr, ConstStability, DefaultBodyStability, Deprecation, Stability};\n use rustc_data_structures::fx::FxHashMap;"}, {"sha": "8e91e6291efb96076e2022b701a2dd45e6942f7f", "filename": "compiler/rustc_middle/src/mir/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs?ref=c83553da318a6d7e736d5a9e92b18fbdd3d76845", "patch": "@@ -10,7 +10,7 @@ use crate::ty::codec::{TyDecoder, TyEncoder};\n use crate::ty::fold::{FallibleTypeFolder, TypeFoldable};\n use crate::ty::print::{FmtPrinter, Printer};\n use crate::ty::visit::{TypeVisitable, TypeVisitableExt, TypeVisitor};\n-use crate::ty::{self, DefIdTree, List, Ty, TyCtxt};\n+use crate::ty::{self, List, Ty, TyCtxt};\n use crate::ty::{AdtDef, InstanceDef, ScalarInt, UserTypeAnnotationIndex};\n use crate::ty::{GenericArg, InternalSubsts, SubstsRef};\n "}, {"sha": "dfe23cf991f8c8999353586e5da6aa0efb43af83", "filename": "compiler/rustc_middle/src/ty/assoc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_middle%2Fsrc%2Fty%2Fassoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_middle%2Fsrc%2Fty%2Fassoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fassoc.rs?ref=c83553da318a6d7e736d5a9e92b18fbdd3d76845", "patch": "@@ -1,6 +1,6 @@\n pub use self::AssocItemContainer::*;\n \n-use crate::ty::{self, DefIdTree};\n+use crate::ty;\n use rustc_data_structures::sorted_map::SortedIndexMultiMap;\n use rustc_hir as hir;\n use rustc_hir::def::{DefKind, Namespace};"}, {"sha": "3e3d6c2ba88574c097382b7a14b7b420840fe3b6", "filename": "compiler/rustc_middle/src/ty/consts.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_middle%2Fsrc%2Fty%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_middle%2Fsrc%2Fty%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fconsts.rs?ref=c83553da318a6d7e736d5a9e92b18fbdd3d76845", "patch": "@@ -1,6 +1,6 @@\n use crate::middle::resolve_bound_vars as rbv;\n use crate::mir::interpret::LitToConstInput;\n-use crate::ty::{self, DefIdTree, InternalSubsts, ParamEnv, ParamEnvAnd, Ty, TyCtxt};\n+use crate::ty::{self, InternalSubsts, ParamEnv, ParamEnvAnd, Ty, TyCtxt};\n use rustc_data_structures::intern::Interned;\n use rustc_hir as hir;\n use rustc_hir::def::{DefKind, Res};"}, {"sha": "fff0fa7ddc6a04737234dc4da3a61e87a2baeb17", "filename": "compiler/rustc_middle/src/ty/context.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs?ref=c83553da318a6d7e736d5a9e92b18fbdd3d76845", "patch": "@@ -20,11 +20,10 @@ use crate::traits;\n use crate::traits::solve::{ExternalConstraints, ExternalConstraintsData};\n use crate::ty::query::{self, TyCtxtAt};\n use crate::ty::{\n-    self, AdtDef, AdtDefData, AdtKind, Binder, Const, ConstData, DefIdTree, FloatTy, FloatVar,\n-    FloatVid, GenericParamDefKind, ImplPolarity, InferTy, IntTy, IntVar, IntVid, List, ParamConst,\n-    ParamTy, PolyExistentialPredicate, PolyFnSig, Predicate, PredicateKind, Region, RegionKind,\n-    ReprOptions, TraitObjectVisitor, Ty, TyKind, TyVar, TyVid, TypeAndMut, TypeckResults, UintTy,\n-    Visibility,\n+    self, AdtDef, AdtDefData, AdtKind, Binder, Const, ConstData, FloatTy, FloatVar, FloatVid,\n+    GenericParamDefKind, ImplPolarity, InferTy, IntTy, IntVar, IntVid, List, ParamConst, ParamTy,\n+    PolyExistentialPredicate, PolyFnSig, Predicate, PredicateKind, Region, RegionKind, ReprOptions,\n+    TraitObjectVisitor, Ty, TyKind, TyVar, TyVid, TypeAndMut, TypeckResults, UintTy, Visibility,\n };\n use crate::ty::{GenericArg, InternalSubsts, SubstsRef};\n use rustc_ast as ast;"}, {"sha": "3ca17e7273eb996f308f34f5e4e341d759e4354f", "filename": "compiler/rustc_middle/src/ty/diagnostics.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_middle%2Fsrc%2Fty%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_middle%2Fsrc%2Fty%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fdiagnostics.rs?ref=c83553da318a6d7e736d5a9e92b18fbdd3d76845", "patch": "@@ -3,9 +3,9 @@\n use std::ops::ControlFlow;\n \n use crate::ty::{\n-    AliasTy, Const, ConstKind, DefIdTree, FallibleTypeFolder, InferConst, InferTy, Opaque,\n-    PolyTraitPredicate, Projection, Ty, TyCtxt, TypeFoldable, TypeSuperFoldable,\n-    TypeSuperVisitable, TypeVisitable, TypeVisitor,\n+    AliasTy, Const, ConstKind, FallibleTypeFolder, InferConst, InferTy, Opaque, PolyTraitPredicate,\n+    Projection, Ty, TyCtxt, TypeFoldable, TypeSuperFoldable, TypeSuperVisitable, TypeVisitable,\n+    TypeVisitor,\n };\n \n use rustc_data_structures::fx::FxHashMap;"}, {"sha": "ac42d6e05100fee5d59bad0e4d9dc80cc09b7679", "filename": "compiler/rustc_middle/src/ty/inhabitedness/inhabited_predicate.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_middle%2Fsrc%2Fty%2Finhabitedness%2Finhabited_predicate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_middle%2Fsrc%2Fty%2Finhabitedness%2Finhabited_predicate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Finhabitedness%2Finhabited_predicate.rs?ref=c83553da318a6d7e736d5a9e92b18fbdd3d76845", "patch": "@@ -1,5 +1,5 @@\n use crate::ty::context::TyCtxt;\n-use crate::ty::{self, DefId, DefIdTree, ParamEnv, Ty};\n+use crate::ty::{self, DefId, ParamEnv, Ty};\n \n /// Represents whether some type is inhabited in a given context.\n /// Examples of uninhabited types are `!`, `enum Void {}`, or a struct"}, {"sha": "e71d8419719f0111be042a129414ac19fc5cde43", "filename": "compiler/rustc_middle/src/ty/mod.rs", "status": "modified", "additions": 13, "deletions": 17, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_middle%2Fsrc%2Fty%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_middle%2Fsrc%2Fty%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fmod.rs?ref=c83553da318a6d7e736d5a9e92b18fbdd3d76845", "patch": "@@ -325,12 +325,15 @@ pub struct ClosureSizeProfileData<'tcx> {\n     pub after_feature_tys: Ty<'tcx>,\n }\n \n-pub trait DefIdTree: Copy {\n-    fn opt_parent(self, id: DefId) -> Option<DefId>;\n+impl TyCtxt<'_> {\n+    #[inline]\n+    pub fn opt_parent(self, id: DefId) -> Option<DefId> {\n+        self.def_key(id).parent.map(|index| DefId { index, ..id })\n+    }\n \n     #[inline]\n     #[track_caller]\n-    fn parent(self, id: DefId) -> DefId {\n+    pub fn parent(self, id: DefId) -> DefId {\n         match self.opt_parent(id) {\n             Some(id) => id,\n             // not `unwrap_or_else` to avoid breaking caller tracking\n@@ -340,17 +343,17 @@ pub trait DefIdTree: Copy {\n \n     #[inline]\n     #[track_caller]\n-    fn opt_local_parent(self, id: LocalDefId) -> Option<LocalDefId> {\n+    pub fn opt_local_parent(self, id: LocalDefId) -> Option<LocalDefId> {\n         self.opt_parent(id.to_def_id()).map(DefId::expect_local)\n     }\n \n     #[inline]\n     #[track_caller]\n-    fn local_parent(self, id: LocalDefId) -> LocalDefId {\n+    pub fn local_parent(self, id: LocalDefId) -> LocalDefId {\n         self.parent(id.to_def_id()).expect_local()\n     }\n \n-    fn is_descendant_of(self, mut descendant: DefId, ancestor: DefId) -> bool {\n+    pub fn is_descendant_of(self, mut descendant: DefId, ancestor: DefId) -> bool {\n         if descendant.krate != ancestor.krate {\n             return false;\n         }\n@@ -365,13 +368,6 @@ pub trait DefIdTree: Copy {\n     }\n }\n \n-impl<'tcx> DefIdTree for TyCtxt<'tcx> {\n-    #[inline]\n-    fn opt_parent(self, id: DefId) -> Option<DefId> {\n-        self.def_key(id).parent.map(|index| DefId { index, ..id })\n-    }\n-}\n-\n impl<Id> Visibility<Id> {\n     pub fn is_public(self) -> bool {\n         matches!(self, Visibility::Public)\n@@ -391,19 +387,19 @@ impl<Id: Into<DefId>> Visibility<Id> {\n     }\n \n     /// Returns `true` if an item with this visibility is accessible from the given module.\n-    pub fn is_accessible_from(self, module: impl Into<DefId>, tree: impl DefIdTree) -> bool {\n+    pub fn is_accessible_from(self, module: impl Into<DefId>, tcx: TyCtxt<'_>) -> bool {\n         match self {\n             // Public items are visible everywhere.\n             Visibility::Public => true,\n-            Visibility::Restricted(id) => tree.is_descendant_of(module.into(), id.into()),\n+            Visibility::Restricted(id) => tcx.is_descendant_of(module.into(), id.into()),\n         }\n     }\n \n     /// Returns `true` if this visibility is at least as accessible as the given visibility\n-    pub fn is_at_least(self, vis: Visibility<impl Into<DefId>>, tree: impl DefIdTree) -> bool {\n+    pub fn is_at_least(self, vis: Visibility<impl Into<DefId>>, tcx: TyCtxt<'_>) -> bool {\n         match vis {\n             Visibility::Public => self.is_public(),\n-            Visibility::Restricted(id) => self.is_accessible_from(id, tree),\n+            Visibility::Restricted(id) => self.is_accessible_from(id, tcx),\n         }\n     }\n }"}, {"sha": "d947d96041ef7ebc702a74f4ce0a64dca9031dec", "filename": "compiler/rustc_middle/src/ty/print/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_middle%2Fsrc%2Fty%2Fprint%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_middle%2Fsrc%2Fty%2Fprint%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fprint%2Fmod.rs?ref=c83553da318a6d7e736d5a9e92b18fbdd3d76845", "patch": "@@ -1,5 +1,5 @@\n use crate::ty::GenericArg;\n-use crate::ty::{self, DefIdTree, Ty, TyCtxt};\n+use crate::ty::{self, Ty, TyCtxt};\n \n use rustc_data_structures::fx::FxHashSet;\n use rustc_data_structures::sso::SsoHashSet;"}, {"sha": "b3139d23d36e3602ce706e3646c688e188efcf5c", "filename": "compiler/rustc_middle/src/ty/print/pretty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_middle%2Fsrc%2Fty%2Fprint%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_middle%2Fsrc%2Fty%2Fprint%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fprint%2Fpretty.rs?ref=c83553da318a6d7e736d5a9e92b18fbdd3d76845", "patch": "@@ -1,6 +1,6 @@\n use crate::mir::interpret::{AllocRange, GlobalAlloc, Pointer, Provenance, Scalar};\n use crate::ty::{\n-    self, ConstInt, DefIdTree, ParamConst, ScalarInt, Term, TermKind, Ty, TyCtxt, TypeFoldable,\n+    self, ConstInt, ParamConst, ScalarInt, Term, TermKind, Ty, TyCtxt, TypeFoldable,\n     TypeSuperFoldable, TypeSuperVisitable, TypeVisitable, TypeVisitableExt,\n };\n use crate::ty::{GenericArg, GenericArgKind};"}, {"sha": "5539db25e7a6ca5955dd74eecf71148bfd28037c", "filename": "compiler/rustc_middle/src/ty/sty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_middle%2Fsrc%2Fty%2Fsty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_middle%2Fsrc%2Fty%2Fsty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fsty.rs?ref=c83553da318a6d7e736d5a9e92b18fbdd3d76845", "patch": "@@ -7,7 +7,7 @@ use crate::ty::subst::{GenericArg, InternalSubsts, SubstsRef};\n use crate::ty::visit::ValidateBoundVars;\n use crate::ty::InferTy::*;\n use crate::ty::{\n-    self, AdtDef, DefIdTree, Discr, FallibleTypeFolder, Term, Ty, TyCtxt, TypeFlags, TypeFoldable,\n+    self, AdtDef, Discr, FallibleTypeFolder, Term, Ty, TyCtxt, TypeFlags, TypeFoldable,\n     TypeSuperFoldable, TypeSuperVisitable, TypeVisitable, TypeVisitableExt, TypeVisitor,\n };\n use crate::ty::{List, ParamEnv};"}, {"sha": "8b5469743dad6d70ebf4f2a7dee5ca7200c9ed23", "filename": "compiler/rustc_middle/src/ty/util.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_middle%2Fsrc%2Fty%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_middle%2Fsrc%2Fty%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Futil.rs?ref=c83553da318a6d7e736d5a9e92b18fbdd3d76845", "patch": "@@ -4,8 +4,8 @@ use crate::middle::codegen_fn_attrs::CodegenFnAttrFlags;\n use crate::mir;\n use crate::ty::layout::IntegerExt;\n use crate::ty::{\n-    self, DefIdTree, FallibleTypeFolder, ToPredicate, Ty, TyCtxt, TypeFoldable, TypeFolder,\n-    TypeSuperFoldable, TypeVisitableExt,\n+    self, FallibleTypeFolder, ToPredicate, Ty, TyCtxt, TypeFoldable, TypeFolder, TypeSuperFoldable,\n+    TypeVisitableExt,\n };\n use crate::ty::{GenericArgKind, SubstsRef};\n use rustc_apfloat::Float as _;"}, {"sha": "55aa4fcff2cdb4890d81680a0734b1dbbed1d6c6", "filename": "compiler/rustc_middle/src/values.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_middle%2Fsrc%2Fvalues.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_middle%2Fsrc%2Fvalues.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fvalues.rs?ref=c83553da318a6d7e736d5a9e92b18fbdd3d76845", "patch": "@@ -4,7 +4,7 @@ use rustc_errors::{pluralize, struct_span_err, Applicability, MultiSpan};\n use rustc_hir as hir;\n use rustc_hir::def::{DefKind, Res};\n use rustc_middle::ty::Representability;\n-use rustc_middle::ty::{self, DefIdTree, Ty, TyCtxt};\n+use rustc_middle::ty::{self, Ty, TyCtxt};\n use rustc_query_system::query::QueryInfo;\n use rustc_query_system::Value;\n use rustc_span::def_id::LocalDefId;"}, {"sha": "f356c8a68380c393532db2e1e17e8a24d2854388", "filename": "compiler/rustc_mir_build/src/thir/pattern/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2Fmod.rs?ref=c83553da318a6d7e736d5a9e92b18fbdd3d76845", "patch": "@@ -25,7 +25,7 @@ use rustc_middle::mir::{BorrowKind, Field, Mutability};\n use rustc_middle::thir::{Ascription, BindingMode, FieldPat, LocalVarId, Pat, PatKind, PatRange};\n use rustc_middle::ty::subst::{GenericArg, SubstsRef};\n use rustc_middle::ty::CanonicalUserTypeAnnotation;\n-use rustc_middle::ty::{self, AdtDef, ConstKind, DefIdTree, Region, Ty, TyCtxt, UserType};\n+use rustc_middle::ty::{self, AdtDef, ConstKind, Region, Ty, TyCtxt, UserType};\n use rustc_span::{Span, Symbol};\n \n use std::cmp::Ordering;"}, {"sha": "3c7425d83c4880b387c82d22f449379337a1fd27", "filename": "compiler/rustc_monomorphize/src/partitioning/default.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_monomorphize%2Fsrc%2Fpartitioning%2Fdefault.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_monomorphize%2Fsrc%2Fpartitioning%2Fdefault.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_monomorphize%2Fsrc%2Fpartitioning%2Fdefault.rs?ref=c83553da318a6d7e736d5a9e92b18fbdd3d76845", "patch": "@@ -9,7 +9,7 @@ use rustc_middle::middle::exported_symbols::{SymbolExportInfo, SymbolExportLevel\n use rustc_middle::mir::mono::{CodegenUnit, CodegenUnitNameBuilder, Linkage, Visibility};\n use rustc_middle::mir::mono::{InstantiationMode, MonoItem};\n use rustc_middle::ty::print::characteristic_def_id_of_type;\n-use rustc_middle::ty::{self, visit::TypeVisitableExt, DefIdTree, InstanceDef, TyCtxt};\n+use rustc_middle::ty::{self, visit::TypeVisitableExt, InstanceDef, TyCtxt};\n use rustc_span::symbol::Symbol;\n \n use super::PartitioningCx;"}, {"sha": "28e06e5bb3ef298564845a3a5b9c2bf399b7b3e3", "filename": "compiler/rustc_passes/src/dead.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_passes%2Fsrc%2Fdead.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_passes%2Fsrc%2Fdead.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fdead.rs?ref=c83553da318a6d7e736d5a9e92b18fbdd3d76845", "patch": "@@ -13,7 +13,7 @@ use rustc_hir::{Node, PatKind, TyKind};\n use rustc_middle::middle::codegen_fn_attrs::CodegenFnAttrFlags;\n use rustc_middle::middle::privacy::Level;\n use rustc_middle::ty::query::Providers;\n-use rustc_middle::ty::{self, DefIdTree, TyCtxt};\n+use rustc_middle::ty::{self, TyCtxt};\n use rustc_session::lint;\n use rustc_span::symbol::{sym, Symbol};\n use std::mem;"}, {"sha": "b7e6a11998b1cff983aef83d1b41bc4692c02432", "filename": "compiler/rustc_passes/src/entry.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_passes%2Fsrc%2Fentry.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_passes%2Fsrc%2Fentry.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fentry.rs?ref=c83553da318a6d7e736d5a9e92b18fbdd3d76845", "patch": "@@ -4,7 +4,7 @@ use rustc_hir::def::DefKind;\n use rustc_hir::def_id::{DefId, LocalDefId, CRATE_DEF_ID, LOCAL_CRATE};\n use rustc_hir::{ItemId, Node, CRATE_HIR_ID};\n use rustc_middle::ty::query::Providers;\n-use rustc_middle::ty::{DefIdTree, TyCtxt};\n+use rustc_middle::ty::TyCtxt;\n use rustc_session::config::{sigpipe, CrateType, EntryFnType};\n use rustc_session::parse::feature_err;\n use rustc_span::symbol::sym;"}, {"sha": "9418f3cd322a371b51ffd51bbe21b88879e99988", "filename": "compiler/rustc_passes/src/hir_id_validator.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_passes%2Fsrc%2Fhir_id_validator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_passes%2Fsrc%2Fhir_id_validator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fhir_id_validator.rs?ref=c83553da318a6d7e736d5a9e92b18fbdd3d76845", "patch": "@@ -5,7 +5,7 @@ use rustc_hir::intravisit;\n use rustc_hir::{HirId, ItemLocalId};\n use rustc_index::bit_set::GrowableBitSet;\n use rustc_middle::hir::nested_filter;\n-use rustc_middle::ty::{DefIdTree, TyCtxt};\n+use rustc_middle::ty::TyCtxt;\n \n pub fn check_crate(tcx: TyCtxt<'_>) {\n     tcx.dep_graph.assert_ignored();"}, {"sha": "db9d0dcc30053a7c04bc75e4fabbf00e5fb1d67a", "filename": "compiler/rustc_passes/src/liveness.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_passes%2Fsrc%2Fliveness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_passes%2Fsrc%2Fliveness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fliveness.rs?ref=c83553da318a6d7e736d5a9e92b18fbdd3d76845", "patch": "@@ -95,7 +95,7 @@ use rustc_hir::intravisit::{self, Visitor};\n use rustc_hir::{Expr, HirId, HirIdMap, HirIdSet};\n use rustc_index::vec::IndexVec;\n use rustc_middle::ty::query::Providers;\n-use rustc_middle::ty::{self, DefIdTree, RootVariableMinCaptureList, Ty, TyCtxt};\n+use rustc_middle::ty::{self, RootVariableMinCaptureList, Ty, TyCtxt};\n use rustc_session::lint;\n use rustc_span::symbol::{kw, sym, Symbol};\n use rustc_span::{BytePos, Span};"}, {"sha": "d6cb68a9c20d78c38b22346d303799ece39dc951", "filename": "compiler/rustc_passes/src/reachable.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_passes%2Fsrc%2Freachable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_passes%2Fsrc%2Freachable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Freachable.rs?ref=c83553da318a6d7e736d5a9e92b18fbdd3d76845", "patch": "@@ -14,7 +14,7 @@ use rustc_hir::Node;\n use rustc_middle::middle::codegen_fn_attrs::{CodegenFnAttrFlags, CodegenFnAttrs};\n use rustc_middle::middle::privacy::{self, Level};\n use rustc_middle::ty::query::Providers;\n-use rustc_middle::ty::{self, DefIdTree, TyCtxt};\n+use rustc_middle::ty::{self, TyCtxt};\n use rustc_session::config::CrateType;\n use rustc_target::spec::abi::Abi;\n "}, {"sha": "99a44b0ca4dfd0de1a786931c8638dde2e13e5c4", "filename": "compiler/rustc_privacy/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_privacy%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_privacy%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_privacy%2Fsrc%2Flib.rs?ref=c83553da318a6d7e736d5a9e92b18fbdd3d76845", "patch": "@@ -29,7 +29,7 @@ use rustc_middle::middle::privacy::{EffectiveVisibilities, Level};\n use rustc_middle::span_bug;\n use rustc_middle::ty::query::Providers;\n use rustc_middle::ty::subst::InternalSubsts;\n-use rustc_middle::ty::{self, Const, DefIdTree, GenericParamDefKind};\n+use rustc_middle::ty::{self, Const, GenericParamDefKind};\n use rustc_middle::ty::{TraitRef, Ty, TyCtxt, TypeSuperVisitable, TypeVisitable, TypeVisitor};\n use rustc_session::lint;\n use rustc_span::hygiene::Transparency;"}, {"sha": "9526bca3df267db0ed18dd469264a85e1fddb2bd", "filename": "compiler/rustc_resolve/src/build_reduced_graph.rs", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_resolve%2Fsrc%2Fbuild_reduced_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_resolve%2Fsrc%2Fbuild_reduced_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Fbuild_reduced_graph.rs?ref=c83553da318a6d7e736d5a9e92b18fbdd3d76845", "patch": "@@ -25,9 +25,8 @@ use rustc_expand::expand::AstFragment;\n use rustc_hir::def::{self, *};\n use rustc_hir::def_id::{DefId, LocalDefId, CRATE_DEF_ID};\n use rustc_metadata::creader::LoadedMacro;\n-use rustc_middle::bug;\n use rustc_middle::metadata::ModChild;\n-use rustc_middle::ty::{self, DefIdTree};\n+use rustc_middle::{bug, ty};\n use rustc_session::cstore::CrateStore;\n use rustc_span::hygiene::{ExpnId, LocalExpnId, MacroKind};\n use rustc_span::source_map::respan;\n@@ -99,7 +98,7 @@ impl<'a, 'tcx> Resolver<'a, 'tcx> {\n         loop {\n             match self.get_module(def_id) {\n                 Some(module) => return module,\n-                None => def_id = self.parent(def_id),\n+                None => def_id = self.tcx.parent(def_id),\n             }\n         }\n     }\n@@ -775,7 +774,7 @@ impl<'a, 'b, 'tcx> BuildReducedGraphVisitor<'a, 'b, 'tcx> {\n                         let field_vis = self\n                             .try_resolve_visibility(&field.vis, false)\n                             .unwrap_or(ty::Visibility::Public);\n-                        if ctor_vis.is_at_least(field_vis, &*self.r) {\n+                        if ctor_vis.is_at_least(field_vis, self.r.tcx) {\n                             ctor_vis = field_vis;\n                         }\n                         ret_fields.push(field_vis.to_def_id());\n@@ -1414,10 +1413,7 @@ impl<'a, 'b, 'tcx> Visitor<'b> for BuildReducedGraphVisitor<'a, 'b, 'tcx> {\n \n         if !(ctxt == AssocCtxt::Impl\n             && matches!(item.vis.kind, ast::VisibilityKind::Inherited)\n-            && self\n-                .r\n-                .trait_impl_items\n-                .contains(&ty::DefIdTree::local_parent(&*self.r, local_def_id)))\n+            && self.r.trait_impl_items.contains(&self.r.tcx.local_parent(local_def_id)))\n         {\n             // Trait impl item visibility is inherited from its trait when not specified\n             // explicitly. In that case we cannot determine it here in early resolve,"}, {"sha": "adec7973671dd58a822fc73da93a89b2b53e2be5", "filename": "compiler/rustc_resolve/src/diagnostics.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs?ref=c83553da318a6d7e736d5a9e92b18fbdd3d76845", "patch": "@@ -15,7 +15,7 @@ use rustc_hir::def::{self, CtorKind, CtorOf, DefKind, NonMacroAttrKind, PerNS};\n use rustc_hir::def_id::{DefId, CRATE_DEF_ID, LOCAL_CRATE};\n use rustc_hir::PrimTy;\n use rustc_middle::bug;\n-use rustc_middle::ty::{DefIdTree, TyCtxt};\n+use rustc_middle::ty::TyCtxt;\n use rustc_session::lint::builtin::ABSOLUTE_PATHS_NOT_STARTING_WITH_CRATE;\n use rustc_session::lint::builtin::MACRO_EXPANDED_MACRO_EXPORTS_ACCESSED_BY_ABSOLUTE_PATHS;\n use rustc_session::lint::BuiltinLintDiagnostics;\n@@ -1197,7 +1197,7 @@ impl<'a, 'tcx> Resolver<'a, 'tcx> {\n                         segms.push(ast::PathSegment::from_ident(ident));\n                         let path = Path { span: name_binding.span, segments: segms, tokens: None };\n                         let did = match res {\n-                            Res::Def(DefKind::Ctor(..), did) => this.opt_parent(did),\n+                            Res::Def(DefKind::Ctor(..), did) => this.tcx.opt_parent(did),\n                             _ => res.opt_def_id(),\n                         };\n \n@@ -1591,7 +1591,7 @@ impl<'a, 'tcx> Resolver<'a, 'tcx> {\n             ctor_def_id,\n         )) = binding.kind\n         {\n-            let def_id = self.parent(ctor_def_id);\n+            let def_id = self.tcx.parent(ctor_def_id);\n             let fields = self.field_names.get(&def_id)?;\n             return fields.iter().map(|name| name.span).reduce(Span::to); // None for `struct Foo()`\n         }"}, {"sha": "4bb252bfb29ddc331352de762e2c3089ac9be2ba", "filename": "compiler/rustc_resolve/src/effective_visibilities.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_resolve%2Fsrc%2Feffective_visibilities.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_resolve%2Fsrc%2Feffective_visibilities.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Feffective_visibilities.rs?ref=c83553da318a6d7e736d5a9e92b18fbdd3d76845", "patch": "@@ -9,7 +9,7 @@ use rustc_hir::def_id::LocalDefId;\n use rustc_hir::def_id::CRATE_DEF_ID;\n use rustc_middle::middle::privacy::Level;\n use rustc_middle::middle::privacy::{EffectiveVisibilities, EffectiveVisibility};\n-use rustc_middle::ty::{DefIdTree, Visibility};\n+use rustc_middle::ty::Visibility;\n use std::mem;\n \n type ImportId<'a> = Interned<'a, NameBinding<'a>>;\n@@ -60,7 +60,7 @@ impl Resolver<'_, '_> {\n         // For mod items `nearest_normal_mod` returns its argument, but we actually need its parent.\n         let normal_mod_id = self.nearest_normal_mod(def_id);\n         if normal_mod_id == def_id {\n-            self.opt_local_parent(def_id).map_or(Visibility::Public, Visibility::Restricted)\n+            self.tcx.opt_local_parent(def_id).map_or(Visibility::Public, Visibility::Restricted)\n         } else {\n             Visibility::Restricted(normal_mod_id)\n         }"}, {"sha": "5d40c6e4e4862d38dacc98d2e7eaf2e4e7895142", "filename": "compiler/rustc_resolve/src/imports.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_resolve%2Fsrc%2Fimports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_resolve%2Fsrc%2Fimports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Fimports.rs?ref=c83553da318a6d7e736d5a9e92b18fbdd3d76845", "patch": "@@ -245,7 +245,7 @@ impl<'a, 'tcx> Resolver<'a, 'tcx> {\n         import: &'a Import<'a>,\n     ) -> &'a NameBinding<'a> {\n         let import_vis = import.expect_vis().to_def_id();\n-        let vis = if binding.vis.is_at_least(import_vis, self)\n+        let vis = if binding.vis.is_at_least(import_vis, self.tcx)\n             || pub_use_of_private_extern_crate_hack(import, binding)\n         {\n             import_vis\n@@ -255,7 +255,7 @@ impl<'a, 'tcx> Resolver<'a, 'tcx> {\n \n         if let ImportKind::Glob { ref max_vis, .. } = import.kind {\n             if vis == import_vis\n-                || max_vis.get().map_or(true, |max_vis| vis.is_at_least(max_vis, self))\n+                || max_vis.get().map_or(true, |max_vis| vis.is_at_least(max_vis, self.tcx))\n             {\n                 max_vis.set(Some(vis.expect_local()))\n             }\n@@ -294,7 +294,7 @@ impl<'a, 'tcx> Resolver<'a, 'tcx> {\n                                 old_binding,\n                                 binding,\n                             ));\n-                        } else if !old_binding.vis.is_at_least(binding.vis, &*this) {\n+                        } else if !old_binding.vis.is_at_least(binding.vis, this.tcx) {\n                             // We are glob-importing the same item but with greater visibility.\n                             resolution.binding = Some(binding);\n                         }\n@@ -786,7 +786,7 @@ impl<'a, 'tcx> Resolver<'a, 'tcx> {\n                     }\n                     if !is_prelude\n                     && let Some(max_vis) = max_vis.get()\n-                    && !max_vis.is_at_least(import.expect_vis(), &*self)\n+                    && !max_vis.is_at_least(import.expect_vis(), self.tcx)\n                 {\n                     let msg = \"glob import doesn't reexport anything because no candidate is public enough\";\n                     self.lint_buffer.buffer_lint(UNUSED_IMPORTS, id, import.span, msg);\n@@ -977,7 +977,7 @@ impl<'a, 'tcx> Resolver<'a, 'tcx> {\n         let mut crate_private_reexport = false;\n         self.per_ns(|this, ns| {\n             if let Ok(binding) = source_bindings[ns].get() {\n-                if !binding.vis.is_at_least(import.expect_vis(), &*this) {\n+                if !binding.vis.is_at_least(import.expect_vis(), this.tcx) {\n                     reexport_error = Some((ns, binding));\n                     if let ty::Visibility::Restricted(binding_def_id) = binding.vis {\n                         if binding_def_id.is_top_level_module() {"}, {"sha": "cc3e142a5fd5faf63ff528f5d36d0d9933547a5d", "filename": "compiler/rustc_resolve/src/late.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_resolve%2Fsrc%2Flate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_resolve%2Fsrc%2Flate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flate.rs?ref=c83553da318a6d7e736d5a9e92b18fbdd3d76845", "patch": "@@ -22,7 +22,6 @@ use rustc_hir::def::{self, CtorKind, DefKind, LifetimeRes, PartialRes, PerNS};\n use rustc_hir::def_id::{DefId, LocalDefId, CRATE_DEF_ID, LOCAL_CRATE};\n use rustc_hir::{BindingAnnotation, PrimTy, TraitCandidate};\n use rustc_middle::middle::resolve_bound_vars::Set1;\n-use rustc_middle::ty::DefIdTree;\n use rustc_middle::{bug, span_bug};\n use rustc_session::config::{CrateType, ResolveDocLinks};\n use rustc_session::lint;\n@@ -1671,8 +1670,12 @@ impl<'a: 'ast, 'b, 'ast, 'tcx> LateResolutionVisitor<'a, 'b, 'ast, 'tcx> {\n             // Figure out if this is a type/trait segment,\n             // which may need lifetime elision performed.\n             let type_def_id = match partial_res.base_res() {\n-                Res::Def(DefKind::AssocTy, def_id) if i + 2 == proj_start => self.r.parent(def_id),\n-                Res::Def(DefKind::Variant, def_id) if i + 1 == proj_start => self.r.parent(def_id),\n+                Res::Def(DefKind::AssocTy, def_id) if i + 2 == proj_start => {\n+                    self.r.tcx.parent(def_id)\n+                }\n+                Res::Def(DefKind::Variant, def_id) if i + 1 == proj_start => {\n+                    self.r.tcx.parent(def_id)\n+                }\n                 Res::Def(DefKind::Struct, def_id)\n                 | Res::Def(DefKind::Union, def_id)\n                 | Res::Def(DefKind::Enum, def_id)"}, {"sha": "512181ebd632f9faf9c30e45833fc96ebacb482d", "filename": "compiler/rustc_resolve/src/late/diagnostics.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_resolve%2Fsrc%2Flate%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_resolve%2Fsrc%2Flate%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flate%2Fdiagnostics.rs?ref=c83553da318a6d7e736d5a9e92b18fbdd3d76845", "patch": "@@ -21,7 +21,6 @@ use rustc_hir::def::Namespace::{self, *};\n use rustc_hir::def::{self, CtorKind, CtorOf, DefKind};\n use rustc_hir::def_id::{DefId, CRATE_DEF_ID, LOCAL_CRATE};\n use rustc_hir::PrimTy;\n-use rustc_middle::ty::DefIdTree;\n use rustc_session::lint;\n use rustc_session::parse::feature_err;\n use rustc_session::Session;\n@@ -1508,7 +1507,7 @@ impl<'a: 'ast, 'ast, 'tcx> LateResolutionVisitor<'a, '_, 'ast, 'tcx> {\n                 }\n             }\n             (Res::Def(DefKind::Ctor(_, CtorKind::Fn), ctor_def_id), _) if ns == ValueNS => {\n-                let def_id = self.r.parent(ctor_def_id);\n+                let def_id = self.r.tcx.parent(ctor_def_id);\n                 if let Some(span) = self.def_span(def_id) {\n                     err.span_label(span, &format!(\"`{}` defined here\", path_str));\n                 }\n@@ -1999,7 +1998,7 @@ impl<'a: 'ast, 'ast, 'tcx> LateResolutionVisitor<'a, '_, 'ast, 'tcx> {\n             }\n         } else {\n             let needs_placeholder = |ctor_def_id: DefId, kind: CtorKind| {\n-                let def_id = self.r.parent(ctor_def_id);\n+                let def_id = self.r.tcx.parent(ctor_def_id);\n                 let has_no_fields = self.r.field_names.get(&def_id).map_or(false, |f| f.is_empty());\n                 match kind {\n                     CtorKind::Const => false,"}, {"sha": "5eba208e3ed73e0e14af36c9c0ca61fa1ecd05ce", "filename": "compiler/rustc_resolve/src/lib.rs", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_resolve%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_resolve%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flib.rs?ref=c83553da318a6d7e736d5a9e92b18fbdd3d76845", "patch": "@@ -44,7 +44,7 @@ use rustc_metadata::creader::{CStore, CrateLoader};\n use rustc_middle::metadata::ModChild;\n use rustc_middle::middle::privacy::EffectiveVisibilities;\n use rustc_middle::span_bug;\n-use rustc_middle::ty::{self, DefIdTree, MainDefinition, RegisteredTools, TyCtxt};\n+use rustc_middle::ty::{self, MainDefinition, RegisteredTools, TyCtxt};\n use rustc_middle::ty::{ResolverGlobalCtxt, ResolverOutputs};\n use rustc_query_system::ich::StableHashingContext;\n use rustc_session::cstore::CrateStore;\n@@ -1117,13 +1117,6 @@ impl<'a, 'tcx> AsMut<Resolver<'a, 'tcx>> for Resolver<'a, 'tcx> {\n     }\n }\n \n-impl<'a, 'b, 'tcx> DefIdTree for &'a Resolver<'b, 'tcx> {\n-    #[inline]\n-    fn opt_parent(self, id: DefId) -> Option<DefId> {\n-        self.tcx.opt_parent(id)\n-    }\n-}\n-\n impl<'tcx> Resolver<'_, 'tcx> {\n     fn opt_local_def_id(&self, node: NodeId) -> Option<LocalDefId> {\n         self.node_id_to_def_id.get(&node).copied()\n@@ -1789,7 +1782,7 @@ impl<'a, 'tcx> Resolver<'a, 'tcx> {\n         vis: ty::Visibility<impl Into<DefId>>,\n         module: Module<'a>,\n     ) -> bool {\n-        vis.is_accessible_from(module.nearest_parent_mod(), self)\n+        vis.is_accessible_from(module.nearest_parent_mod(), self.tcx)\n     }\n \n     fn set_binding_parent_module(&mut self, binding: &'a NameBinding<'a>, module: Module<'a>) {"}, {"sha": "9ab753c5a482696ff1d3d0dc3ae12b5d61a8fedd", "filename": "compiler/rustc_trait_selection/src/traits/error_reporting/suggestions.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs?ref=c83553da318a6d7e736d5a9e92b18fbdd3d76845", "patch": "@@ -30,7 +30,7 @@ use rustc_middle::hir::map;\n use rustc_middle::ty::error::TypeError::{self, Sorts};\n use rustc_middle::ty::relate::TypeRelation;\n use rustc_middle::ty::{\n-    self, suggest_arbitrary_trait_bound, suggest_constraining_type_param, AdtKind, DefIdTree,\n+    self, suggest_arbitrary_trait_bound, suggest_constraining_type_param, AdtKind,\n     GeneratorDiagnosticData, GeneratorInteriorTypeCause, Infer, InferTy, InternalSubsts,\n     IsSuggestable, ToPredicate, Ty, TyCtxt, TypeAndMut, TypeFoldable, TypeFolder,\n     TypeSuperFoldable, TypeVisitableExt, TypeckResults,"}, {"sha": "0e047977caa7b1b76cf091529c26ffc213d9a5c1", "filename": "compiler/rustc_trait_selection/src/traits/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fmod.rs?ref=c83553da318a6d7e736d5a9e92b18fbdd3d76845", "patch": "@@ -28,7 +28,7 @@ use crate::traits::query::evaluate_obligation::InferCtxtExt as _;\n use rustc_errors::ErrorGuaranteed;\n use rustc_middle::ty::fold::TypeFoldable;\n use rustc_middle::ty::visit::{TypeVisitable, TypeVisitableExt};\n-use rustc_middle::ty::{self, DefIdTree, ToPredicate, Ty, TyCtxt, TypeSuperVisitable};\n+use rustc_middle::ty::{self, ToPredicate, Ty, TyCtxt, TypeSuperVisitable};\n use rustc_middle::ty::{InternalSubsts, SubstsRef};\n use rustc_span::def_id::{DefId, CRATE_DEF_ID};\n use rustc_span::Span;"}, {"sha": "1bc5269ee58636fbd69ed5914d5671c367388be8", "filename": "compiler/rustc_trait_selection/src/traits/project.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fproject.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fproject.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fproject.rs?ref=c83553da318a6d7e736d5a9e92b18fbdd3d76845", "patch": "@@ -32,7 +32,6 @@ use rustc_infer::traits::ImplSourceBuiltinData;\n use rustc_middle::traits::select::OverflowError;\n use rustc_middle::ty::fold::{TypeFoldable, TypeFolder, TypeSuperFoldable};\n use rustc_middle::ty::visit::{MaxUniverse, TypeVisitable, TypeVisitableExt};\n-use rustc_middle::ty::DefIdTree;\n use rustc_middle::ty::{self, Term, ToPredicate, Ty, TyCtxt};\n use rustc_span::symbol::sym;\n "}, {"sha": "0cae0377ee8c085feb2d68be8fc87ce8e187786f", "filename": "compiler/rustc_transmute/src/maybe_transmutable/query_context.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_transmute%2Fsrc%2Fmaybe_transmutable%2Fquery_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_transmute%2Fsrc%2Fmaybe_transmutable%2Fquery_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_transmute%2Fsrc%2Fmaybe_transmutable%2Fquery_context.rs?ref=c83553da318a6d7e736d5a9e92b18fbdd3d76845", "patch": "@@ -58,9 +58,7 @@ mod rustc {\n             use rustc_middle::ty;\n \n             let parent = if let ty::Adt(adt_def, ..) = scope.kind() {\n-                use rustc_middle::ty::DefIdTree;\n-                let parent = self.parent(adt_def.did());\n-                parent\n+                self.parent(adt_def.did())\n             } else {\n                 // Is this always how we want to handle a non-ADT scope?\n                 return false;"}, {"sha": "09a5bc93ca0a1f82220495e4b04da526facf04db", "filename": "compiler/rustc_ty_utils/src/assoc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_ty_utils%2Fsrc%2Fassoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_ty_utils%2Fsrc%2Fassoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ty_utils%2Fsrc%2Fassoc.rs?ref=c83553da318a6d7e736d5a9e92b18fbdd3d76845", "patch": "@@ -4,7 +4,7 @@ use rustc_hir::def::DefKind;\n use rustc_hir::def_id::{DefId, LocalDefId};\n use rustc_hir::definitions::DefPathData;\n use rustc_hir::intravisit::{self, Visitor};\n-use rustc_middle::ty::{self, DefIdTree, ImplTraitInTraitData, InternalSubsts, TyCtxt};\n+use rustc_middle::ty::{self, ImplTraitInTraitData, InternalSubsts, TyCtxt};\n use rustc_span::symbol::kw;\n \n pub fn provide(providers: &mut ty::query::Providers) {"}, {"sha": "56d6cc28bc83f070e1795b3561673c70398fb589", "filename": "compiler/rustc_ty_utils/src/implied_bounds.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_ty_utils%2Fsrc%2Fimplied_bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83553da318a6d7e736d5a9e92b18fbdd3d76845/compiler%2Frustc_ty_utils%2Fsrc%2Fimplied_bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ty_utils%2Fsrc%2Fimplied_bounds.rs?ref=c83553da318a6d7e736d5a9e92b18fbdd3d76845", "patch": "@@ -1,4 +1,3 @@\n-use crate::rustc_middle::ty::DefIdTree;\n use rustc_hir::{def::DefKind, def_id::DefId};\n use rustc_middle::ty::{self, Ty, TyCtxt};\n "}, {"sha": "bbd9f18973a9be6f8f04107d9f6bd12cd1c427a9", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c83553da318a6d7e736d5a9e92b18fbdd3d76845/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83553da318a6d7e736d5a9e92b18fbdd3d76845/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=c83553da318a6d7e736d5a9e92b18fbdd3d76845", "patch": "@@ -25,7 +25,7 @@ use rustc_middle::middle::resolve_bound_vars as rbv;\n use rustc_middle::ty::fold::TypeFolder;\n use rustc_middle::ty::InternalSubsts;\n use rustc_middle::ty::TypeVisitableExt;\n-use rustc_middle::ty::{self, AdtKind, DefIdTree, EarlyBinder, Ty, TyCtxt};\n+use rustc_middle::ty::{self, AdtKind, EarlyBinder, Ty, TyCtxt};\n use rustc_middle::{bug, span_bug};\n use rustc_span::hygiene::{AstPass, MacroKind};\n use rustc_span::symbol::{kw, sym, Ident, Symbol};"}, {"sha": "6d8380c5fcc189ada85db01f087dff652c604ebd", "filename": "src/librustdoc/clean/types.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c83553da318a6d7e736d5a9e92b18fbdd3d76845/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83553da318a6d7e736d5a9e92b18fbdd3d76845/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Ftypes.rs?ref=c83553da318a6d7e736d5a9e92b18fbdd3d76845", "patch": "@@ -22,7 +22,7 @@ use rustc_hir::{BodyId, Mutability};\n use rustc_hir_analysis::check::intrinsic::intrinsic_operation_unsafety;\n use rustc_index::vec::IndexVec;\n use rustc_middle::ty::fast_reject::SimplifiedType;\n-use rustc_middle::ty::{self, DefIdTree, TyCtxt, Visibility};\n+use rustc_middle::ty::{self, TyCtxt, Visibility};\n use rustc_resolve::rustdoc::{add_doc_fragment, attrs_to_doc_fragments, inner_docs, DocFragment};\n use rustc_session::Session;\n use rustc_span::hygiene::MacroKind;"}, {"sha": "cafb00df51ed2715196e94bb64b7fa0fd0b27911", "filename": "src/librustdoc/clean/utils.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c83553da318a6d7e736d5a9e92b18fbdd3d76845/src%2Flibrustdoc%2Fclean%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83553da318a6d7e736d5a9e92b18fbdd3d76845/src%2Flibrustdoc%2Fclean%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Futils.rs?ref=c83553da318a6d7e736d5a9e92b18fbdd3d76845", "patch": "@@ -17,7 +17,7 @@ use rustc_hir::def_id::{DefId, LOCAL_CRATE};\n use rustc_middle::mir;\n use rustc_middle::mir::interpret::ConstValue;\n use rustc_middle::ty::subst::{GenericArgKind, SubstsRef};\n-use rustc_middle::ty::{self, DefIdTree, TyCtxt};\n+use rustc_middle::ty::{self, TyCtxt};\n use rustc_span::symbol::{kw, sym, Symbol};\n use std::fmt::Write as _;\n use std::mem;"}, {"sha": "f9ea829e3889c3da853cd4f3547da8e71436ed44", "filename": "src/librustdoc/html/format.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c83553da318a6d7e736d5a9e92b18fbdd3d76845/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83553da318a6d7e736d5a9e92b18fbdd3d76845/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fformat.rs?ref=c83553da318a6d7e736d5a9e92b18fbdd3d76845", "patch": "@@ -19,7 +19,6 @@ use rustc_hir::def::DefKind;\n use rustc_hir::def_id::DefId;\n use rustc_metadata::creader::{CStore, LoadedMacro};\n use rustc_middle::ty;\n-use rustc_middle::ty::DefIdTree;\n use rustc_middle::ty::TyCtxt;\n use rustc_span::symbol::kw;\n use rustc_span::{sym, Symbol};"}, {"sha": "be5286b24d797289ea99968103fd5e1952866b9d", "filename": "src/librustdoc/passes/calculate_doc_coverage.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c83553da318a6d7e736d5a9e92b18fbdd3d76845/src%2Flibrustdoc%2Fpasses%2Fcalculate_doc_coverage.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83553da318a6d7e736d5a9e92b18fbdd3d76845/src%2Flibrustdoc%2Fpasses%2Fcalculate_doc_coverage.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fcalculate_doc_coverage.rs?ref=c83553da318a6d7e736d5a9e92b18fbdd3d76845", "patch": "@@ -8,7 +8,6 @@ use crate::visit::DocVisitor;\n use rustc_hir as hir;\n use rustc_lint::builtin::MISSING_DOCS;\n use rustc_middle::lint::LintLevelSource;\n-use rustc_middle::ty::DefIdTree;\n use rustc_session::lint;\n use rustc_span::FileName;\n use serde::Serialize;"}, {"sha": "6b13e6c9581ae62dfecc0da772c3bec5a01807b7", "filename": "src/librustdoc/passes/check_doc_test_visibility.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c83553da318a6d7e736d5a9e92b18fbdd3d76845/src%2Flibrustdoc%2Fpasses%2Fcheck_doc_test_visibility.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83553da318a6d7e736d5a9e92b18fbdd3d76845/src%2Flibrustdoc%2Fpasses%2Fcheck_doc_test_visibility.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fcheck_doc_test_visibility.rs?ref=c83553da318a6d7e736d5a9e92b18fbdd3d76845", "patch": "@@ -14,7 +14,6 @@ use crate::visit::DocVisitor;\n use crate::visit_ast::inherits_doc_hidden;\n use rustc_hir as hir;\n use rustc_middle::lint::LintLevelSource;\n-use rustc_middle::ty::DefIdTree;\n use rustc_session::lint;\n \n pub(crate) const CHECK_DOC_TEST_VISIBILITY: Pass = Pass {"}, {"sha": "bcb69d1a4ca8b38d7348eca0c3f115e980bb30ad", "filename": "src/librustdoc/passes/collect_intra_doc_links.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c83553da318a6d7e736d5a9e92b18fbdd3d76845/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83553da318a6d7e736d5a9e92b18fbdd3d76845/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs?ref=c83553da318a6d7e736d5a9e92b18fbdd3d76845", "patch": "@@ -13,7 +13,7 @@ use rustc_hir::def::Namespace::*;\n use rustc_hir::def::{DefKind, Namespace, PerNS};\n use rustc_hir::def_id::{DefId, CRATE_DEF_ID};\n use rustc_hir::Mutability;\n-use rustc_middle::ty::{DefIdTree, Ty, TyCtxt};\n+use rustc_middle::ty::{Ty, TyCtxt};\n use rustc_middle::{bug, ty};\n use rustc_resolve::rustdoc::MalformedGenerics;\n use rustc_resolve::rustdoc::{prepare_to_doc_link_resolution, strip_generics_from_path};"}, {"sha": "d32e8185d3f962dfd480c426e959dada40d8677a", "filename": "src/librustdoc/passes/collect_trait_impls.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c83553da318a6d7e736d5a9e92b18fbdd3d76845/src%2Flibrustdoc%2Fpasses%2Fcollect_trait_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83553da318a6d7e736d5a9e92b18fbdd3d76845/src%2Flibrustdoc%2Fpasses%2Fcollect_trait_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fcollect_trait_impls.rs?ref=c83553da318a6d7e736d5a9e92b18fbdd3d76845", "patch": "@@ -9,7 +9,7 @@ use crate::visit::DocVisitor;\n \n use rustc_data_structures::fx::FxHashSet;\n use rustc_hir::def_id::{DefId, DefIdMap, DefIdSet, LOCAL_CRATE};\n-use rustc_middle::ty::{self, DefIdTree};\n+use rustc_middle::ty;\n use rustc_span::symbol::sym;\n \n pub(crate) const COLLECT_TRAIT_IMPLS: Pass = Pass {"}, {"sha": "f35643af637388c0ea1dd6960a10473846471811", "filename": "src/librustdoc/passes/propagate_doc_cfg.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c83553da318a6d7e736d5a9e92b18fbdd3d76845/src%2Flibrustdoc%2Fpasses%2Fpropagate_doc_cfg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83553da318a6d7e736d5a9e92b18fbdd3d76845/src%2Flibrustdoc%2Fpasses%2Fpropagate_doc_cfg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fpropagate_doc_cfg.rs?ref=c83553da318a6d7e736d5a9e92b18fbdd3d76845", "patch": "@@ -9,7 +9,6 @@ use crate::fold::DocFolder;\n use crate::passes::Pass;\n \n use rustc_hir::def_id::LocalDefId;\n-use rustc_middle::ty::DefIdTree;\n \n pub(crate) const PROPAGATE_DOC_CFG: Pass = Pass {\n     name: \"propagate-doc-cfg\","}, {"sha": "5bbbff175cf31f265de5c5051444bf7604225e91", "filename": "src/librustdoc/visit_ast.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c83553da318a6d7e736d5a9e92b18fbdd3d76845/src%2Flibrustdoc%2Fvisit_ast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83553da318a6d7e736d5a9e92b18fbdd3d76845/src%2Flibrustdoc%2Fvisit_ast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fvisit_ast.rs?ref=c83553da318a6d7e736d5a9e92b18fbdd3d76845", "patch": "@@ -8,7 +8,7 @@ use rustc_hir::def_id::{DefId, DefIdMap, LocalDefId, LocalDefIdSet};\n use rustc_hir::intravisit::{walk_item, Visitor};\n use rustc_hir::{Node, CRATE_HIR_ID};\n use rustc_middle::hir::nested_filter;\n-use rustc_middle::ty::{DefIdTree, TyCtxt};\n+use rustc_middle::ty::TyCtxt;\n use rustc_span::def_id::{CRATE_DEF_ID, LOCAL_CRATE};\n use rustc_span::symbol::{kw, sym, Symbol};\n use rustc_span::Span;"}, {"sha": "c5f4e943f4f0b2db7cb3996e140d7148b8f8d087", "filename": "src/tools/clippy/clippy_lints/src/derivable_impls.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c83553da318a6d7e736d5a9e92b18fbdd3d76845/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fderivable_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83553da318a6d7e736d5a9e92b18fbdd3d76845/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fderivable_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fderivable_impls.rs?ref=c83553da318a6d7e736d5a9e92b18fbdd3d76845", "patch": "@@ -8,7 +8,7 @@ use rustc_hir::{\n     Body, Expr, ExprKind, GenericArg, Impl, ImplItemKind, Item, ItemKind, Node, PathSegment, QPath, Ty, TyKind,\n };\n use rustc_lint::{LateContext, LateLintPass};\n-use rustc_middle::ty::{AdtDef, DefIdTree};\n+use rustc_middle::ty::AdtDef;\n use rustc_session::{declare_tool_lint, impl_lint_pass};\n use rustc_span::sym;\n "}, {"sha": "1e02a30e35fe4a07563a66183b1fa51cc4b3eb2c", "filename": "src/tools/clippy/clippy_lints/src/loops/manual_flatten.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c83553da318a6d7e736d5a9e92b18fbdd3d76845/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Floops%2Fmanual_flatten.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83553da318a6d7e736d5a9e92b18fbdd3d76845/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Floops%2Fmanual_flatten.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Floops%2Fmanual_flatten.rs?ref=c83553da318a6d7e736d5a9e92b18fbdd3d76845", "patch": "@@ -9,7 +9,7 @@ use rustc_errors::Applicability;\n use rustc_hir::def::{DefKind, Res};\n use rustc_hir::{Expr, Pat, PatKind};\n use rustc_lint::LateContext;\n-use rustc_middle::ty::{self, DefIdTree};\n+use rustc_middle::ty;\n use rustc_span::source_map::Span;\n \n /// Check for unnecessary `if let` usage in a for loop where only the `Some` or `Ok` variant of the"}, {"sha": "0e22485db2c592b3f9021e352fbcce86a359352d", "filename": "src/tools/clippy/clippy_lints/src/manual_non_exhaustive.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c83553da318a6d7e736d5a9e92b18fbdd3d76845/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fmanual_non_exhaustive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83553da318a6d7e736d5a9e92b18fbdd3d76845/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fmanual_non_exhaustive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fmanual_non_exhaustive.rs?ref=c83553da318a6d7e736d5a9e92b18fbdd3d76845", "patch": "@@ -8,7 +8,6 @@ use rustc_errors::Applicability;\n use rustc_hir::def::{CtorKind, CtorOf, DefKind, Res};\n use rustc_hir::{self as hir, Expr, ExprKind, QPath};\n use rustc_lint::{EarlyContext, EarlyLintPass, LateContext, LateLintPass, LintContext};\n-use rustc_middle::ty::DefIdTree;\n use rustc_session::{declare_tool_lint, impl_lint_pass};\n use rustc_span::def_id::{DefId, LocalDefId};\n use rustc_span::{sym, Span};"}, {"sha": "6447899f2b94cd22e45911674282255c8ef0b27c", "filename": "src/tools/clippy/clippy_lints/src/matches/manual_unwrap_or.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c83553da318a6d7e736d5a9e92b18fbdd3d76845/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fmatches%2Fmanual_unwrap_or.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83553da318a6d7e736d5a9e92b18fbdd3d76845/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fmatches%2Fmanual_unwrap_or.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fmatches%2Fmanual_unwrap_or.rs?ref=c83553da318a6d7e736d5a9e92b18fbdd3d76845", "patch": "@@ -10,7 +10,6 @@ use rustc_hir::def::{DefKind, Res};\n use rustc_hir::LangItem::{OptionNone, ResultErr};\n use rustc_hir::{Arm, Expr, PatKind};\n use rustc_lint::LateContext;\n-use rustc_middle::ty::DefIdTree;\n use rustc_span::sym;\n \n use super::MANUAL_UNWRAP_OR;"}, {"sha": "df0ea7f5b863bd5e01744fe27fb3eedbe9903dd3", "filename": "src/tools/clippy/clippy_lints/src/matches/redundant_pattern_match.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c83553da318a6d7e736d5a9e92b18fbdd3d76845/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fmatches%2Fredundant_pattern_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83553da318a6d7e736d5a9e92b18fbdd3d76845/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fmatches%2Fredundant_pattern_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fmatches%2Fredundant_pattern_match.rs?ref=c83553da318a6d7e736d5a9e92b18fbdd3d76845", "patch": "@@ -12,7 +12,7 @@ use rustc_hir::def::{DefKind, Res};\n use rustc_hir::LangItem::{self, OptionNone, OptionSome, PollPending, PollReady, ResultErr, ResultOk};\n use rustc_hir::{Arm, Expr, ExprKind, Node, Pat, PatKind, QPath, UnOp};\n use rustc_lint::LateContext;\n-use rustc_middle::ty::{self, subst::GenericArgKind, DefIdTree, Ty};\n+use rustc_middle::ty::{self, subst::GenericArgKind, Ty};\n use rustc_span::{sym, Symbol};\n \n pub(super) fn check<'tcx>(cx: &LateContext<'tcx>, expr: &'tcx Expr<'_>) {"}, {"sha": "8e1130cf8dfa4748024054179bf53ec154d72a38", "filename": "src/tools/clippy/clippy_lints/src/methods/bind_instead_of_map.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c83553da318a6d7e736d5a9e92b18fbdd3d76845/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fmethods%2Fbind_instead_of_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83553da318a6d7e736d5a9e92b18fbdd3d76845/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fmethods%2Fbind_instead_of_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fmethods%2Fbind_instead_of_map.rs?ref=c83553da318a6d7e736d5a9e92b18fbdd3d76845", "patch": "@@ -8,7 +8,6 @@ use rustc_hir as hir;\n use rustc_hir::def::{CtorKind, CtorOf, DefKind, Res};\n use rustc_hir::{LangItem, QPath};\n use rustc_lint::LateContext;\n-use rustc_middle::ty::DefIdTree;\n use rustc_span::Span;\n \n pub(crate) struct OptionAndThenSome;"}, {"sha": "079df2226d1e2bbd0668b4e54d760b4409a8b88d", "filename": "src/tools/clippy/clippy_lints/src/methods/chars_cmp.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c83553da318a6d7e736d5a9e92b18fbdd3d76845/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fmethods%2Fchars_cmp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83553da318a6d7e736d5a9e92b18fbdd3d76845/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fmethods%2Fchars_cmp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fmethods%2Fchars_cmp.rs?ref=c83553da318a6d7e736d5a9e92b18fbdd3d76845", "patch": "@@ -6,7 +6,7 @@ use rustc_errors::Applicability;\n use rustc_hir as hir;\n use rustc_lint::LateContext;\n use rustc_lint::Lint;\n-use rustc_middle::ty::{self, DefIdTree};\n+use rustc_middle::ty;\n \n /// Wrapper fn for `CHARS_NEXT_CMP` and `CHARS_LAST_CMP` lints.\n pub(super) fn check("}, {"sha": "41ceef19e3a97e6f1f884a4ca01a41d861a9fe85", "filename": "src/tools/clippy/clippy_lints/src/methods/option_map_or_none.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c83553da318a6d7e736d5a9e92b18fbdd3d76845/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fmethods%2Foption_map_or_none.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83553da318a6d7e736d5a9e92b18fbdd3d76845/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fmethods%2Foption_map_or_none.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fmethods%2Foption_map_or_none.rs?ref=c83553da318a6d7e736d5a9e92b18fbdd3d76845", "patch": "@@ -6,7 +6,6 @@ use rustc_errors::Applicability;\n use rustc_hir as hir;\n use rustc_hir::LangItem::{OptionNone, OptionSome};\n use rustc_lint::LateContext;\n-use rustc_middle::ty::DefIdTree;\n use rustc_span::symbol::sym;\n \n use super::OPTION_MAP_OR_NONE;"}, {"sha": "5b1f03fc16c266e9f6918b42a84c7b3a7b78f770", "filename": "src/tools/clippy/clippy_lints/src/missing_doc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c83553da318a6d7e736d5a9e92b18fbdd3d76845/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fmissing_doc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83553da318a6d7e736d5a9e92b18fbdd3d76845/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fmissing_doc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fmissing_doc.rs?ref=c83553da318a6d7e736d5a9e92b18fbdd3d76845", "patch": "@@ -13,7 +13,7 @@ use if_chain::if_chain;\n use rustc_ast::ast::{self, MetaItem, MetaItemKind};\n use rustc_hir as hir;\n use rustc_lint::{LateContext, LateLintPass, LintContext};\n-use rustc_middle::ty::{DefIdTree, Visibility};\n+use rustc_middle::ty::Visibility;\n use rustc_session::{declare_tool_lint, impl_lint_pass};\n use rustc_span::def_id::CRATE_DEF_ID;\n use rustc_span::source_map::Span;"}, {"sha": "e2a7ba02a043c553bde251d0d91dfa82b387509c", "filename": "src/tools/clippy/clippy_lints/src/needless_question_mark.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c83553da318a6d7e736d5a9e92b18fbdd3d76845/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fneedless_question_mark.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83553da318a6d7e736d5a9e92b18fbdd3d76845/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fneedless_question_mark.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fneedless_question_mark.rs?ref=c83553da318a6d7e736d5a9e92b18fbdd3d76845", "patch": "@@ -6,7 +6,6 @@ use rustc_errors::Applicability;\n use rustc_hir::def::{DefKind, Res};\n use rustc_hir::{AsyncGeneratorKind, Block, Body, Expr, ExprKind, GeneratorKind, LangItem, MatchSource, QPath};\n use rustc_lint::{LateContext, LateLintPass};\n-use rustc_middle::ty::DefIdTree;\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n \n declare_clippy_lint! {"}, {"sha": "a13bc7a51887163025409e8780d18d2ef748c38f", "filename": "src/tools/clippy/clippy_lints/src/std_instead_of_core.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c83553da318a6d7e736d5a9e92b18fbdd3d76845/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fstd_instead_of_core.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83553da318a6d7e736d5a9e92b18fbdd3d76845/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fstd_instead_of_core.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fstd_instead_of_core.rs?ref=c83553da318a6d7e736d5a9e92b18fbdd3d76845", "patch": "@@ -2,7 +2,6 @@ use clippy_utils::diagnostics::span_lint_and_help;\n use rustc_hir::def_id::DefId;\n use rustc_hir::{def::Res, HirId, Path, PathSegment};\n use rustc_lint::{LateContext, LateLintPass};\n-use rustc_middle::ty::DefIdTree;\n use rustc_session::{declare_tool_lint, impl_lint_pass};\n use rustc_span::{sym, symbol::kw, Span};\n "}, {"sha": "f8978e30a8e2b344c14d23440edefdd480c45fb5", "filename": "src/tools/clippy/clippy_lints/src/utils/internal_lints/interning_defined_symbol.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c83553da318a6d7e736d5a9e92b18fbdd3d76845/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Futils%2Finternal_lints%2Finterning_defined_symbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83553da318a6d7e736d5a9e92b18fbdd3d76845/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Futils%2Finternal_lints%2Finterning_defined_symbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Futils%2Finternal_lints%2Finterning_defined_symbol.rs?ref=c83553da318a6d7e736d5a9e92b18fbdd3d76845", "patch": "@@ -11,7 +11,7 @@ use rustc_hir::def_id::DefId;\n use rustc_hir::{BinOpKind, Expr, ExprKind, UnOp};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_middle::mir::interpret::ConstValue;\n-use rustc_middle::ty::{self};\n+use rustc_middle::ty;\n use rustc_session::{declare_tool_lint, impl_lint_pass};\n use rustc_span::symbol::Symbol;\n "}, {"sha": "14ed1368e03ec35182ec5568f58fa0e338b26b2d", "filename": "src/tools/clippy/clippy_lints/src/utils/internal_lints/unnecessary_def_path.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c83553da318a6d7e736d5a9e92b18fbdd3d76845/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Futils%2Finternal_lints%2Funnecessary_def_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83553da318a6d7e736d5a9e92b18fbdd3d76845/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Futils%2Finternal_lints%2Funnecessary_def_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Futils%2Finternal_lints%2Funnecessary_def_path.rs?ref=c83553da318a6d7e736d5a9e92b18fbdd3d76845", "patch": "@@ -11,7 +11,7 @@ use rustc_hir::def_id::DefId;\n use rustc_hir::{Expr, ExprKind, Local, Mutability, Node};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_middle::mir::interpret::{Allocation, ConstValue, GlobalAlloc};\n-use rustc_middle::ty::{self, DefIdTree, Ty};\n+use rustc_middle::ty::{self, Ty};\n use rustc_session::{declare_tool_lint, impl_lint_pass};\n use rustc_span::symbol::Symbol;\n use rustc_span::Span;"}, {"sha": "bcfedd07ed11cad6871d354aedf92224e0e6f9a3", "filename": "src/tools/clippy/clippy_utils/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c83553da318a6d7e736d5a9e92b18fbdd3d76845/src%2Ftools%2Fclippy%2Fclippy_utils%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83553da318a6d7e736d5a9e92b18fbdd3d76845/src%2Ftools%2Fclippy%2Fclippy_utils%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_utils%2Fsrc%2Flib.rs?ref=c83553da318a6d7e736d5a9e92b18fbdd3d76845", "patch": "@@ -104,7 +104,7 @@ use rustc_middle::ty::fast_reject::SimplifiedType::{\n     PtrSimplifiedType, SliceSimplifiedType, StrSimplifiedType, UintSimplifiedType,\n };\n use rustc_middle::ty::{\n-    layout::IntegerExt, BorrowKind, ClosureKind, DefIdTree, Ty, TyCtxt, TypeAndMut, TypeVisitableExt, UpvarCapture,\n+    layout::IntegerExt, BorrowKind, ClosureKind, Ty, TyCtxt, TypeAndMut, TypeVisitableExt, UpvarCapture,\n };\n use rustc_middle::ty::{FloatTy, IntTy, UintTy};\n use rustc_span::hygiene::{ExpnKind, MacroKind};"}, {"sha": "41e34eba0ad38fd0b8279afeba04d99b2803fd60", "filename": "src/tools/clippy/clippy_utils/src/ty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c83553da318a6d7e736d5a9e92b18fbdd3d76845/src%2Ftools%2Fclippy%2Fclippy_utils%2Fsrc%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83553da318a6d7e736d5a9e92b18fbdd3d76845/src%2Ftools%2Fclippy%2Fclippy_utils%2Fsrc%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_utils%2Fsrc%2Fty.rs?ref=c83553da318a6d7e736d5a9e92b18fbdd3d76845", "patch": "@@ -16,7 +16,7 @@ use rustc_infer::infer::{\n use rustc_lint::LateContext;\n use rustc_middle::mir::interpret::{ConstValue, Scalar};\n use rustc_middle::ty::{\n-    self, AdtDef, AliasTy, AssocKind, Binder, BoundRegion, DefIdTree, FnSig, IntTy, List, ParamEnv, Predicate,\n+    self, AdtDef, AliasTy, AssocKind, Binder, BoundRegion, FnSig, IntTy, List, ParamEnv, Predicate,\n     PredicateKind, Region, RegionKind, SubstsRef, Ty, TyCtxt, TypeSuperVisitable, TypeVisitable, TypeVisitableExt,\n     TypeVisitor, UintTy, VariantDef, VariantDiscr,\n };"}]}