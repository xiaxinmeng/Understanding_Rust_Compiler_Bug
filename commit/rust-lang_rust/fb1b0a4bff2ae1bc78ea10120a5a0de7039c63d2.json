{"sha": "fb1b0a4bff2ae1bc78ea10120a5a0de7039c63d2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZiMWIwYTRiZmYyYWUxYmM3OGVhMTAxMjBhNWEwZGU3MDM5YzYzZDI=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-09-18T21:29:47Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-09-18T21:29:47Z"}, "message": "Merge #6036\n\n6036: Don't re-read open files from disk when reloading a workspace r=kjeremy a=lnicola\n\nFixes #5742\r\nFixes #4263\r\n\r\nor so I hope.\n\nCo-authored-by: Lauren\u021biu Nicola <lnicola@dend.ro>", "tree": {"sha": "28bac91b1e0789db85774270f85974dad6011981", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/28bac91b1e0789db85774270f85974dad6011981"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fb1b0a4bff2ae1bc78ea10120a5a0de7039c63d2", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfZSbLCRBK7hj4Ov3rIwAAdHIIAHzIlW+4HT15RocHXUnURgKV\nqqGbhogofur1ZojAb/vxqw6hUhH+OIlYst77zRLIfbKIaxTQbtZs3p5q0Jx8mKmz\nSTVI4k7sWRzsGp+B6ngP/Y7CuXcowOIquyBQnMjym26cjeKwugEmka/+qQinTFZZ\nTdUHvxfOl5TMGw0v++aJl6t2Ph/TSO9hppU4MNCl+0eeeTTzKXhrIaH4HLCcQ/Gw\nOVhxBTsUk2VotmHc9cdPRY3hF/JrCFtzwEBp6kXBwK8p5AJOvrBvvFvCOL+Sjnnd\nJnkLF7p/rqbeWm1TJYNeIWNWSC4tRiQ8lPnwwLBMZvyfFvtGXgvVeq6iGytFNAA=\n=k+lL\n-----END PGP SIGNATURE-----\n", "payload": "tree 28bac91b1e0789db85774270f85974dad6011981\nparent e49a0677adc6afe090b8fac04ae8e2b8f9f2e631\nparent 5a0bad77543f9bf6df84e6c96b903683f8d23a5e\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1600464587 +0000\ncommitter GitHub <noreply@github.com> 1600464587 +0000\n\nMerge #6036\n\n6036: Don't re-read open files from disk when reloading a workspace r=kjeremy a=lnicola\n\nFixes #5742\r\nFixes #4263\r\n\r\nor so I hope.\n\nCo-authored-by: Lauren\u021biu Nicola <lnicola@dend.ro>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fb1b0a4bff2ae1bc78ea10120a5a0de7039c63d2", "html_url": "https://github.com/rust-lang/rust/commit/fb1b0a4bff2ae1bc78ea10120a5a0de7039c63d2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fb1b0a4bff2ae1bc78ea10120a5a0de7039c63d2/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e49a0677adc6afe090b8fac04ae8e2b8f9f2e631", "url": "https://api.github.com/repos/rust-lang/rust/commits/e49a0677adc6afe090b8fac04ae8e2b8f9f2e631", "html_url": "https://github.com/rust-lang/rust/commit/e49a0677adc6afe090b8fac04ae8e2b8f9f2e631"}, {"sha": "5a0bad77543f9bf6df84e6c96b903683f8d23a5e", "url": "https://api.github.com/repos/rust-lang/rust/commits/5a0bad77543f9bf6df84e6c96b903683f8d23a5e", "html_url": "https://github.com/rust-lang/rust/commit/5a0bad77543f9bf6df84e6c96b903683f8d23a5e"}], "stats": {"total": 11, "additions": 7, "deletions": 4}, "files": [{"sha": "ae404331d94338a3a6baf098398fee4623349d0c", "filename": "crates/rust-analyzer/src/reload.rs", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/fb1b0a4bff2ae1bc78ea10120a5a0de7039c63d2/crates%2Frust-analyzer%2Fsrc%2Freload.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb1b0a4bff2ae1bc78ea10120a5a0de7039c63d2/crates%2Frust-analyzer%2Fsrc%2Freload.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Freload.rs?ref=fb1b0a4bff2ae1bc78ea10120a5a0de7039c63d2", "patch": "@@ -201,11 +201,14 @@ impl GlobalState {\n             let mut crate_graph = CrateGraph::default();\n             let vfs = &mut self.vfs.write().0;\n             let loader = &mut self.loader;\n+            let mem_docs = &self.mem_docs;\n             let mut load = |path: &AbsPath| {\n-                let contents = loader.handle.load_sync(path);\n-                let path = vfs::VfsPath::from(path.to_path_buf());\n-                vfs.set_file_contents(path.clone(), contents);\n-                vfs.file_id(&path)\n+                let vfs_path = vfs::VfsPath::from(path.to_path_buf());\n+                if !mem_docs.contains_key(&vfs_path) {\n+                    let contents = loader.handle.load_sync(path);\n+                    vfs.set_file_contents(vfs_path.clone(), contents);\n+                }\n+                vfs.file_id(&vfs_path)\n             };\n             for ws in workspaces.iter() {\n                 crate_graph.extend(ws.to_crate_graph("}]}