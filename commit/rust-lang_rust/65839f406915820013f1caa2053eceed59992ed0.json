{"sha": "65839f406915820013f1caa2053eceed59992ed0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY1ODM5ZjQwNjkxNTgyMDAxM2YxY2FhMjA1M2VjZWVkNTk5OTJlZDA=", "commit": {"author": {"name": "mahdi-frms", "email": "mahdif1380@outlook.com", "date": "2021-07-20T14:01:35Z"}, "committer": {"name": "mahdi-frms", "email": "mahdif1380@outlook.com", "date": "2021-07-20T14:05:19Z"}, "message": "add 'use' prefix for any auto-import", "tree": {"sha": "57daebdec242490837610f6f4f7f468c85a558f9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/57daebdec242490837610f6f4f7f468c85a558f9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/65839f406915820013f1caa2053eceed59992ed0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/65839f406915820013f1caa2053eceed59992ed0", "html_url": "https://github.com/rust-lang/rust/commit/65839f406915820013f1caa2053eceed59992ed0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/65839f406915820013f1caa2053eceed59992ed0/comments", "author": {"login": "mahdifrmz", "id": 62165556, "node_id": "MDQ6VXNlcjYyMTY1NTU2", "avatar_url": "https://avatars.githubusercontent.com/u/62165556?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mahdifrmz", "html_url": "https://github.com/mahdifrmz", "followers_url": "https://api.github.com/users/mahdifrmz/followers", "following_url": "https://api.github.com/users/mahdifrmz/following{/other_user}", "gists_url": "https://api.github.com/users/mahdifrmz/gists{/gist_id}", "starred_url": "https://api.github.com/users/mahdifrmz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mahdifrmz/subscriptions", "organizations_url": "https://api.github.com/users/mahdifrmz/orgs", "repos_url": "https://api.github.com/users/mahdifrmz/repos", "events_url": "https://api.github.com/users/mahdifrmz/events{/privacy}", "received_events_url": "https://api.github.com/users/mahdifrmz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mahdifrmz", "id": 62165556, "node_id": "MDQ6VXNlcjYyMTY1NTU2", "avatar_url": "https://avatars.githubusercontent.com/u/62165556?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mahdifrmz", "html_url": "https://github.com/mahdifrmz", "followers_url": "https://api.github.com/users/mahdifrmz/followers", "following_url": "https://api.github.com/users/mahdifrmz/following{/other_user}", "gists_url": "https://api.github.com/users/mahdifrmz/gists{/gist_id}", "starred_url": "https://api.github.com/users/mahdifrmz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mahdifrmz/subscriptions", "organizations_url": "https://api.github.com/users/mahdifrmz/orgs", "repos_url": "https://api.github.com/users/mahdifrmz/repos", "events_url": "https://api.github.com/users/mahdifrmz/events{/privacy}", "received_events_url": "https://api.github.com/users/mahdifrmz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9c986069baaf0af6beeb22b7c6cc30dc1e499c9e", "url": "https://api.github.com/repos/rust-lang/rust/commits/9c986069baaf0af6beeb22b7c6cc30dc1e499c9e", "html_url": "https://github.com/rust-lang/rust/commit/9c986069baaf0af6beeb22b7c6cc30dc1e499c9e"}], "stats": {"total": 20, "additions": 7, "deletions": 13}, "files": [{"sha": "75b5daca1f8ebbc13a465e98163aaa99af56e4c9", "filename": "crates/ide_completion/src/completions/flyimport.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/65839f406915820013f1caa2053eceed59992ed0/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fflyimport.rs", "raw_url": "https://github.com/rust-lang/rust/raw/65839f406915820013f1caa2053eceed59992ed0/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fflyimport.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fflyimport.rs?ref=65839f406915820013f1caa2053eceed59992ed0", "patch": "@@ -368,9 +368,9 @@ fn main() {\n }\n \"#,\n             expect![[r#\"\n-                st dep::some_module::ThirdStruct\n-                st dep::some_module::AfterThirdStruct\n-                st dep::some_module::ThiiiiiirdStruct\n+                st ThirdStruct (use dep::some_module::ThirdStruct)\n+                st AfterThirdStruct (use dep::some_module::AfterThirdStruct)\n+                st ThiiiiiirdStruct (use dep::some_module::ThiiiiiirdStruct)\n             \"#]],\n         );\n     }\n@@ -817,7 +817,7 @@ fn main() {\n         check(\n             fixture,\n             expect![[r#\"\n-        st foo::bar::baz::Item\n+        st Item (use foo::bar::baz::Item)\n         \"#]],\n         );\n \n@@ -997,7 +997,7 @@ fn main() {\n     TE$0\n }\"#,\n             expect![[r#\"\n-        ct foo::TEST_CONST\n+        ct TEST_CONST (use foo::TEST_CONST)\n     \"#]],\n         );\n \n@@ -1014,7 +1014,7 @@ fn main() {\n     te$0\n }\"#,\n             expect![[r#\"\n-        ct foo::TEST_CONST\n+        ct TEST_CONST (use foo::TEST_CONST)\n         fn test_function() (use foo::test_function) fn() -> i32\n     \"#]],\n         );"}, {"sha": "2bc69d5657e46f58fb920749c645646ae0c729b6", "filename": "crates/ide_completion/src/item.rs", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/65839f406915820013f1caa2053eceed59992ed0/crates%2Fide_completion%2Fsrc%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/65839f406915820013f1caa2053eceed59992ed0/crates%2Fide_completion%2Fsrc%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fitem.rs?ref=65839f406915820013f1caa2053eceed59992ed0", "patch": "@@ -429,13 +429,7 @@ impl Builder {\n         {\n             lookup = lookup.or_else(|| Some(label.clone()));\n             insert_text = insert_text.or_else(|| Some(label.clone()));\n-\n-            let original_path_label = original_path.to_string();\n-            if original_path_label.ends_with(&label) {\n-                label = original_path_label;\n-            } else {\n-                format_to!(label, \" (use {})\", original_path)\n-            }\n+            format_to!(label, \" (use {})\", original_path)\n         } else if let Some(trait_name) = self.trait_name {\n             insert_text = insert_text.or_else(|| Some(label.clone()));\n             format_to!(label, \" (as {})\", trait_name)"}]}