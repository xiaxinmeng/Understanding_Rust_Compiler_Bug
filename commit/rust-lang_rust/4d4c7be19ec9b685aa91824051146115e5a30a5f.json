{"sha": "4d4c7be19ec9b685aa91824051146115e5a30a5f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRkNGM3YmUxOWVjOWI2ODVhYTkxODI0MDUxMTQ2MTE1ZTVhMzBhNWY=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2016-06-11T15:47:47Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2016-07-08T09:36:45Z"}, "message": "Better support for associated types in struct patterns", "tree": {"sha": "dcd34a83f992c4f026d919c2cb9d73a2ae515bf4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dcd34a83f992c4f026d919c2cb9d73a2ae515bf4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4d4c7be19ec9b685aa91824051146115e5a30a5f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4d4c7be19ec9b685aa91824051146115e5a30a5f", "html_url": "https://github.com/rust-lang/rust/commit/4d4c7be19ec9b685aa91824051146115e5a30a5f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4d4c7be19ec9b685aa91824051146115e5a30a5f/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ba419a78f3b2addd44339611cda2ddd8835af4e6", "url": "https://api.github.com/repos/rust-lang/rust/commits/ba419a78f3b2addd44339611cda2ddd8835af4e6", "html_url": "https://github.com/rust-lang/rust/commit/ba419a78f3b2addd44339611cda2ddd8835af4e6"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "8282cd6bfcbe3ee127feca524868257e93316cea", "filename": "src/librustc/hir/pat_util.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4d4c7be19ec9b685aa91824051146115e5a30a5f/src%2Flibrustc%2Fhir%2Fpat_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d4c7be19ec9b685aa91824051146115e5a30a5f/src%2Flibrustc%2Fhir%2Fpat_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fpat_util.rs?ref=4d4c7be19ec9b685aa91824051146115e5a30a5f", "patch": "@@ -76,7 +76,8 @@ pub fn pat_is_variant_or_struct(dm: &DefMap, pat: &hir::Pat) -> bool {\n         PatKind::Path(..) |\n         PatKind::Struct(..) => {\n             match dm.get(&pat.id).map(|d| d.full_def()) {\n-                Some(Def::Variant(..)) | Some(Def::Struct(..)) | Some(Def::TyAlias(..)) => true,\n+                Some(Def::Variant(..)) | Some(Def::Struct(..)) |\n+                Some(Def::TyAlias(..)) | Some(Def::AssociatedTy(..)) => true,\n                 _ => false\n             }\n         }"}, {"sha": "4dc7ac4138bbc12a54bda75dc8c8231d91bfa1c5", "filename": "src/librustc/ty/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4d4c7be19ec9b685aa91824051146115e5a30a5f/src%2Flibrustc%2Fty%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d4c7be19ec9b685aa91824051146115e5a30a5f/src%2Flibrustc%2Fty%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fmod.rs?ref=4d4c7be19ec9b685aa91824051146115e5a30a5f", "patch": "@@ -1715,7 +1715,7 @@ impl<'a, 'gcx, 'tcx, 'container> AdtDefData<'gcx, 'container> {\n     pub fn variant_of_def(&self, def: Def) -> &VariantDefData<'gcx, 'container> {\n         match def {\n             Def::Variant(_, vid) => self.variant_with_id(vid),\n-            Def::Struct(..) | Def::TyAlias(..) => self.struct_variant(),\n+            Def::Struct(..) | Def::TyAlias(..) | Def::AssociatedTy(..) => self.struct_variant(),\n             _ => bug!(\"unexpected def {:?} in variant_of_def\", def)\n         }\n     }"}, {"sha": "d79278e99cb2e07e6d0b73204660b71c0e3bf54c", "filename": "src/librustc_trans/_match.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4d4c7be19ec9b685aa91824051146115e5a30a5f/src%2Flibrustc_trans%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d4c7be19ec9b685aa91824051146115e5a30a5f/src%2Flibrustc_trans%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2F_match.rs?ref=4d4c7be19ec9b685aa91824051146115e5a30a5f", "patch": "@@ -796,7 +796,7 @@ fn any_irrefutable_adt_pat(tcx: TyCtxt, m: &[Match], col: usize) -> bool {\n             PatKind::Tuple(..) => true,\n             PatKind::Struct(..) | PatKind::TupleStruct(..) | PatKind::Path(..) => {\n                 match tcx.expect_def(pat.id) {\n-                    Def::Struct(..) | Def::TyAlias(..) => true,\n+                    Def::Struct(..) | Def::TyAlias(..) | Def::AssociatedTy(..) => true,\n                     _ => false,\n                 }\n             }"}]}