{"sha": "ed16dbf65e55c54a6cb5eb2596a46a6639428370", "node_id": "C_kwDOAAsO6NoAKGVkMTZkYmY2NWU1NWM1NGE2Y2I1ZWIyNTk2YTQ2YTY2Mzk0MjgzNzA", "commit": {"author": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2022-09-24T19:12:41Z"}, "committer": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2022-09-24T19:12:41Z"}, "message": "Add some more documentation", "tree": {"sha": "2b42ff1058aeb064f97484a6fd6d2972210f93e1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2b42ff1058aeb064f97484a6fd6d2972210f93e1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ed16dbf65e55c54a6cb5eb2596a46a6639428370", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ed16dbf65e55c54a6cb5eb2596a46a6639428370", "html_url": "https://github.com/rust-lang/rust/commit/ed16dbf65e55c54a6cb5eb2596a46a6639428370", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ed16dbf65e55c54a6cb5eb2596a46a6639428370/comments", "author": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f0dc35927becebf20730117a0bf00840ac1dd4ff", "url": "https://api.github.com/repos/rust-lang/rust/commits/f0dc35927becebf20730117a0bf00840ac1dd4ff", "html_url": "https://github.com/rust-lang/rust/commit/f0dc35927becebf20730117a0bf00840ac1dd4ff"}], "stats": {"total": 26, "additions": 26, "deletions": 0}, "files": [{"sha": "66fca2fd281413fdbab3c1e9be67e509846c8158", "filename": "library/core/src/mem/mod.rs", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/ed16dbf65e55c54a6cb5eb2596a46a6639428370/library%2Fcore%2Fsrc%2Fmem%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed16dbf65e55c54a6cb5eb2596a46a6639428370/library%2Fcore%2Fsrc%2Fmem%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fmem%2Fmod.rs?ref=ed16dbf65e55c54a6cb5eb2596a46a6639428370", "patch": "@@ -1179,13 +1179,39 @@ pub const fn variant_count<T>() -> usize {\n     intrinsics::variant_count::<T>()\n }\n \n+/// Provides associated constants for various useful properties of types,\n+/// to give them a canonical form in our code and make them easier to read.\n+///\n /// This is here only to simplify all the ZST checks we need in the library.\n /// It's not on a stabilization track right now.\n #[doc(hidden)]\n #[unstable(feature = \"sized_type_properties\", issue = \"none\")]\n pub trait SizedTypeProperties: Sized {\n     /// `true` if this type requires no storage.\n     /// `false` if its [size](size_of) is greater than zero.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// #![feature(sized_type_properties)]\n+    /// use core::mem::SizedTypeProperties;\n+    ///\n+    /// fn do_something_with<T>() {\n+    ///     if T::IS_ZST {\n+    ///         // ... special approach ...\n+    ///     } else {\n+    ///         // ... the normal thing ...\n+    ///     }\n+    /// }\n+    ///\n+    /// struct MyUnit;\n+    /// assert!(MyUnit::IS_ZST);\n+    ///\n+    /// // For negative checks, consider using UFCS to emphasize the negation\n+    /// assert!(!<i32>::IS_ZST);\n+    /// // As it can sometimes hide in the type otherwise\n+    /// assert!(!String::IS_ZST);\n+    /// ```\n     #[doc(hidden)]\n     #[unstable(feature = \"sized_type_properties\", issue = \"none\")]\n     const IS_ZST: bool = size_of::<Self>() == 0;"}]}