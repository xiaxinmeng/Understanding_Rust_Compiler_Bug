{"sha": "10a5e75537e3189ffa808be7eadc19569966b266", "node_id": "C_kwDOAAsO6NoAKDEwYTVlNzU1MzdlMzE4OWZmYTgwOGJlN2VhZGMxOTU2OTk2NmIyNjY", "commit": {"author": {"name": "Cameron Steffen", "email": "cam.steffen94@gmail.com", "date": "2022-11-01T17:24:51Z"}, "committer": {"name": "Cameron Steffen", "email": "cam.steffen94@gmail.com", "date": "2022-11-01T17:28:14Z"}, "message": "Add track_caller to some Lock methods", "tree": {"sha": "5ff1c7fcf89cdea8111defb5973ed4d0297f3d85", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5ff1c7fcf89cdea8111defb5973ed4d0297f3d85"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/10a5e75537e3189ffa808be7eadc19569966b266", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/10a5e75537e3189ffa808be7eadc19569966b266", "html_url": "https://github.com/rust-lang/rust/commit/10a5e75537e3189ffa808be7eadc19569966b266", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/10a5e75537e3189ffa808be7eadc19569966b266/comments", "author": {"login": "camsteffen", "id": 5565418, "node_id": "MDQ6VXNlcjU1NjU0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5565418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camsteffen", "html_url": "https://github.com/camsteffen", "followers_url": "https://api.github.com/users/camsteffen/followers", "following_url": "https://api.github.com/users/camsteffen/following{/other_user}", "gists_url": "https://api.github.com/users/camsteffen/gists{/gist_id}", "starred_url": "https://api.github.com/users/camsteffen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camsteffen/subscriptions", "organizations_url": "https://api.github.com/users/camsteffen/orgs", "repos_url": "https://api.github.com/users/camsteffen/repos", "events_url": "https://api.github.com/users/camsteffen/events{/privacy}", "received_events_url": "https://api.github.com/users/camsteffen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camsteffen", "id": 5565418, "node_id": "MDQ6VXNlcjU1NjU0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5565418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camsteffen", "html_url": "https://github.com/camsteffen", "followers_url": "https://api.github.com/users/camsteffen/followers", "following_url": "https://api.github.com/users/camsteffen/following{/other_user}", "gists_url": "https://api.github.com/users/camsteffen/gists{/gist_id}", "starred_url": "https://api.github.com/users/camsteffen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camsteffen/subscriptions", "organizations_url": "https://api.github.com/users/camsteffen/orgs", "repos_url": "https://api.github.com/users/camsteffen/repos", "events_url": "https://api.github.com/users/camsteffen/events{/privacy}", "received_events_url": "https://api.github.com/users/camsteffen/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2afca78a0b03db144c5d8b9f8868feebfe096309", "url": "https://api.github.com/repos/rust-lang/rust/commits/2afca78a0b03db144c5d8b9f8868feebfe096309", "html_url": "https://github.com/rust-lang/rust/commit/2afca78a0b03db144c5d8b9f8868feebfe096309"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "c550f246e094aa77358d0010610e108226caf5af", "filename": "compiler/rustc_data_structures/src/sync.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/10a5e75537e3189ffa808be7eadc19569966b266/compiler%2Frustc_data_structures%2Fsrc%2Fsync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/10a5e75537e3189ffa808be7eadc19569966b266/compiler%2Frustc_data_structures%2Fsrc%2Fsync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_data_structures%2Fsrc%2Fsync.rs?ref=10a5e75537e3189ffa808be7eadc19569966b266", "patch": "@@ -410,6 +410,7 @@ impl<T> Lock<T> {\n \n     #[cfg(parallel_compiler)]\n     #[inline(always)]\n+    #[track_caller]\n     pub fn lock(&self) -> LockGuard<'_, T> {\n         if ERROR_CHECKING {\n             self.0.try_lock().expect(\"lock was already held\")\n@@ -420,21 +421,25 @@ impl<T> Lock<T> {\n \n     #[cfg(not(parallel_compiler))]\n     #[inline(always)]\n+    #[track_caller]\n     pub fn lock(&self) -> LockGuard<'_, T> {\n         self.0.borrow_mut()\n     }\n \n     #[inline(always)]\n+    #[track_caller]\n     pub fn with_lock<F: FnOnce(&mut T) -> R, R>(&self, f: F) -> R {\n         f(&mut *self.lock())\n     }\n \n     #[inline(always)]\n+    #[track_caller]\n     pub fn borrow(&self) -> LockGuard<'_, T> {\n         self.lock()\n     }\n \n     #[inline(always)]\n+    #[track_caller]\n     pub fn borrow_mut(&self) -> LockGuard<'_, T> {\n         self.lock()\n     }\n@@ -476,6 +481,7 @@ impl<T> RwLock<T> {\n \n     #[cfg(not(parallel_compiler))]\n     #[inline(always)]\n+    #[track_caller]\n     pub fn read(&self) -> ReadGuard<'_, T> {\n         self.0.borrow()\n     }\n@@ -491,6 +497,7 @@ impl<T> RwLock<T> {\n     }\n \n     #[inline(always)]\n+    #[track_caller]\n     pub fn with_read_lock<F: FnOnce(&T) -> R, R>(&self, f: F) -> R {\n         f(&*self.read())\n     }\n@@ -509,6 +516,7 @@ impl<T> RwLock<T> {\n \n     #[cfg(not(parallel_compiler))]\n     #[inline(always)]\n+    #[track_caller]\n     pub fn write(&self) -> WriteGuard<'_, T> {\n         self.0.borrow_mut()\n     }\n@@ -524,16 +532,19 @@ impl<T> RwLock<T> {\n     }\n \n     #[inline(always)]\n+    #[track_caller]\n     pub fn with_write_lock<F: FnOnce(&mut T) -> R, R>(&self, f: F) -> R {\n         f(&mut *self.write())\n     }\n \n     #[inline(always)]\n+    #[track_caller]\n     pub fn borrow(&self) -> ReadGuard<'_, T> {\n         self.read()\n     }\n \n     #[inline(always)]\n+    #[track_caller]\n     pub fn borrow_mut(&self) -> WriteGuard<'_, T> {\n         self.write()\n     }"}]}