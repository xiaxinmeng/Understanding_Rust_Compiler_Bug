{"sha": "b82f6c575e53f06c3645f66a9d480b4f025ee39e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI4MmY2YzU3NWU1M2YwNmMzNjQ1ZjY2YTlkNDgwYjRmMDI1ZWUzOWU=", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2020-02-06T09:04:46Z"}, "committer": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2020-02-06T09:04:46Z"}, "message": "rustc_codegen_llvm: always set AlwaysPreserve on all debuginfo variables.", "tree": {"sha": "b0caa8224a7d801ef226dc2ae90a71747c733624", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b0caa8224a7d801ef226dc2ae90a71747c733624"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b82f6c575e53f06c3645f66a9d480b4f025ee39e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b82f6c575e53f06c3645f66a9d480b4f025ee39e", "html_url": "https://github.com/rust-lang/rust/commit/b82f6c575e53f06c3645f66a9d480b4f025ee39e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b82f6c575e53f06c3645f66a9d480b4f025ee39e/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ed853b861993ee5f3798037a3560f573c62b17cd", "url": "https://api.github.com/repos/rust-lang/rust/commits/ed853b861993ee5f3798037a3560f573c62b17cd", "html_url": "https://github.com/rust-lang/rust/commit/ed853b861993ee5f3798037a3560f573c62b17cd"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "eb22d74ba3e47374a72e4ff11bd043794ba2c388", "filename": "src/librustc_codegen_llvm/debuginfo/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b82f6c575e53f06c3645f66a9d480b4f025ee39e/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b82f6c575e53f06c3645f66a9d480b4f025ee39e/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmod.rs?ref=b82f6c575e53f06c3645f66a9d480b4f025ee39e", "patch": "@@ -569,7 +569,7 @@ impl DebugInfoMethods<'tcx> for CodegenCx<'ll, 'tcx> {\n                 file_metadata,\n                 loc.line as c_uint,\n                 type_metadata,\n-                self.sess().opts.optimize != config::OptLevel::No,\n+                true,\n                 DIFlags::FlagZero,\n                 argument_index,\n                 align.bytes() as u32,"}]}