{"sha": "23abd8513857fdaef35ee48b2df0c69b6f784fcf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIzYWJkODUxMzg1N2ZkYWVmMzVlZTQ4YjJkZjBjNjliNmY3ODRmY2Y=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-11-05T11:34:22Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-11-16T10:57:43Z"}, "message": "rename `region_inference` module to `region_constraints`", "tree": {"sha": "e9cedf28de2bad1493e557652a1e5ef449a54343", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e9cedf28de2bad1493e557652a1e5ef449a54343"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/23abd8513857fdaef35ee48b2df0c69b6f784fcf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/23abd8513857fdaef35ee48b2df0c69b6f784fcf", "html_url": "https://github.com/rust-lang/rust/commit/23abd8513857fdaef35ee48b2df0c69b6f784fcf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/23abd8513857fdaef35ee48b2df0c69b6f784fcf/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cff191d4440df2befeb661f5ce7b9a53a03ce548", "url": "https://api.github.com/repos/rust-lang/rust/commits/cff191d4440df2befeb661f5ce7b9a53a03ce548", "html_url": "https://github.com/rust-lang/rust/commit/cff191d4440df2befeb661f5ce7b9a53a03ce548"}], "stats": {"total": 38, "additions": 19, "deletions": 19}, "files": [{"sha": "67fdd68a826c2573d99052b32a8d6072de0a1c01", "filename": "src/librustc/infer/error_reporting/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/23abd8513857fdaef35ee48b2df0c69b6f784fcf/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23abd8513857fdaef35ee48b2df0c69b6f784fcf/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fmod.rs?ref=23abd8513857fdaef35ee48b2df0c69b6f784fcf", "patch": "@@ -57,7 +57,7 @@\n \n use infer;\n use super::{InferCtxt, TypeTrace, SubregionOrigin, RegionVariableOrigin, ValuePairs};\n-use super::region_inference::GenericKind;\n+use super::region_constraints::GenericKind;\n use super::lexical_region_resolve::RegionResolutionError;\n \n use std::fmt;"}, {"sha": "5f898856d31f0f1ece1bc38f48bd1b95fbf362e4", "filename": "src/librustc/infer/higher_ranked/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/23abd8513857fdaef35ee48b2df0c69b6f784fcf/src%2Flibrustc%2Finfer%2Fhigher_ranked%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23abd8513857fdaef35ee48b2df0c69b6f784fcf/src%2Flibrustc%2Finfer%2Fhigher_ranked%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Fhigher_ranked%2Fmod.rs?ref=23abd8513857fdaef35ee48b2df0c69b6f784fcf", "patch": "@@ -17,7 +17,7 @@ use super::{CombinedSnapshot,\n             SubregionOrigin,\n             SkolemizationMap};\n use super::combine::CombineFields;\n-use super::region_inference::{TaintDirections};\n+use super::region_constraints::{TaintDirections};\n \n use ty::{self, TyCtxt, Binder, TypeFoldable};\n use ty::error::TypeError;"}, {"sha": "baf7f0aac3dff3fc95ec9118c8f70f4bd1fee578", "filename": "src/librustc/infer/lexical_region_resolve/graphviz.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/23abd8513857fdaef35ee48b2df0c69b6f784fcf/src%2Flibrustc%2Finfer%2Flexical_region_resolve%2Fgraphviz.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23abd8513857fdaef35ee48b2df0c69b6f784fcf/src%2Flibrustc%2Finfer%2Flexical_region_resolve%2Fgraphviz.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Flexical_region_resolve%2Fgraphviz.rs?ref=23abd8513857fdaef35ee48b2df0c69b6f784fcf", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n //! This module provides linkage between libgraphviz traits and\n-//! `rustc::middle::typeck::infer::region_inference`, generating a\n+//! `rustc::middle::typeck::infer::region_constraints`, generating a\n //! rendering of the graph represented by the list of `Constraint`\n //! instances (which make up the edges of the graph), as well as the\n //! origin for each constraint (which are attached to the labels on\n@@ -25,7 +25,7 @@ use middle::free_region::RegionRelations;\n use middle::region;\n use super::Constraint;\n use infer::SubregionOrigin;\n-use infer::region_inference::RegionVarBindings;\n+use infer::region_constraints::RegionVarBindings;\n use util::nodemap::{FxHashMap, FxHashSet};\n \n use std::borrow::Cow;"}, {"sha": "aeeacfb132a650951bba86409650351e371243e2", "filename": "src/librustc/infer/lexical_region_resolve/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/23abd8513857fdaef35ee48b2df0c69b6f784fcf/src%2Flibrustc%2Finfer%2Flexical_region_resolve%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23abd8513857fdaef35ee48b2df0c69b6f784fcf/src%2Flibrustc%2Finfer%2Flexical_region_resolve%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Flexical_region_resolve%2Fmod.rs?ref=23abd8513857fdaef35ee48b2df0c69b6f784fcf", "patch": "@@ -12,10 +12,10 @@\n \n use infer::SubregionOrigin;\n use infer::RegionVariableOrigin;\n-use infer::region_inference::Constraint;\n-use infer::region_inference::GenericKind;\n-use infer::region_inference::RegionVarBindings;\n-use infer::region_inference::VerifyBound;\n+use infer::region_constraints::Constraint;\n+use infer::region_constraints::GenericKind;\n+use infer::region_constraints::RegionVarBindings;\n+use infer::region_constraints::VerifyBound;\n use middle::free_region::RegionRelations;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_data_structures::graph::{self, Direction, NodeIndex, OUTGOING};"}, {"sha": "e5e6f292f68759f5ef97a9a058883c473fe17bf0", "filename": "src/librustc/infer/mod.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/23abd8513857fdaef35ee48b2df0c69b6f784fcf/src%2Flibrustc%2Finfer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23abd8513857fdaef35ee48b2df0c69b6f784fcf/src%2Flibrustc%2Finfer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Fmod.rs?ref=23abd8513857fdaef35ee48b2df0c69b6f784fcf", "patch": "@@ -16,7 +16,7 @@ pub use self::SubregionOrigin::*;\n pub use self::ValuePairs::*;\n pub use ty::IntVarValue;\n pub use self::freshen::TypeFreshener;\n-pub use self::region_inference::{GenericKind, VerifyBound};\n+pub use self::region_constraints::{GenericKind, VerifyBound};\n \n use hir::def_id::DefId;\n use middle::free_region::{FreeRegionMap, RegionRelations};\n@@ -41,7 +41,7 @@ use arena::DroplessArena;\n \n use self::combine::CombineFields;\n use self::higher_ranked::HrMatchResult;\n-use self::region_inference::{RegionVarBindings, RegionSnapshot};\n+use self::region_constraints::{RegionVarBindings, RegionSnapshot};\n use self::lexical_region_resolve::LexicalRegionResolutions;\n use self::type_variable::TypeVariableOrigin;\n use self::unify_key::ToType;\n@@ -55,7 +55,7 @@ mod glb;\n mod higher_ranked;\n pub mod lattice;\n mod lub;\n-pub mod region_inference;\n+pub mod region_constraints;\n mod lexical_region_resolve;\n mod outlives;\n pub mod resolve;\n@@ -104,7 +104,7 @@ pub struct InferCtxt<'a, 'gcx: 'a+'tcx, 'tcx: 'a> {\n     float_unification_table: RefCell<UnificationTable<ty::FloatVid>>,\n \n     // For region variables.\n-    region_vars: RefCell<RegionVarBindings<'tcx>>,\n+    region_constraints: RefCell<RegionConstraints<'tcx>>,\n \n     // Once region inference is done, the values for each variable.\n     lexical_region_resolutions: RefCell<Option<LexicalRegionResolutions<'tcx>>>,\n@@ -1354,7 +1354,7 @@ impl<'a, 'gcx, 'tcx> InferCtxt<'a, 'gcx, 'tcx> {\n         Ok(InferOk { value: result, obligations: combine.obligations })\n     }\n \n-    /// See `verify_generic_bound` method in `region_inference`\n+    /// See `verify_generic_bound` method in `region_constraints`\n     pub fn verify_generic_bound(&self,\n                                 origin: SubregionOrigin<'tcx>,\n                                 kind: GenericKind<'tcx>,"}, {"sha": "b564faf3d0c24c9500c3a56950e3b9f89ca9f8c5", "filename": "src/librustc/infer/region_constraints/README.md", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23abd8513857fdaef35ee48b2df0c69b6f784fcf/src%2Flibrustc%2Finfer%2Fregion_constraints%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/23abd8513857fdaef35ee48b2df0c69b6f784fcf/src%2Flibrustc%2Finfer%2Fregion_constraints%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Fregion_constraints%2FREADME.md?ref=23abd8513857fdaef35ee48b2df0c69b6f784fcf", "previous_filename": "src/librustc/infer/region_inference/README.md"}, {"sha": "0731a2cfed6c92ac20704b190087631928ee7d15", "filename": "src/librustc/infer/region_constraints/mod.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23abd8513857fdaef35ee48b2df0c69b6f784fcf/src%2Flibrustc%2Finfer%2Fregion_constraints%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23abd8513857fdaef35ee48b2df0c69b6f784fcf/src%2Flibrustc%2Finfer%2Fregion_constraints%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Fregion_constraints%2Fmod.rs?ref=23abd8513857fdaef35ee48b2df0c69b6f784fcf", "previous_filename": "src/librustc/infer/region_inference/mod.rs"}, {"sha": "ee45f7bd82801afcebbb0298476458881b0c6a8d", "filename": "src/librustc/infer/region_constraints/taint.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23abd8513857fdaef35ee48b2df0c69b6f784fcf/src%2Flibrustc%2Finfer%2Fregion_constraints%2Ftaint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23abd8513857fdaef35ee48b2df0c69b6f784fcf/src%2Flibrustc%2Finfer%2Fregion_constraints%2Ftaint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Fregion_constraints%2Ftaint.rs?ref=23abd8513857fdaef35ee48b2df0c69b6f784fcf", "previous_filename": "src/librustc/infer/region_inference/taint.rs"}, {"sha": "d3aa80e5585e287410f3db4d9c860c7c7b81fa70", "filename": "src/librustc/middle/region.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/23abd8513857fdaef35ee48b2df0c69b6f784fcf/src%2Flibrustc%2Fmiddle%2Fregion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23abd8513857fdaef35ee48b2df0c69b6f784fcf/src%2Flibrustc%2Fmiddle%2Fregion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fregion.rs?ref=23abd8513857fdaef35ee48b2df0c69b6f784fcf", "patch": "@@ -12,7 +12,7 @@\n //! the parent links in the region hierarchy.\n //!\n //! Most of the documentation on regions can be found in\n-//! `middle/infer/region_inference/README.md`\n+//! `middle/infer/region_constraints/README.md`\n \n use ich::{StableHashingContext, NodeIdHashingMode};\n use util::nodemap::{FxHashMap, FxHashSet};\n@@ -320,7 +320,7 @@ pub struct ScopeTree {\n     /// hierarchy based on their lexical mapping. This is used to\n     /// handle the relationships between regions in a fn and in a\n     /// closure defined by that fn. See the \"Modeling closures\"\n-    /// section of the README in infer::region_inference for\n+    /// section of the README in infer::region_constraints for\n     /// more details.\n     closure_tree: FxHashMap<hir::ItemLocalId, hir::ItemLocalId>,\n \n@@ -407,7 +407,7 @@ pub struct Context {\n     /// of the innermost fn body. Each fn forms its own disjoint tree\n     /// in the region hierarchy. These fn bodies are themselves\n     /// arranged into a tree. See the \"Modeling closures\" section of\n-    /// the README in infer::region_inference for more\n+    /// the README in infer::region_constraints for more\n     /// details.\n     root_id: Option<hir::ItemLocalId>,\n \n@@ -646,7 +646,7 @@ impl<'tcx> ScopeTree {\n             // different functions.  Compare those fn for lexical\n             // nesting. The reasoning behind this is subtle.  See the\n             // \"Modeling closures\" section of the README in\n-            // infer::region_inference for more details.\n+            // infer::region_constraints for more details.\n             let a_root_scope = a_ancestors[a_index];\n             let b_root_scope = a_ancestors[a_index];\n             return match (a_root_scope.data(), b_root_scope.data()) {"}, {"sha": "ea0fa945c378332ef314f03281ed94d4db5a0f49", "filename": "src/librustc_typeck/check/_match.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/23abd8513857fdaef35ee48b2df0c69b6f784fcf/src%2Flibrustc_typeck%2Fcheck%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23abd8513857fdaef35ee48b2df0c69b6f784fcf/src%2Flibrustc_typeck%2Fcheck%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2F_match.rs?ref=23abd8513857fdaef35ee48b2df0c69b6f784fcf", "patch": "@@ -471,7 +471,7 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n         //\n         // 2. Things go horribly wrong if we use subtype. The reason for\n         // THIS is a fairly subtle case involving bound regions. See the\n-        // `givens` field in `region_inference`, as well as the test\n+        // `givens` field in `region_constraints`, as well as the test\n         // `regions-relate-bound-regions-on-closures-to-inference-variables.rs`,\n         // for details. Short version is that we must sometimes detect\n         // relationships between specific region variables and regions"}, {"sha": "3162ef54f39bcad6799c07ba4706b8de9589d067", "filename": "src/test/run-pass/regions-relate-bound-regions-on-closures-to-inference-variables.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/23abd8513857fdaef35ee48b2df0c69b6f784fcf/src%2Ftest%2Frun-pass%2Fregions-relate-bound-regions-on-closures-to-inference-variables.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23abd8513857fdaef35ee48b2df0c69b6f784fcf/src%2Ftest%2Frun-pass%2Fregions-relate-bound-regions-on-closures-to-inference-variables.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fregions-relate-bound-regions-on-closures-to-inference-variables.rs?ref=23abd8513857fdaef35ee48b2df0c69b6f784fcf", "patch": "@@ -42,7 +42,7 @@ impl<'a,'tcx> Foo<'a,'tcx> {\n             // inferring `'_2` to be `'static` in this case, because\n             // it is created outside the closure but then related to\n             // regions bound by the closure itself. See the\n-            // `region_inference.rs` file (and the `givens` field, in\n+            // `region_constraints.rs` file (and the `givens` field, in\n             // particular) for more details.\n             this.foo()\n         }))"}]}