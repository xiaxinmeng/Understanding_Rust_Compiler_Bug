{"sha": "01c75e4b98c3fe4cb1e6340bfd3148086ba05879", "node_id": "C_kwDOAAsO6NoAKDAxYzc1ZTRiOThjM2ZlNGNiMWU2MzQwYmZkMzE0ODA4NmJhMDU4Nzk", "commit": {"author": {"name": "Micha White", "email": "botahamec@outlook.com", "date": "2022-06-10T01:39:13Z"}, "committer": {"name": "Micha White", "email": "botahamec@outlook.com", "date": "2022-06-10T17:12:02Z"}, "message": "Added tests for Cow and Result", "tree": {"sha": "a5023782e5c80b90f717e75173354a945cd636c5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a5023782e5c80b90f717e75173354a945cd636c5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/01c75e4b98c3fe4cb1e6340bfd3148086ba05879", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEGofhdE61kfoixWy+rtlL+hwwE4kFAmKje2MACgkQrtlL+hww\nE4mB0g//WKWfkE8OEQZxJYf+69fep5yLeOGSbF9RIR4iiPYiSP/Df8KmcpYVgYCS\nCxHY6ebLkspVz3mxEXBKBqVasPUDyYfpwyZq/2N6bXdI/mAjkcOSiNRVUoNUfDz8\nBVZdcjO6oOV8OqHDDDA8ft5O7dGrrbrtuqQaS3AURS5eMfg8VWii4r6vJB1j6BJZ\nNBXIE5kyjJ36D7wBB10JRk07+Ypo6vvu4intI7p6fhExWurgT3upxViblGw3GLk7\nSocykLmDH7Am6SOERl6R9zGpPGVCY+aKnplOZr+A0E3H7Mkww+8F1RMAm84/ELbI\ntYsjwIj4wvlvg63LioirvkuW6ClRVdDiJ5tdAJMIDxMK+TAiv2mZKq43/BKKY42w\nHE3ceIon0p+hmdDSRD54cAdwDkPkHJl2sjOS0ljFss4CBI1jnOegqvq06v+/9z0H\nBqMC8p6RtiFTfjsP9rUqK4JvduRhdmsoQf7c9KighaiY+r7+9y0NCFqd9GaFALjm\nwwpXmhtp2MrnbLXTh6ZQW3AFX+b3Qt/AkUKfV7JCp1huID8tjs9bK9uIwAcKYpv0\nNVdJN1QG6aSUnz1/BI6XmAqLwVYyzUkLUfO6GDUavuxxPflc7x3Ca3tTO67n+f9j\nyWjfnY+tYZBVDlBO9Mu5vlOQL/5/oNBWa54AM2GkQXTmHs5T4A8=\n=P7i/\n-----END PGP SIGNATURE-----", "payload": "tree a5023782e5c80b90f717e75173354a945cd636c5\nparent b0c20302b7a647ae362071d72b382b1bd393e4a5\nauthor Micha White <botahamec@outlook.com> 1654825153 -0400\ncommitter Micha White <botahamec@outlook.com> 1654881122 -0400\n\nAdded tests for Cow and Result\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/01c75e4b98c3fe4cb1e6340bfd3148086ba05879", "html_url": "https://github.com/rust-lang/rust/commit/01c75e4b98c3fe4cb1e6340bfd3148086ba05879", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/01c75e4b98c3fe4cb1e6340bfd3148086ba05879/comments", "author": {"login": "botahamec", "id": 32026883, "node_id": "MDQ6VXNlcjMyMDI2ODgz", "avatar_url": "https://avatars.githubusercontent.com/u/32026883?v=4", "gravatar_id": "", "url": "https://api.github.com/users/botahamec", "html_url": "https://github.com/botahamec", "followers_url": "https://api.github.com/users/botahamec/followers", "following_url": "https://api.github.com/users/botahamec/following{/other_user}", "gists_url": "https://api.github.com/users/botahamec/gists{/gist_id}", "starred_url": "https://api.github.com/users/botahamec/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/botahamec/subscriptions", "organizations_url": "https://api.github.com/users/botahamec/orgs", "repos_url": "https://api.github.com/users/botahamec/repos", "events_url": "https://api.github.com/users/botahamec/events{/privacy}", "received_events_url": "https://api.github.com/users/botahamec/received_events", "type": "User", "site_admin": false}, "committer": {"login": "botahamec", "id": 32026883, "node_id": "MDQ6VXNlcjMyMDI2ODgz", "avatar_url": "https://avatars.githubusercontent.com/u/32026883?v=4", "gravatar_id": "", "url": "https://api.github.com/users/botahamec", "html_url": "https://github.com/botahamec", "followers_url": "https://api.github.com/users/botahamec/followers", "following_url": "https://api.github.com/users/botahamec/following{/other_user}", "gists_url": "https://api.github.com/users/botahamec/gists{/gist_id}", "starred_url": "https://api.github.com/users/botahamec/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/botahamec/subscriptions", "organizations_url": "https://api.github.com/users/botahamec/orgs", "repos_url": "https://api.github.com/users/botahamec/repos", "events_url": "https://api.github.com/users/botahamec/events{/privacy}", "received_events_url": "https://api.github.com/users/botahamec/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b0c20302b7a647ae362071d72b382b1bd393e4a5", "url": "https://api.github.com/repos/rust-lang/rust/commits/b0c20302b7a647ae362071d72b382b1bd393e4a5", "html_url": "https://github.com/rust-lang/rust/commit/b0c20302b7a647ae362071d72b382b1bd393e4a5"}], "stats": {"total": 61, "additions": 60, "deletions": 1}, "files": [{"sha": "70d6febb71f9da4d7ea4d7adc0c094382960a1d9", "filename": "tests/ui/single_match_else.rs", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/01c75e4b98c3fe4cb1e6340bfd3148086ba05879/tests%2Fui%2Fsingle_match_else.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01c75e4b98c3fe4cb1e6340bfd3148086ba05879/tests%2Fui%2Fsingle_match_else.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsingle_match_else.rs?ref=01c75e4b98c3fe4cb1e6340bfd3148086ba05879", "patch": "@@ -97,4 +97,23 @@ fn main() {\n             return;\n         },\n     }\n+\n+    // lint here\n+    use std::convert::Infallible;\n+    match Result::<i32, Infallible>::Ok(1) {\n+        Ok(a) => println!(\"${:?}\", a),\n+        Err(_) => {\n+            println!(\"else block\");\n+            return;\n+        }\n+    }\n+\n+    use std::borrow::Cow;\n+    match Cow::from(\"moo\") {\n+        Cow::Owned(a) => println!(\"${:?}\", a),\n+        Cow::Borrowed(_) => {\n+            println!(\"else block\");\n+            return;\n+        }\n+    }\n }"}, {"sha": "38fd9c6a6782ac87d4ab12a418581cb6bd813576", "filename": "tests/ui/single_match_else.stderr", "status": "modified", "additions": 41, "deletions": 1, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/01c75e4b98c3fe4cb1e6340bfd3148086ba05879/tests%2Fui%2Fsingle_match_else.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/01c75e4b98c3fe4cb1e6340bfd3148086ba05879/tests%2Fui%2Fsingle_match_else.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsingle_match_else.stderr?ref=01c75e4b98c3fe4cb1e6340bfd3148086ba05879", "patch": "@@ -60,5 +60,45 @@ LL +         return;\n LL +     }\n    |\n \n-error: aborting due to 3 previous errors\n+error: you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`\n+  --> $DIR/single_match_else.rs:103:5\n+   |\n+LL | /     match Result::<i32, Infallible>::Ok(1) {\n+LL | |         Ok(a) => println!(\"${:?}\", a),\n+LL | |         Err(_) => {\n+LL | |             println!(\"else block\");\n+LL | |             return;\n+LL | |         }\n+LL | |     }\n+   | |_____^\n+   |\n+help: try this\n+   |\n+LL ~     if let Ok(a) = Result::<i32, Infallible>::Ok(1) { println!(\"${:?}\", a) } else {\n+LL +         println!(\"else block\");\n+LL +         return;\n+LL +     }\n+   |\n+\n+error: you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`\n+  --> $DIR/single_match_else.rs:112:5\n+   |\n+LL | /     match Cow::from(\"moo\") {\n+LL | |         Cow::Owned(a) => println!(\"${:?}\", a),\n+LL | |         Cow::Borrowed(_) => {\n+LL | |             println!(\"else block\");\n+LL | |             return;\n+LL | |         }\n+LL | |     }\n+   | |_____^\n+   |\n+help: try this\n+   |\n+LL ~     if let Cow::Owned(a) = Cow::from(\"moo\") { println!(\"${:?}\", a) } else {\n+LL +         println!(\"else block\");\n+LL +         return;\n+LL +     }\n+   |\n+\n+error: aborting due to 5 previous errors\n "}]}