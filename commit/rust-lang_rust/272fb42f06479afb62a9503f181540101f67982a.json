{"sha": "272fb42f06479afb62a9503f181540101f67982a", "node_id": "C_kwDOAAsO6NoAKDI3MmZiNDJmMDY0NzlhZmI2MmE5NTAzZjE4MTU0MDEwMWY2Nzk4MmE", "commit": {"author": {"name": "Yacin Tmimi", "email": "yacintmimi@gmail.com", "date": "2022-02-25T16:31:09Z"}, "committer": {"name": "Caleb Cartwright", "email": "calebcartwright@users.noreply.github.com", "date": "2022-03-01T05:25:49Z"}, "message": "Prevent wrapping markdown headers in doc comments\n\nFixes 5238\n\nA markdown header is defined by a string that starts with `#`.\n\nPreviously, rustfmt would wrap long markdown headers when\n`wrap_comments=true`. This lead to issues when rendering these headers\nin HTML using rustdoc.\n\nNow, rustfmt leaves markdown headers alone when wrapping comments.", "tree": {"sha": "b84d06c21cc8a1ae3202a2455d28f3f22932b15d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b84d06c21cc8a1ae3202a2455d28f3f22932b15d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/272fb42f06479afb62a9503f181540101f67982a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/272fb42f06479afb62a9503f181540101f67982a", "html_url": "https://github.com/rust-lang/rust/commit/272fb42f06479afb62a9503f181540101f67982a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/272fb42f06479afb62a9503f181540101f67982a/comments", "author": {"login": "ytmimi", "id": 29028348, "node_id": "MDQ6VXNlcjI5MDI4MzQ4", "avatar_url": "https://avatars.githubusercontent.com/u/29028348?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ytmimi", "html_url": "https://github.com/ytmimi", "followers_url": "https://api.github.com/users/ytmimi/followers", "following_url": "https://api.github.com/users/ytmimi/following{/other_user}", "gists_url": "https://api.github.com/users/ytmimi/gists{/gist_id}", "starred_url": "https://api.github.com/users/ytmimi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ytmimi/subscriptions", "organizations_url": "https://api.github.com/users/ytmimi/orgs", "repos_url": "https://api.github.com/users/ytmimi/repos", "events_url": "https://api.github.com/users/ytmimi/events{/privacy}", "received_events_url": "https://api.github.com/users/ytmimi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "calebcartwright", "id": 13042488, "node_id": "MDQ6VXNlcjEzMDQyNDg4", "avatar_url": "https://avatars.githubusercontent.com/u/13042488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebcartwright", "html_url": "https://github.com/calebcartwright", "followers_url": "https://api.github.com/users/calebcartwright/followers", "following_url": "https://api.github.com/users/calebcartwright/following{/other_user}", "gists_url": "https://api.github.com/users/calebcartwright/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebcartwright/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebcartwright/subscriptions", "organizations_url": "https://api.github.com/users/calebcartwright/orgs", "repos_url": "https://api.github.com/users/calebcartwright/repos", "events_url": "https://api.github.com/users/calebcartwright/events{/privacy}", "received_events_url": "https://api.github.com/users/calebcartwright/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "12048e444f8a68b3c13e98b15c11a69de9f0b485", "url": "https://api.github.com/repos/rust-lang/rust/commits/12048e444f8a68b3c13e98b15c11a69de9f0b485", "html_url": "https://github.com/rust-lang/rust/commit/12048e444f8a68b3c13e98b15c11a69de9f0b485"}], "stats": {"total": 65, "additions": 61, "deletions": 4}, "files": [{"sha": "f9d8a0fa70c00fb6538e76c42af0698d7e2a043b", "filename": "src/comment.rs", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/272fb42f06479afb62a9503f181540101f67982a/src%2Fcomment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/272fb42f06479afb62a9503f181540101f67982a/src%2Fcomment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomment.rs?ref=272fb42f06479afb62a9503f181540101f67982a", "patch": "@@ -683,6 +683,7 @@ impl<'a> CommentRewrite<'a> {\n         i: usize,\n         line: &'a str,\n         has_leading_whitespace: bool,\n+        is_doc_comment: bool,\n     ) -> bool {\n         let num_newlines = count_newlines(orig);\n         let is_last = i == num_newlines;\n@@ -789,10 +790,19 @@ impl<'a> CommentRewrite<'a> {\n             }\n         }\n \n-        if self.fmt.config.wrap_comments()\n+        let is_markdown_header_doc_comment = is_doc_comment && line.starts_with(\"#\");\n+\n+        // We only want to wrap the comment if:\n+        // 1) wrap_comments = true is configured\n+        // 2) The comment is not the start of a markdown header doc comment\n+        // 3) The comment width exceeds the shape's width\n+        // 4) No URLS were found in the commnet\n+        let should_wrap_comment = self.fmt.config.wrap_comments()\n+            && !is_markdown_header_doc_comment\n             && unicode_str_width(line) > self.fmt.shape.width\n-            && !has_url(line)\n-        {\n+            && !has_url(line);\n+\n+        if should_wrap_comment {\n             match rewrite_string(line, &self.fmt, self.max_width) {\n                 Some(ref s) => {\n                     self.is_prev_line_multi_line = s.contains('\\n');\n@@ -882,7 +892,7 @@ fn rewrite_comment_inner(\n         });\n \n     for (i, (line, has_leading_whitespace)) in lines.enumerate() {\n-        if rewriter.handle_line(orig, i, line, has_leading_whitespace) {\n+        if rewriter.handle_line(orig, i, line, has_leading_whitespace, is_doc_comment) {\n             break;\n         }\n     }"}, {"sha": "229c6e5753d2e994eafdab282ee0015b4b5da4c1", "filename": "tests/source/issue-5238/markdown_header_wrap_comments_false.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/272fb42f06479afb62a9503f181540101f67982a/tests%2Fsource%2Fissue-5238%2Fmarkdown_header_wrap_comments_false.rs", "raw_url": "https://github.com/rust-lang/rust/raw/272fb42f06479afb62a9503f181540101f67982a/tests%2Fsource%2Fissue-5238%2Fmarkdown_header_wrap_comments_false.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fissue-5238%2Fmarkdown_header_wrap_comments_false.rs?ref=272fb42f06479afb62a9503f181540101f67982a", "patch": "@@ -0,0 +1,11 @@\n+// rustfmt-wrap_comments: false\n+\n+/// no markdown header so rustfmt should wrap this comment when `format_code_in_doc_comments = true` and `wrap_comments = true`\n+fn not_documented_with_markdown_header() {\n+    // This is just a normal inline comment so rustfmt should wrap this comment when `wrap_comments = true`\n+}\n+\n+/// # We're using a markdown header here so rustfmt should refuse to wrap this comment in all circumstances\n+fn documented_with_markdown_header() {\n+    // # We're using a markdown header in an inline comment. rustfmt should be able to wrap this comment when `wrap_comments = true`\n+}"}, {"sha": "c547ff35c691bc14155dd9e0b55cbebdf0b0f282", "filename": "tests/source/issue-5238/markdown_header_wrap_comments_true.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/272fb42f06479afb62a9503f181540101f67982a/tests%2Fsource%2Fissue-5238%2Fmarkdown_header_wrap_comments_true.rs", "raw_url": "https://github.com/rust-lang/rust/raw/272fb42f06479afb62a9503f181540101f67982a/tests%2Fsource%2Fissue-5238%2Fmarkdown_header_wrap_comments_true.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fissue-5238%2Fmarkdown_header_wrap_comments_true.rs?ref=272fb42f06479afb62a9503f181540101f67982a", "patch": "@@ -0,0 +1,11 @@\n+// rustfmt-wrap_comments: true\n+\n+/// no markdown header so rustfmt should wrap this comment when `format_code_in_doc_comments = true` and `wrap_comments = true`\n+fn not_documented_with_markdown_header() {\n+    // This is just a normal inline comment so rustfmt should wrap this comment when `wrap_comments = true`\n+}\n+\n+/// # We're using a markdown header here so rustfmt should refuse to wrap this comment in all circumstances\n+fn documented_with_markdown_header() {\n+    // # We're using a markdown header in an inline comment. rustfmt should be able to wrap this comment when `wrap_comments = true`\n+}"}, {"sha": "229c6e5753d2e994eafdab282ee0015b4b5da4c1", "filename": "tests/target/issue-5238/markdown_header_wrap_comments_false.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/272fb42f06479afb62a9503f181540101f67982a/tests%2Ftarget%2Fissue-5238%2Fmarkdown_header_wrap_comments_false.rs", "raw_url": "https://github.com/rust-lang/rust/raw/272fb42f06479afb62a9503f181540101f67982a/tests%2Ftarget%2Fissue-5238%2Fmarkdown_header_wrap_comments_false.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fissue-5238%2Fmarkdown_header_wrap_comments_false.rs?ref=272fb42f06479afb62a9503f181540101f67982a", "patch": "@@ -0,0 +1,11 @@\n+// rustfmt-wrap_comments: false\n+\n+/// no markdown header so rustfmt should wrap this comment when `format_code_in_doc_comments = true` and `wrap_comments = true`\n+fn not_documented_with_markdown_header() {\n+    // This is just a normal inline comment so rustfmt should wrap this comment when `wrap_comments = true`\n+}\n+\n+/// # We're using a markdown header here so rustfmt should refuse to wrap this comment in all circumstances\n+fn documented_with_markdown_header() {\n+    // # We're using a markdown header in an inline comment. rustfmt should be able to wrap this comment when `wrap_comments = true`\n+}"}, {"sha": "87dae58eccd73c97a71c36db1c1997bc979f24cd", "filename": "tests/target/issue-5238/markdown_header_wrap_comments_true.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/272fb42f06479afb62a9503f181540101f67982a/tests%2Ftarget%2Fissue-5238%2Fmarkdown_header_wrap_comments_true.rs", "raw_url": "https://github.com/rust-lang/rust/raw/272fb42f06479afb62a9503f181540101f67982a/tests%2Ftarget%2Fissue-5238%2Fmarkdown_header_wrap_comments_true.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fissue-5238%2Fmarkdown_header_wrap_comments_true.rs?ref=272fb42f06479afb62a9503f181540101f67982a", "patch": "@@ -0,0 +1,14 @@\n+// rustfmt-wrap_comments: true\n+\n+/// no markdown header so rustfmt should wrap this comment when\n+/// `format_code_in_doc_comments = true` and `wrap_comments = true`\n+fn not_documented_with_markdown_header() {\n+    // This is just a normal inline comment so rustfmt should wrap this comment\n+    // when `wrap_comments = true`\n+}\n+\n+/// # We're using a markdown header here so rustfmt should refuse to wrap this comment in all circumstances\n+fn documented_with_markdown_header() {\n+    // # We're using a markdown header in an inline comment. rustfmt should be\n+    // able to wrap this comment when `wrap_comments = true`\n+}"}]}