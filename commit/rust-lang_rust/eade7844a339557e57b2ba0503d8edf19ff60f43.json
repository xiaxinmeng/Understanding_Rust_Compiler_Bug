{"sha": "eade7844a339557e57b2ba0503d8edf19ff60f43", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVhZGU3ODQ0YTMzOTU1N2U1N2IyYmEwNTAzZDhlZGYxOWZmNjBmNDM=", "commit": {"author": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2011-12-27T02:59:50Z"}, "committer": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2012-01-06T15:47:14Z"}, "message": "libstd: switch map to use libcore's hash functions.", "tree": {"sha": "1971c4dc1da4a969cce8bc56f0faa48d4674bd10", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1971c4dc1da4a969cce8bc56f0faa48d4674bd10"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eade7844a339557e57b2ba0503d8edf19ff60f43", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eade7844a339557e57b2ba0503d8edf19ff60f43", "html_url": "https://github.com/rust-lang/rust/commit/eade7844a339557e57b2ba0503d8edf19ff60f43", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eade7844a339557e57b2ba0503d8edf19ff60f43/comments", "author": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7806180557d971b1292249f3cad92444c05cd77e", "url": "https://api.github.com/repos/rust-lang/rust/commits/7806180557d971b1292249f3cad92444c05cd77e", "html_url": "https://github.com/rust-lang/rust/commit/7806180557d971b1292249f3cad92444c05cd77e"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "53e59e210f8a84f5052fcf0e5266276cab6a1ba1", "filename": "src/libstd/map.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/eade7844a339557e57b2ba0503d8edf19ff60f43/src%2Flibstd%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eade7844a339557e57b2ba0503d8edf19ff60f43/src%2Flibstd%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fmap.rs?ref=eade7844a339557e57b2ba0503d8edf19ff60f43", "patch": "@@ -384,7 +384,7 @@ Function: new_int_hash\n Construct a hashmap for int keys\n */\n fn new_int_hash<V: copy>() -> hashmap<int, V> {\n-    fn hash_int(&&x: int) -> uint { ret x as uint; }\n+    fn hash_int(&&x: int) -> uint { int::hash(x) }\n     fn eq_int(&&a: int, &&b: int) -> bool { ret a == b; }\n     ret mk_hashmap(hash_int, eq_int);\n }\n@@ -395,7 +395,7 @@ Function: new_uint_hash\n Construct a hashmap for uint keys\n */\n fn new_uint_hash<V: copy>() -> hashmap<uint, V> {\n-    fn hash_uint(&&x: uint) -> uint { ret x; }\n+    fn hash_uint(&&x: uint) -> uint { uint::hash(x) }\n     fn eq_uint(&&a: uint, &&b: uint) -> bool { ret a == b; }\n     ret mk_hashmap(hash_uint, eq_uint);\n }"}]}