{"sha": "23ec00751e8da1b8f138745cfcf6d861c0987915", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIzZWMwMDc1MWU4ZGExYjhmMTM4NzQ1Y2ZjZjZkODYxYzA5ODc5MTU=", "commit": {"author": {"name": "Rein Henrichs", "email": "reinh@reinh.com", "date": "2015-05-28T05:35:46Z"}, "committer": {"name": "Rein Henrichs", "email": "reinh@reinh.com", "date": "2015-05-28T05:35:46Z"}, "message": "TRPL: fix typo, borow for borrow", "tree": {"sha": "3a713ccd7e39155af84ee7269993c683f5438ada", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3a713ccd7e39155af84ee7269993c683f5438ada"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/23ec00751e8da1b8f138745cfcf6d861c0987915", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/23ec00751e8da1b8f138745cfcf6d861c0987915", "html_url": "https://github.com/rust-lang/rust/commit/23ec00751e8da1b8f138745cfcf6d861c0987915", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/23ec00751e8da1b8f138745cfcf6d861c0987915/comments", "author": {"login": "reinh", "id": 52, "node_id": "MDQ6VXNlcjUy", "avatar_url": "https://avatars.githubusercontent.com/u/52?v=4", "gravatar_id": "", "url": "https://api.github.com/users/reinh", "html_url": "https://github.com/reinh", "followers_url": "https://api.github.com/users/reinh/followers", "following_url": "https://api.github.com/users/reinh/following{/other_user}", "gists_url": "https://api.github.com/users/reinh/gists{/gist_id}", "starred_url": "https://api.github.com/users/reinh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/reinh/subscriptions", "organizations_url": "https://api.github.com/users/reinh/orgs", "repos_url": "https://api.github.com/users/reinh/repos", "events_url": "https://api.github.com/users/reinh/events{/privacy}", "received_events_url": "https://api.github.com/users/reinh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "reinh", "id": 52, "node_id": "MDQ6VXNlcjUy", "avatar_url": "https://avatars.githubusercontent.com/u/52?v=4", "gravatar_id": "", "url": "https://api.github.com/users/reinh", "html_url": "https://github.com/reinh", "followers_url": "https://api.github.com/users/reinh/followers", "following_url": "https://api.github.com/users/reinh/following{/other_user}", "gists_url": "https://api.github.com/users/reinh/gists{/gist_id}", "starred_url": "https://api.github.com/users/reinh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/reinh/subscriptions", "organizations_url": "https://api.github.com/users/reinh/orgs", "repos_url": "https://api.github.com/users/reinh/repos", "events_url": "https://api.github.com/users/reinh/events{/privacy}", "received_events_url": "https://api.github.com/users/reinh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6a3d55abf01016d4de27ed2160c0fcc1a7f12db9", "url": "https://api.github.com/repos/rust-lang/rust/commits/6a3d55abf01016d4de27ed2160c0fcc1a7f12db9", "html_url": "https://github.com/rust-lang/rust/commit/6a3d55abf01016d4de27ed2160c0fcc1a7f12db9"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "b69db228f272407d9fd69494fbbc6b9270e38226", "filename": "src/doc/trpl/references-and-borrowing.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/23ec00751e8da1b8f138745cfcf6d861c0987915/src%2Fdoc%2Ftrpl%2Freferences-and-borrowing.md", "raw_url": "https://github.com/rust-lang/rust/raw/23ec00751e8da1b8f138745cfcf6d861c0987915/src%2Fdoc%2Ftrpl%2Freferences-and-borrowing.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftrpl%2Freferences-and-borrowing.md?ref=23ec00751e8da1b8f138745cfcf6d861c0987915", "patch": "@@ -206,7 +206,7 @@ fn main() {\n ^\n ```\n \n-In other words, the mutable borow is held through the rest of our example. What\n+In other words, the mutable borrow is held through the rest of our example. What\n we want is for the mutable borrow to end _before_ we try to call `println!` and\n make an immutable borrow. In Rust, borrowing is tied to the scope that the\n borrow is valid for. And our scopes look like this:"}]}