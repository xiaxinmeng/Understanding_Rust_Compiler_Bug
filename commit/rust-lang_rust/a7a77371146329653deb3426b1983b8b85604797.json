{"sha": "a7a77371146329653deb3426b1983b8b85604797", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE3YTc3MzcxMTQ2MzI5NjUzZGViMzQyNmIxOTgzYjhiODU2MDQ3OTc=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-04-21T21:06:11Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-04-21T21:06:11Z"}, "message": "Rollup merge of #84013 - CDirkx:fmt, r=m-ou-se\n\nReplace all `fmt.pad` with `debug_struct`\n\nThis replaces any occurrence of:\n- `f.pad(\"X\")` with `f.debug_struct(\"X\").finish()`\n- `f.pad(\"X { .. }\")` with `f.debug_struct(\"X\").finish_non_exhaustive()`\n\nThis is in line with existing formatting code such as\nhttps://github.com/rust-lang/rust/blob/125505306744a0a5bb01d62337260a95d9ff8d57/library/std/src/sync/mpsc/mod.rs#L1470-L1475", "tree": {"sha": "9ca0d7805e098ed20e5850944527ee56ce903e1e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9ca0d7805e098ed20e5850944527ee56ce903e1e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a7a77371146329653deb3426b1983b8b85604797", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJggJPDCRBK7hj4Ov3rIwAAmG0IAB1OiNTxMrsiadc26Hxjl4Lm\n7k5Kp349LbaGWm1+SPjqTCliZ9ZFGjJzebKsR4wo3GurSfkbiwn4ZRE1E6Oc5dcI\nVwZkorLHpyYvA2oz6gghNJ837VLlulvuQ8HUbIDERcLxIlqaOZn57V+5xV1CjRGj\n85iB9G0C8glC8aic4mhNDoHkFO5J2Cj8sRODr7mjNqXE0WX2khS4iu6LGlzbcBxu\nwkcO9u5qCGiRp3jF5uChaQkGyj60IHtItQtnuIe1J2ffRzsPXm0G9uO6N99QPhqE\nu4WGZRGZvl4WqRQQBqIuY8tdqLC0evIE04C2IrGwOSrPyaBF3qy95IdagxAujgA=\n=iLTz\n-----END PGP SIGNATURE-----\n", "payload": "tree 9ca0d7805e098ed20e5850944527ee56ce903e1e\nparent b849326744a8eec939e592f0ab13bff85cc865d3\nparent fccc75cf8299158125f5785855d7235a178434d7\nauthor Mara Bos <m-ou.se@m-ou.se> 1619039171 +0200\ncommitter GitHub <noreply@github.com> 1619039171 +0200\n\nRollup merge of #84013 - CDirkx:fmt, r=m-ou-se\n\nReplace all `fmt.pad` with `debug_struct`\n\nThis replaces any occurrence of:\n- `f.pad(\"X\")` with `f.debug_struct(\"X\").finish()`\n- `f.pad(\"X { .. }\")` with `f.debug_struct(\"X\").finish_non_exhaustive()`\n\nThis is in line with existing formatting code such as\nhttps://github.com/rust-lang/rust/blob/125505306744a0a5bb01d62337260a95d9ff8d57/library/std/src/sync/mpsc/mod.rs#L1470-L1475\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a7a77371146329653deb3426b1983b8b85604797", "html_url": "https://github.com/rust-lang/rust/commit/a7a77371146329653deb3426b1983b8b85604797", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a7a77371146329653deb3426b1983b8b85604797/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b849326744a8eec939e592f0ab13bff85cc865d3", "url": "https://api.github.com/repos/rust-lang/rust/commits/b849326744a8eec939e592f0ab13bff85cc865d3", "html_url": "https://github.com/rust-lang/rust/commit/b849326744a8eec939e592f0ab13bff85cc865d3"}, {"sha": "fccc75cf8299158125f5785855d7235a178434d7", "url": "https://api.github.com/repos/rust-lang/rust/commits/fccc75cf8299158125f5785855d7235a178434d7", "html_url": "https://github.com/rust-lang/rust/commit/fccc75cf8299158125f5785855d7235a178434d7"}], "stats": {"total": 88, "additions": 44, "deletions": 44}, "files": [{"sha": "b4741c35c583fa3157e44ef5175c00397329cf39", "filename": "library/alloc/src/tests.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a7a77371146329653deb3426b1983b8b85604797/library%2Falloc%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7a77371146329653deb3426b1983b8b85604797/library%2Falloc%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Ftests.rs?ref=a7a77371146329653deb3426b1983b8b85604797", "patch": "@@ -49,17 +49,17 @@ fn test_show() {\n     let b = Box::new(Test) as Box<dyn Any>;\n     let a_str = format!(\"{:?}\", a);\n     let b_str = format!(\"{:?}\", b);\n-    assert_eq!(a_str, \"Any\");\n-    assert_eq!(b_str, \"Any\");\n+    assert_eq!(a_str, \"Any { .. }\");\n+    assert_eq!(b_str, \"Any { .. }\");\n \n     static EIGHT: usize = 8;\n     static TEST: Test = Test;\n     let a = &EIGHT as &dyn Any;\n     let b = &TEST as &dyn Any;\n     let s = format!(\"{:?}\", a);\n-    assert_eq!(s, \"Any\");\n+    assert_eq!(s, \"Any { .. }\");\n     let s = format!(\"{:?}\", b);\n-    assert_eq!(s, \"Any\");\n+    assert_eq!(s, \"Any { .. }\");\n }\n \n #[test]"}, {"sha": "5e1725cfc7a6324b178740ac72a47dd9c6adca60", "filename": "library/core/src/any.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a7a77371146329653deb3426b1983b8b85604797/library%2Fcore%2Fsrc%2Fany.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7a77371146329653deb3426b1983b8b85604797/library%2Fcore%2Fsrc%2Fany.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fany.rs?ref=a7a77371146329653deb3426b1983b8b85604797", "patch": "@@ -141,7 +141,7 @@ impl<T: 'static + ?Sized> Any for T {\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl fmt::Debug for dyn Any {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n-        f.pad(\"Any\")\n+        f.debug_struct(\"Any\").finish_non_exhaustive()\n     }\n }\n \n@@ -151,14 +151,14 @@ impl fmt::Debug for dyn Any {\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl fmt::Debug for dyn Any + Send {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n-        f.pad(\"Any\")\n+        f.debug_struct(\"Any\").finish_non_exhaustive()\n     }\n }\n \n #[stable(feature = \"any_send_sync_methods\", since = \"1.28.0\")]\n impl fmt::Debug for dyn Any + Send + Sync {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n-        f.pad(\"Any\")\n+        f.debug_struct(\"Any\").finish_non_exhaustive()\n     }\n }\n "}, {"sha": "4780d8dc7883ff0b17ddf2bb32faf32c3aaf230b", "filename": "library/core/src/ascii.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a7a77371146329653deb3426b1983b8b85604797/library%2Fcore%2Fsrc%2Fascii.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7a77371146329653deb3426b1983b8b85604797/library%2Fcore%2Fsrc%2Fascii.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fascii.rs?ref=a7a77371146329653deb3426b1983b8b85604797", "patch": "@@ -145,6 +145,6 @@ impl fmt::Display for EscapeDefault {\n #[stable(feature = \"std_debug\", since = \"1.16.0\")]\n impl fmt::Debug for EscapeDefault {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n-        f.pad(\"EscapeDefault { .. }\")\n+        f.debug_struct(\"EscapeDefault\").finish_non_exhaustive()\n     }\n }"}, {"sha": "b208ddd4b272fbd0f1c5bbda2c86a9ce310bbf4a", "filename": "library/core/src/ffi.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a7a77371146329653deb3426b1983b8b85604797/library%2Fcore%2Fsrc%2Fffi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7a77371146329653deb3426b1983b8b85604797/library%2Fcore%2Fsrc%2Fffi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fffi.rs?ref=a7a77371146329653deb3426b1983b8b85604797", "patch": "@@ -53,7 +53,7 @@ pub enum c_void {\n #[stable(feature = \"std_debug\", since = \"1.16.0\")]\n impl fmt::Debug for c_void {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n-        f.pad(\"c_void\")\n+        f.debug_struct(\"c_void\").finish()\n     }\n }\n "}, {"sha": "87042d95fbef06ac0720bd7ad48985e682e71b2a", "filename": "library/core/src/fmt/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a7a77371146329653deb3426b1983b8b85604797/library%2Fcore%2Fsrc%2Ffmt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7a77371146329653deb3426b1983b8b85604797/library%2Fcore%2Fsrc%2Ffmt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Ffmt%2Fmod.rs?ref=a7a77371146329653deb3426b1983b8b85604797", "patch": "@@ -2220,7 +2220,7 @@ impl Debug for () {\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<T: ?Sized> Debug for PhantomData<T> {\n     fn fmt(&self, f: &mut Formatter<'_>) -> Result {\n-        f.pad(\"PhantomData\")\n+        f.debug_struct(\"PhantomData\").finish()\n     }\n }\n \n@@ -2270,7 +2270,7 @@ impl<T: ?Sized + Debug> Debug for RefMut<'_, T> {\n #[stable(feature = \"core_impl_debug\", since = \"1.9.0\")]\n impl<T: ?Sized> Debug for UnsafeCell<T> {\n     fn fmt(&self, f: &mut Formatter<'_>) -> Result {\n-        f.pad(\"UnsafeCell\")\n+        f.debug_struct(\"UnsafeCell\").finish_non_exhaustive()\n     }\n }\n "}, {"sha": "7dbd68b73f05a08044de9b54c783807fc572fd3f", "filename": "library/core/src/hash/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a7a77371146329653deb3426b1983b8b85604797/library%2Fcore%2Fsrc%2Fhash%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7a77371146329653deb3426b1983b8b85604797/library%2Fcore%2Fsrc%2Fhash%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fhash%2Fmod.rs?ref=a7a77371146329653deb3426b1983b8b85604797", "patch": "@@ -507,7 +507,7 @@ pub struct BuildHasherDefault<H>(marker::PhantomData<H>);\n #[stable(since = \"1.9.0\", feature = \"core_impl_debug\")]\n impl<H> fmt::Debug for BuildHasherDefault<H> {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n-        f.pad(\"BuildHasherDefault\")\n+        f.debug_struct(\"BuildHasherDefault\").finish()\n     }\n }\n "}, {"sha": "919c564f2872a8d95020e1e27f6de07052f7935d", "filename": "library/core/src/iter/sources/empty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a7a77371146329653deb3426b1983b8b85604797/library%2Fcore%2Fsrc%2Fiter%2Fsources%2Fempty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7a77371146329653deb3426b1983b8b85604797/library%2Fcore%2Fsrc%2Fiter%2Fsources%2Fempty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Fsources%2Fempty.rs?ref=a7a77371146329653deb3426b1983b8b85604797", "patch": "@@ -36,7 +36,7 @@ unsafe impl<T> Sync for Empty<T> {}\n #[stable(feature = \"core_impl_debug\", since = \"1.9.0\")]\n impl<T> fmt::Debug for Empty<T> {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n-        f.pad(\"Empty\")\n+        f.debug_struct(\"Empty\").finish()\n     }\n }\n "}, {"sha": "906dcb1e8bceefd84ce2bddfdd0a5df4ada3be08", "filename": "library/core/src/slice/ascii.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a7a77371146329653deb3426b1983b8b85604797/library%2Fcore%2Fsrc%2Fslice%2Fascii.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7a77371146329653deb3426b1983b8b85604797/library%2Fcore%2Fsrc%2Fslice%2Fascii.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fslice%2Fascii.rs?ref=a7a77371146329653deb3426b1983b8b85604797", "patch": "@@ -146,7 +146,7 @@ impl<'a> fmt::Display for EscapeAscii<'a> {\n #[unstable(feature = \"inherent_ascii_escape\", issue = \"77174\")]\n impl<'a> fmt::Debug for EscapeAscii<'a> {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n-        f.pad(\"EscapeAscii { .. }\")\n+        f.debug_struct(\"EscapeAscii\").finish_non_exhaustive()\n     }\n }\n "}, {"sha": "7ebff180f9d733d2ac9378725ae0920e815345e3", "filename": "library/core/src/str/iter.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a7a77371146329653deb3426b1983b8b85604797/library%2Fcore%2Fsrc%2Fstr%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7a77371146329653deb3426b1983b8b85604797/library%2Fcore%2Fsrc%2Fstr%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fstr%2Fiter.rs?ref=a7a77371146329653deb3426b1983b8b85604797", "patch": "@@ -1359,7 +1359,7 @@ pub struct EncodeUtf16<'a> {\n #[stable(feature = \"collection_debug\", since = \"1.17.0\")]\n impl fmt::Debug for EncodeUtf16<'_> {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n-        f.pad(\"EncodeUtf16 { .. }\")\n+        f.debug_struct(\"EncodeUtf16\").finish_non_exhaustive()\n     }\n }\n "}, {"sha": "bdf559847cc8511761d675be1de794e0e947ebe0", "filename": "library/std/src/collections/hash/map.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a7a77371146329653deb3426b1983b8b85604797/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7a77371146329653deb3426b1983b8b85604797/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fmap.rs?ref=a7a77371146329653deb3426b1983b8b85604797", "patch": "@@ -2257,7 +2257,7 @@ where\n     F: FnMut(&K, &mut V) -> bool,\n {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n-        f.pad(\"DrainFilter { .. }\")\n+        f.debug_struct(\"DrainFilter\").finish_non_exhaustive()\n     }\n }\n \n@@ -2957,7 +2957,7 @@ impl Default for RandomState {\n #[stable(feature = \"std_debug\", since = \"1.16.0\")]\n impl fmt::Debug for RandomState {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n-        f.pad(\"RandomState { .. }\")\n+        f.debug_struct(\"RandomState\").finish_non_exhaustive()\n     }\n }\n "}, {"sha": "5220c8ad70977657a13778eb4a16c174af444417", "filename": "library/std/src/collections/hash/set.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a7a77371146329653deb3426b1983b8b85604797/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fset.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7a77371146329653deb3426b1983b8b85604797/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fset.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fset.rs?ref=a7a77371146329653deb3426b1983b8b85604797", "patch": "@@ -1533,7 +1533,7 @@ where\n     F: FnMut(&K) -> bool,\n {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n-        f.pad(\"DrainFilter { .. }\")\n+        f.debug_struct(\"DrainFilter\").finish_non_exhaustive()\n     }\n }\n "}, {"sha": "8f8d4e3a89832aa23651132869832e349f7241ac", "filename": "library/std/src/env.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a7a77371146329653deb3426b1983b8b85604797/library%2Fstd%2Fsrc%2Fenv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7a77371146329653deb3426b1983b8b85604797/library%2Fstd%2Fsrc%2Fenv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fenv.rs?ref=a7a77371146329653deb3426b1983b8b85604797", "patch": "@@ -154,7 +154,7 @@ impl Iterator for Vars {\n #[stable(feature = \"std_debug\", since = \"1.16.0\")]\n impl fmt::Debug for Vars {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n-        f.pad(\"Vars { .. }\")\n+        f.debug_struct(\"Vars\").finish_non_exhaustive()\n     }\n }\n \n@@ -172,7 +172,7 @@ impl Iterator for VarsOs {\n #[stable(feature = \"std_debug\", since = \"1.16.0\")]\n impl fmt::Debug for VarsOs {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n-        f.pad(\"VarsOs { .. }\")\n+        f.debug_struct(\"VarOs\").finish_non_exhaustive()\n     }\n }\n \n@@ -419,7 +419,7 @@ impl<'a> Iterator for SplitPaths<'a> {\n #[stable(feature = \"std_debug\", since = \"1.16.0\")]\n impl fmt::Debug for SplitPaths<'_> {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n-        f.pad(\"SplitPaths { .. }\")\n+        f.debug_struct(\"SplitPaths\").finish_non_exhaustive()\n     }\n }\n "}, {"sha": "c2e0b24ba8327f200a55a0c45a7f009cc78ec53b", "filename": "library/std/src/io/stdio.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/a7a77371146329653deb3426b1983b8b85604797/library%2Fstd%2Fsrc%2Fio%2Fstdio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7a77371146329653deb3426b1983b8b85604797/library%2Fstd%2Fsrc%2Fio%2Fstdio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fio%2Fstdio.rs?ref=a7a77371146329653deb3426b1983b8b85604797", "patch": "@@ -373,7 +373,7 @@ impl Stdin {\n #[stable(feature = \"std_debug\", since = \"1.16.0\")]\n impl fmt::Debug for Stdin {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n-        f.pad(\"Stdin { .. }\")\n+        f.debug_struct(\"Stdin\").finish_non_exhaustive()\n     }\n }\n \n@@ -467,7 +467,7 @@ impl BufRead for StdinLock<'_> {\n #[stable(feature = \"std_debug\", since = \"1.16.0\")]\n impl fmt::Debug for StdinLock<'_> {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n-        f.pad(\"StdinLock { .. }\")\n+        f.debug_struct(\"StdinLock\").finish_non_exhaustive()\n     }\n }\n \n@@ -607,7 +607,7 @@ impl Stdout {\n #[stable(feature = \"std_debug\", since = \"1.16.0\")]\n impl fmt::Debug for Stdout {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n-        f.pad(\"Stdout { .. }\")\n+        f.debug_struct(\"Stdout\").finish_non_exhaustive()\n     }\n }\n \n@@ -689,7 +689,7 @@ impl Write for StdoutLock<'_> {\n #[stable(feature = \"std_debug\", since = \"1.16.0\")]\n impl fmt::Debug for StdoutLock<'_> {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n-        f.pad(\"StdoutLock { .. }\")\n+        f.debug_struct(\"StdoutLock\").finish_non_exhaustive()\n     }\n }\n \n@@ -804,7 +804,7 @@ impl Stderr {\n #[stable(feature = \"std_debug\", since = \"1.16.0\")]\n impl fmt::Debug for Stderr {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n-        f.pad(\"Stderr { .. }\")\n+        f.debug_struct(\"Stderr\").finish_non_exhaustive()\n     }\n }\n \n@@ -886,7 +886,7 @@ impl Write for StderrLock<'_> {\n #[stable(feature = \"std_debug\", since = \"1.16.0\")]\n impl fmt::Debug for StderrLock<'_> {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n-        f.pad(\"StderrLock { .. }\")\n+        f.debug_struct(\"StderrLock\").finish_non_exhaustive()\n     }\n }\n "}, {"sha": "73f2f3eb3f5dc9ec50265a782b9a93836c0a2072", "filename": "library/std/src/io/util.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a7a77371146329653deb3426b1983b8b85604797/library%2Fstd%2Fsrc%2Fio%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7a77371146329653deb3426b1983b8b85604797/library%2Fstd%2Fsrc%2Fio%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fio%2Futil.rs?ref=a7a77371146329653deb3426b1983b8b85604797", "patch": "@@ -78,7 +78,7 @@ impl Seek for Empty {\n #[stable(feature = \"std_debug\", since = \"1.16.0\")]\n impl fmt::Debug for Empty {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n-        f.pad(\"Empty { .. }\")\n+        f.debug_struct(\"Empty\").finish_non_exhaustive()\n     }\n }\n \n@@ -150,7 +150,7 @@ impl Read for Repeat {\n #[stable(feature = \"std_debug\", since = \"1.16.0\")]\n impl fmt::Debug for Repeat {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n-        f.pad(\"Repeat { .. }\")\n+        f.debug_struct(\"Repeat\").finish_non_exhaustive()\n     }\n }\n \n@@ -236,6 +236,6 @@ impl Write for &Sink {\n #[stable(feature = \"std_debug\", since = \"1.16.0\")]\n impl fmt::Debug for Sink {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n-        f.pad(\"Sink { .. }\")\n+        f.debug_struct(\"Sink\").finish_non_exhaustive()\n     }\n }"}, {"sha": "931b3b600a302be5beba1527c7b6d979a4f036cb", "filename": "library/std/src/process.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a7a77371146329653deb3426b1983b8b85604797/library%2Fstd%2Fsrc%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7a77371146329653deb3426b1983b8b85604797/library%2Fstd%2Fsrc%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fprocess.rs?ref=a7a77371146329653deb3426b1983b8b85604797", "patch": "@@ -312,7 +312,7 @@ impl FromInner<AnonPipe> for ChildStdin {\n #[stable(feature = \"std_debug\", since = \"1.16.0\")]\n impl fmt::Debug for ChildStdin {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n-        f.pad(\"ChildStdin { .. }\")\n+        f.debug_struct(\"ChildStdin\").finish_non_exhaustive()\n     }\n }\n \n@@ -373,7 +373,7 @@ impl FromInner<AnonPipe> for ChildStdout {\n #[stable(feature = \"std_debug\", since = \"1.16.0\")]\n impl fmt::Debug for ChildStdout {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n-        f.pad(\"ChildStdout { .. }\")\n+        f.debug_struct(\"ChildStdout\").finish_non_exhaustive()\n     }\n }\n \n@@ -434,7 +434,7 @@ impl FromInner<AnonPipe> for ChildStderr {\n #[stable(feature = \"std_debug\", since = \"1.16.0\")]\n impl fmt::Debug for ChildStderr {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n-        f.pad(\"ChildStderr { .. }\")\n+        f.debug_struct(\"ChildStderr\").finish_non_exhaustive()\n     }\n }\n \n@@ -1257,7 +1257,7 @@ impl FromInner<imp::Stdio> for Stdio {\n #[stable(feature = \"std_debug\", since = \"1.16.0\")]\n impl fmt::Debug for Stdio {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n-        f.pad(\"Stdio { .. }\")\n+        f.debug_struct(\"Stdio\").finish_non_exhaustive()\n     }\n }\n "}, {"sha": "a17b82f82e8c2eb8e9c7529c7f152169727b5721", "filename": "library/std/src/sync/barrier.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a7a77371146329653deb3426b1983b8b85604797/library%2Fstd%2Fsrc%2Fsync%2Fbarrier.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7a77371146329653deb3426b1983b8b85604797/library%2Fstd%2Fsrc%2Fsync%2Fbarrier.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsync%2Fbarrier.rs?ref=a7a77371146329653deb3426b1983b8b85604797", "patch": "@@ -60,7 +60,7 @@ pub struct BarrierWaitResult(bool);\n #[stable(feature = \"std_debug\", since = \"1.16.0\")]\n impl fmt::Debug for Barrier {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n-        f.pad(\"Barrier { .. }\")\n+        f.debug_struct(\"Barrier\").finish_non_exhaustive()\n     }\n }\n "}, {"sha": "60be63c9543fa802877ad0e15e81f661b90e5588", "filename": "library/std/src/sync/condvar.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a7a77371146329653deb3426b1983b8b85604797/library%2Fstd%2Fsrc%2Fsync%2Fcondvar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7a77371146329653deb3426b1983b8b85604797/library%2Fstd%2Fsrc%2Fsync%2Fcondvar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsync%2Fcondvar.rs?ref=a7a77371146329653deb3426b1983b8b85604797", "patch": "@@ -548,7 +548,7 @@ impl Condvar {\n #[stable(feature = \"std_debug\", since = \"1.16.0\")]\n impl fmt::Debug for Condvar {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n-        f.pad(\"Condvar { .. }\")\n+        f.debug_struct(\"Condvar\").finish_non_exhaustive()\n     }\n }\n "}, {"sha": "ea1d598d26461b4b10f1f3058f150b2e506c2bd9", "filename": "library/std/src/sync/mpsc/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a7a77371146329653deb3426b1983b8b85604797/library%2Fstd%2Fsrc%2Fsync%2Fmpsc%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7a77371146329653deb3426b1983b8b85604797/library%2Fstd%2Fsrc%2Fsync%2Fmpsc%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsync%2Fmpsc%2Fmod.rs?ref=a7a77371146329653deb3426b1983b8b85604797", "patch": "@@ -1477,7 +1477,7 @@ impl<T> fmt::Debug for Receiver<T> {\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<T> fmt::Debug for SendError<T> {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n-        \"SendError(..)\".fmt(f)\n+        f.debug_struct(\"SendError\").finish_non_exhaustive()\n     }\n }\n "}, {"sha": "6da6c18e47799d26ce75b57f630d46c89f5e4d9b", "filename": "library/std/src/sync/once.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a7a77371146329653deb3426b1983b8b85604797/library%2Fstd%2Fsrc%2Fsync%2Fonce.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7a77371146329653deb3426b1983b8b85604797/library%2Fstd%2Fsrc%2Fsync%2Fonce.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsync%2Fonce.rs?ref=a7a77371146329653deb3426b1983b8b85604797", "patch": "@@ -481,7 +481,7 @@ fn wait(state_and_queue: &AtomicUsize, mut current_state: usize) {\n #[stable(feature = \"std_debug\", since = \"1.16.0\")]\n impl fmt::Debug for Once {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n-        f.pad(\"Once { .. }\")\n+        f.debug_struct(\"Once\").finish_non_exhaustive()\n     }\n }\n "}, {"sha": "1f71187f1b466bb32fb75aa4a7146768d389fa06", "filename": "library/std/src/sys_common/poison.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a7a77371146329653deb3426b1983b8b85604797/library%2Fstd%2Fsrc%2Fsys_common%2Fpoison.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7a77371146329653deb3426b1983b8b85604797/library%2Fstd%2Fsrc%2Fsys_common%2Fpoison.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys_common%2Fpoison.rs?ref=a7a77371146329653deb3426b1983b8b85604797", "patch": "@@ -127,7 +127,7 @@ pub type TryLockResult<Guard> = Result<Guard, TryLockError<Guard>>;\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<T> fmt::Debug for PoisonError<T> {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n-        \"PoisonError { inner: .. }\".fmt(f)\n+        f.debug_struct(\"PoisonError\").finish_non_exhaustive()\n     }\n }\n "}, {"sha": "abd5b7784834c77154c3667a91d93137a4c69c23", "filename": "library/std/src/thread/local.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a7a77371146329653deb3426b1983b8b85604797/library%2Fstd%2Fsrc%2Fthread%2Flocal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7a77371146329653deb3426b1983b8b85604797/library%2Fstd%2Fsrc%2Fthread%2Flocal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fthread%2Flocal.rs?ref=a7a77371146329653deb3426b1983b8b85604797", "patch": "@@ -100,7 +100,7 @@ pub struct LocalKey<T: 'static> {\n #[stable(feature = \"std_debug\", since = \"1.16.0\")]\n impl<T: 'static> fmt::Debug for LocalKey<T> {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n-        f.pad(\"LocalKey { .. }\")\n+        f.debug_struct(\"LocalKey\").finish_non_exhaustive()\n     }\n }\n \n@@ -472,7 +472,7 @@ pub mod statik {\n \n     impl<T> fmt::Debug for Key<T> {\n         fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n-            f.pad(\"Key { .. }\")\n+            f.debug_struct(\"Key\").finish_non_exhaustive()\n         }\n     }\n \n@@ -537,7 +537,7 @@ pub mod fast {\n \n     impl<T> fmt::Debug for Key<T> {\n         fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n-            f.pad(\"Key { .. }\")\n+            f.debug_struct(\"Key\").finish_non_exhaustive()\n         }\n     }\n \n@@ -651,7 +651,7 @@ pub mod os {\n \n     impl<T> fmt::Debug for Key<T> {\n         fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n-            f.pad(\"Key { .. }\")\n+            f.debug_struct(\"Key\").finish_non_exhaustive()\n         }\n     }\n "}, {"sha": "30d8c2a1b6fa01eff5308567e268043647dd471c", "filename": "library/std/src/thread/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a7a77371146329653deb3426b1983b8b85604797/library%2Fstd%2Fsrc%2Fthread%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7a77371146329653deb3426b1983b8b85604797/library%2Fstd%2Fsrc%2Fthread%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fthread%2Fmod.rs?ref=a7a77371146329653deb3426b1983b8b85604797", "patch": "@@ -1413,7 +1413,7 @@ impl<T> IntoInner<imp::Thread> for JoinHandle<T> {\n #[stable(feature = \"std_debug\", since = \"1.16.0\")]\n impl<T> fmt::Debug for JoinHandle<T> {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n-        f.pad(\"JoinHandle { .. }\")\n+        f.debug_struct(\"JoinHandle\").finish_non_exhaustive()\n     }\n }\n "}]}