{"sha": "81bf190f7aca4cadec5394c397bd7c084b53b9f5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgxYmYxOTBmN2FjYTRjYWRlYzUzOTRjMzk3YmQ3YzA4NGI1M2I5ZjU=", "commit": {"author": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2018-10-04T14:25:53Z"}, "committer": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2018-10-04T14:25:53Z"}, "message": "Merge #94\n\n94: Extend comments by single word first r=matklad a=kjeremy\n\nFixes #88\n\nCo-authored-by: Jeremy A. Kolb <jkolb@ara.com>", "tree": {"sha": "f93912426fddae1f71c56f15568cccfd293db325", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f93912426fddae1f71c56f15568cccfd293db325"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/81bf190f7aca4cadec5394c397bd7c084b53b9f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/81bf190f7aca4cadec5394c397bd7c084b53b9f5", "html_url": "https://github.com/rust-lang/rust/commit/81bf190f7aca4cadec5394c397bd7c084b53b9f5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/81bf190f7aca4cadec5394c397bd7c084b53b9f5/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "parents": [{"sha": "7a025ad20169253d70bfae3773225404ec7aca46", "url": "https://api.github.com/repos/rust-lang/rust/commits/7a025ad20169253d70bfae3773225404ec7aca46", "html_url": "https://github.com/rust-lang/rust/commit/7a025ad20169253d70bfae3773225404ec7aca46"}, {"sha": "a30039ba625b857ee91e63d5af51e3b8cb824615", "url": "https://api.github.com/repos/rust-lang/rust/commits/a30039ba625b857ee91e63d5af51e3b8cb824615", "html_url": "https://github.com/rust-lang/rust/commit/a30039ba625b857ee91e63d5af51e3b8cb824615"}], "stats": {"total": 36, "additions": 32, "deletions": 4}, "files": [{"sha": "6977900e6889ccab2bdf231ee7461c5d71fbffa6", "filename": "crates/ra_editor/src/extend_selection.rs", "status": "modified", "additions": 32, "deletions": 4, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/81bf190f7aca4cadec5394c397bd7c084b53b9f5/crates%2Fra_editor%2Fsrc%2Fextend_selection.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81bf190f7aca4cadec5394c397bd7c084b53b9f5/crates%2Fra_editor%2Fsrc%2Fextend_selection.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_editor%2Fsrc%2Fextend_selection.rs?ref=81bf190f7aca4cadec5394c397bd7c084b53b9f5", "patch": "@@ -16,12 +16,18 @@ pub(crate) fn extend(root: SyntaxNodeRef, range: TextRange) -> Option<TextRange>\n         if leaves.clone().all(|it| it.kind() == WHITESPACE) {\n             return Some(extend_ws(root, leaves.next()?, offset));\n         }\n-        let leaf = match leaves {\n+        let leaf_range = match leaves {\n             LeafAtOffset::None => return None,\n-            LeafAtOffset::Single(l) => l,\n-            LeafAtOffset::Between(l, r) => pick_best(l, r),\n+            LeafAtOffset::Single(l) => {\n+                if l.kind() == COMMENT {\n+                    extend_single_word_in_comment(l, offset).unwrap_or_else(||l.range())\n+                } else {\n+                    l.range()\n+                }\n+            },\n+            LeafAtOffset::Between(l, r) => pick_best(l, r).range(),\n         };\n-        return Some(leaf.range());\n+        return Some(leaf_range);\n     };\n     let node = find_covering_node(root, range);\n     if node.kind() == COMMENT && range == node.range() {\n@@ -36,6 +42,20 @@ pub(crate) fn extend(root: SyntaxNodeRef, range: TextRange) -> Option<TextRange>\n     }\n }\n \n+fn extend_single_word_in_comment(leaf: SyntaxNodeRef, offset: TextUnit) -> Option<TextRange> {\n+    let text : &str = leaf.leaf_text()?;\n+    let cursor_position: u32 = (offset - leaf.range().start()).into();\n+\n+    let (before, after) = text.split_at(cursor_position as usize);\n+    let start_idx = before.rfind(char::is_whitespace)? as u32;\n+    let end_idx = after.find(char::is_whitespace)? as u32;\n+\n+    let from : TextUnit = (start_idx + 1).into();\n+    let to : TextUnit = (cursor_position + end_idx).into();\n+\n+    Some(TextRange::from_to(from, to))\n+}\n+\n fn extend_ws(root: SyntaxNodeRef, ws: SyntaxNodeRef, offset: TextUnit) -> TextRange {\n     let ws_text = ws.leaf_text().unwrap();\n     let suffix = TextRange::from_to(offset, ws.range().end()) - ws.range().start();\n@@ -176,4 +196,12 @@ fn main() { foo+<|>bar;}\n             &[\"'a\", \"<'a>\"]\n         );\n     }\n+\n+    #[test]\n+    fn test_extend_selection_select_first_word() {\n+        do_check(\n+            r#\"// foo bar b<|>az quxx\"#,\n+            &[\"baz\", \"// foo bar baz quxx\"]\n+        );\n+    }\n }"}]}