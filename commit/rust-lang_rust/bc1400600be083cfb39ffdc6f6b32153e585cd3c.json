{"sha": "bc1400600be083cfb39ffdc6f6b32153e585cd3c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJjMTQwMDYwMGJlMDgzY2ZiMzlmZmRjNmY2YjMyMTUzZTU4NWNkM2M=", "commit": {"author": {"name": "Jonathan Turner", "email": "jturner@mozilla.com", "date": "2016-06-24T23:10:15Z"}, "committer": {"name": "Jonathan Turner", "email": "jturner@mozilla.com", "date": "2016-06-24T23:10:15Z"}, "message": "reexport errors from syntax. fix failing cfail test", "tree": {"sha": "27e265d6d0071a878d74d63e94938213c0c984b7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/27e265d6d0071a878d74d63e94938213c0c984b7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bc1400600be083cfb39ffdc6f6b32153e585cd3c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bc1400600be083cfb39ffdc6f6b32153e585cd3c", "html_url": "https://github.com/rust-lang/rust/commit/bc1400600be083cfb39ffdc6f6b32153e585cd3c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bc1400600be083cfb39ffdc6f6b32153e585cd3c/comments", "author": null, "committer": null, "parents": [{"sha": "9f2a50785b2b01f58c08d3c23add09e2596dfd5a", "url": "https://api.github.com/repos/rust-lang/rust/commits/9f2a50785b2b01f58c08d3c23add09e2596dfd5a", "html_url": "https://github.com/rust-lang/rust/commit/9f2a50785b2b01f58c08d3c23add09e2596dfd5a"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "abf2b39d5c6deecd2f880fceae45ce82da2995cb", "filename": "src/libsyntax/diagnostics/plugin.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bc1400600be083cfb39ffdc6f6b32153e585cd3c/src%2Flibsyntax%2Fdiagnostics%2Fplugin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc1400600be083cfb39ffdc6f6b32153e585cd3c/src%2Flibsyntax%2Fdiagnostics%2Fplugin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fdiagnostics%2Fplugin.rs?ref=bc1400600be083cfb39ffdc6f6b32153e585cd3c", "patch": "@@ -23,6 +23,8 @@ use util::small_vector::SmallVector;\n \n use diagnostics::metadata::output_metadata;\n \n+pub use errors::*;\n+\n // Maximum width of any line in an extended error description (inclusive).\n const MAX_DESCRIPTION_WIDTH: usize = 80;\n "}, {"sha": "ae61801c65bb8229c0b9f0d1affa992711630e88", "filename": "src/libsyntax/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/bc1400600be083cfb39ffdc6f6b32153e585cd3c/src%2Flibsyntax%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc1400600be083cfb39ffdc6f6b32153e585cd3c/src%2Flibsyntax%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Flib.rs?ref=bc1400600be083cfb39ffdc6f6b32153e585cd3c", "patch": "@@ -40,11 +40,12 @@ extern crate libc;\n #[macro_use] extern crate log;\n #[macro_use] #[no_link] extern crate rustc_bitflags;\n extern crate rustc_unicode;\n-extern crate rustc_errors as errors;\n+pub extern crate rustc_errors as errors;\n extern crate syntax_pos;\n \n extern crate serialize as rustc_serialize; // used by deriving\n \n+\n // A variant of 'try!' that panics on an Err. This is used as a crutch on the\n // way towards a non-panic!-prone parser. It should be used for fatal parsing\n // errors; eventually we plan to convert all code using panictry to just use"}, {"sha": "e29ded8a052c6f73b16462e0a89b0ddd26e7f714", "filename": "src/test/compile-fail-fulldeps/qquote.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bc1400600be083cfb39ffdc6f6b32153e585cd3c/src%2Ftest%2Fcompile-fail-fulldeps%2Fqquote.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc1400600be083cfb39ffdc6f6b32153e585cd3c/src%2Ftest%2Fcompile-fail-fulldeps%2Fqquote.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail-fulldeps%2Fqquote.rs?ref=bc1400600be083cfb39ffdc6f6b32153e585cd3c", "patch": "@@ -18,7 +18,7 @@ extern crate syntax_pos;\n use syntax::ast;\n use syntax::parse;\n use syntax::print::pprust;\n-use syntax_pos::{self, DUMMY_SP};\n+use syntax_pos::DUMMY_SP;\n \n fn main() {\n     let ps = syntax::parse::ParseSess::new();"}]}