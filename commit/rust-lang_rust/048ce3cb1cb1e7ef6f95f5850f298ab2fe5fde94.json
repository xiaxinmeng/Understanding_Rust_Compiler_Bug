{"sha": "048ce3cb1cb1e7ef6f95f5850f298ab2fe5fde94", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA0OGNlM2NiMWNiMWU3ZWY2Zjk1ZjU4NTBmMjk4YWIyZmU1ZmRlOTQ=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-04-27T21:59:44Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-04-27T21:59:44Z"}, "message": "Merge pull request #717 from Eijebong/metadata\n\nUpdate cargo_metadata to 0.7", "tree": {"sha": "9f230e8b6dcd4af6ca6ecabaca0d5a7d7235c538", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9f230e8b6dcd4af6ca6ecabaca0d5a7d7235c538"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/048ce3cb1cb1e7ef6f95f5850f298ab2fe5fde94", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcxNDQCRBK7hj4Ov3rIwAAdHIIAAAmnYRAITffM/Q+SUwA6ffX\nB2eWOFsdNQYbcd7/Z49ZZlaRsZx/QXVJkQV4IiTEpjOwtXq29byHe/nd7o/CGzFi\n/10yeKcO/hweKawzzXLJ6zPjE3ziO+HXJVAx32TTkgEMsQ4G/CdShOeHJYkax1oj\nI37cSrS2BlRhsAap6Si82PnW/SQj5+d949B5lPBOJnUAu1AhclKcfDvVdeOSoSOH\n+VrlCvq/EPVQFMEgDoUueMSO+4DiAwcERVN4vAwqjwcL3iblsNcPSHRcjarBs5RC\nS25WR58vhEsZGfZOvMH42hSsS/Bt+b9tPrRY7D0BifqYlyMLz0GaCqn4BiTnNH0=\n=Xknx\n-----END PGP SIGNATURE-----\n", "payload": "tree 9f230e8b6dcd4af6ca6ecabaca0d5a7d7235c538\nparent 0f0c5f6d9a8a16f5db2e8a1a4ca473c90890adbf\nparent 69a252c1b3492ea2902447a3331933c3fbe4d7f6\nauthor Ralf Jung <post@ralfj.de> 1556402384 +0200\ncommitter GitHub <noreply@github.com> 1556402384 +0200\n\nMerge pull request #717 from Eijebong/metadata\n\nUpdate cargo_metadata to 0.7"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/048ce3cb1cb1e7ef6f95f5850f298ab2fe5fde94", "html_url": "https://github.com/rust-lang/rust/commit/048ce3cb1cb1e7ef6f95f5850f298ab2fe5fde94", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/048ce3cb1cb1e7ef6f95f5850f298ab2fe5fde94/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0f0c5f6d9a8a16f5db2e8a1a4ca473c90890adbf", "url": "https://api.github.com/repos/rust-lang/rust/commits/0f0c5f6d9a8a16f5db2e8a1a4ca473c90890adbf", "html_url": "https://github.com/rust-lang/rust/commit/0f0c5f6d9a8a16f5db2e8a1a4ca473c90890adbf"}, {"sha": "69a252c1b3492ea2902447a3331933c3fbe4d7f6", "url": "https://api.github.com/repos/rust-lang/rust/commits/69a252c1b3492ea2902447a3331933c3fbe4d7f6", "html_url": "https://github.com/rust-lang/rust/commit/69a252c1b3492ea2902447a3331933c3fbe4d7f6"}], "stats": {"total": 11, "additions": 6, "deletions": 5}, "files": [{"sha": "639fd50c750339d69a396d05018d06e44b3fd517", "filename": "Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/048ce3cb1cb1e7ef6f95f5850f298ab2fe5fde94/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/048ce3cb1cb1e7ef6f95f5850f298ab2fe5fde94/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=048ce3cb1cb1e7ef6f95f5850f298ab2fe5fde94", "patch": "@@ -34,7 +34,7 @@ required-features = [\"rustc_tests\"]\n \n [dependencies]\n byteorder = { version = \"1.1\", features = [\"i128\"]}\n-cargo_metadata = { version = \"0.6\", optional = true }\n+cargo_metadata = { version = \"0.7\", optional = true }\n directories = { version = \"1.0\", optional = true }\n rustc_version = { version = \"0.2.3\", optional = true }\n env_logger = \"0.6\""}, {"sha": "5fc6f4af2b2d3896e95f7a345a3b19040572e2e9", "filename": "src/bin/cargo-miri.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/048ce3cb1cb1e7ef6f95f5850f298ab2fe5fde94/src%2Fbin%2Fcargo-miri.rs", "raw_url": "https://github.com/rust-lang/rust/raw/048ce3cb1cb1e7ef6f95f5850f298ab2fe5fde94/src%2Fbin%2Fcargo-miri.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fcargo-miri.rs?ref=048ce3cb1cb1e7ef6f95f5850f298ab2fe5fde94", "patch": "@@ -83,10 +83,11 @@ fn list_targets() -> impl Iterator<Item=cargo_metadata::Target> {\n         Path::new(&m).canonicalize().unwrap()\n     );\n \n-    let mut metadata = if let Ok(metadata) = cargo_metadata::metadata(\n-        manifest_path.as_ref().map(AsRef::as_ref),\n-    )\n-    {\n+    let mut cmd = cargo_metadata::MetadataCommand::new();\n+    if let Some(ref manifest_path) = manifest_path {\n+        cmd.manifest_path(manifest_path);\n+    }\n+    let mut metadata = if let Ok(metadata) = cmd.exec() {\n         metadata\n     } else {\n         show_error(format!(\"Could not obtain Cargo metadata\"));"}]}