{"sha": "6a10e3a71324cddce3e4dcb21f1b43dcdec89775", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZhMTBlM2E3MTMyNGNkZGNlM2U0ZGNiMjFmMWI0M2RjZGVjODk3NzU=", "commit": {"author": {"name": "Eric Holk", "email": "eric.holk@gmail.com", "date": "2012-08-09T18:54:56Z"}, "committer": {"name": "Eric Holk", "email": "eric.holk@gmail.com", "date": "2012-08-09T18:55:17Z"}, "message": "Added oneshot protocol. Fixes #3125", "tree": {"sha": "fd19530f226beaf0fa595d0b6231900a36ff1971", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fd19530f226beaf0fa595d0b6231900a36ff1971"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6a10e3a71324cddce3e4dcb21f1b43dcdec89775", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6a10e3a71324cddce3e4dcb21f1b43dcdec89775", "html_url": "https://github.com/rust-lang/rust/commit/6a10e3a71324cddce3e4dcb21f1b43dcdec89775", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6a10e3a71324cddce3e4dcb21f1b43dcdec89775/comments", "author": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "812db1ec0d97217414b4e49962e8da75761b9279", "url": "https://api.github.com/repos/rust-lang/rust/commits/812db1ec0d97217414b4e49962e8da75761b9279", "html_url": "https://github.com/rust-lang/rust/commit/812db1ec0d97217414b4e49962e8da75761b9279"}], "stats": {"total": 36, "additions": 36, "deletions": 0}, "files": [{"sha": "052efdf3b41e556d7dc8126498ecfd203ab74a05", "filename": "src/libcore/pipes.rs", "status": "modified", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/6a10e3a71324cddce3e4dcb21f1b43dcdec89775/src%2Flibcore%2Fpipes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a10e3a71324cddce3e4dcb21f1b43dcdec89775/src%2Flibcore%2Fpipes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fpipes.rs?ref=6a10e3a71324cddce3e4dcb21f1b43dcdec89775", "patch": "@@ -76,6 +76,7 @@ export send_packet, recv_packet, send, recv, try_recv, peek;\n export select, select2, selecti, select2i, selectable;\n export spawn_service, spawn_service_recv;\n export stream, port, chan, shared_chan, port_set, channel;\n+export oneshot, recv_one, try_recv_one;\n \n #[doc(hidden)]\n const SPIN_COUNT: uint = 0;\n@@ -1103,6 +1104,32 @@ impl<T: send, U: send, Left: selectable recv<T>, Right: selectable recv<U>>\n     }\n }\n \n+proto! oneshot {\n+    oneshot:send<T:send> {\n+        send(T) -> !\n+    }\n+}\n+\n+/// Receive a message from a oneshot pipe.\n+fn recv_one<T: send>(+port: oneshot::server::oneshot<T>) -> T {\n+    let oneshot::send(message) = recv(port);\n+    message\n+}\n+\n+/** Receive a message from a oneshot pipe, or fail if the connection\n+is closed.\n+\n+*/\n+fn try_recv_one<T: send> (+port: oneshot::server::oneshot<T>) -> option<T> {\n+    let message = try_recv(port);\n+\n+    if message == none { none }\n+    else {\n+        let oneshot::send(message) = option::unwrap(message);\n+        some(message)\n+    }\n+}\n+\n #[cfg(test)]\n mod test {\n     #[test]\n@@ -1119,4 +1146,13 @@ mod test {\n \n         c2.send(123);\n     }\n+\n+    #[test]\n+    fn test_oneshot() {\n+        let (c, p) = oneshot::init();\n+\n+        oneshot::client::send(c, ());\n+\n+        recv_one(p)\n+    }\n }"}]}