{"sha": "797cdb00d91a221d62438b23dfd625a78163a58d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc5N2NkYjAwZDkxYTIyMWQ2MjQzOGIyM2RmZDYyNWE3ODE2M2E1OGQ=", "commit": {"author": {"name": "Lauren\u021biu Nicola", "email": "lnicola@dend.ro", "date": "2020-07-30T17:37:28Z"}, "committer": {"name": "Lauren\u021biu Nicola", "email": "lnicola@dend.ro", "date": "2020-07-30T20:09:07Z"}, "message": "Bump chalk", "tree": {"sha": "e7469d778ee68eeaf7079acb5aa3a0cb571f33b5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e7469d778ee68eeaf7079acb5aa3a0cb571f33b5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/797cdb00d91a221d62438b23dfd625a78163a58d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/797cdb00d91a221d62438b23dfd625a78163a58d", "html_url": "https://github.com/rust-lang/rust/commit/797cdb00d91a221d62438b23dfd625a78163a58d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/797cdb00d91a221d62438b23dfd625a78163a58d/comments", "author": {"login": "lnicola", "id": 308347, "node_id": "MDQ6VXNlcjMwODM0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/308347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lnicola", "html_url": "https://github.com/lnicola", "followers_url": "https://api.github.com/users/lnicola/followers", "following_url": "https://api.github.com/users/lnicola/following{/other_user}", "gists_url": "https://api.github.com/users/lnicola/gists{/gist_id}", "starred_url": "https://api.github.com/users/lnicola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lnicola/subscriptions", "organizations_url": "https://api.github.com/users/lnicola/orgs", "repos_url": "https://api.github.com/users/lnicola/repos", "events_url": "https://api.github.com/users/lnicola/events{/privacy}", "received_events_url": "https://api.github.com/users/lnicola/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lnicola", "id": 308347, "node_id": "MDQ6VXNlcjMwODM0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/308347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lnicola", "html_url": "https://github.com/lnicola", "followers_url": "https://api.github.com/users/lnicola/followers", "following_url": "https://api.github.com/users/lnicola/following{/other_user}", "gists_url": "https://api.github.com/users/lnicola/gists{/gist_id}", "starred_url": "https://api.github.com/users/lnicola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lnicola/subscriptions", "organizations_url": "https://api.github.com/users/lnicola/orgs", "repos_url": "https://api.github.com/users/lnicola/repos", "events_url": "https://api.github.com/users/lnicola/events{/privacy}", "received_events_url": "https://api.github.com/users/lnicola/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fa64817eaba81c527cba3cae4b738c95def659d2", "url": "https://api.github.com/repos/rust-lang/rust/commits/fa64817eaba81c527cba3cae4b738c95def659d2", "html_url": "https://github.com/rust-lang/rust/commit/fa64817eaba81c527cba3cae4b738c95def659d2"}], "stats": {"total": 63, "additions": 35, "deletions": 28}, "files": [{"sha": "234c314067e563acfb22ffa8aad3e7a3794074ad", "filename": "Cargo.lock", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/797cdb00d91a221d62438b23dfd625a78163a58d/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/797cdb00d91a221d62438b23dfd625a78163a58d/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=797cdb00d91a221d62438b23dfd625a78163a58d", "patch": "@@ -125,9 +125,9 @@ checksum = \"4785bdd1c96b2a846b2bd7cc02e86b6b3dbf14e7e53446c4f54c92a361040822\"\n \n [[package]]\n name = \"chalk-derive\"\n-version = \"0.18.0\"\n+version = \"0.19.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"eea3a22f0c30b2504ac4ab58934dac0d00b92a4d7788df32795cabca24c3f929\"\n+checksum = \"654c611946ba2629c5028cb7708687af975faf2c29d731824cb294c873df4697\"\n dependencies = [\n  \"proc-macro2\",\n  \"quote\",\n@@ -137,19 +137,19 @@ dependencies = [\n \n [[package]]\n name = \"chalk-ir\"\n-version = \"0.18.0\"\n+version = \"0.19.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"fb617b643e145e3b151502799e91a9625dd5daf1cf05dc2cb821bc75ae0c9cbd\"\n+checksum = \"0a5341fbc654ca886b73b804a36aebf0e621057ccc1a68e9815b5b39b3ac9ae8\"\n dependencies = [\n  \"chalk-derive\",\n  \"lazy_static\",\n ]\n \n [[package]]\n name = \"chalk-recursive\"\n-version = \"0.18.0\"\n+version = \"0.19.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"d280565c8eefbf9b2bc615df49c7dfd971faad37774bf65734e626fd23864bd6\"\n+checksum = \"4484807b155b5a411e6135d330295f9ba5042e2920b8712c6574ca6ea91e9ee5\"\n dependencies = [\n  \"chalk-derive\",\n  \"chalk-ir\",\n@@ -160,9 +160,9 @@ dependencies = [\n \n [[package]]\n name = \"chalk-solve\"\n-version = \"0.18.0\"\n+version = \"0.19.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"be906fbca3f3077dce0e76d9864771d0f450c946af0d86b569fb9504148a065a\"\n+checksum = \"281f82facd2538997fbe52132b1941ed213d266748215c31d15f62a8664429ad\"\n dependencies = [\n  \"chalk-derive\",\n  \"chalk-ir\","}, {"sha": "623ce261a0598591e25232b4d13ee456daaec4b1", "filename": "crates/ra_hir_ty/Cargo.toml", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/797cdb00d91a221d62438b23dfd625a78163a58d/crates%2Fra_hir_ty%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/797cdb00d91a221d62438b23dfd625a78163a58d/crates%2Fra_hir_ty%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2FCargo.toml?ref=797cdb00d91a221d62438b23dfd625a78163a58d", "patch": "@@ -28,9 +28,9 @@ test_utils = { path = \"../test_utils\" }\n \n scoped-tls = \"1\"\n \n-chalk-solve = { version = \"0.18.0\" }\n-chalk-ir = { version = \"0.18.0\" }\n-chalk-recursive = { version = \"0.18.0\" }\n+chalk-solve = { version = \"0.19.0\" }\n+chalk-ir = { version = \"0.19.0\" }\n+chalk-recursive = { version = \"0.19.0\" }\n \n [dev-dependencies]\n expect = { path = \"../expect\" }"}, {"sha": "1c7065364450c26d2da0e2ed2e50d9d888c9eed4", "filename": "crates/ra_hir_ty/src/traits/chalk.rs", "status": "modified", "additions": 8, "deletions": 11, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/797cdb00d91a221d62438b23dfd625a78163a58d/crates%2Fra_hir_ty%2Fsrc%2Ftraits%2Fchalk.rs", "raw_url": "https://github.com/rust-lang/rust/raw/797cdb00d91a221d62438b23dfd625a78163a58d/crates%2Fra_hir_ty%2Fsrc%2Ftraits%2Fchalk.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Ftraits%2Fchalk.rs?ref=797cdb00d91a221d62438b23dfd625a78163a58d", "patch": "@@ -183,6 +183,7 @@ impl<'a> chalk_solve::RustIrDatabase<Interner> for ChalkContext<'a> {\n                     .collect(),\n                 1,\n             ),\n+            where_clauses: make_binders(vec![], 0),\n         };\n         let num_vars = datas.num_binders;\n         Arc::new(OpaqueTyDatum { opaque_ty_id: id, bound: make_binders(bound, num_vars) })\n@@ -193,15 +194,6 @@ impl<'a> chalk_solve::RustIrDatabase<Interner> for ChalkContext<'a> {\n         Ty::Unknown.to_chalk(self.db)\n     }\n \n-    fn force_impl_for(\n-        &self,\n-        _well_known: rust_ir::WellKnownTrait,\n-        _ty: &chalk_ir::TyData<Interner>,\n-    ) -> Option<bool> {\n-        // this method is mostly for rustc\n-        None\n-    }\n-\n     fn is_object_safe(&self, _trait_id: chalk_ir::TraitId<Interner>) -> bool {\n         // FIXME: implement actual object safety\n         true\n@@ -547,8 +539,13 @@ pub(crate) fn fn_def_datum_query(\n         ),\n         where_clauses,\n     };\n-    let datum =\n-        FnDefDatum { id: fn_def_id, binders: make_binders(bound, sig.num_binders), abi: () };\n+    let datum = FnDefDatum {\n+        id: fn_def_id,\n+        abi: (),\n+        safety: chalk_ir::Safety::Safe,\n+        variadic: sig.value.is_varargs,\n+        binders: make_binders(bound, sig.num_binders),\n+    };\n     Arc::new(datum)\n }\n "}, {"sha": "b3e92993d2dd3f5d4f28a18d3bcb3f0c6f6b0af6", "filename": "crates/ra_hir_ty/src/traits/chalk/mapping.rs", "status": "modified", "additions": 16, "deletions": 6, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/797cdb00d91a221d62438b23dfd625a78163a58d/crates%2Fra_hir_ty%2Fsrc%2Ftraits%2Fchalk%2Fmapping.rs", "raw_url": "https://github.com/rust-lang/rust/raw/797cdb00d91a221d62438b23dfd625a78163a58d/crates%2Fra_hir_ty%2Fsrc%2Ftraits%2Fchalk%2Fmapping.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Ftraits%2Fchalk%2Fmapping.rs?ref=797cdb00d91a221d62438b23dfd625a78163a58d", "patch": "@@ -30,11 +30,16 @@ impl ToChalk for Ty {\n             Ty::Apply(apply_ty) => match apply_ty.ctor {\n                 TypeCtor::Ref(m) => ref_to_chalk(db, m, apply_ty.parameters),\n                 TypeCtor::Array => array_to_chalk(db, apply_ty.parameters),\n-                TypeCtor::FnPtr { num_args: _, is_varargs: _ } => {\n-                    // FIXME: handle is_varargs\n+                TypeCtor::FnPtr { num_args: _, is_varargs } => {\n                     let substitution = apply_ty.parameters.to_chalk(db).shifted_in(&Interner);\n-                    chalk_ir::TyData::Function(chalk_ir::Fn { num_binders: 0, substitution })\n-                        .intern(&Interner)\n+                    chalk_ir::TyData::Function(chalk_ir::FnPointer {\n+                        num_binders: 0,\n+                        abi: (),\n+                        safety: chalk_ir::Safety::Safe,\n+                        variadic: is_varargs,\n+                        substitution,\n+                    })\n+                    .intern(&Interner)\n                 }\n                 _ => {\n                     let name = apply_ty.ctor.to_chalk(db);\n@@ -118,7 +123,12 @@ impl ToChalk for Ty {\n                 let parameters = from_chalk(db, opaque_ty.substitution);\n                 Ty::Opaque(OpaqueTy { opaque_ty_id: impl_trait_id, parameters })\n             }\n-            chalk_ir::TyData::Function(chalk_ir::Fn { num_binders, substitution }) => {\n+            chalk_ir::TyData::Function(chalk_ir::FnPointer {\n+                num_binders,\n+                variadic,\n+                substitution,\n+                ..\n+            }) => {\n                 assert_eq!(num_binders, 0);\n                 let parameters: Substs = from_chalk(\n                     db,\n@@ -127,7 +137,7 @@ impl ToChalk for Ty {\n                 Ty::Apply(ApplicationTy {\n                     ctor: TypeCtor::FnPtr {\n                         num_args: (parameters.len() - 1) as u16,\n-                        is_varargs: false,\n+                        is_varargs: variadic,\n                     },\n                     parameters,\n                 })"}]}