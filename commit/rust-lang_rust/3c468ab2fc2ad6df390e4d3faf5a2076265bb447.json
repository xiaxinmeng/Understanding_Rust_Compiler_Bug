{"sha": "3c468ab2fc2ad6df390e4d3faf5a2076265bb447", "node_id": "C_kwDOAAsO6NoAKDNjNDY4YWIyZmMyYWQ2ZGYzOTBlNGQzZmFmNWEyMDc2MjY1YmI0NDc", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-10-16T10:28:46Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-10-16T10:28:46Z"}, "message": "Merge #10542\n\n10542: Use workspace cargo to fetch rust source's metadata r=lnicola a=Alexendoo\n\nPreviously the detected cargo is the global one, as it uses the\r\ndirectory of the rust source which doesn't pick up the local override\r\n\r\nThis fixes the case in clippy where the local rust toolchain is a recent\r\nnightly that has a 2021 edition Cargo.toml. The global (stable) cargo\r\nreturns an error attempting to parse it\r\n\r\nFixes #10445\n\nCo-authored-by: Alex Macleod <alex@macleod.io>", "tree": {"sha": "e250f0a08cea07343f286cd20c9c8cd80270bcab", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e250f0a08cea07343f286cd20c9c8cd80270bcab"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3c468ab2fc2ad6df390e4d3faf5a2076265bb447", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhaqleCRBK7hj4Ov3rIwAAJVwIAIsjcqexxy7xE15ADhKmSOUA\nzvYsoAZ7Jzqz/4dWE4A3WHQDAweeTLz3MA+oBrXizSR4/Eo44Zjk1xPn2Lkxufes\n+GLMhaCGiWNsg3lB/ZEJR0fhI2LO8uZ9o33FS/JM9clPQ5rPpEzWvsaCWeJb2n4G\nqqA67O6ACApySZt3pcI3JHX+XEdSaYQA+IJhZQF/QDkaS0W6BtmhgVJmtVEZITAu\nfI9o1++DghgKNu2Ch61t6V+cn1PXdtp1vlyjoqttiQ36vLduqbdhxp/3AGJKJKAO\noWmGviXholF/dUgan3ErKRNG/RrY7pT9OhP+3GBNRNGqvLH6cbhXWdxWmZie1Io=\n=TKW4\n-----END PGP SIGNATURE-----\n", "payload": "tree e250f0a08cea07343f286cd20c9c8cd80270bcab\nparent c4e88e950ff0813e069d7bcdb2bc5e907874b64a\nparent a6eeb75120876e968f7d5adabbc7fcd6cc000c98\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1634380126 +0000\ncommitter GitHub <noreply@github.com> 1634380126 +0000\n\nMerge #10542\n\n10542: Use workspace cargo to fetch rust source's metadata r=lnicola a=Alexendoo\n\nPreviously the detected cargo is the global one, as it uses the\r\ndirectory of the rust source which doesn't pick up the local override\r\n\r\nThis fixes the case in clippy where the local rust toolchain is a recent\r\nnightly that has a 2021 edition Cargo.toml. The global (stable) cargo\r\nreturns an error attempting to parse it\r\n\r\nFixes #10445\n\nCo-authored-by: Alex Macleod <alex@macleod.io>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3c468ab2fc2ad6df390e4d3faf5a2076265bb447", "html_url": "https://github.com/rust-lang/rust/commit/3c468ab2fc2ad6df390e4d3faf5a2076265bb447", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3c468ab2fc2ad6df390e4d3faf5a2076265bb447/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c4e88e950ff0813e069d7bcdb2bc5e907874b64a", "url": "https://api.github.com/repos/rust-lang/rust/commits/c4e88e950ff0813e069d7bcdb2bc5e907874b64a", "html_url": "https://github.com/rust-lang/rust/commit/c4e88e950ff0813e069d7bcdb2bc5e907874b64a"}, {"sha": "a6eeb75120876e968f7d5adabbc7fcd6cc000c98", "url": "https://api.github.com/repos/rust-lang/rust/commits/a6eeb75120876e968f7d5adabbc7fcd6cc000c98", "html_url": "https://github.com/rust-lang/rust/commit/a6eeb75120876e968f7d5adabbc7fcd6cc000c98"}], "stats": {"total": 37, "additions": 24, "deletions": 13}, "files": [{"sha": "13ff20c8c678fcf2c78fc2885616eab4cc86904d", "filename": "crates/project_model/src/cargo_workspace.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3c468ab2fc2ad6df390e4d3faf5a2076265bb447/crates%2Fproject_model%2Fsrc%2Fcargo_workspace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c468ab2fc2ad6df390e4d3faf5a2076265bb447/crates%2Fproject_model%2Fsrc%2Fcargo_workspace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproject_model%2Fsrc%2Fcargo_workspace.rs?ref=3c468ab2fc2ad6df390e4d3faf5a2076265bb447", "patch": "@@ -251,6 +251,7 @@ struct PackageMetadata {\n impl CargoWorkspace {\n     pub fn fetch_metadata(\n         cargo_toml: &ManifestPath,\n+        current_dir: &AbsPath,\n         config: &CargoConfig,\n         progress: &dyn Fn(String),\n     ) -> Result<cargo_metadata::Metadata> {\n@@ -275,7 +276,7 @@ impl CargoWorkspace {\n                 meta.features(CargoOpt::SomeFeatures(config.features.clone()));\n             }\n         }\n-        meta.current_dir(cargo_toml.parent().as_os_str());\n+        meta.current_dir(current_dir.as_os_str());\n \n         if let Some(target) = target {\n             meta.other_options(vec![String::from(\"--filter-platform\"), target]);"}, {"sha": "339fdfcc9be42894c606d44852e1b7eda6f8c74c", "filename": "crates/project_model/src/workspace.rs", "status": "modified", "additions": 22, "deletions": 12, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/3c468ab2fc2ad6df390e4d3faf5a2076265bb447/crates%2Fproject_model%2Fsrc%2Fworkspace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c468ab2fc2ad6df390e4d3faf5a2076265bb447/crates%2Fproject_model%2Fsrc%2Fworkspace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproject_model%2Fsrc%2Fworkspace.rs?ref=3c468ab2fc2ad6df390e4d3faf5a2076265bb447", "patch": "@@ -160,14 +160,19 @@ impl ProjectWorkspace {\n                     cmd\n                 })?;\n \n-                let meta = CargoWorkspace::fetch_metadata(&cargo_toml, config, progress)\n-                    .with_context(|| {\n-                        format!(\n-                            \"Failed to read Cargo metadata from Cargo.toml file {}, {}\",\n-                            cargo_toml.display(),\n-                            cargo_version\n-                        )\n-                    })?;\n+                let meta = CargoWorkspace::fetch_metadata(\n+                    &cargo_toml,\n+                    cargo_toml.parent(),\n+                    config,\n+                    progress,\n+                )\n+                .with_context(|| {\n+                    format!(\n+                        \"Failed to read Cargo metadata from Cargo.toml file {}, {}\",\n+                        cargo_toml.display(),\n+                        cargo_version\n+                    )\n+                })?;\n                 let cargo = CargoWorkspace::new(meta);\n \n                 let sysroot = if config.no_sysroot {\n@@ -189,10 +194,15 @@ impl ProjectWorkspace {\n \n                 let rustc = match rustc_dir {\n                     Some(rustc_dir) => Some({\n-                        let meta = CargoWorkspace::fetch_metadata(&rustc_dir, config, progress)\n-                            .with_context(|| {\n-                                \"Failed to read Cargo metadata for Rust sources\".to_string()\n-                            })?;\n+                        let meta = CargoWorkspace::fetch_metadata(\n+                            &rustc_dir,\n+                            cargo_toml.parent(),\n+                            config,\n+                            progress,\n+                        )\n+                        .with_context(|| {\n+                            \"Failed to read Cargo metadata for Rust sources\".to_string()\n+                        })?;\n                         CargoWorkspace::new(meta)\n                     }),\n                     None => None,"}]}