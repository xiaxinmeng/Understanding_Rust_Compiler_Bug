{"sha": "adc54632ae294cfd070c465c964a736ec56efa94", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFkYzU0NjMyYWUyOTRjZmQwNzBjNDY1Yzk2NGE3MzZlYzU2ZWZhOTQ=", "commit": {"author": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2020-03-20T21:20:28Z"}, "committer": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2020-03-20T21:20:28Z"}, "message": "Add open delim when delim not match", "tree": {"sha": "d0662f44bf46aa430be324acd50fc1423532b2ec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d0662f44bf46aa430be324acd50fc1423532b2ec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/adc54632ae294cfd070c465c964a736ec56efa94", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/adc54632ae294cfd070c465c964a736ec56efa94", "html_url": "https://github.com/rust-lang/rust/commit/adc54632ae294cfd070c465c964a736ec56efa94", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/adc54632ae294cfd070c465c964a736ec56efa94/comments", "author": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "committer": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6bcaa1d7d17ff9bae12080887c824c81f4b8bd52", "url": "https://api.github.com/repos/rust-lang/rust/commits/6bcaa1d7d17ff9bae12080887c824c81f4b8bd52", "html_url": "https://github.com/rust-lang/rust/commit/6bcaa1d7d17ff9bae12080887c824c81f4b8bd52"}], "stats": {"total": 33, "additions": 28, "deletions": 5}, "files": [{"sha": "e3cde9eedcb331855947c8ad5ff59f5400b9b1af", "filename": "crates/ra_mbe/src/syntax_bridge.rs", "status": "modified", "additions": 27, "deletions": 4, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/adc54632ae294cfd070c465c964a736ec56efa94/crates%2Fra_mbe%2Fsrc%2Fsyntax_bridge.rs", "raw_url": "https://github.com/rust-lang/rust/raw/adc54632ae294cfd070c465c964a736ec56efa94/crates%2Fra_mbe%2Fsrc%2Fsyntax_bridge.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_mbe%2Fsrc%2Fsyntax_bridge.rs?ref=adc54632ae294cfd070c465c964a736ec56efa94", "patch": "@@ -149,6 +149,10 @@ impl TokenMap {\n             }\n         }\n     }\n+\n+    fn remove_delim(&mut self, token_id: tt::TokenId) {\n+        self.entries.retain(|(tid, _)| *tid != token_id);\n+    }\n }\n \n /// Returns the textual content of a doc comment block as a quoted string\n@@ -245,8 +249,15 @@ impl TokenIdAlloc {\n         token_id\n     }\n \n-    fn close_delim(&mut self, id: tt::TokenId, close_abs_range: TextRange) {\n-        self.map.update_close_delim(id, close_abs_range - self.global_offset);\n+    fn close_delim(&mut self, id: tt::TokenId, close_abs_range: Option<TextRange>) {\n+        match close_abs_range {\n+            None => {\n+                self.map.remove_delim(id);\n+            }\n+            Some(close) => {\n+                self.map.update_close_delim(id, close - self.global_offset);\n+            }\n+        }\n     }\n }\n \n@@ -318,10 +329,22 @@ trait TokenConvertor {\n                     self.collect_leaf(&mut subtree.token_trees);\n                 }\n                 let last_range = match self.bump() {\n-                    None => return,\n+                    None => {\n+                        // For error resilience, we insert an char punct for the opening delim here\n+                        self.id_alloc().close_delim(id, None);\n+                        let leaf: tt::Leaf = tt::Punct {\n+                            id: self.id_alloc().alloc(range),\n+                            char: token.to_char().unwrap(),\n+                            spacing: tt::Spacing::Alone,\n+                        }\n+                        .into();\n+                        result.push(leaf.into());\n+                        result.extend(subtree.token_trees);\n+                        return;\n+                    }\n                     Some(it) => it.1,\n                 };\n-                self.id_alloc().close_delim(id, last_range);\n+                self.id_alloc().close_delim(id, Some(last_range));\n                 subtree.into()\n             } else {\n                 let spacing = match self.peek() {"}, {"sha": "a7fcea0acee23cf28e426897bd1bb58b84b40534", "filename": "crates/ra_mbe/src/tests.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/adc54632ae294cfd070c465c964a736ec56efa94/crates%2Fra_mbe%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/adc54632ae294cfd070c465c964a736ec56efa94/crates%2Fra_mbe%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_mbe%2Fsrc%2Ftests.rs?ref=adc54632ae294cfd070c465c964a736ec56efa94", "patch": "@@ -1694,5 +1694,5 @@ fn test_expand_bad_literal() {\n         macro_rules! foo { ($i:literal) => {}; }\n     \"#,\n     )\n-    .assert_expand_err(r#\"foo!(&k\");\"#, &ExpandError::ConversionError);\n+    .assert_expand_err(r#\"foo!(&k\");\"#, &ExpandError::BindingError(\"\".into()));\n }"}]}