{"sha": "eb2fdc8b065218476744ed428097c859616c62f0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmViMmZkYzhiMDY1MjE4NDc2NzQ0ZWQ0MjgwOTdjODU5NjE2YzYyZjA=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2014-10-07T02:55:52Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2014-10-07T02:55:52Z"}, "message": "Reinstate AsSlice impls for Option and Result", "tree": {"sha": "8de0df13d8b19c5acaa234e1efe90a119a906a4e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8de0df13d8b19c5acaa234e1efe90a119a906a4e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eb2fdc8b065218476744ed428097c859616c62f0", "comment_count": 9, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eb2fdc8b065218476744ed428097c859616c62f0", "html_url": "https://github.com/rust-lang/rust/commit/eb2fdc8b065218476744ed428097c859616c62f0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eb2fdc8b065218476744ed428097c859616c62f0/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3b0550c3a94baa8ed4a5c25fc69a2859acb65673", "url": "https://api.github.com/repos/rust-lang/rust/commits/3b0550c3a94baa8ed4a5c25fc69a2859acb65673", "html_url": "https://github.com/rust-lang/rust/commit/3b0550c3a94baa8ed4a5c25fc69a2859acb65673"}], "stats": {"total": 37, "additions": 37, "deletions": 0}, "files": [{"sha": "9b66f900d9c89f135291ad9541dfdfebc70df5a7", "filename": "src/libcore/option.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/eb2fdc8b065218476744ed428097c859616c62f0/src%2Flibcore%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb2fdc8b065218476744ed428097c859616c62f0/src%2Flibcore%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Foption.rs?ref=eb2fdc8b065218476744ed428097c859616c62f0", "patch": "@@ -149,6 +149,7 @@ use iter::{Iterator, DoubleEndedIterator, FromIterator, ExactSize};\n use mem;\n use result::{Result, Ok, Err};\n use slice;\n+use slice::AsSlice;\n \n // Note that this is not a lang item per se, but it has a hidden dependency on\n // `Iterator`, which is one. The compiler assumes that the `next` method of\n@@ -845,6 +846,21 @@ impl<T: Default> Option<T> {\n // Trait implementations\n /////////////////////////////////////////////////////////////////////////////\n \n+impl<T> AsSlice<T> for Option<T> {\n+    /// Convert from `Option<T>` to `&[T]` (without copying)\n+    #[inline]\n+    #[stable]\n+    fn as_slice<'a>(&'a self) -> &'a [T] {\n+        match *self {\n+            Some(ref x) => slice::ref_slice(x),\n+            None => {\n+                let result: &[_] = &[];\n+                result\n+            }\n+        }\n+    }\n+}\n+\n impl<T> Default for Option<T> {\n     #[inline]\n     fn default() -> Option<T> { None }"}, {"sha": "caede952e2ffe9a77d9e469fe4abcfc66fd2a377", "filename": "src/libcore/result.rs", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/eb2fdc8b065218476744ed428097c859616c62f0/src%2Flibcore%2Fresult.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb2fdc8b065218476744ed428097c859616c62f0/src%2Flibcore%2Fresult.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fresult.rs?ref=eb2fdc8b065218476744ed428097c859616c62f0", "patch": "@@ -280,6 +280,7 @@ use clone::Clone;\n use cmp::PartialEq;\n use std::fmt::Show;\n use slice;\n+use slice::AsSlice;\n use iter::{Iterator, DoubleEndedIterator, FromIterator, ExactSize};\n use option::{None, Option, Some};\n \n@@ -839,6 +840,26 @@ impl<T: Show, E> Result<T, E> {\n     }\n }\n \n+/////////////////////////////////////////////////////////////////////////////\n+// Trait implementations\n+/////////////////////////////////////////////////////////////////////////////\n+\n+impl<T, E> AsSlice<T> for Result<T, E> {\n+    /// Convert from `Result<T, E>` to `&[T]` (without copying)\n+    #[inline]\n+    #[stable]\n+    fn as_slice<'a>(&'a self) -> &'a [T] {\n+        match *self {\n+            Ok(ref x) => slice::ref_slice(x),\n+            Err(_) => {\n+                // work around lack of implicit coercion from fixed-size array to slice\n+                let emp: &[_] = &[];\n+                emp\n+            }\n+        }\n+    }\n+}\n+\n /////////////////////////////////////////////////////////////////////////////\n // The Result Iterator\n /////////////////////////////////////////////////////////////////////////////"}]}