{"sha": "80e1dec10e989a559a63a85c63339cb2eb553168", "node_id": "C_kwDOAAsO6NoAKDgwZTFkZWMxMGU5ODlhNTU5YTYzYTg1YzYzMzM5Y2IyZWI1NTMxNjg", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-05-12T14:41:03Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-05-12T14:41:03Z"}, "message": "Rollup merge of #96860 - semarie:openbsd-futex-time64, r=cuviper\n\nopenbsd: convert futex timeout managment to Timespec usage\n\nunbreak openbsd build after #96657\n\nr? cuviper\n\nplease note I made `Timespec::zero()` public to be able to use it. OpenBSD is using relative timeout for `futex(2)` and I don't find simple way to use `Timespec` this way.", "tree": {"sha": "17133995d22f1e61371fe7abebe0705d67ec81dc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/17133995d22f1e61371fe7abebe0705d67ec81dc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/80e1dec10e989a559a63a85c63339cb2eb553168", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJifRx/CRBK7hj4Ov3rIwAAhBcIAKoul+R2rQiJ3HooQfCQuTpD\ng6eddRywYsDvSOekIdfhHvU+YpZJqZ0PBD7vqgMr7ryZeCK6gTnDhtuoJBIF3x4o\nQXpVoEQR/RnGr6ZaencnrLDdiE/SZQo7G9qIBQvjKnG1L4oTrajVCnSsmVSJYhVz\nwk87wzhG2zluh29Vc6nB7iERI1Wr7SeL05ZSA0hohiZGgXTgggx0exDNocf36hfT\nbL5SrfWd7YuXDiu/ZIk8/uSzrDf6pkp3nJ4xPt/YNOfUEqWb6nZFFecVwSB1NgSm\naMIDT7MXpGn0ZdQFLU5ZfjB2WZK2ZdFqo+V4mWqywBfsdqEFgTPzqu9wk5fVeiE=\n=s6+7\n-----END PGP SIGNATURE-----\n", "payload": "tree 17133995d22f1e61371fe7abebe0705d67ec81dc\nparent 43dabbf485b2aa2bd644580fefcae8a689d2836d\nparent 42f8e1f879487e3b0a48b9635eac11aaf7b672a1\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1652366463 +0200\ncommitter GitHub <noreply@github.com> 1652366463 +0200\n\nRollup merge of #96860 - semarie:openbsd-futex-time64, r=cuviper\n\nopenbsd: convert futex timeout managment to Timespec usage\n\nunbreak openbsd build after #96657\n\nr? cuviper\n\nplease note I made `Timespec::zero()` public to be able to use it. OpenBSD is using relative timeout for `futex(2)` and I don't find simple way to use `Timespec` this way.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/80e1dec10e989a559a63a85c63339cb2eb553168", "html_url": "https://github.com/rust-lang/rust/commit/80e1dec10e989a559a63a85c63339cb2eb553168", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/80e1dec10e989a559a63a85c63339cb2eb553168/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "43dabbf485b2aa2bd644580fefcae8a689d2836d", "url": "https://api.github.com/repos/rust-lang/rust/commits/43dabbf485b2aa2bd644580fefcae8a689d2836d", "html_url": "https://github.com/rust-lang/rust/commit/43dabbf485b2aa2bd644580fefcae8a689d2836d"}, {"sha": "42f8e1f879487e3b0a48b9635eac11aaf7b672a1", "url": "https://api.github.com/repos/rust-lang/rust/commits/42f8e1f879487e3b0a48b9635eac11aaf7b672a1", "html_url": "https://github.com/rust-lang/rust/commit/42f8e1f879487e3b0a48b9635eac11aaf7b672a1"}], "stats": {"total": 19, "additions": 9, "deletions": 10}, "files": [{"sha": "8d05cb44b94794acb5309abbb467c7b55a0828c8", "filename": "library/std/src/sys/unix/futex.rs", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/80e1dec10e989a559a63a85c63339cb2eb553168/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffutex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80e1dec10e989a559a63a85c63339cb2eb553168/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffutex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffutex.rs?ref=80e1dec10e989a559a63a85c63339cb2eb553168", "patch": "@@ -25,7 +25,7 @@ pub fn futex_wait(futex: &AtomicU32, expected: u32, timeout: Option<Duration>) -\n     //\n     // Overflows are rounded up to an infinite timeout (None).\n     let timespec = timeout\n-        .and_then(|d| Some(Timespec::now(libc::CLOCK_MONOTONIC).checked_add_duration(&d)?))\n+        .and_then(|d| Timespec::now(libc::CLOCK_MONOTONIC).checked_add_duration(&d))\n         .and_then(|t| t.to_timespec());\n \n     loop {\n@@ -136,15 +136,13 @@ pub fn futex_wake_all(futex: &AtomicU32) {\n \n #[cfg(target_os = \"openbsd\")]\n pub fn futex_wait(futex: &AtomicU32, expected: u32, timeout: Option<Duration>) -> bool {\n+    use super::time::Timespec;\n     use crate::ptr::{null, null_mut};\n-    let timespec = timeout.and_then(|d| {\n-        Some(libc::timespec {\n-            // Sleep forever if the timeout is longer than fits in a timespec.\n-            tv_sec: d.as_secs().try_into().ok()?,\n-            // This conversion never truncates, as subsec_nanos is always <1e9.\n-            tv_nsec: d.subsec_nanos() as _,\n-        })\n-    });\n+\n+    // Overflows are rounded up to an infinite timeout (None).\n+    let timespec = timeout\n+        .and_then(|d| Timespec::zero().checked_add_duration(&d))\n+        .and_then(|t| t.to_timespec());\n \n     let r = unsafe {\n         libc::futex("}, {"sha": "f99c453a3a85b88cd3f3eb66582cc716962c382b", "filename": "library/std/src/sys/unix/time.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/80e1dec10e989a559a63a85c63339cb2eb553168/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ftime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80e1dec10e989a559a63a85c63339cb2eb553168/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ftime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ftime.rs?ref=80e1dec10e989a559a63a85c63339cb2eb553168", "patch": "@@ -51,7 +51,7 @@ impl fmt::Debug for SystemTime {\n }\n \n impl Timespec {\n-    const fn zero() -> Timespec {\n+    pub const fn zero() -> Timespec {\n         Timespec { tv_sec: 0, tv_nsec: 0 }\n     }\n \n@@ -125,6 +125,7 @@ impl Timespec {\n         Some(Timespec::new(secs, nsec as i64))\n     }\n \n+    #[allow(dead_code)]\n     pub fn to_timespec(&self) -> Option<libc::timespec> {\n         Some(libc::timespec {\n             tv_sec: self.tv_sec.try_into().ok()?,"}]}