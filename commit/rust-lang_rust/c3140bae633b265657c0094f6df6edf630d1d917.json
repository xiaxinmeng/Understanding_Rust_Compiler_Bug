{"sha": "c3140bae633b265657c0094f6df6edf630d1d917", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMzMTQwYmFlNjMzYjI2NTY1N2MwMDk0ZjZkZjZlZGY2MzBkMWQ5MTc=", "commit": {"author": {"name": "guanqun", "email": "guanqun.lu@gmail.com", "date": "2019-09-20T16:22:43Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-09-20T16:22:43Z"}, "message": "remove the extra comma after the match arm\n\nThis would follow the same coding style as all the other match arms in this file.", "tree": {"sha": "51b53360ab6665cc28e1a0e21d2d4cbc7054b5d5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/51b53360ab6665cc28e1a0e21d2d4cbc7054b5d5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c3140bae633b265657c0094f6df6edf630d1d917", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdhPzTCRBK7hj4Ov3rIwAAdHIIAIKP0Gu5/HQSXSEQ8o4YXoMd\nR9u1kBiboCClTQMVfAf/RPYCaCkfPpUk+SuIznotbTRawi322Nq61yWrcq+2v1nu\nopWt69rfxLgst0BBI6vL48EGzb+5CoTYIlotkS97wMNMiTq8Ftc+YITYN1uB9fGa\nNm4OZZ0+9G0ifWuWjasbOIrKIa0NakgDxW+wiB0GolJNDMuwJXNylsB0noaJ24DG\nyglQRTWTk9GZrxpbuV0/lcQVJtNVt3y/Nx/ywfQiLNtG6fO0vqGBNgxQJ9A+uC1R\nhLa/P3ZRt1obNadR3gbaW3/cQKNkKOTzOCZtUjI1jRdY1pCL60IlZv7Xu+kf5Hc=\n=OdKS\n-----END PGP SIGNATURE-----\n", "payload": "tree 51b53360ab6665cc28e1a0e21d2d4cbc7054b5d5\nparent 9ad1e7c46cf690b7ec6953b142430d21ca2d8799\nauthor guanqun <guanqun.lu@gmail.com> 1568996563 +0800\ncommitter GitHub <noreply@github.com> 1568996563 +0800\n\nremove the extra comma after the match arm\n\nThis would follow the same coding style as all the other match arms in this file."}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c3140bae633b265657c0094f6df6edf630d1d917", "html_url": "https://github.com/rust-lang/rust/commit/c3140bae633b265657c0094f6df6edf630d1d917", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c3140bae633b265657c0094f6df6edf630d1d917/comments", "author": null, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9ad1e7c46cf690b7ec6953b142430d21ca2d8799", "url": "https://api.github.com/repos/rust-lang/rust/commits/9ad1e7c46cf690b7ec6953b142430d21ca2d8799", "html_url": "https://github.com/rust-lang/rust/commit/9ad1e7c46cf690b7ec6953b142430d21ca2d8799"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "df8bd3fa75e1437a0523b4f12bbfac30e7caabaa", "filename": "src/librustc_resolve/late/diagnostics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c3140bae633b265657c0094f6df6edf630d1d917/src%2Flibrustc_resolve%2Flate%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3140bae633b265657c0094f6df6edf630d1d917/src%2Flibrustc_resolve%2Flate%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flate%2Fdiagnostics.rs?ref=c3140bae633b265657c0094f6df6edf630d1d917", "patch": "@@ -424,7 +424,7 @@ impl<'a> LateResolutionVisitor<'a, '_> {\n                 } else {\n                     err.note(\"did you mean to use one of the enum's variants?\");\n                 }\n-            },\n+            }\n             (Res::Def(DefKind::Struct, def_id), _) if ns == ValueNS => {\n                 if let Some((ctor_def, ctor_vis))\n                         = self.r.struct_constructors.get(&def_id).cloned() {"}]}