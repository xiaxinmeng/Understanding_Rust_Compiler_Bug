{"sha": "d71988a1d44b33ec12958535a4e4e3d0c62d9256", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ3MTk4OGExZDQ0YjMzZWMxMjk1ODUzNWE0ZTRlM2QwYzYyZDkyNTY=", "commit": {"author": {"name": "Ariel Ben-Yehuda", "email": "ariel.byd@gmail.com", "date": "2017-02-06T20:23:26Z"}, "committer": {"name": "Ariel Ben-Yehuda", "email": "ariel.byd@gmail.com", "date": "2017-02-08T21:23:21Z"}, "message": "pacify tidy", "tree": {"sha": "94b530a52602964b54658ae36fc27672d4d9a3d2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/94b530a52602964b54658ae36fc27672d4d9a3d2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d71988a1d44b33ec12958535a4e4e3d0c62d9256", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d71988a1d44b33ec12958535a4e4e3d0c62d9256", "html_url": "https://github.com/rust-lang/rust/commit/d71988a1d44b33ec12958535a4e4e3d0c62d9256", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d71988a1d44b33ec12958535a4e4e3d0c62d9256/comments", "author": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "committer": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3652c095cef1e7b0fe38a6d8efb48ebae22bf2ba", "url": "https://api.github.com/repos/rust-lang/rust/commits/3652c095cef1e7b0fe38a6d8efb48ebae22bf2ba", "html_url": "https://github.com/rust-lang/rust/commit/3652c095cef1e7b0fe38a6d8efb48ebae22bf2ba"}], "stats": {"total": 11, "additions": 7, "deletions": 4}, "files": [{"sha": "f04f7ab9ed1a2e1cda4910ca08f0d74eb5e6aee4", "filename": "src/librustc_trans/mir/block.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d71988a1d44b33ec12958535a4e4e3d0c62d9256/src%2Flibrustc_trans%2Fmir%2Fblock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d71988a1d44b33ec12958535a4e4e3d0c62d9256/src%2Flibrustc_trans%2Fmir%2Fblock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fmir%2Fblock.rs?ref=d71988a1d44b33ec12958535a4e4e3d0c62d9256", "patch": "@@ -147,8 +147,9 @@ impl<'a, 'tcx> MirContext<'a, 'tcx> {\n             mir::TerminatorKind::Switch { ref discr, ref adt_def, ref targets } => {\n                 let discr_lvalue = self.trans_lvalue(&bcx, discr);\n                 let ty = discr_lvalue.ty.to_ty(bcx.tcx());\n-                let discr = adt::trans_get_discr(&bcx, ty, discr_lvalue.llval, discr_lvalue.alignment,\n-                                                 None, true);\n+                let discr = adt::trans_get_discr(\n+                    &bcx, ty, discr_lvalue.llval, discr_lvalue.alignment,\n+                    None, true);\n \n                 let mut bb_hist = FxHashMap();\n                 for target in targets {\n@@ -216,7 +217,8 @@ impl<'a, 'tcx> MirContext<'a, 'tcx> {\n                             llscratch\n                         }\n                         Ref(llval, align) => {\n-                            assert_eq!(align, Alignment::AbiAligned, \"return pointer is unaligned!\");\n+                            assert_eq!(align, Alignment::AbiAligned,\n+                                       \"return pointer is unaligned!\");\n                             llval\n                         }\n                     };"}, {"sha": "0a8e676b07812f41f475c11f35263f48d1f7d7ff", "filename": "src/librustc_trans/mir/rvalue.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d71988a1d44b33ec12958535a4e4e3d0c62d9256/src%2Flibrustc_trans%2Fmir%2Frvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d71988a1d44b33ec12958535a4e4e3d0c62d9256/src%2Flibrustc_trans%2Fmir%2Frvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fmir%2Frvalue.rs?ref=d71988a1d44b33ec12958535a4e4e3d0c62d9256", "patch": "@@ -113,7 +113,8 @@ impl<'a, 'tcx> MirContext<'a, 'tcx> {\n                             let op = self.trans_operand(&bcx, operand);\n                             // Do not generate stores and GEPis for zero-sized fields.\n                             if !common::type_is_zero_size(bcx.ccx, op.ty) {\n-                                let mut val = LvalueRef::new_sized(dest.llval, dest.ty, dest.alignment);\n+                                let mut val = LvalueRef::new_sized(\n+                                    dest.llval, dest.ty, dest.alignment);\n                                 let field_index = active_field_index.unwrap_or(i);\n                                 val.ty = LvalueTy::Downcast {\n                                     adt_def: adt_def,"}]}