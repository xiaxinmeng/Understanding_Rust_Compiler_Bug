{"sha": "62be878ed1715650f080c3b113a85f73e7af0973", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYyYmU4NzhlZDE3MTU2NTBmMDgwYzNiMTEzYTg1ZjczZTdhZjA5NzM=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-08-26T18:25:53Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-08-26T18:25:53Z"}, "message": "rustc: Use memmove in unsafe::reinterpret_cast (issue #3025).\n\nThis was causing a bunch of structural copies, which when inlined\nwas leading to enormous register pressure. Often this is seen in\ncode which makes use of result::unwrap.", "tree": {"sha": "0a12c897a43476a216485411bfca1bb91ae6a13d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0a12c897a43476a216485411bfca1bb91ae6a13d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/62be878ed1715650f080c3b113a85f73e7af0973", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/62be878ed1715650f080c3b113a85f73e7af0973", "html_url": "https://github.com/rust-lang/rust/commit/62be878ed1715650f080c3b113a85f73e7af0973", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/62be878ed1715650f080c3b113a85f73e7af0973/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ff9151fa55e4e81c0cbaa7181eb672b2df6b53f6", "url": "https://api.github.com/repos/rust-lang/rust/commits/ff9151fa55e4e81c0cbaa7181eb672b2df6b53f6", "html_url": "https://github.com/rust-lang/rust/commit/ff9151fa55e4e81c0cbaa7181eb672b2df6b53f6"}], "stats": {"total": 9, "additions": 6, "deletions": 3}, "files": [{"sha": "d7cc5e9139af61ba321bed0b08be93300b9b5cc2", "filename": "src/rustc/middle/trans/foreign.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/62be878ed1715650f080c3b113a85f73e7af0973/src%2Frustc%2Fmiddle%2Ftrans%2Fforeign.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62be878ed1715650f080c3b113a85f73e7af0973/src%2Frustc%2Fmiddle%2Ftrans%2Fforeign.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftrans%2Fforeign.rs?ref=62be878ed1715650f080c3b113a85f73e7af0973", "patch": "@@ -937,9 +937,12 @@ fn trans_intrinsic(ccx: @crate_ctxt, decl: ValueRef, item: @ast::foreign_item,\n                          ty_to_str(ccx.tcx, substs.tys[1]), out_sz));\n         }\n         if !ty::type_is_nil(substs.tys[1]) {\n-            let cast = PointerCast(bcx, get_param(decl, first_real_arg),\n-                                   T_ptr(llout_ty));\n-            Store(bcx, Load(bcx, cast), fcx.llretptr);\n+            // NB: Do not use a Load and Store here. This causes massive code\n+            // bloat when reinterpret_cast is used on large structural types.\n+            let llretptr = PointerCast(bcx, fcx.llretptr, T_ptr(T_i8()));\n+            let llcast = get_param(decl, first_real_arg);\n+            let llcast = PointerCast(bcx, llcast, T_ptr(T_i8()));\n+            call_memmove(bcx, llretptr, llcast, llsize_of(ccx, lltp_ty));\n         }\n       }\n       ~\"addr_of\" => {"}]}