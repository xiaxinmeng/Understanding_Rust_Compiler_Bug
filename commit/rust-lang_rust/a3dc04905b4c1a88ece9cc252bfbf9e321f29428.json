{"sha": "a3dc04905b4c1a88ece9cc252bfbf9e321f29428", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEzZGMwNDkwNWI0YzFhODhlY2U5Y2MyNTJiZmJmOWUzMjFmMjk0Mjg=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-04-03T21:47:39Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-04-03T21:47:39Z"}, "message": "Merge #8318\n\n8318: Use shrink_to_fit to reduce DefMap sizes r=jonas-schievink a=jonas-schievink\n\nEspecially `block_def_map` can overallocate when there's not a lot of items in the `DefMap`. This saves around 10 MB during analysis-stats. Not too much, but a cheap win.\r\n\r\nbors r+\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>", "tree": {"sha": "f671f0e97d91f9392f90911ebcb62df8eea958ea", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f671f0e97d91f9392f90911ebcb62df8eea958ea"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a3dc04905b4c1a88ece9cc252bfbf9e321f29428", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgaOJ7CRBK7hj4Ov3rIwAAdHIIAJKcgxmLzKawnYiXknxbxPkZ\ndNiMaZcLvKWaMGldqd/4eM02sMCionXjdFLQnZ7SCmKHdeJEK4faoqghrHu4iiJD\nPQZCOk2Q7Z53M1xlzzATGxFVN3AKFghOgwziQbS/5ag+yMcTrUGa7JWOqAxcnTq6\n06syPSeNzX78Y4ZvzTEWEhvaQbRicERCOb0MbUBVUlBvpyswlEHbBJMQ8/IPL82c\nuPtMFUwBl0zosxkR5smQdr7I/pe/4yB7b/pR0ki4AG9uK6DQTjXW9JLn8rPFEC2l\nl+ziTEA9Zg5J1QZMNNNp6lX92bOp6nN5+njxI4QyLvlsMoC4bbyf/vRItEfLvh8=\n=vSrP\n-----END PGP SIGNATURE-----\n", "payload": "tree f671f0e97d91f9392f90911ebcb62df8eea958ea\nparent b78f1a0a4d90276c7bd99bd0e5ac6959578be76a\nparent d1bce6070def3b4d5045c3fc4bb66904d50d0a40\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1617486459 +0000\ncommitter GitHub <noreply@github.com> 1617486459 +0000\n\nMerge #8318\n\n8318: Use shrink_to_fit to reduce DefMap sizes r=jonas-schievink a=jonas-schievink\n\nEspecially `block_def_map` can overallocate when there's not a lot of items in the `DefMap`. This saves around 10 MB during analysis-stats. Not too much, but a cheap win.\r\n\r\nbors r+\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a3dc04905b4c1a88ece9cc252bfbf9e321f29428", "html_url": "https://github.com/rust-lang/rust/commit/a3dc04905b4c1a88ece9cc252bfbf9e321f29428", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a3dc04905b4c1a88ece9cc252bfbf9e321f29428/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b78f1a0a4d90276c7bd99bd0e5ac6959578be76a", "url": "https://api.github.com/repos/rust-lang/rust/commits/b78f1a0a4d90276c7bd99bd0e5ac6959578be76a", "html_url": "https://github.com/rust-lang/rust/commit/b78f1a0a4d90276c7bd99bd0e5ac6959578be76a"}, {"sha": "d1bce6070def3b4d5045c3fc4bb66904d50d0a40", "url": "https://api.github.com/repos/rust-lang/rust/commits/d1bce6070def3b4d5045c3fc4bb66904d50d0a40", "html_url": "https://github.com/rust-lang/rust/commit/d1bce6070def3b4d5045c3fc4bb66904d50d0a40"}], "stats": {"total": 49, "additions": 48, "deletions": 1}, "files": [{"sha": "4ddfd9ee6c82a72c041d3a54b0c74126439dd6e8", "filename": "crates/hir_def/src/item_scope.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/a3dc04905b4c1a88ece9cc252bfbf9e321f29428/crates%2Fhir_def%2Fsrc%2Fitem_scope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a3dc04905b4c1a88ece9cc252bfbf9e321f29428/crates%2Fhir_def%2Fsrc%2Fitem_scope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fitem_scope.rs?ref=a3dc04905b4c1a88ece9cc252bfbf9e321f29428", "patch": "@@ -285,6 +285,17 @@ impl ItemScope {\n             buf.push('\\n');\n         }\n     }\n+\n+    pub(crate) fn shrink_to_fit(&mut self) {\n+        self.types.shrink_to_fit();\n+        self.values.shrink_to_fit();\n+        self.macros.shrink_to_fit();\n+        self.unresolved.shrink_to_fit();\n+        self.defs.shrink_to_fit();\n+        self.impls.shrink_to_fit();\n+        self.unnamed_trait_imports.shrink_to_fit();\n+        self.legacy_macros.shrink_to_fit();\n+    }\n }\n \n impl PerNs {"}, {"sha": "6a09ad420b4de432c36ea56ac75143ad3b7a1af2", "filename": "crates/hir_def/src/nameres.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/a3dc04905b4c1a88ece9cc252bfbf9e321f29428/crates%2Fhir_def%2Fsrc%2Fnameres.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a3dc04905b4c1a88ece9cc252bfbf9e321f29428/crates%2Fhir_def%2Fsrc%2Fnameres.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fnameres.rs?ref=a3dc04905b4c1a88ece9cc252bfbf9e321f29428", "patch": "@@ -409,6 +409,17 @@ impl DefMap {\n             }\n         }\n     }\n+\n+    fn shrink_to_fit(&mut self) {\n+        self.extern_prelude.shrink_to_fit();\n+        self.exported_proc_macros.shrink_to_fit();\n+        self.diagnostics.shrink_to_fit();\n+        self.modules.shrink_to_fit();\n+        for (_, module) in self.modules.iter_mut() {\n+            module.children.shrink_to_fit();\n+            module.scope.shrink_to_fit();\n+        }\n+    }\n }\n \n impl ModuleData {"}, {"sha": "4ddc791ce949abbb9ac9aac166958fddac30a3fd", "filename": "crates/hir_def/src/nameres/collector.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a3dc04905b4c1a88ece9cc252bfbf9e321f29428/crates%2Fhir_def%2Fsrc%2Fnameres%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a3dc04905b4c1a88ece9cc252bfbf9e321f29428/crates%2Fhir_def%2Fsrc%2Fnameres%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fnameres%2Fcollector.rs?ref=a3dc04905b4c1a88ece9cc252bfbf9e321f29428", "patch": "@@ -109,7 +109,9 @@ pub(super) fn collect_defs(\n         }\n     }\n     collector.collect();\n-    collector.finish()\n+    let mut def_map = collector.finish();\n+    def_map.shrink_to_fit();\n+    def_map\n }\n \n #[derive(Copy, Clone, Debug, Eq, PartialEq)]"}, {"sha": "bce15c8679fd96d12c3fe37fc1fd9a90e3f4b721", "filename": "lib/arena/src/lib.rs", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/a3dc04905b4c1a88ece9cc252bfbf9e321f29428/lib%2Farena%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a3dc04905b4c1a88ece9cc252bfbf9e321f29428/lib%2Farena%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/lib%2Farena%2Fsrc%2Flib.rs?ref=a3dc04905b4c1a88ece9cc252bfbf9e321f29428", "patch": "@@ -194,6 +194,29 @@ impl<T> Arena<T> {\n         self.data.iter().enumerate().map(|(idx, value)| (Idx::from_raw(RawIdx(idx as u32)), value))\n     }\n \n+    /// Returns an iterator over the arena\u2019s mutable elements.\n+    ///\n+    /// ```\n+    /// let mut arena = la_arena::Arena::new();\n+    /// let idx1 = arena.alloc(20);\n+    ///\n+    /// assert_eq!(arena[idx1], 20);\n+    ///\n+    /// let mut iterator = arena.iter_mut();\n+    /// *iterator.next().unwrap().1 = 10;\n+    /// drop(iterator);\n+    ///\n+    /// assert_eq!(arena[idx1], 10);\n+    /// ```\n+    pub fn iter_mut(\n+        &mut self,\n+    ) -> impl Iterator<Item = (Idx<T>, &mut T)> + ExactSizeIterator + DoubleEndedIterator {\n+        self.data\n+            .iter_mut()\n+            .enumerate()\n+            .map(|(idx, value)| (Idx::from_raw(RawIdx(idx as u32)), value))\n+    }\n+\n     /// Reallocates the arena to make it take up as little space as possible.\n     pub fn shrink_to_fit(&mut self) {\n         self.data.shrink_to_fit();"}]}