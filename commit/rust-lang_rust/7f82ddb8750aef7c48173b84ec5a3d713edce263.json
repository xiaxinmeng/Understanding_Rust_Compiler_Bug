{"sha": "7f82ddb8750aef7c48173b84ec5a3d713edce263", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdmODJkZGI4NzUwYWVmN2M0ODE3M2I4NGVjNWEzZDcxM2VkY2UyNjM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-03-22T09:37:50Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-03-22T09:37:50Z"}, "message": "Auto merge of #82680 - jturner314:div_euclid-docs, r=JohnTitor\n\nFix inequality in docs for div_euclid\n\nThis commit fixes the statement of the inequality that the Euclidean remainder satisfies. (The remainder is guaranteed to be less than abs(rhs), not rhs.) It also rewords the documentation to make it a little easier to read.\n\n(You might wonder why I've written `abs(rhs)` instead of `rhs.abs()`. Two reasons: first, the `rem_euclid` docs use `abs(rhs)` instead of `rhs.abs()`, and second, the absolute value here is the mathematical absolute value, not the the `.abs()` operation which may overflow.)", "tree": {"sha": "5f0173ae93a1bafe489cfd306c9f3ebf3bf81e06", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5f0173ae93a1bafe489cfd306c9f3ebf3bf81e06"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7f82ddb8750aef7c48173b84ec5a3d713edce263", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7f82ddb8750aef7c48173b84ec5a3d713edce263", "html_url": "https://github.com/rust-lang/rust/commit/7f82ddb8750aef7c48173b84ec5a3d713edce263", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7f82ddb8750aef7c48173b84ec5a3d713edce263/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2b8fbe6b0b6db7960828bd2c9a50e52c9a5d0aef", "url": "https://api.github.com/repos/rust-lang/rust/commits/2b8fbe6b0b6db7960828bd2c9a50e52c9a5d0aef", "html_url": "https://github.com/rust-lang/rust/commit/2b8fbe6b0b6db7960828bd2c9a50e52c9a5d0aef"}, {"sha": "77c0a48b7e19f1a8a8514ab48ffa7258a874ccb3", "url": "https://api.github.com/repos/rust-lang/rust/commits/77c0a48b7e19f1a8a8514ab48ffa7258a874ccb3", "html_url": "https://github.com/rust-lang/rust/commit/77c0a48b7e19f1a8a8514ab48ffa7258a874ccb3"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "79737b48d790d3c9fd7b383a8d25ba173a3c8656", "filename": "library/core/src/num/int_macros.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7f82ddb8750aef7c48173b84ec5a3d713edce263/library%2Fcore%2Fsrc%2Fnum%2Fint_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f82ddb8750aef7c48173b84ec5a3d713edce263/library%2Fcore%2Fsrc%2Fnum%2Fint_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Fint_macros.rs?ref=7f82ddb8750aef7c48173b84ec5a3d713edce263", "patch": "@@ -1589,11 +1589,11 @@ macro_rules! int_impl {\n \n         /// Calculates the quotient of Euclidean division of `self` by `rhs`.\n         ///\n-        /// This computes the integer `n` such that `self = n * rhs + self.rem_euclid(rhs)`,\n-        /// with `0 <= self.rem_euclid(rhs) < rhs`.\n+        /// This computes the integer `q` such that `self = q * rhs + r`, with\n+        /// `r = self.rem_euclid(rhs)` and `0 <= r < abs(rhs)`.\n         ///\n-        /// In other words, the result is `self / rhs` rounded to the integer `n`\n-        /// such that `self >= n * rhs`.\n+        /// In other words, the result is `self / rhs` rounded to the integer `q`\n+        /// such that `self >= q * rhs`.\n         /// If `self > 0`, this is equal to round towards zero (the default in Rust);\n         /// if `self < 0`, this is equal to round towards +/- infinity.\n         ///"}]}