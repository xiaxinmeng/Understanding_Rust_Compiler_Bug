{"sha": "902b3438c97067c4fddf4eb7e429b8fd82cfe5b7", "node_id": "C_kwDOAAsO6NoAKDkwMmIzNDM4Yzk3MDY3YzRmZGRmNGViN2U0MjliOGZkODJjZmU1Yjc", "commit": {"author": {"name": "Ariel Davis", "email": "ariel.z.davis@icloud.com", "date": "2023-05-06T08:04:41Z"}, "committer": {"name": "Ariel Davis", "email": "ariel.z.davis@icloud.com", "date": "2023-05-06T08:04:41Z"}, "message": "Use try_line_col", "tree": {"sha": "5fbc7a02847b147b08153deb41e5f4466d7e5bb5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5fbc7a02847b147b08153deb41e5f4466d7e5bb5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/902b3438c97067c4fddf4eb7e429b8fd82cfe5b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/902b3438c97067c4fddf4eb7e429b8fd82cfe5b7", "html_url": "https://github.com/rust-lang/rust/commit/902b3438c97067c4fddf4eb7e429b8fd82cfe5b7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/902b3438c97067c4fddf4eb7e429b8fd82cfe5b7/comments", "author": {"login": "azdavis", "id": 6496454, "node_id": "MDQ6VXNlcjY0OTY0NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6496454?v=4", "gravatar_id": "", "url": "https://api.github.com/users/azdavis", "html_url": "https://github.com/azdavis", "followers_url": "https://api.github.com/users/azdavis/followers", "following_url": "https://api.github.com/users/azdavis/following{/other_user}", "gists_url": "https://api.github.com/users/azdavis/gists{/gist_id}", "starred_url": "https://api.github.com/users/azdavis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/azdavis/subscriptions", "organizations_url": "https://api.github.com/users/azdavis/orgs", "repos_url": "https://api.github.com/users/azdavis/repos", "events_url": "https://api.github.com/users/azdavis/events{/privacy}", "received_events_url": "https://api.github.com/users/azdavis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "azdavis", "id": 6496454, "node_id": "MDQ6VXNlcjY0OTY0NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6496454?v=4", "gravatar_id": "", "url": "https://api.github.com/users/azdavis", "html_url": "https://github.com/azdavis", "followers_url": "https://api.github.com/users/azdavis/followers", "following_url": "https://api.github.com/users/azdavis/following{/other_user}", "gists_url": "https://api.github.com/users/azdavis/gists{/gist_id}", "starred_url": "https://api.github.com/users/azdavis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/azdavis/subscriptions", "organizations_url": "https://api.github.com/users/azdavis/orgs", "repos_url": "https://api.github.com/users/azdavis/repos", "events_url": "https://api.github.com/users/azdavis/events{/privacy}", "received_events_url": "https://api.github.com/users/azdavis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d683e220214f182ec788f86d3e005827a8a2648c", "url": "https://api.github.com/repos/rust-lang/rust/commits/d683e220214f182ec788f86d3e005827a8a2648c", "html_url": "https://github.com/rust-lang/rust/commit/d683e220214f182ec788f86d3e005827a8a2648c"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "c0e526a8e0fb0cf82bebadae67af996b9b40e097", "filename": "lib/line-index/src/lib.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/902b3438c97067c4fddf4eb7e429b8fd82cfe5b7/lib%2Fline-index%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/902b3438c97067c4fddf4eb7e429b8fd82cfe5b7/lib%2Fline-index%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/lib%2Fline-index%2Fsrc%2Flib.rs?ref=902b3438c97067c4fddf4eb7e429b8fd82cfe5b7", "patch": "@@ -141,10 +141,15 @@ impl LineIndex {\n     ///\n     /// If the offset is invalid.\n     pub fn line_col(&self, offset: TextSize) -> LineCol {\n-        let line = self.newlines.partition_point(|&it| it <= offset) - 1;\n-        let line_start_offset = self.newlines[line];\n+        self.try_line_col(offset).expect(\"invalid offset\")\n+    }\n+\n+    /// Transforms the `TextSize` into a `LineCol`, or returns `None` if the `offset` was invalid.\n+    pub fn try_line_col(&self, offset: TextSize) -> Option<LineCol> {\n+        let line = self.newlines.partition_point(|&it| it <= offset).checked_sub(1)?;\n+        let line_start_offset = self.newlines.get(line)?;\n         let col = offset - line_start_offset;\n-        LineCol { line: line as u32, col: col.into() }\n+        Some(LineCol { line: line as u32, col: col.into() })\n     }\n \n     /// Transforms the `LineCol` into a `TextSize`."}]}