{"sha": "f200061bd698aa7f5befa508e5bbb8bc4a2bdba1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYyMDAwNjFiZDY5OGFhN2Y1YmVmYTUwOGU1YmJiOGJjNGEyYmRiYTE=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2016-08-23T13:35:26Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2016-08-24T09:28:09Z"}, "message": "Add error code test checkup", "tree": {"sha": "de83d5d353c2949b025bef7596df44643f923c42", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/de83d5d353c2949b025bef7596df44643f923c42"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f200061bd698aa7f5befa508e5bbb8bc4a2bdba1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f200061bd698aa7f5befa508e5bbb8bc4a2bdba1", "html_url": "https://github.com/rust-lang/rust/commit/f200061bd698aa7f5befa508e5bbb8bc4a2bdba1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f200061bd698aa7f5befa508e5bbb8bc4a2bdba1/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3ddb46852242ab75d7610bceafc737378d636734", "url": "https://api.github.com/repos/rust-lang/rust/commits/3ddb46852242ab75d7610bceafc737378d636734", "html_url": "https://github.com/rust-lang/rust/commit/3ddb46852242ab75d7610bceafc737378d636734"}], "stats": {"total": 25, "additions": 12, "deletions": 13}, "files": [{"sha": "eb16812af9b0225fa5714dcca15928b114e859a1", "filename": "src/librustc_mir/diagnostics.rs", "status": "modified", "additions": 12, "deletions": 13, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/f200061bd698aa7f5befa508e5bbb8bc4a2bdba1/src%2Flibrustc_mir%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f200061bd698aa7f5befa508e5bbb8bc4a2bdba1/src%2Flibrustc_mir%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdiagnostics.rs?ref=f200061bd698aa7f5befa508e5bbb8bc4a2bdba1", "patch": "@@ -18,7 +18,7 @@ for the entire lifetime of a program. Creating a boxed value allocates memory on\n the heap at runtime, and therefore cannot be done at compile time. Erroneous\n code example:\n \n-```compile_fail\n+```compile_fail,E0010\n #![feature(box_syntax)]\n \n const CON : Box<i32> = box 0;\n@@ -30,7 +30,7 @@ Static and const variables can refer to other const variables. But a const\n variable cannot refer to a static variable. For example, `Y` cannot refer to\n `X` here:\n \n-```compile_fail\n+```compile_fail,E0013\n static X: i32 = 42;\n const Y: i32 = X;\n ```\n@@ -66,7 +66,7 @@ E0016: r##\"\n Blocks in constants may only contain items (such as constant, function\n definition, etc...) and a tail expression. Erroneous code example:\n \n-```compile_fail\n+```compile_fail,E0016\n const FOO: i32 = { let x = 0; x }; // 'x' isn't an item!\n ```\n \n@@ -81,7 +81,7 @@ E0017: r##\"\n References in statics and constants may only refer to immutable values.\n Erroneous code example:\n \n-```compile_fail\n+```compile_fail,E0017\n static X: i32 = 1;\n const C: i32 = 2;\n \n@@ -107,7 +107,7 @@ vary.\n \n For example, if you write:\n \n-```compile_fail\n+```compile_fail,E0018\n static MY_STATIC: u32 = 42;\n static MY_STATIC_ADDR: usize = &MY_STATIC as *const _ as usize;\n static WHAT: usize = (MY_STATIC_ADDR^17) + MY_STATIC_ADDR;\n@@ -152,7 +152,7 @@ impl Test {\n fn main() {\n     const FOO: Test = Test::V1;\n \n-    const A: i32 = FOO.test(); // You can't call Test::func() here !\n+    const A: i32 = FOO.test(); // You can't call Test::func() here!\n }\n ```\n \n@@ -214,14 +214,13 @@ static B: &'static u32 = &A; // ok!\n ```\n \"##,\n \n-\n E0395: r##\"\n The value assigned to a constant scalar must be known at compile time,\n which is not the case when comparing raw pointers.\n \n Erroneous code example:\n \n-```compile_fail\n+```compile_fail,E0395\n static FOO: i32 = 42;\n static BAR: i32 = 42;\n \n@@ -250,7 +249,7 @@ The value behind a raw pointer can't be determined at compile-time\n (or even link-time), which means it can't be used in a constant\n expression. Erroneous code example:\n \n-```compile_fail\n+```compile_fail,E0396\n const REG_ADDR: *const u8 = 0x5f3759df as *const u8;\n \n const VALUE: u8 = unsafe { *REG_ADDR };\n@@ -272,7 +271,7 @@ E0492: r##\"\n A borrow of a constant containing interior mutability was attempted. Erroneous\n code example:\n \n-```compile_fail\n+```compile_fail,E0492\n use std::sync::atomic::{AtomicUsize, ATOMIC_USIZE_INIT};\n \n const A: AtomicUsize = ATOMIC_USIZE_INIT;\n@@ -299,7 +298,7 @@ static B: &'static AtomicUsize = &A; // ok!\n \n You can also have this error while using a cell type:\n \n-```compile_fail\n+```compile_fail,E0492\n #![feature(const_fn)]\n \n use std::cell::Cell;\n@@ -351,7 +350,7 @@ E0493: r##\"\n A type with a destructor was assigned to an invalid type of variable. Erroneous\n code example:\n \n-```compile_fail\n+```compile_fail,E0493\n struct Foo {\n     a: u32\n }\n@@ -374,7 +373,7 @@ E0494: r##\"\n A reference of an interior static was assigned to another const/static.\n Erroneous code example:\n \n-```compile_fail\n+```compile_fail,E0494\n struct Foo {\n     a: u32\n }"}]}