{"sha": "1505c1239554fd8c9a5f7a6f4823c7384a0c29e3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE1MDVjMTIzOTU1NGZkOGM5YTVmN2E2ZjQ4MjNjNzM4NGEwYzI5ZTM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-07-01T10:17:39Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-07-01T10:17:39Z"}, "message": "Auto merge of #73863 - pietroalbini:revert-8bc3122311d, r=Mark-Simulacrum\n\nRevert \"ci: allow gating gha on everything but macOS\"\n\nThe macOS issue on GHA's side seems to be fixed, so this is not needed anymore.\n\nr? @Mark-Simulacrum", "tree": {"sha": "06e8041d46b845678915797fb36cd70f6f388a39", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/06e8041d46b845678915797fb36cd70f6f388a39"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1505c1239554fd8c9a5f7a6f4823c7384a0c29e3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1505c1239554fd8c9a5f7a6f4823c7384a0c29e3", "html_url": "https://github.com/rust-lang/rust/commit/1505c1239554fd8c9a5f7a6f4823c7384a0c29e3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1505c1239554fd8c9a5f7a6f4823c7384a0c29e3/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d462551a8600e57d8b6f87e71ea56868bc5da6cf", "url": "https://api.github.com/repos/rust-lang/rust/commits/d462551a8600e57d8b6f87e71ea56868bc5da6cf", "html_url": "https://github.com/rust-lang/rust/commit/d462551a8600e57d8b6f87e71ea56868bc5da6cf"}, {"sha": "c8f2dd0d3b41419113f42f55533849526b7c150c", "url": "https://api.github.com/repos/rust-lang/rust/commits/c8f2dd0d3b41419113f42f55533849526b7c150c", "html_url": "https://github.com/rust-lang/rust/commit/c8f2dd0d3b41419113f42f55533849526b7c150c"}], "stats": {"total": 239, "additions": 65, "deletions": 174}, "files": [{"sha": "5f9311635f6bfd0c856895b38e58a579b7c12f2b", "filename": ".github/workflows/ci.yml", "status": "modified", "additions": 29, "deletions": 129, "changes": 158, "blob_url": "https://github.com/rust-lang/rust/blob/1505c1239554fd8c9a5f7a6f4823c7384a0c29e3/.github%2Fworkflows%2Fci.yml", "raw_url": "https://github.com/rust-lang/rust/raw/1505c1239554fd8c9a5f7a6f4823c7384a0c29e3/.github%2Fworkflows%2Fci.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fworkflows%2Fci.yml?ref=1505c1239554fd8c9a5f7a6f4823c7384a0c29e3", "patch": "@@ -369,6 +369,35 @@ jobs:\n             env:\n               DEPLOY_TOOLSTATES_JSON: toolstates-linux.json\n             os: ubuntu-latest-xl\n+          - name: dist-x86_64-apple\n+            env:\n+              SCRIPT: \"./x.py dist\"\n+              RUST_CONFIGURE_ARGS: \"--target=aarch64-apple-ios,x86_64-apple-ios --enable-full-tools --enable-sanitizers --enable-profiler --set rust.jemalloc\"\n+              RUSTC_RETRY_LINKER_ON_SEGFAULT: 1\n+              MACOSX_DEPLOYMENT_TARGET: 10.7\n+              NO_LLVM_ASSERTIONS: 1\n+              NO_DEBUG_ASSERTIONS: 1\n+              DIST_REQUIRE_ALL_TOOLS: 1\n+            os: macos-latest\n+          - name: dist-x86_64-apple-alt\n+            env:\n+              SCRIPT: \"./x.py dist\"\n+              RUST_CONFIGURE_ARGS: \"--enable-extended --enable-profiler --set rust.jemalloc\"\n+              RUSTC_RETRY_LINKER_ON_SEGFAULT: 1\n+              MACOSX_DEPLOYMENT_TARGET: 10.7\n+              NO_LLVM_ASSERTIONS: 1\n+              NO_DEBUG_ASSERTIONS: 1\n+            os: macos-latest\n+          - name: x86_64-apple\n+            env:\n+              SCRIPT: \"./x.py test\"\n+              RUST_CONFIGURE_ARGS: \"--build=x86_64-apple-darwin --enable-sanitizers --enable-profiler --set rust.jemalloc\"\n+              RUSTC_RETRY_LINKER_ON_SEGFAULT: 1\n+              MACOSX_DEPLOYMENT_TARGET: 10.8\n+              MACOSX_STD_DEPLOYMENT_TARGET: 10.7\n+              NO_LLVM_ASSERTIONS: 1\n+              NO_DEBUG_ASSERTIONS: 1\n+            os: macos-latest\n           - name: x86_64-msvc-1\n             env:\n               RUST_CONFIGURE_ARGS: \"--build=x86_64-pc-windows-msvc --enable-profiler\"\n@@ -551,135 +580,6 @@ jobs:\n           AWS_ACCESS_KEY_ID: \"${{ env.ARTIFACTS_AWS_ACCESS_KEY_ID }}\"\n           AWS_SECRET_ACCESS_KEY: \"${{ secrets[format('AWS_SECRET_ACCESS_KEY_{0}', env.ARTIFACTS_AWS_ACCESS_KEY_ID)] }}\"\n         if: \"success() && !env.SKIP_JOB && (github.event_name == 'push' || env.DEPLOY == '1' || env.DEPLOY_ALT == '1')\"\n-  auto-fallible:\n-    name: auto-fallible\n-    env:\n-      CI_JOB_NAME: \"${{ matrix.name }}\"\n-      SCCACHE_BUCKET: rust-lang-gha-caches\n-      DEPLOY_BUCKET: rust-lang-gha\n-      TOOLSTATE_REPO: \"https://github.com/pietroalbini/rust-toolstate\"\n-      TOOLSTATE_ISSUES_API_URL: \"https://api.github.com/repos/pietroalbini/rust-toolstate/issues\"\n-      TOOLSTATE_PUBLISH: 1\n-      CACHES_AWS_ACCESS_KEY_ID: AKIA46X5W6CZOMUQATD5\n-      ARTIFACTS_AWS_ACCESS_KEY_ID: AKIA46X5W6CZH5AYXDVF\n-      CACHE_DOMAIN: ci-caches-gha.rust-lang.org\n-    if: \"github.event_name == 'push' && github.ref == 'refs/heads/auto' && github.repository == 'rust-lang-ci/rust'\"\n-    strategy:\n-      matrix:\n-        include:\n-          - name: dist-x86_64-apple\n-            env:\n-              SCRIPT: \"./x.py dist\"\n-              RUST_CONFIGURE_ARGS: \"--target=aarch64-apple-ios,x86_64-apple-ios --enable-full-tools --enable-sanitizers --enable-profiler --set rust.jemalloc\"\n-              RUSTC_RETRY_LINKER_ON_SEGFAULT: 1\n-              MACOSX_DEPLOYMENT_TARGET: 10.7\n-              NO_LLVM_ASSERTIONS: 1\n-              NO_DEBUG_ASSERTIONS: 1\n-              DIST_REQUIRE_ALL_TOOLS: 1\n-            os: macos-latest\n-          - name: dist-x86_64-apple-alt\n-            env:\n-              SCRIPT: \"./x.py dist\"\n-              RUST_CONFIGURE_ARGS: \"--enable-extended --enable-profiler --set rust.jemalloc\"\n-              RUSTC_RETRY_LINKER_ON_SEGFAULT: 1\n-              MACOSX_DEPLOYMENT_TARGET: 10.7\n-              NO_LLVM_ASSERTIONS: 1\n-              NO_DEBUG_ASSERTIONS: 1\n-            os: macos-latest\n-          - name: x86_64-apple\n-            env:\n-              SCRIPT: \"./x.py test\"\n-              RUST_CONFIGURE_ARGS: \"--build=x86_64-apple-darwin --enable-sanitizers --enable-profiler --set rust.jemalloc\"\n-              RUSTC_RETRY_LINKER_ON_SEGFAULT: 1\n-              MACOSX_DEPLOYMENT_TARGET: 10.8\n-              MACOSX_STD_DEPLOYMENT_TARGET: 10.7\n-              NO_LLVM_ASSERTIONS: 1\n-              NO_DEBUG_ASSERTIONS: 1\n-            os: macos-latest\n-    timeout-minutes: 600\n-    runs-on: \"${{ matrix.os }}\"\n-    steps:\n-      - name: disable git crlf conversion\n-        run: git config --global core.autocrlf false\n-        shell: bash\n-      - name: checkout the source code\n-        uses: actions/checkout@v1\n-        with:\n-          fetch-depth: 2\n-      - name: configure GitHub Actions to kill the build when outdated\n-        uses: rust-lang/simpleinfra/github-actions/cancel-outdated-builds@master\n-        with:\n-          github_token: \"${{ secrets.github_token }}\"\n-        if: \"success() && !env.SKIP_JOB && github.ref != 'refs/heads/try'\"\n-      - name: add extra environment variables\n-        run: src/ci/scripts/setup-environment.sh\n-        env:\n-          EXTRA_VARIABLES: \"${{ toJson(matrix.env) }}\"\n-        if: success() && !env.SKIP_JOB\n-      - name: decide whether to skip this job\n-        run: src/ci/scripts/should-skip-this.sh\n-        if: success() && !env.SKIP_JOB\n-      - name: collect CPU statistics\n-        run: src/ci/scripts/collect-cpu-stats.sh\n-        if: success() && !env.SKIP_JOB\n-      - name: show the current environment\n-        run: src/ci/scripts/dump-environment.sh\n-        if: success() && !env.SKIP_JOB\n-      - name: install awscli\n-        run: src/ci/scripts/install-awscli.sh\n-        if: success() && !env.SKIP_JOB\n-      - name: install sccache\n-        run: src/ci/scripts/install-sccache.sh\n-        if: success() && !env.SKIP_JOB\n-      - name: install clang\n-        run: src/ci/scripts/install-clang.sh\n-        if: success() && !env.SKIP_JOB\n-      - name: install WIX\n-        run: src/ci/scripts/install-wix.sh\n-        if: success() && !env.SKIP_JOB\n-      - name: install InnoSetup\n-        run: src/ci/scripts/install-innosetup.sh\n-        if: success() && !env.SKIP_JOB\n-      - name: ensure the build happens on a partition with enough space\n-        run: src/ci/scripts/symlink-build-dir.sh\n-        if: success() && !env.SKIP_JOB\n-      - name: disable git crlf conversion\n-        run: src/ci/scripts/disable-git-crlf-conversion.sh\n-        if: success() && !env.SKIP_JOB\n-      - name: install MSYS2\n-        run: src/ci/scripts/install-msys2.sh\n-        if: success() && !env.SKIP_JOB\n-      - name: install MinGW\n-        run: src/ci/scripts/install-mingw.sh\n-        if: success() && !env.SKIP_JOB\n-      - name: install ninja\n-        run: src/ci/scripts/install-ninja.sh\n-        if: success() && !env.SKIP_JOB\n-      - name: enable ipv6 on Docker\n-        run: src/ci/scripts/enable-docker-ipv6.sh\n-        if: success() && !env.SKIP_JOB\n-      - name: disable git crlf conversion\n-        run: src/ci/scripts/disable-git-crlf-conversion.sh\n-        if: success() && !env.SKIP_JOB\n-      - name: checkout submodules\n-        run: src/ci/scripts/checkout-submodules.sh\n-        if: success() && !env.SKIP_JOB\n-      - name: ensure line endings are correct\n-        run: src/ci/scripts/verify-line-endings.sh\n-        if: success() && !env.SKIP_JOB\n-      - name: run the build\n-        run: src/ci/scripts/run-build-from-ci.sh\n-        env:\n-          AWS_ACCESS_KEY_ID: \"${{ env.CACHES_AWS_ACCESS_KEY_ID }}\"\n-          AWS_SECRET_ACCESS_KEY: \"${{ secrets[format('AWS_SECRET_ACCESS_KEY_{0}', env.CACHES_AWS_ACCESS_KEY_ID)] }}\"\n-          TOOLSTATE_REPO_ACCESS_TOKEN: \"${{ secrets.TOOLSTATE_REPO_ACCESS_TOKEN }}\"\n-        if: success() && !env.SKIP_JOB\n-      - name: upload artifacts to S3\n-        run: src/ci/scripts/upload-artifacts.sh\n-        env:\n-          AWS_ACCESS_KEY_ID: \"${{ env.ARTIFACTS_AWS_ACCESS_KEY_ID }}\"\n-          AWS_SECRET_ACCESS_KEY: \"${{ secrets[format('AWS_SECRET_ACCESS_KEY_{0}', env.ARTIFACTS_AWS_ACCESS_KEY_ID)] }}\"\n-        if: \"success() && !env.SKIP_JOB && (github.event_name == 'push' || env.DEPLOY == '1' || env.DEPLOY_ALT == '1')\"\n   master:\n     name: master\n     runs-on: ubuntu-latest"}, {"sha": "daa2d55c043996c81e9806ede3644597a0c50e7d", "filename": "src/ci/github-actions/ci.yml", "status": "modified", "additions": 36, "deletions": 45, "changes": 81, "blob_url": "https://github.com/rust-lang/rust/blob/1505c1239554fd8c9a5f7a6f4823c7384a0c29e3/src%2Fci%2Fgithub-actions%2Fci.yml", "raw_url": "https://github.com/rust-lang/rust/raw/1505c1239554fd8c9a5f7a6f4823c7384a0c29e3/src%2Fci%2Fgithub-actions%2Fci.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fgithub-actions%2Fci.yml?ref=1505c1239554fd8c9a5f7a6f4823c7384a0c29e3", "patch": "@@ -414,6 +414,42 @@ jobs:\n               DEPLOY_TOOLSTATES_JSON: toolstates-linux.json\n             <<: *job-linux-xl\n \n+          ####################\n+          #  macOS Builders  #\n+          ####################\n+\n+          - name: dist-x86_64-apple\n+            env:\n+              SCRIPT: ./x.py dist\n+              RUST_CONFIGURE_ARGS: --target=aarch64-apple-ios,x86_64-apple-ios --enable-full-tools --enable-sanitizers --enable-profiler --set rust.jemalloc\n+              RUSTC_RETRY_LINKER_ON_SEGFAULT: 1\n+              MACOSX_DEPLOYMENT_TARGET: 10.7\n+              NO_LLVM_ASSERTIONS: 1\n+              NO_DEBUG_ASSERTIONS: 1\n+              DIST_REQUIRE_ALL_TOOLS: 1\n+            <<: *job-macos-xl\n+\n+          - name: dist-x86_64-apple-alt\n+            env:\n+              SCRIPT: ./x.py dist\n+              RUST_CONFIGURE_ARGS: --enable-extended --enable-profiler --set rust.jemalloc\n+              RUSTC_RETRY_LINKER_ON_SEGFAULT: 1\n+              MACOSX_DEPLOYMENT_TARGET: 10.7\n+              NO_LLVM_ASSERTIONS: 1\n+              NO_DEBUG_ASSERTIONS: 1\n+            <<: *job-macos-xl\n+\n+          - name: x86_64-apple\n+            env:\n+              SCRIPT: ./x.py test\n+              RUST_CONFIGURE_ARGS: --build=x86_64-apple-darwin --enable-sanitizers --enable-profiler --set rust.jemalloc\n+              RUSTC_RETRY_LINKER_ON_SEGFAULT: 1\n+              MACOSX_DEPLOYMENT_TARGET: 10.8\n+              MACOSX_STD_DEPLOYMENT_TARGET: 10.7\n+              NO_LLVM_ASSERTIONS: 1\n+              NO_DEBUG_ASSERTIONS: 1\n+            <<: *job-macos-xl\n+\n           ######################\n           #  Windows Builders  #\n           ######################\n@@ -559,51 +595,6 @@ jobs:\n               SCRIPT: python x.py dist\n             <<: *job-windows-xl\n \n-  auto-fallible:\n-    <<: *base-ci-job\n-    name: auto-fallible\n-    env:\n-      <<: [*shared-ci-variables, *prod-variables]\n-    if: github.event_name == 'push' && github.ref == 'refs/heads/auto' && github.repository == 'rust-lang-ci/rust'\n-    strategy:\n-      matrix:\n-        include:\n-          ####################\n-          #  macOS Builders  #\n-          ####################\n-\n-          - name: dist-x86_64-apple\n-            env:\n-              SCRIPT: ./x.py dist\n-              RUST_CONFIGURE_ARGS: --target=aarch64-apple-ios,x86_64-apple-ios --enable-full-tools --enable-sanitizers --enable-profiler --set rust.jemalloc\n-              RUSTC_RETRY_LINKER_ON_SEGFAULT: 1\n-              MACOSX_DEPLOYMENT_TARGET: 10.7\n-              NO_LLVM_ASSERTIONS: 1\n-              NO_DEBUG_ASSERTIONS: 1\n-              DIST_REQUIRE_ALL_TOOLS: 1\n-            <<: *job-macos-xl\n-\n-          - name: dist-x86_64-apple-alt\n-            env:\n-              SCRIPT: ./x.py dist\n-              RUST_CONFIGURE_ARGS: --enable-extended --enable-profiler --set rust.jemalloc\n-              RUSTC_RETRY_LINKER_ON_SEGFAULT: 1\n-              MACOSX_DEPLOYMENT_TARGET: 10.7\n-              NO_LLVM_ASSERTIONS: 1\n-              NO_DEBUG_ASSERTIONS: 1\n-            <<: *job-macos-xl\n-\n-          - name: x86_64-apple\n-            env:\n-              SCRIPT: ./x.py test\n-              RUST_CONFIGURE_ARGS: --build=x86_64-apple-darwin --enable-sanitizers --enable-profiler --set rust.jemalloc\n-              RUSTC_RETRY_LINKER_ON_SEGFAULT: 1\n-              MACOSX_DEPLOYMENT_TARGET: 10.8\n-              MACOSX_STD_DEPLOYMENT_TARGET: 10.7\n-              NO_LLVM_ASSERTIONS: 1\n-              NO_DEBUG_ASSERTIONS: 1\n-            <<: *job-macos-xl\n-\n   master:\n     name: master\n     runs-on: ubuntu-latest"}]}