{"sha": "99363fef657f399eca30b49df5f7b68d8b8a0ee8", "node_id": "C_kwDOAAsO6NoAKDk5MzYzZmVmNjU3ZjM5OWVjYTMwYjQ5ZGY1ZjdiNjhkOGI4YTBlZTg", "commit": {"author": {"name": "Caio", "email": "c410.f3r@gmail.com", "date": "2022-10-03T21:36:12Z"}, "committer": {"name": "Caio", "email": "c410.f3r@gmail.com", "date": "2022-10-03T21:36:12Z"}, "message": "Address comments", "tree": {"sha": "b3a7e6faea63b73c6e251c14f63b445d4c2ca062", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b3a7e6faea63b73c6e251c14f63b445d4c2ca062"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/99363fef657f399eca30b49df5f7b68d8b8a0ee8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/99363fef657f399eca30b49df5f7b68d8b8a0ee8", "html_url": "https://github.com/rust-lang/rust/commit/99363fef657f399eca30b49df5f7b68d8b8a0ee8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/99363fef657f399eca30b49df5f7b68d8b8a0ee8/comments", "author": {"login": "c410-f3r", "id": 17877264, "node_id": "MDQ6VXNlcjE3ODc3MjY0", "avatar_url": "https://avatars.githubusercontent.com/u/17877264?v=4", "gravatar_id": "", "url": "https://api.github.com/users/c410-f3r", "html_url": "https://github.com/c410-f3r", "followers_url": "https://api.github.com/users/c410-f3r/followers", "following_url": "https://api.github.com/users/c410-f3r/following{/other_user}", "gists_url": "https://api.github.com/users/c410-f3r/gists{/gist_id}", "starred_url": "https://api.github.com/users/c410-f3r/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/c410-f3r/subscriptions", "organizations_url": "https://api.github.com/users/c410-f3r/orgs", "repos_url": "https://api.github.com/users/c410-f3r/repos", "events_url": "https://api.github.com/users/c410-f3r/events{/privacy}", "received_events_url": "https://api.github.com/users/c410-f3r/received_events", "type": "User", "site_admin": false}, "committer": {"login": "c410-f3r", "id": 17877264, "node_id": "MDQ6VXNlcjE3ODc3MjY0", "avatar_url": "https://avatars.githubusercontent.com/u/17877264?v=4", "gravatar_id": "", "url": "https://api.github.com/users/c410-f3r", "html_url": "https://github.com/c410-f3r", "followers_url": "https://api.github.com/users/c410-f3r/followers", "following_url": "https://api.github.com/users/c410-f3r/following{/other_user}", "gists_url": "https://api.github.com/users/c410-f3r/gists{/gist_id}", "starred_url": "https://api.github.com/users/c410-f3r/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/c410-f3r/subscriptions", "organizations_url": "https://api.github.com/users/c410-f3r/orgs", "repos_url": "https://api.github.com/users/c410-f3r/repos", "events_url": "https://api.github.com/users/c410-f3r/events{/privacy}", "received_events_url": "https://api.github.com/users/c410-f3r/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4876882b29a1535779593d321fcb886a0c26c594", "url": "https://api.github.com/repos/rust-lang/rust/commits/4876882b29a1535779593d321fcb886a0c26c594", "html_url": "https://github.com/rust-lang/rust/commit/4876882b29a1535779593d321fcb886a0c26c594"}], "stats": {"total": 48, "additions": 32, "deletions": 16}, "files": [{"sha": "fc2a828bfc038f7841a39485e79a0fd9cd4ed312", "filename": "clippy_lints/src/operators/arithmetic_side_effects.rs", "status": "modified", "additions": 11, "deletions": 13, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/99363fef657f399eca30b49df5f7b68d8b8a0ee8/clippy_lints%2Fsrc%2Foperators%2Farithmetic_side_effects.rs", "raw_url": "https://github.com/rust-lang/rust/raw/99363fef657f399eca30b49df5f7b68d8b8a0ee8/clippy_lints%2Fsrc%2Foperators%2Farithmetic_side_effects.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Foperators%2Farithmetic_side_effects.rs?ref=99363fef657f399eca30b49df5f7b68d8b8a0ee8", "patch": "@@ -9,6 +9,7 @@ use rustc_ast as ast;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_hir as hir;\n use rustc_lint::{LateContext, LateLintPass};\n+use rustc_middle::ty::Ty;\n use rustc_session::impl_lint_pass;\n use rustc_span::source_map::{Span, Spanned};\n \n@@ -67,20 +68,14 @@ impl ArithmeticSideEffects {\n     }\n \n     /// Checks if the given `expr` has any of the inner `allowed` elements.\n-    fn is_allowed_ty(&self, cx: &LateContext<'_>, expr: &hir::Expr<'_>) -> bool {\n-        self.allowed.contains(\n-            cx.typeck_results()\n-                .expr_ty(expr)\n-                .to_string()\n-                .split('<')\n-                .next()\n-                .unwrap_or_default(),\n-        )\n+    fn is_allowed_ty(&self, ty: Ty<'_>) -> bool {\n+        self.allowed\n+            .contains(ty.to_string().split('<').next().unwrap_or_default())\n     }\n \n     // For example, 8i32 or &i64::MAX.\n-    fn is_integral<'expr, 'tcx>(cx: &LateContext<'tcx>, expr: &'expr hir::Expr<'tcx>) -> bool {\n-        cx.typeck_results().expr_ty(expr).peel_refs().is_integral()\n+    fn is_integral(ty: Ty<'_>) -> bool {\n+        ty.peel_refs().is_integral()\n     }\n \n     // Common entry-point to avoid code duplication.\n@@ -129,10 +124,13 @@ impl ArithmeticSideEffects {\n         ) {\n             return;\n         };\n-        if self.is_allowed_ty(cx, lhs) && self.is_allowed_ty(cx, rhs) {\n+        let lhs_ty = cx.typeck_results().expr_ty(lhs);\n+        let rhs_ty = cx.typeck_results().expr_ty(rhs);\n+        let lhs_and_rhs_have_the_same_ty = lhs_ty == rhs_ty;\n+        if lhs_and_rhs_have_the_same_ty && self.is_allowed_ty(lhs_ty) && self.is_allowed_ty(rhs_ty) {\n             return;\n         }\n-        let has_valid_op = if Self::is_integral(cx, lhs) && Self::is_integral(cx, rhs) {\n+        let has_valid_op = if Self::is_integral(lhs_ty) && Self::is_integral(rhs_ty) {\n             match (Self::literal_integer(lhs), Self::literal_integer(rhs)) {\n                 (None, None) => false,\n                 (None, Some(local_expr)) => Self::has_valid_op(op, local_expr),"}, {"sha": "8cabd05c2f98a16fe0deaebff6949c1200a4fd5b", "filename": "tests/ui/arithmetic_side_effects.stderr", "status": "modified", "additions": 21, "deletions": 3, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/99363fef657f399eca30b49df5f7b68d8b8a0ee8/tests%2Fui%2Farithmetic_side_effects.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/99363fef657f399eca30b49df5f7b68d8b8a0ee8/tests%2Fui%2Farithmetic_side_effects.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Farithmetic_side_effects.stderr?ref=99363fef657f399eca30b49df5f7b68d8b8a0ee8", "patch": "@@ -1,10 +1,28 @@\n+error: arithmetic operation that can potentially result in unexpected side-effects\n+  --> $DIR/arithmetic_side_effects.rs:78:13\n+   |\n+LL |     let _ = String::new() + \"\";\n+   |             ^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: `-D clippy::arithmetic-side-effects` implied by `-D warnings`\n+\n+error: arithmetic operation that can potentially result in unexpected side-effects\n+  --> $DIR/arithmetic_side_effects.rs:86:27\n+   |\n+LL |     let inferred_string = string + \"\";\n+   |                           ^^^^^^^^^^^\n+\n+error: arithmetic operation that can potentially result in unexpected side-effects\n+  --> $DIR/arithmetic_side_effects.rs:90:13\n+   |\n+LL |     let _ = inferred_string + \"\";\n+   |             ^^^^^^^^^^^^^^^^^^^^\n+\n error: arithmetic operation that can potentially result in unexpected side-effects\n   --> $DIR/arithmetic_side_effects.rs:162:5\n    |\n LL |     _n += 1;\n    |     ^^^^^^^\n-   |\n-   = note: `-D clippy::arithmetic-side-effects` implied by `-D warnings`\n \n error: arithmetic operation that can potentially result in unexpected side-effects\n   --> $DIR/arithmetic_side_effects.rs:163:5\n@@ -312,5 +330,5 @@ error: arithmetic operation that can potentially result in unexpected side-effec\n LL |     _n = -&_n;\n    |          ^^^^\n \n-error: aborting due to 52 previous errors\n+error: aborting due to 55 previous errors\n "}]}