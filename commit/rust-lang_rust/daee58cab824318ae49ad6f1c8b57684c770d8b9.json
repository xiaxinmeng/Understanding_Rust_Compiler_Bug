{"sha": "daee58cab824318ae49ad6f1c8b57684c770d8b9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRhZWU1OGNhYjgyNDMxOGFlNDlhZDZmMWM4YjU3Njg0Yzc3MGQ4Yjk=", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2021-06-16T04:31:11Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-06-16T04:31:11Z"}, "message": "Rollup merge of #86293 - GuillaumeGomez:filter-gui-tests-run, r=jsha\n\nAllow to run only a few GUI tests\n\nIt allows to specify only one (or more) GUI tests. Considering the tests are not super fast to run, this is very useful for development.\n\ncc `@Mark-Simulacrum`\nr? `@jsha`", "tree": {"sha": "8c97045e3c4cc759e518d549ae49fb6be15b5cf8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8c97045e3c4cc759e518d549ae49fb6be15b5cf8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/daee58cab824318ae49ad6f1c8b57684c770d8b9", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgyX6PCRBK7hj4Ov3rIwAAKhIIAJpLeXgea9gE5r29dzfHOnD0\nuB+zLolGW91wH/yv11gfZxOridHc5uf9WKmJmCbTin/rP5BzQrnSIW5D6oNve7sS\nXMIkQHRuk91aPJuc+djnMzd1J8/jwMAmEav7Zo4gig5zDR8gDHb4K7cvK86B7dTh\nmsq0OXaXd5c4mOJ5B2CUkmXdBBoTFb+t34C3zpTv6NLUMKLki3phr5Y0n2KsWZe6\nGUpmCjXvlABlqaOhhSecw0tiZICSem9Rz/8P86oRVBwGcqiNIl7Vcxkr0UuCgWJi\n99GeyaTf/ABZ482EITawY9arA6GU0yyI+iE/s6qx7KE0/9PYwMgYtRPguaCnQPo=\n=bvLO\n-----END PGP SIGNATURE-----\n", "payload": "tree 8c97045e3c4cc759e518d549ae49fb6be15b5cf8\nparent 5387b2444f874082b378ef74831ae69853dab0f0\nparent 6a66b79fb6b85f01aeaa1cd339160957a98c97a6\nauthor Yuki Okushi <jtitor@2k36.org> 1623817871 +0900\ncommitter GitHub <noreply@github.com> 1623817871 +0900\n\nRollup merge of #86293 - GuillaumeGomez:filter-gui-tests-run, r=jsha\n\nAllow to run only a few GUI tests\n\nIt allows to specify only one (or more) GUI tests. Considering the tests are not super fast to run, this is very useful for development.\n\ncc `@Mark-Simulacrum`\nr? `@jsha`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/daee58cab824318ae49ad6f1c8b57684c770d8b9", "html_url": "https://github.com/rust-lang/rust/commit/daee58cab824318ae49ad6f1c8b57684c770d8b9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/daee58cab824318ae49ad6f1c8b57684c770d8b9/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5387b2444f874082b378ef74831ae69853dab0f0", "url": "https://api.github.com/repos/rust-lang/rust/commits/5387b2444f874082b378ef74831ae69853dab0f0", "html_url": "https://github.com/rust-lang/rust/commit/5387b2444f874082b378ef74831ae69853dab0f0"}, {"sha": "6a66b79fb6b85f01aeaa1cd339160957a98c97a6", "url": "https://api.github.com/repos/rust-lang/rust/commits/6a66b79fb6b85f01aeaa1cd339160957a98c97a6", "html_url": "https://github.com/rust-lang/rust/commit/6a66b79fb6b85f01aeaa1cd339160957a98c97a6"}], "stats": {"total": 27, "additions": 23, "deletions": 4}, "files": [{"sha": "0b7a0e25df1ac10c06d87f99f0d637392094d88b", "filename": "src/bootstrap/test.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/daee58cab824318ae49ad6f1c8b57684c770d8b9/src%2Fbootstrap%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/daee58cab824318ae49ad6f1c8b57684c770d8b9/src%2Fbootstrap%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftest.rs?ref=daee58cab824318ae49ad6f1c8b57684c770d8b9", "patch": "@@ -805,7 +805,7 @@ impl Step for RustdocGUI {\n \n     fn should_run(run: ShouldRun<'_>) -> ShouldRun<'_> {\n         let builder = run.builder;\n-        let run = run.path(\"src/test/rustdoc-gui\");\n+        let run = run.suite_path(\"src/test/rustdoc-gui\");\n         run.default_condition(\n             builder.config.nodejs.is_some()\n                 && builder\n@@ -870,6 +870,13 @@ impl Step for RustdocGUI {\n             .arg(out_dir)\n             .arg(\"--tests-folder\")\n             .arg(builder.build.src.join(\"src/test/rustdoc-gui\"));\n+        for path in &builder.paths {\n+            if let Some(name) = path.file_name().and_then(|f| f.to_str()) {\n+                if name.ends_with(\".goml\") {\n+                    command.arg(\"--file\").arg(name);\n+                }\n+            }\n+        }\n         builder.run(&mut command);\n     }\n }"}, {"sha": "8c8d86d5e3817ee9c225fc891a48f1eacd3a3889", "filename": "src/tools/rustdoc-gui/tester.js", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/daee58cab824318ae49ad6f1c8b57684c770d8b9/src%2Ftools%2Frustdoc-gui%2Ftester.js", "raw_url": "https://github.com/rust-lang/rust/raw/daee58cab824318ae49ad6f1c8b57684c770d8b9/src%2Ftools%2Frustdoc-gui%2Ftester.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frustdoc-gui%2Ftester.js?ref=daee58cab824318ae49ad6f1c8b57684c770d8b9", "patch": "@@ -10,6 +10,7 @@ const {Options, runTest} = require('browser-ui-test');\n function showHelp() {\n     console.log(\"rustdoc-js options:\");\n     console.log(\"  --doc-folder [PATH]        : location of the generated doc folder\");\n+    console.log(\"  --file [PATH]              : file to run (can be repeated)\");\n     console.log(\"  --help                     : show this message then quit\");\n     console.log(\"  --tests-folder [PATH]      : location of the .GOML tests folder\");\n }\n@@ -18,6 +19,7 @@ function parseOptions(args) {\n     var opts = {\n         \"doc_folder\": \"\",\n         \"tests_folder\": \"\",\n+        \"files\": [],\n     };\n     var correspondances = {\n         \"--doc-folder\": \"doc_folder\",\n@@ -26,13 +28,18 @@ function parseOptions(args) {\n \n     for (var i = 0; i < args.length; ++i) {\n         if (args[i] === \"--doc-folder\"\n-            || args[i] === \"--tests-folder\") {\n+            || args[i] === \"--tests-folder\"\n+            || args[i] === \"--file\") {\n             i += 1;\n             if (i >= args.length) {\n                 console.log(\"Missing argument after `\" + args[i - 1] + \"` option.\");\n                 return null;\n             }\n-            opts[correspondances[args[i - 1]]] = args[i];\n+            if (args[i - 1] !== \"--file\") {\n+                opts[correspondances[args[i - 1]]] = args[i];\n+            } else {\n+                opts[\"files\"].push(args[i]);\n+            }\n         } else if (args[i] === \"--help\") {\n             showHelp();\n             process.exit(0);\n@@ -78,7 +85,12 @@ async function main(argv) {\n     }\n \n     let failed = false;\n-    let files = fs.readdirSync(opts[\"tests_folder\"]).filter(file => path.extname(file) == \".goml\");\n+    let files;\n+    if (opts[\"files\"].length === 0) {\n+        files = fs.readdirSync(opts[\"tests_folder\"]).filter(file => path.extname(file) == \".goml\");\n+    } else {\n+        files = opts[\"files\"].filter(file => path.extname(file) == \".goml\");\n+    }\n \n     files.sort();\n     for (var i = 0; i < files.length; ++i) {"}]}